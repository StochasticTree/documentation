[{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Step Function","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple step function.","code":"# Generate the data n <- 500 p_x <- 10 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,     general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect BART samples burnin.","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model additive random effect structure.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) noise_sd <- sd(f_XW) / snr y <- f_XW + rfx_term + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, rfx_group_ids_train = rfx_group_ids_train,      rfx_basis_train = rfx_basis_train, X_test = X_test, leaf_basis_test = leaf_basis_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6|X3−1|τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 \\lvert X_3 - 1 \\rvert\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.99"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-2-linear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.84"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.67"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-3-linear-outcome-model-homogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=3g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 3\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau1(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.88"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-4-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)={−1.1 ifX1>X20.9 ifX1≤X2τ(X)=11+exp(−X3)+X210π(X)=Φ(μ(X))Z∼Bernoulli(π(X))X1,X2,X3∼N(0,1)X4∼N(X2,1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= \\begin{cases} -1.1 & \\text{ } X_1 > X_2\\\\ 0.9 & \\text{ } X_1 \\leq X_2 \\end{cases}\\\\ \\tau(X) &= \\frac{1}{1+\\exp(-X_3)} + \\frac{X_2}{10}\\\\ \\pi(X) &= \\Phi\\left(\\mu(X)\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right)\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim N\\left(X_2,1\\right)\\\\ \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 1000 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n,x2,1) X <- cbind(x1,x2,x3,x4) p <- ncol(X) mu <- function(x) {-1*(x[,1]>(x[,2])) + 1*(x[,1]<(x[,2])) - 0.1} tau <- function(x) {1/(1 + exp(-x[,3])) + x[,2]/10} mu_x <- mu(X) tau_x <- tau(X) pi_x <- pnorm(mu_x) Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x sigma <- diff(range(mu_x + tau_x*pi))/8 y <- E_XZ + sigma*rnorm(n) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.99"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.93"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-5-nonlinear-outcome-model-heterogeneous-treatment-effect-with-additive-random-effects","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","title":"Causal Machine Learning in StochTree","text":"augment simulated example Demo 1 additive random effect structure show bcf() function can estimate incorporate effects forest sampling procedure.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw augmented “demo 1” DGP","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"simulate “warm-start” model (running root-MCMC BART random effects simply matter modifying code snippet setting num_gfr <- 0 num_mcmc > 0). Inspect BART samples initialized XBART warm-start      Examine test set interval coverage clear causal inference much difficult presence strong covariate-dependent prognostic effects strong group-level random effects. sense, proper prior calibration three μ\\mu, τ\\tau random effects models crucial.","code":"num_gfr <- 100 num_burnin <- 0 num_mcmc <- 500 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$rfx_preds_test), rfx_term_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Random effects terms\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ-rfx_term) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-6-nonlinear-outcome-model-heterogeneous-treatment-effect-using-different-features-in-the-prognostic-and-treatment-forests","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","title":"Causal Machine Learning in StochTree","text":", consider case might prefer use subset covariates treatment effect forest. might want ? Well, many cases plausible covariates (example age, income, etc…) influence outcome interest causal problem, moderate treatment effect. case, ’d need include variables prognostic forest deconfounding don’t necessarily need include treatment effect forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-5","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw modified “demo 1” DGP","code":"mu <- function(x) {1+g(x)+x[,1]*x[,3]-x[,2]+3*x[,3]} tau <- function(x) {1 - 2*x[,1] + 2*x[,2] + 1*x[,1]*x[,2]} n <- 500 snr <- 4 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) x6 <- rnorm(n) x7 <- rnorm(n) x8 <- rnorm(n) x9 <- rnorm(n) x10 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) p <- ncol(X) mu_x <- mu(X) tau_x <- tau(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.5 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect burned-samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.948 test_tau_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_tau_mean - tau_test)^2)) #> [1] 1.577776 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.010262"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96 test_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_mean - tau_test)^2)) #> [1] 1.282745 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 1.915804"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.952 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.646956 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 2.055564"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.968 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.309086 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.915243"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect-1","dir":"Articles","previous_headings":"Continuous Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+2X1−𝟙(X2<0)×4+𝟙(X2≥0)×4+3(|X3|−2π)τ(X)=1+2X4X1,X2,X3,X4,X5∼N(0,1)U∼Uniform(0,1)π(X)=μ(X)−12+4(U−12)Z∼𝒩(π(X),1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + 2 X_1 - \\mathbb{1}\\left(X_2 < 0\\right) \\times 4 + \\mathbb{1}\\left(X_2 \\geq 0\\right) \\times 4 + 3 \\left(\\lvert X_3 \\rvert - \\sqrt{\\frac{2}{\\pi}} \\right)\\\\ \\tau(X) &= 1 + 2 X_4\\\\ X_1,X_2,X_3,X_4,X_5 &\\sim N\\left(0,1\\right)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ \\pi(X) &= \\frac{\\mu(X) - 1}{2} + 4 \\left(U - \\frac{1}{2}\\right)\\\\ Z &\\sim \\mathcal{N}\\left(\\pi(X), 1\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-6","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- 1 + 2*x1 - 4*(x2 < 0) + 4*(x2 >= 0) + 3*(abs(x3) - sqrt(2/pi)) tau_x <- 1 + 2*x4 u <- runif(n) pi_x <- ((mu_x-1)/4) + 4*(u-0.5) Z <- pi_x + rnorm(n,0,1) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-5","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.94"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-4","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.91"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Custom Sampling Routines in StochTree","text":"functions bart() bcf() provide simple performant interfaces supervised learning / causal inference, stochtree also offers access many “low-level” data structures typically implemented C++. low-level interface designed performance even simplicity — rather intent provide “prototype” interface C++ code doesn’t require modifying C++. illustrate prototype interface might useful, consider classic BART algorithm:    INPUT: yy, XX, τ\\tau, ν\\nu, λ\\lambda, α\\alpha, β\\beta    OUTPUT: mm samples decision forest kk trees global variance parameter σ2\\sigma^2    Initialize σ2\\sigma^2 via default data-dependent calibration exercise    Initialize “forest 0” kk trees single root node, referring tree jj’s prediction vector f0,jf_{0,j}    Compute residual r=y−∑j=1kf0,jr = y - \\sum_{j=1}^k f_{0,j}    iiIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Initialize forest ii forest −1i-1       jjIN {1,…,k}\\left\\{1,\\dots,k\\right\\}:          Add predictions tree jj residual: r=r+fi,jr = r + f_{,j}          Update tree jj via Metropolis-Hastings rr XX data tree priors depending (τ\\tau, σ2\\sigma^2, α\\alpha, β\\beta)          Sample leaf node parameters tree jj via Gibbs (leaf node prior N(0,τ)N\\left(0,\\tau\\right))          Subtract (updated) predictions tree jj residual: r=r−fi,jr = r - f_{,j}       Sample σ2\\sigma^2 via Gibbs (prior IG(ν/2,νλ/2)IG(\\nu/2,\\nu\\lambda/2)) algorithm conceptually simple, much core computation carried low-level languages C C++ tree data structure. result, changes algorithm, supporting heteroskedasticity (Pratola et al. (2020)), categorical outcomes (Murray (2021)) causal effect estimation (Hahn, Murray, Carvalho (2020)) require modifying low-level code. prototype interface exposes core components loop R level, thus making possible interchange C++ computation steps like “update tree jj via Metropolis-Hastings” R computation custom variance model, user-specified additive mean model components, . begin, load stochtree package","code":"library(stochtree)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) y <- f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } # Forest predictions preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via “grow--root” (Hahn (2023))   Inspect BART samples obtained “warm-starting”","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-2-supervised-learning-with-additive-random-effects","dir":"Articles","previous_headings":"","what":"Demo 2: Supervised Learning with Additive Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example add simple “random effects” structure: every observation either group 1 group 2 random group intercept (simulated quite strong, underscoring need random effects modeling).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- c(-5, 5) rfx_basis <- rep(1, n) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rfx_coefs[group_ids] * rfx_basis y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1) xi_init <- matrix(c(1,1),1,2) sigma_alpha_init <- matrix(c(1),1,1) sigma_xi_init <- matrix(c(1),1,1) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-3-supervised-learning-with-additive-multi-component-random-effects","dir":"Articles","previous_headings":"","what":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example, case allowing random intercept regression coefficient (pre-specified basis) group (1 2).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1,0) xi_init <- matrix(c(1,0,1,0),2,2) sigma_alpha_init <- diag(1,2,2) sigma_xi_init <- diag(1,2,2) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-4-supervised-learning-with-additive-linear-model","dir":"Articles","previous_headings":"","what":"Demo 4: Supervised Learning with Additive Linear Model","title":"Custom Sampling Routines in StochTree","text":"Instead group random effects, show combine stochastic forest additive linear regression term. model corresponds broadly y=Wβ+f(X)+ϵf(X)∼BART(c,d)β∼𝒩(0,τ)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= W\\beta + f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}(c,d)\\\\ \\beta &\\sim \\mathcal{N}(0, \\tau)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}(,b) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) beta_W <- c(5) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) lm_term <- W %*% beta_W y <- lm_term + f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha_bart <- 0.9 beta_bart <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- F feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) beta_tau <- 20 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha_bart, beta_bart,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 20 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc beta_init <- 0 global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) beta_samples <- c(beta_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, sigma2, cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } for (i in (num_warmstart+1):num_samples) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } # Linear model predictions lm_preds <- (sapply(1:num_samples, function(x) W[,1]*beta_samples[x+1]))*y_std  # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Overall predictions preds <- forest_preds + lm_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std  # Regression parameter beta_samples <- beta_samples*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model    Inspect BART samples obtained “warm-starting” plus additive random effects model    Now inspect samples BART forest alone (without considering additive linear model predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(beta_samples[1:num_warmstart], ylab=\"beta\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(beta_samples[(num_warmstart+1):num_samples], ylab=\"beta\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-5-causal-inference","dir":"Articles","previous_headings":"","what":"Demo 5: Causal Inference","title":"Custom Sampling Routines in StochTree","text":"show implement Bayesian Causal Forest (BCF) model Hahn, Murray, Carvalho (2020) using stochtree’s prototype API, including demoing non-trivial sampling step done R level.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"background","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Background","title":"Custom Sampling Routines in StochTree","text":"supervised learning case previous demo conceptually simple, motivate causal effect estimation task additional notation. Let yy refer continuous outcome interest, ZZ refer binary treatment, XX set covariates may influence YY, ZZ, . XX exhaustive set covariates influence ZZ YY, can specific YY terms causal model (see example Pearl (2009)) Y=F(Z,X,ϵY)\\begin{equation*} \\begin{aligned} Y &= F(Z, X, \\epsilon_Y) \\end{aligned} \\end{equation*} ϵY\\epsilon_Y outcome specific random noise FF function generates YY (many cases, FF can thought inverse CDF conditional XX ZZ). “potential outcomes” (see Imbens Rubin (2015)) can recovered Y1=F(1,X,ϵY)Y^1 = F(1, X, \\epsilon_Y) Y0=F(0,X,ϵY)Y^0 = F(0, X, \\epsilon_Y). causal outcome model can decomposed “mean” “error” terms Y=μ(X)+Zτ(X)+[η(X)+Zδ(X)]μ(X)=𝔼ϵY[F(0,X,ϵY)]τ(X)=𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]η(X)=F(0,X,ϵY)−𝔼ϵY[F(0,X,ϵY)]δ(X)=F(1,X,ϵY)−F(0,X,ϵY)−𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]\\begin{equation*} \\begin{aligned} Y &= \\mu(X) + Z\\tau(X) + \\left[\\eta(X) + Z\\delta(X)\\right]\\\\ \\mu(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\tau(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right]\\\\ \\eta(X) &= F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\delta(X) &= F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right] \\end{aligned} \\end{equation*} τ(X)\\tau(X) precisely conditional average treatment effect (CATE) estimand. Unfortunately, functional form FF unavailable analysis, τ(X)\\tau(X) derived. flexible, regularized nonparametrics enter picture, aim estimate μ(X)\\mu(X) τ(X)\\tau(X) data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"Demo 5: Causal Inference > Background","what":"Bayesian Causal Forest (BCF)","title":"Custom Sampling Routines in StochTree","text":"BCF estimates μ(X)\\mu(X) τ(X)\\tau(X) using separate BART forests term. Furthermore, rather rely common implicit coding ZZ 0 control observations 1 treated observations, consider coding control observations parameter b0b_0 treated observations parameter b1b_1. Placing N(0,1/2)N(0,1/2) prior bzb_z, essentially redefines outcome model y=μ(X)+τ(X)f(Z)+ϵf(Z)=b0(1−Z)+b1Zϵ∼N(0,σ2)b0,b1∼N(0,1/2)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) f(Z) + \\epsilon\\\\ f(Z) &= b_0(1-Z) + b_1 Z\\\\ \\epsilon &\\sim N\\left(0, \\sigma^2\\right)\\\\ b_0, b_1 &\\sim N\\left(0, 1/2\\right) \\end{aligned} \\end{equation*} Updating bzb_z requires additional Gibbs step, derive . Conditioning sampled forests μ\\mu τ\\tau, essentially regressing y−μ(Z)y - \\mu(Z) [(1−Z)τ(X),Zτ(X)]\\left[(1-Z)\\tau(X), Z\\tau(X)\\right] closed form posterior b0∣y,X,μ,τ∼N(syτ,0sττ,0+2σ2,σ2sττ,0+2σ2)b1∣y,X,μ,τ∼N(syτ,1sττ,1+2σ2,σ2sττ,1+2σ2)\\begin{equation*} \\begin{aligned} b_0 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,0}}{s_{\\tau\\tau,0} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,0} + 2\\sigma^2}\\right)\\\\ b_1 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,1}}{s_{\\tau\\tau,1} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,1} + 2\\sigma^2}\\right) \\end{aligned} \\end{equation*} syτ,z=∑:Zi=z(yi−μ(Xi))τ(Xi)s_{y\\tau,z} = \\sum_{: Z_i = z} (y_i - \\mu(X_i))\\tau(X_i) sττ,z=∑:Zi=zτ(Xi)τ(Xi)s_{\\tau\\tau,z} = \\sum_{: Z_i = z} \\tau(X_i)\\tau(X_i).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"simulated causal DGP mirrors nonlinear, heterogeneous treatment effect DGP presented Hahn, Murray, Carvalho (2020).","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Prepare run sampler (now must specify initial values b0b_0 b1b_1, choose -1/2 1/2 instead 0 1). Initialize R-level access C++ classes needed sample model Run grow--root sampler “warm-start” BART, also updating adaptive coding parameter b0b_0 b1b_1 Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"# Mu forest alpha_mu <- 0.95 beta_mu <- 2.0 min_samples_leaf_mu <- 5 max_depth_mu <- 10 num_trees_mu <- 250 cutpoint_grid_size_mu = 100 tau_init_mu = 1/num_trees_mu leaf_prior_scale_mu = matrix(c(tau_init_mu), ncol = 1) a_leaf_mu <- 3. b_leaf_mu <- var(resid)/(num_trees_mu) leaf_regression_mu <- F sigma_leaf_mu <- var(resid)/(num_trees_mu) current_leaf_scale_mu <- as.matrix(sigma_leaf_mu)  # Tau forest alpha_tau <- 0.25 beta_tau <- 3.0 min_samples_leaf_tau <- 5 max_depth_tau <- 10 num_trees_tau <- 50 cutpoint_grid_size_tau = 100 a_leaf_tau <- 3. b_leaf_tau <- var(resid)/(2*num_trees_tau) leaf_regression_tau <- T sigma_leaf_tau <- var(resid)/(2*num_trees_tau) current_leaf_scale_tau <- as.matrix(sigma_leaf_tau)  # Common parameters nu <- 3 sigma2hat <- (sigma(lm(resid~X)))^2 quantile_cutoff <- 0.9 if (is.null(lambda)) {     lambda <- (sigma2hat*qgamma(1-quantile_cutoff,nu))/nu } sigma2 <- sigma2hat current_sigma2 <- sigma2 # Sampling composition num_gfr <- 20 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc  # Sigma^2 samples global_var_samples <- rep(0, num_samples)  # Adaptive coding parameter samples b_0_samples <- rep(0, num_samples) b_1_samples <- rep(0, num_samples) b_0 <- -0.5 b_1 <- 0.5 current_b_0 <- b_0 current_b_1 <- b_1 tau_basis <- (1-Z)*current_b_0 + Z*current_b_1 # Data X_mu <- cbind(X, pi_x) X_tau <- X feature_types <- c(0,0,0,1,1) feature_types_mu <- as.integer(c(feature_types,0)) feature_types_tau <- as.integer(feature_types) variable_weights_mu = rep(1/ncol(X_mu), ncol(X_mu)) variable_weights_tau = rep(1/ncol(X_tau), ncol(X_tau)) forest_dataset_mu <- createForestDataset(X_mu) forest_dataset_tau <- createForestDataset(X_tau, tau_basis) outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_mu <- createForestModel(     forest_dataset_mu, feature_types_mu, num_trees_mu, nrow(X_mu),      alpha_mu, beta_mu, min_samples_leaf_mu, max_depth_mu ) forest_model_tau <- createForestModel(     forest_dataset_tau, feature_types_tau, num_trees_tau, nrow(X_tau),      alpha_tau, beta_tau, min_samples_leaf_tau, max_depth_tau )  # Container of forest samples forest_samples_mu <- createForestSamples(num_trees_mu, 1, T) active_forest_mu <- createForest(num_trees_mu, 1, T) forest_samples_tau <- createForestSamples(num_trees_tau, 1, F) active_forest_tau <- createForest(num_trees_tau, 1, F)  # Initialize the leaves of each tree in the prognostic forest active_forest_mu$prepare_for_sampler(forest_dataset_mu, outcome, forest_model_mu, 0, mean(resid)) active_forest_mu$adjust_residual(forest_dataset_mu, outcome, forest_model_mu, F, F)  # Initialize the leaves of each tree in the treatment effect forest active_forest_tau$prepare_for_sampler(forest_dataset_tau, outcome, forest_model_tau, 1, 0.) active_forest_tau$adjust_residual(forest_dataset_tau, outcome, forest_model_tau, T, F) if (num_gfr > 0){     for (i in 1:num_gfr) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              feature_types_mu, 0, current_leaf_scale_mu, variable_weights_mu,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              feature_types_tau, 1, current_leaf_scale_tau, variable_weights_tau,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } if (num_burnin + num_mcmc > 0) {     for (i in (num_gfr+1):num_samples) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng, feature_types_mu,              0, current_leaf_scale_mu, variable_weights_mu, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_mu, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng, feature_types_tau,              1, current_leaf_scale_tau, variable_weights_tau, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1          # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } # Forest predictions mu_hat <- forest_samples_mu$predict(forest_dataset_mu)*y_std + y_bar tau_hat_raw <- forest_samples_tau$predict_raw(forest_dataset_tau) tau_hat <- t(t(tau_hat_raw) * (b_1_samples - b_0_samples))*y_std y_hat <- mu_hat + tau_hat * as.numeric(Z)  # Global error variance sigma2_samples <- global_var_samples*(y_std^2)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect XBART results    Inspect warm start BART results    Inspect “adaptive coding” parameters b0b_0 b1b_1.","code":"plot(sigma2_samples[1:num_gfr], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,1:num_gfr]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,1:num_gfr]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,1:num_gfr]) - tau_x)^2) #> [1] 0.3322747 plot(sigma2_samples[(num_gfr+1):num_samples], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,(num_gfr+1):num_samples]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,(num_gfr+1):num_samples]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,(num_gfr+1):num_samples]) - tau_x)^2) #> [1] 0.418832 plot(b_0_samples, col = \"blue\", ylab = \"Coding parameter draws\",       ylim = c(min(min(b_0_samples), min(b_1_samples)), max(max(b_0_samples), max(b_1_samples)))) points(b_1_samples, col = \"orange\") legend(\"topleft\", legend = c(\"b_0\", \"b_1\"), col = c(\"blue\", \"orange\"), pch = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Kernel Methods from Tree Ensembles in StochTree","text":"trained tree ensemble strong --sample performance admits natural motivation “distance” two samples: shared leaf membership. number leaves ensemble 1 ss (, tree 1 3 leaves, reserves numbers 1 - 3, turn tree 2 5 leaves, reserves numbers 4 - 8 label leaves, ). dataset nn observations, construct matrix WW follows:    Initialize WW matrix zeroes nn rows many columns leaves ensemble    Let s = 0    jjIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Let num_leaves number leaves tree jj       iiIN {1,…,n}\\left\\{1,\\dots,n\\right\\}:          Let k leaf tree jj maps observation ii          Set element Wi,k+s=1W_{,k+s} = 1       Let s = s + num_leaves sparse matrix WW matrix representation basis predictions ensemble (.e. integrating leaf parameters just analyzing leaf indices). ensemble mm trees, can determine proportion trees map observation leaf computing WWT/mW W^T / m. can form basis kernel function used Gaussian process regression, demonstrate . begin, load stochtree package tgp package serve point reference.","code":"library(stochtree) library(tgp) library(MASS) library(Matrix) library(mvtnorm)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-1-univariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Univariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"begin simulated example tgp package (Gramacy Taddy (2010)). data generating process (DGP) non-stationary single numeric covariate. define training set test set evaluate various approaches modeling sample outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data X_train <- seq(0,20,length=100) X_test <- seq(0,20,length=99) y_train <- (sin(pi*X_train/5) + 0.2*cos(4*pi*X_train/5)) * (X_train <= 9.6) lin_train <- X_train>9.6;  y_train[lin_train] <- -1 + X_train[lin_train]/10 y_train <- y_train + rnorm(length(y_train), sd=0.1) y_test <- (sin(pi*X_test/5) + 0.2*cos(4*pi*X_test/5)) * (X_test <= 9.6) lin_test <- X_test>9.6;  y_test[lin_test] <- -1 + X_test[lin_test]/10  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 0.0466081"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) colnames(X_train) <- colnames(X_test) <- \"x1\" mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 0.09381835"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-2-multivariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 2: Multivariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"proceed simulated “Friedman” dataset, implemented tgp.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data, add many \"noise variables\" n <- 100 friedman.df <- friedman.1.data(n=n) train_inds <- sort(sample(1:n, floor(0.8*n), replace = FALSE)) test_inds <- (1:n)[!((1:n) %in% train_inds)] X <- as.matrix(friedman.df)[,1:10] X <- cbind(X, matrix(runif(n*10), ncol = 10)) y <- as.matrix(friedman.df)[,12] + rnorm(n,0,1)*(sd(as.matrix(friedman.df)[,11])/2) X_train <- X[train_inds,] X_test <- X[test_inds,] y_train <- y[train_inds] y_test <- y[test_inds]  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 5.023593"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE use case BART kernel classical kriging perhaps unclear without empirical investigation, see later vignette kernel approach can beneficial causal inference applications.","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 5.771653"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean relatively simple covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 20 a_0 <- 1.5 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean complex covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_trees <- 20 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data (relatively simple) covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X2≥0 X2<0.25−2X2≥0.25 X2<0.52X2≥0.5 X2<0.756X2≥0.75 X2<1σ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data complex covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X4X2≥0 X2<0.25−2X4X2≥0.25 X2<0.52X4X2≥0.5 X2<0.756X4X2≥0.75 X2<1σ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6X_4 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2X_4 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2X_4 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6X_4 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6*X[,4]) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2*X[,4]) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2*X[,4]) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6*X[,4]) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-1-bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"","what":"Demo 1: Bayesian Causal Forest (BCF)","title":"Model Serialization in StochTree","text":"BCF models initially sampled constructed using bcf() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw modified version data generating process defined Hahn, Murray, Carvalho (2020). Sample BCF model.","code":"# Generate synthetic data n <- 1000 snr <- 2 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      mu_forest_params = mu_forest_params, tau_forest_params = tau_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BCF model disk.","code":"saveBCFModelToJsonFile(bcf_model, \"bcf.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BCF model disk. Check predictions align original model.","code":"bcf_model_reload <- createBCFModelFromJsonFile(\"bcf.json\") bcf_preds_reload <- predict(bcf_model_reload, X_train, Z_train, pi_train, rfx_group_ids_train, rfx_basis_train) plot(rowMeans(bcf_model$mu_hat_train), rowMeans(bcf_preds_reload$mu_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Prognostic forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$tau_hat_train), rowMeans(bcf_preds_reload$tau_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Treatment forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$y_hat_train), rowMeans(bcf_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Overall outcome\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-2-bart","dir":"Articles","previous_headings":"","what":"Demo 2: BART","title":"Model Serialization in StochTree","text":"BART models initially sampled constructed using bart() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw relatively straightforward heteroskedastic supervised learning DGP. Sample BART model.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 100,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BART model disk.","code":"saveBARTModelToJsonFile(bart_model, \"bart.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BART model disk. Check predictions align original model.","code":"bart_model_reload <- createBARTModelFromJsonFile(\"bart.json\") bart_preds_reload <- predict(bart_model_reload, X_train) plot(rowMeans(bart_model$y_hat_train), rowMeans(bart_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Mean Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bart_model$sigma_x_hat_train), rowMeans(bart_preds_reload$variance_forest_predictions),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Variance Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Mixing MCMC sampler perennial concern complex Bayesian models, BART exception. common way address concerns run multiple independent “chains” MCMC sampler, chain gets stuck different region posterior, combined samples attain better coverage full posterior. idea works classic “-root” MCMC sampler Chipman, George, McCulloch (2010), key insight Hahn (2023) XBART algorithm may used warm-start initialize multiple chains BART MCMC sampler. Operationally, two approaches implementation (setting num_gfr > 0 warm-start initialization desired), vignette demonstrate run multi-chain sampler sequentially parallel. begin, load stochtree necessary packages","code":"library(stochtree) library(foreach) library(doParallel) #> Loading required package: iterators #> Loading required package: parallel"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"data-simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Data Simulation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-sequentially","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains Sequentially","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Define high-level parameters, including number chains run number samples per chain. run 4 independent chains 5 warm-start iterations 100 MCMC iterations . Run sampler, storing resulting BART objects list Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare original ŷ\\hat{y} values","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 bart_models <- list() general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) for (i in 1:num_chains) {     bart_models[[i]] <- stochtree::bart(         X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, X_test = X_test,          leaf_basis_test = leaf_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,          general_params = general_params, mean_forest_params = mean_forest_params     ) } json_string_list <- list() for (i in 1:num_chains) {     json_string_list[[i]] <- saveBARTModelToJsonString(bart_models[[i]]) } combined_bart <- createBARTModelFromCombinedJsonString(json_string_list) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(bart_models[[i]]$y_hat_test),           rowMeans(yhat_combined[,inds_start:inds_end]),          xlab = \"original\", ylab = \"deserialized\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"use high-level parameters sequential demo. order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params   )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } #> Warning: executing %dopar% sequentially: no parallel backend registered stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"warmstarting-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Warmstarting Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"example, ran multiple parallel chains MCMC sampler starting “root” forest. Consider instead “warmstart” approach Hahn (2023), forests sampled using fast “grow--root” (GFR) algorithm several MCMC chains run using different GFR forests. use high-level parameters parallel demo. First, sample model using grow--root algorithm main R session several iterations (use forests see independent parallel chains moment). order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) xbart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = 0, num_mcmc = 0,      general_params = general_params, mean_forest_params = mean_forest_params ) xbart_model_string <- stochtree::saveBARTModelToJsonString(xbart_model) ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   bart_params <- list(sample_sigma_global = T, sample_sigma_leaf = T,                        num_trees_mean = num_trees, random_seed = random_seed)   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(       X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,        X_test = X_test, leaf_basis_test = leaf_basis_test,        num_gfr = 0, num_burnin = num_burnin, num_mcmc = num_mcmc,        general_params = general_params, mean_forest_params = mean_forest_params,        previous_model_json = xbart_model_string, previous_model_warmstart_sample_num = num_gfr - i + 1,    )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"“classic” BART model Chipman, George, McCulloch (2010) y=f(X)+ϵf(X)∼BART(α,β)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}\\left(\\alpha, \\beta\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}\\left(,b\\right) \\end{aligned} \\end{equation*} semiparametric, nonparametric tree ensemble f(X)f(X) homoskedastic error variance parameter σ2\\sigma^2. Note Chipman, George, McCulloch (2010), aa bb parameterized =ν2a = \\frac{\\nu}{2} b=νλ2b = \\frac{\\nu\\lambda}{2}.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"setting-priors-on-variance-parameters-in-stochtree","dir":"Articles","previous_headings":"","what":"Setting Priors on Variance Parameters in stochtree","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"default, stochtree employs Jeffreys’ prior σ2\\sigma^2σ2∝1σ2\\begin{equation*} \\begin{aligned} \\sigma^2 &\\propto \\frac{1}{\\sigma^2} \\end{aligned} \\end{equation*} corresponds improper prior =0a = 0 b=0b = 0. provide convenience functions users wishing set σ2\\sigma^2 prior Chipman, George, McCulloch (2010). case, ν\\nu set default 3 λ\\lambda calibrated follows: “overestimate,” σ̂2\\hat{\\sigma}^2, σ2\\sigma^2 obtained via simple linear regression yy XX λ\\lambda chosen ensure p(σ2<σ̂2)=qp(\\sigma^2 < \\hat{\\sigma}^2) = q value qq, typically set default value 0.9. done stochtree via calibrateInverseGammaErrorVariance function. Now run BART model variance parameterization Inspect --sample predictions model  Inspect posterior samples σ2\\sigma^2","code":"# Load library library(stochtree)  # Generate data n <- 500 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd)  # Test/train split test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]  # Calibrate the scale parameter for the variance term as in Chipman et al (2010) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y_train, X_train, nu = nu) general_params <- list(sigma2_global_shape = nu/2, sigma2_global_scale = (nu*lambda)/2) bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     num_gfr = 0, num_burnin = 1000, num_mcmc = 100,                     general_params = general_params) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(bart_model$sigma2_global_samples, ylab = \"sigma^2\", xlab = \"iteration\") abline(h = noise_sd^2, col = \"red\", lty = 3, lwd = 3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"demo-1-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Supervised Learning","title":"Deeper Dive on Sampled Forests in StochTree","text":"Generate sample data feature 10 “important” feature.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,10]) & (0.25 > X[,10])) * (-7.5) +      ((0.25 <= X[,10]) & (0.5 > X[,10])) * (-2.5) +      ((0.5 <= X[,10]) & (0.75 > X[,10])) * (2.5) +      ((0.75 <= X[,10]) & (1 > X[,10])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"sampling-and-analysis","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling and Analysis","title":"Deeper Dive on Sampled Forests in StochTree","text":"Run BART. Inspect MCMC samples   Check variable split count last GFR sample split counts appear relatively uniform across features, let’s dig deeper look individual trees, starting first tree last “grow--root” sample. tree single split “important” feature. Now, let’s look second tree. tree also splits important feature. see “later” trees splitting features, also note trees fitting outcome already residualized many “relevant splits” made trees 1 2. Now, let’s inspect first tree last GFR sample depth, following scikit-learn vignette","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 general_params <- list(keep_gfr = T) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params ) plot(bart_model$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) bart_model$mean_forests$get_forest_split_counts(10, p_x) #>  [1] 20 28 27 31 27 22 29 23 25 46 bart_model$mean_forests$get_aggregate_split_counts(p_x) #>  [1] 2711 2203 2157 2854 3186 2194 2445 2448 2273 4005 splits = bart_model$mean_forests$get_granular_split_counts(p_x) splits[10,1,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,2,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,20,] #>  [1] 0 0 0 1 0 0 0 0 0 0 splits[10,30,] #>  [1] 0 0 0 1 1 0 0 0 0 0 forest_num <- 9 tree_num <- 0 nodes <- sort(bart_model$mean_forests$nodes(forest_num, tree_num)) for (nid in nodes) {     if (bart_model$mean_forests$is_leaf_node(forest_num, tree_num, nid)) {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         leaf_values <- bart_model$mean_forests$node_leaf_values(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a leaf node with value=\",              format(leaf_values, digits = 3), \"\\n\", sep = \"\")     } else {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         left <- bart_model$mean_forests$left_child_node(forest_num, tree_num, nid)         feature <- bart_model$mean_forests$node_split_index(forest_num, tree_num, nid)         threshold <- bart_model$mean_forests$node_split_threshold(forest_num, tree_num, nid)         right <- bart_model$mean_forests$right_child_node(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a split node, which tells us to go to node \",              left, \" if X[:, \", feature, \"] <= \", format(threshold, digits = 3),              \" else to node \", right, \"\\n\", sep = \"\")     } } #> node=0 is a split node, which tells us to go to node 1 if X[:, 9] <= 0.496 else to node 2 #>  node=1 is a leaf node with value=-0.446 #>  node=2 is a leaf node with value=0.266"},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Drew Herren. Author, maintainer. Richard Hahn. Author. Jared Murray. Author. Carlos Carvalho. Author. Jingyu . Author. stochtree contributors. Copyright holder.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herren D, Hahn R, Murray J, Carvalho C, J (2025). stochtree: Stochastic tree ensembles (XBART BART) supervised learning causal inference. R package version 0.1.0, https://stochtree.ai.","code":"@Manual{,   title = {stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference},   author = {Drew Herren and Richard Hahn and Jared Murray and Carlos Carvalho and Jingyu He},   year = {2025},   note = {R package version 0.1.0},   url = {https://stochtree.ai}, }"},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"stochtree-r-package","dir":"","previous_headings":"","what":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"Software building stochastic tree ensembles (.e. BART, XBART) supervised learning causal inference.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"stochtree can installed CRAN via development version stochtree can installed github via","code":"install.package(\"stochtree\") remotes::install_github(\"StochasticTree/stochtree\", ref=\"r-dev\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — CppJson","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_ptr External pointer C++ nlohmann::json object num_forests Number forests nlohmann::json object forest_labels Names forest objects overall nlohmann::json object num_rfx Number random effects terms nlohman::json object rfx_container_labels Names rfx container objects overall nlohmann::json object rfx_mapper_labels Names rfx label mapper objects overall nlohmann::json object rfx_groupid_labels Names rfx group id objects overall nlohmann::json object","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"CppJson$new() CppJson$add_forest() CppJson$add_random_effects() CppJson$add_scalar() CppJson$add_integer() CppJson$add_boolean() CppJson$add_string() CppJson$add_vector() CppJson$add_integer_vector() CppJson$add_string_vector() CppJson$add_list() CppJson$add_string_list() CppJson$get_scalar() CppJson$get_integer() CppJson$get_boolean() CppJson$get_string() CppJson$get_vector() CppJson$get_integer_vector() CppJson$get_string_vector() CppJson$get_numeric_list() CppJson$get_string_list() CppJson$return_json_string() CppJson$save_file() CppJson$load_from_file() CppJson$load_from_string()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Create new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-forest-","dir":"Reference","previous_headings":"","what":"Method add_forest()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert forest container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_forest(forest_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"forest_samples ForestSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-random-effects-","dir":"Reference","previous_headings":"","what":"Method add_random_effects()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert random effects container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_random_effects(rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"rfx_samples RandomEffectSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-scalar-","dir":"Reference","previous_headings":"","what":"Method add_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_scalar(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-","dir":"Reference","previous_headings":"","what":"Method add_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Integer value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-boolean-","dir":"Reference","previous_headings":"","what":"Method add_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_boolean(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-","dir":"Reference","previous_headings":"","what":"Method add_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-vector-","dir":"Reference","previous_headings":"","what":"Method add_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-vector-","dir":"Reference","previous_headings":"","what":"Method add_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add array json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Character vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-list-","dir":"Reference","previous_headings":"","what":"Method add_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-list-","dir":"Reference","previous_headings":"","what":"Method add_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-scalar-","dir":"Reference","previous_headings":"","what":"Method get_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve scalar value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_scalar(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-","dir":"Reference","previous_headings":"","what":"Method get_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-boolean-","dir":"Reference","previous_headings":"","what":"Method get_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_boolean(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-","dir":"Reference","previous_headings":"","what":"Method get_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-vector-","dir":"Reference","previous_headings":"","what":"Method get_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-vector-","dir":"Reference","previous_headings":"","what":"Method get_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-vector-","dir":"Reference","previous_headings":"","what":"Method get_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve character vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-numeric-list-","dir":"Reference","previous_headings":"","what":"Method get_numeric_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list numeric vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_numeric_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-list-","dir":"Reference","previous_headings":"","what":"Method get_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list string vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-return-json-string-","dir":"Reference","previous_headings":"","what":"Method return_json_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert JSON object -memory string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$return_json_string()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-save-file-","dir":"Reference","previous_headings":"","what":"Method save_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Save json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$save_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-file-","dir":"Reference","previous_headings":"","what":"Method load_from_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-string-","dir":"Reference","previous_headings":"","what":"Method load_from_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_string(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Persists C++ random number generator throughout R session ensure reproducibility given random seed. seed provided, C++ random number generator initialized using std::random_device.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"rng_ptr External pointer C++ std::mt19937 class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"CppRNG$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Create new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"","code":"CppRNG$new(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores a single ensemble of decision trees (often treated as the ","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Wrapper around C++ tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_ptr External pointer C++ TreeEnsemble class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Forest$new() Forest$predict() Forest$predict_raw() Forest$set_root_leaves() Forest$prepare_for_sampler() Forest$adjust_residual() Forest$num_trees() Forest$leaf_dimension() Forest$is_constant_leaf() Forest$is_exponentiated() Forest$add_numeric_split_tree() Forest$get_tree_leaves() Forest$get_tree_split_counts() Forest$get_forest_split_counts() Forest$tree_max_depth() Forest$average_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Create new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"vector predictions many rows forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict \"raw\" leaf values (without multiplied basis) every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array vector (length number observations). case multivariate leaf regression, array matrix (number observations leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$set_root_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$adjust_residual(dataset, outcome, forest_model, requires_basis, add)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return number trees ensemble Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return output dimension trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return constant leaf status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return exponentiation status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$add_numeric_split_tree(   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_leaves(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable given tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_split_counts(tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_forest_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method tree_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum depth specific tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$tree_max_depth(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Tree index within forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a forest — ForestDataset","title":"Dataset used to sample a forest — ForestDataset","text":"dataset consists three matrices / vectors: covariates, bases, variance weights. basis vector variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a forest — ForestDataset","text":"data_ptr External pointer C++ ForestDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a forest — ForestDataset","text":"ForestDataset$new() ForestDataset$update_basis() ForestDataset$num_observations() ForestDataset$num_covariates() ForestDataset$num_basis() ForestDataset$has_basis() ForestDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a forest — ForestDataset","text":"Create new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-update-basis-","dir":"Reference","previous_headings":"","what":"Method update_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Update basis matrix dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$update_basis(basis)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"basis Updated matrix bases used define leaf regression","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number observations ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-covariates-","dir":"Reference","previous_headings":"","what":"Method num_covariates()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number covariates ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_covariates()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Covariate count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-basis-","dir":"Reference","previous_headings":"","what":"Method num_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number bases ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Basis count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines and samples a forest model — ForestModel","title":"Class that defines and samples a forest model — ForestModel","text":"Hosts C++ data structures needed sample ensemble decision trees, exposes functionality run forest sampler (using either MCMC grow--root algorithm).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines and samples a forest model — ForestModel","text":"tracker_ptr External pointer C++ ForestTracker class tree_prior_ptr External pointer C++ TreePrior class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines and samples a forest model — ForestModel","text":"ForestModel$new() ForestModel$sample_one_iteration() ForestModel$propagate_basis_update() ForestModel$propagate_residual_update() ForestModel$update_alpha() ForestModel$update_beta() ForestModel$update_min_samples_leaf() ForestModel$update_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines and samples a forest model — ForestModel","text":"Create new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$new(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth = -1 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree can reach","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-sample-one-iteration-","dir":"Reference","previous_headings":"","what":"Method sample_one_iteration()","title":"Class that defines and samples a forest model — ForestModel","text":"Run single iteration forest sampling algorithm (MCMC GFR)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$sample_one_iteration(   forest_dataset,   residual,   forest_samples,   active_forest,   rng,   feature_types,   leaf_model_int,   leaf_model_scale,   variable_weights,   a_forest,   b_forest,   global_scale,   cutpoint_grid_size = 500,   keep_forest = T,   gfr = T,   pre_initialized = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset Dataset used sample forest residual Outcome used sample forest forest_samples Container forest samples active_forest \"Active\" forest updated sampler iteration rng Wrapper around C++ random number generator feature_types Vector specifying type p covariates forest_dataset (0 = numeric, 1 = ordered categorical, 2 = unordered categorical) leaf_model_int Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression) leaf_model_scale Scale parameter used leaf node model (q x q matrix q dimensionality basis >1 leaf_model_int = 2) variable_weights Vector specifying sampling probability p covariates forest_dataset a_forest Shape parameter variance forest model (applicable) b_forest Scale parameter variance forest model (applicable) global_scale Global variance parameter cutpoint_grid_size (Optional) Number unique cutpoints consider (default: 500, currently used GFR = TRUE) keep_forest (Optional) Whether updated forest sample saved forest_samples. Default: T. gfr (Optional) Whether forest sampled using \"grow--root\" (GFR) algorithm. Default: T. pre_initialized (Optional) Whether leaves pre-initialized outside sampling loop (samples drawn). multi-forest implementations like BCF, true, though single-forest supervised learning implementation, can let C++ initialization. Default: F.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-basis-update-","dir":"Reference","previous_headings":"","what":"Method propagate_basis_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Propagates basis update (full/partial) residual iteratively () adding back previous prediction tree, (b) recomputing predictions tree (caching C++ side), (c) subtracting new predictions residual. useful cases basis (e.g. leaf regression) updated outside tree sampler (e.g. adaptive coding binary treatment BCF). basis updated, overall \"function\" represented tree model changed reflected residual next sampling loop run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_basis_update(dataset, outcome, active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions active_forest \"Active\" forest updated sampler iteration","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-residual-update-","dir":"Reference","previous_headings":"","what":"Method propagate_residual_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Update current state outcome (.e. partial residual) data subtracting current predictions tree. function run Outcome class's update_data method, overwrites partial residual entirely new stream outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_residual_update(residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"residual Outcome used sample forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Class that defines and samples a forest model — ForestModel","text":"Update alpha tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"alpha New value alpha used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Class that defines and samples a forest model — ForestModel","text":"Update beta tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"beta New value beta used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Class that defines and samples a forest model — ForestModel","text":"Update min_samples_leaf tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"min_samples_leaf New value min_samples_leaf used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Class that defines and samples a forest model — ForestModel","text":"Update max_depth tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"max_depth New value max_depth used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — ForestSamples","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_container_ptr External pointer C++ ForestContainer class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ForestSamples$new() ForestSamples$load_from_json() ForestSamples$append_from_json() ForestSamples$load_from_json_string() ForestSamples$append_from_json_string() ForestSamples$predict() ForestSamples$predict_raw() ForestSamples$predict_raw_single_forest() ForestSamples$predict_raw_single_tree() ForestSamples$set_root_leaves() ForestSamples$prepare_for_sampler() ForestSamples$adjust_residual() ForestSamples$save_json() ForestSamples$load_json() ForestSamples$num_samples() ForestSamples$num_trees() ForestSamples$leaf_dimension() ForestSamples$is_constant_leaf() ForestSamples$is_exponentiated() ForestSamples$add_forest_with_constant_leaves() ForestSamples$add_numeric_split_tree() ForestSamples$get_tree_leaves() ForestSamples$get_tree_split_counts() ForestSamples$get_forest_split_counts() ForestSamples$get_aggregate_split_counts() ForestSamples$get_granular_split_counts() ForestSamples$ensemble_tree_max_depth() ForestSamples$average_ensemble_max_depth() ForestSamples$average_max_depth() ForestSamples$num_forest_leaves() ForestSamples$sum_leaves_squared() ForestSamples$is_leaf_node() ForestSamples$is_numeric_split_node() ForestSamples$is_categorical_split_node() ForestSamples$parent_node() ForestSamples$left_child_node() ForestSamples$right_child_node() ForestSamples$node_depth() ForestSamples$node_split_index() ForestSamples$node_split_threshold() ForestSamples$node_split_categories() ForestSamples$node_leaf_values() ForestSamples$num_nodes() ForestSamples$num_leaves() ForestSamples$num_leaf_parents() ForestSamples$num_split_nodes() ForestSamples$nodes() ForestSamples$leaves() ForestSamples$delete_sample()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns samples ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array two-dimensional (number observations, number forest samples). case multivariate leaf regression, array three-dimension (number observations, leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-forest-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_forest()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_forest(forest_dataset, forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-tree-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific tree specific forest every observation forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_tree(forest_dataset, forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$set_root_leaves(forest_num, leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest sample within container. leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$adjust_residual(   dataset,   outcome,   forest_model,   requires_basis,   forest_num,   add )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction forest_num Index forest used update residuals add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-save-json-","dir":"Reference","previous_headings":"","what":"Method save_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Store trees metadata ForestDataset class json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$save_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name output json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-json-","dir":"Reference","previous_headings":"","what":"Method load_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Load trees metadata ensemble json file. Note trees metadata already present ForestDataset class overwritten.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name model input json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-samples-","dir":"Reference","previous_headings":"","what":"Method num_samples()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number samples ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sample count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number trees ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return output dimension trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return constant leaf status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return exponentiation status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-forest-with-constant-leaves-","dir":"Reference","previous_headings":"","what":"Method add_forest_with_constant_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add new -root ensemble container, leaves set value / vector provided","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_forest_with_constant_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"leaf_value Value (vector values) initialize root nodes tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_numeric_split_tree(   forest_num,   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree split tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_split_counts(forest_num, tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_forest_split_counts(forest_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-aggregate-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_aggregate_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, aggregated across ensembles trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_aggregate_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-granular-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_granular_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, reported separately ensemble tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_granular_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-ensemble-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method ensemble_tree_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum depth specific tree specific ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$ensemble_tree_max_depth(ensemble_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number tree_num Tree index within ensemble ensemble_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-ensemble-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_ensemble_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_ensemble_max_depth(ensemble_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-forest-leaves-","dir":"Reference","previous_headings":"","what":"Method num_forest_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_forest_leaves(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count leaves ensemble stored forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-sum-leaves-squared-","dir":"Reference","previous_headings":"","what":"Method sum_leaves_squared()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sum squared (raw) leaf values given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$sum_leaves_squared(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-leaf-node-","dir":"Reference","previous_headings":"","what":"Method is_leaf_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_leaf_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node leaf, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-numeric-split-node-","dir":"Reference","previous_headings":"","what":"Method is_numeric_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples numeric split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_numeric_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node numeric split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-categorical-split-node-","dir":"Reference","previous_headings":"","what":"Method is_categorical_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples categorical split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_categorical_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node categorical split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-parent-node-","dir":"Reference","previous_headings":"","what":"Method parent_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Parent node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$parent_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID parent node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-left-child-node-","dir":"Reference","previous_headings":"","what":"Method left_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Left child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$left_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID left child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-right-child-node-","dir":"Reference","previous_headings":"","what":"Method right_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Right child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$right_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID right child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-depth-","dir":"Reference","previous_headings":"","what":"Method node_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Depth given node given tree given forest ForestSamples object, 0 depth root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_depth(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-index-","dir":"Reference","previous_headings":"","what":"Method node_split_index()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Split index given node given tree given forest ForestSamples object. Returns -1 node leaf.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_index(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-threshold-","dir":"Reference","previous_headings":"","what":"Method node_split_threshold()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defines numeric split given node given tree given forest ForestSamples object. Returns Inf node leaf categorical split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_threshold(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-categories-","dir":"Reference","previous_headings":"","what":"Method node_split_categories()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array category indices define categorical split given node given tree given forest ForestSamples object. Returns c(Inf) node leaf numeric split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_categories(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Categories defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-leaf-values-","dir":"Reference","previous_headings":"","what":"Method node_leaf_values()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node value(s) given node given tree given forest ForestSamples object. Values stale node split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_leaf_values(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Vector (often univariate) leaf values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-nodes-","dir":"Reference","previous_headings":"","what":"Method num_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaves-","dir":"Reference","previous_headings":"","what":"Method num_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaves","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaf-parents-","dir":"Reference","previous_headings":"","what":"Method num_leaf_parents()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaf parents (split nodes two leaves children) given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaf_parents(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaf parents","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-split-nodes-","dir":"Reference","previous_headings":"","what":"Method num_split_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number split nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_split_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree split nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-nodes-","dir":"Reference","previous_headings":"","what":"Method nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array node indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaves-","dir":"Reference","previous_headings":"","what":"Method leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array leaf indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices leaf nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Modify ForestSamples object removing forest sample indexed `forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$delete_sample(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome / partial residual used to sample an additive model. — Outcome","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome class wrapper around vector (mutable) outcomes ML tasks (supervised learning, causal inference). additive tree ensemble sampled, outcome used sample specific model term \"partial residual\" consisting outcome minus predictions every model term (trees, group random effects, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"data_ptr External pointer C++ Outcome class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Outcome$new() Outcome$get_data() Outcome$add_vector() Outcome$subtract_vector() Outcome$update_data()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Create new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$new(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Extract raw data R underlying C++ object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$get_data()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"R vector containing (copy ) values Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data adding values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$add_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector added outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-subtract-vector-","dir":"Reference","previous_headings":"","what":"Method subtract_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data subtracting values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$subtract_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector subtracted outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-update-data-","dir":"Reference","previous_headings":"","what":"Method update_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data replacing element elements new_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$update_data(new_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new_vector Vector overwrite current data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps the ","title":"Class that wraps the ","text":"Coordinates various C++ random effects classes persists needed prediction / serialization","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps the ","text":"rfx_container_ptr External pointer C++ StochTree::RandomEffectsContainer class label_mapper_ptr External pointer C++ StochTree::LabelMapper class training_group_ids Unique vector group IDs training dataset","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps the ","text":"RandomEffectSamples$new() RandomEffectSamples$load_in_session() RandomEffectSamples$load_from_json() RandomEffectSamples$append_from_json() RandomEffectSamples$load_from_json_string() RandomEffectSamples$append_from_json_string() RandomEffectSamples$predict() RandomEffectSamples$extract_parameter_samples() RandomEffectSamples$delete_sample() RandomEffectSamples$extract_label_mapping()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps the ","text":"Create new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-in-session-","dir":"Reference","previous_headings":"","what":"Method load_in_session()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object \"-session\" R objects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_in_session(   num_components,   num_groups,   random_effects_tracker )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that wraps the ","text":"Predict random effects observation implied rfx_group_ids rfx_basis. random effects model \"intercept-\" rfx_basis vector ones size length(rfx_group_ids).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$predict(rfx_group_ids, rfx_basis = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"rfx_group_ids Indices random effects groups prediction set rfx_basis (Optional ) Basis used random effects prediction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"Matrix many rows observations provided many columns samples drawn model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-parameter-samples-","dir":"Reference","previous_headings":"","what":"Method extract_parameter_samples()","title":"Class that wraps the ","text":"Extract random effects parameters sampled. \"redundant parameterization\" Gelman et al (2008), includes four parameters: alpha (\"working parameter\" shared across every group), xi (\"group parameter\" sampled separately group), beta (product alpha xi, corresponds overall group-level random effects), sigma (group-independent prior variance component xi).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_parameter_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that wraps the ","text":"Modify RandomEffectsSamples object removing parameter samples index sample_num.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$delete_sample(sample_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"sample_num Index RFX sample removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-label-mapping-","dir":"Reference","previous_headings":"","what":"Method extract_label_mapping()","title":"Class that wraps the ","text":"Convert mapping group IDs random effect components indices C++ R native format","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_label_mapping()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List mapping group ID random effect components.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a random effects model — RandomEffectsDataset","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"dataset consists three matrices / vectors: group labels, bases, variance weights. Variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"data_ptr External pointer C++ RandomEffectsDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"RandomEffectsDataset$new() RandomEffectsDataset$num_observations() RandomEffectsDataset$has_group_labels() RandomEffectsDataset$has_basis() RandomEffectsDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Create new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$new(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Return number observations RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-group-labels-","dir":"Reference","previous_headings":"","what":"Method has_group_labels()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset group label indices","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_group_labels()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True group label vector loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"The core ","title":"The core ","text":"Stores current model state, prior parameters, procedures sampling conditional posterior parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The core ","text":"rfx_model_ptr External pointer C++ StochTree::RandomEffectsModel class num_groups Number groups random effects model num_components Number components (.e. dimension basis) random effects model","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The core ","text":"RandomEffectsModel$new() RandomEffectsModel$sample_random_effect() RandomEffectsModel$predict() RandomEffectsModel$set_working_parameter() RandomEffectsModel$set_group_parameters() RandomEffectsModel$set_working_parameter_cov() RandomEffectsModel$set_group_parameter_cov() RandomEffectsModel$set_variance_prior_shape() RandomEffectsModel$set_variance_prior_scale()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The core ","text":"Create new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$new(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-sample-random-effect-","dir":"Reference","previous_headings":"","what":"Method sample_random_effect()","title":"The core ","text":"Sample random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$sample_random_effect(   rfx_dataset,   residual,   rfx_tracker,   rfx_samples,   keep_sample,   global_variance,   rng )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset residual Object type Outcome rfx_tracker Object type RandomEffectsTracker rfx_samples Object type RandomEffectSamples keep_sample Whether sample retained rfx_samples. FALSE, state rfx_tracker updated, parameter values added sample container. Samples commonly discarded due burn-thinning. global_variance Scalar global variance parameter rng Object type CppRNG","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"The core ","text":"Predict (single sample ) random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$predict(rfx_dataset, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset rfx_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"Vector predictions size matching number observations rfx_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter()","title":"The core ","text":"Set value \"working parameter.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameters-","dir":"Reference","previous_headings":"","what":"Method set_group_parameters()","title":"The core ","text":"Set value \"group parameters.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameters(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter_cov()","title":"The core ","text":"Set value working parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_group_parameter_cov()","title":"The core ","text":"Set value group parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-shape-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_shape()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_shape(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-scale-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_scale()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_scale(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines a ","title":"Class that defines a ","text":"Stores mapping every observation group index, mapping group indices training sample observations available group, predictions observation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines a ","text":"rfx_tracker_ptr External pointer C++ StochTree::RandomEffectsTracker class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines a ","text":"RandomEffectsTracker$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines a ","text":"Create new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines a ","text":"","code":"RandomEffectsTracker$new(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines a ","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines a ","text":"new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the BART algorithm for supervised learning. — bart","title":"Run the BART algorithm for supervised learning. — bart","text":"Run BART algorithm supervised learning.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"bart(   X_train,   y_train,   leaf_basis_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   leaf_basis_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mean_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the BART algorithm for supervised learning. — bart","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). y_train Outcome modeled ensemble. leaf_basis_train (Optional) Bases used define regression model y ~ W leaf regression tree. default, BART assumes constant leaf node parameters, implicitly regressing constant basis ones (.e. y ~ 1). rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. leaf_basis_test (Optional) Test set bases used define \"sample\" evaluation data. test set optional, structure provided test set must match training set (.e. X_train leaf_basis_train provided, test set must consist X_test leaf_basis_test number columns). rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BART model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BART sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var(y_train), y_train possibly standardized outcome, set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mean_forest_params (Optional) list mean forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional mean model. Default: 200. num_trees = 0, conditional mean modeled using forest, function proceed num_trees > 0 variance forest. alpha Prior probability splitting tree depth 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, mean model. Default: 5. max_depth Maximum depth tree ensemble mean model. Default: 10. Can overridden -1 enforce depth limits trees. sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(leaf_basis_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. var_forest_leaf_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var(y_train))/num_trees, y_train possibly standardized outcome, set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the BART algorithm for supervised learning. — bart","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"Run Bayesian Causal Forest (BCF) algorithm regularized causal effect estimation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"bcf(   X_train,   Z_train,   y_train,   propensity_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   Z_test = NULL,   propensity_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mu_forest_params = list(),   tau_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). Z_train Vector (continuous binary) treatment assignments. y_train Outcome modeled ensemble. propensity_train (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. Z_test (Optional) Test set (continuous binary) treatment assignments. propensity_test (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BCF model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BCF sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var((y_train-mean(y_train))/sd(y_train)) set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). workaround wish provide custom weight propensity score include column X_train set propensity_covariate 'none' adjust keep_vars accordingly mu tau forests. propensity_covariate Whether include propensity score covariate either forests. Enter \"none\" neither, \"mu\" prognostic forest, \"tau\" treatment forest, \"\" forests. \"none\" propensity score provided, estimated (X_train, Z_train) using stochtree::bart(). Default: \"mu\". adaptive_coding Whether use \"adaptive coding\" scheme binary treatment variable coded manually (0,1) (-1,1) learned via parameters b_0 b_1 attach outcome model [b_0 (1-Z) + b_1 Z] tau(X). ignored Z binary. Default: TRUE. control_coding_init Initial value \"control\" group coding parameter. ignored Z binary. Default: -0.5. treated_coding_init Initial value \"treatment\" group coding parameter. ignored Z binary. Default: 0.5. rfx_prior_var Prior (diagonals ) covariance additive group-level random regression coefficients. Must vector length ncol(rfx_basis_train). Default: rep(1, ncol(rfx_basis_train)) random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mu_forest_params (Optional) list prognostic forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble prognostic forest. Default: 250. Must positive integer. alpha Prior probability splitting tree depth 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, prognostic forest. Default: 5. max_depth Maximum depth tree ensemble prognostic forest. Default: 10. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable prognostic forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. tau_forest_params (Optional) list treatment effect forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble treatment effect forest. Default: 50. Must positive integer. alpha Prior probability splitting tree depth 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.25. beta Exponent decreases split probabilities nodes depth > 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 3. min_samples_leaf Minimum allowable size leaf, terms training samples, treatment effect forest. Default: 5. max_depth Maximum depth tree ensemble treatment effect forest. Default: 5. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable treatment effect forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(Z_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. variance_forest_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var((y_train-mean(y_train))/sd(y_train)))/num_trees set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, X_test = X_test, Z_test = Z_test,                   propensity_test = pi_test) plot(rowMeans(bcf_model$mu_hat_test), mu_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(bcf_model$tau_hat_test), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Chipman, H., George, E., Hahn, R., McCulloch, R., Pratola, M. Sparapani, R. (2022). Bayesian Additive Regression Trees, Computational Approaches. Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri J.L. Teugels). https://doi.org/10.1002/9781118445112.stat08288","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"calibrateInverseGammaErrorVariance(   y,   X,   W = NULL,   nu = 3,   quant = 0.9,   standardize = TRUE )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"y Outcome modeled using BART, BCF another nonparametric ensemble method. X Covariates used partition trees ensemble series ensemble. W (Optional) Basis used define \"leaf regression\" model decision tree. \"classic\" BART model assumes constant leaf parameter, equivalent \"leaf regression\" basis ones, though necessary pass vector ones, BART function. Default: NULL. nu shape parameter global error variance's IG prior. scale parameter Sparapani et al (2021) parameterization defined nu*lambda lambda output function. Default: 3. quant (Optional) Quantile inverse gamma prior distribution represented linear-regression-based overestimate sigma^2. Default: 0.9. standardize (Optional) Whether outcome standardized ((y-mean(y))/sd(y)) calibration lambda. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Value lambda determines scale parameter global error variance prior (sigma^2 ~ IG(nu,nu*lambda))","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) y <- 10*X[,1] - 20*X[,2] + rnorm(n) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y, X, nu = nu) sigma2hat <- mean(resid(lm(y~X))^2) mean(var(y)/rgamma(100000, nu, rate = nu*lambda) < sigma2hat) #> [1] 0.90021"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf indices — computeForestLeafIndices","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"Compute return vector representation forest's leaf predictions every observation dataset. vector \"row-major\" format can easily re-represented CSR sparse matrix: elements organized first n elements correspond leaf predictions n observations dataset first tree ensemble, next n elements correspond predictions second tree . \"data\" element corresponds uniquely mapped column index corresponds single leaf single tree (.e. tree 1 3 leaves, column indices range 0 2, tree 2's leaf indices begin 3, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"computeForestLeafIndices(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"List vectors. vector size num_obs * num_trees, num_obs = nrow(covariates) num_trees number trees relevant forest model_object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafIndices(bart_model, X, \"mean\") #>          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>     [1,]    1    1    1    1    0    0    0    0    0     0 #>     [2,]    1    1    1    1    0    0    0    0    0     0 #>     [3,]    1    1    1    1    0    0    0    0    0     0 #>     [4,]    1    1    1    1    0    0    0    0    0     0 #>     [5,]    1    1    1    1    0    0    0    0    0     0 #>     [6,]    1    1    1    1    0    0    0    0    0     0 #>     [7,]    0    0    0    0    1    1    1    1    1     1 #>     [8,]    1    1    1    1    0    0    0    0    0     0 #>     [9,]    1    1    1    1    0    0    0    0    0     0 #>    [10,]    1    1    1    1    0    0    0    0    0     0 #>    [11,]    1    1    1    1    0    0    0    0    0     0 #>    [12,]    1    1    1    1    0    0    0    0    0     0 #>    [13,]    1    1    1    1    0    0    0    0    0     0 #>    [14,]    1    1    1    1    0    0    0    0    0     0 #>    [15,]    1    1    1    1    0    0    0    0    0     0 #>    [16,]    1    1    1    1    0    0    0    0    0     0 #>    [17,]    1    1    1    1    0    0    0    0    0     0 #>    [18,]    1    1    1    1    0    0    0    0    0     0 #>    [19,]    1    1    1    1    0    0    0    0    0     0 #>    [20,]    1    1    1    1    0    0    0    0    0     0 #>    [21,]    0    0    0    0    2    2    2    1    1     1 #>    [22,]    1    1    1    1    0    0    0    0    0     0 #>    [23,]    0    0    0    0    2    2    2    1    1     1 #>    [24,]    1    1    1    1    0    0    0    0    0     0 #>    [25,]    1    1    1    1    0    0    0    0    0     0 #>    [26,]    1    1    1    1    0    0    0    0    0     0 #>    [27,]    1    1    1    1    0    0    0    0    0     0 #>    [28,]    1    1    1    1    0    0    0    0    0     0 #>    [29,]    1    1    1    1    0    0    0    0    0     0 #>    [30,]    0    0    0    0    2    2    2    1    1     1 #>    [31,]    1    1    1    1    0    0    0    0    0     0 #>    [32,]    1    1    1    1    0    0    0    0    0     0 #>    [33,]    1    1    1    1    0    0    0    0    0     0 #>    [34,]    1    1    1    1    0    0    0    0    0     0 #>    [35,]    1    1    1    1    0    0    0    0    0     0 #>    [36,]    1    1    1    1    0    0    0    0    0     0 #>    [37,]    1    1    1    1    0    0    0    0    0     0 #>    [38,]    1    1    1    1    0    0    0    0    0     0 #>    [39,]    0    0    0    0    1    1    1    1    1     1 #>    [40,]    1    1    1    1    0    0    0    0    0     0 #>    [41,]    1    1    1    1    0    0    0    0    0     0 #>    [42,]    1    1    1    1    0    0    0    0    0     0 #>    [43,]    1    1    1    1    0    0    0    0    0     0 #>    [44,]    1    1    1    1    0    0    0    0    0     0 #>    [45,]    1    1    1    1    0    0    0    0    0     0 #>    [46,]    1    1    1    1    0    0    0    0    0     0 #>    [47,]    0    0    0    0    1    1    1    1    1     1 #>    [48,]    1    1    1    1    0    0    0    0    0     0 #>    [49,]    0    0    0    0    1    1    1    1    1     1 #>    [50,]    1    1    1    1    0    0    0    0    0     0 #>    [51,]    1    1    1    1    0    0    0    0    0     0 #>    [52,]    1    1    1    1    0    0    0    0    0     0 #>    [53,]    1    1    1    1    0    0    0    0    0     0 #>    [54,]    0    0    0    0    1    1    1    1    1     1 #>    [55,]    1    1    1    1    0    0    0    0    0     0 #>    [56,]    1    1    1    1    0    0    0    0    0     0 #>    [57,]    1    1    1    1    0    0    0    0    0     0 #>    [58,]    1    1    1    1    0    0    0    0    0     0 #>    [59,]    1    1    1    1    0    0    0    0    0     0 #>    [60,]    1    1    1    1    0    0    0    0    0     0 #>    [61,]    1    1    1    1    0    0    0    0    0     0 #>    [62,]    0    0    0    0    2    2    2    1    1     1 #>    [63,]    1    1    1    1    0    0    0    0    0     0 #>    [64,]    1    1    1    1    0    0    0    0    0     0 #>    [65,]    1    1    1    1    0    0    0    0    0     0 #>    [66,]    1    1    1    1    0    0    0    0    0     0 #>    [67,]    1    1    1    1    0    0    0    0    0     0 #>    [68,]    1    1    1    1    0    0    0    0    0     0 #>    [69,]    1    1    1    1    0    0    0    0    0     0 #>    [70,]    0    0    0    0    1    1    1    1    1     1 #>    [71,]    1    1    1    1    0    0    0    0    0     0 #>    [72,]    1    1    1    1    0    0    0    0    0     0 #>    [73,]    1    1    1    1    0    0    0    0    0     0 #>    [74,]    1    1    1    1    0    0    0    0    0     0 #>    [75,]    1    1    1    1    0    0    0    0    0     0 #>    [76,]    1    1    1    1    0    0    0    0    0     0 #>    [77,]    1    1    1    1    0    0    0    0    0     0 #>    [78,]    1    1    1    1    0    0    0    0    0     0 #>    [79,]    0    0    0    0    1    1    1    1    1     1 #>    [80,]    0    0    0    0    2    2    2    1    1     1 #>    [81,]    1    1    1    1    0    0    0    0    0     0 #>    [82,]    1    1    1    1    0    0    0    0    0     0 #>    [83,]    0    0    0    0    1    1    1    1    1     1 #>    [84,]    1    1    1    1    0    0    0    0    0     0 #>    [85,]    1    1    1    1    0    0    0    0    0     0 #>    [86,]    1    1    1    1    0    0    0    0    0     0 #>    [87,]    1    1    1    1    0    0    0    0    0     0 #>    [88,]    1    1    1    1    0    0    0    0    0     0 #>    [89,]    1    1    1    1    0    0    0    0    0     0 #>    [90,]    1    1    1    1    0    0    0    0    0     0 #>    [91,]    1    1    1    1    0    0    0    0    0     0 #>    [92,]    1    1    1    1    0    0    0    0    0     0 #>    [93,]    1    1    1    1    0    0    0    0    0     0 #>    [94,]    1    1    1    1    0    0    0    0    0     0 #>    [95,]    0    0    0    0    2    2    2    1    1     1 #>    [96,]    1    1    1    1    0    0    0    0    0     0 #>    [97,]    1    1    1    1    0    0    0    0    0     0 #>    [98,]    0    0    0    0    1    1    1    1    1     1 #>    [99,]    1    1    1    1    0    0    0    0    0     0 #>   [100,]    1    1    1    1    0    0    0    0    0     0 #>   [101,]    2    2    2    4    5    4    4    3    2     2 #>   [102,]    2    2    2    4    5    4    4    3    2     2 #>   [103,]    2    2    2    3    4    4    4    3    2     2 #>   [104,]    2    2    2    4    5    4    4    3    2     2 #>   [105,]    2    2    2    4    5    4    4    3    2     2 #>   [106,]    2    2    2    3    4    4    4    3    2     2 #>   [107,]    2    2    2    4    5    4    4    3    2     2 #>   [108,]    2    2    2    4    5    4    4    3    2     2 #>   [109,]    2    2    2    4    5    4    4    3    2     3 #>   [110,]    2    2    2    4    5    4    4    3    2     2 #>   [111,]    2    2    2    4    5    4    4    3    2     2 #>   [112,]    2    2    2    4    5    4    4    3    2     2 #>   [113,]    3    3    3    2    3    3    3    2    2     3 #>   [114,]    2    2    2    4    5    4    4    3    2     2 #>   [115,]    3    3    3    2    3    3    3    2    2     2 #>   [116,]    2    2    2    4    5    4    4    3    2     2 #>   [117,]    2    2    2    4    5    4    4    3    2     3 #>   [118,]    2    2    2    4    5    4    4    3    2     3 #>   [119,]    3    3    3    2    3    3    3    2    2     2 #>   [120,]    3    3    3    2    3    3    3    2    2     2 #>   [121,]    2    2    2    4    5    4    4    3    2     2 #>   [122,]    3    3    3    2    3    3    3    2    2     2 #>   [123,]    2    2    2    4    5    4    4    3    2     2 #>   [124,]    2    2    2    4    5    4    4    3    2     2 #>   [125,]    2    2    2    4    5    4    4    3    2     2 #>   [126,]    2    2    2    4    5    4    4    3    2     2 #>   [127,]    3    3    3    2    3    3    3    2    2     3 #>   [128,]    2    2    2    4    5    4    4    3    2     2 #>   [129,]    3    3    3    2    3    3    3    2    2     2 #>   [130,]    2    2    2    4    5    4    4    3    2     2 #>   [131,]    2    2    2    4    5    4    4    3    2     2 #>   [132,]    2    2    2    4    5    4    4    3    2     2 #>   [133,]    2    2    2    4    5    4    4    3    2     2 #>   [134,]    2    2    2    3    4    4    4    3    2     2 #>   [135,]    2    2    2    4    5    4    4    3    2     2 #>   [136,]    3    3    3    2    3    3    3    2    2     2 #>   [137,]    3    3    3    2    3    3    3    2    2     2 #>   [138,]    3    3    3    2    3    3    3    2    2     2 #>   [139,]    2    2    2    4    5    4    4    3    2     2 #>   [140,]    2    2    2    4    5    4    4    3    2     2 #>   [141,]    2    2    2    4    5    4    4    3    2     2 #>   [142,]    2    2    2    4    5    4    4    3    2     3 #>   [143,]    2    2    2    4    5    4    4    3    2     2 #>   [144,]    2    2    2    4    5    4    4    3    2     2 #>   [145,]    2    2    2    3    4    4    4    3    2     2 #>   [146,]    3    3    3    2    3    3    3    2    2     2 #>   [147,]    2    2    2    4    5    4    4    3    2     2 #>   [148,]    2    2    2    4    5    4    4    3    2     2 #>   [149,]    2    2    2    3    4    4    4    3    2     2 #>   [150,]    2    2    2    4    5    4    4    3    2     2 #>   [151,]    3    3    3    2    3    3    3    2    2     3 #>   [152,]    2    2    2    3    4    4    4    3    2     2 #>   [153,]    3    3    3    2    3    3    3    2    2     3 #>   [154,]    2    2    2    4    5    4    4    3    2     2 #>   [155,]    3    3    3    2    3    3    3    2    2     2 #>   [156,]    2    2    2    4    5    4    4    3    2     2 #>   [157,]    2    2    2    4    5    4    4    3    2     2 #>   [158,]    3    3    3    2    3    3    3    2    2     2 #>   [159,]    2    2    2    4    5    4    4    3    2     2 #>   [160,]    2    2    2    4    5    4    4    3    2     2 #>   [161,]    2    2    2    4    5    4    4    3    2     2 #>   [162,]    2    2    2    4    5    4    4    3    2     2 #>   [163,]    2    2    2    4    5    4    4    3    2     2 #>   [164,]    3    3    3    2    3    3    3    2    2     2 #>   [165,]    2    2    2    4    5    4    4    3    2     3 #>   [166,]    3    3    3    2    3    3    3    2    2     3 #>   [167,]    2    2    2    4    5    4    4    3    2     2 #>   [168,]    2    2    2    3    4    4    4    3    2     2 #>   [169,]    3    3    3    2    3    3    3    2    2     2 #>   [170,]    2    2    2    4    5    4    4    3    2     2 #>   [171,]    3    3    3    2    3    3    3    2    2     2 #>   [172,]    2    2    2    3    4    4    4    3    2     2 #>   [173,]    2    2    2    4    5    4    4    3    2     2 #>   [174,]    2    2    2    4    5    4    4    3    2     2 #>   [175,]    2    2    2    4    5    4    4    3    2     2 #>   [176,]    2    2    2    4    5    4    4    3    2     2 #>   [177,]    3    3    3    2    3    3    3    2    2     2 #>   [178,]    2    2    2    4    5    4    4    3    2     2 #>   [179,]    2    2    2    4    5    4    4    3    2     3 #>   [180,]    3    3    3    2    3    3    3    2    2     2 #>   [181,]    3    3    3    2    3    3    3    2    2     2 #>   [182,]    2    2    2    4    5    4    4    3    2     3 #>   [183,]    3    3    3    2    3    3    3    2    2     2 #>   [184,]    2    2    2    4    5    4    4    3    2     3 #>   [185,]    2    2    2    4    5    4    4    3    2     2 #>   [186,]    2    2    2    4    5    4    4    3    2     2 #>   [187,]    3    3    3    2    3    3    3    2    2     2 #>   [188,]    2    2    2    4    5    4    4    3    2     2 #>   [189,]    2    2    2    4    5    4    4    3    2     2 #>   [190,]    3    3    3    2    3    3    3    2    2     2 #>   [191,]    2    2    2    4    5    4    4    3    2     3 #>   [192,]    2    2    2    4    5    4    4    3    2     2 #>   [193,]    2    2    2    4    5    4    4    3    2     3 #>   [194,]    2    2    2    4    5    4    4    3    2     3 #>   [195,]    2    2    2    4    5    4    4    3    2     2 #>   [196,]    3    3    3    2    3    3    3    2    2     2 #>   [197,]    3    3    3    2    3    3    3    2    2     2 #>   [198,]    2    2    2    4    5    4    4    3    2     2 #>   [199,]    2    2    2    4    5    4    4    3    2     2 #>   [200,]    3    3    3    2    3    3    3    2    2     2 #>   [201,]    5    5    5    6    7    6    6    5    4     5 #>   [202,]    5    5    5    6    7    6    6    5    4     5 #>   [203,]    5    5    5    6    7    6    6    5    4     5 #>   [204,]    5    5    5    6    7    6    6    5    4     5 #>   [205,]    5    5    5    6    7    6    6    5    4     5 #>   [206,]    5    5    5    6    7    6    6    5    4     5 #>   [207,]    5    5    5    6    7    6    6    5    4     5 #>   [208,]    5    5    5    6    7    6    6    5    4     5 #>   [209,]    5    5    5    6    7    6    6    5    4     5 #>   [210,]    5    5    5    6    7    6    6    5    4     5 #>   [211,]    5    5    5    6    7    6    6    5    4     5 #>   [212,]    4    4    4    5    6    5    5    4    3     4 #>   [213,]    5    5    5    6    7    6    6    5    4     5 #>   [214,]    5    5    5    6    7    6    6    5    4     5 #>   [215,]    4    4    4    5    6    5    5    4    3     4 #>   [216,]    5    5    5    6    7    6    6    5    4     5 #>   [217,]    4    4    4    5    6    5    5    4    3     4 #>   [218,]    5    5    5    6    7    6    6    5    4     5 #>   [219,]    5    5    5    6    7    6    6    5    4     5 #>   [220,]    5    5    5    6    7    6    6    5    4     5 #>   [221,]    5    5    5    6    7    6    6    5    4     5 #>   [222,]    5    5    5    6    7    6    6    5    4     5 #>   [223,]    4    4    4    5    6    5    5    4    3     4 #>   [224,]    5    5    5    6    7    6    6    5    4     5 #>   [225,]    5    5    5    6    7    6    6    5    4     5 #>   [226,]    5    5    5    6    7    6    6    5    4     5 #>   [227,]    5    5    5    6    7    6    6    5    4     5 #>   [228,]    5    5    5    6    7    6    6    5    4     5 #>   [229,]    5    5    5    6    7    6    6    5    4     5 #>   [230,]    5    5    5    6    7    6    6    5    4     5 #>   [231,]    4    4    4    5    6    5    5    4    3     4 #>   [232,]    5    5    5    6    7    6    6    5    4     5 #>   [233,]    5    5    5    6    7    6    6    5    4     5 #>   [234,]    4    4    4    5    6    5    5    4    3     4 #>   [235,]    5    5    5    6    7    6    6    5    4     5 #>   [236,]    5    5    5    6    7    6    6    5    4     5 #>   [237,]    4    4    4    5    6    5    5    4    3     4 #>   [238,]    5    5    5    6    7    6    6    5    4     5 #>   [239,]    5    5    5    6    7    6    6    5    4     5 #>   [240,]    5    5    5    6    7    6    6    5    4     5 #>   [241,]    5    5    5    6    7    6    6    5    4     5 #>   [242,]    4    4    4    5    6    5    5    4    3     4 #>   [243,]    4    4    4    5    6    5    5    4    3     4 #>   [244,]    4    4    4    5    6    5    5    4    3     4 #>   [245,]    5    5    5    6    7    6    6    5    4     5 #>   [246,]    5    5    5    6    7    6    6    5    4     5 #>   [247,]    5    5    5    6    7    6    6    5    4     5 #>   [248,]    4    4    4    5    6    5    5    4    3     4 #>   [249,]    5    5    5    6    7    6    6    5    4     5 #>   [250,]    5    5    5    6    7    6    6    5    4     5 #>   [251,]    5    5    5    6    7    6    6    5    4     5 #>   [252,]    5    5    5    6    7    6    6    5    4     5 #>   [253,]    5    5    5    6    7    6    6    5    4     5 #>   [254,]    5    5    5    6    7    6    6    5    4     5 #>   [255,]    5    5    5    6    7    6    6    5    4     5 #>   [256,]    5    5    5    6    7    6    6    5    4     5 #>   [257,]    5    5    5    6    7    6    6    5    4     5 #>   [258,]    5    5    5    6    7    6    6    5    4     5 #>   [259,]    5    5    5    6    7    6    6    5    4     5 #>   [260,]    5    5    5    6    7    6    6    5    4     5 #>   [261,]    5    5    5    6    7    6    6    5    4     5 #>   [262,]    5    5    5    6    7    6    6    5    4     5 #>   [263,]    4    4    4    5    6    5    5    4    3     4 #>   [264,]    5    5    5    6    7    6    6    5    4     5 #>   [265,]    5    5    5    6    7    6    6    5    4     5 #>   [266,]    5    5    5    6    7    6    6    5    4     5 #>   [267,]    5    5    5    6    7    6    6    5    4     5 #>   [268,]    5    5    5    6    7    6    6    5    4     5 #>   [269,]    5    5    5    6    7    6    6    5    4     5 #>   [270,]    4    4    4    5    6    5    5    4    3     4 #>   [271,]    5    5    5    6    7    6    6    5    4     5 #>   [272,]    5    5    5    6    7    6    6    5    4     5 #>   [273,]    5    5    5    6    7    6    6    5    4     5 #>   [274,]    5    5    5    6    7    6    6    5    4     5 #>   [275,]    4    4    4    5    6    5    5    4    3     4 #>   [276,]    5    5    5    6    7    6    6    5    4     5 #>   [277,]    5    5    5    6    7    6    6    5    4     5 #>   [278,]    4    4    4    5    6    5    5    4    3     4 #>   [279,]    4    4    4    5    6    5    5    4    3     4 #>   [280,]    5    5    5    6    7    6    6    5    4     5 #>   [281,]    4    4    4    5    6    5    5    4    3     4 #>   [282,]    5    5    5    6    7    6    6    5    4     5 #>   [283,]    5    5    5    6    7    6    6    5    4     5 #>   [284,]    5    5    5    6    7    6    6    5    4     5 #>   [285,]    5    5    5    6    7    6    6    5    4     5 #>   [286,]    5    5    5    6    7    6    6    5    4     5 #>   [287,]    5    5    5    6    7    6    6    5    4     5 #>   [288,]    5    5    5    6    7    6    6    5    4     5 #>   [289,]    5    5    5    6    7    6    6    5    4     5 #>   [290,]    5    5    5    6    7    6    6    5    4     5 #>   [291,]    5    5    5    6    7    6    6    5    4     5 #>   [292,]    5    5    5    6    7    6    6    5    4     5 #>   [293,]    5    5    5    6    7    6    6    5    4     5 #>   [294,]    4    4    4    5    6    5    5    4    3     4 #>   [295,]    4    4    4    5    6    5    5    4    3     4 #>   [296,]    5    5    5    6    7    6    6    5    4     5 #>   [297,]    5    5    5    6    7    6    6    5    4     5 #>   [298,]    5    5    5    6    7    6    6    5    4     5 #>   [299,]    5    5    5    6    7    6    6    5    4     5 #>   [300,]    4    4    4    5    6    5    5    4    3     4 #>   [301,]    7    7    7    8    9    8    8    7    6     7 #>   [302,]    7    7    7    8    9    8    8    7    6     7 #>   [303,]    6    6    6    7    8    7    7    6    5     6 #>   [304,]    7    7    7    8    9    8    8    7    6     7 #>   [305,]    6    6    6    7    8    7    7    6    5     6 #>   [306,]    6    6    6    7    8    7    7    6    5     6 #>   [307,]    7    7    7    8    9    8    8    7    6     7 #>   [308,]    7    7    7    8    9    8    8    7    6     7 #>   [309,]    7    7    7    8    9    8    8    7    6     7 #>   [310,]    7    7    7    8    9    8    8    7    6     7 #>   [311,]    6    6    6    7    8    7    7    6    5     6 #>   [312,]    6    6    6    7    8    7    7    6    5     6 #>   [313,]    7    7    7    8    9    8    8    7    6     7 #>   [314,]    6    6    6    7    8    7    7    6    5     6 #>   [315,]    7    7    7    8    9    8    8    7    6     7 #>   [316,]    7    7    7    8    9    8    8    7    6     7 #>   [317,]    7    7    7    8    9    8    8    7    6     7 #>   [318,]    7    7    7    8    9    8    8    7    6     7 #>   [319,]    6    6    6    7    8    7    7    6    5     6 #>   [320,]    6    6    6    7    8    7    7    6    5     6 #>   [321,]    7    7    7    8    9    8    8    7    6     7 #>   [322,]    6    6    6    7    8    7    7    6    5     6 #>   [323,]    7    7    7    8    9    8    8    7    6     7 #>   [324,]    6    6    6    7    8    7    7    6    5     6 #>   [325,]    7    7    7    8    9    8    8    7    6     7 #>   [326,]    6    6    6    7    8    7    7    6    5     6 #>   [327,]    7    7    7    8    9    8    8    7    6     7 #>   [328,]    7    7    7    8    9    8    8    7    6     7 #>   [329,]    6    6    6    7    8    7    7    6    5     6 #>   [330,]    6    6    6    7    8    7    7    6    5     6 #>   [331,]    7    7    7    8    9    8    8    7    6     7 #>   [332,]    6    6    6    7    8    7    7    6    5     6 #>   [333,]    6    6    6    7    8    7    7    6    5     6 #>   [334,]    6    6    6    7    8    7    7    6    5     6 #>   [335,]    6    6    6    7    8    7    7    6    5     6 #>   [336,]    6    6    6    7    8    7    7    6    5     6 #>   [337,]    7    7    7    8    9    8    8    7    6     7 #>   [338,]    7    7    7    8    9    8    8    7    6     7 #>   [339,]    7    7    7    8    9    8    8    7    6     7 #>   [340,]    6    6    6    7    8    7    7    6    5     6 #>   [341,]    6    6    6    7    8    7    7    6    5     6 #>   [342,]    6    6    6    7    8    7    7    6    5     6 #>   [343,]    7    7    7    8    9    8    8    7    6     7 #>   [344,]    7    7    7    8    9    8    8    7    6     7 #>   [345,]    7    7    7    8    9    8    8    7    6     7 #>   [346,]    7    7    7    8    9    8    8    7    6     7 #>   [347,]    7    7    7    8    9    8    8    7    6     7 #>   [348,]    6    6    6    7    8    7    7    6    5     6 #>   [349,]    6    6    6    7    8    7    7    6    5     6 #>   [350,]    7    7    7    8    9    8    8    7    6     7 #>   [351,]    6    6    6    7    8    7    7    6    5     6 #>   [352,]    6    6    6    7    8    7    7    6    5     6 #>   [353,]    7    7    7    8    9    8    8    7    6     7 #>   [354,]    6    6    6    7    8    7    7    6    5     6 #>   [355,]    6    6    6    7    8    7    7    6    5     6 #>   [356,]    7    7    7    8    9    8    8    7    6     7 #>   [357,]    6    6    6    7    8    7    7    6    5     6 #>   [358,]    6    6    6    7    8    7    7    6    5     6 #>   [359,]    6    6    6    7    8    7    7    6    5     6 #>   [360,]    6    6    6    7    8    7    7    6    5     6 #>   [361,]    7    7    7    8    9    8    8    7    6     7 #>   [362,]    6    6    6    7    8    7    7    6    5     6 #>   [363,]    6    6    6    7    8    7    7    6    5     6 #>   [364,]    7    7    7    8    9    8    8    7    6     7 #>   [365,]    6    6    6    7    8    7    7    6    5     6 #>   [366,]    6    6    6    7    8    7    7    6    5     6 #>   [367,]    6    6    6    7    8    7    7    6    5     6 #>   [368,]    6    6    6    7    8    7    7    6    5     6 #>   [369,]    6    6    6    7    8    7    7    6    5     6 #>   [370,]    7    7    7    8    9    8    8    7    6     7 #>   [371,]    7    7    7    8    9    8    8    7    6     7 #>   [372,]    7    7    7    8    9    8    8    7    6     7 #>   [373,]    7    7    7    8    9    8    8    7    6     7 #>   [374,]    7    7    7    8    9    8    8    7    6     7 #>   [375,]    7    7    7    8    9    8    8    7    6     7 #>   [376,]    7    7    7    8    9    8    8    7    6     7 #>   [377,]    7    7    7    8    9    8    8    7    6     7 #>   [378,]    6    6    6    7    8    7    7    6    5     6 #>   [379,]    7    7    7    8    9    8    8    7    6     7 #>   [380,]    6    6    6    7    8    7    7    6    5     6 #>   [381,]    6    6    6    7    8    7    7    6    5     6 #>   [382,]    7    7    7    8    9    8    8    7    6     7 #>   [383,]    6    6    6    7    8    7    7    6    5     6 #>   [384,]    7    7    7    8    9    8    8    7    6     7 #>   [385,]    6    6    6    7    8    7    7    6    5     6 #>   [386,]    7    7    7    8    9    8    8    7    6     7 #>   [387,]    7    7    7    8    9    8    8    7    6     7 #>   [388,]    7    7    7    8    9    8    8    7    6     7 #>   [389,]    6    6    6    7    8    7    7    6    5     6 #>   [390,]    7    7    7    8    9    8    8    7    6     7 #>   [391,]    6    6    6    7    8    7    7    6    5     6 #>   [392,]    6    6    6    7    8    7    7    6    5     6 #>   [393,]    6    6    6    7    8    7    7    6    5     6 #>   [394,]    7    7    7    8    9    8    8    7    6     7 #>   [395,]    7    7    7    8    9    8    8    7    6     7 #>   [396,]    7    7    7    8    9    8    8    7    6     7 #>   [397,]    6    6    6    7    8    7    7    6    5     6 #>   [398,]    6    6    6    7    8    7    7    6    5     6 #>   [399,]    6    6    6    7    8    7    7    6    5     6 #>   [400,]    7    7    7    8    9    8    8    7    6     7 #>   [401,]    9    9    9   10   11   10   10    9    8     9 #>   [402,]    9    9    9   10   11   10   10    9    8     9 #>   [403,]    8    8    8    9   10    9    9    8    7     8 #>   [404,]    9    9    9   10   11   10   10    9    8     9 #>   [405,]    9    9    9   10   11   10   10    9    8     9 #>   [406,]    9    9    9   10   11   10   10    9    8     9 #>   [407,]    8    8    8    9   10    9    9    8    7     8 #>   [408,]    9    9    9   10   11   10   10    9    8     9 #>   [409,]    9    9    9   10   11   10   10    9    8     9 #>   [410,]    9    9    9   10   11   10   10    9    8     9 #>   [411,]    9    9    9   10   11   10   10    9    8     9 #>   [412,]    8    8    8    9   10    9    9    8    7     8 #>   [413,]    9    9    9   10   11   10   10    9    8     9 #>   [414,]    9    9    9   10   11   10   10    9    8     9 #>   [415,]    9    9    9   10   11   10   10    9    8     9 #>   [416,]    9    9    9   10   11   10   10    9    8     9 #>   [417,]    9    9    9   10   11   10   10    9    8     9 #>   [418,]    9    9    9   10   11   10   10    9    8     9 #>   [419,]    9    9    9   10   11   10   10    9    8     9 #>   [420,]    9    9    9   10   11   10   10    9    8     9 #>   [421,]    9    9    9   10   11   10   10    9    8     9 #>   [422,]    9    9    9   10   11   10   10    9    8     9 #>   [423,]    9    9    9   10   11   10   10    9    8     9 #>   [424,]    9    9    9   10   11   10   10    9    8     9 #>   [425,]    9    9    9   10   11   10   10    9    8     9 #>   [426,]    9    9    9   10   11   10   10    9    8     9 #>   [427,]    9    9    9   10   11   10   10    9    8     9 #>   [428,]    9    9    9   10   11   10   10    9    8     9 #>   [429,]    9    9    9   10   11   10   10    9    8     9 #>   [430,]    9    9    9   10   11   10   10    9    8     9 #>   [431,]    8    8    8    9   10    9    9    8    7     8 #>   [432,]    9    9    9   10   11   10   10    9    8     9 #>   [433,]    9    9    9   10   11   10   10    9    8     9 #>   [434,]    9    9    9   10   11   10   10    9    8     9 #>   [435,]    9    9    9   10   11   10   10    9    8     9 #>   [436,]    9    9    9   10   11   10   10    9    8     9 #>   [437,]    9    9    9   10   11   10   10    9    8     9 #>   [438,]    9    9    9   10   11   10   10    9    8     9 #>   [439,]    9    9    9   10   11   10   10    9    8     9 #>   [440,]    9    9    9   10   11   10   10    9    8     9 #>   [441,]    9    9    9   10   11   10   10    9    8     9 #>   [442,]    9    9    9   10   11   10   10    9    8     9 #>   [443,]    9    9    9   10   11   10   10    9    8     9 #>   [444,]    9    9    9   10   11   10   10    9    8     9 #>   [445,]    9    9    9   10   11   10   10    9    8     9 #>   [446,]    9    9    9   10   11   10   10    9    8     9 #>   [447,]    9    9    9   10   11   10   10    9    8     9 #>   [448,]    9    9    9   10   11   10   10    9    8     9 #>   [449,]    9    9    9   10   11   10   10    9    8     9 #>   [450,]    9    9    9   10   11   10   10    9    8     9 #>   [451,]    9    9    9   10   11   10   10    9    8     9 #>   [452,]    8    8    8    9   10    9    9    8    7     8 #>   [453,]    9    9    9   10   11   10   10    9    8     9 #>   [454,]    9    9    9   10   11   10   10    9    8     9 #>   [455,]    9    9    9   10   11   10   10    9    8     9 #>   [456,]    9    9    9   10   11   10   10    9    8     9 #>   [457,]    9    9    9   10   11   10   10    9    8     9 #>   [458,]    9    9    9   10   11   10   10    9    8     9 #>   [459,]    8    8    8    9   10    9    9    8    7     8 #>   [460,]    8    8    8    9   10    9    9    8    7     8 #>   [461,]    9    9    9   10   11   10   10    9    8     9 #>   [462,]    9    9    9   10   11   10   10    9    8     9 #>   [463,]    9    9    9   10   11   10   10    9    8     9 #>   [464,]    9    9    9   10   11   10   10    9    8     9 #>   [465,]    9    9    9   10   11   10   10    9    8     9 #>   [466,]    9    9    9   10   11   10   10    9    8     9 #>   [467,]    9    9    9   10   11   10   10    9    8     9 #>   [468,]    9    9    9   10   11   10   10    9    8     9 #>   [469,]    9    9    9   10   11   10   10    9    8     9 #>   [470,]    9    9    9   10   11   10   10    9    8     9 #>   [471,]    9    9    9   10   11   10   10    9    8     9 #>   [472,]    9    9    9   10   11   10   10    9    8     9 #>   [473,]    9    9    9   10   11   10   10    9    8     9 #>   [474,]    9    9    9   10   11   10   10    9    8     9 #>   [475,]    9    9    9   10   11   10   10    9    8     9 #>   [476,]    9    9    9   10   11   10   10    9    8     9 #>   [477,]    9    9    9   10   11   10   10    9    8     9 #>   [478,]    9    9    9   10   11   10   10    9    8     9 #>   [479,]    9    9    9   10   11   10   10    9    8     9 #>   [480,]    9    9    9   10   11   10   10    9    8     9 #>   [481,]    9    9    9   10   11   10   10    9    8     9 #>   [482,]    9    9    9   10   11   10   10    9    8     9 #>   [483,]    9    9    9   10   11   10   10    9    8     9 #>   [484,]    9    9    9   10   11   10   10    9    8     9 #>   [485,]    9    9    9   10   11   10   10    9    8     9 #>   [486,]    9    9    9   10   11   10   10    9    8     9 #>   [487,]    9    9    9   10   11   10   10    9    8     9 #>   [488,]    9    9    9   10   11   10   10    9    8     9 #>   [489,]    9    9    9   10   11   10   10    9    8     9 #>   [490,]    9    9    9   10   11   10   10    9    8     9 #>   [491,]    9    9    9   10   11   10   10    9    8     9 #>   [492,]    9    9    9   10   11   10   10    9    8     9 #>   [493,]    9    9    9   10   11   10   10    9    8     9 #>   [494,]    9    9    9   10   11   10   10    9    8     9 #>   [495,]    9    9    9   10   11   10   10    9    8     9 #>   [496,]    9    9    9   10   11   10   10    9    8     9 #>   [497,]    8    8    8    9   10    9    9    8    7     8 #>   [498,]    9    9    9   10   11   10   10    9    8     9 #>   [499,]    9    9    9   10   11   10   10    9    8     9 #>   [500,]    9    9    9   10   11   10   10    9    8     9 #>   [501,]   10   10   10   11   12   11   11   10    9    10 #>   [502,]   10   10   10   11   12   11   11   10    9    10 #>   [503,]   10   10   10   11   12   11   11   10    9    10 #>   [504,]   11   11   11   12   13   12   12   11    9    11 #>   [505,]   10   10   10   11   12   11   11   10    9    10 #>   [506,]   10   10   10   11   12   11   11   10    9    10 #>   [507,]   10   10   10   11   12   11   11   10    9    11 #>   [508,]   10   10   10   11   12   11   11   10    9    10 #>   [509,]   11   11   11   12   13   12   12   11    9    11 #>   [510,]   10   10   10   11   12   11   11   10    9    11 #>   [511,]   11   11   11   12   13   12   12   11    9    10 #>   [512,]   11   11   11   12   13   12   12   11    9    10 #>   [513,]   10   10   10   11   12   11   11   10    9    10 #>   [514,]   11   11   11   12   13   12   12   11    9    11 #>   [515,]   11   11   11   12   13   12   12   11    9    10 #>   [516,]   10   10   10   11   12   11   11   10    9    11 #>   [517,]   10   10   10   11   12   11   11   10    9    10 #>   [518,]   10   10   10   11   12   11   11   10    9    10 #>   [519,]   11   11   11   12   13   12   12   11    9    10 #>   [520,]   10   10   10   11   12   11   11   10    9    11 #>   [521,]   11   11   11   12   13   12   12   11    9    10 #>   [522,]   10   10   10   11   12   11   11   10    9    10 #>   [523,]   10   10   10   11   12   11   11   10    9    10 #>   [524,]   10   10   10   11   12   11   11   10    9    11 #>   [525,]   10   10   10   11   12   11   11   10    9    11 #>   [526,]   10   10   10   11   12   11   11   10    9    10 #>   [527,]   11   11   11   12   13   12   12   11    9    10 #>   [528,]   10   10   10   11   12   11   11   10    9    11 #>   [529,]   10   10   10   11   12   11   11   10    9    10 #>   [530,]   10   10   10   11   12   11   11   10    9    10 #>   [531,]   11   11   11   12   13   12   12   11    9    10 #>   [532,]   10   10   10   11   12   11   11   10    9    10 #>   [533,]   11   11   11   12   13   12   12   11    9    10 #>   [534,]   10   10   10   11   12   11   11   10    9    10 #>   [535,]   10   10   10   11   12   11   11   10    9    10 #>   [536,]   11   11   11   12   13   12   12   11    9    11 #>   [537,]   10   10   10   11   12   11   11   10    9    10 #>   [538,]   11   11   11   12   13   12   12   11    9    10 #>   [539,]   10   10   10   11   12   11   11   10    9    11 #>   [540,]   10   10   10   11   12   11   11   10    9    10 #>   [541,]   11   11   11   12   13   12   12   11    9    10 #>   [542,]   11   11   11   12   13   12   12   11    9    10 #>   [543,]   10   10   10   11   12   11   11   10    9    10 #>   [544,]   10   10   10   11   12   11   11   10    9    10 #>   [545,]   10   10   10   11   12   11   11   10    9    10 #>   [546,]   10   10   10   11   12   11   11   10    9    10 #>   [547,]   10   10   10   11   12   11   11   10    9    10 #>   [548,]   11   11   11   12   13   12   12   11    9    10 #>   [549,]   10   10   10   11   12   11   11   10    9    10 #>   [550,]   10   10   10   11   12   11   11   10    9    11 #>   [551,]   10   10   10   11   12   11   11   10    9    10 #>   [552,]   10   10   10   11   12   11   11   10    9    11 #>   [553,]   10   10   10   11   12   11   11   10    9    10 #>   [554,]   10   10   10   11   12   11   11   10    9    11 #>   [555,]   10   10   10   11   12   11   11   10    9    10 #>   [556,]   10   10   10   11   12   11   11   10    9    10 #>   [557,]   10   10   10   11   12   11   11   10    9    11 #>   [558,]   11   11   11   12   13   12   12   11    9    10 #>   [559,]   10   10   10   11   12   11   11   10    9    11 #>   [560,]   10   10   10   11   12   11   11   10    9    10 #>   [561,]   11   11   11   12   13   12   12   11    9    10 #>   [562,]   10   10   10   11   12   11   11   10    9    10 #>   [563,]   10   10   10   11   12   11   11   10    9    10 #>   [564,]   10   10   10   11   12   11   11   10    9    10 #>   [565,]   10   10   10   11   12   11   11   10    9    10 #>   [566,]   10   10   10   11   12   11   11   10    9    10 #>   [567,]   10   10   10   11   12   11   11   10    9    11 #>   [568,]   11   11   11   12   13   12   12   11    9    10 #>   [569,]   11   11   11   12   13   12   12   11    9    10 #>   [570,]   10   10   10   11   12   11   11   10    9    10 #>   [571,]   10   10   10   11   12   11   11   10    9    10 #>   [572,]   10   10   10   11   12   11   11   10    9    10 #>   [573,]   10   10   10   11   12   11   11   10    9    11 #>   [574,]   11   11   11   12   13   12   12   11    9    10 #>   [575,]   11   11   11   12   13   12   12   11    9    10 #>   [576,]   10   10   10   11   12   11   11   10    9    11 #>   [577,]   10   10   10   11   12   11   11   10    9    10 #>   [578,]   10   10   10   11   12   11   11   10    9    10 #>   [579,]   10   10   10   11   12   11   11   10    9    10 #>   [580,]   10   10   10   11   12   11   11   10    9    10 #>   [581,]   10   10   10   11   12   11   11   10    9    10 #>   [582,]   11   11   11   12   13   12   12   11    9    10 #>   [583,]   10   10   10   11   12   11   11   10    9    10 #>   [584,]   10   10   10   11   12   11   11   10    9    10 #>   [585,]   11   11   11   12   13   12   12   11    9    10 #>   [586,]   10   10   10   11   12   11   11   10    9    11 #>   [587,]   10   10   10   11   12   11   11   10    9    10 #>   [588,]   10   10   10   11   12   11   11   10    9    10 #>   [589,]   10   10   10   11   12   11   11   10    9    10 #>   [590,]   10   10   10   11   12   11   11   10    9    11 #>   [591,]   10   10   10   11   12   11   11   10    9    11 #>   [592,]   11   11   11   12   13   12   12   11    9    10 #>   [593,]   11   11   11   12   13   12   12   11    9    10 #>   [594,]   10   10   10   11   12   11   11   10    9    10 #>   [595,]   10   10   10   11   12   11   11   10    9    10 #>   [596,]   11   11   11   12   13   12   12   11    9    10 #>   [597,]   11   11   11   12   13   12   12   11    9    10 #>   [598,]   10   10   10   11   12   11   11   10    9    10 #>   [599,]   10   10   10   11   12   11   11   10    9    10 #>   [600,]   10   10   10   11   12   11   11   10    9    10 #>   [601,]   13   13   12   14   15   14   14   12   10    12 #>   [602,]   12   12   12   13   14   13   13   14   11    13 #>   [603,]   12   12   12   13   14   13   13   14   11    13 #>   [604,]   13   13   12   13   14   13   13   14   11    13 #>   [605,]   12   12   12   14   15   14   14   12   10    12 #>   [606,]   12   12   12   13   14   13   13   14   11    13 #>   [607,]   13   13   12   13   14   13   13   13   11    13 #>   [608,]   13   13   12   13   14   13   13   14   11    13 #>   [609,]   13   13   12   13   14   13   13   14   11    13 #>   [610,]   13   13   12   14   15   14   14   12   10    12 #>   [611,]   12   12   12   14   15   14   14   12   10    12 #>   [612,]   12   12   12   14   15   14   14   12   10    12 #>   [613,]   13   13   12   13   14   13   13   14   11    13 #>   [614,]   12   12   12   14   15   14   14   12   10    12 #>   [615,]   13   13   12   14   15   14   14   12   10    12 #>   [616,]   13   13   12   13   14   13   13   14   11    13 #>   [617,]   13   13   12   14   15   14   14   12   10    12 #>   [618,]   13   13   12   14   15   14   14   12   10    12 #>   [619,]   12   12   12   13   14   13   13   14   11    13 #>   [620,]   12   12   12   13   14   13   13   14   11    13 #>   [621,]   13   13   12   13   14   13   13   13   11    13 #>   [622,]   12   12   12   14   15   14   14   12   10    12 #>   [623,]   13   13   12   13   14   13   13   13   11    13 #>   [624,]   12   12   12   13   14   13   13   14   11    13 #>   [625,]   13   13   12   13   14   13   13   14   11    13 #>   [626,]   12   12   12   14   15   14   14   12   10    12 #>   [627,]   13   13   12   14   15   14   14   12   10    12 #>   [628,]   13   13   12   13   14   13   13   14   11    13 #>   [629,]   12   12   12   13   14   13   13   14   11    13 #>   [630,]   12   12   12   13   14   13   13   13   11    13 #>   [631,]   12   12   12   14   15   14   14   12   10    12 #>   [632,]   12   12   12   14   15   14   14   12   10    12 #>   [633,]   12   12   12   13   14   13   13   14   11    13 #>   [634,]   12   12   12   13   14   13   13   14   11    13 #>   [635,]   12   12   12   13   14   13   13   14   11    13 #>   [636,]   12   12   12   13   14   13   13   14   11    13 #>   [637,]   12   12   12   13   14   13   13   14   11    13 #>   [638,]   12   12   12   14   15   14   14   12   10    12 #>   [639,]   13   13   12   13   14   13   13   13   11    13 #>   [640,]   12   12   12   13   14   13   13   14   11    13 #>   [641,]   12   12   12   13   14   13   13   14   11    13 #>   [642,]   12   12   12   13   14   13   13   14   11    13 #>   [643,]   13   13   12   14   15   14   14   12   10    12 #>   [644,]   12   12   12   13   14   13   13   14   11    13 #>   [645,]   13   13   12   13   14   13   13   14   11    13 #>   [646,]   13   13   12   13   14   13   13   14   11    13 #>   [647,]   13   13   12   14   15   14   14   12   10    12 #>   [648,]   12   12   12   13   14   13   13   14   11    13 #>   [649,]   12   12   12   13   14   13   13   13   11    13 #>   [650,]   12   12   12   13   14   13   13   14   11    13 #>   [651,]   12   12   12   13   14   13   13   14   11    13 #>   [652,]   12   12   12   14   15   14   14   12   10    12 #>   [653,]   13   13   12   13   14   13   13   14   11    13 #>   [654,]   12   12   12   13   14   13   13   13   11    13 #>   [655,]   12   12   12   13   14   13   13   14   11    13 #>   [656,]   13   13   12   13   14   13   13   14   11    13 #>   [657,]   12   12   12   13   14   13   13   14   11    13 #>   [658,]   12   12   12   14   15   14   14   12   10    12 #>   [659,]   12   12   12   14   15   14   14   12   10    12 #>   [660,]   12   12   12   13   14   13   13   14   11    13 #>   [661,]   13   13   12   14   15   14   14   12   10    12 #>   [662,]   12   12   12   13   14   13   13   13   11    13 #>   [663,]   12   12   12   13   14   13   13   14   11    13 #>   [664,]   13   13   12   13   14   13   13   14   11    13 #>   [665,]   12   12   12   13   14   13   13   14   11    13 #>   [666,]   12   12   12   14   15   14   14   12   10    12 #>   [667,]   12   12   12   13   14   13   13   14   11    13 #>   [668,]   12   12   12   14   15   14   14   12   10    12 #>   [669,]   12   12   12   13   14   13   13   14   11    13 #>   [670,]   13   13   12   14   15   14   14   12   10    12 #>   [671,]   13   13   12   14   15   14   14   12   10    12 #>   [672,]   13   13   12   13   14   13   13   14   11    13 #>   [673,]   13   13   12   13   14   13   13   14   11    13 #>   [674,]   13   13   12   13   14   13   13   14   11    13 #>   [675,]   13   13   12   14   15   14   14   12   10    12 #>   [676,]   13   13   12   13   14   13   13   14   11    13 #>   [677,]   13   13   12   14   15   14   14   12   10    12 #>   [678,]   12   12   12   13   14   13   13   14   11    13 #>   [679,]   12   12   12   14   15   14   14   12   10    12 #>   [680,]   12   12   12   13   14   13   13   13   11    13 #>   [681,]   12   12   12   13   14   13   13   14   11    13 #>   [682,]   13   13   12   13   14   13   13   14   11    13 #>   [683,]   12   12   12   13   14   13   13   13   11    13 #>   [684,]   13   13   12   13   14   13   13   14   11    13 #>   [685,]   12   12   12   13   14   13   13   14   11    13 #>   [686,]   12   12   12   13   14   13   13   14   11    13 #>   [687,]   12   12   12   14   15   14   14   12   10    12 #>   [688,]   13   13   12   13   14   13   13   14   11    13 #>   [689,]   12   12   12   13   14   13   13   14   11    13 #>   [690,]   12   12   12   14   15   14   14   12   10    12 #>   [691,]   12   12   12   14   15   14   14   12   10    12 #>   [692,]   12   12   12   14   15   14   14   12   10    12 #>   [693,]   12   12   12   13   14   13   13   14   11    13 #>   [694,]   13   13   12   13   14   13   13   14   11    13 #>   [695,]   13   13   12   14   15   14   14   12   10    12 #>   [696,]   12   12   12   14   15   14   14   12   10    12 #>   [697,]   12   12   12   13   14   13   13   14   11    13 #>   [698,]   12   12   12   13   14   13   13   13   11    13 #>   [699,]   12   12   12   13   14   13   13   14   11    13 #>   [700,]   13   13   12   14   15   14   14   12   10    12 #>   [701,]   15   14   14   16   17   16   16   16   13    15 #>   [702,]   14   14   14   16   17   16   16   16   13    15 #>   [703,]   15   14   13   15   16   15   15   15   12    14 #>   [704,]   15   14   13   15   16   15   15   15   12    14 #>   [705,]   15   14   13   15   16   15   15   15   12    14 #>   [706,]   14   14   14   16   17   16   16   16   13    15 #>   [707,]   15   14   14   16   17   16   16   16   13    15 #>   [708,]   15   14   13   15   16   15   15   15   12    14 #>   [709,]   15   14   13   15   16   15   15   15   12    14 #>   [710,]   15   14   13   15   16   15   15   15   12    14 #>   [711,]   14   14   14   16   17   16   16   16   13    15 #>   [712,]   14   14   14   16   17   16   16   16   13    15 #>   [713,]   15   14   14   16   17   16   16   16   13    15 #>   [714,]   15   14   14   16   17   16   16   16   13    15 #>   [715,]   14   14   14   16   17   16   16   16   13    15 #>   [716,]   15   14   14   16   17   16   16   16   13    15 #>   [717,]   14   14   14   16   17   16   16   16   13    15 #>   [718,]   15   14   13   15   16   15   15   15   12    14 #>   [719,]   15   14   14   16   17   16   16   16   13    15 #>   [720,]   15   14   13   15   16   15   15   15   12    14 #>   [721,]   15   14   14   16   17   16   16   16   13    15 #>   [722,]   15   14   14   16   17   16   16   16   13    15 #>   [723,]   14   14   13   15   16   15   15   15   12    14 #>   [724,]   15   14   13   15   16   15   15   15   12    14 #>   [725,]   15   14   14   16   17   16   16   16   13    15 #>   [726,]   15   14   14   16   17   16   16   16   13    15 #>   [727,]   15   14   14   16   17   16   16   16   13    15 #>   [728,]   15   14   14   16   17   16   16   16   13    15 #>   [729,]   14   14   14   16   17   16   16   16   13    15 #>   [730,]   15   14   13   15   16   15   15   15   12    14 #>   [731,]   14   14   13   15   16   15   15   15   12    14 #>   [732,]   15   14   13   15   16   15   15   15   12    14 #>   [733,]   15   14   14   16   17   16   16   16   13    15 #>   [734,]   14   14   13   15   16   15   15   15   12    14 #>   [735,]   15   14   14   16   17   16   16   16   13    15 #>   [736,]   15   14   13   15   16   15   15   15   12    14 #>   [737,]   14   14   14   16   17   16   16   16   13    15 #>   [738,]   15   14   13   15   16   15   15   15   12    14 #>   [739,]   15   14   13   15   16   15   15   15   12    14 #>   [740,]   15   14   14   16   17   16   16   16   13    15 #>   [741,]   15   14   14   16   17   16   16   16   13    15 #>   [742,]   14   14   13   15   16   15   15   15   12    14 #>   [743,]   14   14   13   15   16   15   15   15   12    14 #>   [744,]   14   14   14   16   17   16   16   16   13    15 #>   [745,]   15   14   13   15   16   15   15   15   12    14 #>   [746,]   15   14   14   16   17   16   16   16   13    15 #>   [747,]   14   14   14   16   17   16   16   16   13    15 #>   [748,]   14   14   13   15   16   15   15   15   12    14 #>   [749,]   15   14   13   15   16   15   15   15   12    14 #>   [750,]   15   14   14   16   17   16   16   16   13    15 #>   [751,]   15   14   13   15   16   15   15   15   12    14 #>   [752,]   15   14   14   16   17   16   16   16   13    15 #>   [753,]   15   14   13   15   16   15   15   15   12    14 #>   [754,]   15   14   14   16   17   16   16   16   13    15 #>   [755,]   15   14   14   16   17   16   16   16   13    15 #>   [756,]   14   14   13   15   16   15   15   15   12    14 #>   [757,]   15   14   14   16   17   16   16   16   13    15 #>   [758,]   15   14   14   16   17   16   16   16   13    15 #>   [759,]   15   14   14   16   17   16   16   16   13    15 #>   [760,]   15   14   13   15   16   15   15   15   12    14 #>   [761,]   14   14   14   16   17   16   16   16   13    15 #>   [762,]   15   14   13   15   16   15   15   15   12    14 #>   [763,]   14   14   14   16   17   16   16   16   13    15 #>   [764,]   14   14   13   15   16   15   15   15   12    14 #>   [765,]   14   14   13   15   16   15   15   15   12    14 #>   [766,]   15   14   13   15   16   15   15   15   12    14 #>   [767,]   15   14   13   15   16   15   15   15   12    14 #>   [768,]   15   14   14   16   17   16   16   16   13    15 #>   [769,]   15   14   14   16   17   16   16   16   13    15 #>   [770,]   14   14   14   16   17   16   16   16   13    15 #>   [771,]   15   14   14   16   17   16   16   16   13    15 #>   [772,]   15   14   13   15   16   15   15   15   12    14 #>   [773,]   15   14   14   16   17   16   16   16   13    15 #>   [774,]   15   14   14   16   17   16   16   16   13    15 #>   [775,]   14   14   14   16   17   16   16   16   13    15 #>   [776,]   15   14   14   16   17   16   16   16   13    15 #>   [777,]   15   14   14   16   17   16   16   16   13    15 #>   [778,]   14   14   13   15   16   15   15   15   12    14 #>   [779,]   14   14   14   16   17   16   16   16   13    15 #>   [780,]   15   14   14   16   17   16   16   16   13    15 #>   [781,]   14   14   14   16   17   16   16   16   13    15 #>   [782,]   15   14   14   16   17   16   16   16   13    15 #>   [783,]   15   14   14   16   17   16   16   16   13    15 #>   [784,]   15   14   14   16   17   16   16   16   13    15 #>   [785,]   15   14   13   15   16   15   15   15   12    14 #>   [786,]   15   14   14   16   17   16   16   16   13    15 #>   [787,]   15   14   14   16   17   16   16   16   13    15 #>   [788,]   15   14   13   15   16   15   15   15   12    14 #>   [789,]   15   14   13   15   16   15   15   15   12    14 #>   [790,]   15   14   14   16   17   16   16   16   13    15 #>   [791,]   15   14   13   15   16   15   15   15   12    14 #>   [792,]   14   14   14   16   17   16   16   16   13    15 #>   [793,]   15   14   14   16   17   16   16   16   13    15 #>   [794,]   14   14   14   16   17   16   16   16   13    15 #>   [795,]   14   14   13   15   16   15   15   15   12    14 #>   [796,]   15   14   14   16   17   16   16   16   13    15 #>   [797,]   15   14   14   16   17   16   16   16   13    15 #>   [798,]   15   14   14   16   17   16   16   16   13    15 #>   [799,]   15   14   14   16   17   16   16   16   13    15 #>   [800,]   14   14   14   16   17   16   16   16   13    15 #>   [801,]   17   16   16   18   19   18   18   18   15    17 #>   [802,]   17   16   16   18   19   18   18   18   15    17 #>   [803,]   16   15   15   17   18   17   17   17   14    16 #>   [804,]   17   16   17   19   20   19   19   18   15    17 #>   [805,]   17   16   16   18   19   18   18   18   15    17 #>   [806,]   17   16   16   18   19   18   18   18   15    17 #>   [807,]   16   15   15   17   18   17   17   17   14    16 #>   [808,]   16   15   15   17   18   17   17   17   14    16 #>   [809,]   17   16   17   19   20   19   19   18   15    17 #>   [810,]   17   16   17   19   20   19   19   18   15    17 #>   [811,]   17   16   16   18   19   18   18   18   15    17 #>   [812,]   17   16   16   18   19   18   18   18   15    17 #>   [813,]   17   16   16   18   19   18   18   18   15    17 #>   [814,]   17   16   17   19   20   19   19   18   15    17 #>   [815,]   17   16   16   18   19   18   18   18   15    17 #>   [816,]   16   15   15   17   18   17   17   17   14    16 #>   [817,]   17   16   16   18   19   18   18   18   15    17 #>   [818,]   17   16   16   18   19   18   18   18   15    17 #>   [819,]   17   16   16   18   19   18   18   18   15    17 #>   [820,]   16   15   15   17   18   17   17   17   14    16 #>   [821,]   17   16   16   18   19   18   18   18   15    17 #>   [822,]   17   16   16   18   19   18   18   18   15    17 #>   [823,]   17   16   16   18   19   18   18   18   15    17 #>   [824,]   16   15   15   17   18   17   17   17   14    16 #>   [825,]   16   15   15   17   18   17   17   17   14    16 #>   [826,]   17   16   16   18   19   18   18   18   15    17 #>   [827,]   17   16   16   18   19   18   18   18   15    17 #>   [828,]   17   16   17   19   20   19   19   18   15    17 #>   [829,]   17   16   16   18   19   18   18   18   15    17 #>   [830,]   17   16   16   18   19   18   18   18   15    17 #>   [831,]   17   16   16   18   19   18   18   18   15    17 #>   [832,]   17   16   16   18   19   18   18   18   15    17 #>   [833,]   17   16   16   18   19   18   18   18   15    17 #>   [834,]   17   16   16   18   19   18   18   18   15    17 #>   [835,]   17   16   16   18   19   18   18   18   15    17 #>   [836,]   17   16   17   19   20   19   19   18   15    17 #>   [837,]   17   16   16   18   19   18   18   18   15    17 #>   [838,]   17   16   16   18   19   18   18   18   15    17 #>   [839,]   16   15   15   17   18   17   17   17   14    16 #>   [840,]   17   16   16   18   19   18   18   18   15    17 #>   [841,]   17   16   16   18   19   18   18   18   15    17 #>   [842,]   17   16   16   18   19   18   18   18   15    17 #>   [843,]   17   16   16   18   19   18   18   18   15    17 #>   [844,]   16   15   15   17   18   17   17   17   14    16 #>   [845,]   17   16   16   18   19   18   18   18   15    17 #>   [846,]   16   15   15   17   18   17   17   17   14    16 #>   [847,]   17   16   16   18   19   18   18   18   15    17 #>   [848,]   17   16   16   18   19   18   18   18   15    17 #>   [849,]   16   15   15   17   18   17   17   17   14    16 #>   [850,]   16   15   15   17   18   17   17   17   14    16 #>   [851,]   17   16   16   18   19   18   18   18   15    17 #>   [852,]   17   16   17   19   20   19   19   18   15    17 #>   [853,]   16   15   15   17   18   17   17   17   14    16 #>   [854,]   17   16   17   19   20   19   19   18   15    17 #>   [855,]   16   15   15   17   18   17   17   17   14    16 #>   [856,]   16   15   15   17   18   17   17   17   14    16 #>   [857,]   17   16   17   19   20   19   19   18   15    17 #>   [858,]   17   16   16   18   19   18   18   18   15    17 #>   [859,]   16   15   15   17   18   17   17   17   14    16 #>   [860,]   17   16   16   18   19   18   18   18   15    17 #>   [861,]   17   16   16   18   19   18   18   18   15    17 #>   [862,]   17   16   16   18   19   18   18   18   15    17 #>   [863,]   17   16   16   18   19   18   18   18   15    17 #>   [864,]   17   16   16   18   19   18   18   18   15    17 #>   [865,]   16   15   15   17   18   17   17   17   14    16 #>   [866,]   16   15   15   17   18   17   17   17   14    16 #>   [867,]   17   16   17   19   20   19   19   18   15    17 #>   [868,]   17   16   16   18   19   18   18   18   15    17 #>   [869,]   17   16   16   18   19   18   18   18   15    17 #>   [870,]   16   15   15   17   18   17   17   17   14    16 #>   [871,]   17   16   16   18   19   18   18   18   15    17 #>   [872,]   16   15   15   17   18   17   17   17   14    16 #>   [873,]   17   16   17   19   20   19   19   18   15    17 #>   [874,]   17   16   16   18   19   18   18   18   15    17 #>   [875,]   17   16   16   18   19   18   18   18   15    17 #>   [876,]   17   16   17   19   20   19   19   18   15    17 #>   [877,]   17   16   16   18   19   18   18   18   15    17 #>   [878,]   17   16   16   18   19   18   18   18   15    17 #>   [879,]   17   16   16   18   19   18   18   18   15    17 #>   [880,]   17   16   16   18   19   18   18   18   15    17 #>   [881,]   17   16   16   18   19   18   18   18   15    17 #>   [882,]   17   16   16   18   19   18   18   18   15    17 #>   [883,]   17   16   16   18   19   18   18   18   15    17 #>   [884,]   16   15   15   17   18   17   17   17   14    16 #>   [885,]   17   16   16   18   19   18   18   18   15    17 #>   [886,]   16   15   15   17   18   17   17   17   14    16 #>   [887,]   17   16   16   18   19   18   18   18   15    17 #>   [888,]   17   16   16   18   19   18   18   18   15    17 #>   [889,]   17   16   16   18   19   18   18   18   15    17 #>   [890,]   16   15   15   17   18   17   17   17   14    16 #>   [891,]   17   16   17   19   20   19   19   18   15    17 #>   [892,]   17   16   16   18   19   18   18   18   15    17 #>   [893,]   17   16   16   18   19   18   18   18   15    17 #>   [894,]   17   16   16   18   19   18   18   18   15    17 #>   [895,]   17   16   16   18   19   18   18   18   15    17 #>   [896,]   17   16   16   18   19   18   18   18   15    17 #>   [897,]   17   16   16   18   19   18   18   18   15    17 #>   [898,]   16   15   15   17   18   17   17   17   14    16 #>   [899,]   17   16   16   18   19   18   18   18   15    17 #>   [900,]   16   15   15   17   18   17   17   17   14    16 #>   [901,]   19   18   19   21   22   21   21   21   17    19 #>   [902,]   19   18   19   21   22   21   21   20   17    19 #>   [903,]   19   18   19   21   22   21   21   20   17    19 #>   [904,]   18   17   18   20   21   20   20   19   16    18 #>   [905,]   19   18   19   21   22   21   21   20   17    19 #>   [906,]   19   18   19   21   22   21   21   20   17    19 #>   [907,]   19   18   19   21   22   21   21   21   17    19 #>   [908,]   18   17   18   20   21   20   20   19   16    18 #>   [909,]   18   17   18   20   21   20   20   19   16    18 #>   [910,]   18   17   18   20   21   20   20   19   16    18 #>   [911,]   19   18   19   21   22   21   21   20   17    19 #>   [912,]   19   18   19   21   22   21   21   20   17    19 #>   [913,]   19   18   19   21   22   21   21   21   17    19 #>   [914,]   19   18   19   21   22   21   21   20   17    19 #>   [915,]   19   18   19   21   22   21   21   21   17    19 #>   [916,]   19   18   19   21   22   21   21   21   17    19 #>   [917,]   19   18   19   21   22   21   21   21   17    19 #>   [918,]   19   18   19   21   22   21   21   21   17    19 #>   [919,]   19   18   19   21   22   21   21   20   17    19 #>   [920,]   18   17   18   20   21   20   20   19   16    18 #>   [921,]   19   18   19   21   22   21   21   21   17    19 #>   [922,]   19   18   19   21   22   21   21   20   17    19 #>   [923,]   19   18   19   21   22   21   21   21   17    19 #>   [924,]   19   18   19   21   22   21   21   20   17    19 #>   [925,]   19   18   19   21   22   21   21   21   17    19 #>   [926,]   19   18   19   21   22   21   21   20   17    19 #>   [927,]   19   18   19   21   22   21   21   21   17    19 #>   [928,]   19   18   19   21   22   21   21   21   17    19 #>   [929,]   19   18   19   21   22   21   21   20   17    19 #>   [930,]   18   17   18   20   21   20   20   19   16    18 #>   [931,]   19   18   19   21   22   21   21   20   17    19 #>   [932,]   19   18   19   21   22   21   21   20   17    19 #>   [933,]   19   18   19   21   22   21   21   20   17    19 #>   [934,]   19   18   19   21   22   21   21   20   17    19 #>   [935,]   19   18   19   21   22   21   21   20   17    19 #>   [936,]   19   18   19   21   22   21   21   20   17    19 #>   [937,]   19   18   19   21   22   21   21   21   17    19 #>   [938,]   19   18   19   21   22   21   21   20   17    19 #>   [939,]   19   18   19   21   22   21   21   21   17    19 #>   [940,]   19   18   19   21   22   21   21   20   17    19 #>   [941,]   19   18   19   21   22   21   21   20   17    19 #>   [942,]   19   18   19   21   22   21   21   20   17    19 #>   [943,]   18   17   18   20   21   20   20   19   16    18 #>   [944,]   19   18   19   21   22   21   21   20   17    19 #>   [945,]   19   18   19   21   22   21   21   21   17    19 #>   [946,]   19   18   19   21   22   21   21   21   17    19 #>   [947,]   19   18   19   21   22   21   21   21   17    19 #>   [948,]   19   18   19   21   22   21   21   20   17    19 #>   [949,]   19   18   19   21   22   21   21   20   17    19 #>   [950,]   19   18   19   21   22   21   21   20   17    19 #>   [951,]   18   17   18   20   21   20   20   19   16    18 #>   [952,]   19   18   19   21   22   21   21   20   17    19 #>   [953,]   18   17   18   20   21   20   20   19   16    18 #>   [954,]   19   18   19   21   22   21   21   20   17    19 #>   [955,]   19   18   19   21   22   21   21   20   17    19 #>   [956,]   18   17   18   20   21   20   20   19   16    18 #>   [957,]   19   18   19   21   22   21   21   20   17    19 #>   [958,]   19   18   19   21   22   21   21   20   17    19 #>   [959,]   19   18   19   21   22   21   21   20   17    19 #>   [960,]   18   17   18   20   21   20   20   19   16    18 #>   [961,]   19   18   19   21   22   21   21   21   17    19 #>   [962,]   19   18   19   21   22   21   21   20   17    19 #>   [963,]   19   18   19   21   22   21   21   20   17    19 #>   [964,]   18   17   18   20   21   20   20   19   16    18 #>   [965,]   19   18   19   21   22   21   21   20   17    19 #>   [966,]   18   17   18   20   21   20   20   19   16    18 #>   [967,]   18   17   18   20   21   20   20   19   16    18 #>   [968,]   19   18   19   21   22   21   21   20   17    19 #>   [969,]   19   18   19   21   22   21   21   20   17    19 #>   [970,]   19   18   19   21   22   21   21   21   17    19 #>   [971,]   19   18   19   21   22   21   21   21   17    19 #>   [972,]   19   18   19   21   22   21   21   21   17    19 #>   [973,]   19   18   19   21   22   21   21   21   17    19 #>   [974,]   19   18   19   21   22   21   21   21   17    19 #>   [975,]   19   18   19   21   22   21   21   21   17    19 #>   [976,]   19   18   19   21   22   21   21   21   17    19 #>   [977,]   19   18   19   21   22   21   21   21   17    19 #>   [978,]   18   17   18   20   21   20   20   19   16    18 #>   [979,]   19   18   19   21   22   21   21   21   17    19 #>   [980,]   19   18   19   21   22   21   21   20   17    19 #>   [981,]   19   18   19   21   22   21   21   20   17    19 #>   [982,]   19   18   19   21   22   21   21   21   17    19 #>   [983,]   19   18   19   21   22   21   21   20   17    19 #>   [984,]   19   18   19   21   22   21   21   21   17    19 #>   [985,]   18   17   18   20   21   20   20   19   16    18 #>   [986,]   19   18   19   21   22   21   21   20   17    19 #>   [987,]   19   18   19   21   22   21   21   21   17    19 #>   [988,]   19   18   19   21   22   21   21   21   17    19 #>   [989,]   18   17   18   20   21   20   20   19   16    18 #>   [990,]   19   18   19   21   22   21   21   21   17    19 #>   [991,]   18   17   18   20   21   20   20   19   16    18 #>   [992,]   19   18   19   21   22   21   21   20   17    19 #>   [993,]   19   18   19   21   22   21   21   20   17    19 #>   [994,]   19   18   19   21   22   21   21   21   17    19 #>   [995,]   18   17   18   20   21   20   20   19   16    18 #>   [996,]   19   18   19   21   22   21   21   21   17    19 #>   [997,]   19   18   19   21   22   21   21   20   17    19 #>   [998,]   19   18   19   21   22   21   21   20   17    19 #>   [999,]   19   18   19   21   22   21   21   20   17    19 #>  [1000,]   19   18   19   21   22   21   21   21   17    19 #>  [1001,]   21   20   21   23   24   23   23   23   19    22 #>  [1002,]   20   19   20   22   23   22   22   22   18    20 #>  [1003,]   20   19   20   22   23   22   22   22   18    20 #>  [1004,]   20   19   20   22   23   22   22   22   18    20 #>  [1005,]   21   20   21   24   25   23   23   23   19    21 #>  [1006,]   20   19   20   22   23   22   22   22   18    20 #>  [1007,]   20   19   20   22   23   22   22   22   18    20 #>  [1008,]   20   19   20   22   23   22   22   22   18    20 #>  [1009,]   20   19   20   22   23   22   22   22   18    20 #>  [1010,]   20   19   20   22   23   22   22   22   18    20 #>  [1011,]   20   19   20   22   23   22   22   22   18    20 #>  [1012,]   20   19   20   22   23   22   22   22   18    20 #>  [1013,]   20   19   20   22   23   22   22   22   18    20 #>  [1014,]   21   20   21   23   24   23   23   23   19    21 #>  [1015,]   21   20   21   23   24   23   23   23   19    22 #>  [1016,]   20   19   20   22   23   22   22   22   18    20 #>  [1017,]   20   19   20   22   23   22   22   22   18    20 #>  [1018,]   21   20   21   24   25   23   23   23   19    22 #>  [1019,]   20   19   20   22   23   22   22   22   18    20 #>  [1020,]   20   19   20   22   23   22   22   22   18    20 #>  [1021,]   20   19   20   22   23   22   22   22   18    20 #>  [1022,]   20   19   20   22   23   22   22   22   18    20 #>  [1023,]   20   19   20   22   23   22   22   22   18    20 #>  [1024,]   20   19   20   22   23   22   22   22   18    20 #>  [1025,]   20   19   20   22   23   22   22   22   18    20 #>  [1026,]   20   19   20   22   23   22   22   22   18    20 #>  [1027,]   21   20   21   23   24   23   23   23   19    22 #>  [1028,]   20   19   20   22   23   22   22   22   18    20 #>  [1029,]   20   19   20   22   23   22   22   22   18    20 #>  [1030,]   20   19   20   22   23   22   22   22   18    20 #>  [1031,]   20   19   20   22   23   22   22   22   18    20 #>  [1032,]   21   20   21   23   24   23   23   23   19    21 #>  [1033,]   20   19   20   22   23   22   22   22   18    20 #>  [1034,]   20   19   20   22   23   22   22   22   18    20 #>  [1035,]   20   19   20   22   23   22   22   22   18    20 #>  [1036,]   20   19   20   22   23   22   22   22   18    20 #>  [1037,]   20   19   20   22   23   22   22   22   18    20 #>  [1038,]   20   19   20   22   23   22   22   22   18    20 #>  [1039,]   20   19   20   22   23   22   22   22   18    20 #>  [1040,]   20   19   20   22   23   22   22   22   18    20 #>  [1041,]   20   19   20   22   23   22   22   22   18    20 #>  [1042,]   20   19   20   22   23   22   22   22   18    20 #>  [1043,]   21   20   21   23   24   23   23   23   19    22 #>  [1044,]   20   19   20   22   23   22   22   22   18    20 #>  [1045,]   20   19   20   22   23   22   22   22   18    20 #>  [1046,]   20   19   20   22   23   22   22   22   18    20 #>  [1047,]   20   19   20   22   23   22   22   22   18    20 #>  [1048,]   20   19   20   22   23   22   22   22   18    20 #>  [1049,]   20   19   20   22   23   22   22   22   18    20 #>  [1050,]   20   19   20   22   23   22   22   22   18    20 #>  [1051,]   20   19   20   22   23   22   22   22   18    20 #>  [1052,]   20   19   20   22   23   22   22   22   18    20 #>  [1053,]   20   19   20   22   23   22   22   22   18    20 #>  [1054,]   20   19   20   22   23   22   22   22   18    20 #>  [1055,]   20   19   20   22   23   22   22   22   18    20 #>  [1056,]   20   19   20   22   23   22   22   22   18    20 #>  [1057,]   20   19   20   22   23   22   22   22   18    20 #>  [1058,]   21   20   21   23   24   23   23   23   19    21 #>  [1059,]   20   19   20   22   23   22   22   22   18    20 #>  [1060,]   20   19   20   22   23   22   22   22   18    20 #>  [1061,]   20   19   20   22   23   22   22   22   18    20 #>  [1062,]   20   19   20   22   23   22   22   22   18    20 #>  [1063,]   20   19   20   22   23   22   22   22   18    20 #>  [1064,]   20   19   20   22   23   22   22   22   18    20 #>  [1065,]   20   19   20   22   23   22   22   22   18    20 #>  [1066,]   20   19   20   22   23   22   22   22   18    20 #>  [1067,]   20   19   20   22   23   22   22   22   18    20 #>  [1068,]   20   19   20   22   23   22   22   22   18    20 #>  [1069,]   20   19   20   22   23   22   22   22   18    20 #>  [1070,]   20   19   20   22   23   22   22   22   18    20 #>  [1071,]   21   20   21   24   25   23   23   23   19    22 #>  [1072,]   20   19   20   22   23   22   22   22   18    20 #>  [1073,]   20   19   20   22   23   22   22   22   18    20 #>  [1074,]   20   19   20   22   23   22   22   22   18    20 #>  [1075,]   21   20   21   24   25   23   23   23   19    22 #>  [1076,]   20   19   20   22   23   22   22   22   18    20 #>  [1077,]   20   19   20   22   23   22   22   22   18    20 #>  [1078,]   20   19   20   22   23   22   22   22   18    20 #>  [1079,]   20   19   20   22   23   22   22   22   18    20 #>  [1080,]   20   19   20   22   23   22   22   22   18    20 #>  [1081,]   20   19   20   22   23   22   22   22   18    20 #>  [1082,]   20   19   20   22   23   22   22   22   18    20 #>  [1083,]   20   19   20   22   23   22   22   22   18    20 #>  [1084,]   20   19   20   22   23   22   22   22   18    20 #>  [1085,]   20   19   20   22   23   22   22   22   18    20 #>  [1086,]   20   19   20   22   23   22   22   22   18    20 #>  [1087,]   20   19   20   22   23   22   22   22   18    20 #>  [1088,]   20   19   20   22   23   22   22   22   18    20 #>  [1089,]   20   19   20   22   23   22   22   22   18    20 #>  [1090,]   20   19   20   22   23   22   22   22   18    20 #>  [1091,]   21   20   21   23   24   23   23   23   19    21 #>  [1092,]   20   19   20   22   23   22   22   22   18    20 #>  [1093,]   20   19   20   22   23   22   22   22   18    20 #>  [1094,]   20   19   20   22   23   22   22   22   18    20 #>  [1095,]   21   20   21   23   24   23   23   23   19    22 #>  [1096,]   20   19   20   22   23   22   22   22   18    20 #>  [1097,]   20   19   20   22   23   22   22   22   18    20 #>  [1098,]   20   19   20   22   23   22   22   22   18    20 #>  [1099,]   20   19   20   22   23   22   22   22   18    20 #>  [1100,]   21   20   21   24   25   23   23   23   19    22 #>  [1101,]   23   21   22   25   26   24   24   25   21    24 #>  [1102,]   22   23   24   27   27   25   24   25   21    24 #>  [1103,]   23   21   22   25   26   24   24   24   20    23 #>  [1104,]   23   21   22   25   26   24   24   24   20    23 #>  [1105,]   23   21   22   25   26   24   24   24   20    23 #>  [1106,]   22   22   23   26   27   25   24   25   21    24 #>  [1107,]   23   21   22   25   26   24   24   24   20    23 #>  [1108,]   23   21   22   25   26   24   24   24   20    23 #>  [1109,]   23   21   22   25   26   24   24   24   20    23 #>  [1110,]   23   21   22   25   26   24   24   24   20    23 #>  [1111,]   22   22   23   26   27   25   24   25   21    24 #>  [1112,]   22   22   23   26   27   25   24   24   20    23 #>  [1113,]   23   21   22   25   26   24   24   25   21    24 #>  [1114,]   23   21   22   25   26   24   24   25   21    24 #>  [1115,]   22   23   24   27   27   25   24   25   21    24 #>  [1116,]   23   21   22   25   26   24   24   25   21    24 #>  [1117,]   22   23   24   27   27   25   24   25   21    24 #>  [1118,]   23   21   22   25   26   24   24   24   20    23 #>  [1119,]   22   22   23   26   27   25   24   24   20    23 #>  [1120,]   23   21   22   25   26   24   24   24   20    23 #>  [1121,]   23   21   22   25   26   24   24   25   21    24 #>  [1122,]   23   21   22   25   26   24   24   25   21    24 #>  [1123,]   22   23   24   27   27   25   24   24   20    23 #>  [1124,]   23   21   22   25   26   24   24   24   20    23 #>  [1125,]   23   21   22   25   26   24   24   24   20    23 #>  [1126,]   22   22   23   26   27   25   24   25   21    24 #>  [1127,]   23   21   22   25   26   24   24   25   21    24 #>  [1128,]   23   21   22   25   26   24   24   24   20    23 #>  [1129,]   22   22   23   26   27   25   24   25   21    24 #>  [1130,]   22   22   23   26   27   25   24   24   20    23 #>  [1131,]   22   23   24   27   27   25   24   24   20    23 #>  [1132,]   23   21   22   25   26   24   24   24   20    23 #>  [1133,]   23   21   22   25   26   24   24   25   21    24 #>  [1134,]   22   22   23   26   27   25   24   24   20    23 #>  [1135,]   22   23   24   27   27   25   24   25   21    24 #>  [1136,]   23   21   22   25   26   24   24   24   20    23 #>  [1137,]   22   23   24   27   27   25   24   25   21    24 #>  [1138,]   23   21   22   25   26   24   24   24   20    23 #>  [1139,]   23   21   22   25   26   24   24   24   20    23 #>  [1140,]   23   21   22   25   26   24   24   24   20    23 #>  [1141,]   23   21   22   25   26   24   24   25   21    24 #>  [1142,]   22   22   23   26   27   25   24   24   20    23 #>  [1143,]   22   23   24   27   27   25   24   24   20    23 #>  [1144,]   22   23   24   27   27   25   24   25   21    24 #>  [1145,]   23   21   22   25   26   24   24   24   20    23 #>  [1146,]   23   21   22   25   26   24   24   24   20    23 #>  [1147,]   22   23   24   27   27   25   24   25   21    24 #>  [1148,]   22   22   23   26   27   25   24   24   20    23 #>  [1149,]   23   21   22   25   26   24   24   24   20    23 #>  [1150,]   23   21   22   25   26   24   24   25   21    24 #>  [1151,]   23   21   22   25   26   24   24   24   20    23 #>  [1152,]   23   21   22   25   26   24   24   25   21    24 #>  [1153,]   23   21   22   25   26   24   24   24   20    23 #>  [1154,]   23   21   22   25   26   24   24   24   20    23 #>  [1155,]   23   21   22   25   26   24   24   24   20    23 #>  [1156,]   22   23   24   27   27   25   24   24   20    23 #>  [1157,]   23   21   22   25   26   24   24   24   20    23 #>  [1158,]   23   21   22   25   26   24   24   25   21    24 #>  [1159,]   23   21   22   25   26   24   24   25   21    24 #>  [1160,]   22   22   23   26   27   25   24   24   20    23 #>  [1161,]   22   23   24   27   27   25   24   25   21    24 #>  [1162,]   23   21   22   25   26   24   24   24   20    23 #>  [1163,]   22   22   23   26   27   25   24   24   20    23 #>  [1164,]   22   23   24   27   27   25   24   24   20    23 #>  [1165,]   22   23   24   27   27   25   24   24   20    23 #>  [1166,]   22   22   23   26   27   25   24   24   20    23 #>  [1167,]   23   21   22   25   26   24   24   24   20    23 #>  [1168,]   22   22   23   26   27   25   24   25   21    24 #>  [1169,]   23   21   22   25   26   24   24   24   20    23 #>  [1170,]   22   23   24   27   27   25   24   25   21    24 #>  [1171,]   23   21   22   25   26   24   24   25   21    24 #>  [1172,]   23   21   22   25   26   24   24   24   20    23 #>  [1173,]   23   21   22   25   26   24   24   25   21    24 #>  [1174,]   23   21   22   25   26   24   24   24   20    23 #>  [1175,]   22   23   24   27   27   25   24   24   20    23 #>  [1176,]   23   21   22   25   26   24   24   25   21    24 #>  [1177,]   23   21   22   25   26   24   24   25   21    24 #>  [1178,]   22   22   23   26   27   25   24   24   20    23 #>  [1179,]   22   23   24   27   27   25   24   25   21    24 #>  [1180,]   23   21   22   25   26   24   24   24   20    23 #>  [1181,]   22   22   23   26   27   25   24   25   21    24 #>  [1182,]   23   21   22   25   26   24   24   24   20    23 #>  [1183,]   23   21   22   25   26   24   24   25   21    24 #>  [1184,]   23   21   22   25   26   24   24   25   21    24 #>  [1185,]   23   21   22   25   26   24   24   24   20    23 #>  [1186,]   23   21   22   25   26   24   24   25   21    24 #>  [1187,]   23   21   22   25   26   24   24   24   20    23 #>  [1188,]   23   21   22   25   26   24   24   24   20    23 #>  [1189,]   23   21   22   25   26   24   24   24   20    23 #>  [1190,]   23   21   22   25   26   24   24   25   21    24 #>  [1191,]   23   21   22   25   26   24   24   24   20    23 #>  [1192,]   22   23   24   27   27   25   24   24   20    23 #>  [1193,]   23   21   22   25   26   24   24   25   21    24 #>  [1194,]   22   23   24   27   27   25   24   25   21    24 #>  [1195,]   22   23   24   27   27   25   24   24   20    23 #>  [1196,]   22   23   24   27   27   25   24   25   21    24 #>  [1197,]   23   21   22   25   26   24   24   24   20    23 #>  [1198,]   23   21   22   25   26   24   24   24   20    23 #>  [1199,]   23   21   22   25   26   24   24   25   21    24 #>  [1200,]   22   23   24   27   27   25   24   25   21    24 #>  [1201,]   25   25   26   28   28   26   25   26   22    25 #>  [1202,]   24   24   25   30   30   28   26   27   23    26 #>  [1203,]   24   24   25   29   29   27   26   27   23    26 #>  [1204,]   24   24   25   29   29   27   26   27   23    26 #>  [1205,]   25   25   26   28   28   26   25   26   22    25 #>  [1206,]   24   24   25   29   29   27   26   27   23    26 #>  [1207,]   24   24   25   30   30   28   26   27   23    26 #>  [1208,]   24   24   25   30   30   28   26   27   23    26 #>  [1209,]   24   24   25   29   29   27   26   27   23    26 #>  [1210,]   25   25   26   28   28   26   25   26   22    25 #>  [1211,]   25   25   26   28   28   26   25   26   22    25 #>  [1212,]   25   25   26   28   28   26   25   26   22    25 #>  [1213,]   24   24   25   30   30   28   26   27   23    26 #>  [1214,]   25   25   26   28   28   26   25   26   22    25 #>  [1215,]   25   25   26   28   28   26   25   26   22    25 #>  [1216,]   25   25   26   28   28   26   25   26   22    25 #>  [1217,]   25   25   26   28   28   26   25   26   22    25 #>  [1218,]   25   25   26   28   28   26   25   26   22    25 #>  [1219,]   25   25   26   28   28   26   25   26   22    25 #>  [1220,]   24   24   25   30   30   28   26   27   24    27 #>  [1221,]   24   24   25   29   29   27   26   27   23    26 #>  [1222,]   25   25   26   28   28   26   25   26   22    25 #>  [1223,]   24   24   25   30   30   28   26   27   23    26 #>  [1224,]   25   25   26   28   28   26   25   26   22    25 #>  [1225,]   24   24   25   29   29   27   26   27   23    26 #>  [1226,]   25   25   26   28   28   26   25   26   22    25 #>  [1227,]   25   25   26   28   28   26   25   26   22    25 #>  [1228,]   24   24   25   29   29   27   26   27   23    26 #>  [1229,]   24   24   25   30   30   28   26   27   24    27 #>  [1230,]   24   24   25   30   30   28   26   27   23    26 #>  [1231,]   25   25   26   28   28   26   25   26   22    25 #>  [1232,]   25   25   26   28   28   26   25   26   22    25 #>  [1233,]   24   24   25   30   30   28   26   27   23    26 #>  [1234,]   24   24   25   29   29   27   26   27   23    26 #>  [1235,]   24   24   25   29   29   27   26   27   23    26 #>  [1236,]   24   24   25   30   30   28   26   27   24    27 #>  [1237,]   24   24   25   30   30   28   26   27   24    27 #>  [1238,]   25   25   26   28   28   26   25   26   22    25 #>  [1239,]   25   25   26   28   28   26   25   26   22    25 #>  [1240,]   24   24   25   29   29   27   26   27   23    26 #>  [1241,]   24   24   25   30   30   28   26   27   23    26 #>  [1242,]   24   24   25   29   29   27   26   27   23    26 #>  [1243,]   25   25   26   28   28   26   25   26   22    25 #>  [1244,]   24   24   25   30   30   28   26   27   23    26 #>  [1245,]   24   24   25   30   30   28   26   27   23    26 #>  [1246,]   24   24   25   30   30   28   26   27   24    27 #>  [1247,]   25   25   26   28   28   26   25   26   22    25 #>  [1248,]   24   24   25   29   29   27   26   27   23    26 #>  [1249,]   24   24   25   30   30   28   26   27   23    26 #>  [1250,]   24   24   25   30   30   28   26   27   23    26 #>  [1251,]   25   25   26   28   28   26   25   26   22    25 #>  [1252,]   25   25   26   28   28   26   25   26   22    25 #>  [1253,]   24   24   25   30   30   28   26   27   24    27 #>  [1254,]   24   24   25   29   29   27   26   27   23    26 #>  [1255,]   24   24   25   30   30   28   26   27   24    27 #>  [1256,]   24   24   25   30   30   28   26   27   23    26 #>  [1257,]   24   24   25   29   29   27   26   27   23    26 #>  [1258,]   25   25   26   28   28   26   25   26   22    25 #>  [1259,]   25   25   26   28   28   26   25   26   22    25 #>  [1260,]   24   24   25   30   30   28   26   27   23    26 #>  [1261,]   25   25   26   28   28   26   25   26   22    25 #>  [1262,]   24   24   25   29   29   27   26   27   23    26 #>  [1263,]   24   24   25   30   30   28   26   27   23    26 #>  [1264,]   24   24   25   30   30   28   26   27   24    27 #>  [1265,]   24   24   25   29   29   27   26   27   23    26 #>  [1266,]   25   25   26   28   28   26   25   26   22    25 #>  [1267,]   24   24   25   29   29   27   26   27   23    26 #>  [1268,]   25   25   26   28   28   26   25   26   22    25 #>  [1269,]   24   24   25   30   30   28   26   27   24    27 #>  [1270,]   25   25   26   28   28   26   25   26   22    25 #>  [1271,]   25   25   26   28   28   26   25   26   22    25 #>  [1272,]   24   24   25   29   29   27   26   27   23    26 #>  [1273,]   24   24   25   29   29   27   26   27   23    26 #>  [1274,]   24   24   25   29   29   27   26   27   23    26 #>  [1275,]   25   25   26   28   28   26   25   26   22    25 #>  [1276,]   24   24   25   29   29   27   26   27   23    26 #>  [1277,]   25   25   26   28   28   26   25   26   22    25 #>  [1278,]   24   24   25   30   30   28   26   27   23    26 #>  [1279,]   25   25   26   28   28   26   25   26   22    25 #>  [1280,]   24   24   25   30   30   28   26   27   24    27 #>  [1281,]   24   24   25   30   30   28   26   27   24    27 #>  [1282,]   24   24   25   29   29   27   26   27   23    26 #>  [1283,]   25   25   26   28   28   26   25   26   22    25 #>  [1284,]   24   24   25   30   30   28   26   27   23    26 #>  [1285,]   24   24   25   30   30   28   26   27   23    26 #>  [1286,]   24   24   25   29   29   27   26   27   23    26 #>  [1287,]   25   25   26   28   28   26   25   26   22    25 #>  [1288,]   24   24   25   29   29   27   26   27   23    26 #>  [1289,]   24   24   25   29   29   27   26   27   23    26 #>  [1290,]   25   25   26   28   28   26   25   26   22    25 #>  [1291,]   25   25   26   28   28   26   25   26   22    25 #>  [1292,]   25   25   26   28   28   26   25   26   22    25 #>  [1293,]   24   24   25   30   30   28   26   27   23    26 #>  [1294,]   24   24   25   29   29   27   26   27   23    26 #>  [1295,]   25   25   26   28   28   26   25   26   22    25 #>  [1296,]   25   25   26   28   28   26   25   26   22    25 #>  [1297,]   24   24   25   30   30   28   26   27   24    27 #>  [1298,]   24   24   25   29   29   27   26   27   23    26 #>  [1299,]   24   24   25   29   29   27   26   27   23    26 #>  [1300,]   25   25   26   28   28   26   25   26   22    25 #>  [1301,]   27   27   28   32   32   29   27   28   25    28 #>  [1302,]   27   27   28   32   32   29   27   28   25    28 #>  [1303,]   26   26   27   31   31   30   28   29   26    29 #>  [1304,]   26   26   27   31   31   30   28   29   26    29 #>  [1305,]   27   27   28   32   32   29   27   28   25    28 #>  [1306,]   27   27   28   32   32   29   27   28   25    28 #>  [1307,]   26   26   27   31   31   31   29   30   27    30 #>  [1308,]   26   26   27   31   31   31   29   30   27    30 #>  [1309,]   27   27   28   32   32   29   27   28   25    28 #>  [1310,]   27   27   28   32   32   29   27   28   25    28 #>  [1311,]   27   27   28   32   32   29   27   28   25    28 #>  [1312,]   26   26   27   31   31   31   30   31   28    30 #>  [1313,]   27   27   28   32   32   29   27   28   25    28 #>  [1314,]   26   26   27   31   31   30   28   29   26    29 #>  [1315,]   27   27   28   32   32   29   27   28   25    28 #>  [1316,]   27   27   28   32   32   29   27   28   25    28 #>  [1317,]   27   27   28   32   32   29   27   28   25    28 #>  [1318,]   27   27   28   32   32   29   27   28   25    28 #>  [1319,]   27   27   28   32   32   29   27   28   25    28 #>  [1320,]   27   27   28   32   32   29   27   28   25    28 #>  [1321,]   27   27   28   32   32   29   27   28   25    28 #>  [1322,]   27   27   28   32   32   29   27   28   25    28 #>  [1323,]   26   26   27   31   31   31   29   30   27    30 #>  [1324,]   27   27   28   32   32   29   27   28   25    28 #>  [1325,]   26   26   27   31   31   30   28   29   26    29 #>  [1326,]   27   27   28   32   32   29   27   28   25    28 #>  [1327,]   27   27   28   32   32   29   27   28   25    28 #>  [1328,]   27   27   28   32   32   29   27   28   25    28 #>  [1329,]   27   27   28   32   32   29   27   28   25    28 #>  [1330,]   27   27   28   32   32   29   27   28   25    28 #>  [1331,]   26   26   27   31   31   30   28   29   26    29 #>  [1332,]   26   26   27   31   31   30   28   29   26    29 #>  [1333,]   27   27   28   32   32   29   27   28   25    28 #>  [1334,]   27   27   28   32   32   29   27   28   25    28 #>  [1335,]   27   27   28   32   32   29   27   28   25    28 #>  [1336,]   27   27   28   32   32   29   27   28   25    28 #>  [1337,]   26   26   27   31   31   31   29   30   27    30 #>  [1338,]   27   27   28   32   32   29   27   28   25    28 #>  [1339,]   27   27   28   32   32   29   27   28   25    28 #>  [1340,]   26   26   27   31   31   30   28   29   26    29 #>  [1341,]   27   27   28   32   32   29   27   28   25    28 #>  [1342,]   27   27   28   32   32   29   27   28   25    28 #>  [1343,]   27   27   28   32   32   29   27   28   25    28 #>  [1344,]   26   26   27   31   31   31   29   30   27    30 #>  [1345,]   27   27   28   32   32   29   27   28   25    28 #>  [1346,]   26   26   27   31   31   31   30   31   28    30 #>  [1347,]   26   26   27   31   31   30   28   29   26    29 #>  [1348,]   27   27   28   32   32   29   27   28   25    28 #>  [1349,]   27   27   28   32   32   29   27   28   25    28 #>  [1350,]   27   27   28   32   32   29   27   28   25    28 #>  [1351,]   27   27   28   32   32   29   27   28   25    28 #>  [1352,]   26   26   27   31   31   30   28   29   26    29 #>  [1353,]   27   27   28   32   32   29   27   28   25    28 #>  [1354,]   27   27   28   32   32   29   27   28   25    28 #>  [1355,]   26   26   27   31   31   31   29   30   27    30 #>  [1356,]   27   27   28   32   32   29   27   28   25    28 #>  [1357,]   26   26   27   31   31   30   28   29   26    29 #>  [1358,]   27   27   28   32   32   29   27   28   25    28 #>  [1359,]   26   26   27   31   31   31   30   31   28    30 #>  [1360,]   26   26   27   31   31   31   29   30   27    30 #>  [1361,]   27   27   28   32   32   29   27   28   25    28 #>  [1362,]   27   27   28   32   32   29   27   28   25    28 #>  [1363,]   27   27   28   32   32   29   27   28   25    28 #>  [1364,]   27   27   28   32   32   29   27   28   25    28 #>  [1365,]   27   27   28   32   32   29   27   28   25    28 #>  [1366,]   27   27   28   32   32   29   27   28   25    28 #>  [1367,]   26   26   27   31   31   30   28   29   26    29 #>  [1368,]   26   26   27   31   31   31   30   31   28    30 #>  [1369,]   27   27   28   32   32   29   27   28   25    28 #>  [1370,]   27   27   28   32   32   29   27   28   25    28 #>  [1371,]   27   27   28   32   32   29   27   28   25    28 #>  [1372,]   26   26   27   31   31   30   28   29   26    29 #>  [1373,]   27   27   28   32   32   29   27   28   25    28 #>  [1374,]   26   26   27   31   31   30   28   29   26    29 #>  [1375,]   26   26   27   31   31   31   30   31   28    30 #>  [1376,]   26   26   27   31   31   30   28   29   26    29 #>  [1377,]   27   27   28   32   32   29   27   28   25    28 #>  [1378,]   26   26   27   31   31   31   30   31   28    30 #>  [1379,]   27   27   28   32   32   29   27   28   25    28 #>  [1380,]   26   26   27   31   31   31   29   30   27    30 #>  [1381,]   27   27   28   32   32   29   27   28   25    28 #>  [1382,]   27   27   28   32   32   29   27   28   25    28 #>  [1383,]   27   27   28   32   32   29   27   28   25    28 #>  [1384,]   27   27   28   32   32   29   27   28   25    28 #>  [1385,]   27   27   28   32   32   29   27   28   25    28 #>  [1386,]   26   26   27   31   31   30   28   29   26    29 #>  [1387,]   27   27   28   32   32   29   27   28   25    28 #>  [1388,]   27   27   28   32   32   29   27   28   25    28 #>  [1389,]   27   27   28   32   32   29   27   28   25    28 #>  [1390,]   27   27   28   32   32   29   27   28   25    28 #>  [1391,]   27   27   28   32   32   29   27   28   25    28 #>  [1392,]   26   26   27   31   31   30   28   29   26    29 #>  [1393,]   27   27   28   32   32   29   27   28   25    28 #>  [1394,]   27   27   28   32   32   29   27   28   25    28 #>  [1395,]   27   27   28   32   32   29   27   28   25    28 #>  [1396,]   26   26   27   31   31   31   30   31   28    30 #>  [1397,]   26   26   27   31   31   31   29   30   27    30 #>  [1398,]   26   26   27   31   31   30   28   29   26    29 #>  [1399,]   27   27   28   32   32   29   27   28   25    28 #>  [1400,]   27   27   28   32   32   29   27   28   25    28 #>  [1401,]   28   28   29   33   33   33   32   33   30    32 #>  [1402,]   28   28   29   33   33   33   32   33   30    32 #>  [1403,]   28   28   29   33   33   33   32   33   30    32 #>  [1404,]   29   29   30   34   34   32   31   32   29    31 #>  [1405,]   28   28   29   33   33   33   32   33   30    32 #>  [1406,]   28   28   29   33   33   33   32   33   30    32 #>  [1407,]   28   28   29   33   33   33   32   33   30    32 #>  [1408,]   28   28   29   33   33   33   32   33   30    32 #>  [1409,]   28   28   29   33   33   33   32   33   30    32 #>  [1410,]   29   29   30   34   34   32   31   32   29    31 #>  [1411,]   28   28   29   33   33   33   32   33   30    32 #>  [1412,]   28   28   29   33   33   33   32   33   30    32 #>  [1413,]   28   28   29   33   33   33   32   33   30    32 #>  [1414,]   28   28   29   33   33   33   32   33   30    32 #>  [1415,]   28   28   29   33   33   33   32   33   30    32 #>  [1416,]   28   28   29   33   33   33   32   33   30    32 #>  [1417,]   28   28   29   33   33   33   32   33   30    32 #>  [1418,]   29   29   30   34   34   32   31   32   29    31 #>  [1419,]   28   28   29   33   33   34   32   33   30    32 #>  [1420,]   28   28   29   33   33   34   32   33   30    32 #>  [1421,]   28   28   29   33   33   33   32   33   30    32 #>  [1422,]   28   28   29   33   33   34   32   33   30    32 #>  [1423,]   28   28   29   33   33   33   32   33   30    32 #>  [1424,]   28   28   29   33   33   33   32   33   30    32 #>  [1425,]   29   29   30   34   34   32   31   32   29    31 #>  [1426,]   28   28   29   33   33   33   32   33   30    32 #>  [1427,]   28   28   29   33   33   34   32   33   30    32 #>  [1428,]   28   28   29   33   33   33   32   33   30    32 #>  [1429,]   28   28   29   33   33   34   32   33   30    32 #>  [1430,]   28   28   29   33   33   33   32   33   30    32 #>  [1431,]   28   28   29   33   33   33   32   33   30    32 #>  [1432,]   28   28   29   33   33   33   32   33   30    32 #>  [1433,]   28   28   29   33   33   33   32   33   30    32 #>  [1434,]   28   28   29   33   33   33   32   33   30    32 #>  [1435,]   28   28   29   33   33   33   32   33   30    32 #>  [1436,]   28   28   29   33   33   34   32   33   30    32 #>  [1437,]   28   28   29   33   33   33   32   33   30    32 #>  [1438,]   28   28   29   33   33   33   32   33   30    32 #>  [1439,]   29   29   30   34   34   32   31   32   29    31 #>  [1440,]   28   28   29   33   33   33   32   33   30    32 #>  [1441,]   28   28   29   33   33   33   32   33   30    32 #>  [1442,]   28   28   29   33   33   33   32   33   30    32 #>  [1443,]   29   29   30   34   34   32   31   32   29    31 #>  [1444,]   28   28   29   33   33   33   32   33   30    32 #>  [1445,]   29   29   30   34   34   32   31   32   29    31 #>  [1446,]   28   28   29   33   33   33   32   33   30    32 #>  [1447,]   28   28   29   33   33   33   32   33   30    32 #>  [1448,]   28   28   29   33   33   33   32   33   30    32 #>  [1449,]   28   28   29   33   33   33   32   33   30    32 #>  [1450,]   28   28   29   33   33   33   32   33   30    32 #>  [1451,]   28   28   29   33   33   33   32   33   30    32 #>  [1452,]   28   28   29   33   33   33   32   33   30    32 #>  [1453,]   28   28   29   33   33   33   32   33   30    32 #>  [1454,]   28   28   29   33   33   33   32   33   30    32 #>  [1455,]   28   28   29   33   33   33   32   33   30    32 #>  [1456,]   28   28   29   33   33   33   32   33   30    32 #>  [1457,]   28   28   29   33   33   33   32   33   30    32 #>  [1458,]   28   28   29   33   33   34   32   33   30    32 #>  [1459,]   28   28   29   33   33   33   32   33   30    32 #>  [1460,]   28   28   29   33   33   33   32   33   30    32 #>  [1461,]   28   28   29   33   33   33   32   33   30    32 #>  [1462,]   28   28   29   33   33   33   32   33   30    32 #>  [1463,]   28   28   29   33   33   33   32   33   30    32 #>  [1464,]   28   28   29   33   33   34   32   33   30    32 #>  [1465,]   28   28   29   33   33   33   32   33   30    32 #>  [1466,]   28   28   29   33   33   34   32   33   30    32 #>  [1467,]   28   28   29   33   33   33   32   33   30    32 #>  [1468,]   28   28   29   33   33   33   32   33   30    32 #>  [1469,]   28   28   29   33   33   33   32   33   30    32 #>  [1470,]   28   28   29   33   33   33   32   33   30    32 #>  [1471,]   28   28   29   33   33   33   32   33   30    32 #>  [1472,]   28   28   29   33   33   33   32   33   30    32 #>  [1473,]   29   29   30   34   34   32   31   32   29    31 #>  [1474,]   29   29   30   34   34   32   31   32   29    31 #>  [1475,]   29   29   30   34   34   32   31   32   29    31 #>  [1476,]   29   29   30   34   34   32   31   32   29    31 #>  [1477,]   29   29   30   34   34   32   31   32   29    31 #>  [1478,]   28   28   29   33   33   33   32   33   30    32 #>  [1479,]   28   28   29   33   33   33   32   33   30    32 #>  [1480,]   28   28   29   33   33   33   32   33   30    32 #>  [1481,]   28   28   29   33   33   34   32   33   30    32 #>  [1482,]   28   28   29   33   33   33   32   33   30    32 #>  [1483,]   28   28   29   33   33   34   32   33   30    32 #>  [1484,]   28   28   29   33   33   33   32   33   30    32 #>  [1485,]   28   28   29   33   33   33   32   33   30    32 #>  [1486,]   28   28   29   33   33   33   32   33   30    32 #>  [1487,]   28   28   29   33   33   34   32   33   30    32 #>  [1488,]   28   28   29   33   33   33   32   33   30    32 #>  [1489,]   28   28   29   33   33   33   32   33   30    32 #>  [1490,]   28   28   29   33   33   33   32   33   30    32 #>  [1491,]   28   28   29   33   33   33   32   33   30    32 #>  [1492,]   28   28   29   33   33   33   32   33   30    32 #>  [1493,]   28   28   29   33   33   33   32   33   30    32 #>  [1494,]   28   28   29   33   33   33   32   33   30    32 #>  [1495,]   28   28   29   33   33   33   32   33   30    32 #>  [1496,]   28   28   29   33   33   33   32   33   30    32 #>  [1497,]   28   28   29   33   33   34   32   33   30    32 #>  [1498,]   28   28   29   33   33   33   32   33   30    32 #>  [1499,]   28   28   29   33   33   33   32   33   30    32 #>  [1500,]   28   28   29   33   33   34   32   33   30    32 #>  [1501,]   30   30   31   35   35   35   33   34   31    33 #>  [1502,]   31   31   32   36   36   36   34   36   32    34 #>  [1503,]   30   30   31   35   35   35   33   34   31    33 #>  [1504,]   30   30   31   35   35   35   33   34   31    33 #>  [1505,]   31   31   32   36   36   36   34   35   32    34 #>  [1506,]   30   30   31   35   35   35   33   34   31    33 #>  [1507,]   31   31   32   36   36   36   34   35   32    34 #>  [1508,]   30   30   31   35   35   35   33   34   31    33 #>  [1509,]   31   31   32   36   36   36   34   36   32    34 #>  [1510,]   31   31   32   36   36   36   34   36   32    34 #>  [1511,]   30   30   31   35   35   35   33   34   31    33 #>  [1512,]   31   31   32   36   36   36   34   36   32    34 #>  [1513,]   31   31   32   36   36   36   34   35   32    34 #>  [1514,]   30   30   31   35   35   35   33   34   31    33 #>  [1515,]   30   30   31   35   35   35   33   34   31    33 #>  [1516,]   30   30   31   35   35   35   33   34   31    33 #>  [1517,]   31   31   32   36   36   36   34   35   32    34 #>  [1518,]   31   31   32   36   36   36   34   36   32    34 #>  [1519,]   30   30   31   35   35   35   33   34   31    33 #>  [1520,]   31   31   32   36   36   36   34   35   32    34 #>  [1521,]   31   31   32   36   36   36   34   36   32    34 #>  [1522,]   31   31   32   36   36   36   34   35   32    34 #>  [1523,]   31   31   32   36   36   36   34   36   32    34 #>  [1524,]   31   31   32   36   36   36   34   35   32    34 #>  [1525,]   30   30   31   35   35   35   33   34   31    33 #>  [1526,]   30   30   31   35   35   35   33   34   31    33 #>  [1527,]   31   31   32   36   36   36   34   36   32    34 #>  [1528,]   30   30   31   35   35   35   33   34   31    33 #>  [1529,]   31   31   32   36   36   36   34   35   32    34 #>  [1530,]   31   31   32   36   36   36   34   36   32    34 #>  [1531,]   31   31   32   36   36   36   34   36   32    34 #>  [1532,]   31   31   32   36   36   36   34   36   32    34 #>  [1533,]   31   31   32   36   36   36   34   36   32    34 #>  [1534,]   30   30   31   35   35   35   33   34   31    33 #>  [1535,]   30   30   31   35   35   35   33   34   31    33 #>  [1536,]   31   31   32   36   36   36   34   36   32    34 #>  [1537,]   30   30   31   35   35   35   33   34   31    33 #>  [1538,]   30   30   31   35   35   35   33   34   31    33 #>  [1539,]   31   31   32   36   36   36   34   35   32    34 #>  [1540,]   31   31   32   36   36   36   34   35   32    34 #>  [1541,]   31   31   32   36   36   36   34   36   32    34 #>  [1542,]   30   30   31   35   35   35   33   34   31    33 #>  [1543,]   30   30   31   35   35   35   33   34   31    33 #>  [1544,]   31   31   32   36   36   36   34   35   32    34 #>  [1545,]   30   30   31   35   35   35   33   34   31    33 #>  [1546,]   30   30   31   35   35   35   33   34   31    33 #>  [1547,]   31   31   32   36   36   36   34   35   32    34 #>  [1548,]   31   31   32   36   36   36   34   36   32    34 #>  [1549,]   30   30   31   35   35   35   33   34   31    33 #>  [1550,]   31   31   32   36   36   36   34   35   32    34 #>  [1551,]   31   31   32   36   36   36   34   35   32    34 #>  [1552,]   30   30   31   35   35   35   33   34   31    33 #>  [1553,]   31   31   32   36   36   36   34   35   32    34 #>  [1554,]   31   31   32   36   36   36   34   35   32    34 #>  [1555,]   30   30   31   35   35   35   33   34   31    33 #>  [1556,]   30   30   31   35   35   35   33   34   31    33 #>  [1557,]   30   30   31   35   35   35   33   34   31    33 #>  [1558,]   31   31   32   36   36   36   34   36   32    34 #>  [1559,]   30   30   31   35   35   35   33   34   31    33 #>  [1560,]   31   31   32   36   36   36   34   36   32    34 #>  [1561,]   31   31   32   36   36   36   34   36   32    34 #>  [1562,]   30   30   31   35   35   35   33   34   31    33 #>  [1563,]   31   31   32   36   36   36   34   35   32    34 #>  [1564,]   30   30   31   35   35   35   33   34   31    33 #>  [1565,]   30   30   31   35   35   35   33   34   31    33 #>  [1566,]   30   30   31   35   35   35   33   34   31    33 #>  [1567,]   30   30   31   35   35   35   33   34   31    33 #>  [1568,]   30   30   31   35   35   35   33   34   31    33 #>  [1569,]   30   30   31   35   35   35   33   34   31    33 #>  [1570,]   31   31   32   36   36   36   34   35   32    34 #>  [1571,]   31   31   32   36   36   36   34   36   32    34 #>  [1572,]   30   30   31   35   35   35   33   34   31    33 #>  [1573,]   30   30   31   35   35   35   33   34   31    33 #>  [1574,]   31   31   32   36   36   36   34   36   32    34 #>  [1575,]   31   31   32   36   36   36   34   36   32    34 #>  [1576,]   31   31   32   36   36   36   34   35   32    34 #>  [1577,]   30   30   31   35   35   35   33   34   31    33 #>  [1578,]   31   31   32   36   36   36   34   35   32    34 #>  [1579,]   30   30   31   35   35   35   33   34   31    33 #>  [1580,]   31   31   32   36   36   36   34   36   32    34 #>  [1581,]   31   31   32   36   36   36   34   36   32    34 #>  [1582,]   30   30   31   35   35   35   33   34   31    33 #>  [1583,]   31   31   32   36   36   36   34   35   32    34 #>  [1584,]   31   31   32   36   36   36   34   35   32    34 #>  [1585,]   30   30   31   35   35   35   33   34   31    33 #>  [1586,]   31   31   32   36   36   36   34   35   32    34 #>  [1587,]   31   31   32   36   36   36   34   36   32    34 #>  [1588,]   31   31   32   36   36   36   34   36   32    34 #>  [1589,]   30   30   31   35   35   35   33   34   31    33 #>  [1590,]   31   31   32   36   36   36   34   35   32    34 #>  [1591,]   30   30   31   35   35   35   33   34   31    33 #>  [1592,]   31   31   32   36   36   36   34   36   32    34 #>  [1593,]   31   31   32   36   36   36   34   36   32    34 #>  [1594,]   30   30   31   35   35   35   33   34   31    33 #>  [1595,]   31   31   32   36   36   36   34   36   32    34 #>  [1596,]   30   30   31   35   35   35   33   34   31    33 #>  [1597,]   30   30   31   35   35   35   33   34   31    33 #>  [1598,]   30   30   31   35   35   35   33   34   31    33 #>  [1599,]   30   30   31   35   35   35   33   34   31    33 #>  [1600,]   30   30   31   35   35   35   33   34   31    33 #>  [1601,]   33   32   33   37   37   37   35   37   33    35 #>  [1602,]   33   32   34   38   38   38   36   38   34    36 #>  [1603,]   32   32   33   37   37   37   35   37   33    35 #>  [1604,]   33   32   33   37   37   37   35   37   33    35 #>  [1605,]   33   32   33   37   37   37   35   37   33    35 #>  [1606,]   33   32   33   37   37   37   35   37   33    35 #>  [1607,]   33   32   33   37   37   37   35   37   33    35 #>  [1608,]   33   32   33   37   37   37   35   37   33    35 #>  [1609,]   33   32   34   38   38   38   36   38   34    36 #>  [1610,]   33   32   34   38   38   38   36   38   34    36 #>  [1611,]   32   32   33   37   37   37   35   37   33    35 #>  [1612,]   32   32   34   38   38   38   36   38   34    36 #>  [1613,]   33   32   34   38   38   38   36   38   34    36 #>  [1614,]   32   32   33   37   37   37   35   37   33    35 #>  [1615,]   33   32   33   37   37   37   35   37   33    35 #>  [1616,]   33   32   33   37   37   37   35   37   33    35 #>  [1617,]   33   32   34   38   38   38   36   38   34    36 #>  [1618,]   33   32   33   37   37   37   35   37   33    35 #>  [1619,]   32   32   33   37   37   37   35   37   33    35 #>  [1620,]   32   32   33   37   37   37   35   37   33    35 #>  [1621,]   33   32   34   38   38   38   36   38   34    36 #>  [1622,]   32   32   33   37   37   37   35   37   33    35 #>  [1623,]   33   32   33   37   37   37   35   37   33    35 #>  [1624,]   32   32   34   38   38   38   36   38   34    36 #>  [1625,]   33   32   33   37   37   37   35   37   33    35 #>  [1626,]   32   32   33   37   37   37   35   37   33    35 #>  [1627,]   33   32   33   37   37   37   35   37   33    35 #>  [1628,]   33   32   33   37   37   37   35   37   33    35 #>  [1629,]   32   32   34   38   38   38   36   38   34    36 #>  [1630,]   32   32   33   37   37   37   35   37   33    35 #>  [1631,]   33   32   34   38   38   38   36   38   34    36 #>  [1632,]   32   32   34   38   38   38   36   38   34    36 #>  [1633,]   33   32   34   38   38   38   36   38   34    36 #>  [1634,]   32   32   33   37   37   37   35   37   33    35 #>  [1635,]   33   32   33   37   37   37   35   37   33    35 #>  [1636,]   32   32   33   37   37   37   35   37   33    35 #>  [1637,]   33   32   33   37   37   37   35   37   33    35 #>  [1638,]   33   32   33   37   37   37   35   37   33    35 #>  [1639,]   33   32   33   37   37   37   35   37   33    35 #>  [1640,]   32   32   34   38   38   38   36   38   34    36 #>  [1641,]   32   32   33   37   37   37   35   37   33    35 #>  [1642,]   32   32   33   37   37   37   35   37   33    35 #>  [1643,]   33   32   33   37   37   37   35   37   33    35 #>  [1644,]   33   32   33   37   37   37   35   37   33    35 #>  [1645,]   33   32   33   37   37   37   35   37   33    35 #>  [1646,]   33   32   33   37   37   37   35   37   33    35 #>  [1647,]   33   32   33   37   37   37   35   37   33    35 #>  [1648,]   32   32   33   37   37   37   35   37   33    35 #>  [1649,]   33   32   33   37   37   37   35   37   33    35 #>  [1650,]   33   32   33   37   37   37   35   37   33    35 #>  [1651,]   32   32   33   37   37   37   35   37   33    35 #>  [1652,]   33   32   33   37   37   37   35   37   33    35 #>  [1653,]   33   32   34   38   38   38   36   38   34    36 #>  [1654,]   32   32   33   37   37   37   35   37   33    35 #>  [1655,]   33   32   33   37   37   37   35   37   33    35 #>  [1656,]   33   32   33   37   37   37   35   37   33    35 #>  [1657,]   33   32   33   37   37   37   35   37   33    35 #>  [1658,]   33   32   33   37   37   37   35   37   33    35 #>  [1659,]   33   32   33   37   37   37   35   37   33    35 #>  [1660,]   32   32   34   38   38   38   36   38   34    36 #>  [1661,]   33   32   34   38   38   38   36   38   34    36 #>  [1662,]   32   32   33   37   37   37   35   37   33    35 #>  [1663,]   32   32   34   38   38   38   36   38   34    36 #>  [1664,]   33   32   33   37   37   37   35   37   33    35 #>  [1665,]   33   32   33   37   37   37   35   37   33    35 #>  [1666,]   32   32   33   37   37   37   35   37   33    35 #>  [1667,]   32   32   33   37   37   37   35   37   33    35 #>  [1668,]   32   32   33   37   37   37   35   37   33    35 #>  [1669,]   32   32   33   37   37   37   35   37   33    35 #>  [1670,]   33   32   34   38   38   38   36   38   34    36 #>  [1671,]   33   32   33   37   37   37   35   37   33    35 #>  [1672,]   33   32   33   37   37   37   35   37   33    35 #>  [1673,]   33   32   33   37   37   37   35   37   33    35 #>  [1674,]   33   32   33   37   37   37   35   37   33    35 #>  [1675,]   33   32   34   38   38   38   36   38   34    36 #>  [1676,]   33   32   33   37   37   37   35   37   33    35 #>  [1677,]   33   32   33   37   37   37   35   37   33    35 #>  [1678,]   32   32   33   37   37   37   35   37   33    35 #>  [1679,]   33   32   33   37   37   37   35   37   33    35 #>  [1680,]   32   32   34   38   38   38   36   38   34    36 #>  [1681,]   32   32   34   38   38   38   36   38   34    36 #>  [1682,]   33   32   33   37   37   37   35   37   33    35 #>  [1683,]   32   32   34   38   38   38   36   38   34    36 #>  [1684,]   33   32   33   37   37   37   35   37   33    35 #>  [1685,]   33   32   33   37   37   37   35   37   33    35 #>  [1686,]   33   32   34   38   38   38   36   38   34    36 #>  [1687,]   33   32   33   37   37   37   35   37   33    35 #>  [1688,]   33   32   33   37   37   37   35   37   33    35 #>  [1689,]   32   32   33   37   37   37   35   37   33    35 #>  [1690,]   33   32   33   37   37   37   35   37   33    35 #>  [1691,]   32   32   33   37   37   37   35   37   33    35 #>  [1692,]   33   32   33   37   37   37   35   37   33    35 #>  [1693,]   32   32   33   37   37   37   35   37   33    35 #>  [1694,]   33   32   33   37   37   37   35   37   33    35 #>  [1695,]   33   32   33   37   37   37   35   37   33    35 #>  [1696,]   33   32   33   37   37   37   35   37   33    35 #>  [1697,]   33   32   33   37   37   37   35   37   33    35 #>  [1698,]   32   32   33   37   37   37   35   37   33    35 #>  [1699,]   32   32   33   37   37   37   35   37   33    35 #>  [1700,]   33   32   33   37   37   37   35   37   33    35 #>  [1701,]   35   35   36   40   40   40   39   41   37    38 #>  [1702,]   34   33   35   39   39   39   37   39   35    39 #>  [1703,]   34   33   35   39   39   39   37   39   35    39 #>  [1704,]   34   33   35   39   39   39   37   39   35    40 #>  [1705,]   35   35   36   40   40   40   39   41   37    38 #>  [1706,]   34   33   35   39   39   39   37   39   35    40 #>  [1707,]   34   33   35   39   39   39   37   39   35    39 #>  [1708,]   34   33   35   39   39   39   37   39   35    40 #>  [1709,]   34   33   35   39   39   39   37   39   35    40 #>  [1710,]   34   33   35   39   39   39   37   39   35    39 #>  [1711,]   34   33   35   39   39   39   37   39   35    40 #>  [1712,]   34   33   35   39   39   39   37   39   35    40 #>  [1713,]   34   33   35   39   39   39   37   39   35    39 #>  [1714,]   35   35   36   40   40   40   39   41   37    38 #>  [1715,]   35   34   36   40   40   40   39   41   37    38 #>  [1716,]   34   33   35   39   39   39   37   39   35    39 #>  [1717,]   34   33   35   39   39   39   37   39   35    39 #>  [1718,]   35   35   36   40   40   40   38   40   36    37 #>  [1719,]   34   33   35   39   39   39   37   39   35    39 #>  [1720,]   34   33   35   39   39   39   37   39   35    40 #>  [1721,]   34   33   35   39   39   39   37   39   35    39 #>  [1722,]   34   33   35   39   39   39   37   39   35    39 #>  [1723,]   34   33   35   39   39   39   37   39   35    39 #>  [1724,]   34   33   35   39   39   39   37   39   35    39 #>  [1725,]   34   33   35   39   39   39   37   39   35    39 #>  [1726,]   35   35   36   40   40   40   39   41   37    38 #>  [1727,]   35   35   36   40   40   40   39   41   37    38 #>  [1728,]   34   33   35   39   39   39   37   39   35    40 #>  [1729,]   34   33   35   39   39   39   37   39   35    39 #>  [1730,]   34   33   35   39   39   39   37   39   35    39 #>  [1731,]   34   33   35   39   39   39   37   39   35    39 #>  [1732,]   35   35   36   40   40   40   38   40   36    37 #>  [1733,]   34   33   35   39   39   39   37   39   35    40 #>  [1734,]   34   33   35   39   39   39   37   39   35    39 #>  [1735,]   34   33   35   39   39   39   37   39   35    39 #>  [1736,]   34   33   35   39   39   39   37   39   35    39 #>  [1737,]   34   33   35   39   39   39   37   39   35    39 #>  [1738,]   34   33   35   39   39   39   37   39   35    40 #>  [1739,]   34   33   35   39   39   39   37   39   35    39 #>  [1740,]   34   33   35   39   39   39   37   39   35    39 #>  [1741,]   34   33   35   39   39   39   37   39   35    40 #>  [1742,]   34   33   35   39   39   39   37   39   35    40 #>  [1743,]   35   34   36   40   40   40   39   41   37    38 #>  [1744,]   34   33   35   39   39   39   37   39   35    39 #>  [1745,]   34   33   35   39   39   39   37   39   35    40 #>  [1746,]   34   33   35   39   39   39   37   39   35    40 #>  [1747,]   34   33   35   39   39   39   37   39   35    39 #>  [1748,]   34   33   35   39   39   39   37   39   35    39 #>  [1749,]   34   33   35   39   39   39   37   39   35    39 #>  [1750,]   34   33   35   39   39   39   37   39   35    40 #>  [1751,]   34   33   35   39   39   39   37   39   35    40 #>  [1752,]   34   33   35   39   39   39   37   39   35    40 #>  [1753,]   34   33   35   39   39   39   37   39   35    40 #>  [1754,]   34   33   35   39   39   39   37   39   35    39 #>  [1755,]   34   33   35   39   39   39   37   39   35    40 #>  [1756,]   34   33   35   39   39   39   37   39   35    40 #>  [1757,]   34   33   35   39   39   39   37   39   35    40 #>  [1758,]   35   35   36   40   40   40   39   41   37    38 #>  [1759,]   35   35   36   40   40   40   38   40   36    37 #>  [1760,]   34   33   35   39   39   39   37   39   35    40 #>  [1761,]   35   35   36   40   40   40   39   41   37    38 #>  [1762,]   34   33   35   39   39   39   37   39   35    39 #>  [1763,]   34   33   35   39   39   39   37   39   35    40 #>  [1764,]   34   33   35   39   39   39   37   39   35    40 #>  [1765,]   34   33   35   39   39   39   37   39   35    40 #>  [1766,]   35   35   36   40   40   40   39   41   37    38 #>  [1767,]   34   33   35   39   39   39   37   39   35    40 #>  [1768,]   34   33   35   39   39   39   37   39   35    40 #>  [1769,]   34   33   35   39   39   39   37   39   35    40 #>  [1770,]   35   34   36   40   40   40   38   40   36    37 #>  [1771,]   35   35   36   40   40   40   39   41   37    38 #>  [1772,]   34   33   35   39   39   39   37   39   35    40 #>  [1773,]   34   33   35   39   39   39   37   39   35    40 #>  [1774,]   34   33   35   39   39   39   37   39   35    40 #>  [1775,]   35   34   36   40   40   40   39   41   37    38 #>  [1776,]   34   33   35   39   39   39   37   39   35    40 #>  [1777,]   34   33   35   39   39   39   37   39   35    39 #>  [1778,]   34   33   35   39   39   39   37   39   35    40 #>  [1779,]   35   34   36   40   40   40   38   40   36    37 #>  [1780,]   34   33   35   39   39   39   37   39   35    39 #>  [1781,]   34   33   35   39   39   39   37   39   35    40 #>  [1782,]   34   33   35   39   39   39   37   39   35    40 #>  [1783,]   34   33   35   39   39   39   37   39   35    39 #>  [1784,]   34   33   35   39   39   39   37   39   35    40 #>  [1785,]   34   33   35   39   39   39   37   39   35    39 #>  [1786,]   34   33   35   39   39   39   37   39   35    39 #>  [1787,]   35   35   36   40   40   40   39   41   37    38 #>  [1788,]   34   33   35   39   39   39   37   39   35    40 #>  [1789,]   34   33   35   39   39   39   37   39   35    40 #>  [1790,]   34   33   35   39   39   39   37   39   35    40 #>  [1791,]   35   35   36   40   40   40   39   41   37    38 #>  [1792,]   34   33   35   39   39   39   37   39   35    40 #>  [1793,]   34   33   35   39   39   39   37   39   35    39 #>  [1794,]   34   33   35   39   39   39   37   39   35    40 #>  [1795,]   35   34   36   40   40   40   38   40   36    37 #>  [1796,]   34   33   35   39   39   39   37   39   35    40 #>  [1797,]   34   33   35   39   39   39   37   39   35    40 #>  [1798,]   34   33   35   39   39   39   37   39   35    39 #>  [1799,]   34   33   35   39   39   39   37   39   35    40 #>  [1800,]   35   34   36   40   40   40   38   40   36    37 #>  [1801,]   37   37   38   42   42   42   41   43   39    41 #>  [1802,]   37   37   38   42   42   42   41   43   39    41 #>  [1803,]   36   36   37   41   41   41   40   42   38    41 #>  [1804,]   37   37   38   42   42   42   41   43   39    41 #>  [1805,]   37   37   38   42   42   42   41   43   39    41 #>  [1806,]   37   37   38   42   42   42   41   43   39    41 #>  [1807,]   37   37   38   42   42   42   41   43   39    41 #>  [1808,]   37   37   38   42   42   42   41   43   39    41 #>  [1809,]   37   37   38   42   42   42   41   43   39    41 #>  [1810,]   37   37   38   42   42   42   41   43   39    41 #>  [1811,]   36   36   37   41   41   41   40   42   38    41 #>  [1812,]   36   36   37   41   41   41   40   42   38    41 #>  [1813,]   37   37   38   42   42   42   41   43   39    41 #>  [1814,]   36   36   37   41   41   41   40   42   38    41 #>  [1815,]   37   37   38   42   42   42   41   43   39    41 #>  [1816,]   37   37   38   42   42   42   41   43   39    41 #>  [1817,]   37   37   38   42   42   42   41   43   39    41 #>  [1818,]   37   37   38   42   42   42   41   43   39    41 #>  [1819,]   36   36   37   41   41   41   40   42   38    41 #>  [1820,]   36   36   37   41   41   41   40   42   38    41 #>  [1821,]   37   37   38   42   42   42   41   43   39    41 #>  [1822,]   36   36   37   41   41   41   40   42   38    41 #>  [1823,]   37   37   38   42   42   42   41   43   39    41 #>  [1824,]   37   37   38   42   42   42   41   43   39    41 #>  [1825,]   37   37   38   42   42   42   41   43   39    41 #>  [1826,]   36   36   37   41   41   41   40   42   38    41 #>  [1827,]   37   37   38   42   42   42   41   43   39    41 #>  [1828,]   37   37   38   42   42   42   41   43   39    41 #>  [1829,]   36   36   37   41   41   41   40   42   38    41 #>  [1830,]   37   37   38   42   42   42   41   43   39    41 #>  [1831,]   37   37   38   42   42   42   41   43   39    41 #>  [1832,]   36   36   37   41   41   41   40   42   38    41 #>  [1833,]   37   37   38   42   42   42   41   43   39    41 #>  [1834,]   37   37   38   42   42   42   41   43   39    41 #>  [1835,]   37   37   38   42   42   42   41   43   39    41 #>  [1836,]   36   36   37   41   41   41   40   42   38    41 #>  [1837,]   37   37   38   42   42   42   41   43   39    41 #>  [1838,]   37   37   38   42   42   42   41   43   39    41 #>  [1839,]   37   37   38   42   42   42   41   43   39    41 #>  [1840,]   36   36   37   41   41   41   40   42   38    41 #>  [1841,]   36   36   37   41   41   41   40   42   38    41 #>  [1842,]   36   36   37   41   41   41   40   42   38    41 #>  [1843,]   37   37   38   42   42   42   41   43   39    41 #>  [1844,]   37   37   38   42   42   42   41   43   39    41 #>  [1845,]   37   37   38   42   42   42   41   43   39    41 #>  [1846,]   37   37   38   42   42   42   41   43   39    41 #>  [1847,]   37   37   38   42   42   42   41   43   39    41 #>  [1848,]   36   36   37   41   41   41   40   42   38    41 #>  [1849,]   37   37   38   42   42   42   41   43   39    41 #>  [1850,]   37   37   38   42   42   42   41   43   39    41 #>  [1851,]   36   36   37   41   41   41   40   42   38    41 #>  [1852,]   37   37   38   42   42   42   41   43   39    41 #>  [1853,]   37   37   38   42   42   42   41   43   39    41 #>  [1854,]   36   36   37   41   41   41   40   42   38    41 #>  [1855,]   37   37   38   42   42   42   41   43   39    41 #>  [1856,]   37   37   38   42   42   42   41   43   39    41 #>  [1857,]   37   37   38   42   42   42   41   43   39    41 #>  [1858,]   37   37   38   42   42   42   41   43   39    41 #>  [1859,]   37   37   38   42   42   42   41   43   39    41 #>  [1860,]   36   36   37   41   41   41   40   42   38    41 #>  [1861,]   37   37   38   42   42   42   41   43   39    41 #>  [1862,]   36   36   37   41   41   41   40   42   38    41 #>  [1863,]   36   36   37   41   41   41   40   42   38    41 #>  [1864,]   37   37   38   42   42   42   41   43   39    41 #>  [1865,]   37   37   38   42   42   42   41   43   39    41 #>  [1866,]   36   36   37   41   41   41   40   42   38    41 #>  [1867,]   37   37   38   42   42   42   41   43   39    41 #>  [1868,]   36   36   37   41   41   41   40   42   38    41 #>  [1869,]   36   36   37   41   41   41   40   42   38    41 #>  [1870,]   37   37   38   42   42   42   41   43   39    41 #>  [1871,]   37   37   38   42   42   42   41   43   39    41 #>  [1872,]   37   37   38   42   42   42   41   43   39    41 #>  [1873,]   37   37   38   42   42   42   41   43   39    41 #>  [1874,]   37   37   38   42   42   42   41   43   39    41 #>  [1875,]   37   37   38   42   42   42   41   43   39    41 #>  [1876,]   37   37   38   42   42   42   41   43   39    41 #>  [1877,]   37   37   38   42   42   42   41   43   39    41 #>  [1878,]   37   37   38   42   42   42   41   43   39    41 #>  [1879,]   37   37   38   42   42   42   41   43   39    41 #>  [1880,]   36   36   37   41   41   41   40   42   38    41 #>  [1881,]   36   36   37   41   41   41   40   42   38    41 #>  [1882,]   37   37   38   42   42   42   41   43   39    41 #>  [1883,]   36   36   37   41   41   41   40   42   38    41 #>  [1884,]   37   37   38   42   42   42   41   43   39    41 #>  [1885,]   37   37   38   42   42   42   41   43   39    41 #>  [1886,]   37   37   38   42   42   42   41   43   39    41 #>  [1887,]   37   37   38   42   42   42   41   43   39    41 #>  [1888,]   37   37   38   42   42   42   41   43   39    41 #>  [1889,]   36   36   37   41   41   41   40   42   38    41 #>  [1890,]   37   37   38   42   42   42   41   43   39    41 #>  [1891,]   36   36   37   41   41   41   40   42   38    41 #>  [1892,]   37   37   38   42   42   42   41   43   39    41 #>  [1893,]   37   37   38   42   42   42   41   43   39    41 #>  [1894,]   37   37   38   42   42   42   41   43   39    41 #>  [1895,]   37   37   38   42   42   42   41   43   39    41 #>  [1896,]   37   37   38   42   42   42   41   43   39    41 #>  [1897,]   37   37   38   42   42   42   41   43   39    41 #>  [1898,]   37   37   38   42   42   42   41   43   39    41 #>  [1899,]   37   37   38   42   42   42   41   43   39    41 #>  [1900,]   37   37   38   42   42   42   41   43   39    41 #>  [1901,]   38   38   39   43   43   43   42   46   42    43 #>  [1902,]   39   39   40   44   44   44   43   44   40    42 #>  [1903,]   39   39   40   44   44   44   43   44   40    42 #>  [1904,]   38   38   39   43   43   43   42   45   41    43 #>  [1905,]   38   38   39   43   43   43   42   46   42    43 #>  [1906,]   39   39   40   44   44   44   43   44   40    42 #>  [1907,]   39   39   40   44   44   44   43   44   40    42 #>  [1908,]   38   38   39   43   43   43   42   45   41    43 #>  [1909,]   38   38   39   43   43   43   42   45   41    43 #>  [1910,]   38   38   39   43   43   43   42   46   42    43 #>  [1911,]   38   38   39   43   43   43   42   45   41    43 #>  [1912,]   39   39   40   44   44   44   43   44   40    42 #>  [1913,]   38   38   39   43   43   43   42   45   41    43 #>  [1914,]   38   38   39   43   43   43   42   46   42    43 #>  [1915,]   38   38   39   43   43   43   42   46   42    43 #>  [1916,]   38   38   39   43   43   43   42   46   42    43 #>  [1917,]   38   38   39   43   43   43   42   45   41    43 #>  [1918,]   39   39   40   44   44   44   43   44   40    42 #>  [1919,]   39   39   40   44   44   44   43   44   40    42 #>  [1920,]   39   39   40   44   44   44   43   44   40    42 #>  [1921,]   38   38   39   43   43   43   42   46   42    43 #>  [1922,]   38   38   39   43   43   43   42   45   41    43 #>  [1923,]   39   39   40   44   44   44   43   44   40    42 #>  [1924,]   38   38   39   43   43   43   42   46   42    43 #>  [1925,]   39   39   40   44   44   44   43   44   40    42 #>  [1926,]   38   38   39   43   43   43   42   46   42    43 #>  [1927,]   38   38   39   43   43   43   42   45   41    43 #>  [1928,]   39   39   40   44   44   44   43   44   40    42 #>  [1929,]   39   39   40   44   44   44   43   44   40    42 #>  [1930,]   38   38   39   43   43   43   42   46   42    43 #>  [1931,]   39   39   40   44   44   44   43   44   40    42 #>  [1932,]   39   39   40   44   44   44   43   44   40    42 #>  [1933,]   39   39   40   44   44   44   43   44   40    42 #>  [1934,]   39   39   40   44   44   44   43   44   40    42 #>  [1935,]   38   38   39   43   43   43   42   45   41    43 #>  [1936,]   38   38   39   43   43   43   42   46   42    43 #>  [1937,]   38   38   39   43   43   43   42   46   42    43 #>  [1938,]   38   38   39   43   43   43   42   46   42    43 #>  [1939,]   38   38   39   43   43   43   42   46   42    43 #>  [1940,]   39   39   40   44   44   44   43   44   40    42 #>  [1941,]   38   38   39   43   43   43   42   46   42    43 #>  [1942,]   39   39   40   44   44   44   43   44   40    42 #>  [1943,]   38   38   39   43   43   43   42   45   41    43 #>  [1944,]   38   38   39   43   43   43   42   45   41    43 #>  [1945,]   38   38   39   43   43   43   42   46   42    43 #>  [1946,]   38   38   39   43   43   43   42   46   42    43 #>  [1947,]   39   39   40   44   44   44   43   44   40    42 #>  [1948,]   39   39   40   44   44   44   43   44   40    42 #>  [1949,]   38   38   39   43   43   43   42   45   41    43 #>  [1950,]   39   39   40   44   44   44   43   44   40    42 #>  [1951,]   38   38   39   43   43   43   42   46   42    43 #>  [1952,]   38   38   39   43   43   43   42   45   41    43 #>  [1953,]   38   38   39   43   43   43   42   46   42    43 #>  [1954,]   38   38   39   43   43   43   42   46   42    43 #>  [1955,]   38   38   39   43   43   43   42   45   41    43 #>  [1956,]   39   39   40   44   44   44   43   44   40    42 #>  [1957,]   39   39   40   44   44   44   43   44   40    42 #>  [1958,]   38   38   39   43   43   43   42   45   41    43 #>  [1959,]   38   38   39   43   43   43   42   46   42    43 #>  [1960,]   39   39   40   44   44   44   43   44   40    42 #>  [1961,]   39   39   40   44   44   44   43   44   40    42 #>  [1962,]   38   38   39   43   43   43   42   46   42    43 #>  [1963,]   38   38   39   43   43   43   42   46   42    43 #>  [1964,]   39   39   40   44   44   44   43   44   40    42 #>  [1965,]   39   39   40   44   44   44   43   44   40    42 #>  [1966,]   38   38   39   43   43   43   42   45   41    43 #>  [1967,]   38   38   39   43   43   43   42   46   42    43 #>  [1968,]   38   38   39   43   43   43   42   46   42    43 #>  [1969,]   38   38   39   43   43   43   42   45   41    43 #>  [1970,]   39   39   40   44   44   44   43   44   40    42 #>  [1971,]   39   39   40   44   44   44   43   44   40    42 #>  [1972,]   38   38   39   43   43   43   42   46   42    43 #>  [1973,]   39   39   40   44   44   44   43   44   40    42 #>  [1974,]   38   38   39   43   43   43   42   46   42    43 #>  [1975,]   39   39   40   44   44   44   43   44   40    42 #>  [1976,]   38   38   39   43   43   43   42   46   42    43 #>  [1977,]   39   39   40   44   44   44   43   44   40    42 #>  [1978,]   39   39   40   44   44   44   43   44   40    42 #>  [1979,]   38   38   39   43   43   43   42   45   41    43 #>  [1980,]   38   38   39   43   43   43   42   45   41    43 #>  [1981,]   38   38   39   43   43   43   42   45   41    43 #>  [1982,]   38   38   39   43   43   43   42   45   41    43 #>  [1983,]   38   38   39   43   43   43   42   45   41    43 #>  [1984,]   39   39   40   44   44   44   43   44   40    42 #>  [1985,]   38   38   39   43   43   43   42   46   42    43 #>  [1986,]   39   39   40   44   44   44   43   44   40    42 #>  [1987,]   38   38   39   43   43   43   42   45   41    43 #>  [1988,]   38   38   39   43   43   43   42   45   41    43 #>  [1989,]   38   38   39   43   43   43   42   45   41    43 #>  [1990,]   38   38   39   43   43   43   42   45   41    43 #>  [1991,]   38   38   39   43   43   43   42   46   42    43 #>  [1992,]   38   38   39   43   43   43   42   45   41    43 #>  [1993,]   39   39   40   44   44   44   43   44   40    42 #>  [1994,]   39   39   40   44   44   44   43   44   40    42 #>  [1995,]   38   38   39   43   43   43   42   45   41    43 #>  [1996,]   38   38   39   43   43   43   42   46   42    43 #>  [1997,]   39   39   40   44   44   44   43   44   40    42 #>  [1998,]   39   39   40   44   44   44   43   44   40    42 #>  [1999,]   38   38   39   43   43   43   42   45   41    43 #>  [2000,]   39   39   40   44   44   44   43   44   40    42 #>  [2001,]   40   40   41   45   45   45   44   47   43    44 #>  [2002,]   40   40   41   45   45   45   44   47   43    44 #>  [2003,]   40   40   41   45   45   45   44   47   43    44 #>  [2004,]   40   40   41   45   45   45   44   47   43    44 #>  [2005,]   40   40   41   45   45   45   44   47   43    44 #>  [2006,]   40   40   41   45   45   45   44   47   43    44 #>  [2007,]   40   40   41   45   45   45   44   47   43    44 #>  [2008,]   40   40   41   45   45   45   44   47   43    44 #>  [2009,]   41   41   42   46   46   46   45   48   44    45 #>  [2010,]   40   40   41   45   45   45   44   47   43    44 #>  [2011,]   40   40   41   45   45   45   44   47   43    44 #>  [2012,]   40   40   41   45   45   45   44   47   43    44 #>  [2013,]   41   41   42   46   46   46   45   48   44    45 #>  [2014,]   40   40   41   45   45   45   44   47   43    44 #>  [2015,]   40   40   41   45   45   45   44   47   43    44 #>  [2016,]   40   40   41   45   45   45   44   47   43    44 #>  [2017,]   41   41   42   46   46   46   45   48   44    45 #>  [2018,]   41   41   42   46   46   46   45   48   44    45 #>  [2019,]   40   40   41   45   45   45   44   47   43    44 #>  [2020,]   40   40   41   45   45   45   44   47   43    44 #>  [2021,]   40   40   41   45   45   45   44   47   43    44 #>  [2022,]   40   40   41   45   45   45   44   47   43    44 #>  [2023,]   40   40   41   45   45   45   44   47   43    44 #>  [2024,]   40   40   41   45   45   45   44   47   43    44 #>  [2025,]   40   40   41   45   45   45   44   47   43    44 #>  [2026,]   40   40   41   45   45   45   44   47   43    44 #>  [2027,]   41   41   42   46   46   46   45   48   44    45 #>  [2028,]   40   40   41   45   45   45   44   47   43    44 #>  [2029,]   40   40   41   45   45   45   44   47   43    44 #>  [2030,]   40   40   41   45   45   45   44   47   43    44 #>  [2031,]   40   40   41   45   45   45   44   47   43    44 #>  [2032,]   40   40   41   45   45   45   44   47   43    44 #>  [2033,]   40   40   41   45   45   45   44   47   43    44 #>  [2034,]   40   40   41   45   45   45   44   47   43    44 #>  [2035,]   40   40   41   45   45   45   44   47   43    44 #>  [2036,]   40   40   41   45   45   45   44   47   43    44 #>  [2037,]   40   40   41   45   45   45   44   47   43    44 #>  [2038,]   40   40   41   45   45   45   44   47   43    44 #>  [2039,]   40   40   41   45   45   45   44   47   43    44 #>  [2040,]   40   40   41   45   45   45   44   47   43    44 #>  [2041,]   40   40   41   45   45   45   44   47   43    44 #>  [2042,]   41   41   42   46   46   46   45   48   44    45 #>  [2043,]   40   40   41   45   45   45   44   47   43    44 #>  [2044,]   40   40   41   45   45   45   44   47   43    44 #>  [2045,]   40   40   41   45   45   45   44   47   43    44 #>  [2046,]   40   40   41   45   45   45   44   47   43    44 #>  [2047,]   40   40   41   45   45   45   44   47   43    44 #>  [2048,]   40   40   41   45   45   45   44   47   43    44 #>  [2049,]   40   40   41   45   45   45   44   47   43    44 #>  [2050,]   40   40   41   45   45   45   44   47   43    44 #>  [2051,]   41   41   42   46   46   46   45   48   44    45 #>  [2052,]   40   40   41   45   45   45   44   47   43    44 #>  [2053,]   41   41   42   46   46   46   45   48   44    45 #>  [2054,]   40   40   41   45   45   45   44   47   43    44 #>  [2055,]   40   40   41   45   45   45   44   47   43    44 #>  [2056,]   40   40   41   45   45   45   44   47   43    44 #>  [2057,]   40   40   41   45   45   45   44   47   43    44 #>  [2058,]   40   40   41   45   45   45   44   47   43    44 #>  [2059,]   40   40   41   45   45   45   44   47   43    44 #>  [2060,]   40   40   41   45   45   45   44   47   43    44 #>  [2061,]   40   40   41   45   45   45   44   47   43    44 #>  [2062,]   40   40   41   45   45   45   44   47   43    44 #>  [2063,]   40   40   41   45   45   45   44   47   43    44 #>  [2064,]   40   40   41   45   45   45   44   47   43    44 #>  [2065,]   41   41   42   46   46   46   45   48   44    45 #>  [2066,]   40   40   41   45   45   45   44   47   43    44 #>  [2067,]   40   40   41   45   45   45   44   47   43    44 #>  [2068,]   40   40   41   45   45   45   44   47   43    44 #>  [2069,]   40   40   41   45   45   45   44   47   43    44 #>  [2070,]   40   40   41   45   45   45   44   47   43    44 #>  [2071,]   40   40   41   45   45   45   44   47   43    44 #>  [2072,]   40   40   41   45   45   45   44   47   43    44 #>  [2073,]   40   40   41   45   45   45   44   47   43    44 #>  [2074,]   40   40   41   45   45   45   44   47   43    44 #>  [2075,]   40   40   41   45   45   45   44   47   43    44 #>  [2076,]   40   40   41   45   45   45   44   47   43    44 #>  [2077,]   40   40   41   45   45   45   44   47   43    44 #>  [2078,]   40   40   41   45   45   45   44   47   43    44 #>  [2079,]   41   41   42   46   46   46   45   48   44    45 #>  [2080,]   40   40   41   45   45   45   44   47   43    44 #>  [2081,]   40   40   41   45   45   45   44   47   43    44 #>  [2082,]   41   41   42   46   46   46   45   48   44    45 #>  [2083,]   40   40   41   45   45   45   44   47   43    44 #>  [2084,]   41   41   42   46   46   46   45   48   44    45 #>  [2085,]   40   40   41   45   45   45   44   47   43    44 #>  [2086,]   40   40   41   45   45   45   44   47   43    44 #>  [2087,]   40   40   41   45   45   45   44   47   43    44 #>  [2088,]   40   40   41   45   45   45   44   47   43    44 #>  [2089,]   40   40   41   45   45   45   44   47   43    44 #>  [2090,]   40   40   41   45   45   45   44   47   43    44 #>  [2091,]   41   41   42   46   46   46   45   48   44    45 #>  [2092,]   40   40   41   45   45   45   44   47   43    44 #>  [2093,]   41   41   42   46   46   46   45   48   44    45 #>  [2094,]   41   41   42   46   46   46   45   48   44    45 #>  [2095,]   40   40   41   45   45   45   44   47   43    44 #>  [2096,]   40   40   41   45   45   45   44   47   43    44 #>  [2097,]   40   40   41   45   45   45   44   47   43    44 #>  [2098,]   40   40   41   45   45   45   44   47   43    44 #>  [2099,]   40   40   41   45   45   45   44   47   43    44 #>  [2100,]   40   40   41   45   45   45   44   47   43    44 #>  [2101,]   42   42   43   47   47   47   46   49   45    46 #>  [2102,]   42   42   43   47   47   47   46   49   45    46 #>  [2103,]   42   42   43   47   47   47   46   49   45    46 #>  [2104,]   43   43   43   47   47   47   46   49   45    46 #>  [2105,]   42   42   43   47   47   47   46   49   45    46 #>  [2106,]   42   42   43   47   47   47   46   49   45    46 #>  [2107,]   42   42   43   47   47   47   46   49   45    46 #>  [2108,]   42   42   43   48   48   48   47   50   46    47 #>  [2109,]   42   42   43   48   48   48   47   50   46    47 #>  [2110,]   42   42   43   47   47   47   46   49   45    46 #>  [2111,]   43   43   43   47   47   47   46   49   45    46 #>  [2112,]   43   43   43   48   48   48   47   50   46    47 #>  [2113,]   42   42   43   47   47   47   46   49   45    46 #>  [2114,]   43   43   43   47   47   47   46   49   45    46 #>  [2115,]   43   43   43   48   48   48   47   50   46    47 #>  [2116,]   42   42   43   47   47   47   46   49   45    46 #>  [2117,]   42   42   43   47   47   47   46   49   45    46 #>  [2118,]   42   42   43   47   47   47   46   49   45    46 #>  [2119,]   43   43   43   47   47   47   46   49   45    46 #>  [2120,]   42   42   43   47   47   47   46   49   45    46 #>  [2121,]   43   43   43   47   47   47   46   49   45    46 #>  [2122,]   42   42   43   47   47   47   46   49   45    46 #>  [2123,]   42   42   43   47   47   47   46   49   45    46 #>  [2124,]   42   42   43   47   47   47   46   49   45    46 #>  [2125,]   42   42   43   47   47   47   46   49   45    46 #>  [2126,]   42   42   43   48   48   48   47   50   46    47 #>  [2127,]   43   43   43   47   47   47   46   49   45    46 #>  [2128,]   42   42   43   47   47   47   46   49   45    46 #>  [2129,]   42   42   43   47   47   47   46   49   45    46 #>  [2130,]   42   42   43   47   47   47   46   49   45    46 #>  [2131,]   42   42   43   47   47   47   46   49   45    46 #>  [2132,]   42   42   43   47   47   47   46   49   45    46 #>  [2133,]   42   42   43   47   47   47   46   49   45    46 #>  [2134,]   42   42   43   47   47   47   46   49   45    46 #>  [2135,]   42   42   43   47   47   47   46   49   45    46 #>  [2136,]   42   42   43   47   47   47   46   49   45    46 #>  [2137,]   42   42   43   47   47   47   46   49   45    46 #>  [2138,]   43   43   43   47   47   47   46   49   45    46 #>  [2139,]   42   42   43   47   47   47   46   49   45    46 #>  [2140,]   42   42   43   47   47   47   46   49   45    46 #>  [2141,]   43   43   43   47   47   47   46   49   45    46 #>  [2142,]   43   43   43   47   47   47   46   49   45    46 #>  [2143,]   42   42   43   48   48   48   47   50   46    47 #>  [2144,]   42   42   43   47   47   47   46   49   45    46 #>  [2145,]   42   42   43   47   47   47   46   49   45    46 #>  [2146,]   42   42   43   48   48   48   47   50   46    47 #>  [2147,]   42   42   43   47   47   47   46   49   45    46 #>  [2148,]   43   43   43   47   47   47   46   49   45    46 #>  [2149,]   42   42   43   47   47   47   46   49   45    46 #>  [2150,]   42   42   43   47   47   47   46   49   45    46 #>  [2151,]   42   42   43   47   47   47   46   49   45    46 #>  [2152,]   42   42   43   47   47   47   46   49   45    46 #>  [2153,]   42   42   43   47   47   47   46   49   45    46 #>  [2154,]   42   42   43   47   47   47   46   49   45    46 #>  [2155,]   42   42   43   47   47   47   46   49   45    46 #>  [2156,]   42   42   43   48   48   48   47   50   46    47 #>  [2157,]   42   42   43   47   47   47   46   49   45    46 #>  [2158,]   42   42   43   47   47   47   46   49   45    46 #>  [2159,]   42   42   43   47   47   47   46   49   45    46 #>  [2160,]   42   42   43   47   47   47   46   49   45    46 #>  [2161,]   43   43   43   48   48   48   47   50   46    47 #>  [2162,]   42   42   43   47   47   47   46   49   45    46 #>  [2163,]   42   42   43   47   47   47   46   49   45    46 #>  [2164,]   42   42   43   48   48   48   47   50   46    47 #>  [2165,]   42   42   43   47   47   47   46   49   45    46 #>  [2166,]   42   42   43   47   47   47   46   49   45    46 #>  [2167,]   42   42   43   47   47   47   46   49   45    46 #>  [2168,]   42   42   43   47   47   47   46   49   45    46 #>  [2169,]   43   43   43   47   47   47   46   49   45    46 #>  [2170,]   42   42   43   47   47   47   46   49   45    46 #>  [2171,]   42   42   43   47   47   47   46   49   45    46 #>  [2172,]   42   42   43   47   47   47   46   49   45    46 #>  [2173,]   42   42   43   47   47   47   46   49   45    46 #>  [2174,]   43   43   43   47   47   47   46   49   45    46 #>  [2175,]   43   43   43   47   47   47   46   49   45    46 #>  [2176,]   42   42   43   48   48   48   47   50   46    47 #>  [2177,]   42   42   43   47   47   47   46   49   45    46 #>  [2178,]   42   42   43   47   47   47   46   49   45    46 #>  [2179,]   42   42   43   47   47   47   46   49   45    46 #>  [2180,]   42   42   43   47   47   47   46   49   45    46 #>  [2181,]   42   42   43   47   47   47   46   49   45    46 #>  [2182,]   43   43   43   47   47   47   46   49   45    46 #>  [2183,]   42   42   43   47   47   47   46   49   45    46 #>  [2184,]   42   42   43   47   47   47   46   49   45    46 #>  [2185,]   42   42   43   47   47   47   46   49   45    46 #>  [2186,]   42   42   43   47   47   47   46   49   45    46 #>  [2187,]   42   42   43   47   47   47   46   49   45    46 #>  [2188,]   42   42   43   47   47   47   46   49   45    46 #>  [2189,]   42   42   43   47   47   47   46   49   45    46 #>  [2190,]   42   42   43   47   47   47   46   49   45    46 #>  [2191,]   42   42   43   47   47   47   46   49   45    46 #>  [2192,]   43   43   43   47   47   47   46   49   45    46 #>  [2193,]   43   43   43   47   47   47   46   49   45    46 #>  [2194,]   42   42   43   48   48   48   47   50   46    47 #>  [2195,]   42   42   43   47   47   47   46   49   45    46 #>  [2196,]   43   43   43   47   47   47   46   49   45    46 #>  [2197,]   43   43   43   47   47   47   46   49   45    46 #>  [2198,]   42   42   43   47   47   47   46   49   45    46 #>  [2199,]   42   42   43   47   47   47   46   49   45    46 #>  [2200,]   42   42   43   47   47   47   46   49   45    46 #>  [2201,]   45   44   44   49   49   49   48   51   47    48 #>  [2202,]   45   44   44   49   49   49   48   51   47    48 #>  [2203,]   45   44   44   49   49   49   48   51   47    48 #>  [2204,]   45   44   45   50   50   50   49   52   48    49 #>  [2205,]   45   44   44   49   49   49   48   51   47    48 #>  [2206,]   45   44   44   49   49   49   48   51   47    48 #>  [2207,]   45   44   44   49   49   49   48   51   47    48 #>  [2208,]   45   44   44   49   49   49   48   51   47    48 #>  [2209,]   45   44   44   49   49   49   48   51   47    48 #>  [2210,]   44   44   44   49   49   49   48   51   47    48 #>  [2211,]   44   44   44   49   49   49   48   51   47    48 #>  [2212,]   45   44   45   50   50   50   49   52   48    49 #>  [2213,]   45   44   44   49   49   49   48   51   47    48 #>  [2214,]   44   44   45   50   50   50   49   52   48    49 #>  [2215,]   45   44   45   50   50   50   49   52   48    49 #>  [2216,]   45   44   44   49   49   49   48   51   47    48 #>  [2217,]   45   44   44   49   49   49   48   51   47    48 #>  [2218,]   45   44   44   49   49   49   48   51   47    48 #>  [2219,]   45   44   45   50   50   50   49   52   48    49 #>  [2220,]   45   44   44   49   49   49   48   51   47    48 #>  [2221,]   45   44   44   49   49   49   48   51   47    48 #>  [2222,]   45   44   44   49   49   49   48   51   47    48 #>  [2223,]   45   44   44   49   49   49   48   51   47    48 #>  [2224,]   45   44   44   49   49   49   48   51   47    48 #>  [2225,]   45   44   44   49   49   49   48   51   47    48 #>  [2226,]   45   44   44   49   49   49   48   51   47    48 #>  [2227,]   45   44   45   50   50   50   49   52   48    49 #>  [2228,]   45   44   44   49   49   49   48   51   47    48 #>  [2229,]   45   44   44   49   49   49   48   51   47    48 #>  [2230,]   45   44   44   49   49   49   48   51   47    48 #>  [2231,]   45   44   44   49   49   49   48   51   47    48 #>  [2232,]   45   44   44   49   49   49   48   51   47    48 #>  [2233,]   45   44   44   49   49   49   48   51   47    48 #>  [2234,]   45   44   44   49   49   49   48   51   47    48 #>  [2235,]   45   44   44   49   49   49   48   51   47    48 #>  [2236,]   45   44   44   49   49   49   48   51   47    48 #>  [2237,]   45   44   44   49   49   49   48   51   47    48 #>  [2238,]   45   44   45   50   50   50   49   52   48    49 #>  [2239,]   45   44   44   49   49   49   48   51   47    48 #>  [2240,]   44   44   44   49   49   49   48   51   47    48 #>  [2241,]   45   44   45   50   50   50   49   52   48    49 #>  [2242,]   45   44   45   50   50   50   49   52   48    49 #>  [2243,]   45   44   44   49   49   49   48   51   47    48 #>  [2244,]   45   44   44   49   49   49   48   51   47    48 #>  [2245,]   45   44   44   49   49   49   48   51   47    48 #>  [2246,]   45   44   44   49   49   49   48   51   47    48 #>  [2247,]   45   44   44   49   49   49   48   51   47    48 #>  [2248,]   44   44   45   50   50   50   49   52   48    49 #>  [2249,]   45   44   44   49   49   49   48   51   47    48 #>  [2250,]   45   44   44   49   49   49   48   51   47    48 #>  [2251,]   45   44   44   49   49   49   48   51   47    48 #>  [2252,]   45   44   44   49   49   49   48   51   47    48 #>  [2253,]   45   44   44   49   49   49   48   51   47    48 #>  [2254,]   45   44   44   49   49   49   48   51   47    48 #>  [2255,]   45   44   44   49   49   49   48   51   47    48 #>  [2256,]   45   44   44   49   49   49   48   51   47    48 #>  [2257,]   45   44   44   49   49   49   48   51   47    48 #>  [2258,]   45   44   44   49   49   49   48   51   47    48 #>  [2259,]   45   44   44   49   49   49   48   51   47    48 #>  [2260,]   45   44   44   49   49   49   48   51   47    48 #>  [2261,]   45   44   45   50   50   50   49   52   48    49 #>  [2262,]   45   44   44   49   49   49   48   51   47    48 #>  [2263,]   45   44   44   49   49   49   48   51   47    48 #>  [2264,]   45   44   44   49   49   49   48   51   47    48 #>  [2265,]   45   44   44   49   49   49   48   51   47    48 #>  [2266,]   45   44   44   49   49   49   48   51   47    48 #>  [2267,]   45   44   44   49   49   49   48   51   47    48 #>  [2268,]   45   44   44   49   49   49   48   51   47    48 #>  [2269,]   45   44   45   50   50   50   49   52   48    49 #>  [2270,]   44   44   44   49   49   49   48   51   47    48 #>  [2271,]   45   44   44   49   49   49   48   51   47    48 #>  [2272,]   45   44   44   49   49   49   48   51   47    48 #>  [2273,]   45   44   44   49   49   49   48   51   47    48 #>  [2274,]   45   44   45   50   50   50   49   52   48    49 #>  [2275,]   45   44   45   50   50   50   49   52   48    49 #>  [2276,]   45   44   44   49   49   49   48   51   47    48 #>  [2277,]   45   44   44   49   49   49   48   51   47    48 #>  [2278,]   45   44   44   49   49   49   48   51   47    48 #>  [2279,]   45   44   44   49   49   49   48   51   47    48 #>  [2280,]   45   44   44   49   49   49   48   51   47    48 #>  [2281,]   45   44   44   49   49   49   48   51   47    48 #>  [2282,]   45   44   45   50   50   50   49   52   48    49 #>  [2283,]   45   44   44   49   49   49   48   51   47    48 #>  [2284,]   45   44   44   49   49   49   48   51   47    48 #>  [2285,]   45   44   44   49   49   49   48   51   47    48 #>  [2286,]   45   44   44   49   49   49   48   51   47    48 #>  [2287,]   45   44   44   49   49   49   48   51   47    48 #>  [2288,]   45   44   44   49   49   49   48   51   47    48 #>  [2289,]   45   44   44   49   49   49   48   51   47    48 #>  [2290,]   45   44   44   49   49   49   48   51   47    48 #>  [2291,]   45   44   44   49   49   49   48   51   47    48 #>  [2292,]   45   44   45   50   50   50   49   52   48    49 #>  [2293,]   45   44   45   50   50   50   49   52   48    49 #>  [2294,]   45   44   44   49   49   49   48   51   47    48 #>  [2295,]   45   44   44   49   49   49   48   51   47    48 #>  [2296,]   45   44   45   50   50   50   49   52   48    49 #>  [2297,]   45   44   45   50   50   50   49   52   48    49 #>  [2298,]   45   44   44   49   49   49   48   51   47    48 #>  [2299,]   45   44   44   49   49   49   48   51   47    48 #>  [2300,]   45   44   44   49   49   49   48   51   47    48 #>  [2301,]   46   45   46   51   51   51   50   53   49    51 #>  [2302,]   46   45   46   51   51   51   50   53   49    51 #>  [2303,]   46   45   46   51   51   51   50   53   49    51 #>  [2304,]   47   47   48   53   52   52   51   54   50    50 #>  [2305,]   46   45   46   51   51   51   50   53   49    51 #>  [2306,]   47   47   48   53   52   52   51   54   50    50 #>  [2307,]   46   45   46   51   51   51   50   53   49    51 #>  [2308,]   46   45   46   51   51   51   50   53   49    51 #>  [2309,]   47   47   48   53   52   52   51   54   50    50 #>  [2310,]   47   47   48   53   52   52   51   54   50    50 #>  [2311,]   47   47   48   53   52   52   51   54   50    50 #>  [2312,]   47   46   47   52   52   52   51   54   50    50 #>  [2313,]   46   45   46   51   51   51   50   53   49    51 #>  [2314,]   47   47   48   53   52   52   51   54   50    50 #>  [2315,]   47   46   47   52   52   52   51   54   50    50 #>  [2316,]   46   45   46   51   51   51   50   53   49    51 #>  [2317,]   46   45   46   51   51   51   50   53   49    51 #>  [2318,]   47   47   48   53   52   52   51   54   50    50 #>  [2319,]   47   47   48   53   52   52   51   54   50    50 #>  [2320,]   46   45   46   51   51   51   50   53   49    51 #>  [2321,]   47   47   48   53   52   52   51   54   50    50 #>  [2322,]   46   45   46   51   51   51   50   53   49    51 #>  [2323,]   46   45   46   51   51   51   50   53   49    51 #>  [2324,]   46   45   46   51   51   51   50   53   49    51 #>  [2325,]   46   45   46   51   51   51   50   53   49    52 #>  [2326,]   47   47   48   53   52   52   51   54   50    50 #>  [2327,]   47   47   48   53   52   52   51   54   50    50 #>  [2328,]   46   45   46   51   51   51   50   53   49    51 #>  [2329,]   46   45   46   51   51   51   50   53   49    51 #>  [2330,]   47   47   48   53   52   52   51   54   50    50 #>  [2331,]   47   46   47   52   52   52   51   54   50    50 #>  [2332,]   47   47   48   53   52   52   51   54   50    50 #>  [2333,]   47   47   48   53   52   52   51   54   50    50 #>  [2334,]   46   45   46   51   51   51   50   53   49    51 #>  [2335,]   46   45   46   51   51   51   50   53   49    51 #>  [2336,]   47   47   48   53   52   52   51   54   50    50 #>  [2337,]   46   45   46   51   51   51   50   53   49    51 #>  [2338,]   47   47   48   53   52   52   51   54   50    50 #>  [2339,]   46   45   46   51   51   51   50   53   49    52 #>  [2340,]   46   45   46   51   51   51   50   53   49    51 #>  [2341,]   47   47   48   53   52   52   51   54   50    50 #>  [2342,]   47   46   47   52   52   52   51   54   50    50 #>  [2343,]   46   45   46   51   51   51   50   53   49    52 #>  [2344,]   46   45   46   51   51   51   50   53   49    51 #>  [2345,]   46   45   46   51   51   51   50   53   49    52 #>  [2346,]   46   45   46   51   51   51   50   53   49    51 #>  [2347,]   46   45   46   51   51   51   50   53   49    51 #>  [2348,]   47   46   47   52   52   52   51   54   50    50 #>  [2349,]   46   45   46   51   51   51   50   53   49    51 #>  [2350,]   46   45   46   51   51   51   50   53   49    51 #>  [2351,]   46   45   46   51   51   51   50   53   49    51 #>  [2352,]   47   47   48   53   52   52   51   54   50    50 #>  [2353,]   46   45   46   51   51   51   50   53   49    51 #>  [2354,]   46   45   46   51   51   51   50   53   49    51 #>  [2355,]   46   45   46   51   51   51   50   53   49    51 #>  [2356,]   46   45   46   51   51   51   50   53   49    51 #>  [2357,]   46   45   46   51   51   51   50   53   49    51 #>  [2358,]   47   47   48   53   52   52   51   54   50    50 #>  [2359,]   46   45   46   51   51   51   50   53   49    51 #>  [2360,]   47   47   48   53   52   52   51   54   50    50 #>  [2361,]   47   47   48   53   52   52   51   54   50    50 #>  [2362,]   47   47   48   53   52   52   51   54   50    50 #>  [2363,]   46   45   46   51   51   51   50   53   49    51 #>  [2364,]   47   47   48   53   52   52   51   54   50    50 #>  [2365,]   46   45   46   51   51   51   50   53   49    51 #>  [2366,]   46   45   46   51   51   51   50   53   49    51 #>  [2367,]   47   47   48   53   52   52   51   54   50    50 #>  [2368,]   47   47   48   53   52   52   51   54   50    50 #>  [2369,]   47   47   48   53   52   52   51   54   50    50 #>  [2370,]   46   45   46   51   51   51   50   53   49    51 #>  [2371,]   46   45   46   51   51   51   50   53   49    51 #>  [2372,]   46   45   46   51   51   51   50   53   49    51 #>  [2373,]   47   47   48   53   52   52   51   54   50    50 #>  [2374,]   47   47   48   53   52   52   51   54   50    50 #>  [2375,]   47   46   47   52   52   52   51   54   50    50 #>  [2376,]   46   45   46   51   51   51   50   53   49    51 #>  [2377,]   46   45   46   51   51   51   50   53   49    52 #>  [2378,]   46   45   46   51   51   51   50   53   49    51 #>  [2379,]   46   45   46   51   51   51   50   53   49    51 #>  [2380,]   46   45   46   51   51   51   50   53   49    51 #>  [2381,]   46   45   46   51   51   51   50   53   49    51 #>  [2382,]   47   47   48   53   52   52   51   54   50    50 #>  [2383,]   46   45   46   51   51   51   50   53   49    51 #>  [2384,]   46   45   46   51   51   51   50   53   49    51 #>  [2385,]   47   47   48   53   52   52   51   54   50    50 #>  [2386,]   46   45   46   51   51   51   50   53   49    51 #>  [2387,]   46   45   46   51   51   51   50   53   49    51 #>  [2388,]   46   45   46   51   51   51   50   53   49    51 #>  [2389,]   46   45   46   51   51   51   50   53   49    51 #>  [2390,]   46   45   46   51   51   51   50   53   49    51 #>  [2391,]   46   45   46   51   51   51   50   53   49    51 #>  [2392,]   47   47   48   53   52   52   51   54   50    50 #>  [2393,]   47   47   48   53   52   52   51   54   50    50 #>  [2394,]   46   45   46   51   51   51   50   53   49    51 #>  [2395,]   46   45   46   51   51   51   50   53   49    51 #>  [2396,]   47   47   48   53   52   52   51   54   50    50 #>  [2397,]   47   47   48   53   52   52   51   54   50    50 #>  [2398,]   46   45   46   51   51   51   50   53   49    51 #>  [2399,]   47   47   48   53   52   52   51   54   50    50 #>  [2400,]   46   45   46   51   51   51   50   53   49    51 #>  [2401,]   49   49   50   55   53   53   52   55   51    53 #>  [2402,]   49   49   50   55   53   53   52   55   51    53 #>  [2403,]   48   48   49   54   55   55   54   57   53    54 #>  [2404,]   49   49   50   55   53   53   52   55   51    53 #>  [2405,]   49   49   50   55   53   53   52   55   51    53 #>  [2406,]   48   48   49   54   54   54   53   56   52    54 #>  [2407,]   48   48   49   54   54   54   53   56   52    54 #>  [2408,]   49   49   50   55   53   53   52   55   51    53 #>  [2409,]   49   49   50   55   53   53   52   55   51    53 #>  [2410,]   49   49   50   55   53   53   52   55   51    53 #>  [2411,]   49   49   50   55   53   53   52   55   51    53 #>  [2412,]   49   49   50   55   53   53   52   55   51    53 #>  [2413,]   49   49   50   55   53   53   52   55   51    53 #>  [2414,]   49   49   50   55   53   53   52   55   51    53 #>  [2415,]   49   49   50   55   53   53   52   55   51    53 #>  [2416,]   49   49   50   55   53   53   52   55   51    53 #>  [2417,]   49   49   50   55   53   53   52   55   51    53 #>  [2418,]   49   49   50   55   53   53   52   55   51    53 #>  [2419,]   49   49   50   55   53   53   52   55   51    53 #>  [2420,]   48   48   49   54   54   54   53   56   52    54 #>  [2421,]   48   48   49   54   54   54   53   56   52    54 #>  [2422,]   49   49   50   55   53   53   52   55   51    53 #>  [2423,]   48   48   49   54   55   55   54   57   53    54 #>  [2424,]   49   49   50   55   53   53   52   55   51    53 #>  [2425,]   48   48   49   54   54   54   53   56   52    54 #>  [2426,]   49   49   50   55   53   53   52   55   51    53 #>  [2427,]   49   49   50   55   53   53   52   55   51    53 #>  [2428,]   49   49   50   55   53   53   52   55   51    53 #>  [2429,]   49   49   50   55   53   53   52   55   51    53 #>  [2430,]   49   49   50   55   53   53   52   55   51    53 #>  [2431,]   49   49   50   55   53   53   52   55   51    53 #>  [2432,]   49   49   50   55   53   53   52   55   51    53 #>  [2433,]   49   49   50   55   53   53   52   55   51    53 #>  [2434,]   48   48   49   54   55   56   55   58   53    54 #>  [2435,]   48   48   49   54   54   54   53   56   52    54 #>  [2436,]   49   49   50   55   53   53   52   55   51    53 #>  [2437,]   48   48   49   54   55   55   54   57   53    54 #>  [2438,]   49   49   50   55   53   53   52   55   51    53 #>  [2439,]   49   49   50   55   53   53   52   55   51    53 #>  [2440,]   49   49   50   55   53   53   52   55   51    53 #>  [2441,]   49   49   50   55   53   53   52   55   51    53 #>  [2442,]   48   48   49   54   54   54   53   56   52    54 #>  [2443,]   49   49   50   55   53   53   52   55   51    53 #>  [2444,]   48   48   49   54   54   54   53   56   52    54 #>  [2445,]   49   49   50   55   53   53   52   55   51    53 #>  [2446,]   49   49   50   55   53   53   52   55   51    53 #>  [2447,]   49   49   50   55   53   53   52   55   51    53 #>  [2448,]   49   49   50   55   53   53   52   55   51    53 #>  [2449,]   49   49   50   55   53   53   52   55   51    53 #>  [2450,]   48   48   49   54   55   56   55   58   53    54 #>  [2451,]   49   49   50   55   53   53   52   55   51    53 #>  [2452,]   49   49   50   55   53   53   52   55   51    53 #>  [2453,]   48   48   49   54   54   54   53   56   52    54 #>  [2454,]   48   48   49   54   55   56   55   58   53    54 #>  [2455,]   48   48   49   54   55   55   54   57   53    54 #>  [2456,]   48   48   49   54   54   54   53   56   52    54 #>  [2457,]   48   48   49   54   55   55   54   57   53    54 #>  [2458,]   49   49   50   55   53   53   52   55   51    53 #>  [2459,]   49   49   50   55   53   53   52   55   51    53 #>  [2460,]   49   49   50   55   53   53   52   55   51    53 #>  [2461,]   49   49   50   55   53   53   52   55   51    53 #>  [2462,]   49   49   50   55   53   53   52   55   51    53 #>  [2463,]   49   49   50   55   53   53   52   55   51    53 #>  [2464,]   48   48   49   54   55   56   55   58   53    54 #>  [2465,]   48   48   49   54   54   54   53   56   52    54 #>  [2466,]   49   49   50   55   53   53   52   55   51    53 #>  [2467,]   49   49   50   55   53   53   52   55   51    53 #>  [2468,]   49   49   50   55   53   53   52   55   51    53 #>  [2469,]   49   49   50   55   53   53   52   55   51    53 #>  [2470,]   49   49   50   55   53   53   52   55   51    53 #>  [2471,]   49   49   50   55   53   53   52   55   51    53 #>  [2472,]   49   49   50   55   53   53   52   55   51    53 #>  [2473,]   48   48   49   54   54   54   53   56   52    54 #>  [2474,]   48   48   49   54   54   54   53   56   52    54 #>  [2475,]   49   49   50   55   53   53   52   55   51    53 #>  [2476,]   49   49   50   55   53   53   52   55   51    53 #>  [2477,]   49   49   50   55   53   53   52   55   51    53 #>  [2478,]   49   49   50   55   53   53   52   55   51    53 #>  [2479,]   49   49   50   55   53   53   52   55   51    53 #>  [2480,]   48   48   49   54   54   54   53   56   52    54 #>  [2481,]   48   48   49   54   55   56   55   58   53    54 #>  [2482,]   48   48   49   54   54   54   53   56   52    54 #>  [2483,]   49   49   50   55   53   53   52   55   51    53 #>  [2484,]   48   48   49   54   54   54   53   56   52    54 #>  [2485,]   48   48   49   54   54   54   53   56   52    54 #>  [2486,]   48   48   49   54   54   54   53   56   52    54 #>  [2487,]   49   49   50   55   53   53   52   55   51    53 #>  [2488,]   48   48   49   54   55   56   55   58   53    54 #>  [2489,]   48   48   49   54   54   54   53   56   52    54 #>  [2490,]   49   49   50   55   53   53   52   55   51    53 #>  [2491,]   49   49   50   55   53   53   52   55   51    53 #>  [2492,]   49   49   50   55   53   53   52   55   51    53 #>  [2493,]   49   49   50   55   53   53   52   55   51    53 #>  [2494,]   48   48   49   54   54   54   53   56   52    54 #>  [2495,]   49   49   50   55   53   53   52   55   51    53 #>  [2496,]   49   49   50   55   53   53   52   55   51    53 #>  [2497,]   48   48   49   54   55   55   54   57   53    54 #>  [2498,]   48   48   49   54   55   55   54   57   53    54 #>  [2499,]   48   48   49   54   54   54   53   56   52    54 #>  [2500,]   49   49   50   55   53   53   52   55   51    53 #>  [2501,]   50   50   51   56   56   57   56   59   54    55 #>  [2502,]   50   50   51   56   56   57   56   59   54    55 #>  [2503,]   50   50   51   56   56   57   56   59   54    55 #>  [2504,]   51   51   52   57   57   58   57   60   55    56 #>  [2505,]   50   50   51   56   56   57   56   59   54    55 #>  [2506,]   50   50   51   56   56   57   56   59   54    55 #>  [2507,]   50   50   51   56   56   57   56   59   54    55 #>  [2508,]   50   50   51   56   56   57   56   59   54    55 #>  [2509,]   50   50   51   56   56   57   56   59   54    55 #>  [2510,]   50   50   51   56   56   57   56   59   54    55 #>  [2511,]   50   50   51   56   56   57   56   59   54    55 #>  [2512,]   50   50   51   56   56   57   56   59   54    55 #>  [2513,]   50   50   51   56   56   57   56   59   54    55 #>  [2514,]   51   51   52   57   57   58   57   60   55    56 #>  [2515,]   50   50   51   56   56   57   56   59   54    55 #>  [2516,]   50   50   51   56   56   57   56   59   54    55 #>  [2517,]   50   50   51   56   56   57   56   59   54    55 #>  [2518,]   50   50   51   56   56   57   56   59   54    55 #>  [2519,]   50   50   51   56   56   57   56   59   54    55 #>  [2520,]   50   50   51   56   56   57   56   59   54    55 #>  [2521,]   50   50   51   56   56   57   56   59   54    55 #>  [2522,]   50   50   51   56   56   57   56   59   54    55 #>  [2523,]   50   50   51   56   56   57   56   59   54    55 #>  [2524,]   50   50   51   56   56   57   56   59   54    55 #>  [2525,]   50   50   51   56   56   57   56   59   54    55 #>  [2526,]   50   50   51   56   56   57   56   59   54    55 #>  [2527,]   51   51   52   57   57   58   57   60   55    56 #>  [2528,]   50   50   51   56   56   57   56   59   54    55 #>  [2529,]   50   50   51   56   56   57   56   59   54    55 #>  [2530,]   50   50   51   56   56   57   56   59   54    55 #>  [2531,]   50   50   51   56   56   57   56   59   54    55 #>  [2532,]   50   50   51   56   56   57   56   59   54    55 #>  [2533,]   50   50   51   56   56   57   56   59   54    55 #>  [2534,]   50   50   51   56   56   57   56   59   54    55 #>  [2535,]   50   50   51   56   56   57   56   59   54    55 #>  [2536,]   50   50   51   56   56   57   56   59   54    55 #>  [2537,]   50   50   51   56   56   57   56   59   54    55 #>  [2538,]   50   50   51   56   56   57   56   59   54    55 #>  [2539,]   50   50   51   56   56   57   56   59   54    55 #>  [2540,]   50   50   51   56   56   57   56   59   54    55 #>  [2541,]   50   50   51   56   56   57   56   59   54    55 #>  [2542,]   50   50   51   56   56   57   56   59   54    55 #>  [2543,]   50   50   51   56   56   57   56   59   54    55 #>  [2544,]   50   50   51   56   56   57   56   59   54    55 #>  [2545,]   50   50   51   56   56   57   56   59   54    55 #>  [2546,]   50   50   51   56   56   57   56   59   54    55 #>  [2547,]   50   50   51   56   56   57   56   59   54    55 #>  [2548,]   50   50   51   56   56   57   56   59   54    55 #>  [2549,]   50   50   51   56   56   57   56   59   54    55 #>  [2550,]   50   50   51   56   56   57   56   59   54    55 #>  [2551,]   50   50   51   56   56   57   56   59   54    55 #>  [2552,]   50   50   51   56   56   57   56   59   54    55 #>  [2553,]   50   50   51   56   56   57   56   59   54    55 #>  [2554,]   50   50   51   56   56   57   56   59   54    55 #>  [2555,]   50   50   51   56   56   57   56   59   54    55 #>  [2556,]   50   50   51   56   56   57   56   59   54    55 #>  [2557,]   50   50   51   56   56   57   56   59   54    55 #>  [2558,]   50   50   51   56   56   57   56   59   54    55 #>  [2559,]   50   50   51   56   56   57   56   59   54    55 #>  [2560,]   50   50   51   56   56   57   56   59   54    55 #>  [2561,]   51   51   52   57   57   58   57   60   55    56 #>  [2562,]   50   50   51   56   56   57   56   59   54    55 #>  [2563,]   50   50   51   56   56   57   56   59   54    55 #>  [2564,]   50   50   51   56   56   57   56   59   54    55 #>  [2565,]   50   50   51   56   56   57   56   59   54    55 #>  [2566,]   50   50   51   56   56   57   56   59   54    55 #>  [2567,]   50   50   51   56   56   57   56   59   54    55 #>  [2568,]   50   50   51   56   56   57   56   59   54    55 #>  [2569,]   51   51   52   57   57   58   57   60   55    56 #>  [2570,]   50   50   51   56   56   57   56   59   54    55 #>  [2571,]   50   50   51   56   56   57   56   59   54    55 #>  [2572,]   50   50   51   56   56   57   56   59   54    55 #>  [2573,]   50   50   51   56   56   57   56   59   54    55 #>  [2574,]   50   50   51   56   56   57   56   59   54    55 #>  [2575,]   50   50   51   56   56   57   56   59   54    55 #>  [2576,]   50   50   51   56   56   57   56   59   54    55 #>  [2577,]   50   50   51   56   56   57   56   59   54    55 #>  [2578,]   50   50   51   56   56   57   56   59   54    55 #>  [2579,]   50   50   51   56   56   57   56   59   54    55 #>  [2580,]   50   50   51   56   56   57   56   59   54    55 #>  [2581,]   50   50   51   56   56   57   56   59   54    55 #>  [2582,]   51   51   52   57   57   58   57   60   55    56 #>  [2583,]   50   50   51   56   56   57   56   59   54    55 #>  [2584,]   50   50   51   56   56   57   56   59   54    55 #>  [2585,]   50   50   51   56   56   57   56   59   54    55 #>  [2586,]   50   50   51   56   56   57   56   59   54    55 #>  [2587,]   50   50   51   56   56   57   56   59   54    55 #>  [2588,]   50   50   51   56   56   57   56   59   54    55 #>  [2589,]   50   50   51   56   56   57   56   59   54    55 #>  [2590,]   50   50   51   56   56   57   56   59   54    55 #>  [2591,]   50   50   51   56   56   57   56   59   54    55 #>  [2592,]   51   51   52   57   57   58   57   60   55    56 #>  [2593,]   51   51   52   57   57   58   57   60   55    56 #>  [2594,]   50   50   51   56   56   57   56   59   54    55 #>  [2595,]   50   50   51   56   56   57   56   59   54    55 #>  [2596,]   51   51   52   57   57   58   57   60   55    56 #>  [2597,]   51   51   52   57   57   58   57   60   55    56 #>  [2598,]   50   50   51   56   56   57   56   59   54    55 #>  [2599,]   50   50   51   56   56   57   56   59   54    55 #>  [2600,]   50   50   51   56   56   57   56   59   54    55 #>  [2601,]   53   53   54   59   59   60   59   62   57    58 #>  [2602,]   53   53   54   59   59   60   59   62   57    58 #>  [2603,]   52   52   53   58   58   59   58   61   56    57 #>  [2604,]   53   53   54   59   59   60   59   62   57    58 #>  [2605,]   52   52   53   58   58   59   58   61   56    57 #>  [2606,]   53   53   54   59   59   60   59   62   57    58 #>  [2607,]   52   52   53   58   58   59   58   61   56    57 #>  [2608,]   52   52   53   58   58   59   58   61   56    57 #>  [2609,]   53   53   54   59   59   60   59   62   57    58 #>  [2610,]   53   53   54   59   59   60   59   62   57    58 #>  [2611,]   53   53   54   59   59   60   59   62   57    58 #>  [2612,]   53   53   54   59   59   60   59   62   57    58 #>  [2613,]   52   52   53   58   58   59   58   61   56    57 #>  [2614,]   53   53   54   59   59   60   59   62   57    58 #>  [2615,]   53   53   54   59   59   60   59   62   57    58 #>  [2616,]   52   52   53   58   58   59   58   61   56    57 #>  [2617,]   52   52   53   58   58   59   58   61   56    57 #>  [2618,]   53   53   54   59   59   60   59   62   57    58 #>  [2619,]   53   53   54   59   59   60   59   62   57    58 #>  [2620,]   52   52   53   58   58   59   58   61   56    57 #>  [2621,]   53   53   54   59   59   60   59   62   57    58 #>  [2622,]   52   52   53   58   58   59   58   61   56    57 #>  [2623,]   53   53   54   59   59   60   59   62   57    58 #>  [2624,]   52   52   53   58   58   59   58   61   56    57 #>  [2625,]   52   52   53   58   58   59   58   61   56    57 #>  [2626,]   53   53   54   59   59   60   59   62   57    58 #>  [2627,]   53   53   54   59   59   60   59   62   57    58 #>  [2628,]   53   53   54   59   59   60   59   62   57    58 #>  [2629,]   52   52   53   58   58   59   58   61   56    57 #>  [2630,]   53   53   54   59   59   60   59   62   57    58 #>  [2631,]   53   53   54   59   59   60   59   62   57    58 #>  [2632,]   53   53   54   59   59   60   59   62   57    58 #>  [2633,]   53   53   54   59   59   60   59   62   57    58 #>  [2634,]   53   53   54   59   59   60   59   62   57    58 #>  [2635,]   53   53   54   59   59   60   59   62   57    58 #>  [2636,]   53   53   54   59   59   60   59   62   57    58 #>  [2637,]   53   53   54   59   59   60   59   62   57    58 #>  [2638,]   53   53   54   59   59   60   59   62   57    58 #>  [2639,]   52   52   53   58   58   59   58   61   56    57 #>  [2640,]   52   52   53   58   58   59   58   61   56    57 #>  [2641,]   53   53   54   59   59   60   59   62   57    58 #>  [2642,]   53   53   54   59   59   60   59   62   57    58 #>  [2643,]   52   52   53   58   58   59   58   61   56    57 #>  [2644,]   52   52   53   58   58   59   58   61   56    57 #>  [2645,]   52   52   53   58   58   59   58   61   56    57 #>  [2646,]   52   52   53   58   58   59   58   61   56    57 #>  [2647,]   52   52   53   58   58   59   58   61   56    57 #>  [2648,]   53   53   54   59   59   60   59   62   57    58 #>  [2649,]   52   52   53   58   58   59   58   61   56    57 #>  [2650,]   52   52   53   58   58   59   58   61   56    57 #>  [2651,]   52   52   53   58   58   59   58   61   56    57 #>  [2652,]   53   53   54   59   59   60   59   62   57    58 #>  [2653,]   52   52   53   58   58   59   58   61   56    57 #>  [2654,]   52   52   53   58   58   59   58   61   56    57 #>  [2655,]   52   52   53   58   58   59   58   61   56    57 #>  [2656,]   52   52   53   58   58   59   58   61   56    57 #>  [2657,]   53   53   54   59   59   60   59   62   57    58 #>  [2658,]   53   53   54   59   59   60   59   62   57    58 #>  [2659,]   52   52   53   58   58   59   58   61   56    57 #>  [2660,]   53   53   54   59   59   60   59   62   57    58 #>  [2661,]   53   53   54   59   59   60   59   62   57    58 #>  [2662,]   53   53   54   59   59   60   59   62   57    58 #>  [2663,]   52   52   53   58   58   59   58   61   56    57 #>  [2664,]   53   53   54   59   59   60   59   62   57    58 #>  [2665,]   52   52   53   58   58   59   58   61   56    57 #>  [2666,]   52   52   53   58   58   59   58   61   56    57 #>  [2667,]   53   53   54   59   59   60   59   62   57    58 #>  [2668,]   53   53   54   59   59   60   59   62   57    58 #>  [2669,]   53   53   54   59   59   60   59   62   57    58 #>  [2670,]   52   52   53   58   58   59   58   61   56    57 #>  [2671,]   52   52   53   58   58   59   58   61   56    57 #>  [2672,]   52   52   53   58   58   59   58   61   56    57 #>  [2673,]   53   53   54   59   59   60   59   62   57    58 #>  [2674,]   53   53   54   59   59   60   59   62   57    58 #>  [2675,]   53   53   54   59   59   60   59   62   57    58 #>  [2676,]   52   52   53   58   58   59   58   61   56    57 #>  [2677,]   52   52   53   58   58   59   58   61   56    57 #>  [2678,]   52   52   53   58   58   59   58   61   56    57 #>  [2679,]   52   52   53   58   58   59   58   61   56    57 #>  [2680,]   53   53   54   59   59   60   59   62   57    58 #>  [2681,]   52   52   53   58   58   59   58   61   56    57 #>  [2682,]   53   53   54   59   59   60   59   62   57    58 #>  [2683,]   52   52   53   58   58   59   58   61   56    57 #>  [2684,]   52   52   53   58   58   59   58   61   56    57 #>  [2685,]   53   53   54   59   59   60   59   62   57    58 #>  [2686,]   52   52   53   58   58   59   58   61   56    57 #>  [2687,]   53   53   54   59   59   60   59   62   57    58 #>  [2688,]   53   53   54   59   59   60   59   62   57    58 #>  [2689,]   52   52   53   58   58   59   58   61   56    57 #>  [2690,]   52   52   53   58   58   59   58   61   56    57 #>  [2691,]   53   53   54   59   59   60   59   62   57    58 #>  [2692,]   53   53   54   59   59   60   59   62   57    58 #>  [2693,]   53   53   54   59   59   60   59   62   57    58 #>  [2694,]   52   52   53   58   58   59   58   61   56    57 #>  [2695,]   53   53   54   59   59   60   59   62   57    58 #>  [2696,]   53   53   54   59   59   60   59   62   57    58 #>  [2697,]   53   53   54   59   59   60   59   62   57    58 #>  [2698,]   52   52   53   58   58   59   58   61   56    57 #>  [2699,]   53   53   54   59   59   60   59   62   57    58 #>  [2700,]   52   52   53   58   58   59   58   61   56    57 #>  [2701,]   55   55   56   61   61   62   61   64   59    60 #>  [2702,]   54   54   55   60   60   61   60   63   58    59 #>  [2703,]   54   54   55   60   60   61   60   63   58    59 #>  [2704,]   54   54   55   60   60   61   60   63   58    59 #>  [2705,]   55   55   56   61   61   62   61   64   59    60 #>  [2706,]   54   54   55   60   60   61   60   63   58    59 #>  [2707,]   54   54   55   60   60   61   60   63   58    59 #>  [2708,]   54   54   55   60   60   61   60   63   58    59 #>  [2709,]   54   54   55   60   60   61   60   63   58    59 #>  [2710,]   55   55   56   61   61   62   61   64   59    60 #>  [2711,]   55   55   56   61   61   62   61   64   59    60 #>  [2712,]   55   55   56   61   61   62   61   64   59    60 #>  [2713,]   54   54   55   60   60   61   60   63   58    59 #>  [2714,]   55   55   56   61   61   62   61   64   59    60 #>  [2715,]   55   55   56   61   61   62   61   64   59    60 #>  [2716,]   54   54   55   60   60   61   60   63   58    59 #>  [2717,]   55   55   56   61   61   62   61   64   59    60 #>  [2718,]   55   55   56   61   61   62   61   64   59    60 #>  [2719,]   54   54   55   60   60   61   60   63   58    59 #>  [2720,]   54   54   55   60   60   61   60   63   58    59 #>  [2721,]   54   54   55   60   60   61   60   63   58    59 #>  [2722,]   55   55   56   61   61   62   61   64   59    60 #>  [2723,]   54   54   55   60   60   61   60   63   58    59 #>  [2724,]   54   54   55   60   60   61   60   63   58    59 #>  [2725,]   54   54   55   60   60   61   60   63   58    59 #>  [2726,]   55   55   56   61   61   62   61   64   59    60 #>  [2727,]   55   55   56   61   61   62   61   64   59    60 #>  [2728,]   54   54   55   60   60   61   60   63   58    59 #>  [2729,]   54   54   55   60   60   61   60   63   58    59 #>  [2730,]   54   54   55   60   60   61   60   63   58    59 #>  [2731,]   55   55   56   61   61   62   61   64   59    60 #>  [2732,]   55   55   56   61   61   62   61   64   59    60 #>  [2733,]   54   54   55   60   60   61   60   63   58    59 #>  [2734,]   54   54   55   60   60   61   60   63   58    59 #>  [2735,]   54   54   55   60   60   61   60   63   58    59 #>  [2736,]   54   54   55   60   60   61   60   63   58    59 #>  [2737,]   54   54   55   60   60   61   60   63   58    59 #>  [2738,]   55   55   56   61   61   62   61   64   59    60 #>  [2739,]   54   54   55   60   60   61   60   63   58    59 #>  [2740,]   54   54   55   60   60   61   60   63   58    59 #>  [2741,]   54   54   55   60   60   61   60   63   58    59 #>  [2742,]   54   54   55   60   60   61   60   63   58    59 #>  [2743,]   55   55   56   61   61   62   61   64   59    60 #>  [2744,]   54   54   55   60   60   61   60   63   58    59 #>  [2745,]   54   54   55   60   60   61   60   63   58    59 #>  [2746,]   54   54   55   60   60   61   60   63   58    59 #>  [2747,]   55   55   56   61   61   62   61   64   59    60 #>  [2748,]   54   54   55   60   60   61   60   63   58    59 #>  [2749,]   54   54   55   60   60   61   60   63   58    59 #>  [2750,]   54   54   55   60   60   61   60   63   58    59 #>  [2751,]   54   54   55   60   60   61   60   63   58    59 #>  [2752,]   55   55   56   61   61   62   61   64   59    60 #>  [2753,]   54   54   55   60   60   61   60   63   58    59 #>  [2754,]   54   54   55   60   60   61   60   63   58    59 #>  [2755,]   54   54   55   60   60   61   60   63   58    59 #>  [2756,]   54   54   55   60   60   61   60   63   58    59 #>  [2757,]   54   54   55   60   60   61   60   63   58    59 #>  [2758,]   55   55   56   61   61   62   61   64   59    60 #>  [2759,]   55   55   56   61   61   62   61   64   59    60 #>  [2760,]   54   54   55   60   60   61   60   63   58    59 #>  [2761,]   55   55   56   61   61   62   61   64   59    60 #>  [2762,]   54   54   55   60   60   61   60   63   58    59 #>  [2763,]   54   54   55   60   60   61   60   63   58    59 #>  [2764,]   54   54   55   60   60   61   60   63   58    59 #>  [2765,]   54   54   55   60   60   61   60   63   58    59 #>  [2766,]   55   55   56   61   61   62   61   64   59    60 #>  [2767,]   54   54   55   60   60   61   60   63   58    59 #>  [2768,]   54   54   55   60   60   61   60   63   58    59 #>  [2769,]   54   54   55   60   60   61   60   63   58    59 #>  [2770,]   55   55   56   61   61   62   61   64   59    60 #>  [2771,]   55   55   56   61   61   62   61   64   59    60 #>  [2772,]   54   54   55   60   60   61   60   63   58    59 #>  [2773,]   54   54   55   60   60   61   60   63   58    59 #>  [2774,]   54   54   55   60   60   61   60   63   58    59 #>  [2775,]   55   55   56   61   61   62   61   64   59    60 #>  [2776,]   54   54   55   60   60   61   60   63   58    59 #>  [2777,]   55   55   56   61   61   62   61   64   59    60 #>  [2778,]   54   54   55   60   60   61   60   63   58    59 #>  [2779,]   55   55   56   61   61   62   61   64   59    60 #>  [2780,]   54   54   55   60   60   61   60   63   58    59 #>  [2781,]   54   54   55   60   60   61   60   63   58    59 #>  [2782,]   54   54   55   60   60   61   60   63   58    59 #>  [2783,]   54   54   55   60   60   61   60   63   58    59 #>  [2784,]   54   54   55   60   60   61   60   63   58    59 #>  [2785,]   54   54   55   60   60   61   60   63   58    59 #>  [2786,]   54   54   55   60   60   61   60   63   58    59 #>  [2787,]   55   55   56   61   61   62   61   64   59    60 #>  [2788,]   54   54   55   60   60   61   60   63   58    59 #>  [2789,]   54   54   55   60   60   61   60   63   58    59 #>  [2790,]   55   55   56   61   61   62   61   64   59    60 #>  [2791,]   55   55   56   61   61   62   61   64   59    60 #>  [2792,]   55   55   56   61   61   62   61   64   59    60 #>  [2793,]   54   54   55   60   60   61   60   63   58    59 #>  [2794,]   54   54   55   60   60   61   60   63   58    59 #>  [2795,]   55   55   56   61   61   62   61   64   59    60 #>  [2796,]   54   54   55   60   60   61   60   63   58    59 #>  [2797,]   54   54   55   60   60   61   60   63   58    59 #>  [2798,]   54   54   55   60   60   61   60   63   58    59 #>  [2799,]   54   54   55   60   60   61   60   63   58    59 #>  [2800,]   55   55   56   61   61   62   61   64   59    60 #>  [2801,]   57   57   58   63   63   64   63   66   61    62 #>  [2802,]   56   56   57   62   62   63   62   65   60    61 #>  [2803,]   56   56   57   62   62   63   62   65   60    61 #>  [2804,]   56   56   57   62   62   63   62   65   60    61 #>  [2805,]   56   56   57   62   62   63   62   65   60    61 #>  [2806,]   57   57   58   63   63   64   63   66   61    62 #>  [2807,]   56   56   57   62   62   63   62   65   60    61 #>  [2808,]   56   56   57   62   62   63   62   65   60    61 #>  [2809,]   56   56   57   62   62   63   62   65   60    61 #>  [2810,]   56   56   57   62   62   63   62   65   60    61 #>  [2811,]   56   56   57   62   62   63   62   65   60    61 #>  [2812,]   56   56   57   62   62   63   62   65   60    61 #>  [2813,]   57   57   58   63   63   64   63   66   61    62 #>  [2814,]   57   57   58   63   63   64   63   66   61    62 #>  [2815,]   57   57   58   63   63   64   63   66   61    62 #>  [2816,]   57   57   58   63   63   64   63   66   61    62 #>  [2817,]   57   57   58   63   63   64   63   66   61    62 #>  [2818,]   56   56   57   62   62   63   62   65   60    61 #>  [2819,]   56   56   57   62   62   63   62   65   60    61 #>  [2820,]   56   56   57   62   62   63   62   65   60    61 #>  [2821,]   57   57   58   63   63   64   63   66   61    62 #>  [2822,]   56   56   57   62   62   63   62   65   60    61 #>  [2823,]   56   56   57   62   62   63   62   65   60    61 #>  [2824,]   56   56   57   62   62   63   62   65   60    61 #>  [2825,]   56   56   57   62   62   63   62   65   60    61 #>  [2826,]   56   56   57   62   62   63   62   65   60    61 #>  [2827,]   56   56   57   62   62   63   62   65   60    61 #>  [2828,]   56   56   57   62   62   63   62   65   60    61 #>  [2829,]   57   57   58   63   63   64   63   66   61    62 #>  [2830,]   56   56   57   62   62   63   62   65   60    61 #>  [2831,]   56   56   57   62   62   63   62   65   60    61 #>  [2832,]   56   56   57   62   62   63   62   65   60    61 #>  [2833,]   57   57   58   63   63   64   63   66   61    62 #>  [2834,]   56   56   57   62   62   63   62   65   60    61 #>  [2835,]   56   56   57   62   62   63   62   65   60    61 #>  [2836,]   56   56   57   62   62   63   62   65   60    61 #>  [2837,]   56   56   57   62   62   63   62   65   60    61 #>  [2838,]   56   56   57   62   62   63   62   65   60    61 #>  [2839,]   56   56   57   62   62   63   62   65   60    61 #>  [2840,]   56   56   57   62   62   63   62   65   60    61 #>  [2841,]   57   57   58   63   63   64   63   66   61    62 #>  [2842,]   56   56   57   62   62   63   62   65   60    61 #>  [2843,]   56   56   57   62   62   63   62   65   60    61 #>  [2844,]   57   57   58   63   63   64   63   66   61    62 #>  [2845,]   56   56   57   62   62   63   62   65   60    61 #>  [2846,]   56   56   57   62   62   63   62   65   60    61 #>  [2847,]   56   56   57   62   62   63   62   65   60    61 #>  [2848,]   56   56   57   62   62   63   62   65   60    61 #>  [2849,]   56   56   57   62   62   63   62   65   60    61 #>  [2850,]   57   57   58   63   63   64   63   66   61    62 #>  [2851,]   56   56   57   62   62   63   62   65   60    61 #>  [2852,]   56   56   57   62   62   63   62   65   60    61 #>  [2853,]   56   56   57   62   62   63   62   65   60    61 #>  [2854,]   56   56   57   62   62   63   62   65   60    61 #>  [2855,]   56   56   57   62   62   63   62   65   60    61 #>  [2856,]   56   56   57   62   62   63   62   65   60    61 #>  [2857,]   56   56   57   62   62   63   62   65   60    61 #>  [2858,]   56   56   57   62   62   63   62   65   60    61 #>  [2859,]   57   57   58   63   63   64   63   66   61    62 #>  [2860,]   56   56   57   62   62   63   62   65   60    61 #>  [2861,]   57   57   58   63   63   64   63   66   61    62 #>  [2862,]   56   56   57   62   62   63   62   65   60    61 #>  [2863,]   56   56   57   62   62   63   62   65   60    61 #>  [2864,]   56   56   57   62   62   63   62   65   60    61 #>  [2865,]   56   56   57   62   62   63   62   65   60    61 #>  [2866,]   56   56   57   62   62   63   62   65   60    61 #>  [2867,]   56   56   57   62   62   63   62   65   60    61 #>  [2868,]   57   57   58   63   63   64   63   66   61    62 #>  [2869,]   56   56   57   62   62   63   62   65   60    61 #>  [2870,]   57   57   58   63   63   64   63   66   61    62 #>  [2871,]   56   56   57   62   62   63   62   65   60    61 #>  [2872,]   56   56   57   62   62   63   62   65   60    61 #>  [2873,]   57   57   58   63   63   64   63   66   61    62 #>  [2874,]   56   56   57   62   62   63   62   65   60    61 #>  [2875,]   56   56   57   62   62   63   62   65   60    61 #>  [2876,]   57   57   58   63   63   64   63   66   61    62 #>  [2877,]   56   56   57   62   62   63   62   65   60    61 #>  [2878,]   56   56   57   62   62   63   62   65   60    61 #>  [2879,]   56   56   57   62   62   63   62   65   60    61 #>  [2880,]   56   56   57   62   62   63   62   65   60    61 #>  [2881,]   57   57   58   63   63   64   63   66   61    62 #>  [2882,]   56   56   57   62   62   63   62   65   60    61 #>  [2883,]   57   57   58   63   63   64   63   66   61    62 #>  [2884,]   56   56   57   62   62   63   62   65   60    61 #>  [2885,]   56   56   57   62   62   63   62   65   60    61 #>  [2886,]   57   57   58   63   63   64   63   66   61    62 #>  [2887,]   56   56   57   62   62   63   62   65   60    61 #>  [2888,]   56   56   57   62   62   63   62   65   60    61 #>  [2889,]   56   56   57   62   62   63   62   65   60    61 #>  [2890,]   56   56   57   62   62   63   62   65   60    61 #>  [2891,]   56   56   57   62   62   63   62   65   60    61 #>  [2892,]   56   56   57   62   62   63   62   65   60    61 #>  [2893,]   56   56   57   62   62   63   62   65   60    61 #>  [2894,]   56   56   57   62   62   63   62   65   60    61 #>  [2895,]   56   56   57   62   62   63   62   65   60    61 #>  [2896,]   57   57   58   63   63   64   63   66   61    62 #>  [2897,]   56   56   57   62   62   63   62   65   60    61 #>  [2898,]   56   56   57   62   62   63   62   65   60    61 #>  [2899,]   57   57   58   63   63   64   63   66   61    62 #>  [2900,]   56   56   57   62   62   63   62   65   60    61 #>  [2901,]   59   59   60   64   64   65   64   67   62    63 #>  [2902,]   59   59   60   64   64   65   64   67   62    63 #>  [2903,]   58   58   59   65   65   66   65   68   63    64 #>  [2904,]   59   59   60   64   64   65   64   67   62    63 #>  [2905,]   59   59   60   64   64   65   64   67   62    63 #>  [2906,]   59   59   60   64   64   65   64   67   62    63 #>  [2907,]   58   58   59   65   65   66   65   68   63    64 #>  [2908,]   59   59   60   64   64   65   64   67   62    63 #>  [2909,]   59   59   60   64   64   65   64   67   62    63 #>  [2910,]   59   59   60   64   64   65   64   67   62    63 #>  [2911,]   59   59   60   64   64   65   64   67   62    63 #>  [2912,]   59   59   60   64   64   65   64   67   62    63 #>  [2913,]   59   59   60   64   64   65   64   67   62    63 #>  [2914,]   59   59   60   64   64   65   64   67   62    63 #>  [2915,]   59   59   60   64   64   65   64   67   62    63 #>  [2916,]   59   59   60   64   64   65   64   67   62    63 #>  [2917,]   59   59   60   64   64   65   64   67   62    63 #>  [2918,]   59   59   60   64   64   65   64   67   62    63 #>  [2919,]   59   59   60   64   64   65   64   67   62    63 #>  [2920,]   59   59   60   64   64   65   64   67   62    63 #>  [2921,]   58   58   59   65   65   66   65   68   63    64 #>  [2922,]   59   59   60   64   64   65   64   67   62    63 #>  [2923,]   58   58   59   65   65   66   65   68   63    64 #>  [2924,]   59   59   60   64   64   65   64   67   62    63 #>  [2925,]   59   59   60   64   64   65   64   67   62    63 #>  [2926,]   59   59   60   64   64   65   64   67   62    63 #>  [2927,]   59   59   60   64   64   65   64   67   62    63 #>  [2928,]   59   59   60   64   64   65   64   67   62    63 #>  [2929,]   59   59   60   64   64   65   64   67   62    63 #>  [2930,]   58   58   59   66   65   66   65   68   63    64 #>  [2931,]   58   58   59   65   65   66   65   68   63    64 #>  [2932,]   59   59   60   64   64   65   64   67   62    63 #>  [2933,]   59   59   60   64   64   65   64   67   62    63 #>  [2934,]   59   59   60   64   64   65   64   67   62    63 #>  [2935,]   59   59   60   64   64   65   64   67   62    63 #>  [2936,]   59   59   60   64   64   65   64   67   62    63 #>  [2937,]   59   59   60   64   64   65   64   67   62    63 #>  [2938,]   59   59   60   64   64   65   64   67   62    63 #>  [2939,]   58   58   59   65   65   66   65   68   63    64 #>  [2940,]   59   59   60   64   64   65   64   67   62    63 #>  [2941,]   59   59   60   64   64   65   64   67   62    63 #>  [2942,]   59   59   60   64   64   65   64   67   62    63 #>  [2943,]   59   59   60   64   64   65   64   67   62    63 #>  [2944,]   59   59   60   64   64   65   64   67   62    63 #>  [2945,]   59   59   60   64   64   65   64   67   62    63 #>  [2946,]   59   59   60   64   64   65   64   67   62    63 #>  [2947,]   58   58   59   65   65   66   65   68   63    64 #>  [2948,]   59   59   60   64   64   65   64   67   62    63 #>  [2949,]   58   58   59   65   65   66   65   68   63    64 #>  [2950,]   59   59   60   64   64   65   64   67   62    63 #>  [2951,]   59   59   60   64   64   65   64   67   62    63 #>  [2952,]   59   59   60   64   64   65   64   67   62    63 #>  [2953,]   59   59   60   64   64   65   64   67   62    63 #>  [2954,]   58   58   59   65   65   66   65   68   63    64 #>  [2955,]   59   59   60   64   64   65   64   67   62    63 #>  [2956,]   59   59   60   64   64   65   64   67   62    63 #>  [2957,]   59   59   60   64   64   65   64   67   62    63 #>  [2958,]   59   59   60   64   64   65   64   67   62    63 #>  [2959,]   59   59   60   64   64   65   64   67   62    63 #>  [2960,]   59   59   60   64   64   65   64   67   62    63 #>  [2961,]   59   59   60   64   64   65   64   67   62    63 #>  [2962,]   58   58   59   65   65   66   65   68   63    64 #>  [2963,]   59   59   60   64   64   65   64   67   62    63 #>  [2964,]   59   59   60   64   64   65   64   67   62    63 #>  [2965,]   59   59   60   64   64   65   64   67   62    63 #>  [2966,]   59   59   60   64   64   65   64   67   62    63 #>  [2967,]   59   59   60   64   64   65   64   67   62    63 #>  [2968,]   59   59   60   64   64   65   64   67   62    63 #>  [2969,]   59   59   60   64   64   65   64   67   62    63 #>  [2970,]   58   58   59   65   65   66   65   68   63    64 #>  [2971,]   59   59   60   64   64   65   64   67   62    63 #>  [2972,]   59   59   60   64   64   65   64   67   62    63 #>  [2973,]   59   59   60   64   64   65   64   67   62    63 #>  [2974,]   59   59   60   64   64   65   64   67   62    63 #>  [2975,]   59   59   60   64   64   65   64   67   62    63 #>  [2976,]   59   59   60   64   64   65   64   67   62    63 #>  [2977,]   58   58   59   66   65   66   65   68   63    64 #>  [2978,]   59   59   60   64   64   65   64   67   62    63 #>  [2979,]   58   58   59   65   65   66   65   68   63    64 #>  [2980,]   58   58   59   66   65   66   65   68   63    64 #>  [2981,]   59   59   60   64   64   65   64   67   62    63 #>  [2982,]   59   59   60   64   64   65   64   67   62    63 #>  [2983,]   58   58   59   66   65   66   65   68   63    64 #>  [2984,]   59   59   60   64   64   65   64   67   62    63 #>  [2985,]   59   59   60   64   64   65   64   67   62    63 #>  [2986,]   59   59   60   64   64   65   64   67   62    63 #>  [2987,]   59   59   60   64   64   65   64   67   62    63 #>  [2988,]   59   59   60   64   64   65   64   67   62    63 #>  [2989,]   59   59   60   64   64   65   64   67   62    63 #>  [2990,]   59   59   60   64   64   65   64   67   62    63 #>  [2991,]   59   59   60   64   64   65   64   67   62    63 #>  [2992,]   59   59   60   64   64   65   64   67   62    63 #>  [2993,]   59   59   60   64   64   65   64   67   62    63 #>  [2994,]   59   59   60   64   64   65   64   67   62    63 #>  [2995,]   58   58   59   66   65   66   65   68   63    64 #>  [2996,]   59   59   60   64   64   65   64   67   62    63 #>  [2997,]   59   59   60   64   64   65   64   67   62    63 #>  [2998,]   58   58   59   65   65   66   65   68   63    64 #>  [2999,]   59   59   60   64   64   65   64   67   62    63 #>  [3000,]   59   59   60   64   64   65   64   67   62    63 #>  [3001,]   61   61   62   68   67   68   67   70   65    66 #>  [3002,]   60   60   61   67   66   67   66   69   64    65 #>  [3003,]   60   60   61   67   66   67   66   69   64    65 #>  [3004,]   61   61   62   68   67   68   67   70   65    66 #>  [3005,]   61   61   62   68   67   68   67   70   65    66 #>  [3006,]   61   61   62   68   67   68   67   70   65    66 #>  [3007,]   60   60   61   67   66   67   66   69   64    65 #>  [3008,]   61   61   62   68   67   68   67   70   65    66 #>  [3009,]   61   61   62   68   67   68   67   70   65    66 #>  [3010,]   61   61   62   68   67   68   67   70   65    66 #>  [3011,]   61   61   62   68   67   68   67   70   65    66 #>  [3012,]   61   61   62   68   67   68   67   70   65    66 #>  [3013,]   60   60   61   67   66   67   66   69   64    65 #>  [3014,]   61   61   62   68   67   68   67   70   65    66 #>  [3015,]   61   61   62   68   67   68   67   70   65    66 #>  [3016,]   60   60   61   67   66   67   66   69   64    65 #>  [3017,]   61   61   62   68   67   68   67   70   65    66 #>  [3018,]   60   60   61   67   66   67   66   69   64    65 #>  [3019,]   60   60   61   67   66   67   66   69   64    65 #>  [3020,]   61   61   62   68   67   68   67   70   65    66 #>  [3021,]   60   60   61   67   66   67   66   69   64    65 #>  [3022,]   60   60   61   67   66   67   66   69   64    65 #>  [3023,]   60   60   61   67   66   67   66   69   64    65 #>  [3024,]   60   60   61   67   66   67   66   69   64    65 #>  [3025,]   61   61   62   68   67   68   67   70   65    66 #>  [3026,]   61   61   62   68   67   68   67   70   65    66 #>  [3027,]   61   61   62   68   67   68   67   70   65    66 #>  [3028,]   61   61   62   68   67   68   67   70   65    66 #>  [3029,]   61   61   62   68   67   68   67   70   65    66 #>  [3030,]   60   60   61   67   66   67   66   69   64    65 #>  [3031,]   60   60   61   67   66   67   66   69   64    65 #>  [3032,]   60   60   61   67   66   67   66   69   64    65 #>  [3033,]   61   61   62   68   67   68   67   70   65    66 #>  [3034,]   60   60   61   67   66   67   66   69   64    65 #>  [3035,]   60   60   61   67   66   67   66   69   64    65 #>  [3036,]   60   60   61   67   66   67   66   69   64    65 #>  [3037,]   60   60   61   67   66   67   66   69   64    65 #>  [3038,]   61   61   62   68   67   68   67   70   65    66 #>  [3039,]   60   60   61   67   66   67   66   69   64    65 #>  [3040,]   60   60   61   67   66   67   66   69   64    65 #>  [3041,]   61   61   62   68   67   68   67   70   65    66 #>  [3042,]   61   61   62   68   67   68   67   70   65    66 #>  [3043,]   61   61   62   68   67   68   67   70   65    66 #>  [3044,]   60   60   61   67   66   67   66   69   64    65 #>  [3045,]   61   61   62   68   67   68   67   70   65    66 #>  [3046,]   61   61   62   68   67   68   67   70   65    66 #>  [3047,]   60   60   61   67   66   67   66   69   64    65 #>  [3048,]   61   61   62   68   67   68   67   70   65    66 #>  [3049,]   60   60   61   67   66   67   66   69   64    65 #>  [3050,]   61   61   62   68   67   68   67   70   65    66 #>  [3051,]   61   61   62   68   67   68   67   70   65    66 #>  [3052,]   61   61   62   68   67   68   67   70   65    66 #>  [3053,]   61   61   62   68   67   68   67   70   65    66 #>  [3054,]   60   60   61   67   66   67   66   69   64    65 #>  [3055,]   61   61   62   68   67   68   67   70   65    66 #>  [3056,]   61   61   62   68   67   68   67   70   65    66 #>  [3057,]   61   61   62   68   67   68   67   70   65    66 #>  [3058,]   61   61   62   68   67   68   67   70   65    66 #>  [3059,]   60   60   61   67   66   67   66   69   64    65 #>  [3060,]   61   61   62   68   67   68   67   70   65    66 #>  [3061,]   61   61   62   68   67   68   67   70   65    66 #>  [3062,]   60   60   61   67   66   67   66   69   64    65 #>  [3063,]   61   61   62   68   67   68   67   70   65    66 #>  [3064,]   61   61   62   68   67   68   67   70   65    66 #>  [3065,]   61   61   62   68   67   68   67   70   65    66 #>  [3066,]   61   61   62   68   67   68   67   70   65    66 #>  [3067,]   61   61   62   68   67   68   67   70   65    66 #>  [3068,]   61   61   62   68   67   68   67   70   65    66 #>  [3069,]   61   61   62   68   67   68   67   70   65    66 #>  [3070,]   60   60   61   67   66   67   66   69   64    65 #>  [3071,]   61   61   62   68   67   68   67   70   65    66 #>  [3072,]   61   61   62   68   67   68   67   70   65    66 #>  [3073,]   61   61   62   68   67   68   67   70   65    66 #>  [3074,]   61   61   62   68   67   68   67   70   65    66 #>  [3075,]   61   61   62   68   67   68   67   70   65    66 #>  [3076,]   61   61   62   68   67   68   67   70   65    66 #>  [3077,]   60   60   61   67   66   67   66   69   64    65 #>  [3078,]   61   61   62   68   67   68   67   70   65    66 #>  [3079,]   60   60   61   67   66   67   66   69   64    65 #>  [3080,]   60   60   61   67   66   67   66   69   64    65 #>  [3081,]   61   61   62   68   67   68   67   70   65    66 #>  [3082,]   61   61   62   68   67   68   67   70   65    66 #>  [3083,]   60   60   61   67   66   67   66   69   64    65 #>  [3084,]   61   61   62   68   67   68   67   70   65    66 #>  [3085,]   61   61   62   68   67   68   67   70   65    66 #>  [3086,]   60   60   61   67   66   67   66   69   64    65 #>  [3087,]   61   61   62   68   67   68   67   70   65    66 #>  [3088,]   61   61   62   68   67   68   67   70   65    66 #>  [3089,]   61   61   62   68   67   68   67   70   65    66 #>  [3090,]   61   61   62   68   67   68   67   70   65    66 #>  [3091,]   61   61   62   68   67   68   67   70   65    66 #>  [3092,]   61   61   62   68   67   68   67   70   65    66 #>  [3093,]   60   60   61   67   66   67   66   69   64    65 #>  [3094,]   61   61   62   68   67   68   67   70   65    66 #>  [3095,]   60   60   61   67   66   67   66   69   64    65 #>  [3096,]   61   61   62   68   67   68   67   70   65    66 #>  [3097,]   61   61   62   68   67   68   67   70   65    66 #>  [3098,]   60   60   61   67   66   67   66   69   64    65 #>  [3099,]   61   61   62   68   67   68   67   70   65    66 #>  [3100,]   60   60   61   67   66   67   66   69   64    65 #>  [3101,]   63   63   64   71   69   70   69   72   67    68 #>  [3102,]   63   63   64   70   69   70   69   72   67    68 #>  [3103,]   63   63   64   71   69   70   69   72   67    68 #>  [3104,]   62   62   63   69   68   69   68   71   66    67 #>  [3105,]   63   63   64   70   69   70   69   72   67    68 #>  [3106,]   63   63   64   70   69   70   69   72   67    68 #>  [3107,]   63   63   64   71   69   70   69   72   67    68 #>  [3108,]   62   62   63   69   68   69   68   71   66    67 #>  [3109,]   62   62   63   69   68   69   68   71   66    67 #>  [3110,]   63   63   64   71   69   70   69   72   67    68 #>  [3111,]   62   62   63   69   68   69   68   71   66    67 #>  [3112,]   63   63   64   70   69   70   69   72   67    68 #>  [3113,]   62   62   63   69   68   69   68   71   66    67 #>  [3114,]   63   63   64   71   69   70   69   72   67    68 #>  [3115,]   63   63   64   70   69   70   69   72   67    68 #>  [3116,]   63   63   64   71   69   70   69   72   67    68 #>  [3117,]   62   62   63   69   68   69   68   71   66    67 #>  [3118,]   63   63   64   70   69   70   69   72   67    68 #>  [3119,]   63   63   64   70   69   70   69   72   67    68 #>  [3120,]   63   63   64   71   69   70   69   72   67    68 #>  [3121,]   63   63   64   70   69   70   69   72   67    68 #>  [3122,]   62   62   63   69   68   69   68   71   66    67 #>  [3123,]   63   63   64   70   69   70   69   72   67    68 #>  [3124,]   63   63   64   71   69   70   69   72   67    68 #>  [3125,]   63   63   64   71   69   70   69   72   67    68 #>  [3126,]   63   63   64   70   69   70   69   72   67    68 #>  [3127,]   62   62   63   69   68   69   68   71   66    67 #>  [3128,]   63   63   64   71   69   70   69   72   67    68 #>  [3129,]   63   63   64   70   69   70   69   72   67    68 #>  [3130,]   63   63   64   70   69   70   69   72   67    68 #>  [3131,]   63   63   64   70   69   70   69   72   67    68 #>  [3132,]   63   63   64   70   69   70   69   72   67    68 #>  [3133,]   63   63   64   70   69   70   69   72   67    68 #>  [3134,]   63   63   64   70   69   70   69   72   67    68 #>  [3135,]   62   62   63   69   68   69   68   71   66    67 #>  [3136,]   63   63   64   71   69   70   69   72   67    68 #>  [3137,]   63   63   64   70   69   70   69   72   67    68 #>  [3138,]   63   63   64   70   69   70   69   72   67    68 #>  [3139,]   63   63   64   71   69   70   69   72   67    68 #>  [3140,]   63   63   64   70   69   70   69   72   67    68 #>  [3141,]   63   63   64   71   69   70   69   72   67    68 #>  [3142,]   63   63   64   70   69   70   69   72   67    68 #>  [3143,]   62   62   63   69   68   69   68   71   66    67 #>  [3144,]   62   62   63   69   68   69   68   71   66    67 #>  [3145,]   63   63   64   71   69   70   69   72   67    68 #>  [3146,]   63   63   64   70   69   70   69   72   67    68 #>  [3147,]   63   63   64   70   69   70   69   72   67    68 #>  [3148,]   63   63   64   70   69   70   69   72   67    68 #>  [3149,]   62   62   63   69   68   69   68   71   66    67 #>  [3150,]   63   63   64   71   69   70   69   72   67    68 #>  [3151,]   63   63   64   70   69   70   69   72   67    68 #>  [3152,]   62   62   63   69   68   69   68   71   66    67 #>  [3153,]   63   63   64   71   69   70   69   72   67    68 #>  [3154,]   63   63   64   71   69   70   69   72   67    68 #>  [3155,]   62   62   63   69   68   69   68   71   66    67 #>  [3156,]   63   63   64   70   69   70   69   72   67    68 #>  [3157,]   63   63   64   71   69   70   69   72   67    68 #>  [3158,]   62   62   63   69   68   69   68   71   66    67 #>  [3159,]   63   63   64   71   69   70   69   72   67    68 #>  [3160,]   63   63   64   70   69   70   69   72   67    68 #>  [3161,]   63   63   64   70   69   70   69   72   67    68 #>  [3162,]   63   63   64   70   69   70   69   72   67    68 #>  [3163,]   63   63   64   70   69   70   69   72   67    68 #>  [3164,]   63   63   64   70   69   70   69   72   67    68 #>  [3165,]   63   63   64   70   69   70   69   72   67    68 #>  [3166,]   62   62   63   69   68   69   68   71   66    67 #>  [3167,]   63   63   64   71   69   70   69   72   67    68 #>  [3168,]   63   63   64   70   69   70   69   72   67    68 #>  [3169,]   62   62   63   69   68   69   68   71   66    67 #>  [3170,]   63   63   64   70   69   70   69   72   67    68 #>  [3171,]   63   63   64   71   69   70   69   72   67    68 #>  [3172,]   63   63   64   71   69   70   69   72   67    68 #>  [3173,]   63   63   64   71   69   70   69   72   67    68 #>  [3174,]   63   63   64   71   69   70   69   72   67    68 #>  [3175,]   63   63   64   70   69   70   69   72   67    68 #>  [3176,]   63   63   64   71   69   70   69   72   67    68 #>  [3177,]   63   63   64   70   69   70   69   72   67    68 #>  [3178,]   63   63   64   70   69   70   69   72   67    68 #>  [3179,]   62   62   63   69   68   69   68   71   66    67 #>  [3180,]   62   62   63   69   68   69   68   71   66    67 #>  [3181,]   62   62   63   69   68   69   68   71   66    67 #>  [3182,]   62   62   63   69   68   69   68   71   66    67 #>  [3183,]   62   62   63   69   68   69   68   71   66    67 #>  [3184,]   63   63   64   70   69   70   69   72   67    68 #>  [3185,]   63   63   64   71   69   70   69   72   67    68 #>  [3186,]   63   63   64   71   69   70   69   72   67    68 #>  [3187,]   62   62   63   69   68   69   68   71   66    67 #>  [3188,]   62   62   63   69   68   69   68   71   66    67 #>  [3189,]   62   62   63   69   68   69   68   71   66    67 #>  [3190,]   62   62   63   69   68   69   68   71   66    67 #>  [3191,]   63   63   64   71   69   70   69   72   67    68 #>  [3192,]   62   62   63   69   68   69   68   71   66    67 #>  [3193,]   63   63   64   70   69   70   69   72   67    68 #>  [3194,]   63   63   64   70   69   70   69   72   67    68 #>  [3195,]   62   62   63   69   68   69   68   71   66    67 #>  [3196,]   63   63   64   70   69   70   69   72   67    68 #>  [3197,]   63   63   64   70   69   70   69   72   67    68 #>  [3198,]   63   63   64   70   69   70   69   72   67    68 #>  [3199,]   62   62   63   69   68   69   68   71   66    67 #>  [3200,]   63   63   64   70   69   70   69   72   67    68 #>  [3201,]   64   64   65   72   70   71   70   73   69    70 #>  [3202,]   65   65   66   73   71   72   71   73   68    69 #>  [3203,]   64   64   65   72   70   71   70   73   68    69 #>  [3204,]   64   64   65   72   70   71   70   73   69    70 #>  [3205,]   65   65   66   73   71   72   71   73   68    69 #>  [3206,]   64   64   65   72   70   71   70   73   68    69 #>  [3207,]   65   65   66   73   71   72   71   73   69    70 #>  [3208,]   64   64   65   72   70   71   70   73   69    70 #>  [3209,]   65   65   66   73   71   72   71   73   69    70 #>  [3210,]   65   65   66   73   71   72   71   73   69    70 #>  [3211,]   64   64   65   72   70   71   70   73   68    69 #>  [3212,]   65   65   66   73   71   72   71   73   68    69 #>  [3213,]   65   65   66   73   71   72   71   73   69    70 #>  [3214,]   64   64   65   72   70   71   70   73   68    69 #>  [3215,]   64   64   65   72   70   71   70   73   69    70 #>  [3216,]   64   64   65   72   70   71   70   73   69    70 #>  [3217,]   65   65   66   73   71   72   71   73   69    70 #>  [3218,]   65   65   66   73   71   72   71   73   69    70 #>  [3219,]   64   64   65   72   70   71   70   73   68    69 #>  [3220,]   65   65   66   73   71   72   71   73   68    69 #>  [3221,]   65   65   66   73   71   72   71   73   69    70 #>  [3222,]   65   65   66   73   71   72   71   73   68    69 #>  [3223,]   65   65   66   73   71   72   71   73   69    70 #>  [3224,]   65   65   66   73   71   72   71   73   68    69 #>  [3225,]   64   64   65   72   70   71   70   73   69    70 #>  [3226,]   64   64   65   72   70   71   70   73   68    69 #>  [3227,]   65   65   66   73   71   72   71   73   69    70 #>  [3228,]   64   64   65   72   70   71   70   73   69    70 #>  [3229,]   65   65   66   73   71   72   71   73   68    69 #>  [3230,]   65   65   66   73   71   72   71   73   68    69 #>  [3231,]   65   65   66   73   71   72   71   73   68    69 #>  [3232,]   65   65   66   73   71   72   71   73   68    69 #>  [3233,]   65   65   66   73   71   72   71   73   68    69 #>  [3234,]   64   64   65   72   70   71   70   73   68    69 #>  [3235,]   64   64   65   72   70   71   70   73   68    69 #>  [3236,]   65   65   66   73   71   72   71   73   68    69 #>  [3237,]   64   64   65   72   70   71   70   73   69    70 #>  [3238,]   64   64   65   72   70   71   70   73   69    70 #>  [3239,]   64   64   65   72   70   71   70   73   69    70 #>  [3240,]   65   65   66   73   71   72   71   73   68    69 #>  [3241,]   65   65   66   73   71   72   71   73   68    69 #>  [3242,]   64   64   65   72   70   71   70   73   68    69 #>  [3243,]   64   64   65   72   70   71   70   73   69    70 #>  [3244,]   65   65   66   73   71   72   71   73   69    70 #>  [3245,]   64   64   65   72   70   71   70   73   69    70 #>  [3246,]   64   64   65   72   70   71   70   73   69    70 #>  [3247,]   65   65   66   73   71   72   71   73   69    70 #>  [3248,]   65   65   66   73   71   72   71   73   68    69 #>  [3249,]   64   64   65   72   70   71   70   73   68    69 #>  [3250,]   65   65   66   73   71   72   71   73   68    69 #>  [3251,]   64   64   65   72   70   71   70   73   68    69 #>  [3252,]   64   64   65   72   70   71   70   73   68    69 #>  [3253,]   65   65   66   73   71   72   71   73   69    70 #>  [3254,]   65   65   66   73   71   72   71   73   68    69 #>  [3255,]   64   64   65   72   70   71   70   73   68    69 #>  [3256,]   64   64   65   72   70   71   70   73   69    70 #>  [3257,]   64   64   65   72   70   71   70   73   68    69 #>  [3258,]   65   65   66   73   71   72   71   73   68    69 #>  [3259,]   64   64   65   72   70   71   70   73   68    69 #>  [3260,]   65   65   66   73   71   72   71   73   68    69 #>  [3261,]   65   65   66   73   71   72   71   73   69    70 #>  [3262,]   64   64   65   72   70   71   70   73   68    69 #>  [3263,]   65   65   66   73   71   72   71   73   68    69 #>  [3264,]   64   64   65   72   70   71   70   73   69    70 #>  [3265,]   64   64   65   72   70   71   70   73   68    69 #>  [3266,]   64   64   65   72   70   71   70   73   68    69 #>  [3267,]   64   64   65   72   70   71   70   73   68    69 #>  [3268,]   64   64   65   72   70   71   70   73   68    69 #>  [3269,]   64   64   65   72   70   71   70   73   68    69 #>  [3270,]   65   65   66   73   71   72   71   73   69    70 #>  [3271,]   64   64   65   72   70   71   70   73   69    70 #>  [3272,]   64   64   65   72   70   71   70   73   69    70 #>  [3273,]   64   64   65   72   70   71   70   73   69    70 #>  [3274,]   65   65   66   73   71   72   71   73   69    70 #>  [3275,]   65   65   66   73   71   72   71   73   69    70 #>  [3276,]   65   65   66   73   71   72   71   73   69    70 #>  [3277,]   64   64   65   72   70   71   70   73   69    70 #>  [3278,]   65   65   66   73   71   72   71   73   68    69 #>  [3279,]   64   64   65   72   70   71   70   73   69    70 #>  [3280,]   65   65   66   73   71   72   71   73   68    69 #>  [3281,]   65   65   66   73   71   72   71   73   68    69 #>  [3282,]   64   64   65   72   70   71   70   73   69    70 #>  [3283,]   65   65   66   73   71   72   71   73   68    69 #>  [3284,]   65   65   66   73   71   72   71   73   69    70 #>  [3285,]   64   64   65   72   70   71   70   73   68    69 #>  [3286,]   65   65   66   73   71   72   71   73   69    70 #>  [3287,]   65   65   66   73   71   72   71   73   69    70 #>  [3288,]   65   65   66   73   71   72   71   73   69    70 #>  [3289,]   64   64   65   72   70   71   70   73   68    69 #>  [3290,]   65   65   66   73   71   72   71   73   69    70 #>  [3291,]   64   64   65   72   70   71   70   73   68    69 #>  [3292,]   65   65   66   73   71   72   71   73   68    69 #>  [3293,]   65   65   66   73   71   72   71   73   68    69 #>  [3294,]   64   64   65   72   70   71   70   73   69    70 #>  [3295,]   65   65   66   73   71   72   71   73   69    70 #>  [3296,]   64   64   65   72   70   71   70   73   69    70 #>  [3297,]   64   64   65   72   70   71   70   73   68    69 #>  [3298,]   64   64   65   72   70   71   70   73   68    69 #>  [3299,]   64   64   65   72   70   71   70   73   68    69 #>  [3300,]   64   64   65   72   70   71   70   73   69    70 #>  [3301,]   67   67   68   75   73   74   73   75   71    72 #>  [3302,]   67   67   68   75   73   74   74   75   71    72 #>  [3303,]   67   67   68   75   73   74   73   75   71    72 #>  [3304,]   67   67   68   75   73   74   73   75   71    72 #>  [3305,]   67   67   68   75   73   74   74   75   71    72 #>  [3306,]   67   67   68   75   73   74   73   75   71    72 #>  [3307,]   67   67   68   75   73   74   74   75   71    72 #>  [3308,]   67   67   68   75   73   74   73   75   71    72 #>  [3309,]   67   67   68   75   73   74   74   75   71    72 #>  [3310,]   67   67   68   75   73   74   74   75   71    72 #>  [3311,]   67   67   68   75   73   74   73   75   71    72 #>  [3312,]   67   67   68   75   73   74   74   75   71    72 #>  [3313,]   67   67   68   75   73   74   74   75   71    72 #>  [3314,]   67   67   68   75   73   74   73   75   71    72 #>  [3315,]   66   66   67   74   72   73   72   74   70    71 #>  [3316,]   67   67   68   75   73   74   73   75   71    72 #>  [3317,]   67   67   68   75   73   74   74   75   71    72 #>  [3318,]   67   67   68   75   73   74   74   75   71    72 #>  [3319,]   67   67   68   75   73   74   73   75   71    72 #>  [3320,]   67   67   68   75   73   74   74   75   71    72 #>  [3321,]   67   67   68   75   73   74   74   75   71    72 #>  [3322,]   67   67   68   75   73   74   74   75   71    72 #>  [3323,]   67   67   68   75   73   74   74   75   71    72 #>  [3324,]   67   67   68   75   73   74   74   75   71    72 #>  [3325,]   67   67   68   75   73   74   74   75   71    72 #>  [3326,]   67   67   68   75   73   74   73   75   71    72 #>  [3327,]   67   67   68   75   73   74   74   75   71    72 #>  [3328,]   67   67   68   75   73   74   73   75   71    72 #>  [3329,]   67   67   68   75   73   74   74   75   71    72 #>  [3330,]   67   67   68   75   73   74   74   75   71    72 #>  [3331,]   66   66   67   74   72   73   72   74   70    71 #>  [3332,]   67   67   68   75   73   74   74   75   71    72 #>  [3333,]   67   67   68   75   73   74   74   75   71    72 #>  [3334,]   66   66   67   74   72   73   72   74   70    71 #>  [3335,]   67   67   68   75   73   74   73   75   71    72 #>  [3336,]   67   67   68   75   73   74   74   75   71    72 #>  [3337,]   67   67   68   75   73   74   73   75   71    72 #>  [3338,]   67   67   68   75   73   74   73   75   71    72 #>  [3339,]   67   67   68   75   73   74   74   75   71    72 #>  [3340,]   67   67   68   75   73   74   74   75   71    72 #>  [3341,]   67   67   68   75   73   74   74   75   71    72 #>  [3342,]   66   66   67   74   72   73   72   74   70    71 #>  [3343,]   66   66   67   74   72   73   72   74   70    71 #>  [3344,]   66   66   67   74   72   73   72   74   70    71 #>  [3345,]   67   67   68   75   73   74   73   75   71    72 #>  [3346,]   67   67   68   75   73   74   74   75   71    72 #>  [3347,]   67   67   68   75   73   74   74   75   71    72 #>  [3348,]   67   67   68   75   73   74   74   75   71    72 #>  [3349,]   67   67   68   75   73   74   73   75   71    72 #>  [3350,]   67   67   68   75   73   74   74   75   71    72 #>  [3351,]   67   67   68   75   73   74   74   75   71    72 #>  [3352,]   67   67   68   75   73   74   73   75   71    72 #>  [3353,]   67   67   68   75   73   74   74   75   71    72 #>  [3354,]   67   67   68   75   73   74   74   75   71    72 #>  [3355,]   67   67   68   75   73   74   74   75   71    72 #>  [3356,]   67   67   68   75   73   74   73   75   71    72 #>  [3357,]   67   67   68   75   73   74   74   75   71    72 #>  [3358,]   67   67   68   75   73   74   74   75   71    72 #>  [3359,]   67   67   68   75   73   74   73   75   71    72 #>  [3360,]   67   67   68   75   73   74   74   75   71    72 #>  [3361,]   67   67   68   75   73   74   74   75   71    72 #>  [3362,]   67   67   68   75   73   74   73   75   71    72 #>  [3363,]   66   66   67   74   72   73   72   74   70    71 #>  [3364,]   67   67   68   75   73   74   73   75   71    72 #>  [3365,]   67   67   68   75   73   74   73   75   71    72 #>  [3366,]   67   67   68   75   73   74   74   75   71    72 #>  [3367,]   67   67   68   75   73   74   74   75   71    72 #>  [3368,]   67   67   68   75   73   74   73   75   71    72 #>  [3369,]   67   67   68   75   73   74   73   75   71    72 #>  [3370,]   67   67   68   75   73   74   74   75   71    72 #>  [3371,]   67   67   68   75   73   74   74   75   71    72 #>  [3372,]   67   67   68   75   73   74   73   75   71    72 #>  [3373,]   67   67   68   75   73   74   73   75   71    72 #>  [3374,]   67   67   68   75   73   74   74   75   71    72 #>  [3375,]   66   66   67   74   72   73   72   74   70    71 #>  [3376,]   67   67   68   75   73   74   74   75   71    72 #>  [3377,]   67   67   68   75   73   74   73   75   71    72 #>  [3378,]   67   67   68   75   73   74   74   75   71    72 #>  [3379,]   67   67   68   75   73   74   73   75   71    72 #>  [3380,]   67   67   68   75   73   74   74   75   71    72 #>  [3381,]   67   67   68   75   73   74   74   75   71    72 #>  [3382,]   67   67   68   75   73   74   74   75   71    72 #>  [3383,]   67   67   68   75   73   74   74   75   71    72 #>  [3384,]   67   67   68   75   73   74   74   75   71    72 #>  [3385,]   67   67   68   75   73   74   74   75   71    72 #>  [3386,]   67   67   68   75   73   74   74   75   71    72 #>  [3387,]   67   67   68   75   73   74   74   75   71    72 #>  [3388,]   67   67   68   75   73   74   74   75   71    72 #>  [3389,]   67   67   68   75   73   74   73   75   71    72 #>  [3390,]   67   67   68   75   73   74   74   75   71    72 #>  [3391,]   67   67   68   75   73   74   73   75   71    72 #>  [3392,]   67   67   68   75   73   74   74   75   71    72 #>  [3393,]   67   67   68   75   73   74   74   75   71    72 #>  [3394,]   67   67   68   75   73   74   73   75   71    72 #>  [3395,]   66   66   67   74   72   73   72   74   70    71 #>  [3396,]   67   67   68   75   73   74   73   75   71    72 #>  [3397,]   67   67   68   75   73   74   73   75   71    72 #>  [3398,]   67   67   68   75   73   74   74   75   71    72 #>  [3399,]   67   67   68   75   73   74   74   75   71    72 #>  [3400,]   67   67   68   75   73   74   73   75   71    72 #>  [3401,]   69   69   70   77   75   76   75   76   72    73 #>  [3402,]   68   68   69   76   74   75   77   77   73    74 #>  [3403,]   68   68   69   76   74   75   76   77   73    74 #>  [3404,]   69   69   70   77   75   76   75   76   72    73 #>  [3405,]   69   69   70   77   75   76   75   76   72    73 #>  [3406,]   69   69   70   77   75   76   75   76   72    73 #>  [3407,]   68   68   69   76   74   75   76   77   73    74 #>  [3408,]   69   69   70   77   75   76   75   76   72    73 #>  [3409,]   69   69   70   77   75   76   75   76   72    73 #>  [3410,]   69   69   70   77   75   76   75   76   72    73 #>  [3411,]   69   69   70   77   75   76   75   76   72    73 #>  [3412,]   69   69   70   77   75   76   75   76   72    73 #>  [3413,]   68   68   69   76   74   75   77   77   73    74 #>  [3414,]   69   69   70   77   75   76   75   76   72    73 #>  [3415,]   69   69   70   77   75   76   75   76   72    73 #>  [3416,]   68   68   69   76   74   75   77   77   73    74 #>  [3417,]   69   69   70   77   75   76   75   76   72    73 #>  [3418,]   68   68   69   76   74   75   76   77   73    74 #>  [3419,]   68   68   69   76   74   75   76   77   73    74 #>  [3420,]   69   69   70   77   75   76   75   76   72    73 #>  [3421,]   68   68   69   76   74   75   77   77   73    74 #>  [3422,]   68   68   69   76   74   75   77   77   73    74 #>  [3423,]   68   68   69   76   74   75   76   77   73    74 #>  [3424,]   68   68   69   76   74   75   76   77   73    74 #>  [3425,]   69   69   70   77   75   76   75   76   72    73 #>  [3426,]   69   69   70   77   75   76   75   76   72    73 #>  [3427,]   69   69   70   77   75   76   75   76   72    73 #>  [3428,]   69   69   70   77   75   76   75   76   72    73 #>  [3429,]   68   68   69   76   74   75   77   77   73    74 #>  [3430,]   68   68   69   76   74   75   76   77   73    74 #>  [3431,]   68   68   69   76   74   75   76   77   73    74 #>  [3432,]   68   68   69   76   74   75   76   77   73    74 #>  [3433,]   69   69   70   77   75   76   75   76   72    73 #>  [3434,]   68   68   69   76   74   75   76   77   73    74 #>  [3435,]   68   68   69   76   74   75   77   77   73    74 #>  [3436,]   68   68   69   76   74   75   76   77   73    74 #>  [3437,]   68   68   69   76   74   75   77   77   73    74 #>  [3438,]   69   69   70   77   75   76   75   76   72    73 #>  [3439,]   68   68   69   76   74   75   76   77   73    74 #>  [3440,]   68   68   69   76   74   75   76   77   73    74 #>  [3441,]   69   69   70   77   75   76   75   76   72    73 #>  [3442,]   69   69   70   77   75   76   75   76   72    73 #>  [3443,]   69   69   70   77   75   76   75   76   72    73 #>  [3444,]   68   68   69   76   74   75   77   77   73    74 #>  [3445,]   69   69   70   77   75   76   75   76   72    73 #>  [3446,]   69   69   70   77   75   76   75   76   72    73 #>  [3447,]   68   68   69   76   74   75   77   77   73    74 #>  [3448,]   68   68   69   76   74   75   76   77   73    74 #>  [3449,]   68   68   69   76   74   75   76   77   73    74 #>  [3450,]   69   69   70   77   75   76   75   76   72    73 #>  [3451,]   69   69   70   77   75   76   75   76   72    73 #>  [3452,]   69   69   70   77   75   76   75   76   72    73 #>  [3453,]   69   69   70   77   75   76   75   76   72    73 #>  [3454,]   68   68   69   76   74   75   76   77   73    74 #>  [3455,]   69   69   70   77   75   76   75   76   72    73 #>  [3456,]   69   69   70   77   75   76   75   76   72    73 #>  [3457,]   69   69   70   77   75   76   75   76   72    73 #>  [3458,]   69   69   70   77   75   76   75   76   72    73 #>  [3459,]   68   68   69   76   74   75   77   77   73    74 #>  [3460,]   69   69   70   77   75   76   75   76   72    73 #>  [3461,]   69   69   70   77   75   76   75   76   72    73 #>  [3462,]   68   68   69   76   74   75   76   77   73    74 #>  [3463,]   69   69   70   77   75   76   75   76   72    73 #>  [3464,]   69   69   70   77   75   76   75   76   72    73 #>  [3465,]   69   69   70   77   75   76   75   76   72    73 #>  [3466,]   69   69   70   77   75   76   75   76   72    73 #>  [3467,]   69   69   70   77   75   76   75   76   72    73 #>  [3468,]   69   69   70   77   75   76   75   76   72    73 #>  [3469,]   69   69   70   77   75   76   75   76   72    73 #>  [3470,]   68   68   69   76   74   75   77   77   73    74 #>  [3471,]   69   69   70   77   75   76   75   76   72    73 #>  [3472,]   69   69   70   77   75   76   75   76   72    73 #>  [3473,]   69   69   70   77   75   76   75   76   72    73 #>  [3474,]   69   69   70   77   75   76   75   76   72    73 #>  [3475,]   69   69   70   77   75   76   75   76   72    73 #>  [3476,]   69   69   70   77   75   76   75   76   72    73 #>  [3477,]   68   68   69   76   74   75   77   77   73    74 #>  [3478,]   69   69   70   77   75   76   75   76   72    73 #>  [3479,]   68   68   69   76   74   75   77   77   73    74 #>  [3480,]   68   68   69   76   74   75   76   77   73    74 #>  [3481,]   69   69   70   77   75   76   75   76   72    73 #>  [3482,]   69   69   70   77   75   76   75   76   72    73 #>  [3483,]   68   68   69   76   74   75   77   77   73    74 #>  [3484,]   69   69   70   77   75   76   75   76   72    73 #>  [3485,]   68   68   69   76   74   75   76   77   73    74 #>  [3486,]   68   68   69   76   74   75   77   77   73    74 #>  [3487,]   69   69   70   77   75   76   75   76   72    73 #>  [3488,]   69   69   70   77   75   76   75   76   72    73 #>  [3489,]   69   69   70   77   75   76   75   76   72    73 #>  [3490,]   69   69   70   77   75   76   75   76   72    73 #>  [3491,]   69   69   70   77   75   76   75   76   72    73 #>  [3492,]   69   69   70   77   75   76   75   76   72    73 #>  [3493,]   68   68   69   76   74   75   77   77   73    74 #>  [3494,]   69   69   70   77   75   76   75   76   72    73 #>  [3495,]   68   68   69   76   74   75   76   77   73    74 #>  [3496,]   69   69   70   77   75   76   75   76   72    73 #>  [3497,]   69   69   70   77   75   76   75   76   72    73 #>  [3498,]   68   68   69   76   74   75   76   77   73    74 #>  [3499,]   69   69   70   77   75   76   75   76   72    73 #>  [3500,]   68   68   69   76   74   75   77   77   73    74 #>  [3501,]   71   71   72   79   77   78   79   79   75    77 #>  [3502,]   70   70   71   78   76   77   78   78   74    75 #>  [3503,]   70   70   71   78   76   77   78   78   74    75 #>  [3504,]   70   70   71   78   76   77   78   78   74    75 #>  [3505,]   70   70   71   78   76   77   78   78   74    75 #>  [3506,]   70   70   71   78   76   77   78   78   74    75 #>  [3507,]   70   70   71   78   76   77   78   78   74    75 #>  [3508,]   70   70   71   78   76   77   78   78   74    75 #>  [3509,]   71   71   72   79   77   78   79   79   75    76 #>  [3510,]   70   70   71   78   76   77   78   78   74    75 #>  [3511,]   70   70   71   78   76   77   78   78   74    75 #>  [3512,]   70   70   71   78   76   77   78   78   74    75 #>  [3513,]   71   71   72   79   77   78   79   79   75    77 #>  [3514,]   70   70   71   78   76   77   78   78   74    75 #>  [3515,]   70   70   71   78   76   77   78   78   74    75 #>  [3516,]   70   70   71   78   76   77   78   78   74    75 #>  [3517,]   71   71   72   79   77   78   79   79   75    77 #>  [3518,]   71   71   72   79   77   78   79   79   75    77 #>  [3519,]   70   70   71   78   76   77   78   78   74    75 #>  [3520,]   70   70   71   78   76   77   78   78   74    75 #>  [3521,]   70   70   71   78   76   77   78   78   74    75 #>  [3522,]   70   70   71   78   76   77   78   78   74    75 #>  [3523,]   70   70   71   78   76   77   78   78   74    75 #>  [3524,]   70   70   71   78   76   77   78   78   74    75 #>  [3525,]   70   70   71   78   76   77   78   78   74    75 #>  [3526,]   70   70   71   78   76   77   78   78   74    75 #>  [3527,]   71   71   72   79   77   78   79   79   75    77 #>  [3528,]   70   70   71   78   76   77   78   78   74    75 #>  [3529,]   70   70   71   78   76   77   78   78   74    75 #>  [3530,]   70   70   71   78   76   77   78   78   74    75 #>  [3531,]   70   70   71   78   76   77   78   78   74    75 #>  [3532,]   70   70   71   78   76   77   78   78   74    75 #>  [3533,]   70   70   71   78   76   77   78   78   74    75 #>  [3534,]   70   70   71   78   76   77   78   78   74    75 #>  [3535,]   70   70   71   78   76   77   78   78   74    75 #>  [3536,]   71   71   72   79   77   78   79   79   75    77 #>  [3537,]   70   70   71   78   76   77   78   78   74    75 #>  [3538,]   70   70   71   78   76   77   78   78   74    75 #>  [3539,]   70   70   71   78   76   77   78   78   74    75 #>  [3540,]   70   70   71   78   76   77   78   78   74    75 #>  [3541,]   70   70   71   78   76   77   78   78   74    75 #>  [3542,]   71   71   72   79   77   78   79   79   75    76 #>  [3543,]   70   70   71   78   76   77   78   78   74    75 #>  [3544,]   70   70   71   78   76   77   78   78   74    75 #>  [3545,]   70   70   71   78   76   77   78   78   74    75 #>  [3546,]   70   70   71   78   76   77   78   78   74    75 #>  [3547,]   70   70   71   78   76   77   78   78   74    75 #>  [3548,]   70   70   71   78   76   77   78   78   74    75 #>  [3549,]   70   70   71   78   76   77   78   78   74    75 #>  [3550,]   70   70   71   78   76   77   78   78   74    75 #>  [3551,]   71   71   72   79   77   78   79   79   75    77 #>  [3552,]   70   70   71   78   76   77   78   78   74    75 #>  [3553,]   71   71   72   79   77   78   79   79   75    77 #>  [3554,]   70   70   71   78   76   77   78   78   74    75 #>  [3555,]   70   70   71   78   76   77   78   78   74    75 #>  [3556,]   70   70   71   78   76   77   78   78   74    75 #>  [3557,]   70   70   71   78   76   77   78   78   74    75 #>  [3558,]   70   70   71   78   76   77   78   78   74    75 #>  [3559,]   70   70   71   78   76   77   78   78   74    75 #>  [3560,]   70   70   71   78   76   77   78   78   74    75 #>  [3561,]   70   70   71   78   76   77   78   78   74    75 #>  [3562,]   70   70   71   78   76   77   78   78   74    75 #>  [3563,]   70   70   71   78   76   77   78   78   74    75 #>  [3564,]   70   70   71   78   76   77   78   78   74    75 #>  [3565,]   71   71   72   79   77   78   79   79   75    76 #>  [3566,]   71   71   72   79   77   78   79   79   75    77 #>  [3567,]   70   70   71   78   76   77   78   78   74    75 #>  [3568,]   70   70   71   78   76   77   78   78   74    75 #>  [3569,]   70   70   71   78   76   77   78   78   74    75 #>  [3570,]   70   70   71   78   76   77   78   78   74    75 #>  [3571,]   70   70   71   78   76   77   78   78   74    75 #>  [3572,]   70   70   71   78   76   77   78   78   74    75 #>  [3573,]   70   70   71   78   76   77   78   78   74    75 #>  [3574,]   70   70   71   78   76   77   78   78   74    75 #>  [3575,]   70   70   71   78   76   77   78   78   74    75 #>  [3576,]   70   70   71   78   76   77   78   78   74    75 #>  [3577,]   70   70   71   78   76   77   78   78   74    75 #>  [3578,]   70   70   71   78   76   77   78   78   74    75 #>  [3579,]   71   71   72   79   77   78   79   79   75    76 #>  [3580,]   70   70   71   78   76   77   78   78   74    75 #>  [3581,]   70   70   71   78   76   77   78   78   74    75 #>  [3582,]   71   71   72   79   77   78   79   79   75    76 #>  [3583,]   70   70   71   78   76   77   78   78   74    75 #>  [3584,]   71   71   72   79   77   78   79   79   75    77 #>  [3585,]   70   70   71   78   76   77   78   78   74    75 #>  [3586,]   70   70   71   78   76   77   78   78   74    75 #>  [3587,]   71   71   72   79   77   78   79   79   75    77 #>  [3588,]   70   70   71   78   76   77   78   78   74    75 #>  [3589,]   70   70   71   78   76   77   78   78   74    75 #>  [3590,]   70   70   71   78   76   77   78   78   74    75 #>  [3591,]   71   71   72   79   77   78   79   79   75    76 #>  [3592,]   70   70   71   78   76   77   78   78   74    75 #>  [3593,]   71   71   72   79   77   78   79   79   75    77 #>  [3594,]   71   71   72   79   77   78   79   79   75    76 #>  [3595,]   70   70   71   78   76   77   78   78   74    75 #>  [3596,]   70   70   71   78   76   77   78   78   74    75 #>  [3597,]   70   70   71   78   76   77   78   78   74    75 #>  [3598,]   70   70   71   78   76   77   78   78   74    75 #>  [3599,]   70   70   71   78   76   77   78   78   74    75 #>  [3600,]   70   70   71   78   76   77   78   78   74    75 #>  [3601,]   73   72   74   81   79   80   81   81   77    79 #>  [3602,]   73   72   73   80   78   79   80   80   76    78 #>  [3603,]   72   72   73   80   78   79   80   80   76    78 #>  [3604,]   72   72   73   80   78   79   80   80   76    78 #>  [3605,]   72   72   74   81   79   80   81   81   77    79 #>  [3606,]   73   72   74   81   79   80   81   81   77    79 #>  [3607,]   73   72   73   80   78   79   80   80   76    78 #>  [3608,]   72   72   74   81   79   80   81   81   77    79 #>  [3609,]   72   72   74   81   79   80   81   81   77    79 #>  [3610,]   72   72   73   80   78   79   80   80   76    78 #>  [3611,]   73   72   73   80   78   79   80   80   76    78 #>  [3612,]   72   72   74   81   79   80   81   81   77    79 #>  [3613,]   73   72   73   80   78   79   80   80   76    78 #>  [3614,]   73   72   74   81   79   80   81   81   77    79 #>  [3615,]   73   72   74   81   79   80   81   81   77    79 #>  [3616,]   73   72   73   80   78   79   80   80   76    78 #>  [3617,]   73   72   73   80   78   79   80   80   76    78 #>  [3618,]   72   72   73   80   78   79   80   80   76    78 #>  [3619,]   73   72   73   80   78   79   80   80   76    78 #>  [3620,]   72   72   74   81   79   80   81   81   77    79 #>  [3621,]   73   72   73   80   78   79   80   80   76    78 #>  [3622,]   73   72   73   80   78   79   80   80   76    78 #>  [3623,]   72   72   73   80   78   79   80   80   76    78 #>  [3624,]   72   72   73   80   78   79   80   80   76    78 #>  [3625,]   72   72   73   80   78   79   80   80   76    78 #>  [3626,]   73   72   74   81   79   80   81   81   77    79 #>  [3627,]   73   72   73   80   78   79   80   80   76    78 #>  [3628,]   72   72   74   81   79   80   81   81   77    79 #>  [3629,]   73   72   73   80   78   79   80   80   76    78 #>  [3630,]   72   72   73   80   78   79   80   80   76    78 #>  [3631,]   72   72   73   80   78   79   80   80   76    78 #>  [3632,]   72   72   73   80   78   79   80   80   76    78 #>  [3633,]   73   72   74   81   79   80   81   81   77    79 #>  [3634,]   72   72   73   80   78   79   80   80   76    78 #>  [3635,]   73   72   73   80   78   79   80   80   76    78 #>  [3636,]   72   72   73   80   78   79   80   80   76    78 #>  [3637,]   73   72   73   80   78   79   80   80   76    78 #>  [3638,]   72   72   74   81   79   80   81   81   77    79 #>  [3639,]   72   72   73   80   78   79   80   80   76    78 #>  [3640,]   73   72   73   80   78   79   80   80   76    78 #>  [3641,]   73   72   74   81   79   80   81   81   77    79 #>  [3642,]   72   72   74   81   79   80   81   81   77    79 #>  [3643,]   72   72   74   81   79   80   81   81   77    79 #>  [3644,]   73   72   73   80   78   79   80   80   76    78 #>  [3645,]   72   72   74   81   79   80   81   81   77    79 #>  [3646,]   73   72   74   81   79   80   81   81   77    79 #>  [3647,]   73   72   73   80   78   79   80   80   76    78 #>  [3648,]   72   72   73   80   78   79   80   80   76    78 #>  [3649,]   72   72   73   80   78   79   80   80   76    78 #>  [3650,]   73   72   74   81   79   80   81   81   77    79 #>  [3651,]   72   72   74   81   79   80   81   81   77    79 #>  [3652,]   73   72   73   80   78   79   80   80   76    78 #>  [3653,]   72   72   74   81   79   80   81   81   77    79 #>  [3654,]   72   72   73   80   78   79   80   80   76    78 #>  [3655,]   73   72   74   81   79   80   81   81   77    79 #>  [3656,]   72   72   74   81   79   80   81   81   77    79 #>  [3657,]   72   72   74   81   79   80   81   81   77    79 #>  [3658,]   73   72   74   81   79   80   81   81   77    79 #>  [3659,]   73   72   73   80   78   79   80   80   76    78 #>  [3660,]   72   72   74   81   79   80   81   81   77    79 #>  [3661,]   73   72   74   81   79   80   81   81   77    79 #>  [3662,]   72   72   73   80   78   79   80   80   76    78 #>  [3663,]   73   72   74   81   79   80   81   81   77    79 #>  [3664,]   72   72   74   81   79   80   81   81   77    79 #>  [3665,]   72   72   74   81   79   80   81   81   77    79 #>  [3666,]   72   72   74   81   79   80   81   81   77    79 #>  [3667,]   72   72   74   81   79   80   81   81   77    79 #>  [3668,]   73   72   74   81   79   80   81   81   77    79 #>  [3669,]   73   72   73   80   78   79   80   80   76    78 #>  [3670,]   73   72   73   80   78   79   80   80   76    78 #>  [3671,]   73   72   74   81   79   80   81   81   77    79 #>  [3672,]   72   72   74   81   79   80   81   81   77    79 #>  [3673,]   73   72   74   81   79   80   81   81   77    79 #>  [3674,]   73   72   74   81   79   80   81   81   77    79 #>  [3675,]   73   72   74   81   79   80   81   81   77    79 #>  [3676,]   73   72   74   81   79   80   81   81   77    79 #>  [3677,]   73   72   73   80   78   79   80   80   76    78 #>  [3678,]   72   72   74   81   79   80   81   81   77    79 #>  [3679,]   73   72   73   80   78   79   80   80   76    78 #>  [3680,]   72   72   73   80   78   79   80   80   76    78 #>  [3681,]   73   72   74   81   79   80   81   81   77    79 #>  [3682,]   73   72   73   80   78   79   80   80   76    78 #>  [3683,]   73   72   73   80   78   79   80   80   76    78 #>  [3684,]   73   72   74   81   79   80   81   81   77    79 #>  [3685,]   72   72   73   80   78   79   80   80   76    78 #>  [3686,]   73   72   73   80   78   79   80   80   76    78 #>  [3687,]   73   72   74   81   79   80   81   81   77    79 #>  [3688,]   72   72   74   81   79   80   81   81   77    79 #>  [3689,]   72   72   73   80   78   79   80   80   76    78 #>  [3690,]   73   72   74   81   79   80   81   81   77    79 #>  [3691,]   72   72   74   81   79   80   81   81   77    79 #>  [3692,]   73   72   74   81   79   80   81   81   77    79 #>  [3693,]   73   72   73   80   78   79   80   80   76    78 #>  [3694,]   73   72   74   81   79   80   81   81   77    79 #>  [3695,]   72   72   73   80   78   79   80   80   76    78 #>  [3696,]   73   72   74   81   79   80   81   81   77    79 #>  [3697,]   73   72   74   81   79   80   81   81   77    79 #>  [3698,]   73   72   73   80   78   79   80   80   76    78 #>  [3699,]   73   72   73   80   78   79   80   80   76    78 #>  [3700,]   73   72   73   80   78   79   80   80   76    78 #>  [3701,]   74   73   75   82   80   83   84   84   78    80 #>  [3702,]   74   73   75   82   80   83   84   84   78    80 #>  [3703,]   74   73   75   82   80   83   84   84   78    80 #>  [3704,]   74   73   75   82   80   84   85   85   79    81 #>  [3705,]   74   73   75   82   80   83   84   84   78    80 #>  [3706,]   74   73   75   82   80   83   84   84   78    80 #>  [3707,]   75   74   76   83   81   81   82   82   80    82 #>  [3708,]   74   73   75   82   80   83   84   84   78    80 #>  [3709,]   74   73   75   82   80   83   84   84   78    80 #>  [3710,]   75   74   76   83   81   81   82   82   80    82 #>  [3711,]   74   73   75   82   80   83   84   84   78    80 #>  [3712,]   74   73   75   82   80   83   84   84   78    80 #>  [3713,]   74   73   75   82   80   83   84   84   78    80 #>  [3714,]   74   73   75   82   80   83   84   84   78    80 #>  [3715,]   74   73   75   82   80   84   85   85   79    81 #>  [3716,]   75   74   76   83   81   81   82   82   80    82 #>  [3717,]   74   73   75   82   80   83   84   84   78    80 #>  [3718,]   74   73   75   82   80   84   85   85   79    81 #>  [3719,]   74   73   75   82   80   83   84   84   78    80 #>  [3720,]   75   74   76   84   82   82   83   83   80    82 #>  [3721,]   74   73   75   82   80   84   85   85   79    81 #>  [3722,]   74   73   75   82   80   83   84   84   78    80 #>  [3723,]   74   73   75   82   80   84   85   85   79    81 #>  [3724,]   75   74   76   84   82   82   83   83   80    82 #>  [3725,]   74   73   75   82   80   84   85   85   79    81 #>  [3726,]   74   73   75   82   80   83   84   84   78    80 #>  [3727,]   74   73   75   82   80   84   85   85   79    81 #>  [3728,]   75   74   76   84   82   82   83   83   80    82 #>  [3729,]   74   73   75   82   80   83   84   84   78    80 #>  [3730,]   74   73   75   82   80   83   84   84   78    80 #>  [3731,]   74   73   75   82   80   83   84   84   78    80 #>  [3732,]   74   73   75   82   80   83   84   84   78    80 #>  [3733,]   74   73   75   82   80   83   84   84   78    80 #>  [3734,]   74   73   75   82   80   83   84   84   78    80 #>  [3735,]   74   73   75   82   80   83   84   84   78    80 #>  [3736,]   74   73   75   82   80   83   84   84   78    80 #>  [3737,]   74   73   75   82   80   83   84   84   78    80 #>  [3738,]   74   73   75   82   80   83   84   84   78    80 #>  [3739,]   74   73   75   82   80   84   85   85   79    81 #>  [3740,]   74   73   75   82   80   83   84   84   78    80 #>  [3741,]   74   73   75   82   80   83   84   84   78    80 #>  [3742,]   74   73   75   82   80   83   84   84   78    80 #>  [3743,]   74   73   75   82   80   84   85   85   79    81 #>  [3744,]   74   73   75   82   80   83   84   84   78    80 #>  [3745,]   74   73   75   82   80   84   85   85   79    81 #>  [3746,]   74   73   75   82   80   83   84   84   78    80 #>  [3747,]   74   73   75   82   80   83   84   84   78    80 #>  [3748,]   74   73   75   82   80   83   84   84   78    80 #>  [3749,]   74   73   75   82   80   83   84   84   78    80 #>  [3750,]   75   74   76   83   81   81   82   82   80    82 #>  [3751,]   74   73   75   82   80   83   84   84   78    80 #>  [3752,]   75   74   76   84   82   82   83   83   80    82 #>  [3753,]   74   73   75   82   80   84   85   85   79    81 #>  [3754,]   75   74   76   83   81   81   82   82   80    82 #>  [3755,]   74   73   75   82   80   83   84   84   78    80 #>  [3756,]   74   73   75   82   80   83   84   84   78    80 #>  [3757,]   74   73   75   82   80   83   84   84   78    80 #>  [3758,]   74   73   75   82   80   83   84   84   78    80 #>  [3759,]   74   73   75   82   80   83   84   84   78    80 #>  [3760,]   74   73   75   82   80   83   84   84   78    80 #>  [3761,]   74   73   75   82   80   84   85   85   79    81 #>  [3762,]   74   73   75   82   80   83   84   84   78    80 #>  [3763,]   74   73   75   82   80   83   84   84   78    80 #>  [3764,]   74   73   75   82   80   83   84   84   78    80 #>  [3765,]   74   73   75   82   80   83   84   84   78    80 #>  [3766,]   74   73   75   82   80   83   84   84   78    80 #>  [3767,]   74   73   75   82   80   83   84   84   78    80 #>  [3768,]   74   73   75   82   80   83   84   84   78    80 #>  [3769,]   74   73   75   82   80   83   84   84   78    80 #>  [3770,]   74   73   75   82   80   83   84   84   78    80 #>  [3771,]   74   73   75   82   80   83   84   84   78    80 #>  [3772,]   74   73   75   82   80   84   85   85   79    81 #>  [3773,]   74   73   75   82   80   84   85   85   79    81 #>  [3774,]   74   73   75   82   80   84   85   85   79    81 #>  [3775,]   74   73   75   82   80   84   85   85   79    81 #>  [3776,]   75   74   76   84   82   82   83   83   80    82 #>  [3777,]   74   73   75   82   80   84   85   85   79    81 #>  [3778,]   74   73   75   82   80   83   84   84   78    80 #>  [3779,]   74   73   75   82   80   83   84   84   78    80 #>  [3780,]   74   73   75   82   80   83   84   84   78    80 #>  [3781,]   74   73   75   82   80   83   84   84   78    80 #>  [3782,]   74   73   75   82   80   83   84   84   78    80 #>  [3783,]   74   73   75   82   80   83   84   84   78    80 #>  [3784,]   74   73   75   82   80   84   85   85   79    81 #>  [3785,]   74   73   75   82   80   83   84   84   78    80 #>  [3786,]   75   74   76   84   82   82   83   83   80    82 #>  [3787,]   74   73   75   82   80   83   84   84   78    80 #>  [3788,]   74   73   75   82   80   83   84   84   78    80 #>  [3789,]   74   73   75   82   80   83   84   84   78    80 #>  [3790,]   74   73   75   82   80   83   84   84   78    80 #>  [3791,]   75   74   76   83   81   81   82   82   80    82 #>  [3792,]   74   73   75   82   80   83   84   84   78    80 #>  [3793,]   74   73   75   82   80   83   84   84   78    80 #>  [3794,]   74   73   75   82   80   84   85   85   79    81 #>  [3795,]   74   73   75   82   80   84   85   85   79    81 #>  [3796,]   74   73   75   82   80   83   84   84   78    80 #>  [3797,]   74   73   75   82   80   83   84   84   78    80 #>  [3798,]   74   73   75   82   80   83   84   84   78    80 #>  [3799,]   74   73   75   82   80   83   84   84   78    80 #>  [3800,]   74   73   75   82   80   84   85   85   79    81 #>  [3801,]   77   76   78   86   84   86   87   87   82    84 #>  [3802,]   77   76   78   86   84   86   87   87   82    84 #>  [3803,]   77   76   78   86   84   86   87   87   82    84 #>  [3804,]   76   75   77   85   83   85   86   86   81    83 #>  [3805,]   77   76   78   86   84   86   87   87   82    84 #>  [3806,]   77   76   78   86   84   86   87   87   82    84 #>  [3807,]   77   76   78   86   84   86   87   87   82    84 #>  [3808,]   76   75   77   85   83   85   86   86   81    83 #>  [3809,]   76   75   77   85   83   85   86   86   81    83 #>  [3810,]   76   75   77   85   83   85   86   86   81    83 #>  [3811,]   77   76   78   86   84   86   87   87   82    84 #>  [3812,]   77   76   78   86   84   86   87   87   82    84 #>  [3813,]   77   76   78   86   84   86   87   87   82    84 #>  [3814,]   77   76   78   86   84   86   87   87   82    84 #>  [3815,]   77   76   78   86   84   86   87   87   82    84 #>  [3816,]   77   76   78   86   84   86   87   87   82    84 #>  [3817,]   77   76   78   86   84   86   87   87   82    84 #>  [3818,]   76   75   77   85   83   85   86   86   81    83 #>  [3819,]   77   76   78   86   84   86   87   87   82    84 #>  [3820,]   76   75   77   85   83   85   86   86   81    83 #>  [3821,]   77   76   78   86   84   86   87   87   82    84 #>  [3822,]   77   76   78   86   84   86   87   87   82    84 #>  [3823,]   77   76   78   86   84   86   87   87   82    84 #>  [3824,]   77   76   78   86   84   86   87   87   82    84 #>  [3825,]   77   76   78   86   84   86   87   87   82    84 #>  [3826,]   77   76   78   86   84   86   87   87   82    84 #>  [3827,]   77   76   78   86   84   86   87   87   82    84 #>  [3828,]   77   76   78   86   84   86   87   87   82    84 #>  [3829,]   77   76   78   86   84   86   87   87   82    84 #>  [3830,]   76   75   77   85   83   85   86   86   81    83 #>  [3831,]   77   76   78   86   84   86   87   87   82    84 #>  [3832,]   77   76   78   86   84   86   87   87   82    84 #>  [3833,]   77   76   78   86   84   86   87   87   82    84 #>  [3834,]   77   76   78   86   84   86   87   87   82    84 #>  [3835,]   77   76   78   86   84   86   87   87   82    84 #>  [3836,]   77   76   78   86   84   86   87   87   82    84 #>  [3837,]   77   76   78   86   84   86   87   87   82    84 #>  [3838,]   77   76   78   86   84   86   87   87   82    84 #>  [3839,]   76   75   77   85   83   85   86   86   81    83 #>  [3840,]   77   76   78   86   84   86   87   87   82    84 #>  [3841,]   77   76   78   86   84   86   87   87   82    84 #>  [3842,]   77   76   78   86   84   86   87   87   82    84 #>  [3843,]   76   75   77   85   83   85   86   86   81    83 #>  [3844,]   77   76   78   86   84   86   87   87   82    84 #>  [3845,]   76   75   77   85   83   85   86   86   81    83 #>  [3846,]   77   76   78   86   84   86   87   87   82    84 #>  [3847,]   77   76   78   86   84   86   87   87   82    84 #>  [3848,]   77   76   78   86   84   86   87   87   82    84 #>  [3849,]   76   75   77   85   83   85   86   86   81    83 #>  [3850,]   77   76   78   86   84   86   87   87   82    84 #>  [3851,]   76   75   77   85   83   85   86   86   81    83 #>  [3852,]   77   76   78   86   84   86   87   87   82    84 #>  [3853,]   76   75   77   85   83   85   86   86   81    83 #>  [3854,]   77   76   78   86   84   86   87   87   82    84 #>  [3855,]   77   76   78   86   84   86   87   87   82    84 #>  [3856,]   76   75   77   85   83   85   86   86   81    83 #>  [3857,]   77   76   78   86   84   86   87   87   82    84 #>  [3858,]   77   76   78   86   84   86   87   87   82    84 #>  [3859,]   77   76   78   86   84   86   87   87   82    84 #>  [3860,]   76   75   77   85   83   85   86   86   81    83 #>  [3861,]   77   76   78   86   84   86   87   87   82    84 #>  [3862,]   77   76   78   86   84   86   87   87   82    84 #>  [3863,]   77   76   78   86   84   86   87   87   82    84 #>  [3864,]   76   75   77   85   83   85   86   86   81    83 #>  [3865,]   76   75   77   85   83   85   86   86   81    83 #>  [3866,]   76   75   77   85   83   85   86   86   81    83 #>  [3867,]   76   75   77   85   83   85   86   86   81    83 #>  [3868,]   77   76   78   86   84   86   87   87   82    84 #>  [3869,]   77   76   78   86   84   86   87   87   82    84 #>  [3870,]   77   76   78   86   84   86   87   87   82    84 #>  [3871,]   77   76   78   86   84   86   87   87   82    84 #>  [3872,]   77   76   78   86   84   86   87   87   82    84 #>  [3873,]   77   76   78   86   84   86   87   87   82    84 #>  [3874,]   77   76   78   86   84   86   87   87   82    84 #>  [3875,]   77   76   78   86   84   86   87   87   82    84 #>  [3876,]   77   76   78   86   84   86   87   87   82    84 #>  [3877,]   77   76   78   86   84   86   87   87   82    84 #>  [3878,]   76   75   77   85   83   85   86   86   81    83 #>  [3879,]   77   76   78   86   84   86   87   87   82    84 #>  [3880,]   77   76   78   86   84   86   87   87   82    84 #>  [3881,]   77   76   78   86   84   86   87   87   82    84 #>  [3882,]   77   76   78   86   84   86   87   87   82    84 #>  [3883,]   77   76   78   86   84   86   87   87   82    84 #>  [3884,]   77   76   78   86   84   86   87   87   82    84 #>  [3885,]   76   75   77   85   83   85   86   86   81    83 #>  [3886,]   77   76   78   86   84   86   87   87   82    84 #>  [3887,]   77   76   78   86   84   86   87   87   82    84 #>  [3888,]   77   76   78   86   84   86   87   87   82    84 #>  [3889,]   76   75   77   85   83   85   86   86   81    83 #>  [3890,]   77   76   78   86   84   86   87   87   82    84 #>  [3891,]   76   75   77   85   83   85   86   86   81    83 #>  [3892,]   77   76   78   86   84   86   87   87   82    84 #>  [3893,]   77   76   78   86   84   86   87   87   82    84 #>  [3894,]   77   76   78   86   84   86   87   87   82    84 #>  [3895,]   76   75   77   85   83   85   86   86   81    83 #>  [3896,]   77   76   78   86   84   86   87   87   82    84 #>  [3897,]   77   76   78   86   84   86   87   87   82    84 #>  [3898,]   77   76   78   86   84   86   87   87   82    84 #>  [3899,]   77   76   78   86   84   86   87   87   82    84 #>  [3900,]   77   76   78   86   84   86   87   87   82    84 #>  [3901,]   79   78   80   88   86   88   89   89   83    85 #>  [3902,]   79   78   80   88   86   88   89   89   83    85 #>  [3903,]   78   77   79   87   85   87   88   88   83    85 #>  [3904,]   78   77   79   87   85   87   88   88   83    85 #>  [3905,]   78   77   79   87   85   87   88   88   83    85 #>  [3906,]   78   77   79   87   85   87   88   88   83    85 #>  [3907,]   79   78   80   88   86   88   89   89   83    85 #>  [3908,]   79   78   80   88   86   88   89   89   83    85 #>  [3909,]   78   77   79   87   85   87   88   88   83    85 #>  [3910,]   78   77   79   87   85   87   88   88   83    85 #>  [3911,]   78   77   79   87   85   87   88   88   83    85 #>  [3912,]   79   78   80   88   86   88   89   89   83    85 #>  [3913,]   79   78   80   88   86   88   89   89   83    85 #>  [3914,]   78   77   79   87   85   87   88   88   83    85 #>  [3915,]   79   78   80   88   86   88   89   89   83    85 #>  [3916,]   79   78   80   88   86   88   89   89   83    85 #>  [3917,]   79   78   80   88   86   88   89   89   83    85 #>  [3918,]   79   78   80   88   86   88   89   89   83    86 #>  [3919,]   79   78   80   88   86   88   89   89   83    85 #>  [3920,]   79   78   80   88   86   88   89   89   83    85 #>  [3921,]   78   77   79   87   85   87   88   88   83    85 #>  [3922,]   79   78   80   88   86   88   89   89   83    85 #>  [3923,]   79   78   80   88   86   88   89   89   83    85 #>  [3924,]   78   77   79   87   85   87   88   88   83    85 #>  [3925,]   78   77   79   87   85   87   88   88   83    85 #>  [3926,]   79   78   80   88   86   88   89   89   83    85 #>  [3927,]   79   78   80   88   86   88   89   89   83    85 #>  [3928,]   78   77   79   87   85   87   88   88   83    85 #>  [3929,]   79   78   80   88   86   88   89   89   83    85 #>  [3930,]   79   78   80   88   86   88   89   89   83    85 #>  [3931,]   78   77   79   87   85   87   88   88   83    85 #>  [3932,]   78   77   79   87   85   87   88   88   83    85 #>  [3933,]   79   78   80   88   86   88   89   89   83    85 #>  [3934,]   78   77   79   87   85   87   88   88   83    85 #>  [3935,]   78   77   79   87   85   87   88   88   83    85 #>  [3936,]   79   78   80   88   86   88   89   89   83    85 #>  [3937,]   79   78   80   88   86   88   89   89   83    85 #>  [3938,]   79   78   80   88   86   88   89   89   83    85 #>  [3939,]   78   77   79   87   85   87   88   88   83    85 #>  [3940,]   78   77   79   87   85   87   88   88   83    85 #>  [3941,]   79   78   80   88   86   88   89   89   83    85 #>  [3942,]   78   77   79   87   85   87   88   88   83    86 #>  [3943,]   79   78   80   88   86   88   89   89   83    85 #>  [3944,]   79   78   80   88   86   88   89   89   83    85 #>  [3945,]   79   78   80   88   86   88   89   89   83    85 #>  [3946,]   79   78   80   88   86   88   89   89   83    85 #>  [3947,]   78   77   79   87   85   87   88   88   83    85 #>  [3948,]   78   77   79   87   85   87   88   88   83    85 #>  [3949,]   79   78   80   88   86   88   89   89   83    85 #>  [3950,]   79   78   80   88   86   88   89   89   83    85 #>  [3951,]   79   78   80   88   86   88   89   89   83    86 #>  [3952,]   78   77   79   87   85   87   88   88   83    85 #>  [3953,]   79   78   80   88   86   88   89   89   83    86 #>  [3954,]   78   77   79   87   85   87   88   88   83    85 #>  [3955,]   79   78   80   88   86   88   89   89   83    85 #>  [3956,]   79   78   80   88   86   88   89   89   83    85 #>  [3957,]   78   77   79   87   85   87   88   88   83    85 #>  [3958,]   79   78   80   88   86   88   89   89   83    85 #>  [3959,]   79   78   80   88   86   88   89   89   83    85 #>  [3960,]   79   78   80   88   86   88   89   89   83    85 #>  [3961,]   79   78   80   88   86   88   89   89   83    85 #>  [3962,]   78   77   79   87   85   87   88   88   83    85 #>  [3963,]   79   78   80   88   86   88   89   89   83    85 #>  [3964,]   79   78   80   88   86   88   89   89   83    85 #>  [3965,]   78   77   79   87   85   87   88   88   83    85 #>  [3966,]   79   78   80   88   86   88   89   89   83    85 #>  [3967,]   78   77   79   87   85   87   88   88   83    85 #>  [3968,]   79   78   80   88   86   88   89   89   83    85 #>  [3969,]   79   78   80   88   86   88   89   89   83    85 #>  [3970,]   78   77   79   87   85   87   88   88   83    85 #>  [3971,]   79   78   80   88   86   88   89   89   83    85 #>  [3972,]   78   77   79   87   85   87   88   88   83    85 #>  [3973,]   78   77   79   87   85   87   88   88   83    85 #>  [3974,]   78   77   79   87   85   87   88   88   83    85 #>  [3975,]   79   78   80   88   86   88   89   89   83    85 #>  [3976,]   78   77   79   87   85   87   88   88   83    85 #>  [3977,]   79   78   80   88   86   88   89   89   83    85 #>  [3978,]   79   78   80   88   86   88   89   89   83    85 #>  [3979,]   78   77   79   87   85   87   88   88   83    86 #>  [3980,]   79   78   80   88   86   88   89   89   83    85 #>  [3981,]   79   78   80   88   86   88   89   89   83    85 #>  [3982,]   78   77   79   87   85   87   88   88   83    85 #>  [3983,]   79   78   80   88   86   88   89   89   83    85 #>  [3984,]   79   78   80   88   86   88   89   89   83    86 #>  [3985,]   79   78   80   88   86   88   89   89   83    85 #>  [3986,]   78   77   79   87   85   87   88   88   83    85 #>  [3987,]   79   78   80   88   86   88   89   89   83    85 #>  [3988,]   78   77   79   87   85   87   88   88   83    85 #>  [3989,]   78   77   79   87   85   87   88   88   83    85 #>  [3990,]   79   78   80   88   86   88   89   89   83    85 #>  [3991,]   78   77   79   87   85   87   88   88   83    85 #>  [3992,]   78   77   79   87   85   87   88   88   83    85 #>  [3993,]   79   78   80   88   86   88   89   89   83    86 #>  [3994,]   78   77   79   87   85   87   88   88   83    86 #>  [3995,]   79   78   80   88   86   88   89   89   83    85 #>  [3996,]   79   78   80   88   86   88   89   89   83    85 #>  [3997,]   79   78   80   88   86   88   89   89   83    85 #>  [3998,]   78   77   79   87   85   87   88   88   83    85 #>  [3999,]   78   77   79   87   85   87   88   88   83    85 #>  [4000,]   79   78   80   88   86   88   89   89   83    85 #>  [4001,]   81   80   82   90   88   90   91   91   85    87 #>  [4002,]   81   80   82   90   88   90   91   91   85    87 #>  [4003,]   81   80   82   90   88   90   91   91   85    87 #>  [4004,]   81   80   82   90   88   90   91   91   85    87 #>  [4005,]   81   80   82   90   88   90   91   91   85    87 #>  [4006,]   81   80   82   90   88   90   91   91   85    87 #>  [4007,]   80   79   81   89   87   89   90   90   84    87 #>  [4008,]   81   80   82   90   88   90   91   91   85    87 #>  [4009,]   81   80   82   90   88   90   91   91   85    87 #>  [4010,]   81   80   82   90   88   90   91   91   85    87 #>  [4011,]   81   80   82   90   88   90   91   91   85    87 #>  [4012,]   81   80   82   90   88   90   91   91   85    87 #>  [4013,]   81   80   82   90   88   90   91   91   85    87 #>  [4014,]   81   80   82   90   88   90   91   91   85    87 #>  [4015,]   81   80   82   90   88   90   91   91   85    87 #>  [4016,]   81   80   82   90   88   90   91   91   85    87 #>  [4017,]   81   80   82   90   88   90   91   91   85    87 #>  [4018,]   81   80   82   90   88   90   91   91   85    87 #>  [4019,]   81   80   82   90   88   90   91   91   85    87 #>  [4020,]   81   80   82   90   88   90   91   91   85    87 #>  [4021,]   80   79   81   89   87   89   90   90   84    87 #>  [4022,]   81   80   82   90   88   90   91   91   85    87 #>  [4023,]   81   80   82   90   88   90   91   91   85    87 #>  [4024,]   81   80   82   90   88   90   91   91   85    87 #>  [4025,]   81   80   82   90   88   90   91   91   85    87 #>  [4026,]   81   80   82   90   88   90   91   91   85    87 #>  [4027,]   81   80   82   90   88   90   91   91   85    87 #>  [4028,]   81   80   82   90   88   90   91   91   85    87 #>  [4029,]   81   80   82   90   88   90   91   91   85    87 #>  [4030,]   81   80   82   90   88   90   91   91   85    87 #>  [4031,]   81   80   82   90   88   90   91   91   85    87 #>  [4032,]   81   80   82   90   88   90   91   91   85    87 #>  [4033,]   81   80   82   90   88   90   91   91   85    87 #>  [4034,]   81   80   82   90   88   90   91   91   85    87 #>  [4035,]   81   80   82   90   88   90   91   91   85    87 #>  [4036,]   81   80   82   90   88   90   91   91   85    87 #>  [4037,]   81   80   82   90   88   90   91   91   85    87 #>  [4038,]   81   80   82   90   88   90   91   91   85    87 #>  [4039,]   80   79   81   89   87   89   90   90   84    87 #>  [4040,]   81   80   82   90   88   90   91   91   85    87 #>  [4041,]   81   80   82   90   88   90   91   91   85    87 #>  [4042,]   81   80   82   90   88   90   91   91   85    87 #>  [4043,]   81   80   82   90   88   90   91   91   85    87 #>  [4044,]   81   80   82   90   88   90   91   91   85    87 #>  [4045,]   81   80   82   90   88   90   91   91   85    87 #>  [4046,]   81   80   82   90   88   90   91   91   85    87 #>  [4047,]   81   80   82   90   88   90   91   91   85    87 #>  [4048,]   81   80   82   90   88   90   91   91   85    87 #>  [4049,]   80   79   81   89   87   89   90   90   84    87 #>  [4050,]   81   80   82   90   88   90   91   91   85    87 #>  [4051,]   81   80   82   90   88   90   91   91   85    87 #>  [4052,]   81   80   82   90   88   90   91   91   85    87 #>  [4053,]   81   80   82   90   88   90   91   91   85    87 #>  [4054,]   81   80   82   90   88   90   91   91   85    87 #>  [4055,]   81   80   82   90   88   90   91   91   85    87 #>  [4056,]   81   80   82   90   88   90   91   91   85    87 #>  [4057,]   81   80   82   90   88   90   91   91   85    87 #>  [4058,]   81   80   82   90   88   90   91   91   85    87 #>  [4059,]   81   80   82   90   88   90   91   91   85    87 #>  [4060,]   81   80   82   90   88   90   91   91   85    87 #>  [4061,]   81   80   82   90   88   90   91   91   85    87 #>  [4062,]   80   79   81   89   87   89   90   90   84    87 #>  [4063,]   81   80   82   90   88   90   91   91   85    87 #>  [4064,]   81   80   82   90   88   90   91   91   85    87 #>  [4065,]   81   80   82   90   88   90   91   91   85    87 #>  [4066,]   81   80   82   90   88   90   91   91   85    87 #>  [4067,]   81   80   82   90   88   90   91   91   85    87 #>  [4068,]   81   80   82   90   88   90   91   91   85    87 #>  [4069,]   81   80   82   90   88   90   91   91   85    87 #>  [4070,]   80   79   81   89   87   89   90   90   84    87 #>  [4071,]   81   80   82   90   88   90   91   91   85    87 #>  [4072,]   81   80   82   90   88   90   91   91   85    87 #>  [4073,]   81   80   82   90   88   90   91   91   85    87 #>  [4074,]   81   80   82   90   88   90   91   91   85    87 #>  [4075,]   81   80   82   90   88   90   91   91   85    87 #>  [4076,]   81   80   82   90   88   90   91   91   85    87 #>  [4077,]   81   80   82   90   88   90   91   91   85    87 #>  [4078,]   81   80   82   90   88   90   91   91   85    87 #>  [4079,]   81   80   82   90   88   90   91   91   85    87 #>  [4080,]   80   79   81   89   87   89   90   90   84    87 #>  [4081,]   81   80   82   90   88   90   91   91   85    87 #>  [4082,]   81   80   82   90   88   90   91   91   85    87 #>  [4083,]   81   80   82   90   88   90   91   91   85    87 #>  [4084,]   81   80   82   90   88   90   91   91   85    87 #>  [4085,]   81   80   82   90   88   90   91   91   85    87 #>  [4086,]   81   80   82   90   88   90   91   91   85    87 #>  [4087,]   81   80   82   90   88   90   91   91   85    87 #>  [4088,]   81   80   82   90   88   90   91   91   85    87 #>  [4089,]   81   80   82   90   88   90   91   91   85    87 #>  [4090,]   81   80   82   90   88   90   91   91   85    87 #>  [4091,]   81   80   82   90   88   90   91   91   85    87 #>  [4092,]   81   80   82   90   88   90   91   91   85    87 #>  [4093,]   81   80   82   90   88   90   91   91   85    87 #>  [4094,]   81   80   82   90   88   90   91   91   85    87 #>  [4095,]   80   79   81   89   87   89   90   90   84    87 #>  [4096,]   81   80   82   90   88   90   91   91   85    87 #>  [4097,]   81   80   82   90   88   90   91   91   85    87 #>  [4098,]   81   80   82   90   88   90   91   91   85    87 #>  [4099,]   81   80   82   90   88   90   91   91   85    87 #>  [4100,]   81   80   82   90   88   90   91   91   85    87 #>  [4101,]   83   81   84   92   90   91   92   92   88    90 #>  [4102,]   83   81   83   91   89   92   93   93   86    88 #>  [4103,]   83   81   83   91   89   92   93   93   86    88 #>  [4104,]   83   81   84   92   90   91   92   92   87    89 #>  [4105,]   83   81   84   92   90   91   92   92   87    89 #>  [4106,]   82   81   84   92   90   91   92   92   87    89 #>  [4107,]   83   81   83   91   89   92   93   93   86    88 #>  [4108,]   83   81   84   92   90   91   92   92   88    90 #>  [4109,]   83   81   84   92   90   91   92   92   87    89 #>  [4110,]   83   81   83   91   89   93   93   93   86    88 #>  [4111,]   83   81   84   92   90   91   92   92   87    89 #>  [4112,]   83   81   84   92   90   91   92   92   88    90 #>  [4113,]   83   81   83   91   89   92   93   93   86    88 #>  [4114,]   83   81   84   92   90   91   92   92   87    89 #>  [4115,]   83   81   84   92   90   91   92   92   88    90 #>  [4116,]   83   81   83   91   89   92   93   93   86    88 #>  [4117,]   83   81   84   92   90   91   92   92   88    90 #>  [4118,]   83   81   83   91   89   92   93   93   86    88 #>  [4119,]   83   81   83   91   89   92   93   93   86    88 #>  [4120,]   82   81   84   92   90   91   92   92   88    90 #>  [4121,]   82   81   83   91   89   92   93   93   86    88 #>  [4122,]   83   81   83   91   89   92   93   93   86    88 #>  [4123,]   83   81   83   91   89   92   93   93   86    88 #>  [4124,]   83   81   83   91   89   92   93   93   86    88 #>  [4125,]   82   81   84   92   90   91   92   92   87    89 #>  [4126,]   83   81   84   92   90   91   92   92   88    90 #>  [4127,]   83   81   84   92   90   91   92   92   88    90 #>  [4128,]   83   81   84   92   90   91   92   92   87    89 #>  [4129,]   83   81   83   91   89   93   93   93   86    88 #>  [4130,]   83   81   83   91   89   92   93   93   86    88 #>  [4131,]   83   81   83   91   89   92   93   93   86    88 #>  [4132,]   83   81   83   91   89   93   93   93   86    88 #>  [4133,]   83   81   84   92   90   91   92   92   88    90 #>  [4134,]   83   81   83   91   89   92   93   93   86    88 #>  [4135,]   82   81   83   91   89   92   93   93   86    88 #>  [4136,]   83   81   83   91   89   92   93   93   86    88 #>  [4137,]   83   81   83   91   89   92   93   93   86    88 #>  [4138,]   83   81   84   92   90   91   92   92   88    90 #>  [4139,]   83   81   83   91   89   92   93   93   86    88 #>  [4140,]   83   81   83   91   89   92   93   93   86    88 #>  [4141,]   83   81   84   92   90   91   92   92   88    90 #>  [4142,]   83   81   84   92   90   91   92   92   87    89 #>  [4143,]   83   81   84   92   90   91   92   92   88    90 #>  [4144,]   82   81   83   91   89   92   93   93   86    88 #>  [4145,]   83   81   84   92   90   91   92   92   88    90 #>  [4146,]   83   81   84   92   90   91   92   92   88    90 #>  [4147,]   83   81   83   91   89   92   93   93   86    88 #>  [4148,]   83   81   83   91   89   93   93   93   86    88 #>  [4149,]   83   81   83   91   89   92   93   93   86    88 #>  [4150,]   83   81   84   92   90   91   92   92   88    90 #>  [4151,]   83   81   84   92   90   91   92   92   88    90 #>  [4152,]   83   81   84   92   90   91   92   92   87    89 #>  [4153,]   82   81   84   92   90   91   92   92   88    90 #>  [4154,]   83   81   83   91   89   92   93   93   86    88 #>  [4155,]   83   81   84   92   90   91   92   92   88    90 #>  [4156,]   82   81   84   92   90   91   92   92   88    90 #>  [4157,]   83   81   84   92   90   91   92   92   87    89 #>  [4158,]   83   81   84   92   90   91   92   92   88    90 #>  [4159,]   83   81   83   91   89   92   93   93   86    88 #>  [4160,]   83   81   84   92   90   91   92   92   88    90 #>  [4161,]   83   81   84   92   90   91   92   92   88    90 #>  [4162,]   83   81   83   91   89   92   93   93   86    88 #>  [4163,]   83   81   84   92   90   91   92   92   88    90 #>  [4164,]   83   81   84   92   90   91   92   92   88    90 #>  [4165,]   82   81   84   92   90   91   92   92   87    89 #>  [4166,]   83   81   84   92   90   91   92   92   88    90 #>  [4167,]   83   81   84   92   90   91   92   92   87    89 #>  [4168,]   83   81   84   92   90   91   92   92   88    90 #>  [4169,]   83   81   84   92   90   91   92   92   88    90 #>  [4170,]   83   81   83   91   89   92   93   93   86    88 #>  [4171,]   83   81   84   92   90   91   92   92   88    90 #>  [4172,]   83   81   84   92   90   91   92   92   87    89 #>  [4173,]   83   81   84   92   90   91   92   92   87    89 #>  [4174,]   82   81   84   92   90   91   92   92   87    89 #>  [4175,]   83   81   84   92   90   91   92   92   88    90 #>  [4176,]   83   81   84   92   90   91   92   92   87    89 #>  [4177,]   83   81   83   91   89   92   93   93   86    88 #>  [4178,]   83   81   84   92   90   91   92   92   88    90 #>  [4179,]   83   81   83   91   89   92   93   93   86    88 #>  [4180,]   82   81   83   91   89   92   93   93   86    88 #>  [4181,]   83   81   84   92   90   91   92   92   88    90 #>  [4182,]   83   81   84   92   90   91   92   92   87    89 #>  [4183,]   83   81   83   91   89   92   93   93   86    88 #>  [4184,]   83   81   84   92   90   91   92   92   88    90 #>  [4185,]   82   81   83   91   89   93   93   93   86    88 #>  [4186,]   82   81   83   91   89   92   93   93   86    88 #>  [4187,]   83   81   84   92   90   91   92   92   88    90 #>  [4188,]   83   81   84   92   90   91   92   92   88    90 #>  [4189,]   82   81   84   92   90   91   92   92   87    89 #>  [4190,]   83   81   84   92   90   91   92   92   88    90 #>  [4191,]   83   81   84   92   90   91   92   92   87    89 #>  [4192,]   83   81   84   92   90   91   92   92   88    90 #>  [4193,]   83   81   83   91   89   92   93   93   86    88 #>  [4194,]   83   81   84   92   90   91   92   92   87    89 #>  [4195,]   83   81   83   91   89   92   93   93   86    88 #>  [4196,]   83   81   84   92   90   91   92   92   88    90 #>  [4197,]   83   81   84   92   90   91   92   92   88    90 #>  [4198,]   83   81   83   91   89   92   93   93   86    88 #>  [4199,]   83   81   84   92   90   91   92   92   88    90 #>  [4200,]   83   81   83   91   89   92   93   93   86    88 #>  [4201,]   84   82   85   93   91   94   94   94   89    91 #>  [4202,]   84   82   85   93   91   94   94   94   89    91 #>  [4203,]   84   82   86   94   92   95   95   95   90    92 #>  [4204,]   84   82   85   93   91   94   94   94   89    91 #>  [4205,]   84   82   85   93   91   94   94   94   89    91 #>  [4206,]   84   82   86   94   92   95   95   95   90    92 #>  [4207,]   84   82   85   93   91   94   94   94   89    91 #>  [4208,]   85   82   85   93   91   94   94   94   89    91 #>  [4209,]   84   82   85   93   91   94   94   94   89    91 #>  [4210,]   84   82   85   93   91   94   94   94   89    91 #>  [4211,]   84   82   85   93   91   94   94   94   89    91 #>  [4212,]   84   82   86   94   92   95   95   95   90    92 #>  [4213,]   85   82   85   93   91   94   94   94   89    91 #>  [4214,]   84   82   85   93   91   94   94   94   89    91 #>  [4215,]   85   82   85   93   91   94   94   94   89    91 #>  [4216,]   84   82   85   93   91   94   94   94   89    91 #>  [4217,]   84   82   85   93   91   94   94   94   89    91 #>  [4218,]   84   82   85   93   91   94   94   94   89    91 #>  [4219,]   85   82   86   94   92   95   95   95   90    92 #>  [4220,]   85   82   86   94   92   95   95   95   90    92 #>  [4221,]   84   82   85   93   91   94   94   94   89    91 #>  [4222,]   85   82   85   93   91   94   94   94   89    91 #>  [4223,]   84   82   85   93   91   94   94   94   89    91 #>  [4224,]   84   82   85   93   91   94   94   94   89    91 #>  [4225,]   84   82   86   94   92   95   95   95   90    92 #>  [4226,]   85   82   85   93   91   94   94   94   89    91 #>  [4227,]   85   82   85   93   91   94   94   94   89    91 #>  [4228,]   84   82   86   94   92   95   95   95   90    92 #>  [4229,]   85   82   85   93   91   94   94   94   89    91 #>  [4230,]   84   82   85   93   91   94   94   94   89    91 #>  [4231,]   84   82   85   93   91   94   94   94   89    91 #>  [4232,]   84   82   85   93   91   94   94   94   89    91 #>  [4233,]   84   82   86   94   92   95   95   95   90    92 #>  [4234,]   84   82   86   94   92   95   95   95   90    92 #>  [4235,]   84   82   85   93   91   94   94   94   89    91 #>  [4236,]   85   82   85   93   91   94   94   94   89    91 #>  [4237,]   85   82   85   93   91   94   94   94   89    91 #>  [4238,]   85   82   85   93   91   94   94   94   89    91 #>  [4239,]   84   82   85   93   91   94   94   94   89    91 #>  [4240,]   84   82   85   93   91   94   94   94   89    91 #>  [4241,]   85   82   85   93   91   94   94   94   89    91 #>  [4242,]   84   82   85   93   91   94   94   94   89    91 #>  [4243,]   85   82   85   93   91   94   94   94   89    91 #>  [4244,]   84   82   85   93   91   94   94   94   89    91 #>  [4245,]   84   82   85   93   91   94   94   94   89    91 #>  [4246,]   85   82   85   93   91   94   94   94   89    91 #>  [4247,]   84   82   85   93   91   94   94   94   89    91 #>  [4248,]   84   82   85   93   91   94   94   94   89    91 #>  [4249,]   84   82   85   93   91   94   94   94   89    91 #>  [4250,]   85   82   85   93   91   94   94   94   89    91 #>  [4251,]   85   82   85   93   91   94   94   94   89    91 #>  [4252,]   84   82   85   93   91   94   94   94   89    91 #>  [4253,]   85   82   85   93   91   94   94   94   89    91 #>  [4254,]   84   82   85   93   91   94   94   94   89    91 #>  [4255,]   85   82   85   93   91   94   94   94   89    91 #>  [4256,]   84   82   85   93   91   94   94   94   89    91 #>  [4257,]   84   82   85   93   91   94   94   94   89    91 #>  [4258,]   85   82   85   93   91   94   94   94   89    91 #>  [4259,]   85   82   85   93   91   94   94   94   89    91 #>  [4260,]   85   82   86   94   92   95   95   95   90    92 #>  [4261,]   84   82   85   93   91   94   94   94   89    91 #>  [4262,]   84   82   85   93   91   94   94   94   89    91 #>  [4263,]   84   82   85   93   91   94   94   94   89    91 #>  [4264,]   85   82   85   93   91   94   94   94   89    91 #>  [4265,]   84   82   86   94   92   95   95   95   90    92 #>  [4266,]   85   82   85   93   91   94   94   94   89    91 #>  [4267,]   84   82   85   93   91   94   94   94   89    91 #>  [4268,]   84   82   85   93   91   94   94   94   89    91 #>  [4269,]   85   82   85   93   91   94   94   94   89    91 #>  [4270,]   84   82   86   94   92   95   95   95   90    92 #>  [4271,]   85   82   85   93   91   94   94   94   89    91 #>  [4272,]   84   82   85   93   91   94   94   94   89    91 #>  [4273,]   84   82   86   94   92   95   95   95   90    92 #>  [4274,]   84   82   85   93   91   94   94   94   89    91 #>  [4275,]   84   82   85   93   91   94   94   94   89    91 #>  [4276,]   84   82   85   93   91   94   94   94   89    91 #>  [4277,]   85   82   85   93   91   94   94   94   89    91 #>  [4278,]   84   82   85   93   91   94   94   94   89    91 #>  [4279,]   84   82   85   93   91   94   94   94   89    91 #>  [4280,]   85   82   85   93   91   94   94   94   89    91 #>  [4281,]   85   82   85   93   91   94   94   94   89    91 #>  [4282,]   84   82   85   93   91   94   94   94   89    91 #>  [4283,]   85   82   85   93   91   94   94   94   89    91 #>  [4284,]   85   82   85   93   91   94   94   94   89    91 #>  [4285,]   85   82   85   93   91   94   94   94   89    91 #>  [4286,]   84   82   85   93   91   94   94   94   89    91 #>  [4287,]   85   82   85   93   91   94   94   94   89    91 #>  [4288,]   84   82   85   93   91   94   94   94   89    91 #>  [4289,]   84   82   85   93   91   94   94   94   89    91 #>  [4290,]   85   82   85   93   91   94   94   94   89    91 #>  [4291,]   84   82   85   93   91   94   94   94   89    91 #>  [4292,]   84   82   85   93   91   94   94   94   89    91 #>  [4293,]   84   82   86   94   92   95   95   95   90    92 #>  [4294,]   84   82   85   93   91   94   94   94   89    91 #>  [4295,]   85   82   85   93   91   94   94   94   89    91 #>  [4296,]   85   82   85   93   91   94   94   94   89    91 #>  [4297,]   85   82   86   94   92   95   95   95   90    92 #>  [4298,]   84   82   86   94   92   95   95   95   90    92 #>  [4299,]   84   82   85   93   91   94   94   94   89    91 #>  [4300,]   85   82   85   93   91   94   94   94   89    91 #>  [4301,]   87   84   87   96   93   97   97   97   92    94 #>  [4302,]   86   83   87   95   93   97   97   97   92    94 #>  [4303,]   86   83   87   96   93   97   97   97   92    94 #>  [4304,]   87   84   87   96   93   96   96   96   91    93 #>  [4305,]   87   84   87   96   93   97   97   97   92    94 #>  [4306,]   87   84   87   95   93   97   97   97   92    94 #>  [4307,]   86   83   87   96   93   97   97   97   92    94 #>  [4308,]   87   84   87   96   93   96   96   96   91    93 #>  [4309,]   87   84   87   96   93   96   96   96   91    93 #>  [4310,]   86   83   87   96   93   97   97   97   92    94 #>  [4311,]   87   84   87   95   93   96   96   96   91    93 #>  [4312,]   87   84   87   95   93   97   97   97   92    94 #>  [4313,]   86   83   87   96   93   96   96   96   91    93 #>  [4314,]   87   84   87   96   93   97   97   97   92    94 #>  [4315,]   87   84   87   95   93   97   97   97   92    94 #>  [4316,]   86   83   87   96   93   97   97   97   92    94 #>  [4317,]   86   83   87   95   93   96   96   96   91    93 #>  [4318,]   86   83   87   96   93   97   97   97   92    94 #>  [4319,]   86   83   87   95   93   97   97   97   92    94 #>  [4320,]   87   84   87   96   93   97   97   97   92    94 #>  [4321,]   86   83   87   96   93   97   97   97   92    94 #>  [4322,]   86   83   87   96   93   96   96   96   91    93 #>  [4323,]   86   83   87   95   93   97   97   97   92    94 #>  [4324,]   86   83   87   96   93   97   97   97   92    94 #>  [4325,]   86   83   87   96   93   97   97   97   92    94 #>  [4326,]   87   84   87   95   93   97   97   97   92    94 #>  [4327,]   86   83   87   96   93   96   96   96   91    93 #>  [4328,]   87   84   87   96   93   97   97   97   92    94 #>  [4329,]   86   83   87   95   93   97   97   97   92    94 #>  [4330,]   86   83   87   95   93   97   97   97   92    94 #>  [4331,]   86   83   87   95   93   97   97   97   92    94 #>  [4332,]   86   83   87   96   93   97   97   97   92    94 #>  [4333,]   87   84   87   96   93   97   97   97   92    94 #>  [4334,]   86   83   87   95   93   97   97   97   92    94 #>  [4335,]   86   83   87   95   93   96   96   96   91    93 #>  [4336,]   86   83   87   96   93   97   97   97   92    94 #>  [4337,]   86   83   87   95   93   97   97   97   92    94 #>  [4338,]   87   84   87   96   93   97   97   97   92    94 #>  [4339,]   86   83   87   96   93   97   97   97   92    94 #>  [4340,]   86   83   87   96   93   97   97   97   92    94 #>  [4341,]   87   84   87   96   93   97   97   97   92    94 #>  [4342,]   87   84   87   95   93   97   97   97   92    94 #>  [4343,]   87   84   87   95   93   97   97   97   92    94 #>  [4344,]   86   83   87   95   93   96   96   96   91    93 #>  [4345,]   87   84   87   96   93   97   97   97   92    94 #>  [4346,]   87   84   87   96   93   97   97   97   92    94 #>  [4347,]   86   83   87   95   93   97   97   97   92    94 #>  [4348,]   86   83   87   95   93   97   97   97   92    94 #>  [4349,]   86   83   87   96   93   96   96   96   91    93 #>  [4350,]   87   84   87   96   93   97   97   97   92    94 #>  [4351,]   87   84   87   96   93   97   97   97   92    94 #>  [4352,]   87   84   87   96   93   96   96   96   91    93 #>  [4353,]   87   84   87   96   93   97   97   97   92    94 #>  [4354,]   86   83   87   96   93   97   97   97   92    94 #>  [4355,]   87   84   87   96   93   96   96   96   91    93 #>  [4356,]   87   84   87   95   93   97   97   97   92    94 #>  [4357,]   87   84   87   96   93   97   97   97   92    94 #>  [4358,]   87   84   87   96   93   96   96   96   91    93 #>  [4359,]   86   83   87   96   93   97   97   97   92    94 #>  [4360,]   87   84   87   95   93   97   97   97   92    94 #>  [4361,]   87   84   87   95   93   97   97   97   92    94 #>  [4362,]   86   83   87   96   93   97   97   97   92    94 #>  [4363,]   87   84   87   95   93   97   97   97   92    94 #>  [4364,]   87   84   87   95   93   97   97   97   92    94 #>  [4365,]   87   84   87   95   93   97   97   97   92    94 #>  [4366,]   87   84   87   95   93   96   96   96   91    93 #>  [4367,]   87   84   87   96   93   97   97   97   92    94 #>  [4368,]   87   84   87   95   93   97   97   97   92    94 #>  [4369,]   86   83   87   96   93   97   97   97   92    94 #>  [4370,]   86   83   87   95   93   97   97   97   92    94 #>  [4371,]   87   84   87   96   93   97   97   97   92    94 #>  [4372,]   87   84   87   96   93   97   97   97   92    94 #>  [4373,]   87   84   87   96   93   97   97   97   92    94 #>  [4374,]   87   84   87   96   93   97   97   97   92    94 #>  [4375,]   87   84   87   95   93   97   97   97   92    94 #>  [4376,]   87   84   87   96   93   97   97   97   92    94 #>  [4377,]   86   83   87   96   93   97   97   97   92    94 #>  [4378,]   87   84   87   95   93   97   97   97   92    94 #>  [4379,]   86   83   87   95   93   96   96   96   91    93 #>  [4380,]   86   83   87   96   93   96   96   96   91    93 #>  [4381,]   87   84   87   95   93   96   96   96   91    93 #>  [4382,]   86   83   87   96   93   96   96   96   91    93 #>  [4383,]   86   83   87   96   93   96   96   96   91    93 #>  [4384,]   87   84   87   96   93   97   97   97   92    94 #>  [4385,]   86   83   87   96   93   97   97   97   92    94 #>  [4386,]   86   83   87   96   93   97   97   97   92    94 #>  [4387,]   87   84   87   96   93   96   96   96   91    93 #>  [4388,]   87   84   87   96   93   96   96   96   91    93 #>  [4389,]   87   84   87   96   93   96   96   96   91    93 #>  [4390,]   87   84   87   96   93   96   96   96   91    93 #>  [4391,]   87   84   87   96   93   97   97   97   92    94 #>  [4392,]   87   84   87   95   93   96   96   96   91    93 #>  [4393,]   86   83   87   96   93   97   97   97   92    94 #>  [4394,]   87   84   87   95   93   97   97   97   92    94 #>  [4395,]   86   83   87   95   93   96   96   96   91    93 #>  [4396,]   87   84   87   95   93   97   97   97   92    94 #>  [4397,]   87   84   87   96   93   97   97   97   92    94 #>  [4398,]   86   83   87   96   93   97   97   97   92    94 #>  [4399,]   86   83   87   96   93   96   96   96   91    93 #>  [4400,]   86   83   87   95   93   97   97   97   92    94 #>  [4401,]   89   86   89   97   94   98   98   98   93    95 #>  [4402,]   89   86   89   97   94   98   98   98   93    95 #>  [4403,]   88   85   88   99   96   99   99   99   94    96 #>  [4404,]   88   85   88   98   95   99   99   99   94    96 #>  [4405,]   88   85   88   99   96   99   99   99   94    96 #>  [4406,]   88   85   88   99   96   99   99   99   94    96 #>  [4407,]   89   86   89   97   94   98   98   98   93    95 #>  [4408,]   89   86   89   97   94   98   98   98   93    95 #>  [4409,]   88   85   88   98   95   99   99   99   94    96 #>  [4410,]   88   85   88   98   95   99   99   99   94    96 #>  [4411,]   88   85   88   99   96   99   99   99   94    96 #>  [4412,]   89   86   89   97   94   98   98   98   93    95 #>  [4413,]   89   86   89   97   94   98   98   98   93    95 #>  [4414,]   88   85   88   99   96   99   99   99   94    96 #>  [4415,]   89   86   89   97   94   98   98   98   93    95 #>  [4416,]   89   86   89   97   94   98   98   98   93    95 #>  [4417,]   89   86   89   97   94   98   98   98   93    95 #>  [4418,]   89   86   89   97   94   98   98   98   93    95 #>  [4419,]   89   86   89   97   94   98   98   98   93    95 #>  [4420,]   89   86   89   97   94   98   98   98   93    95 #>  [4421,]   88   85   88   99   96   99   99   99   94    96 #>  [4422,]   89   86   89   97   94   98   98   98   93    95 #>  [4423,]   89   86   89   97   94   98   98   98   93    95 #>  [4424,]   88   85   88   99   96   99   99   99   94    96 #>  [4425,]   88   85   88   99   96   99   99   99   94    96 #>  [4426,]   89   86   89   97   94   98   98   98   93    95 #>  [4427,]   89   86   89   97   94   98   98   98   93    95 #>  [4428,]   88   85   88   99   96   99   99   99   94    96 #>  [4429,]   89   86   89   97   94   98   98   98   93    95 #>  [4430,]   89   86   89   97   94   98   98   98   93    95 #>  [4431,]   88   85   88   99   96   99   99   99   94    96 #>  [4432,]   88   85   88   99   96   99   99   99   94    96 #>  [4433,]   89   86   89   97   94   98   98   98   93    95 #>  [4434,]   88   85   88   99   96   99   99   99   94    96 #>  [4435,]   88   85   88   99   96   99   99   99   94    96 #>  [4436,]   89   86   89   97   94   98   98   98   93    95 #>  [4437,]   89   86   89   97   94   98   98   98   93    95 #>  [4438,]   89   86   89   97   94   98   98   98   93    95 #>  [4439,]   88   85   88   99   96   99   99   99   94    96 #>  [4440,]   88   85   88   99   96   99   99   99   94    96 #>  [4441,]   89   86   89   97   94   98   98   98   93    95 #>  [4442,]   88   85   88   99   96   99   99   99   94    96 #>  [4443,]   89   86   89   97   94   98   98   98   93    95 #>  [4444,]   89   86   89   97   94   98   98   98   93    95 #>  [4445,]   89   86   89   97   94   98   98   98   93    95 #>  [4446,]   89   86   89   97   94   98   98   98   93    95 #>  [4447,]   88   85   88   99   96   99   99   99   94    96 #>  [4448,]   88   85   88   99   96   99   99   99   94    96 #>  [4449,]   89   86   89   97   94   98   98   98   93    95 #>  [4450,]   89   86   89   97   94   98   98   98   93    95 #>  [4451,]   89   86   89   97   94   98   98   98   93    95 #>  [4452,]   88   85   88   99   96   99   99   99   94    96 #>  [4453,]   89   86   89   97   94   98   98   98   93    95 #>  [4454,]   88   85   88   99   96   99   99   99   94    96 #>  [4455,]   89   86   89   97   94   98   98   98   93    95 #>  [4456,]   89   86   89   97   94   98   98   98   93    95 #>  [4457,]   88   85   88   99   96   99   99   99   94    96 #>  [4458,]   89   86   89   97   94   98   98   98   93    95 #>  [4459,]   89   86   89   97   94   98   98   98   93    95 #>  [4460,]   89   86   89   97   94   98   98   98   93    95 #>  [4461,]   89   86   89   97   94   98   98   98   93    95 #>  [4462,]   88   85   88   99   96   99   99   99   94    96 #>  [4463,]   89   86   89   97   94   98   98   98   93    95 #>  [4464,]   89   86   89   97   94   98   98   98   93    95 #>  [4465,]   88   85   88   99   96   99   99   99   94    96 #>  [4466,]   89   86   89   97   94   98   98   98   93    95 #>  [4467,]   88   85   88   98   95   99   99   99   94    96 #>  [4468,]   89   86   89   97   94   98   98   98   93    95 #>  [4469,]   89   86   89   97   94   98   98   98   93    95 #>  [4470,]   88   85   88   99   96   99   99   99   94    96 #>  [4471,]   89   86   89   97   94   98   98   98   93    95 #>  [4472,]   88   85   88   99   96   99   99   99   94    96 #>  [4473,]   88   85   88   99   96   99   99   99   94    96 #>  [4474,]   88   85   88   99   96   99   99   99   94    96 #>  [4475,]   89   86   89   97   94   98   98   98   93    95 #>  [4476,]   88   85   88   99   96   99   99   99   94    96 #>  [4477,]   89   86   89   97   94   98   98   98   93    95 #>  [4478,]   89   86   89   97   94   98   98   98   93    95 #>  [4479,]   88   85   88   99   96   99   99   99   94    96 #>  [4480,]   89   86   89   97   94   98   98   98   93    95 #>  [4481,]   89   86   89   97   94   98   98   98   93    95 #>  [4482,]   88   85   88   99   96   99   99   99   94    96 #>  [4483,]   89   86   89   97   94   98   98   98   93    95 #>  [4484,]   89   86   89   97   94   98   98   98   93    95 #>  [4485,]   89   86   89   97   94   98   98   98   93    95 #>  [4486,]   89   86   89   97   94   98   98   98   93    95 #>  [4487,]   89   86   89   97   94   98   98   98   93    95 #>  [4488,]   89   86   89   97   94   98   98   98   93    95 #>  [4489,]   88   85   88   99   96   99   99   99   94    96 #>  [4490,]   89   86   89   97   94   98   98   98   93    95 #>  [4491,]   88   85   88   98   95   99   99   99   94    96 #>  [4492,]   89   86   89   97   94   98   98   98   93    95 #>  [4493,]   89   86   89   97   94   98   98   98   93    95 #>  [4494,]   88   85   88   99   96   99   99   99   94    96 #>  [4495,]   89   86   89   97   94   98   98   98   93    95 #>  [4496,]   89   86   89   97   94   98   98   98   93    95 #>  [4497,]   89   86   89   97   94   98   98   98   93    95 #>  [4498,]   88   85   88   99   96   99   99   99   94    96 #>  [4499,]   89   86   89   97   94   98   98   98   93    95 #>  [4500,]   89   86   89   97   94   98   98   98   93    95 #>  [4501,]   91   88   92  101   98  101  101  102   96    98 #>  [4502,]   90   87   90  100   97  100  100  100   95    97 #>  [4503,]   90   87   90  100   97  100  100  100   95    97 #>  [4504,]   91   88   92  101   98  101  101  102   96    98 #>  [4505,]   91   88   92  101   98  101  101  101   96    98 #>  [4506,]   91   88   91  101   98  101  101  101   96    98 #>  [4507,]   90   87   90  100   97  100  100  100   95    97 #>  [4508,]   91   88   92  101   98  101  101  102   96    98 #>  [4509,]   91   88   92  101   98  101  101  102   96    98 #>  [4510,]   91   88   92  101   98  101  101  102   96    98 #>  [4511,]   91   88   91  101   98  101  101  101   96    98 #>  [4512,]   91   88   91  101   98  101  101  101   96    98 #>  [4513,]   90   87   90  100   97  100  100  100   95    97 #>  [4514,]   91   88   92  101   98  101  101  101   96    98 #>  [4515,]   91   88   91  101   98  101  101  102   96    98 #>  [4516,]   90   87   90  100   97  100  100  100   95    97 #>  [4517,]   91   88   91  101   98  101  101  102   96    98 #>  [4518,]   90   87   90  100   97  100  100  100   95    97 #>  [4519,]   90   87   90  100   97  100  100  100   95    97 #>  [4520,]   91   88   92  101   98  101  101  101   96    98 #>  [4521,]   90   87   90  100   97  100  100  100   95    97 #>  [4522,]   91   88   92  101   98  101  101  101   96    98 #>  [4523,]   90   87   90  100   97  100  100  100   95    97 #>  [4524,]   90   87   90  100   97  100  100  100   95    97 #>  [4525,]   91   88   92  101   98  101  101  102   96    98 #>  [4526,]   91   88   91  101   98  101  101  101   96    98 #>  [4527,]   91   88   92  101   98  101  101  102   96    98 #>  [4528,]   91   88   92  101   98  101  101  102   96    98 #>  [4529,]   91   88   91  101   98  101  101  101   96    98 #>  [4530,]   90   87   90  100   97  100  100  100   95    97 #>  [4531,]   90   87   90  100   97  100  100  100   95    97 #>  [4532,]   91   88   91  101   98  101  101  101   96    98 #>  [4533,]   91   88   92  101   98  101  101  101   96    98 #>  [4534,]   90   87   90  100   97  100  100  100   95    97 #>  [4535,]   90   87   90  100   97  100  100  100   95    97 #>  [4536,]   90   87   90  100   97  100  100  100   95    97 #>  [4537,]   90   87   90  100   97  100  100  100   95    97 #>  [4538,]   91   88   91  101   98  101  101  102   96    98 #>  [4539,]   90   87   90  100   97  100  100  100   95    97 #>  [4540,]   90   87   90  100   97  100  100  100   95    97 #>  [4541,]   91   88   92  101   98  101  101  101   96    98 #>  [4542,]   91   88   91  101   98  101  101  101   96    98 #>  [4543,]   91   88   91  101   98  101  101  102   96    98 #>  [4544,]   90   87   90  100   97  100  100  100   95    97 #>  [4545,]   91   88   92  101   98  101  101  102   96    98 #>  [4546,]   91   88   91  101   98  101  101  102   96    98 #>  [4547,]   90   87   90  100   97  100  100  100   95    97 #>  [4548,]   91   88   91  101   98  101  101  101   96    98 #>  [4549,]   90   87   90  100   97  100  100  100   95    97 #>  [4550,]   91   88   92  101   98  101  101  102   96    98 #>  [4551,]   91   88   91  101   98  101  101  101   96    98 #>  [4552,]   91   88   92  101   98  101  101  101   96    98 #>  [4553,]   91   88   92  101   98  101  101  102   96    98 #>  [4554,]   90   87   90  100   97  100  100  100   95    97 #>  [4555,]   91   88   92  101   98  101  101  101   96    98 #>  [4556,]   91   88   91  101   98  101  101  102   96    98 #>  [4557,]   91   88   92  101   98  101  101  101   96    98 #>  [4558,]   91   88   92  101   98  101  101  101   96    98 #>  [4559,]   91   88   92  101   98  101  101  102   96    98 #>  [4560,]   91   88   91  101   98  101  101  101   96    98 #>  [4561,]   91   88   91  101   98  101  101  102   96    98 #>  [4562,]   90   87   90  100   97  100  100  100   95    97 #>  [4563,]   91   88   91  101   98  101  101  101   96    98 #>  [4564,]   91   88   91  101   98  101  101  102   96    98 #>  [4565,]   91   88   91  101   98  101  101  102   96    98 #>  [4566,]   91   88   91  101   98  101  101  101   96    98 #>  [4567,]   91   88   92  101   98  101  101  101   96    98 #>  [4568,]   91   88   91  101   98  101  101  101   96    98 #>  [4569,]   91   88   91  101   98  101  101  101   96    98 #>  [4570,]   90   87   90  100   97  100  100  100   95    97 #>  [4571,]   91   88   92  101   98  101  101  102   96    98 #>  [4572,]   91   88   92  101   98  101  101  102   96    98 #>  [4573,]   91   88   92  101   98  101  101  102   96    98 #>  [4574,]   91   88   92  101   98  101  101  102   96    98 #>  [4575,]   91   88   91  101   98  101  101  102   96    98 #>  [4576,]   91   88   92  101   98  101  101  102   96    98 #>  [4577,]   90   87   90  100   97  100  100  100   95    97 #>  [4578,]   91   88   91  101   98  101  101  101   96    98 #>  [4579,]   90   87   90  100   97  100  100  100   95    97 #>  [4580,]   90   87   90  100   97  100  100  100   95    97 #>  [4581,]   91   88   91  101   98  101  101  101   96    98 #>  [4582,]   91   88   91  101   98  101  101  102   96    98 #>  [4583,]   90   87   90  100   97  100  100  100   95    97 #>  [4584,]   91   88   92  101   98  101  101  102   96    98 #>  [4585,]   91   88   92  101   98  101  101  101   96    98 #>  [4586,]   91   88   92  101   98  101  101  102   96    98 #>  [4587,]   91   88   92  101   98  101  101  102   96    98 #>  [4588,]   91   88   92  101   98  101  101  102   96    98 #>  [4589,]   91   88   91  101   98  101  101  101   96    98 #>  [4590,]   91   88   92  101   98  101  101  102   96    98 #>  [4591,]   91   88   92  101   98  101  101  101   96    98 #>  [4592,]   91   88   91  101   98  101  101  102   96    98 #>  [4593,]   90   87   90  100   97  100  100  100   95    97 #>  [4594,]   91   88   91  101   98  101  101  102   96    98 #>  [4595,]   90   87   90  100   97  100  100  100   95    97 #>  [4596,]   91   88   91  101   98  101  101  102   96    98 #>  [4597,]   91   88   91  101   98  101  101  101   96    98 #>  [4598,]   90   87   90  100   97  100  100  100   95    97 #>  [4599,]   91   88   92  101   98  101  101  101   96    98 #>  [4600,]   90   87   90  100   97  100  100  100   95    97 #>  [4601,]   92   89   93  102  101  104  104  105   99   101 #>  [4602,]   92   89   93  102  101  104  104  105   99   101 #>  [4603,]   92   89   93  102  100  103  103  104   98   100 #>  [4604,]   92   90   94  103   99  102  102  103   97    99 #>  [4605,]   92   89   93  102  100  103  103  104   98   100 #>  [4606,]   92   89   93  102  101  104  104  105   99   101 #>  [4607,]   92   90   94  103   99  102  102  103   97    99 #>  [4608,]   92   89   93  102  100  103  103  104   98   100 #>  [4609,]   92   89   93  102  101  104  104  105   99   101 #>  [4610,]   92   90   94  103   99  102  102  103   97    99 #>  [4611,]   92   89   93  102  101  104  104  105   99   101 #>  [4612,]   92   89   93  102  101  104  104  105   99   101 #>  [4613,]   92   89   93  102  100  103  103  104   98   100 #>  [4614,]   92   89   93  102  101  104  104  105   99   101 #>  [4615,]   92   89   93  102  101  104  104  105   99   101 #>  [4616,]   92   90   94  103   99  102  102  103   97    99 #>  [4617,]   92   89   93  102  100  103  103  104   98   100 #>  [4618,]   92   89   93  102  101  104  104  105   99   101 #>  [4619,]   92   89   93  102  101  104  104  105   99   101 #>  [4620,]   92   90   94  103   99  102  102  103   97    99 #>  [4621,]   92   89   93  102  101  104  104  105   99   101 #>  [4622,]   92   89   93  102  100  103  103  104   98   100 #>  [4623,]   92   89   93  102  101  104  104  105   99   101 #>  [4624,]   92   90   94  103   99  102  102  103   97    99 #>  [4625,]   92   90   94  103   99  102  102  103   97    99 #>  [4626,]   92   89   93  102  101  104  104  105   99   101 #>  [4627,]   92   89   93  102  101  104  104  105   99   101 #>  [4628,]   92   90   94  103   99  102  102  103   97    99 #>  [4629,]   92   89   93  102  100  103  103  104   98   100 #>  [4630,]   92   89   93  102  101  104  104  105   99   101 #>  [4631,]   92   89   93  102  101  104  104  105   99   101 #>  [4632,]   92   89   93  102  101  104  104  105   99   101 #>  [4633,]   92   89   93  102  101  104  104  105   99   101 #>  [4634,]   92   89   93  102  101  104  104  105   99   101 #>  [4635,]   92   89   93  102  101  104  104  105   99   101 #>  [4636,]   92   90   94  103   99  102  102  103   97    99 #>  [4637,]   92   89   93  102  101  104  104  105   99   101 #>  [4638,]   92   89   93  102  101  104  104  105   99   101 #>  [4639,]   92   90   94  103   99  102  102  103   97    99 #>  [4640,]   92   89   93  102  100  103  103  104   98   100 #>  [4641,]   92   89   93  102  101  104  104  105   99   101 #>  [4642,]   92   89   93  102  101  104  104  105   99   101 #>  [4643,]   92   89   93  102  100  103  103  104   98   100 #>  [4644,]   92   89   93  102  100  103  103  104   98   100 #>  [4645,]   92   89   93  102  100  103  103  104   98   100 #>  [4646,]   92   89   93  102  100  103  103  104   98   100 #>  [4647,]   92   89   93  102  100  103  103  104   98   100 #>  [4648,]   92   89   93  102  101  104  104  105   99   101 #>  [4649,]   92   89   93  102  100  103  103  104   98   100 #>  [4650,]   92   90   94  103   99  102  102  103   97    99 #>  [4651,]   92   89   93  102  100  103  103  104   98   100 #>  [4652,]   92   90   94  103   99  102  102  103   97    99 #>  [4653,]   92   89   93  102  100  103  103  104   98   100 #>  [4654,]   92   90   94  103   99  102  102  103   97    99 #>  [4655,]   92   89   93  102  100  103  103  104   98   100 #>  [4656,]   92   89   93  102  100  103  103  104   98   100 #>  [4657,]   92   90   94  103   99  102  102  103   97    99 #>  [4658,]   92   89   93  102  101  104  104  105   99   101 #>  [4659,]   92   89   93  102  100  103  103  104   98   100 #>  [4660,]   92   89   93  102  101  104  104  105   99   101 #>  [4661,]   92   89   93  102  101  104  104  105   99   101 #>  [4662,]   92   89   93  102  101  104  104  105   99   101 #>  [4663,]   92   89   93  102  100  103  103  104   98   100 #>  [4664,]   92   89   93  102  101  104  104  105   99   101 #>  [4665,]   92   89   93  102  100  103  103  104   98   100 #>  [4666,]   92   89   93  102  100  103  103  104   98   100 #>  [4667,]   92   89   93  102  101  104  104  105   99   101 #>  [4668,]   92   89   93  102  101  104  104  105   99   101 #>  [4669,]   92   89   93  102  101  104  104  105   99   101 #>  [4670,]   92   89   93  102  100  103  103  104   98   100 #>  [4671,]   92   89   93  102  100  103  103  104   98   100 #>  [4672,]   92   89   93  102  100  103  103  104   98   100 #>  [4673,]   92   90   94  103   99  102  102  103   97    99 #>  [4674,]   92   89   93  102  101  104  104  105   99   101 #>  [4675,]   92   89   93  102  101  104  104  105   99   101 #>  [4676,]   92   90   94  103   99  102  102  103   97    99 #>  [4677,]   92   89   93  102  100  103  103  104   98   100 #>  [4678,]   92   89   93  102  100  103  103  104   98   100 #>  [4679,]   92   89   93  102  100  103  103  104   98   100 #>  [4680,]   92   89   93  102  101  104  104  105   99   101 #>  [4681,]   92   89   93  102  100  103  103  104   98   100 #>  [4682,]   92   89   93  102  101  104  104  105   99   101 #>  [4683,]   92   89   93  102  100  103  103  104   98   100 #>  [4684,]   92   89   93  102  100  103  103  104   98   100 #>  [4685,]   92   89   93  102  101  104  104  105   99   101 #>  [4686,]   92   90   94  103   99  102  102  103   97    99 #>  [4687,]   92   89   93  102  101  104  104  105   99   101 #>  [4688,]   92   89   93  102  101  104  104  105   99   101 #>  [4689,]   92   89   93  102  100  103  103  104   98   100 #>  [4690,]   92   89   93  102  100  103  103  104   98   100 #>  [4691,]   92   90   94  103   99  102  102  103   97    99 #>  [4692,]   92   89   93  102  101  104  104  105   99   101 #>  [4693,]   92   89   93  102  101  104  104  105   99   101 #>  [4694,]   92   89   93  102  100  103  103  104   98   100 #>  [4695,]   92   89   93  102  101  104  104  105   99   101 #>  [4696,]   92   89   93  102  101  104  104  105   99   101 #>  [4697,]   92   89   93  102  101  104  104  105   99   101 #>  [4698,]   92   89   93  102  100  103  103  104   98   100 #>  [4699,]   92   89   93  102  101  104  104  105   99   101 #>  [4700,]   92   89   93  102  100  103  103  104   98   100 #>  [4701,]   93   92   96  105  103  105  105  106  100   102 #>  [4702,]   93   92   96  105  103  105  105  106  100   102 #>  [4703,]   93   91   95  104  102  107  106  107  101   103 #>  [4704,]   93   91   95  104  102  106  106  107  101   103 #>  [4705,]   93   91   95  104  102  107  106  107  101   103 #>  [4706,]   93   92   96  105  103  105  105  106  100   102 #>  [4707,]   93   92   96  105  103  105  105  106  100   102 #>  [4708,]   93   91   95  104  102  106  106  107  101   103 #>  [4709,]   93   91   95  104  102  106  106  107  101   103 #>  [4710,]   93   91   95  104  102  107  106  107  101   103 #>  [4711,]   93   92   96  105  103  105  105  106  100   102 #>  [4712,]   93   92   96  105  103  105  105  106  100   102 #>  [4713,]   93   92   96  105  103  105  105  106  100   102 #>  [4714,]   93   92   96  105  103  105  105  106  100   102 #>  [4715,]   93   92   96  105  103  105  105  106  100   102 #>  [4716,]   93   92   96  105  103  105  105  106  100   102 #>  [4717,]   93   92   96  105  103  105  105  106  100   102 #>  [4718,]   93   91   95  104  102  107  106  107  101   103 #>  [4719,]   93   92   96  105  103  105  105  106  100   102 #>  [4720,]   93   91   95  104  102  107  106  107  101   103 #>  [4721,]   93   92   96  105  103  105  105  106  100   102 #>  [4722,]   93   92   96  105  103  105  105  106  100   102 #>  [4723,]   93   91   95  104  102  107  106  107  101   103 #>  [4724,]   93   91   95  104  102  106  106  107  101   103 #>  [4725,]   93   92   96  105  103  105  105  106  100   102 #>  [4726,]   93   92   96  105  103  105  105  106  100   102 #>  [4727,]   93   92   96  105  103  105  105  106  100   102 #>  [4728,]   93   92   96  105  103  105  105  106  100   102 #>  [4729,]   93   92   96  105  103  105  105  106  100   102 #>  [4730,]   93   91   95  104  102  106  106  107  101   103 #>  [4731,]   93   91   95  104  102  107  106  107  101   103 #>  [4732,]   93   91   95  104  102  107  106  107  101   103 #>  [4733,]   93   92   96  105  103  105  105  106  100   102 #>  [4734,]   93   91   95  104  102  107  106  107  101   103 #>  [4735,]   93   92   96  105  103  105  105  106  100   102 #>  [4736,]   93   92   96  105  103  105  105  106  100   102 #>  [4737,]   93   92   96  105  103  105  105  106  100   102 #>  [4738,]   93   92   96  105  103  105  105  106  100   102 #>  [4739,]   93   91   95  104  102  107  106  107  101   103 #>  [4740,]   93   92   96  105  103  105  105  106  100   102 #>  [4741,]   93   92   96  105  103  105  105  106  100   102 #>  [4742,]   93   91   95  104  102  107  106  107  101   103 #>  [4743,]   93   91   95  104  102  106  106  107  101   103 #>  [4744,]   93   92   96  105  103  105  105  106  100   102 #>  [4745,]   93   91   95  104  102  106  106  107  101   103 #>  [4746,]   93   92   96  105  103  105  105  106  100   102 #>  [4747,]   93   92   96  105  103  105  105  106  100   102 #>  [4748,]   93   91   95  104  102  107  106  107  101   103 #>  [4749,]   93   91   95  104  102  106  106  107  101   103 #>  [4750,]   93   92   96  105  103  105  105  106  100   102 #>  [4751,]   93   91   95  104  102  106  106  107  101   103 #>  [4752,]   93   92   96  105  103  105  105  106  100   102 #>  [4753,]   93   91   95  104  102  107  106  107  101   103 #>  [4754,]   93   92   96  105  103  105  105  106  100   102 #>  [4755,]   93   92   96  105  103  105  105  106  100   102 #>  [4756,]   93   91   95  104  102  107  106  107  101   103 #>  [4757,]   93   92   96  105  103  105  105  106  100   102 #>  [4758,]   93   92   96  105  103  105  105  106  100   102 #>  [4759,]   93   92   96  105  103  105  105  106  100   102 #>  [4760,]   93   91   95  104  102  107  106  107  101   103 #>  [4761,]   93   92   96  105  103  105  105  106  100   102 #>  [4762,]   93   91   95  104  102  106  106  107  101   103 #>  [4763,]   93   92   96  105  103  105  105  106  100   102 #>  [4764,]   93   91   95  104  102  107  106  107  101   103 #>  [4765,]   93   91   95  104  102  107  106  107  101   103 #>  [4766,]   93   91   95  104  102  106  106  107  101   103 #>  [4767,]   93   91   95  104  102  106  106  107  101   103 #>  [4768,]   93   92   96  105  103  105  105  106  100   102 #>  [4769,]   93   92   96  105  103  105  105  106  100   102 #>  [4770,]   93   92   96  105  103  105  105  106  100   102 #>  [4771,]   93   92   96  105  103  105  105  106  100   102 #>  [4772,]   93   91   95  104  102  107  106  107  101   103 #>  [4773,]   93   92   96  105  103  105  105  106  100   102 #>  [4774,]   93   92   96  105  103  105  105  106  100   102 #>  [4775,]   93   92   96  105  103  105  105  106  100   102 #>  [4776,]   93   92   96  105  103  105  105  106  100   102 #>  [4777,]   93   92   96  105  103  105  105  106  100   102 #>  [4778,]   93   91   95  104  102  107  106  107  101   103 #>  [4779,]   93   92   96  105  103  105  105  106  100   102 #>  [4780,]   93   92   96  105  103  105  105  106  100   102 #>  [4781,]   93   92   96  105  103  105  105  106  100   102 #>  [4782,]   93   92   96  105  103  105  105  106  100   102 #>  [4783,]   93   92   96  105  103  105  105  106  100   102 #>  [4784,]   93   92   96  105  103  105  105  106  100   102 #>  [4785,]   93   91   95  104  102  106  106  107  101   103 #>  [4786,]   93   92   96  105  103  105  105  106  100   102 #>  [4787,]   93   92   96  105  103  105  105  106  100   102 #>  [4788,]   93   91   95  104  102  106  106  107  101   103 #>  [4789,]   93   91   95  104  102  106  106  107  101   103 #>  [4790,]   93   92   96  105  103  105  105  106  100   102 #>  [4791,]   93   91   95  104  102  106  106  107  101   103 #>  [4792,]   93   92   96  105  103  105  105  106  100   102 #>  [4793,]   93   92   96  105  103  105  105  106  100   102 #>  [4794,]   93   92   96  105  103  105  105  106  100   102 #>  [4795,]   93   91   95  104  102  106  106  107  101   103 #>  [4796,]   93   92   96  105  103  105  105  106  100   102 #>  [4797,]   93   92   96  105  103  105  105  106  100   102 #>  [4798,]   93   92   96  105  103  105  105  106  100   102 #>  [4799,]   93   92   96  105  103  105  105  106  100   102 #>  [4800,]   93   92   96  105  103  105  105  106  100   102 #>  [4801,]   94   95   98  107  105  109  108  109  103   105 #>  [4802,]   95   93   97  106  104  108  107  108  102   104 #>  [4803,]   94   94   98  107  105  109  108  109  103   105 #>  [4804,]   95   93   97  106  104  108  107  108  102   104 #>  [4805,]   95   93   97  106  104  108  107  108  102   104 #>  [4806,]   94   95   98  107  105  109  108  109  103   105 #>  [4807,]   95   93   97  106  104  108  107  108  102   104 #>  [4808,]   95   93   97  106  104  108  107  108  102   104 #>  [4809,]   95   93   97  106  104  108  107  108  102   104 #>  [4810,]   95   93   97  106  104  108  107  108  102   104 #>  [4811,]   94   95   98  107  105  109  108  109  103   105 #>  [4812,]   95   93   97  106  104  108  107  108  102   104 #>  [4813,]   95   93   97  106  104  108  107  108  102   104 #>  [4814,]   95   93   97  106  104  108  107  108  102   104 #>  [4815,]   95   93   97  106  104  108  107  108  102   104 #>  [4816,]   94   95   98  107  105  109  108  109  103   105 #>  [4817,]   95   93   97  106  104  108  107  108  102   104 #>  [4818,]   95   93   97  106  104  108  107  108  102   104 #>  [4819,]   94   95   98  107  105  109  108  109  103   105 #>  [4820,]   95   93   97  106  104  108  107  108  102   104 #>  [4821,]   95   93   97  106  104  108  107  108  102   104 #>  [4822,]   95   93   97  106  104  108  107  108  102   104 #>  [4823,]   95   93   97  106  104  108  107  108  102   104 #>  [4824,]   95   93   97  106  104  108  107  108  102   104 #>  [4825,]   95   93   97  106  104  108  107  108  102   104 #>  [4826,]   95   93   97  106  104  108  107  108  102   104 #>  [4827,]   95   93   97  106  104  108  107  108  102   104 #>  [4828,]   94   95   98  107  105  109  108  109  103   105 #>  [4829,]   95   93   97  106  104  108  107  108  102   104 #>  [4830,]   95   93   97  106  104  108  107  108  102   104 #>  [4831,]   95   93   97  106  104  108  107  108  102   104 #>  [4832,]   95   93   97  106  104  108  107  108  102   104 #>  [4833,]   95   93   97  106  104  108  107  108  102   104 #>  [4834,]   94   95   98  107  105  109  108  109  103   105 #>  [4835,]   94   95   98  107  105  109  108  109  103   105 #>  [4836,]   95   93   97  106  104  108  107  108  102   104 #>  [4837,]   94   95   98  107  105  109  108  109  103   105 #>  [4838,]   94   95   98  107  105  109  108  109  103   105 #>  [4839,]   95   93   97  106  104  108  107  108  102   104 #>  [4840,]   95   93   97  106  104  108  107  108  102   104 #>  [4841,]   95   93   97  106  104  108  107  108  102   104 #>  [4842,]   94   95   98  107  105  109  108  109  103   105 #>  [4843,]   95   93   97  106  104  108  107  108  102   104 #>  [4844,]   95   93   97  106  104  108  107  108  102   104 #>  [4845,]   94   95   98  107  105  109  108  109  103   105 #>  [4846,]   95   93   97  106  104  108  107  108  102   104 #>  [4847,]   95   93   97  106  104  108  107  108  102   104 #>  [4848,]   95   93   97  106  104  108  107  108  102   104 #>  [4849,]   94   95   98  107  105  109  108  109  103   105 #>  [4850,]   95   93   97  106  104  108  107  108  102   104 #>  [4851,]   95   93   97  106  104  108  107  108  102   104 #>  [4852,]   94   94   98  107  105  109  108  109  103   105 #>  [4853,]   95   93   97  106  104  108  107  108  102   104 #>  [4854,]   95   93   97  106  104  108  107  108  102   104 #>  [4855,]   95   93   97  106  104  108  107  108  102   104 #>  [4856,]   95   93   97  106  104  108  107  108  102   104 #>  [4857,]   95   93   97  106  104  108  107  108  102   104 #>  [4858,]   95   93   97  106  104  108  107  108  102   104 #>  [4859,]   95   93   97  106  104  108  107  108  102   104 #>  [4860,]   95   93   97  106  104  108  107  108  102   104 #>  [4861,]   95   93   97  106  104  108  107  108  102   104 #>  [4862,]   95   93   97  106  104  108  107  108  102   104 #>  [4863,]   95   93   97  106  104  108  107  108  102   104 #>  [4864,]   94   95   98  107  105  109  108  109  103   105 #>  [4865,]   95   93   97  106  104  108  107  108  102   104 #>  [4866,]   95   93   97  106  104  108  107  108  102   104 #>  [4867,]   95   93   97  106  104  108  107  108  102   104 #>  [4868,]   94   94   98  107  105  109  108  109  103   105 #>  [4869,]   95   93   97  106  104  108  107  108  102   104 #>  [4870,]   95   93   97  106  104  108  107  108  102   104 #>  [4871,]   95   93   97  106  104  108  107  108  102   104 #>  [4872,]   94   95   98  107  105  109  108  109  103   105 #>  [4873,]   94   95   98  107  105  109  108  109  103   105 #>  [4874,]   95   93   97  106  104  108  107  108  102   104 #>  [4875,]   95   93   97  106  104  108  107  108  102   104 #>  [4876,]   95   93   97  106  104  108  107  108  102   104 #>  [4877,]   94   95   98  107  105  109  108  109  103   105 #>  [4878,]   95   93   97  106  104  108  107  108  102   104 #>  [4879,]   95   93   97  106  104  108  107  108  102   104 #>  [4880,]   95   93   97  106  104  108  107  108  102   104 #>  [4881,]   95   93   97  106  104  108  107  108  102   104 #>  [4882,]   95   93   97  106  104  108  107  108  102   104 #>  [4883,]   95   93   97  106  104  108  107  108  102   104 #>  [4884,]   95   93   97  106  104  108  107  108  102   104 #>  [4885,]   95   93   97  106  104  108  107  108  102   104 #>  [4886,]   95   93   97  106  104  108  107  108  102   104 #>  [4887,]   95   93   97  106  104  108  107  108  102   104 #>  [4888,]   95   93   97  106  104  108  107  108  102   104 #>  [4889,]   95   93   97  106  104  108  107  108  102   104 #>  [4890,]   95   93   97  106  104  108  107  108  102   104 #>  [4891,]   95   93   97  106  104  108  107  108  102   104 #>  [4892,]   95   93   97  106  104  108  107  108  102   104 #>  [4893,]   95   93   97  106  104  108  107  108  102   104 #>  [4894,]   94   95   98  107  105  109  108  109  103   105 #>  [4895,]   95   93   97  106  104  108  107  108  102   104 #>  [4896,]   94   94   98  107  105  109  108  109  103   105 #>  [4897,]   94   94   98  107  105  109  108  109  103   105 #>  [4898,]   95   93   97  106  104  108  107  108  102   104 #>  [4899,]   95   93   97  106  104  108  107  108  102   104 #>  [4900,]   94   95   98  107  105  109  108  109  103   105 #>  [4901,]   96   96  101  110  107  111  110  111  105   107 #>  [4902,]   96   96  100  109  107  111  110  111  105   107 #>  [4903,]   96   96  100  109  107  111  110  111  105   107 #>  [4904,]   97   97   99  108  106  110  109  110  104   106 #>  [4905,]   96   96  100  109  107  111  110  111  105   107 #>  [4906,]   96   96  100  109  107  111  110  111  105   107 #>  [4907,]   96   96  101  110  107  111  110  111  105   107 #>  [4908,]   96   96  101  110  107  111  110  111  105   107 #>  [4909,]   96   96  101  110  107  111  110  111  105   107 #>  [4910,]   97   97   99  108  106  110  109  110  104   106 #>  [4911,]   96   96  100  109  107  111  110  111  105   107 #>  [4912,]   96   96  100  109  107  111  110  111  105   107 #>  [4913,]   96   96  101  110  107  111  110  111  105   107 #>  [4914,]   96   96  100  109  107  111  110  111  105   107 #>  [4915,]   96   96  101  110  107  111  110  111  105   107 #>  [4916,]   96   96  101  110  107  111  110  111  105   107 #>  [4917,]   96   96  101  110  107  111  110  111  105   107 #>  [4918,]   97   97   99  108  106  110  109  110  104   106 #>  [4919,]   96   96  100  109  107  111  110  111  105   107 #>  [4920,]   96   96  100  109  107  111  110  111  105   107 #>  [4921,]   96   96  101  110  107  111  110  111  105   107 #>  [4922,]   96   96  100  109  107  111  110  111  105   107 #>  [4923,]   96   96  101  110  107  111  110  111  105   107 #>  [4924,]   96   96  100  109  107  111  110  111  105   107 #>  [4925,]   97   97   99  108  106  110  109  110  104   106 #>  [4926,]   96   96  100  109  107  111  110  111  105   107 #>  [4927,]   96   96  101  110  107  111  110  111  105   107 #>  [4928,]   96   96  101  110  107  111  110  111  105   107 #>  [4929,]   96   96  100  109  107  111  110  111  105   107 #>  [4930,]   96   96  100  109  107  111  110  111  105   107 #>  [4931,]   96   96  100  109  107  111  110  111  105   107 #>  [4932,]   96   96  100  109  107  111  110  111  105   107 #>  [4933,]   96   96  100  109  107  111  110  111  105   107 #>  [4934,]   96   96  100  109  107  111  110  111  105   107 #>  [4935,]   96   96  100  109  107  111  110  111  105   107 #>  [4936,]   96   96  100  109  107  111  110  111  105   107 #>  [4937,]   96   96  101  110  107  111  110  111  105   107 #>  [4938,]   96   96  101  110  107  111  110  111  105   107 #>  [4939,]   97   97   99  108  106  110  109  110  104   106 #>  [4940,]   96   96  100  109  107  111  110  111  105   107 #>  [4941,]   96   96  100  109  107  111  110  111  105   107 #>  [4942,]   96   96  100  109  107  111  110  111  105   107 #>  [4943,]   97   97   99  108  106  110  109  110  104   106 #>  [4944,]   96   96  101  110  107  111  110  111  105   107 #>  [4945,]   97   97   99  108  106  110  109  110  104   106 #>  [4946,]   96   96  101  110  107  111  110  111  105   107 #>  [4947,]   96   96  101  110  107  111  110  111  105   107 #>  [4948,]   96   96  100  109  107  111  110  111  105   107 #>  [4949,]   96   96  100  109  107  111  110  111  105   107 #>  [4950,]   96   96  100  109  107  111  110  111  105   107 #>  [4951,]   96   96  100  109  107  111  110  111  105   107 #>  [4952,]   96   96  100  109  107  111  110  111  105   107 #>  [4953,]   96   96  101  110  107  111  110  111  105   107 #>  [4954,]   96   96  100  109  107  111  110  111  105   107 #>  [4955,]   96   96  100  109  107  111  110  111  105   107 #>  [4956,]   96   96  101  110  107  111  110  111  105   107 #>  [4957,]   96   96  100  109  107  111  110  111  105   107 #>  [4958,]   96   96  100  109  107  111  110  111  105   107 #>  [4959,]   96   96  100  109  107  111  110  111  105   107 #>  [4960,]   96   96  100  109  107  111  110  111  105   107 #>  [4961,]   96   96  101  110  107  111  110  111  105   107 #>  [4962,]   96   96  100  109  107  111  110  111  105   107 #>  [4963,]   96   96  100  109  107  111  110  111  105   107 #>  [4964,]   96   96  101  110  107  111  110  111  105   107 #>  [4965,]   96   96  100  109  107  111  110  111  105   107 #>  [4966,]   96   96  100  109  107  111  110  111  105   107 #>  [4967,]   96   96  100  109  107  111  110  111  105   107 #>  [4968,]   96   96  100  109  107  111  110  111  105   107 #>  [4969,]   96   96  100  109  107  111  110  111  105   107 #>  [4970,]   96   96  101  110  107  111  110  111  105   107 #>  [4971,]   96   96  101  110  107  111  110  111  105   107 #>  [4972,]   96   96  101  110  107  111  110  111  105   107 #>  [4973,]   97   97   99  108  106  110  109  110  104   106 #>  [4974,]   97   97   99  108  106  110  109  110  104   106 #>  [4975,]   97   97   99  108  106  110  109  110  104   106 #>  [4976,]   97   97   99  108  106  110  109  110  104   106 #>  [4977,]   97   97   99  108  106  110  109  110  104   106 #>  [4978,]   96   96  100  109  107  111  110  111  105   107 #>  [4979,]   96   96  101  110  107  111  110  111  105   107 #>  [4980,]   96   96  100  109  107  111  110  111  105   107 #>  [4981,]   96   96  100  109  107  111  110  111  105   107 #>  [4982,]   96   96  101  110  107  111  110  111  105   107 #>  [4983,]   96   96  100  109  107  111  110  111  105   107 #>  [4984,]   96   96  101  110  107  111  110  111  105   107 #>  [4985,]   96   96  100  109  107  111  110  111  105   107 #>  [4986,]   96   96  101  110  107  111  110  111  105   107 #>  [4987,]   96   96  101  110  107  111  110  111  105   107 #>  [4988,]   96   96  101  110  107  111  110  111  105   107 #>  [4989,]   96   96  100  109  107  111  110  111  105   107 #>  [4990,]   96   96  101  110  107  111  110  111  105   107 #>  [4991,]   96   96  100  109  107  111  110  111  105   107 #>  [4992,]   96   96  100  109  107  111  110  111  105   107 #>  [4993,]   96   96  100  109  107  111  110  111  105   107 #>  [4994,]   96   96  101  110  107  111  110  111  105   107 #>  [4995,]   96   96  101  110  107  111  110  111  105   107 #>  [4996,]   96   96  101  110  107  111  110  111  105   107 #>  [4997,]   96   96  100  109  107  111  110  111  105   107 #>  [4998,]   96   96  100  109  107  111  110  111  105   107 #>  [4999,]   96   96  100  109  107  111  110  111  105   107 #>  [5000,]   96   96  101  110  107  111  110  111  105   107 #>  [5001,]   98   98  102  111  108  112  114  113  107   110 #>  [5002,]   99   99  103  112  110  114  112  114  109   109 #>  [5003,]   98   98  102  111  108  112  113  112  106   110 #>  [5004,]   98   98  102  111  108  112  114  113  107   110 #>  [5005,]   99   99  103  112  109  113  111  114  108   108 #>  [5006,]   98   98  102  111  108  112  114  113  107   110 #>  [5007,]   99   99  103  112  110  114  112  114  108   108 #>  [5008,]   98   98  102  111  108  112  114  113  107   110 #>  [5009,]   99   99  103  112  109  113  111  114  108   108 #>  [5010,]   99   99  103  112  109  113  111  114  108   108 #>  [5011,]   98   98  102  111  108  112  113  112  106   110 #>  [5012,]   99   99  103  112  110  114  112  114  108   108 #>  [5013,]   99   99  103  112  110  114  112  114  109   109 #>  [5014,]   98   98  102  111  108  112  113  112  106   110 #>  [5015,]   98   98  102  111  108  112  114  113  107   110 #>  [5016,]   98   98  102  111  108  112  114  113  107   110 #>  [5017,]   99   99  103  112  110  114  112  114  109   109 #>  [5018,]   99   99  103  112  110  114  112  114  108   108 #>  [5019,]   98   98  102  111  108  112  114  113  107   110 #>  [5020,]   99   99  103  112  110  114  112  114  108   108 #>  [5021,]   99   99  103  112  109  113  111  114  109   109 #>  [5022,]   99   99  103  112  110  114  112  114  109   109 #>  [5023,]   99   99  103  112  110  114  112  114  108   108 #>  [5024,]   99   99  103  112  109  113  111  114  108   108 #>  [5025,]   98   98  102  111  108  112  114  113  107   110 #>  [5026,]   98   98  102  111  108  112  114  113  107   110 #>  [5027,]   99   99  103  112  110  114  112  114  109   109 #>  [5028,]   98   98  102  111  108  112  113  112  106   110 #>  [5029,]   99   99  103  112  110  114  112  114  109   109 #>  [5030,]   99   99  103  112  110  114  112  114  108   108 #>  [5031,]   99   99  103  112  109  113  111  114  108   108 #>  [5032,]   99   99  103  112  109  113  111  114  108   108 #>  [5033,]   99   99  103  112  110  114  112  114  109   109 #>  [5034,]   98   98  102  111  108  112  113  112  106   110 #>  [5035,]   98   98  102  111  108  112  113  112  106   110 #>  [5036,]   99   99  103  112  110  114  112  114  108   108 #>  [5037,]   98   98  102  111  108  112  114  113  107   110 #>  [5038,]   98   98  102  111  108  112  114  113  107   110 #>  [5039,]   98   98  102  111  108  112  113  112  106   110 #>  [5040,]   99   99  103  112  109  113  111  114  108   108 #>  [5041,]   99   99  103  112  110  114  112  114  109   109 #>  [5042,]   98   98  102  111  108  112  114  113  107   110 #>  [5043,]   98   98  102  111  108  112  114  113  107   110 #>  [5044,]   99   99  103  112  110  114  112  114  109   109 #>  [5045,]   98   98  102  111  108  112  114  113  107   110 #>  [5046,]   98   98  102  111  108  112  114  113  107   110 #>  [5047,]   99   99  103  112  109  113  111  114  109   109 #>  [5048,]   99   99  103  112  109  113  111  114  108   108 #>  [5049,]   98   98  102  111  108  112  114  113  107   110 #>  [5050,]   99   99  103  112  110  114  112  114  109   109 #>  [5051,]   98   98  102  111  108  112  114  113  107   110 #>  [5052,]   98   98  102  111  108  112  113  112  106   110 #>  [5053,]   99   99  103  112  110  114  112  114  108   108 #>  [5054,]   99   99  103  112  109  113  111  114  108   108 #>  [5055,]   98   98  102  111  108  112  114  113  107   110 #>  [5056,]   98   98  102  111  108  112  114  113  107   110 #>  [5057,]   98   98  102  111  108  112  114  113  107   110 #>  [5058,]   99   99  103  112  110  114  112  114  109   109 #>  [5059,]   98   98  102  111  108  112  114  113  107   110 #>  [5060,]   99   99  103  112  110  114  112  114  108   108 #>  [5061,]   99   99  103  112  110  114  112  114  109   109 #>  [5062,]   98   98  102  111  108  112  113  112  106   110 #>  [5063,]   99   99  103  112  110  114  112  114  108   108 #>  [5064,]   98   98  102  111  108  112  114  113  107   110 #>  [5065,]   98   98  102  111  108  112  113  112  106   110 #>  [5066,]   98   98  102  111  108  112  114  113  107   110 #>  [5067,]   98   98  102  111  108  112  114  113  107   110 #>  [5068,]   98   98  102  111  108  112  114  113  107   110 #>  [5069,]   98   98  102  111  108  112  114  113  107   110 #>  [5070,]   99   99  103  112  109  113  111  114  109   109 #>  [5071,]   99   99  103  112  110  114  112  114  109   109 #>  [5072,]   98   98  102  111  108  112  113  112  106   110 #>  [5073,]   98   98  102  111  108  112  114  113  107   110 #>  [5074,]   99   99  103  112  109  113  111  114  108   108 #>  [5075,]   99   99  103  112  110  114  112  114  108   108 #>  [5076,]   99   99  103  112  109  113  111  114  109   109 #>  [5077,]   98   98  102  111  108  112  114  113  107   110 #>  [5078,]   99   99  103  112  110  114  112  114  108   108 #>  [5079,]   98   98  102  111  108  112  114  113  107   110 #>  [5080,]   99   99  103  112  110  114  112  114  108   108 #>  [5081,]   99   99  103  112  110  114  112  114  109   109 #>  [5082,]   98   98  102  111  108  112  113  112  106   110 #>  [5083,]   99   99  103  112  110  114  112  114  109   109 #>  [5084,]   99   99  103  112  110  114  112  114  108   108 #>  [5085,]   98   98  102  111  108  112  114  113  107   110 #>  [5086,]   99   99  103  112  110  114  112  114  109   109 #>  [5087,]   99   99  103  112  110  114  112  114  108   108 #>  [5088,]   99   99  103  112  110  114  112  114  108   108 #>  [5089,]   98   98  102  111  108  112  114  113  107   110 #>  [5090,]   99   99  103  112  110  114  112  114  109   109 #>  [5091,]   98   98  102  111  108  112  114  113  107   110 #>  [5092,]   99   99  103  112  110  114  112  114  108   108 #>  [5093,]   99   99  103  112  110  114  112  114  109   109 #>  [5094,]   98   98  102  111  108  112  114  113  107   110 #>  [5095,]   99   99  103  112  110  114  112  114  108   108 #>  [5096,]   98   98  102  111  108  112  114  113  107   110 #>  [5097,]   98   98  102  111  108  112  114  113  107   110 #>  [5098,]   98   98  102  111  108  112  113  112  106   110 #>  [5099,]   98   98  102  111  108  112  114  113  107   110 #>  [5100,]   98   98  102  111  108  112  114  113  107   110 #>  [5101,]  101  100  104  113  111  115  115  115  110   111 #>  [5102,]  101  100  104  113  111  115  115  115  110   111 #>  [5103,]  101  100  104  113  111  115  115  115  110   111 #>  [5104,]  100  102  105  114  112  116  116  116  111   111 #>  [5105,]  101  100  104  113  111  115  115  115  110   111 #>  [5106,]  101  100  104  113  111  115  115  115  110   111 #>  [5107,]  101  100  104  113  111  115  115  115  110   111 #>  [5108,]  100  102  105  114  112  116  116  116  111   111 #>  [5109,]  100  102  105  114  112  116  116  116  111   111 #>  [5110,]  100  102  105  114  112  116  116  116  111   111 #>  [5111,]  101  100  104  113  111  115  115  115  110   111 #>  [5112,]  101  100  104  113  111  115  115  115  110   111 #>  [5113,]  101  100  104  113  111  115  115  115  110   111 #>  [5114,]  101  100  104  113  111  115  115  115  110   111 #>  [5115,]  101  100  104  113  111  115  115  115  110   111 #>  [5116,]  101  100  104  113  111  115  115  115  110   111 #>  [5117,]  101  100  104  113  111  115  115  115  110   111 #>  [5118,]  101  100  104  113  111  115  115  115  110   111 #>  [5119,]  101  100  104  113  111  115  115  115  110   111 #>  [5120,]  100  101  105  114  112  116  116  116  111   111 #>  [5121,]  101  100  104  113  111  115  115  115  110   111 #>  [5122,]  101  100  104  113  111  115  115  115  110   111 #>  [5123,]  101  100  104  113  111  115  115  115  110   111 #>  [5124,]  101  100  104  113  111  115  115  115  110   111 #>  [5125,]  101  100  104  113  111  115  115  115  110   111 #>  [5126,]  101  100  104  113  111  115  115  115  110   111 #>  [5127,]  101  100  104  113  111  115  115  115  110   111 #>  [5128,]  101  100  104  113  111  115  115  115  110   111 #>  [5129,]  101  100  104  113  111  115  115  115  110   111 #>  [5130,]  100  101  105  114  112  116  116  116  111   111 #>  [5131,]  101  100  104  113  111  115  115  115  110   111 #>  [5132,]  101  100  104  113  111  115  115  115  110   111 #>  [5133,]  101  100  104  113  111  115  115  115  110   111 #>  [5134,]  101  100  104  113  111  115  115  115  110   111 #>  [5135,]  101  100  104  113  111  115  115  115  110   111 #>  [5136,]  101  100  104  113  111  115  115  115  110   111 #>  [5137,]  101  100  104  113  111  115  115  115  110   111 #>  [5138,]  101  100  104  113  111  115  115  115  110   111 #>  [5139,]  101  100  104  113  111  115  115  115  110   111 #>  [5140,]  101  100  104  113  111  115  115  115  110   111 #>  [5141,]  101  100  104  113  111  115  115  115  110   111 #>  [5142,]  101  100  104  113  111  115  115  115  110   111 #>  [5143,]  100  102  105  114  112  116  116  116  111   111 #>  [5144,]  101  100  104  113  111  115  115  115  110   111 #>  [5145,]  101  100  104  113  111  115  115  115  110   111 #>  [5146,]  101  100  104  113  111  115  115  115  110   111 #>  [5147,]  101  100  104  113  111  115  115  115  110   111 #>  [5148,]  101  100  104  113  111  115  115  115  110   111 #>  [5149,]  101  100  104  113  111  115  115  115  110   111 #>  [5150,]  101  100  104  113  111  115  115  115  110   111 #>  [5151,]  100  101  105  114  112  116  116  116  111   111 #>  [5152,]  101  100  104  113  111  115  115  115  110   111 #>  [5153,]  101  100  104  113  111  115  115  115  110   111 #>  [5154,]  101  100  104  113  111  115  115  115  110   111 #>  [5155,]  101  100  104  113  111  115  115  115  110   111 #>  [5156,]  100  102  105  114  112  116  116  116  111   111 #>  [5157,]  101  100  104  113  111  115  115  115  110   111 #>  [5158,]  101  100  104  113  111  115  115  115  110   111 #>  [5159,]  101  100  104  113  111  115  115  115  110   111 #>  [5160,]  100  101  105  114  112  116  116  116  111   111 #>  [5161,]  101  100  104  113  111  115  115  115  110   111 #>  [5162,]  101  100  104  113  111  115  115  115  110   111 #>  [5163,]  101  100  104  113  111  115  115  115  110   111 #>  [5164,]  100  102  105  114  112  116  116  116  111   111 #>  [5165,]  101  100  104  113  111  115  115  115  110   111 #>  [5166,]  101  100  104  113  111  115  115  115  110   111 #>  [5167,]  100  101  105  114  112  116  116  116  111   111 #>  [5168,]  101  100  104  113  111  115  115  115  110   111 #>  [5169,]  101  100  104  113  111  115  115  115  110   111 #>  [5170,]  101  100  104  113  111  115  115  115  110   111 #>  [5171,]  101  100  104  113  111  115  115  115  110   111 #>  [5172,]  101  100  104  113  111  115  115  115  110   111 #>  [5173,]  101  100  104  113  111  115  115  115  110   111 #>  [5174,]  101  100  104  113  111  115  115  115  110   111 #>  [5175,]  101  100  104  113  111  115  115  115  110   111 #>  [5176,]  101  100  104  113  111  115  115  115  110   111 #>  [5177,]  101  100  104  113  111  115  115  115  110   111 #>  [5178,]  100  101  105  114  112  116  116  116  111   111 #>  [5179,]  101  100  104  113  111  115  115  115  110   111 #>  [5180,]  101  100  104  113  111  115  115  115  110   111 #>  [5181,]  101  100  104  113  111  115  115  115  110   111 #>  [5182,]  101  100  104  113  111  115  115  115  110   111 #>  [5183,]  101  100  104  113  111  115  115  115  110   111 #>  [5184,]  101  100  104  113  111  115  115  115  110   111 #>  [5185,]  100  102  105  114  112  116  116  116  111   111 #>  [5186,]  101  100  104  113  111  115  115  115  110   111 #>  [5187,]  101  100  104  113  111  115  115  115  110   111 #>  [5188,]  101  100  104  113  111  115  115  115  110   111 #>  [5189,]  100  101  105  114  112  116  116  116  111   111 #>  [5190,]  101  100  104  113  111  115  115  115  110   111 #>  [5191,]  100  101  105  114  112  116  116  116  111   111 #>  [5192,]  101  100  104  113  111  115  115  115  110   111 #>  [5193,]  101  100  104  113  111  115  115  115  110   111 #>  [5194,]  101  100  104  113  111  115  115  115  110   111 #>  [5195,]  100  102  105  114  112  116  116  116  111   111 #>  [5196,]  101  100  104  113  111  115  115  115  110   111 #>  [5197,]  101  100  104  113  111  115  115  115  110   111 #>  [5198,]  101  100  104  113  111  115  115  115  110   111 #>  [5199,]  101  100  104  113  111  115  115  115  110   111 #>  [5200,]  101  100  104  113  111  115  115  115  110   111 #>  [5201,]  102  103  106  115  113  117  117  117  112   112 #>  [5202,]  102  103  106  115  113  117  117  117  112   112 #>  [5203,]  102  103  106  115  113  117  117  117  112   112 #>  [5204,]  103  104  107  116  114  118  118  118  113   113 #>  [5205,]  102  103  106  115  113  117  117  117  112   112 #>  [5206,]  102  103  106  115  113  117  117  117  112   112 #>  [5207,]  103  104  107  116  114  118  118  118  113   113 #>  [5208,]  102  103  106  115  113  117  117  117  112   112 #>  [5209,]  102  103  106  115  113  117  117  117  112   112 #>  [5210,]  103  104  107  116  114  118  118  118  113   113 #>  [5211,]  102  103  106  115  113  117  117  117  112   112 #>  [5212,]  102  103  106  115  113  117  117  117  112   112 #>  [5213,]  102  103  106  115  113  117  117  117  112   112 #>  [5214,]  102  103  106  115  113  117  117  117  112   112 #>  [5215,]  103  104  107  116  114  118  118  118  113   113 #>  [5216,]  103  104  107  116  114  118  118  118  113   113 #>  [5217,]  102  103  106  115  113  117  117  117  112   112 #>  [5218,]  103  104  107  116  114  118  118  118  113   113 #>  [5219,]  102  103  106  115  113  117  117  117  112   112 #>  [5220,]  102  103  106  115  113  117  117  117  112   112 #>  [5221,]  103  104  107  116  114  118  118  118  113   113 #>  [5222,]  102  103  106  115  113  117  117  117  112   112 #>  [5223,]  103  104  107  116  114  118  118  118  113   113 #>  [5224,]  102  103  106  115  113  117  117  117  112   112 #>  [5225,]  103  104  107  116  114  118  118  118  113   113 #>  [5226,]  102  103  106  115  113  117  117  117  112   112 #>  [5227,]  103  104  107  116  114  118  118  118  113   113 #>  [5228,]  102  103  106  115  113  117  117  117  112   112 #>  [5229,]  102  103  106  115  113  117  117  117  112   112 #>  [5230,]  102  103  106  115  113  117  117  117  112   112 #>  [5231,]  102  103  106  115  113  117  117  117  112   112 #>  [5232,]  102  103  106  115  113  117  117  117  112   112 #>  [5233,]  102  103  106  115  113  117  117  117  112   112 #>  [5234,]  102  103  106  115  113  117  117  117  112   112 #>  [5235,]  102  103  106  115  113  117  117  117  112   112 #>  [5236,]  102  103  106  115  113  117  117  117  112   112 #>  [5237,]  102  103  106  115  113  117  117  117  112   112 #>  [5238,]  102  103  106  115  113  117  117  117  112   112 #>  [5239,]  103  104  107  116  114  118  118  118  113   113 #>  [5240,]  102  103  106  115  113  117  117  117  112   112 #>  [5241,]  102  103  106  115  113  117  117  117  112   112 #>  [5242,]  102  103  106  115  113  117  117  117  112   112 #>  [5243,]  103  104  107  116  114  118  118  118  113   113 #>  [5244,]  102  103  106  115  113  117  117  117  112   112 #>  [5245,]  103  104  107  116  114  118  118  118  113   113 #>  [5246,]  102  103  106  115  113  117  117  117  112   112 #>  [5247,]  103  104  107  116  114  118  118  118  113   113 #>  [5248,]  102  103  106  115  113  117  117  117  112   112 #>  [5249,]  102  103  106  115  113  117  117  117  112   112 #>  [5250,]  102  103  106  115  113  117  117  117  112   112 #>  [5251,]  102  103  106  115  113  117  117  117  112   112 #>  [5252,]  102  103  106  115  113  117  117  117  112   112 #>  [5253,]  103  104  107  116  114  118  118  118  113   113 #>  [5254,]  102  103  106  115  113  117  117  117  112   112 #>  [5255,]  102  103  106  115  113  117  117  117  112   112 #>  [5256,]  102  103  106  115  113  117  117  117  112   112 #>  [5257,]  102  103  106  115  113  117  117  117  112   112 #>  [5258,]  102  103  106  115  113  117  117  117  112   112 #>  [5259,]  102  103  106  115  113  117  117  117  112   112 #>  [5260,]  102  103  106  115  113  117  117  117  112   112 #>  [5261,]  103  104  107  116  114  118  118  118  113   113 #>  [5262,]  102  103  106  115  113  117  117  117  112   112 #>  [5263,]  102  103  106  115  113  117  117  117  112   112 #>  [5264,]  102  103  106  115  113  117  117  117  112   112 #>  [5265,]  102  103  106  115  113  117  117  117  112   112 #>  [5266,]  102  103  106  115  113  117  117  117  112   112 #>  [5267,]  102  103  106  115  113  117  117  117  112   112 #>  [5268,]  102  103  106  115  113  117  117  117  112   112 #>  [5269,]  102  103  106  115  113  117  117  117  112   112 #>  [5270,]  102  103  106  115  113  117  117  117  112   112 #>  [5271,]  103  104  107  116  114  118  118  118  113   113 #>  [5272,]  103  104  107  116  114  118  118  118  113   113 #>  [5273,]  103  104  107  116  114  118  118  118  113   113 #>  [5274,]  103  104  107  116  114  118  118  118  113   113 #>  [5275,]  103  104  107  116  114  118  118  118  113   113 #>  [5276,]  103  104  107  116  114  118  118  118  113   113 #>  [5277,]  103  104  107  116  114  118  118  118  113   113 #>  [5278,]  102  103  106  115  113  117  117  117  112   112 #>  [5279,]  102  103  106  115  113  117  117  117  112   112 #>  [5280,]  102  103  106  115  113  117  117  117  112   112 #>  [5281,]  102  103  106  115  113  117  117  117  112   112 #>  [5282,]  102  103  106  115  113  117  117  117  112   112 #>  [5283,]  102  103  106  115  113  117  117  117  112   112 #>  [5284,]  103  104  107  116  114  118  118  118  113   113 #>  [5285,]  102  103  106  115  113  117  117  117  112   112 #>  [5286,]  102  103  106  115  113  117  117  117  112   112 #>  [5287,]  102  103  106  115  113  117  117  117  112   112 #>  [5288,]  102  103  106  115  113  117  117  117  112   112 #>  [5289,]  102  103  106  115  113  117  117  117  112   112 #>  [5290,]  102  103  106  115  113  117  117  117  112   112 #>  [5291,]  102  103  106  115  113  117  117  117  112   112 #>  [5292,]  102  103  106  115  113  117  117  117  112   112 #>  [5293,]  102  103  106  115  113  117  117  117  112   112 #>  [5294,]  103  104  107  116  114  118  118  118  113   113 #>  [5295,]  103  104  107  116  114  118  118  118  113   113 #>  [5296,]  102  103  106  115  113  117  117  117  112   112 #>  [5297,]  102  103  106  115  113  117  117  117  112   112 #>  [5298,]  102  103  106  115  113  117  117  117  112   112 #>  [5299,]  102  103  106  115  113  117  117  117  112   112 #>  [5300,]  103  104  107  116  114  118  118  118  113   113 #>  [5301,]  104  107  110  119  117  121  120  120  115   115 #>  [5302,]  104  107  110  119  117  121  120  120  115   115 #>  [5303,]  104  106  109  118  116  120  120  120  115   115 #>  [5304,]  105  105  108  117  115  119  119  119  114   114 #>  [5305,]  104  106  109  118  116  120  120  120  115   115 #>  [5306,]  105  105  108  117  115  119  119  119  114   114 #>  [5307,]  104  107  110  119  117  121  120  120  115   115 #>  [5308,]  104  107  110  119  117  121  120  120  115   115 #>  [5309,]  105  105  108  117  115  119  119  119  114   114 #>  [5310,]  105  105  108  117  115  119  119  119  114   114 #>  [5311,]  105  105  108  117  115  119  119  119  114   114 #>  [5312,]  105  105  108  117  115  119  119  119  114   114 #>  [5313,]  104  107  110  119  117  121  120  120  115   115 #>  [5314,]  105  105  108  117  115  119  119  119  114   114 #>  [5315,]  105  105  108  117  115  119  119  119  114   114 #>  [5316,]  104  107  110  119  117  121  120  120  115   115 #>  [5317,]  104  107  110  119  117  121  120  120  115   115 #>  [5318,]  105  105  108  117  115  119  119  119  114   114 #>  [5319,]  105  105  108  117  115  119  119  119  114   114 #>  [5320,]  104  106  109  118  116  120  120  120  115   115 #>  [5321,]  105  105  108  117  115  119  119  119  114   114 #>  [5322,]  104  106  109  118  116  120  120  120  115   115 #>  [5323,]  105  105  108  117  115  119  119  119  114   114 #>  [5324,]  104  106  109  118  116  120  120  120  115   115 #>  [5325,]  104  107  110  119  117  121  120  120  115   115 #>  [5326,]  105  105  108  117  115  119  119  119  114   114 #>  [5327,]  105  105  108  117  115  119  119  119  114   114 #>  [5328,]  104  107  110  119  117  121  120  120  115   115 #>  [5329,]  104  106  109  118  116  120  120  120  115   115 #>  [5330,]  105  105  108  117  115  119  119  119  114   114 #>  [5331,]  105  105  108  117  115  119  119  119  114   114 #>  [5332,]  105  105  108  117  115  119  119  119  114   114 #>  [5333,]  105  105  108  117  115  119  119  119  114   114 #>  [5334,]  105  105  108  117  115  119  119  119  114   114 #>  [5335,]  104  106  109  118  116  120  120  120  115   115 #>  [5336,]  105  105  108  117  115  119  119  119  114   114 #>  [5337,]  104  107  110  119  117  121  120  120  115   115 #>  [5338,]  105  105  108  117  115  119  119  119  114   114 #>  [5339,]  104  107  110  119  117  121  120  120  115   115 #>  [5340,]  104  106  109  118  116  120  120  120  115   115 #>  [5341,]  105  105  108  117  115  119  119  119  114   114 #>  [5342,]  105  105  108  117  115  119  119  119  114   114 #>  [5343,]  104  107  110  119  117  121  120  120  115   115 #>  [5344,]  104  107  110  119  117  121  120  120  115   115 #>  [5345,]  104  107  110  119  117  121  120  120  115   115 #>  [5346,]  104  107  110  119  117  121  120  120  115   115 #>  [5347,]  104  107  110  119  117  121  120  120  115   115 #>  [5348,]  105  105  108  117  115  119  119  119  114   114 #>  [5349,]  104  107  110  119  117  121  120  120  115   115 #>  [5350,]  104  107  110  119  117  121  120  120  115   115 #>  [5351,]  104  106  109  118  116  120  120  120  115   115 #>  [5352,]  105  105  108  117  115  119  119  119  114   114 #>  [5353,]  104  107  110  119  117  121  120  120  115   115 #>  [5354,]  104  106  109  118  116  120  120  120  115   115 #>  [5355,]  104  106  109  118  116  120  120  120  115   115 #>  [5356,]  104  107  110  119  117  121  120  120  115   115 #>  [5357,]  104  106  109  118  116  120  120  120  115   115 #>  [5358,]  105  105  108  117  115  119  119  119  114   114 #>  [5359,]  104  107  110  119  117  121  120  120  115   115 #>  [5360,]  105  105  108  117  115  119  119  119  114   114 #>  [5361,]  105  105  108  117  115  119  119  119  114   114 #>  [5362,]  105  105  108  117  115  119  119  119  114   114 #>  [5363,]  104  106  109  118  116  120  120  120  115   115 #>  [5364,]  105  105  108  117  115  119  119  119  114   114 #>  [5365,]  104  106  109  118  116  120  120  120  115   115 #>  [5366,]  104  106  109  118  116  120  120  120  115   115 #>  [5367,]  105  105  108  117  115  119  119  119  114   114 #>  [5368,]  105  105  108  117  115  119  119  119  114   114 #>  [5369,]  105  105  108  117  115  119  119  119  114   114 #>  [5370,]  104  107  110  119  117  121  120  120  115   115 #>  [5371,]  104  107  110  119  117  121  120  120  115   115 #>  [5372,]  104  107  110  119  117  121  120  120  115   115 #>  [5373,]  105  105  108  117  115  119  119  119  114   114 #>  [5374,]  105  105  108  117  115  119  119  119  114   114 #>  [5375,]  105  105  108  117  115  119  119  119  114   114 #>  [5376,]  104  107  110  119  117  121  120  120  115   115 #>  [5377,]  104  107  110  119  117  121  120  120  115   115 #>  [5378,]  104  106  109  118  116  120  120  120  115   115 #>  [5379,]  104  107  110  119  117  121  120  120  115   115 #>  [5380,]  105  105  108  117  115  119  119  119  114   114 #>  [5381,]  104  106  109  118  116  120  120  120  115   115 #>  [5382,]  105  105  108  117  115  119  119  119  114   114 #>  [5383,]  104  106  109  118  116  120  120  120  115   115 #>  [5384,]  104  107  110  119  117  121  120  120  115   115 #>  [5385,]  105  105  108  117  115  119  119  119  114   114 #>  [5386,]  104  107  110  119  117  121  120  120  115   115 #>  [5387,]  104  107  110  119  117  121  120  120  115   115 #>  [5388,]  104  107  110  119  117  121  120  120  115   115 #>  [5389,]  104  106  109  118  116  120  120  120  115   115 #>  [5390,]  104  107  110  119  117  121  120  120  115   115 #>  [5391,]  104  106  109  118  116  120  120  120  115   115 #>  [5392,]  105  105  108  117  115  119  119  119  114   114 #>  [5393,]  105  105  108  117  115  119  119  119  114   114 #>  [5394,]  104  107  110  119  117  121  120  120  115   115 #>  [5395,]  104  107  110  119  117  121  120  120  115   115 #>  [5396,]  105  105  108  117  115  119  119  119  114   114 #>  [5397,]  105  105  108  117  115  119  119  119  114   114 #>  [5398,]  104  106  109  118  116  120  120  120  115   115 #>  [5399,]  105  105  108  117  115  119  119  119  114   114 #>  [5400,]  104  107  110  119  117  121  120  120  115   115 #>  [5401,]  107  109  112  121  119  123  122  122  117   117 #>  [5402,]  107  109  112  121  119  123  122  122  117   117 #>  [5403,]  106  108  111  120  118  122  121  121  116   116 #>  [5404,]  106  108  111  120  118  122  121  121  116   116 #>  [5405,]  106  108  111  120  118  122  121  121  116   116 #>  [5406,]  106  108  111  120  118  122  121  121  116   116 #>  [5407,]  107  109  112  121  119  123  122  122  117   117 #>  [5408,]  107  109  112  121  119  123  122  122  117   117 #>  [5409,]  106  108  111  120  118  122  121  121  116   116 #>  [5410,]  106  108  111  120  118  122  121  121  116   116 #>  [5411,]  106  108  111  120  118  122  121  121  116   116 #>  [5412,]  107  109  112  121  119  123  122  122  117   117 #>  [5413,]  107  109  112  121  119  123  122  122  117   117 #>  [5414,]  106  108  111  120  118  122  121  121  116   116 #>  [5415,]  107  109  112  121  119  123  122  122  117   117 #>  [5416,]  107  109  112  121  119  123  122  122  117   117 #>  [5417,]  107  109  112  121  119  123  122  122  117   117 #>  [5418,]  107  109  112  121  119  123  122  122  117   117 #>  [5419,]  107  109  112  121  119  123  122  122  117   117 #>  [5420,]  107  109  112  121  119  123  122  122  117   117 #>  [5421,]  106  108  111  120  118  122  121  121  116   116 #>  [5422,]  107  109  112  121  119  123  122  122  117   117 #>  [5423,]  107  109  112  121  119  123  122  122  117   117 #>  [5424,]  106  108  111  120  118  122  121  121  116   116 #>  [5425,]  106  108  111  120  118  122  121  121  116   116 #>  [5426,]  107  109  112  121  119  123  122  122  117   117 #>  [5427,]  107  109  112  121  119  123  122  122  117   117 #>  [5428,]  106  108  111  120  118  122  121  121  116   116 #>  [5429,]  107  109  112  121  119  123  122  122  117   117 #>  [5430,]  107  109  112  121  119  123  122  122  117   117 #>  [5431,]  106  108  111  120  118  122  121  121  116   116 #>  [5432,]  106  108  111  120  118  122  121  121  116   116 #>  [5433,]  107  109  112  121  119  123  122  122  117   117 #>  [5434,]  106  108  111  120  118  122  121  121  116   116 #>  [5435,]  106  108  111  120  118  122  121  121  116   116 #>  [5436,]  107  109  112  121  119  123  122  122  117   117 #>  [5437,]  107  109  112  121  119  123  122  122  117   117 #>  [5438,]  107  109  112  121  119  123  122  122  117   117 #>  [5439,]  106  108  111  120  118  122  121  121  116   116 #>  [5440,]  106  108  111  120  118  122  121  121  116   116 #>  [5441,]  107  109  112  121  119  123  122  122  117   117 #>  [5442,]  106  108  111  120  118  122  121  121  116   116 #>  [5443,]  107  109  112  121  119  123  122  122  117   117 #>  [5444,]  107  109  112  121  119  123  122  122  117   117 #>  [5445,]  107  109  112  121  119  123  122  122  117   117 #>  [5446,]  107  109  112  121  119  123  122  122  117   117 #>  [5447,]  106  108  111  120  118  122  121  121  116   116 #>  [5448,]  106  108  111  120  118  122  121  121  116   116 #>  [5449,]  107  109  112  121  119  123  122  122  117   117 #>  [5450,]  107  109  112  121  119  123  122  122  117   117 #>  [5451,]  107  109  112  121  119  123  122  122  117   117 #>  [5452,]  106  108  111  120  118  122  121  121  116   116 #>  [5453,]  107  109  112  121  119  123  122  122  117   117 #>  [5454,]  106  108  111  120  118  122  121  121  116   116 #>  [5455,]  107  109  112  121  119  123  122  122  117   117 #>  [5456,]  107  109  112  121  119  123  122  122  117   117 #>  [5457,]  106  108  111  120  118  122  121  121  116   116 #>  [5458,]  107  109  112  121  119  123  122  122  117   117 #>  [5459,]  107  109  112  121  119  123  122  122  117   117 #>  [5460,]  107  109  112  121  119  123  122  122  117   117 #>  [5461,]  107  109  112  121  119  123  122  122  117   117 #>  [5462,]  106  108  111  120  118  122  121  121  116   116 #>  [5463,]  107  109  112  121  119  123  122  122  117   117 #>  [5464,]  107  109  112  121  119  123  122  122  117   117 #>  [5465,]  106  108  111  120  118  122  121  121  116   116 #>  [5466,]  107  109  112  121  119  123  122  122  117   117 #>  [5467,]  106  108  111  120  118  122  121  121  116   116 #>  [5468,]  107  109  112  121  119  123  122  122  117   117 #>  [5469,]  107  109  112  121  119  123  122  122  117   117 #>  [5470,]  106  108  111  120  118  122  121  121  116   116 #>  [5471,]  107  109  112  121  119  123  122  122  117   117 #>  [5472,]  106  108  111  120  118  122  121  121  116   116 #>  [5473,]  106  108  111  120  118  122  121  121  116   116 #>  [5474,]  106  108  111  120  118  122  121  121  116   116 #>  [5475,]  107  109  112  121  119  123  122  122  117   117 #>  [5476,]  106  108  111  120  118  122  121  121  116   116 #>  [5477,]  107  109  112  121  119  123  122  122  117   117 #>  [5478,]  107  109  112  121  119  123  122  122  117   117 #>  [5479,]  106  108  111  120  118  122  121  121  116   116 #>  [5480,]  107  109  112  121  119  123  122  122  117   117 #>  [5481,]  107  109  112  121  119  123  122  122  117   117 #>  [5482,]  106  108  111  120  118  122  121  121  116   116 #>  [5483,]  107  109  112  121  119  123  122  122  117   117 #>  [5484,]  107  109  112  121  119  123  122  122  117   117 #>  [5485,]  107  109  112  121  119  123  122  122  117   117 #>  [5486,]  106  108  111  120  118  122  121  121  116   116 #>  [5487,]  107  109  112  121  119  123  122  122  117   117 #>  [5488,]  106  108  111  120  118  122  121  121  116   116 #>  [5489,]  106  108  111  120  118  122  121  121  116   116 #>  [5490,]  107  109  112  121  119  123  122  122  117   117 #>  [5491,]  106  108  111  120  118  122  121  121  116   116 #>  [5492,]  106  108  111  120  118  122  121  121  116   116 #>  [5493,]  107  109  112  121  119  123  122  122  117   117 #>  [5494,]  106  108  111  120  118  122  121  121  116   116 #>  [5495,]  107  109  112  121  119  123  122  122  117   117 #>  [5496,]  107  109  112  121  119  123  122  122  117   117 #>  [5497,]  107  109  112  121  119  123  122  122  117   117 #>  [5498,]  106  108  111  120  118  122  121  121  116   116 #>  [5499,]  107  109  112  121  119  123  122  122  117   117 #>  [5500,]  107  109  112  121  119  123  122  122  117   117 #>  [5501,]  108  110  113  122  120  124  123  123  118   118 #>  [5502,]  108  110  113  122  120  124  123  123  118   118 #>  [5503,]  108  110  113  122  120  124  123  123  118   118 #>  [5504,]  108  110  113  122  120  124  123  123  118   118 #>  [5505,]  108  110  113  122  120  124  123  123  118   118 #>  [5506,]  108  110  113  122  120  124  123  123  118   118 #>  [5507,]  108  110  113  122  120  124  123  123  118   118 #>  [5508,]  109  111  114  123  121  125  124  124  119   119 #>  [5509,]  108  110  113  122  120  124  123  123  118   118 #>  [5510,]  108  110  113  122  120  124  123  123  118   118 #>  [5511,]  108  110  113  122  120  124  123  123  118   118 #>  [5512,]  108  110  113  122  120  124  123  123  118   118 #>  [5513,]  109  111  114  123  122  126  125  124  119   119 #>  [5514,]  108  110  113  122  120  124  123  123  118   118 #>  [5515,]  109  111  114  123  122  126  125  124  119   119 #>  [5516,]  108  110  113  122  120  124  123  123  118   118 #>  [5517,]  108  110  113  122  120  124  123  123  118   118 #>  [5518,]  108  110  113  122  120  124  123  123  118   118 #>  [5519,]  109  111  114  123  122  126  125  124  119   119 #>  [5520,]  109  111  114  123  122  126  125  124  119   119 #>  [5521,]  108  110  113  122  120  124  123  123  118   118 #>  [5522,]  109  111  114  123  122  126  125  124  119   119 #>  [5523,]  108  110  113  122  120  124  123  123  118   118 #>  [5524,]  108  110  113  122  120  124  123  123  118   118 #>  [5525,]  108  110  113  122  120  124  123  123  118   118 #>  [5526,]  108  110  113  122  120  124  123  123  118   118 #>  [5527,]  109  111  114  123  122  126  125  124  119   119 #>  [5528,]  108  110  113  122  120  124  123  123  118   118 #>  [5529,]  109  111  114  123  122  126  125  124  119   119 #>  [5530,]  108  110  113  122  120  124  123  123  118   118 #>  [5531,]  108  110  113  122  120  124  123  123  118   118 #>  [5532,]  108  110  113  122  120  124  123  123  118   118 #>  [5533,]  108  110  113  122  120  124  123  123  118   118 #>  [5534,]  108  110  113  122  120  124  123  123  118   118 #>  [5535,]  108  110  113  122  120  124  123  123  118   118 #>  [5536,]  109  111  114  123  122  126  125  124  119   119 #>  [5537,]  109  111  114  123  122  126  125  124  119   119 #>  [5538,]  109  111  114  123  122  126  125  124  119   119 #>  [5539,]  108  110  113  122  120  124  123  123  118   118 #>  [5540,]  108  110  113  122  120  124  123  123  118   118 #>  [5541,]  109  111  114  123  122  126  125  124  119   119 #>  [5542,]  108  110  113  122  120  124  123  123  118   118 #>  [5543,]  108  110  113  122  120  124  123  123  118   118 #>  [5544,]  108  110  113  122  120  124  123  123  118   118 #>  [5545,]  108  110  113  122  120  124  123  123  118   118 #>  [5546,]  109  111  114  123  122  126  125  124  119   119 #>  [5547,]  108  110  113  122  120  124  123  123  118   118 #>  [5548,]  108  110  113  122  120  124  123  123  118   118 #>  [5549,]  108  110  113  122  120  124  123  123  118   118 #>  [5550,]  109  111  114  123  122  126  125  124  119   119 #>  [5551,]  109  111  114  123  121  125  124  124  119   119 #>  [5552,]  108  110  113  122  120  124  123  123  118   118 #>  [5553,]  109  111  114  123  122  126  125  124  119   119 #>  [5554,]  108  110  113  122  120  124  123  123  118   118 #>  [5555,]  109  111  114  123  122  126  125  124  119   119 #>  [5556,]  108  110  113  122  120  124  123  123  118   118 #>  [5557,]  108  110  113  122  120  124  123  123  118   118 #>  [5558,]  109  111  114  123  122  126  125  124  119   119 #>  [5559,]  109  111  114  123  122  126  125  124  119   119 #>  [5560,]  109  111  114  123  121  125  124  124  119   119 #>  [5561,]  108  110  113  122  120  124  123  123  118   118 #>  [5562,]  108  110  113  122  120  124  123  123  118   118 #>  [5563,]  108  110  113  122  120  124  123  123  118   118 #>  [5564,]  109  111  114  123  121  125  124  124  119   119 #>  [5565,]  108  110  113  122  120  124  123  123  118   118 #>  [5566,]  109  111  114  123  122  126  125  124  119   119 #>  [5567,]  108  110  113  122  120  124  123  123  118   118 #>  [5568,]  108  110  113  122  120  124  123  123  118   118 #>  [5569,]  109  111  114  123  122  126  125  124  119   119 #>  [5570,]  108  110  113  122  120  124  123  123  118   118 #>  [5571,]  109  111  114  123  122  126  125  124  119   119 #>  [5572,]  108  110  113  122  120  124  123  123  118   118 #>  [5573,]  108  110  113  122  120  124  123  123  118   118 #>  [5574,]  108  110  113  122  120  124  123  123  118   118 #>  [5575,]  108  110  113  122  120  124  123  123  118   118 #>  [5576,]  108  110  113  122  120  124  123  123  118   118 #>  [5577,]  109  111  114  123  122  126  125  124  119   119 #>  [5578,]  108  110  113  122  120  124  123  123  118   118 #>  [5579,]  108  110  113  122  120  124  123  123  118   118 #>  [5580,]  109  111  114  123  122  126  125  124  119   119 #>  [5581,]  109  111  114  123  122  126  125  124  119   119 #>  [5582,]  108  110  113  122  120  124  123  123  118   118 #>  [5583,]  109  111  114  123  122  126  125  124  119   119 #>  [5584,]  109  111  114  123  122  126  125  124  119   119 #>  [5585,]  109  111  114  123  121  125  124  124  119   119 #>  [5586,]  108  110  113  122  120  124  123  123  118   118 #>  [5587,]  109  111  114  123  122  126  125  124  119   119 #>  [5588,]  108  110  113  122  120  124  123  123  118   118 #>  [5589,]  108  110  113  122  120  124  123  123  118   118 #>  [5590,]  109  111  114  123  122  126  125  124  119   119 #>  [5591,]  108  110  113  122  120  124  123  123  118   118 #>  [5592,]  108  110  113  122  120  124  123  123  118   118 #>  [5593,]  108  110  113  122  120  124  123  123  118   118 #>  [5594,]  108  110  113  122  120  124  123  123  118   118 #>  [5595,]  109  111  114  123  121  125  124  124  119   119 #>  [5596,]  109  111  114  123  122  126  125  124  119   119 #>  [5597,]  109  111  114  123  122  126  125  124  119   119 #>  [5598,]  108  110  113  122  120  124  123  123  118   118 #>  [5599,]  108  110  113  122  120  124  123  123  118   118 #>  [5600,]  109  111  114  123  122  126  125  124  119   119 #>  [5601,]  111  113  116  125  124  128  127  126  121   121 #>  [5602,]  110  112  115  124  123  127  126  125  120   120 #>  [5603,]  110  112  115  124  123  127  126  125  120   120 #>  [5604,]  111  113  116  125  124  128  127  126  121   121 #>  [5605,]  110  112  115  124  123  127  126  125  120   120 #>  [5606,]  110  112  115  124  123  127  126  125  120   120 #>  [5607,]  111  113  116  125  124  128  127  126  121   121 #>  [5608,]  111  113  116  125  124  128  127  126  121   121 #>  [5609,]  111  113  116  125  124  128  127  126  121   121 #>  [5610,]  111  113  116  125  124  128  127  126  121   121 #>  [5611,]  110  112  115  124  123  127  126  125  120   120 #>  [5612,]  110  112  115  124  123  127  126  125  120   120 #>  [5613,]  111  113  116  125  124  128  127  126  121   121 #>  [5614,]  110  112  115  124  123  127  126  125  120   120 #>  [5615,]  111  113  116  125  124  128  127  126  121   121 #>  [5616,]  111  113  116  125  124  128  127  126  121   121 #>  [5617,]  111  113  116  125  124  128  127  126  121   121 #>  [5618,]  111  113  116  125  124  128  127  126  121   121 #>  [5619,]  110  112  115  124  123  127  126  125  120   120 #>  [5620,]  110  112  115  124  123  127  126  125  120   120 #>  [5621,]  111  113  116  125  124  128  127  126  121   121 #>  [5622,]  110  112  115  124  123  127  126  125  120   120 #>  [5623,]  111  113  116  125  124  128  127  126  121   121 #>  [5624,]  110  112  115  124  123  127  126  125  120   120 #>  [5625,]  111  113  116  125  124  128  127  126  121   121 #>  [5626,]  110  112  115  124  123  127  126  125  120   120 #>  [5627,]  111  113  116  125  124  128  127  126  121   121 #>  [5628,]  111  113  116  125  124  128  127  126  121   121 #>  [5629,]  110  112  115  124  123  127  126  125  120   120 #>  [5630,]  110  112  115  124  123  127  126  125  120   120 #>  [5631,]  110  112  115  124  123  127  126  125  120   120 #>  [5632,]  110  112  115  124  123  127  126  125  120   120 #>  [5633,]  110  112  115  124  123  127  126  125  120   120 #>  [5634,]  110  112  115  124  123  127  126  125  120   120 #>  [5635,]  110  112  115  124  123  127  126  125  120   120 #>  [5636,]  110  112  115  124  123  127  126  125  120   120 #>  [5637,]  111  113  116  125  124  128  127  126  121   121 #>  [5638,]  111  113  116  125  124  128  127  126  121   121 #>  [5639,]  111  113  116  125  124  128  127  126  121   121 #>  [5640,]  110  112  115  124  123  127  126  125  120   120 #>  [5641,]  110  112  115  124  123  127  126  125  120   120 #>  [5642,]  110  112  115  124  123  127  126  125  120   120 #>  [5643,]  111  113  116  125  124  128  127  126  121   121 #>  [5644,]  111  113  116  125  124  128  127  126  121   121 #>  [5645,]  111  113  116  125  124  128  127  126  121   121 #>  [5646,]  111  113  116  125  124  128  127  126  121   121 #>  [5647,]  111  113  116  125  124  128  127  126  121   121 #>  [5648,]  110  112  115  124  123  127  126  125  120   120 #>  [5649,]  110  112  115  124  123  127  126  125  120   120 #>  [5650,]  110  112  115  124  123  127  126  125  120   120 #>  [5651,]  110  112  115  124  123  127  126  125  120   120 #>  [5652,]  110  112  115  124  123  127  126  125  120   120 #>  [5653,]  111  113  116  125  124  128  127  126  121   121 #>  [5654,]  110  112  115  124  123  127  126  125  120   120 #>  [5655,]  110  112  115  124  123  127  126  125  120   120 #>  [5656,]  111  113  116  125  124  128  127  126  121   121 #>  [5657,]  110  112  115  124  123  127  126  125  120   120 #>  [5658,]  110  112  115  124  123  127  126  125  120   120 #>  [5659,]  110  112  115  124  123  127  126  125  120   120 #>  [5660,]  110  112  115  124  123  127  126  125  120   120 #>  [5661,]  111  113  116  125  124  128  127  126  121   121 #>  [5662,]  110  112  115  124  123  127  126  125  120   120 #>  [5663,]  110  112  115  124  123  127  126  125  120   120 #>  [5664,]  111  113  116  125  124  128  127  126  121   121 #>  [5665,]  110  112  115  124  123  127  126  125  120   120 #>  [5666,]  110  112  115  124  123  127  126  125  120   120 #>  [5667,]  110  112  115  124  123  127  126  125  120   120 #>  [5668,]  110  112  115  124  123  127  126  125  120   120 #>  [5669,]  110  112  115  124  123  127  126  125  120   120 #>  [5670,]  111  113  116  125  124  128  127  126  121   121 #>  [5671,]  111  113  116  125  124  128  127  126  121   121 #>  [5672,]  111  113  116  125  124  128  127  126  121   121 #>  [5673,]  111  113  116  125  124  128  127  126  121   121 #>  [5674,]  111  113  116  125  124  128  127  126  121   121 #>  [5675,]  111  113  116  125  124  128  127  126  121   121 #>  [5676,]  111  113  116  125  124  128  127  126  121   121 #>  [5677,]  111  113  116  125  124  128  127  126  121   121 #>  [5678,]  110  112  115  124  123  127  126  125  120   120 #>  [5679,]  111  113  116  125  124  128  127  126  121   121 #>  [5680,]  110  112  115  124  123  127  126  125  120   120 #>  [5681,]  110  112  115  124  123  127  126  125  120   120 #>  [5682,]  111  113  116  125  124  128  127  126  121   121 #>  [5683,]  110  112  115  124  123  127  126  125  120   120 #>  [5684,]  111  113  116  125  124  128  127  126  121   121 #>  [5685,]  110  112  115  124  123  127  126  125  120   120 #>  [5686,]  111  113  116  125  124  128  127  126  121   121 #>  [5687,]  111  113  116  125  124  128  127  126  121   121 #>  [5688,]  111  113  116  125  124  128  127  126  121   121 #>  [5689,]  110  112  115  124  123  127  126  125  120   120 #>  [5690,]  111  113  116  125  124  128  127  126  121   121 #>  [5691,]  110  112  115  124  123  127  126  125  120   120 #>  [5692,]  110  112  115  124  123  127  126  125  120   120 #>  [5693,]  110  112  115  124  123  127  126  125  120   120 #>  [5694,]  111  113  116  125  124  128  127  126  121   121 #>  [5695,]  111  113  116  125  124  128  127  126  121   121 #>  [5696,]  111  113  116  125  124  128  127  126  121   121 #>  [5697,]  110  112  115  124  123  127  126  125  120   120 #>  [5698,]  110  112  115  124  123  127  126  125  120   120 #>  [5699,]  110  112  115  124  123  127  126  125  120   120 #>  [5700,]  111  113  116  125  124  128  127  126  121   121 #>  [5701,]  113  115  117  126  125  129  128  127  122   122 #>  [5702,]  112  114  119  128  127  131  130  128  123   123 #>  [5703,]  113  115  117  126  125  129  128  127  122   122 #>  [5704,]  113  115  117  126  125  129  128  127  122   122 #>  [5705,]  113  115  117  126  125  129  128  127  122   122 #>  [5706,]  112  114  118  127  126  130  129  128  123   123 #>  [5707,]  113  115  117  126  125  129  128  127  122   122 #>  [5708,]  113  115  117  126  125  129  128  127  122   122 #>  [5709,]  113  115  117  126  125  129  128  127  122   122 #>  [5710,]  113  115  117  126  125  129  128  127  122   122 #>  [5711,]  113  115  117  126  125  129  128  127  122   122 #>  [5712,]  112  114  119  128  127  131  130  128  123   123 #>  [5713,]  113  115  117  126  125  129  128  127  122   122 #>  [5714,]  113  115  117  126  125  129  128  127  122   122 #>  [5715,]  112  114  119  128  127  131  130  128  123   123 #>  [5716,]  113  115  117  126  125  129  128  127  122   122 #>  [5717,]  112  114  119  128  127  131  130  128  123   123 #>  [5718,]  113  115  117  126  125  129  128  127  122   122 #>  [5719,]  113  115  117  126  125  129  128  127  122   122 #>  [5720,]  113  115  117  126  125  129  128  127  122   122 #>  [5721,]  113  115  117  126  125  129  128  127  122   122 #>  [5722,]  113  115  117  126  125  129  128  127  122   122 #>  [5723,]  112  114  119  128  127  131  130  128  123   123 #>  [5724,]  113  115  117  126  125  129  128  127  122   122 #>  [5725,]  113  115  117  126  125  129  128  127  122   122 #>  [5726,]  113  115  117  126  125  129  128  127  122   122 #>  [5727,]  113  115  117  126  125  129  128  127  122   122 #>  [5728,]  113  115  117  126  125  129  128  127  122   122 #>  [5729,]  112  114  119  128  127  131  130  128  123   123 #>  [5730,]  113  115  117  126  125  129  128  127  122   122 #>  [5731,]  112  114  118  127  126  130  129  128  123   123 #>  [5732,]  113  115  117  126  125  129  128  127  122   122 #>  [5733,]  113  115  117  126  125  129  128  127  122   122 #>  [5734,]  112  114  118  127  126  130  129  128  123   123 #>  [5735,]  113  115  117  126  125  129  128  127  122   122 #>  [5736,]  113  115  117  126  125  129  128  127  122   122 #>  [5737,]  112  114  119  128  127  131  130  128  123   123 #>  [5738,]  113  115  117  126  125  129  128  127  122   122 #>  [5739,]  113  115  117  126  125  129  128  127  122   122 #>  [5740,]  113  115  117  126  125  129  128  127  122   122 #>  [5741,]  113  115  117  126  125  129  128  127  122   122 #>  [5742,]  112  114  118  127  126  130  129  128  123   123 #>  [5743,]  112  114  119  128  127  131  130  128  123   123 #>  [5744,]  112  114  119  128  127  131  130  128  123   123 #>  [5745,]  113  115  117  126  125  129  128  127  122   122 #>  [5746,]  113  115  117  126  125  129  128  127  122   122 #>  [5747,]  112  114  118  127  126  130  129  128  123   123 #>  [5748,]  112  114  118  127  126  130  129  128  123   123 #>  [5749,]  113  115  117  126  125  129  128  127  122   122 #>  [5750,]  113  115  117  126  125  129  128  127  122   122 #>  [5751,]  113  115  117  126  125  129  128  127  122   122 #>  [5752,]  113  115  117  126  125  129  128  127  122   122 #>  [5753,]  113  115  117  126  125  129  128  127  122   122 #>  [5754,]  113  115  117  126  125  129  128  127  122   122 #>  [5755,]  113  115  117  126  125  129  128  127  122   122 #>  [5756,]  113  115  117  126  125  129  128  127  122   122 #>  [5757,]  113  115  117  126  125  129  128  127  122   122 #>  [5758,]  113  115  117  126  125  129  128  127  122   122 #>  [5759,]  113  115  117  126  125  129  128  127  122   122 #>  [5760,]  113  115  117  126  125  129  128  127  122   122 #>  [5761,]  113  115  117  126  125  129  128  127  122   122 #>  [5762,]  113  115  117  126  125  129  128  127  122   122 #>  [5763,]  112  114  119  128  127  131  130  128  123   123 #>  [5764,]  112  114  119  128  127  131  130  128  123   123 #>  [5765,]  113  115  117  126  125  129  128  127  122   122 #>  [5766,]  113  115  117  126  125  129  128  127  122   122 #>  [5767,]  113  115  117  126  125  129  128  127  122   122 #>  [5768,]  113  115  117  126  125  129  128  127  122   122 #>  [5769,]  113  115  117  126  125  129  128  127  122   122 #>  [5770,]  112  114  118  127  126  130  129  128  123   123 #>  [5771,]  113  115  117  126  125  129  128  127  122   122 #>  [5772,]  113  115  117  126  125  129  128  127  122   122 #>  [5773,]  113  115  117  126  125  129  128  127  122   122 #>  [5774,]  113  115  117  126  125  129  128  127  122   122 #>  [5775,]  112  114  119  128  127  131  130  128  123   123 #>  [5776,]  113  115  117  126  125  129  128  127  122   122 #>  [5777,]  113  115  117  126  125  129  128  127  122   122 #>  [5778,]  112  114  119  128  127  131  130  128  123   123 #>  [5779,]  112  114  118  127  126  130  129  128  123   123 #>  [5780,]  113  115  117  126  125  129  128  127  122   122 #>  [5781,]  112  114  119  128  127  131  130  128  123   123 #>  [5782,]  113  115  117  126  125  129  128  127  122   122 #>  [5783,]  113  115  117  126  125  129  128  127  122   122 #>  [5784,]  113  115  117  126  125  129  128  127  122   122 #>  [5785,]  113  115  117  126  125  129  128  127  122   122 #>  [5786,]  113  115  117  126  125  129  128  127  122   122 #>  [5787,]  113  115  117  126  125  129  128  127  122   122 #>  [5788,]  113  115  117  126  125  129  128  127  122   122 #>  [5789,]  113  115  117  126  125  129  128  127  122   122 #>  [5790,]  113  115  117  126  125  129  128  127  122   122 #>  [5791,]  113  115  117  126  125  129  128  127  122   122 #>  [5792,]  112  114  119  128  127  131  130  128  123   123 #>  [5793,]  113  115  117  126  125  129  128  127  122   122 #>  [5794,]  112  114  118  127  126  130  129  128  123   123 #>  [5795,]  112  114  119  128  127  131  130  128  123   123 #>  [5796,]  113  115  117  126  125  129  128  127  122   122 #>  [5797,]  113  115  117  126  125  129  128  127  122   122 #>  [5798,]  113  115  117  126  125  129  128  127  122   122 #>  [5799,]  113  115  117  126  125  129  128  127  122   122 #>  [5800,]  112  114  119  128  127  131  130  128  123   123 #>  [5801,]  115  117  121  130  129  133  132  130  125   125 #>  [5802,]  114  116  120  129  128  132  131  129  124   124 #>  [5803,]  115  117  121  130  129  133  132  130  125   125 #>  [5804,]  115  117  121  130  129  133  132  130  125   125 #>  [5805,]  115  117  121  130  129  133  132  130  125   125 #>  [5806,]  114  116  120  129  128  132  131  129  124   124 #>  [5807,]  115  117  121  130  129  133  132  130  125   125 #>  [5808,]  115  117  121  130  129  133  132  130  125   125 #>  [5809,]  115  117  121  130  129  133  132  130  125   125 #>  [5810,]  115  117  121  130  129  133  132  130  125   125 #>  [5811,]  114  116  120  129  128  132  131  129  124   124 #>  [5812,]  114  116  120  129  128  132  131  129  124   124 #>  [5813,]  115  117  121  130  129  133  132  130  125   125 #>  [5814,]  115  117  121  130  129  133  132  130  125   125 #>  [5815,]  114  116  120  129  128  132  131  129  124   124 #>  [5816,]  115  117  121  130  129  133  132  130  125   125 #>  [5817,]  114  116  120  129  128  132  131  129  124   124 #>  [5818,]  115  117  121  130  129  133  132  130  125   125 #>  [5819,]  114  116  120  129  128  132  131  129  124   124 #>  [5820,]  115  117  121  130  129  133  132  130  125   125 #>  [5821,]  115  117  121  130  129  133  132  130  125   125 #>  [5822,]  115  117  121  130  129  133  132  130  125   125 #>  [5823,]  114  116  120  129  128  132  131  129  124   124 #>  [5824,]  115  117  121  130  129  133  132  130  125   125 #>  [5825,]  115  117  121  130  129  133  132  130  125   125 #>  [5826,]  114  116  120  129  128  132  131  129  124   124 #>  [5827,]  115  117  121  130  129  133  132  130  125   125 #>  [5828,]  115  117  121  130  129  133  132  130  125   125 #>  [5829,]  114  116  120  129  128  132  131  129  124   124 #>  [5830,]  114  116  120  129  128  132  131  129  124   124 #>  [5831,]  114  116  120  129  128  132  131  129  124   124 #>  [5832,]  115  117  121  130  129  133  132  130  125   125 #>  [5833,]  115  117  121  130  129  133  132  130  125   125 #>  [5834,]  114  116  120  129  128  132  131  129  124   124 #>  [5835,]  114  116  120  129  128  132  131  129  124   124 #>  [5836,]  115  117  121  130  129  133  132  130  125   125 #>  [5837,]  114  116  120  129  128  132  131  129  124   124 #>  [5838,]  115  117  121  130  129  133  132  130  125   125 #>  [5839,]  115  117  121  130  129  133  132  130  125   125 #>  [5840,]  115  117  121  130  129  133  132  130  125   125 #>  [5841,]  115  117  121  130  129  133  132  130  125   125 #>  [5842,]  114  116  120  129  128  132  131  129  124   124 #>  [5843,]  114  116  120  129  128  132  131  129  124   124 #>  [5844,]  114  116  120  129  128  132  131  129  124   124 #>  [5845,]  115  117  121  130  129  133  132  130  125   125 #>  [5846,]  114  116  120  129  128  132  131  129  124   124 #>  [5847,]  114  116  120  129  128  132  131  129  124   124 #>  [5848,]  114  116  120  129  128  132  131  129  124   124 #>  [5849,]  115  117  121  130  129  133  132  130  125   125 #>  [5850,]  115  117  121  130  129  133  132  130  125   125 #>  [5851,]  115  117  121  130  129  133  132  130  125   125 #>  [5852,]  115  117  121  130  129  133  132  130  125   125 #>  [5853,]  115  117  121  130  129  133  132  130  125   125 #>  [5854,]  115  117  121  130  129  133  132  130  125   125 #>  [5855,]  115  117  121  130  129  133  132  130  125   125 #>  [5856,]  114  116  120  129  128  132  131  129  124   124 #>  [5857,]  115  117  121  130  129  133  132  130  125   125 #>  [5858,]  115  117  121  130  129  133  132  130  125   125 #>  [5859,]  115  117  121  130  129  133  132  130  125   125 #>  [5860,]  114  116  120  129  128  132  131  129  124   124 #>  [5861,]  114  116  120  129  128  132  131  129  124   124 #>  [5862,]  115  117  121  130  129  133  132  130  125   125 #>  [5863,]  114  116  120  129  128  132  131  129  124   124 #>  [5864,]  114  116  120  129  128  132  131  129  124   124 #>  [5865,]  114  116  120  129  128  132  131  129  124   124 #>  [5866,]  114  116  120  129  128  132  131  129  124   124 #>  [5867,]  115  117  121  130  129  133  132  130  125   125 #>  [5868,]  114  116  120  129  128  132  131  129  124   124 #>  [5869,]  115  117  121  130  129  133  132  130  125   125 #>  [5870,]  114  116  120  129  128  132  131  129  124   124 #>  [5871,]  115  117  121  130  129  133  132  130  125   125 #>  [5872,]  115  117  121  130  129  133  132  130  125   125 #>  [5873,]  115  117  121  130  129  133  132  130  125   125 #>  [5874,]  115  117  121  130  129  133  132  130  125   125 #>  [5875,]  114  116  120  129  128  132  131  129  124   124 #>  [5876,]  115  117  121  130  129  133  132  130  125   125 #>  [5877,]  115  117  121  130  129  133  132  130  125   125 #>  [5878,]  114  116  120  129  128  132  131  129  124   124 #>  [5879,]  114  116  120  129  128  132  131  129  124   124 #>  [5880,]  115  117  121  130  129  133  132  130  125   125 #>  [5881,]  114  116  120  129  128  132  131  129  124   124 #>  [5882,]  115  117  121  130  129  133  132  130  125   125 #>  [5883,]  115  117  121  130  129  133  132  130  125   125 #>  [5884,]  115  117  121  130  129  133  132  130  125   125 #>  [5885,]  115  117  121  130  129  133  132  130  125   125 #>  [5886,]  115  117  121  130  129  133  132  130  125   125 #>  [5887,]  115  117  121  130  129  133  132  130  125   125 #>  [5888,]  115  117  121  130  129  133  132  130  125   125 #>  [5889,]  115  117  121  130  129  133  132  130  125   125 #>  [5890,]  115  117  121  130  129  133  132  130  125   125 #>  [5891,]  115  117  121  130  129  133  132  130  125   125 #>  [5892,]  114  116  120  129  128  132  131  129  124   124 #>  [5893,]  114  116  120  129  128  132  131  129  124   124 #>  [5894,]  114  116  120  129  128  132  131  129  124   124 #>  [5895,]  114  116  120  129  128  132  131  129  124   124 #>  [5896,]  114  116  120  129  128  132  131  129  124   124 #>  [5897,]  115  117  121  130  129  133  132  130  125   125 #>  [5898,]  115  117  121  130  129  133  132  130  125   125 #>  [5899,]  115  117  121  130  129  133  132  130  125   125 #>  [5900,]  114  116  120  129  128  132  131  129  124   124 #>  [5901,]  116  120  123  132  131  135  134  132  127   127 #>  [5902,]  117  118  122  131  130  134  133  131  126   126 #>  [5903,]  116  119  123  132  131  135  134  132  127   127 #>  [5904,]  116  119  123  132  131  135  134  132  127   127 #>  [5905,]  116  119  123  132  131  135  134  132  127   127 #>  [5906,]  116  120  123  132  131  135  134  132  127   127 #>  [5907,]  116  120  123  132  131  135  134  132  127   127 #>  [5908,]  116  119  123  132  131  135  134  132  127   127 #>  [5909,]  117  118  122  131  130  134  133  131  126   126 #>  [5910,]  117  118  122  131  130  134  133  131  126   126 #>  [5911,]  116  120  123  132  131  135  134  132  127   127 #>  [5912,]  117  118  122  131  130  134  133  131  126   126 #>  [5913,]  116  120  123  132  131  135  134  132  127   127 #>  [5914,]  116  120  123  132  131  135  134  132  127   127 #>  [5915,]  116  120  123  132  131  135  134  132  127   127 #>  [5916,]  116  120  123  132  131  135  134  132  127   127 #>  [5917,]  117  118  122  131  130  134  133  131  126   126 #>  [5918,]  116  119  123  132  131  135  134  132  127   127 #>  [5919,]  116  120  123  132  131  135  134  132  127   127 #>  [5920,]  116  119  123  132  131  135  134  132  127   127 #>  [5921,]  117  118  122  131  130  134  133  131  126   126 #>  [5922,]  116  120  123  132  131  135  134  132  127   127 #>  [5923,]  116  119  123  132  131  135  134  132  127   127 #>  [5924,]  116  119  123  132  131  135  134  132  127   127 #>  [5925,]  116  120  123  132  131  135  134  132  127   127 #>  [5926,]  116  120  123  132  131  135  134  132  127   127 #>  [5927,]  116  120  123  132  131  135  134  132  127   127 #>  [5928,]  116  120  123  132  131  135  134  132  127   127 #>  [5929,]  117  118  122  131  130  134  133  131  126   126 #>  [5930,]  116  119  123  132  131  135  134  132  127   127 #>  [5931,]  116  119  123  132  131  135  134  132  127   127 #>  [5932,]  116  119  123  132  131  135  134  132  127   127 #>  [5933,]  117  118  122  131  130  134  133  131  126   126 #>  [5934,]  116  119  123  132  131  135  134  132  127   127 #>  [5935,]  116  120  123  132  131  135  134  132  127   127 #>  [5936,]  116  119  123  132  131  135  134  132  127   127 #>  [5937,]  116  120  123  132  131  135  134  132  127   127 #>  [5938,]  116  119  123  132  131  135  134  132  127   127 #>  [5939,]  116  119  123  132  131  135  134  132  127   127 #>  [5940,]  116  120  123  132  131  135  134  132  127   127 #>  [5941,]  116  120  123  132  131  135  134  132  127   127 #>  [5942,]  116  119  123  132  131  135  134  132  127   127 #>  [5943,]  116  119  123  132  131  135  134  132  127   127 #>  [5944,]  116  120  123  132  131  135  134  132  127   127 #>  [5945,]  116  119  123  132  131  135  134  132  127   127 #>  [5946,]  116  120  123  132  131  135  134  132  127   127 #>  [5947,]  116  120  123  132  131  135  134  132  127   127 #>  [5948,]  116  119  123  132  131  135  134  132  127   127 #>  [5949,]  116  119  123  132  131  135  134  132  127   127 #>  [5950,]  116  120  123  132  131  135  134  132  127   127 #>  [5951,]  116  119  123  132  131  135  134  132  127   127 #>  [5952,]  116  120  123  132  131  135  134  132  127   127 #>  [5953,]  117  118  122  131  130  134  133  131  126   126 #>  [5954,]  116  120  123  132  131  135  134  132  127   127 #>  [5955,]  116  120  123  132  131  135  134  132  127   127 #>  [5956,]  116  119  123  132  131  135  134  132  127   127 #>  [5957,]  116  120  123  132  131  135  134  132  127   127 #>  [5958,]  116  120  123  132  131  135  134  132  127   127 #>  [5959,]  116  120  123  132  131  135  134  132  127   127 #>  [5960,]  117  118  122  131  130  134  133  131  126   126 #>  [5961,]  116  120  123  132  131  135  134  132  127   127 #>  [5962,]  116  119  123  132  131  135  134  132  127   127 #>  [5963,]  117  118  122  131  130  134  133  131  126   126 #>  [5964,]  116  119  123  132  131  135  134  132  127   127 #>  [5965,]  116  119  123  132  131  135  134  132  127   127 #>  [5966,]  116  119  123  132  131  135  134  132  127   127 #>  [5967,]  116  119  123  132  131  135  134  132  127   127 #>  [5968,]  116  120  123  132  131  135  134  132  127   127 #>  [5969,]  116  120  123  132  131  135  134  132  127   127 #>  [5970,]  117  118  122  131  130  134  133  131  126   126 #>  [5971,]  116  120  123  132  131  135  134  132  127   127 #>  [5972,]  116  119  123  132  131  135  134  132  127   127 #>  [5973,]  116  120  123  132  131  135  134  132  127   127 #>  [5974,]  116  120  123  132  131  135  134  132  127   127 #>  [5975,]  116  120  123  132  131  135  134  132  127   127 #>  [5976,]  116  120  123  132  131  135  134  132  127   127 #>  [5977,]  116  120  123  132  131  135  134  132  127   127 #>  [5978,]  116  119  123  132  131  135  134  132  127   127 #>  [5979,]  116  120  123  132  131  135  134  132  127   127 #>  [5980,]  117  118  122  131  130  134  133  131  126   126 #>  [5981,]  117  118  122  131  130  134  133  131  126   126 #>  [5982,]  116  120  123  132  131  135  134  132  127   127 #>  [5983,]  116  120  123  132  131  135  134  132  127   127 #>  [5984,]  116  120  123  132  131  135  134  132  127   127 #>  [5985,]  116  119  123  132  131  135  134  132  127   127 #>  [5986,]  117  118  122  131  130  134  133  131  126   126 #>  [5987,]  116  120  123  132  131  135  134  132  127   127 #>  [5988,]  116  119  123  132  131  135  134  132  127   127 #>  [5989,]  116  119  123  132  131  135  134  132  127   127 #>  [5990,]  116  120  123  132  131  135  134  132  127   127 #>  [5991,]  116  119  123  132  131  135  134  132  127   127 #>  [5992,]  116  120  123  132  131  135  134  132  127   127 #>  [5993,]  116  120  123  132  131  135  134  132  127   127 #>  [5994,]  116  120  123  132  131  135  134  132  127   127 #>  [5995,]  116  119  123  132  131  135  134  132  127   127 #>  [5996,]  116  120  123  132  131  135  134  132  127   127 #>  [5997,]  116  120  123  132  131  135  134  132  127   127 #>  [5998,]  116  120  123  132  131  135  134  132  127   127 #>  [5999,]  116  120  123  132  131  135  134  132  127   127 #>  [6000,]  116  120  123  132  131  135  134  132  127   127 #>  [6001,]  119  122  125  134  133  137  136  134  129   128 #>  [6002,]  118  121  124  133  132  136  135  133  128   128 #>  [6003,]  119  122  125  134  133  137  136  134  129   128 #>  [6004,]  119  122  125  134  133  137  136  134  129   128 #>  [6005,]  119  122  125  134  133  137  136  134  129   128 #>  [6006,]  118  121  124  133  132  136  135  133  128   128 #>  [6007,]  119  122  125  134  133  137  136  134  129   128 #>  [6008,]  119  122  125  134  133  137  136  134  129   128 #>  [6009,]  119  122  125  134  133  137  136  134  129   128 #>  [6010,]  119  122  125  134  133  137  136  134  129   128 #>  [6011,]  118  121  124  133  132  136  135  133  128   128 #>  [6012,]  118  121  124  133  132  136  135  133  128   128 #>  [6013,]  119  122  125  134  133  137  136  134  129   128 #>  [6014,]  119  122  125  134  133  137  136  134  129   128 #>  [6015,]  118  121  124  133  132  136  135  133  128   128 #>  [6016,]  119  122  125  134  133  137  136  134  129   128 #>  [6017,]  118  121  124  133  132  136  135  133  128   128 #>  [6018,]  119  122  125  134  133  137  136  134  129   128 #>  [6019,]  119  122  125  134  133  137  136  134  129   128 #>  [6020,]  119  122  125  134  133  137  136  134  129   128 #>  [6021,]  119  122  125  134  133  137  136  134  129   128 #>  [6022,]  119  122  125  134  133  137  136  134  129   128 #>  [6023,]  118  121  124  133  132  136  135  133  128   128 #>  [6024,]  119  122  125  134  133  137  136  134  129   128 #>  [6025,]  119  122  125  134  133  137  136  134  129   128 #>  [6026,]  119  122  125  134  133  137  136  134  129   128 #>  [6027,]  119  122  125  134  133  137  136  134  129   128 #>  [6028,]  119  122  125  134  133  137  136  134  129   128 #>  [6029,]  118  121  124  133  132  136  135  133  128   128 #>  [6030,]  118  121  124  133  132  136  135  133  128   128 #>  [6031,]  118  121  124  133  132  136  135  133  128   128 #>  [6032,]  119  122  125  134  133  137  136  134  129   128 #>  [6033,]  119  122  125  134  133  137  136  134  129   128 #>  [6034,]  118  121  124  133  132  136  135  133  128   128 #>  [6035,]  118  121  124  133  132  136  135  133  128   128 #>  [6036,]  119  122  125  134  133  137  136  134  129   128 #>  [6037,]  118  121  124  133  132  136  135  133  128   128 #>  [6038,]  119  122  125  134  133  137  136  134  129   128 #>  [6039,]  119  122  125  134  133  137  136  134  129   128 #>  [6040,]  119  122  125  134  133  137  136  134  129   128 #>  [6041,]  119  122  125  134  133  137  136  134  129   128 #>  [6042,]  118  121  124  133  132  136  135  133  128   128 #>  [6043,]  118  121  124  133  132  136  135  133  128   128 #>  [6044,]  118  121  124  133  132  136  135  133  128   128 #>  [6045,]  119  122  125  134  133  137  136  134  129   128 #>  [6046,]  119  122  125  134  133  137  136  134  129   128 #>  [6047,]  118  121  124  133  132  136  135  133  128   128 #>  [6048,]  118  121  124  133  132  136  135  133  128   128 #>  [6049,]  119  122  125  134  133  137  136  134  129   128 #>  [6050,]  119  122  125  134  133  137  136  134  129   128 #>  [6051,]  119  122  125  134  133  137  136  134  129   128 #>  [6052,]  119  122  125  134  133  137  136  134  129   128 #>  [6053,]  119  122  125  134  133  137  136  134  129   128 #>  [6054,]  119  122  125  134  133  137  136  134  129   128 #>  [6055,]  119  122  125  134  133  137  136  134  129   128 #>  [6056,]  118  121  124  133  132  136  135  133  128   128 #>  [6057,]  119  122  125  134  133  137  136  134  129   128 #>  [6058,]  119  122  125  134  133  137  136  134  129   128 #>  [6059,]  119  122  125  134  133  137  136  134  129   128 #>  [6060,]  118  121  124  133  132  136  135  133  128   128 #>  [6061,]  118  121  124  133  132  136  135  133  128   128 #>  [6062,]  119  122  125  134  133  137  136  134  129   128 #>  [6063,]  118  121  124  133  132  136  135  133  128   128 #>  [6064,]  118  121  124  133  132  136  135  133  128   128 #>  [6065,]  118  121  124  133  132  136  135  133  128   128 #>  [6066,]  118  121  124  133  132  136  135  133  128   128 #>  [6067,]  119  122  125  134  133  137  136  134  129   128 #>  [6068,]  119  122  125  134  133  137  136  134  129   128 #>  [6069,]  119  122  125  134  133  137  136  134  129   128 #>  [6070,]  118  121  124  133  132  136  135  133  128   128 #>  [6071,]  119  122  125  134  133  137  136  134  129   128 #>  [6072,]  119  122  125  134  133  137  136  134  129   128 #>  [6073,]  119  122  125  134  133  137  136  134  129   128 #>  [6074,]  119  122  125  134  133  137  136  134  129   128 #>  [6075,]  118  121  124  133  132  136  135  133  128   128 #>  [6076,]  119  122  125  134  133  137  136  134  129   128 #>  [6077,]  119  122  125  134  133  137  136  134  129   128 #>  [6078,]  118  121  124  133  132  136  135  133  128   128 #>  [6079,]  118  121  124  133  132  136  135  133  128   128 #>  [6080,]  119  122  125  134  133  137  136  134  129   128 #>  [6081,]  118  121  124  133  132  136  135  133  128   128 #>  [6082,]  119  122  125  134  133  137  136  134  129   128 #>  [6083,]  119  122  125  134  133  137  136  134  129   128 #>  [6084,]  119  122  125  134  133  137  136  134  129   128 #>  [6085,]  119  122  125  134  133  137  136  134  129   128 #>  [6086,]  119  122  125  134  133  137  136  134  129   128 #>  [6087,]  119  122  125  134  133  137  136  134  129   128 #>  [6088,]  119  122  125  134  133  137  136  134  129   128 #>  [6089,]  119  122  125  134  133  137  136  134  129   128 #>  [6090,]  119  122  125  134  133  137  136  134  129   128 #>  [6091,]  119  122  125  134  133  137  136  134  129   128 #>  [6092,]  118  121  124  133  132  136  135  133  128   128 #>  [6093,]  119  122  125  134  133  137  136  134  129   128 #>  [6094,]  118  121  124  133  132  136  135  133  128   128 #>  [6095,]  118  121  124  133  132  136  135  133  128   128 #>  [6096,]  118  121  124  133  132  136  135  133  128   128 #>  [6097,]  119  122  125  134  133  137  136  134  129   128 #>  [6098,]  119  122  125  134  133  137  136  134  129   128 #>  [6099,]  119  122  125  134  133  137  136  134  129   128 #>  [6100,]  118  121  124  133  132  136  135  133  128   128 #>  [6101,]  120  123  128  136  135  139  138  136  131   130 #>  [6102,]  121  124  126  135  134  138  137  135  130   129 #>  [6103,]  121  124  126  135  134  138  137  135  130   129 #>  [6104,]  120  123  127  136  135  139  138  136  131   130 #>  [6105,]  120  123  128  136  135  139  138  136  131   130 #>  [6106,]  121  124  126  135  134  138  137  135  130   129 #>  [6107,]  121  124  126  135  134  138  137  135  130   129 #>  [6108,]  120  123  127  136  135  139  138  136  131   130 #>  [6109,]  120  123  127  136  135  139  138  136  131   130 #>  [6110,]  121  124  126  135  134  138  137  135  130   129 #>  [6111,]  120  123  127  136  135  139  138  136  131   130 #>  [6112,]  121  124  126  135  134  138  137  135  130   129 #>  [6113,]  120  123  127  136  135  139  138  136  131   130 #>  [6114,]  120  123  128  136  135  139  138  136  131   130 #>  [6115,]  120  123  128  136  135  139  138  136  131   130 #>  [6116,]  120  123  127  136  135  139  138  136  131   130 #>  [6117,]  120  123  127  136  135  139  138  136  131   130 #>  [6118,]  121  124  126  135  134  138  137  135  130   129 #>  [6119,]  121  124  126  135  134  138  137  135  130   129 #>  [6120,]  121  124  126  135  134  138  137  135  130   129 #>  [6121,]  120  123  127  136  135  139  138  136  131   130 #>  [6122,]  120  123  127  136  135  139  138  136  131   130 #>  [6123,]  121  124  126  135  134  138  137  135  130   129 #>  [6124,]  120  123  127  136  135  139  138  136  131   130 #>  [6125,]  121  124  126  135  134  138  137  135  130   129 #>  [6126,]  120  123  128  136  135  139  138  136  131   130 #>  [6127,]  120  123  128  136  135  139  138  136  131   130 #>  [6128,]  121  124  126  135  134  138  137  135  130   129 #>  [6129,]  121  124  126  135  134  138  137  135  130   129 #>  [6130,]  120  123  127  136  135  139  138  136  131   130 #>  [6131,]  121  124  126  135  134  138  137  135  130   129 #>  [6132,]  121  124  126  135  134  138  137  135  130   129 #>  [6133,]  121  124  126  135  134  138  137  135  130   129 #>  [6134,]  121  124  126  135  134  138  137  135  130   129 #>  [6135,]  120  123  127  136  135  139  138  136  131   130 #>  [6136,]  121  124  126  135  134  138  137  135  130   129 #>  [6137,]  120  123  127  136  135  139  138  136  131   130 #>  [6138,]  120  123  127  136  135  139  138  136  131   130 #>  [6139,]  121  124  126  135  134  138  137  135  130   129 #>  [6140,]  121  124  126  135  134  138  137  135  130   129 #>  [6141,]  120  123  127  136  135  139  138  136  131   130 #>  [6142,]  121  124  126  135  134  138  137  135  130   129 #>  [6143,]  120  123  128  136  135  139  138  136  131   130 #>  [6144,]  120  123  127  136  135  139  138  136  131   130 #>  [6145,]  120  123  127  136  135  139  138  136  131   130 #>  [6146,]  120  123  127  136  135  139  138  136  131   130 #>  [6147,]  121  124  126  135  134  138  137  135  130   129 #>  [6148,]  121  124  126  135  134  138  137  135  130   129 #>  [6149,]  120  123  127  136  135  139  138  136  131   130 #>  [6150,]  121  124  126  135  134  138  137  135  130   129 #>  [6151,]  120  123  127  136  135  139  138  136  131   130 #>  [6152,]  120  123  127  136  135  139  138  136  131   130 #>  [6153,]  121  124  126  135  134  138  137  135  130   129 #>  [6154,]  120  123  127  136  135  139  138  136  131   130 #>  [6155,]  120  123  127  136  135  139  138  136  131   130 #>  [6156,]  121  124  126  135  134  138  137  135  130   129 #>  [6157,]  121  124  126  135  134  138  137  135  130   129 #>  [6158,]  120  123  128  136  135  139  138  136  131   130 #>  [6159,]  120  123  128  136  135  139  138  136  131   130 #>  [6160,]  121  124  126  135  134  138  137  135  130   129 #>  [6161,]  121  124  126  135  134  138  137  135  130   129 #>  [6162,]  120  123  127  136  135  139  138  136  131   130 #>  [6163,]  121  124  126  135  134  138  137  135  130   129 #>  [6164,]  121  124  126  135  134  138  137  135  130   129 #>  [6165,]  121  124  126  135  134  138  137  135  130   129 #>  [6166,]  120  123  128  136  135  139  138  136  131   130 #>  [6167,]  120  123  127  136  135  139  138  136  131   130 #>  [6168,]  120  123  127  136  135  139  138  136  131   130 #>  [6169,]  120  123  127  136  135  139  138  136  131   130 #>  [6170,]  121  124  126  135  134  138  137  135  130   129 #>  [6171,]  121  124  126  135  134  138  137  135  130   129 #>  [6172,]  121  124  126  135  134  138  137  135  130   129 #>  [6173,]  121  124  126  135  134  138  137  135  130   129 #>  [6174,]  120  123  127  136  135  139  138  136  131   130 #>  [6175,]  121  124  126  135  134  138  137  135  130   129 #>  [6176,]  121  124  126  135  134  138  137  135  130   129 #>  [6177,]  121  124  126  135  134  138  137  135  130   129 #>  [6178,]  121  124  126  135  134  138  137  135  130   129 #>  [6179,]  120  123  128  136  135  139  138  136  131   130 #>  [6180,]  120  123  127  136  135  139  138  136  131   130 #>  [6181,]  120  123  127  136  135  139  138  136  131   130 #>  [6182,]  120  123  127  136  135  139  138  136  131   130 #>  [6183,]  120  123  127  136  135  139  138  136  131   130 #>  [6184,]  121  124  126  135  134  138  137  135  130   129 #>  [6185,]  120  123  127  136  135  139  138  136  131   130 #>  [6186,]  121  124  126  135  134  138  137  135  130   129 #>  [6187,]  120  123  128  136  135  139  138  136  131   130 #>  [6188,]  120  123  127  136  135  139  138  136  131   130 #>  [6189,]  120  123  127  136  135  139  138  136  131   130 #>  [6190,]  120  123  127  136  135  139  138  136  131   130 #>  [6191,]  120  123  128  136  135  139  138  136  131   130 #>  [6192,]  120  123  127  136  135  139  138  136  131   130 #>  [6193,]  121  124  126  135  134  138  137  135  130   129 #>  [6194,]  121  124  126  135  134  138  137  135  130   129 #>  [6195,]  120  123  128  136  135  139  138  136  131   130 #>  [6196,]  120  123  127  136  135  139  138  136  131   130 #>  [6197,]  121  124  126  135  134  138  137  135  130   129 #>  [6198,]  121  124  126  135  134  138  137  135  130   129 #>  [6199,]  120  123  127  136  135  139  138  136  131   130 #>  [6200,]  121  124  126  135  134  138  137  135  130   129 #>  [6201,]  123  126  130  138  137  141  139  138  133   132 #>  [6202,]  122  125  129  137  136  140  139  138  133   132 #>  [6203,]  122  125  129  137  136  140  139  138  133   132 #>  [6204,]  122  125  129  137  136  140  139  138  133   132 #>  [6205,]  123  126  130  138  137  141  139  138  133   132 #>  [6206,]  122  125  129  137  136  140  139  138  133   132 #>  [6207,]  122  125  129  137  136  140  139  138  133   132 #>  [6208,]  122  125  129  137  136  140  139  138  133   132 #>  [6209,]  122  125  129  137  136  140  139  138  133   132 #>  [6210,]  122  125  129  137  136  140  139  137  132   131 #>  [6211,]  123  126  130  138  137  141  139  137  132   131 #>  [6212,]  122  125  129  137  136  140  139  138  133   132 #>  [6213,]  122  125  129  137  136  140  139  138  133   132 #>  [6214,]  123  126  130  138  137  141  139  137  132   131 #>  [6215,]  123  126  130  138  137  141  139  138  133   132 #>  [6216,]  122  125  129  137  136  140  139  138  133   132 #>  [6217,]  123  126  130  138  137  141  139  138  133   132 #>  [6218,]  123  126  130  138  137  141  139  138  133   132 #>  [6219,]  122  125  129  137  136  140  139  138  133   132 #>  [6220,]  122  125  129  137  136  140  139  138  133   132 #>  [6221,]  122  125  129  137  136  140  139  138  133   132 #>  [6222,]  123  126  130  138  137  141  139  138  133   132 #>  [6223,]  122  125  129  137  136  140  139  138  133   132 #>  [6224,]  122  125  129  137  136  140  139  138  133   132 #>  [6225,]  122  125  129  137  136  140  139  138  133   132 #>  [6226,]  123  126  130  138  137  141  139  138  133   132 #>  [6227,]  123  126  130  138  137  141  139  138  133   132 #>  [6228,]  122  125  129  137  136  140  139  138  133   132 #>  [6229,]  122  125  129  137  136  140  139  138  133   132 #>  [6230,]  122  125  129  137  136  140  139  138  133   132 #>  [6231,]  123  126  130  138  137  141  139  138  133   132 #>  [6232,]  123  126  130  138  137  141  139  138  133   132 #>  [6233,]  122  125  129  137  136  140  139  138  133   132 #>  [6234,]  122  125  129  137  136  140  139  138  133   132 #>  [6235,]  122  125  129  137  136  140  139  138  133   132 #>  [6236,]  122  125  129  137  136  140  139  138  133   132 #>  [6237,]  122  125  129  137  136  140  139  138  133   132 #>  [6238,]  122  125  129  137  136  140  139  138  133   132 #>  [6239,]  122  125  129  137  136  140  139  138  133   132 #>  [6240,]  122  125  129  137  136  140  139  138  133   132 #>  [6241,]  122  125  129  137  136  140  139  138  133   132 #>  [6242,]  122  125  129  137  136  140  139  138  133   132 #>  [6243,]  123  126  130  138  137  141  139  138  133   132 #>  [6244,]  122  125  129  137  136  140  139  138  133   132 #>  [6245,]  122  125  129  137  136  140  139  138  133   132 #>  [6246,]  122  125  129  137  136  140  139  138  133   132 #>  [6247,]  123  126  130  138  137  141  139  138  133   132 #>  [6248,]  122  125  129  137  136  140  139  137  132   131 #>  [6249,]  122  125  129  137  136  140  139  138  133   132 #>  [6250,]  122  125  129  137  136  140  139  138  133   132 #>  [6251,]  122  125  129  137  136  140  139  138  133   132 #>  [6252,]  122  125  129  137  136  140  139  138  133   132 #>  [6253,]  122  125  129  137  136  140  139  138  133   132 #>  [6254,]  122  125  129  137  136  140  139  138  133   132 #>  [6255,]  122  125  129  137  136  140  139  138  133   132 #>  [6256,]  122  125  129  137  136  140  139  138  133   132 #>  [6257,]  122  125  129  137  136  140  139  138  133   132 #>  [6258,]  123  126  130  138  137  141  139  138  133   132 #>  [6259,]  123  126  130  138  137  141  139  138  133   132 #>  [6260,]  122  125  129  137  136  140  139  138  133   132 #>  [6261,]  123  126  130  138  137  141  139  138  133   132 #>  [6262,]  122  125  129  137  136  140  139  138  133   132 #>  [6263,]  122  125  129  137  136  140  139  138  133   132 #>  [6264,]  122  125  129  137  136  140  139  138  133   132 #>  [6265,]  122  125  129  137  136  140  139  138  133   132 #>  [6266,]  123  126  130  138  137  141  139  138  133   132 #>  [6267,]  122  125  129  137  136  140  139  138  133   132 #>  [6268,]  122  125  129  137  136  140  139  138  133   132 #>  [6269,]  122  125  129  137  136  140  139  138  133   132 #>  [6270,]  123  126  130  138  137  141  139  137  132   131 #>  [6271,]  123  126  130  138  137  141  139  138  133   132 #>  [6272,]  122  125  129  137  136  140  139  138  133   132 #>  [6273,]  122  125  129  137  136  140  139  138  133   132 #>  [6274,]  122  125  129  137  136  140  139  138  133   132 #>  [6275,]  123  126  130  138  137  141  139  138  133   132 #>  [6276,]  122  125  129  137  136  140  139  138  133   132 #>  [6277,]  123  126  130  138  137  141  139  138  133   132 #>  [6278,]  122  125  129  137  136  140  139  138  133   132 #>  [6279,]  123  126  130  138  137  141  139  138  133   132 #>  [6280,]  122  125  129  137  136  140  139  138  133   132 #>  [6281,]  122  125  129  137  136  140  139  138  133   132 #>  [6282,]  122  125  129  137  136  140  139  138  133   132 #>  [6283,]  122  125  129  137  136  140  139  138  133   132 #>  [6284,]  122  125  129  137  136  140  139  138  133   132 #>  [6285,]  122  125  129  137  136  140  139  138  133   132 #>  [6286,]  122  125  129  137  136  140  139  138  133   132 #>  [6287,]  123  126  130  138  137  141  139  138  133   132 #>  [6288,]  122  125  129  137  136  140  139  138  133   132 #>  [6289,]  122  125  129  137  136  140  139  138  133   132 #>  [6290,]  122  125  129  137  136  140  139  138  133   132 #>  [6291,]  123  126  130  138  137  141  139  138  133   132 #>  [6292,]  122  125  129  137  136  140  139  138  133   132 #>  [6293,]  122  125  129  137  136  140  139  138  133   132 #>  [6294,]  122  125  129  137  136  140  139  138  133   132 #>  [6295,]  123  126  130  138  137  141  139  138  133   132 #>  [6296,]  122  125  129  137  136  140  139  138  133   132 #>  [6297,]  122  125  129  137  136  140  139  138  133   132 #>  [6298,]  122  125  129  137  136  140  139  138  133   132 #>  [6299,]  122  125  129  137  136  140  139  138  133   132 #>  [6300,]  123  126  130  138  137  141  139  138  133   132 #>  [6301,]  125  128  131  140  140  144  142  141  136   135 #>  [6302,]  124  127  131  139  138  142  140  139  134   133 #>  [6303,]  124  127  131  139  138  142  140  139  134   133 #>  [6304,]  125  128  131  140  139  143  141  140  135   134 #>  [6305,]  124  127  131  140  140  144  142  141  136   135 #>  [6306,]  124  127  131  140  140  144  142  141  136   135 #>  [6307,]  125  128  131  139  138  142  140  139  134   133 #>  [6308,]  125  128  131  140  139  143  141  140  135   134 #>  [6309,]  124  127  131  140  139  143  141  140  135   134 #>  [6310,]  125  128  131  140  139  143  141  140  135   134 #>  [6311,]  124  127  131  140  140  144  142  141  136   135 #>  [6312,]  124  127  131  140  140  144  142  141  136   135 #>  [6313,]  125  128  131  139  138  142  140  139  134   133 #>  [6314,]  124  127  131  140  140  144  142  141  136   135 #>  [6315,]  125  128  131  140  140  144  142  141  136   135 #>  [6316,]  125  128  131  139  138  142  140  139  134   133 #>  [6317,]  125  128  131  140  140  144  142  141  136   135 #>  [6318,]  125  128  131  139  138  142  140  139  134   133 #>  [6319,]  124  127  131  139  138  142  140  139  134   133 #>  [6320,]  124  127  131  140  140  144  142  141  136   135 #>  [6321,]  125  128  131  139  138  142  140  139  134   133 #>  [6322,]  124  127  131  139  138  142  140  139  134   133 #>  [6323,]  125  128  131  139  138  142  140  139  134   133 #>  [6324,]  124  127  131  139  138  142  140  139  134   133 #>  [6325,]  125  128  131  140  140  144  142  141  136   135 #>  [6326,]  124  127  131  140  140  144  142  141  136   135 #>  [6327,]  125  128  131  140  140  144  142  141  136   135 #>  [6328,]  125  128  131  140  140  144  142  141  136   135 #>  [6329,]  124  127  131  140  140  144  142  141  136   135 #>  [6330,]  124  127  131  139  138  142  140  139  134   133 #>  [6331,]  124  127  131  139  138  142  140  139  134   133 #>  [6332,]  124  127  131  140  140  144  142  141  136   135 #>  [6333,]  124  127  131  140  140  144  142  141  136   135 #>  [6334,]  124  127  131  139  138  142  140  139  134   133 #>  [6335,]  124  127  131  139  138  142  140  139  134   133 #>  [6336,]  124  127  131  139  138  142  140  139  134   133 #>  [6337,]  124  127  131  139  138  142  140  139  134   133 #>  [6338,]  124  127  131  140  140  144  142  141  136   135 #>  [6339,]  125  128  131  139  138  142  140  139  134   133 #>  [6340,]  124  127  131  139  138  142  140  139  134   133 #>  [6341,]  124  127  131  140  140  144  142  141  136   135 #>  [6342,]  124  127  131  140  140  144  142  141  136   135 #>  [6343,]  125  128  131  140  139  143  141  140  135   134 #>  [6344,]  124  127  131  139  138  142  140  139  134   133 #>  [6345,]  125  128  131  140  140  144  142  141  136   135 #>  [6346,]  125  128  131  140  140  144  142  141  136   135 #>  [6347,]  125  128  131  139  138  142  140  139  134   133 #>  [6348,]  124  127  131  140  140  144  142  141  136   135 #>  [6349,]  124  127  131  139  138  142  140  139  134   133 #>  [6350,]  124  127  131  140  140  144  142  141  136   135 #>  [6351,]  124  127  131  140  139  143  141  140  135   134 #>  [6352,]  124  127  131  140  140  144  142  141  136   135 #>  [6353,]  125  128  131  140  140  144  142  141  136   135 #>  [6354,]  124  127  131  139  138  142  140  139  134   133 #>  [6355,]  124  127  131  140  140  144  142  141  136   135 #>  [6356,]  125  128  131  140  140  144  142  141  136   135 #>  [6357,]  124  127  131  140  140  144  142  141  136   135 #>  [6358,]  124  127  131  140  140  144  142  141  136   135 #>  [6359,]  124  127  131  139  138  142  140  139  134   133 #>  [6360,]  124  127  131  140  139  143  141  140  135   134 #>  [6361,]  125  128  131  140  140  144  142  141  136   135 #>  [6362,]  124  127  131  139  138  142  140  139  134   133 #>  [6363,]  124  127  131  140  140  144  142  141  136   135 #>  [6364,]  125  128  131  140  140  144  142  141  136   135 #>  [6365,]  124  127  131  140  140  144  142  141  136   135 #>  [6366,]  124  127  131  140  140  144  142  141  136   135 #>  [6367,]  124  127  131  140  140  144  142  141  136   135 #>  [6368,]  124  127  131  140  140  144  142  141  136   135 #>  [6369,]  124  127  131  140  140  144  142  141  136   135 #>  [6370,]  125  128  131  139  138  142  140  139  134   133 #>  [6371,]  125  128  131  140  140  144  142  141  136   135 #>  [6372,]  125  128  131  140  140  144  142  141  136   135 #>  [6373,]  125  128  131  140  140  144  142  141  136   135 #>  [6374,]  125  128  131  140  140  144  142  141  136   135 #>  [6375,]  125  128  131  140  140  144  142  141  136   135 #>  [6376,]  125  128  131  140  140  144  142  141  136   135 #>  [6377,]  125  128  131  139  138  142  140  139  134   133 #>  [6378,]  124  127  131  140  140  144  142  141  136   135 #>  [6379,]  124  127  131  139  138  142  140  139  134   133 #>  [6380,]  124  127  131  139  138  142  140  139  134   133 #>  [6381,]  124  127  131  140  140  144  142  141  136   135 #>  [6382,]  125  128  131  140  140  144  142  141  136   135 #>  [6383,]  124  127  131  139  138  142  140  139  134   133 #>  [6384,]  125  128  131  140  140  144  142  141  136   135 #>  [6385,]  124  127  131  140  139  143  141  140  135   134 #>  [6386,]  124  127  131  140  140  144  142  141  136   135 #>  [6387,]  124  127  131  140  140  144  142  141  136   135 #>  [6388,]  125  128  131  140  140  144  142  141  136   135 #>  [6389,]  124  127  131  140  140  144  142  141  136   135 #>  [6390,]  124  127  131  140  140  144  142  141  136   135 #>  [6391,]  124  127  131  140  139  143  141  140  135   134 #>  [6392,]  124  127  131  140  140  144  142  141  136   135 #>  [6393,]  124  127  131  139  138  142  140  139  134   133 #>  [6394,]  125  128  131  140  140  144  142  141  136   135 #>  [6395,]  125  128  131  139  138  142  140  139  134   133 #>  [6396,]  124  127  131  140  140  144  142  141  136   135 #>  [6397,]  124  127  131  140  140  144  142  141  136   135 #>  [6398,]  124  127  131  139  138  142  140  139  134   133 #>  [6399,]  124  127  131  140  140  144  142  141  136   135 #>  [6400,]  125  128  131  139  138  142  140  139  134   133 #>  [6401,]  127  130  133  142  142  146  144  143  138   137 #>  [6402,]  126  129  132  141  141  145  143  142  137   136 #>  [6403,]  126  129  132  141  141  145  143  142  137   136 #>  [6404,]  127  130  133  142  142  146  144  143  138   137 #>  [6405,]  127  130  133  142  142  146  144  143  138   137 #>  [6406,]  126  129  132  141  141  145  143  142  137   136 #>  [6407,]  126  129  132  141  141  145  143  142  137   136 #>  [6408,]  126  129  132  141  141  145  143  142  137   136 #>  [6409,]  126  129  132  141  141  145  143  142  137   136 #>  [6410,]  127  130  133  142  142  146  144  143  138   137 #>  [6411,]  127  130  133  142  142  146  144  143  138   137 #>  [6412,]  127  130  133  142  142  146  144  143  138   137 #>  [6413,]  127  130  133  142  142  146  144  143  138   137 #>  [6414,]  127  130  133  142  142  146  144  143  138   137 #>  [6415,]  127  130  133  142  142  146  144  143  138   137 #>  [6416,]  127  130  133  142  142  146  144  143  138   137 #>  [6417,]  127  130  133  142  142  146  144  143  138   137 #>  [6418,]  127  130  133  142  142  146  144  143  138   137 #>  [6419,]  127  130  133  142  142  146  144  143  138   137 #>  [6420,]  126  129  132  141  141  145  143  142  137   136 #>  [6421,]  126  129  132  141  141  145  143  142  137   136 #>  [6422,]  127  130  133  142  142  146  144  143  138   137 #>  [6423,]  126  129  132  141  141  145  143  142  137   136 #>  [6424,]  127  130  133  142  142  146  144  143  138   137 #>  [6425,]  126  129  132  141  141  145  143  142  137   136 #>  [6426,]  127  130  133  142  142  146  144  143  138   137 #>  [6427,]  127  130  133  142  142  146  144  143  138   137 #>  [6428,]  127  130  133  142  142  146  144  143  138   137 #>  [6429,]  126  129  132  141  141  145  143  142  137   136 #>  [6430,]  127  130  133  142  142  146  144  143  138   137 #>  [6431,]  127  130  133  142  142  146  144  143  138   137 #>  [6432,]  127  130  133  142  142  146  144  143  138   137 #>  [6433,]  127  130  133  142  142  146  144  143  138   137 #>  [6434,]  126  129  132  141  141  145  143  142  137   136 #>  [6435,]  126  129  132  141  141  145  143  142  137   136 #>  [6436,]  126  129  132  141  141  145  143  142  137   136 #>  [6437,]  126  129  132  141  141  145  143  142  137   136 #>  [6438,]  127  130  133  142  142  146  144  143  138   137 #>  [6439,]  127  130  133  142  142  146  144  143  138   137 #>  [6440,]  126  129  132  141  141  145  143  142  137   136 #>  [6441,]  126  129  132  141  141  145  143  142  137   136 #>  [6442,]  126  129  132  141  141  145  143  142  137   136 #>  [6443,]  127  130  133  142  142  146  144  143  138   137 #>  [6444,]  126  129  132  141  141  145  143  142  137   136 #>  [6445,]  126  129  132  141  141  145  143  142  137   136 #>  [6446,]  127  130  133  142  142  146  144  143  138   137 #>  [6447,]  127  130  133  142  142  146  144  143  138   137 #>  [6448,]  127  130  133  142  142  146  144  143  138   137 #>  [6449,]  126  129  132  141  141  145  143  142  137   136 #>  [6450,]  126  129  132  141  141  145  143  142  137   136 #>  [6451,]  127  130  133  142  142  146  144  143  138   137 #>  [6452,]  127  130  133  142  142  146  144  143  138   137 #>  [6453,]  126  129  132  141  141  145  143  142  137   136 #>  [6454,]  126  129  132  141  141  145  143  142  137   136 #>  [6455,]  126  129  132  141  141  145  143  142  137   136 #>  [6456,]  126  129  132  141  141  145  143  142  137   136 #>  [6457,]  126  129  132  141  141  145  143  142  137   136 #>  [6458,]  127  130  133  142  142  146  144  143  138   137 #>  [6459,]  127  130  133  142  142  146  144  143  138   137 #>  [6460,]  126  129  132  141  141  145  143  142  137   136 #>  [6461,]  127  130  133  142  142  146  144  143  138   137 #>  [6462,]  126  129  132  141  141  145  143  142  137   136 #>  [6463,]  127  130  133  142  142  146  144  143  138   137 #>  [6464,]  126  129  132  141  141  145  143  142  137   136 #>  [6465,]  126  129  132  141  141  145  143  142  137   136 #>  [6466,]  127  130  133  142  142  146  144  143  138   137 #>  [6467,]  126  129  132  141  141  145  143  142  137   136 #>  [6468,]  127  130  133  142  142  146  144  143  138   137 #>  [6469,]  127  130  133  142  142  146  144  143  138   137 #>  [6470,]  127  130  133  142  142  146  144  143  138   137 #>  [6471,]  127  130  133  142  142  146  144  143  138   137 #>  [6472,]  126  129  132  141  141  145  143  142  137   136 #>  [6473,]  126  129  132  141  141  145  143  142  137   136 #>  [6474,]  126  129  132  141  141  145  143  142  137   136 #>  [6475,]  127  130  133  142  142  146  144  143  138   137 #>  [6476,]  126  129  132  141  141  145  143  142  137   136 #>  [6477,]  127  130  133  142  142  146  144  143  138   137 #>  [6478,]  127  130  133  142  142  146  144  143  138   137 #>  [6479,]  127  130  133  142  142  146  144  143  138   137 #>  [6480,]  126  129  132  141  141  145  143  142  137   136 #>  [6481,]  126  129  132  141  141  145  143  142  137   136 #>  [6482,]  126  129  132  141  141  145  143  142  137   136 #>  [6483,]  127  130  133  142  142  146  144  143  138   137 #>  [6484,]  126  129  132  141  141  145  143  142  137   136 #>  [6485,]  126  129  132  141  141  145  143  142  137   136 #>  [6486,]  126  129  132  141  141  145  143  142  137   136 #>  [6487,]  127  130  133  142  142  146  144  143  138   137 #>  [6488,]  126  129  132  141  141  145  143  142  137   136 #>  [6489,]  126  129  132  141  141  145  143  142  137   136 #>  [6490,]  127  130  133  142  142  146  144  143  138   137 #>  [6491,]  127  130  133  142  142  146  144  143  138   137 #>  [6492,]  127  130  133  142  142  146  144  143  138   137 #>  [6493,]  127  130  133  142  142  146  144  143  138   137 #>  [6494,]  126  129  132  141  141  145  143  142  137   136 #>  [6495,]  127  130  133  142  142  146  144  143  138   137 #>  [6496,]  127  130  133  142  142  146  144  143  138   137 #>  [6497,]  126  129  132  141  141  145  143  142  137   136 #>  [6498,]  126  129  132  141  141  145  143  142  137   136 #>  [6499,]  126  129  132  141  141  145  143  142  137   136 #>  [6500,]  127  130  133  142  142  146  144  143  138   137 #>  [6501,]  128  131  134  143  143  147  145  144  139   138 #>  [6502,]  128  131  134  143  143  147  145  144  139   138 #>  [6503,]  129  132  135  143  143  147  145  144  139   138 #>  [6504,]  128  131  134  143  144  148  146  145  140   139 #>  [6505,]  128  131  134  143  143  147  145  144  139   138 #>  [6506,]  129  132  135  143  143  147  145  144  139   138 #>  [6507,]  128  131  134  143  144  148  146  145  140   139 #>  [6508,]  128  131  134  143  143  147  145  144  139   138 #>  [6509,]  128  131  134  143  143  147  145  144  139   138 #>  [6510,]  128  131  134  143  144  148  146  145  140   139 #>  [6511,]  128  131  134  143  143  147  145  144  139   138 #>  [6512,]  129  132  135  143  143  147  145  144  139   138 #>  [6513,]  128  131  134  143  143  147  145  144  139   138 #>  [6514,]  128  131  134  143  143  147  145  144  139   138 #>  [6515,]  128  131  134  143  143  147  145  144  139   138 #>  [6516,]  128  131  134  143  144  148  146  145  140   139 #>  [6517,]  128  131  134  143  143  147  145  144  139   138 #>  [6518,]  128  131  134  143  143  147  145  144  139   138 #>  [6519,]  129  132  135  143  143  147  145  144  139   138 #>  [6520,]  128  131  134  143  144  148  146  145  140   139 #>  [6521,]  128  131  134  143  143  147  145  144  139   138 #>  [6522,]  128  131  134  143  143  147  145  144  139   138 #>  [6523,]  128  131  134  143  143  147  145  144  139   138 #>  [6524,]  128  131  134  143  144  148  146  145  140   139 #>  [6525,]  129  132  135  143  144  148  146  145  140   139 #>  [6526,]  128  131  134  143  143  147  145  144  139   138 #>  [6527,]  128  131  134  143  143  147  145  144  139   138 #>  [6528,]  129  132  135  143  144  148  146  145  140   139 #>  [6529,]  128  131  134  143  143  147  145  144  139   138 #>  [6530,]  128  131  134  143  143  147  145  144  139   138 #>  [6531,]  128  131  134  143  143  147  145  144  139   138 #>  [6532,]  128  131  134  143  143  147  145  144  139   138 #>  [6533,]  129  132  135  143  143  147  145  144  139   138 #>  [6534,]  129  132  135  143  143  147  145  144  139   138 #>  [6535,]  128  131  134  143  143  147  145  144  139   138 #>  [6536,]  128  131  134  143  144  148  146  145  140   139 #>  [6537,]  128  131  134  143  143  147  145  144  139   138 #>  [6538,]  128  131  134  143  143  147  145  144  139   138 #>  [6539,]  128  131  134  143  144  148  146  145  140   139 #>  [6540,]  128  131  134  143  143  147  145  144  139   138 #>  [6541,]  128  131  134  143  143  147  145  144  139   138 #>  [6542,]  128  131  134  143  143  147  145  144  139   138 #>  [6543,]  128  131  134  143  143  147  145  144  139   138 #>  [6544,]  128  131  134  143  143  147  145  144  139   138 #>  [6545,]  128  131  134  143  143  147  145  144  139   138 #>  [6546,]  128  131  134  143  143  147  145  144  139   138 #>  [6547,]  128  131  134  143  143  147  145  144  139   138 #>  [6548,]  128  131  134  143  143  147  145  144  139   138 #>  [6549,]  128  131  134  143  143  147  145  144  139   138 #>  [6550,]  128  131  134  143  144  148  146  145  140   139 #>  [6551,]  128  131  134  143  143  147  145  144  139   138 #>  [6552,]  128  131  134  143  144  148  146  145  140   139 #>  [6553,]  128  131  134  143  143  147  145  144  139   138 #>  [6554,]  128  131  134  143  144  148  146  145  140   139 #>  [6555,]  128  131  134  143  143  147  145  144  139   138 #>  [6556,]  128  131  134  143  143  147  145  144  139   138 #>  [6557,]  128  131  134  143  144  148  146  145  140   139 #>  [6558,]  128  131  134  143  143  147  145  144  139   138 #>  [6559,]  128  131  134  143  143  147  145  144  139   138 #>  [6560,]  129  132  135  143  143  147  145  144  139   138 #>  [6561,]  128  131  134  143  143  147  145  144  139   138 #>  [6562,]  128  131  134  143  143  147  145  144  139   138 #>  [6563,]  128  131  134  143  143  147  145  144  139   138 #>  [6564,]  128  131  134  143  143  147  145  144  139   138 #>  [6565,]  129  132  135  143  143  147  145  144  139   138 #>  [6566,]  128  131  134  143  143  147  145  144  139   138 #>  [6567,]  128  131  134  143  143  147  145  144  139   138 #>  [6568,]  128  131  134  143  143  147  145  144  139   138 #>  [6569,]  128  131  134  143  143  147  145  144  139   138 #>  [6570,]  129  132  135  143  143  147  145  144  139   138 #>  [6571,]  128  131  134  143  143  147  145  144  139   138 #>  [6572,]  128  131  134  143  143  147  145  144  139   138 #>  [6573,]  129  132  135  143  144  148  146  145  140   139 #>  [6574,]  128  131  134  143  143  147  145  144  139   138 #>  [6575,]  128  131  134  143  143  147  145  144  139   138 #>  [6576,]  128  131  134  143  144  148  146  145  140   139 #>  [6577,]  128  131  134  143  143  147  145  144  139   138 #>  [6578,]  128  131  134  143  143  147  145  144  139   138 #>  [6579,]  128  131  134  143  143  147  145  144  139   138 #>  [6580,]  128  131  134  143  143  147  145  144  139   138 #>  [6581,]  128  131  134  143  143  147  145  144  139   138 #>  [6582,]  128  131  134  143  143  147  145  144  139   138 #>  [6583,]  128  131  134  143  143  147  145  144  139   138 #>  [6584,]  128  131  134  143  143  147  145  144  139   138 #>  [6585,]  128  131  134  143  143  147  145  144  139   138 #>  [6586,]  128  131  134  143  144  148  146  145  140   139 #>  [6587,]  128  131  134  143  143  147  145  144  139   138 #>  [6588,]  128  131  134  143  143  147  145  144  139   138 #>  [6589,]  128  131  134  143  143  147  145  144  139   138 #>  [6590,]  128  131  134  143  143  147  145  144  139   138 #>  [6591,]  128  131  134  143  144  148  146  145  140   139 #>  [6592,]  128  131  134  143  143  147  145  144  139   138 #>  [6593,]  129  132  135  143  143  147  145  144  139   138 #>  [6594,]  128  131  134  143  143  147  145  144  139   138 #>  [6595,]  128  131  134  143  143  147  145  144  139   138 #>  [6596,]  128  131  134  143  143  147  145  144  139   138 #>  [6597,]  129  132  135  143  143  147  145  144  139   138 #>  [6598,]  129  132  135  143  143  147  145  144  139   138 #>  [6599,]  128  131  134  143  143  147  145  144  139   138 #>  [6600,]  128  131  134  143  143  147  145  144  139   138 #>  [6601,]  130  133  136  144  145  149  147  146  141   140 #>  [6602,]  131  134  137  145  145  149  147  146  141   140 #>  [6603,]  130  133  136  144  145  149  147  146  141   140 #>  [6604,]  130  133  136  144  145  149  147  146  141   140 #>  [6605,]  131  134  137  145  145  149  147  146  141   140 #>  [6606,]  130  133  136  144  145  149  147  146  141   140 #>  [6607,]  131  134  137  145  145  150  148  147  142   141 #>  [6608,]  130  133  136  144  145  149  147  146  141   140 #>  [6609,]  131  134  137  145  145  149  147  146  141   140 #>  [6610,]  131  134  137  145  145  149  147  146  141   140 #>  [6611,]  130  133  136  144  145  149  147  146  141   140 #>  [6612,]  131  134  137  145  145  149  147  146  141   140 #>  [6613,]  131  134  137  145  145  149  147  146  141   140 #>  [6614,]  130  133  136  144  145  149  147  146  141   140 #>  [6615,]  130  133  136  144  145  149  147  146  141   140 #>  [6616,]  130  133  136  144  145  150  148  147  142   141 #>  [6617,]  131  134  137  145  145  149  147  146  141   140 #>  [6618,]  131  134  137  145  145  149  147  146  141   140 #>  [6619,]  130  133  136  144  145  149  147  146  141   140 #>  [6620,]  131  134  137  145  145  150  148  147  142   141 #>  [6621,]  131  134  137  145  145  149  147  146  141   140 #>  [6622,]  131  134  137  145  145  149  147  146  141   140 #>  [6623,]  131  134  137  145  145  149  147  146  141   140 #>  [6624,]  131  134  137  145  145  150  148  147  142   141 #>  [6625,]  131  134  137  145  145  149  147  146  141   140 #>  [6626,]  130  133  136  144  145  149  147  146  141   140 #>  [6627,]  131  134  137  145  145  149  147  146  141   140 #>  [6628,]  130  133  136  144  145  150  148  147  142   141 #>  [6629,]  131  134  137  145  145  149  147  146  141   140 #>  [6630,]  131  134  137  145  145  149  147  146  141   140 #>  [6631,]  131  134  137  145  145  149  147  146  141   140 #>  [6632,]  131  134  137  145  145  149  147  146  141   140 #>  [6633,]  131  134  137  145  145  149  147  146  141   140 #>  [6634,]  130  133  136  144  145  149  147  146  141   140 #>  [6635,]  130  133  136  144  145  149  147  146  141   140 #>  [6636,]  131  134  137  145  145  149  147  146  141   140 #>  [6637,]  130  133  136  144  145  149  147  146  141   140 #>  [6638,]  130  133  136  144  145  149  147  146  141   140 #>  [6639,]  131  134  137  145  145  149  147  146  141   140 #>  [6640,]  131  134  137  145  145  149  147  146  141   140 #>  [6641,]  131  134  137  145  145  149  147  146  141   140 #>  [6642,]  130  133  136  144  145  149  147  146  141   140 #>  [6643,]  130  133  136  144  145  149  147  146  141   140 #>  [6644,]  131  134  137  145  145  149  147  146  141   140 #>  [6645,]  130  133  136  144  145  149  147  146  141   140 #>  [6646,]  130  133  136  144  145  149  147  146  141   140 #>  [6647,]  131  134  137  145  145  149  147  146  141   140 #>  [6648,]  131  134  137  145  145  149  147  146  141   140 #>  [6649,]  130  133  136  144  145  149  147  146  141   140 #>  [6650,]  131  134  137  145  145  150  148  147  142   141 #>  [6651,]  131  134  137  145  145  149  147  146  141   140 #>  [6652,]  130  133  136  144  145  150  148  147  142   141 #>  [6653,]  131  134  137  145  145  149  147  146  141   140 #>  [6654,]  131  134  137  145  145  149  147  146  141   140 #>  [6655,]  130  133  136  144  145  149  147  146  141   140 #>  [6656,]  130  133  136  144  145  149  147  146  141   140 #>  [6657,]  130  133  136  144  145  149  147  146  141   140 #>  [6658,]  131  134  137  145  145  149  147  146  141   140 #>  [6659,]  130  133  136  144  145  149  147  146  141   140 #>  [6660,]  131  134  137  145  145  149  147  146  141   140 #>  [6661,]  131  134  137  145  145  149  147  146  141   140 #>  [6662,]  130  133  136  144  145  149  147  146  141   140 #>  [6663,]  131  134  137  145  145  149  147  146  141   140 #>  [6664,]  130  133  136  144  145  149  147  146  141   140 #>  [6665,]  130  133  136  144  145  149  147  146  141   140 #>  [6666,]  131  134  137  145  145  149  147  146  141   140 #>  [6667,]  130  133  136  144  145  149  147  146  141   140 #>  [6668,]  130  133  136  144  145  149  147  146  141   140 #>  [6669,]  130  133  136  144  145  149  147  146  141   140 #>  [6670,]  131  134  137  145  145  149  147  146  141   140 #>  [6671,]  131  134  137  145  145  149  147  146  141   140 #>  [6672,]  130  133  136  144  145  149  147  146  141   140 #>  [6673,]  130  133  136  144  145  149  147  146  141   140 #>  [6674,]  131  134  137  145  145  149  147  146  141   140 #>  [6675,]  131  134  137  145  145  149  147  146  141   140 #>  [6676,]  131  134  137  145  145  150  148  147  142   141 #>  [6677,]  130  133  136  144  145  149  147  146  141   140 #>  [6678,]  131  134  137  145  145  149  147  146  141   140 #>  [6679,]  130  133  136  144  145  149  147  146  141   140 #>  [6680,]  131  134  137  145  145  149  147  146  141   140 #>  [6681,]  131  134  137  145  145  149  147  146  141   140 #>  [6682,]  130  133  136  144  145  149  147  146  141   140 #>  [6683,]  131  134  137  145  145  149  147  146  141   140 #>  [6684,]  131  134  137  145  145  149  147  146  141   140 #>  [6685,]  130  133  136  144  145  149  147  146  141   140 #>  [6686,]  131  134  137  145  145  150  148  147  142   141 #>  [6687,]  131  134  137  145  145  149  147  146  141   140 #>  [6688,]  131  134  137  145  145  149  147  146  141   140 #>  [6689,]  130  133  136  144  145  149  147  146  141   140 #>  [6690,]  131  134  137  145  145  149  147  146  141   140 #>  [6691,]  130  133  136  144  145  150  148  147  142   141 #>  [6692,]  131  134  137  145  145  149  147  146  141   140 #>  [6693,]  131  134  137  145  145  149  147  146  141   140 #>  [6694,]  130  133  136  144  145  149  147  146  141   140 #>  [6695,]  131  134  137  145  145  149  147  146  141   140 #>  [6696,]  130  133  136  144  145  149  147  146  141   140 #>  [6697,]  130  133  136  144  145  149  147  146  141   140 #>  [6698,]  130  133  136  144  145  149  147  146  141   140 #>  [6699,]  131  134  137  145  145  149  147  146  141   140 #>  [6700,]  130  133  136  144  145  149  147  146  141   140 #>  [6701,]  133  137  140  148  147  152  150  149  143   143 #>  [6702,]  132  135  138  146  146  151  149  148  143   142 #>  [6703,]  133  136  139  147  147  152  150  149  143   142 #>  [6704,]  133  136  139  147  147  152  150  149  143   142 #>  [6705,]  133  136  139  147  147  152  150  149  143   143 #>  [6706,]  132  135  138  146  146  151  149  148  143   142 #>  [6707,]  133  136  139  147  147  152  150  149  143   142 #>  [6708,]  133  136  139  147  147  152  150  149  143   142 #>  [6709,]  133  136  139  147  147  152  150  149  143   142 #>  [6710,]  133  136  139  147  147  152  150  149  143   142 #>  [6711,]  132  135  138  146  146  151  149  148  143   142 #>  [6712,]  132  135  138  146  146  151  149  148  143   142 #>  [6713,]  133  137  140  148  147  152  150  149  143   142 #>  [6714,]  133  137  140  148  147  152  150  149  143   143 #>  [6715,]  132  135  138  146  146  151  149  148  143   143 #>  [6716,]  133  137  140  148  147  152  150  149  143   142 #>  [6717,]  132  135  138  146  146  151  149  148  143   142 #>  [6718,]  133  136  139  147  147  152  150  149  143   143 #>  [6719,]  133  136  139  147  147  152  150  149  143   142 #>  [6720,]  133  136  139  147  147  152  150  149  143   142 #>  [6721,]  133  137  140  148  147  152  150  149  143   142 #>  [6722,]  133  137  140  148  147  152  150  149  143   142 #>  [6723,]  132  135  138  146  146  151  149  148  143   142 #>  [6724,]  133  136  139  147  147  152  150  149  143   142 #>  [6725,]  133  136  139  147  147  152  150  149  143   142 #>  [6726,]  133  137  140  148  147  152  150  149  143   142 #>  [6727,]  133  137  140  148  147  152  150  149  143   143 #>  [6728,]  133  136  139  147  147  152  150  149  143   142 #>  [6729,]  132  135  138  146  146  151  149  148  143   142 #>  [6730,]  132  135  138  146  146  151  149  148  143   142 #>  [6731,]  132  135  138  146  146  151  149  148  143   142 #>  [6732,]  133  136  139  147  147  152  150  149  143   143 #>  [6733,]  133  137  140  148  147  152  150  149  143   142 #>  [6734,]  132  135  138  146  146  151  149  148  143   142 #>  [6735,]  132  135  138  146  146  151  149  148  143   142 #>  [6736,]  133  136  139  147  147  152  150  149  143   142 #>  [6737,]  132  135  138  146  146  151  149  148  143   142 #>  [6738,]  133  136  139  147  147  152  150  149  143   142 #>  [6739,]  133  136  139  147  147  152  150  149  143   142 #>  [6740,]  133  136  139  147  147  152  150  149  143   142 #>  [6741,]  133  137  140  148  147  152  150  149  143   142 #>  [6742,]  132  135  138  146  146  151  149  148  143   142 #>  [6743,]  132  135  138  146  146  151  149  148  143   142 #>  [6744,]  132  135  138  146  146  151  149  148  143   142 #>  [6745,]  133  136  139  147  147  152  150  149  143   142 #>  [6746,]  133  136  139  147  147  152  150  149  143   142 #>  [6747,]  132  135  138  146  146  151  149  148  143   142 #>  [6748,]  132  135  138  146  146  151  149  148  143   142 #>  [6749,]  133  136  139  147  147  152  150  149  143   142 #>  [6750,]  133  137  140  148  147  152  150  149  143   142 #>  [6751,]  133  136  139  147  147  152  150  149  143   142 #>  [6752,]  133  137  140  148  147  152  150  149  143   142 #>  [6753,]  133  136  139  147  147  152  150  149  143   142 #>  [6754,]  133  136  139  147  147  152  150  149  143   142 #>  [6755,]  133  136  139  147  147  152  150  149  143   142 #>  [6756,]  132  135  138  146  146  151  149  148  143   142 #>  [6757,]  133  136  139  147  147  152  150  149  143   142 #>  [6758,]  133  137  140  148  147  152  150  149  143   142 #>  [6759,]  133  137  140  148  147  152  150  149  143   142 #>  [6760,]  132  135  138  146  146  151  149  148  143   142 #>  [6761,]  132  135  138  146  146  151  149  148  143   142 #>  [6762,]  133  136  139  147  147  152  150  149  143   142 #>  [6763,]  132  135  138  146  146  151  149  148  143   142 #>  [6764,]  132  135  138  146  146  151  149  148  143   142 #>  [6765,]  132  135  138  146  146  151  149  148  143   142 #>  [6766,]  132  135  138  146  146  151  149  148  143   142 #>  [6767,]  133  136  139  147  147  152  150  149  143   142 #>  [6768,]  133  137  140  148  147  152  150  149  143   142 #>  [6769,]  133  136  139  147  147  152  150  149  143   142 #>  [6770,]  132  135  138  146  146  151  149  148  143   142 #>  [6771,]  133  137  140  148  147  152  150  149  143   143 #>  [6772,]  133  136  139  147  147  152  150  149  143   142 #>  [6773,]  133  137  140  148  147  152  150  149  143   142 #>  [6774,]  133  136  139  147  147  152  150  149  143   142 #>  [6775,]  132  135  138  146  146  151  149  148  143   143 #>  [6776,]  133  137  140  148  147  152  150  149  143   142 #>  [6777,]  133  137  140  148  147  152  150  149  143   142 #>  [6778,]  132  135  138  146  146  151  149  148  143   142 #>  [6779,]  132  135  138  146  146  151  149  148  143   142 #>  [6780,]  133  136  139  147  147  152  150  149  143   142 #>  [6781,]  132  135  138  146  146  151  149  148  143   142 #>  [6782,]  133  136  139  147  147  152  150  149  143   142 #>  [6783,]  133  137  140  148  147  152  150  149  143   142 #>  [6784,]  133  137  140  148  147  152  150  149  143   142 #>  [6785,]  133  136  139  147  147  152  150  149  143   142 #>  [6786,]  133  137  140  148  147  152  150  149  143   142 #>  [6787,]  133  136  139  147  147  152  150  149  143   142 #>  [6788,]  133  136  139  147  147  152  150  149  143   142 #>  [6789,]  133  136  139  147  147  152  150  149  143   142 #>  [6790,]  133  137  140  148  147  152  150  149  143   142 #>  [6791,]  133  136  139  147  147  152  150  149  143   143 #>  [6792,]  132  135  138  146  146  151  149  148  143   142 #>  [6793,]  133  137  140  148  147  152  150  149  143   142 #>  [6794,]  132  135  138  146  146  151  149  148  143   142 #>  [6795,]  132  135  138  146  146  151  149  148  143   143 #>  [6796,]  133  137  140  148  147  152  150  149  143   142 #>  [6797,]  133  136  139  147  147  152  150  149  143   142 #>  [6798,]  133  136  139  147  147  152  150  149  143   142 #>  [6799,]  133  137  140  148  147  152  150  149  143   142 #>  [6800,]  132  135  138  146  146  151  149  148  143   143 #>  [6801,]  134  139  142  150  149  154  152  151  145   145 #>  [6802,]  134  138  141  149  148  153  151  150  144   144 #>  [6803,]  134  139  142  150  149  154  152  151  145   145 #>  [6804,]  134  139  142  150  149  154  153  151  145   145 #>  [6805,]  134  139  142  150  149  154  152  151  145   145 #>  [6806,]  134  138  141  149  148  153  151  150  144   144 #>  [6807,]  134  139  142  150  149  154  152  151  145   145 #>  [6808,]  134  139  142  150  149  154  152  151  145   145 #>  [6809,]  134  139  142  150  149  154  152  151  145   145 #>  [6810,]  134  139  142  150  149  154  152  151  145   145 #>  [6811,]  134  138  141  149  148  153  151  150  144   144 #>  [6812,]  134  138  141  149  148  153  151  150  144   144 #>  [6813,]  134  139  142  150  149  154  152  151  145   145 #>  [6814,]  134  139  142  150  149  154  153  151  145   145 #>  [6815,]  134  138  141  149  148  153  151  150  144   144 #>  [6816,]  134  139  142  150  149  154  152  151  145   145 #>  [6817,]  134  138  141  149  148  153  151  150  144   144 #>  [6818,]  134  139  142  150  149  154  152  151  145   145 #>  [6819,]  134  138  141  149  148  153  151  150  144   144 #>  [6820,]  134  139  142  150  149  154  152  151  145   145 #>  [6821,]  134  139  142  150  149  154  152  151  145   145 #>  [6822,]  134  139  142  150  149  154  152  151  145   145 #>  [6823,]  134  138  141  149  148  153  151  150  144   144 #>  [6824,]  134  139  142  150  149  154  152  151  145   145 #>  [6825,]  134  139  142  150  149  154  152  151  145   145 #>  [6826,]  134  138  141  149  148  153  151  150  144   144 #>  [6827,]  134  139  142  150  149  154  153  151  145   145 #>  [6828,]  134  139  142  150  149  154  152  151  145   145 #>  [6829,]  134  138  141  149  148  153  151  150  144   144 #>  [6830,]  134  138  141  149  148  153  151  150  144   144 #>  [6831,]  134  138  141  149  148  153  151  150  144   144 #>  [6832,]  134  139  142  150  149  154  152  151  145   145 #>  [6833,]  134  139  142  150  149  154  152  151  145   145 #>  [6834,]  134  138  141  149  148  153  151  150  144   144 #>  [6835,]  134  138  141  149  148  153  151  150  144   144 #>  [6836,]  134  139  142  150  149  154  152  151  145   145 #>  [6837,]  134  138  141  149  148  153  151  150  144   144 #>  [6838,]  134  139  142  150  149  154  153  151  145   145 #>  [6839,]  134  139  142  150  149  154  152  151  145   145 #>  [6840,]  134  139  142  150  149  154  152  151  145   145 #>  [6841,]  134  139  142  150  149  154  153  151  145   145 #>  [6842,]  134  138  141  149  148  153  151  150  144   144 #>  [6843,]  134  138  141  149  148  153  151  150  144   144 #>  [6844,]  134  138  141  149  148  153  151  150  144   144 #>  [6845,]  134  139  142  150  149  154  152  151  145   145 #>  [6846,]  134  139  142  150  149  154  152  151  145   145 #>  [6847,]  134  138  141  149  148  153  151  150  144   144 #>  [6848,]  134  138  141  149  148  153  151  150  144   144 #>  [6849,]  134  139  142  150  149  154  152  151  145   145 #>  [6850,]  134  139  142  150  149  154  152  151  145   145 #>  [6851,]  134  139  142  150  149  154  152  151  145   145 #>  [6852,]  134  139  142  150  149  154  152  151  145   145 #>  [6853,]  134  139  142  150  149  154  152  151  145   145 #>  [6854,]  134  139  142  150  149  154  152  151  145   145 #>  [6855,]  134  139  142  150  149  154  152  151  145   145 #>  [6856,]  134  138  141  149  148  153  151  150  144   144 #>  [6857,]  134  139  142  150  149  154  152  151  145   145 #>  [6858,]  134  139  142  150  149  154  152  151  145   145 #>  [6859,]  134  139  142  150  149  154  152  151  145   145 #>  [6860,]  134  138  141  149  148  153  151  150  144   144 #>  [6861,]  134  138  141  149  148  153  151  150  144   144 #>  [6862,]  134  139  142  150  149  154  152  151  145   145 #>  [6863,]  134  138  141  149  148  153  151  150  144   144 #>  [6864,]  134  138  141  149  148  153  151  150  144   144 #>  [6865,]  134  138  141  149  148  153  151  150  144   144 #>  [6866,]  134  138  141  149  148  153  151  150  144   144 #>  [6867,]  134  139  142  150  149  154  152  151  145   145 #>  [6868,]  134  138  141  149  148  153  151  150  144   144 #>  [6869,]  134  139  142  150  149  154  153  151  145   145 #>  [6870,]  134  138  141  149  148  153  151  150  144   144 #>  [6871,]  134  139  142  150  149  154  152  151  145   145 #>  [6872,]  134  139  142  150  149  154  152  151  145   145 #>  [6873,]  134  139  142  150  149  154  152  151  145   145 #>  [6874,]  134  139  142  150  149  154  153  151  145   145 #>  [6875,]  134  138  141  149  148  153  151  150  144   144 #>  [6876,]  134  139  142  150  149  154  152  151  145   145 #>  [6877,]  134  139  142  150  149  154  152  151  145   145 #>  [6878,]  134  138  141  149  148  153  151  150  144   144 #>  [6879,]  134  138  141  149  148  153  151  150  144   144 #>  [6880,]  134  139  142  150  149  154  152  151  145   145 #>  [6881,]  134  138  141  149  148  153  151  150  144   144 #>  [6882,]  134  139  142  150  149  154  153  151  145   145 #>  [6883,]  134  139  142  150  149  154  152  151  145   145 #>  [6884,]  134  139  142  150  149  154  152  151  145   145 #>  [6885,]  134  139  142  150  149  154  152  151  145   145 #>  [6886,]  134  139  142  150  149  154  152  151  145   145 #>  [6887,]  134  139  142  150  149  154  152  151  145   145 #>  [6888,]  134  139  142  150  149  154  152  151  145   145 #>  [6889,]  134  139  142  150  149  154  152  151  145   145 #>  [6890,]  134  139  142  150  149  154  152  151  145   145 #>  [6891,]  134  139  142  150  149  154  152  151  145   145 #>  [6892,]  134  138  141  149  148  153  151  150  144   144 #>  [6893,]  134  139  142  150  149  154  153  151  145   145 #>  [6894,]  134  138  141  149  148  153  151  150  144   144 #>  [6895,]  134  138  141  149  148  153  151  150  144   144 #>  [6896,]  134  138  141  149  148  153  151  150  144   144 #>  [6897,]  134  139  142  150  149  154  153  151  145   145 #>  [6898,]  134  139  142  150  149  154  152  151  145   145 #>  [6899,]  134  139  142  150  149  154  152  151  145   145 #>  [6900,]  134  138  141  149  148  153  151  150  144   144 #>  [6901,]  136  141  144  152  150  155  155  152  147   146 #>  [6902,]  136  141  144  152  150  155  155  152  147   146 #>  [6903,]  135  140  143  151  150  155  155  152  146   147 #>  [6904,]  135  140  143  151  150  155  155  152  146   148 #>  [6905,]  135  140  143  151  150  155  155  152  146   148 #>  [6906,]  136  141  144  152  150  155  155  152  147   146 #>  [6907,]  135  140  143  151  150  155  154  152  146   147 #>  [6908,]  135  140  143  151  150  155  155  152  146   148 #>  [6909,]  135  140  143  151  150  155  155  152  146   148 #>  [6910,]  135  140  143  151  150  155  155  152  146   148 #>  [6911,]  135  140  143  151  150  155  155  152  146   148 #>  [6912,]  135  140  143  151  150  155  155  152  146   148 #>  [6913,]  136  141  144  152  150  155  155  152  147   146 #>  [6914,]  136  141  144  152  150  155  155  152  147   146 #>  [6915,]  136  141  144  152  150  155  155  152  147   146 #>  [6916,]  136  141  144  152  150  155  155  152  147   146 #>  [6917,]  136  141  144  152  150  155  155  152  147   146 #>  [6918,]  135  140  143  151  150  155  155  152  146   148 #>  [6919,]  135  140  143  151  150  155  155  152  146   148 #>  [6920,]  135  140  143  151  150  155  155  152  146   147 #>  [6921,]  136  141  144  152  150  155  154  152  147   146 #>  [6922,]  136  141  144  152  150  155  155  152  146   148 #>  [6923,]  135  140  143  151  150  155  154  152  146   147 #>  [6924,]  135  140  143  151  150  155  155  152  146   148 #>  [6925,]  135  140  143  151  150  155  155  152  146   147 #>  [6926,]  136  141  144  152  150  155  155  152  147   146 #>  [6927,]  136  141  144  152  150  155  155  152  147   146 #>  [6928,]  135  140  143  151  150  155  155  152  146   148 #>  [6929,]  136  141  144  152  150  155  155  152  147   146 #>  [6930,]  135  140  143  151  150  155  154  152  146   148 #>  [6931,]  135  140  143  151  150  155  155  152  146   148 #>  [6932,]  135  140  143  151  150  155  155  152  146   148 #>  [6933,]  136  141  144  152  150  155  155  152  147   146 #>  [6934,]  135  140  143  151  150  155  155  152  146   147 #>  [6935,]  136  141  144  152  150  155  155  152  147   146 #>  [6936,]  135  140  143  151  150  155  155  152  146   147 #>  [6937,]  136  141  144  152  150  155  155  152  147   146 #>  [6938,]  135  140  143  151  150  155  155  152  146   148 #>  [6939,]  135  140  143  151  150  155  154  152  146   148 #>  [6940,]  135  140  143  151  150  155  155  152  146   148 #>  [6941,]  136  141  144  152  150  155  155  152  147   146 #>  [6942,]  135  140  143  151  150  155  155  152  146   147 #>  [6943,]  135  140  143  151  150  155  155  152  146   148 #>  [6944,]  136  141  144  152  150  155  155  152  147   146 #>  [6945,]  135  140  143  151  150  155  155  152  146   147 #>  [6946,]  135  140  143  151  150  155  155  152  146   148 #>  [6947,]  135  140  143  151  150  155  155  152  146   148 #>  [6948,]  135  140  143  151  150  155  155  152  146   148 #>  [6949,]  135  140  143  151  150  155  154  152  146   148 #>  [6950,]  136  141  144  152  150  155  155  152  147   146 #>  [6951,]  135  140  143  151  150  155  155  152  146   148 #>  [6952,]  136  141  144  152  150  155  155  152  146   148 #>  [6953,]  135  140  143  151  150  155  155  152  146   147 #>  [6954,]  135  140  143  151  150  155  154  152  146   147 #>  [6955,]  135  140  143  151  150  155  155  152  146   147 #>  [6956,]  135  140  143  151  150  155  155  152  146   147 #>  [6957,]  135  140  143  151  150  155  155  152  146   147 #>  [6958,]  136  141  144  152  150  155  155  152  146   148 #>  [6959,]  136  141  144  152  150  155  155  152  147   146 #>  [6960,]  135  140  143  151  150  155  155  152  146   147 #>  [6961,]  136  141  144  152  150  155  155  152  147   146 #>  [6962,]  135  140  143  151  150  155  154  152  146   148 #>  [6963,]  135  140  143  151  150  155  155  152  146   148 #>  [6964,]  135  140  143  151  150  155  155  152  146   147 #>  [6965,]  135  140  143  151  150  155  155  152  146   147 #>  [6966,]  135  140  143  151  150  155  155  152  146   148 #>  [6967,]  135  140  143  151  150  155  155  152  146   148 #>  [6968,]  136  141  144  152  150  155  155  152  147   146 #>  [6969,]  135  140  143  151  150  155  155  152  146   148 #>  [6970,]  136  141  144  152  150  155  154  152  147   146 #>  [6971,]  136  141  144  152  150  155  155  152  147   146 #>  [6972,]  135  140  143  151  150  155  155  152  146   148 #>  [6973,]  136  141  144  152  150  155  155  152  147   146 #>  [6974,]  135  140  143  151  150  155  155  152  146   147 #>  [6975,]  135  140  143  151  150  155  155  152  146   148 #>  [6976,]  136  141  144  152  150  155  155  152  147   146 #>  [6977,]  136  141  144  152  150  155  155  152  147   146 #>  [6978,]  135  140  143  151  150  155  155  152  146   148 #>  [6979,]  136  141  144  152  150  155  155  152  147   146 #>  [6980,]  135  140  143  151  150  155  154  152  146   147 #>  [6981,]  136  141  144  152  150  155  155  152  147   146 #>  [6982,]  135  140  143  151  150  155  155  152  146   147 #>  [6983,]  136  141  144  152  150  155  154  152  147   146 #>  [6984,]  135  140  143  151  150  155  155  152  146   147 #>  [6985,]  135  140  143  151  150  155  155  152  146   147 #>  [6986,]  136  141  144  152  150  155  155  152  147   146 #>  [6987,]  135  140  143  151  150  155  155  152  146   148 #>  [6988,]  135  140  143  151  150  155  155  152  146   147 #>  [6989,]  135  140  143  151  150  155  155  152  146   147 #>  [6990,]  136  141  144  152  150  155  155  152  146   148 #>  [6991,]  135  140  143  151  150  155  155  152  146   148 #>  [6992,]  135  140  143  151  150  155  155  152  146   148 #>  [6993,]  136  141  144  152  150  155  155  152  147   146 #>  [6994,]  136  141  144  152  150  155  155  152  147   146 #>  [6995,]  135  140  143  151  150  155  154  152  146   148 #>  [6996,]  136  141  144  152  150  155  155  152  147   146 #>  [6997,]  135  140  143  151  150  155  155  152  146   147 #>  [6998,]  135  140  143  151  150  155  154  152  146   147 #>  [6999,]  136  141  144  152  150  155  155  152  147   146 #>  [7000,]  136  141  144  152  150  155  155  152  147   146 #>  [7001,]  138  143  146  154  152  157  156  153  150   151 #>  [7002,]  138  143  146  154  152  157  156  154  148   149 #>  [7003,]  137  142  145  153  151  156  156  153  149   150 #>  [7004,]  137  142  145  153  151  156  156  154  148   149 #>  [7005,]  138  143  146  154  152  157  156  154  148   149 #>  [7006,]  138  143  146  154  152  157  156  153  150   151 #>  [7007,]  137  142  145  153  151  156  156  154  148   149 #>  [7008,]  137  142  145  153  151  156  156  154  148   149 #>  [7009,]  138  143  146  154  152  157  156  154  148   149 #>  [7010,]  138  143  146  154  152  157  156  154  148   149 #>  [7011,]  138  143  146  154  152  157  156  153  149   150 #>  [7012,]  137  142  145  153  151  156  156  154  148   149 #>  [7013,]  138  143  146  154  152  157  156  154  148   149 #>  [7014,]  138  143  146  154  152  157  156  154  148   149 #>  [7015,]  138  143  146  154  152  157  156  154  148   149 #>  [7016,]  138  143  146  154  152  157  156  153  150   151 #>  [7017,]  138  143  146  154  152  157  156  154  148   149 #>  [7018,]  138  143  146  154  152  157  156  154  148   149 #>  [7019,]  138  143  146  154  152  157  156  153  149   150 #>  [7020,]  138  143  147  155  152  157  156  154  148   149 #>  [7021,]  138  143  146  154  152  157  156  154  148   149 #>  [7022,]  138  143  147  155  152  157  156  154  148   149 #>  [7023,]  138  143  146  154  152  157  156  154  148   149 #>  [7024,]  138  143  146  154  152  157  156  154  148   149 #>  [7025,]  137  142  145  153  151  156  156  154  148   149 #>  [7026,]  138  143  146  154  152  157  156  154  148   149 #>  [7027,]  138  143  146  154  152  157  156  154  148   149 #>  [7028,]  138  143  146  154  152  157  156  153  149   150 #>  [7029,]  138  143  147  155  152  157  156  154  148   149 #>  [7030,]  138  143  146  154  152  157  156  154  148   149 #>  [7031,]  137  142  145  153  151  156  156  154  148   149 #>  [7032,]  138  143  146  154  152  157  156  154  148   149 #>  [7033,]  138  143  146  154  152  157  156  154  148   149 #>  [7034,]  138  143  146  154  152  157  156  153  149   150 #>  [7035,]  138  143  146  154  152  157  156  153  149   150 #>  [7036,]  138  143  146  154  152  157  156  154  148   149 #>  [7037,]  138  143  146  154  152  157  156  153  149   150 #>  [7038,]  138  143  146  154  152  157  156  153  149   150 #>  [7039,]  138  143  146  154  152  157  156  154  148   149 #>  [7040,]  138  143  146  154  152  157  156  154  148   149 #>  [7041,]  138  143  146  154  152  157  156  154  148   149 #>  [7042,]  138  143  146  154  152  157  156  153  149   150 #>  [7043,]  138  143  146  154  152  157  156  154  148   149 #>  [7044,]  138  143  146  154  152  157  156  154  148   149 #>  [7045,]  138  143  146  154  152  157  156  153  149   150 #>  [7046,]  138  143  146  154  152  157  156  154  148   149 #>  [7047,]  137  142  145  153  151  156  156  154  148   149 #>  [7048,]  138  143  146  154  152  157  156  154  148   149 #>  [7049,]  138  143  146  154  152  157  156  153  149   150 #>  [7050,]  138  143  146  154  152  157  156  154  148   149 #>  [7051,]  138  143  146  154  152  157  156  154  148   149 #>  [7052,]  137  142  145  153  151  156  156  153  149   150 #>  [7053,]  138  143  146  154  152  157  156  154  148   149 #>  [7054,]  138  143  146  154  152  157  156  154  148   149 #>  [7055,]  138  143  146  154  152  157  156  154  148   149 #>  [7056,]  138  143  146  154  152  157  156  154  148   149 #>  [7057,]  137  142  145  153  151  156  156  154  148   149 #>  [7058,]  138  143  147  155  152  157  156  154  148   149 #>  [7059,]  137  142  145  153  151  156  156  154  148   149 #>  [7060,]  137  142  145  153  151  156  156  154  148   149 #>  [7061,]  138  143  146  154  152  157  156  154  148   149 #>  [7062,]  138  143  146  154  152  157  156  154  148   149 #>  [7063,]  138  143  146  154  152  157  156  154  148   149 #>  [7064,]  138  143  147  155  152  157  156  153  149   150 #>  [7065,]  138  143  146  154  152  157  156  154  148   149 #>  [7066,]  138  143  146  154  152  157  156  154  148   149 #>  [7067,]  138  143  146  154  152  157  156  154  148   149 #>  [7068,]  137  142  145  153  151  156  156  153  150   151 #>  [7069,]  138  143  146  154  152  157  156  154  148   149 #>  [7070,]  138  143  146  154  152  157  156  154  148   149 #>  [7071,]  138  143  146  154  152  157  156  154  148   149 #>  [7072,]  138  143  146  154  152  157  156  153  149   150 #>  [7073,]  138  143  146  154  152  157  156  153  150   151 #>  [7074,]  138  143  146  154  152  157  156  154  148   149 #>  [7075,]  138  143  146  154  152  157  156  154  148   149 #>  [7076,]  138  143  146  154  152  157  156  154  148   149 #>  [7077,]  138  143  147  155  152  157  156  153  149   150 #>  [7078,]  138  143  146  154  152  157  156  154  148   149 #>  [7079,]  138  143  146  154  152  157  156  154  148   149 #>  [7080,]  137  142  145  153  151  156  156  154  148   149 #>  [7081,]  138  143  146  154  152  157  156  154  148   149 #>  [7082,]  138  143  146  154  152  157  156  154  148   149 #>  [7083,]  138  143  146  154  152  157  156  154  148   149 #>  [7084,]  138  143  146  154  152  157  156  154  148   149 #>  [7085,]  138  143  146  154  152  157  156  154  148   149 #>  [7086,]  137  142  145  153  151  156  156  154  148   149 #>  [7087,]  138  143  147  155  152  157  156  154  148   149 #>  [7088,]  138  143  146  154  152  157  156  154  148   149 #>  [7089,]  138  143  146  154  152  157  156  154  148   149 #>  [7090,]  138  143  146  154  152  157  156  154  148   149 #>  [7091,]  138  143  146  154  152  157  156  154  148   149 #>  [7092,]  138  143  146  154  152  157  156  154  148   149 #>  [7093,]  138  143  146  154  152  157  156  154  148   149 #>  [7094,]  138  143  146  154  152  157  156  153  149   150 #>  [7095,]  138  143  146  154  152  157  156  154  148   149 #>  [7096,]  137  142  145  153  151  156  156  153  150   151 #>  [7097,]  137  142  145  153  151  156  156  153  149   150 #>  [7098,]  137  142  145  153  151  156  156  154  148   149 #>  [7099,]  138  143  146  154  152  157  156  154  148   149 #>  [7100,]  138  143  146  154  152  157  156  153  149   150 #>  [7101,]  140  145  148  157  155  159  159  155  151   152 #>  [7102,]  140  145  148  156  153  160  157  156  152   153 #>  [7103,]  139  144  148  156  153  160  157  156  152   153 #>  [7104,]  140  145  148  156  153  160  157  156  152   153 #>  [7105,]  140  145  148  157  155  159  159  155  151   152 #>  [7106,]  140  145  148  156  153  160  157  156  152   153 #>  [7107,]  139  144  148  156  153  160  157  156  152   153 #>  [7108,]  140  145  148  156  153  160  157  156  152   153 #>  [7109,]  140  145  148  156  153  160  157  156  152   153 #>  [7110,]  140  145  148  157  155  159  159  155  151   152 #>  [7111,]  140  145  148  157  154  158  159  155  151   152 #>  [7112,]  140  145  148  157  154  158  159  155  151   152 #>  [7113,]  140  145  148  156  153  161  158  156  152   153 #>  [7114,]  140  145  148  157  154  158  159  155  151   152 #>  [7115,]  140  145  148  157  155  159  159  155  151   152 #>  [7116,]  140  145  148  156  153  161  158  156  152   153 #>  [7117,]  140  145  148  157  155  159  159  155  151   152 #>  [7118,]  140  145  148  157  155  159  159  155  151   152 #>  [7119,]  140  145  148  156  153  161  158  156  152   153 #>  [7120,]  139  144  148  156  153  160  157  156  152   153 #>  [7121,]  140  145  148  156  153  160  157  156  152   153 #>  [7122,]  140  145  148  157  154  158  159  155  151   152 #>  [7123,]  140  145  148  156  153  160  157  156  152   153 #>  [7124,]  140  145  148  156  153  161  158  156  152   153 #>  [7125,]  139  144  148  156  153  160  157  156  152   153 #>  [7126,]  140  145  148  157  154  158  159  155  151   152 #>  [7127,]  140  145  148  157  155  159  159  155  151   152 #>  [7128,]  140  145  148  156  153  161  158  156  152   153 #>  [7129,]  140  145  148  156  153  160  157  156  152   153 #>  [7130,]  140  145  148  156  153  160  157  156  152   153 #>  [7131,]  140  145  148  157  155  159  159  155  151   152 #>  [7132,]  140  145  148  157  154  158  159  155  151   152 #>  [7133,]  140  145  148  156  153  161  158  156  152   153 #>  [7134,]  140  145  148  156  153  160  157  156  152   153 #>  [7135,]  140  145  148  156  153  160  157  156  152   153 #>  [7136,]  140  145  148  156  153  160  157  156  152   153 #>  [7137,]  140  145  148  156  153  160  157  156  152   153 #>  [7138,]  140  145  148  157  155  159  159  155  151   152 #>  [7139,]  139  144  148  156  153  161  158  156  152   153 #>  [7140,]  140  145  148  156  153  160  157  156  152   153 #>  [7141,]  140  145  148  156  153  160  157  156  152   153 #>  [7142,]  140  145  148  156  153  160  157  156  152   153 #>  [7143,]  140  145  148  157  155  159  159  155  151   152 #>  [7144,]  139  144  148  156  153  160  157  156  152   153 #>  [7145,]  140  145  148  156  153  160  157  156  152   153 #>  [7146,]  140  145  148  156  153  161  158  156  152   153 #>  [7147,]  140  145  148  157  155  159  159  155  151   152 #>  [7148,]  140  145  148  156  153  161  158  156  152   153 #>  [7149,]  139  144  148  156  153  160  157  156  152   153 #>  [7150,]  139  144  148  156  153  160  157  156  152   153 #>  [7151,]  140  145  148  156  153  161  158  156  152   153 #>  [7152,]  140  145  148  157  155  159  159  155  151   152 #>  [7153,]  139  144  148  156  153  160  157  156  152   153 #>  [7154,]  140  145  148  156  153  160  157  156  152   153 #>  [7155,]  139  144  148  156  153  160  157  156  152   153 #>  [7156,]  139  144  148  156  153  160  157  156  152   153 #>  [7157,]  140  145  148  156  153  160  157  156  152   153 #>  [7158,]  140  145  148  157  155  159  159  155  151   152 #>  [7159,]  139  144  148  157  155  159  159  155  151   152 #>  [7160,]  140  145  148  156  153  160  157  156  152   153 #>  [7161,]  140  145  148  157  155  159  159  155  151   152 #>  [7162,]  140  145  148  156  153  160  157  156  152   153 #>  [7163,]  140  145  148  156  153  160  157  156  152   153 #>  [7164,]  140  145  148  156  153  160  157  156  152   153 #>  [7165,]  139  144  148  156  153  160  157  156  152   153 #>  [7166,]  139  144  148  157  154  158  159  155  151   152 #>  [7167,]  140  145  148  156  153  160  157  156  152   153 #>  [7168,]  140  145  148  157  154  158  159  155  151   152 #>  [7169,]  140  145  148  156  153  160  157  156  152   153 #>  [7170,]  140  145  148  157  155  159  159  155  151   152 #>  [7171,]  140  145  148  157  155  159  159  155  151   152 #>  [7172,]  140  145  148  156  153  160  157  156  152   153 #>  [7173,]  140  145  148  156  153  160  157  156  152   153 #>  [7174,]  140  145  148  156  153  160  157  156  152   153 #>  [7175,]  140  145  148  157  155  159  159  155  151   152 #>  [7176,]  140  145  148  156  153  160  157  156  152   153 #>  [7177,]  140  145  148  157  155  159  159  155  151   152 #>  [7178,]  140  145  148  156  153  160  157  156  152   153 #>  [7179,]  140  145  148  157  155  159  159  155  151   152 #>  [7180,]  140  145  148  156  153  160  157  156  152   153 #>  [7181,]  140  145  148  156  153  160  157  156  152   153 #>  [7182,]  140  145  148  156  153  160  157  156  152   153 #>  [7183,]  140  145  148  156  153  161  158  156  152   153 #>  [7184,]  140  145  148  156  153  160  157  156  152   153 #>  [7185,]  140  145  148  156  153  160  157  156  152   153 #>  [7186,]  140  145  148  156  153  160  157  156  152   153 #>  [7187,]  140  145  148  157  155  159  159  155  151   152 #>  [7188,]  140  145  148  156  153  160  157  156  152   153 #>  [7189,]  140  145  148  156  153  160  157  156  152   153 #>  [7190,]  139  144  148  157  155  159  159  155  151   152 #>  [7191,]  140  145  148  157  154  158  159  155  151   152 #>  [7192,]  140  145  148  157  155  159  159  155  151   152 #>  [7193,]  140  145  148  156  153  160  157  156  152   153 #>  [7194,]  140  145  148  156  153  160  157  156  152   153 #>  [7195,]  140  145  148  157  155  159  159  155  151   152 #>  [7196,]  140  145  148  157  155  159  159  155  151   152 #>  [7197,]  140  145  148  156  153  160  157  156  152   153 #>  [7198,]  139  144  148  156  153  160  157  156  152   153 #>  [7199,]  140  145  148  156  153  160  157  156  152   153 #>  [7200,]  139  144  148  157  155  159  159  155  151   152 #>  [7201,]  142  147  150  159  157  163  161  158  154   155 #>  [7202,]  142  147  150  159  157  163  161  158  154   155 #>  [7203,]  141  146  149  158  156  162  160  157  153   154 #>  [7204,]  142  147  150  159  157  163  161  158  154   155 #>  [7205,]  142  147  150  159  157  163  161  158  154   155 #>  [7206,]  142  147  150  159  157  163  161  158  154   155 #>  [7207,]  142  147  150  159  157  163  161  158  154   155 #>  [7208,]  142  147  150  159  157  163  161  158  154   155 #>  [7209,]  142  147  150  159  157  163  161  158  154   155 #>  [7210,]  141  146  149  158  156  162  160  157  153   154 #>  [7211,]  141  146  149  158  156  162  160  157  153   154 #>  [7212,]  142  147  150  159  157  163  161  158  154   155 #>  [7213,]  142  147  150  159  157  163  161  158  154   155 #>  [7214,]  141  146  149  158  156  162  160  157  153   154 #>  [7215,]  142  147  150  159  157  163  161  158  154   155 #>  [7216,]  142  147  150  159  157  163  161  158  154   155 #>  [7217,]  142  147  150  159  157  163  161  158  154   155 #>  [7218,]  142  147  150  159  157  163  161  158  154   155 #>  [7219,]  142  147  150  159  157  163  161  158  154   155 #>  [7220,]  142  147  150  159  157  163  161  158  154   155 #>  [7221,]  141  146  149  158  156  162  160  157  153   154 #>  [7222,]  142  147  150  159  157  163  161  158  154   155 #>  [7223,]  142  147  150  159  157  163  161  158  154   155 #>  [7224,]  142  147  150  159  157  163  161  158  154   155 #>  [7225,]  142  147  150  159  157  163  161  158  154   155 #>  [7226,]  142  147  150  159  157  163  161  158  154   155 #>  [7227,]  142  147  150  159  157  163  161  158  154   155 #>  [7228,]  142  147  150  159  157  163  161  158  154   155 #>  [7229,]  142  147  150  159  157  163  161  158  154   155 #>  [7230,]  142  147  150  159  157  163  161  158  154   155 #>  [7231,]  141  146  149  158  156  162  160  157  153   154 #>  [7232,]  141  146  149  158  156  162  160  157  153   154 #>  [7233,]  142  147  150  159  157  163  161  158  154   155 #>  [7234,]  142  147  150  159  157  163  161  158  154   155 #>  [7235,]  142  147  150  159  157  163  161  158  154   155 #>  [7236,]  142  147  150  159  157  163  161  158  154   155 #>  [7237,]  142  147  150  159  157  163  161  158  154   155 #>  [7238,]  142  147  150  159  157  163  161  158  154   155 #>  [7239,]  142  147  150  159  157  163  161  158  154   155 #>  [7240,]  141  146  149  158  156  162  160  157  153   154 #>  [7241,]  142  147  150  159  157  163  161  158  154   155 #>  [7242,]  142  147  150  159  157  163  161  158  154   155 #>  [7243,]  142  147  150  159  157  163  161  158  154   155 #>  [7244,]  142  147  150  159  157  163  161  158  154   155 #>  [7245,]  142  147  150  159  157  163  161  158  154   155 #>  [7246,]  142  147  150  159  157  163  161  158  154   155 #>  [7247,]  142  147  150  159  157  163  161  158  154   155 #>  [7248,]  141  146  149  158  156  162  160  157  153   154 #>  [7249,]  142  147  150  159  157  163  161  158  154   155 #>  [7250,]  142  147  150  159  157  163  161  158  154   155 #>  [7251,]  142  147  150  159  157  163  161  158  154   155 #>  [7252,]  142  147  150  159  157  163  161  158  154   155 #>  [7253,]  142  147  150  159  157  163  161  158  154   155 #>  [7254,]  142  147  150  159  157  163  161  158  154   155 #>  [7255,]  142  147  150  159  157  163  161  158  154   155 #>  [7256,]  142  147  150  159  157  163  161  158  154   155 #>  [7257,]  142  147  150  159  157  163  161  158  154   155 #>  [7258,]  142  147  150  159  157  163  161  158  154   155 #>  [7259,]  142  147  150  159  157  163  161  158  154   155 #>  [7260,]  142  147  150  159  157  163  161  158  154   155 #>  [7261,]  142  147  150  159  157  163  161  158  154   155 #>  [7262,]  142  147  150  159  157  163  161  158  154   155 #>  [7263,]  142  147  150  159  157  163  161  158  154   155 #>  [7264,]  142  147  150  159  157  163  161  158  154   155 #>  [7265,]  142  147  150  159  157  163  161  158  154   155 #>  [7266,]  142  147  150  159  157  163  161  158  154   155 #>  [7267,]  142  147  150  159  157  163  161  158  154   155 #>  [7268,]  142  147  150  159  157  163  161  158  154   155 #>  [7269,]  142  147  150  159  157  163  161  158  154   155 #>  [7270,]  141  146  149  158  156  162  160  157  153   154 #>  [7271,]  142  147  150  159  157  163  161  158  154   155 #>  [7272,]  142  147  150  159  157  163  161  158  154   155 #>  [7273,]  142  147  150  159  157  163  161  158  154   155 #>  [7274,]  141  146  149  158  156  162  160  157  153   154 #>  [7275,]  142  147  150  159  157  163  161  158  154   155 #>  [7276,]  142  147  150  159  157  163  161  158  154   155 #>  [7277,]  142  147  150  159  157  163  161  158  154   155 #>  [7278,]  142  147  150  159  157  163  161  158  154   155 #>  [7279,]  142  147  150  159  157  163  161  158  154   155 #>  [7280,]  142  147  150  159  157  163  161  158  154   155 #>  [7281,]  142  147  150  159  157  163  161  158  154   155 #>  [7282,]  141  146  149  158  156  162  160  157  153   154 #>  [7283,]  142  147  150  159  157  163  161  158  154   155 #>  [7284,]  142  147  150  159  157  163  161  158  154   155 #>  [7285,]  142  147  150  159  157  163  161  158  154   155 #>  [7286,]  142  147  150  159  157  163  161  158  154   155 #>  [7287,]  142  147  150  159  157  163  161  158  154   155 #>  [7288,]  142  147  150  159  157  163  161  158  154   155 #>  [7289,]  142  147  150  159  157  163  161  158  154   155 #>  [7290,]  142  147  150  159  157  163  161  158  154   155 #>  [7291,]  142  147  150  159  157  163  161  158  154   155 #>  [7292,]  142  147  150  159  157  163  161  158  154   155 #>  [7293,]  142  147  150  159  157  163  161  158  154   155 #>  [7294,]  142  147  150  159  157  163  161  158  154   155 #>  [7295,]  142  147  150  159  157  163  161  158  154   155 #>  [7296,]  142  147  150  159  157  163  161  158  154   155 #>  [7297,]  142  147  150  159  157  163  161  158  154   155 #>  [7298,]  141  146  149  158  156  162  160  157  153   154 #>  [7299,]  142  147  150  159  157  163  161  158  154   155 #>  [7300,]  142  147  150  159  157  163  161  158  154   155 #>  [7301,]  144  149  151  160  159  165  163  160  156   157 #>  [7302,]  144  149  151  160  159  165  163  160  156   157 #>  [7303,]  143  148  151  160  158  164  162  159  155   156 #>  [7304,]  144  149  151  160  158  164  162  159  155   156 #>  [7305,]  144  149  151  160  158  164  162  159  155   156 #>  [7306,]  144  149  151  160  159  165  163  160  156   157 #>  [7307,]  144  149  151  160  159  165  163  160  156   157 #>  [7308,]  144  149  151  160  158  164  162  159  155   156 #>  [7309,]  144  149  151  160  158  164  162  159  155   156 #>  [7310,]  143  148  151  160  158  164  162  159  155   156 #>  [7311,]  143  148  151  160  159  165  163  160  156   157 #>  [7312,]  144  149  151  160  158  164  162  159  155   156 #>  [7313,]  144  149  151  160  159  165  163  160  156   157 #>  [7314,]  143  148  151  160  159  165  163  160  156   157 #>  [7315,]  144  149  151  160  159  165  163  160  156   157 #>  [7316,]  144  149  151  160  159  165  163  160  156   157 #>  [7317,]  144  149  151  160  159  165  163  160  156   157 #>  [7318,]  144  149  151  160  158  164  162  159  155   156 #>  [7319,]  144  149  151  160  159  165  163  160  156   157 #>  [7320,]  144  149  151  160  158  164  162  159  155   156 #>  [7321,]  143  148  151  160  159  165  163  160  156   157 #>  [7322,]  144  149  151  160  159  165  163  160  156   157 #>  [7323,]  144  149  151  160  158  164  162  159  155   156 #>  [7324,]  144  149  151  160  158  164  162  159  155   156 #>  [7325,]  144  149  151  160  158  164  162  159  155   156 #>  [7326,]  144  149  151  160  159  165  163  160  156   157 #>  [7327,]  144  149  151  160  159  165  163  160  156   157 #>  [7328,]  143  148  151  160  158  164  162  159  155   156 #>  [7329,]  144  149  151  160  159  165  163  160  156   157 #>  [7330,]  144  149  151  160  158  164  162  159  155   156 #>  [7331,]  143  148  151  160  158  164  162  159  155   156 #>  [7332,]  143  148  151  160  158  164  162  159  155   156 #>  [7333,]  144  149  151  160  159  165  163  160  156   157 #>  [7334,]  143  148  151  160  158  164  162  159  155   156 #>  [7335,]  143  148  151  160  159  165  163  160  156   157 #>  [7336,]  144  149  151  160  158  164  162  159  155   156 #>  [7337,]  144  149  151  160  159  165  163  160  156   157 #>  [7338,]  144  149  151  160  158  164  162  159  155   156 #>  [7339,]  144  149  151  160  158  164  162  159  155   156 #>  [7340,]  143  148  151  160  159  165  163  160  156   157 #>  [7341,]  144  149  151  160  159  165  163  160  156   157 #>  [7342,]  144  149  151  160  158  164  162  159  155   156 #>  [7343,]  144  149  151  160  158  164  162  159  155   156 #>  [7344,]  144  149  151  160  159  165  163  160  156   157 #>  [7345,]  144  149  151  160  158  164  162  159  155   156 #>  [7346,]  144  149  151  160  159  165  163  160  156   157 #>  [7347,]  144  149  151  160  159  165  163  160  156   157 #>  [7348,]  143  148  151  160  158  164  162  159  155   156 #>  [7349,]  144  149  151  160  158  164  162  159  155   156 #>  [7350,]  144  149  151  160  159  165  163  160  156   157 #>  [7351,]  144  149  151  160  158  164  162  159  155   156 #>  [7352,]  144  149  151  160  159  165  163  160  156   157 #>  [7353,]  144  149  151  160  158  164  162  159  155   156 #>  [7354,]  144  149  151  160  158  164  162  159  155   156 #>  [7355,]  144  149  151  160  159  165  163  160  156   157 #>  [7356,]  144  149  151  160  158  164  162  159  155   156 #>  [7357,]  144  149  151  160  158  164  162  159  155   156 #>  [7358,]  144  149  151  160  159  165  163  160  156   157 #>  [7359,]  144  149  151  160  159  165  163  160  156   157 #>  [7360,]  144  149  151  160  158  164  162  159  155   156 #>  [7361,]  144  149  151  160  159  165  163  160  156   157 #>  [7362,]  144  149  151  160  158  164  162  159  155   156 #>  [7363,]  144  149  151  160  159  165  163  160  156   157 #>  [7364,]  144  149  151  160  158  164  162  159  155   156 #>  [7365,]  143  148  151  160  158  164  162  159  155   156 #>  [7366,]  144  149  151  160  158  164  162  159  155   156 #>  [7367,]  144  149  151  160  158  164  162  159  155   156 #>  [7368,]  144  149  151  160  159  165  163  160  156   157 #>  [7369,]  144  149  151  160  159  165  163  160  156   157 #>  [7370,]  143  148  151  160  159  165  163  160  156   157 #>  [7371,]  144  149  151  160  159  165  163  160  156   157 #>  [7372,]  144  149  151  160  158  164  162  159  155   156 #>  [7373,]  144  149  151  160  159  165  163  160  156   157 #>  [7374,]  143  148  151  160  159  165  163  160  156   157 #>  [7375,]  144  149  151  160  159  165  163  160  156   157 #>  [7376,]  144  149  151  160  159  165  163  160  156   157 #>  [7377,]  144  149  151  160  159  165  163  160  156   157 #>  [7378,]  144  149  151  160  158  164  162  159  155   156 #>  [7379,]  144  149  151  160  159  165  163  160  156   157 #>  [7380,]  144  149  151  160  158  164  162  159  155   156 #>  [7381,]  144  149  151  160  159  165  163  160  156   157 #>  [7382,]  143  148  151  160  159  165  163  160  156   157 #>  [7383,]  144  149  151  160  159  165  163  160  156   157 #>  [7384,]  144  149  151  160  159  165  163  160  156   157 #>  [7385,]  144  149  151  160  158  164  162  159  155   156 #>  [7386,]  144  149  151  160  159  165  163  160  156   157 #>  [7387,]  144  149  151  160  159  165  163  160  156   157 #>  [7388,]  144  149  151  160  158  164  162  159  155   156 #>  [7389,]  144  149  151  160  158  164  162  159  155   156 #>  [7390,]  144  149  151  160  159  165  163  160  156   157 #>  [7391,]  144  149  151  160  158  164  162  159  155   156 #>  [7392,]  144  149  151  160  159  165  163  160  156   157 #>  [7393,]  144  149  151  160  159  165  163  160  156   157 #>  [7394,]  144  149  151  160  159  165  163  160  156   157 #>  [7395,]  144  149  151  160  158  164  162  159  155   156 #>  [7396,]  144  149  151  160  159  165  163  160  156   157 #>  [7397,]  144  149  151  160  159  165  163  160  156   157 #>  [7398,]  143  148  151  160  159  165  163  160  156   157 #>  [7399,]  144  149  151  160  159  165  163  160  156   157 #>  [7400,]  144  149  151  160  159  165  163  160  156   157 #>  [7401,]  146  151  153  162  160  167  165  162  158   159 #>  [7402,]  146  151  153  162  160  167  165  162  158   159 #>  [7403,]  145  150  152  161  160  166  164  161  157   158 #>  [7404,]  146  151  153  162  160  167  165  162  158   159 #>  [7405,]  146  151  153  162  160  167  165  162  158   159 #>  [7406,]  146  151  153  162  160  166  164  161  157   158 #>  [7407,]  146  151  153  162  160  167  165  162  158   159 #>  [7408,]  146  151  153  162  160  167  165  162  158   159 #>  [7409,]  146  151  153  162  160  167  165  162  158   159 #>  [7410,]  146  151  153  162  160  167  165  162  158   159 #>  [7411,]  145  150  152  161  160  166  164  161  157   158 #>  [7412,]  145  150  152  161  160  167  165  162  158   159 #>  [7413,]  146  151  153  162  160  167  165  162  158   159 #>  [7414,]  145  150  152  161  160  167  165  162  158   159 #>  [7415,]  146  151  153  162  160  167  165  162  158   159 #>  [7416,]  146  151  153  162  160  166  164  161  157   158 #>  [7417,]  146  151  153  162  160  167  165  162  158   159 #>  [7418,]  146  151  153  162  160  167  165  162  158   159 #>  [7419,]  145  150  152  161  160  166  164  161  157   158 #>  [7420,]  145  150  152  161  160  167  165  162  158   159 #>  [7421,]  146  151  153  162  160  167  165  162  158   159 #>  [7422,]  145  150  152  161  160  167  165  162  158   159 #>  [7423,]  146  151  153  162  160  167  165  162  158   159 #>  [7424,]  146  151  153  162  160  167  165  162  158   159 #>  [7425,]  146  151  153  162  160  167  165  162  158   159 #>  [7426,]  145  150  152  161  160  167  165  162  158   159 #>  [7427,]  146  151  153  162  160  167  165  162  158   159 #>  [7428,]  146  151  153  162  160  167  165  162  158   159 #>  [7429,]  145  150  152  161  160  167  165  162  158   159 #>  [7430,]  146  151  153  162  160  167  165  162  158   159 #>  [7431,]  146  151  153  162  160  167  165  162  158   159 #>  [7432,]  145  150  152  161  160  167  165  162  158   159 #>  [7433,]  146  151  153  162  160  167  165  162  158   159 #>  [7434,]  146  151  153  162  160  166  164  161  157   158 #>  [7435,]  146  151  153  162  160  166  164  161  157   158 #>  [7436,]  145  150  152  161  160  167  165  162  158   159 #>  [7437,]  146  151  153  162  160  166  164  161  157   158 #>  [7438,]  146  151  153  162  160  166  164  161  157   158 #>  [7439,]  146  151  153  162  160  167  165  162  158   159 #>  [7440,]  145  150  152  161  160  167  165  162  158   159 #>  [7441,]  145  150  152  161  160  167  165  162  158   159 #>  [7442,]  145  150  152  161  160  167  165  162  158   159 #>  [7443,]  146  151  153  162  160  167  165  162  158   159 #>  [7444,]  146  151  153  162  160  167  165  162  158   159 #>  [7445,]  146  151  153  162  160  166  164  161  157   158 #>  [7446,]  146  151  153  162  160  167  165  162  158   159 #>  [7447,]  146  151  153  162  160  167  165  162  158   159 #>  [7448,]  145  150  152  161  160  167  165  162  158   159 #>  [7449,]  146  151  153  162  160  166  164  161  157   158 #>  [7450,]  146  151  153  162  160  167  165  162  158   159 #>  [7451,]  145  150  152  161  160  167  165  162  158   159 #>  [7452,]  146  151  153  162  160  166  164  161  157   158 #>  [7453,]  146  151  153  162  160  167  165  162  158   159 #>  [7454,]  145  150  152  161  160  167  165  162  158   159 #>  [7455,]  146  151  153  162  160  167  165  162  158   159 #>  [7456,]  146  151  153  162  160  167  165  162  158   159 #>  [7457,]  146  151  153  162  160  167  165  162  158   159 #>  [7458,]  146  151  153  162  160  167  165  162  158   159 #>  [7459,]  146  151  153  162  160  167  165  162  158   159 #>  [7460,]  145  150  152  161  160  167  165  162  158   159 #>  [7461,]  146  151  153  162  160  167  165  162  158   159 #>  [7462,]  145  150  152  161  160  167  165  162  158   159 #>  [7463,]  145  150  152  161  160  167  165  162  158   159 #>  [7464,]  146  151  153  162  160  166  164  161  157   158 #>  [7465,]  146  151  153  162  160  167  165  162  158   159 #>  [7466,]  145  150  152  161  160  167  165  162  158   159 #>  [7467,]  146  151  153  162  160  167  165  162  158   159 #>  [7468,]  145  150  152  161  160  166  164  161  157   158 #>  [7469,]  145  150  152  161  160  167  165  162  158   159 #>  [7470,]  146  151  153  162  160  167  165  162  158   159 #>  [7471,]  146  151  153  162  160  167  165  162  158   159 #>  [7472,]  146  151  153  162  160  166  164  161  157   158 #>  [7473,]  146  151  153  162  160  167  165  162  158   159 #>  [7474,]  146  151  153  162  160  167  165  162  158   159 #>  [7475,]  146  151  153  162  160  167  165  162  158   159 #>  [7476,]  146  151  153  162  160  167  165  162  158   159 #>  [7477,]  146  151  153  162  160  167  165  162  158   159 #>  [7478,]  146  151  153  162  160  167  165  162  158   159 #>  [7479,]  146  151  153  162  160  167  165  162  158   159 #>  [7480,]  145  150  152  161  160  167  165  162  158   159 #>  [7481,]  145  150  152  161  160  167  165  162  158   159 #>  [7482,]  146  151  153  162  160  167  165  162  158   159 #>  [7483,]  145  150  152  161  160  167  165  162  158   159 #>  [7484,]  146  151  153  162  160  167  165  162  158   159 #>  [7485,]  146  151  153  162  160  167  165  162  158   159 #>  [7486,]  146  151  153  162  160  167  165  162  158   159 #>  [7487,]  146  151  153  162  160  167  165  162  158   159 #>  [7488,]  146  151  153  162  160  167  165  162  158   159 #>  [7489,]  145  150  152  161  160  167  165  162  158   159 #>  [7490,]  146  151  153  162  160  167  165  162  158   159 #>  [7491,]  145  150  152  161  160  167  165  162  158   159 #>  [7492,]  146  151  153  162  160  167  165  162  158   159 #>  [7493,]  146  151  153  162  160  167  165  162  158   159 #>  [7494,]  146  151  153  162  160  167  165  162  158   159 #>  [7495,]  146  151  153  162  160  167  165  162  158   159 #>  [7496,]  146  151  153  162  160  166  164  161  157   158 #>  [7497,]  146  151  153  162  160  166  164  161  157   158 #>  [7498,]  146  151  153  162  160  167  165  162  158   159 #>  [7499,]  146  151  153  162  160  167  165  162  158   159 #>  [7500,]  146  151  153  162  160  167  165  162  158   159 #>  [7501,]  148  153  155  164  162  169  167  164  159   160 #>  [7502,]  148  153  155  164  162  169  167  164  159   160 #>  [7503,]  147  152  154  163  161  168  166  163  160   161 #>  [7504,]  148  153  155  164  162  169  167  164  159   160 #>  [7505,]  148  153  155  164  162  169  167  164  159   160 #>  [7506,]  147  152  154  163  161  168  166  163  160   161 #>  [7507,]  147  152  154  163  161  168  166  163  160   161 #>  [7508,]  148  153  155  164  162  169  167  164  159   160 #>  [7509,]  148  153  155  164  162  169  167  164  159   160 #>  [7510,]  148  153  155  164  162  169  167  164  159   160 #>  [7511,]  148  153  155  164  162  169  167  164  159   160 #>  [7512,]  148  153  155  164  162  169  167  164  159   160 #>  [7513,]  148  153  155  164  162  169  167  164  159   160 #>  [7514,]  148  153  155  164  162  169  167  164  159   160 #>  [7515,]  148  153  155  164  162  169  167  164  159   160 #>  [7516,]  148  153  155  164  162  169  167  164  159   160 #>  [7517,]  148  153  155  164  162  169  167  164  159   160 #>  [7518,]  148  153  155  164  162  169  167  164  159   160 #>  [7519,]  148  153  155  164  162  169  167  164  159   160 #>  [7520,]  147  152  154  163  161  168  166  163  161   162 #>  [7521,]  147  152  154  163  161  168  166  163  161   162 #>  [7522,]  148  153  155  164  162  169  167  164  159   160 #>  [7523,]  147  152  154  163  161  168  166  163  161   162 #>  [7524,]  148  153  155  164  162  169  167  164  159   160 #>  [7525,]  147  152  154  163  161  168  166  163  160   161 #>  [7526,]  148  153  155  164  162  169  167  164  159   160 #>  [7527,]  148  153  155  164  162  169  167  164  159   160 #>  [7528,]  148  153  155  164  162  169  167  164  159   160 #>  [7529,]  148  153  155  164  162  169  167  164  159   160 #>  [7530,]  148  153  155  164  162  169  167  164  159   160 #>  [7531,]  148  153  155  164  162  169  167  164  159   160 #>  [7532,]  148  153  155  164  162  169  167  164  159   160 #>  [7533,]  148  153  155  164  162  169  167  164  159   160 #>  [7534,]  147  152  154  163  161  168  166  163  160   161 #>  [7535,]  147  152  154  163  161  168  166  163  160   161 #>  [7536,]  148  153  155  164  162  169  167  164  159   160 #>  [7537,]  147  152  154  163  161  168  166  163  160   161 #>  [7538,]  148  153  155  164  162  169  167  164  159   160 #>  [7539,]  148  153  155  164  162  169  167  164  159   160 #>  [7540,]  148  153  155  164  162  169  167  164  159   160 #>  [7541,]  148  153  155  164  162  169  167  164  159   160 #>  [7542,]  147  152  154  163  161  168  166  163  160   161 #>  [7543,]  148  153  155  164  162  169  167  164  159   160 #>  [7544,]  147  152  154  163  161  168  166  163  161   162 #>  [7545,]  148  153  155  164  162  169  167  164  159   160 #>  [7546,]  148  153  155  164  162  169  167  164  159   160 #>  [7547,]  148  153  155  164  162  169  167  164  159   160 #>  [7548,]  148  153  155  164  162  169  167  164  159   160 #>  [7549,]  148  153  155  164  162  169  167  164  159   160 #>  [7550,]  148  153  155  164  162  169  167  164  159   160 #>  [7551,]  148  153  155  164  162  169  167  164  159   160 #>  [7552,]  148  153  155  164  162  169  167  164  159   160 #>  [7553,]  147  152  154  163  161  168  166  163  161   162 #>  [7554,]  148  153  155  164  162  169  167  164  159   160 #>  [7555,]  148  153  155  164  162  169  167  164  159   160 #>  [7556,]  147  152  154  163  161  168  166  163  160   161 #>  [7557,]  147  152  154  163  161  168  166  163  160   161 #>  [7558,]  148  153  155  164  162  169  167  164  159   160 #>  [7559,]  148  153  155  164  162  169  167  164  159   160 #>  [7560,]  148  153  155  164  162  169  167  164  159   160 #>  [7561,]  148  153  155  164  162  169  167  164  159   160 #>  [7562,]  148  153  155  164  162  169  167  164  159   160 #>  [7563,]  148  153  155  164  162  169  167  164  159   160 #>  [7564,]  148  153  155  164  162  169  167  164  159   160 #>  [7565,]  147  152  154  163  161  168  166  163  160   161 #>  [7566,]  148  153  155  164  162  169  167  164  159   160 #>  [7567,]  148  153  155  164  162  169  167  164  159   160 #>  [7568,]  148  153  155  164  162  169  167  164  159   160 #>  [7569,]  148  153  155  164  162  169  167  164  159   160 #>  [7570,]  148  153  155  164  162  169  167  164  159   160 #>  [7571,]  148  153  155  164  162  169  167  164  159   160 #>  [7572,]  148  153  155  164  162  169  167  164  159   160 #>  [7573,]  147  152  154  163  161  168  166  163  160   161 #>  [7574,]  147  152  154  163  161  168  166  163  160   161 #>  [7575,]  148  153  155  164  162  169  167  164  159   160 #>  [7576,]  148  153  155  164  162  169  167  164  159   160 #>  [7577,]  148  153  155  164  162  169  167  164  159   160 #>  [7578,]  148  153  155  164  162  169  167  164  159   160 #>  [7579,]  148  153  155  164  162  169  167  164  159   160 #>  [7580,]  147  152  154  163  161  168  166  163  161   162 #>  [7581,]  148  153  155  164  162  169  167  164  159   160 #>  [7582,]  147  152  154  163  161  168  166  163  160   161 #>  [7583,]  148  153  155  164  162  169  167  164  159   160 #>  [7584,]  147  152  154  163  161  168  166  163  161   162 #>  [7585,]  147  152  154  163  161  168  166  163  160   161 #>  [7586,]  147  152  154  163  161  168  166  163  161   162 #>  [7587,]  148  153  155  164  162  169  167  164  159   160 #>  [7588,]  148  153  155  164  162  169  167  164  159   160 #>  [7589,]  147  152  154  163  161  168  166  163  160   161 #>  [7590,]  148  153  155  164  162  169  167  164  159   160 #>  [7591,]  148  153  155  164  162  169  167  164  159   160 #>  [7592,]  148  153  155  164  162  169  167  164  159   160 #>  [7593,]  148  153  155  164  162  169  167  164  159   160 #>  [7594,]  147  152  154  163  161  168  166  163  160   161 #>  [7595,]  148  153  155  164  162  169  167  164  159   160 #>  [7596,]  148  153  155  164  162  169  167  164  159   160 #>  [7597,]  148  153  155  164  162  169  167  164  159   160 #>  [7598,]  148  153  155  164  162  169  167  164  159   160 #>  [7599,]  147  152  154  163  161  168  166  163  160   161 #>  [7600,]  148  153  155  164  162  169  167  164  159   160 #>  [7601,]  149  154  156  165  163  170  168  165  163   164 #>  [7602,]  149  154  156  165  163  170  168  165  163   164 #>  [7603,]  149  154  156  165  163  170  168  165  162   163 #>  [7604,]  149  154  156  165  163  170  168  165  163   164 #>  [7605,]  149  154  156  165  163  170  168  165  163   164 #>  [7606,]  149  154  156  165  163  170  168  165  163   164 #>  [7607,]  149  154  156  165  163  170  168  165  162   163 #>  [7608,]  149  154  156  165  163  170  168  165  162   163 #>  [7609,]  149  154  156  165  163  170  168  165  163   164 #>  [7610,]  149  154  156  165  163  170  168  165  163   164 #>  [7611,]  149  154  156  165  163  170  168  165  163   164 #>  [7612,]  149  154  156  165  163  170  168  165  163   164 #>  [7613,]  149  154  156  165  163  170  168  165  163   164 #>  [7614,]  149  154  156  165  163  170  168  165  163   164 #>  [7615,]  149  154  156  165  163  170  168  165  163   164 #>  [7616,]  149  154  156  165  163  170  168  165  163   164 #>  [7617,]  149  154  156  165  163  170  168  165  163   164 #>  [7618,]  149  154  156  165  163  170  168  165  163   164 #>  [7619,]  149  154  156  165  163  170  168  165  163   164 #>  [7620,]  150  155  157  166  164  171  169  165  162   163 #>  [7621,]  149  154  156  165  163  170  168  165  163   164 #>  [7622,]  150  155  157  166  164  171  169  165  163   164 #>  [7623,]  149  154  156  165  163  170  168  165  163   164 #>  [7624,]  149  154  156  165  163  170  168  165  163   164 #>  [7625,]  149  154  156  165  163  170  168  165  162   163 #>  [7626,]  149  154  156  165  163  170  168  165  163   164 #>  [7627,]  149  154  156  165  163  170  168  165  163   164 #>  [7628,]  149  154  156  165  163  170  168  165  163   164 #>  [7629,]  150  155  157  166  164  171  169  165  163   164 #>  [7630,]  149  154  156  165  163  170  168  165  163   164 #>  [7631,]  149  154  156  165  163  170  168  165  163   164 #>  [7632,]  149  154  156  165  163  170  168  165  163   164 #>  [7633,]  149  154  156  165  163  170  168  165  163   164 #>  [7634,]  149  154  156  165  163  170  168  165  163   164 #>  [7635,]  149  154  156  165  163  170  168  165  163   164 #>  [7636,]  149  154  156  165  163  170  168  165  163   164 #>  [7637,]  149  154  156  165  163  170  168  165  163   164 #>  [7638,]  149  154  156  165  163  170  168  165  163   164 #>  [7639,]  149  154  156  165  163  170  168  165  162   163 #>  [7640,]  149  154  156  165  163  170  168  165  163   164 #>  [7641,]  149  154  156  165  163  170  168  165  163   164 #>  [7642,]  149  154  156  165  163  170  168  165  163   164 #>  [7643,]  149  154  156  165  163  170  168  165  163   164 #>  [7644,]  149  154  156  165  163  170  168  165  162   163 #>  [7645,]  149  154  156  165  163  170  168  165  163   164 #>  [7646,]  149  154  156  165  163  170  168  165  162   163 #>  [7647,]  149  154  156  165  163  170  168  165  163   164 #>  [7648,]  149  154  156  165  163  170  168  165  163   164 #>  [7649,]  149  154  156  165  163  170  168  165  162   163 #>  [7650,]  149  154  156  165  163  170  168  165  162   163 #>  [7651,]  149  154  156  165  163  170  168  165  163   164 #>  [7652,]  149  154  156  165  163  170  168  165  163   164 #>  [7653,]  149  154  156  165  163  170  168  165  162   163 #>  [7654,]  149  154  156  165  163  170  168  165  163   164 #>  [7655,]  149  154  156  165  163  170  168  165  162   163 #>  [7656,]  149  154  156  165  163  170  168  165  162   163 #>  [7657,]  149  154  156  165  163  170  168  165  163   164 #>  [7658,]  150  155  157  166  164  171  169  165  163   164 #>  [7659,]  149  154  156  165  163  170  168  165  162   163 #>  [7660,]  149  154  156  165  163  170  168  165  163   164 #>  [7661,]  149  154  156  165  163  170  168  165  163   164 #>  [7662,]  149  154  156  165  163  170  168  165  163   164 #>  [7663,]  149  154  156  165  163  170  168  165  163   164 #>  [7664,]  150  155  157  166  164  171  169  165  163   164 #>  [7665,]  149  154  156  165  163  170  168  165  162   163 #>  [7666,]  149  154  156  165  163  170  168  165  162   163 #>  [7667,]  149  154  156  165  163  170  168  165  163   164 #>  [7668,]  149  154  156  165  163  170  168  165  163   164 #>  [7669,]  149  154  156  165  163  170  168  165  163   164 #>  [7670,]  149  154  156  165  163  170  168  165  162   163 #>  [7671,]  149  154  156  165  163  170  168  165  163   164 #>  [7672,]  149  154  156  165  163  170  168  165  163   164 #>  [7673,]  149  154  156  165  163  170  168  165  163   164 #>  [7674,]  149  154  156  165  163  170  168  165  163   164 #>  [7675,]  149  154  156  165  163  170  168  165  163   164 #>  [7676,]  149  154  156  165  163  170  168  165  163   164 #>  [7677,]  150  155  157  166  164  171  169  165  163   164 #>  [7678,]  149  154  156  165  163  170  168  165  163   164 #>  [7679,]  149  154  156  165  163  170  168  165  163   164 #>  [7680,]  149  154  156  165  163  170  168  165  163   164 #>  [7681,]  150  155  157  166  164  171  169  165  163   164 #>  [7682,]  149  154  156  165  163  170  168  165  163   164 #>  [7683,]  149  154  156  165  163  170  168  165  163   164 #>  [7684,]  149  154  156  165  163  170  168  165  162   163 #>  [7685,]  149  154  156  165  163  170  168  165  163   164 #>  [7686,]  149  154  156  165  163  170  168  165  162   163 #>  [7687,]  150  155  157  166  164  171  169  165  163   164 #>  [7688,]  149  154  156  165  163  170  168  165  163   164 #>  [7689,]  149  154  156  165  163  170  168  165  163   164 #>  [7690,]  149  154  156  165  163  170  168  165  162   163 #>  [7691,]  149  154  156  165  163  170  168  165  163   164 #>  [7692,]  149  154  156  165  163  170  168  165  163   164 #>  [7693,]  149  154  156  165  163  170  168  165  163   164 #>  [7694,]  149  154  156  165  163  170  168  165  163   164 #>  [7695,]  149  154  156  165  163  170  168  165  163   164 #>  [7696,]  149  154  156  165  163  170  168  165  163   164 #>  [7697,]  149  154  156  165  163  170  168  165  163   164 #>  [7698,]  149  154  156  165  163  170  168  165  162   163 #>  [7699,]  149  154  156  165  163  170  168  165  163   164 #>  [7700,]  149  154  156  165  163  170  168  165  162   163 #>  [7701,]  151  157  159  168  166  173  170  166  164   165 #>  [7702,]  151  156  158  167  165  172  172  167  165   167 #>  [7703,]  151  156  158  167  165  172  171  167  165   166 #>  [7704,]  151  156  158  167  165  172  171  167  165   167 #>  [7705,]  151  157  159  168  166  173  170  166  164   165 #>  [7706,]  151  156  158  167  165  172  172  167  165   167 #>  [7707,]  151  156  158  167  165  172  171  167  165   167 #>  [7708,]  151  156  158  167  165  172  171  167  165   167 #>  [7709,]  151  156  158  167  165  172  171  167  165   167 #>  [7710,]  151  157  159  169  166  173  170  166  164   165 #>  [7711,]  151  157  159  168  166  173  170  166  164   165 #>  [7712,]  151  157  159  169  166  173  170  166  164   165 #>  [7713,]  151  156  158  167  165  172  172  167  165   167 #>  [7714,]  151  157  159  168  166  173  170  166  164   165 #>  [7715,]  151  157  159  168  166  173  170  166  164   165 #>  [7716,]  151  156  158  167  165  172  172  167  165   167 #>  [7717,]  151  157  159  169  166  173  170  166  164   165 #>  [7718,]  151  157  159  169  166  173  170  166  164   165 #>  [7719,]  151  156  158  167  165  172  171  167  165   167 #>  [7720,]  151  156  158  167  165  172  171  167  165   167 #>  [7721,]  151  156  158  167  165  172  172  167  165   166 #>  [7722,]  151  157  159  168  166  173  170  166  164   165 #>  [7723,]  151  156  158  167  165  172  171  167  165   167 #>  [7724,]  151  156  158  167  165  172  171  167  165   167 #>  [7725,]  151  156  158  167  165  172  171  167  165   167 #>  [7726,]  151  157  159  168  166  173  170  166  164   165 #>  [7727,]  151  157  159  169  166  173  170  166  164   165 #>  [7728,]  151  156  158  167  165  172  171  167  165   166 #>  [7729,]  151  156  158  167  165  172  172  167  165   167 #>  [7730,]  151  156  158  167  165  172  171  167  165   167 #>  [7731,]  151  157  159  169  166  173  170  166  164   165 #>  [7732,]  151  157  159  169  166  173  170  166  164   165 #>  [7733,]  151  156  158  167  165  172  172  167  165   167 #>  [7734,]  151  156  158  167  165  172  171  167  165   166 #>  [7735,]  151  156  158  167  165  172  172  167  165   167 #>  [7736,]  151  156  158  167  165  172  171  167  165   167 #>  [7737,]  151  156  158  167  165  172  171  167  165   167 #>  [7738,]  151  157  159  168  166  173  170  166  164   165 #>  [7739,]  151  156  158  167  165  172  171  167  165   167 #>  [7740,]  151  156  158  167  165  172  171  167  165   166 #>  [7741,]  151  156  158  167  165  172  172  167  165   167 #>  [7742,]  151  156  158  167  165  172  171  167  165   167 #>  [7743,]  151  157  159  168  166  173  170  166  164   165 #>  [7744,]  151  156  158  167  165  172  172  167  165   167 #>  [7745,]  151  156  158  167  165  172  171  167  165   167 #>  [7746,]  151  156  158  167  165  172  171  167  165   167 #>  [7747,]  151  157  159  168  166  173  170  166  164   165 #>  [7748,]  151  156  158  167  165  172  171  167  165   166 #>  [7749,]  151  156  158  167  165  172  171  167  165   167 #>  [7750,]  151  156  158  167  165  172  172  167  165   167 #>  [7751,]  151  156  158  167  165  172  171  167  165   167 #>  [7752,]  151  157  159  168  166  173  170  166  164   165 #>  [7753,]  151  156  158  167  165  172  171  167  165   167 #>  [7754,]  151  156  158  167  165  172  171  167  165   167 #>  [7755,]  151  156  158  167  165  172  171  167  165   167 #>  [7756,]  151  156  158  167  165  172  171  167  165   167 #>  [7757,]  151  156  158  167  165  172  171  167  165   167 #>  [7758,]  151  157  159  168  166  173  170  166  164   165 #>  [7759,]  151  157  159  168  166  173  170  166  164   165 #>  [7760,]  151  156  158  167  165  172  171  167  165   167 #>  [7761,]  151  157  159  169  166  173  170  166  164   165 #>  [7762,]  151  156  158  167  165  172  171  167  165   167 #>  [7763,]  151  156  158  167  165  172  171  167  165   167 #>  [7764,]  151  156  158  167  165  172  171  167  165   167 #>  [7765,]  151  156  158  167  165  172  171  167  165   167 #>  [7766,]  151  157  159  168  166  173  170  166  164   165 #>  [7767,]  151  156  158  167  165  172  171  167  165   167 #>  [7768,]  151  156  158  167  165  172  172  167  165   167 #>  [7769,]  151  156  158  167  165  172  171  167  165   167 #>  [7770,]  151  157  159  169  166  173  170  166  164   165 #>  [7771,]  151  157  159  168  166  173  170  166  164   165 #>  [7772,]  151  156  158  167  165  172  171  167  165   167 #>  [7773,]  151  156  158  167  165  172  172  167  165   167 #>  [7774,]  151  156  158  167  165  172  171  167  165   166 #>  [7775,]  151  157  159  169  166  173  170  166  164   165 #>  [7776,]  151  156  158  167  165  172  172  167  165   167 #>  [7777,]  151  157  159  168  166  173  170  166  164   165 #>  [7778,]  151  156  158  167  165  172  171  167  165   167 #>  [7779,]  151  157  159  168  166  173  170  166  164   165 #>  [7780,]  151  156  158  167  165  172  171  167  165   167 #>  [7781,]  151  156  158  167  165  172  172  167  165   167 #>  [7782,]  151  156  158  167  165  172  171  167  165   166 #>  [7783,]  151  156  158  167  165  172  172  167  165   167 #>  [7784,]  151  156  158  167  165  172  171  167  165   167 #>  [7785,]  151  156  158  167  165  172  171  167  165   167 #>  [7786,]  151  156  158  167  165  172  172  167  165   167 #>  [7787,]  151  157  159  168  166  173  170  166  164   165 #>  [7788,]  151  156  158  167  165  172  171  167  165   167 #>  [7789,]  151  156  158  167  165  172  171  167  165   167 #>  [7790,]  151  157  159  168  166  173  170  166  164   165 #>  [7791,]  151  157  159  168  166  173  170  166  164   165 #>  [7792,]  151  157  159  168  166  173  170  166  164   165 #>  [7793,]  151  156  158  167  165  172  172  167  165   167 #>  [7794,]  151  156  158  167  165  172  172  167  165   167 #>  [7795,]  151  157  159  168  166  173  170  166  164   165 #>  [7796,]  151  156  158  167  165  172  172  167  165   167 #>  [7797,]  151  156  158  167  165  172  171  167  165   167 #>  [7798,]  151  156  158  167  165  172  171  167  165   166 #>  [7799,]  151  156  158  167  165  172  172  167  165   167 #>  [7800,]  151  157  159  168  166  173  170  166  164   165 #>  [7801,]  152  158  160  170  167  174  173  168  166   168 #>  [7802,]  153  159  161  171  169  175  174  168  166   168 #>  [7803,]  152  158  160  170  167  174  173  168  166   168 #>  [7804,]  153  159  161  171  168  175  174  168  166   168 #>  [7805,]  153  159  161  171  168  175  174  168  166   168 #>  [7806,]  152  158  160  170  167  174  173  168  166   168 #>  [7807,]  153  159  161  171  168  175  174  168  166   168 #>  [7808,]  153  159  161  171  168  175  174  168  167   169 #>  [7809,]  153  159  161  171  168  175  174  168  167   169 #>  [7810,]  153  159  161  171  168  175  174  168  166   168 #>  [7811,]  152  158  160  170  167  174  173  168  166   168 #>  [7812,]  153  159  161  171  168  175  174  168  166   168 #>  [7813,]  153  159  161  171  169  175  174  168  166   168 #>  [7814,]  152  158  160  170  167  174  173  168  166   168 #>  [7815,]  153  159  161  171  169  175  174  168  166   168 #>  [7816,]  152  158  160  170  167  174  173  168  166   168 #>  [7817,]  153  159  161  171  169  175  174  168  166   168 #>  [7818,]  153  159  161  171  168  175  174  168  166   168 #>  [7819,]  152  158  160  170  167  174  173  168  166   168 #>  [7820,]  153  159  161  171  168  175  174  168  166   168 #>  [7821,]  153  159  161  171  169  175  174  168  166   168 #>  [7822,]  153  159  161  171  169  175  174  168  166   168 #>  [7823,]  153  159  161  171  168  175  174  168  166   168 #>  [7824,]  153  159  161  171  168  175  174  168  166   168 #>  [7825,]  153  159  161  171  168  175  174  168  166   168 #>  [7826,]  153  159  161  171  169  175  174  168  167   169 #>  [7827,]  153  159  161  171  169  175  174  168  166   168 #>  [7828,]  152  158  160  170  167  174  173  168  166   168 #>  [7829,]  153  159  161  171  169  175  174  168  166   168 #>  [7830,]  153  159  161  171  168  175  174  168  166   168 #>  [7831,]  153  159  161  171  168  175  174  168  166   168 #>  [7832,]  153  159  161  171  168  175  174  168  166   168 #>  [7833,]  153  159  161  171  169  175  174  168  166   168 #>  [7834,]  152  158  160  170  167  174  173  168  166   168 #>  [7835,]  152  158  160  170  167  174  173  168  166   168 #>  [7836,]  153  159  161  171  168  175  174  168  166   168 #>  [7837,]  152  158  160  170  167  174  173  168  166   168 #>  [7838,]  152  158  160  170  167  174  173  168  166   168 #>  [7839,]  153  159  161  171  168  175  174  168  166   168 #>  [7840,]  153  159  161  171  168  175  174  168  166   168 #>  [7841,]  153  159  161  171  169  175  174  168  166   168 #>  [7842,]  152  158  160  170  167  174  173  168  166   168 #>  [7843,]  153  159  161  171  168  175  174  168  167   169 #>  [7844,]  153  159  161  171  169  175  174  168  166   168 #>  [7845,]  152  158  160  170  167  174  173  168  166   168 #>  [7846,]  153  159  161  171  168  175  174  168  166   168 #>  [7847,]  153  159  161  171  169  175  174  168  166   168 #>  [7848,]  153  159  161  171  168  175  174  168  166   168 #>  [7849,]  152  158  160  170  167  174  173  168  166   168 #>  [7850,]  153  159  161  171  169  175  174  168  166   168 #>  [7851,]  153  159  161  171  168  175  174  168  166   168 #>  [7852,]  152  158  160  170  167  174  173  168  166   168 #>  [7853,]  153  159  161  171  168  175  174  168  166   168 #>  [7854,]  153  159  161  171  168  175  174  168  166   168 #>  [7855,]  153  159  161  171  168  175  174  168  166   168 #>  [7856,]  153  159  161  171  168  175  174  168  167   169 #>  [7857,]  153  159  161  171  168  175  174  168  166   168 #>  [7858,]  153  159  161  171  169  175  174  168  166   168 #>  [7859,]  153  159  161  171  169  175  174  168  166   168 #>  [7860,]  153  159  161  171  168  175  174  168  166   168 #>  [7861,]  153  159  161  171  169  175  174  168  167   169 #>  [7862,]  153  159  161  171  168  175  174  168  166   168 #>  [7863,]  153  159  161  171  168  175  174  168  166   168 #>  [7864,]  152  158  160  170  167  174  173  168  166   168 #>  [7865,]  153  159  161  171  168  175  174  168  166   168 #>  [7866,]  153  159  161  171  168  175  174  168  166   168 #>  [7867,]  153  159  161  171  168  175  174  168  166   168 #>  [7868,]  152  158  160  170  167  174  173  168  166   168 #>  [7869,]  153  159  161  171  168  175  174  168  166   168 #>  [7870,]  153  159  161  171  169  175  174  168  166   168 #>  [7871,]  153  159  161  171  169  175  174  168  166   168 #>  [7872,]  152  158  160  170  167  174  173  168  166   168 #>  [7873,]  152  158  160  170  167  174  173  168  166   168 #>  [7874,]  153  159  161  171  168  175  174  168  166   168 #>  [7875,]  153  159  161  171  168  175  174  168  166   168 #>  [7876,]  153  159  161  171  169  175  174  168  167   169 #>  [7877,]  152  158  160  170  167  174  173  168  166   168 #>  [7878,]  153  159  161  171  168  175  174  168  166   168 #>  [7879,]  153  159  161  171  169  175  174  168  166   168 #>  [7880,]  153  159  161  171  168  175  174  168  166   168 #>  [7881,]  153  159  161  171  169  175  174  168  166   168 #>  [7882,]  153  159  161  171  168  175  174  168  166   168 #>  [7883,]  153  159  161  171  169  175  174  168  166   168 #>  [7884,]  153  159  161  171  168  175  174  168  166   168 #>  [7885,]  153  159  161  171  168  175  174  168  166   168 #>  [7886,]  153  159  161  171  169  175  174  168  166   168 #>  [7887,]  153  159  161  171  168  175  174  168  166   168 #>  [7888,]  153  159  161  171  168  175  174  168  166   168 #>  [7889,]  152  158  160  170  167  174  173  168  166   168 #>  [7890,]  153  159  161  171  169  175  174  168  166   168 #>  [7891,]  153  159  161  171  168  175  174  168  166   168 #>  [7892,]  153  159  161  171  168  175  174  168  166   168 #>  [7893,]  153  159  161  171  169  175  174  168  166   168 #>  [7894,]  152  158  160  170  167  174  173  168  166   168 #>  [7895,]  153  159  161  171  168  175  174  168  166   168 #>  [7896,]  152  158  160  170  167  174  173  168  166   168 #>  [7897,]  152  158  160  170  167  174  173  168  166   168 #>  [7898,]  153  159  161  171  168  175  174  168  166   168 #>  [7899,]  153  159  161  171  169  175  174  168  166   168 #>  [7900,]  152  158  160  170  167  174  173  168  166   168 #>  [7901,]  155  162  164  174  172  178  176  170  169   171 #>  [7902,]  154  160  162  172  170  176  175  169  168   170 #>  [7903,]  154  160  162  172  170  176  175  169  168   170 #>  [7904,]  154  160  162  172  170  176  175  169  168   170 #>  [7905,]  155  162  164  174  172  178  176  170  169   171 #>  [7906,]  154  160  162  172  170  176  175  169  168   170 #>  [7907,]  154  160  162  172  170  176  175  169  168   170 #>  [7908,]  154  160  162  172  170  176  175  169  168   170 #>  [7909,]  154  160  162  172  170  176  175  169  168   170 #>  [7910,]  155  161  163  173  171  177  176  170  169   171 #>  [7911,]  155  161  163  173  171  177  176  170  169   171 #>  [7912,]  155  161  163  173  171  177  176  170  169   171 #>  [7913,]  154  160  162  172  170  176  175  169  168   170 #>  [7914,]  155  162  164  174  172  178  176  170  169   171 #>  [7915,]  155  162  164  174  172  178  176  170  169   171 #>  [7916,]  154  160  162  172  170  176  175  169  168   170 #>  [7917,]  155  161  163  173  171  177  176  170  169   171 #>  [7918,]  155  162  164  174  172  178  176  170  169   171 #>  [7919,]  154  160  162  172  170  176  175  169  168   170 #>  [7920,]  154  160  162  172  170  176  175  169  168   170 #>  [7921,]  154  160  162  172  170  176  175  169  168   170 #>  [7922,]  155  161  163  173  171  177  176  170  169   171 #>  [7923,]  154  160  162  172  170  176  175  169  168   170 #>  [7924,]  154  160  162  172  170  176  175  169  168   170 #>  [7925,]  154  160  162  172  170  176  175  169  168   170 #>  [7926,]  155  162  164  174  172  178  176  170  169   171 #>  [7927,]  155  162  164  174  172  178  176  170  169   171 #>  [7928,]  154  160  162  172  170  176  175  169  168   170 #>  [7929,]  154  160  162  172  170  176  175  169  168   170 #>  [7930,]  154  160  162  172  170  176  175  169  168   170 #>  [7931,]  155  162  164  174  172  178  176  170  169   171 #>  [7932,]  155  162  164  174  172  178  176  170  169   171 #>  [7933,]  154  160  162  172  170  176  175  169  168   170 #>  [7934,]  154  160  162  172  170  176  175  169  168   170 #>  [7935,]  154  160  162  172  170  176  175  169  168   170 #>  [7936,]  154  160  162  172  170  176  175  169  168   170 #>  [7937,]  154  160  162  172  170  176  175  169  168   170 #>  [7938,]  155  161  163  173  171  177  176  170  169   171 #>  [7939,]  154  160  162  172  170  176  175  169  168   170 #>  [7940,]  154  160  162  172  170  176  175  169  168   170 #>  [7941,]  154  160  162  172  170  176  175  169  168   170 #>  [7942,]  154  160  162  172  170  176  175  169  168   170 #>  [7943,]  155  162  164  174  172  178  176  170  169   171 #>  [7944,]  154  160  162  172  170  176  175  169  168   170 #>  [7945,]  154  160  162  172  170  176  175  169  168   170 #>  [7946,]  154  160  162  172  170  176  175  169  168   170 #>  [7947,]  155  161  163  173  171  177  176  170  169   171 #>  [7948,]  154  160  162  172  170  176  175  169  168   170 #>  [7949,]  154  160  162  172  170  176  175  169  168   170 #>  [7950,]  154  160  162  172  170  176  175  169  168   170 #>  [7951,]  154  160  162  172  170  176  175  169  168   170 #>  [7952,]  155  161  163  173  171  177  176  170  169   171 #>  [7953,]  154  160  162  172  170  176  175  169  168   170 #>  [7954,]  154  160  162  172  170  176  175  169  168   170 #>  [7955,]  154  160  162  172  170  176  175  169  168   170 #>  [7956,]  154  160  162  172  170  176  175  169  168   170 #>  [7957,]  154  160  162  172  170  176  175  169  168   170 #>  [7958,]  155  162  164  174  172  178  176  170  169   171 #>  [7959,]  155  162  164  174  172  178  176  170  169   171 #>  [7960,]  154  160  162  172  170  176  175  169  168   170 #>  [7961,]  155  162  164  174  172  178  176  170  169   171 #>  [7962,]  154  160  162  172  170  176  175  169  168   170 #>  [7963,]  154  160  162  172  170  176  175  169  168   170 #>  [7964,]  154  160  162  172  170  176  175  169  168   170 #>  [7965,]  154  160  162  172  170  176  175  169  168   170 #>  [7966,]  155  162  164  174  172  178  176  170  169   171 #>  [7967,]  154  160  162  172  170  176  175  169  168   170 #>  [7968,]  154  160  162  172  170  176  175  169  168   170 #>  [7969,]  154  160  162  172  170  176  175  169  168   170 #>  [7970,]  155  162  164  174  172  178  176  170  169   171 #>  [7971,]  155  162  164  174  172  178  176  170  169   171 #>  [7972,]  154  160  162  172  170  176  175  169  168   170 #>  [7973,]  154  160  162  172  170  176  175  169  168   170 #>  [7974,]  154  160  162  172  170  176  175  169  168   170 #>  [7975,]  155  162  164  174  172  178  176  170  169   171 #>  [7976,]  154  160  162  172  170  176  175  169  168   170 #>  [7977,]  155  161  163  173  171  177  176  170  169   171 #>  [7978,]  154  160  162  172  170  176  175  169  168   170 #>  [7979,]  155  162  164  174  172  178  176  170  169   171 #>  [7980,]  154  160  162  172  170  176  175  169  168   170 #>  [7981,]  154  160  162  172  170  176  175  169  168   170 #>  [7982,]  154  160  162  172  170  176  175  169  168   170 #>  [7983,]  154  160  162  172  170  176  175  169  168   170 #>  [7984,]  154  160  162  172  170  176  175  169  168   170 #>  [7985,]  154  160  162  172  170  176  175  169  168   170 #>  [7986,]  154  160  162  172  170  176  175  169  168   170 #>  [7987,]  155  162  164  174  172  178  176  170  169   171 #>  [7988,]  154  160  162  172  170  176  175  169  168   170 #>  [7989,]  154  160  162  172  170  176  175  169  168   170 #>  [7990,]  155  161  163  173  171  177  176  170  169   171 #>  [7991,]  155  162  164  174  172  178  176  170  169   171 #>  [7992,]  155  161  163  173  171  177  176  170  169   171 #>  [7993,]  154  160  162  172  170  176  175  169  168   170 #>  [7994,]  154  160  162  172  170  176  175  169  168   170 #>  [7995,]  155  162  164  174  172  178  176  170  169   171 #>  [7996,]  154  160  162  172  170  176  175  169  168   170 #>  [7997,]  154  160  162  172  170  176  175  169  168   170 #>  [7998,]  154  160  162  172  170  176  175  169  168   170 #>  [7999,]  154  160  162  172  170  176  175  169  168   170 #>  [8000,]  155  162  164  174  172  178  176  170  169   171 #>  [8001,]  157  164  166  176  174  180  178  172  171   173 #>  [8002,]  157  164  166  176  174  180  178  172  171   173 #>  [8003,]  156  163  165  175  173  179  177  171  170   172 #>  [8004,]  157  164  166  176  174  180  178  172  171   173 #>  [8005,]  157  164  166  176  174  180  178  172  171   173 #>  [8006,]  156  163  165  175  173  179  177  171  170   172 #>  [8007,]  156  163  165  175  173  179  177  171  170   172 #>  [8008,]  157  164  166  176  174  180  178  172  171   173 #>  [8009,]  157  164  166  176  174  180  178  172  171   173 #>  [8010,]  157  164  166  176  174  180  178  172  171   173 #>  [8011,]  157  164  166  176  174  180  178  172  171   173 #>  [8012,]  157  164  166  176  174  180  178  172  171   173 #>  [8013,]  157  164  166  176  174  180  178  172  171   173 #>  [8014,]  157  164  166  176  174  180  178  172  171   173 #>  [8015,]  157  164  166  176  174  180  178  172  171   173 #>  [8016,]  157  164  166  176  174  180  178  172  171   173 #>  [8017,]  157  164  166  176  174  180  178  172  171   173 #>  [8018,]  157  164  166  176  174  180  178  172  171   173 #>  [8019,]  157  164  166  176  174  180  178  172  171   173 #>  [8020,]  156  163  165  175  173  179  177  171  170   172 #>  [8021,]  156  163  165  175  173  179  177  171  170   172 #>  [8022,]  157  164  166  176  174  180  178  172  171   173 #>  [8023,]  156  163  165  175  173  179  177  171  170   172 #>  [8024,]  157  164  166  176  174  180  178  172  171   173 #>  [8025,]  156  163  165  175  173  179  177  171  170   172 #>  [8026,]  157  164  166  176  174  180  178  172  171   173 #>  [8027,]  157  164  166  176  174  180  178  172  171   173 #>  [8028,]  157  164  166  176  174  180  178  172  171   173 #>  [8029,]  157  164  166  176  174  180  178  172  171   173 #>  [8030,]  157  164  166  176  174  180  178  172  171   173 #>  [8031,]  157  164  166  176  174  180  178  172  171   173 #>  [8032,]  157  164  166  176  174  180  178  172  171   173 #>  [8033,]  157  164  166  176  174  180  178  172  171   173 #>  [8034,]  156  163  165  175  173  179  177  171  170   172 #>  [8035,]  156  163  165  175  173  179  177  171  170   172 #>  [8036,]  157  164  166  176  174  180  178  172  171   173 #>  [8037,]  156  163  165  175  173  179  177  171  170   172 #>  [8038,]  157  164  166  176  174  180  178  172  171   173 #>  [8039,]  157  164  166  176  174  180  178  172  171   173 #>  [8040,]  157  164  166  176  174  180  178  172  171   173 #>  [8041,]  157  164  166  176  174  180  178  172  171   173 #>  [8042,]  156  163  165  175  173  179  177  171  170   172 #>  [8043,]  157  164  166  176  174  180  178  172  171   173 #>  [8044,]  156  163  165  175  173  179  177  171  170   172 #>  [8045,]  157  164  166  176  174  180  178  172  171   173 #>  [8046,]  157  164  166  176  174  180  178  172  171   173 #>  [8047,]  157  164  166  176  174  180  178  172  171   173 #>  [8048,]  157  164  166  176  174  180  178  172  171   173 #>  [8049,]  157  164  166  176  174  180  178  172  171   173 #>  [8050,]  157  164  166  176  174  180  178  172  171   173 #>  [8051,]  157  164  166  176  174  180  178  172  171   173 #>  [8052,]  157  164  166  176  174  180  178  172  171   173 #>  [8053,]  156  163  165  175  173  179  177  171  170   172 #>  [8054,]  156  163  165  175  173  179  177  171  170   172 #>  [8055,]  156  163  165  175  173  179  177  171  170   172 #>  [8056,]  156  163  165  175  173  179  177  171  170   172 #>  [8057,]  156  163  165  175  173  179  177  171  170   172 #>  [8058,]  157  164  166  176  174  180  178  172  171   173 #>  [8059,]  157  164  166  176  174  180  178  172  171   173 #>  [8060,]  157  164  166  176  174  180  178  172  171   173 #>  [8061,]  157  164  166  176  174  180  178  172  171   173 #>  [8062,]  157  164  166  176  174  180  178  172  171   173 #>  [8063,]  157  164  166  176  174  180  178  172  171   173 #>  [8064,]  156  163  165  175  173  179  177  171  170   172 #>  [8065,]  156  163  165  175  173  179  177  171  170   172 #>  [8066,]  157  164  166  176  174  180  178  172  171   173 #>  [8067,]  157  164  166  176  174  180  178  172  171   173 #>  [8068,]  157  164  166  176  174  180  178  172  171   173 #>  [8069,]  157  164  166  176  174  180  178  172  171   173 #>  [8070,]  157  164  166  176  174  180  178  172  171   173 #>  [8071,]  157  164  166  176  174  180  178  172  171   173 #>  [8072,]  157  164  166  176  174  180  178  172  171   173 #>  [8073,]  156  163  165  175  173  179  177  171  170   172 #>  [8074,]  156  163  165  175  173  179  177  171  170   172 #>  [8075,]  157  164  166  176  174  180  178  172  171   173 #>  [8076,]  157  164  166  176  174  180  178  172  171   173 #>  [8077,]  157  164  166  176  174  180  178  172  171   173 #>  [8078,]  157  164  166  176  174  180  178  172  171   173 #>  [8079,]  157  164  166  176  174  180  178  172  171   173 #>  [8080,]  156  163  165  175  173  179  177  171  170   172 #>  [8081,]  157  164  166  176  174  180  178  172  171   173 #>  [8082,]  156  163  165  175  173  179  177  171  170   172 #>  [8083,]  157  164  166  176  174  180  178  172  171   173 #>  [8084,]  156  163  165  175  173  179  177  171  170   172 #>  [8085,]  156  163  165  175  173  179  177  171  170   172 #>  [8086,]  156  163  165  175  173  179  177  171  170   172 #>  [8087,]  157  164  166  176  174  180  178  172  171   173 #>  [8088,]  156  163  165  175  173  179  177  171  170   172 #>  [8089,]  156  163  165  175  173  179  177  171  170   172 #>  [8090,]  157  164  166  176  174  180  178  172  171   173 #>  [8091,]  157  164  166  176  174  180  178  172  171   173 #>  [8092,]  157  164  166  176  174  180  178  172  171   173 #>  [8093,]  157  164  166  176  174  180  178  172  171   173 #>  [8094,]  156  163  165  175  173  179  177  171  170   172 #>  [8095,]  157  164  166  176  174  180  178  172  171   173 #>  [8096,]  157  164  166  176  174  180  178  172  171   173 #>  [8097,]  157  164  166  176  174  180  178  172  171   173 #>  [8098,]  156  163  165  175  173  179  177  171  170   172 #>  [8099,]  156  163  165  175  173  179  177  171  170   172 #>  [8100,]  157  164  166  176  174  180  178  172  171   173 #>  [8101,]  158  165  167  177  175  181  179  173  172   174 #>  [8102,]  159  166  168  178  176  182  180  174  173   175 #>  [8103,]  159  166  168  178  176  182  180  174  173   175 #>  [8104,]  158  165  167  177  175  181  179  173  172   174 #>  [8105,]  158  165  167  177  175  181  179  173  172   174 #>  [8106,]  159  166  168  178  176  182  180  174  173   175 #>  [8107,]  159  166  168  178  176  182  180  174  173   175 #>  [8108,]  158  165  167  177  175  181  179  173  172   174 #>  [8109,]  158  165  167  177  175  181  179  173  172   174 #>  [8110,]  158  165  167  177  175  181  179  173  172   174 #>  [8111,]  158  165  167  177  175  181  179  173  172   174 #>  [8112,]  159  166  168  178  176  182  180  174  173   175 #>  [8113,]  158  165  167  177  175  181  179  173  172   174 #>  [8114,]  158  165  167  177  175  181  179  173  172   174 #>  [8115,]  158  165  167  177  175  181  179  173  172   174 #>  [8116,]  158  165  167  177  175  181  179  173  172   174 #>  [8117,]  158  165  167  177  175  181  179  173  172   174 #>  [8118,]  159  166  168  178  176  182  180  174  173   175 #>  [8119,]  159  166  168  178  176  182  180  174  173   175 #>  [8120,]  159  166  168  178  176  182  180  174  173   175 #>  [8121,]  158  165  167  177  175  181  179  173  172   174 #>  [8122,]  158  165  167  177  175  181  179  173  172   174 #>  [8123,]  159  166  168  178  176  182  180  174  173   175 #>  [8124,]  158  165  167  177  175  181  179  173  172   174 #>  [8125,]  159  166  168  178  176  182  180  174  173   175 #>  [8126,]  158  165  167  177  175  181  179  173  172   174 #>  [8127,]  158  165  167  177  175  181  179  173  172   174 #>  [8128,]  159  166  168  178  176  182  180  174  173   175 #>  [8129,]  158  165  167  177  175  181  179  173  172   174 #>  [8130,]  158  165  167  177  175  181  179  173  172   174 #>  [8131,]  159  166  168  178  176  182  180  174  173   175 #>  [8132,]  159  166  168  178  176  182  180  174  173   175 #>  [8133,]  159  166  168  178  176  182  180  174  173   175 #>  [8134,]  159  166  168  178  176  182  180  174  173   175 #>  [8135,]  158  165  167  177  175  181  179  173  172   174 #>  [8136,]  158  165  167  177  175  181  179  173  172   174 #>  [8137,]  158  165  167  177  175  181  179  173  172   174 #>  [8138,]  158  165  167  177  175  181  179  173  172   174 #>  [8139,]  158  165  167  177  175  181  179  173  172   174 #>  [8140,]  159  166  168  178  176  182  180  174  173   175 #>  [8141,]  158  165  167  177  175  181  179  173  172   174 #>  [8142,]  159  166  168  178  176  182  180  174  173   175 #>  [8143,]  158  165  167  177  175  181  179  173  172   174 #>  [8144,]  158  165  167  177  175  181  179  173  172   174 #>  [8145,]  158  165  167  177  175  181  179  173  172   174 #>  [8146,]  158  165  167  177  175  181  179  173  172   174 #>  [8147,]  158  165  167  177  175  181  179  173  172   174 #>  [8148,]  159  166  168  178  176  182  180  174  173   175 #>  [8149,]  158  165  167  177  175  181  179  173  172   174 #>  [8150,]  158  165  167  177  175  181  179  173  172   174 #>  [8151,]  158  165  167  177  175  181  179  173  172   174 #>  [8152,]  158  165  167  177  175  181  179  173  172   174 #>  [8153,]  158  165  167  177  175  181  179  173  172   174 #>  [8154,]  158  165  167  177  175  181  179  173  172   174 #>  [8155,]  158  165  167  177  175  181  179  173  172   174 #>  [8156,]  159  166  168  178  176  182  180  174  173   175 #>  [8157,]  158  165  167  177  175  181  179  173  172   174 #>  [8158,]  158  165  167  177  175  181  179  173  172   174 #>  [8159,]  158  165  167  177  175  181  179  173  172   174 #>  [8160,]  159  166  168  178  176  182  180  174  173   175 #>  [8161,]  158  165  167  177  175  181  179  173  172   174 #>  [8162,]  158  165  167  177  175  181  179  173  172   174 #>  [8163,]  158  165  167  177  175  181  179  173  172   174 #>  [8164,]  159  166  168  178  176  182  180  174  173   175 #>  [8165,]  159  166  168  178  176  182  180  174  173   175 #>  [8166,]  158  165  167  177  175  181  179  173  172   174 #>  [8167,]  158  165  167  177  175  181  179  173  172   174 #>  [8168,]  158  165  167  177  175  181  179  173  172   174 #>  [8169,]  158  165  167  177  175  181  179  173  172   174 #>  [8170,]  159  166  168  178  176  182  180  174  173   175 #>  [8171,]  159  166  168  178  176  182  180  174  173   175 #>  [8172,]  158  165  167  177  175  181  179  173  172   174 #>  [8173,]  159  166  168  178  176  182  180  174  173   175 #>  [8174,]  158  165  167  177  175  181  179  173  172   174 #>  [8175,]  158  165  167  177  175  181  179  173  172   174 #>  [8176,]  158  165  167  177  175  181  179  173  172   174 #>  [8177,]  158  165  167  177  175  181  179  173  172   174 #>  [8178,]  159  166  168  178  176  182  180  174  173   175 #>  [8179,]  158  165  167  177  175  181  179  173  172   174 #>  [8180,]  158  165  167  177  175  181  179  173  172   174 #>  [8181,]  158  165  167  177  175  181  179  173  172   174 #>  [8182,]  158  165  167  177  175  181  179  173  172   174 #>  [8183,]  158  165  167  177  175  181  179  173  172   174 #>  [8184,]  159  166  168  178  176  182  180  174  173   175 #>  [8185,]  158  165  167  177  175  181  179  173  172   174 #>  [8186,]  158  165  167  177  175  181  179  173  172   174 #>  [8187,]  158  165  167  177  175  181  179  173  172   174 #>  [8188,]  158  165  167  177  175  181  179  173  172   174 #>  [8189,]  158  165  167  177  175  181  179  173  172   174 #>  [8190,]  158  165  167  177  175  181  179  173  172   174 #>  [8191,]  158  165  167  177  175  181  179  173  172   174 #>  [8192,]  158  165  167  177  175  181  179  173  172   174 #>  [8193,]  159  166  168  178  176  182  180  174  173   175 #>  [8194,]  158  165  167  177  175  181  179  173  172   174 #>  [8195,]  158  165  167  177  175  181  179  173  172   174 #>  [8196,]  158  165  167  177  175  181  179  173  172   174 #>  [8197,]  159  166  168  178  176  182  180  174  173   175 #>  [8198,]  159  166  168  178  176  182  180  174  173   175 #>  [8199,]  158  165  167  177  175  181  179  173  172   174 #>  [8200,]  159  166  168  178  176  182  180  174  173   175 #>  [8201,]  161  168  170  180  178  184  182  176  175   177 #>  [8202,]  161  168  170  180  178  184  182  176  175   177 #>  [8203,]  160  167  169  179  177  183  181  175  174   176 #>  [8204,]  161  168  170  180  178  184  182  176  175   177 #>  [8205,]  161  168  170  180  178  184  182  176  175   177 #>  [8206,]  161  168  170  180  178  184  182  176  175   177 #>  [8207,]  160  167  169  179  177  183  181  175  174   176 #>  [8208,]  161  168  170  180  178  184  182  176  175   177 #>  [8209,]  161  168  170  180  178  184  182  176  175   177 #>  [8210,]  161  168  170  180  178  184  182  176  175   177 #>  [8211,]  161  168  170  180  178  184  182  176  175   177 #>  [8212,]  161  168  170  180  178  184  182  176  175   177 #>  [8213,]  161  168  170  180  178  184  182  176  175   177 #>  [8214,]  161  168  170  180  178  184  182  176  175   177 #>  [8215,]  161  168  170  180  178  184  182  176  175   177 #>  [8216,]  161  168  170  180  178  184  182  176  175   177 #>  [8217,]  161  168  170  180  178  184  182  176  175   177 #>  [8218,]  161  168  170  180  178  184  182  176  175   177 #>  [8219,]  161  168  170  180  178  184  182  176  175   177 #>  [8220,]  161  168  170  180  178  184  182  176  175   177 #>  [8221,]  161  168  170  180  178  184  182  176  175   177 #>  [8222,]  161  168  170  180  178  184  182  176  175   177 #>  [8223,]  161  168  170  180  178  184  182  176  175   177 #>  [8224,]  161  168  170  180  178  184  182  176  175   177 #>  [8225,]  161  168  170  180  178  184  182  176  175   177 #>  [8226,]  161  168  170  180  178  184  182  176  175   177 #>  [8227,]  161  168  170  180  178  184  182  176  175   177 #>  [8228,]  161  168  170  180  178  184  182  176  175   177 #>  [8229,]  161  168  170  180  178  184  182  176  175   177 #>  [8230,]  161  168  170  180  178  184  182  176  175   177 #>  [8231,]  161  168  170  180  178  184  182  176  175   177 #>  [8232,]  161  168  170  180  178  184  182  176  175   177 #>  [8233,]  161  168  170  180  178  184  182  176  175   177 #>  [8234,]  161  168  170  180  178  184  182  176  175   177 #>  [8235,]  161  168  170  180  178  184  182  176  175   177 #>  [8236,]  161  168  170  180  178  184  182  176  175   177 #>  [8237,]  161  168  170  180  178  184  182  176  175   177 #>  [8238,]  161  168  170  180  178  184  182  176  175   177 #>  [8239,]  161  168  170  180  178  184  182  176  175   177 #>  [8240,]  161  168  170  180  178  184  182  176  175   177 #>  [8241,]  161  168  170  180  178  184  182  176  175   177 #>  [8242,]  161  168  170  180  178  184  182  176  175   177 #>  [8243,]  161  168  170  180  178  184  182  176  175   177 #>  [8244,]  161  168  170  180  178  184  182  176  175   177 #>  [8245,]  161  168  170  180  178  184  182  176  175   177 #>  [8246,]  161  168  170  180  178  184  182  176  175   177 #>  [8247,]  161  168  170  180  178  184  182  176  175   177 #>  [8248,]  161  168  170  180  178  184  182  176  175   177 #>  [8249,]  160  167  169  179  177  183  181  175  174   176 #>  [8250,]  161  168  170  180  178  184  182  176  175   177 #>  [8251,]  161  168  170  180  178  184  182  176  175   177 #>  [8252,]  161  168  170  180  178  184  182  176  175   177 #>  [8253,]  160  167  169  179  177  183  181  175  174   176 #>  [8254,]  161  168  170  180  178  184  182  176  175   177 #>  [8255,]  160  167  169  179  177  183  181  175  174   176 #>  [8256,]  160  167  169  179  177  183  181  175  174   176 #>  [8257,]  161  168  170  180  178  184  182  176  175   177 #>  [8258,]  161  168  170  180  178  184  182  176  175   177 #>  [8259,]  161  168  170  180  178  184  182  176  175   177 #>  [8260,]  161  168  170  180  178  184  182  176  175   177 #>  [8261,]  161  168  170  180  178  184  182  176  175   177 #>  [8262,]  161  168  170  180  178  184  182  176  175   177 #>  [8263,]  161  168  170  180  178  184  182  176  175   177 #>  [8264,]  161  168  170  180  178  184  182  176  175   177 #>  [8265,]  161  168  170  180  178  184  182  176  175   177 #>  [8266,]  160  167  169  179  177  183  181  175  174   176 #>  [8267,]  161  168  170  180  178  184  182  176  175   177 #>  [8268,]  161  168  170  180  178  184  182  176  175   177 #>  [8269,]  161  168  170  180  178  184  182  176  175   177 #>  [8270,]  161  168  170  180  178  184  182  176  175   177 #>  [8271,]  161  168  170  180  178  184  182  176  175   177 #>  [8272,]  161  168  170  180  178  184  182  176  175   177 #>  [8273,]  161  168  170  180  178  184  182  176  175   177 #>  [8274,]  161  168  170  180  178  184  182  176  175   177 #>  [8275,]  161  168  170  180  178  184  182  176  175   177 #>  [8276,]  161  168  170  180  178  184  182  176  175   177 #>  [8277,]  161  168  170  180  178  184  182  176  175   177 #>  [8278,]  161  168  170  180  178  184  182  176  175   177 #>  [8279,]  161  168  170  180  178  184  182  176  175   177 #>  [8280,]  161  168  170  180  178  184  182  176  175   177 #>  [8281,]  161  168  170  180  178  184  182  176  175   177 #>  [8282,]  161  168  170  180  178  184  182  176  175   177 #>  [8283,]  161  168  170  180  178  184  182  176  175   177 #>  [8284,]  161  168  170  180  178  184  182  176  175   177 #>  [8285,]  161  168  170  180  178  184  182  176  175   177 #>  [8286,]  161  168  170  180  178  184  182  176  175   177 #>  [8287,]  161  168  170  180  178  184  182  176  175   177 #>  [8288,]  161  168  170  180  178  184  182  176  175   177 #>  [8289,]  161  168  170  180  178  184  182  176  175   177 #>  [8290,]  161  168  170  180  178  184  182  176  175   177 #>  [8291,]  161  168  170  180  178  184  182  176  175   177 #>  [8292,]  161  168  170  180  178  184  182  176  175   177 #>  [8293,]  161  168  170  180  178  184  182  176  175   177 #>  [8294,]  161  168  170  180  178  184  182  176  175   177 #>  [8295,]  161  168  170  180  178  184  182  176  175   177 #>  [8296,]  161  168  170  180  178  184  182  176  175   177 #>  [8297,]  161  168  170  180  178  184  182  176  175   177 #>  [8298,]  161  168  170  180  178  184  182  176  175   177 #>  [8299,]  161  168  170  180  178  184  182  176  175   177 #>  [8300,]  161  168  170  180  178  184  182  176  175   177 #>  [8301,]  163  170  172  182  180  186  184  178  177   178 #>  [8302,]  163  170  172  182  180  186  184  178  177   178 #>  [8303,]  163  170  172  182  180  186  184  178  177   178 #>  [8304,]  162  169  171  181  179  185  183  177  176   178 #>  [8305,]  163  170  172  182  180  186  184  178  177   178 #>  [8306,]  163  170  172  182  180  186  184  178  177   178 #>  [8307,]  163  170  172  182  180  186  184  178  177   178 #>  [8308,]  162  169  171  181  179  185  183  177  176   178 #>  [8309,]  162  169  171  181  179  185  183  177  176   178 #>  [8310,]  162  169  171  181  179  185  183  177  176   178 #>  [8311,]  163  170  172  182  180  186  184  178  177   178 #>  [8312,]  163  170  172  182  180  186  184  178  177   178 #>  [8313,]  163  170  172  182  180  186  184  178  177   178 #>  [8314,]  163  170  172  182  180  186  184  178  177   178 #>  [8315,]  163  170  172  182  180  186  184  178  177   178 #>  [8316,]  163  170  172  182  180  186  184  178  177   178 #>  [8317,]  163  170  172  182  180  186  184  178  177   178 #>  [8318,]  163  170  172  182  180  186  184  178  177   178 #>  [8319,]  163  170  172  182  180  186  184  178  177   178 #>  [8320,]  163  170  172  182  180  186  184  178  177   178 #>  [8321,]  163  170  172  182  180  186  184  178  177   178 #>  [8322,]  163  170  172  182  180  186  184  178  177   178 #>  [8323,]  163  170  172  182  180  186  184  178  177   178 #>  [8324,]  163  170  172  182  180  186  184  178  177   178 #>  [8325,]  163  170  172  182  180  186  184  178  177   178 #>  [8326,]  163  170  172  182  180  186  184  178  177   178 #>  [8327,]  163  170  172  182  180  186  184  178  177   178 #>  [8328,]  163  170  172  182  180  186  184  178  177   178 #>  [8329,]  163  170  172  182  180  186  184  178  177   178 #>  [8330,]  163  170  172  182  180  186  184  178  177   178 #>  [8331,]  163  170  172  182  180  186  184  178  177   178 #>  [8332,]  163  170  172  182  180  186  184  178  177   178 #>  [8333,]  163  170  172  182  180  186  184  178  177   178 #>  [8334,]  163  170  172  182  180  186  184  178  177   178 #>  [8335,]  163  170  172  182  180  186  184  178  177   178 #>  [8336,]  163  170  172  182  180  186  184  178  177   178 #>  [8337,]  163  170  172  182  180  186  184  178  177   178 #>  [8338,]  163  170  172  182  180  186  184  178  177   178 #>  [8339,]  163  170  172  182  180  186  184  178  177   178 #>  [8340,]  163  170  172  182  180  186  184  178  177   178 #>  [8341,]  163  170  172  182  180  186  184  178  177   178 #>  [8342,]  163  170  172  182  180  186  184  178  177   178 #>  [8343,]  162  169  171  181  179  185  183  177  176   178 #>  [8344,]  163  170  172  182  180  186  184  178  177   178 #>  [8345,]  163  170  172  182  180  186  184  178  177   178 #>  [8346,]  163  170  172  182  180  186  184  178  177   178 #>  [8347,]  163  170  172  182  180  186  184  178  177   178 #>  [8348,]  163  170  172  182  180  186  184  178  177   178 #>  [8349,]  163  170  172  182  180  186  184  178  177   178 #>  [8350,]  163  170  172  182  180  186  184  178  177   178 #>  [8351,]  162  169  171  181  179  185  183  177  176   178 #>  [8352,]  163  170  172  182  180  186  184  178  177   178 #>  [8353,]  163  170  172  182  180  186  184  178  177   178 #>  [8354,]  163  170  172  182  180  186  184  178  177   178 #>  [8355,]  163  170  172  182  180  186  184  178  177   178 #>  [8356,]  163  170  172  182  180  186  184  178  177   178 #>  [8357,]  163  170  172  182  180  186  184  178  177   178 #>  [8358,]  163  170  172  182  180  186  184  178  177   178 #>  [8359,]  163  170  172  182  180  186  184  178  177   178 #>  [8360,]  162  169  171  181  179  185  183  177  176   178 #>  [8361,]  163  170  172  182  180  186  184  178  177   178 #>  [8362,]  163  170  172  182  180  186  184  178  177   178 #>  [8363,]  163  170  172  182  180  186  184  178  177   178 #>  [8364,]  163  170  172  182  180  186  184  178  177   178 #>  [8365,]  163  170  172  182  180  186  184  178  177   178 #>  [8366,]  163  170  172  182  180  186  184  178  177   178 #>  [8367,]  162  169  171  181  179  185  183  177  176   178 #>  [8368,]  163  170  172  182  180  186  184  178  177   178 #>  [8369,]  163  170  172  182  180  186  184  178  177   178 #>  [8370,]  163  170  172  182  180  186  184  178  177   178 #>  [8371,]  163  170  172  182  180  186  184  178  177   178 #>  [8372,]  163  170  172  182  180  186  184  178  177   178 #>  [8373,]  163  170  172  182  180  186  184  178  177   178 #>  [8374,]  163  170  172  182  180  186  184  178  177   178 #>  [8375,]  163  170  172  182  180  186  184  178  177   178 #>  [8376,]  163  170  172  182  180  186  184  178  177   178 #>  [8377,]  163  170  172  182  180  186  184  178  177   178 #>  [8378,]  163  170  172  182  180  186  184  178  177   178 #>  [8379,]  163  170  172  182  180  186  184  178  177   178 #>  [8380,]  163  170  172  182  180  186  184  178  177   178 #>  [8381,]  163  170  172  182  180  186  184  178  177   178 #>  [8382,]  163  170  172  182  180  186  184  178  177   178 #>  [8383,]  163  170  172  182  180  186  184  178  177   178 #>  [8384,]  163  170  172  182  180  186  184  178  177   178 #>  [8385,]  162  169  171  181  179  185  183  177  176   178 #>  [8386,]  163  170  172  182  180  186  184  178  177   178 #>  [8387,]  163  170  172  182  180  186  184  178  177   178 #>  [8388,]  163  170  172  182  180  186  184  178  177   178 #>  [8389,]  163  170  172  182  180  186  184  178  177   178 #>  [8390,]  163  170  172  182  180  186  184  178  177   178 #>  [8391,]  162  169  171  181  179  185  183  177  176   178 #>  [8392,]  163  170  172  182  180  186  184  178  177   178 #>  [8393,]  163  170  172  182  180  186  184  178  177   178 #>  [8394,]  163  170  172  182  180  186  184  178  177   178 #>  [8395,]  162  169  171  181  179  185  183  177  176   178 #>  [8396,]  163  170  172  182  180  186  184  178  177   178 #>  [8397,]  163  170  172  182  180  186  184  178  177   178 #>  [8398,]  163  170  172  182  180  186  184  178  177   178 #>  [8399,]  163  170  172  182  180  186  184  178  177   178 #>  [8400,]  163  170  172  182  180  186  184  178  177   178 #>  [8401,]  165  172  174  184  182  188  185  179  178   179 #>  [8402,]  164  171  173  183  181  187  187  181  180   180 #>  [8403,]  164  171  173  183  181  187  186  180  179   180 #>  [8404,]  164  171  173  183  181  187  187  181  180   180 #>  [8405,]  165  172  174  184  182  188  185  179  178   179 #>  [8406,]  165  172  174  184  182  188  185  179  178   179 #>  [8407,]  164  171  173  183  181  187  186  180  179   180 #>  [8408,]  165  172  174  184  182  188  185  179  178   179 #>  [8409,]  165  172  174  184  182  188  185  179  178   179 #>  [8410,]  164  171  173  183  181  187  187  181  180   180 #>  [8411,]  164  171  173  183  181  187  187  181  180   180 #>  [8412,]  165  172  174  184  182  188  185  179  178   179 #>  [8413,]  164  171  173  183  181  187  186  180  179   180 #>  [8414,]  165  172  174  184  182  188  185  179  178   179 #>  [8415,]  165  172  174  184  182  188  185  179  178   179 #>  [8416,]  164  171  173  183  181  187  186  180  179   180 #>  [8417,]  164  171  173  183  181  187  186  180  179   180 #>  [8418,]  164  171  173  183  181  187  187  181  180   180 #>  [8419,]  164  171  173  183  181  187  187  181  180   180 #>  [8420,]  165  172  174  184  182  188  185  179  178   179 #>  [8421,]  164  171  173  183  181  187  187  181  180   180 #>  [8422,]  164  171  173  183  181  187  186  180  179   180 #>  [8423,]  164  171  173  183  181  187  187  181  180   180 #>  [8424,]  164  171  173  183  181  187  186  180  179   180 #>  [8425,]  164  171  173  183  181  187  186  180  179   180 #>  [8426,]  165  172  174  184  182  188  185  179  178   179 #>  [8427,]  164  171  173  183  181  187  187  181  180   180 #>  [8428,]  165  172  174  184  182  188  185  179  178   179 #>  [8429,]  164  171  173  183  181  187  187  181  180   180 #>  [8430,]  164  171  173  183  181  187  187  181  180   180 #>  [8431,]  164  171  173  183  181  187  187  181  180   180 #>  [8432,]  164  171  173  183  181  187  187  181  180   180 #>  [8433,]  165  172  174  184  182  188  185  179  178   179 #>  [8434,]  164  171  173  183  181  187  187  181  180   180 #>  [8435,]  164  171  173  183  181  187  187  181  180   180 #>  [8436,]  164  171  173  183  181  187  187  181  180   180 #>  [8437,]  164  171  173  183  181  187  187  181  180   180 #>  [8438,]  165  172  174  184  182  188  185  179  178   179 #>  [8439,]  164  171  173  183  181  187  186  180  179   180 #>  [8440,]  164  171  173  183  181  187  186  180  179   180 #>  [8441,]  165  172  174  184  182  188  185  179  178   179 #>  [8442,]  165  172  174  184  182  188  185  179  178   179 #>  [8443,]  165  172  174  184  182  188  185  179  178   179 #>  [8444,]  164  171  173  183  181  187  186  180  179   180 #>  [8445,]  165  172  174  184  182  188  185  179  178   179 #>  [8446,]  165  172  174  184  182  188  185  179  178   179 #>  [8447,]  164  171  173  183  181  187  186  180  179   180 #>  [8448,]  164  171  173  183  181  187  187  181  180   180 #>  [8449,]  164  171  173  183  181  187  186  180  179   180 #>  [8450,]  165  172  174  184  182  188  185  179  178   179 #>  [8451,]  165  172  174  184  182  188  185  179  178   179 #>  [8452,]  164  171  173  183  181  187  187  181  180   180 #>  [8453,]  165  172  174  184  182  188  185  179  178   179 #>  [8454,]  164  171  173  183  181  187  186  180  179   180 #>  [8455,]  165  172  174  184  182  188  185  179  178   179 #>  [8456,]  165  172  174  184  182  188  185  179  178   179 #>  [8457,]  165  172  174  184  182  188  185  179  178   179 #>  [8458,]  165  172  174  184  182  188  185  179  178   179 #>  [8459,]  164  171  173  183  181  187  186  180  179   180 #>  [8460,]  165  172  174  184  182  188  185  179  178   179 #>  [8461,]  165  172  174  184  182  188  185  179  178   179 #>  [8462,]  164  171  173  183  181  187  187  181  180   180 #>  [8463,]  165  172  174  184  182  188  185  179  178   179 #>  [8464,]  165  172  174  184  182  188  185  179  178   179 #>  [8465,]  165  172  174  184  182  188  185  179  178   179 #>  [8466,]  165  172  174  184  182  188  185  179  178   179 #>  [8467,]  165  172  174  184  182  188  185  179  178   179 #>  [8468,]  165  172  174  184  182  188  185  179  178   179 #>  [8469,]  164  171  173  183  181  187  187  181  180   180 #>  [8470,]  164  171  173  183  181  187  186  180  179   180 #>  [8471,]  165  172  174  184  182  188  185  179  178   179 #>  [8472,]  165  172  174  184  182  188  185  179  178   179 #>  [8473,]  165  172  174  184  182  188  185  179  178   179 #>  [8474,]  165  172  174  184  182  188  185  179  178   179 #>  [8475,]  165  172  174  184  182  188  185  179  178   179 #>  [8476,]  165  172  174  184  182  188  185  179  178   179 #>  [8477,]  164  171  173  183  181  187  186  180  179   180 #>  [8478,]  165  172  174  184  182  188  185  179  178   179 #>  [8479,]  164  171  173  183  181  187  186  180  179   180 #>  [8480,]  164  171  173  183  181  187  187  181  180   180 #>  [8481,]  165  172  174  184  182  188  185  179  178   179 #>  [8482,]  164  171  173  183  181  187  187  181  180   180 #>  [8483,]  164  171  173  183  181  187  186  180  179   180 #>  [8484,]  165  172  174  184  182  188  185  179  178   179 #>  [8485,]  164  171  173  183  181  187  187  181  180   180 #>  [8486,]  164  171  173  183  181  187  186  180  179   180 #>  [8487,]  165  172  174  184  182  188  185  179  178   179 #>  [8488,]  165  172  174  184  182  188  185  179  178   179 #>  [8489,]  164  171  173  183  181  187  186  180  179   180 #>  [8490,]  165  172  174  184  182  188  185  179  178   179 #>  [8491,]  165  172  174  184  182  188  185  179  178   179 #>  [8492,]  165  172  174  184  182  188  185  179  178   179 #>  [8493,]  164  171  173  183  181  187  187  181  180   180 #>  [8494,]  165  172  174  184  182  188  185  179  178   179 #>  [8495,]  164  171  173  183  181  187  187  181  180   180 #>  [8496,]  165  172  174  184  182  188  185  179  178   179 #>  [8497,]  165  172  174  184  182  188  185  179  178   179 #>  [8498,]  164  171  173  183  181  187  186  180  179   180 #>  [8499,]  164  171  173  183  181  187  187  181  180   180 #>  [8500,]  164  171  173  183  181  187  186  180  179   180 #>  [8501,]  167  174  176  185  183  189  188  182  181   181 #>  [8502,]  166  173  175  186  184  190  190  183  182   182 #>  [8503,]  167  174  176  185  183  189  188  182  181   181 #>  [8504,]  167  174  176  185  183  189  188  182  181   181 #>  [8505,]  167  174  176  185  183  189  188  182  181   181 #>  [8506,]  166  173  175  186  184  190  190  183  182   182 #>  [8507,]  167  174  176  185  183  189  188  182  181   181 #>  [8508,]  167  174  176  185  183  189  188  182  181   181 #>  [8509,]  167  174  176  185  183  189  188  182  181   181 #>  [8510,]  167  174  176  185  183  189  188  182  181   181 #>  [8511,]  166  173  175  187  184  190  189  183  182   182 #>  [8512,]  166  173  175  187  184  190  189  183  182   182 #>  [8513,]  167  174  176  185  183  189  188  182  181   181 #>  [8514,]  167  174  176  185  183  189  188  182  181   181 #>  [8515,]  166  173  175  187  184  190  190  183  182   182 #>  [8516,]  167  174  176  185  183  189  188  182  181   181 #>  [8517,]  166  173  175  186  184  190  190  183  182   182 #>  [8518,]  167  174  176  185  183  189  188  182  181   181 #>  [8519,]  166  173  175  187  184  190  189  183  182   182 #>  [8520,]  167  174  176  185  183  189  188  182  181   181 #>  [8521,]  167  174  176  185  183  189  188  182  181   181 #>  [8522,]  167  174  176  185  183  189  188  182  181   181 #>  [8523,]  166  173  175  186  184  190  189  183  182   182 #>  [8524,]  167  174  176  185  183  189  188  182  181   181 #>  [8525,]  167  174  176  185  183  189  188  182  181   181 #>  [8526,]  166  173  175  187  184  190  189  183  182   182 #>  [8527,]  167  174  176  185  183  189  188  182  181   181 #>  [8528,]  167  174  176  185  183  189  188  182  181   181 #>  [8529,]  166  173  175  186  184  190  190  183  182   182 #>  [8530,]  166  173  175  187  184  190  189  183  182   182 #>  [8531,]  166  173  175  187  184  190  189  183  182   182 #>  [8532,]  166  173  175  186  184  190  189  183  182   182 #>  [8533,]  167  174  176  185  183  189  188  182  181   181 #>  [8534,]  166  173  175  186  184  190  189  183  182   182 #>  [8535,]  166  173  175  186  184  190  189  183  182   182 #>  [8536,]  167  174  176  185  183  189  188  182  181   181 #>  [8537,]  166  173  175  186  184  190  189  183  182   182 #>  [8538,]  167  174  176  185  183  189  188  182  181   181 #>  [8539,]  167  174  176  185  183  189  188  182  181   181 #>  [8540,]  167  174  176  185  183  189  188  182  181   181 #>  [8541,]  167  174  176  185  183  189  188  182  181   181 #>  [8542,]  166  173  175  187  184  190  189  183  182   182 #>  [8543,]  166  173  175  186  184  190  189  183  182   182 #>  [8544,]  166  173  175  186  184  190  190  183  182   182 #>  [8545,]  167  174  176  185  183  189  188  182  181   181 #>  [8546,]  166  173  175  186  184  190  189  183  182   182 #>  [8547,]  166  173  175  186  184  190  189  183  182   182 #>  [8548,]  166  173  175  187  184  190  189  183  182   182 #>  [8549,]  167  174  176  185  183  189  188  182  181   181 #>  [8550,]  167  174  176  185  183  189  188  182  181   181 #>  [8551,]  166  173  175  186  184  190  189  183  182   182 #>  [8552,]  167  174  176  185  183  189  188  182  181   181 #>  [8553,]  167  174  176  185  183  189  188  182  181   181 #>  [8554,]  167  174  176  185  183  189  188  182  181   181 #>  [8555,]  167  174  176  185  183  189  188  182  181   181 #>  [8556,]  166  173  175  186  184  190  189  183  182   182 #>  [8557,]  167  174  176  185  183  189  188  182  181   181 #>  [8558,]  167  174  176  185  183  189  188  182  181   181 #>  [8559,]  167  174  176  185  183  189  188  182  181   181 #>  [8560,]  166  173  175  187  184  190  189  183  182   182 #>  [8561,]  166  173  175  187  184  190  190  183  182   182 #>  [8562,]  166  173  175  187  184  190  189  183  182   182 #>  [8563,]  166  173  175  186  184  190  189  183  182   182 #>  [8564,]  166  173  175  186  184  190  189  183  182   182 #>  [8565,]  166  173  175  186  184  190  189  183  182   182 #>  [8566,]  166  173  175  186  184  190  189  183  182   182 #>  [8567,]  167  174  176  185  183  189  188  182  181   181 #>  [8568,]  166  173  175  187  184  190  190  183  182   182 #>  [8569,]  166  173  175  187  184  190  189  183  182   182 #>  [8570,]  166  173  175  186  184  190  190  183  182   182 #>  [8571,]  167  174  176  185  183  189  188  182  181   181 #>  [8572,]  167  174  176  185  183  189  188  182  181   181 #>  [8573,]  167  174  176  185  183  189  188  182  181   181 #>  [8574,]  167  174  176  185  183  189  188  182  181   181 #>  [8575,]  166  173  175  187  184  190  189  183  182   182 #>  [8576,]  167  174  176  185  183  189  188  182  181   181 #>  [8577,]  167  174  176  185  183  189  188  182  181   181 #>  [8578,]  166  173  175  186  184  190  189  183  182   182 #>  [8579,]  166  173  175  186  184  190  189  183  182   182 #>  [8580,]  167  174  176  185  183  189  188  182  181   181 #>  [8581,]  166  173  175  186  184  190  190  183  182   182 #>  [8582,]  166  173  175  187  184  190  189  183  182   182 #>  [8583,]  167  174  176  185  183  189  188  182  181   181 #>  [8584,]  167  174  176  185  183  189  188  182  181   181 #>  [8585,]  167  174  176  185  183  189  188  182  181   181 #>  [8586,]  167  174  176  185  183  189  188  182  181   181 #>  [8587,]  167  174  176  185  183  189  188  182  181   181 #>  [8588,]  167  174  176  185  183  189  188  182  181   181 #>  [8589,]  166  173  175  186  184  190  189  183  182   182 #>  [8590,]  167  174  176  185  183  189  188  182  181   181 #>  [8591,]  167  174  176  185  183  189  188  182  181   181 #>  [8592,]  166  173  175  187  184  190  189  183  182   182 #>  [8593,]  166  173  175  187  184  190  190  183  182   182 #>  [8594,]  166  173  175  186  184  190  189  183  182   182 #>  [8595,]  166  173  175  186  184  190  189  183  182   182 #>  [8596,]  166  173  175  187  184  190  190  183  182   182 #>  [8597,]  166  173  175  187  184  190  189  183  182   182 #>  [8598,]  167  174  176  185  183  189  188  182  181   181 #>  [8599,]  167  174  176  185  183  189  188  182  181   181 #>  [8600,]  166  173  175  186  184  190  189  183  182   182 #>  [8601,]  169  176  178  189  186  192  192  184  184   184 #>  [8602,]  169  176  178  189  186  192  192  184  183   183 #>  [8603,]  168  175  177  188  185  191  191  184  184   184 #>  [8604,]  168  175  177  188  185  191  191  184  184   184 #>  [8605,]  169  176  178  189  186  192  192  184  184   184 #>  [8606,]  169  176  178  189  186  192  192  184  183   183 #>  [8607,]  168  175  177  188  185  191  191  184  184   184 #>  [8608,]  168  175  177  188  185  191  191  184  184   184 #>  [8609,]  169  176  178  189  186  192  192  184  184   184 #>  [8610,]  169  176  178  189  186  192  192  184  184   184 #>  [8611,]  169  176  178  189  186  192  192  184  183   183 #>  [8612,]  168  175  177  188  185  191  191  184  183   183 #>  [8613,]  169  176  178  189  186  192  192  184  184   184 #>  [8614,]  169  176  178  189  186  192  192  184  184   184 #>  [8615,]  169  176  178  189  186  192  192  184  183   183 #>  [8616,]  169  176  178  189  186  192  192  184  184   184 #>  [8617,]  169  176  178  189  186  192  192  184  183   183 #>  [8618,]  169  176  178  189  186  192  192  184  183   183 #>  [8619,]  169  176  178  189  186  192  192  184  183   183 #>  [8620,]  169  176  178  189  186  192  192  184  184   184 #>  [8621,]  169  176  178  189  186  192  192  184  183   183 #>  [8622,]  169  176  178  189  186  192  192  184  184   184 #>  [8623,]  168  175  177  188  185  191  191  184  183   183 #>  [8624,]  169  176  178  189  186  192  192  184  184   184 #>  [8625,]  168  175  177  188  185  191  191  184  184   184 #>  [8626,]  169  176  178  189  186  192  192  184  183   183 #>  [8627,]  169  176  178  189  186  192  192  184  184   184 #>  [8628,]  169  176  178  189  186  192  192  184  184   184 #>  [8629,]  169  176  178  189  186  192  192  184  183   183 #>  [8630,]  169  176  178  189  186  192  192  184  183   183 #>  [8631,]  168  175  177  188  185  191  191  184  183   183 #>  [8632,]  168  175  177  188  185  191  191  184  183   183 #>  [8633,]  169  176  178  189  186  192  192  184  184   184 #>  [8634,]  169  176  178  189  186  192  192  184  183   183 #>  [8635,]  169  176  178  189  186  192  192  184  183   183 #>  [8636,]  169  176  178  189  186  192  192  184  184   184 #>  [8637,]  168  175  177  188  185  191  191  184  183   183 #>  [8638,]  169  176  178  189  186  192  192  184  183   183 #>  [8639,]  169  176  178  189  186  192  192  184  184   184 #>  [8640,]  168  175  177  188  185  191  191  184  184   184 #>  [8641,]  169  176  178  189  186  192  192  184  184   184 #>  [8642,]  169  176  178  189  186  192  192  184  183   183 #>  [8643,]  169  176  178  189  186  192  192  184  183   183 #>  [8644,]  169  176  178  189  186  192  192  184  183   183 #>  [8645,]  169  176  178  189  186  192  192  184  184   184 #>  [8646,]  168  175  177  188  185  191  191  184  183   183 #>  [8647,]  168  175  177  188  185  191  191  184  183   183 #>  [8648,]  169  176  178  189  186  192  192  184  183   183 #>  [8649,]  169  176  178  189  186  192  192  184  184   184 #>  [8650,]  169  176  178  189  186  192  192  184  184   184 #>  [8651,]  169  176  178  189  186  192  192  184  183   183 #>  [8652,]  168  175  177  188  185  191  191  184  184   184 #>  [8653,]  169  176  178  189  186  192  192  184  184   184 #>  [8654,]  169  176  178  189  186  192  192  184  184   184 #>  [8655,]  168  175  177  188  185  191  191  184  184   184 #>  [8656,]  169  176  178  189  186  192  192  184  183   183 #>  [8657,]  168  175  177  188  185  191  191  184  184   184 #>  [8658,]  169  176  178  189  186  192  192  184  184   184 #>  [8659,]  168  175  177  188  185  191  191  184  184   184 #>  [8660,]  168  175  177  188  185  191  191  184  183   183 #>  [8661,]  169  176  178  189  186  192  192  184  183   183 #>  [8662,]  169  176  178  189  186  192  192  184  183   183 #>  [8663,]  169  176  178  189  186  192  192  184  183   183 #>  [8664,]  169  176  178  189  186  192  192  184  183   183 #>  [8665,]  169  176  178  189  186  192  192  184  183   183 #>  [8666,]  169  176  178  189  186  192  192  184  183   183 #>  [8667,]  169  176  178  189  186  192  192  184  184   184 #>  [8668,]  168  175  177  188  185  191  191  184  183   183 #>  [8669,]  169  176  178  189  186  192  192  184  183   183 #>  [8670,]  169  176  178  189  186  192  192  184  183   183 #>  [8671,]  169  176  178  189  186  192  192  184  184   184 #>  [8672,]  168  175  177  188  185  191  191  184  184   184 #>  [8673,]  169  176  178  189  186  192  192  184  184   184 #>  [8674,]  168  175  177  188  185  191  191  184  184   184 #>  [8675,]  169  176  178  189  186  192  192  184  183   183 #>  [8676,]  168  175  177  188  185  191  191  184  184   184 #>  [8677,]  169  176  178  189  186  192  192  184  184   184 #>  [8678,]  169  176  178  189  186  192  192  184  183   183 #>  [8679,]  169  176  178  189  186  192  192  184  183   183 #>  [8680,]  168  175  177  188  185  191  191  184  184   184 #>  [8681,]  169  176  178  189  186  192  192  184  183   183 #>  [8682,]  169  176  178  189  186  192  192  184  183   183 #>  [8683,]  169  176  178  189  186  192  192  184  184   184 #>  [8684,]  169  176  178  189  186  192  192  184  184   184 #>  [8685,]  169  176  178  189  186  192  192  184  184   184 #>  [8686,]  168  175  177  188  185  191  191  184  184   184 #>  [8687,]  169  176  178  189  186  192  192  184  184   184 #>  [8688,]  169  176  178  189  186  192  192  184  184   184 #>  [8689,]  169  176  178  189  186  192  192  184  183   183 #>  [8690,]  169  176  178  189  186  192  192  184  184   184 #>  [8691,]  169  176  178  189  186  192  192  184  184   184 #>  [8692,]  168  175  177  188  185  191  191  184  183   183 #>  [8693,]  169  176  178  189  186  192  192  184  183   183 #>  [8694,]  169  176  178  189  186  192  192  184  183   183 #>  [8695,]  169  176  178  189  186  192  192  184  183   183 #>  [8696,]  168  175  177  188  185  191  191  184  183   183 #>  [8697,]  168  175  177  188  185  191  191  184  183   183 #>  [8698,]  168  175  177  188  185  191  191  184  183   183 #>  [8699,]  169  176  178  189  186  192  192  184  184   184 #>  [8700,]  169  176  178  189  186  192  192  184  183   183 #>  [8701,]  170  177  179  190  187  193  193  185  185   185 #>  [8702,]  170  177  179  190  187  193  193  185  185   185 #>  [8703,]  170  177  179  190  187  193  193  185  185   185 #>  [8704,]  170  177  179  190  187  193  193  185  185   185 #>  [8705,]  170  177  179  190  187  193  193  185  185   185 #>  [8706,]  170  177  179  190  187  193  193  185  185   185 #>  [8707,]  170  177  179  190  187  193  193  185  185   185 #>  [8708,]  170  177  179  190  187  193  193  185  185   185 #>  [8709,]  171  178  180  191  188  194  194  186  186   186 #>  [8710,]  170  177  179  190  187  193  193  185  185   185 #>  [8711,]  170  177  179  190  187  193  193  185  185   185 #>  [8712,]  170  177  179  190  187  193  193  185  185   185 #>  [8713,]  171  178  180  191  188  194  194  186  186   186 #>  [8714,]  170  177  179  190  187  193  193  185  185   185 #>  [8715,]  170  177  179  190  187  193  193  185  185   185 #>  [8716,]  170  177  179  190  187  193  193  185  185   185 #>  [8717,]  171  178  180  191  188  194  194  186  186   186 #>  [8718,]  171  178  180  191  188  194  194  186  186   186 #>  [8719,]  170  177  179  190  187  193  193  185  185   185 #>  [8720,]  170  177  179  190  187  193  193  185  185   185 #>  [8721,]  170  177  179  190  187  193  193  185  185   185 #>  [8722,]  170  177  179  190  187  193  193  185  185   185 #>  [8723,]  170  177  179  190  187  193  193  185  185   185 #>  [8724,]  170  177  179  190  187  193  193  185  185   185 #>  [8725,]  170  177  179  190  187  193  193  185  185   185 #>  [8726,]  170  177  179  190  187  193  193  185  185   185 #>  [8727,]  171  178  180  191  188  194  194  186  186   186 #>  [8728,]  170  177  179  190  187  193  193  185  185   185 #>  [8729,]  170  177  179  190  187  193  193  185  185   185 #>  [8730,]  170  177  179  190  187  193  193  185  185   185 #>  [8731,]  170  177  179  190  187  193  193  185  185   185 #>  [8732,]  170  177  179  190  187  193  193  185  185   185 #>  [8733,]  170  177  179  190  187  193  193  185  185   185 #>  [8734,]  170  177  179  190  187  193  193  185  185   185 #>  [8735,]  170  177  179  190  187  193  193  185  185   185 #>  [8736,]  170  177  179  190  187  193  193  185  185   185 #>  [8737,]  170  177  179  190  187  193  193  185  185   185 #>  [8738,]  170  177  179  190  187  193  193  185  185   185 #>  [8739,]  170  177  179  190  187  193  193  185  185   185 #>  [8740,]  170  177  179  190  187  193  193  185  185   185 #>  [8741,]  170  177  179  190  187  193  193  185  185   185 #>  [8742,]  171  178  180  191  188  194  194  186  186   186 #>  [8743,]  170  177  179  190  187  193  193  185  185   185 #>  [8744,]  170  177  179  190  187  193  193  185  185   185 #>  [8745,]  170  177  179  190  187  193  193  185  185   185 #>  [8746,]  170  177  179  190  187  193  193  185  185   185 #>  [8747,]  170  177  179  190  187  193  193  185  185   185 #>  [8748,]  170  177  179  190  187  193  193  185  185   185 #>  [8749,]  170  177  179  190  187  193  193  185  185   185 #>  [8750,]  170  177  179  190  187  193  193  185  185   185 #>  [8751,]  171  178  180  191  188  194  194  186  186   186 #>  [8752,]  170  177  179  190  187  193  193  185  185   185 #>  [8753,]  171  178  180  191  188  194  194  186  186   186 #>  [8754,]  170  177  179  190  187  193  193  185  185   185 #>  [8755,]  170  177  179  190  187  193  193  185  185   185 #>  [8756,]  170  177  179  190  187  193  193  185  185   185 #>  [8757,]  170  177  179  190  187  193  193  185  185   185 #>  [8758,]  170  177  179  190  187  193  193  185  185   185 #>  [8759,]  170  177  179  190  187  193  193  185  185   185 #>  [8760,]  170  177  179  190  187  193  193  185  185   185 #>  [8761,]  170  177  179  190  187  193  193  185  185   185 #>  [8762,]  170  177  179  190  187  193  193  185  185   185 #>  [8763,]  170  177  179  190  187  193  193  185  185   185 #>  [8764,]  170  177  179  190  187  193  193  185  185   185 #>  [8765,]  171  178  180  191  188  194  194  186  186   186 #>  [8766,]  171  178  180  191  188  194  194  186  186   186 #>  [8767,]  170  177  179  190  187  193  193  185  185   185 #>  [8768,]  170  177  179  190  187  193  193  185  185   185 #>  [8769,]  170  177  179  190  187  193  193  185  185   185 #>  [8770,]  170  177  179  190  187  193  193  185  185   185 #>  [8771,]  170  177  179  190  187  193  193  185  185   185 #>  [8772,]  170  177  179  190  187  193  193  185  185   185 #>  [8773,]  170  177  179  190  187  193  193  185  185   185 #>  [8774,]  170  177  179  190  187  193  193  185  185   185 #>  [8775,]  170  177  179  190  187  193  193  185  185   185 #>  [8776,]  170  177  179  190  187  193  193  185  185   185 #>  [8777,]  170  177  179  190  187  193  193  185  185   185 #>  [8778,]  170  177  179  190  187  193  193  185  185   185 #>  [8779,]  171  178  180  191  188  194  194  186  186   186 #>  [8780,]  170  177  179  190  187  193  193  185  185   185 #>  [8781,]  170  177  179  190  187  193  193  185  185   185 #>  [8782,]  171  178  180  191  188  194  194  186  186   186 #>  [8783,]  170  177  179  190  187  193  193  185  185   185 #>  [8784,]  171  178  180  191  188  194  194  186  186   186 #>  [8785,]  170  177  179  190  187  193  193  185  185   185 #>  [8786,]  170  177  179  190  187  193  193  185  185   185 #>  [8787,]  170  177  179  190  187  193  193  185  185   185 #>  [8788,]  170  177  179  190  187  193  193  185  185   185 #>  [8789,]  170  177  179  190  187  193  193  185  185   185 #>  [8790,]  170  177  179  190  187  193  193  185  185   185 #>  [8791,]  171  178  180  191  188  194  194  186  186   186 #>  [8792,]  170  177  179  190  187  193  193  185  185   185 #>  [8793,]  171  178  180  191  188  194  194  186  186   186 #>  [8794,]  171  178  180  191  188  194  194  186  186   186 #>  [8795,]  170  177  179  190  187  193  193  185  185   185 #>  [8796,]  170  177  179  190  187  193  193  185  185   185 #>  [8797,]  170  177  179  190  187  193  193  185  185   185 #>  [8798,]  170  177  179  190  187  193  193  185  185   185 #>  [8799,]  170  177  179  190  187  193  193  185  185   185 #>  [8800,]  170  177  179  190  187  193  193  185  185   185 #>  [8801,]  172  180  182  193  190  195  195  187  187   187 #>  [8802,]  172  180  182  193  190  195  195  187  187   187 #>  [8803,]  172  179  181  192  189  197  196  187  187   187 #>  [8804,]  172  180  182  193  190  195  195  187  188   187 #>  [8805,]  172  180  182  193  190  195  195  187  187   187 #>  [8806,]  172  179  181  192  189  197  196  187  187   187 #>  [8807,]  172  179  181  192  189  197  196  187  187   187 #>  [8808,]  172  180  182  193  190  195  195  187  187   187 #>  [8809,]  172  180  182  193  190  195  195  187  187   187 #>  [8810,]  172  180  182  193  190  195  195  187  188   187 #>  [8811,]  172  180  182  193  190  195  195  187  187   187 #>  [8812,]  172  180  182  193  190  195  195  187  187   187 #>  [8813,]  172  180  182  193  190  195  195  187  187   187 #>  [8814,]  172  180  182  193  190  195  195  187  187   187 #>  [8815,]  172  180  182  193  190  195  195  187  187   187 #>  [8816,]  172  180  182  193  190  195  195  187  187   187 #>  [8817,]  172  180  182  193  190  195  195  187  187   187 #>  [8818,]  172  180  182  193  190  195  195  187  188   187 #>  [8819,]  172  180  182  193  190  195  195  187  187   187 #>  [8820,]  172  179  181  192  189  197  196  187  187   187 #>  [8821,]  172  179  181  192  189  197  196  187  188   187 #>  [8822,]  172  180  182  193  190  195  195  187  187   187 #>  [8823,]  172  179  181  192  189  197  196  187  187   187 #>  [8824,]  172  180  182  193  190  195  195  187  187   187 #>  [8825,]  172  179  181  192  189  197  196  187  188   187 #>  [8826,]  172  180  182  193  190  195  195  187  187   187 #>  [8827,]  172  180  182  193  190  195  195  187  187   187 #>  [8828,]  172  180  182  193  190  195  195  187  187   187 #>  [8829,]  172  180  182  193  190  195  195  187  187   187 #>  [8830,]  172  180  182  193  190  195  195  187  187   187 #>  [8831,]  172  180  182  193  190  195  195  187  187   187 #>  [8832,]  172  180  182  193  190  195  195  187  187   187 #>  [8833,]  172  180  182  193  190  195  195  187  187   187 #>  [8834,]  172  179  181  192  189  197  196  187  187   187 #>  [8835,]  172  179  181  192  189  196  196  187  187   187 #>  [8836,]  172  180  182  193  190  195  195  187  187   187 #>  [8837,]  172  179  181  192  189  197  196  187  187   187 #>  [8838,]  172  180  182  193  190  195  195  187  187   187 #>  [8839,]  172  180  182  193  190  195  195  187  188   187 #>  [8840,]  172  180  182  193  190  195  195  187  187   187 #>  [8841,]  172  180  182  193  190  195  195  187  187   187 #>  [8842,]  172  179  181  192  189  197  196  187  187   187 #>  [8843,]  172  180  182  193  190  195  195  187  188   187 #>  [8844,]  172  179  181  192  189  196  196  187  187   187 #>  [8845,]  172  180  182  193  190  195  195  187  188   187 #>  [8846,]  172  180  182  193  190  195  195  187  187   187 #>  [8847,]  172  180  182  193  190  195  195  187  187   187 #>  [8848,]  172  180  182  193  190  195  195  187  187   187 #>  [8849,]  172  180  182  193  190  195  195  187  187   187 #>  [8850,]  172  179  181  192  189  197  196  187  187   187 #>  [8851,]  172  180  182  193  190  195  195  187  187   187 #>  [8852,]  172  180  182  193  190  195  195  187  187   187 #>  [8853,]  172  179  181  192  189  197  196  187  188   187 #>  [8854,]  172  179  181  192  189  196  196  187  187   187 #>  [8855,]  172  179  181  192  189  196  196  187  187   187 #>  [8856,]  172  179  181  192  189  197  196  187  187   187 #>  [8857,]  172  179  181  192  189  197  196  187  187   187 #>  [8858,]  172  180  182  193  190  195  195  187  187   187 #>  [8859,]  172  180  182  193  190  195  195  187  187   187 #>  [8860,]  172  180  182  193  190  195  195  187  187   187 #>  [8861,]  172  180  182  193  190  195  195  187  188   187 #>  [8862,]  172  180  182  193  190  195  195  187  187   187 #>  [8863,]  172  180  182  193  190  195  195  187  187   187 #>  [8864,]  172  179  181  192  189  197  196  187  187   187 #>  [8865,]  172  179  181  192  189  197  196  187  187   187 #>  [8866,]  172  180  182  193  190  195  195  187  187   187 #>  [8867,]  172  180  182  193  190  195  195  187  187   187 #>  [8868,]  172  180  182  193  190  195  195  187  187   187 #>  [8869,]  172  180  182  193  190  195  195  187  187   187 #>  [8870,]  172  180  182  193  190  195  195  187  187   187 #>  [8871,]  172  180  182  193  190  195  195  187  187   187 #>  [8872,]  172  180  182  193  190  195  195  187  188   187 #>  [8873,]  172  179  181  192  189  197  196  187  188   187 #>  [8874,]  172  179  181  192  189  197  196  187  188   187 #>  [8875,]  172  180  182  193  190  195  195  187  188   187 #>  [8876,]  172  180  182  193  190  195  195  187  188   187 #>  [8877,]  172  180  182  193  190  195  195  187  188   187 #>  [8878,]  172  180  182  193  190  195  195  187  187   187 #>  [8879,]  172  180  182  193  190  195  195  187  187   187 #>  [8880,]  172  179  181  192  189  196  196  187  187   187 #>  [8881,]  172  179  181  192  189  196  196  187  187   187 #>  [8882,]  172  179  181  192  189  196  196  187  187   187 #>  [8883,]  172  180  182  193  190  195  195  187  187   187 #>  [8884,]  172  179  181  192  189  197  196  187  188   187 #>  [8885,]  172  179  181  192  189  197  196  187  187   187 #>  [8886,]  172  179  181  192  189  197  196  187  187   187 #>  [8887,]  172  180  182  193  190  195  195  187  187   187 #>  [8888,]  172  179  181  192  189  196  196  187  187   187 #>  [8889,]  172  179  181  192  189  196  196  187  187   187 #>  [8890,]  172  180  182  193  190  195  195  187  187   187 #>  [8891,]  172  180  182  193  190  195  195  187  187   187 #>  [8892,]  172  180  182  193  190  195  195  187  187   187 #>  [8893,]  172  180  182  193  190  195  195  187  187   187 #>  [8894,]  172  179  181  192  189  197  196  187  188   187 #>  [8895,]  172  180  182  193  190  195  195  187  188   187 #>  [8896,]  172  180  182  193  190  195  195  187  187   187 #>  [8897,]  172  179  181  192  189  197  196  187  187   187 #>  [8898,]  172  179  181  192  189  197  196  187  187   187 #>  [8899,]  172  179  181  192  189  196  196  187  187   187 #>  [8900,]  172  180  182  193  190  195  195  187  188   187 #>  [8901,]  174  182  184  195  191  198  197  189  190   189 #>  [8902,]  173  181  183  194  194  200  199  188  189   188 #>  [8903,]  173  181  183  194  193  200  199  188  189   188 #>  [8904,]  174  182  184  195  191  198  197  189  190   189 #>  [8905,]  174  182  184  196  192  199  198  189  190   189 #>  [8906,]  173  181  183  194  193  200  199  188  189   188 #>  [8907,]  173  181  183  194  193  200  199  188  189   188 #>  [8908,]  173  181  183  194  194  200  199  188  189   188 #>  [8909,]  173  181  183  194  194  200  199  188  189   188 #>  [8910,]  174  182  184  196  192  199  198  189  190   189 #>  [8911,]  174  182  184  195  191  198  197  189  190   189 #>  [8912,]  174  182  184  196  192  199  198  189  190   189 #>  [8913,]  174  182  184  196  192  199  198  189  190   189 #>  [8914,]  174  182  184  195  191  198  197  189  190   189 #>  [8915,]  174  182  184  195  191  198  197  189  190   189 #>  [8916,]  174  182  184  195  191  198  197  189  190   189 #>  [8917,]  174  182  184  196  192  199  198  189  190   189 #>  [8918,]  174  182  184  196  192  199  198  189  190   189 #>  [8919,]  174  182  184  195  191  198  197  189  190   189 #>  [8920,]  173  181  183  194  193  200  199  188  189   188 #>  [8921,]  173  181  183  194  193  200  199  188  189   188 #>  [8922,]  174  182  184  196  192  199  198  189  190   189 #>  [8923,]  173  181  183  194  193  200  199  188  189   188 #>  [8924,]  174  182  184  196  192  199  198  189  190   189 #>  [8925,]  173  181  183  194  193  200  199  188  189   188 #>  [8926,]  174  182  184  195  191  198  197  189  190   189 #>  [8927,]  174  182  184  196  192  199  198  189  190   189 #>  [8928,]  174  182  184  195  191  198  197  189  190   189 #>  [8929,]  173  181  183  194  194  200  199  188  189   188 #>  [8930,]  174  182  184  196  192  199  198  189  190   189 #>  [8931,]  174  182  184  196  192  199  198  189  190   189 #>  [8932,]  174  182  184  196  192  199  198  189  190   189 #>  [8933,]  174  182  184  196  192  199  198  189  190   189 #>  [8934,]  173  181  183  194  193  200  199  188  189   188 #>  [8935,]  173  181  183  194  193  200  199  188  189   188 #>  [8936,]  173  181  183  194  194  200  199  188  189   188 #>  [8937,]  173  181  183  194  193  200  199  188  189   188 #>  [8938,]  174  182  184  195  191  198  197  189  190   189 #>  [8939,]  174  182  184  196  192  199  198  189  190   189 #>  [8940,]  173  181  183  194  194  200  199  188  189   188 #>  [8941,]  173  181  183  194  194  200  199  188  189   188 #>  [8942,]  173  181  183  194  193  200  199  188  189   188 #>  [8943,]  174  182  184  195  191  198  197  189  190   189 #>  [8944,]  173  181  183  194  193  200  199  188  189   188 #>  [8945,]  173  181  183  194  194  200  199  188  189   188 #>  [8946,]  174  182  184  195  191  198  197  189  190   189 #>  [8947,]  174  182  184  196  192  199  198  189  190   189 #>  [8948,]  174  182  184  196  192  199  198  189  190   189 #>  [8949,]  173  181  183  194  194  200  199  188  189   188 #>  [8950,]  173  181  183  194  194  200  199  188  189   188 #>  [8951,]  174  182  184  196  192  199  198  189  190   189 #>  [8952,]  174  182  184  195  191  198  197  189  190   189 #>  [8953,]  173  181  183  194  193  200  199  188  189   188 #>  [8954,]  173  181  183  194  194  200  199  188  189   188 #>  [8955,]  173  181  183  194  194  200  199  188  189   188 #>  [8956,]  173  181  183  194  193  200  199  188  189   188 #>  [8957,]  173  181  183  194  193  200  199  188  189   188 #>  [8958,]  174  182  184  196  192  199  198  189  190   189 #>  [8959,]  174  182  184  195  191  198  197  189  190   189 #>  [8960,]  173  181  183  194  194  200  199  188  189   188 #>  [8961,]  174  182  184  196  192  199  198  189  190   189 #>  [8962,]  173  181  183  194  194  200  199  188  189   188 #>  [8963,]  174  182  184  196  192  199  198  189  190   189 #>  [8964,]  173  181  183  194  194  200  199  188  189   188 #>  [8965,]  173  181  183  194  193  200  199  188  189   188 #>  [8966,]  174  182  184  196  192  199  198  189  190   189 #>  [8967,]  173  181  183  194  194  200  199  188  189   188 #>  [8968,]  174  182  184  195  191  198  197  189  190   189 #>  [8969,]  174  182  184  195  191  198  197  189  190   189 #>  [8970,]  174  182  184  196  192  199  198  189  190   189 #>  [8971,]  174  182  184  196  192  199  198  189  190   189 #>  [8972,]  173  181  183  194  194  200  199  188  189   188 #>  [8973,]  173  181  183  194  193  200  199  188  189   188 #>  [8974,]  173  181  183  194  193  200  199  188  189   188 #>  [8975,]  174  182  184  196  192  199  198  189  190   189 #>  [8976,]  173  181  183  194  194  200  199  188  189   188 #>  [8977,]  174  182  184  195  191  198  197  189  190   189 #>  [8978,]  174  182  184  196  192  199  198  189  190   189 #>  [8979,]  174  182  184  195  191  198  197  189  190   189 #>  [8980,]  173  181  183  194  193  200  199  188  189   188 #>  [8981,]  173  181  183  194  194  200  199  188  189   188 #>  [8982,]  173  181  183  194  193  200  199  188  189   188 #>  [8983,]  174  182  184  196  192  199  198  189  190   189 #>  [8984,]  173  181  183  194  193  200  199  188  189   188 #>  [8985,]  173  181  183  194  193  200  199  188  189   188 #>  [8986,]  173  181  183  194  193  200  199  188  189   188 #>  [8987,]  174  182  184  196  192  199  198  189  190   189 #>  [8988,]  173  181  183  194  194  200  199  188  189   188 #>  [8989,]  173  181  183  194  193  200  199  188  189   188 #>  [8990,]  174  182  184  196  192  199  198  189  190   189 #>  [8991,]  174  182  184  195  191  198  197  189  190   189 #>  [8992,]  174  182  184  196  192  199  198  189  190   189 #>  [8993,]  174  182  184  196  192  199  198  189  190   189 #>  [8994,]  173  181  183  194  193  200  199  188  189   188 #>  [8995,]  174  182  184  196  192  199  198  189  190   189 #>  [8996,]  174  182  184  195  191  198  197  189  190   189 #>  [8997,]  173  181  183  194  194  200  199  188  189   188 #>  [8998,]  173  181  183  194  194  200  199  188  189   188 #>  [8999,]  173  181  183  194  193  200  199  188  189   188 #>  [9000,]  174  182  184  195  191  198  197  189  190   189 #>  [9001,]  176  184  186  198  196  202  201  191  192   191 #>  [9002,]  176  184  186  198  196  202  201  191  192   191 #>  [9003,]  176  184  186  198  196  202  201  191  192   191 #>  [9004,]  176  184  186  198  196  202  201  191  192   191 #>  [9005,]  176  184  186  198  196  202  201  191  192   191 #>  [9006,]  176  184  186  198  196  202  201  191  192   191 #>  [9007,]  175  183  185  197  195  201  200  190  191   190 #>  [9008,]  176  184  186  198  196  202  201  191  192   191 #>  [9009,]  176  184  186  198  196  202  201  191  192   191 #>  [9010,]  176  184  186  198  196  202  201  191  192   191 #>  [9011,]  176  184  186  198  196  202  201  191  192   191 #>  [9012,]  176  184  186  198  196  202  201  191  192   191 #>  [9013,]  176  184  186  198  196  202  201  191  192   191 #>  [9014,]  176  184  186  198  196  202  201  191  192   191 #>  [9015,]  176  184  186  198  196  202  201  191  192   191 #>  [9016,]  176  184  186  198  196  202  201  191  192   191 #>  [9017,]  176  184  186  198  196  202  201  191  192   191 #>  [9018,]  176  184  186  198  196  202  201  191  192   191 #>  [9019,]  176  184  186  198  196  202  201  191  192   191 #>  [9020,]  176  184  186  198  196  202  201  191  192   191 #>  [9021,]  175  183  185  197  195  201  200  190  191   190 #>  [9022,]  176  184  186  198  196  202  201  191  192   191 #>  [9023,]  176  184  186  198  196  202  201  191  192   191 #>  [9024,]  176  184  186  198  196  202  201  191  192   191 #>  [9025,]  176  184  186  198  196  202  201  191  192   191 #>  [9026,]  176  184  186  198  196  202  201  191  192   191 #>  [9027,]  176  184  186  198  196  202  201  191  192   191 #>  [9028,]  176  184  186  198  196  202  201  191  192   191 #>  [9029,]  176  184  186  198  196  202  201  191  192   191 #>  [9030,]  175  183  185  197  195  201  200  190  191   190 #>  [9031,]  176  184  186  198  196  202  201  191  192   191 #>  [9032,]  176  184  186  198  196  202  201  191  192   191 #>  [9033,]  176  184  186  198  196  202  201  191  192   191 #>  [9034,]  176  184  186  198  196  202  201  191  192   191 #>  [9035,]  176  184  186  198  196  202  201  191  192   191 #>  [9036,]  176  184  186  198  196  202  201  191  192   191 #>  [9037,]  176  184  186  198  196  202  201  191  192   191 #>  [9038,]  176  184  186  198  196  202  201  191  192   191 #>  [9039,]  175  183  185  197  195  201  200  190  191   190 #>  [9040,]  176  184  186  198  196  202  201  191  192   191 #>  [9041,]  176  184  186  198  196  202  201  191  192   191 #>  [9042,]  176  184  186  198  196  202  201  191  192   191 #>  [9043,]  176  184  186  198  196  202  201  191  192   191 #>  [9044,]  176  184  186  198  196  202  201  191  192   191 #>  [9045,]  176  184  186  198  196  202  201  191  192   191 #>  [9046,]  176  184  186  198  196  202  201  191  192   191 #>  [9047,]  176  184  186  198  196  202  201  191  192   191 #>  [9048,]  176  184  186  198  196  202  201  191  192   191 #>  [9049,]  175  183  185  197  195  201  200  190  191   190 #>  [9050,]  176  184  186  198  196  202  201  191  192   191 #>  [9051,]  176  184  186  198  196  202  201  191  192   191 #>  [9052,]  176  184  186  198  196  202  201  191  192   191 #>  [9053,]  176  184  186  198  196  202  201  191  192   191 #>  [9054,]  175  183  185  197  195  201  200  190  191   190 #>  [9055,]  176  184  186  198  196  202  201  191  192   191 #>  [9056,]  176  184  186  198  196  202  201  191  192   191 #>  [9057,]  176  184  186  198  196  202  201  191  192   191 #>  [9058,]  176  184  186  198  196  202  201  191  192   191 #>  [9059,]  176  184  186  198  196  202  201  191  192   191 #>  [9060,]  176  184  186  198  196  202  201  191  192   191 #>  [9061,]  176  184  186  198  196  202  201  191  192   191 #>  [9062,]  175  183  185  197  195  201  200  190  191   190 #>  [9063,]  176  184  186  198  196  202  201  191  192   191 #>  [9064,]  176  184  186  198  196  202  201  191  192   191 #>  [9065,]  176  184  186  198  196  202  201  191  192   191 #>  [9066,]  176  184  186  198  196  202  201  191  192   191 #>  [9067,]  176  184  186  198  196  202  201  191  192   191 #>  [9068,]  176  184  186  198  196  202  201  191  192   191 #>  [9069,]  176  184  186  198  196  202  201  191  192   191 #>  [9070,]  175  183  185  197  195  201  200  190  191   190 #>  [9071,]  176  184  186  198  196  202  201  191  192   191 #>  [9072,]  176  184  186  198  196  202  201  191  192   191 #>  [9073,]  176  184  186  198  196  202  201  191  192   191 #>  [9074,]  176  184  186  198  196  202  201  191  192   191 #>  [9075,]  176  184  186  198  196  202  201  191  192   191 #>  [9076,]  176  184  186  198  196  202  201  191  192   191 #>  [9077,]  176  184  186  198  196  202  201  191  192   191 #>  [9078,]  176  184  186  198  196  202  201  191  192   191 #>  [9079,]  176  184  186  198  196  202  201  191  192   191 #>  [9080,]  175  183  185  197  195  201  200  190  191   190 #>  [9081,]  176  184  186  198  196  202  201  191  192   191 #>  [9082,]  176  184  186  198  196  202  201  191  192   191 #>  [9083,]  176  184  186  198  196  202  201  191  192   191 #>  [9084,]  176  184  186  198  196  202  201  191  192   191 #>  [9085,]  176  184  186  198  196  202  201  191  192   191 #>  [9086,]  176  184  186  198  196  202  201  191  192   191 #>  [9087,]  176  184  186  198  196  202  201  191  192   191 #>  [9088,]  176  184  186  198  196  202  201  191  192   191 #>  [9089,]  176  184  186  198  196  202  201  191  192   191 #>  [9090,]  176  184  186  198  196  202  201  191  192   191 #>  [9091,]  176  184  186  198  196  202  201  191  192   191 #>  [9092,]  176  184  186  198  196  202  201  191  192   191 #>  [9093,]  176  184  186  198  196  202  201  191  192   191 #>  [9094,]  176  184  186  198  196  202  201  191  192   191 #>  [9095,]  175  183  185  197  195  201  200  190  191   190 #>  [9096,]  176  184  186  198  196  202  201  191  192   191 #>  [9097,]  176  184  186  198  196  202  201  191  192   191 #>  [9098,]  175  183  185  197  195  201  200  190  191   190 #>  [9099,]  176  184  186  198  196  202  201  191  192   191 #>  [9100,]  176  184  186  198  196  202  201  191  192   191 #>  [9101,]  177  185  187  199  197  203  202  192  193   192 #>  [9102,]  177  185  187  199  197  203  202  192  193   192 #>  [9103,]  177  185  187  199  197  203  202  192  193   192 #>  [9104,]  177  185  187  199  197  203  202  192  193   192 #>  [9105,]  177  185  187  199  197  203  202  192  193   192 #>  [9106,]  177  185  187  199  197  203  202  192  193   192 #>  [9107,]  177  185  187  199  197  203  202  192  193   192 #>  [9108,]  177  185  187  199  197  203  202  192  193   192 #>  [9109,]  177  185  187  199  197  203  202  192  193   192 #>  [9110,]  177  185  187  199  197  203  202  192  193   192 #>  [9111,]  177  185  187  199  197  203  202  192  193   192 #>  [9112,]  177  185  187  199  197  203  202  192  193   192 #>  [9113,]  177  185  187  199  197  203  202  192  193   192 #>  [9114,]  177  185  187  199  197  203  202  192  193   192 #>  [9115,]  177  185  187  199  197  203  202  192  193   192 #>  [9116,]  177  185  187  199  197  203  202  192  193   192 #>  [9117,]  177  185  187  199  197  203  202  192  193   192 #>  [9118,]  177  185  187  199  197  203  202  192  193   192 #>  [9119,]  177  185  187  199  197  203  202  192  193   192 #>  [9120,]  177  185  187  199  197  203  202  192  193   192 #>  [9121,]  177  185  187  199  197  203  202  192  193   192 #>  [9122,]  178  186  188  200  198  204  203  193  194   193 #>  [9123,]  177  185  187  199  197  203  202  192  193   192 #>  [9124,]  177  185  187  199  197  203  202  192  193   192 #>  [9125,]  177  185  187  199  197  203  202  192  193   192 #>  [9126,]  177  185  187  199  197  203  202  192  193   192 #>  [9127,]  177  185  187  199  197  203  202  192  193   192 #>  [9128,]  177  185  187  199  197  203  202  192  193   192 #>  [9129,]  178  186  188  200  198  204  203  193  194   193 #>  [9130,]  177  185  187  199  197  203  202  192  193   192 #>  [9131,]  177  185  187  199  197  203  202  192  193   192 #>  [9132,]  177  185  187  199  197  203  202  192  193   192 #>  [9133,]  177  185  187  199  197  203  202  192  193   192 #>  [9134,]  177  185  187  199  197  203  202  192  193   192 #>  [9135,]  177  185  187  199  197  203  202  192  193   192 #>  [9136,]  177  185  187  199  197  203  202  192  193   192 #>  [9137,]  177  185  187  199  197  203  202  192  193   192 #>  [9138,]  177  185  187  199  197  203  202  192  193   192 #>  [9139,]  177  185  187  199  197  203  202  192  193   192 #>  [9140,]  177  185  187  199  197  203  202  192  193   192 #>  [9141,]  177  185  187  199  197  203  202  192  193   192 #>  [9142,]  177  185  187  199  197  203  202  192  193   192 #>  [9143,]  177  185  187  199  197  203  202  192  193   192 #>  [9144,]  177  185  187  199  197  203  202  192  193   192 #>  [9145,]  177  185  187  199  197  203  202  192  193   192 #>  [9146,]  177  185  187  199  197  203  202  192  193   192 #>  [9147,]  177  185  187  199  197  203  202  192  193   192 #>  [9148,]  177  185  187  199  197  203  202  192  193   192 #>  [9149,]  177  185  187  199  197  203  202  192  193   192 #>  [9150,]  177  185  187  199  197  203  202  192  193   192 #>  [9151,]  177  185  187  199  197  203  202  192  193   192 #>  [9152,]  177  185  187  199  197  203  202  192  193   192 #>  [9153,]  177  185  187  199  197  203  202  192  193   192 #>  [9154,]  177  185  187  199  197  203  202  192  193   192 #>  [9155,]  177  185  187  199  197  203  202  192  193   192 #>  [9156,]  177  185  187  199  197  203  202  192  193   192 #>  [9157,]  177  185  187  199  197  203  202  192  193   192 #>  [9158,]  178  186  188  200  198  204  203  193  194   193 #>  [9159,]  177  185  187  199  197  203  202  192  193   192 #>  [9160,]  177  185  187  199  197  203  202  192  193   192 #>  [9161,]  177  185  187  199  197  203  202  192  193   192 #>  [9162,]  177  185  187  199  197  203  202  192  193   192 #>  [9163,]  177  185  187  199  197  203  202  192  193   192 #>  [9164,]  178  186  188  200  198  204  203  193  194   193 #>  [9165,]  177  185  187  199  197  203  202  192  193   192 #>  [9166,]  177  185  187  199  197  203  202  192  193   192 #>  [9167,]  177  185  187  199  197  203  202  192  193   192 #>  [9168,]  177  185  187  199  197  203  202  192  193   192 #>  [9169,]  177  185  187  199  197  203  202  192  193   192 #>  [9170,]  177  185  187  199  197  203  202  192  193   192 #>  [9171,]  177  185  187  199  197  203  202  192  193   192 #>  [9172,]  177  185  187  199  197  203  202  192  193   192 #>  [9173,]  177  185  187  199  197  203  202  192  193   192 #>  [9174,]  177  185  187  199  197  203  202  192  193   192 #>  [9175,]  177  185  187  199  197  203  202  192  193   192 #>  [9176,]  177  185  187  199  197  203  202  192  193   192 #>  [9177,]  178  186  188  200  198  204  203  193  194   193 #>  [9178,]  177  185  187  199  197  203  202  192  193   192 #>  [9179,]  177  185  187  199  197  203  202  192  193   192 #>  [9180,]  177  185  187  199  197  203  202  192  193   192 #>  [9181,]  177  185  187  199  197  203  202  192  193   192 #>  [9182,]  177  185  187  199  197  203  202  192  193   192 #>  [9183,]  177  185  187  199  197  203  202  192  193   192 #>  [9184,]  177  185  187  199  197  203  202  192  193   192 #>  [9185,]  177  185  187  199  197  203  202  192  193   192 #>  [9186,]  177  185  187  199  197  203  202  192  193   192 #>  [9187,]  178  186  188  200  198  204  203  193  194   193 #>  [9188,]  177  185  187  199  197  203  202  192  193   192 #>  [9189,]  177  185  187  199  197  203  202  192  193   192 #>  [9190,]  177  185  187  199  197  203  202  192  193   192 #>  [9191,]  177  185  187  199  197  203  202  192  193   192 #>  [9192,]  177  185  187  199  197  203  202  192  193   192 #>  [9193,]  177  185  187  199  197  203  202  192  193   192 #>  [9194,]  177  185  187  199  197  203  202  192  193   192 #>  [9195,]  177  185  187  199  197  203  202  192  193   192 #>  [9196,]  177  185  187  199  197  203  202  192  193   192 #>  [9197,]  177  185  187  199  197  203  202  192  193   192 #>  [9198,]  177  185  187  199  197  203  202  192  193   192 #>  [9199,]  177  185  187  199  197  203  202  192  193   192 #>  [9200,]  177  185  187  199  197  203  202  192  193   192 #>  [9201,]  180  188  190  202  200  206  205  195  196   195 #>  [9202,]  180  188  190  202  200  206  205  195  196   195 #>  [9203,]  179  187  189  201  199  205  204  194  195   194 #>  [9204,]  179  187  189  201  199  205  204  194  195   194 #>  [9205,]  179  187  189  201  199  205  204  194  195   194 #>  [9206,]  179  187  189  201  199  205  204  194  195   194 #>  [9207,]  180  188  190  202  200  206  205  195  196   195 #>  [9208,]  180  188  190  202  200  206  205  195  196   195 #>  [9209,]  179  187  189  201  199  205  204  194  195   194 #>  [9210,]  179  187  189  201  199  205  204  194  195   194 #>  [9211,]  179  187  189  201  199  205  204  194  195   194 #>  [9212,]  180  188  190  202  200  206  205  195  196   195 #>  [9213,]  180  188  190  202  200  206  205  195  196   195 #>  [9214,]  179  187  189  201  199  205  204  194  195   194 #>  [9215,]  180  188  190  202  200  206  205  195  196   195 #>  [9216,]  180  188  190  202  200  206  205  195  196   195 #>  [9217,]  179  187  189  201  199  205  204  194  195   194 #>  [9218,]  180  188  190  202  200  206  205  195  196   195 #>  [9219,]  180  188  190  202  200  206  205  195  196   195 #>  [9220,]  180  188  190  202  200  206  205  195  196   195 #>  [9221,]  179  187  189  201  199  205  204  194  195   194 #>  [9222,]  180  188  190  202  200  206  205  195  196   195 #>  [9223,]  180  188  190  202  200  206  205  195  196   195 #>  [9224,]  179  187  189  201  199  205  204  194  195   194 #>  [9225,]  179  187  189  201  199  205  204  194  195   194 #>  [9226,]  180  188  190  202  200  206  205  195  196   195 #>  [9227,]  180  188  190  202  200  206  205  195  196   195 #>  [9228,]  179  187  189  201  199  205  204  194  195   194 #>  [9229,]  180  188  190  202  200  206  205  195  196   195 #>  [9230,]  180  188  190  202  200  206  205  195  196   195 #>  [9231,]  179  187  189  201  199  205  204  194  195   194 #>  [9232,]  179  187  189  201  199  205  204  194  195   194 #>  [9233,]  180  188  190  202  200  206  205  195  196   195 #>  [9234,]  179  187  189  201  199  205  204  194  195   194 #>  [9235,]  179  187  189  201  199  205  204  194  195   194 #>  [9236,]  180  188  190  202  200  206  205  195  196   195 #>  [9237,]  180  188  190  202  200  206  205  195  196   195 #>  [9238,]  180  188  190  202  200  206  205  195  196   195 #>  [9239,]  179  187  189  201  199  205  204  194  195   194 #>  [9240,]  179  187  189  201  199  205  204  194  195   194 #>  [9241,]  180  188  190  202  200  206  205  195  196   195 #>  [9242,]  179  187  189  201  199  205  204  194  195   194 #>  [9243,]  180  188  190  202  200  206  205  195  196   195 #>  [9244,]  180  188  190  202  200  206  205  195  196   195 #>  [9245,]  180  188  190  202  200  206  205  195  196   195 #>  [9246,]  180  188  190  202  200  206  205  195  196   195 #>  [9247,]  179  187  189  201  199  205  204  194  195   194 #>  [9248,]  179  187  189  201  199  205  204  194  195   194 #>  [9249,]  180  188  190  202  200  206  205  195  196   195 #>  [9250,]  180  188  190  202  200  206  205  195  196   195 #>  [9251,]  180  188  190  202  200  206  205  195  196   195 #>  [9252,]  179  187  189  201  199  205  204  194  195   194 #>  [9253,]  180  188  190  202  200  206  205  195  196   195 #>  [9254,]  179  187  189  201  199  205  204  194  195   194 #>  [9255,]  180  188  190  202  200  206  205  195  196   195 #>  [9256,]  180  188  190  202  200  206  205  195  196   195 #>  [9257,]  179  187  189  201  199  205  204  194  195   194 #>  [9258,]  180  188  190  202  200  206  205  195  196   195 #>  [9259,]  180  188  190  202  200  206  205  195  196   195 #>  [9260,]  180  188  190  202  200  206  205  195  196   195 #>  [9261,]  180  188  190  202  200  206  205  195  196   195 #>  [9262,]  179  187  189  201  199  205  204  194  195   194 #>  [9263,]  180  188  190  202  200  206  205  195  196   195 #>  [9264,]  180  188  190  202  200  206  205  195  196   195 #>  [9265,]  179  187  189  201  199  205  204  194  195   194 #>  [9266,]  180  188  190  202  200  206  205  195  196   195 #>  [9267,]  179  187  189  201  199  205  204  194  195   194 #>  [9268,]  180  188  190  202  200  206  205  195  196   195 #>  [9269,]  180  188  190  202  200  206  205  195  196   195 #>  [9270,]  179  187  189  201  199  205  204  194  195   194 #>  [9271,]  180  188  190  202  200  206  205  195  196   195 #>  [9272,]  179  187  189  201  199  205  204  194  195   194 #>  [9273,]  179  187  189  201  199  205  204  194  195   194 #>  [9274,]  179  187  189  201  199  205  204  194  195   194 #>  [9275,]  180  188  190  202  200  206  205  195  196   195 #>  [9276,]  179  187  189  201  199  205  204  194  195   194 #>  [9277,]  180  188  190  202  200  206  205  195  196   195 #>  [9278,]  180  188  190  202  200  206  205  195  196   195 #>  [9279,]  179  187  189  201  199  205  204  194  195   194 #>  [9280,]  180  188  190  202  200  206  205  195  196   195 #>  [9281,]  180  188  190  202  200  206  205  195  196   195 #>  [9282,]  179  187  189  201  199  205  204  194  195   194 #>  [9283,]  180  188  190  202  200  206  205  195  196   195 #>  [9284,]  180  188  190  202  200  206  205  195  196   195 #>  [9285,]  180  188  190  202  200  206  205  195  196   195 #>  [9286,]  179  187  189  201  199  205  204  194  195   194 #>  [9287,]  180  188  190  202  200  206  205  195  196   195 #>  [9288,]  179  187  189  201  199  205  204  194  195   194 #>  [9289,]  179  187  189  201  199  205  204  194  195   194 #>  [9290,]  180  188  190  202  200  206  205  195  196   195 #>  [9291,]  179  187  189  201  199  205  204  194  195   194 #>  [9292,]  179  187  189  201  199  205  204  194  195   194 #>  [9293,]  180  188  190  202  200  206  205  195  196   195 #>  [9294,]  179  187  189  201  199  205  204  194  195   194 #>  [9295,]  180  188  190  202  200  206  205  195  196   195 #>  [9296,]  180  188  190  202  200  206  205  195  196   195 #>  [9297,]  180  188  190  202  200  206  205  195  196   195 #>  [9298,]  179  187  189  201  199  205  204  194  195   194 #>  [9299,]  179  187  189  201  199  205  204  194  195   194 #>  [9300,]  180  188  190  202  200  206  205  195  196   195 #>  [9301,]  181  189  191  203  201  207  206  196  197   196 #>  [9302,]  182  190  192  204  202  208  207  197  198   197 #>  [9303,]  181  189  191  203  201  207  206  196  197   196 #>  [9304,]  181  189  191  203  201  207  206  196  197   196 #>  [9305,]  182  190  192  204  202  208  207  197  198   197 #>  [9306,]  181  189  191  203  201  207  206  196  197   196 #>  [9307,]  181  189  191  203  201  207  206  196  197   196 #>  [9308,]  181  189  191  203  201  207  206  196  197   196 #>  [9309,]  182  190  192  204  202  208  207  197  198   197 #>  [9310,]  182  190  192  204  202  208  207  197  198   197 #>  [9311,]  181  189  191  203  201  207  206  196  197   196 #>  [9312,]  182  190  192  204  202  208  207  197  198   197 #>  [9313,]  182  190  192  204  202  208  207  197  198   197 #>  [9314,]  181  189  191  203  201  207  206  196  197   196 #>  [9315,]  181  189  191  203  201  207  206  196  197   196 #>  [9316,]  181  189  191  203  201  207  206  196  197   196 #>  [9317,]  182  190  192  204  202  208  207  197  198   197 #>  [9318,]  182  190  192  204  202  208  207  197  198   197 #>  [9319,]  181  189  191  203  201  207  206  196  197   196 #>  [9320,]  182  190  192  204  202  208  207  197  198   197 #>  [9321,]  182  190  192  204  202  208  207  197  198   197 #>  [9322,]  181  189  191  203  201  207  206  196  197   196 #>  [9323,]  182  190  192  204  202  208  207  197  198   197 #>  [9324,]  182  190  192  204  202  208  207  197  198   197 #>  [9325,]  181  189  191  203  201  207  206  196  197   196 #>  [9326,]  181  189  191  203  201  207  206  196  197   196 #>  [9327,]  182  190  192  204  202  208  207  197  198   197 #>  [9328,]  181  189  191  203  201  207  206  196  197   196 #>  [9329,]  182  190  192  204  202  208  207  197  198   197 #>  [9330,]  181  189  191  203  201  207  206  196  197   196 #>  [9331,]  182  190  192  204  202  208  207  197  198   197 #>  [9332,]  182  190  192  204  202  208  207  197  198   197 #>  [9333,]  182  190  192  204  202  208  207  197  198   197 #>  [9334,]  181  189  191  203  201  207  206  196  197   196 #>  [9335,]  181  189  191  203  201  207  206  196  197   196 #>  [9336,]  182  190  192  204  202  208  207  197  198   197 #>  [9337,]  181  189  191  203  201  207  206  196  197   196 #>  [9338,]  181  189  191  203  201  207  206  196  197   196 #>  [9339,]  181  189  191  203  201  207  206  196  197   196 #>  [9340,]  182  190  192  204  202  208  207  197  198   197 #>  [9341,]  181  189  191  203  201  207  206  196  197   196 #>  [9342,]  181  189  191  203  201  207  206  196  197   196 #>  [9343,]  181  189  191  203  201  207  206  196  197   196 #>  [9344,]  182  190  192  204  202  208  207  197  198   197 #>  [9345,]  181  189  191  203  201  207  206  196  197   196 #>  [9346,]  181  189  191  203  201  207  206  196  197   196 #>  [9347,]  181  189  191  203  201  207  206  196  197   196 #>  [9348,]  181  189  191  203  201  207  206  196  197   196 #>  [9349,]  181  189  191  203  201  207  206  196  197   196 #>  [9350,]  181  189  191  203  201  207  206  196  197   196 #>  [9351,]  181  189  191  203  201  207  206  196  197   196 #>  [9352,]  181  189  191  203  201  207  206  196  197   196 #>  [9353,]  182  190  192  204  202  208  207  197  198   197 #>  [9354,]  181  189  191  203  201  207  206  196  197   196 #>  [9355,]  181  189  191  203  201  207  206  196  197   196 #>  [9356,]  181  189  191  203  201  207  206  196  197   196 #>  [9357,]  181  189  191  203  201  207  206  196  197   196 #>  [9358,]  181  189  191  203  201  207  206  196  197   196 #>  [9359,]  181  189  191  203  201  207  206  196  197   196 #>  [9360,]  182  190  192  204  202  208  207  197  198   197 #>  [9361,]  182  190  192  204  202  208  207  197  198   197 #>  [9362,]  181  189  191  203  201  207  206  196  197   196 #>  [9363,]  182  190  192  204  202  208  207  197  198   197 #>  [9364,]  181  189  191  203  201  207  206  196  197   196 #>  [9365,]  181  189  191  203  201  207  206  196  197   196 #>  [9366,]  181  189  191  203  201  207  206  196  197   196 #>  [9367,]  181  189  191  203  201  207  206  196  197   196 #>  [9368,]  181  189  191  203  201  207  206  196  197   196 #>  [9369,]  181  189  191  203  201  207  206  196  197   196 #>  [9370,]  182  190  192  204  202  208  207  197  198   197 #>  [9371,]  181  189  191  203  201  207  206  196  197   196 #>  [9372,]  181  189  191  203  201  207  206  196  197   196 #>  [9373,]  181  189  191  203  201  207  206  196  197   196 #>  [9374,]  181  189  191  203  201  207  206  196  197   196 #>  [9375,]  182  190  192  204  202  208  207  197  198   197 #>  [9376,]  181  189  191  203  201  207  206  196  197   196 #>  [9377,]  181  189  191  203  201  207  206  196  197   196 #>  [9378,]  181  189  191  203  201  207  206  196  197   196 #>  [9379,]  181  189  191  203  201  207  206  196  197   196 #>  [9380,]  182  190  192  204  202  208  207  197  198   197 #>  [9381,]  182  190  192  204  202  208  207  197  198   197 #>  [9382,]  181  189  191  203  201  207  206  196  197   196 #>  [9383,]  182  190  192  204  202  208  207  197  198   197 #>  [9384,]  182  190  192  204  202  208  207  197  198   197 #>  [9385,]  181  189  191  203  201  207  206  196  197   196 #>  [9386,]  182  190  192  204  202  208  207  197  198   197 #>  [9387,]  181  189  191  203  201  207  206  196  197   196 #>  [9388,]  182  190  192  204  202  208  207  197  198   197 #>  [9389,]  181  189  191  203  201  207  206  196  197   196 #>  [9390,]  181  189  191  203  201  207  206  196  197   196 #>  [9391,]  181  189  191  203  201  207  206  196  197   196 #>  [9392,]  181  189  191  203  201  207  206  196  197   196 #>  [9393,]  181  189  191  203  201  207  206  196  197   196 #>  [9394,]  181  189  191  203  201  207  206  196  197   196 #>  [9395,]  181  189  191  203  201  207  206  196  197   196 #>  [9396,]  181  189  191  203  201  207  206  196  197   196 #>  [9397,]  181  189  191  203  201  207  206  196  197   196 #>  [9398,]  181  189  191  203  201  207  206  196  197   196 #>  [9399,]  181  189  191  203  201  207  206  196  197   196 #>  [9400,]  181  189  191  203  201  207  206  196  197   196 #>  [9401,]  183  191  195  207  205  211  209  199  201   198 #>  [9402,]  183  191  195  207  205  211  209  199  201   198 #>  [9403,]  183  191  194  206  204  210  208  198  201   198 #>  [9404,]  183  191  195  207  205  211  209  199  201   198 #>  [9405,]  183  191  195  207  205  211  209  199  201   198 #>  [9406,]  184  192  193  205  203  209  211  201  200   199 #>  [9407,]  183  191  194  206  204  210  208  198  201   198 #>  [9408,]  184  192  193  205  203  209  210  200  199   199 #>  [9409,]  184  192  193  205  203  209  210  200  199   199 #>  [9410,]  183  191  195  207  205  211  209  199  201   198 #>  [9411,]  183  191  195  207  205  211  209  199  201   198 #>  [9412,]  184  192  193  205  203  209  210  200  199   199 #>  [9413,]  183  191  195  207  205  211  209  199  201   198 #>  [9414,]  183  191  195  207  205  211  209  199  201   198 #>  [9415,]  184  192  193  205  203  209  211  201  200   199 #>  [9416,]  183  191  195  207  205  211  209  199  201   198 #>  [9417,]  183  191  195  207  205  211  209  199  201   198 #>  [9418,]  183  191  195  207  205  211  209  199  201   198 #>  [9419,]  183  191  195  207  205  211  209  199  201   198 #>  [9420,]  183  191  195  207  205  211  209  199  201   198 #>  [9421,]  183  191  195  207  205  211  209  199  201   198 #>  [9422,]  183  191  195  207  205  211  209  199  201   198 #>  [9423,]  183  191  195  207  205  211  209  199  201   198 #>  [9424,]  183  191  195  207  205  211  209  199  201   198 #>  [9425,]  183  191  195  207  205  211  209  199  201   198 #>  [9426,]  184  192  193  205  203  209  211  201  200   199 #>  [9427,]  183  191  195  207  205  211  209  199  201   198 #>  [9428,]  183  191  195  207  205  211  209  199  201   198 #>  [9429,]  183  191  195  207  205  211  209  199  201   198 #>  [9430,]  183  191  195  207  205  211  209  199  201   198 #>  [9431,]  183  191  194  206  204  210  208  198  201   198 #>  [9432,]  183  191  195  207  205  211  209  199  201   198 #>  [9433,]  184  192  193  205  203  209  211  201  200   199 #>  [9434,]  183  191  195  207  205  211  209  199  201   198 #>  [9435,]  183  191  195  207  205  211  209  199  201   198 #>  [9436,]  183  191  195  207  205  211  209  199  201   198 #>  [9437,]  183  191  195  207  205  211  209  199  201   198 #>  [9438,]  183  191  195  207  205  211  209  199  201   198 #>  [9439,]  183  191  195  207  205  211  209  199  201   198 #>  [9440,]  183  191  195  207  205  211  209  199  201   198 #>  [9441,]  183  191  195  207  205  211  209  199  201   198 #>  [9442,]  183  191  195  207  205  211  209  199  201   198 #>  [9443,]  184  192  193  205  203  209  210  200  199   199 #>  [9444,]  183  191  195  207  205  211  209  199  201   198 #>  [9445,]  183  191  195  207  205  211  209  199  201   198 #>  [9446,]  184  192  193  205  203  209  210  200  199   199 #>  [9447,]  183  191  195  207  205  211  209  199  201   198 #>  [9448,]  183  191  195  207  205  211  209  199  201   198 #>  [9449,]  183  191  195  207  205  211  209  199  201   198 #>  [9450,]  183  191  195  207  205  211  209  199  201   198 #>  [9451,]  184  192  193  205  203  209  210  200  199   199 #>  [9452,]  183  191  194  206  204  210  208  198  201   198 #>  [9453,]  183  191  195  207  205  211  209  199  201   198 #>  [9454,]  183  191  195  207  205  211  209  199  201   198 #>  [9455,]  183  191  195  207  205  211  209  199  201   198 #>  [9456,]  184  192  193  205  203  209  210  200  199   199 #>  [9457,]  184  192  193  205  203  209  210  200  199   199 #>  [9458,]  183  191  195  207  205  211  209  199  201   198 #>  [9459,]  183  191  194  206  204  210  208  198  201   198 #>  [9460,]  183  191  194  206  204  210  208  198  201   198 #>  [9461,]  184  192  193  205  203  209  211  201  200   199 #>  [9462,]  183  191  195  207  205  211  209  199  201   198 #>  [9463,]  183  191  195  207  205  211  209  199  201   198 #>  [9464,]  184  192  193  205  203  209  210  200  199   199 #>  [9465,]  183  191  195  207  205  211  209  199  201   198 #>  [9466,]  184  192  193  205  203  209  210  200  199   199 #>  [9467,]  183  191  195  207  205  211  209  199  201   198 #>  [9468,]  184  192  193  205  203  209  211  201  200   199 #>  [9469,]  183  191  195  207  205  211  209  199  201   198 #>  [9470,]  183  191  195  207  205  211  209  199  201   198 #>  [9471,]  183  191  195  207  205  211  209  199  201   198 #>  [9472,]  183  191  195  207  205  211  209  199  201   198 #>  [9473,]  183  191  195  207  205  211  209  199  201   198 #>  [9474,]  183  191  195  207  205  211  209  199  201   198 #>  [9475,]  183  191  195  207  205  211  209  199  201   198 #>  [9476,]  184  192  193  205  203  209  211  201  200   199 #>  [9477,]  183  191  195  207  205  211  209  199  201   198 #>  [9478,]  183  191  195  207  205  211  209  199  201   198 #>  [9479,]  183  191  195  207  205  211  209  199  201   198 #>  [9480,]  183  191  195  207  205  211  209  199  201   198 #>  [9481,]  183  191  195  207  205  211  209  199  201   198 #>  [9482,]  183  191  195  207  205  211  209  199  201   198 #>  [9483,]  183  191  195  207  205  211  209  199  201   198 #>  [9484,]  183  191  195  207  205  211  209  199  201   198 #>  [9485,]  183  191  195  207  205  211  209  199  201   198 #>  [9486,]  183  191  195  207  205  211  209  199  201   198 #>  [9487,]  183  191  195  207  205  211  209  199  201   198 #>  [9488,]  183  191  195  207  205  211  209  199  201   198 #>  [9489,]  183  191  195  207  205  211  209  199  201   198 #>  [9490,]  183  191  195  207  205  211  209  199  201   198 #>  [9491,]  183  191  195  207  205  211  209  199  201   198 #>  [9492,]  183  191  195  207  205  211  209  199  201   198 #>  [9493,]  183  191  195  207  205  211  209  199  201   198 #>  [9494,]  184  192  193  205  203  209  211  201  200   199 #>  [9495,]  183  191  195  207  205  211  209  199  201   198 #>  [9496,]  183  191  194  206  204  210  208  198  201   198 #>  [9497,]  183  191  194  206  204  210  208  198  201   198 #>  [9498,]  183  191  195  207  205  211  209  199  201   198 #>  [9499,]  183  191  195  207  205  211  209  199  201   198 #>  [9500,]  183  191  195  207  205  211  209  199  201   198 #>  [9501,]  185  193  197  208  206  212  212  202  202   200 #>  [9502,]  185  193  196  209  207  213  213  203  203   201 #>  [9503,]  185  193  196  209  207  213  213  203  203   201 #>  [9504,]  185  193  196  209  207  213  213  203  203   201 #>  [9505,]  185  193  196  209  207  213  213  203  203   201 #>  [9506,]  185  193  196  210  207  213  213  203  203   201 #>  [9507,]  185  193  196  209  207  213  213  203  203   201 #>  [9508,]  185  193  196  209  207  213  213  203  203   201 #>  [9509,]  185  193  197  208  206  212  212  202  202   200 #>  [9510,]  185  193  196  209  207  213  213  203  203   201 #>  [9511,]  185  193  197  208  206  212  212  202  202   200 #>  [9512,]  185  193  196  209  207  213  213  203  203   201 #>  [9513,]  185  193  197  208  206  212  212  202  202   200 #>  [9514,]  185  193  196  210  207  213  213  203  203   201 #>  [9515,]  185  193  196  210  207  213  213  203  203   201 #>  [9516,]  185  193  196  210  207  213  213  203  203   201 #>  [9517,]  185  193  197  208  206  212  212  202  202   200 #>  [9518,]  185  193  197  208  206  212  212  202  202   200 #>  [9519,]  185  193  196  209  207  213  213  203  203   201 #>  [9520,]  186  193  197  208  206  212  212  202  202   200 #>  [9521,]  185  193  196  210  207  213  213  203  203   201 #>  [9522,]  186  193  196  209  207  213  213  203  203   201 #>  [9523,]  185  193  196  209  207  213  213  203  203   201 #>  [9524,]  185  193  196  209  207  213  213  203  203   201 #>  [9525,]  185  193  196  209  207  213  213  203  203   201 #>  [9526,]  185  193  196  209  207  213  213  203  203   201 #>  [9527,]  186  193  197  208  206  212  212  202  202   200 #>  [9528,]  185  193  197  208  206  212  212  202  202   200 #>  [9529,]  186  193  197  208  206  212  212  202  202   200 #>  [9530,]  185  193  196  209  207  213  213  203  203   201 #>  [9531,]  185  193  196  209  207  213  213  203  203   201 #>  [9532,]  185  193  196  209  207  213  213  203  203   201 #>  [9533,]  185  193  197  208  206  212  212  202  202   200 #>  [9534,]  185  193  196  209  207  213  213  203  203   201 #>  [9535,]  185  193  196  209  207  213  213  203  203   201 #>  [9536,]  185  193  197  208  206  212  212  202  202   200 #>  [9537,]  185  193  196  209  207  213  213  203  203   201 #>  [9538,]  185  193  197  208  206  212  212  202  202   200 #>  [9539,]  185  193  197  208  206  212  212  202  202   200 #>  [9540,]  185  193  196  209  207  213  213  203  203   201 #>  [9541,]  185  193  197  208  206  212  212  202  202   200 #>  [9542,]  185  193  197  208  206  212  212  202  202   200 #>  [9543,]  185  193  196  209  207  213  213  203  203   201 #>  [9544,]  185  193  196  210  207  213  213  203  203   201 #>  [9545,]  185  193  196  209  207  213  213  203  203   201 #>  [9546,]  185  193  196  209  207  213  213  203  203   201 #>  [9547,]  185  193  196  209  207  213  213  203  203   201 #>  [9548,]  185  193  196  209  207  213  213  203  203   201 #>  [9549,]  185  193  196  209  207  213  213  203  203   201 #>  [9550,]  185  193  196  210  207  213  213  203  203   201 #>  [9551,]  185  193  197  208  206  212  212  202  202   200 #>  [9552,]  185  193  196  209  207  213  213  203  203   201 #>  [9553,]  185  193  197  208  206  212  212  202  202   200 #>  [9554,]  185  193  197  208  206  212  212  202  202   200 #>  [9555,]  185  193  196  209  207  213  213  203  203   201 #>  [9556,]  185  193  197  208  206  212  212  202  202   200 #>  [9557,]  185  193  196  209  207  213  213  203  203   201 #>  [9558,]  186  193  197  208  206  212  212  202  202   200 #>  [9559,]  185  193  196  210  207  213  213  203  203   201 #>  [9560,]  185  193  196  209  207  213  213  203  203   201 #>  [9561,]  185  193  196  210  207  213  213  203  203   201 #>  [9562,]  185  193  197  208  206  212  212  202  202   200 #>  [9563,]  185  193  196  209  207  213  213  203  203   201 #>  [9564,]  186  193  196  209  207  213  213  203  203   201 #>  [9565,]  185  193  197  208  206  212  212  202  202   200 #>  [9566,]  185  193  197  208  206  212  212  202  202   200 #>  [9567,]  185  193  196  209  207  213  213  203  203   201 #>  [9568,]  185  193  196  210  207  213  213  203  203   201 #>  [9569,]  185  193  196  209  207  213  213  203  203   201 #>  [9570,]  185  193  197  208  206  212  212  202  202   200 #>  [9571,]  185  193  196  209  207  213  213  203  203   201 #>  [9572,]  185  193  196  209  207  213  213  203  203   201 #>  [9573,]  185  193  196  210  207  213  213  203  203   201 #>  [9574,]  185  193  196  209  207  213  213  203  203   201 #>  [9575,]  185  193  196  209  207  213  213  203  203   201 #>  [9576,]  185  193  196  209  207  213  213  203  203   201 #>  [9577,]  186  193  197  208  206  212  212  202  202   200 #>  [9578,]  185  193  196  209  207  213  213  203  203   201 #>  [9579,]  185  193  197  208  206  212  212  202  202   200 #>  [9580,]  185  193  196  209  207  213  213  203  203   201 #>  [9581,]  186  193  196  209  207  213  213  203  203   201 #>  [9582,]  185  193  197  208  206  212  212  202  202   200 #>  [9583,]  185  193  197  208  206  212  212  202  202   200 #>  [9584,]  185  193  197  208  206  212  212  202  202   200 #>  [9585,]  185  193  197  208  206  212  212  202  202   200 #>  [9586,]  185  193  196  210  207  213  213  203  203   201 #>  [9587,]  186  193  197  208  206  212  212  202  202   200 #>  [9588,]  185  193  196  209  207  213  213  203  203   201 #>  [9589,]  185  193  197  208  206  212  212  202  202   200 #>  [9590,]  185  193  197  208  206  212  212  202  202   200 #>  [9591,]  185  193  197  208  206  212  212  202  202   200 #>  [9592,]  185  193  196  209  207  213  213  203  203   201 #>  [9593,]  185  193  197  208  206  212  212  202  202   200 #>  [9594,]  185  193  197  208  206  212  212  202  202   200 #>  [9595,]  185  193  196  209  207  213  213  203  203   201 #>  [9596,]  185  193  196  210  207  213  213  203  203   201 #>  [9597,]  185  193  196  209  207  213  213  203  203   201 #>  [9598,]  185  193  196  209  207  213  213  203  203   201 #>  [9599,]  185  193  196  210  207  213  213  203  203   201 #>  [9600,]  186  193  196  209  207  213  213  203  203   201 #>  [9601,]  188  195  199  212  209  215  215  205  205   203 #>  [9602,]  188  195  199  212  209  215  215  205  205   203 #>  [9603,]  188  195  199  212  209  215  215  205  205   203 #>  [9604,]  187  194  198  211  208  214  214  204  204   202 #>  [9605,]  188  195  199  212  209  215  215  205  205   203 #>  [9606,]  188  195  199  212  209  215  215  205  205   203 #>  [9607,]  188  195  199  212  209  215  215  205  205   203 #>  [9608,]  187  194  198  211  208  214  214  204  204   202 #>  [9609,]  187  194  198  211  208  214  214  204  204   202 #>  [9610,]  187  194  198  211  208  214  214  204  204   202 #>  [9611,]  188  195  199  212  209  215  215  205  205   203 #>  [9612,]  188  195  199  212  209  215  215  205  205   203 #>  [9613,]  188  195  199  212  209  215  215  205  205   203 #>  [9614,]  188  195  199  212  209  215  215  205  205   203 #>  [9615,]  188  195  199  212  209  215  215  205  205   203 #>  [9616,]  188  195  199  212  209  215  215  205  205   203 #>  [9617,]  188  195  199  212  209  215  215  205  205   203 #>  [9618,]  188  195  199  212  209  215  215  205  205   203 #>  [9619,]  188  195  199  212  209  215  215  205  205   203 #>  [9620,]  188  195  199  212  209  215  215  205  205   203 #>  [9621,]  188  195  199  212  209  215  215  205  205   203 #>  [9622,]  188  195  199  212  209  215  215  205  205   203 #>  [9623,]  188  195  199  212  209  215  215  205  205   203 #>  [9624,]  188  195  199  212  209  215  215  205  205   203 #>  [9625,]  188  195  199  212  209  215  215  205  205   203 #>  [9626,]  188  195  199  212  209  215  215  205  205   203 #>  [9627,]  188  195  199  212  209  215  215  205  205   203 #>  [9628,]  188  195  199  212  209  215  215  205  205   203 #>  [9629,]  188  195  199  212  209  215  215  205  205   203 #>  [9630,]  188  195  199  212  209  215  215  205  205   203 #>  [9631,]  188  195  199  212  209  215  215  205  205   203 #>  [9632,]  188  195  199  212  209  215  215  205  205   203 #>  [9633,]  188  195  199  212  209  215  215  205  205   203 #>  [9634,]  188  195  199  212  209  215  215  205  205   203 #>  [9635,]  188  195  199  212  209  215  215  205  205   203 #>  [9636,]  188  195  199  212  209  215  215  205  205   203 #>  [9637,]  188  195  199  212  209  215  215  205  205   203 #>  [9638,]  188  195  199  212  209  215  215  205  205   203 #>  [9639,]  188  195  199  212  209  215  215  205  205   203 #>  [9640,]  188  195  199  212  209  215  215  205  205   203 #>  [9641,]  188  195  199  212  209  215  215  205  205   203 #>  [9642,]  188  195  199  212  209  215  215  205  205   203 #>  [9643,]  187  194  198  211  208  214  214  204  204   202 #>  [9644,]  188  195  199  212  209  215  215  205  205   203 #>  [9645,]  188  195  199  212  209  215  215  205  205   203 #>  [9646,]  188  195  199  212  209  215  215  205  205   203 #>  [9647,]  188  195  199  212  209  215  215  205  205   203 #>  [9648,]  188  195  199  212  209  215  215  205  205   203 #>  [9649,]  188  195  199  212  209  215  215  205  205   203 #>  [9650,]  188  195  199  212  209  215  215  205  205   203 #>  [9651,]  187  194  198  211  208  214  214  204  204   202 #>  [9652,]  188  195  199  212  209  215  215  205  205   203 #>  [9653,]  188  195  199  212  209  215  215  205  205   203 #>  [9654,]  188  195  199  212  209  215  215  205  205   203 #>  [9655,]  188  195  199  212  209  215  215  205  205   203 #>  [9656,]  188  195  199  212  209  215  215  205  205   203 #>  [9657,]  188  195  199  212  209  215  215  205  205   203 #>  [9658,]  188  195  199  212  209  215  215  205  205   203 #>  [9659,]  188  195  199  212  209  215  215  205  205   203 #>  [9660,]  187  194  198  211  208  214  214  204  204   202 #>  [9661,]  188  195  199  212  209  215  215  205  205   203 #>  [9662,]  188  195  199  212  209  215  215  205  205   203 #>  [9663,]  188  195  199  212  209  215  215  205  205   203 #>  [9664,]  187  194  198  211  208  214  214  204  204   202 #>  [9665,]  188  195  199  212  209  215  215  205  205   203 #>  [9666,]  188  195  199  212  209  215  215  205  205   203 #>  [9667,]  187  194  198  211  208  214  214  204  204   202 #>  [9668,]  188  195  199  212  209  215  215  205  205   203 #>  [9669,]  188  195  199  212  209  215  215  205  205   203 #>  [9670,]  188  195  199  212  209  215  215  205  205   203 #>  [9671,]  188  195  199  212  209  215  215  205  205   203 #>  [9672,]  188  195  199  212  209  215  215  205  205   203 #>  [9673,]  188  195  199  212  209  215  215  205  205   203 #>  [9674,]  188  195  199  212  209  215  215  205  205   203 #>  [9675,]  188  195  199  212  209  215  215  205  205   203 #>  [9676,]  188  195  199  212  209  215  215  205  205   203 #>  [9677,]  188  195  199  212  209  215  215  205  205   203 #>  [9678,]  188  195  199  212  209  215  215  205  205   203 #>  [9679,]  188  195  199  212  209  215  215  205  205   203 #>  [9680,]  188  195  199  212  209  215  215  205  205   203 #>  [9681,]  188  195  199  212  209  215  215  205  205   203 #>  [9682,]  188  195  199  212  209  215  215  205  205   203 #>  [9683,]  188  195  199  212  209  215  215  205  205   203 #>  [9684,]  188  195  199  212  209  215  215  205  205   203 #>  [9685,]  187  194  198  211  208  214  214  204  204   202 #>  [9686,]  188  195  199  212  209  215  215  205  205   203 #>  [9687,]  188  195  199  212  209  215  215  205  205   203 #>  [9688,]  188  195  199  212  209  215  215  205  205   203 #>  [9689,]  188  195  199  212  209  215  215  205  205   203 #>  [9690,]  188  195  199  212  209  215  215  205  205   203 #>  [9691,]  187  194  198  211  208  214  214  204  204   202 #>  [9692,]  188  195  199  212  209  215  215  205  205   203 #>  [9693,]  188  195  199  212  209  215  215  205  205   203 #>  [9694,]  188  195  199  212  209  215  215  205  205   203 #>  [9695,]  187  194  198  211  208  214  214  204  204   202 #>  [9696,]  188  195  199  212  209  215  215  205  205   203 #>  [9697,]  188  195  199  212  209  215  215  205  205   203 #>  [9698,]  188  195  199  212  209  215  215  205  205   203 #>  [9699,]  188  195  199  212  209  215  215  205  205   203 #>  [9700,]  188  195  199  212  209  215  215  205  205   203 #>  [9701,]  189  197  201  213  210  216  216  206  206   204 #>  [9702,]  189  197  201  213  210  216  216  206  206   204 #>  [9703,]  189  196  200  214  211  217  217  207  207   205 #>  [9704,]  189  197  201  213  210  216  216  206  206   204 #>  [9705,]  189  196  200  214  211  217  217  207  207   205 #>  [9706,]  189  196  200  214  211  217  217  207  207   205 #>  [9707,]  189  197  201  213  210  216  216  206  206   204 #>  [9708,]  189  197  201  213  210  216  216  206  206   204 #>  [9709,]  189  197  201  213  210  216  216  206  206   204 #>  [9710,]  189  197  201  213  210  216  216  206  206   204 #>  [9711,]  189  196  200  215  212  217  217  207  207   205 #>  [9712,]  189  196  200  215  212  217  217  207  207   205 #>  [9713,]  189  197  201  213  210  216  216  206  206   204 #>  [9714,]  189  196  200  215  212  217  217  207  207   205 #>  [9715,]  189  197  201  213  210  216  216  206  206   204 #>  [9716,]  189  197  201  213  210  216  216  206  206   204 #>  [9717,]  189  197  201  213  210  216  216  206  206   204 #>  [9718,]  189  197  201  213  210  216  216  206  206   204 #>  [9719,]  189  196  200  215  212  217  217  207  207   205 #>  [9720,]  189  196  200  214  211  217  217  207  207   205 #>  [9721,]  189  197  201  213  210  216  216  206  206   204 #>  [9722,]  189  196  200  214  211  217  217  207  207   205 #>  [9723,]  189  197  201  213  210  216  216  206  206   204 #>  [9724,]  189  196  200  214  211  217  217  207  207   205 #>  [9725,]  189  197  201  213  210  216  216  206  206   204 #>  [9726,]  189  196  200  215  212  217  217  207  207   205 #>  [9727,]  189  197  201  213  210  216  216  206  206   204 #>  [9728,]  189  197  201  213  210  216  216  206  206   204 #>  [9729,]  189  196  200  214  211  217  217  207  207   205 #>  [9730,]  189  196  200  215  212  217  217  207  207   205 #>  [9731,]  189  197  201  213  210  216  216  206  206   204 #>  [9732,]  189  196  200  214  211  217  217  207  207   205 #>  [9733,]  189  196  200  215  212  217  217  207  207   205 #>  [9734,]  189  196  200  214  211  217  217  207  207   205 #>  [9735,]  189  196  200  214  211  217  217  207  207   205 #>  [9736,]  189  196  200  215  212  217  217  207  207   205 #>  [9737,]  189  197  201  213  210  216  216  206  206   204 #>  [9738,]  189  197  201  213  210  216  216  206  206   204 #>  [9739,]  189  197  201  213  210  216  216  206  206   204 #>  [9740,]  189  196  200  214  211  217  217  207  207   205 #>  [9741,]  189  196  200  215  212  217  217  207  207   205 #>  [9742,]  189  196  200  215  212  217  217  207  207   205 #>  [9743,]  189  197  201  213  210  216  216  206  206   204 #>  [9744,]  189  197  201  213  210  216  216  206  206   204 #>  [9745,]  189  197  201  213  210  216  216  206  206   204 #>  [9746,]  189  197  201  213  210  216  216  206  206   204 #>  [9747,]  189  197  201  213  210  216  216  206  206   204 #>  [9748,]  189  196  200  215  212  217  217  207  207   205 #>  [9749,]  189  197  201  213  210  216  216  206  206   204 #>  [9750,]  189  197  201  213  210  216  216  206  206   204 #>  [9751,]  189  196  200  214  211  217  217  207  207   205 #>  [9752,]  189  196  200  214  211  217  217  207  207   205 #>  [9753,]  189  197  201  213  210  216  216  206  206   204 #>  [9754,]  189  196  200  214  211  217  217  207  207   205 #>  [9755,]  189  196  200  214  211  217  217  207  207   205 #>  [9756,]  189  197  201  213  210  216  216  206  206   204 #>  [9757,]  189  196  200  214  211  217  217  207  207   205 #>  [9758,]  189  196  200  215  212  217  217  207  207   205 #>  [9759,]  189  197  201  213  210  216  216  206  206   204 #>  [9760,]  189  196  200  215  212  217  217  207  207   205 #>  [9761,]  189  197  201  213  210  216  216  206  206   204 #>  [9762,]  189  196  200  215  212  217  217  207  207   205 #>  [9763,]  189  196  200  214  211  217  217  207  207   205 #>  [9764,]  189  197  201  213  210  216  216  206  206   204 #>  [9765,]  189  197  201  213  210  216  216  206  206   204 #>  [9766,]  189  196  200  214  211  217  217  207  207   205 #>  [9767,]  189  196  200  214  211  217  217  207  207   205 #>  [9768,]  189  196  200  215  212  217  217  207  207   205 #>  [9769,]  189  196  200  215  212  217  217  207  207   205 #>  [9770,]  189  197  201  213  210  216  216  206  206   204 #>  [9771,]  189  197  201  213  210  216  216  206  206   204 #>  [9772,]  189  197  201  213  210  216  216  206  206   204 #>  [9773,]  189  197  201  213  210  216  216  206  206   204 #>  [9774,]  189  197  201  213  210  216  216  206  206   204 #>  [9775,]  189  197  201  213  210  216  216  206  206   204 #>  [9776,]  189  197  201  213  210  216  216  206  206   204 #>  [9777,]  189  197  201  213  210  216  216  206  206   204 #>  [9778,]  189  196  200  214  211  217  217  207  207   205 #>  [9779,]  189  197  201  213  210  216  216  206  206   204 #>  [9780,]  189  196  200  214  211  217  217  207  207   205 #>  [9781,]  189  196  200  214  211  217  217  207  207   205 #>  [9782,]  189  197  201  213  210  216  216  206  206   204 #>  [9783,]  189  196  200  214  211  217  217  207  207   205 #>  [9784,]  189  197  201  213  210  216  216  206  206   204 #>  [9785,]  189  197  201  213  210  216  216  206  206   204 #>  [9786,]  189  197  201  213  210  216  216  206  206   204 #>  [9787,]  189  197  201  213  210  216  216  206  206   204 #>  [9788,]  189  197  201  213  210  216  216  206  206   204 #>  [9789,]  189  196  200  214  211  217  217  207  207   205 #>  [9790,]  189  197  201  213  210  216  216  206  206   204 #>  [9791,]  189  196  200  214  211  217  217  207  207   205 #>  [9792,]  189  197  201  213  210  216  216  206  206   204 #>  [9793,]  189  196  200  215  212  217  217  207  207   205 #>  [9794,]  189  197  201  213  210  216  216  206  206   204 #>  [9795,]  189  197  201  213  210  216  216  206  206   204 #>  [9796,]  189  197  201  213  210  216  216  206  206   204 #>  [9797,]  189  196  200  215  212  217  217  207  207   205 #>  [9798,]  189  196  200  214  211  217  217  207  207   205 #>  [9799,]  189  196  200  214  211  217  217  207  207   205 #>  [9800,]  189  197  201  213  210  216  216  206  206   204 #>  [9801,]  191  199  203  217  213  219  219  209  209   206 #>  [9802,]  191  199  203  217  213  219  219  209  209   206 #>  [9803,]  191  199  203  217  213  218  218  208  208   206 #>  [9804,]  190  198  202  216  213  218  218  208  208   206 #>  [9805,]  191  199  203  217  213  218  218  208  208   206 #>  [9806,]  191  199  203  217  213  219  219  209  209   206 #>  [9807,]  191  199  203  217  213  218  218  208  208   206 #>  [9808,]  190  198  202  216  213  218  218  208  208   206 #>  [9809,]  190  198  202  216  213  218  218  208  208   206 #>  [9810,]  191  199  203  217  213  218  218  208  208   206 #>  [9811,]  190  198  202  216  213  218  218  208  208   206 #>  [9812,]  191  199  203  217  213  218  218  208  208   206 #>  [9813,]  190  198  202  216  213  219  219  209  209   206 #>  [9814,]  191  199  203  217  213  219  219  209  209   206 #>  [9815,]  191  199  203  217  213  219  219  209  209   206 #>  [9816,]  191  199  203  217  213  219  219  209  209   206 #>  [9817,]  190  198  202  216  213  219  219  209  209   206 #>  [9818,]  191  199  203  217  213  218  218  208  208   206 #>  [9819,]  191  199  203  217  213  218  218  208  208   206 #>  [9820,]  191  199  203  217  213  218  218  208  208   206 #>  [9821,]  191  199  203  217  213  219  219  209  209   206 #>  [9822,]  190  198  202  216  213  218  218  208  208   206 #>  [9823,]  191  199  203  217  213  218  218  208  208   206 #>  [9824,]  191  199  203  217  213  218  218  208  208   206 #>  [9825,]  191  199  203  217  213  218  218  208  208   206 #>  [9826,]  191  199  203  217  213  219  219  209  209   206 #>  [9827,]  190  198  202  216  213  219  219  209  209   206 #>  [9828,]  191  199  203  217  213  218  218  208  208   206 #>  [9829,]  191  199  203  217  213  219  219  209  209   206 #>  [9830,]  191  199  203  217  213  218  218  208  208   206 #>  [9831,]  191  199  203  217  213  218  218  208  208   206 #>  [9832,]  191  199  203  217  213  218  218  208  208   206 #>  [9833,]  191  199  203  217  213  219  219  209  209   206 #>  [9834,]  191  199  203  217  213  218  218  208  208   206 #>  [9835,]  190  198  202  216  213  219  219  209  209   206 #>  [9836,]  191  199  203  217  213  218  218  208  208   206 #>  [9837,]  191  199  203  217  213  218  218  208  208   206 #>  [9838,]  191  199  203  217  213  218  218  208  208   206 #>  [9839,]  191  199  203  217  213  218  218  208  208   206 #>  [9840,]  191  199  203  217  213  218  218  208  208   206 #>  [9841,]  191  199  203  217  213  219  219  209  209   206 #>  [9842,]  191  199  203  217  213  218  218  208  208   206 #>  [9843,]  190  198  202  216  213  218  218  208  208   206 #>  [9844,]  190  198  202  216  213  219  219  209  209   206 #>  [9845,]  191  199  203  217  213  218  218  208  208   206 #>  [9846,]  191  199  203  217  213  218  218  208  208   206 #>  [9847,]  191  199  203  217  213  218  218  208  208   206 #>  [9848,]  191  199  203  217  213  218  218  208  208   206 #>  [9849,]  190  198  202  216  213  218  218  208  208   206 #>  [9850,]  191  199  203  217  213  219  219  209  209   206 #>  [9851,]  191  199  203  217  213  218  218  208  208   206 #>  [9852,]  190  198  202  216  213  218  218  208  208   206 #>  [9853,]  191  199  203  217  213  218  218  208  208   206 #>  [9854,]  191  199  203  217  213  218  218  208  208   206 #>  [9855,]  190  198  202  216  213  218  218  208  208   206 #>  [9856,]  191  199  203  217  213  218  218  208  208   206 #>  [9857,]  191  199  203  217  213  218  218  208  208   206 #>  [9858,]  190  198  202  216  213  218  218  208  208   206 #>  [9859,]  191  199  203  217  213  219  219  209  209   206 #>  [9860,]  191  199  203  217  213  218  218  208  208   206 #>  [9861,]  191  199  203  217  213  219  219  209  209   206 #>  [9862,]  191  199  203  217  213  218  218  208  208   206 #>  [9863,]  191  199  203  217  213  218  218  208  208   206 #>  [9864,]  191  199  203  217  213  218  218  208  208   206 #>  [9865,]  191  199  203  217  213  218  218  208  208   206 #>  [9866,]  190  198  202  216  213  218  218  208  208   206 #>  [9867,]  191  199  203  217  213  218  218  208  208   206 #>  [9868,]  191  199  203  217  213  219  219  209  209   206 #>  [9869,]  190  198  202  216  213  218  218  208  208   206 #>  [9870,]  191  199  203  217  213  219  219  209  209   206 #>  [9871,]  191  199  203  217  213  219  219  209  209   206 #>  [9872,]  191  199  203  217  213  218  218  208  208   206 #>  [9873,]  191  199  203  217  213  219  219  209  209   206 #>  [9874,]  191  199  203  217  213  218  218  208  208   206 #>  [9875,]  191  199  203  217  213  218  218  208  208   206 #>  [9876,]  191  199  203  217  213  219  219  209  209   206 #>  [9877,]  191  199  203  217  213  219  219  209  209   206 #>  [9878,]  191  199  203  217  213  218  218  208  208   206 #>  [9879,]  190  198  202  216  213  219  219  209  209   206 #>  [9880,]  190  198  202  216  213  218  218  208  208   206 #>  [9881,]  190  198  202  216  213  219  219  209  209   206 #>  [9882,]  190  198  202  216  213  218  218  208  208   206 #>  [9883,]  190  198  202  216  213  219  219  209  209   206 #>  [9884,]  191  199  203  217  213  218  218  208  208   206 #>  [9885,]  191  199  203  217  213  218  218  208  208   206 #>  [9886,]  191  199  203  217  213  219  219  209  209   206 #>  [9887,]  190  198  202  216  213  218  218  208  208   206 #>  [9888,]  190  198  202  216  213  218  218  208  208   206 #>  [9889,]  190  198  202  216  213  218  218  208  208   206 #>  [9890,]  190  198  202  216  213  218  218  208  208   206 #>  [9891,]  191  199  203  217  213  218  218  208  208   206 #>  [9892,]  190  198  202  216  213  218  218  208  208   206 #>  [9893,]  191  199  203  217  213  219  219  209  209   206 #>  [9894,]  191  199  203  217  213  219  219  209  209   206 #>  [9895,]  190  198  202  216  213  218  218  208  208   206 #>  [9896,]  191  199  203  217  213  219  219  209  209   206 #>  [9897,]  191  199  203  217  213  218  218  208  208   206 #>  [9898,]  191  199  203  217  213  218  218  208  208   206 #>  [9899,]  190  198  202  216  213  219  219  209  209   206 #>  [9900,]  191  199  203  217  213  219  219  209  209   206 #>  [9901,]  193  201  205  219  215  221  221  211  211   208 #>  [9902,]  193  201  205  219  215  221  221  211  211   208 #>  [9903,]  192  200  204  218  214  220  220  210  210   207 #>  [9904,]  193  201  205  219  215  221  221  211  211   208 #>  [9905,]  193  201  205  219  215  221  221  211  211   208 #>  [9906,]  192  200  204  218  214  220  220  210  210   207 #>  [9907,]  192  200  204  218  214  220  220  210  210   207 #>  [9908,]  193  201  205  219  215  221  221  211  211   208 #>  [9909,]  193  201  205  219  215  221  221  211  211   208 #>  [9910,]  193  201  205  219  215  221  221  211  211   208 #>  [9911,]  193  201  205  219  215  221  221  211  211   208 #>  [9912,]  193  201  205  219  215  221  221  211  211   208 #>  [9913,]  193  201  205  219  215  221  221  211  211   208 #>  [9914,]  193  201  205  219  215  221  221  211  211   208 #>  [9915,]  193  201  205  219  215  221  221  211  211   208 #>  [9916,]  193  201  205  219  215  221  221  211  211   208 #>  [9917,]  193  201  205  219  215  221  221  211  211   208 #>  [9918,]  193  201  205  219  215  221  221  211  211   208 #>  [9919,]  193  201  205  219  215  221  221  211  211   208 #>  [9920,]  192  200  204  218  214  220  220  210  210   207 #>  [9921,]  192  200  204  218  214  220  220  210  210   207 #>  [9922,]  193  201  205  219  215  221  221  211  211   208 #>  [9923,]  192  200  204  218  214  220  220  210  210   207 #>  [9924,]  193  201  205  219  215  221  221  211  211   208 #>  [9925,]  192  200  204  218  214  220  220  210  210   207 #>  [9926,]  193  201  205  219  215  221  221  211  211   208 #>  [9927,]  193  201  205  219  215  221  221  211  211   208 #>  [9928,]  193  201  205  219  215  221  221  211  211   208 #>  [9929,]  193  201  205  219  215  221  221  211  211   208 #>  [9930,]  193  201  205  219  215  221  221  211  211   208 #>  [9931,]  193  201  205  219  215  221  221  211  211   208 #>  [9932,]  193  201  205  219  215  221  221  211  211   208 #>  [9933,]  193  201  205  219  215  221  221  211  211   208 #>  [9934,]  192  200  204  218  214  220  220  210  210   207 #>  [9935,]  192  200  204  218  214  220  220  210  210   207 #>  [9936,]  193  201  205  219  215  221  221  211  211   208 #>  [9937,]  192  200  204  218  214  220  220  210  210   207 #>  [9938,]  193  201  205  219  215  221  221  211  211   208 #>  [9939,]  193  201  205  219  215  221  221  211  211   208 #>  [9940,]  193  201  205  219  215  221  221  211  211   208 #>  [9941,]  193  201  205  219  215  221  221  211  211   208 #>  [9942,]  192  200  204  218  214  220  220  210  210   207 #>  [9943,]  193  201  205  219  215  221  221  211  211   208 #>  [9944,]  192  200  204  218  214  220  220  210  210   207 #>  [9945,]  193  201  205  219  215  221  221  211  211   208 #>  [9946,]  193  201  205  219  215  221  221  211  211   208 #>  [9947,]  193  201  205  219  215  221  221  211  211   208 #>  [9948,]  193  201  205  219  215  221  221  211  211   208 #>  [9949,]  193  201  205  219  215  221  221  211  211   208 #>  [9950,]  193  201  205  219  215  221  221  211  211   208 #>  [9951,]  193  201  205  219  215  221  221  211  211   208 #>  [9952,]  193  201  205  219  215  221  221  211  211   208 #>  [9953,]  192  200  204  218  214  220  220  210  210   207 #>  [9954,]  193  201  205  219  215  221  221  211  211   208 #>  [9955,]  193  201  205  219  215  221  221  211  211   208 #>  [9956,]  192  200  204  218  214  220  220  210  210   207 #>  [9957,]  192  200  204  218  214  220  220  210  210   207 #>  [9958,]  193  201  205  219  215  221  221  211  211   208 #>  [9959,]  193  201  205  219  215  221  221  211  211   208 #>  [9960,]  193  201  205  219  215  221  221  211  211   208 #>  [9961,]  193  201  205  219  215  221  221  211  211   208 #>  [9962,]  193  201  205  219  215  221  221  211  211   208 #>  [9963,]  193  201  205  219  215  221  221  211  211   208 #>  [9964,]  193  201  205  219  215  221  221  211  211   208 #>  [9965,]  192  200  204  218  214  220  220  210  210   207 #>  [9966,]  193  201  205  219  215  221  221  211  211   208 #>  [9967,]  193  201  205  219  215  221  221  211  211   208 #>  [9968,]  193  201  205  219  215  221  221  211  211   208 #>  [9969,]  193  201  205  219  215  221  221  211  211   208 #>  [9970,]  193  201  205  219  215  221  221  211  211   208 #>  [9971,]  193  201  205  219  215  221  221  211  211   208 #>  [9972,]  193  201  205  219  215  221  221  211  211   208 #>  [9973,]  192  200  204  218  214  220  220  210  210   207 #>  [9974,]  192  200  204  218  214  220  220  210  210   207 #>  [9975,]  193  201  205  219  215  221  221  211  211   208 #>  [9976,]  193  201  205  219  215  221  221  211  211   208 #>  [9977,]  193  201  205  219  215  221  221  211  211   208 #>  [9978,]  193  201  205  219  215  221  221  211  211   208 #>  [9979,]  193  201  205  219  215  221  221  211  211   208 #>  [9980,]  192  200  204  218  214  220  220  210  210   207 #>  [9981,]  193  201  205  219  215  221  221  211  211   208 #>  [9982,]  192  200  204  218  214  220  220  210  210   207 #>  [9983,]  193  201  205  219  215  221  221  211  211   208 #>  [9984,]  192  200  204  218  214  220  220  210  210   207 #>  [9985,]  192  200  204  218  214  220  220  210  210   207 #>  [9986,]  192  200  204  218  214  220  220  210  210   207 #>  [9987,]  193  201  205  219  215  221  221  211  211   208 #>  [9988,]  193  201  205  219  215  221  221  211  211   208 #>  [9989,]  192  200  204  218  214  220  220  210  210   207 #>  [9990,]  193  201  205  219  215  221  221  211  211   208 #>  [9991,]  193  201  205  219  215  221  221  211  211   208 #>  [9992,]  193  201  205  219  215  221  221  211  211   208 #>  [9993,]  193  201  205  219  215  221  221  211  211   208 #>  [9994,]  192  200  204  218  214  220  220  210  210   207 #>  [9995,]  193  201  205  219  215  221  221  211  211   208 #>  [9996,]  193  201  205  219  215  221  221  211  211   208 #>  [9997,]  193  201  205  219  215  221  221  211  211   208 #>  [9998,]  193  201  205  219  215  221  221  211  211   208 #>  [9999,]  192  200  204  218  214  220  220  210  210   207 #>  [ reached getOption(\"max.print\") -- omitted 10001 rows ] computeForestLeafIndices(bart_model, X, \"mean\", 0) #>          [,1] #>     [1,]    1 #>     [2,]    1 #>     [3,]    1 #>     [4,]    1 #>     [5,]    1 #>     [6,]    1 #>     [7,]    0 #>     [8,]    1 #>     [9,]    1 #>    [10,]    1 #>    [11,]    1 #>    [12,]    1 #>    [13,]    1 #>    [14,]    1 #>    [15,]    1 #>    [16,]    1 #>    [17,]    1 #>    [18,]    1 #>    [19,]    1 #>    [20,]    1 #>    [21,]    0 #>    [22,]    1 #>    [23,]    0 #>    [24,]    1 #>    [25,]    1 #>    [26,]    1 #>    [27,]    1 #>    [28,]    1 #>    [29,]    1 #>    [30,]    0 #>    [31,]    1 #>    [32,]    1 #>    [33,]    1 #>    [34,]    1 #>    [35,]    1 #>    [36,]    1 #>    [37,]    1 #>    [38,]    1 #>    [39,]    0 #>    [40,]    1 #>    [41,]    1 #>    [42,]    1 #>    [43,]    1 #>    [44,]    1 #>    [45,]    1 #>    [46,]    1 #>    [47,]    0 #>    [48,]    1 #>    [49,]    0 #>    [50,]    1 #>    [51,]    1 #>    [52,]    1 #>    [53,]    1 #>    [54,]    0 #>    [55,]    1 #>    [56,]    1 #>    [57,]    1 #>    [58,]    1 #>    [59,]    1 #>    [60,]    1 #>    [61,]    1 #>    [62,]    0 #>    [63,]    1 #>    [64,]    1 #>    [65,]    1 #>    [66,]    1 #>    [67,]    1 #>    [68,]    1 #>    [69,]    1 #>    [70,]    0 #>    [71,]    1 #>    [72,]    1 #>    [73,]    1 #>    [74,]    1 #>    [75,]    1 #>    [76,]    1 #>    [77,]    1 #>    [78,]    1 #>    [79,]    0 #>    [80,]    0 #>    [81,]    1 #>    [82,]    1 #>    [83,]    0 #>    [84,]    1 #>    [85,]    1 #>    [86,]    1 #>    [87,]    1 #>    [88,]    1 #>    [89,]    1 #>    [90,]    1 #>    [91,]    1 #>    [92,]    1 #>    [93,]    1 #>    [94,]    1 #>    [95,]    0 #>    [96,]    1 #>    [97,]    1 #>    [98,]    0 #>    [99,]    1 #>   [100,]    1 #>   [101,]    2 #>   [102,]    2 #>   [103,]    2 #>   [104,]    2 #>   [105,]    2 #>   [106,]    2 #>   [107,]    2 #>   [108,]    2 #>   [109,]    2 #>   [110,]    2 #>   [111,]    2 #>   [112,]    2 #>   [113,]    3 #>   [114,]    2 #>   [115,]    3 #>   [116,]    2 #>   [117,]    2 #>   [118,]    2 #>   [119,]    3 #>   [120,]    3 #>   [121,]    2 #>   [122,]    3 #>   [123,]    2 #>   [124,]    2 #>   [125,]    2 #>   [126,]    2 #>   [127,]    3 #>   [128,]    2 #>   [129,]    3 #>   [130,]    2 #>   [131,]    2 #>   [132,]    2 #>   [133,]    2 #>   [134,]    2 #>   [135,]    2 #>   [136,]    3 #>   [137,]    3 #>   [138,]    3 #>   [139,]    2 #>   [140,]    2 #>   [141,]    2 #>   [142,]    2 #>   [143,]    2 #>   [144,]    2 #>   [145,]    2 #>   [146,]    3 #>   [147,]    2 #>   [148,]    2 #>   [149,]    2 #>   [150,]    2 #>   [151,]    3 #>   [152,]    2 #>   [153,]    3 #>   [154,]    2 #>   [155,]    3 #>   [156,]    2 #>   [157,]    2 #>   [158,]    3 #>   [159,]    2 #>   [160,]    2 #>   [161,]    2 #>   [162,]    2 #>   [163,]    2 #>   [164,]    3 #>   [165,]    2 #>   [166,]    3 #>   [167,]    2 #>   [168,]    2 #>   [169,]    3 #>   [170,]    2 #>   [171,]    3 #>   [172,]    2 #>   [173,]    2 #>   [174,]    2 #>   [175,]    2 #>   [176,]    2 #>   [177,]    3 #>   [178,]    2 #>   [179,]    2 #>   [180,]    3 #>   [181,]    3 #>   [182,]    2 #>   [183,]    3 #>   [184,]    2 #>   [185,]    2 #>   [186,]    2 #>   [187,]    3 #>   [188,]    2 #>   [189,]    2 #>   [190,]    3 #>   [191,]    2 #>   [192,]    2 #>   [193,]    2 #>   [194,]    2 #>   [195,]    2 #>   [196,]    3 #>   [197,]    3 #>   [198,]    2 #>   [199,]    2 #>   [200,]    3 #>   [201,]    5 #>   [202,]    5 #>   [203,]    5 #>   [204,]    5 #>   [205,]    5 #>   [206,]    5 #>   [207,]    5 #>   [208,]    5 #>   [209,]    5 #>   [210,]    5 #>   [211,]    5 #>   [212,]    4 #>   [213,]    5 #>   [214,]    5 #>   [215,]    4 #>   [216,]    5 #>   [217,]    4 #>   [218,]    5 #>   [219,]    5 #>   [220,]    5 #>   [221,]    5 #>   [222,]    5 #>   [223,]    4 #>   [224,]    5 #>   [225,]    5 #>   [226,]    5 #>   [227,]    5 #>   [228,]    5 #>   [229,]    5 #>   [230,]    5 #>   [231,]    4 #>   [232,]    5 #>   [233,]    5 #>   [234,]    4 #>   [235,]    5 #>   [236,]    5 #>   [237,]    4 #>   [238,]    5 #>   [239,]    5 #>   [240,]    5 #>   [241,]    5 #>   [242,]    4 #>   [243,]    4 #>   [244,]    4 #>   [245,]    5 #>   [246,]    5 #>   [247,]    5 #>   [248,]    4 #>   [249,]    5 #>   [250,]    5 #>   [251,]    5 #>   [252,]    5 #>   [253,]    5 #>   [254,]    5 #>   [255,]    5 #>   [256,]    5 #>   [257,]    5 #>   [258,]    5 #>   [259,]    5 #>   [260,]    5 #>   [261,]    5 #>   [262,]    5 #>   [263,]    4 #>   [264,]    5 #>   [265,]    5 #>   [266,]    5 #>   [267,]    5 #>   [268,]    5 #>   [269,]    5 #>   [270,]    4 #>   [271,]    5 #>   [272,]    5 #>   [273,]    5 #>   [274,]    5 #>   [275,]    4 #>   [276,]    5 #>   [277,]    5 #>   [278,]    4 #>   [279,]    4 #>   [280,]    5 #>   [281,]    4 #>   [282,]    5 #>   [283,]    5 #>   [284,]    5 #>   [285,]    5 #>   [286,]    5 #>   [287,]    5 #>   [288,]    5 #>   [289,]    5 #>   [290,]    5 #>   [291,]    5 #>   [292,]    5 #>   [293,]    5 #>   [294,]    4 #>   [295,]    4 #>   [296,]    5 #>   [297,]    5 #>   [298,]    5 #>   [299,]    5 #>   [300,]    4 #>   [301,]    7 #>   [302,]    7 #>   [303,]    6 #>   [304,]    7 #>   [305,]    6 #>   [306,]    6 #>   [307,]    7 #>   [308,]    7 #>   [309,]    7 #>   [310,]    7 #>   [311,]    6 #>   [312,]    6 #>   [313,]    7 #>   [314,]    6 #>   [315,]    7 #>   [316,]    7 #>   [317,]    7 #>   [318,]    7 #>   [319,]    6 #>   [320,]    6 #>   [321,]    7 #>   [322,]    6 #>   [323,]    7 #>   [324,]    6 #>   [325,]    7 #>   [326,]    6 #>   [327,]    7 #>   [328,]    7 #>   [329,]    6 #>   [330,]    6 #>   [331,]    7 #>   [332,]    6 #>   [333,]    6 #>   [334,]    6 #>   [335,]    6 #>   [336,]    6 #>   [337,]    7 #>   [338,]    7 #>   [339,]    7 #>   [340,]    6 #>   [341,]    6 #>   [342,]    6 #>   [343,]    7 #>   [344,]    7 #>   [345,]    7 #>   [346,]    7 #>   [347,]    7 #>   [348,]    6 #>   [349,]    6 #>   [350,]    7 #>   [351,]    6 #>   [352,]    6 #>   [353,]    7 #>   [354,]    6 #>   [355,]    6 #>   [356,]    7 #>   [357,]    6 #>   [358,]    6 #>   [359,]    6 #>   [360,]    6 #>   [361,]    7 #>   [362,]    6 #>   [363,]    6 #>   [364,]    7 #>   [365,]    6 #>   [366,]    6 #>   [367,]    6 #>   [368,]    6 #>   [369,]    6 #>   [370,]    7 #>   [371,]    7 #>   [372,]    7 #>   [373,]    7 #>   [374,]    7 #>   [375,]    7 #>   [376,]    7 #>   [377,]    7 #>   [378,]    6 #>   [379,]    7 #>   [380,]    6 #>   [381,]    6 #>   [382,]    7 #>   [383,]    6 #>   [384,]    7 #>   [385,]    6 #>   [386,]    7 #>   [387,]    7 #>   [388,]    7 #>   [389,]    6 #>   [390,]    7 #>   [391,]    6 #>   [392,]    6 #>   [393,]    6 #>   [394,]    7 #>   [395,]    7 #>   [396,]    7 #>   [397,]    6 #>   [398,]    6 #>   [399,]    6 #>   [400,]    7 #>   [401,]    9 #>   [402,]    9 #>   [403,]    8 #>   [404,]    9 #>   [405,]    9 #>   [406,]    9 #>   [407,]    8 #>   [408,]    9 #>   [409,]    9 #>   [410,]    9 #>   [411,]    9 #>   [412,]    8 #>   [413,]    9 #>   [414,]    9 #>   [415,]    9 #>   [416,]    9 #>   [417,]    9 #>   [418,]    9 #>   [419,]    9 #>   [420,]    9 #>   [421,]    9 #>   [422,]    9 #>   [423,]    9 #>   [424,]    9 #>   [425,]    9 #>   [426,]    9 #>   [427,]    9 #>   [428,]    9 #>   [429,]    9 #>   [430,]    9 #>   [431,]    8 #>   [432,]    9 #>   [433,]    9 #>   [434,]    9 #>   [435,]    9 #>   [436,]    9 #>   [437,]    9 #>   [438,]    9 #>   [439,]    9 #>   [440,]    9 #>   [441,]    9 #>   [442,]    9 #>   [443,]    9 #>   [444,]    9 #>   [445,]    9 #>   [446,]    9 #>   [447,]    9 #>   [448,]    9 #>   [449,]    9 #>   [450,]    9 #>   [451,]    9 #>   [452,]    8 #>   [453,]    9 #>   [454,]    9 #>   [455,]    9 #>   [456,]    9 #>   [457,]    9 #>   [458,]    9 #>   [459,]    8 #>   [460,]    8 #>   [461,]    9 #>   [462,]    9 #>   [463,]    9 #>   [464,]    9 #>   [465,]    9 #>   [466,]    9 #>   [467,]    9 #>   [468,]    9 #>   [469,]    9 #>   [470,]    9 #>   [471,]    9 #>   [472,]    9 #>   [473,]    9 #>   [474,]    9 #>   [475,]    9 #>   [476,]    9 #>   [477,]    9 #>   [478,]    9 #>   [479,]    9 #>   [480,]    9 #>   [481,]    9 #>   [482,]    9 #>   [483,]    9 #>   [484,]    9 #>   [485,]    9 #>   [486,]    9 #>   [487,]    9 #>   [488,]    9 #>   [489,]    9 #>   [490,]    9 #>   [491,]    9 #>   [492,]    9 #>   [493,]    9 #>   [494,]    9 #>   [495,]    9 #>   [496,]    9 #>   [497,]    8 #>   [498,]    9 #>   [499,]    9 #>   [500,]    9 #>   [501,]   10 #>   [502,]   10 #>   [503,]   10 #>   [504,]   11 #>   [505,]   10 #>   [506,]   10 #>   [507,]   10 #>   [508,]   10 #>   [509,]   11 #>   [510,]   10 #>   [511,]   11 #>   [512,]   11 #>   [513,]   10 #>   [514,]   11 #>   [515,]   11 #>   [516,]   10 #>   [517,]   10 #>   [518,]   10 #>   [519,]   11 #>   [520,]   10 #>   [521,]   11 #>   [522,]   10 #>   [523,]   10 #>   [524,]   10 #>   [525,]   10 #>   [526,]   10 #>   [527,]   11 #>   [528,]   10 #>   [529,]   10 #>   [530,]   10 #>   [531,]   11 #>   [532,]   10 #>   [533,]   11 #>   [534,]   10 #>   [535,]   10 #>   [536,]   11 #>   [537,]   10 #>   [538,]   11 #>   [539,]   10 #>   [540,]   10 #>   [541,]   11 #>   [542,]   11 #>   [543,]   10 #>   [544,]   10 #>   [545,]   10 #>   [546,]   10 #>   [547,]   10 #>   [548,]   11 #>   [549,]   10 #>   [550,]   10 #>   [551,]   10 #>   [552,]   10 #>   [553,]   10 #>   [554,]   10 #>   [555,]   10 #>   [556,]   10 #>   [557,]   10 #>   [558,]   11 #>   [559,]   10 #>   [560,]   10 #>   [561,]   11 #>   [562,]   10 #>   [563,]   10 #>   [564,]   10 #>   [565,]   10 #>   [566,]   10 #>   [567,]   10 #>   [568,]   11 #>   [569,]   11 #>   [570,]   10 #>   [571,]   10 #>   [572,]   10 #>   [573,]   10 #>   [574,]   11 #>   [575,]   11 #>   [576,]   10 #>   [577,]   10 #>   [578,]   10 #>   [579,]   10 #>   [580,]   10 #>   [581,]   10 #>   [582,]   11 #>   [583,]   10 #>   [584,]   10 #>   [585,]   11 #>   [586,]   10 #>   [587,]   10 #>   [588,]   10 #>   [589,]   10 #>   [590,]   10 #>   [591,]   10 #>   [592,]   11 #>   [593,]   11 #>   [594,]   10 #>   [595,]   10 #>   [596,]   11 #>   [597,]   11 #>   [598,]   10 #>   [599,]   10 #>   [600,]   10 #>   [601,]   13 #>   [602,]   12 #>   [603,]   12 #>   [604,]   13 #>   [605,]   12 #>   [606,]   12 #>   [607,]   13 #>   [608,]   13 #>   [609,]   13 #>   [610,]   13 #>   [611,]   12 #>   [612,]   12 #>   [613,]   13 #>   [614,]   12 #>   [615,]   13 #>   [616,]   13 #>   [617,]   13 #>   [618,]   13 #>   [619,]   12 #>   [620,]   12 #>   [621,]   13 #>   [622,]   12 #>   [623,]   13 #>   [624,]   12 #>   [625,]   13 #>   [626,]   12 #>   [627,]   13 #>   [628,]   13 #>   [629,]   12 #>   [630,]   12 #>   [631,]   12 #>   [632,]   12 #>   [633,]   12 #>   [634,]   12 #>   [635,]   12 #>   [636,]   12 #>   [637,]   12 #>   [638,]   12 #>   [639,]   13 #>   [640,]   12 #>   [641,]   12 #>   [642,]   12 #>   [643,]   13 #>   [644,]   12 #>   [645,]   13 #>   [646,]   13 #>   [647,]   13 #>   [648,]   12 #>   [649,]   12 #>   [650,]   12 #>   [651,]   12 #>   [652,]   12 #>   [653,]   13 #>   [654,]   12 #>   [655,]   12 #>   [656,]   13 #>   [657,]   12 #>   [658,]   12 #>   [659,]   12 #>   [660,]   12 #>   [661,]   13 #>   [662,]   12 #>   [663,]   12 #>   [664,]   13 #>   [665,]   12 #>   [666,]   12 #>   [667,]   12 #>   [668,]   12 #>   [669,]   12 #>   [670,]   13 #>   [671,]   13 #>   [672,]   13 #>   [673,]   13 #>   [674,]   13 #>   [675,]   13 #>   [676,]   13 #>   [677,]   13 #>   [678,]   12 #>   [679,]   12 #>   [680,]   12 #>   [681,]   12 #>   [682,]   13 #>   [683,]   12 #>   [684,]   13 #>   [685,]   12 #>   [686,]   12 #>   [687,]   12 #>   [688,]   13 #>   [689,]   12 #>   [690,]   12 #>   [691,]   12 #>   [692,]   12 #>   [693,]   12 #>   [694,]   13 #>   [695,]   13 #>   [696,]   12 #>   [697,]   12 #>   [698,]   12 #>   [699,]   12 #>   [700,]   13 #>   [701,]   15 #>   [702,]   14 #>   [703,]   15 #>   [704,]   15 #>   [705,]   15 #>   [706,]   14 #>   [707,]   15 #>   [708,]   15 #>   [709,]   15 #>   [710,]   15 #>   [711,]   14 #>   [712,]   14 #>   [713,]   15 #>   [714,]   15 #>   [715,]   14 #>   [716,]   15 #>   [717,]   14 #>   [718,]   15 #>   [719,]   15 #>   [720,]   15 #>   [721,]   15 #>   [722,]   15 #>   [723,]   14 #>   [724,]   15 #>   [725,]   15 #>   [726,]   15 #>   [727,]   15 #>   [728,]   15 #>   [729,]   14 #>   [730,]   15 #>   [731,]   14 #>   [732,]   15 #>   [733,]   15 #>   [734,]   14 #>   [735,]   15 #>   [736,]   15 #>   [737,]   14 #>   [738,]   15 #>   [739,]   15 #>   [740,]   15 #>   [741,]   15 #>   [742,]   14 #>   [743,]   14 #>   [744,]   14 #>   [745,]   15 #>   [746,]   15 #>   [747,]   14 #>   [748,]   14 #>   [749,]   15 #>   [750,]   15 #>   [751,]   15 #>   [752,]   15 #>   [753,]   15 #>   [754,]   15 #>   [755,]   15 #>   [756,]   14 #>   [757,]   15 #>   [758,]   15 #>   [759,]   15 #>   [760,]   15 #>   [761,]   14 #>   [762,]   15 #>   [763,]   14 #>   [764,]   14 #>   [765,]   14 #>   [766,]   15 #>   [767,]   15 #>   [768,]   15 #>   [769,]   15 #>   [770,]   14 #>   [771,]   15 #>   [772,]   15 #>   [773,]   15 #>   [774,]   15 #>   [775,]   14 #>   [776,]   15 #>   [777,]   15 #>   [778,]   14 #>   [779,]   14 #>   [780,]   15 #>   [781,]   14 #>   [782,]   15 #>   [783,]   15 #>   [784,]   15 #>   [785,]   15 #>   [786,]   15 #>   [787,]   15 #>   [788,]   15 #>   [789,]   15 #>   [790,]   15 #>   [791,]   15 #>   [792,]   14 #>   [793,]   15 #>   [794,]   14 #>   [795,]   14 #>   [796,]   15 #>   [797,]   15 #>   [798,]   15 #>   [799,]   15 #>   [800,]   14 #>   [801,]   17 #>   [802,]   17 #>   [803,]   16 #>   [804,]   17 #>   [805,]   17 #>   [806,]   17 #>   [807,]   16 #>   [808,]   16 #>   [809,]   17 #>   [810,]   17 #>   [811,]   17 #>   [812,]   17 #>   [813,]   17 #>   [814,]   17 #>   [815,]   17 #>   [816,]   16 #>   [817,]   17 #>   [818,]   17 #>   [819,]   17 #>   [820,]   16 #>   [821,]   17 #>   [822,]   17 #>   [823,]   17 #>   [824,]   16 #>   [825,]   16 #>   [826,]   17 #>   [827,]   17 #>   [828,]   17 #>   [829,]   17 #>   [830,]   17 #>   [831,]   17 #>   [832,]   17 #>   [833,]   17 #>   [834,]   17 #>   [835,]   17 #>   [836,]   17 #>   [837,]   17 #>   [838,]   17 #>   [839,]   16 #>   [840,]   17 #>   [841,]   17 #>   [842,]   17 #>   [843,]   17 #>   [844,]   16 #>   [845,]   17 #>   [846,]   16 #>   [847,]   17 #>   [848,]   17 #>   [849,]   16 #>   [850,]   16 #>   [851,]   17 #>   [852,]   17 #>   [853,]   16 #>   [854,]   17 #>   [855,]   16 #>   [856,]   16 #>   [857,]   17 #>   [858,]   17 #>   [859,]   16 #>   [860,]   17 #>   [861,]   17 #>   [862,]   17 #>   [863,]   17 #>   [864,]   17 #>   [865,]   16 #>   [866,]   16 #>   [867,]   17 #>   [868,]   17 #>   [869,]   17 #>   [870,]   16 #>   [871,]   17 #>   [872,]   16 #>   [873,]   17 #>   [874,]   17 #>   [875,]   17 #>   [876,]   17 #>   [877,]   17 #>   [878,]   17 #>   [879,]   17 #>   [880,]   17 #>   [881,]   17 #>   [882,]   17 #>   [883,]   17 #>   [884,]   16 #>   [885,]   17 #>   [886,]   16 #>   [887,]   17 #>   [888,]   17 #>   [889,]   17 #>   [890,]   16 #>   [891,]   17 #>   [892,]   17 #>   [893,]   17 #>   [894,]   17 #>   [895,]   17 #>   [896,]   17 #>   [897,]   17 #>   [898,]   16 #>   [899,]   17 #>   [900,]   16 #>   [901,]   19 #>   [902,]   19 #>   [903,]   19 #>   [904,]   18 #>   [905,]   19 #>   [906,]   19 #>   [907,]   19 #>   [908,]   18 #>   [909,]   18 #>   [910,]   18 #>   [911,]   19 #>   [912,]   19 #>   [913,]   19 #>   [914,]   19 #>   [915,]   19 #>   [916,]   19 #>   [917,]   19 #>   [918,]   19 #>   [919,]   19 #>   [920,]   18 #>   [921,]   19 #>   [922,]   19 #>   [923,]   19 #>   [924,]   19 #>   [925,]   19 #>   [926,]   19 #>   [927,]   19 #>   [928,]   19 #>   [929,]   19 #>   [930,]   18 #>   [931,]   19 #>   [932,]   19 #>   [933,]   19 #>   [934,]   19 #>   [935,]   19 #>   [936,]   19 #>   [937,]   19 #>   [938,]   19 #>   [939,]   19 #>   [940,]   19 #>   [941,]   19 #>   [942,]   19 #>   [943,]   18 #>   [944,]   19 #>   [945,]   19 #>   [946,]   19 #>   [947,]   19 #>   [948,]   19 #>   [949,]   19 #>   [950,]   19 #>   [951,]   18 #>   [952,]   19 #>   [953,]   18 #>   [954,]   19 #>   [955,]   19 #>   [956,]   18 #>   [957,]   19 #>   [958,]   19 #>   [959,]   19 #>   [960,]   18 #>   [961,]   19 #>   [962,]   19 #>   [963,]   19 #>   [964,]   18 #>   [965,]   19 #>   [966,]   18 #>   [967,]   18 #>   [968,]   19 #>   [969,]   19 #>   [970,]   19 #>   [971,]   19 #>   [972,]   19 #>   [973,]   19 #>   [974,]   19 #>   [975,]   19 #>   [976,]   19 #>   [977,]   19 #>   [978,]   18 #>   [979,]   19 #>   [980,]   19 #>   [981,]   19 #>   [982,]   19 #>   [983,]   19 #>   [984,]   19 #>   [985,]   18 #>   [986,]   19 #>   [987,]   19 #>   [988,]   19 #>   [989,]   18 #>   [990,]   19 #>   [991,]   18 #>   [992,]   19 #>   [993,]   19 #>   [994,]   19 #>   [995,]   18 #>   [996,]   19 #>   [997,]   19 #>   [998,]   19 #>   [999,]   19 #>  [1000,]   19 #>  [1001,]   21 #>  [1002,]   20 #>  [1003,]   20 #>  [1004,]   20 #>  [1005,]   21 #>  [1006,]   20 #>  [1007,]   20 #>  [1008,]   20 #>  [1009,]   20 #>  [1010,]   20 #>  [1011,]   20 #>  [1012,]   20 #>  [1013,]   20 #>  [1014,]   21 #>  [1015,]   21 #>  [1016,]   20 #>  [1017,]   20 #>  [1018,]   21 #>  [1019,]   20 #>  [1020,]   20 #>  [1021,]   20 #>  [1022,]   20 #>  [1023,]   20 #>  [1024,]   20 #>  [1025,]   20 #>  [1026,]   20 #>  [1027,]   21 #>  [1028,]   20 #>  [1029,]   20 #>  [1030,]   20 #>  [1031,]   20 #>  [1032,]   21 #>  [1033,]   20 #>  [1034,]   20 #>  [1035,]   20 #>  [1036,]   20 #>  [1037,]   20 #>  [1038,]   20 #>  [1039,]   20 #>  [1040,]   20 #>  [1041,]   20 #>  [1042,]   20 #>  [1043,]   21 #>  [1044,]   20 #>  [1045,]   20 #>  [1046,]   20 #>  [1047,]   20 #>  [1048,]   20 #>  [1049,]   20 #>  [1050,]   20 #>  [1051,]   20 #>  [1052,]   20 #>  [1053,]   20 #>  [1054,]   20 #>  [1055,]   20 #>  [1056,]   20 #>  [1057,]   20 #>  [1058,]   21 #>  [1059,]   20 #>  [1060,]   20 #>  [1061,]   20 #>  [1062,]   20 #>  [1063,]   20 #>  [1064,]   20 #>  [1065,]   20 #>  [1066,]   20 #>  [1067,]   20 #>  [1068,]   20 #>  [1069,]   20 #>  [1070,]   20 #>  [1071,]   21 #>  [1072,]   20 #>  [1073,]   20 #>  [1074,]   20 #>  [1075,]   21 #>  [1076,]   20 #>  [1077,]   20 #>  [1078,]   20 #>  [1079,]   20 #>  [1080,]   20 #>  [1081,]   20 #>  [1082,]   20 #>  [1083,]   20 #>  [1084,]   20 #>  [1085,]   20 #>  [1086,]   20 #>  [1087,]   20 #>  [1088,]   20 #>  [1089,]   20 #>  [1090,]   20 #>  [1091,]   21 #>  [1092,]   20 #>  [1093,]   20 #>  [1094,]   20 #>  [1095,]   21 #>  [1096,]   20 #>  [1097,]   20 #>  [1098,]   20 #>  [1099,]   20 #>  [1100,]   21 #>  [1101,]   23 #>  [1102,]   22 #>  [1103,]   23 #>  [1104,]   23 #>  [1105,]   23 #>  [1106,]   22 #>  [1107,]   23 #>  [1108,]   23 #>  [1109,]   23 #>  [1110,]   23 #>  [1111,]   22 #>  [1112,]   22 #>  [1113,]   23 #>  [1114,]   23 #>  [1115,]   22 #>  [1116,]   23 #>  [1117,]   22 #>  [1118,]   23 #>  [1119,]   22 #>  [1120,]   23 #>  [1121,]   23 #>  [1122,]   23 #>  [1123,]   22 #>  [1124,]   23 #>  [1125,]   23 #>  [1126,]   22 #>  [1127,]   23 #>  [1128,]   23 #>  [1129,]   22 #>  [1130,]   22 #>  [1131,]   22 #>  [1132,]   23 #>  [1133,]   23 #>  [1134,]   22 #>  [1135,]   22 #>  [1136,]   23 #>  [1137,]   22 #>  [1138,]   23 #>  [1139,]   23 #>  [1140,]   23 #>  [1141,]   23 #>  [1142,]   22 #>  [1143,]   22 #>  [1144,]   22 #>  [1145,]   23 #>  [1146,]   23 #>  [1147,]   22 #>  [1148,]   22 #>  [1149,]   23 #>  [1150,]   23 #>  [1151,]   23 #>  [1152,]   23 #>  [1153,]   23 #>  [1154,]   23 #>  [1155,]   23 #>  [1156,]   22 #>  [1157,]   23 #>  [1158,]   23 #>  [1159,]   23 #>  [1160,]   22 #>  [1161,]   22 #>  [1162,]   23 #>  [1163,]   22 #>  [1164,]   22 #>  [1165,]   22 #>  [1166,]   22 #>  [1167,]   23 #>  [1168,]   22 #>  [1169,]   23 #>  [1170,]   22 #>  [1171,]   23 #>  [1172,]   23 #>  [1173,]   23 #>  [1174,]   23 #>  [1175,]   22 #>  [1176,]   23 #>  [1177,]   23 #>  [1178,]   22 #>  [1179,]   22 #>  [1180,]   23 #>  [1181,]   22 #>  [1182,]   23 #>  [1183,]   23 #>  [1184,]   23 #>  [1185,]   23 #>  [1186,]   23 #>  [1187,]   23 #>  [1188,]   23 #>  [1189,]   23 #>  [1190,]   23 #>  [1191,]   23 #>  [1192,]   22 #>  [1193,]   23 #>  [1194,]   22 #>  [1195,]   22 #>  [1196,]   22 #>  [1197,]   23 #>  [1198,]   23 #>  [1199,]   23 #>  [1200,]   22 #>  [1201,]   25 #>  [1202,]   24 #>  [1203,]   24 #>  [1204,]   24 #>  [1205,]   25 #>  [1206,]   24 #>  [1207,]   24 #>  [1208,]   24 #>  [1209,]   24 #>  [1210,]   25 #>  [1211,]   25 #>  [1212,]   25 #>  [1213,]   24 #>  [1214,]   25 #>  [1215,]   25 #>  [1216,]   25 #>  [1217,]   25 #>  [1218,]   25 #>  [1219,]   25 #>  [1220,]   24 #>  [1221,]   24 #>  [1222,]   25 #>  [1223,]   24 #>  [1224,]   25 #>  [1225,]   24 #>  [1226,]   25 #>  [1227,]   25 #>  [1228,]   24 #>  [1229,]   24 #>  [1230,]   24 #>  [1231,]   25 #>  [1232,]   25 #>  [1233,]   24 #>  [1234,]   24 #>  [1235,]   24 #>  [1236,]   24 #>  [1237,]   24 #>  [1238,]   25 #>  [1239,]   25 #>  [1240,]   24 #>  [1241,]   24 #>  [1242,]   24 #>  [1243,]   25 #>  [1244,]   24 #>  [1245,]   24 #>  [1246,]   24 #>  [1247,]   25 #>  [1248,]   24 #>  [1249,]   24 #>  [1250,]   24 #>  [1251,]   25 #>  [1252,]   25 #>  [1253,]   24 #>  [1254,]   24 #>  [1255,]   24 #>  [1256,]   24 #>  [1257,]   24 #>  [1258,]   25 #>  [1259,]   25 #>  [1260,]   24 #>  [1261,]   25 #>  [1262,]   24 #>  [1263,]   24 #>  [1264,]   24 #>  [1265,]   24 #>  [1266,]   25 #>  [1267,]   24 #>  [1268,]   25 #>  [1269,]   24 #>  [1270,]   25 #>  [1271,]   25 #>  [1272,]   24 #>  [1273,]   24 #>  [1274,]   24 #>  [1275,]   25 #>  [1276,]   24 #>  [1277,]   25 #>  [1278,]   24 #>  [1279,]   25 #>  [1280,]   24 #>  [1281,]   24 #>  [1282,]   24 #>  [1283,]   25 #>  [1284,]   24 #>  [1285,]   24 #>  [1286,]   24 #>  [1287,]   25 #>  [1288,]   24 #>  [1289,]   24 #>  [1290,]   25 #>  [1291,]   25 #>  [1292,]   25 #>  [1293,]   24 #>  [1294,]   24 #>  [1295,]   25 #>  [1296,]   25 #>  [1297,]   24 #>  [1298,]   24 #>  [1299,]   24 #>  [1300,]   25 #>  [1301,]   27 #>  [1302,]   27 #>  [1303,]   26 #>  [1304,]   26 #>  [1305,]   27 #>  [1306,]   27 #>  [1307,]   26 #>  [1308,]   26 #>  [1309,]   27 #>  [1310,]   27 #>  [1311,]   27 #>  [1312,]   26 #>  [1313,]   27 #>  [1314,]   26 #>  [1315,]   27 #>  [1316,]   27 #>  [1317,]   27 #>  [1318,]   27 #>  [1319,]   27 #>  [1320,]   27 #>  [1321,]   27 #>  [1322,]   27 #>  [1323,]   26 #>  [1324,]   27 #>  [1325,]   26 #>  [1326,]   27 #>  [1327,]   27 #>  [1328,]   27 #>  [1329,]   27 #>  [1330,]   27 #>  [1331,]   26 #>  [1332,]   26 #>  [1333,]   27 #>  [1334,]   27 #>  [1335,]   27 #>  [1336,]   27 #>  [1337,]   26 #>  [1338,]   27 #>  [1339,]   27 #>  [1340,]   26 #>  [1341,]   27 #>  [1342,]   27 #>  [1343,]   27 #>  [1344,]   26 #>  [1345,]   27 #>  [1346,]   26 #>  [1347,]   26 #>  [1348,]   27 #>  [1349,]   27 #>  [1350,]   27 #>  [1351,]   27 #>  [1352,]   26 #>  [1353,]   27 #>  [1354,]   27 #>  [1355,]   26 #>  [1356,]   27 #>  [1357,]   26 #>  [1358,]   27 #>  [1359,]   26 #>  [1360,]   26 #>  [1361,]   27 #>  [1362,]   27 #>  [1363,]   27 #>  [1364,]   27 #>  [1365,]   27 #>  [1366,]   27 #>  [1367,]   26 #>  [1368,]   26 #>  [1369,]   27 #>  [1370,]   27 #>  [1371,]   27 #>  [1372,]   26 #>  [1373,]   27 #>  [1374,]   26 #>  [1375,]   26 #>  [1376,]   26 #>  [1377,]   27 #>  [1378,]   26 #>  [1379,]   27 #>  [1380,]   26 #>  [1381,]   27 #>  [1382,]   27 #>  [1383,]   27 #>  [1384,]   27 #>  [1385,]   27 #>  [1386,]   26 #>  [1387,]   27 #>  [1388,]   27 #>  [1389,]   27 #>  [1390,]   27 #>  [1391,]   27 #>  [1392,]   26 #>  [1393,]   27 #>  [1394,]   27 #>  [1395,]   27 #>  [1396,]   26 #>  [1397,]   26 #>  [1398,]   26 #>  [1399,]   27 #>  [1400,]   27 #>  [1401,]   28 #>  [1402,]   28 #>  [1403,]   28 #>  [1404,]   29 #>  [1405,]   28 #>  [1406,]   28 #>  [1407,]   28 #>  [1408,]   28 #>  [1409,]   28 #>  [1410,]   29 #>  [1411,]   28 #>  [1412,]   28 #>  [1413,]   28 #>  [1414,]   28 #>  [1415,]   28 #>  [1416,]   28 #>  [1417,]   28 #>  [1418,]   29 #>  [1419,]   28 #>  [1420,]   28 #>  [1421,]   28 #>  [1422,]   28 #>  [1423,]   28 #>  [1424,]   28 #>  [1425,]   29 #>  [1426,]   28 #>  [1427,]   28 #>  [1428,]   28 #>  [1429,]   28 #>  [1430,]   28 #>  [1431,]   28 #>  [1432,]   28 #>  [1433,]   28 #>  [1434,]   28 #>  [1435,]   28 #>  [1436,]   28 #>  [1437,]   28 #>  [1438,]   28 #>  [1439,]   29 #>  [1440,]   28 #>  [1441,]   28 #>  [1442,]   28 #>  [1443,]   29 #>  [1444,]   28 #>  [1445,]   29 #>  [1446,]   28 #>  [1447,]   28 #>  [1448,]   28 #>  [1449,]   28 #>  [1450,]   28 #>  [1451,]   28 #>  [1452,]   28 #>  [1453,]   28 #>  [1454,]   28 #>  [1455,]   28 #>  [1456,]   28 #>  [1457,]   28 #>  [1458,]   28 #>  [1459,]   28 #>  [1460,]   28 #>  [1461,]   28 #>  [1462,]   28 #>  [1463,]   28 #>  [1464,]   28 #>  [1465,]   28 #>  [1466,]   28 #>  [1467,]   28 #>  [1468,]   28 #>  [1469,]   28 #>  [1470,]   28 #>  [1471,]   28 #>  [1472,]   28 #>  [1473,]   29 #>  [1474,]   29 #>  [1475,]   29 #>  [1476,]   29 #>  [1477,]   29 #>  [1478,]   28 #>  [1479,]   28 #>  [1480,]   28 #>  [1481,]   28 #>  [1482,]   28 #>  [1483,]   28 #>  [1484,]   28 #>  [1485,]   28 #>  [1486,]   28 #>  [1487,]   28 #>  [1488,]   28 #>  [1489,]   28 #>  [1490,]   28 #>  [1491,]   28 #>  [1492,]   28 #>  [1493,]   28 #>  [1494,]   28 #>  [1495,]   28 #>  [1496,]   28 #>  [1497,]   28 #>  [1498,]   28 #>  [1499,]   28 #>  [1500,]   28 #>  [1501,]   30 #>  [1502,]   31 #>  [1503,]   30 #>  [1504,]   30 #>  [1505,]   31 #>  [1506,]   30 #>  [1507,]   31 #>  [1508,]   30 #>  [1509,]   31 #>  [1510,]   31 #>  [1511,]   30 #>  [1512,]   31 #>  [1513,]   31 #>  [1514,]   30 #>  [1515,]   30 #>  [1516,]   30 #>  [1517,]   31 #>  [1518,]   31 #>  [1519,]   30 #>  [1520,]   31 #>  [1521,]   31 #>  [1522,]   31 #>  [1523,]   31 #>  [1524,]   31 #>  [1525,]   30 #>  [1526,]   30 #>  [1527,]   31 #>  [1528,]   30 #>  [1529,]   31 #>  [1530,]   31 #>  [1531,]   31 #>  [1532,]   31 #>  [1533,]   31 #>  [1534,]   30 #>  [1535,]   30 #>  [1536,]   31 #>  [1537,]   30 #>  [1538,]   30 #>  [1539,]   31 #>  [1540,]   31 #>  [1541,]   31 #>  [1542,]   30 #>  [1543,]   30 #>  [1544,]   31 #>  [1545,]   30 #>  [1546,]   30 #>  [1547,]   31 #>  [1548,]   31 #>  [1549,]   30 #>  [1550,]   31 #>  [1551,]   31 #>  [1552,]   30 #>  [1553,]   31 #>  [1554,]   31 #>  [1555,]   30 #>  [1556,]   30 #>  [1557,]   30 #>  [1558,]   31 #>  [1559,]   30 #>  [1560,]   31 #>  [1561,]   31 #>  [1562,]   30 #>  [1563,]   31 #>  [1564,]   30 #>  [1565,]   30 #>  [1566,]   30 #>  [1567,]   30 #>  [1568,]   30 #>  [1569,]   30 #>  [1570,]   31 #>  [1571,]   31 #>  [1572,]   30 #>  [1573,]   30 #>  [1574,]   31 #>  [1575,]   31 #>  [1576,]   31 #>  [1577,]   30 #>  [1578,]   31 #>  [1579,]   30 #>  [1580,]   31 #>  [1581,]   31 #>  [1582,]   30 #>  [1583,]   31 #>  [1584,]   31 #>  [1585,]   30 #>  [1586,]   31 #>  [1587,]   31 #>  [1588,]   31 #>  [1589,]   30 #>  [1590,]   31 #>  [1591,]   30 #>  [1592,]   31 #>  [1593,]   31 #>  [1594,]   30 #>  [1595,]   31 #>  [1596,]   30 #>  [1597,]   30 #>  [1598,]   30 #>  [1599,]   30 #>  [1600,]   30 #>  [1601,]   33 #>  [1602,]   33 #>  [1603,]   32 #>  [1604,]   33 #>  [1605,]   33 #>  [1606,]   33 #>  [1607,]   33 #>  [1608,]   33 #>  [1609,]   33 #>  [1610,]   33 #>  [1611,]   32 #>  [1612,]   32 #>  [1613,]   33 #>  [1614,]   32 #>  [1615,]   33 #>  [1616,]   33 #>  [1617,]   33 #>  [1618,]   33 #>  [1619,]   32 #>  [1620,]   32 #>  [1621,]   33 #>  [1622,]   32 #>  [1623,]   33 #>  [1624,]   32 #>  [1625,]   33 #>  [1626,]   32 #>  [1627,]   33 #>  [1628,]   33 #>  [1629,]   32 #>  [1630,]   32 #>  [1631,]   33 #>  [1632,]   32 #>  [1633,]   33 #>  [1634,]   32 #>  [1635,]   33 #>  [1636,]   32 #>  [1637,]   33 #>  [1638,]   33 #>  [1639,]   33 #>  [1640,]   32 #>  [1641,]   32 #>  [1642,]   32 #>  [1643,]   33 #>  [1644,]   33 #>  [1645,]   33 #>  [1646,]   33 #>  [1647,]   33 #>  [1648,]   32 #>  [1649,]   33 #>  [1650,]   33 #>  [1651,]   32 #>  [1652,]   33 #>  [1653,]   33 #>  [1654,]   32 #>  [1655,]   33 #>  [1656,]   33 #>  [1657,]   33 #>  [1658,]   33 #>  [1659,]   33 #>  [1660,]   32 #>  [1661,]   33 #>  [1662,]   32 #>  [1663,]   32 #>  [1664,]   33 #>  [1665,]   33 #>  [1666,]   32 #>  [1667,]   32 #>  [1668,]   32 #>  [1669,]   32 #>  [1670,]   33 #>  [1671,]   33 #>  [1672,]   33 #>  [1673,]   33 #>  [1674,]   33 #>  [1675,]   33 #>  [1676,]   33 #>  [1677,]   33 #>  [1678,]   32 #>  [1679,]   33 #>  [1680,]   32 #>  [1681,]   32 #>  [1682,]   33 #>  [1683,]   32 #>  [1684,]   33 #>  [1685,]   33 #>  [1686,]   33 #>  [1687,]   33 #>  [1688,]   33 #>  [1689,]   32 #>  [1690,]   33 #>  [1691,]   32 #>  [1692,]   33 #>  [1693,]   32 #>  [1694,]   33 #>  [1695,]   33 #>  [1696,]   33 #>  [1697,]   33 #>  [1698,]   32 #>  [1699,]   32 #>  [1700,]   33 #>  [1701,]   35 #>  [1702,]   34 #>  [1703,]   34 #>  [1704,]   34 #>  [1705,]   35 #>  [1706,]   34 #>  [1707,]   34 #>  [1708,]   34 #>  [1709,]   34 #>  [1710,]   34 #>  [1711,]   34 #>  [1712,]   34 #>  [1713,]   34 #>  [1714,]   35 #>  [1715,]   35 #>  [1716,]   34 #>  [1717,]   34 #>  [1718,]   35 #>  [1719,]   34 #>  [1720,]   34 #>  [1721,]   34 #>  [1722,]   34 #>  [1723,]   34 #>  [1724,]   34 #>  [1725,]   34 #>  [1726,]   35 #>  [1727,]   35 #>  [1728,]   34 #>  [1729,]   34 #>  [1730,]   34 #>  [1731,]   34 #>  [1732,]   35 #>  [1733,]   34 #>  [1734,]   34 #>  [1735,]   34 #>  [1736,]   34 #>  [1737,]   34 #>  [1738,]   34 #>  [1739,]   34 #>  [1740,]   34 #>  [1741,]   34 #>  [1742,]   34 #>  [1743,]   35 #>  [1744,]   34 #>  [1745,]   34 #>  [1746,]   34 #>  [1747,]   34 #>  [1748,]   34 #>  [1749,]   34 #>  [1750,]   34 #>  [1751,]   34 #>  [1752,]   34 #>  [1753,]   34 #>  [1754,]   34 #>  [1755,]   34 #>  [1756,]   34 #>  [1757,]   34 #>  [1758,]   35 #>  [1759,]   35 #>  [1760,]   34 #>  [1761,]   35 #>  [1762,]   34 #>  [1763,]   34 #>  [1764,]   34 #>  [1765,]   34 #>  [1766,]   35 #>  [1767,]   34 #>  [1768,]   34 #>  [1769,]   34 #>  [1770,]   35 #>  [1771,]   35 #>  [1772,]   34 #>  [1773,]   34 #>  [1774,]   34 #>  [1775,]   35 #>  [1776,]   34 #>  [1777,]   34 #>  [1778,]   34 #>  [1779,]   35 #>  [1780,]   34 #>  [1781,]   34 #>  [1782,]   34 #>  [1783,]   34 #>  [1784,]   34 #>  [1785,]   34 #>  [1786,]   34 #>  [1787,]   35 #>  [1788,]   34 #>  [1789,]   34 #>  [1790,]   34 #>  [1791,]   35 #>  [1792,]   34 #>  [1793,]   34 #>  [1794,]   34 #>  [1795,]   35 #>  [1796,]   34 #>  [1797,]   34 #>  [1798,]   34 #>  [1799,]   34 #>  [1800,]   35 #>  [1801,]   37 #>  [1802,]   37 #>  [1803,]   36 #>  [1804,]   37 #>  [1805,]   37 #>  [1806,]   37 #>  [1807,]   37 #>  [1808,]   37 #>  [1809,]   37 #>  [1810,]   37 #>  [1811,]   36 #>  [1812,]   36 #>  [1813,]   37 #>  [1814,]   36 #>  [1815,]   37 #>  [1816,]   37 #>  [1817,]   37 #>  [1818,]   37 #>  [1819,]   36 #>  [1820,]   36 #>  [1821,]   37 #>  [1822,]   36 #>  [1823,]   37 #>  [1824,]   37 #>  [1825,]   37 #>  [1826,]   36 #>  [1827,]   37 #>  [1828,]   37 #>  [1829,]   36 #>  [1830,]   37 #>  [1831,]   37 #>  [1832,]   36 #>  [1833,]   37 #>  [1834,]   37 #>  [1835,]   37 #>  [1836,]   36 #>  [1837,]   37 #>  [1838,]   37 #>  [1839,]   37 #>  [1840,]   36 #>  [1841,]   36 #>  [1842,]   36 #>  [1843,]   37 #>  [1844,]   37 #>  [1845,]   37 #>  [1846,]   37 #>  [1847,]   37 #>  [1848,]   36 #>  [1849,]   37 #>  [1850,]   37 #>  [1851,]   36 #>  [1852,]   37 #>  [1853,]   37 #>  [1854,]   36 #>  [1855,]   37 #>  [1856,]   37 #>  [1857,]   37 #>  [1858,]   37 #>  [1859,]   37 #>  [1860,]   36 #>  [1861,]   37 #>  [1862,]   36 #>  [1863,]   36 #>  [1864,]   37 #>  [1865,]   37 #>  [1866,]   36 #>  [1867,]   37 #>  [1868,]   36 #>  [1869,]   36 #>  [1870,]   37 #>  [1871,]   37 #>  [1872,]   37 #>  [1873,]   37 #>  [1874,]   37 #>  [1875,]   37 #>  [1876,]   37 #>  [1877,]   37 #>  [1878,]   37 #>  [1879,]   37 #>  [1880,]   36 #>  [1881,]   36 #>  [1882,]   37 #>  [1883,]   36 #>  [1884,]   37 #>  [1885,]   37 #>  [1886,]   37 #>  [1887,]   37 #>  [1888,]   37 #>  [1889,]   36 #>  [1890,]   37 #>  [1891,]   36 #>  [1892,]   37 #>  [1893,]   37 #>  [1894,]   37 #>  [1895,]   37 #>  [1896,]   37 #>  [1897,]   37 #>  [1898,]   37 #>  [1899,]   37 #>  [1900,]   37 #>  [1901,]   38 #>  [1902,]   39 #>  [1903,]   39 #>  [1904,]   38 #>  [1905,]   38 #>  [1906,]   39 #>  [1907,]   39 #>  [1908,]   38 #>  [1909,]   38 #>  [1910,]   38 #>  [1911,]   38 #>  [1912,]   39 #>  [1913,]   38 #>  [1914,]   38 #>  [1915,]   38 #>  [1916,]   38 #>  [1917,]   38 #>  [1918,]   39 #>  [1919,]   39 #>  [1920,]   39 #>  [1921,]   38 #>  [1922,]   38 #>  [1923,]   39 #>  [1924,]   38 #>  [1925,]   39 #>  [1926,]   38 #>  [1927,]   38 #>  [1928,]   39 #>  [1929,]   39 #>  [1930,]   38 #>  [1931,]   39 #>  [1932,]   39 #>  [1933,]   39 #>  [1934,]   39 #>  [1935,]   38 #>  [1936,]   38 #>  [1937,]   38 #>  [1938,]   38 #>  [1939,]   38 #>  [1940,]   39 #>  [1941,]   38 #>  [1942,]   39 #>  [1943,]   38 #>  [1944,]   38 #>  [1945,]   38 #>  [1946,]   38 #>  [1947,]   39 #>  [1948,]   39 #>  [1949,]   38 #>  [1950,]   39 #>  [1951,]   38 #>  [1952,]   38 #>  [1953,]   38 #>  [1954,]   38 #>  [1955,]   38 #>  [1956,]   39 #>  [1957,]   39 #>  [1958,]   38 #>  [1959,]   38 #>  [1960,]   39 #>  [1961,]   39 #>  [1962,]   38 #>  [1963,]   38 #>  [1964,]   39 #>  [1965,]   39 #>  [1966,]   38 #>  [1967,]   38 #>  [1968,]   38 #>  [1969,]   38 #>  [1970,]   39 #>  [1971,]   39 #>  [1972,]   38 #>  [1973,]   39 #>  [1974,]   38 #>  [1975,]   39 #>  [1976,]   38 #>  [1977,]   39 #>  [1978,]   39 #>  [1979,]   38 #>  [1980,]   38 #>  [1981,]   38 #>  [1982,]   38 #>  [1983,]   38 #>  [1984,]   39 #>  [1985,]   38 #>  [1986,]   39 #>  [1987,]   38 #>  [1988,]   38 #>  [1989,]   38 #>  [1990,]   38 #>  [1991,]   38 #>  [1992,]   38 #>  [1993,]   39 #>  [1994,]   39 #>  [1995,]   38 #>  [1996,]   38 #>  [1997,]   39 #>  [1998,]   39 #>  [1999,]   38 #>  [2000,]   39 #>  [2001,]   40 #>  [2002,]   40 #>  [2003,]   40 #>  [2004,]   40 #>  [2005,]   40 #>  [2006,]   40 #>  [2007,]   40 #>  [2008,]   40 #>  [2009,]   41 #>  [2010,]   40 #>  [2011,]   40 #>  [2012,]   40 #>  [2013,]   41 #>  [2014,]   40 #>  [2015,]   40 #>  [2016,]   40 #>  [2017,]   41 #>  [2018,]   41 #>  [2019,]   40 #>  [2020,]   40 #>  [2021,]   40 #>  [2022,]   40 #>  [2023,]   40 #>  [2024,]   40 #>  [2025,]   40 #>  [2026,]   40 #>  [2027,]   41 #>  [2028,]   40 #>  [2029,]   40 #>  [2030,]   40 #>  [2031,]   40 #>  [2032,]   40 #>  [2033,]   40 #>  [2034,]   40 #>  [2035,]   40 #>  [2036,]   40 #>  [2037,]   40 #>  [2038,]   40 #>  [2039,]   40 #>  [2040,]   40 #>  [2041,]   40 #>  [2042,]   41 #>  [2043,]   40 #>  [2044,]   40 #>  [2045,]   40 #>  [2046,]   40 #>  [2047,]   40 #>  [2048,]   40 #>  [2049,]   40 #>  [2050,]   40 #>  [2051,]   41 #>  [2052,]   40 #>  [2053,]   41 #>  [2054,]   40 #>  [2055,]   40 #>  [2056,]   40 #>  [2057,]   40 #>  [2058,]   40 #>  [2059,]   40 #>  [2060,]   40 #>  [2061,]   40 #>  [2062,]   40 #>  [2063,]   40 #>  [2064,]   40 #>  [2065,]   41 #>  [2066,]   40 #>  [2067,]   40 #>  [2068,]   40 #>  [2069,]   40 #>  [2070,]   40 #>  [2071,]   40 #>  [2072,]   40 #>  [2073,]   40 #>  [2074,]   40 #>  [2075,]   40 #>  [2076,]   40 #>  [2077,]   40 #>  [2078,]   40 #>  [2079,]   41 #>  [2080,]   40 #>  [2081,]   40 #>  [2082,]   41 #>  [2083,]   40 #>  [2084,]   41 #>  [2085,]   40 #>  [2086,]   40 #>  [2087,]   40 #>  [2088,]   40 #>  [2089,]   40 #>  [2090,]   40 #>  [2091,]   41 #>  [2092,]   40 #>  [2093,]   41 #>  [2094,]   41 #>  [2095,]   40 #>  [2096,]   40 #>  [2097,]   40 #>  [2098,]   40 #>  [2099,]   40 #>  [2100,]   40 #>  [2101,]   42 #>  [2102,]   42 #>  [2103,]   42 #>  [2104,]   43 #>  [2105,]   42 #>  [2106,]   42 #>  [2107,]   42 #>  [2108,]   42 #>  [2109,]   42 #>  [2110,]   42 #>  [2111,]   43 #>  [2112,]   43 #>  [2113,]   42 #>  [2114,]   43 #>  [2115,]   43 #>  [2116,]   42 #>  [2117,]   42 #>  [2118,]   42 #>  [2119,]   43 #>  [2120,]   42 #>  [2121,]   43 #>  [2122,]   42 #>  [2123,]   42 #>  [2124,]   42 #>  [2125,]   42 #>  [2126,]   42 #>  [2127,]   43 #>  [2128,]   42 #>  [2129,]   42 #>  [2130,]   42 #>  [2131,]   42 #>  [2132,]   42 #>  [2133,]   42 #>  [2134,]   42 #>  [2135,]   42 #>  [2136,]   42 #>  [2137,]   42 #>  [2138,]   43 #>  [2139,]   42 #>  [2140,]   42 #>  [2141,]   43 #>  [2142,]   43 #>  [2143,]   42 #>  [2144,]   42 #>  [2145,]   42 #>  [2146,]   42 #>  [2147,]   42 #>  [2148,]   43 #>  [2149,]   42 #>  [2150,]   42 #>  [2151,]   42 #>  [2152,]   42 #>  [2153,]   42 #>  [2154,]   42 #>  [2155,]   42 #>  [2156,]   42 #>  [2157,]   42 #>  [2158,]   42 #>  [2159,]   42 #>  [2160,]   42 #>  [2161,]   43 #>  [2162,]   42 #>  [2163,]   42 #>  [2164,]   42 #>  [2165,]   42 #>  [2166,]   42 #>  [2167,]   42 #>  [2168,]   42 #>  [2169,]   43 #>  [2170,]   42 #>  [2171,]   42 #>  [2172,]   42 #>  [2173,]   42 #>  [2174,]   43 #>  [2175,]   43 #>  [2176,]   42 #>  [2177,]   42 #>  [2178,]   42 #>  [2179,]   42 #>  [2180,]   42 #>  [2181,]   42 #>  [2182,]   43 #>  [2183,]   42 #>  [2184,]   42 #>  [2185,]   42 #>  [2186,]   42 #>  [2187,]   42 #>  [2188,]   42 #>  [2189,]   42 #>  [2190,]   42 #>  [2191,]   42 #>  [2192,]   43 #>  [2193,]   43 #>  [2194,]   42 #>  [2195,]   42 #>  [2196,]   43 #>  [2197,]   43 #>  [2198,]   42 #>  [2199,]   42 #>  [2200,]   42 #>  [2201,]   45 #>  [2202,]   45 #>  [2203,]   45 #>  [2204,]   45 #>  [2205,]   45 #>  [2206,]   45 #>  [2207,]   45 #>  [2208,]   45 #>  [2209,]   45 #>  [2210,]   44 #>  [2211,]   44 #>  [2212,]   45 #>  [2213,]   45 #>  [2214,]   44 #>  [2215,]   45 #>  [2216,]   45 #>  [2217,]   45 #>  [2218,]   45 #>  [2219,]   45 #>  [2220,]   45 #>  [2221,]   45 #>  [2222,]   45 #>  [2223,]   45 #>  [2224,]   45 #>  [2225,]   45 #>  [2226,]   45 #>  [2227,]   45 #>  [2228,]   45 #>  [2229,]   45 #>  [2230,]   45 #>  [2231,]   45 #>  [2232,]   45 #>  [2233,]   45 #>  [2234,]   45 #>  [2235,]   45 #>  [2236,]   45 #>  [2237,]   45 #>  [2238,]   45 #>  [2239,]   45 #>  [2240,]   44 #>  [2241,]   45 #>  [2242,]   45 #>  [2243,]   45 #>  [2244,]   45 #>  [2245,]   45 #>  [2246,]   45 #>  [2247,]   45 #>  [2248,]   44 #>  [2249,]   45 #>  [2250,]   45 #>  [2251,]   45 #>  [2252,]   45 #>  [2253,]   45 #>  [2254,]   45 #>  [2255,]   45 #>  [2256,]   45 #>  [2257,]   45 #>  [2258,]   45 #>  [2259,]   45 #>  [2260,]   45 #>  [2261,]   45 #>  [2262,]   45 #>  [2263,]   45 #>  [2264,]   45 #>  [2265,]   45 #>  [2266,]   45 #>  [2267,]   45 #>  [2268,]   45 #>  [2269,]   45 #>  [2270,]   44 #>  [2271,]   45 #>  [2272,]   45 #>  [2273,]   45 #>  [2274,]   45 #>  [2275,]   45 #>  [2276,]   45 #>  [2277,]   45 #>  [2278,]   45 #>  [2279,]   45 #>  [2280,]   45 #>  [2281,]   45 #>  [2282,]   45 #>  [2283,]   45 #>  [2284,]   45 #>  [2285,]   45 #>  [2286,]   45 #>  [2287,]   45 #>  [2288,]   45 #>  [2289,]   45 #>  [2290,]   45 #>  [2291,]   45 #>  [2292,]   45 #>  [2293,]   45 #>  [2294,]   45 #>  [2295,]   45 #>  [2296,]   45 #>  [2297,]   45 #>  [2298,]   45 #>  [2299,]   45 #>  [2300,]   45 #>  [2301,]   46 #>  [2302,]   46 #>  [2303,]   46 #>  [2304,]   47 #>  [2305,]   46 #>  [2306,]   47 #>  [2307,]   46 #>  [2308,]   46 #>  [2309,]   47 #>  [2310,]   47 #>  [2311,]   47 #>  [2312,]   47 #>  [2313,]   46 #>  [2314,]   47 #>  [2315,]   47 #>  [2316,]   46 #>  [2317,]   46 #>  [2318,]   47 #>  [2319,]   47 #>  [2320,]   46 #>  [2321,]   47 #>  [2322,]   46 #>  [2323,]   46 #>  [2324,]   46 #>  [2325,]   46 #>  [2326,]   47 #>  [2327,]   47 #>  [2328,]   46 #>  [2329,]   46 #>  [2330,]   47 #>  [2331,]   47 #>  [2332,]   47 #>  [2333,]   47 #>  [2334,]   46 #>  [2335,]   46 #>  [2336,]   47 #>  [2337,]   46 #>  [2338,]   47 #>  [2339,]   46 #>  [2340,]   46 #>  [2341,]   47 #>  [2342,]   47 #>  [2343,]   46 #>  [2344,]   46 #>  [2345,]   46 #>  [2346,]   46 #>  [2347,]   46 #>  [2348,]   47 #>  [2349,]   46 #>  [2350,]   46 #>  [2351,]   46 #>  [2352,]   47 #>  [2353,]   46 #>  [2354,]   46 #>  [2355,]   46 #>  [2356,]   46 #>  [2357,]   46 #>  [2358,]   47 #>  [2359,]   46 #>  [2360,]   47 #>  [2361,]   47 #>  [2362,]   47 #>  [2363,]   46 #>  [2364,]   47 #>  [2365,]   46 #>  [2366,]   46 #>  [2367,]   47 #>  [2368,]   47 #>  [2369,]   47 #>  [2370,]   46 #>  [2371,]   46 #>  [2372,]   46 #>  [2373,]   47 #>  [2374,]   47 #>  [2375,]   47 #>  [2376,]   46 #>  [2377,]   46 #>  [2378,]   46 #>  [2379,]   46 #>  [2380,]   46 #>  [2381,]   46 #>  [2382,]   47 #>  [2383,]   46 #>  [2384,]   46 #>  [2385,]   47 #>  [2386,]   46 #>  [2387,]   46 #>  [2388,]   46 #>  [2389,]   46 #>  [2390,]   46 #>  [2391,]   46 #>  [2392,]   47 #>  [2393,]   47 #>  [2394,]   46 #>  [2395,]   46 #>  [2396,]   47 #>  [2397,]   47 #>  [2398,]   46 #>  [2399,]   47 #>  [2400,]   46 #>  [2401,]   49 #>  [2402,]   49 #>  [2403,]   48 #>  [2404,]   49 #>  [2405,]   49 #>  [2406,]   48 #>  [2407,]   48 #>  [2408,]   49 #>  [2409,]   49 #>  [2410,]   49 #>  [2411,]   49 #>  [2412,]   49 #>  [2413,]   49 #>  [2414,]   49 #>  [2415,]   49 #>  [2416,]   49 #>  [2417,]   49 #>  [2418,]   49 #>  [2419,]   49 #>  [2420,]   48 #>  [2421,]   48 #>  [2422,]   49 #>  [2423,]   48 #>  [2424,]   49 #>  [2425,]   48 #>  [2426,]   49 #>  [2427,]   49 #>  [2428,]   49 #>  [2429,]   49 #>  [2430,]   49 #>  [2431,]   49 #>  [2432,]   49 #>  [2433,]   49 #>  [2434,]   48 #>  [2435,]   48 #>  [2436,]   49 #>  [2437,]   48 #>  [2438,]   49 #>  [2439,]   49 #>  [2440,]   49 #>  [2441,]   49 #>  [2442,]   48 #>  [2443,]   49 #>  [2444,]   48 #>  [2445,]   49 #>  [2446,]   49 #>  [2447,]   49 #>  [2448,]   49 #>  [2449,]   49 #>  [2450,]   48 #>  [2451,]   49 #>  [2452,]   49 #>  [2453,]   48 #>  [2454,]   48 #>  [2455,]   48 #>  [2456,]   48 #>  [2457,]   48 #>  [2458,]   49 #>  [2459,]   49 #>  [2460,]   49 #>  [2461,]   49 #>  [2462,]   49 #>  [2463,]   49 #>  [2464,]   48 #>  [2465,]   48 #>  [2466,]   49 #>  [2467,]   49 #>  [2468,]   49 #>  [2469,]   49 #>  [2470,]   49 #>  [2471,]   49 #>  [2472,]   49 #>  [2473,]   48 #>  [2474,]   48 #>  [2475,]   49 #>  [2476,]   49 #>  [2477,]   49 #>  [2478,]   49 #>  [2479,]   49 #>  [2480,]   48 #>  [2481,]   48 #>  [2482,]   48 #>  [2483,]   49 #>  [2484,]   48 #>  [2485,]   48 #>  [2486,]   48 #>  [2487,]   49 #>  [2488,]   48 #>  [2489,]   48 #>  [2490,]   49 #>  [2491,]   49 #>  [2492,]   49 #>  [2493,]   49 #>  [2494,]   48 #>  [2495,]   49 #>  [2496,]   49 #>  [2497,]   48 #>  [2498,]   48 #>  [2499,]   48 #>  [2500,]   49 #>  [2501,]   50 #>  [2502,]   50 #>  [2503,]   50 #>  [2504,]   51 #>  [2505,]   50 #>  [2506,]   50 #>  [2507,]   50 #>  [2508,]   50 #>  [2509,]   50 #>  [2510,]   50 #>  [2511,]   50 #>  [2512,]   50 #>  [2513,]   50 #>  [2514,]   51 #>  [2515,]   50 #>  [2516,]   50 #>  [2517,]   50 #>  [2518,]   50 #>  [2519,]   50 #>  [2520,]   50 #>  [2521,]   50 #>  [2522,]   50 #>  [2523,]   50 #>  [2524,]   50 #>  [2525,]   50 #>  [2526,]   50 #>  [2527,]   51 #>  [2528,]   50 #>  [2529,]   50 #>  [2530,]   50 #>  [2531,]   50 #>  [2532,]   50 #>  [2533,]   50 #>  [2534,]   50 #>  [2535,]   50 #>  [2536,]   50 #>  [2537,]   50 #>  [2538,]   50 #>  [2539,]   50 #>  [2540,]   50 #>  [2541,]   50 #>  [2542,]   50 #>  [2543,]   50 #>  [2544,]   50 #>  [2545,]   50 #>  [2546,]   50 #>  [2547,]   50 #>  [2548,]   50 #>  [2549,]   50 #>  [2550,]   50 #>  [2551,]   50 #>  [2552,]   50 #>  [2553,]   50 #>  [2554,]   50 #>  [2555,]   50 #>  [2556,]   50 #>  [2557,]   50 #>  [2558,]   50 #>  [2559,]   50 #>  [2560,]   50 #>  [2561,]   51 #>  [2562,]   50 #>  [2563,]   50 #>  [2564,]   50 #>  [2565,]   50 #>  [2566,]   50 #>  [2567,]   50 #>  [2568,]   50 #>  [2569,]   51 #>  [2570,]   50 #>  [2571,]   50 #>  [2572,]   50 #>  [2573,]   50 #>  [2574,]   50 #>  [2575,]   50 #>  [2576,]   50 #>  [2577,]   50 #>  [2578,]   50 #>  [2579,]   50 #>  [2580,]   50 #>  [2581,]   50 #>  [2582,]   51 #>  [2583,]   50 #>  [2584,]   50 #>  [2585,]   50 #>  [2586,]   50 #>  [2587,]   50 #>  [2588,]   50 #>  [2589,]   50 #>  [2590,]   50 #>  [2591,]   50 #>  [2592,]   51 #>  [2593,]   51 #>  [2594,]   50 #>  [2595,]   50 #>  [2596,]   51 #>  [2597,]   51 #>  [2598,]   50 #>  [2599,]   50 #>  [2600,]   50 #>  [2601,]   53 #>  [2602,]   53 #>  [2603,]   52 #>  [2604,]   53 #>  [2605,]   52 #>  [2606,]   53 #>  [2607,]   52 #>  [2608,]   52 #>  [2609,]   53 #>  [2610,]   53 #>  [2611,]   53 #>  [2612,]   53 #>  [2613,]   52 #>  [2614,]   53 #>  [2615,]   53 #>  [2616,]   52 #>  [2617,]   52 #>  [2618,]   53 #>  [2619,]   53 #>  [2620,]   52 #>  [2621,]   53 #>  [2622,]   52 #>  [2623,]   53 #>  [2624,]   52 #>  [2625,]   52 #>  [2626,]   53 #>  [2627,]   53 #>  [2628,]   53 #>  [2629,]   52 #>  [2630,]   53 #>  [2631,]   53 #>  [2632,]   53 #>  [2633,]   53 #>  [2634,]   53 #>  [2635,]   53 #>  [2636,]   53 #>  [2637,]   53 #>  [2638,]   53 #>  [2639,]   52 #>  [2640,]   52 #>  [2641,]   53 #>  [2642,]   53 #>  [2643,]   52 #>  [2644,]   52 #>  [2645,]   52 #>  [2646,]   52 #>  [2647,]   52 #>  [2648,]   53 #>  [2649,]   52 #>  [2650,]   52 #>  [2651,]   52 #>  [2652,]   53 #>  [2653,]   52 #>  [2654,]   52 #>  [2655,]   52 #>  [2656,]   52 #>  [2657,]   53 #>  [2658,]   53 #>  [2659,]   52 #>  [2660,]   53 #>  [2661,]   53 #>  [2662,]   53 #>  [2663,]   52 #>  [2664,]   53 #>  [2665,]   52 #>  [2666,]   52 #>  [2667,]   53 #>  [2668,]   53 #>  [2669,]   53 #>  [2670,]   52 #>  [2671,]   52 #>  [2672,]   52 #>  [2673,]   53 #>  [2674,]   53 #>  [2675,]   53 #>  [2676,]   52 #>  [2677,]   52 #>  [2678,]   52 #>  [2679,]   52 #>  [2680,]   53 #>  [2681,]   52 #>  [2682,]   53 #>  [2683,]   52 #>  [2684,]   52 #>  [2685,]   53 #>  [2686,]   52 #>  [2687,]   53 #>  [2688,]   53 #>  [2689,]   52 #>  [2690,]   52 #>  [2691,]   53 #>  [2692,]   53 #>  [2693,]   53 #>  [2694,]   52 #>  [2695,]   53 #>  [2696,]   53 #>  [2697,]   53 #>  [2698,]   52 #>  [2699,]   53 #>  [2700,]   52 #>  [2701,]   55 #>  [2702,]   54 #>  [2703,]   54 #>  [2704,]   54 #>  [2705,]   55 #>  [2706,]   54 #>  [2707,]   54 #>  [2708,]   54 #>  [2709,]   54 #>  [2710,]   55 #>  [2711,]   55 #>  [2712,]   55 #>  [2713,]   54 #>  [2714,]   55 #>  [2715,]   55 #>  [2716,]   54 #>  [2717,]   55 #>  [2718,]   55 #>  [2719,]   54 #>  [2720,]   54 #>  [2721,]   54 #>  [2722,]   55 #>  [2723,]   54 #>  [2724,]   54 #>  [2725,]   54 #>  [2726,]   55 #>  [2727,]   55 #>  [2728,]   54 #>  [2729,]   54 #>  [2730,]   54 #>  [2731,]   55 #>  [2732,]   55 #>  [2733,]   54 #>  [2734,]   54 #>  [2735,]   54 #>  [2736,]   54 #>  [2737,]   54 #>  [2738,]   55 #>  [2739,]   54 #>  [2740,]   54 #>  [2741,]   54 #>  [2742,]   54 #>  [2743,]   55 #>  [2744,]   54 #>  [2745,]   54 #>  [2746,]   54 #>  [2747,]   55 #>  [2748,]   54 #>  [2749,]   54 #>  [2750,]   54 #>  [2751,]   54 #>  [2752,]   55 #>  [2753,]   54 #>  [2754,]   54 #>  [2755,]   54 #>  [2756,]   54 #>  [2757,]   54 #>  [2758,]   55 #>  [2759,]   55 #>  [2760,]   54 #>  [2761,]   55 #>  [2762,]   54 #>  [2763,]   54 #>  [2764,]   54 #>  [2765,]   54 #>  [2766,]   55 #>  [2767,]   54 #>  [2768,]   54 #>  [2769,]   54 #>  [2770,]   55 #>  [2771,]   55 #>  [2772,]   54 #>  [2773,]   54 #>  [2774,]   54 #>  [2775,]   55 #>  [2776,]   54 #>  [2777,]   55 #>  [2778,]   54 #>  [2779,]   55 #>  [2780,]   54 #>  [2781,]   54 #>  [2782,]   54 #>  [2783,]   54 #>  [2784,]   54 #>  [2785,]   54 #>  [2786,]   54 #>  [2787,]   55 #>  [2788,]   54 #>  [2789,]   54 #>  [2790,]   55 #>  [2791,]   55 #>  [2792,]   55 #>  [2793,]   54 #>  [2794,]   54 #>  [2795,]   55 #>  [2796,]   54 #>  [2797,]   54 #>  [2798,]   54 #>  [2799,]   54 #>  [2800,]   55 #>  [2801,]   57 #>  [2802,]   56 #>  [2803,]   56 #>  [2804,]   56 #>  [2805,]   56 #>  [2806,]   57 #>  [2807,]   56 #>  [2808,]   56 #>  [2809,]   56 #>  [2810,]   56 #>  [2811,]   56 #>  [2812,]   56 #>  [2813,]   57 #>  [2814,]   57 #>  [2815,]   57 #>  [2816,]   57 #>  [2817,]   57 #>  [2818,]   56 #>  [2819,]   56 #>  [2820,]   56 #>  [2821,]   57 #>  [2822,]   56 #>  [2823,]   56 #>  [2824,]   56 #>  [2825,]   56 #>  [2826,]   56 #>  [2827,]   56 #>  [2828,]   56 #>  [2829,]   57 #>  [2830,]   56 #>  [2831,]   56 #>  [2832,]   56 #>  [2833,]   57 #>  [2834,]   56 #>  [2835,]   56 #>  [2836,]   56 #>  [2837,]   56 #>  [2838,]   56 #>  [2839,]   56 #>  [2840,]   56 #>  [2841,]   57 #>  [2842,]   56 #>  [2843,]   56 #>  [2844,]   57 #>  [2845,]   56 #>  [2846,]   56 #>  [2847,]   56 #>  [2848,]   56 #>  [2849,]   56 #>  [2850,]   57 #>  [2851,]   56 #>  [2852,]   56 #>  [2853,]   56 #>  [2854,]   56 #>  [2855,]   56 #>  [2856,]   56 #>  [2857,]   56 #>  [2858,]   56 #>  [2859,]   57 #>  [2860,]   56 #>  [2861,]   57 #>  [2862,]   56 #>  [2863,]   56 #>  [2864,]   56 #>  [2865,]   56 #>  [2866,]   56 #>  [2867,]   56 #>  [2868,]   57 #>  [2869,]   56 #>  [2870,]   57 #>  [2871,]   56 #>  [2872,]   56 #>  [2873,]   57 #>  [2874,]   56 #>  [2875,]   56 #>  [2876,]   57 #>  [2877,]   56 #>  [2878,]   56 #>  [2879,]   56 #>  [2880,]   56 #>  [2881,]   57 #>  [2882,]   56 #>  [2883,]   57 #>  [2884,]   56 #>  [2885,]   56 #>  [2886,]   57 #>  [2887,]   56 #>  [2888,]   56 #>  [2889,]   56 #>  [2890,]   56 #>  [2891,]   56 #>  [2892,]   56 #>  [2893,]   56 #>  [2894,]   56 #>  [2895,]   56 #>  [2896,]   57 #>  [2897,]   56 #>  [2898,]   56 #>  [2899,]   57 #>  [2900,]   56 #>  [2901,]   59 #>  [2902,]   59 #>  [2903,]   58 #>  [2904,]   59 #>  [2905,]   59 #>  [2906,]   59 #>  [2907,]   58 #>  [2908,]   59 #>  [2909,]   59 #>  [2910,]   59 #>  [2911,]   59 #>  [2912,]   59 #>  [2913,]   59 #>  [2914,]   59 #>  [2915,]   59 #>  [2916,]   59 #>  [2917,]   59 #>  [2918,]   59 #>  [2919,]   59 #>  [2920,]   59 #>  [2921,]   58 #>  [2922,]   59 #>  [2923,]   58 #>  [2924,]   59 #>  [2925,]   59 #>  [2926,]   59 #>  [2927,]   59 #>  [2928,]   59 #>  [2929,]   59 #>  [2930,]   58 #>  [2931,]   58 #>  [2932,]   59 #>  [2933,]   59 #>  [2934,]   59 #>  [2935,]   59 #>  [2936,]   59 #>  [2937,]   59 #>  [2938,]   59 #>  [2939,]   58 #>  [2940,]   59 #>  [2941,]   59 #>  [2942,]   59 #>  [2943,]   59 #>  [2944,]   59 #>  [2945,]   59 #>  [2946,]   59 #>  [2947,]   58 #>  [2948,]   59 #>  [2949,]   58 #>  [2950,]   59 #>  [2951,]   59 #>  [2952,]   59 #>  [2953,]   59 #>  [2954,]   58 #>  [2955,]   59 #>  [2956,]   59 #>  [2957,]   59 #>  [2958,]   59 #>  [2959,]   59 #>  [2960,]   59 #>  [2961,]   59 #>  [2962,]   58 #>  [2963,]   59 #>  [2964,]   59 #>  [2965,]   59 #>  [2966,]   59 #>  [2967,]   59 #>  [2968,]   59 #>  [2969,]   59 #>  [2970,]   58 #>  [2971,]   59 #>  [2972,]   59 #>  [2973,]   59 #>  [2974,]   59 #>  [2975,]   59 #>  [2976,]   59 #>  [2977,]   58 #>  [2978,]   59 #>  [2979,]   58 #>  [2980,]   58 #>  [2981,]   59 #>  [2982,]   59 #>  [2983,]   58 #>  [2984,]   59 #>  [2985,]   59 #>  [2986,]   59 #>  [2987,]   59 #>  [2988,]   59 #>  [2989,]   59 #>  [2990,]   59 #>  [2991,]   59 #>  [2992,]   59 #>  [2993,]   59 #>  [2994,]   59 #>  [2995,]   58 #>  [2996,]   59 #>  [2997,]   59 #>  [2998,]   58 #>  [2999,]   59 #>  [3000,]   59 #>  [3001,]   61 #>  [3002,]   60 #>  [3003,]   60 #>  [3004,]   61 #>  [3005,]   61 #>  [3006,]   61 #>  [3007,]   60 #>  [3008,]   61 #>  [3009,]   61 #>  [3010,]   61 #>  [3011,]   61 #>  [3012,]   61 #>  [3013,]   60 #>  [3014,]   61 #>  [3015,]   61 #>  [3016,]   60 #>  [3017,]   61 #>  [3018,]   60 #>  [3019,]   60 #>  [3020,]   61 #>  [3021,]   60 #>  [3022,]   60 #>  [3023,]   60 #>  [3024,]   60 #>  [3025,]   61 #>  [3026,]   61 #>  [3027,]   61 #>  [3028,]   61 #>  [3029,]   61 #>  [3030,]   60 #>  [3031,]   60 #>  [3032,]   60 #>  [3033,]   61 #>  [3034,]   60 #>  [3035,]   60 #>  [3036,]   60 #>  [3037,]   60 #>  [3038,]   61 #>  [3039,]   60 #>  [3040,]   60 #>  [3041,]   61 #>  [3042,]   61 #>  [3043,]   61 #>  [3044,]   60 #>  [3045,]   61 #>  [3046,]   61 #>  [3047,]   60 #>  [3048,]   61 #>  [3049,]   60 #>  [3050,]   61 #>  [3051,]   61 #>  [3052,]   61 #>  [3053,]   61 #>  [3054,]   60 #>  [3055,]   61 #>  [3056,]   61 #>  [3057,]   61 #>  [3058,]   61 #>  [3059,]   60 #>  [3060,]   61 #>  [3061,]   61 #>  [3062,]   60 #>  [3063,]   61 #>  [3064,]   61 #>  [3065,]   61 #>  [3066,]   61 #>  [3067,]   61 #>  [3068,]   61 #>  [3069,]   61 #>  [3070,]   60 #>  [3071,]   61 #>  [3072,]   61 #>  [3073,]   61 #>  [3074,]   61 #>  [3075,]   61 #>  [3076,]   61 #>  [3077,]   60 #>  [3078,]   61 #>  [3079,]   60 #>  [3080,]   60 #>  [3081,]   61 #>  [3082,]   61 #>  [3083,]   60 #>  [3084,]   61 #>  [3085,]   61 #>  [3086,]   60 #>  [3087,]   61 #>  [3088,]   61 #>  [3089,]   61 #>  [3090,]   61 #>  [3091,]   61 #>  [3092,]   61 #>  [3093,]   60 #>  [3094,]   61 #>  [3095,]   60 #>  [3096,]   61 #>  [3097,]   61 #>  [3098,]   60 #>  [3099,]   61 #>  [3100,]   60 #>  [3101,]   63 #>  [3102,]   63 #>  [3103,]   63 #>  [3104,]   62 #>  [3105,]   63 #>  [3106,]   63 #>  [3107,]   63 #>  [3108,]   62 #>  [3109,]   62 #>  [3110,]   63 #>  [3111,]   62 #>  [3112,]   63 #>  [3113,]   62 #>  [3114,]   63 #>  [3115,]   63 #>  [3116,]   63 #>  [3117,]   62 #>  [3118,]   63 #>  [3119,]   63 #>  [3120,]   63 #>  [3121,]   63 #>  [3122,]   62 #>  [3123,]   63 #>  [3124,]   63 #>  [3125,]   63 #>  [3126,]   63 #>  [3127,]   62 #>  [3128,]   63 #>  [3129,]   63 #>  [3130,]   63 #>  [3131,]   63 #>  [3132,]   63 #>  [3133,]   63 #>  [3134,]   63 #>  [3135,]   62 #>  [3136,]   63 #>  [3137,]   63 #>  [3138,]   63 #>  [3139,]   63 #>  [3140,]   63 #>  [3141,]   63 #>  [3142,]   63 #>  [3143,]   62 #>  [3144,]   62 #>  [3145,]   63 #>  [3146,]   63 #>  [3147,]   63 #>  [3148,]   63 #>  [3149,]   62 #>  [3150,]   63 #>  [3151,]   63 #>  [3152,]   62 #>  [3153,]   63 #>  [3154,]   63 #>  [3155,]   62 #>  [3156,]   63 #>  [3157,]   63 #>  [3158,]   62 #>  [3159,]   63 #>  [3160,]   63 #>  [3161,]   63 #>  [3162,]   63 #>  [3163,]   63 #>  [3164,]   63 #>  [3165,]   63 #>  [3166,]   62 #>  [3167,]   63 #>  [3168,]   63 #>  [3169,]   62 #>  [3170,]   63 #>  [3171,]   63 #>  [3172,]   63 #>  [3173,]   63 #>  [3174,]   63 #>  [3175,]   63 #>  [3176,]   63 #>  [3177,]   63 #>  [3178,]   63 #>  [3179,]   62 #>  [3180,]   62 #>  [3181,]   62 #>  [3182,]   62 #>  [3183,]   62 #>  [3184,]   63 #>  [3185,]   63 #>  [3186,]   63 #>  [3187,]   62 #>  [3188,]   62 #>  [3189,]   62 #>  [3190,]   62 #>  [3191,]   63 #>  [3192,]   62 #>  [3193,]   63 #>  [3194,]   63 #>  [3195,]   62 #>  [3196,]   63 #>  [3197,]   63 #>  [3198,]   63 #>  [3199,]   62 #>  [3200,]   63 #>  [3201,]   64 #>  [3202,]   65 #>  [3203,]   64 #>  [3204,]   64 #>  [3205,]   65 #>  [3206,]   64 #>  [3207,]   65 #>  [3208,]   64 #>  [3209,]   65 #>  [3210,]   65 #>  [3211,]   64 #>  [3212,]   65 #>  [3213,]   65 #>  [3214,]   64 #>  [3215,]   64 #>  [3216,]   64 #>  [3217,]   65 #>  [3218,]   65 #>  [3219,]   64 #>  [3220,]   65 #>  [3221,]   65 #>  [3222,]   65 #>  [3223,]   65 #>  [3224,]   65 #>  [3225,]   64 #>  [3226,]   64 #>  [3227,]   65 #>  [3228,]   64 #>  [3229,]   65 #>  [3230,]   65 #>  [3231,]   65 #>  [3232,]   65 #>  [3233,]   65 #>  [3234,]   64 #>  [3235,]   64 #>  [3236,]   65 #>  [3237,]   64 #>  [3238,]   64 #>  [3239,]   64 #>  [3240,]   65 #>  [3241,]   65 #>  [3242,]   64 #>  [3243,]   64 #>  [3244,]   65 #>  [3245,]   64 #>  [3246,]   64 #>  [3247,]   65 #>  [3248,]   65 #>  [3249,]   64 #>  [3250,]   65 #>  [3251,]   64 #>  [3252,]   64 #>  [3253,]   65 #>  [3254,]   65 #>  [3255,]   64 #>  [3256,]   64 #>  [3257,]   64 #>  [3258,]   65 #>  [3259,]   64 #>  [3260,]   65 #>  [3261,]   65 #>  [3262,]   64 #>  [3263,]   65 #>  [3264,]   64 #>  [3265,]   64 #>  [3266,]   64 #>  [3267,]   64 #>  [3268,]   64 #>  [3269,]   64 #>  [3270,]   65 #>  [3271,]   64 #>  [3272,]   64 #>  [3273,]   64 #>  [3274,]   65 #>  [3275,]   65 #>  [3276,]   65 #>  [3277,]   64 #>  [3278,]   65 #>  [3279,]   64 #>  [3280,]   65 #>  [3281,]   65 #>  [3282,]   64 #>  [3283,]   65 #>  [3284,]   65 #>  [3285,]   64 #>  [3286,]   65 #>  [3287,]   65 #>  [3288,]   65 #>  [3289,]   64 #>  [3290,]   65 #>  [3291,]   64 #>  [3292,]   65 #>  [3293,]   65 #>  [3294,]   64 #>  [3295,]   65 #>  [3296,]   64 #>  [3297,]   64 #>  [3298,]   64 #>  [3299,]   64 #>  [3300,]   64 #>  [3301,]   67 #>  [3302,]   67 #>  [3303,]   67 #>  [3304,]   67 #>  [3305,]   67 #>  [3306,]   67 #>  [3307,]   67 #>  [3308,]   67 #>  [3309,]   67 #>  [3310,]   67 #>  [3311,]   67 #>  [3312,]   67 #>  [3313,]   67 #>  [3314,]   67 #>  [3315,]   66 #>  [3316,]   67 #>  [3317,]   67 #>  [3318,]   67 #>  [3319,]   67 #>  [3320,]   67 #>  [3321,]   67 #>  [3322,]   67 #>  [3323,]   67 #>  [3324,]   67 #>  [3325,]   67 #>  [3326,]   67 #>  [3327,]   67 #>  [3328,]   67 #>  [3329,]   67 #>  [3330,]   67 #>  [3331,]   66 #>  [3332,]   67 #>  [3333,]   67 #>  [3334,]   66 #>  [3335,]   67 #>  [3336,]   67 #>  [3337,]   67 #>  [3338,]   67 #>  [3339,]   67 #>  [3340,]   67 #>  [3341,]   67 #>  [3342,]   66 #>  [3343,]   66 #>  [3344,]   66 #>  [3345,]   67 #>  [3346,]   67 #>  [3347,]   67 #>  [3348,]   67 #>  [3349,]   67 #>  [3350,]   67 #>  [3351,]   67 #>  [3352,]   67 #>  [3353,]   67 #>  [3354,]   67 #>  [3355,]   67 #>  [3356,]   67 #>  [3357,]   67 #>  [3358,]   67 #>  [3359,]   67 #>  [3360,]   67 #>  [3361,]   67 #>  [3362,]   67 #>  [3363,]   66 #>  [3364,]   67 #>  [3365,]   67 #>  [3366,]   67 #>  [3367,]   67 #>  [3368,]   67 #>  [3369,]   67 #>  [3370,]   67 #>  [3371,]   67 #>  [3372,]   67 #>  [3373,]   67 #>  [3374,]   67 #>  [3375,]   66 #>  [3376,]   67 #>  [3377,]   67 #>  [3378,]   67 #>  [3379,]   67 #>  [3380,]   67 #>  [3381,]   67 #>  [3382,]   67 #>  [3383,]   67 #>  [3384,]   67 #>  [3385,]   67 #>  [3386,]   67 #>  [3387,]   67 #>  [3388,]   67 #>  [3389,]   67 #>  [3390,]   67 #>  [3391,]   67 #>  [3392,]   67 #>  [3393,]   67 #>  [3394,]   67 #>  [3395,]   66 #>  [3396,]   67 #>  [3397,]   67 #>  [3398,]   67 #>  [3399,]   67 #>  [3400,]   67 #>  [3401,]   69 #>  [3402,]   68 #>  [3403,]   68 #>  [3404,]   69 #>  [3405,]   69 #>  [3406,]   69 #>  [3407,]   68 #>  [3408,]   69 #>  [3409,]   69 #>  [3410,]   69 #>  [3411,]   69 #>  [3412,]   69 #>  [3413,]   68 #>  [3414,]   69 #>  [3415,]   69 #>  [3416,]   68 #>  [3417,]   69 #>  [3418,]   68 #>  [3419,]   68 #>  [3420,]   69 #>  [3421,]   68 #>  [3422,]   68 #>  [3423,]   68 #>  [3424,]   68 #>  [3425,]   69 #>  [3426,]   69 #>  [3427,]   69 #>  [3428,]   69 #>  [3429,]   68 #>  [3430,]   68 #>  [3431,]   68 #>  [3432,]   68 #>  [3433,]   69 #>  [3434,]   68 #>  [3435,]   68 #>  [3436,]   68 #>  [3437,]   68 #>  [3438,]   69 #>  [3439,]   68 #>  [3440,]   68 #>  [3441,]   69 #>  [3442,]   69 #>  [3443,]   69 #>  [3444,]   68 #>  [3445,]   69 #>  [3446,]   69 #>  [3447,]   68 #>  [3448,]   68 #>  [3449,]   68 #>  [3450,]   69 #>  [3451,]   69 #>  [3452,]   69 #>  [3453,]   69 #>  [3454,]   68 #>  [3455,]   69 #>  [3456,]   69 #>  [3457,]   69 #>  [3458,]   69 #>  [3459,]   68 #>  [3460,]   69 #>  [3461,]   69 #>  [3462,]   68 #>  [3463,]   69 #>  [3464,]   69 #>  [3465,]   69 #>  [3466,]   69 #>  [3467,]   69 #>  [3468,]   69 #>  [3469,]   69 #>  [3470,]   68 #>  [3471,]   69 #>  [3472,]   69 #>  [3473,]   69 #>  [3474,]   69 #>  [3475,]   69 #>  [3476,]   69 #>  [3477,]   68 #>  [3478,]   69 #>  [3479,]   68 #>  [3480,]   68 #>  [3481,]   69 #>  [3482,]   69 #>  [3483,]   68 #>  [3484,]   69 #>  [3485,]   68 #>  [3486,]   68 #>  [3487,]   69 #>  [3488,]   69 #>  [3489,]   69 #>  [3490,]   69 #>  [3491,]   69 #>  [3492,]   69 #>  [3493,]   68 #>  [3494,]   69 #>  [3495,]   68 #>  [3496,]   69 #>  [3497,]   69 #>  [3498,]   68 #>  [3499,]   69 #>  [3500,]   68 #>  [3501,]   71 #>  [3502,]   70 #>  [3503,]   70 #>  [3504,]   70 #>  [3505,]   70 #>  [3506,]   70 #>  [3507,]   70 #>  [3508,]   70 #>  [3509,]   71 #>  [3510,]   70 #>  [3511,]   70 #>  [3512,]   70 #>  [3513,]   71 #>  [3514,]   70 #>  [3515,]   70 #>  [3516,]   70 #>  [3517,]   71 #>  [3518,]   71 #>  [3519,]   70 #>  [3520,]   70 #>  [3521,]   70 #>  [3522,]   70 #>  [3523,]   70 #>  [3524,]   70 #>  [3525,]   70 #>  [3526,]   70 #>  [3527,]   71 #>  [3528,]   70 #>  [3529,]   70 #>  [3530,]   70 #>  [3531,]   70 #>  [3532,]   70 #>  [3533,]   70 #>  [3534,]   70 #>  [3535,]   70 #>  [3536,]   71 #>  [3537,]   70 #>  [3538,]   70 #>  [3539,]   70 #>  [3540,]   70 #>  [3541,]   70 #>  [3542,]   71 #>  [3543,]   70 #>  [3544,]   70 #>  [3545,]   70 #>  [3546,]   70 #>  [3547,]   70 #>  [3548,]   70 #>  [3549,]   70 #>  [3550,]   70 #>  [3551,]   71 #>  [3552,]   70 #>  [3553,]   71 #>  [3554,]   70 #>  [3555,]   70 #>  [3556,]   70 #>  [3557,]   70 #>  [3558,]   70 #>  [3559,]   70 #>  [3560,]   70 #>  [3561,]   70 #>  [3562,]   70 #>  [3563,]   70 #>  [3564,]   70 #>  [3565,]   71 #>  [3566,]   71 #>  [3567,]   70 #>  [3568,]   70 #>  [3569,]   70 #>  [3570,]   70 #>  [3571,]   70 #>  [3572,]   70 #>  [3573,]   70 #>  [3574,]   70 #>  [3575,]   70 #>  [3576,]   70 #>  [3577,]   70 #>  [3578,]   70 #>  [3579,]   71 #>  [3580,]   70 #>  [3581,]   70 #>  [3582,]   71 #>  [3583,]   70 #>  [3584,]   71 #>  [3585,]   70 #>  [3586,]   70 #>  [3587,]   71 #>  [3588,]   70 #>  [3589,]   70 #>  [3590,]   70 #>  [3591,]   71 #>  [3592,]   70 #>  [3593,]   71 #>  [3594,]   71 #>  [3595,]   70 #>  [3596,]   70 #>  [3597,]   70 #>  [3598,]   70 #>  [3599,]   70 #>  [3600,]   70 #>  [3601,]   73 #>  [3602,]   73 #>  [3603,]   72 #>  [3604,]   72 #>  [3605,]   72 #>  [3606,]   73 #>  [3607,]   73 #>  [3608,]   72 #>  [3609,]   72 #>  [3610,]   72 #>  [3611,]   73 #>  [3612,]   72 #>  [3613,]   73 #>  [3614,]   73 #>  [3615,]   73 #>  [3616,]   73 #>  [3617,]   73 #>  [3618,]   72 #>  [3619,]   73 #>  [3620,]   72 #>  [3621,]   73 #>  [3622,]   73 #>  [3623,]   72 #>  [3624,]   72 #>  [3625,]   72 #>  [3626,]   73 #>  [3627,]   73 #>  [3628,]   72 #>  [3629,]   73 #>  [3630,]   72 #>  [3631,]   72 #>  [3632,]   72 #>  [3633,]   73 #>  [3634,]   72 #>  [3635,]   73 #>  [3636,]   72 #>  [3637,]   73 #>  [3638,]   72 #>  [3639,]   72 #>  [3640,]   73 #>  [3641,]   73 #>  [3642,]   72 #>  [3643,]   72 #>  [3644,]   73 #>  [3645,]   72 #>  [3646,]   73 #>  [3647,]   73 #>  [3648,]   72 #>  [3649,]   72 #>  [3650,]   73 #>  [3651,]   72 #>  [3652,]   73 #>  [3653,]   72 #>  [3654,]   72 #>  [3655,]   73 #>  [3656,]   72 #>  [3657,]   72 #>  [3658,]   73 #>  [3659,]   73 #>  [3660,]   72 #>  [3661,]   73 #>  [3662,]   72 #>  [3663,]   73 #>  [3664,]   72 #>  [3665,]   72 #>  [3666,]   72 #>  [3667,]   72 #>  [3668,]   73 #>  [3669,]   73 #>  [3670,]   73 #>  [3671,]   73 #>  [3672,]   72 #>  [3673,]   73 #>  [3674,]   73 #>  [3675,]   73 #>  [3676,]   73 #>  [3677,]   73 #>  [3678,]   72 #>  [3679,]   73 #>  [3680,]   72 #>  [3681,]   73 #>  [3682,]   73 #>  [3683,]   73 #>  [3684,]   73 #>  [3685,]   72 #>  [3686,]   73 #>  [3687,]   73 #>  [3688,]   72 #>  [3689,]   72 #>  [3690,]   73 #>  [3691,]   72 #>  [3692,]   73 #>  [3693,]   73 #>  [3694,]   73 #>  [3695,]   72 #>  [3696,]   73 #>  [3697,]   73 #>  [3698,]   73 #>  [3699,]   73 #>  [3700,]   73 #>  [3701,]   74 #>  [3702,]   74 #>  [3703,]   74 #>  [3704,]   74 #>  [3705,]   74 #>  [3706,]   74 #>  [3707,]   75 #>  [3708,]   74 #>  [3709,]   74 #>  [3710,]   75 #>  [3711,]   74 #>  [3712,]   74 #>  [3713,]   74 #>  [3714,]   74 #>  [3715,]   74 #>  [3716,]   75 #>  [3717,]   74 #>  [3718,]   74 #>  [3719,]   74 #>  [3720,]   75 #>  [3721,]   74 #>  [3722,]   74 #>  [3723,]   74 #>  [3724,]   75 #>  [3725,]   74 #>  [3726,]   74 #>  [3727,]   74 #>  [3728,]   75 #>  [3729,]   74 #>  [3730,]   74 #>  [3731,]   74 #>  [3732,]   74 #>  [3733,]   74 #>  [3734,]   74 #>  [3735,]   74 #>  [3736,]   74 #>  [3737,]   74 #>  [3738,]   74 #>  [3739,]   74 #>  [3740,]   74 #>  [3741,]   74 #>  [3742,]   74 #>  [3743,]   74 #>  [3744,]   74 #>  [3745,]   74 #>  [3746,]   74 #>  [3747,]   74 #>  [3748,]   74 #>  [3749,]   74 #>  [3750,]   75 #>  [3751,]   74 #>  [3752,]   75 #>  [3753,]   74 #>  [3754,]   75 #>  [3755,]   74 #>  [3756,]   74 #>  [3757,]   74 #>  [3758,]   74 #>  [3759,]   74 #>  [3760,]   74 #>  [3761,]   74 #>  [3762,]   74 #>  [3763,]   74 #>  [3764,]   74 #>  [3765,]   74 #>  [3766,]   74 #>  [3767,]   74 #>  [3768,]   74 #>  [3769,]   74 #>  [3770,]   74 #>  [3771,]   74 #>  [3772,]   74 #>  [3773,]   74 #>  [3774,]   74 #>  [3775,]   74 #>  [3776,]   75 #>  [3777,]   74 #>  [3778,]   74 #>  [3779,]   74 #>  [3780,]   74 #>  [3781,]   74 #>  [3782,]   74 #>  [3783,]   74 #>  [3784,]   74 #>  [3785,]   74 #>  [3786,]   75 #>  [3787,]   74 #>  [3788,]   74 #>  [3789,]   74 #>  [3790,]   74 #>  [3791,]   75 #>  [3792,]   74 #>  [3793,]   74 #>  [3794,]   74 #>  [3795,]   74 #>  [3796,]   74 #>  [3797,]   74 #>  [3798,]   74 #>  [3799,]   74 #>  [3800,]   74 #>  [3801,]   77 #>  [3802,]   77 #>  [3803,]   77 #>  [3804,]   76 #>  [3805,]   77 #>  [3806,]   77 #>  [3807,]   77 #>  [3808,]   76 #>  [3809,]   76 #>  [3810,]   76 #>  [3811,]   77 #>  [3812,]   77 #>  [3813,]   77 #>  [3814,]   77 #>  [3815,]   77 #>  [3816,]   77 #>  [3817,]   77 #>  [3818,]   76 #>  [3819,]   77 #>  [3820,]   76 #>  [3821,]   77 #>  [3822,]   77 #>  [3823,]   77 #>  [3824,]   77 #>  [3825,]   77 #>  [3826,]   77 #>  [3827,]   77 #>  [3828,]   77 #>  [3829,]   77 #>  [3830,]   76 #>  [3831,]   77 #>  [3832,]   77 #>  [3833,]   77 #>  [3834,]   77 #>  [3835,]   77 #>  [3836,]   77 #>  [3837,]   77 #>  [3838,]   77 #>  [3839,]   76 #>  [3840,]   77 #>  [3841,]   77 #>  [3842,]   77 #>  [3843,]   76 #>  [3844,]   77 #>  [3845,]   76 #>  [3846,]   77 #>  [3847,]   77 #>  [3848,]   77 #>  [3849,]   76 #>  [3850,]   77 #>  [3851,]   76 #>  [3852,]   77 #>  [3853,]   76 #>  [3854,]   77 #>  [3855,]   77 #>  [3856,]   76 #>  [3857,]   77 #>  [3858,]   77 #>  [3859,]   77 #>  [3860,]   76 #>  [3861,]   77 #>  [3862,]   77 #>  [3863,]   77 #>  [3864,]   76 #>  [3865,]   76 #>  [3866,]   76 #>  [3867,]   76 #>  [3868,]   77 #>  [3869,]   77 #>  [3870,]   77 #>  [3871,]   77 #>  [3872,]   77 #>  [3873,]   77 #>  [3874,]   77 #>  [3875,]   77 #>  [3876,]   77 #>  [3877,]   77 #>  [3878,]   76 #>  [3879,]   77 #>  [3880,]   77 #>  [3881,]   77 #>  [3882,]   77 #>  [3883,]   77 #>  [3884,]   77 #>  [3885,]   76 #>  [3886,]   77 #>  [3887,]   77 #>  [3888,]   77 #>  [3889,]   76 #>  [3890,]   77 #>  [3891,]   76 #>  [3892,]   77 #>  [3893,]   77 #>  [3894,]   77 #>  [3895,]   76 #>  [3896,]   77 #>  [3897,]   77 #>  [3898,]   77 #>  [3899,]   77 #>  [3900,]   77 #>  [3901,]   79 #>  [3902,]   79 #>  [3903,]   78 #>  [3904,]   78 #>  [3905,]   78 #>  [3906,]   78 #>  [3907,]   79 #>  [3908,]   79 #>  [3909,]   78 #>  [3910,]   78 #>  [3911,]   78 #>  [3912,]   79 #>  [3913,]   79 #>  [3914,]   78 #>  [3915,]   79 #>  [3916,]   79 #>  [3917,]   79 #>  [3918,]   79 #>  [3919,]   79 #>  [3920,]   79 #>  [3921,]   78 #>  [3922,]   79 #>  [3923,]   79 #>  [3924,]   78 #>  [3925,]   78 #>  [3926,]   79 #>  [3927,]   79 #>  [3928,]   78 #>  [3929,]   79 #>  [3930,]   79 #>  [3931,]   78 #>  [3932,]   78 #>  [3933,]   79 #>  [3934,]   78 #>  [3935,]   78 #>  [3936,]   79 #>  [3937,]   79 #>  [3938,]   79 #>  [3939,]   78 #>  [3940,]   78 #>  [3941,]   79 #>  [3942,]   78 #>  [3943,]   79 #>  [3944,]   79 #>  [3945,]   79 #>  [3946,]   79 #>  [3947,]   78 #>  [3948,]   78 #>  [3949,]   79 #>  [3950,]   79 #>  [3951,]   79 #>  [3952,]   78 #>  [3953,]   79 #>  [3954,]   78 #>  [3955,]   79 #>  [3956,]   79 #>  [3957,]   78 #>  [3958,]   79 #>  [3959,]   79 #>  [3960,]   79 #>  [3961,]   79 #>  [3962,]   78 #>  [3963,]   79 #>  [3964,]   79 #>  [3965,]   78 #>  [3966,]   79 #>  [3967,]   78 #>  [3968,]   79 #>  [3969,]   79 #>  [3970,]   78 #>  [3971,]   79 #>  [3972,]   78 #>  [3973,]   78 #>  [3974,]   78 #>  [3975,]   79 #>  [3976,]   78 #>  [3977,]   79 #>  [3978,]   79 #>  [3979,]   78 #>  [3980,]   79 #>  [3981,]   79 #>  [3982,]   78 #>  [3983,]   79 #>  [3984,]   79 #>  [3985,]   79 #>  [3986,]   78 #>  [3987,]   79 #>  [3988,]   78 #>  [3989,]   78 #>  [3990,]   79 #>  [3991,]   78 #>  [3992,]   78 #>  [3993,]   79 #>  [3994,]   78 #>  [3995,]   79 #>  [3996,]   79 #>  [3997,]   79 #>  [3998,]   78 #>  [3999,]   78 #>  [4000,]   79 #>  [4001,]   81 #>  [4002,]   81 #>  [4003,]   81 #>  [4004,]   81 #>  [4005,]   81 #>  [4006,]   81 #>  [4007,]   80 #>  [4008,]   81 #>  [4009,]   81 #>  [4010,]   81 #>  [4011,]   81 #>  [4012,]   81 #>  [4013,]   81 #>  [4014,]   81 #>  [4015,]   81 #>  [4016,]   81 #>  [4017,]   81 #>  [4018,]   81 #>  [4019,]   81 #>  [4020,]   81 #>  [4021,]   80 #>  [4022,]   81 #>  [4023,]   81 #>  [4024,]   81 #>  [4025,]   81 #>  [4026,]   81 #>  [4027,]   81 #>  [4028,]   81 #>  [4029,]   81 #>  [4030,]   81 #>  [4031,]   81 #>  [4032,]   81 #>  [4033,]   81 #>  [4034,]   81 #>  [4035,]   81 #>  [4036,]   81 #>  [4037,]   81 #>  [4038,]   81 #>  [4039,]   80 #>  [4040,]   81 #>  [4041,]   81 #>  [4042,]   81 #>  [4043,]   81 #>  [4044,]   81 #>  [4045,]   81 #>  [4046,]   81 #>  [4047,]   81 #>  [4048,]   81 #>  [4049,]   80 #>  [4050,]   81 #>  [4051,]   81 #>  [4052,]   81 #>  [4053,]   81 #>  [4054,]   81 #>  [4055,]   81 #>  [4056,]   81 #>  [4057,]   81 #>  [4058,]   81 #>  [4059,]   81 #>  [4060,]   81 #>  [4061,]   81 #>  [4062,]   80 #>  [4063,]   81 #>  [4064,]   81 #>  [4065,]   81 #>  [4066,]   81 #>  [4067,]   81 #>  [4068,]   81 #>  [4069,]   81 #>  [4070,]   80 #>  [4071,]   81 #>  [4072,]   81 #>  [4073,]   81 #>  [4074,]   81 #>  [4075,]   81 #>  [4076,]   81 #>  [4077,]   81 #>  [4078,]   81 #>  [4079,]   81 #>  [4080,]   80 #>  [4081,]   81 #>  [4082,]   81 #>  [4083,]   81 #>  [4084,]   81 #>  [4085,]   81 #>  [4086,]   81 #>  [4087,]   81 #>  [4088,]   81 #>  [4089,]   81 #>  [4090,]   81 #>  [4091,]   81 #>  [4092,]   81 #>  [4093,]   81 #>  [4094,]   81 #>  [4095,]   80 #>  [4096,]   81 #>  [4097,]   81 #>  [4098,]   81 #>  [4099,]   81 #>  [4100,]   81 #>  [4101,]   83 #>  [4102,]   83 #>  [4103,]   83 #>  [4104,]   83 #>  [4105,]   83 #>  [4106,]   82 #>  [4107,]   83 #>  [4108,]   83 #>  [4109,]   83 #>  [4110,]   83 #>  [4111,]   83 #>  [4112,]   83 #>  [4113,]   83 #>  [4114,]   83 #>  [4115,]   83 #>  [4116,]   83 #>  [4117,]   83 #>  [4118,]   83 #>  [4119,]   83 #>  [4120,]   82 #>  [4121,]   82 #>  [4122,]   83 #>  [4123,]   83 #>  [4124,]   83 #>  [4125,]   82 #>  [4126,]   83 #>  [4127,]   83 #>  [4128,]   83 #>  [4129,]   83 #>  [4130,]   83 #>  [4131,]   83 #>  [4132,]   83 #>  [4133,]   83 #>  [4134,]   83 #>  [4135,]   82 #>  [4136,]   83 #>  [4137,]   83 #>  [4138,]   83 #>  [4139,]   83 #>  [4140,]   83 #>  [4141,]   83 #>  [4142,]   83 #>  [4143,]   83 #>  [4144,]   82 #>  [4145,]   83 #>  [4146,]   83 #>  [4147,]   83 #>  [4148,]   83 #>  [4149,]   83 #>  [4150,]   83 #>  [4151,]   83 #>  [4152,]   83 #>  [4153,]   82 #>  [4154,]   83 #>  [4155,]   83 #>  [4156,]   82 #>  [4157,]   83 #>  [4158,]   83 #>  [4159,]   83 #>  [4160,]   83 #>  [4161,]   83 #>  [4162,]   83 #>  [4163,]   83 #>  [4164,]   83 #>  [4165,]   82 #>  [4166,]   83 #>  [4167,]   83 #>  [4168,]   83 #>  [4169,]   83 #>  [4170,]   83 #>  [4171,]   83 #>  [4172,]   83 #>  [4173,]   83 #>  [4174,]   82 #>  [4175,]   83 #>  [4176,]   83 #>  [4177,]   83 #>  [4178,]   83 #>  [4179,]   83 #>  [4180,]   82 #>  [4181,]   83 #>  [4182,]   83 #>  [4183,]   83 #>  [4184,]   83 #>  [4185,]   82 #>  [4186,]   82 #>  [4187,]   83 #>  [4188,]   83 #>  [4189,]   82 #>  [4190,]   83 #>  [4191,]   83 #>  [4192,]   83 #>  [4193,]   83 #>  [4194,]   83 #>  [4195,]   83 #>  [4196,]   83 #>  [4197,]   83 #>  [4198,]   83 #>  [4199,]   83 #>  [4200,]   83 #>  [4201,]   84 #>  [4202,]   84 #>  [4203,]   84 #>  [4204,]   84 #>  [4205,]   84 #>  [4206,]   84 #>  [4207,]   84 #>  [4208,]   85 #>  [4209,]   84 #>  [4210,]   84 #>  [4211,]   84 #>  [4212,]   84 #>  [4213,]   85 #>  [4214,]   84 #>  [4215,]   85 #>  [4216,]   84 #>  [4217,]   84 #>  [4218,]   84 #>  [4219,]   85 #>  [4220,]   85 #>  [4221,]   84 #>  [4222,]   85 #>  [4223,]   84 #>  [4224,]   84 #>  [4225,]   84 #>  [4226,]   85 #>  [4227,]   85 #>  [4228,]   84 #>  [4229,]   85 #>  [4230,]   84 #>  [4231,]   84 #>  [4232,]   84 #>  [4233,]   84 #>  [4234,]   84 #>  [4235,]   84 #>  [4236,]   85 #>  [4237,]   85 #>  [4238,]   85 #>  [4239,]   84 #>  [4240,]   84 #>  [4241,]   85 #>  [4242,]   84 #>  [4243,]   85 #>  [4244,]   84 #>  [4245,]   84 #>  [4246,]   85 #>  [4247,]   84 #>  [4248,]   84 #>  [4249,]   84 #>  [4250,]   85 #>  [4251,]   85 #>  [4252,]   84 #>  [4253,]   85 #>  [4254,]   84 #>  [4255,]   85 #>  [4256,]   84 #>  [4257,]   84 #>  [4258,]   85 #>  [4259,]   85 #>  [4260,]   85 #>  [4261,]   84 #>  [4262,]   84 #>  [4263,]   84 #>  [4264,]   85 #>  [4265,]   84 #>  [4266,]   85 #>  [4267,]   84 #>  [4268,]   84 #>  [4269,]   85 #>  [4270,]   84 #>  [4271,]   85 #>  [4272,]   84 #>  [4273,]   84 #>  [4274,]   84 #>  [4275,]   84 #>  [4276,]   84 #>  [4277,]   85 #>  [4278,]   84 #>  [4279,]   84 #>  [4280,]   85 #>  [4281,]   85 #>  [4282,]   84 #>  [4283,]   85 #>  [4284,]   85 #>  [4285,]   85 #>  [4286,]   84 #>  [4287,]   85 #>  [4288,]   84 #>  [4289,]   84 #>  [4290,]   85 #>  [4291,]   84 #>  [4292,]   84 #>  [4293,]   84 #>  [4294,]   84 #>  [4295,]   85 #>  [4296,]   85 #>  [4297,]   85 #>  [4298,]   84 #>  [4299,]   84 #>  [4300,]   85 #>  [4301,]   87 #>  [4302,]   86 #>  [4303,]   86 #>  [4304,]   87 #>  [4305,]   87 #>  [4306,]   87 #>  [4307,]   86 #>  [4308,]   87 #>  [4309,]   87 #>  [4310,]   86 #>  [4311,]   87 #>  [4312,]   87 #>  [4313,]   86 #>  [4314,]   87 #>  [4315,]   87 #>  [4316,]   86 #>  [4317,]   86 #>  [4318,]   86 #>  [4319,]   86 #>  [4320,]   87 #>  [4321,]   86 #>  [4322,]   86 #>  [4323,]   86 #>  [4324,]   86 #>  [4325,]   86 #>  [4326,]   87 #>  [4327,]   86 #>  [4328,]   87 #>  [4329,]   86 #>  [4330,]   86 #>  [4331,]   86 #>  [4332,]   86 #>  [4333,]   87 #>  [4334,]   86 #>  [4335,]   86 #>  [4336,]   86 #>  [4337,]   86 #>  [4338,]   87 #>  [4339,]   86 #>  [4340,]   86 #>  [4341,]   87 #>  [4342,]   87 #>  [4343,]   87 #>  [4344,]   86 #>  [4345,]   87 #>  [4346,]   87 #>  [4347,]   86 #>  [4348,]   86 #>  [4349,]   86 #>  [4350,]   87 #>  [4351,]   87 #>  [4352,]   87 #>  [4353,]   87 #>  [4354,]   86 #>  [4355,]   87 #>  [4356,]   87 #>  [4357,]   87 #>  [4358,]   87 #>  [4359,]   86 #>  [4360,]   87 #>  [4361,]   87 #>  [4362,]   86 #>  [4363,]   87 #>  [4364,]   87 #>  [4365,]   87 #>  [4366,]   87 #>  [4367,]   87 #>  [4368,]   87 #>  [4369,]   86 #>  [4370,]   86 #>  [4371,]   87 #>  [4372,]   87 #>  [4373,]   87 #>  [4374,]   87 #>  [4375,]   87 #>  [4376,]   87 #>  [4377,]   86 #>  [4378,]   87 #>  [4379,]   86 #>  [4380,]   86 #>  [4381,]   87 #>  [4382,]   86 #>  [4383,]   86 #>  [4384,]   87 #>  [4385,]   86 #>  [4386,]   86 #>  [4387,]   87 #>  [4388,]   87 #>  [4389,]   87 #>  [4390,]   87 #>  [4391,]   87 #>  [4392,]   87 #>  [4393,]   86 #>  [4394,]   87 #>  [4395,]   86 #>  [4396,]   87 #>  [4397,]   87 #>  [4398,]   86 #>  [4399,]   86 #>  [4400,]   86 #>  [4401,]   89 #>  [4402,]   89 #>  [4403,]   88 #>  [4404,]   88 #>  [4405,]   88 #>  [4406,]   88 #>  [4407,]   89 #>  [4408,]   89 #>  [4409,]   88 #>  [4410,]   88 #>  [4411,]   88 #>  [4412,]   89 #>  [4413,]   89 #>  [4414,]   88 #>  [4415,]   89 #>  [4416,]   89 #>  [4417,]   89 #>  [4418,]   89 #>  [4419,]   89 #>  [4420,]   89 #>  [4421,]   88 #>  [4422,]   89 #>  [4423,]   89 #>  [4424,]   88 #>  [4425,]   88 #>  [4426,]   89 #>  [4427,]   89 #>  [4428,]   88 #>  [4429,]   89 #>  [4430,]   89 #>  [4431,]   88 #>  [4432,]   88 #>  [4433,]   89 #>  [4434,]   88 #>  [4435,]   88 #>  [4436,]   89 #>  [4437,]   89 #>  [4438,]   89 #>  [4439,]   88 #>  [4440,]   88 #>  [4441,]   89 #>  [4442,]   88 #>  [4443,]   89 #>  [4444,]   89 #>  [4445,]   89 #>  [4446,]   89 #>  [4447,]   88 #>  [4448,]   88 #>  [4449,]   89 #>  [4450,]   89 #>  [4451,]   89 #>  [4452,]   88 #>  [4453,]   89 #>  [4454,]   88 #>  [4455,]   89 #>  [4456,]   89 #>  [4457,]   88 #>  [4458,]   89 #>  [4459,]   89 #>  [4460,]   89 #>  [4461,]   89 #>  [4462,]   88 #>  [4463,]   89 #>  [4464,]   89 #>  [4465,]   88 #>  [4466,]   89 #>  [4467,]   88 #>  [4468,]   89 #>  [4469,]   89 #>  [4470,]   88 #>  [4471,]   89 #>  [4472,]   88 #>  [4473,]   88 #>  [4474,]   88 #>  [4475,]   89 #>  [4476,]   88 #>  [4477,]   89 #>  [4478,]   89 #>  [4479,]   88 #>  [4480,]   89 #>  [4481,]   89 #>  [4482,]   88 #>  [4483,]   89 #>  [4484,]   89 #>  [4485,]   89 #>  [4486,]   89 #>  [4487,]   89 #>  [4488,]   89 #>  [4489,]   88 #>  [4490,]   89 #>  [4491,]   88 #>  [4492,]   89 #>  [4493,]   89 #>  [4494,]   88 #>  [4495,]   89 #>  [4496,]   89 #>  [4497,]   89 #>  [4498,]   88 #>  [4499,]   89 #>  [4500,]   89 #>  [4501,]   91 #>  [4502,]   90 #>  [4503,]   90 #>  [4504,]   91 #>  [4505,]   91 #>  [4506,]   91 #>  [4507,]   90 #>  [4508,]   91 #>  [4509,]   91 #>  [4510,]   91 #>  [4511,]   91 #>  [4512,]   91 #>  [4513,]   90 #>  [4514,]   91 #>  [4515,]   91 #>  [4516,]   90 #>  [4517,]   91 #>  [4518,]   90 #>  [4519,]   90 #>  [4520,]   91 #>  [4521,]   90 #>  [4522,]   91 #>  [4523,]   90 #>  [4524,]   90 #>  [4525,]   91 #>  [4526,]   91 #>  [4527,]   91 #>  [4528,]   91 #>  [4529,]   91 #>  [4530,]   90 #>  [4531,]   90 #>  [4532,]   91 #>  [4533,]   91 #>  [4534,]   90 #>  [4535,]   90 #>  [4536,]   90 #>  [4537,]   90 #>  [4538,]   91 #>  [4539,]   90 #>  [4540,]   90 #>  [4541,]   91 #>  [4542,]   91 #>  [4543,]   91 #>  [4544,]   90 #>  [4545,]   91 #>  [4546,]   91 #>  [4547,]   90 #>  [4548,]   91 #>  [4549,]   90 #>  [4550,]   91 #>  [4551,]   91 #>  [4552,]   91 #>  [4553,]   91 #>  [4554,]   90 #>  [4555,]   91 #>  [4556,]   91 #>  [4557,]   91 #>  [4558,]   91 #>  [4559,]   91 #>  [4560,]   91 #>  [4561,]   91 #>  [4562,]   90 #>  [4563,]   91 #>  [4564,]   91 #>  [4565,]   91 #>  [4566,]   91 #>  [4567,]   91 #>  [4568,]   91 #>  [4569,]   91 #>  [4570,]   90 #>  [4571,]   91 #>  [4572,]   91 #>  [4573,]   91 #>  [4574,]   91 #>  [4575,]   91 #>  [4576,]   91 #>  [4577,]   90 #>  [4578,]   91 #>  [4579,]   90 #>  [4580,]   90 #>  [4581,]   91 #>  [4582,]   91 #>  [4583,]   90 #>  [4584,]   91 #>  [4585,]   91 #>  [4586,]   91 #>  [4587,]   91 #>  [4588,]   91 #>  [4589,]   91 #>  [4590,]   91 #>  [4591,]   91 #>  [4592,]   91 #>  [4593,]   90 #>  [4594,]   91 #>  [4595,]   90 #>  [4596,]   91 #>  [4597,]   91 #>  [4598,]   90 #>  [4599,]   91 #>  [4600,]   90 #>  [4601,]   92 #>  [4602,]   92 #>  [4603,]   92 #>  [4604,]   92 #>  [4605,]   92 #>  [4606,]   92 #>  [4607,]   92 #>  [4608,]   92 #>  [4609,]   92 #>  [4610,]   92 #>  [4611,]   92 #>  [4612,]   92 #>  [4613,]   92 #>  [4614,]   92 #>  [4615,]   92 #>  [4616,]   92 #>  [4617,]   92 #>  [4618,]   92 #>  [4619,]   92 #>  [4620,]   92 #>  [4621,]   92 #>  [4622,]   92 #>  [4623,]   92 #>  [4624,]   92 #>  [4625,]   92 #>  [4626,]   92 #>  [4627,]   92 #>  [4628,]   92 #>  [4629,]   92 #>  [4630,]   92 #>  [4631,]   92 #>  [4632,]   92 #>  [4633,]   92 #>  [4634,]   92 #>  [4635,]   92 #>  [4636,]   92 #>  [4637,]   92 #>  [4638,]   92 #>  [4639,]   92 #>  [4640,]   92 #>  [4641,]   92 #>  [4642,]   92 #>  [4643,]   92 #>  [4644,]   92 #>  [4645,]   92 #>  [4646,]   92 #>  [4647,]   92 #>  [4648,]   92 #>  [4649,]   92 #>  [4650,]   92 #>  [4651,]   92 #>  [4652,]   92 #>  [4653,]   92 #>  [4654,]   92 #>  [4655,]   92 #>  [4656,]   92 #>  [4657,]   92 #>  [4658,]   92 #>  [4659,]   92 #>  [4660,]   92 #>  [4661,]   92 #>  [4662,]   92 #>  [4663,]   92 #>  [4664,]   92 #>  [4665,]   92 #>  [4666,]   92 #>  [4667,]   92 #>  [4668,]   92 #>  [4669,]   92 #>  [4670,]   92 #>  [4671,]   92 #>  [4672,]   92 #>  [4673,]   92 #>  [4674,]   92 #>  [4675,]   92 #>  [4676,]   92 #>  [4677,]   92 #>  [4678,]   92 #>  [4679,]   92 #>  [4680,]   92 #>  [4681,]   92 #>  [4682,]   92 #>  [4683,]   92 #>  [4684,]   92 #>  [4685,]   92 #>  [4686,]   92 #>  [4687,]   92 #>  [4688,]   92 #>  [4689,]   92 #>  [4690,]   92 #>  [4691,]   92 #>  [4692,]   92 #>  [4693,]   92 #>  [4694,]   92 #>  [4695,]   92 #>  [4696,]   92 #>  [4697,]   92 #>  [4698,]   92 #>  [4699,]   92 #>  [4700,]   92 #>  [4701,]   93 #>  [4702,]   93 #>  [4703,]   93 #>  [4704,]   93 #>  [4705,]   93 #>  [4706,]   93 #>  [4707,]   93 #>  [4708,]   93 #>  [4709,]   93 #>  [4710,]   93 #>  [4711,]   93 #>  [4712,]   93 #>  [4713,]   93 #>  [4714,]   93 #>  [4715,]   93 #>  [4716,]   93 #>  [4717,]   93 #>  [4718,]   93 #>  [4719,]   93 #>  [4720,]   93 #>  [4721,]   93 #>  [4722,]   93 #>  [4723,]   93 #>  [4724,]   93 #>  [4725,]   93 #>  [4726,]   93 #>  [4727,]   93 #>  [4728,]   93 #>  [4729,]   93 #>  [4730,]   93 #>  [4731,]   93 #>  [4732,]   93 #>  [4733,]   93 #>  [4734,]   93 #>  [4735,]   93 #>  [4736,]   93 #>  [4737,]   93 #>  [4738,]   93 #>  [4739,]   93 #>  [4740,]   93 #>  [4741,]   93 #>  [4742,]   93 #>  [4743,]   93 #>  [4744,]   93 #>  [4745,]   93 #>  [4746,]   93 #>  [4747,]   93 #>  [4748,]   93 #>  [4749,]   93 #>  [4750,]   93 #>  [4751,]   93 #>  [4752,]   93 #>  [4753,]   93 #>  [4754,]   93 #>  [4755,]   93 #>  [4756,]   93 #>  [4757,]   93 #>  [4758,]   93 #>  [4759,]   93 #>  [4760,]   93 #>  [4761,]   93 #>  [4762,]   93 #>  [4763,]   93 #>  [4764,]   93 #>  [4765,]   93 #>  [4766,]   93 #>  [4767,]   93 #>  [4768,]   93 #>  [4769,]   93 #>  [4770,]   93 #>  [4771,]   93 #>  [4772,]   93 #>  [4773,]   93 #>  [4774,]   93 #>  [4775,]   93 #>  [4776,]   93 #>  [4777,]   93 #>  [4778,]   93 #>  [4779,]   93 #>  [4780,]   93 #>  [4781,]   93 #>  [4782,]   93 #>  [4783,]   93 #>  [4784,]   93 #>  [4785,]   93 #>  [4786,]   93 #>  [4787,]   93 #>  [4788,]   93 #>  [4789,]   93 #>  [4790,]   93 #>  [4791,]   93 #>  [4792,]   93 #>  [4793,]   93 #>  [4794,]   93 #>  [4795,]   93 #>  [4796,]   93 #>  [4797,]   93 #>  [4798,]   93 #>  [4799,]   93 #>  [4800,]   93 #>  [4801,]   94 #>  [4802,]   95 #>  [4803,]   94 #>  [4804,]   95 #>  [4805,]   95 #>  [4806,]   94 #>  [4807,]   95 #>  [4808,]   95 #>  [4809,]   95 #>  [4810,]   95 #>  [4811,]   94 #>  [4812,]   95 #>  [4813,]   95 #>  [4814,]   95 #>  [4815,]   95 #>  [4816,]   94 #>  [4817,]   95 #>  [4818,]   95 #>  [4819,]   94 #>  [4820,]   95 #>  [4821,]   95 #>  [4822,]   95 #>  [4823,]   95 #>  [4824,]   95 #>  [4825,]   95 #>  [4826,]   95 #>  [4827,]   95 #>  [4828,]   94 #>  [4829,]   95 #>  [4830,]   95 #>  [4831,]   95 #>  [4832,]   95 #>  [4833,]   95 #>  [4834,]   94 #>  [4835,]   94 #>  [4836,]   95 #>  [4837,]   94 #>  [4838,]   94 #>  [4839,]   95 #>  [4840,]   95 #>  [4841,]   95 #>  [4842,]   94 #>  [4843,]   95 #>  [4844,]   95 #>  [4845,]   94 #>  [4846,]   95 #>  [4847,]   95 #>  [4848,]   95 #>  [4849,]   94 #>  [4850,]   95 #>  [4851,]   95 #>  [4852,]   94 #>  [4853,]   95 #>  [4854,]   95 #>  [4855,]   95 #>  [4856,]   95 #>  [4857,]   95 #>  [4858,]   95 #>  [4859,]   95 #>  [4860,]   95 #>  [4861,]   95 #>  [4862,]   95 #>  [4863,]   95 #>  [4864,]   94 #>  [4865,]   95 #>  [4866,]   95 #>  [4867,]   95 #>  [4868,]   94 #>  [4869,]   95 #>  [4870,]   95 #>  [4871,]   95 #>  [4872,]   94 #>  [4873,]   94 #>  [4874,]   95 #>  [4875,]   95 #>  [4876,]   95 #>  [4877,]   94 #>  [4878,]   95 #>  [4879,]   95 #>  [4880,]   95 #>  [4881,]   95 #>  [4882,]   95 #>  [4883,]   95 #>  [4884,]   95 #>  [4885,]   95 #>  [4886,]   95 #>  [4887,]   95 #>  [4888,]   95 #>  [4889,]   95 #>  [4890,]   95 #>  [4891,]   95 #>  [4892,]   95 #>  [4893,]   95 #>  [4894,]   94 #>  [4895,]   95 #>  [4896,]   94 #>  [4897,]   94 #>  [4898,]   95 #>  [4899,]   95 #>  [4900,]   94 #>  [4901,]   96 #>  [4902,]   96 #>  [4903,]   96 #>  [4904,]   97 #>  [4905,]   96 #>  [4906,]   96 #>  [4907,]   96 #>  [4908,]   96 #>  [4909,]   96 #>  [4910,]   97 #>  [4911,]   96 #>  [4912,]   96 #>  [4913,]   96 #>  [4914,]   96 #>  [4915,]   96 #>  [4916,]   96 #>  [4917,]   96 #>  [4918,]   97 #>  [4919,]   96 #>  [4920,]   96 #>  [4921,]   96 #>  [4922,]   96 #>  [4923,]   96 #>  [4924,]   96 #>  [4925,]   97 #>  [4926,]   96 #>  [4927,]   96 #>  [4928,]   96 #>  [4929,]   96 #>  [4930,]   96 #>  [4931,]   96 #>  [4932,]   96 #>  [4933,]   96 #>  [4934,]   96 #>  [4935,]   96 #>  [4936,]   96 #>  [4937,]   96 #>  [4938,]   96 #>  [4939,]   97 #>  [4940,]   96 #>  [4941,]   96 #>  [4942,]   96 #>  [4943,]   97 #>  [4944,]   96 #>  [4945,]   97 #>  [4946,]   96 #>  [4947,]   96 #>  [4948,]   96 #>  [4949,]   96 #>  [4950,]   96 #>  [4951,]   96 #>  [4952,]   96 #>  [4953,]   96 #>  [4954,]   96 #>  [4955,]   96 #>  [4956,]   96 #>  [4957,]   96 #>  [4958,]   96 #>  [4959,]   96 #>  [4960,]   96 #>  [4961,]   96 #>  [4962,]   96 #>  [4963,]   96 #>  [4964,]   96 #>  [4965,]   96 #>  [4966,]   96 #>  [4967,]   96 #>  [4968,]   96 #>  [4969,]   96 #>  [4970,]   96 #>  [4971,]   96 #>  [4972,]   96 #>  [4973,]   97 #>  [4974,]   97 #>  [4975,]   97 #>  [4976,]   97 #>  [4977,]   97 #>  [4978,]   96 #>  [4979,]   96 #>  [4980,]   96 #>  [4981,]   96 #>  [4982,]   96 #>  [4983,]   96 #>  [4984,]   96 #>  [4985,]   96 #>  [4986,]   96 #>  [4987,]   96 #>  [4988,]   96 #>  [4989,]   96 #>  [4990,]   96 #>  [4991,]   96 #>  [4992,]   96 #>  [4993,]   96 #>  [4994,]   96 #>  [4995,]   96 #>  [4996,]   96 #>  [4997,]   96 #>  [4998,]   96 #>  [4999,]   96 #>  [5000,]   96 #>  [5001,]   98 #>  [5002,]   99 #>  [5003,]   98 #>  [5004,]   98 #>  [5005,]   99 #>  [5006,]   98 #>  [5007,]   99 #>  [5008,]   98 #>  [5009,]   99 #>  [5010,]   99 #>  [5011,]   98 #>  [5012,]   99 #>  [5013,]   99 #>  [5014,]   98 #>  [5015,]   98 #>  [5016,]   98 #>  [5017,]   99 #>  [5018,]   99 #>  [5019,]   98 #>  [5020,]   99 #>  [5021,]   99 #>  [5022,]   99 #>  [5023,]   99 #>  [5024,]   99 #>  [5025,]   98 #>  [5026,]   98 #>  [5027,]   99 #>  [5028,]   98 #>  [5029,]   99 #>  [5030,]   99 #>  [5031,]   99 #>  [5032,]   99 #>  [5033,]   99 #>  [5034,]   98 #>  [5035,]   98 #>  [5036,]   99 #>  [5037,]   98 #>  [5038,]   98 #>  [5039,]   98 #>  [5040,]   99 #>  [5041,]   99 #>  [5042,]   98 #>  [5043,]   98 #>  [5044,]   99 #>  [5045,]   98 #>  [5046,]   98 #>  [5047,]   99 #>  [5048,]   99 #>  [5049,]   98 #>  [5050,]   99 #>  [5051,]   98 #>  [5052,]   98 #>  [5053,]   99 #>  [5054,]   99 #>  [5055,]   98 #>  [5056,]   98 #>  [5057,]   98 #>  [5058,]   99 #>  [5059,]   98 #>  [5060,]   99 #>  [5061,]   99 #>  [5062,]   98 #>  [5063,]   99 #>  [5064,]   98 #>  [5065,]   98 #>  [5066,]   98 #>  [5067,]   98 #>  [5068,]   98 #>  [5069,]   98 #>  [5070,]   99 #>  [5071,]   99 #>  [5072,]   98 #>  [5073,]   98 #>  [5074,]   99 #>  [5075,]   99 #>  [5076,]   99 #>  [5077,]   98 #>  [5078,]   99 #>  [5079,]   98 #>  [5080,]   99 #>  [5081,]   99 #>  [5082,]   98 #>  [5083,]   99 #>  [5084,]   99 #>  [5085,]   98 #>  [5086,]   99 #>  [5087,]   99 #>  [5088,]   99 #>  [5089,]   98 #>  [5090,]   99 #>  [5091,]   98 #>  [5092,]   99 #>  [5093,]   99 #>  [5094,]   98 #>  [5095,]   99 #>  [5096,]   98 #>  [5097,]   98 #>  [5098,]   98 #>  [5099,]   98 #>  [5100,]   98 #>  [5101,]  101 #>  [5102,]  101 #>  [5103,]  101 #>  [5104,]  100 #>  [5105,]  101 #>  [5106,]  101 #>  [5107,]  101 #>  [5108,]  100 #>  [5109,]  100 #>  [5110,]  100 #>  [5111,]  101 #>  [5112,]  101 #>  [5113,]  101 #>  [5114,]  101 #>  [5115,]  101 #>  [5116,]  101 #>  [5117,]  101 #>  [5118,]  101 #>  [5119,]  101 #>  [5120,]  100 #>  [5121,]  101 #>  [5122,]  101 #>  [5123,]  101 #>  [5124,]  101 #>  [5125,]  101 #>  [5126,]  101 #>  [5127,]  101 #>  [5128,]  101 #>  [5129,]  101 #>  [5130,]  100 #>  [5131,]  101 #>  [5132,]  101 #>  [5133,]  101 #>  [5134,]  101 #>  [5135,]  101 #>  [5136,]  101 #>  [5137,]  101 #>  [5138,]  101 #>  [5139,]  101 #>  [5140,]  101 #>  [5141,]  101 #>  [5142,]  101 #>  [5143,]  100 #>  [5144,]  101 #>  [5145,]  101 #>  [5146,]  101 #>  [5147,]  101 #>  [5148,]  101 #>  [5149,]  101 #>  [5150,]  101 #>  [5151,]  100 #>  [5152,]  101 #>  [5153,]  101 #>  [5154,]  101 #>  [5155,]  101 #>  [5156,]  100 #>  [5157,]  101 #>  [5158,]  101 #>  [5159,]  101 #>  [5160,]  100 #>  [5161,]  101 #>  [5162,]  101 #>  [5163,]  101 #>  [5164,]  100 #>  [5165,]  101 #>  [5166,]  101 #>  [5167,]  100 #>  [5168,]  101 #>  [5169,]  101 #>  [5170,]  101 #>  [5171,]  101 #>  [5172,]  101 #>  [5173,]  101 #>  [5174,]  101 #>  [5175,]  101 #>  [5176,]  101 #>  [5177,]  101 #>  [5178,]  100 #>  [5179,]  101 #>  [5180,]  101 #>  [5181,]  101 #>  [5182,]  101 #>  [5183,]  101 #>  [5184,]  101 #>  [5185,]  100 #>  [5186,]  101 #>  [5187,]  101 #>  [5188,]  101 #>  [5189,]  100 #>  [5190,]  101 #>  [5191,]  100 #>  [5192,]  101 #>  [5193,]  101 #>  [5194,]  101 #>  [5195,]  100 #>  [5196,]  101 #>  [5197,]  101 #>  [5198,]  101 #>  [5199,]  101 #>  [5200,]  101 #>  [5201,]  102 #>  [5202,]  102 #>  [5203,]  102 #>  [5204,]  103 #>  [5205,]  102 #>  [5206,]  102 #>  [5207,]  103 #>  [5208,]  102 #>  [5209,]  102 #>  [5210,]  103 #>  [5211,]  102 #>  [5212,]  102 #>  [5213,]  102 #>  [5214,]  102 #>  [5215,]  103 #>  [5216,]  103 #>  [5217,]  102 #>  [5218,]  103 #>  [5219,]  102 #>  [5220,]  102 #>  [5221,]  103 #>  [5222,]  102 #>  [5223,]  103 #>  [5224,]  102 #>  [5225,]  103 #>  [5226,]  102 #>  [5227,]  103 #>  [5228,]  102 #>  [5229,]  102 #>  [5230,]  102 #>  [5231,]  102 #>  [5232,]  102 #>  [5233,]  102 #>  [5234,]  102 #>  [5235,]  102 #>  [5236,]  102 #>  [5237,]  102 #>  [5238,]  102 #>  [5239,]  103 #>  [5240,]  102 #>  [5241,]  102 #>  [5242,]  102 #>  [5243,]  103 #>  [5244,]  102 #>  [5245,]  103 #>  [5246,]  102 #>  [5247,]  103 #>  [5248,]  102 #>  [5249,]  102 #>  [5250,]  102 #>  [5251,]  102 #>  [5252,]  102 #>  [5253,]  103 #>  [5254,]  102 #>  [5255,]  102 #>  [5256,]  102 #>  [5257,]  102 #>  [5258,]  102 #>  [5259,]  102 #>  [5260,]  102 #>  [5261,]  103 #>  [5262,]  102 #>  [5263,]  102 #>  [5264,]  102 #>  [5265,]  102 #>  [5266,]  102 #>  [5267,]  102 #>  [5268,]  102 #>  [5269,]  102 #>  [5270,]  102 #>  [5271,]  103 #>  [5272,]  103 #>  [5273,]  103 #>  [5274,]  103 #>  [5275,]  103 #>  [5276,]  103 #>  [5277,]  103 #>  [5278,]  102 #>  [5279,]  102 #>  [5280,]  102 #>  [5281,]  102 #>  [5282,]  102 #>  [5283,]  102 #>  [5284,]  103 #>  [5285,]  102 #>  [5286,]  102 #>  [5287,]  102 #>  [5288,]  102 #>  [5289,]  102 #>  [5290,]  102 #>  [5291,]  102 #>  [5292,]  102 #>  [5293,]  102 #>  [5294,]  103 #>  [5295,]  103 #>  [5296,]  102 #>  [5297,]  102 #>  [5298,]  102 #>  [5299,]  102 #>  [5300,]  103 #>  [5301,]  104 #>  [5302,]  104 #>  [5303,]  104 #>  [5304,]  105 #>  [5305,]  104 #>  [5306,]  105 #>  [5307,]  104 #>  [5308,]  104 #>  [5309,]  105 #>  [5310,]  105 #>  [5311,]  105 #>  [5312,]  105 #>  [5313,]  104 #>  [5314,]  105 #>  [5315,]  105 #>  [5316,]  104 #>  [5317,]  104 #>  [5318,]  105 #>  [5319,]  105 #>  [5320,]  104 #>  [5321,]  105 #>  [5322,]  104 #>  [5323,]  105 #>  [5324,]  104 #>  [5325,]  104 #>  [5326,]  105 #>  [5327,]  105 #>  [5328,]  104 #>  [5329,]  104 #>  [5330,]  105 #>  [5331,]  105 #>  [5332,]  105 #>  [5333,]  105 #>  [5334,]  105 #>  [5335,]  104 #>  [5336,]  105 #>  [5337,]  104 #>  [5338,]  105 #>  [5339,]  104 #>  [5340,]  104 #>  [5341,]  105 #>  [5342,]  105 #>  [5343,]  104 #>  [5344,]  104 #>  [5345,]  104 #>  [5346,]  104 #>  [5347,]  104 #>  [5348,]  105 #>  [5349,]  104 #>  [5350,]  104 #>  [5351,]  104 #>  [5352,]  105 #>  [5353,]  104 #>  [5354,]  104 #>  [5355,]  104 #>  [5356,]  104 #>  [5357,]  104 #>  [5358,]  105 #>  [5359,]  104 #>  [5360,]  105 #>  [5361,]  105 #>  [5362,]  105 #>  [5363,]  104 #>  [5364,]  105 #>  [5365,]  104 #>  [5366,]  104 #>  [5367,]  105 #>  [5368,]  105 #>  [5369,]  105 #>  [5370,]  104 #>  [5371,]  104 #>  [5372,]  104 #>  [5373,]  105 #>  [5374,]  105 #>  [5375,]  105 #>  [5376,]  104 #>  [5377,]  104 #>  [5378,]  104 #>  [5379,]  104 #>  [5380,]  105 #>  [5381,]  104 #>  [5382,]  105 #>  [5383,]  104 #>  [5384,]  104 #>  [5385,]  105 #>  [5386,]  104 #>  [5387,]  104 #>  [5388,]  104 #>  [5389,]  104 #>  [5390,]  104 #>  [5391,]  104 #>  [5392,]  105 #>  [5393,]  105 #>  [5394,]  104 #>  [5395,]  104 #>  [5396,]  105 #>  [5397,]  105 #>  [5398,]  104 #>  [5399,]  105 #>  [5400,]  104 #>  [5401,]  107 #>  [5402,]  107 #>  [5403,]  106 #>  [5404,]  106 #>  [5405,]  106 #>  [5406,]  106 #>  [5407,]  107 #>  [5408,]  107 #>  [5409,]  106 #>  [5410,]  106 #>  [5411,]  106 #>  [5412,]  107 #>  [5413,]  107 #>  [5414,]  106 #>  [5415,]  107 #>  [5416,]  107 #>  [5417,]  107 #>  [5418,]  107 #>  [5419,]  107 #>  [5420,]  107 #>  [5421,]  106 #>  [5422,]  107 #>  [5423,]  107 #>  [5424,]  106 #>  [5425,]  106 #>  [5426,]  107 #>  [5427,]  107 #>  [5428,]  106 #>  [5429,]  107 #>  [5430,]  107 #>  [5431,]  106 #>  [5432,]  106 #>  [5433,]  107 #>  [5434,]  106 #>  [5435,]  106 #>  [5436,]  107 #>  [5437,]  107 #>  [5438,]  107 #>  [5439,]  106 #>  [5440,]  106 #>  [5441,]  107 #>  [5442,]  106 #>  [5443,]  107 #>  [5444,]  107 #>  [5445,]  107 #>  [5446,]  107 #>  [5447,]  106 #>  [5448,]  106 #>  [5449,]  107 #>  [5450,]  107 #>  [5451,]  107 #>  [5452,]  106 #>  [5453,]  107 #>  [5454,]  106 #>  [5455,]  107 #>  [5456,]  107 #>  [5457,]  106 #>  [5458,]  107 #>  [5459,]  107 #>  [5460,]  107 #>  [5461,]  107 #>  [5462,]  106 #>  [5463,]  107 #>  [5464,]  107 #>  [5465,]  106 #>  [5466,]  107 #>  [5467,]  106 #>  [5468,]  107 #>  [5469,]  107 #>  [5470,]  106 #>  [5471,]  107 #>  [5472,]  106 #>  [5473,]  106 #>  [5474,]  106 #>  [5475,]  107 #>  [5476,]  106 #>  [5477,]  107 #>  [5478,]  107 #>  [5479,]  106 #>  [5480,]  107 #>  [5481,]  107 #>  [5482,]  106 #>  [5483,]  107 #>  [5484,]  107 #>  [5485,]  107 #>  [5486,]  106 #>  [5487,]  107 #>  [5488,]  106 #>  [5489,]  106 #>  [5490,]  107 #>  [5491,]  106 #>  [5492,]  106 #>  [5493,]  107 #>  [5494,]  106 #>  [5495,]  107 #>  [5496,]  107 #>  [5497,]  107 #>  [5498,]  106 #>  [5499,]  107 #>  [5500,]  107 #>  [5501,]  108 #>  [5502,]  108 #>  [5503,]  108 #>  [5504,]  108 #>  [5505,]  108 #>  [5506,]  108 #>  [5507,]  108 #>  [5508,]  109 #>  [5509,]  108 #>  [5510,]  108 #>  [5511,]  108 #>  [5512,]  108 #>  [5513,]  109 #>  [5514,]  108 #>  [5515,]  109 #>  [5516,]  108 #>  [5517,]  108 #>  [5518,]  108 #>  [5519,]  109 #>  [5520,]  109 #>  [5521,]  108 #>  [5522,]  109 #>  [5523,]  108 #>  [5524,]  108 #>  [5525,]  108 #>  [5526,]  108 #>  [5527,]  109 #>  [5528,]  108 #>  [5529,]  109 #>  [5530,]  108 #>  [5531,]  108 #>  [5532,]  108 #>  [5533,]  108 #>  [5534,]  108 #>  [5535,]  108 #>  [5536,]  109 #>  [5537,]  109 #>  [5538,]  109 #>  [5539,]  108 #>  [5540,]  108 #>  [5541,]  109 #>  [5542,]  108 #>  [5543,]  108 #>  [5544,]  108 #>  [5545,]  108 #>  [5546,]  109 #>  [5547,]  108 #>  [5548,]  108 #>  [5549,]  108 #>  [5550,]  109 #>  [5551,]  109 #>  [5552,]  108 #>  [5553,]  109 #>  [5554,]  108 #>  [5555,]  109 #>  [5556,]  108 #>  [5557,]  108 #>  [5558,]  109 #>  [5559,]  109 #>  [5560,]  109 #>  [5561,]  108 #>  [5562,]  108 #>  [5563,]  108 #>  [5564,]  109 #>  [5565,]  108 #>  [5566,]  109 #>  [5567,]  108 #>  [5568,]  108 #>  [5569,]  109 #>  [5570,]  108 #>  [5571,]  109 #>  [5572,]  108 #>  [5573,]  108 #>  [5574,]  108 #>  [5575,]  108 #>  [5576,]  108 #>  [5577,]  109 #>  [5578,]  108 #>  [5579,]  108 #>  [5580,]  109 #>  [5581,]  109 #>  [5582,]  108 #>  [5583,]  109 #>  [5584,]  109 #>  [5585,]  109 #>  [5586,]  108 #>  [5587,]  109 #>  [5588,]  108 #>  [5589,]  108 #>  [5590,]  109 #>  [5591,]  108 #>  [5592,]  108 #>  [5593,]  108 #>  [5594,]  108 #>  [5595,]  109 #>  [5596,]  109 #>  [5597,]  109 #>  [5598,]  108 #>  [5599,]  108 #>  [5600,]  109 #>  [5601,]  111 #>  [5602,]  110 #>  [5603,]  110 #>  [5604,]  111 #>  [5605,]  110 #>  [5606,]  110 #>  [5607,]  111 #>  [5608,]  111 #>  [5609,]  111 #>  [5610,]  111 #>  [5611,]  110 #>  [5612,]  110 #>  [5613,]  111 #>  [5614,]  110 #>  [5615,]  111 #>  [5616,]  111 #>  [5617,]  111 #>  [5618,]  111 #>  [5619,]  110 #>  [5620,]  110 #>  [5621,]  111 #>  [5622,]  110 #>  [5623,]  111 #>  [5624,]  110 #>  [5625,]  111 #>  [5626,]  110 #>  [5627,]  111 #>  [5628,]  111 #>  [5629,]  110 #>  [5630,]  110 #>  [5631,]  110 #>  [5632,]  110 #>  [5633,]  110 #>  [5634,]  110 #>  [5635,]  110 #>  [5636,]  110 #>  [5637,]  111 #>  [5638,]  111 #>  [5639,]  111 #>  [5640,]  110 #>  [5641,]  110 #>  [5642,]  110 #>  [5643,]  111 #>  [5644,]  111 #>  [5645,]  111 #>  [5646,]  111 #>  [5647,]  111 #>  [5648,]  110 #>  [5649,]  110 #>  [5650,]  110 #>  [5651,]  110 #>  [5652,]  110 #>  [5653,]  111 #>  [5654,]  110 #>  [5655,]  110 #>  [5656,]  111 #>  [5657,]  110 #>  [5658,]  110 #>  [5659,]  110 #>  [5660,]  110 #>  [5661,]  111 #>  [5662,]  110 #>  [5663,]  110 #>  [5664,]  111 #>  [5665,]  110 #>  [5666,]  110 #>  [5667,]  110 #>  [5668,]  110 #>  [5669,]  110 #>  [5670,]  111 #>  [5671,]  111 #>  [5672,]  111 #>  [5673,]  111 #>  [5674,]  111 #>  [5675,]  111 #>  [5676,]  111 #>  [5677,]  111 #>  [5678,]  110 #>  [5679,]  111 #>  [5680,]  110 #>  [5681,]  110 #>  [5682,]  111 #>  [5683,]  110 #>  [5684,]  111 #>  [5685,]  110 #>  [5686,]  111 #>  [5687,]  111 #>  [5688,]  111 #>  [5689,]  110 #>  [5690,]  111 #>  [5691,]  110 #>  [5692,]  110 #>  [5693,]  110 #>  [5694,]  111 #>  [5695,]  111 #>  [5696,]  111 #>  [5697,]  110 #>  [5698,]  110 #>  [5699,]  110 #>  [5700,]  111 #>  [5701,]  113 #>  [5702,]  112 #>  [5703,]  113 #>  [5704,]  113 #>  [5705,]  113 #>  [5706,]  112 #>  [5707,]  113 #>  [5708,]  113 #>  [5709,]  113 #>  [5710,]  113 #>  [5711,]  113 #>  [5712,]  112 #>  [5713,]  113 #>  [5714,]  113 #>  [5715,]  112 #>  [5716,]  113 #>  [5717,]  112 #>  [5718,]  113 #>  [5719,]  113 #>  [5720,]  113 #>  [5721,]  113 #>  [5722,]  113 #>  [5723,]  112 #>  [5724,]  113 #>  [5725,]  113 #>  [5726,]  113 #>  [5727,]  113 #>  [5728,]  113 #>  [5729,]  112 #>  [5730,]  113 #>  [5731,]  112 #>  [5732,]  113 #>  [5733,]  113 #>  [5734,]  112 #>  [5735,]  113 #>  [5736,]  113 #>  [5737,]  112 #>  [5738,]  113 #>  [5739,]  113 #>  [5740,]  113 #>  [5741,]  113 #>  [5742,]  112 #>  [5743,]  112 #>  [5744,]  112 #>  [5745,]  113 #>  [5746,]  113 #>  [5747,]  112 #>  [5748,]  112 #>  [5749,]  113 #>  [5750,]  113 #>  [5751,]  113 #>  [5752,]  113 #>  [5753,]  113 #>  [5754,]  113 #>  [5755,]  113 #>  [5756,]  113 #>  [5757,]  113 #>  [5758,]  113 #>  [5759,]  113 #>  [5760,]  113 #>  [5761,]  113 #>  [5762,]  113 #>  [5763,]  112 #>  [5764,]  112 #>  [5765,]  113 #>  [5766,]  113 #>  [5767,]  113 #>  [5768,]  113 #>  [5769,]  113 #>  [5770,]  112 #>  [5771,]  113 #>  [5772,]  113 #>  [5773,]  113 #>  [5774,]  113 #>  [5775,]  112 #>  [5776,]  113 #>  [5777,]  113 #>  [5778,]  112 #>  [5779,]  112 #>  [5780,]  113 #>  [5781,]  112 #>  [5782,]  113 #>  [5783,]  113 #>  [5784,]  113 #>  [5785,]  113 #>  [5786,]  113 #>  [5787,]  113 #>  [5788,]  113 #>  [5789,]  113 #>  [5790,]  113 #>  [5791,]  113 #>  [5792,]  112 #>  [5793,]  113 #>  [5794,]  112 #>  [5795,]  112 #>  [5796,]  113 #>  [5797,]  113 #>  [5798,]  113 #>  [5799,]  113 #>  [5800,]  112 #>  [5801,]  115 #>  [5802,]  114 #>  [5803,]  115 #>  [5804,]  115 #>  [5805,]  115 #>  [5806,]  114 #>  [5807,]  115 #>  [5808,]  115 #>  [5809,]  115 #>  [5810,]  115 #>  [5811,]  114 #>  [5812,]  114 #>  [5813,]  115 #>  [5814,]  115 #>  [5815,]  114 #>  [5816,]  115 #>  [5817,]  114 #>  [5818,]  115 #>  [5819,]  114 #>  [5820,]  115 #>  [5821,]  115 #>  [5822,]  115 #>  [5823,]  114 #>  [5824,]  115 #>  [5825,]  115 #>  [5826,]  114 #>  [5827,]  115 #>  [5828,]  115 #>  [5829,]  114 #>  [5830,]  114 #>  [5831,]  114 #>  [5832,]  115 #>  [5833,]  115 #>  [5834,]  114 #>  [5835,]  114 #>  [5836,]  115 #>  [5837,]  114 #>  [5838,]  115 #>  [5839,]  115 #>  [5840,]  115 #>  [5841,]  115 #>  [5842,]  114 #>  [5843,]  114 #>  [5844,]  114 #>  [5845,]  115 #>  [5846,]  114 #>  [5847,]  114 #>  [5848,]  114 #>  [5849,]  115 #>  [5850,]  115 #>  [5851,]  115 #>  [5852,]  115 #>  [5853,]  115 #>  [5854,]  115 #>  [5855,]  115 #>  [5856,]  114 #>  [5857,]  115 #>  [5858,]  115 #>  [5859,]  115 #>  [5860,]  114 #>  [5861,]  114 #>  [5862,]  115 #>  [5863,]  114 #>  [5864,]  114 #>  [5865,]  114 #>  [5866,]  114 #>  [5867,]  115 #>  [5868,]  114 #>  [5869,]  115 #>  [5870,]  114 #>  [5871,]  115 #>  [5872,]  115 #>  [5873,]  115 #>  [5874,]  115 #>  [5875,]  114 #>  [5876,]  115 #>  [5877,]  115 #>  [5878,]  114 #>  [5879,]  114 #>  [5880,]  115 #>  [5881,]  114 #>  [5882,]  115 #>  [5883,]  115 #>  [5884,]  115 #>  [5885,]  115 #>  [5886,]  115 #>  [5887,]  115 #>  [5888,]  115 #>  [5889,]  115 #>  [5890,]  115 #>  [5891,]  115 #>  [5892,]  114 #>  [5893,]  114 #>  [5894,]  114 #>  [5895,]  114 #>  [5896,]  114 #>  [5897,]  115 #>  [5898,]  115 #>  [5899,]  115 #>  [5900,]  114 #>  [5901,]  116 #>  [5902,]  117 #>  [5903,]  116 #>  [5904,]  116 #>  [5905,]  116 #>  [5906,]  116 #>  [5907,]  116 #>  [5908,]  116 #>  [5909,]  117 #>  [5910,]  117 #>  [5911,]  116 #>  [5912,]  117 #>  [5913,]  116 #>  [5914,]  116 #>  [5915,]  116 #>  [5916,]  116 #>  [5917,]  117 #>  [5918,]  116 #>  [5919,]  116 #>  [5920,]  116 #>  [5921,]  117 #>  [5922,]  116 #>  [5923,]  116 #>  [5924,]  116 #>  [5925,]  116 #>  [5926,]  116 #>  [5927,]  116 #>  [5928,]  116 #>  [5929,]  117 #>  [5930,]  116 #>  [5931,]  116 #>  [5932,]  116 #>  [5933,]  117 #>  [5934,]  116 #>  [5935,]  116 #>  [5936,]  116 #>  [5937,]  116 #>  [5938,]  116 #>  [5939,]  116 #>  [5940,]  116 #>  [5941,]  116 #>  [5942,]  116 #>  [5943,]  116 #>  [5944,]  116 #>  [5945,]  116 #>  [5946,]  116 #>  [5947,]  116 #>  [5948,]  116 #>  [5949,]  116 #>  [5950,]  116 #>  [5951,]  116 #>  [5952,]  116 #>  [5953,]  117 #>  [5954,]  116 #>  [5955,]  116 #>  [5956,]  116 #>  [5957,]  116 #>  [5958,]  116 #>  [5959,]  116 #>  [5960,]  117 #>  [5961,]  116 #>  [5962,]  116 #>  [5963,]  117 #>  [5964,]  116 #>  [5965,]  116 #>  [5966,]  116 #>  [5967,]  116 #>  [5968,]  116 #>  [5969,]  116 #>  [5970,]  117 #>  [5971,]  116 #>  [5972,]  116 #>  [5973,]  116 #>  [5974,]  116 #>  [5975,]  116 #>  [5976,]  116 #>  [5977,]  116 #>  [5978,]  116 #>  [5979,]  116 #>  [5980,]  117 #>  [5981,]  117 #>  [5982,]  116 #>  [5983,]  116 #>  [5984,]  116 #>  [5985,]  116 #>  [5986,]  117 #>  [5987,]  116 #>  [5988,]  116 #>  [5989,]  116 #>  [5990,]  116 #>  [5991,]  116 #>  [5992,]  116 #>  [5993,]  116 #>  [5994,]  116 #>  [5995,]  116 #>  [5996,]  116 #>  [5997,]  116 #>  [5998,]  116 #>  [5999,]  116 #>  [6000,]  116 #>  [6001,]  119 #>  [6002,]  118 #>  [6003,]  119 #>  [6004,]  119 #>  [6005,]  119 #>  [6006,]  118 #>  [6007,]  119 #>  [6008,]  119 #>  [6009,]  119 #>  [6010,]  119 #>  [6011,]  118 #>  [6012,]  118 #>  [6013,]  119 #>  [6014,]  119 #>  [6015,]  118 #>  [6016,]  119 #>  [6017,]  118 #>  [6018,]  119 #>  [6019,]  119 #>  [6020,]  119 #>  [6021,]  119 #>  [6022,]  119 #>  [6023,]  118 #>  [6024,]  119 #>  [6025,]  119 #>  [6026,]  119 #>  [6027,]  119 #>  [6028,]  119 #>  [6029,]  118 #>  [6030,]  118 #>  [6031,]  118 #>  [6032,]  119 #>  [6033,]  119 #>  [6034,]  118 #>  [6035,]  118 #>  [6036,]  119 #>  [6037,]  118 #>  [6038,]  119 #>  [6039,]  119 #>  [6040,]  119 #>  [6041,]  119 #>  [6042,]  118 #>  [6043,]  118 #>  [6044,]  118 #>  [6045,]  119 #>  [6046,]  119 #>  [6047,]  118 #>  [6048,]  118 #>  [6049,]  119 #>  [6050,]  119 #>  [6051,]  119 #>  [6052,]  119 #>  [6053,]  119 #>  [6054,]  119 #>  [6055,]  119 #>  [6056,]  118 #>  [6057,]  119 #>  [6058,]  119 #>  [6059,]  119 #>  [6060,]  118 #>  [6061,]  118 #>  [6062,]  119 #>  [6063,]  118 #>  [6064,]  118 #>  [6065,]  118 #>  [6066,]  118 #>  [6067,]  119 #>  [6068,]  119 #>  [6069,]  119 #>  [6070,]  118 #>  [6071,]  119 #>  [6072,]  119 #>  [6073,]  119 #>  [6074,]  119 #>  [6075,]  118 #>  [6076,]  119 #>  [6077,]  119 #>  [6078,]  118 #>  [6079,]  118 #>  [6080,]  119 #>  [6081,]  118 #>  [6082,]  119 #>  [6083,]  119 #>  [6084,]  119 #>  [6085,]  119 #>  [6086,]  119 #>  [6087,]  119 #>  [6088,]  119 #>  [6089,]  119 #>  [6090,]  119 #>  [6091,]  119 #>  [6092,]  118 #>  [6093,]  119 #>  [6094,]  118 #>  [6095,]  118 #>  [6096,]  118 #>  [6097,]  119 #>  [6098,]  119 #>  [6099,]  119 #>  [6100,]  118 #>  [6101,]  120 #>  [6102,]  121 #>  [6103,]  121 #>  [6104,]  120 #>  [6105,]  120 #>  [6106,]  121 #>  [6107,]  121 #>  [6108,]  120 #>  [6109,]  120 #>  [6110,]  121 #>  [6111,]  120 #>  [6112,]  121 #>  [6113,]  120 #>  [6114,]  120 #>  [6115,]  120 #>  [6116,]  120 #>  [6117,]  120 #>  [6118,]  121 #>  [6119,]  121 #>  [6120,]  121 #>  [6121,]  120 #>  [6122,]  120 #>  [6123,]  121 #>  [6124,]  120 #>  [6125,]  121 #>  [6126,]  120 #>  [6127,]  120 #>  [6128,]  121 #>  [6129,]  121 #>  [6130,]  120 #>  [6131,]  121 #>  [6132,]  121 #>  [6133,]  121 #>  [6134,]  121 #>  [6135,]  120 #>  [6136,]  121 #>  [6137,]  120 #>  [6138,]  120 #>  [6139,]  121 #>  [6140,]  121 #>  [6141,]  120 #>  [6142,]  121 #>  [6143,]  120 #>  [6144,]  120 #>  [6145,]  120 #>  [6146,]  120 #>  [6147,]  121 #>  [6148,]  121 #>  [6149,]  120 #>  [6150,]  121 #>  [6151,]  120 #>  [6152,]  120 #>  [6153,]  121 #>  [6154,]  120 #>  [6155,]  120 #>  [6156,]  121 #>  [6157,]  121 #>  [6158,]  120 #>  [6159,]  120 #>  [6160,]  121 #>  [6161,]  121 #>  [6162,]  120 #>  [6163,]  121 #>  [6164,]  121 #>  [6165,]  121 #>  [6166,]  120 #>  [6167,]  120 #>  [6168,]  120 #>  [6169,]  120 #>  [6170,]  121 #>  [6171,]  121 #>  [6172,]  121 #>  [6173,]  121 #>  [6174,]  120 #>  [6175,]  121 #>  [6176,]  121 #>  [6177,]  121 #>  [6178,]  121 #>  [6179,]  120 #>  [6180,]  120 #>  [6181,]  120 #>  [6182,]  120 #>  [6183,]  120 #>  [6184,]  121 #>  [6185,]  120 #>  [6186,]  121 #>  [6187,]  120 #>  [6188,]  120 #>  [6189,]  120 #>  [6190,]  120 #>  [6191,]  120 #>  [6192,]  120 #>  [6193,]  121 #>  [6194,]  121 #>  [6195,]  120 #>  [6196,]  120 #>  [6197,]  121 #>  [6198,]  121 #>  [6199,]  120 #>  [6200,]  121 #>  [6201,]  123 #>  [6202,]  122 #>  [6203,]  122 #>  [6204,]  122 #>  [6205,]  123 #>  [6206,]  122 #>  [6207,]  122 #>  [6208,]  122 #>  [6209,]  122 #>  [6210,]  122 #>  [6211,]  123 #>  [6212,]  122 #>  [6213,]  122 #>  [6214,]  123 #>  [6215,]  123 #>  [6216,]  122 #>  [6217,]  123 #>  [6218,]  123 #>  [6219,]  122 #>  [6220,]  122 #>  [6221,]  122 #>  [6222,]  123 #>  [6223,]  122 #>  [6224,]  122 #>  [6225,]  122 #>  [6226,]  123 #>  [6227,]  123 #>  [6228,]  122 #>  [6229,]  122 #>  [6230,]  122 #>  [6231,]  123 #>  [6232,]  123 #>  [6233,]  122 #>  [6234,]  122 #>  [6235,]  122 #>  [6236,]  122 #>  [6237,]  122 #>  [6238,]  122 #>  [6239,]  122 #>  [6240,]  122 #>  [6241,]  122 #>  [6242,]  122 #>  [6243,]  123 #>  [6244,]  122 #>  [6245,]  122 #>  [6246,]  122 #>  [6247,]  123 #>  [6248,]  122 #>  [6249,]  122 #>  [6250,]  122 #>  [6251,]  122 #>  [6252,]  122 #>  [6253,]  122 #>  [6254,]  122 #>  [6255,]  122 #>  [6256,]  122 #>  [6257,]  122 #>  [6258,]  123 #>  [6259,]  123 #>  [6260,]  122 #>  [6261,]  123 #>  [6262,]  122 #>  [6263,]  122 #>  [6264,]  122 #>  [6265,]  122 #>  [6266,]  123 #>  [6267,]  122 #>  [6268,]  122 #>  [6269,]  122 #>  [6270,]  123 #>  [6271,]  123 #>  [6272,]  122 #>  [6273,]  122 #>  [6274,]  122 #>  [6275,]  123 #>  [6276,]  122 #>  [6277,]  123 #>  [6278,]  122 #>  [6279,]  123 #>  [6280,]  122 #>  [6281,]  122 #>  [6282,]  122 #>  [6283,]  122 #>  [6284,]  122 #>  [6285,]  122 #>  [6286,]  122 #>  [6287,]  123 #>  [6288,]  122 #>  [6289,]  122 #>  [6290,]  122 #>  [6291,]  123 #>  [6292,]  122 #>  [6293,]  122 #>  [6294,]  122 #>  [6295,]  123 #>  [6296,]  122 #>  [6297,]  122 #>  [6298,]  122 #>  [6299,]  122 #>  [6300,]  123 #>  [6301,]  125 #>  [6302,]  124 #>  [6303,]  124 #>  [6304,]  125 #>  [6305,]  124 #>  [6306,]  124 #>  [6307,]  125 #>  [6308,]  125 #>  [6309,]  124 #>  [6310,]  125 #>  [6311,]  124 #>  [6312,]  124 #>  [6313,]  125 #>  [6314,]  124 #>  [6315,]  125 #>  [6316,]  125 #>  [6317,]  125 #>  [6318,]  125 #>  [6319,]  124 #>  [6320,]  124 #>  [6321,]  125 #>  [6322,]  124 #>  [6323,]  125 #>  [6324,]  124 #>  [6325,]  125 #>  [6326,]  124 #>  [6327,]  125 #>  [6328,]  125 #>  [6329,]  124 #>  [6330,]  124 #>  [6331,]  124 #>  [6332,]  124 #>  [6333,]  124 #>  [6334,]  124 #>  [6335,]  124 #>  [6336,]  124 #>  [6337,]  124 #>  [6338,]  124 #>  [6339,]  125 #>  [6340,]  124 #>  [6341,]  124 #>  [6342,]  124 #>  [6343,]  125 #>  [6344,]  124 #>  [6345,]  125 #>  [6346,]  125 #>  [6347,]  125 #>  [6348,]  124 #>  [6349,]  124 #>  [6350,]  124 #>  [6351,]  124 #>  [6352,]  124 #>  [6353,]  125 #>  [6354,]  124 #>  [6355,]  124 #>  [6356,]  125 #>  [6357,]  124 #>  [6358,]  124 #>  [6359,]  124 #>  [6360,]  124 #>  [6361,]  125 #>  [6362,]  124 #>  [6363,]  124 #>  [6364,]  125 #>  [6365,]  124 #>  [6366,]  124 #>  [6367,]  124 #>  [6368,]  124 #>  [6369,]  124 #>  [6370,]  125 #>  [6371,]  125 #>  [6372,]  125 #>  [6373,]  125 #>  [6374,]  125 #>  [6375,]  125 #>  [6376,]  125 #>  [6377,]  125 #>  [6378,]  124 #>  [6379,]  124 #>  [6380,]  124 #>  [6381,]  124 #>  [6382,]  125 #>  [6383,]  124 #>  [6384,]  125 #>  [6385,]  124 #>  [6386,]  124 #>  [6387,]  124 #>  [6388,]  125 #>  [6389,]  124 #>  [6390,]  124 #>  [6391,]  124 #>  [6392,]  124 #>  [6393,]  124 #>  [6394,]  125 #>  [6395,]  125 #>  [6396,]  124 #>  [6397,]  124 #>  [6398,]  124 #>  [6399,]  124 #>  [6400,]  125 #>  [6401,]  127 #>  [6402,]  126 #>  [6403,]  126 #>  [6404,]  127 #>  [6405,]  127 #>  [6406,]  126 #>  [6407,]  126 #>  [6408,]  126 #>  [6409,]  126 #>  [6410,]  127 #>  [6411,]  127 #>  [6412,]  127 #>  [6413,]  127 #>  [6414,]  127 #>  [6415,]  127 #>  [6416,]  127 #>  [6417,]  127 #>  [6418,]  127 #>  [6419,]  127 #>  [6420,]  126 #>  [6421,]  126 #>  [6422,]  127 #>  [6423,]  126 #>  [6424,]  127 #>  [6425,]  126 #>  [6426,]  127 #>  [6427,]  127 #>  [6428,]  127 #>  [6429,]  126 #>  [6430,]  127 #>  [6431,]  127 #>  [6432,]  127 #>  [6433,]  127 #>  [6434,]  126 #>  [6435,]  126 #>  [6436,]  126 #>  [6437,]  126 #>  [6438,]  127 #>  [6439,]  127 #>  [6440,]  126 #>  [6441,]  126 #>  [6442,]  126 #>  [6443,]  127 #>  [6444,]  126 #>  [6445,]  126 #>  [6446,]  127 #>  [6447,]  127 #>  [6448,]  127 #>  [6449,]  126 #>  [6450,]  126 #>  [6451,]  127 #>  [6452,]  127 #>  [6453,]  126 #>  [6454,]  126 #>  [6455,]  126 #>  [6456,]  126 #>  [6457,]  126 #>  [6458,]  127 #>  [6459,]  127 #>  [6460,]  126 #>  [6461,]  127 #>  [6462,]  126 #>  [6463,]  127 #>  [6464,]  126 #>  [6465,]  126 #>  [6466,]  127 #>  [6467,]  126 #>  [6468,]  127 #>  [6469,]  127 #>  [6470,]  127 #>  [6471,]  127 #>  [6472,]  126 #>  [6473,]  126 #>  [6474,]  126 #>  [6475,]  127 #>  [6476,]  126 #>  [6477,]  127 #>  [6478,]  127 #>  [6479,]  127 #>  [6480,]  126 #>  [6481,]  126 #>  [6482,]  126 #>  [6483,]  127 #>  [6484,]  126 #>  [6485,]  126 #>  [6486,]  126 #>  [6487,]  127 #>  [6488,]  126 #>  [6489,]  126 #>  [6490,]  127 #>  [6491,]  127 #>  [6492,]  127 #>  [6493,]  127 #>  [6494,]  126 #>  [6495,]  127 #>  [6496,]  127 #>  [6497,]  126 #>  [6498,]  126 #>  [6499,]  126 #>  [6500,]  127 #>  [6501,]  128 #>  [6502,]  128 #>  [6503,]  129 #>  [6504,]  128 #>  [6505,]  128 #>  [6506,]  129 #>  [6507,]  128 #>  [6508,]  128 #>  [6509,]  128 #>  [6510,]  128 #>  [6511,]  128 #>  [6512,]  129 #>  [6513,]  128 #>  [6514,]  128 #>  [6515,]  128 #>  [6516,]  128 #>  [6517,]  128 #>  [6518,]  128 #>  [6519,]  129 #>  [6520,]  128 #>  [6521,]  128 #>  [6522,]  128 #>  [6523,]  128 #>  [6524,]  128 #>  [6525,]  129 #>  [6526,]  128 #>  [6527,]  128 #>  [6528,]  129 #>  [6529,]  128 #>  [6530,]  128 #>  [6531,]  128 #>  [6532,]  128 #>  [6533,]  129 #>  [6534,]  129 #>  [6535,]  128 #>  [6536,]  128 #>  [6537,]  128 #>  [6538,]  128 #>  [6539,]  128 #>  [6540,]  128 #>  [6541,]  128 #>  [6542,]  128 #>  [6543,]  128 #>  [6544,]  128 #>  [6545,]  128 #>  [6546,]  128 #>  [6547,]  128 #>  [6548,]  128 #>  [6549,]  128 #>  [6550,]  128 #>  [6551,]  128 #>  [6552,]  128 #>  [6553,]  128 #>  [6554,]  128 #>  [6555,]  128 #>  [6556,]  128 #>  [6557,]  128 #>  [6558,]  128 #>  [6559,]  128 #>  [6560,]  129 #>  [6561,]  128 #>  [6562,]  128 #>  [6563,]  128 #>  [6564,]  128 #>  [6565,]  129 #>  [6566,]  128 #>  [6567,]  128 #>  [6568,]  128 #>  [6569,]  128 #>  [6570,]  129 #>  [6571,]  128 #>  [6572,]  128 #>  [6573,]  129 #>  [6574,]  128 #>  [6575,]  128 #>  [6576,]  128 #>  [6577,]  128 #>  [6578,]  128 #>  [6579,]  128 #>  [6580,]  128 #>  [6581,]  128 #>  [6582,]  128 #>  [6583,]  128 #>  [6584,]  128 #>  [6585,]  128 #>  [6586,]  128 #>  [6587,]  128 #>  [6588,]  128 #>  [6589,]  128 #>  [6590,]  128 #>  [6591,]  128 #>  [6592,]  128 #>  [6593,]  129 #>  [6594,]  128 #>  [6595,]  128 #>  [6596,]  128 #>  [6597,]  129 #>  [6598,]  129 #>  [6599,]  128 #>  [6600,]  128 #>  [6601,]  130 #>  [6602,]  131 #>  [6603,]  130 #>  [6604,]  130 #>  [6605,]  131 #>  [6606,]  130 #>  [6607,]  131 #>  [6608,]  130 #>  [6609,]  131 #>  [6610,]  131 #>  [6611,]  130 #>  [6612,]  131 #>  [6613,]  131 #>  [6614,]  130 #>  [6615,]  130 #>  [6616,]  130 #>  [6617,]  131 #>  [6618,]  131 #>  [6619,]  130 #>  [6620,]  131 #>  [6621,]  131 #>  [6622,]  131 #>  [6623,]  131 #>  [6624,]  131 #>  [6625,]  131 #>  [6626,]  130 #>  [6627,]  131 #>  [6628,]  130 #>  [6629,]  131 #>  [6630,]  131 #>  [6631,]  131 #>  [6632,]  131 #>  [6633,]  131 #>  [6634,]  130 #>  [6635,]  130 #>  [6636,]  131 #>  [6637,]  130 #>  [6638,]  130 #>  [6639,]  131 #>  [6640,]  131 #>  [6641,]  131 #>  [6642,]  130 #>  [6643,]  130 #>  [6644,]  131 #>  [6645,]  130 #>  [6646,]  130 #>  [6647,]  131 #>  [6648,]  131 #>  [6649,]  130 #>  [6650,]  131 #>  [6651,]  131 #>  [6652,]  130 #>  [6653,]  131 #>  [6654,]  131 #>  [6655,]  130 #>  [6656,]  130 #>  [6657,]  130 #>  [6658,]  131 #>  [6659,]  130 #>  [6660,]  131 #>  [6661,]  131 #>  [6662,]  130 #>  [6663,]  131 #>  [6664,]  130 #>  [6665,]  130 #>  [6666,]  131 #>  [6667,]  130 #>  [6668,]  130 #>  [6669,]  130 #>  [6670,]  131 #>  [6671,]  131 #>  [6672,]  130 #>  [6673,]  130 #>  [6674,]  131 #>  [6675,]  131 #>  [6676,]  131 #>  [6677,]  130 #>  [6678,]  131 #>  [6679,]  130 #>  [6680,]  131 #>  [6681,]  131 #>  [6682,]  130 #>  [6683,]  131 #>  [6684,]  131 #>  [6685,]  130 #>  [6686,]  131 #>  [6687,]  131 #>  [6688,]  131 #>  [6689,]  130 #>  [6690,]  131 #>  [6691,]  130 #>  [6692,]  131 #>  [6693,]  131 #>  [6694,]  130 #>  [6695,]  131 #>  [6696,]  130 #>  [6697,]  130 #>  [6698,]  130 #>  [6699,]  131 #>  [6700,]  130 #>  [6701,]  133 #>  [6702,]  132 #>  [6703,]  133 #>  [6704,]  133 #>  [6705,]  133 #>  [6706,]  132 #>  [6707,]  133 #>  [6708,]  133 #>  [6709,]  133 #>  [6710,]  133 #>  [6711,]  132 #>  [6712,]  132 #>  [6713,]  133 #>  [6714,]  133 #>  [6715,]  132 #>  [6716,]  133 #>  [6717,]  132 #>  [6718,]  133 #>  [6719,]  133 #>  [6720,]  133 #>  [6721,]  133 #>  [6722,]  133 #>  [6723,]  132 #>  [6724,]  133 #>  [6725,]  133 #>  [6726,]  133 #>  [6727,]  133 #>  [6728,]  133 #>  [6729,]  132 #>  [6730,]  132 #>  [6731,]  132 #>  [6732,]  133 #>  [6733,]  133 #>  [6734,]  132 #>  [6735,]  132 #>  [6736,]  133 #>  [6737,]  132 #>  [6738,]  133 #>  [6739,]  133 #>  [6740,]  133 #>  [6741,]  133 #>  [6742,]  132 #>  [6743,]  132 #>  [6744,]  132 #>  [6745,]  133 #>  [6746,]  133 #>  [6747,]  132 #>  [6748,]  132 #>  [6749,]  133 #>  [6750,]  133 #>  [6751,]  133 #>  [6752,]  133 #>  [6753,]  133 #>  [6754,]  133 #>  [6755,]  133 #>  [6756,]  132 #>  [6757,]  133 #>  [6758,]  133 #>  [6759,]  133 #>  [6760,]  132 #>  [6761,]  132 #>  [6762,]  133 #>  [6763,]  132 #>  [6764,]  132 #>  [6765,]  132 #>  [6766,]  132 #>  [6767,]  133 #>  [6768,]  133 #>  [6769,]  133 #>  [6770,]  132 #>  [6771,]  133 #>  [6772,]  133 #>  [6773,]  133 #>  [6774,]  133 #>  [6775,]  132 #>  [6776,]  133 #>  [6777,]  133 #>  [6778,]  132 #>  [6779,]  132 #>  [6780,]  133 #>  [6781,]  132 #>  [6782,]  133 #>  [6783,]  133 #>  [6784,]  133 #>  [6785,]  133 #>  [6786,]  133 #>  [6787,]  133 #>  [6788,]  133 #>  [6789,]  133 #>  [6790,]  133 #>  [6791,]  133 #>  [6792,]  132 #>  [6793,]  133 #>  [6794,]  132 #>  [6795,]  132 #>  [6796,]  133 #>  [6797,]  133 #>  [6798,]  133 #>  [6799,]  133 #>  [6800,]  132 #>  [6801,]  134 #>  [6802,]  134 #>  [6803,]  134 #>  [6804,]  134 #>  [6805,]  134 #>  [6806,]  134 #>  [6807,]  134 #>  [6808,]  134 #>  [6809,]  134 #>  [6810,]  134 #>  [6811,]  134 #>  [6812,]  134 #>  [6813,]  134 #>  [6814,]  134 #>  [6815,]  134 #>  [6816,]  134 #>  [6817,]  134 #>  [6818,]  134 #>  [6819,]  134 #>  [6820,]  134 #>  [6821,]  134 #>  [6822,]  134 #>  [6823,]  134 #>  [6824,]  134 #>  [6825,]  134 #>  [6826,]  134 #>  [6827,]  134 #>  [6828,]  134 #>  [6829,]  134 #>  [6830,]  134 #>  [6831,]  134 #>  [6832,]  134 #>  [6833,]  134 #>  [6834,]  134 #>  [6835,]  134 #>  [6836,]  134 #>  [6837,]  134 #>  [6838,]  134 #>  [6839,]  134 #>  [6840,]  134 #>  [6841,]  134 #>  [6842,]  134 #>  [6843,]  134 #>  [6844,]  134 #>  [6845,]  134 #>  [6846,]  134 #>  [6847,]  134 #>  [6848,]  134 #>  [6849,]  134 #>  [6850,]  134 #>  [6851,]  134 #>  [6852,]  134 #>  [6853,]  134 #>  [6854,]  134 #>  [6855,]  134 #>  [6856,]  134 #>  [6857,]  134 #>  [6858,]  134 #>  [6859,]  134 #>  [6860,]  134 #>  [6861,]  134 #>  [6862,]  134 #>  [6863,]  134 #>  [6864,]  134 #>  [6865,]  134 #>  [6866,]  134 #>  [6867,]  134 #>  [6868,]  134 #>  [6869,]  134 #>  [6870,]  134 #>  [6871,]  134 #>  [6872,]  134 #>  [6873,]  134 #>  [6874,]  134 #>  [6875,]  134 #>  [6876,]  134 #>  [6877,]  134 #>  [6878,]  134 #>  [6879,]  134 #>  [6880,]  134 #>  [6881,]  134 #>  [6882,]  134 #>  [6883,]  134 #>  [6884,]  134 #>  [6885,]  134 #>  [6886,]  134 #>  [6887,]  134 #>  [6888,]  134 #>  [6889,]  134 #>  [6890,]  134 #>  [6891,]  134 #>  [6892,]  134 #>  [6893,]  134 #>  [6894,]  134 #>  [6895,]  134 #>  [6896,]  134 #>  [6897,]  134 #>  [6898,]  134 #>  [6899,]  134 #>  [6900,]  134 #>  [6901,]  136 #>  [6902,]  136 #>  [6903,]  135 #>  [6904,]  135 #>  [6905,]  135 #>  [6906,]  136 #>  [6907,]  135 #>  [6908,]  135 #>  [6909,]  135 #>  [6910,]  135 #>  [6911,]  135 #>  [6912,]  135 #>  [6913,]  136 #>  [6914,]  136 #>  [6915,]  136 #>  [6916,]  136 #>  [6917,]  136 #>  [6918,]  135 #>  [6919,]  135 #>  [6920,]  135 #>  [6921,]  136 #>  [6922,]  136 #>  [6923,]  135 #>  [6924,]  135 #>  [6925,]  135 #>  [6926,]  136 #>  [6927,]  136 #>  [6928,]  135 #>  [6929,]  136 #>  [6930,]  135 #>  [6931,]  135 #>  [6932,]  135 #>  [6933,]  136 #>  [6934,]  135 #>  [6935,]  136 #>  [6936,]  135 #>  [6937,]  136 #>  [6938,]  135 #>  [6939,]  135 #>  [6940,]  135 #>  [6941,]  136 #>  [6942,]  135 #>  [6943,]  135 #>  [6944,]  136 #>  [6945,]  135 #>  [6946,]  135 #>  [6947,]  135 #>  [6948,]  135 #>  [6949,]  135 #>  [6950,]  136 #>  [6951,]  135 #>  [6952,]  136 #>  [6953,]  135 #>  [6954,]  135 #>  [6955,]  135 #>  [6956,]  135 #>  [6957,]  135 #>  [6958,]  136 #>  [6959,]  136 #>  [6960,]  135 #>  [6961,]  136 #>  [6962,]  135 #>  [6963,]  135 #>  [6964,]  135 #>  [6965,]  135 #>  [6966,]  135 #>  [6967,]  135 #>  [6968,]  136 #>  [6969,]  135 #>  [6970,]  136 #>  [6971,]  136 #>  [6972,]  135 #>  [6973,]  136 #>  [6974,]  135 #>  [6975,]  135 #>  [6976,]  136 #>  [6977,]  136 #>  [6978,]  135 #>  [6979,]  136 #>  [6980,]  135 #>  [6981,]  136 #>  [6982,]  135 #>  [6983,]  136 #>  [6984,]  135 #>  [6985,]  135 #>  [6986,]  136 #>  [6987,]  135 #>  [6988,]  135 #>  [6989,]  135 #>  [6990,]  136 #>  [6991,]  135 #>  [6992,]  135 #>  [6993,]  136 #>  [6994,]  136 #>  [6995,]  135 #>  [6996,]  136 #>  [6997,]  135 #>  [6998,]  135 #>  [6999,]  136 #>  [7000,]  136 #>  [7001,]  138 #>  [7002,]  138 #>  [7003,]  137 #>  [7004,]  137 #>  [7005,]  138 #>  [7006,]  138 #>  [7007,]  137 #>  [7008,]  137 #>  [7009,]  138 #>  [7010,]  138 #>  [7011,]  138 #>  [7012,]  137 #>  [7013,]  138 #>  [7014,]  138 #>  [7015,]  138 #>  [7016,]  138 #>  [7017,]  138 #>  [7018,]  138 #>  [7019,]  138 #>  [7020,]  138 #>  [7021,]  138 #>  [7022,]  138 #>  [7023,]  138 #>  [7024,]  138 #>  [7025,]  137 #>  [7026,]  138 #>  [7027,]  138 #>  [7028,]  138 #>  [7029,]  138 #>  [7030,]  138 #>  [7031,]  137 #>  [7032,]  138 #>  [7033,]  138 #>  [7034,]  138 #>  [7035,]  138 #>  [7036,]  138 #>  [7037,]  138 #>  [7038,]  138 #>  [7039,]  138 #>  [7040,]  138 #>  [7041,]  138 #>  [7042,]  138 #>  [7043,]  138 #>  [7044,]  138 #>  [7045,]  138 #>  [7046,]  138 #>  [7047,]  137 #>  [7048,]  138 #>  [7049,]  138 #>  [7050,]  138 #>  [7051,]  138 #>  [7052,]  137 #>  [7053,]  138 #>  [7054,]  138 #>  [7055,]  138 #>  [7056,]  138 #>  [7057,]  137 #>  [7058,]  138 #>  [7059,]  137 #>  [7060,]  137 #>  [7061,]  138 #>  [7062,]  138 #>  [7063,]  138 #>  [7064,]  138 #>  [7065,]  138 #>  [7066,]  138 #>  [7067,]  138 #>  [7068,]  137 #>  [7069,]  138 #>  [7070,]  138 #>  [7071,]  138 #>  [7072,]  138 #>  [7073,]  138 #>  [7074,]  138 #>  [7075,]  138 #>  [7076,]  138 #>  [7077,]  138 #>  [7078,]  138 #>  [7079,]  138 #>  [7080,]  137 #>  [7081,]  138 #>  [7082,]  138 #>  [7083,]  138 #>  [7084,]  138 #>  [7085,]  138 #>  [7086,]  137 #>  [7087,]  138 #>  [7088,]  138 #>  [7089,]  138 #>  [7090,]  138 #>  [7091,]  138 #>  [7092,]  138 #>  [7093,]  138 #>  [7094,]  138 #>  [7095,]  138 #>  [7096,]  137 #>  [7097,]  137 #>  [7098,]  137 #>  [7099,]  138 #>  [7100,]  138 #>  [7101,]  140 #>  [7102,]  140 #>  [7103,]  139 #>  [7104,]  140 #>  [7105,]  140 #>  [7106,]  140 #>  [7107,]  139 #>  [7108,]  140 #>  [7109,]  140 #>  [7110,]  140 #>  [7111,]  140 #>  [7112,]  140 #>  [7113,]  140 #>  [7114,]  140 #>  [7115,]  140 #>  [7116,]  140 #>  [7117,]  140 #>  [7118,]  140 #>  [7119,]  140 #>  [7120,]  139 #>  [7121,]  140 #>  [7122,]  140 #>  [7123,]  140 #>  [7124,]  140 #>  [7125,]  139 #>  [7126,]  140 #>  [7127,]  140 #>  [7128,]  140 #>  [7129,]  140 #>  [7130,]  140 #>  [7131,]  140 #>  [7132,]  140 #>  [7133,]  140 #>  [7134,]  140 #>  [7135,]  140 #>  [7136,]  140 #>  [7137,]  140 #>  [7138,]  140 #>  [7139,]  139 #>  [7140,]  140 #>  [7141,]  140 #>  [7142,]  140 #>  [7143,]  140 #>  [7144,]  139 #>  [7145,]  140 #>  [7146,]  140 #>  [7147,]  140 #>  [7148,]  140 #>  [7149,]  139 #>  [7150,]  139 #>  [7151,]  140 #>  [7152,]  140 #>  [7153,]  139 #>  [7154,]  140 #>  [7155,]  139 #>  [7156,]  139 #>  [7157,]  140 #>  [7158,]  140 #>  [7159,]  139 #>  [7160,]  140 #>  [7161,]  140 #>  [7162,]  140 #>  [7163,]  140 #>  [7164,]  140 #>  [7165,]  139 #>  [7166,]  139 #>  [7167,]  140 #>  [7168,]  140 #>  [7169,]  140 #>  [7170,]  140 #>  [7171,]  140 #>  [7172,]  140 #>  [7173,]  140 #>  [7174,]  140 #>  [7175,]  140 #>  [7176,]  140 #>  [7177,]  140 #>  [7178,]  140 #>  [7179,]  140 #>  [7180,]  140 #>  [7181,]  140 #>  [7182,]  140 #>  [7183,]  140 #>  [7184,]  140 #>  [7185,]  140 #>  [7186,]  140 #>  [7187,]  140 #>  [7188,]  140 #>  [7189,]  140 #>  [7190,]  139 #>  [7191,]  140 #>  [7192,]  140 #>  [7193,]  140 #>  [7194,]  140 #>  [7195,]  140 #>  [7196,]  140 #>  [7197,]  140 #>  [7198,]  139 #>  [7199,]  140 #>  [7200,]  139 #>  [7201,]  142 #>  [7202,]  142 #>  [7203,]  141 #>  [7204,]  142 #>  [7205,]  142 #>  [7206,]  142 #>  [7207,]  142 #>  [7208,]  142 #>  [7209,]  142 #>  [7210,]  141 #>  [7211,]  141 #>  [7212,]  142 #>  [7213,]  142 #>  [7214,]  141 #>  [7215,]  142 #>  [7216,]  142 #>  [7217,]  142 #>  [7218,]  142 #>  [7219,]  142 #>  [7220,]  142 #>  [7221,]  141 #>  [7222,]  142 #>  [7223,]  142 #>  [7224,]  142 #>  [7225,]  142 #>  [7226,]  142 #>  [7227,]  142 #>  [7228,]  142 #>  [7229,]  142 #>  [7230,]  142 #>  [7231,]  141 #>  [7232,]  141 #>  [7233,]  142 #>  [7234,]  142 #>  [7235,]  142 #>  [7236,]  142 #>  [7237,]  142 #>  [7238,]  142 #>  [7239,]  142 #>  [7240,]  141 #>  [7241,]  142 #>  [7242,]  142 #>  [7243,]  142 #>  [7244,]  142 #>  [7245,]  142 #>  [7246,]  142 #>  [7247,]  142 #>  [7248,]  141 #>  [7249,]  142 #>  [7250,]  142 #>  [7251,]  142 #>  [7252,]  142 #>  [7253,]  142 #>  [7254,]  142 #>  [7255,]  142 #>  [7256,]  142 #>  [7257,]  142 #>  [7258,]  142 #>  [7259,]  142 #>  [7260,]  142 #>  [7261,]  142 #>  [7262,]  142 #>  [7263,]  142 #>  [7264,]  142 #>  [7265,]  142 #>  [7266,]  142 #>  [7267,]  142 #>  [7268,]  142 #>  [7269,]  142 #>  [7270,]  141 #>  [7271,]  142 #>  [7272,]  142 #>  [7273,]  142 #>  [7274,]  141 #>  [7275,]  142 #>  [7276,]  142 #>  [7277,]  142 #>  [7278,]  142 #>  [7279,]  142 #>  [7280,]  142 #>  [7281,]  142 #>  [7282,]  141 #>  [7283,]  142 #>  [7284,]  142 #>  [7285,]  142 #>  [7286,]  142 #>  [7287,]  142 #>  [7288,]  142 #>  [7289,]  142 #>  [7290,]  142 #>  [7291,]  142 #>  [7292,]  142 #>  [7293,]  142 #>  [7294,]  142 #>  [7295,]  142 #>  [7296,]  142 #>  [7297,]  142 #>  [7298,]  141 #>  [7299,]  142 #>  [7300,]  142 #>  [7301,]  144 #>  [7302,]  144 #>  [7303,]  143 #>  [7304,]  144 #>  [7305,]  144 #>  [7306,]  144 #>  [7307,]  144 #>  [7308,]  144 #>  [7309,]  144 #>  [7310,]  143 #>  [7311,]  143 #>  [7312,]  144 #>  [7313,]  144 #>  [7314,]  143 #>  [7315,]  144 #>  [7316,]  144 #>  [7317,]  144 #>  [7318,]  144 #>  [7319,]  144 #>  [7320,]  144 #>  [7321,]  143 #>  [7322,]  144 #>  [7323,]  144 #>  [7324,]  144 #>  [7325,]  144 #>  [7326,]  144 #>  [7327,]  144 #>  [7328,]  143 #>  [7329,]  144 #>  [7330,]  144 #>  [7331,]  143 #>  [7332,]  143 #>  [7333,]  144 #>  [7334,]  143 #>  [7335,]  143 #>  [7336,]  144 #>  [7337,]  144 #>  [7338,]  144 #>  [7339,]  144 #>  [7340,]  143 #>  [7341,]  144 #>  [7342,]  144 #>  [7343,]  144 #>  [7344,]  144 #>  [7345,]  144 #>  [7346,]  144 #>  [7347,]  144 #>  [7348,]  143 #>  [7349,]  144 #>  [7350,]  144 #>  [7351,]  144 #>  [7352,]  144 #>  [7353,]  144 #>  [7354,]  144 #>  [7355,]  144 #>  [7356,]  144 #>  [7357,]  144 #>  [7358,]  144 #>  [7359,]  144 #>  [7360,]  144 #>  [7361,]  144 #>  [7362,]  144 #>  [7363,]  144 #>  [7364,]  144 #>  [7365,]  143 #>  [7366,]  144 #>  [7367,]  144 #>  [7368,]  144 #>  [7369,]  144 #>  [7370,]  143 #>  [7371,]  144 #>  [7372,]  144 #>  [7373,]  144 #>  [7374,]  143 #>  [7375,]  144 #>  [7376,]  144 #>  [7377,]  144 #>  [7378,]  144 #>  [7379,]  144 #>  [7380,]  144 #>  [7381,]  144 #>  [7382,]  143 #>  [7383,]  144 #>  [7384,]  144 #>  [7385,]  144 #>  [7386,]  144 #>  [7387,]  144 #>  [7388,]  144 #>  [7389,]  144 #>  [7390,]  144 #>  [7391,]  144 #>  [7392,]  144 #>  [7393,]  144 #>  [7394,]  144 #>  [7395,]  144 #>  [7396,]  144 #>  [7397,]  144 #>  [7398,]  143 #>  [7399,]  144 #>  [7400,]  144 #>  [7401,]  146 #>  [7402,]  146 #>  [7403,]  145 #>  [7404,]  146 #>  [7405,]  146 #>  [7406,]  146 #>  [7407,]  146 #>  [7408,]  146 #>  [7409,]  146 #>  [7410,]  146 #>  [7411,]  145 #>  [7412,]  145 #>  [7413,]  146 #>  [7414,]  145 #>  [7415,]  146 #>  [7416,]  146 #>  [7417,]  146 #>  [7418,]  146 #>  [7419,]  145 #>  [7420,]  145 #>  [7421,]  146 #>  [7422,]  145 #>  [7423,]  146 #>  [7424,]  146 #>  [7425,]  146 #>  [7426,]  145 #>  [7427,]  146 #>  [7428,]  146 #>  [7429,]  145 #>  [7430,]  146 #>  [7431,]  146 #>  [7432,]  145 #>  [7433,]  146 #>  [7434,]  146 #>  [7435,]  146 #>  [7436,]  145 #>  [7437,]  146 #>  [7438,]  146 #>  [7439,]  146 #>  [7440,]  145 #>  [7441,]  145 #>  [7442,]  145 #>  [7443,]  146 #>  [7444,]  146 #>  [7445,]  146 #>  [7446,]  146 #>  [7447,]  146 #>  [7448,]  145 #>  [7449,]  146 #>  [7450,]  146 #>  [7451,]  145 #>  [7452,]  146 #>  [7453,]  146 #>  [7454,]  145 #>  [7455,]  146 #>  [7456,]  146 #>  [7457,]  146 #>  [7458,]  146 #>  [7459,]  146 #>  [7460,]  145 #>  [7461,]  146 #>  [7462,]  145 #>  [7463,]  145 #>  [7464,]  146 #>  [7465,]  146 #>  [7466,]  145 #>  [7467,]  146 #>  [7468,]  145 #>  [7469,]  145 #>  [7470,]  146 #>  [7471,]  146 #>  [7472,]  146 #>  [7473,]  146 #>  [7474,]  146 #>  [7475,]  146 #>  [7476,]  146 #>  [7477,]  146 #>  [7478,]  146 #>  [7479,]  146 #>  [7480,]  145 #>  [7481,]  145 #>  [7482,]  146 #>  [7483,]  145 #>  [7484,]  146 #>  [7485,]  146 #>  [7486,]  146 #>  [7487,]  146 #>  [7488,]  146 #>  [7489,]  145 #>  [7490,]  146 #>  [7491,]  145 #>  [7492,]  146 #>  [7493,]  146 #>  [7494,]  146 #>  [7495,]  146 #>  [7496,]  146 #>  [7497,]  146 #>  [7498,]  146 #>  [7499,]  146 #>  [7500,]  146 #>  [7501,]  148 #>  [7502,]  148 #>  [7503,]  147 #>  [7504,]  148 #>  [7505,]  148 #>  [7506,]  147 #>  [7507,]  147 #>  [7508,]  148 #>  [7509,]  148 #>  [7510,]  148 #>  [7511,]  148 #>  [7512,]  148 #>  [7513,]  148 #>  [7514,]  148 #>  [7515,]  148 #>  [7516,]  148 #>  [7517,]  148 #>  [7518,]  148 #>  [7519,]  148 #>  [7520,]  147 #>  [7521,]  147 #>  [7522,]  148 #>  [7523,]  147 #>  [7524,]  148 #>  [7525,]  147 #>  [7526,]  148 #>  [7527,]  148 #>  [7528,]  148 #>  [7529,]  148 #>  [7530,]  148 #>  [7531,]  148 #>  [7532,]  148 #>  [7533,]  148 #>  [7534,]  147 #>  [7535,]  147 #>  [7536,]  148 #>  [7537,]  147 #>  [7538,]  148 #>  [7539,]  148 #>  [7540,]  148 #>  [7541,]  148 #>  [7542,]  147 #>  [7543,]  148 #>  [7544,]  147 #>  [7545,]  148 #>  [7546,]  148 #>  [7547,]  148 #>  [7548,]  148 #>  [7549,]  148 #>  [7550,]  148 #>  [7551,]  148 #>  [7552,]  148 #>  [7553,]  147 #>  [7554,]  148 #>  [7555,]  148 #>  [7556,]  147 #>  [7557,]  147 #>  [7558,]  148 #>  [7559,]  148 #>  [7560,]  148 #>  [7561,]  148 #>  [7562,]  148 #>  [7563,]  148 #>  [7564,]  148 #>  [7565,]  147 #>  [7566,]  148 #>  [7567,]  148 #>  [7568,]  148 #>  [7569,]  148 #>  [7570,]  148 #>  [7571,]  148 #>  [7572,]  148 #>  [7573,]  147 #>  [7574,]  147 #>  [7575,]  148 #>  [7576,]  148 #>  [7577,]  148 #>  [7578,]  148 #>  [7579,]  148 #>  [7580,]  147 #>  [7581,]  148 #>  [7582,]  147 #>  [7583,]  148 #>  [7584,]  147 #>  [7585,]  147 #>  [7586,]  147 #>  [7587,]  148 #>  [7588,]  148 #>  [7589,]  147 #>  [7590,]  148 #>  [7591,]  148 #>  [7592,]  148 #>  [7593,]  148 #>  [7594,]  147 #>  [7595,]  148 #>  [7596,]  148 #>  [7597,]  148 #>  [7598,]  148 #>  [7599,]  147 #>  [7600,]  148 #>  [7601,]  149 #>  [7602,]  149 #>  [7603,]  149 #>  [7604,]  149 #>  [7605,]  149 #>  [7606,]  149 #>  [7607,]  149 #>  [7608,]  149 #>  [7609,]  149 #>  [7610,]  149 #>  [7611,]  149 #>  [7612,]  149 #>  [7613,]  149 #>  [7614,]  149 #>  [7615,]  149 #>  [7616,]  149 #>  [7617,]  149 #>  [7618,]  149 #>  [7619,]  149 #>  [7620,]  150 #>  [7621,]  149 #>  [7622,]  150 #>  [7623,]  149 #>  [7624,]  149 #>  [7625,]  149 #>  [7626,]  149 #>  [7627,]  149 #>  [7628,]  149 #>  [7629,]  150 #>  [7630,]  149 #>  [7631,]  149 #>  [7632,]  149 #>  [7633,]  149 #>  [7634,]  149 #>  [7635,]  149 #>  [7636,]  149 #>  [7637,]  149 #>  [7638,]  149 #>  [7639,]  149 #>  [7640,]  149 #>  [7641,]  149 #>  [7642,]  149 #>  [7643,]  149 #>  [7644,]  149 #>  [7645,]  149 #>  [7646,]  149 #>  [7647,]  149 #>  [7648,]  149 #>  [7649,]  149 #>  [7650,]  149 #>  [7651,]  149 #>  [7652,]  149 #>  [7653,]  149 #>  [7654,]  149 #>  [7655,]  149 #>  [7656,]  149 #>  [7657,]  149 #>  [7658,]  150 #>  [7659,]  149 #>  [7660,]  149 #>  [7661,]  149 #>  [7662,]  149 #>  [7663,]  149 #>  [7664,]  150 #>  [7665,]  149 #>  [7666,]  149 #>  [7667,]  149 #>  [7668,]  149 #>  [7669,]  149 #>  [7670,]  149 #>  [7671,]  149 #>  [7672,]  149 #>  [7673,]  149 #>  [7674,]  149 #>  [7675,]  149 #>  [7676,]  149 #>  [7677,]  150 #>  [7678,]  149 #>  [7679,]  149 #>  [7680,]  149 #>  [7681,]  150 #>  [7682,]  149 #>  [7683,]  149 #>  [7684,]  149 #>  [7685,]  149 #>  [7686,]  149 #>  [7687,]  150 #>  [7688,]  149 #>  [7689,]  149 #>  [7690,]  149 #>  [7691,]  149 #>  [7692,]  149 #>  [7693,]  149 #>  [7694,]  149 #>  [7695,]  149 #>  [7696,]  149 #>  [7697,]  149 #>  [7698,]  149 #>  [7699,]  149 #>  [7700,]  149 #>  [7701,]  151 #>  [7702,]  151 #>  [7703,]  151 #>  [7704,]  151 #>  [7705,]  151 #>  [7706,]  151 #>  [7707,]  151 #>  [7708,]  151 #>  [7709,]  151 #>  [7710,]  151 #>  [7711,]  151 #>  [7712,]  151 #>  [7713,]  151 #>  [7714,]  151 #>  [7715,]  151 #>  [7716,]  151 #>  [7717,]  151 #>  [7718,]  151 #>  [7719,]  151 #>  [7720,]  151 #>  [7721,]  151 #>  [7722,]  151 #>  [7723,]  151 #>  [7724,]  151 #>  [7725,]  151 #>  [7726,]  151 #>  [7727,]  151 #>  [7728,]  151 #>  [7729,]  151 #>  [7730,]  151 #>  [7731,]  151 #>  [7732,]  151 #>  [7733,]  151 #>  [7734,]  151 #>  [7735,]  151 #>  [7736,]  151 #>  [7737,]  151 #>  [7738,]  151 #>  [7739,]  151 #>  [7740,]  151 #>  [7741,]  151 #>  [7742,]  151 #>  [7743,]  151 #>  [7744,]  151 #>  [7745,]  151 #>  [7746,]  151 #>  [7747,]  151 #>  [7748,]  151 #>  [7749,]  151 #>  [7750,]  151 #>  [7751,]  151 #>  [7752,]  151 #>  [7753,]  151 #>  [7754,]  151 #>  [7755,]  151 #>  [7756,]  151 #>  [7757,]  151 #>  [7758,]  151 #>  [7759,]  151 #>  [7760,]  151 #>  [7761,]  151 #>  [7762,]  151 #>  [7763,]  151 #>  [7764,]  151 #>  [7765,]  151 #>  [7766,]  151 #>  [7767,]  151 #>  [7768,]  151 #>  [7769,]  151 #>  [7770,]  151 #>  [7771,]  151 #>  [7772,]  151 #>  [7773,]  151 #>  [7774,]  151 #>  [7775,]  151 #>  [7776,]  151 #>  [7777,]  151 #>  [7778,]  151 #>  [7779,]  151 #>  [7780,]  151 #>  [7781,]  151 #>  [7782,]  151 #>  [7783,]  151 #>  [7784,]  151 #>  [7785,]  151 #>  [7786,]  151 #>  [7787,]  151 #>  [7788,]  151 #>  [7789,]  151 #>  [7790,]  151 #>  [7791,]  151 #>  [7792,]  151 #>  [7793,]  151 #>  [7794,]  151 #>  [7795,]  151 #>  [7796,]  151 #>  [7797,]  151 #>  [7798,]  151 #>  [7799,]  151 #>  [7800,]  151 #>  [7801,]  152 #>  [7802,]  153 #>  [7803,]  152 #>  [7804,]  153 #>  [7805,]  153 #>  [7806,]  152 #>  [7807,]  153 #>  [7808,]  153 #>  [7809,]  153 #>  [7810,]  153 #>  [7811,]  152 #>  [7812,]  153 #>  [7813,]  153 #>  [7814,]  152 #>  [7815,]  153 #>  [7816,]  152 #>  [7817,]  153 #>  [7818,]  153 #>  [7819,]  152 #>  [7820,]  153 #>  [7821,]  153 #>  [7822,]  153 #>  [7823,]  153 #>  [7824,]  153 #>  [7825,]  153 #>  [7826,]  153 #>  [7827,]  153 #>  [7828,]  152 #>  [7829,]  153 #>  [7830,]  153 #>  [7831,]  153 #>  [7832,]  153 #>  [7833,]  153 #>  [7834,]  152 #>  [7835,]  152 #>  [7836,]  153 #>  [7837,]  152 #>  [7838,]  152 #>  [7839,]  153 #>  [7840,]  153 #>  [7841,]  153 #>  [7842,]  152 #>  [7843,]  153 #>  [7844,]  153 #>  [7845,]  152 #>  [7846,]  153 #>  [7847,]  153 #>  [7848,]  153 #>  [7849,]  152 #>  [7850,]  153 #>  [7851,]  153 #>  [7852,]  152 #>  [7853,]  153 #>  [7854,]  153 #>  [7855,]  153 #>  [7856,]  153 #>  [7857,]  153 #>  [7858,]  153 #>  [7859,]  153 #>  [7860,]  153 #>  [7861,]  153 #>  [7862,]  153 #>  [7863,]  153 #>  [7864,]  152 #>  [7865,]  153 #>  [7866,]  153 #>  [7867,]  153 #>  [7868,]  152 #>  [7869,]  153 #>  [7870,]  153 #>  [7871,]  153 #>  [7872,]  152 #>  [7873,]  152 #>  [7874,]  153 #>  [7875,]  153 #>  [7876,]  153 #>  [7877,]  152 #>  [7878,]  153 #>  [7879,]  153 #>  [7880,]  153 #>  [7881,]  153 #>  [7882,]  153 #>  [7883,]  153 #>  [7884,]  153 #>  [7885,]  153 #>  [7886,]  153 #>  [7887,]  153 #>  [7888,]  153 #>  [7889,]  152 #>  [7890,]  153 #>  [7891,]  153 #>  [7892,]  153 #>  [7893,]  153 #>  [7894,]  152 #>  [7895,]  153 #>  [7896,]  152 #>  [7897,]  152 #>  [7898,]  153 #>  [7899,]  153 #>  [7900,]  152 #>  [7901,]  155 #>  [7902,]  154 #>  [7903,]  154 #>  [7904,]  154 #>  [7905,]  155 #>  [7906,]  154 #>  [7907,]  154 #>  [7908,]  154 #>  [7909,]  154 #>  [7910,]  155 #>  [7911,]  155 #>  [7912,]  155 #>  [7913,]  154 #>  [7914,]  155 #>  [7915,]  155 #>  [7916,]  154 #>  [7917,]  155 #>  [7918,]  155 #>  [7919,]  154 #>  [7920,]  154 #>  [7921,]  154 #>  [7922,]  155 #>  [7923,]  154 #>  [7924,]  154 #>  [7925,]  154 #>  [7926,]  155 #>  [7927,]  155 #>  [7928,]  154 #>  [7929,]  154 #>  [7930,]  154 #>  [7931,]  155 #>  [7932,]  155 #>  [7933,]  154 #>  [7934,]  154 #>  [7935,]  154 #>  [7936,]  154 #>  [7937,]  154 #>  [7938,]  155 #>  [7939,]  154 #>  [7940,]  154 #>  [7941,]  154 #>  [7942,]  154 #>  [7943,]  155 #>  [7944,]  154 #>  [7945,]  154 #>  [7946,]  154 #>  [7947,]  155 #>  [7948,]  154 #>  [7949,]  154 #>  [7950,]  154 #>  [7951,]  154 #>  [7952,]  155 #>  [7953,]  154 #>  [7954,]  154 #>  [7955,]  154 #>  [7956,]  154 #>  [7957,]  154 #>  [7958,]  155 #>  [7959,]  155 #>  [7960,]  154 #>  [7961,]  155 #>  [7962,]  154 #>  [7963,]  154 #>  [7964,]  154 #>  [7965,]  154 #>  [7966,]  155 #>  [7967,]  154 #>  [7968,]  154 #>  [7969,]  154 #>  [7970,]  155 #>  [7971,]  155 #>  [7972,]  154 #>  [7973,]  154 #>  [7974,]  154 #>  [7975,]  155 #>  [7976,]  154 #>  [7977,]  155 #>  [7978,]  154 #>  [7979,]  155 #>  [7980,]  154 #>  [7981,]  154 #>  [7982,]  154 #>  [7983,]  154 #>  [7984,]  154 #>  [7985,]  154 #>  [7986,]  154 #>  [7987,]  155 #>  [7988,]  154 #>  [7989,]  154 #>  [7990,]  155 #>  [7991,]  155 #>  [7992,]  155 #>  [7993,]  154 #>  [7994,]  154 #>  [7995,]  155 #>  [7996,]  154 #>  [7997,]  154 #>  [7998,]  154 #>  [7999,]  154 #>  [8000,]  155 #>  [8001,]  157 #>  [8002,]  157 #>  [8003,]  156 #>  [8004,]  157 #>  [8005,]  157 #>  [8006,]  156 #>  [8007,]  156 #>  [8008,]  157 #>  [8009,]  157 #>  [8010,]  157 #>  [8011,]  157 #>  [8012,]  157 #>  [8013,]  157 #>  [8014,]  157 #>  [8015,]  157 #>  [8016,]  157 #>  [8017,]  157 #>  [8018,]  157 #>  [8019,]  157 #>  [8020,]  156 #>  [8021,]  156 #>  [8022,]  157 #>  [8023,]  156 #>  [8024,]  157 #>  [8025,]  156 #>  [8026,]  157 #>  [8027,]  157 #>  [8028,]  157 #>  [8029,]  157 #>  [8030,]  157 #>  [8031,]  157 #>  [8032,]  157 #>  [8033,]  157 #>  [8034,]  156 #>  [8035,]  156 #>  [8036,]  157 #>  [8037,]  156 #>  [8038,]  157 #>  [8039,]  157 #>  [8040,]  157 #>  [8041,]  157 #>  [8042,]  156 #>  [8043,]  157 #>  [8044,]  156 #>  [8045,]  157 #>  [8046,]  157 #>  [8047,]  157 #>  [8048,]  157 #>  [8049,]  157 #>  [8050,]  157 #>  [8051,]  157 #>  [8052,]  157 #>  [8053,]  156 #>  [8054,]  156 #>  [8055,]  156 #>  [8056,]  156 #>  [8057,]  156 #>  [8058,]  157 #>  [8059,]  157 #>  [8060,]  157 #>  [8061,]  157 #>  [8062,]  157 #>  [8063,]  157 #>  [8064,]  156 #>  [8065,]  156 #>  [8066,]  157 #>  [8067,]  157 #>  [8068,]  157 #>  [8069,]  157 #>  [8070,]  157 #>  [8071,]  157 #>  [8072,]  157 #>  [8073,]  156 #>  [8074,]  156 #>  [8075,]  157 #>  [8076,]  157 #>  [8077,]  157 #>  [8078,]  157 #>  [8079,]  157 #>  [8080,]  156 #>  [8081,]  157 #>  [8082,]  156 #>  [8083,]  157 #>  [8084,]  156 #>  [8085,]  156 #>  [8086,]  156 #>  [8087,]  157 #>  [8088,]  156 #>  [8089,]  156 #>  [8090,]  157 #>  [8091,]  157 #>  [8092,]  157 #>  [8093,]  157 #>  [8094,]  156 #>  [8095,]  157 #>  [8096,]  157 #>  [8097,]  157 #>  [8098,]  156 #>  [8099,]  156 #>  [8100,]  157 #>  [8101,]  158 #>  [8102,]  159 #>  [8103,]  159 #>  [8104,]  158 #>  [8105,]  158 #>  [8106,]  159 #>  [8107,]  159 #>  [8108,]  158 #>  [8109,]  158 #>  [8110,]  158 #>  [8111,]  158 #>  [8112,]  159 #>  [8113,]  158 #>  [8114,]  158 #>  [8115,]  158 #>  [8116,]  158 #>  [8117,]  158 #>  [8118,]  159 #>  [8119,]  159 #>  [8120,]  159 #>  [8121,]  158 #>  [8122,]  158 #>  [8123,]  159 #>  [8124,]  158 #>  [8125,]  159 #>  [8126,]  158 #>  [8127,]  158 #>  [8128,]  159 #>  [8129,]  158 #>  [8130,]  158 #>  [8131,]  159 #>  [8132,]  159 #>  [8133,]  159 #>  [8134,]  159 #>  [8135,]  158 #>  [8136,]  158 #>  [8137,]  158 #>  [8138,]  158 #>  [8139,]  158 #>  [8140,]  159 #>  [8141,]  158 #>  [8142,]  159 #>  [8143,]  158 #>  [8144,]  158 #>  [8145,]  158 #>  [8146,]  158 #>  [8147,]  158 #>  [8148,]  159 #>  [8149,]  158 #>  [8150,]  158 #>  [8151,]  158 #>  [8152,]  158 #>  [8153,]  158 #>  [8154,]  158 #>  [8155,]  158 #>  [8156,]  159 #>  [8157,]  158 #>  [8158,]  158 #>  [8159,]  158 #>  [8160,]  159 #>  [8161,]  158 #>  [8162,]  158 #>  [8163,]  158 #>  [8164,]  159 #>  [8165,]  159 #>  [8166,]  158 #>  [8167,]  158 #>  [8168,]  158 #>  [8169,]  158 #>  [8170,]  159 #>  [8171,]  159 #>  [8172,]  158 #>  [8173,]  159 #>  [8174,]  158 #>  [8175,]  158 #>  [8176,]  158 #>  [8177,]  158 #>  [8178,]  159 #>  [8179,]  158 #>  [8180,]  158 #>  [8181,]  158 #>  [8182,]  158 #>  [8183,]  158 #>  [8184,]  159 #>  [8185,]  158 #>  [8186,]  158 #>  [8187,]  158 #>  [8188,]  158 #>  [8189,]  158 #>  [8190,]  158 #>  [8191,]  158 #>  [8192,]  158 #>  [8193,]  159 #>  [8194,]  158 #>  [8195,]  158 #>  [8196,]  158 #>  [8197,]  159 #>  [8198,]  159 #>  [8199,]  158 #>  [8200,]  159 #>  [8201,]  161 #>  [8202,]  161 #>  [8203,]  160 #>  [8204,]  161 #>  [8205,]  161 #>  [8206,]  161 #>  [8207,]  160 #>  [8208,]  161 #>  [8209,]  161 #>  [8210,]  161 #>  [8211,]  161 #>  [8212,]  161 #>  [8213,]  161 #>  [8214,]  161 #>  [8215,]  161 #>  [8216,]  161 #>  [8217,]  161 #>  [8218,]  161 #>  [8219,]  161 #>  [8220,]  161 #>  [8221,]  161 #>  [8222,]  161 #>  [8223,]  161 #>  [8224,]  161 #>  [8225,]  161 #>  [8226,]  161 #>  [8227,]  161 #>  [8228,]  161 #>  [8229,]  161 #>  [8230,]  161 #>  [8231,]  161 #>  [8232,]  161 #>  [8233,]  161 #>  [8234,]  161 #>  [8235,]  161 #>  [8236,]  161 #>  [8237,]  161 #>  [8238,]  161 #>  [8239,]  161 #>  [8240,]  161 #>  [8241,]  161 #>  [8242,]  161 #>  [8243,]  161 #>  [8244,]  161 #>  [8245,]  161 #>  [8246,]  161 #>  [8247,]  161 #>  [8248,]  161 #>  [8249,]  160 #>  [8250,]  161 #>  [8251,]  161 #>  [8252,]  161 #>  [8253,]  160 #>  [8254,]  161 #>  [8255,]  160 #>  [8256,]  160 #>  [8257,]  161 #>  [8258,]  161 #>  [8259,]  161 #>  [8260,]  161 #>  [8261,]  161 #>  [8262,]  161 #>  [8263,]  161 #>  [8264,]  161 #>  [8265,]  161 #>  [8266,]  160 #>  [8267,]  161 #>  [8268,]  161 #>  [8269,]  161 #>  [8270,]  161 #>  [8271,]  161 #>  [8272,]  161 #>  [8273,]  161 #>  [8274,]  161 #>  [8275,]  161 #>  [8276,]  161 #>  [8277,]  161 #>  [8278,]  161 #>  [8279,]  161 #>  [8280,]  161 #>  [8281,]  161 #>  [8282,]  161 #>  [8283,]  161 #>  [8284,]  161 #>  [8285,]  161 #>  [8286,]  161 #>  [8287,]  161 #>  [8288,]  161 #>  [8289,]  161 #>  [8290,]  161 #>  [8291,]  161 #>  [8292,]  161 #>  [8293,]  161 #>  [8294,]  161 #>  [8295,]  161 #>  [8296,]  161 #>  [8297,]  161 #>  [8298,]  161 #>  [8299,]  161 #>  [8300,]  161 #>  [8301,]  163 #>  [8302,]  163 #>  [8303,]  163 #>  [8304,]  162 #>  [8305,]  163 #>  [8306,]  163 #>  [8307,]  163 #>  [8308,]  162 #>  [8309,]  162 #>  [8310,]  162 #>  [8311,]  163 #>  [8312,]  163 #>  [8313,]  163 #>  [8314,]  163 #>  [8315,]  163 #>  [8316,]  163 #>  [8317,]  163 #>  [8318,]  163 #>  [8319,]  163 #>  [8320,]  163 #>  [8321,]  163 #>  [8322,]  163 #>  [8323,]  163 #>  [8324,]  163 #>  [8325,]  163 #>  [8326,]  163 #>  [8327,]  163 #>  [8328,]  163 #>  [8329,]  163 #>  [8330,]  163 #>  [8331,]  163 #>  [8332,]  163 #>  [8333,]  163 #>  [8334,]  163 #>  [8335,]  163 #>  [8336,]  163 #>  [8337,]  163 #>  [8338,]  163 #>  [8339,]  163 #>  [8340,]  163 #>  [8341,]  163 #>  [8342,]  163 #>  [8343,]  162 #>  [8344,]  163 #>  [8345,]  163 #>  [8346,]  163 #>  [8347,]  163 #>  [8348,]  163 #>  [8349,]  163 #>  [8350,]  163 #>  [8351,]  162 #>  [8352,]  163 #>  [8353,]  163 #>  [8354,]  163 #>  [8355,]  163 #>  [8356,]  163 #>  [8357,]  163 #>  [8358,]  163 #>  [8359,]  163 #>  [8360,]  162 #>  [8361,]  163 #>  [8362,]  163 #>  [8363,]  163 #>  [8364,]  163 #>  [8365,]  163 #>  [8366,]  163 #>  [8367,]  162 #>  [8368,]  163 #>  [8369,]  163 #>  [8370,]  163 #>  [8371,]  163 #>  [8372,]  163 #>  [8373,]  163 #>  [8374,]  163 #>  [8375,]  163 #>  [8376,]  163 #>  [8377,]  163 #>  [8378,]  163 #>  [8379,]  163 #>  [8380,]  163 #>  [8381,]  163 #>  [8382,]  163 #>  [8383,]  163 #>  [8384,]  163 #>  [8385,]  162 #>  [8386,]  163 #>  [8387,]  163 #>  [8388,]  163 #>  [8389,]  163 #>  [8390,]  163 #>  [8391,]  162 #>  [8392,]  163 #>  [8393,]  163 #>  [8394,]  163 #>  [8395,]  162 #>  [8396,]  163 #>  [8397,]  163 #>  [8398,]  163 #>  [8399,]  163 #>  [8400,]  163 #>  [8401,]  165 #>  [8402,]  164 #>  [8403,]  164 #>  [8404,]  164 #>  [8405,]  165 #>  [8406,]  165 #>  [8407,]  164 #>  [8408,]  165 #>  [8409,]  165 #>  [8410,]  164 #>  [8411,]  164 #>  [8412,]  165 #>  [8413,]  164 #>  [8414,]  165 #>  [8415,]  165 #>  [8416,]  164 #>  [8417,]  164 #>  [8418,]  164 #>  [8419,]  164 #>  [8420,]  165 #>  [8421,]  164 #>  [8422,]  164 #>  [8423,]  164 #>  [8424,]  164 #>  [8425,]  164 #>  [8426,]  165 #>  [8427,]  164 #>  [8428,]  165 #>  [8429,]  164 #>  [8430,]  164 #>  [8431,]  164 #>  [8432,]  164 #>  [8433,]  165 #>  [8434,]  164 #>  [8435,]  164 #>  [8436,]  164 #>  [8437,]  164 #>  [8438,]  165 #>  [8439,]  164 #>  [8440,]  164 #>  [8441,]  165 #>  [8442,]  165 #>  [8443,]  165 #>  [8444,]  164 #>  [8445,]  165 #>  [8446,]  165 #>  [8447,]  164 #>  [8448,]  164 #>  [8449,]  164 #>  [8450,]  165 #>  [8451,]  165 #>  [8452,]  164 #>  [8453,]  165 #>  [8454,]  164 #>  [8455,]  165 #>  [8456,]  165 #>  [8457,]  165 #>  [8458,]  165 #>  [8459,]  164 #>  [8460,]  165 #>  [8461,]  165 #>  [8462,]  164 #>  [8463,]  165 #>  [8464,]  165 #>  [8465,]  165 #>  [8466,]  165 #>  [8467,]  165 #>  [8468,]  165 #>  [8469,]  164 #>  [8470,]  164 #>  [8471,]  165 #>  [8472,]  165 #>  [8473,]  165 #>  [8474,]  165 #>  [8475,]  165 #>  [8476,]  165 #>  [8477,]  164 #>  [8478,]  165 #>  [8479,]  164 #>  [8480,]  164 #>  [8481,]  165 #>  [8482,]  164 #>  [8483,]  164 #>  [8484,]  165 #>  [8485,]  164 #>  [8486,]  164 #>  [8487,]  165 #>  [8488,]  165 #>  [8489,]  164 #>  [8490,]  165 #>  [8491,]  165 #>  [8492,]  165 #>  [8493,]  164 #>  [8494,]  165 #>  [8495,]  164 #>  [8496,]  165 #>  [8497,]  165 #>  [8498,]  164 #>  [8499,]  164 #>  [8500,]  164 #>  [8501,]  167 #>  [8502,]  166 #>  [8503,]  167 #>  [8504,]  167 #>  [8505,]  167 #>  [8506,]  166 #>  [8507,]  167 #>  [8508,]  167 #>  [8509,]  167 #>  [8510,]  167 #>  [8511,]  166 #>  [8512,]  166 #>  [8513,]  167 #>  [8514,]  167 #>  [8515,]  166 #>  [8516,]  167 #>  [8517,]  166 #>  [8518,]  167 #>  [8519,]  166 #>  [8520,]  167 #>  [8521,]  167 #>  [8522,]  167 #>  [8523,]  166 #>  [8524,]  167 #>  [8525,]  167 #>  [8526,]  166 #>  [8527,]  167 #>  [8528,]  167 #>  [8529,]  166 #>  [8530,]  166 #>  [8531,]  166 #>  [8532,]  166 #>  [8533,]  167 #>  [8534,]  166 #>  [8535,]  166 #>  [8536,]  167 #>  [8537,]  166 #>  [8538,]  167 #>  [8539,]  167 #>  [8540,]  167 #>  [8541,]  167 #>  [8542,]  166 #>  [8543,]  166 #>  [8544,]  166 #>  [8545,]  167 #>  [8546,]  166 #>  [8547,]  166 #>  [8548,]  166 #>  [8549,]  167 #>  [8550,]  167 #>  [8551,]  166 #>  [8552,]  167 #>  [8553,]  167 #>  [8554,]  167 #>  [8555,]  167 #>  [8556,]  166 #>  [8557,]  167 #>  [8558,]  167 #>  [8559,]  167 #>  [8560,]  166 #>  [8561,]  166 #>  [8562,]  166 #>  [8563,]  166 #>  [8564,]  166 #>  [8565,]  166 #>  [8566,]  166 #>  [8567,]  167 #>  [8568,]  166 #>  [8569,]  166 #>  [8570,]  166 #>  [8571,]  167 #>  [8572,]  167 #>  [8573,]  167 #>  [8574,]  167 #>  [8575,]  166 #>  [8576,]  167 #>  [8577,]  167 #>  [8578,]  166 #>  [8579,]  166 #>  [8580,]  167 #>  [8581,]  166 #>  [8582,]  166 #>  [8583,]  167 #>  [8584,]  167 #>  [8585,]  167 #>  [8586,]  167 #>  [8587,]  167 #>  [8588,]  167 #>  [8589,]  166 #>  [8590,]  167 #>  [8591,]  167 #>  [8592,]  166 #>  [8593,]  166 #>  [8594,]  166 #>  [8595,]  166 #>  [8596,]  166 #>  [8597,]  166 #>  [8598,]  167 #>  [8599,]  167 #>  [8600,]  166 #>  [8601,]  169 #>  [8602,]  169 #>  [8603,]  168 #>  [8604,]  168 #>  [8605,]  169 #>  [8606,]  169 #>  [8607,]  168 #>  [8608,]  168 #>  [8609,]  169 #>  [8610,]  169 #>  [8611,]  169 #>  [8612,]  168 #>  [8613,]  169 #>  [8614,]  169 #>  [8615,]  169 #>  [8616,]  169 #>  [8617,]  169 #>  [8618,]  169 #>  [8619,]  169 #>  [8620,]  169 #>  [8621,]  169 #>  [8622,]  169 #>  [8623,]  168 #>  [8624,]  169 #>  [8625,]  168 #>  [8626,]  169 #>  [8627,]  169 #>  [8628,]  169 #>  [8629,]  169 #>  [8630,]  169 #>  [8631,]  168 #>  [8632,]  168 #>  [8633,]  169 #>  [8634,]  169 #>  [8635,]  169 #>  [8636,]  169 #>  [8637,]  168 #>  [8638,]  169 #>  [8639,]  169 #>  [8640,]  168 #>  [8641,]  169 #>  [8642,]  169 #>  [8643,]  169 #>  [8644,]  169 #>  [8645,]  169 #>  [8646,]  168 #>  [8647,]  168 #>  [8648,]  169 #>  [8649,]  169 #>  [8650,]  169 #>  [8651,]  169 #>  [8652,]  168 #>  [8653,]  169 #>  [8654,]  169 #>  [8655,]  168 #>  [8656,]  169 #>  [8657,]  168 #>  [8658,]  169 #>  [8659,]  168 #>  [8660,]  168 #>  [8661,]  169 #>  [8662,]  169 #>  [8663,]  169 #>  [8664,]  169 #>  [8665,]  169 #>  [8666,]  169 #>  [8667,]  169 #>  [8668,]  168 #>  [8669,]  169 #>  [8670,]  169 #>  [8671,]  169 #>  [8672,]  168 #>  [8673,]  169 #>  [8674,]  168 #>  [8675,]  169 #>  [8676,]  168 #>  [8677,]  169 #>  [8678,]  169 #>  [8679,]  169 #>  [8680,]  168 #>  [8681,]  169 #>  [8682,]  169 #>  [8683,]  169 #>  [8684,]  169 #>  [8685,]  169 #>  [8686,]  168 #>  [8687,]  169 #>  [8688,]  169 #>  [8689,]  169 #>  [8690,]  169 #>  [8691,]  169 #>  [8692,]  168 #>  [8693,]  169 #>  [8694,]  169 #>  [8695,]  169 #>  [8696,]  168 #>  [8697,]  168 #>  [8698,]  168 #>  [8699,]  169 #>  [8700,]  169 #>  [8701,]  170 #>  [8702,]  170 #>  [8703,]  170 #>  [8704,]  170 #>  [8705,]  170 #>  [8706,]  170 #>  [8707,]  170 #>  [8708,]  170 #>  [8709,]  171 #>  [8710,]  170 #>  [8711,]  170 #>  [8712,]  170 #>  [8713,]  171 #>  [8714,]  170 #>  [8715,]  170 #>  [8716,]  170 #>  [8717,]  171 #>  [8718,]  171 #>  [8719,]  170 #>  [8720,]  170 #>  [8721,]  170 #>  [8722,]  170 #>  [8723,]  170 #>  [8724,]  170 #>  [8725,]  170 #>  [8726,]  170 #>  [8727,]  171 #>  [8728,]  170 #>  [8729,]  170 #>  [8730,]  170 #>  [8731,]  170 #>  [8732,]  170 #>  [8733,]  170 #>  [8734,]  170 #>  [8735,]  170 #>  [8736,]  170 #>  [8737,]  170 #>  [8738,]  170 #>  [8739,]  170 #>  [8740,]  170 #>  [8741,]  170 #>  [8742,]  171 #>  [8743,]  170 #>  [8744,]  170 #>  [8745,]  170 #>  [8746,]  170 #>  [8747,]  170 #>  [8748,]  170 #>  [8749,]  170 #>  [8750,]  170 #>  [8751,]  171 #>  [8752,]  170 #>  [8753,]  171 #>  [8754,]  170 #>  [8755,]  170 #>  [8756,]  170 #>  [8757,]  170 #>  [8758,]  170 #>  [8759,]  170 #>  [8760,]  170 #>  [8761,]  170 #>  [8762,]  170 #>  [8763,]  170 #>  [8764,]  170 #>  [8765,]  171 #>  [8766,]  171 #>  [8767,]  170 #>  [8768,]  170 #>  [8769,]  170 #>  [8770,]  170 #>  [8771,]  170 #>  [8772,]  170 #>  [8773,]  170 #>  [8774,]  170 #>  [8775,]  170 #>  [8776,]  170 #>  [8777,]  170 #>  [8778,]  170 #>  [8779,]  171 #>  [8780,]  170 #>  [8781,]  170 #>  [8782,]  171 #>  [8783,]  170 #>  [8784,]  171 #>  [8785,]  170 #>  [8786,]  170 #>  [8787,]  170 #>  [8788,]  170 #>  [8789,]  170 #>  [8790,]  170 #>  [8791,]  171 #>  [8792,]  170 #>  [8793,]  171 #>  [8794,]  171 #>  [8795,]  170 #>  [8796,]  170 #>  [8797,]  170 #>  [8798,]  170 #>  [8799,]  170 #>  [8800,]  170 #>  [8801,]  172 #>  [8802,]  172 #>  [8803,]  172 #>  [8804,]  172 #>  [8805,]  172 #>  [8806,]  172 #>  [8807,]  172 #>  [8808,]  172 #>  [8809,]  172 #>  [8810,]  172 #>  [8811,]  172 #>  [8812,]  172 #>  [8813,]  172 #>  [8814,]  172 #>  [8815,]  172 #>  [8816,]  172 #>  [8817,]  172 #>  [8818,]  172 #>  [8819,]  172 #>  [8820,]  172 #>  [8821,]  172 #>  [8822,]  172 #>  [8823,]  172 #>  [8824,]  172 #>  [8825,]  172 #>  [8826,]  172 #>  [8827,]  172 #>  [8828,]  172 #>  [8829,]  172 #>  [8830,]  172 #>  [8831,]  172 #>  [8832,]  172 #>  [8833,]  172 #>  [8834,]  172 #>  [8835,]  172 #>  [8836,]  172 #>  [8837,]  172 #>  [8838,]  172 #>  [8839,]  172 #>  [8840,]  172 #>  [8841,]  172 #>  [8842,]  172 #>  [8843,]  172 #>  [8844,]  172 #>  [8845,]  172 #>  [8846,]  172 #>  [8847,]  172 #>  [8848,]  172 #>  [8849,]  172 #>  [8850,]  172 #>  [8851,]  172 #>  [8852,]  172 #>  [8853,]  172 #>  [8854,]  172 #>  [8855,]  172 #>  [8856,]  172 #>  [8857,]  172 #>  [8858,]  172 #>  [8859,]  172 #>  [8860,]  172 #>  [8861,]  172 #>  [8862,]  172 #>  [8863,]  172 #>  [8864,]  172 #>  [8865,]  172 #>  [8866,]  172 #>  [8867,]  172 #>  [8868,]  172 #>  [8869,]  172 #>  [8870,]  172 #>  [8871,]  172 #>  [8872,]  172 #>  [8873,]  172 #>  [8874,]  172 #>  [8875,]  172 #>  [8876,]  172 #>  [8877,]  172 #>  [8878,]  172 #>  [8879,]  172 #>  [8880,]  172 #>  [8881,]  172 #>  [8882,]  172 #>  [8883,]  172 #>  [8884,]  172 #>  [8885,]  172 #>  [8886,]  172 #>  [8887,]  172 #>  [8888,]  172 #>  [8889,]  172 #>  [8890,]  172 #>  [8891,]  172 #>  [8892,]  172 #>  [8893,]  172 #>  [8894,]  172 #>  [8895,]  172 #>  [8896,]  172 #>  [8897,]  172 #>  [8898,]  172 #>  [8899,]  172 #>  [8900,]  172 #>  [8901,]  174 #>  [8902,]  173 #>  [8903,]  173 #>  [8904,]  174 #>  [8905,]  174 #>  [8906,]  173 #>  [8907,]  173 #>  [8908,]  173 #>  [8909,]  173 #>  [8910,]  174 #>  [8911,]  174 #>  [8912,]  174 #>  [8913,]  174 #>  [8914,]  174 #>  [8915,]  174 #>  [8916,]  174 #>  [8917,]  174 #>  [8918,]  174 #>  [8919,]  174 #>  [8920,]  173 #>  [8921,]  173 #>  [8922,]  174 #>  [8923,]  173 #>  [8924,]  174 #>  [8925,]  173 #>  [8926,]  174 #>  [8927,]  174 #>  [8928,]  174 #>  [8929,]  173 #>  [8930,]  174 #>  [8931,]  174 #>  [8932,]  174 #>  [8933,]  174 #>  [8934,]  173 #>  [8935,]  173 #>  [8936,]  173 #>  [8937,]  173 #>  [8938,]  174 #>  [8939,]  174 #>  [8940,]  173 #>  [8941,]  173 #>  [8942,]  173 #>  [8943,]  174 #>  [8944,]  173 #>  [8945,]  173 #>  [8946,]  174 #>  [8947,]  174 #>  [8948,]  174 #>  [8949,]  173 #>  [8950,]  173 #>  [8951,]  174 #>  [8952,]  174 #>  [8953,]  173 #>  [8954,]  173 #>  [8955,]  173 #>  [8956,]  173 #>  [8957,]  173 #>  [8958,]  174 #>  [8959,]  174 #>  [8960,]  173 #>  [8961,]  174 #>  [8962,]  173 #>  [8963,]  174 #>  [8964,]  173 #>  [8965,]  173 #>  [8966,]  174 #>  [8967,]  173 #>  [8968,]  174 #>  [8969,]  174 #>  [8970,]  174 #>  [8971,]  174 #>  [8972,]  173 #>  [8973,]  173 #>  [8974,]  173 #>  [8975,]  174 #>  [8976,]  173 #>  [8977,]  174 #>  [8978,]  174 #>  [8979,]  174 #>  [8980,]  173 #>  [8981,]  173 #>  [8982,]  173 #>  [8983,]  174 #>  [8984,]  173 #>  [8985,]  173 #>  [8986,]  173 #>  [8987,]  174 #>  [8988,]  173 #>  [8989,]  173 #>  [8990,]  174 #>  [8991,]  174 #>  [8992,]  174 #>  [8993,]  174 #>  [8994,]  173 #>  [8995,]  174 #>  [8996,]  174 #>  [8997,]  173 #>  [8998,]  173 #>  [8999,]  173 #>  [9000,]  174 #>  [9001,]  176 #>  [9002,]  176 #>  [9003,]  176 #>  [9004,]  176 #>  [9005,]  176 #>  [9006,]  176 #>  [9007,]  175 #>  [9008,]  176 #>  [9009,]  176 #>  [9010,]  176 #>  [9011,]  176 #>  [9012,]  176 #>  [9013,]  176 #>  [9014,]  176 #>  [9015,]  176 #>  [9016,]  176 #>  [9017,]  176 #>  [9018,]  176 #>  [9019,]  176 #>  [9020,]  176 #>  [9021,]  175 #>  [9022,]  176 #>  [9023,]  176 #>  [9024,]  176 #>  [9025,]  176 #>  [9026,]  176 #>  [9027,]  176 #>  [9028,]  176 #>  [9029,]  176 #>  [9030,]  175 #>  [9031,]  176 #>  [9032,]  176 #>  [9033,]  176 #>  [9034,]  176 #>  [9035,]  176 #>  [9036,]  176 #>  [9037,]  176 #>  [9038,]  176 #>  [9039,]  175 #>  [9040,]  176 #>  [9041,]  176 #>  [9042,]  176 #>  [9043,]  176 #>  [9044,]  176 #>  [9045,]  176 #>  [9046,]  176 #>  [9047,]  176 #>  [9048,]  176 #>  [9049,]  175 #>  [9050,]  176 #>  [9051,]  176 #>  [9052,]  176 #>  [9053,]  176 #>  [9054,]  175 #>  [9055,]  176 #>  [9056,]  176 #>  [9057,]  176 #>  [9058,]  176 #>  [9059,]  176 #>  [9060,]  176 #>  [9061,]  176 #>  [9062,]  175 #>  [9063,]  176 #>  [9064,]  176 #>  [9065,]  176 #>  [9066,]  176 #>  [9067,]  176 #>  [9068,]  176 #>  [9069,]  176 #>  [9070,]  175 #>  [9071,]  176 #>  [9072,]  176 #>  [9073,]  176 #>  [9074,]  176 #>  [9075,]  176 #>  [9076,]  176 #>  [9077,]  176 #>  [9078,]  176 #>  [9079,]  176 #>  [9080,]  175 #>  [9081,]  176 #>  [9082,]  176 #>  [9083,]  176 #>  [9084,]  176 #>  [9085,]  176 #>  [9086,]  176 #>  [9087,]  176 #>  [9088,]  176 #>  [9089,]  176 #>  [9090,]  176 #>  [9091,]  176 #>  [9092,]  176 #>  [9093,]  176 #>  [9094,]  176 #>  [9095,]  175 #>  [9096,]  176 #>  [9097,]  176 #>  [9098,]  175 #>  [9099,]  176 #>  [9100,]  176 #>  [9101,]  177 #>  [9102,]  177 #>  [9103,]  177 #>  [9104,]  177 #>  [9105,]  177 #>  [9106,]  177 #>  [9107,]  177 #>  [9108,]  177 #>  [9109,]  177 #>  [9110,]  177 #>  [9111,]  177 #>  [9112,]  177 #>  [9113,]  177 #>  [9114,]  177 #>  [9115,]  177 #>  [9116,]  177 #>  [9117,]  177 #>  [9118,]  177 #>  [9119,]  177 #>  [9120,]  177 #>  [9121,]  177 #>  [9122,]  178 #>  [9123,]  177 #>  [9124,]  177 #>  [9125,]  177 #>  [9126,]  177 #>  [9127,]  177 #>  [9128,]  177 #>  [9129,]  178 #>  [9130,]  177 #>  [9131,]  177 #>  [9132,]  177 #>  [9133,]  177 #>  [9134,]  177 #>  [9135,]  177 #>  [9136,]  177 #>  [9137,]  177 #>  [9138,]  177 #>  [9139,]  177 #>  [9140,]  177 #>  [9141,]  177 #>  [9142,]  177 #>  [9143,]  177 #>  [9144,]  177 #>  [9145,]  177 #>  [9146,]  177 #>  [9147,]  177 #>  [9148,]  177 #>  [9149,]  177 #>  [9150,]  177 #>  [9151,]  177 #>  [9152,]  177 #>  [9153,]  177 #>  [9154,]  177 #>  [9155,]  177 #>  [9156,]  177 #>  [9157,]  177 #>  [9158,]  178 #>  [9159,]  177 #>  [9160,]  177 #>  [9161,]  177 #>  [9162,]  177 #>  [9163,]  177 #>  [9164,]  178 #>  [9165,]  177 #>  [9166,]  177 #>  [9167,]  177 #>  [9168,]  177 #>  [9169,]  177 #>  [9170,]  177 #>  [9171,]  177 #>  [9172,]  177 #>  [9173,]  177 #>  [9174,]  177 #>  [9175,]  177 #>  [9176,]  177 #>  [9177,]  178 #>  [9178,]  177 #>  [9179,]  177 #>  [9180,]  177 #>  [9181,]  177 #>  [9182,]  177 #>  [9183,]  177 #>  [9184,]  177 #>  [9185,]  177 #>  [9186,]  177 #>  [9187,]  178 #>  [9188,]  177 #>  [9189,]  177 #>  [9190,]  177 #>  [9191,]  177 #>  [9192,]  177 #>  [9193,]  177 #>  [9194,]  177 #>  [9195,]  177 #>  [9196,]  177 #>  [9197,]  177 #>  [9198,]  177 #>  [9199,]  177 #>  [9200,]  177 #>  [9201,]  180 #>  [9202,]  180 #>  [9203,]  179 #>  [9204,]  179 #>  [9205,]  179 #>  [9206,]  179 #>  [9207,]  180 #>  [9208,]  180 #>  [9209,]  179 #>  [9210,]  179 #>  [9211,]  179 #>  [9212,]  180 #>  [9213,]  180 #>  [9214,]  179 #>  [9215,]  180 #>  [9216,]  180 #>  [9217,]  179 #>  [9218,]  180 #>  [9219,]  180 #>  [9220,]  180 #>  [9221,]  179 #>  [9222,]  180 #>  [9223,]  180 #>  [9224,]  179 #>  [9225,]  179 #>  [9226,]  180 #>  [9227,]  180 #>  [9228,]  179 #>  [9229,]  180 #>  [9230,]  180 #>  [9231,]  179 #>  [9232,]  179 #>  [9233,]  180 #>  [9234,]  179 #>  [9235,]  179 #>  [9236,]  180 #>  [9237,]  180 #>  [9238,]  180 #>  [9239,]  179 #>  [9240,]  179 #>  [9241,]  180 #>  [9242,]  179 #>  [9243,]  180 #>  [9244,]  180 #>  [9245,]  180 #>  [9246,]  180 #>  [9247,]  179 #>  [9248,]  179 #>  [9249,]  180 #>  [9250,]  180 #>  [9251,]  180 #>  [9252,]  179 #>  [9253,]  180 #>  [9254,]  179 #>  [9255,]  180 #>  [9256,]  180 #>  [9257,]  179 #>  [9258,]  180 #>  [9259,]  180 #>  [9260,]  180 #>  [9261,]  180 #>  [9262,]  179 #>  [9263,]  180 #>  [9264,]  180 #>  [9265,]  179 #>  [9266,]  180 #>  [9267,]  179 #>  [9268,]  180 #>  [9269,]  180 #>  [9270,]  179 #>  [9271,]  180 #>  [9272,]  179 #>  [9273,]  179 #>  [9274,]  179 #>  [9275,]  180 #>  [9276,]  179 #>  [9277,]  180 #>  [9278,]  180 #>  [9279,]  179 #>  [9280,]  180 #>  [9281,]  180 #>  [9282,]  179 #>  [9283,]  180 #>  [9284,]  180 #>  [9285,]  180 #>  [9286,]  179 #>  [9287,]  180 #>  [9288,]  179 #>  [9289,]  179 #>  [9290,]  180 #>  [9291,]  179 #>  [9292,]  179 #>  [9293,]  180 #>  [9294,]  179 #>  [9295,]  180 #>  [9296,]  180 #>  [9297,]  180 #>  [9298,]  179 #>  [9299,]  179 #>  [9300,]  180 #>  [9301,]  181 #>  [9302,]  182 #>  [9303,]  181 #>  [9304,]  181 #>  [9305,]  182 #>  [9306,]  181 #>  [9307,]  181 #>  [9308,]  181 #>  [9309,]  182 #>  [9310,]  182 #>  [9311,]  181 #>  [9312,]  182 #>  [9313,]  182 #>  [9314,]  181 #>  [9315,]  181 #>  [9316,]  181 #>  [9317,]  182 #>  [9318,]  182 #>  [9319,]  181 #>  [9320,]  182 #>  [9321,]  182 #>  [9322,]  181 #>  [9323,]  182 #>  [9324,]  182 #>  [9325,]  181 #>  [9326,]  181 #>  [9327,]  182 #>  [9328,]  181 #>  [9329,]  182 #>  [9330,]  181 #>  [9331,]  182 #>  [9332,]  182 #>  [9333,]  182 #>  [9334,]  181 #>  [9335,]  181 #>  [9336,]  182 #>  [9337,]  181 #>  [9338,]  181 #>  [9339,]  181 #>  [9340,]  182 #>  [9341,]  181 #>  [9342,]  181 #>  [9343,]  181 #>  [9344,]  182 #>  [9345,]  181 #>  [9346,]  181 #>  [9347,]  181 #>  [9348,]  181 #>  [9349,]  181 #>  [9350,]  181 #>  [9351,]  181 #>  [9352,]  181 #>  [9353,]  182 #>  [9354,]  181 #>  [9355,]  181 #>  [9356,]  181 #>  [9357,]  181 #>  [9358,]  181 #>  [9359,]  181 #>  [9360,]  182 #>  [9361,]  182 #>  [9362,]  181 #>  [9363,]  182 #>  [9364,]  181 #>  [9365,]  181 #>  [9366,]  181 #>  [9367,]  181 #>  [9368,]  181 #>  [9369,]  181 #>  [9370,]  182 #>  [9371,]  181 #>  [9372,]  181 #>  [9373,]  181 #>  [9374,]  181 #>  [9375,]  182 #>  [9376,]  181 #>  [9377,]  181 #>  [9378,]  181 #>  [9379,]  181 #>  [9380,]  182 #>  [9381,]  182 #>  [9382,]  181 #>  [9383,]  182 #>  [9384,]  182 #>  [9385,]  181 #>  [9386,]  182 #>  [9387,]  181 #>  [9388,]  182 #>  [9389,]  181 #>  [9390,]  181 #>  [9391,]  181 #>  [9392,]  181 #>  [9393,]  181 #>  [9394,]  181 #>  [9395,]  181 #>  [9396,]  181 #>  [9397,]  181 #>  [9398,]  181 #>  [9399,]  181 #>  [9400,]  181 #>  [9401,]  183 #>  [9402,]  183 #>  [9403,]  183 #>  [9404,]  183 #>  [9405,]  183 #>  [9406,]  184 #>  [9407,]  183 #>  [9408,]  184 #>  [9409,]  184 #>  [9410,]  183 #>  [9411,]  183 #>  [9412,]  184 #>  [9413,]  183 #>  [9414,]  183 #>  [9415,]  184 #>  [9416,]  183 #>  [9417,]  183 #>  [9418,]  183 #>  [9419,]  183 #>  [9420,]  183 #>  [9421,]  183 #>  [9422,]  183 #>  [9423,]  183 #>  [9424,]  183 #>  [9425,]  183 #>  [9426,]  184 #>  [9427,]  183 #>  [9428,]  183 #>  [9429,]  183 #>  [9430,]  183 #>  [9431,]  183 #>  [9432,]  183 #>  [9433,]  184 #>  [9434,]  183 #>  [9435,]  183 #>  [9436,]  183 #>  [9437,]  183 #>  [9438,]  183 #>  [9439,]  183 #>  [9440,]  183 #>  [9441,]  183 #>  [9442,]  183 #>  [9443,]  184 #>  [9444,]  183 #>  [9445,]  183 #>  [9446,]  184 #>  [9447,]  183 #>  [9448,]  183 #>  [9449,]  183 #>  [9450,]  183 #>  [9451,]  184 #>  [9452,]  183 #>  [9453,]  183 #>  [9454,]  183 #>  [9455,]  183 #>  [9456,]  184 #>  [9457,]  184 #>  [9458,]  183 #>  [9459,]  183 #>  [9460,]  183 #>  [9461,]  184 #>  [9462,]  183 #>  [9463,]  183 #>  [9464,]  184 #>  [9465,]  183 #>  [9466,]  184 #>  [9467,]  183 #>  [9468,]  184 #>  [9469,]  183 #>  [9470,]  183 #>  [9471,]  183 #>  [9472,]  183 #>  [9473,]  183 #>  [9474,]  183 #>  [9475,]  183 #>  [9476,]  184 #>  [9477,]  183 #>  [9478,]  183 #>  [9479,]  183 #>  [9480,]  183 #>  [9481,]  183 #>  [9482,]  183 #>  [9483,]  183 #>  [9484,]  183 #>  [9485,]  183 #>  [9486,]  183 #>  [9487,]  183 #>  [9488,]  183 #>  [9489,]  183 #>  [9490,]  183 #>  [9491,]  183 #>  [9492,]  183 #>  [9493,]  183 #>  [9494,]  184 #>  [9495,]  183 #>  [9496,]  183 #>  [9497,]  183 #>  [9498,]  183 #>  [9499,]  183 #>  [9500,]  183 #>  [9501,]  185 #>  [9502,]  185 #>  [9503,]  185 #>  [9504,]  185 #>  [9505,]  185 #>  [9506,]  185 #>  [9507,]  185 #>  [9508,]  185 #>  [9509,]  185 #>  [9510,]  185 #>  [9511,]  185 #>  [9512,]  185 #>  [9513,]  185 #>  [9514,]  185 #>  [9515,]  185 #>  [9516,]  185 #>  [9517,]  185 #>  [9518,]  185 #>  [9519,]  185 #>  [9520,]  186 #>  [9521,]  185 #>  [9522,]  186 #>  [9523,]  185 #>  [9524,]  185 #>  [9525,]  185 #>  [9526,]  185 #>  [9527,]  186 #>  [9528,]  185 #>  [9529,]  186 #>  [9530,]  185 #>  [9531,]  185 #>  [9532,]  185 #>  [9533,]  185 #>  [9534,]  185 #>  [9535,]  185 #>  [9536,]  185 #>  [9537,]  185 #>  [9538,]  185 #>  [9539,]  185 #>  [9540,]  185 #>  [9541,]  185 #>  [9542,]  185 #>  [9543,]  185 #>  [9544,]  185 #>  [9545,]  185 #>  [9546,]  185 #>  [9547,]  185 #>  [9548,]  185 #>  [9549,]  185 #>  [9550,]  185 #>  [9551,]  185 #>  [9552,]  185 #>  [9553,]  185 #>  [9554,]  185 #>  [9555,]  185 #>  [9556,]  185 #>  [9557,]  185 #>  [9558,]  186 #>  [9559,]  185 #>  [9560,]  185 #>  [9561,]  185 #>  [9562,]  185 #>  [9563,]  185 #>  [9564,]  186 #>  [9565,]  185 #>  [9566,]  185 #>  [9567,]  185 #>  [9568,]  185 #>  [9569,]  185 #>  [9570,]  185 #>  [9571,]  185 #>  [9572,]  185 #>  [9573,]  185 #>  [9574,]  185 #>  [9575,]  185 #>  [9576,]  185 #>  [9577,]  186 #>  [9578,]  185 #>  [9579,]  185 #>  [9580,]  185 #>  [9581,]  186 #>  [9582,]  185 #>  [9583,]  185 #>  [9584,]  185 #>  [9585,]  185 #>  [9586,]  185 #>  [9587,]  186 #>  [9588,]  185 #>  [9589,]  185 #>  [9590,]  185 #>  [9591,]  185 #>  [9592,]  185 #>  [9593,]  185 #>  [9594,]  185 #>  [9595,]  185 #>  [9596,]  185 #>  [9597,]  185 #>  [9598,]  185 #>  [9599,]  185 #>  [9600,]  186 #>  [9601,]  188 #>  [9602,]  188 #>  [9603,]  188 #>  [9604,]  187 #>  [9605,]  188 #>  [9606,]  188 #>  [9607,]  188 #>  [9608,]  187 #>  [9609,]  187 #>  [9610,]  187 #>  [9611,]  188 #>  [9612,]  188 #>  [9613,]  188 #>  [9614,]  188 #>  [9615,]  188 #>  [9616,]  188 #>  [9617,]  188 #>  [9618,]  188 #>  [9619,]  188 #>  [9620,]  188 #>  [9621,]  188 #>  [9622,]  188 #>  [9623,]  188 #>  [9624,]  188 #>  [9625,]  188 #>  [9626,]  188 #>  [9627,]  188 #>  [9628,]  188 #>  [9629,]  188 #>  [9630,]  188 #>  [9631,]  188 #>  [9632,]  188 #>  [9633,]  188 #>  [9634,]  188 #>  [9635,]  188 #>  [9636,]  188 #>  [9637,]  188 #>  [9638,]  188 #>  [9639,]  188 #>  [9640,]  188 #>  [9641,]  188 #>  [9642,]  188 #>  [9643,]  187 #>  [9644,]  188 #>  [9645,]  188 #>  [9646,]  188 #>  [9647,]  188 #>  [9648,]  188 #>  [9649,]  188 #>  [9650,]  188 #>  [9651,]  187 #>  [9652,]  188 #>  [9653,]  188 #>  [9654,]  188 #>  [9655,]  188 #>  [9656,]  188 #>  [9657,]  188 #>  [9658,]  188 #>  [9659,]  188 #>  [9660,]  187 #>  [9661,]  188 #>  [9662,]  188 #>  [9663,]  188 #>  [9664,]  187 #>  [9665,]  188 #>  [9666,]  188 #>  [9667,]  187 #>  [9668,]  188 #>  [9669,]  188 #>  [9670,]  188 #>  [9671,]  188 #>  [9672,]  188 #>  [9673,]  188 #>  [9674,]  188 #>  [9675,]  188 #>  [9676,]  188 #>  [9677,]  188 #>  [9678,]  188 #>  [9679,]  188 #>  [9680,]  188 #>  [9681,]  188 #>  [9682,]  188 #>  [9683,]  188 #>  [9684,]  188 #>  [9685,]  187 #>  [9686,]  188 #>  [9687,]  188 #>  [9688,]  188 #>  [9689,]  188 #>  [9690,]  188 #>  [9691,]  187 #>  [9692,]  188 #>  [9693,]  188 #>  [9694,]  188 #>  [9695,]  187 #>  [9696,]  188 #>  [9697,]  188 #>  [9698,]  188 #>  [9699,]  188 #>  [9700,]  188 #>  [9701,]  189 #>  [9702,]  189 #>  [9703,]  189 #>  [9704,]  189 #>  [9705,]  189 #>  [9706,]  189 #>  [9707,]  189 #>  [9708,]  189 #>  [9709,]  189 #>  [9710,]  189 #>  [9711,]  189 #>  [9712,]  189 #>  [9713,]  189 #>  [9714,]  189 #>  [9715,]  189 #>  [9716,]  189 #>  [9717,]  189 #>  [9718,]  189 #>  [9719,]  189 #>  [9720,]  189 #>  [9721,]  189 #>  [9722,]  189 #>  [9723,]  189 #>  [9724,]  189 #>  [9725,]  189 #>  [9726,]  189 #>  [9727,]  189 #>  [9728,]  189 #>  [9729,]  189 #>  [9730,]  189 #>  [9731,]  189 #>  [9732,]  189 #>  [9733,]  189 #>  [9734,]  189 #>  [9735,]  189 #>  [9736,]  189 #>  [9737,]  189 #>  [9738,]  189 #>  [9739,]  189 #>  [9740,]  189 #>  [9741,]  189 #>  [9742,]  189 #>  [9743,]  189 #>  [9744,]  189 #>  [9745,]  189 #>  [9746,]  189 #>  [9747,]  189 #>  [9748,]  189 #>  [9749,]  189 #>  [9750,]  189 #>  [9751,]  189 #>  [9752,]  189 #>  [9753,]  189 #>  [9754,]  189 #>  [9755,]  189 #>  [9756,]  189 #>  [9757,]  189 #>  [9758,]  189 #>  [9759,]  189 #>  [9760,]  189 #>  [9761,]  189 #>  [9762,]  189 #>  [9763,]  189 #>  [9764,]  189 #>  [9765,]  189 #>  [9766,]  189 #>  [9767,]  189 #>  [9768,]  189 #>  [9769,]  189 #>  [9770,]  189 #>  [9771,]  189 #>  [9772,]  189 #>  [9773,]  189 #>  [9774,]  189 #>  [9775,]  189 #>  [9776,]  189 #>  [9777,]  189 #>  [9778,]  189 #>  [9779,]  189 #>  [9780,]  189 #>  [9781,]  189 #>  [9782,]  189 #>  [9783,]  189 #>  [9784,]  189 #>  [9785,]  189 #>  [9786,]  189 #>  [9787,]  189 #>  [9788,]  189 #>  [9789,]  189 #>  [9790,]  189 #>  [9791,]  189 #>  [9792,]  189 #>  [9793,]  189 #>  [9794,]  189 #>  [9795,]  189 #>  [9796,]  189 #>  [9797,]  189 #>  [9798,]  189 #>  [9799,]  189 #>  [9800,]  189 #>  [9801,]  191 #>  [9802,]  191 #>  [9803,]  191 #>  [9804,]  190 #>  [9805,]  191 #>  [9806,]  191 #>  [9807,]  191 #>  [9808,]  190 #>  [9809,]  190 #>  [9810,]  191 #>  [9811,]  190 #>  [9812,]  191 #>  [9813,]  190 #>  [9814,]  191 #>  [9815,]  191 #>  [9816,]  191 #>  [9817,]  190 #>  [9818,]  191 #>  [9819,]  191 #>  [9820,]  191 #>  [9821,]  191 #>  [9822,]  190 #>  [9823,]  191 #>  [9824,]  191 #>  [9825,]  191 #>  [9826,]  191 #>  [9827,]  190 #>  [9828,]  191 #>  [9829,]  191 #>  [9830,]  191 #>  [9831,]  191 #>  [9832,]  191 #>  [9833,]  191 #>  [9834,]  191 #>  [9835,]  190 #>  [9836,]  191 #>  [9837,]  191 #>  [9838,]  191 #>  [9839,]  191 #>  [9840,]  191 #>  [9841,]  191 #>  [9842,]  191 #>  [9843,]  190 #>  [9844,]  190 #>  [9845,]  191 #>  [9846,]  191 #>  [9847,]  191 #>  [9848,]  191 #>  [9849,]  190 #>  [9850,]  191 #>  [9851,]  191 #>  [9852,]  190 #>  [9853,]  191 #>  [9854,]  191 #>  [9855,]  190 #>  [9856,]  191 #>  [9857,]  191 #>  [9858,]  190 #>  [9859,]  191 #>  [9860,]  191 #>  [9861,]  191 #>  [9862,]  191 #>  [9863,]  191 #>  [9864,]  191 #>  [9865,]  191 #>  [9866,]  190 #>  [9867,]  191 #>  [9868,]  191 #>  [9869,]  190 #>  [9870,]  191 #>  [9871,]  191 #>  [9872,]  191 #>  [9873,]  191 #>  [9874,]  191 #>  [9875,]  191 #>  [9876,]  191 #>  [9877,]  191 #>  [9878,]  191 #>  [9879,]  190 #>  [9880,]  190 #>  [9881,]  190 #>  [9882,]  190 #>  [9883,]  190 #>  [9884,]  191 #>  [9885,]  191 #>  [9886,]  191 #>  [9887,]  190 #>  [9888,]  190 #>  [9889,]  190 #>  [9890,]  190 #>  [9891,]  191 #>  [9892,]  190 #>  [9893,]  191 #>  [9894,]  191 #>  [9895,]  190 #>  [9896,]  191 #>  [9897,]  191 #>  [9898,]  191 #>  [9899,]  190 #>  [9900,]  191 #>  [9901,]  193 #>  [9902,]  193 #>  [9903,]  192 #>  [9904,]  193 #>  [9905,]  193 #>  [9906,]  192 #>  [9907,]  192 #>  [9908,]  193 #>  [9909,]  193 #>  [9910,]  193 #>  [9911,]  193 #>  [9912,]  193 #>  [9913,]  193 #>  [9914,]  193 #>  [9915,]  193 #>  [9916,]  193 #>  [9917,]  193 #>  [9918,]  193 #>  [9919,]  193 #>  [9920,]  192 #>  [9921,]  192 #>  [9922,]  193 #>  [9923,]  192 #>  [9924,]  193 #>  [9925,]  192 #>  [9926,]  193 #>  [9927,]  193 #>  [9928,]  193 #>  [9929,]  193 #>  [9930,]  193 #>  [9931,]  193 #>  [9932,]  193 #>  [9933,]  193 #>  [9934,]  192 #>  [9935,]  192 #>  [9936,]  193 #>  [9937,]  192 #>  [9938,]  193 #>  [9939,]  193 #>  [9940,]  193 #>  [9941,]  193 #>  [9942,]  192 #>  [9943,]  193 #>  [9944,]  192 #>  [9945,]  193 #>  [9946,]  193 #>  [9947,]  193 #>  [9948,]  193 #>  [9949,]  193 #>  [9950,]  193 #>  [9951,]  193 #>  [9952,]  193 #>  [9953,]  192 #>  [9954,]  193 #>  [9955,]  193 #>  [9956,]  192 #>  [9957,]  192 #>  [9958,]  193 #>  [9959,]  193 #>  [9960,]  193 #>  [9961,]  193 #>  [9962,]  193 #>  [9963,]  193 #>  [9964,]  193 #>  [9965,]  192 #>  [9966,]  193 #>  [9967,]  193 #>  [9968,]  193 #>  [9969,]  193 #>  [9970,]  193 #>  [9971,]  193 #>  [9972,]  193 #>  [9973,]  192 #>  [9974,]  192 #>  [9975,]  193 #>  [9976,]  193 #>  [9977,]  193 #>  [9978,]  193 #>  [9979,]  193 #>  [9980,]  192 #>  [9981,]  193 #>  [9982,]  192 #>  [9983,]  193 #>  [9984,]  192 #>  [9985,]  192 #>  [9986,]  192 #>  [9987,]  193 #>  [9988,]  193 #>  [9989,]  192 #>  [9990,]  193 #>  [9991,]  193 #>  [9992,]  193 #>  [9993,]  193 #>  [9994,]  192 #>  [9995,]  193 #>  [9996,]  193 #>  [9997,]  193 #>  [9998,]  193 #>  [9999,]  192 #> [10000,]  193 #> [10001,]  195 #> [10002,]  195 #> [10003,]  194 #> [10004,]  195 #> [10005,]  194 #> [10006,]  195 #> [10007,]  194 #> [10008,]  194 #> [10009,]  195 #> [10010,]  195 #> [10011,]  195 #> [10012,]  195 #> [10013,]  194 #> [10014,]  195 #> [10015,]  195 #> [10016,]  194 #> [10017,]  194 #> [10018,]  195 #> [10019,]  195 #> [10020,]  194 #> [10021,]  195 #> [10022,]  194 #> [10023,]  195 #> [10024,]  194 #> [10025,]  194 #> [10026,]  195 #> [10027,]  195 #> [10028,]  195 #> [10029,]  194 #> [10030,]  195 #> [10031,]  195 #> [10032,]  195 #> [10033,]  195 #> [10034,]  195 #> [10035,]  195 #> [10036,]  195 #> [10037,]  195 #> [10038,]  195 #> [10039,]  194 #> [10040,]  194 #> [10041,]  195 #> [10042,]  195 #> [10043,]  194 #> [10044,]  194 #> [10045,]  194 #> [10046,]  194 #> [10047,]  194 #> [10048,]  195 #> [10049,]  194 #> [10050,]  194 #> [10051,]  194 #> [10052,]  195 #> [10053,]  194 #> [10054,]  194 #> [10055,]  194 #> [10056,]  194 #> [10057,]  195 #> [10058,]  195 #> [10059,]  194 #> [10060,]  195 #> [10061,]  195 #> [10062,]  195 #> [10063,]  194 #> [10064,]  195 #> [10065,]  194 #> [10066,]  194 #> [10067,]  195 #> [10068,]  195 #> [10069,]  195 #> [10070,]  194 #> [10071,]  194 #> [10072,]  194 #> [10073,]  195 #> [10074,]  195 #> [10075,]  195 #> [10076,]  194 #> [10077,]  194 #> [10078,]  194 #> [10079,]  194 #> [10080,]  195 #> [10081,]  194 #> [10082,]  195 #> [10083,]  194 #> [10084,]  194 #> [10085,]  195 #> [10086,]  194 #> [10087,]  195 #> [10088,]  195 #> [10089,]  194 #> [10090,]  194 #> [10091,]  195 #> [10092,]  195 #> [10093,]  195 #> [10094,]  194 #> [10095,]  195 #> [10096,]  195 #> [10097,]  195 #> [10098,]  194 #> [10099,]  195 #> [10100,]  194 #> [10101,]  197 #> [10102,]  197 #> [10103,]  196 #> [10104,]  197 #> [10105,]  196 #> [10106,]  197 #> [10107,]  196 #> [10108,]  196 #> [10109,]  197 #> [10110,]  197 #> [10111,]  197 #> [10112,]  197 #> [10113,]  196 #> [10114,]  197 #> [10115,]  197 #> [10116,]  196 #> [10117,]  196 #> [10118,]  197 #> [10119,]  197 #> [10120,]  196 #> [10121,]  197 #> [10122,]  196 #> [10123,]  197 #> [10124,]  196 #> [10125,]  196 #> [10126,]  197 #> [10127,]  197 #> [10128,]  197 #> [10129,]  196 #> [10130,]  197 #> [10131,]  197 #> [10132,]  197 #> [10133,]  197 #> [10134,]  197 #> [10135,]  197 #> [10136,]  197 #> [10137,]  197 #> [10138,]  197 #> [10139,]  196 #> [10140,]  196 #> [10141,]  197 #> [10142,]  197 #> [10143,]  196 #> [10144,]  196 #> [10145,]  196 #> [10146,]  196 #> [10147,]  196 #> [10148,]  197 #> [10149,]  196 #> [10150,]  196 #> [10151,]  196 #> [10152,]  197 #> [10153,]  196 #> [10154,]  196 #> [10155,]  196 #> [10156,]  196 #> [10157,]  197 #> [10158,]  197 #> [10159,]  196 #> [10160,]  197 #> [10161,]  197 #> [10162,]  197 #> [10163,]  196 #> [10164,]  197 #> [10165,]  196 #> [10166,]  196 #> [10167,]  197 #> [10168,]  197 #> [10169,]  197 #> [10170,]  196 #> [10171,]  197 #> [10172,]  196 #> [10173,]  197 #> [10174,]  197 #> [10175,]  197 #> [10176,]  196 #> [10177,]  196 #> [10178,]  196 #> [10179,]  196 #> [10180,]  197 #> [10181,]  197 #> [10182,]  197 #> [10183,]  196 #> [10184,]  196 #> [10185,]  197 #> [10186,]  196 #> [10187,]  197 #> [10188,]  197 #> [10189,]  196 #> [10190,]  196 #> [10191,]  197 #> [10192,]  197 #> [10193,]  197 #> [10194,]  196 #> [10195,]  197 #> [10196,]  197 #> [10197,]  197 #> [10198,]  196 #> [10199,]  197 #> [10200,]  196 #> [10201,]  199 #> [10202,]  199 #> [10203,]  198 #> [10204,]  199 #> [10205,]  199 #> [10206,]  198 #> [10207,]  198 #> [10208,]  199 #> [10209,]  199 #> [10210,]  199 #> [10211,]  199 #> [10212,]  199 #> [10213,]  199 #> [10214,]  199 #> [10215,]  199 #> [10216,]  199 #> [10217,]  199 #> [10218,]  199 #> [10219,]  199 #> [10220,]  198 #> [10221,]  198 #> [10222,]  199 #> [10223,]  198 #> [10224,]  199 #> [10225,]  198 #> [10226,]  199 #> [10227,]  199 #> [10228,]  199 #> [10229,]  199 #> [10230,]  199 #> [10231,]  199 #> [10232,]  199 #> [10233,]  199 #> [10234,]  198 #> [10235,]  198 #> [10236,]  199 #> [10237,]  198 #> [10238,]  199 #> [10239,]  199 #> [10240,]  199 #> [10241,]  199 #> [10242,]  198 #> [10243,]  199 #> [10244,]  198 #> [10245,]  199 #> [10246,]  199 #> [10247,]  199 #> [10248,]  199 #> [10249,]  199 #> [10250,]  198 #> [10251,]  199 #> [10252,]  199 #> [10253,]  198 #> [10254,]  198 #> [10255,]  198 #> [10256,]  198 #> [10257,]  198 #> [10258,]  199 #> [10259,]  199 #> [10260,]  198 #> [10261,]  199 #> [10262,]  199 #> [10263,]  199 #> [10264,]  198 #> [10265,]  198 #> [10266,]  199 #> [10267,]  199 #> [10268,]  199 #> [10269,]  199 #> [10270,]  199 #> [10271,]  199 #> [10272,]  199 #> [10273,]  198 #> [10274,]  198 #> [10275,]  199 #> [10276,]  199 #> [10277,]  199 #> [10278,]  199 #> [10279,]  199 #> [10280,]  198 #> [10281,]  198 #> [10282,]  198 #> [10283,]  199 #> [10284,]  198 #> [10285,]  198 #> [10286,]  198 #> [10287,]  199 #> [10288,]  198 #> [10289,]  198 #> [10290,]  199 #> [10291,]  199 #> [10292,]  199 #> [10293,]  199 #> [10294,]  198 #> [10295,]  199 #> [10296,]  199 #> [10297,]  198 #> [10298,]  198 #> [10299,]  198 #> [10300,]  199 #> [10301,]  200 #> [10302,]  201 #> [10303,]  200 #> [10304,]  200 #> [10305,]  201 #> [10306,]  200 #> [10307,]  200 #> [10308,]  200 #> [10309,]  201 #> [10310,]  201 #> [10311,]  200 #> [10312,]  201 #> [10313,]  201 #> [10314,]  200 #> [10315,]  200 #> [10316,]  200 #> [10317,]  201 #> [10318,]  201 #> [10319,]  200 #> [10320,]  201 #> [10321,]  201 #> [10322,]  201 #> [10323,]  201 #> [10324,]  201 #> [10325,]  200 #> [10326,]  200 #> [10327,]  201 #> [10328,]  200 #> [10329,]  201 #> [10330,]  201 #> [10331,]  201 #> [10332,]  201 #> [10333,]  201 #> [10334,]  200 #> [10335,]  200 #> [10336,]  201 #> [10337,]  200 #> [10338,]  200 #> [10339,]  200 #> [10340,]  201 #> [10341,]  200 #> [10342,]  200 #> [10343,]  200 #> [10344,]  201 #> [10345,]  200 #> [10346,]  200 #> [10347,]  200 #> [10348,]  200 #> [10349,]  200 #> [10350,]  201 #> [10351,]  200 #> [10352,]  200 #> [10353,]  201 #> [10354,]  201 #> [10355,]  200 #> [10356,]  200 #> [10357,]  200 #> [10358,]  200 #> [10359,]  200 #> [10360,]  201 #> [10361,]  201 #> [10362,]  200 #> [10363,]  201 #> [10364,]  200 #> [10365,]  200 #> [10366,]  200 #> [10367,]  200 #> [10368,]  200 #> [10369,]  200 #> [10370,]  201 #> [10371,]  200 #> [10372,]  200 #> [10373,]  200 #> [10374,]  200 #> [10375,]  201 #> [10376,]  200 #> [10377,]  200 #> [10378,]  201 #> [10379,]  200 #> [10380,]  201 #> [10381,]  201 #> [10382,]  200 #> [10383,]  201 #> [10384,]  201 #> [10385,]  200 #> [10386,]  201 #> [10387,]  201 #> [10388,]  201 #> [10389,]  200 #> [10390,]  200 #> [10391,]  200 #> [10392,]  201 #> [10393,]  201 #> [10394,]  200 #> [10395,]  201 #> [10396,]  200 #> [10397,]  200 #> [10398,]  200 #> [10399,]  200 #> [10400,]  200 #> [10401,]  203 #> [10402,]  203 #> [10403,]  203 #> [10404,]  203 #> [10405,]  203 #> [10406,]  203 #> [10407,]  203 #> [10408,]  203 #> [10409,]  203 #> [10410,]  203 #> [10411,]  203 #> [10412,]  203 #> [10413,]  203 #> [10414,]  203 #> [10415,]  202 #> [10416,]  203 #> [10417,]  203 #> [10418,]  203 #> [10419,]  203 #> [10420,]  203 #> [10421,]  203 #> [10422,]  203 #> [10423,]  203 #> [10424,]  203 #> [10425,]  203 #> [10426,]  203 #> [10427,]  203 #> [10428,]  203 #> [10429,]  203 #> [10430,]  203 #> [10431,]  202 #> [10432,]  203 #> [10433,]  203 #> [10434,]  202 #> [10435,]  203 #> [10436,]  203 #> [10437,]  202 #> [10438,]  203 #> [10439,]  203 #> [10440,]  203 #> [10441,]  203 #> [10442,]  202 #> [10443,]  202 #> [10444,]  202 #> [10445,]  203 #> [10446,]  203 #> [10447,]  203 #> [10448,]  203 #> [10449,]  203 #> [10450,]  203 #> [10451,]  203 #> [10452,]  203 #> [10453,]  203 #> [10454,]  203 #> [10455,]  203 #> [10456,]  203 #> [10457,]  203 #> [10458,]  203 #> [10459,]  203 #> [10460,]  203 #> [10461,]  203 #> [10462,]  203 #> [10463,]  202 #> [10464,]  203 #> [10465,]  203 #> [10466,]  203 #> [10467,]  203 #> [10468,]  203 #> [10469,]  203 #> [10470,]  203 #> [10471,]  203 #> [10472,]  203 #> [10473,]  203 #> [10474,]  203 #> [10475,]  202 #> [10476,]  203 #> [10477,]  203 #> [10478,]  202 #> [10479,]  203 #> [10480,]  203 #> [10481,]  203 #> [10482,]  203 #> [10483,]  203 #> [10484,]  203 #> [10485,]  203 #> [10486,]  203 #> [10487,]  203 #> [10488,]  203 #> [10489,]  203 #> [10490,]  203 #> [10491,]  203 #> [10492,]  203 #> [10493,]  203 #> [10494,]  203 #> [10495,]  202 #> [10496,]  203 #> [10497,]  203 #> [10498,]  203 #> [10499,]  203 #> [10500,]  202 #> [10501,]  205 #> [10502,]  205 #> [10503,]  205 #> [10504,]  204 #> [10505,]  205 #> [10506,]  205 #> [10507,]  205 #> [10508,]  204 #> [10509,]  204 #> [10510,]  205 #> [10511,]  205 #> [10512,]  205 #> [10513,]  205 #> [10514,]  205 #> [10515,]  205 #> [10516,]  205 #> [10517,]  204 #> [10518,]  205 #> [10519,]  205 #> [10520,]  205 #> [10521,]  205 #> [10522,]  205 #> [10523,]  205 #> [10524,]  205 #> [10525,]  205 #> [10526,]  205 #> [10527,]  205 #> [10528,]  205 #> [10529,]  205 #> [10530,]  205 #> [10531,]  205 #> [10532,]  205 #> [10533,]  205 #> [10534,]  205 #> [10535,]  205 #> [10536,]  205 #> [10537,]  205 #> [10538,]  205 #> [10539,]  205 #> [10540,]  205 #> [10541,]  205 #> [10542,]  205 #> [10543,]  205 #> [10544,]  205 #> [10545,]  205 #> [10546,]  205 #> [10547,]  205 #> [10548,]  205 #> [10549,]  205 #> [10550,]  205 #> [10551,]  205 #> [10552,]  204 #> [10553,]  205 #> [10554,]  205 #> [10555,]  205 #> [10556,]  205 #> [10557,]  205 #> [10558,]  205 #> [10559,]  205 #> [10560,]  205 #> [10561,]  205 #> [10562,]  205 #> [10563,]  205 #> [10564,]  205 #> [10565,]  205 #> [10566,]  205 #> [10567,]  205 #> [10568,]  205 #> [10569,]  205 #> [10570,]  205 #> [10571,]  205 #> [10572,]  205 #> [10573,]  205 #> [10574,]  205 #> [10575,]  205 #> [10576,]  205 #> [10577,]  205 #> [10578,]  205 #> [10579,]  205 #> [10580,]  205 #> [10581,]  204 #> [10582,]  204 #> [10583,]  205 #> [10584,]  205 #> [10585,]  205 #> [10586,]  205 #> [10587,]  205 #> [10588,]  205 #> [10589,]  205 #> [10590,]  205 #> [10591,]  205 #> [10592,]  205 #> [10593,]  205 #> [10594,]  205 #> [10595,]  204 #> [10596,]  205 #> [10597,]  205 #> [10598,]  205 #> [10599,]  205 #> [10600,]  205 #> [10601,]  207 #> [10602,]  207 #> [10603,]  206 #> [10604,]  206 #> [10605,]  206 #> [10606,]  207 #> [10607,]  206 #> [10608,]  206 #> [10609,]  206 #> [10610,]  206 #> [10611,]  206 #> [10612,]  206 #> [10613,]  207 #> [10614,]  207 #> [10615,]  207 #> [10616,]  207 #> [10617,]  207 #> [10618,]  206 #> [10619,]  206 #> [10620,]  206 #> [10621,]  207 #> [10622,]  207 #> [10623,]  206 #> [10624,]  206 #> [10625,]  206 #> [10626,]  207 #> [10627,]  207 #> [10628,]  206 #> [10629,]  207 #> [10630,]  206 #> [10631,]  206 #> [10632,]  206 #> [10633,]  207 #> [10634,]  206 #> [10635,]  207 #> [10636,]  206 #> [10637,]  207 #> [10638,]  206 #> [10639,]  206 #> [10640,]  206 #> [10641,]  207 #> [10642,]  206 #> [10643,]  206 #> [10644,]  207 #> [10645,]  206 #> [10646,]  206 #> [10647,]  206 #> [10648,]  206 #> [10649,]  206 #> [10650,]  207 #> [10651,]  206 #> [10652,]  207 #> [10653,]  206 #> [10654,]  206 #> [10655,]  206 #> [10656,]  206 #> [10657,]  206 #> [10658,]  207 #> [10659,]  207 #> [10660,]  206 #> [10661,]  207 #> [10662,]  206 #> [10663,]  206 #> [10664,]  206 #> [10665,]  206 #> [10666,]  206 #> [10667,]  206 #> [10668,]  207 #> [10669,]  206 #> [10670,]  207 #> [10671,]  207 #> [10672,]  206 #> [10673,]  207 #> [10674,]  206 #> [10675,]  206 #> [10676,]  207 #> [10677,]  207 #> [10678,]  206 #> [10679,]  207 #> [10680,]  206 #> [10681,]  207 #> [10682,]  206 #> [10683,]  207 #> [10684,]  206 #> [10685,]  206 #> [10686,]  207 #> [10687,]  206 #> [10688,]  206 #> [10689,]  206 #> [10690,]  207 #> [10691,]  206 #> [10692,]  206 #> [10693,]  207 #> [10694,]  207 #> [10695,]  206 #> [10696,]  207 #> [10697,]  206 #> [10698,]  206 #> [10699,]  207 #> [10700,]  207 #> [10701,]  209 #> [10702,]  209 #> [10703,]  208 #> [10704,]  209 #> [10705,]  209 #> [10706,]  209 #> [10707,]  208 #> [10708,]  208 #> [10709,]  209 #> [10710,]  209 #> [10711,]  209 #> [10712,]  209 #> [10713,]  208 #> [10714,]  209 #> [10715,]  209 #> [10716,]  208 #> [10717,]  209 #> [10718,]  209 #> [10719,]  209 #> [10720,]  208 #> [10721,]  209 #> [10722,]  208 #> [10723,]  209 #> [10724,]  208 #> [10725,]  208 #> [10726,]  209 #> [10727,]  209 #> [10728,]  209 #> [10729,]  209 #> [10730,]  209 #> [10731,]  209 #> [10732,]  209 #> [10733,]  209 #> [10734,]  209 #> [10735,]  209 #> [10736,]  209 #> [10737,]  209 #> [10738,]  209 #> [10739,]  208 #> [10740,]  208 #> [10741,]  209 #> [10742,]  209 #> [10743,]  209 #> [10744,]  208 #> [10745,]  209 #> [10746,]  208 #> [10747,]  209 #> [10748,]  209 #> [10749,]  208 #> [10750,]  208 #> [10751,]  209 #> [10752,]  209 #> [10753,]  208 #> [10754,]  208 #> [10755,]  208 #> [10756,]  208 #> [10757,]  209 #> [10758,]  209 #> [10759,]  208 #> [10760,]  209 #> [10761,]  209 #> [10762,]  209 #> [10763,]  208 #> [10764,]  209 #> [10765,]  208 #> [10766,]  208 #> [10767,]  209 #> [10768,]  209 #> [10769,]  209 #> [10770,]  208 #> [10771,]  209 #> [10772,]  208 #> [10773,]  209 #> [10774,]  209 #> [10775,]  209 #> [10776,]  209 #> [10777,]  209 #> [10778,]  208 #> [10779,]  209 #> [10780,]  209 #> [10781,]  209 #> [10782,]  209 #> [10783,]  209 #> [10784,]  208 #> [10785,]  209 #> [10786,]  208 #> [10787,]  209 #> [10788,]  209 #> [10789,]  208 #> [10790,]  208 #> [10791,]  209 #> [10792,]  209 #> [10793,]  209 #> [10794,]  209 #> [10795,]  209 #> [10796,]  209 #> [10797,]  209 #> [10798,]  208 #> [10799,]  209 #> [10800,]  208 #> [10801,]  210 #> [10802,]  211 #> [10803,]  210 #> [10804,]  210 #> [10805,]  211 #> [10806,]  210 #> [10807,]  210 #> [10808,]  210 #> [10809,]  211 #> [10810,]  211 #> [10811,]  210 #> [10812,]  211 #> [10813,]  211 #> [10814,]  210 #> [10815,]  210 #> [10816,]  210 #> [10817,]  211 #> [10818,]  211 #> [10819,]  210 #> [10820,]  211 #> [10821,]  211 #> [10822,]  211 #> [10823,]  211 #> [10824,]  211 #> [10825,]  210 #> [10826,]  210 #> [10827,]  211 #> [10828,]  210 #> [10829,]  211 #> [10830,]  210 #> [10831,]  211 #> [10832,]  211 #> [10833,]  211 #> [10834,]  210 #> [10835,]  210 #> [10836,]  211 #> [10837,]  210 #> [10838,]  210 #> [10839,]  210 #> [10840,]  211 #> [10841,]  210 #> [10842,]  210 #> [10843,]  210 #> [10844,]  211 #> [10845,]  210 #> [10846,]  210 #> [10847,]  210 #> [10848,]  210 #> [10849,]  210 #> [10850,]  211 #> [10851,]  210 #> [10852,]  210 #> [10853,]  211 #> [10854,]  210 #> [10855,]  210 #> [10856,]  210 #> [10857,]  210 #> [10858,]  210 #> [10859,]  210 #> [10860,]  211 #> [10861,]  211 #> [10862,]  210 #> [10863,]  211 #> [10864,]  210 #> [10865,]  210 #> [10866,]  210 #> [10867,]  210 #> [10868,]  210 #> [10869,]  210 #> [10870,]  211 #> [10871,]  210 #> [10872,]  210 #> [10873,]  210 #> [10874,]  210 #> [10875,]  211 #> [10876,]  210 #> [10877,]  210 #> [10878,]  210 #> [10879,]  210 #> [10880,]  211 #> [10881,]  211 #> [10882,]  210 #> [10883,]  211 #> [10884,]  211 #> [10885,]  210 #> [10886,]  211 #> [10887,]  210 #> [10888,]  211 #> [10889,]  210 #> [10890,]  210 #> [10891,]  210 #> [10892,]  211 #> [10893,]  211 #> [10894,]  210 #> [10895,]  210 #> [10896,]  210 #> [10897,]  210 #> [10898,]  210 #> [10899,]  210 #> [10900,]  210 #> [10901,]  212 #> [10902,]  212 #> [10903,]  212 #> [10904,]  213 #> [10905,]  212 #> [10906,]  212 #> [10907,]  212 #> [10908,]  212 #> [10909,]  213 #> [10910,]  212 #> [10911,]  213 #> [10912,]  213 #> [10913,]  212 #> [10914,]  213 #> [10915,]  213 #> [10916,]  212 #> [10917,]  212 #> [10918,]  213 #> [10919,]  213 #> [10920,]  212 #> [10921,]  213 #> [10922,]  212 #> [10923,]  212 #> [10924,]  212 #> [10925,]  212 #> [10926,]  213 #> [10927,]  213 #> [10928,]  212 #> [10929,]  212 #> [10930,]  213 #> [10931,]  213 #> [10932,]  212 #> [10933,]  213 #> [10934,]  212 #> [10935,]  212 #> [10936,]  213 #> [10937,]  212 #> [10938,]  213 #> [10939,]  212 #> [10940,]  212 #> [10941,]  213 #> [10942,]  213 #> [10943,]  212 #> [10944,]  212 #> [10945,]  212 #> [10946,]  212 #> [10947,]  212 #> [10948,]  213 #> [10949,]  212 #> [10950,]  212 #> [10951,]  212 #> [10952,]  212 #> [10953,]  212 #> [10954,]  212 #> [10955,]  212 #> [10956,]  212 #> [10957,]  212 #> [10958,]  213 #> [10959,]  212 #> [10960,]  213 #> [10961,]  213 #> [10962,]  213 #> [10963,]  212 #> [10964,]  212 #> [10965,]  212 #> [10966,]  212 #> [10967,]  212 #> [10968,]  213 #> [10969,]  213 #> [10970,]  212 #> [10971,]  212 #> [10972,]  212 #> [10973,]  212 #> [10974,]  213 #> [10975,]  213 #> [10976,]  212 #> [10977,]  212 #> [10978,]  212 #> [10979,]  212 #> [10980,]  212 #> [10981,]  212 #> [10982,]  213 #> [10983,]  212 #> [10984,]  212 #> [10985,]  213 #> [10986,]  212 #> [10987,]  212 #> [10988,]  212 #> [10989,]  212 #> [10990,]  212 #> [10991,]  212 #> [10992,]  213 #> [10993,]  213 #> [10994,]  212 #> [10995,]  212 #> [10996,]  213 #> [10997,]  213 #> [10998,]  212 #> [10999,]  212 #> [11000,]  212 #> [11001,]  215 #> [11002,]  215 #> [11003,]  215 #> [11004,]  215 #> [11005,]  215 #> [11006,]  215 #> [11007,]  215 #> [11008,]  215 #> [11009,]  215 #> [11010,]  215 #> [11011,]  215 #> [11012,]  214 #> [11013,]  215 #> [11014,]  215 #> [11015,]  214 #> [11016,]  215 #> [11017,]  214 #> [11018,]  215 #> [11019,]  215 #> [11020,]  215 #> [11021,]  215 #> [11022,]  215 #> [11023,]  214 #> [11024,]  215 #> [11025,]  215 #> [11026,]  215 #> [11027,]  215 #> [11028,]  215 #> [11029,]  214 #> [11030,]  215 #> [11031,]  214 #> [11032,]  215 #> [11033,]  215 #> [11034,]  214 #> [11035,]  215 #> [11036,]  215 #> [11037,]  214 #> [11038,]  215 #> [11039,]  215 #> [11040,]  215 #> [11041,]  215 #> [11042,]  214 #> [11043,]  214 #> [11044,]  214 #> [11045,]  215 #> [11046,]  215 #> [11047,]  215 #> [11048,]  214 #> [11049,]  215 #> [11050,]  215 #> [11051,]  215 #> [11052,]  215 #> [11053,]  215 #> [11054,]  215 #> [11055,]  215 #> [11056,]  215 #> [11057,]  215 #> [11058,]  215 #> [11059,]  215 #> [11060,]  215 #> [11061,]  215 #> [11062,]  215 #> [11063,]  214 #> [11064,]  214 #> [11065,]  215 #> [11066,]  215 #> [11067,]  215 #> [11068,]  215 #> [11069,]  215 #> [11070,]  214 #> [11071,]  215 #> [11072,]  215 #> [11073,]  215 #> [11074,]  215 #> [11075,]  214 #> [11076,]  215 #> [11077,]  215 #> [11078,]  214 #> [11079,]  214 #> [11080,]  215 #> [11081,]  214 #> [11082,]  215 #> [11083,]  215 #> [11084,]  215 #> [11085,]  215 #> [11086,]  215 #> [11087,]  215 #> [11088,]  215 #> [11089,]  215 #> [11090,]  215 #> [11091,]  215 #> [11092,]  214 #> [11093,]  215 #> [11094,]  214 #> [11095,]  214 #> [11096,]  215 #> [11097,]  215 #> [11098,]  215 #> [11099,]  215 #> [11100,]  214 #> [11101,]  216 #> [11102,]  216 #> [11103,]  216 #> [11104,]  217 #> [11105,]  216 #> [11106,]  216 #> [11107,]  216 #> [11108,]  216 #> [11109,]  216 #> [11110,]  216 #> [11111,]  216 #> [11112,]  216 #> [11113,]  216 #> [11114,]  217 #> [11115,]  216 #> [11116,]  216 #> [11117,]  216 #> [11118,]  216 #> [11119,]  216 #> [11120,]  216 #> [11121,]  216 #> [11122,]  216 #> [11123,]  216 #> [11124,]  216 #> [11125,]  216 #> [11126,]  216 #> [11127,]  217 #> [11128,]  216 #> [11129,]  216 #> [11130,]  216 #> [11131,]  216 #> [11132,]  216 #> [11133,]  216 #> [11134,]  216 #> [11135,]  216 #> [11136,]  216 #> [11137,]  216 #> [11138,]  216 #> [11139,]  216 #> [11140,]  216 #> [11141,]  216 #> [11142,]  216 #> [11143,]  216 #> [11144,]  216 #> [11145,]  216 #> [11146,]  216 #> [11147,]  216 #> [11148,]  216 #> [11149,]  216 #> [11150,]  216 #> [11151,]  216 #> [11152,]  216 #> [11153,]  216 #> [11154,]  216 #> [11155,]  216 #> [11156,]  216 #> [11157,]  216 #> [11158,]  216 #> [11159,]  216 #> [11160,]  216 #> [11161,]  217 #> [11162,]  216 #> [11163,]  216 #> [11164,]  216 #> [11165,]  216 #> [11166,]  216 #> [11167,]  216 #> [11168,]  216 #> [11169,]  217 #> [11170,]  216 #> [11171,]  216 #> [11172,]  216 #> [11173,]  216 #> [11174,]  216 #> [11175,]  216 #> [11176,]  216 #> [11177,]  216 #> [11178,]  216 #> [11179,]  216 #> [11180,]  216 #> [11181,]  216 #> [11182,]  217 #> [11183,]  216 #> [11184,]  216 #> [11185,]  216 #> [11186,]  216 #> [11187,]  216 #> [11188,]  216 #> [11189,]  216 #> [11190,]  216 #> [11191,]  216 #> [11192,]  217 #> [11193,]  217 #> [11194,]  216 #> [11195,]  216 #> [11196,]  217 #> [11197,]  217 #> [11198,]  216 #> [11199,]  216 #> [11200,]  216 #> [11201,]  219 #> [11202,]  218 #> [11203,]  218 #> [11204,]  218 #> [11205,]  218 #> [11206,]  218 #> [11207,]  218 #> [11208,]  218 #> [11209,]  219 #> [11210,]  218 #> [11211,]  218 #> [11212,]  218 #> [11213,]  219 #> [11214,]  218 #> [11215,]  218 #> [11216,]  218 #> [11217,]  219 #> [11218,]  219 #> [11219,]  218 #> [11220,]  218 #> [11221,]  218 #> [11222,]  218 #> [11223,]  218 #> [11224,]  218 #> [11225,]  218 #> [11226,]  218 #> [11227,]  219 #> [11228,]  218 #> [11229,]  218 #> [11230,]  218 #> [11231,]  218 #> [11232,]  218 #> [11233,]  218 #> [11234,]  218 #> [11235,]  218 #> [11236,]  219 #> [11237,]  218 #> [11238,]  218 #> [11239,]  218 #> [11240,]  218 #> [11241,]  218 #> [11242,]  219 #> [11243,]  218 #> [11244,]  218 #> [11245,]  218 #> [11246,]  218 #> [11247,]  218 #> [11248,]  218 #> [11249,]  218 #> [11250,]  218 #> [11251,]  219 #> [11252,]  218 #> [11253,]  219 #> [11254,]  218 #> [11255,]  218 #> [11256,]  218 #> [11257,]  218 #> [11258,]  218 #> [11259,]  218 #> [11260,]  218 #> [11261,]  218 #> [11262,]  218 #> [11263,]  218 #> [11264,]  218 #> [11265,]  219 #> [11266,]  219 #> [11267,]  218 #> [11268,]  218 #> [11269,]  218 #> [11270,]  218 #> [11271,]  218 #> [11272,]  218 #> [11273,]  218 #> [11274,]  218 #> [11275,]  218 #> [11276,]  218 #> [11277,]  218 #> [11278,]  218 #> [11279,]  219 #> [11280,]  218 #> [11281,]  218 #> [11282,]  219 #> [11283,]  218 #> [11284,]  219 #> [11285,]  218 #> [11286,]  218 #> [11287,]  219 #> [11288,]  218 #> [11289,]  218 #> [11290,]  218 #> [11291,]  219 #> [11292,]  218 #> [11293,]  219 #> [11294,]  219 #> [11295,]  218 #> [11296,]  218 #> [11297,]  218 #> [11298,]  218 #> [11299,]  218 #> [11300,]  218 #> [11301,]  221 #> [11302,]  221 #> [11303,]  221 #> [11304,]  220 #> [11305,]  221 #> [11306,]  221 #> [11307,]  221 #> [11308,]  220 #> [11309,]  220 #> [11310,]  221 #> [11311,]  220 #> [11312,]  221 #> [11313,]  220 #> [11314,]  221 #> [11315,]  221 #> [11316,]  221 #> [11317,]  220 #> [11318,]  221 #> [11319,]  221 #> [11320,]  221 #> [11321,]  221 #> [11322,]  220 #> [11323,]  221 #> [11324,]  221 #> [11325,]  221 #> [11326,]  221 #> [11327,]  220 #> [11328,]  221 #> [11329,]  221 #> [11330,]  221 #> [11331,]  221 #> [11332,]  221 #> [11333,]  221 #> [11334,]  221 #> [11335,]  220 #> [11336,]  221 #> [11337,]  221 #> [11338,]  221 #> [11339,]  221 #> [11340,]  221 #> [11341,]  221 #> [11342,]  221 #> [11343,]  220 #> [11344,]  220 #> [11345,]  221 #> [11346,]  221 #> [11347,]  221 #> [11348,]  221 #> [11349,]  220 #> [11350,]  221 #> [11351,]  221 #> [11352,]  220 #> [11353,]  221 #> [11354,]  221 #> [11355,]  220 #> [11356,]  221 #> [11357,]  221 #> [11358,]  220 #> [11359,]  221 #> [11360,]  221 #> [11361,]  221 #> [11362,]  221 #> [11363,]  221 #> [11364,]  221 #> [11365,]  221 #> [11366,]  220 #> [11367,]  221 #> [11368,]  221 #> [11369,]  221 #> [11370,]  221 #> [11371,]  221 #> [11372,]  221 #> [11373,]  221 #> [11374,]  221 #> [11375,]  221 #> [11376,]  221 #> [11377,]  221 #> [11378,]  221 #> [11379,]  220 #> [11380,]  220 #> [11381,]  220 #> [11382,]  220 #> [11383,]  220 #> [11384,]  221 #> [11385,]  221 #> [11386,]  221 #> [11387,]  220 #> [11388,]  220 #> [11389,]  220 #> [11390,]  220 #> [11391,]  221 #> [11392,]  220 #> [11393,]  221 #> [11394,]  221 #> [11395,]  220 #> [11396,]  221 #> [11397,]  221 #> [11398,]  221 #> [11399,]  220 #> [11400,]  221 #> [11401,]  223 #> [11402,]  222 #> [11403,]  222 #> [11404,]  222 #> [11405,]  222 #> [11406,]  223 #> [11407,]  222 #> [11408,]  222 #> [11409,]  222 #> [11410,]  222 #> [11411,]  222 #> [11412,]  222 #> [11413,]  223 #> [11414,]  223 #> [11415,]  223 #> [11416,]  223 #> [11417,]  223 #> [11418,]  222 #> [11419,]  222 #> [11420,]  222 #> [11421,]  223 #> [11422,]  222 #> [11423,]  222 #> [11424,]  222 #> [11425,]  222 #> [11426,]  222 #> [11427,]  222 #> [11428,]  222 #> [11429,]  223 #> [11430,]  222 #> [11431,]  222 #> [11432,]  222 #> [11433,]  223 #> [11434,]  222 #> [11435,]  222 #> [11436,]  222 #> [11437,]  222 #> [11438,]  222 #> [11439,]  222 #> [11440,]  222 #> [11441,]  223 #> [11442,]  222 #> [11443,]  222 #> [11444,]  223 #> [11445,]  222 #> [11446,]  222 #> [11447,]  222 #> [11448,]  222 #> [11449,]  222 #> [11450,]  223 #> [11451,]  222 #> [11452,]  222 #> [11453,]  222 #> [11454,]  222 #> [11455,]  222 #> [11456,]  222 #> [11457,]  222 #> [11458,]  222 #> [11459,]  223 #> [11460,]  222 #> [11461,]  223 #> [11462,]  222 #> [11463,]  222 #> [11464,]  222 #> [11465,]  222 #> [11466,]  222 #> [11467,]  222 #> [11468,]  223 #> [11469,]  222 #> [11470,]  223 #> [11471,]  222 #> [11472,]  222 #> [11473,]  223 #> [11474,]  222 #> [11475,]  222 #> [11476,]  223 #> [11477,]  222 #> [11478,]  222 #> [11479,]  222 #> [11480,]  222 #> [11481,]  223 #> [11482,]  222 #> [11483,]  223 #> [11484,]  222 #> [11485,]  222 #> [11486,]  223 #> [11487,]  222 #> [11488,]  222 #> [11489,]  222 #> [11490,]  222 #> [11491,]  222 #> [11492,]  222 #> [11493,]  222 #> [11494,]  222 #> [11495,]  222 #> [11496,]  223 #> [11497,]  222 #> [11498,]  222 #> [11499,]  223 #> [11500,]  222 #> [11501,]  225 #> [11502,]  225 #> [11503,]  224 #> [11504,]  225 #> [11505,]  225 #> [11506,]  225 #> [11507,]  225 #> [11508,]  225 #> [11509,]  225 #> [11510,]  225 #> [11511,]  224 #> [11512,]  224 #> [11513,]  225 #> [11514,]  224 #> [11515,]  225 #> [11516,]  225 #> [11517,]  225 #> [11518,]  225 #> [11519,]  224 #> [11520,]  224 #> [11521,]  225 #> [11522,]  224 #> [11523,]  225 #> [11524,]  224 #> [11525,]  225 #> [11526,]  224 #> [11527,]  225 #> [11528,]  225 #> [11529,]  224 #> [11530,]  224 #> [11531,]  225 #> [11532,]  224 #> [11533,]  225 #> [11534,]  224 #> [11535,]  225 #> [11536,]  224 #> [11537,]  225 #> [11538,]  225 #> [11539,]  225 #> [11540,]  224 #> [11541,]  224 #> [11542,]  224 #> [11543,]  225 #> [11544,]  225 #> [11545,]  225 #> [11546,]  225 #> [11547,]  225 #> [11548,]  224 #> [11549,]  225 #> [11550,]  225 #> [11551,]  224 #> [11552,]  225 #> [11553,]  225 #> [11554,]  224 #> [11555,]  225 #> [11556,]  225 #> [11557,]  225 #> [11558,]  225 #> [11559,]  225 #> [11560,]  224 #> [11561,]  225 #> [11562,]  224 #> [11563,]  224 #> [11564,]  225 #> [11565,]  225 #> [11566,]  224 #> [11567,]  224 #> [11568,]  224 #> [11569,]  224 #> [11570,]  225 #> [11571,]  225 #> [11572,]  225 #> [11573,]  225 #> [11574,]  225 #> [11575,]  225 #> [11576,]  225 #> [11577,]  225 #> [11578,]  224 #> [11579,]  225 #> [11580,]  224 #> [11581,]  224 #> [11582,]  225 #> [11583,]  224 #> [11584,]  225 #> [11585,]  225 #> [11586,]  225 #> [11587,]  225 #> [11588,]  225 #> [11589,]  224 #> [11590,]  225 #> [11591,]  224 #> [11592,]  225 #> [11593,]  225 #> [11594,]  225 #> [11595,]  225 #> [11596,]  225 #> [11597,]  225 #> [11598,]  225 #> [11599,]  225 #> [11600,]  225 #> [11601,]  227 #> [11602,]  227 #> [11603,]  227 #> [11604,]  227 #> [11605,]  227 #> [11606,]  227 #> [11607,]  227 #> [11608,]  227 #> [11609,]  227 #> [11610,]  227 #> [11611,]  227 #> [11612,]  226 #> [11613,]  227 #> [11614,]  227 #> [11615,]  226 #> [11616,]  227 #> [11617,]  226 #> [11618,]  227 #> [11619,]  227 #> [11620,]  227 #> [11621,]  227 #> [11622,]  227 #> [11623,]  226 #> [11624,]  227 #> [11625,]  227 #> [11626,]  227 #> [11627,]  227 #> [11628,]  227 #> [11629,]  226 #> [11630,]  227 #> [11631,]  226 #> [11632,]  227 #> [11633,]  227 #> [11634,]  226 #> [11635,]  227 #> [11636,]  227 #> [11637,]  226 #> [11638,]  227 #> [11639,]  227 #> [11640,]  227 #> [11641,]  227 #> [11642,]  226 #> [11643,]  226 #> [11644,]  226 #> [11645,]  227 #> [11646,]  227 #> [11647,]  227 #> [11648,]  226 #> [11649,]  227 #> [11650,]  227 #> [11651,]  227 #> [11652,]  227 #> [11653,]  227 #> [11654,]  227 #> [11655,]  227 #> [11656,]  227 #> [11657,]  227 #> [11658,]  227 #> [11659,]  227 #> [11660,]  227 #> [11661,]  227 #> [11662,]  227 #> [11663,]  226 #> [11664,]  226 #> [11665,]  227 #> [11666,]  227 #> [11667,]  227 #> [11668,]  227 #> [11669,]  227 #> [11670,]  226 #> [11671,]  227 #> [11672,]  227 #> [11673,]  227 #> [11674,]  227 #> [11675,]  226 #> [11676,]  227 #> [11677,]  227 #> [11678,]  226 #> [11679,]  226 #> [11680,]  227 #> [11681,]  226 #> [11682,]  227 #> [11683,]  227 #> [11684,]  227 #> [11685,]  227 #> [11686,]  227 #> [11687,]  227 #> [11688,]  227 #> [11689,]  227 #> [11690,]  227 #> [11691,]  227 #> [11692,]  227 #> [11693,]  227 #> [11694,]  226 #> [11695,]  226 #> [11696,]  227 #> [11697,]  227 #> [11698,]  227 #> [11699,]  227 #> [11700,]  226 #> [11701,]  229 #> [11702,]  228 #> [11703,]  229 #> [11704,]  229 #> [11705,]  229 #> [11706,]  228 #> [11707,]  229 #> [11708,]  229 #> [11709,]  229 #> [11710,]  229 #> [11711,]  228 #> [11712,]  228 #> [11713,]  229 #> [11714,]  229 #> [11715,]  228 #> [11716,]  229 #> [11717,]  228 #> [11718,]  228 #> [11719,]  228 #> [11720,]  229 #> [11721,]  228 #> [11722,]  229 #> [11723,]  228 #> [11724,]  229 #> [11725,]  229 #> [11726,]  228 #> [11727,]  229 #> [11728,]  229 #> [11729,]  228 #> [11730,]  228 #> [11731,]  228 #> [11732,]  228 #> [11733,]  229 #> [11734,]  228 #> [11735,]  228 #> [11736,]  229 #> [11737,]  228 #> [11738,]  228 #> [11739,]  229 #> [11740,]  229 #> [11741,]  229 #> [11742,]  228 #> [11743,]  228 #> [11744,]  228 #> [11745,]  229 #> [11746,]  228 #> [11747,]  228 #> [11748,]  228 #> [11749,]  229 #> [11750,]  229 #> [11751,]  228 #> [11752,]  229 #> [11753,]  229 #> [11754,]  229 #> [11755,]  229 #> [11756,]  228 #> [11757,]  229 #> [11758,]  229 #> [11759,]  229 #> [11760,]  228 #> [11761,]  228 #> [11762,]  228 #> [11763,]  228 #> [11764,]  228 #> [11765,]  228 #> [11766,]  228 #> [11767,]  229 #> [11768,]  228 #> [11769,]  228 #> [11770,]  228 #> [11771,]  229 #> [11772,]  229 #> [11773,]  229 #> [11774,]  229 #> [11775,]  228 #> [11776,]  229 #> [11777,]  229 #> [11778,]  228 #> [11779,]  228 #> [11780,]  229 #> [11781,]  228 #> [11782,]  228 #> [11783,]  229 #> [11784,]  229 #> [11785,]  229 #> [11786,]  229 #> [11787,]  229 #> [11788,]  229 #> [11789,]  228 #> [11790,]  229 #> [11791,]  229 #> [11792,]  228 #> [11793,]  228 #> [11794,]  228 #> [11795,]  228 #> [11796,]  228 #> [11797,]  228 #> [11798,]  228 #> [11799,]  229 #> [11800,]  228 #> [11801,]  230 #> [11802,]  230 #> [11803,]  230 #> [11804,]  230 #> [11805,]  230 #> [11806,]  230 #> [11807,]  230 #> [11808,]  230 #> [11809,]  230 #> [11810,]  230 #> [11811,]  230 #> [11812,]  230 #> [11813,]  230 #> [11814,]  230 #> [11815,]  230 #> [11816,]  230 #> [11817,]  230 #> [11818,]  230 #> [11819,]  230 #> [11820,]  230 #> [11821,]  230 #> [11822,]  230 #> [11823,]  230 #> [11824,]  230 #> [11825,]  230 #> [11826,]  230 #> [11827,]  230 #> [11828,]  230 #> [11829,]  230 #> [11830,]  230 #> [11831,]  230 #> [11832,]  230 #> [11833,]  230 #> [11834,]  230 #> [11835,]  230 #> [11836,]  230 #> [11837,]  230 #> [11838,]  230 #> [11839,]  230 #> [11840,]  230 #> [11841,]  230 #> [11842,]  230 #> [11843,]  230 #> [11844,]  230 #> [11845,]  230 #> [11846,]  230 #> [11847,]  230 #> [11848,]  230 #> [11849,]  230 #> [11850,]  230 #> [11851,]  230 #> [11852,]  230 #> [11853,]  230 #> [11854,]  230 #> [11855,]  230 #> [11856,]  230 #> [11857,]  230 #> [11858,]  230 #> [11859,]  230 #> [11860,]  230 #> [11861,]  230 #> [11862,]  230 #> [11863,]  230 #> [11864,]  230 #> [11865,]  230 #> [11866,]  230 #> [11867,]  230 #> [11868,]  230 #> [11869,]  230 #> [11870,]  230 #> [11871,]  230 #> [11872,]  230 #> [11873,]  230 #> [11874,]  230 #> [11875,]  230 #> [11876,]  230 #> [11877,]  230 #> [11878,]  230 #> [11879,]  230 #> [11880,]  230 #> [11881,]  230 #> [11882,]  230 #> [11883,]  230 #> [11884,]  230 #> [11885,]  230 #> [11886,]  230 #> [11887,]  230 #> [11888,]  230 #> [11889,]  230 #> [11890,]  230 #> [11891,]  230 #> [11892,]  230 #> [11893,]  230 #> [11894,]  230 #> [11895,]  230 #> [11896,]  230 #> [11897,]  230 #> [11898,]  230 #> [11899,]  230 #> [11900,]  230 #> [11901,]  232 #> [11902,]  232 #> [11903,]  232 #> [11904,]  231 #> [11905,]  232 #> [11906,]  232 #> [11907,]  232 #> [11908,]  231 #> [11909,]  231 #> [11910,]  231 #> [11911,]  232 #> [11912,]  232 #> [11913,]  232 #> [11914,]  232 #> [11915,]  232 #> [11916,]  232 #> [11917,]  232 #> [11918,]  232 #> [11919,]  232 #> [11920,]  232 #> [11921,]  232 #> [11922,]  232 #> [11923,]  232 #> [11924,]  232 #> [11925,]  232 #> [11926,]  232 #> [11927,]  232 #> [11928,]  232 #> [11929,]  232 #> [11930,]  232 #> [11931,]  232 #> [11932,]  232 #> [11933,]  232 #> [11934,]  232 #> [11935,]  232 #> [11936,]  232 #> [11937,]  232 #> [11938,]  232 #> [11939,]  232 #> [11940,]  232 #> [11941,]  232 #> [11942,]  232 #> [11943,]  231 #> [11944,]  232 #> [11945,]  232 #> [11946,]  232 #> [11947,]  232 #> [11948,]  232 #> [11949,]  232 #> [11950,]  232 #> [11951,]  231 #> [11952,]  232 #> [11953,]  232 #> [11954,]  232 #> [11955,]  232 #> [11956,]  232 #> [11957,]  232 #> [11958,]  232 #> [11959,]  232 #> [11960,]  231 #> [11961,]  232 #> [11962,]  232 #> [11963,]  232 #> [11964,]  231 #> [11965,]  232 #> [11966,]  232 #> [11967,]  231 #> [11968,]  232 #> [11969,]  232 #> [11970,]  232 #> [11971,]  232 #> [11972,]  232 #> [11973,]  232 #> [11974,]  232 #> [11975,]  232 #> [11976,]  232 #> [11977,]  232 #> [11978,]  232 #> [11979,]  232 #> [11980,]  232 #> [11981,]  232 #> [11982,]  232 #> [11983,]  232 #> [11984,]  232 #> [11985,]  231 #> [11986,]  232 #> [11987,]  232 #> [11988,]  232 #> [11989,]  232 #> [11990,]  232 #> [11991,]  231 #> [11992,]  232 #> [11993,]  232 #> [11994,]  232 #> [11995,]  231 #> [11996,]  232 #> [11997,]  232 #> [11998,]  232 #> [11999,]  232 #> [12000,]  232 #> [12001,]  233 #> [12002,]  233 #> [12003,]  234 #> [12004,]  233 #> [12005,]  233 #> [12006,]  234 #> [12007,]  233 #> [12008,]  233 #> [12009,]  233 #> [12010,]  233 #> [12011,]  233 #> [12012,]  233 #> [12013,]  233 #> [12014,]  233 #> [12015,]  233 #> [12016,]  233 #> [12017,]  233 #> [12018,]  233 #> [12019,]  234 #> [12020,]  233 #> [12021,]  233 #> [12022,]  233 #> [12023,]  233 #> [12024,]  233 #> [12025,]  233 #> [12026,]  233 #> [12027,]  233 #> [12028,]  233 #> [12029,]  233 #> [12030,]  233 #> [12031,]  233 #> [12032,]  233 #> [12033,]  233 #> [12034,]  234 #> [12035,]  233 #> [12036,]  233 #> [12037,]  233 #> [12038,]  233 #> [12039,]  233 #> [12040,]  233 #> [12041,]  233 #> [12042,]  233 #> [12043,]  233 #> [12044,]  233 #> [12045,]  233 #> [12046,]  233 #> [12047,]  233 #> [12048,]  233 #> [12049,]  233 #> [12050,]  233 #> [12051,]  233 #> [12052,]  233 #> [12053,]  233 #> [12054,]  233 #> [12055,]  233 #> [12056,]  233 #> [12057,]  233 #> [12058,]  233 #> [12059,]  233 #> [12060,]  234 #> [12061,]  233 #> [12062,]  233 #> [12063,]  233 #> [12064,]  233 #> [12065,]  234 #> [12066,]  233 #> [12067,]  233 #> [12068,]  233 #> [12069,]  233 #> [12070,]  234 #> [12071,]  233 #> [12072,]  233 #> [12073,]  234 #> [12074,]  233 #> [12075,]  233 #> [12076,]  233 #> [12077,]  233 #> [12078,]  233 #> [12079,]  233 #> [12080,]  233 #> [12081,]  233 #> [12082,]  233 #> [12083,]  233 #> [12084,]  233 #> [12085,]  233 #> [12086,]  233 #> [12087,]  233 #> [12088,]  233 #> [12089,]  233 #> [12090,]  233 #> [12091,]  233 #> [12092,]  233 #> [12093,]  234 #> [12094,]  233 #> [12095,]  233 #> [12096,]  233 #> [12097,]  233 #> [12098,]  233 #> [12099,]  233 #> [12100,]  233 #> [12101,]  236 #> [12102,]  236 #> [12103,]  236 #> [12104,]  236 #> [12105,]  236 #> [12106,]  236 #> [12107,]  236 #> [12108,]  236 #> [12109,]  236 #> [12110,]  236 #> [12111,]  236 #> [12112,]  235 #> [12113,]  236 #> [12114,]  236 #> [12115,]  236 #> [12116,]  236 #> [12117,]  236 #> [12118,]  236 #> [12119,]  236 #> [12120,]  236 #> [12121,]  236 #> [12122,]  236 #> [12123,]  236 #> [12124,]  236 #> [12125,]  236 #> [12126,]  236 #> [12127,]  236 #> [12128,]  236 #> [12129,]  236 #> [12130,]  236 #> [12131,]  235 #> [12132,]  236 #> [12133,]  236 #> [12134,]  236 #> [12135,]  236 #> [12136,]  236 #> [12137,]  236 #> [12138,]  236 #> [12139,]  236 #> [12140,]  236 #> [12141,]  236 #> [12142,]  236 #> [12143,]  236 #> [12144,]  236 #> [12145,]  236 #> [12146,]  236 #> [12147,]  236 #> [12148,]  236 #> [12149,]  236 #> [12150,]  236 #> [12151,]  236 #> [12152,]  235 #> [12153,]  236 #> [12154,]  236 #> [12155,]  236 #> [12156,]  236 #> [12157,]  236 #> [12158,]  236 #> [12159,]  235 #> [12160,]  235 #> [12161,]  236 #> [12162,]  236 #> [12163,]  236 #> [12164,]  236 #> [12165,]  236 #> [12166,]  236 #> [12167,]  236 #> [12168,]  236 #> [12169,]  236 #> [12170,]  236 #> [12171,]  236 #> [12172,]  236 #> [12173,]  236 #> [12174,]  236 #> [12175,]  236 #> [12176,]  236 #> [12177,]  236 #> [12178,]  236 #> [12179,]  236 #> [12180,]  236 #> [12181,]  236 #> [12182,]  236 #> [12183,]  236 #> [12184,]  236 #> [12185,]  236 #> [12186,]  236 #> [12187,]  236 #> [12188,]  236 #> [12189,]  236 #> [12190,]  236 #> [12191,]  236 #> [12192,]  236 #> [12193,]  236 #> [12194,]  236 #> [12195,]  236 #> [12196,]  236 #> [12197,]  236 #> [12198,]  236 #> [12199,]  236 #> [12200,]  236 #> [12201,]  237 #> [12202,]  237 #> [12203,]  237 #> [12204,]  238 #> [12205,]  237 #> [12206,]  237 #> [12207,]  237 #> [12208,]  237 #> [12209,]  237 #> [12210,]  237 #> [12211,]  237 #> [12212,]  237 #> [12213,]  237 #> [12214,]  238 #> [12215,]  237 #> [12216,]  237 #> [12217,]  237 #> [12218,]  237 #> [12219,]  237 #> [12220,]  237 #> [12221,]  237 #> [12222,]  237 #> [12223,]  237 #> [12224,]  237 #> [12225,]  237 #> [12226,]  237 #> [12227,]  237 #> [12228,]  237 #> [12229,]  237 #> [12230,]  237 #> [12231,]  237 #> [12232,]  237 #> [12233,]  237 #> [12234,]  237 #> [12235,]  237 #> [12236,]  237 #> [12237,]  237 #> [12238,]  237 #> [12239,]  237 #> [12240,]  237 #> [12241,]  237 #> [12242,]  237 #> [12243,]  237 #> [12244,]  237 #> [12245,]  237 #> [12246,]  237 #> [12247,]  237 #> [12248,]  237 #> [12249,]  237 #> [12250,]  237 #> [12251,]  237 #> [12252,]  237 #> [12253,]  237 #> [12254,]  237 #> [12255,]  237 #> [12256,]  237 #> [12257,]  237 #> [12258,]  237 #> [12259,]  237 #> [12260,]  237 #> [12261,]  238 #> [12262,]  237 #> [12263,]  237 #> [12264,]  237 #> [12265,]  237 #> [12266,]  237 #> [12267,]  237 #> [12268,]  237 #> [12269,]  237 #> [12270,]  237 #> [12271,]  237 #> [12272,]  237 #> [12273,]  237 #> [12274,]  237 #> [12275,]  237 #> [12276,]  237 #> [12277,]  237 #> [12278,]  237 #> [12279,]  237 #> [12280,]  237 #> [12281,]  237 #> [12282,]  238 #> [12283,]  237 #> [12284,]  237 #> [12285,]  237 #> [12286,]  237 #> [12287,]  237 #> [12288,]  237 #> [12289,]  237 #> [12290,]  237 #> [12291,]  237 #> [12292,]  238 #> [12293,]  238 #> [12294,]  237 #> [12295,]  237 #> [12296,]  238 #> [12297,]  237 #> [12298,]  237 #> [12299,]  237 #> [12300,]  237 #> [12301,]  239 #> [12302,]  240 #> [12303,]  239 #> [12304,]  239 #> [12305,]  240 #> [12306,]  239 #> [12307,]  240 #> [12308,]  239 #> [12309,]  240 #> [12310,]  240 #> [12311,]  239 #> [12312,]  240 #> [12313,]  240 #> [12314,]  239 #> [12315,]  239 #> [12316,]  239 #> [12317,]  240 #> [12318,]  240 #> [12319,]  239 #> [12320,]  240 #> [12321,]  240 #> [12322,]  240 #> [12323,]  240 #> [12324,]  240 #> [12325,]  239 #> [12326,]  239 #> [12327,]  240 #> [12328,]  239 #> [12329,]  240 #> [12330,]  240 #> [12331,]  240 #> [12332,]  240 #> [12333,]  240 #> [12334,]  239 #> [12335,]  239 #> [12336,]  240 #> [12337,]  239 #> [12338,]  239 #> [12339,]  240 #> [12340,]  240 #> [12341,]  240 #> [12342,]  239 #> [12343,]  239 #> [12344,]  240 #> [12345,]  239 #> [12346,]  239 #> [12347,]  240 #> [12348,]  240 #> [12349,]  239 #> [12350,]  240 #> [12351,]  240 #> [12352,]  239 #> [12353,]  240 #> [12354,]  240 #> [12355,]  239 #> [12356,]  239 #> [12357,]  239 #> [12358,]  240 #> [12359,]  239 #> [12360,]  240 #> [12361,]  240 #> [12362,]  239 #> [12363,]  240 #> [12364,]  239 #> [12365,]  239 #> [12366,]  239 #> [12367,]  239 #> [12368,]  239 #> [12369,]  239 #> [12370,]  240 #> [12371,]  240 #> [12372,]  239 #> [12373,]  239 #> [12374,]  240 #> [12375,]  240 #> [12376,]  240 #> [12377,]  239 #> [12378,]  240 #> [12379,]  239 #> [12380,]  240 #> [12381,]  240 #> [12382,]  239 #> [12383,]  240 #> [12384,]  240 #> [12385,]  239 #> [12386,]  240 #> [12387,]  240 #> [12388,]  240 #> [12389,]  239 #> [12390,]  240 #> [12391,]  239 #> [12392,]  240 #> [12393,]  240 #> [12394,]  239 #> [12395,]  240 #> [12396,]  239 #> [12397,]  239 #> [12398,]  239 #> [12399,]  239 #> [12400,]  239 #> [12401,]  241 #> [12402,]  241 #> [12403,]  241 #> [12404,]  241 #> [12405,]  241 #> [12406,]  241 #> [12407,]  241 #> [12408,]  241 #> [12409,]  241 #> [12410,]  241 #> [12411,]  241 #> [12412,]  241 #> [12413,]  242 #> [12414,]  241 #> [12415,]  242 #> [12416,]  241 #> [12417,]  241 #> [12418,]  241 #> [12419,]  242 #> [12420,]  242 #> [12421,]  241 #> [12422,]  242 #> [12423,]  241 #> [12424,]  241 #> [12425,]  241 #> [12426,]  241 #> [12427,]  242 #> [12428,]  241 #> [12429,]  242 #> [12430,]  241 #> [12431,]  241 #> [12432,]  241 #> [12433,]  241 #> [12434,]  241 #> [12435,]  241 #> [12436,]  242 #> [12437,]  242 #> [12438,]  242 #> [12439,]  241 #> [12440,]  241 #> [12441,]  241 #> [12442,]  241 #> [12443,]  241 #> [12444,]  241 #> [12445,]  241 #> [12446,]  242 #> [12447,]  241 #> [12448,]  241 #> [12449,]  241 #> [12450,]  241 #> [12451,]  241 #> [12452,]  241 #> [12453,]  242 #> [12454,]  241 #> [12455,]  242 #> [12456,]  241 #> [12457,]  241 #> [12458,]  242 #> [12459,]  241 #> [12460,]  241 #> [12461,]  241 #> [12462,]  241 #> [12463,]  241 #> [12464,]  242 #> [12465,]  241 #> [12466,]  242 #> [12467,]  241 #> [12468,]  241 #> [12469,]  242 #> [12470,]  241 #> [12471,]  242 #> [12472,]  241 #> [12473,]  241 #> [12474,]  241 #> [12475,]  241 #> [12476,]  241 #> [12477,]  242 #> [12478,]  241 #> [12479,]  241 #> [12480,]  242 #> [12481,]  242 #> [12482,]  241 #> [12483,]  242 #> [12484,]  241 #> [12485,]  241 #> [12486,]  241 #> [12487,]  242 #> [12488,]  241 #> [12489,]  241 #> [12490,]  242 #> [12491,]  241 #> [12492,]  241 #> [12493,]  241 #> [12494,]  241 #> [12495,]  241 #> [12496,]  242 #> [12497,]  242 #> [12498,]  241 #> [12499,]  241 #> [12500,]  242 #> [12501,]  244 #> [12502,]  244 #> [12503,]  244 #> [12504,]  244 #> [12505,]  244 #> [12506,]  244 #> [12507,]  243 #> [12508,]  244 #> [12509,]  244 #> [12510,]  244 #> [12511,]  244 #> [12512,]  244 #> [12513,]  244 #> [12514,]  244 #> [12515,]  244 #> [12516,]  244 #> [12517,]  244 #> [12518,]  244 #> [12519,]  244 #> [12520,]  244 #> [12521,]  243 #> [12522,]  244 #> [12523,]  244 #> [12524,]  244 #> [12525,]  244 #> [12526,]  244 #> [12527,]  244 #> [12528,]  244 #> [12529,]  244 #> [12530,]  244 #> [12531,]  244 #> [12532,]  244 #> [12533,]  244 #> [12534,]  244 #> [12535,]  244 #> [12536,]  244 #> [12537,]  244 #> [12538,]  244 #> [12539,]  243 #> [12540,]  244 #> [12541,]  244 #> [12542,]  244 #> [12543,]  244 #> [12544,]  244 #> [12545,]  244 #> [12546,]  244 #> [12547,]  244 #> [12548,]  244 #> [12549,]  243 #> [12550,]  244 #> [12551,]  244 #> [12552,]  244 #> [12553,]  244 #> [12554,]  244 #> [12555,]  244 #> [12556,]  244 #> [12557,]  244 #> [12558,]  244 #> [12559,]  244 #> [12560,]  244 #> [12561,]  244 #> [12562,]  243 #> [12563,]  244 #> [12564,]  244 #> [12565,]  244 #> [12566,]  244 #> [12567,]  244 #> [12568,]  244 #> [12569,]  244 #> [12570,]  243 #> [12571,]  244 #> [12572,]  244 #> [12573,]  244 #> [12574,]  244 #> [12575,]  244 #> [12576,]  244 #> [12577,]  244 #> [12578,]  244 #> [12579,]  244 #> [12580,]  243 #> [12581,]  244 #> [12582,]  244 #> [12583,]  244 #> [12584,]  244 #> [12585,]  244 #> [12586,]  244 #> [12587,]  244 #> [12588,]  244 #> [12589,]  244 #> [12590,]  244 #> [12591,]  244 #> [12592,]  244 #> [12593,]  244 #> [12594,]  244 #> [12595,]  243 #> [12596,]  244 #> [12597,]  244 #> [12598,]  244 #> [12599,]  244 #> [12600,]  244 #> [12601,]  246 #> [12602,]  246 #> [12603,]  245 #> [12604,]  246 #> [12605,]  246 #> [12606,]  246 #> [12607,]  246 #> [12608,]  246 #> [12609,]  246 #> [12610,]  245 #> [12611,]  245 #> [12612,]  246 #> [12613,]  246 #> [12614,]  245 #> [12615,]  246 #> [12616,]  246 #> [12617,]  246 #> [12618,]  246 #> [12619,]  246 #> [12620,]  246 #> [12621,]  245 #> [12622,]  246 #> [12623,]  246 #> [12624,]  246 #> [12625,]  246 #> [12626,]  246 #> [12627,]  246 #> [12628,]  245 #> [12629,]  246 #> [12630,]  246 #> [12631,]  245 #> [12632,]  245 #> [12633,]  246 #> [12634,]  245 #> [12635,]  246 #> [12636,]  246 #> [12637,]  246 #> [12638,]  246 #> [12639,]  246 #> [12640,]  245 #> [12641,]  246 #> [12642,]  246 #> [12643,]  246 #> [12644,]  246 #> [12645,]  246 #> [12646,]  246 #> [12647,]  246 #> [12648,]  245 #> [12649,]  246 #> [12650,]  246 #> [12651,]  246 #> [12652,]  246 #> [12653,]  246 #> [12654,]  246 #> [12655,]  246 #> [12656,]  246 #> [12657,]  246 #> [12658,]  246 #> [12659,]  246 #> [12660,]  246 #> [12661,]  246 #> [12662,]  246 #> [12663,]  246 #> [12664,]  246 #> [12665,]  246 #> [12666,]  246 #> [12667,]  246 #> [12668,]  246 #> [12669,]  246 #> [12670,]  245 #> [12671,]  246 #> [12672,]  246 #> [12673,]  246 #> [12674,]  245 #> [12675,]  246 #> [12676,]  246 #> [12677,]  246 #> [12678,]  246 #> [12679,]  246 #> [12680,]  246 #> [12681,]  246 #> [12682,]  245 #> [12683,]  246 #> [12684,]  246 #> [12685,]  246 #> [12686,]  246 #> [12687,]  246 #> [12688,]  246 #> [12689,]  246 #> [12690,]  246 #> [12691,]  246 #> [12692,]  246 #> [12693,]  246 #> [12694,]  246 #> [12695,]  246 #> [12696,]  246 #> [12697,]  246 #> [12698,]  245 #> [12699,]  246 #> [12700,]  246 #> [12701,]  247 #> [12702,]  247 #> [12703,]  247 #> [12704,]  248 #> [12705,]  247 #> [12706,]  247 #> [12707,]  248 #> [12708,]  247 #> [12709,]  247 #> [12710,]  248 #> [12711,]  247 #> [12712,]  247 #> [12713,]  247 #> [12714,]  247 #> [12715,]  248 #> [12716,]  248 #> [12717,]  247 #> [12718,]  248 #> [12719,]  247 #> [12720,]  247 #> [12721,]  248 #> [12722,]  247 #> [12723,]  248 #> [12724,]  247 #> [12725,]  248 #> [12726,]  247 #> [12727,]  248 #> [12728,]  248 #> [12729,]  247 #> [12730,]  247 #> [12731,]  247 #> [12732,]  247 #> [12733,]  247 #> [12734,]  247 #> [12735,]  247 #> [12736,]  247 #> [12737,]  247 #> [12738,]  247 #> [12739,]  248 #> [12740,]  247 #> [12741,]  247 #> [12742,]  247 #> [12743,]  248 #> [12744,]  247 #> [12745,]  248 #> [12746,]  247 #> [12747,]  248 #> [12748,]  247 #> [12749,]  247 #> [12750,]  247 #> [12751,]  247 #> [12752,]  247 #> [12753,]  248 #> [12754,]  247 #> [12755,]  247 #> [12756,]  247 #> [12757,]  247 #> [12758,]  247 #> [12759,]  247 #> [12760,]  247 #> [12761,]  248 #> [12762,]  247 #> [12763,]  247 #> [12764,]  248 #> [12765,]  247 #> [12766,]  247 #> [12767,]  247 #> [12768,]  247 #> [12769,]  247 #> [12770,]  247 #> [12771,]  248 #> [12772,]  248 #> [12773,]  248 #> [12774,]  248 #> [12775,]  248 #> [12776,]  248 #> [12777,]  248 #> [12778,]  247 #> [12779,]  247 #> [12780,]  247 #> [12781,]  247 #> [12782,]  247 #> [12783,]  247 #> [12784,]  248 #> [12785,]  247 #> [12786,]  247 #> [12787,]  247 #> [12788,]  248 #> [12789,]  247 #> [12790,]  247 #> [12791,]  247 #> [12792,]  247 #> [12793,]  247 #> [12794,]  248 #> [12795,]  248 #> [12796,]  247 #> [12797,]  247 #> [12798,]  247 #> [12799,]  247 #> [12800,]  248 #> [12801,]  249 #> [12802,]  249 #> [12803,]  249 #> [12804,]  249 #> [12805,]  249 #> [12806,]  249 #> [12807,]  249 #> [12808,]  249 #> [12809,]  249 #> [12810,]  249 #> [12811,]  249 #> [12812,]  249 #> [12813,]  249 #> [12814,]  249 #> [12815,]  249 #> [12816,]  249 #> [12817,]  249 #> [12818,]  249 #> [12819,]  249 #> [12820,]  249 #> [12821,]  249 #> [12822,]  249 #> [12823,]  249 #> [12824,]  249 #> [12825,]  249 #> [12826,]  249 #> [12827,]  249 #> [12828,]  249 #> [12829,]  249 #> [12830,]  249 #> [12831,]  249 #> [12832,]  249 #> [12833,]  249 #> [12834,]  249 #> [12835,]  249 #> [12836,]  249 #> [12837,]  249 #> [12838,]  249 #> [12839,]  249 #> [12840,]  249 #> [12841,]  249 #> [12842,]  249 #> [12843,]  249 #> [12844,]  249 #> [12845,]  249 #> [12846,]  249 #> [12847,]  249 #> [12848,]  249 #> [12849,]  249 #> [12850,]  249 #> [12851,]  249 #> [12852,]  249 #> [12853,]  249 #> [12854,]  249 #> [12855,]  249 #> [12856,]  249 #> [12857,]  249 #> [12858,]  249 #> [12859,]  249 #> [12860,]  249 #> [12861,]  249 #> [12862,]  249 #> [12863,]  249 #> [12864,]  249 #> [12865,]  249 #> [12866,]  249 #> [12867,]  249 #> [12868,]  249 #> [12869,]  249 #> [12870,]  249 #> [12871,]  249 #> [12872,]  249 #> [12873,]  249 #> [12874,]  249 #> [12875,]  249 #> [12876,]  249 #> [12877,]  249 #> [12878,]  249 #> [12879,]  249 #> [12880,]  249 #> [12881,]  249 #> [12882,]  249 #> [12883,]  249 #> [12884,]  249 #> [12885,]  249 #> [12886,]  249 #> [12887,]  249 #> [12888,]  249 #> [12889,]  249 #> [12890,]  249 #> [12891,]  249 #> [12892,]  249 #> [12893,]  249 #> [12894,]  249 #> [12895,]  249 #> [12896,]  249 #> [12897,]  249 #> [12898,]  249 #> [12899,]  249 #> [12900,]  249 #> [12901,]  251 #> [12902,]  251 #> [12903,]  251 #> [12904,]  251 #> [12905,]  251 #> [12906,]  251 #> [12907,]  251 #> [12908,]  251 #> [12909,]  251 #> [12910,]  251 #> [12911,]  251 #> [12912,]  251 #> [12913,]  251 #> [12914,]  251 #> [12915,]  251 #> [12916,]  251 #> [12917,]  251 #> [12918,]  251 #> [12919,]  251 #> [12920,]  251 #> [12921,]  251 #> [12922,]  251 #> [12923,]  251 #> [12924,]  251 #> [12925,]  250 #> [12926,]  251 #> [12927,]  251 #> [12928,]  251 #> [12929,]  251 #> [12930,]  251 #> [12931,]  251 #> [12932,]  251 #> [12933,]  251 #> [12934,]  251 #> [12935,]  251 #> [12936,]  251 #> [12937,]  251 #> [12938,]  251 #> [12939,]  251 #> [12940,]  251 #> [12941,]  251 #> [12942,]  251 #> [12943,]  251 #> [12944,]  251 #> [12945,]  251 #> [12946,]  251 #> [12947,]  251 #> [12948,]  251 #> [12949,]  251 #> [12950,]  251 #> [12951,]  251 #> [12952,]  251 #> [12953,]  251 #> [12954,]  251 #> [12955,]  251 #> [12956,]  250 #> [12957,]  251 #> [12958,]  251 #> [12959,]  251 #> [12960,]  251 #> [12961,]  251 #> [12962,]  251 #> [12963,]  251 #> [12964,]  251 #> [12965,]  250 #> [12966,]  251 #> [12967,]  251 #> [12968,]  251 #> [12969,]  251 #> [12970,]  251 #> [12971,]  251 #> [12972,]  251 #> [12973,]  251 #> [12974,]  251 #> [12975,]  251 #> [12976,]  251 #> [12977,]  251 #> [12978,]  251 #> [12979,]  251 #> [12980,]  250 #> [12981,]  251 #> [12982,]  251 #> [12983,]  251 #> [12984,]  251 #> [12985,]  250 #> [12986,]  251 #> [12987,]  251 #> [12988,]  251 #> [12989,]  251 #> [12990,]  251 #> [12991,]  251 #> [12992,]  251 #> [12993,]  251 #> [12994,]  251 #> [12995,]  251 #> [12996,]  251 #> [12997,]  251 #> [12998,]  251 #> [12999,]  251 #> [13000,]  251 #> [13001,]  253 #> [13002,]  252 #> [13003,]  252 #> [13004,]  253 #> [13005,]  252 #> [13006,]  253 #> [13007,]  252 #> [13008,]  252 #> [13009,]  253 #> [13010,]  253 #> [13011,]  253 #> [13012,]  253 #> [13013,]  252 #> [13014,]  253 #> [13015,]  253 #> [13016,]  252 #> [13017,]  252 #> [13018,]  253 #> [13019,]  253 #> [13020,]  252 #> [13021,]  253 #> [13022,]  252 #> [13023,]  253 #> [13024,]  252 #> [13025,]  252 #> [13026,]  253 #> [13027,]  253 #> [13028,]  252 #> [13029,]  252 #> [13030,]  253 #> [13031,]  253 #> [13032,]  253 #> [13033,]  253 #> [13034,]  253 #> [13035,]  253 #> [13036,]  253 #> [13037,]  253 #> [13038,]  253 #> [13039,]  252 #> [13040,]  252 #> [13041,]  253 #> [13042,]  253 #> [13043,]  252 #> [13044,]  252 #> [13045,]  252 #> [13046,]  252 #> [13047,]  252 #> [13048,]  253 #> [13049,]  252 #> [13050,]  252 #> [13051,]  252 #> [13052,]  253 #> [13053,]  252 #> [13054,]  252 #> [13055,]  252 #> [13056,]  252 #> [13057,]  253 #> [13058,]  253 #> [13059,]  252 #> [13060,]  253 #> [13061,]  253 #> [13062,]  253 #> [13063,]  252 #> [13064,]  253 #> [13065,]  252 #> [13066,]  252 #> [13067,]  253 #> [13068,]  253 #> [13069,]  253 #> [13070,]  252 #> [13071,]  252 #> [13072,]  252 #> [13073,]  253 #> [13074,]  253 #> [13075,]  253 #> [13076,]  252 #> [13077,]  252 #> [13078,]  252 #> [13079,]  252 #> [13080,]  253 #> [13081,]  252 #> [13082,]  253 #> [13083,]  252 #> [13084,]  252 #> [13085,]  253 #> [13086,]  252 #> [13087,]  253 #> [13088,]  253 #> [13089,]  252 #> [13090,]  252 #> [13091,]  253 #> [13092,]  253 #> [13093,]  253 #> [13094,]  252 #> [13095,]  253 #> [13096,]  253 #> [13097,]  253 #> [13098,]  252 #> [13099,]  253 #> [13100,]  252 #> [13101,]  254 #> [13102,]  254 #> [13103,]  254 #> [13104,]  255 #> [13105,]  254 #> [13106,]  254 #> [13107,]  254 #> [13108,]  254 #> [13109,]  254 #> [13110,]  255 #> [13111,]  254 #> [13112,]  254 #> [13113,]  254 #> [13114,]  254 #> [13115,]  254 #> [13116,]  254 #> [13117,]  254 #> [13118,]  255 #> [13119,]  254 #> [13120,]  254 #> [13121,]  255 #> [13122,]  254 #> [13123,]  254 #> [13124,]  254 #> [13125,]  255 #> [13126,]  254 #> [13127,]  254 #> [13128,]  254 #> [13129,]  254 #> [13130,]  254 #> [13131,]  254 #> [13132,]  254 #> [13133,]  254 #> [13134,]  254 #> [13135,]  254 #> [13136,]  254 #> [13137,]  254 #> [13138,]  254 #> [13139,]  255 #> [13140,]  254 #> [13141,]  254 #> [13142,]  254 #> [13143,]  255 #> [13144,]  254 #> [13145,]  255 #> [13146,]  254 #> [13147,]  254 #> [13148,]  254 #> [13149,]  254 #> [13150,]  254 #> [13151,]  254 #> [13152,]  254 #> [13153,]  255 #> [13154,]  254 #> [13155,]  254 #> [13156,]  254 #> [13157,]  254 #> [13158,]  254 #> [13159,]  254 #> [13160,]  254 #> [13161,]  255 #> [13162,]  254 #> [13163,]  254 #> [13164,]  254 #> [13165,]  254 #> [13166,]  254 #> [13167,]  254 #> [13168,]  254 #> [13169,]  254 #> [13170,]  254 #> [13171,]  254 #> [13172,]  255 #> [13173,]  255 #> [13174,]  255 #> [13175,]  255 #> [13176,]  255 #> [13177,]  255 #> [13178,]  254 #> [13179,]  254 #> [13180,]  254 #> [13181,]  254 #> [13182,]  254 #> [13183,]  254 #> [13184,]  255 #> [13185,]  254 #> [13186,]  254 #> [13187,]  254 #> [13188,]  254 #> [13189,]  254 #> [13190,]  254 #> [13191,]  254 #> [13192,]  254 #> [13193,]  254 #> [13194,]  255 #> [13195,]  255 #> [13196,]  254 #> [13197,]  254 #> [13198,]  254 #> [13199,]  254 #> [13200,]  255 #> [13201,]  256 #> [13202,]  256 #> [13203,]  256 #> [13204,]  257 #> [13205,]  256 #> [13206,]  256 #> [13207,]  256 #> [13208,]  256 #> [13209,]  256 #> [13210,]  257 #> [13211,]  256 #> [13212,]  256 #> [13213,]  256 #> [13214,]  256 #> [13215,]  256 #> [13216,]  256 #> [13217,]  256 #> [13218,]  257 #> [13219,]  256 #> [13220,]  256 #> [13221,]  257 #> [13222,]  256 #> [13223,]  256 #> [13224,]  256 #> [13225,]  257 #> [13226,]  256 #> [13227,]  256 #> [13228,]  256 #> [13229,]  256 #> [13230,]  256 #> [13231,]  256 #> [13232,]  256 #> [13233,]  256 #> [13234,]  256 #> [13235,]  256 #> [13236,]  256 #> [13237,]  256 #> [13238,]  256 #> [13239,]  257 #> [13240,]  256 #> [13241,]  256 #> [13242,]  256 #> [13243,]  257 #> [13244,]  256 #> [13245,]  257 #> [13246,]  256 #> [13247,]  256 #> [13248,]  256 #> [13249,]  256 #> [13250,]  256 #> [13251,]  256 #> [13252,]  256 #> [13253,]  257 #> [13254,]  256 #> [13255,]  256 #> [13256,]  256 #> [13257,]  256 #> [13258,]  256 #> [13259,]  256 #> [13260,]  256 #> [13261,]  257 #> [13262,]  256 #> [13263,]  256 #> [13264,]  256 #> [13265,]  256 #> [13266,]  256 #> [13267,]  256 #> [13268,]  256 #> [13269,]  256 #> [13270,]  256 #> [13271,]  256 #> [13272,]  257 #> [13273,]  257 #> [13274,]  257 #> [13275,]  257 #> [13276,]  257 #> [13277,]  257 #> [13278,]  256 #> [13279,]  256 #> [13280,]  256 #> [13281,]  256 #> [13282,]  256 #> [13283,]  256 #> [13284,]  257 #> [13285,]  256 #> [13286,]  256 #> [13287,]  256 #> [13288,]  256 #> [13289,]  256 #> [13290,]  256 #> [13291,]  256 #> [13292,]  256 #> [13293,]  256 #> [13294,]  257 #> [13295,]  257 #> [13296,]  256 #> [13297,]  256 #> [13298,]  256 #> [13299,]  256 #> [13300,]  257 #> [13301,]  259 #> [13302,]  258 #> [13303,]  258 #> [13304,]  258 #> [13305,]  258 #> [13306,]  258 #> [13307,]  258 #> [13308,]  258 #> [13309,]  258 #> [13310,]  258 #> [13311,]  258 #> [13312,]  258 #> [13313,]  258 #> [13314,]  259 #> [13315,]  259 #> [13316,]  259 #> [13317,]  258 #> [13318,]  258 #> [13319,]  258 #> [13320,]  258 #> [13321,]  259 #> [13322,]  258 #> [13323,]  258 #> [13324,]  258 #> [13325,]  258 #> [13326,]  258 #> [13327,]  258 #> [13328,]  258 #> [13329,]  259 #> [13330,]  258 #> [13331,]  258 #> [13332,]  258 #> [13333,]  259 #> [13334,]  258 #> [13335,]  258 #> [13336,]  258 #> [13337,]  258 #> [13338,]  258 #> [13339,]  258 #> [13340,]  258 #> [13341,]  259 #> [13342,]  258 #> [13343,]  258 #> [13344,]  259 #> [13345,]  258 #> [13346,]  258 #> [13347,]  258 #> [13348,]  258 #> [13349,]  258 #> [13350,]  259 #> [13351,]  258 #> [13352,]  258 #> [13353,]  258 #> [13354,]  258 #> [13355,]  258 #> [13356,]  258 #> [13357,]  258 #> [13358,]  258 #> [13359,]  259 #> [13360,]  258 #> [13361,]  258 #> [13362,]  258 #> [13363,]  258 #> [13364,]  258 #> [13365,]  258 #> [13366,]  258 #> [13367,]  258 #> [13368,]  259 #> [13369,]  258 #> [13370,]  259 #> [13371,]  258 #> [13372,]  258 #> [13373,]  259 #> [13374,]  258 #> [13375,]  258 #> [13376,]  258 #> [13377,]  258 #> [13378,]  258 #> [13379,]  258 #> [13380,]  258 #> [13381,]  258 #> [13382,]  258 #> [13383,]  258 #> [13384,]  258 #> [13385,]  258 #> [13386,]  258 #> [13387,]  258 #> [13388,]  258 #> [13389,]  258 #> [13390,]  258 #> [13391,]  258 #> [13392,]  258 #> [13393,]  258 #> [13394,]  258 #> [13395,]  258 #> [13396,]  259 #> [13397,]  258 #> [13398,]  258 #> [13399,]  259 #> [13400,]  258 #> [13401,]  260 #> [13402,]  261 #> [13403,]  261 #> [13404,]  260 #> [13405,]  261 #> [13406,]  261 #> [13407,]  261 #> [13408,]  260 #> [13409,]  260 #> [13410,]  261 #> [13411,]  260 #> [13412,]  261 #> [13413,]  260 #> [13414,]  260 #> [13415,]  260 #> [13416,]  260 #> [13417,]  260 #> [13418,]  261 #> [13419,]  261 #> [13420,]  261 #> [13421,]  260 #> [13422,]  260 #> [13423,]  261 #> [13424,]  260 #> [13425,]  261 #> [13426,]  261 #> [13427,]  260 #> [13428,]  261 #> [13429,]  261 #> [13430,]  260 #> [13431,]  261 #> [13432,]  261 #> [13433,]  261 #> [13434,]  261 #> [13435,]  260 #> [13436,]  261 #> [13437,]  260 #> [13438,]  260 #> [13439,]  261 #> [13440,]  261 #> [13441,]  260 #> [13442,]  261 #> [13443,]  260 #> [13444,]  260 #> [13445,]  260 #> [13446,]  260 #> [13447,]  261 #> [13448,]  261 #> [13449,]  260 #> [13450,]  261 #> [13451,]  260 #> [13452,]  260 #> [13453,]  261 #> [13454,]  260 #> [13455,]  260 #> [13456,]  261 #> [13457,]  261 #> [13458,]  260 #> [13459,]  260 #> [13460,]  261 #> [13461,]  261 #> [13462,]  260 #> [13463,]  261 #> [13464,]  261 #> [13465,]  261 #> [13466,]  260 #> [13467,]  260 #> [13468,]  260 #> [13469,]  260 #> [13470,]  261 #> [13471,]  261 #> [13472,]  261 #> [13473,]  261 #> [13474,]  260 #> [13475,]  261 #> [13476,]  261 #> [13477,]  261 #> [13478,]  261 #> [13479,]  260 #> [13480,]  260 #> [13481,]  260 #> [13482,]  260 #> [13483,]  260 #> [13484,]  261 #> [13485,]  260 #> [13486,]  261 #> [13487,]  260 #> [13488,]  260 #> [13489,]  260 #> [13490,]  260 #> [13491,]  260 #> [13492,]  260 #> [13493,]  261 #> [13494,]  261 #> [13495,]  260 #> [13496,]  260 #> [13497,]  261 #> [13498,]  261 #> [13499,]  260 #> [13500,]  261 #> [13501,]  263 #> [13502,]  263 #> [13503,]  262 #> [13504,]  262 #> [13505,]  263 #> [13506,]  263 #> [13507,]  262 #> [13508,]  262 #> [13509,]  263 #> [13510,]  262 #> [13511,]  263 #> [13512,]  262 #> [13513,]  263 #> [13514,]  262 #> [13515,]  263 #> [13516,]  262 #> [13517,]  263 #> [13518,]  263 #> [13519,]  263 #> [13520,]  263 #> [13521,]  263 #> [13522,]  263 #> [13523,]  262 #> [13524,]  263 #> [13525,]  262 #> [13526,]  262 #> [13527,]  263 #> [13528,]  263 #> [13529,]  263 #> [13530,]  262 #> [13531,]  262 #> [13532,]  262 #> [13533,]  263 #> [13534,]  262 #> [13535,]  262 #> [13536,]  263 #> [13537,]  262 #> [13538,]  263 #> [13539,]  263 #> [13540,]  262 #> [13541,]  263 #> [13542,]  263 #> [13543,]  263 #> [13544,]  262 #> [13545,]  262 #> [13546,]  262 #> [13547,]  262 #> [13548,]  263 #> [13549,]  262 #> [13550,]  263 #> [13551,]  263 #> [13552,]  262 #> [13553,]  263 #> [13554,]  263 #> [13555,]  262 #> [13556,]  263 #> [13557,]  262 #> [13558,]  263 #> [13559,]  262 #> [13560,]  262 #> [13561,]  263 #> [13562,]  263 #> [13563,]  263 #> [13564,]  263 #> [13565,]  263 #> [13566,]  263 #> [13567,]  262 #> [13568,]  262 #> [13569,]  262 #> [13570,]  263 #> [13571,]  262 #> [13572,]  262 #> [13573,]  263 #> [13574,]  262 #> [13575,]  262 #> [13576,]  262 #> [13577,]  263 #> [13578,]  262 #> [13579,]  263 #> [13580,]  262 #> [13581,]  263 #> [13582,]  263 #> [13583,]  263 #> [13584,]  263 #> [13585,]  263 #> [13586,]  262 #> [13587,]  263 #> [13588,]  262 #> [13589,]  263 #> [13590,]  263 #> [13591,]  263 #> [13592,]  262 #> [13593,]  263 #> [13594,]  263 #> [13595,]  262 #> [13596,]  262 #> [13597,]  262 #> [13598,]  262 #> [13599,]  263 #> [13600,]  263 #> [13601,]  265 #> [13602,]  265 #> [13603,]  264 #> [13604,]  264 #> [13605,]  265 #> [13606,]  265 #> [13607,]  264 #> [13608,]  264 #> [13609,]  265 #> [13610,]  265 #> [13611,]  265 #> [13612,]  264 #> [13613,]  265 #> [13614,]  265 #> [13615,]  265 #> [13616,]  265 #> [13617,]  265 #> [13618,]  265 #> [13619,]  265 #> [13620,]  265 #> [13621,]  265 #> [13622,]  265 #> [13623,]  264 #> [13624,]  265 #> [13625,]  264 #> [13626,]  265 #> [13627,]  265 #> [13628,]  265 #> [13629,]  265 #> [13630,]  265 #> [13631,]  264 #> [13632,]  264 #> [13633,]  265 #> [13634,]  265 #> [13635,]  265 #> [13636,]  265 #> [13637,]  264 #> [13638,]  265 #> [13639,]  265 #> [13640,]  264 #> [13641,]  265 #> [13642,]  265 #> [13643,]  265 #> [13644,]  265 #> [13645,]  265 #> [13646,]  264 #> [13647,]  264 #> [13648,]  265 #> [13649,]  265 #> [13650,]  265 #> [13651,]  265 #> [13652,]  264 #> [13653,]  265 #> [13654,]  265 #> [13655,]  264 #> [13656,]  265 #> [13657,]  264 #> [13658,]  265 #> [13659,]  264 #> [13660,]  264 #> [13661,]  265 #> [13662,]  265 #> [13663,]  265 #> [13664,]  265 #> [13665,]  265 #> [13666,]  265 #> [13667,]  265 #> [13668,]  264 #> [13669,]  265 #> [13670,]  265 #> [13671,]  265 #> [13672,]  264 #> [13673,]  265 #> [13674,]  264 #> [13675,]  265 #> [13676,]  264 #> [13677,]  265 #> [13678,]  265 #> [13679,]  265 #> [13680,]  264 #> [13681,]  265 #> [13682,]  265 #> [13683,]  265 #> [13684,]  265 #> [13685,]  265 #> [13686,]  264 #> [13687,]  265 #> [13688,]  265 #> [13689,]  265 #> [13690,]  265 #> [13691,]  265 #> [13692,]  264 #> [13693,]  265 #> [13694,]  265 #> [13695,]  265 #> [13696,]  264 #> [13697,]  264 #> [13698,]  264 #> [13699,]  265 #> [13700,]  265 #> [13701,]  266 #> [13702,]  266 #> [13703,]  266 #> [13704,]  266 #> [13705,]  266 #> [13706,]  267 #> [13707,]  266 #> [13708,]  267 #> [13709,]  267 #> [13710,]  266 #> [13711,]  266 #> [13712,]  267 #> [13713,]  266 #> [13714,]  266 #> [13715,]  267 #> [13716,]  266 #> [13717,]  266 #> [13718,]  266 #> [13719,]  266 #> [13720,]  266 #> [13721,]  266 #> [13722,]  266 #> [13723,]  266 #> [13724,]  266 #> [13725,]  266 #> [13726,]  267 #> [13727,]  266 #> [13728,]  266 #> [13729,]  266 #> [13730,]  266 #> [13731,]  266 #> [13732,]  266 #> [13733,]  266 #> [13734,]  266 #> [13735,]  266 #> [13736,]  266 #> [13737,]  266 #> [13738,]  266 #> [13739,]  266 #> [13740,]  266 #> [13741,]  266 #> [13742,]  266 #> [13743,]  267 #> [13744,]  266 #> [13745,]  266 #> [13746,]  267 #> [13747,]  266 #> [13748,]  266 #> [13749,]  266 #> [13750,]  266 #> [13751,]  267 #> [13752,]  266 #> [13753,]  266 #> [13754,]  266 #> [13755,]  266 #> [13756,]  267 #> [13757,]  266 #> [13758,]  266 #> [13759,]  266 #> [13760,]  266 #> [13761,]  267 #> [13762,]  266 #> [13763,]  266 #> [13764,]  267 #> [13765,]  266 #> [13766,]  267 #> [13767,]  266 #> [13768,]  266 #> [13769,]  266 #> [13770,]  266 #> [13771,]  266 #> [13772,]  266 #> [13773,]  266 #> [13774,]  266 #> [13775,]  266 #> [13776,]  267 #> [13777,]  266 #> [13778,]  266 #> [13779,]  266 #> [13780,]  266 #> [13781,]  266 #> [13782,]  266 #> [13783,]  266 #> [13784,]  266 #> [13785,]  266 #> [13786,]  266 #> [13787,]  266 #> [13788,]  266 #> [13789,]  266 #> [13790,]  266 #> [13791,]  266 #> [13792,]  266 #> [13793,]  266 #> [13794,]  267 #> [13795,]  266 #> [13796,]  266 #> [13797,]  266 #> [13798,]  266 #> [13799,]  266 #> [13800,]  266 #> [13801,]  269 #> [13802,]  268 #> [13803,]  269 #> [13804,]  269 #> [13805,]  269 #> [13806,]  268 #> [13807,]  269 #> [13808,]  269 #> [13809,]  269 #> [13810,]  269 #> [13811,]  268 #> [13812,]  268 #> [13813,]  269 #> [13814,]  269 #> [13815,]  268 #> [13816,]  269 #> [13817,]  268 #> [13818,]  269 #> [13819,]  268 #> [13820,]  269 #> [13821,]  269 #> [13822,]  269 #> [13823,]  268 #> [13824,]  269 #> [13825,]  269 #> [13826,]  268 #> [13827,]  269 #> [13828,]  269 #> [13829,]  268 #> [13830,]  268 #> [13831,]  268 #> [13832,]  269 #> [13833,]  269 #> [13834,]  268 #> [13835,]  268 #> [13836,]  269 #> [13837,]  268 #> [13838,]  269 #> [13839,]  269 #> [13840,]  269 #> [13841,]  269 #> [13842,]  268 #> [13843,]  268 #> [13844,]  268 #> [13845,]  269 #> [13846,]  269 #> [13847,]  268 #> [13848,]  268 #> [13849,]  269 #> [13850,]  269 #> [13851,]  269 #> [13852,]  269 #> [13853,]  269 #> [13854,]  269 #> [13855,]  269 #> [13856,]  268 #> [13857,]  269 #> [13858,]  269 #> [13859,]  269 #> [13860,]  268 #> [13861,]  268 #> [13862,]  269 #> [13863,]  268 #> [13864,]  268 #> [13865,]  268 #> [13866,]  268 #> [13867,]  269 #> [13868,]  268 #> [13869,]  269 #> [13870,]  268 #> [13871,]  269 #> [13872,]  269 #> [13873,]  269 #> [13874,]  269 #> [13875,]  268 #> [13876,]  269 #> [13877,]  269 #> [13878,]  268 #> [13879,]  268 #> [13880,]  269 #> [13881,]  268 #> [13882,]  269 #> [13883,]  269 #> [13884,]  269 #> [13885,]  269 #> [13886,]  269 #> [13887,]  269 #> [13888,]  269 #> [13889,]  269 #> [13890,]  269 #> [13891,]  269 #> [13892,]  268 #> [13893,]  269 #> [13894,]  268 #> [13895,]  268 #> [13896,]  268 #> [13897,]  269 #> [13898,]  269 #> [13899,]  269 #> [13900,]  268 #> [13901,]  271 #> [13902,]  271 #> [13903,]  271 #> [13904,]  271 #> [13905,]  271 #> [13906,]  271 #> [13907,]  270 #> [13908,]  271 #> [13909,]  271 #> [13910,]  271 #> [13911,]  271 #> [13912,]  271 #> [13913,]  271 #> [13914,]  271 #> [13915,]  271 #> [13916,]  271 #> [13917,]  271 #> [13918,]  271 #> [13919,]  271 #> [13920,]  271 #> [13921,]  270 #> [13922,]  271 #> [13923,]  271 #> [13924,]  271 #> [13925,]  271 #> [13926,]  271 #> [13927,]  271 #> [13928,]  271 #> [13929,]  271 #> [13930,]  271 #> [13931,]  271 #> [13932,]  271 #> [13933,]  271 #> [13934,]  271 #> [13935,]  271 #> [13936,]  271 #> [13937,]  271 #> [13938,]  271 #> [13939,]  270 #> [13940,]  271 #> [13941,]  271 #> [13942,]  271 #> [13943,]  271 #> [13944,]  271 #> [13945,]  271 #> [13946,]  271 #> [13947,]  271 #> [13948,]  271 #> [13949,]  270 #> [13950,]  271 #> [13951,]  271 #> [13952,]  271 #> [13953,]  271 #> [13954,]  271 #> [13955,]  271 #> [13956,]  271 #> [13957,]  271 #> [13958,]  271 #> [13959,]  271 #> [13960,]  271 #> [13961,]  271 #> [13962,]  270 #> [13963,]  271 #> [13964,]  271 #> [13965,]  271 #> [13966,]  271 #> [13967,]  271 #> [13968,]  271 #> [13969,]  271 #> [13970,]  270 #> [13971,]  271 #> [13972,]  271 #> [13973,]  271 #> [13974,]  271 #> [13975,]  271 #> [13976,]  271 #> [13977,]  271 #> [13978,]  271 #> [13979,]  271 #> [13980,]  270 #> [13981,]  271 #> [13982,]  271 #> [13983,]  271 #> [13984,]  271 #> [13985,]  271 #> [13986,]  271 #> [13987,]  271 #> [13988,]  271 #> [13989,]  271 #> [13990,]  271 #> [13991,]  271 #> [13992,]  271 #> [13993,]  271 #> [13994,]  271 #> [13995,]  270 #> [13996,]  271 #> [13997,]  271 #> [13998,]  271 #> [13999,]  271 #> [14000,]  271 #> [14001,]  273 #> [14002,]  272 #> [14003,]  272 #> [14004,]  273 #> [14005,]  273 #> [14006,]  272 #> [14007,]  272 #> [14008,]  272 #> [14009,]  272 #> [14010,]  273 #> [14011,]  273 #> [14012,]  273 #> [14013,]  273 #> [14014,]  273 #> [14015,]  273 #> [14016,]  273 #> [14017,]  273 #> [14018,]  273 #> [14019,]  273 #> [14020,]  272 #> [14021,]  272 #> [14022,]  273 #> [14023,]  272 #> [14024,]  273 #> [14025,]  272 #> [14026,]  273 #> [14027,]  273 #> [14028,]  273 #> [14029,]  272 #> [14030,]  273 #> [14031,]  273 #> [14032,]  273 #> [14033,]  273 #> [14034,]  272 #> [14035,]  272 #> [14036,]  272 #> [14037,]  272 #> [14038,]  273 #> [14039,]  273 #> [14040,]  272 #> [14041,]  272 #> [14042,]  272 #> [14043,]  273 #> [14044,]  272 #> [14045,]  272 #> [14046,]  273 #> [14047,]  273 #> [14048,]  273 #> [14049,]  272 #> [14050,]  272 #> [14051,]  273 #> [14052,]  273 #> [14053,]  272 #> [14054,]  272 #> [14055,]  272 #> [14056,]  272 #> [14057,]  272 #> [14058,]  273 #> [14059,]  273 #> [14060,]  272 #> [14061,]  273 #> [14062,]  272 #> [14063,]  273 #> [14064,]  272 #> [14065,]  272 #> [14066,]  273 #> [14067,]  272 #> [14068,]  273 #> [14069,]  273 #> [14070,]  273 #> [14071,]  273 #> [14072,]  272 #> [14073,]  272 #> [14074,]  272 #> [14075,]  273 #> [14076,]  272 #> [14077,]  273 #> [14078,]  273 #> [14079,]  273 #> [14080,]  272 #> [14081,]  272 #> [14082,]  272 #> [14083,]  273 #> [14084,]  272 #> [14085,]  272 #> [14086,]  272 #> [14087,]  273 #> [14088,]  272 #> [14089,]  272 #> [14090,]  273 #> [14091,]  273 #> [14092,]  273 #> [14093,]  273 #> [14094,]  272 #> [14095,]  273 #> [14096,]  273 #> [14097,]  272 #> [14098,]  272 #> [14099,]  272 #> [14100,]  273 #> [14101,]  275 #> [14102,]  274 #> [14103,]  274 #> [14104,]  274 #> [14105,]  275 #> [14106,]  274 #> [14107,]  274 #> [14108,]  274 #> [14109,]  274 #> [14110,]  275 #> [14111,]  275 #> [14112,]  275 #> [14113,]  274 #> [14114,]  275 #> [14115,]  275 #> [14116,]  274 #> [14117,]  275 #> [14118,]  275 #> [14119,]  274 #> [14120,]  274 #> [14121,]  274 #> [14122,]  275 #> [14123,]  274 #> [14124,]  274 #> [14125,]  274 #> [14126,]  275 #> [14127,]  275 #> [14128,]  274 #> [14129,]  274 #> [14130,]  274 #> [14131,]  275 #> [14132,]  275 #> [14133,]  274 #> [14134,]  274 #> [14135,]  274 #> [14136,]  274 #> [14137,]  274 #> [14138,]  275 #> [14139,]  274 #> [14140,]  274 #> [14141,]  274 #> [14142,]  274 #> [14143,]  275 #> [14144,]  274 #> [14145,]  274 #> [14146,]  274 #> [14147,]  275 #> [14148,]  274 #> [14149,]  274 #> [14150,]  274 #> [14151,]  274 #> [14152,]  275 #> [14153,]  274 #> [14154,]  274 #> [14155,]  274 #> [14156,]  274 #> [14157,]  274 #> [14158,]  275 #> [14159,]  275 #> [14160,]  274 #> [14161,]  275 #> [14162,]  274 #> [14163,]  274 #> [14164,]  274 #> [14165,]  274 #> [14166,]  275 #> [14167,]  274 #> [14168,]  274 #> [14169,]  274 #> [14170,]  275 #> [14171,]  275 #> [14172,]  274 #> [14173,]  274 #> [14174,]  274 #> [14175,]  275 #> [14176,]  274 #> [14177,]  275 #> [14178,]  274 #> [14179,]  275 #> [14180,]  274 #> [14181,]  274 #> [14182,]  274 #> [14183,]  274 #> [14184,]  274 #> [14185,]  274 #> [14186,]  274 #> [14187,]  275 #> [14188,]  274 #> [14189,]  274 #> [14190,]  275 #> [14191,]  275 #> [14192,]  275 #> [14193,]  274 #> [14194,]  274 #> [14195,]  275 #> [14196,]  274 #> [14197,]  274 #> [14198,]  274 #> [14199,]  274 #> [14200,]  275 #> [14201,]  277 #> [14202,]  277 #> [14203,]  277 #> [14204,]  277 #> [14205,]  277 #> [14206,]  277 #> [14207,]  276 #> [14208,]  277 #> [14209,]  277 #> [14210,]  277 #> [14211,]  277 #> [14212,]  277 #> [14213,]  277 #> [14214,]  277 #> [14215,]  277 #> [14216,]  277 #> [14217,]  277 #> [14218,]  277 #> [14219,]  277 #> [14220,]  277 #> [14221,]  276 #> [14222,]  277 #> [14223,]  277 #> [14224,]  277 #> [14225,]  277 #> [14226,]  277 #> [14227,]  277 #> [14228,]  277 #> [14229,]  277 #> [14230,]  276 #> [14231,]  277 #> [14232,]  277 #> [14233,]  277 #> [14234,]  277 #> [14235,]  277 #> [14236,]  277 #> [14237,]  277 #> [14238,]  277 #> [14239,]  276 #> [14240,]  277 #> [14241,]  277 #> [14242,]  277 #> [14243,]  277 #> [14244,]  277 #> [14245,]  277 #> [14246,]  277 #> [14247,]  277 #> [14248,]  277 #> [14249,]  276 #> [14250,]  277 #> [14251,]  277 #> [14252,]  277 #> [14253,]  277 #> [14254,]  277 #> [14255,]  277 #> [14256,]  277 #> [14257,]  277 #> [14258,]  277 #> [14259,]  277 #> [14260,]  277 #> [14261,]  277 #> [14262,]  276 #> [14263,]  277 #> [14264,]  277 #> [14265,]  277 #> [14266,]  277 #> [14267,]  277 #> [14268,]  277 #> [14269,]  277 #> [14270,]  276 #> [14271,]  277 #> [14272,]  277 #> [14273,]  277 #> [14274,]  277 #> [14275,]  277 #> [14276,]  277 #> [14277,]  277 #> [14278,]  277 #> [14279,]  277 #> [14280,]  276 #> [14281,]  277 #> [14282,]  277 #> [14283,]  277 #> [14284,]  277 #> [14285,]  277 #> [14286,]  277 #> [14287,]  277 #> [14288,]  277 #> [14289,]  277 #> [14290,]  277 #> [14291,]  277 #> [14292,]  277 #> [14293,]  277 #> [14294,]  277 #> [14295,]  276 #> [14296,]  277 #> [14297,]  277 #> [14298,]  277 #> [14299,]  277 #> [14300,]  277 #> [14301,]  279 #> [14302,]  279 #> [14303,]  278 #> [14304,]  279 #> [14305,]  279 #> [14306,]  279 #> [14307,]  278 #> [14308,]  279 #> [14309,]  279 #> [14310,]  279 #> [14311,]  279 #> [14312,]  278 #> [14313,]  279 #> [14314,]  279 #> [14315,]  279 #> [14316,]  279 #> [14317,]  279 #> [14318,]  279 #> [14319,]  279 #> [14320,]  279 #> [14321,]  279 #> [14322,]  279 #> [14323,]  279 #> [14324,]  279 #> [14325,]  279 #> [14326,]  279 #> [14327,]  279 #> [14328,]  279 #> [14329,]  279 #> [14330,]  279 #> [14331,]  278 #> [14332,]  279 #> [14333,]  279 #> [14334,]  279 #> [14335,]  279 #> [14336,]  279 #> [14337,]  279 #> [14338,]  279 #> [14339,]  279 #> [14340,]  279 #> [14341,]  279 #> [14342,]  279 #> [14343,]  279 #> [14344,]  279 #> [14345,]  279 #> [14346,]  279 #> [14347,]  279 #> [14348,]  279 #> [14349,]  279 #> [14350,]  279 #> [14351,]  279 #> [14352,]  278 #> [14353,]  279 #> [14354,]  279 #> [14355,]  279 #> [14356,]  279 #> [14357,]  279 #> [14358,]  279 #> [14359,]  278 #> [14360,]  278 #> [14361,]  279 #> [14362,]  279 #> [14363,]  279 #> [14364,]  279 #> [14365,]  279 #> [14366,]  279 #> [14367,]  279 #> [14368,]  279 #> [14369,]  279 #> [14370,]  279 #> [14371,]  279 #> [14372,]  279 #> [14373,]  279 #> [14374,]  279 #> [14375,]  279 #> [14376,]  279 #> [14377,]  279 #> [14378,]  279 #> [14379,]  279 #> [14380,]  279 #> [14381,]  279 #> [14382,]  279 #> [14383,]  279 #> [14384,]  279 #> [14385,]  279 #> [14386,]  279 #> [14387,]  279 #> [14388,]  279 #> [14389,]  279 #> [14390,]  279 #> [14391,]  279 #> [14392,]  279 #> [14393,]  279 #> [14394,]  279 #> [14395,]  279 #> [14396,]  279 #> [14397,]  278 #> [14398,]  279 #> [14399,]  279 #> [14400,]  279 #> [14401,]  280 #> [14402,]  280 #> [14403,]  280 #> [14404,]  280 #> [14405,]  280 #> [14406,]  281 #> [14407,]  280 #> [14408,]  281 #> [14409,]  281 #> [14410,]  280 #> [14411,]  280 #> [14412,]  281 #> [14413,]  280 #> [14414,]  280 #> [14415,]  281 #> [14416,]  280 #> [14417,]  280 #> [14418,]  280 #> [14419,]  280 #> [14420,]  280 #> [14421,]  280 #> [14422,]  280 #> [14423,]  280 #> [14424,]  280 #> [14425,]  280 #> [14426,]  281 #> [14427,]  280 #> [14428,]  280 #> [14429,]  280 #> [14430,]  280 #> [14431,]  280 #> [14432,]  280 #> [14433,]  280 #> [14434,]  280 #> [14435,]  280 #> [14436,]  280 #> [14437,]  280 #> [14438,]  280 #> [14439,]  280 #> [14440,]  280 #> [14441,]  280 #> [14442,]  280 #> [14443,]  281 #> [14444,]  280 #> [14445,]  280 #> [14446,]  281 #> [14447,]  280 #> [14448,]  280 #> [14449,]  280 #> [14450,]  280 #> [14451,]  281 #> [14452,]  280 #> [14453,]  280 #> [14454,]  280 #> [14455,]  280 #> [14456,]  281 #> [14457,]  280 #> [14458,]  280 #> [14459,]  280 #> [14460,]  280 #> [14461,]  281 #> [14462,]  280 #> [14463,]  280 #> [14464,]  281 #> [14465,]  280 #> [14466,]  281 #> [14467,]  280 #> [14468,]  280 #> [14469,]  280 #> [14470,]  280 #> [14471,]  280 #> [14472,]  280 #> [14473,]  280 #> [14474,]  280 #> [14475,]  280 #> [14476,]  281 #> [14477,]  280 #> [14478,]  280 #> [14479,]  280 #> [14480,]  280 #> [14481,]  280 #> [14482,]  280 #> [14483,]  280 #> [14484,]  280 #> [14485,]  280 #> [14486,]  280 #> [14487,]  280 #> [14488,]  280 #> [14489,]  280 #> [14490,]  280 #> [14491,]  280 #> [14492,]  280 #> [14493,]  280 #> [14494,]  281 #> [14495,]  280 #> [14496,]  280 #> [14497,]  280 #> [14498,]  280 #> [14499,]  280 #> [14500,]  280 #> [14501,]  283 #> [14502,]  283 #> [14503,]  282 #> [14504,]  283 #> [14505,]  283 #> [14506,]  282 #> [14507,]  282 #> [14508,]  283 #> [14509,]  283 #> [14510,]  283 #> [14511,]  283 #> [14512,]  283 #> [14513,]  283 #> [14514,]  283 #> [14515,]  283 #> [14516,]  283 #> [14517,]  283 #> [14518,]  283 #> [14519,]  283 #> [14520,]  282 #> [14521,]  282 #> [14522,]  283 #> [14523,]  282 #> [14524,]  283 #> [14525,]  282 #> [14526,]  283 #> [14527,]  283 #> [14528,]  283 #> [14529,]  283 #> [14530,]  283 #> [14531,]  283 #> [14532,]  283 #> [14533,]  283 #> [14534,]  282 #> [14535,]  282 #> [14536,]  283 #> [14537,]  282 #> [14538,]  283 #> [14539,]  283 #> [14540,]  283 #> [14541,]  283 #> [14542,]  282 #> [14543,]  283 #> [14544,]  282 #> [14545,]  283 #> [14546,]  283 #> [14547,]  283 #> [14548,]  283 #> [14549,]  283 #> [14550,]  283 #> [14551,]  283 #> [14552,]  283 #> [14553,]  282 #> [14554,]  283 #> [14555,]  282 #> [14556,]  282 #> [14557,]  282 #> [14558,]  283 #> [14559,]  283 #> [14560,]  283 #> [14561,]  283 #> [14562,]  283 #> [14563,]  283 #> [14564,]  282 #> [14565,]  282 #> [14566,]  283 #> [14567,]  283 #> [14568,]  283 #> [14569,]  283 #> [14570,]  283 #> [14571,]  283 #> [14572,]  283 #> [14573,]  282 #> [14574,]  282 #> [14575,]  283 #> [14576,]  283 #> [14577,]  283 #> [14578,]  283 #> [14579,]  283 #> [14580,]  282 #> [14581,]  283 #> [14582,]  282 #> [14583,]  283 #> [14584,]  282 #> [14585,]  282 #> [14586,]  282 #> [14587,]  283 #> [14588,]  282 #> [14589,]  282 #> [14590,]  283 #> [14591,]  283 #> [14592,]  283 #> [14593,]  283 #> [14594,]  282 #> [14595,]  283 #> [14596,]  283 #> [14597,]  283 #> [14598,]  282 #> [14599,]  282 #> [14600,]  283 #> [14601,]  284 #> [14602,]  284 #> [14603,]  284 #> [14604,]  284 #> [14605,]  284 #> [14606,]  284 #> [14607,]  284 #> [14608,]  284 #> [14609,]  284 #> [14610,]  284 #> [14611,]  284 #> [14612,]  284 #> [14613,]  284 #> [14614,]  284 #> [14615,]  284 #> [14616,]  284 #> [14617,]  284 #> [14618,]  284 #> [14619,]  285 #> [14620,]  285 #> [14621,]  284 #> [14622,]  285 #> [14623,]  284 #> [14624,]  284 #> [14625,]  284 #> [14626,]  284 #> [14627,]  285 #> [14628,]  284 #> [14629,]  285 #> [14630,]  284 #> [14631,]  284 #> [14632,]  284 #> [14633,]  284 #> [14634,]  284 #> [14635,]  284 #> [14636,]  285 #> [14637,]  284 #> [14638,]  284 #> [14639,]  284 #> [14640,]  284 #> [14641,]  284 #> [14642,]  284 #> [14643,]  284 #> [14644,]  284 #> [14645,]  284 #> [14646,]  284 #> [14647,]  284 #> [14648,]  284 #> [14649,]  284 #> [14650,]  284 #> [14651,]  284 #> [14652,]  284 #> [14653,]  284 #> [14654,]  284 #> [14655,]  284 #> [14656,]  284 #> [14657,]  284 #> [14658,]  285 #> [14659,]  284 #> [14660,]  284 #> [14661,]  284 #> [14662,]  284 #> [14663,]  284 #> [14664,]  285 #> [14665,]  284 #> [14666,]  285 #> [14667,]  284 #> [14668,]  284 #> [14669,]  284 #> [14670,]  284 #> [14671,]  284 #> [14672,]  284 #> [14673,]  284 #> [14674,]  284 #> [14675,]  284 #> [14676,]  284 #> [14677,]  285 #> [14678,]  284 #> [14679,]  284 #> [14680,]  284 #> [14681,]  285 #> [14682,]  284 #> [14683,]  284 #> [14684,]  284 #> [14685,]  284 #> [14686,]  284 #> [14687,]  285 #> [14688,]  284 #> [14689,]  284 #> [14690,]  284 #> [14691,]  284 #> [14692,]  284 #> [14693,]  284 #> [14694,]  284 #> [14695,]  284 #> [14696,]  284 #> [14697,]  284 #> [14698,]  284 #> [14699,]  284 #> [14700,]  285 #> [14701,]  286 #> [14702,]  287 #> [14703,]  286 #> [14704,]  287 #> [14705,]  287 #> [14706,]  286 #> [14707,]  287 #> [14708,]  287 #> [14709,]  287 #> [14710,]  287 #> [14711,]  286 #> [14712,]  287 #> [14713,]  287 #> [14714,]  287 #> [14715,]  287 #> [14716,]  286 #> [14717,]  287 #> [14718,]  287 #> [14719,]  286 #> [14720,]  287 #> [14721,]  287 #> [14722,]  287 #> [14723,]  287 #> [14724,]  287 #> [14725,]  287 #> [14726,]  287 #> [14727,]  287 #> [14728,]  286 #> [14729,]  287 #> [14730,]  287 #> [14731,]  287 #> [14732,]  287 #> [14733,]  287 #> [14734,]  286 #> [14735,]  286 #> [14736,]  287 #> [14737,]  286 #> [14738,]  286 #> [14739,]  287 #> [14740,]  287 #> [14741,]  287 #> [14742,]  287 #> [14743,]  287 #> [14744,]  287 #> [14745,]  286 #> [14746,]  287 #> [14747,]  287 #> [14748,]  287 #> [14749,]  286 #> [14750,]  287 #> [14751,]  287 #> [14752,]  286 #> [14753,]  287 #> [14754,]  287 #> [14755,]  287 #> [14756,]  287 #> [14757,]  287 #> [14758,]  287 #> [14759,]  287 #> [14760,]  287 #> [14761,]  287 #> [14762,]  287 #> [14763,]  287 #> [14764,]  286 #> [14765,]  287 #> [14766,]  287 #> [14767,]  287 #> [14768,]  286 #> [14769,]  287 #> [14770,]  287 #> [14771,]  287 #> [14772,]  286 #> [14773,]  286 #> [14774,]  287 #> [14775,]  287 #> [14776,]  287 #> [14777,]  286 #> [14778,]  287 #> [14779,]  287 #> [14780,]  287 #> [14781,]  287 #> [14782,]  287 #> [14783,]  287 #> [14784,]  287 #> [14785,]  287 #> [14786,]  287 #> [14787,]  287 #> [14788,]  287 #> [14789,]  287 #> [14790,]  287 #> [14791,]  287 #> [14792,]  287 #> [14793,]  287 #> [14794,]  286 #> [14795,]  287 #> [14796,]  286 #> [14797,]  286 #> [14798,]  287 #> [14799,]  287 #> [14800,]  286 #> [14801,]  289 #> [14802,]  288 #> [14803,]  289 #> [14804,]  289 #> [14805,]  289 #> [14806,]  288 #> [14807,]  289 #> [14808,]  289 #> [14809,]  289 #> [14810,]  289 #> [14811,]  288 #> [14812,]  288 #> [14813,]  289 #> [14814,]  289 #> [14815,]  288 #> [14816,]  289 #> [14817,]  288 #> [14818,]  289 #> [14819,]  289 #> [14820,]  289 #> [14821,]  289 #> [14822,]  289 #> [14823,]  288 #> [14824,]  289 #> [14825,]  289 #> [14826,]  289 #> [14827,]  289 #> [14828,]  289 #> [14829,]  288 #> [14830,]  288 #> [14831,]  288 #> [14832,]  289 #> [14833,]  289 #> [14834,]  288 #> [14835,]  288 #> [14836,]  289 #> [14837,]  288 #> [14838,]  289 #> [14839,]  289 #> [14840,]  289 #> [14841,]  289 #> [14842,]  288 #> [14843,]  288 #> [14844,]  288 #> [14845,]  289 #> [14846,]  289 #> [14847,]  288 #> [14848,]  288 #> [14849,]  289 #> [14850,]  289 #> [14851,]  289 #> [14852,]  289 #> [14853,]  289 #> [14854,]  289 #> [14855,]  289 #> [14856,]  288 #> [14857,]  289 #> [14858,]  289 #> [14859,]  289 #> [14860,]  288 #> [14861,]  288 #> [14862,]  289 #> [14863,]  288 #> [14864,]  288 #> [14865,]  288 #> [14866,]  288 #> [14867,]  289 #> [14868,]  289 #> [14869,]  289 #> [14870,]  288 #> [14871,]  289 #> [14872,]  289 #> [14873,]  289 #> [14874,]  289 #> [14875,]  288 #> [14876,]  289 #> [14877,]  289 #> [14878,]  288 #> [14879,]  288 #> [14880,]  289 #> [14881,]  288 #> [14882,]  289 #> [14883,]  289 #> [14884,]  289 #> [14885,]  289 #> [14886,]  289 #> [14887,]  289 #> [14888,]  289 #> [14889,]  289 #> [14890,]  289 #> [14891,]  289 #> [14892,]  288 #> [14893,]  289 #> [14894,]  288 #> [14895,]  288 #> [14896,]  289 #> [14897,]  289 #> [14898,]  289 #> [14899,]  289 #> [14900,]  288 #> [14901,]  291 #> [14902,]  291 #> [14903,]  290 #> [14904,]  291 #> [14905,]  291 #> [14906,]  290 #> [14907,]  290 #> [14908,]  291 #> [14909,]  291 #> [14910,]  291 #> [14911,]  291 #> [14912,]  291 #> [14913,]  291 #> [14914,]  291 #> [14915,]  291 #> [14916,]  291 #> [14917,]  291 #> [14918,]  291 #> [14919,]  291 #> [14920,]  290 #> [14921,]  290 #> [14922,]  291 #> [14923,]  290 #> [14924,]  291 #> [14925,]  290 #> [14926,]  291 #> [14927,]  291 #> [14928,]  291 #> [14929,]  290 #> [14930,]  291 #> [14931,]  291 #> [14932,]  291 #> [14933,]  291 #> [14934,]  290 #> [14935,]  290 #> [14936,]  290 #> [14937,]  290 #> [14938,]  291 #> [14939,]  291 #> [14940,]  291 #> [14941,]  290 #> [14942,]  290 #> [14943,]  291 #> [14944,]  290 #> [14945,]  290 #> [14946,]  291 #> [14947,]  291 #> [14948,]  291 #> [14949,]  291 #> [14950,]  290 #> [14951,]  291 #> [14952,]  291 #> [14953,]  290 #> [14954,]  290 #> [14955,]  290 #> [14956,]  290 #> [14957,]  290 #> [14958,]  291 #> [14959,]  291 #> [14960,]  290 #> [14961,]  291 #> [14962,]  291 #> [14963,]  291 #> [14964,]  290 #> [14965,]  290 #> [14966,]  291 #> [14967,]  291 #> [14968,]  291 #> [14969,]  291 #> [14970,]  291 #> [14971,]  291 #> [14972,]  291 #> [14973,]  290 #> [14974,]  290 #> [14975,]  291 #> [14976,]  290 #> [14977,]  291 #> [14978,]  291 #> [14979,]  291 #> [14980,]  290 #> [14981,]  290 #> [14982,]  290 #> [14983,]  291 #> [14984,]  290 #> [14985,]  290 #> [14986,]  290 #> [14987,]  291 #> [14988,]  290 #> [14989,]  290 #> [14990,]  291 #> [14991,]  291 #> [14992,]  291 #> [14993,]  291 #> [14994,]  290 #> [14995,]  291 #> [14996,]  291 #> [14997,]  290 #> [14998,]  290 #> [14999,]  290 #> [15000,]  291 #> [15001,]  292 #> [15002,]  292 #> [15003,]  292 #> [15004,]  293 #> [15005,]  292 #> [15006,]  292 #> [15007,]  292 #> [15008,]  292 #> [15009,]  293 #> [15010,]  292 #> [15011,]  293 #> [15012,]  293 #> [15013,]  292 #> [15014,]  293 #> [15015,]  293 #> [15016,]  292 #> [15017,]  292 #> [15018,]  293 #> [15019,]  293 #> [15020,]  292 #> [15021,]  293 #> [15022,]  292 #> [15023,]  292 #> [15024,]  292 #> [15025,]  292 #> [15026,]  293 #> [15027,]  293 #> [15028,]  292 #> [15029,]  292 #> [15030,]  293 #> [15031,]  293 #> [15032,]  292 #> [15033,]  293 #> [15034,]  292 #> [15035,]  292 #> [15036,]  293 #> [15037,]  292 #> [15038,]  293 #> [15039,]  292 #> [15040,]  292 #> [15041,]  293 #> [15042,]  293 #> [15043,]  292 #> [15044,]  292 #> [15045,]  292 #> [15046,]  292 #> [15047,]  292 #> [15048,]  293 #> [15049,]  292 #> [15050,]  292 #> [15051,]  292 #> [15052,]  292 #> [15053,]  292 #> [15054,]  292 #> [15055,]  292 #> [15056,]  292 #> [15057,]  292 #> [15058,]  293 #> [15059,]  292 #> [15060,]  292 #> [15061,]  293 #> [15062,]  292 #> [15063,]  292 #> [15064,]  292 #> [15065,]  292 #> [15066,]  292 #> [15067,]  292 #> [15068,]  293 #> [15069,]  293 #> [15070,]  292 #> [15071,]  292 #> [15072,]  292 #> [15073,]  292 #> [15074,]  293 #> [15075,]  293 #> [15076,]  292 #> [15077,]  292 #> [15078,]  292 #> [15079,]  292 #> [15080,]  292 #> [15081,]  292 #> [15082,]  293 #> [15083,]  292 #> [15084,]  292 #> [15085,]  293 #> [15086,]  292 #> [15087,]  292 #> [15088,]  292 #> [15089,]  292 #> [15090,]  292 #> [15091,]  292 #> [15092,]  293 #> [15093,]  293 #> [15094,]  292 #> [15095,]  292 #> [15096,]  293 #> [15097,]  293 #> [15098,]  292 #> [15099,]  292 #> [15100,]  292 #> [15101,]  295 #> [15102,]  295 #> [15103,]  294 #> [15104,]  295 #> [15105,]  295 #> [15106,]  295 #> [15107,]  295 #> [15108,]  295 #> [15109,]  295 #> [15110,]  295 #> [15111,]  294 #> [15112,]  294 #> [15113,]  295 #> [15114,]  294 #> [15115,]  295 #> [15116,]  295 #> [15117,]  295 #> [15118,]  295 #> [15119,]  294 #> [15120,]  294 #> [15121,]  295 #> [15122,]  294 #> [15123,]  295 #> [15124,]  295 #> [15125,]  295 #> [15126,]  294 #> [15127,]  295 #> [15128,]  295 #> [15129,]  294 #> [15130,]  294 #> [15131,]  295 #> [15132,]  294 #> [15133,]  295 #> [15134,]  294 #> [15135,]  295 #> [15136,]  294 #> [15137,]  295 #> [15138,]  295 #> [15139,]  295 #> [15140,]  294 #> [15141,]  294 #> [15142,]  294 #> [15143,]  295 #> [15144,]  295 #> [15145,]  295 #> [15146,]  295 #> [15147,]  295 #> [15148,]  294 #> [15149,]  295 #> [15150,]  295 #> [15151,]  294 #> [15152,]  295 #> [15153,]  295 #> [15154,]  294 #> [15155,]  295 #> [15156,]  295 #> [15157,]  295 #> [15158,]  295 #> [15159,]  295 #> [15160,]  294 #> [15161,]  295 #> [15162,]  294 #> [15163,]  294 #> [15164,]  295 #> [15165,]  295 #> [15166,]  294 #> [15167,]  295 #> [15168,]  294 #> [15169,]  294 #> [15170,]  295 #> [15171,]  295 #> [15172,]  295 #> [15173,]  295 #> [15174,]  295 #> [15175,]  295 #> [15176,]  295 #> [15177,]  295 #> [15178,]  295 #> [15179,]  295 #> [15180,]  294 #> [15181,]  294 #> [15182,]  295 #> [15183,]  294 #> [15184,]  295 #> [15185,]  295 #> [15186,]  295 #> [15187,]  295 #> [15188,]  295 #> [15189,]  294 #> [15190,]  295 #> [15191,]  294 #> [15192,]  295 #> [15193,]  295 #> [15194,]  295 #> [15195,]  295 #> [15196,]  295 #> [15197,]  295 #> [15198,]  295 #> [15199,]  295 #> [15200,]  295 #> [15201,]  296 #> [15202,]  297 #> [15203,]  297 #> [15204,]  296 #> [15205,]  296 #> [15206,]  297 #> [15207,]  297 #> [15208,]  296 #> [15209,]  296 #> [15210,]  297 #> [15211,]  296 #> [15212,]  297 #> [15213,]  296 #> [15214,]  296 #> [15215,]  296 #> [15216,]  296 #> [15217,]  296 #> [15218,]  297 #> [15219,]  297 #> [15220,]  297 #> [15221,]  296 #> [15222,]  296 #> [15223,]  297 #> [15224,]  296 #> [15225,]  297 #> [15226,]  296 #> [15227,]  296 #> [15228,]  297 #> [15229,]  297 #> [15230,]  296 #> [15231,]  297 #> [15232,]  297 #> [15233,]  297 #> [15234,]  297 #> [15235,]  296 #> [15236,]  296 #> [15237,]  296 #> [15238,]  296 #> [15239,]  297 #> [15240,]  297 #> [15241,]  296 #> [15242,]  297 #> [15243,]  296 #> [15244,]  296 #> [15245,]  296 #> [15246,]  296 #> [15247,]  297 #> [15248,]  297 #> [15249,]  296 #> [15250,]  297 #> [15251,]  296 #> [15252,]  296 #> [15253,]  297 #> [15254,]  296 #> [15255,]  296 #> [15256,]  297 #> [15257,]  297 #> [15258,]  296 #> [15259,]  296 #> [15260,]  297 #> [15261,]  297 #> [15262,]  296 #> [15263,]  297 #> [15264,]  297 #> [15265,]  297 #> [15266,]  296 #> [15267,]  296 #> [15268,]  296 #> [15269,]  296 #> [15270,]  297 #> [15271,]  297 #> [15272,]  297 #> [15273,]  297 #> [15274,]  296 #> [15275,]  297 #> [15276,]  297 #> [15277,]  297 #> [15278,]  297 #> [15279,]  296 #> [15280,]  296 #> [15281,]  296 #> [15282,]  296 #> [15283,]  296 #> [15284,]  297 #> [15285,]  296 #> [15286,]  297 #> [15287,]  296 #> [15288,]  296 #> [15289,]  296 #> [15290,]  296 #> [15291,]  296 #> [15292,]  296 #> [15293,]  297 #> [15294,]  297 #> [15295,]  296 #> [15296,]  296 #> [15297,]  297 #> [15298,]  297 #> [15299,]  296 #> [15300,]  297 #> [15301,]  299 #> [15302,]  299 #> [15303,]  299 #> [15304,]  299 #> [15305,]  299 #> [15306,]  299 #> [15307,]  299 #> [15308,]  299 #> [15309,]  299 #> [15310,]  299 #> [15311,]  299 #> [15312,]  299 #> [15313,]  299 #> [15314,]  299 #> [15315,]  298 #> [15316,]  299 #> [15317,]  299 #> [15318,]  299 #> [15319,]  299 #> [15320,]  299 #> [15321,]  299 #> [15322,]  299 #> [15323,]  299 #> [15324,]  299 #> [15325,]  299 #> [15326,]  299 #> [15327,]  299 #> [15328,]  299 #> [15329,]  299 #> [15330,]  299 #> [15331,]  298 #> [15332,]  299 #> [15333,]  299 #> [15334,]  298 #> [15335,]  299 #> [15336,]  299 #> [15337,]  299 #> [15338,]  299 #> [15339,]  299 #> [15340,]  299 #> [15341,]  299 #> [15342,]  298 #> [15343,]  298 #> [15344,]  298 #> [15345,]  299 #> [15346,]  299 #> [15347,]  299 #> [15348,]  299 #> [15349,]  299 #> [15350,]  299 #> [15351,]  299 #> [15352,]  299 #> [15353,]  299 #> [15354,]  299 #> [15355,]  299 #> [15356,]  299 #> [15357,]  299 #> [15358,]  299 #> [15359,]  299 #> [15360,]  299 #> [15361,]  299 #> [15362,]  299 #> [15363,]  298 #> [15364,]  299 #> [15365,]  299 #> [15366,]  299 #> [15367,]  299 #> [15368,]  299 #> [15369,]  299 #> [15370,]  299 #> [15371,]  299 #> [15372,]  299 #> [15373,]  299 #> [15374,]  299 #> [15375,]  298 #> [15376,]  299 #> [15377,]  299 #> [15378,]  299 #> [15379,]  299 #> [15380,]  299 #> [15381,]  299 #> [15382,]  299 #> [15383,]  299 #> [15384,]  299 #> [15385,]  299 #> [15386,]  299 #> [15387,]  299 #> [15388,]  299 #> [15389,]  299 #> [15390,]  299 #> [15391,]  299 #> [15392,]  299 #> [15393,]  299 #> [15394,]  299 #> [15395,]  298 #> [15396,]  299 #> [15397,]  299 #> [15398,]  299 #> [15399,]  299 #> [15400,]  299 #> [15401,]  301 #> [15402,]  300 #> [15403,]  300 #> [15404,]  300 #> [15405,]  301 #> [15406,]  300 #> [15407,]  300 #> [15408,]  300 #> [15409,]  300 #> [15410,]  300 #> [15411,]  301 #> [15412,]  300 #> [15413,]  300 #> [15414,]  301 #> [15415,]  301 #> [15416,]  300 #> [15417,]  301 #> [15418,]  301 #> [15419,]  300 #> [15420,]  300 #> [15421,]  300 #> [15422,]  301 #> [15423,]  300 #> [15424,]  300 #> [15425,]  300 #> [15426,]  301 #> [15427,]  301 #> [15428,]  300 #> [15429,]  300 #> [15430,]  300 #> [15431,]  301 #> [15432,]  301 #> [15433,]  300 #> [15434,]  300 #> [15435,]  300 #> [15436,]  300 #> [15437,]  300 #> [15438,]  300 #> [15439,]  300 #> [15440,]  300 #> [15441,]  300 #> [15442,]  300 #> [15443,]  301 #> [15444,]  300 #> [15445,]  300 #> [15446,]  300 #> [15447,]  301 #> [15448,]  300 #> [15449,]  300 #> [15450,]  300 #> [15451,]  300 #> [15452,]  300 #> [15453,]  300 #> [15454,]  300 #> [15455,]  300 #> [15456,]  300 #> [15457,]  300 #> [15458,]  301 #> [15459,]  301 #> [15460,]  300 #> [15461,]  301 #> [15462,]  300 #> [15463,]  300 #> [15464,]  300 #> [15465,]  300 #> [15466,]  301 #> [15467,]  300 #> [15468,]  300 #> [15469,]  300 #> [15470,]  301 #> [15471,]  301 #> [15472,]  300 #> [15473,]  300 #> [15474,]  300 #> [15475,]  301 #> [15476,]  300 #> [15477,]  301 #> [15478,]  300 #> [15479,]  301 #> [15480,]  300 #> [15481,]  300 #> [15482,]  300 #> [15483,]  300 #> [15484,]  300 #> [15485,]  300 #> [15486,]  300 #> [15487,]  301 #> [15488,]  300 #> [15489,]  300 #> [15490,]  300 #> [15491,]  301 #> [15492,]  300 #> [15493,]  300 #> [15494,]  300 #> [15495,]  301 #> [15496,]  300 #> [15497,]  300 #> [15498,]  300 #> [15499,]  300 #> [15500,]  301 #> [15501,]  303 #> [15502,]  303 #> [15503,]  302 #> [15504,]  302 #> [15505,]  303 #> [15506,]  303 #> [15507,]  302 #> [15508,]  302 #> [15509,]  303 #> [15510,]  303 #> [15511,]  303 #> [15512,]  302 #> [15513,]  303 #> [15514,]  302 #> [15515,]  303 #> [15516,]  302 #> [15517,]  303 #> [15518,]  303 #> [15519,]  303 #> [15520,]  303 #> [15521,]  303 #> [15522,]  303 #> [15523,]  302 #> [15524,]  303 #> [15525,]  302 #> [15526,]  303 #> [15527,]  303 #> [15528,]  303 #> [15529,]  303 #> [15530,]  303 #> [15531,]  302 #> [15532,]  302 #> [15533,]  303 #> [15534,]  303 #> [15535,]  303 #> [15536,]  303 #> [15537,]  302 #> [15538,]  303 #> [15539,]  303 #> [15540,]  302 #> [15541,]  303 #> [15542,]  303 #> [15543,]  303 #> [15544,]  302 #> [15545,]  303 #> [15546,]  302 #> [15547,]  302 #> [15548,]  303 #> [15549,]  303 #> [15550,]  303 #> [15551,]  303 #> [15552,]  302 #> [15553,]  303 #> [15554,]  303 #> [15555,]  302 #> [15556,]  303 #> [15557,]  302 #> [15558,]  303 #> [15559,]  302 #> [15560,]  302 #> [15561,]  303 #> [15562,]  303 #> [15563,]  303 #> [15564,]  303 #> [15565,]  303 #> [15566,]  303 #> [15567,]  302 #> [15568,]  302 #> [15569,]  303 #> [15570,]  303 #> [15571,]  303 #> [15572,]  302 #> [15573,]  303 #> [15574,]  302 #> [15575,]  302 #> [15576,]  302 #> [15577,]  303 #> [15578,]  302 #> [15579,]  303 #> [15580,]  302 #> [15581,]  303 #> [15582,]  303 #> [15583,]  303 #> [15584,]  303 #> [15585,]  303 #> [15586,]  302 #> [15587,]  303 #> [15588,]  303 #> [15589,]  303 #> [15590,]  303 #> [15591,]  303 #> [15592,]  302 #> [15593,]  303 #> [15594,]  303 #> [15595,]  302 #> [15596,]  302 #> [15597,]  302 #> [15598,]  302 #> [15599,]  303 #> [15600,]  303 #> [15601,]  304 #> [15602,]  304 #> [15603,]  304 #> [15604,]  304 #> [15605,]  304 #> [15606,]  304 #> [15607,]  304 #> [15608,]  304 #> [15609,]  304 #> [15610,]  304 #> [15611,]  304 #> [15612,]  304 #> [15613,]  304 #> [15614,]  304 #> [15615,]  304 #> [15616,]  304 #> [15617,]  304 #> [15618,]  304 #> [15619,]  304 #> [15620,]  304 #> [15621,]  304 #> [15622,]  304 #> [15623,]  304 #> [15624,]  304 #> [15625,]  304 #> [15626,]  304 #> [15627,]  304 #> [15628,]  304 #> [15629,]  304 #> [15630,]  304 #> [15631,]  304 #> [15632,]  304 #> [15633,]  304 #> [15634,]  304 #> [15635,]  304 #> [15636,]  304 #> [15637,]  304 #> [15638,]  304 #> [15639,]  304 #> [15640,]  304 #> [15641,]  304 #> [15642,]  304 #> [15643,]  304 #> [15644,]  304 #> [15645,]  304 #> [15646,]  304 #> [15647,]  304 #> [15648,]  304 #> [15649,]  304 #> [15650,]  304 #> [15651,]  304 #> [15652,]  304 #> [15653,]  304 #> [15654,]  304 #> [15655,]  304 #> [15656,]  304 #> [15657,]  304 #> [15658,]  304 #> [15659,]  304 #> [15660,]  304 #> [15661,]  304 #> [15662,]  304 #> [15663,]  304 #> [15664,]  304 #> [15665,]  304 #> [15666,]  304 #> [15667,]  304 #> [15668,]  304 #> [15669,]  304 #> [15670,]  304 #> [15671,]  304 #> [15672,]  304 #> [15673,]  304 #> [15674,]  304 #> [15675,]  304 #> [15676,]  304 #> [15677,]  304 #> [15678,]  304 #> [15679,]  304 #> [15680,]  304 #> [15681,]  304 #> [15682,]  304 #> [15683,]  304 #> [15684,]  304 #> [15685,]  304 #> [15686,]  304 #> [15687,]  304 #> [15688,]  304 #> [15689,]  304 #> [15690,]  304 #> [15691,]  304 #> [15692,]  304 #> [15693,]  304 #> [15694,]  304 #> [15695,]  304 #> [15696,]  304 #> [15697,]  304 #> [15698,]  304 #> [15699,]  304 #> [15700,]  304 #> [15701,]  305 #> [15702,]  306 #> [15703,]  305 #> [15704,]  305 #> [15705,]  305 #> [15706,]  305 #> [15707,]  305 #> [15708,]  305 #> [15709,]  306 #> [15710,]  306 #> [15711,]  305 #> [15712,]  306 #> [15713,]  305 #> [15714,]  305 #> [15715,]  305 #> [15716,]  305 #> [15717,]  305 #> [15718,]  305 #> [15719,]  305 #> [15720,]  305 #> [15721,]  306 #> [15722,]  305 #> [15723,]  305 #> [15724,]  305 #> [15725,]  305 #> [15726,]  305 #> [15727,]  305 #> [15728,]  305 #> [15729,]  306 #> [15730,]  305 #> [15731,]  305 #> [15732,]  305 #> [15733,]  306 #> [15734,]  305 #> [15735,]  305 #> [15736,]  305 #> [15737,]  305 #> [15738,]  305 #> [15739,]  305 #> [15740,]  305 #> [15741,]  305 #> [15742,]  305 #> [15743,]  305 #> [15744,]  305 #> [15745,]  305 #> [15746,]  305 #> [15747,]  305 #> [15748,]  305 #> [15749,]  305 #> [15750,]  305 #> [15751,]  305 #> [15752,]  305 #> [15753,]  305 #> [15754,]  305 #> [15755,]  305 #> [15756,]  305 #> [15757,]  305 #> [15758,]  305 #> [15759,]  305 #> [15760,]  305 #> [15761,]  305 #> [15762,]  305 #> [15763,]  305 #> [15764,]  305 #> [15765,]  305 #> [15766,]  305 #> [15767,]  305 #> [15768,]  305 #> [15769,]  305 #> [15770,]  306 #> [15771,]  305 #> [15772,]  305 #> [15773,]  305 #> [15774,]  305 #> [15775,]  305 #> [15776,]  305 #> [15777,]  305 #> [15778,]  305 #> [15779,]  305 #> [15780,]  305 #> [15781,]  305 #> [15782,]  305 #> [15783,]  305 #> [15784,]  305 #> [15785,]  305 #> [15786,]  306 #> [15787,]  305 #> [15788,]  305 #> [15789,]  305 #> [15790,]  305 #> [15791,]  305 #> [15792,]  305 #> [15793,]  305 #> [15794,]  305 #> [15795,]  305 #> [15796,]  305 #> [15797,]  305 #> [15798,]  305 #> [15799,]  305 #> [15800,]  305 #> [15801,]  308 #> [15802,]  308 #> [15803,]  307 #> [15804,]  307 #> [15805,]  307 #> [15806,]  308 #> [15807,]  307 #> [15808,]  307 #> [15809,]  307 #> [15810,]  307 #> [15811,]  307 #> [15812,]  307 #> [15813,]  308 #> [15814,]  308 #> [15815,]  308 #> [15816,]  308 #> [15817,]  308 #> [15818,]  307 #> [15819,]  307 #> [15820,]  307 #> [15821,]  308 #> [15822,]  307 #> [15823,]  307 #> [15824,]  307 #> [15825,]  307 #> [15826,]  308 #> [15827,]  307 #> [15828,]  307 #> [15829,]  308 #> [15830,]  307 #> [15831,]  307 #> [15832,]  307 #> [15833,]  308 #> [15834,]  307 #> [15835,]  308 #> [15836,]  307 #> [15837,]  307 #> [15838,]  307 #> [15839,]  307 #> [15840,]  307 #> [15841,]  308 #> [15842,]  307 #> [15843,]  307 #> [15844,]  308 #> [15845,]  307 #> [15846,]  307 #> [15847,]  307 #> [15848,]  307 #> [15849,]  307 #> [15850,]  308 #> [15851,]  307 #> [15852,]  307 #> [15853,]  307 #> [15854,]  307 #> [15855,]  307 #> [15856,]  307 #> [15857,]  307 #> [15858,]  307 #> [15859,]  308 #> [15860,]  307 #> [15861,]  308 #> [15862,]  307 #> [15863,]  307 #> [15864,]  307 #> [15865,]  307 #> [15866,]  307 #> [15867,]  307 #> [15868,]  308 #> [15869,]  307 #> [15870,]  308 #> [15871,]  308 #> [15872,]  307 #> [15873,]  308 #> [15874,]  307 #> [15875,]  307 #> [15876,]  308 #> [15877,]  308 #> [15878,]  307 #> [15879,]  308 #> [15880,]  307 #> [15881,]  308 #> [15882,]  307 #> [15883,]  308 #> [15884,]  307 #> [15885,]  307 #> [15886,]  308 #> [15887,]  307 #> [15888,]  307 #> [15889,]  307 #> [15890,]  307 #> [15891,]  307 #> [15892,]  307 #> [15893,]  308 #> [15894,]  308 #> [15895,]  307 #> [15896,]  308 #> [15897,]  307 #> [15898,]  307 #> [15899,]  308 #> [15900,]  307 #> [15901,]  309 #> [15902,]  309 #> [15903,]  309 #> [15904,]  309 #> [15905,]  309 #> [15906,]  309 #> [15907,]  309 #> [15908,]  309 #> [15909,]  309 #> [15910,]  309 #> [15911,]  309 #> [15912,]  309 #> [15913,]  309 #> [15914,]  309 #> [15915,]  309 #> [15916,]  309 #> [15917,]  309 #> [15918,]  309 #> [15919,]  309 #> [15920,]  309 #> [15921,]  309 #> [15922,]  309 #> [15923,]  309 #> [15924,]  309 #> [15925,]  309 #> [15926,]  309 #> [15927,]  309 #> [15928,]  309 #> [15929,]  309 #> [15930,]  309 #> [15931,]  309 #> [15932,]  309 #> [15933,]  309 #> [15934,]  309 #> [15935,]  309 #> [15936,]  309 #> [15937,]  309 #> [15938,]  309 #> [15939,]  309 #> [15940,]  309 #> [15941,]  309 #> [15942,]  309 #> [15943,]  309 #> [15944,]  309 #> [15945,]  309 #> [15946,]  309 #> [15947,]  309 #> [15948,]  309 #> [15949,]  309 #> [15950,]  309 #> [15951,]  309 #> [15952,]  309 #> [15953,]  309 #> [15954,]  309 #> [15955,]  309 #> [15956,]  309 #> [15957,]  309 #> [15958,]  309 #> [15959,]  309 #> [15960,]  309 #> [15961,]  309 #> [15962,]  309 #> [15963,]  309 #> [15964,]  309 #> [15965,]  309 #> [15966,]  309 #> [15967,]  309 #> [15968,]  309 #> [15969,]  309 #> [15970,]  309 #> [15971,]  309 #> [15972,]  309 #> [15973,]  309 #> [15974,]  309 #> [15975,]  309 #> [15976,]  309 #> [15977,]  309 #> [15978,]  309 #> [15979,]  309 #> [15980,]  309 #> [15981,]  309 #> [15982,]  309 #> [15983,]  309 #> [15984,]  309 #> [15985,]  309 #> [15986,]  309 #> [15987,]  309 #> [15988,]  309 #> [15989,]  309 #> [15990,]  309 #> [15991,]  309 #> [15992,]  309 #> [15993,]  309 #> [15994,]  309 #> [15995,]  309 #> [15996,]  309 #> [15997,]  309 #> [15998,]  309 #> [15999,]  309 #> [16000,]  309 #> [16001,]  311 #> [16002,]  310 #> [16003,]  311 #> [16004,]  311 #> [16005,]  311 #> [16006,]  310 #> [16007,]  311 #> [16008,]  311 #> [16009,]  311 #> [16010,]  311 #> [16011,]  310 #> [16012,]  310 #> [16013,]  311 #> [16014,]  311 #> [16015,]  310 #> [16016,]  311 #> [16017,]  310 #> [16018,]  311 #> [16019,]  311 #> [16020,]  311 #> [16021,]  311 #> [16022,]  311 #> [16023,]  310 #> [16024,]  311 #> [16025,]  311 #> [16026,]  311 #> [16027,]  311 #> [16028,]  311 #> [16029,]  310 #> [16030,]  310 #> [16031,]  310 #> [16032,]  311 #> [16033,]  311 #> [16034,]  310 #> [16035,]  311 #> [16036,]  311 #> [16037,]  310 #> [16038,]  311 #> [16039,]  311 #> [16040,]  311 #> [16041,]  311 #> [16042,]  310 #> [16043,]  310 #> [16044,]  310 #> [16045,]  311 #> [16046,]  311 #> [16047,]  310 #> [16048,]  310 #> [16049,]  311 #> [16050,]  311 #> [16051,]  311 #> [16052,]  311 #> [16053,]  311 #> [16054,]  311 #> [16055,]  311 #> [16056,]  310 #> [16057,]  311 #> [16058,]  311 #> [16059,]  311 #> [16060,]  310 #> [16061,]  310 #> [16062,]  311 #> [16063,]  310 #> [16064,]  310 #> [16065,]  310 #> [16066,]  311 #> [16067,]  311 #> [16068,]  311 #> [16069,]  311 #> [16070,]  310 #> [16071,]  311 #> [16072,]  311 #> [16073,]  311 #> [16074,]  311 #> [16075,]  310 #> [16076,]  311 #> [16077,]  311 #> [16078,]  310 #> [16079,]  310 #> [16080,]  311 #> [16081,]  310 #> [16082,]  311 #> [16083,]  311 #> [16084,]  311 #> [16085,]  311 #> [16086,]  311 #> [16087,]  311 #> [16088,]  311 #> [16089,]  311 #> [16090,]  311 #> [16091,]  311 #> [16092,]  310 #> [16093,]  311 #> [16094,]  310 #> [16095,]  310 #> [16096,]  311 #> [16097,]  311 #> [16098,]  311 #> [16099,]  311 #> [16100,]  310 #> [16101,]  312 #> [16102,]  312 #> [16103,]  312 #> [16104,]  312 #> [16105,]  312 #> [16106,]  312 #> [16107,]  312 #> [16108,]  312 #> [16109,]  312 #> [16110,]  312 #> [16111,]  312 #> [16112,]  312 #> [16113,]  312 #> [16114,]  312 #> [16115,]  312 #> [16116,]  312 #> [16117,]  312 #> [16118,]  312 #> [16119,]  313 #> [16120,]  313 #> [16121,]  312 #> [16122,]  313 #> [16123,]  312 #> [16124,]  312 #> [16125,]  312 #> [16126,]  312 #> [16127,]  313 #> [16128,]  312 #> [16129,]  313 #> [16130,]  312 #> [16131,]  312 #> [16132,]  312 #> [16133,]  312 #> [16134,]  312 #> [16135,]  312 #> [16136,]  313 #> [16137,]  312 #> [16138,]  312 #> [16139,]  312 #> [16140,]  312 #> [16141,]  312 #> [16142,]  312 #> [16143,]  312 #> [16144,]  312 #> [16145,]  312 #> [16146,]  312 #> [16147,]  312 #> [16148,]  312 #> [16149,]  312 #> [16150,]  312 #> [16151,]  312 #> [16152,]  312 #> [16153,]  312 #> [16154,]  312 #> [16155,]  312 #> [16156,]  312 #> [16157,]  312 #> [16158,]  313 #> [16159,]  312 #> [16160,]  312 #> [16161,]  312 #> [16162,]  312 #> [16163,]  312 #> [16164,]  313 #> [16165,]  312 #> [16166,]  313 #> [16167,]  312 #> [16168,]  312 #> [16169,]  312 #> [16170,]  312 #> [16171,]  312 #> [16172,]  312 #> [16173,]  312 #> [16174,]  312 #> [16175,]  312 #> [16176,]  312 #> [16177,]  313 #> [16178,]  312 #> [16179,]  312 #> [16180,]  312 #> [16181,]  313 #> [16182,]  312 #> [16183,]  312 #> [16184,]  312 #> [16185,]  312 #> [16186,]  312 #> [16187,]  313 #> [16188,]  312 #> [16189,]  312 #> [16190,]  312 #> [16191,]  312 #> [16192,]  312 #> [16193,]  312 #> [16194,]  312 #> [16195,]  312 #> [16196,]  312 #> [16197,]  312 #> [16198,]  312 #> [16199,]  312 #> [16200,]  313 #> [16201,]  314 #> [16202,]  314 #> [16203,]  315 #> [16204,]  314 #> [16205,]  314 #> [16206,]  315 #> [16207,]  314 #> [16208,]  314 #> [16209,]  314 #> [16210,]  314 #> [16211,]  314 #> [16212,]  315 #> [16213,]  314 #> [16214,]  314 #> [16215,]  314 #> [16216,]  314 #> [16217,]  314 #> [16218,]  315 #> [16219,]  315 #> [16220,]  315 #> [16221,]  314 #> [16222,]  314 #> [16223,]  314 #> [16224,]  314 #> [16225,]  315 #> [16226,]  314 #> [16227,]  314 #> [16228,]  315 #> [16229,]  314 #> [16230,]  314 #> [16231,]  314 #> [16232,]  314 #> [16233,]  315 #> [16234,]  315 #> [16235,]  314 #> [16236,]  314 #> [16237,]  314 #> [16238,]  314 #> [16239,]  314 #> [16240,]  314 #> [16241,]  314 #> [16242,]  314 #> [16243,]  314 #> [16244,]  314 #> [16245,]  314 #> [16246,]  314 #> [16247,]  314 #> [16248,]  314 #> [16249,]  314 #> [16250,]  314 #> [16251,]  314 #> [16252,]  314 #> [16253,]  314 #> [16254,]  314 #> [16255,]  314 #> [16256,]  314 #> [16257,]  314 #> [16258,]  314 #> [16259,]  314 #> [16260,]  315 #> [16261,]  314 #> [16262,]  314 #> [16263,]  314 #> [16264,]  314 #> [16265,]  315 #> [16266,]  314 #> [16267,]  314 #> [16268,]  314 #> [16269,]  314 #> [16270,]  315 #> [16271,]  314 #> [16272,]  314 #> [16273,]  315 #> [16274,]  314 #> [16275,]  314 #> [16276,]  314 #> [16277,]  314 #> [16278,]  314 #> [16279,]  314 #> [16280,]  314 #> [16281,]  314 #> [16282,]  314 #> [16283,]  314 #> [16284,]  315 #> [16285,]  314 #> [16286,]  314 #> [16287,]  314 #> [16288,]  314 #> [16289,]  314 #> [16290,]  314 #> [16291,]  314 #> [16292,]  314 #> [16293,]  315 #> [16294,]  314 #> [16295,]  314 #> [16296,]  314 #> [16297,]  315 #> [16298,]  315 #> [16299,]  314 #> [16300,]  314 #> [16301,]  316 #> [16302,]  316 #> [16303,]  317 #> [16304,]  316 #> [16305,]  316 #> [16306,]  317 #> [16307,]  316 #> [16308,]  316 #> [16309,]  316 #> [16310,]  316 #> [16311,]  316 #> [16312,]  316 #> [16313,]  316 #> [16314,]  316 #> [16315,]  316 #> [16316,]  316 #> [16317,]  316 #> [16318,]  316 #> [16319,]  317 #> [16320,]  316 #> [16321,]  316 #> [16322,]  316 #> [16323,]  316 #> [16324,]  316 #> [16325,]  317 #> [16326,]  316 #> [16327,]  316 #> [16328,]  316 #> [16329,]  316 #> [16330,]  316 #> [16331,]  316 #> [16332,]  316 #> [16333,]  317 #> [16334,]  317 #> [16335,]  316 #> [16336,]  316 #> [16337,]  316 #> [16338,]  316 #> [16339,]  316 #> [16340,]  316 #> [16341,]  316 #> [16342,]  316 #> [16343,]  316 #> [16344,]  316 #> [16345,]  316 #> [16346,]  316 #> [16347,]  316 #> [16348,]  316 #> [16349,]  316 #> [16350,]  316 #> [16351,]  316 #> [16352,]  316 #> [16353,]  316 #> [16354,]  316 #> [16355,]  316 #> [16356,]  316 #> [16357,]  316 #> [16358,]  316 #> [16359,]  316 #> [16360,]  317 #> [16361,]  316 #> [16362,]  316 #> [16363,]  316 #> [16364,]  316 #> [16365,]  317 #> [16366,]  316 #> [16367,]  316 #> [16368,]  316 #> [16369,]  316 #> [16370,]  317 #> [16371,]  316 #> [16372,]  316 #> [16373,]  317 #> [16374,]  316 #> [16375,]  316 #> [16376,]  316 #> [16377,]  316 #> [16378,]  316 #> [16379,]  316 #> [16380,]  316 #> [16381,]  316 #> [16382,]  316 #> [16383,]  316 #> [16384,]  316 #> [16385,]  316 #> [16386,]  316 #> [16387,]  316 #> [16388,]  316 #> [16389,]  316 #> [16390,]  316 #> [16391,]  316 #> [16392,]  316 #> [16393,]  317 #> [16394,]  316 #> [16395,]  316 #> [16396,]  316 #> [16397,]  317 #> [16398,]  317 #> [16399,]  316 #> [16400,]  316 #> [16401,]  319 #> [16402,]  318 #> [16403,]  319 #> [16404,]  319 #> [16405,]  319 #> [16406,]  318 #> [16407,]  319 #> [16408,]  319 #> [16409,]  319 #> [16410,]  319 #> [16411,]  318 #> [16412,]  318 #> [16413,]  319 #> [16414,]  319 #> [16415,]  318 #> [16416,]  319 #> [16417,]  318 #> [16418,]  319 #> [16419,]  318 #> [16420,]  319 #> [16421,]  319 #> [16422,]  319 #> [16423,]  318 #> [16424,]  319 #> [16425,]  319 #> [16426,]  318 #> [16427,]  319 #> [16428,]  319 #> [16429,]  318 #> [16430,]  318 #> [16431,]  318 #> [16432,]  319 #> [16433,]  319 #> [16434,]  318 #> [16435,]  318 #> [16436,]  319 #> [16437,]  318 #> [16438,]  319 #> [16439,]  319 #> [16440,]  319 #> [16441,]  319 #> [16442,]  318 #> [16443,]  318 #> [16444,]  318 #> [16445,]  319 #> [16446,]  318 #> [16447,]  318 #> [16448,]  318 #> [16449,]  319 #> [16450,]  319 #> [16451,]  319 #> [16452,]  319 #> [16453,]  319 #> [16454,]  319 #> [16455,]  319 #> [16456,]  318 #> [16457,]  319 #> [16458,]  319 #> [16459,]  319 #> [16460,]  318 #> [16461,]  318 #> [16462,]  319 #> [16463,]  318 #> [16464,]  318 #> [16465,]  318 #> [16466,]  318 #> [16467,]  319 #> [16468,]  318 #> [16469,]  319 #> [16470,]  318 #> [16471,]  319 #> [16472,]  319 #> [16473,]  319 #> [16474,]  319 #> [16475,]  318 #> [16476,]  319 #> [16477,]  319 #> [16478,]  318 #> [16479,]  318 #> [16480,]  319 #> [16481,]  318 #> [16482,]  319 #> [16483,]  319 #> [16484,]  319 #> [16485,]  319 #> [16486,]  319 #> [16487,]  319 #> [16488,]  319 #> [16489,]  319 #> [16490,]  319 #> [16491,]  319 #> [16492,]  318 #> [16493,]  318 #> [16494,]  318 #> [16495,]  318 #> [16496,]  318 #> [16497,]  319 #> [16498,]  319 #> [16499,]  319 #> [16500,]  318 #> [16501,]  321 #> [16502,]  321 #> [16503,]  321 #> [16504,]  321 #> [16505,]  321 #> [16506,]  321 #> [16507,]  321 #> [16508,]  321 #> [16509,]  321 #> [16510,]  321 #> [16511,]  321 #> [16512,]  320 #> [16513,]  321 #> [16514,]  321 #> [16515,]  320 #> [16516,]  321 #> [16517,]  320 #> [16518,]  321 #> [16519,]  321 #> [16520,]  321 #> [16521,]  321 #> [16522,]  321 #> [16523,]  320 #> [16524,]  321 #> [16525,]  321 #> [16526,]  321 #> [16527,]  321 #> [16528,]  321 #> [16529,]  320 #> [16530,]  321 #> [16531,]  320 #> [16532,]  321 #> [16533,]  321 #> [16534,]  320 #> [16535,]  321 #> [16536,]  321 #> [16537,]  320 #> [16538,]  321 #> [16539,]  321 #> [16540,]  321 #> [16541,]  321 #> [16542,]  320 #> [16543,]  320 #> [16544,]  320 #> [16545,]  321 #> [16546,]  321 #> [16547,]  321 #> [16548,]  320 #> [16549,]  321 #> [16550,]  321 #> [16551,]  321 #> [16552,]  321 #> [16553,]  321 #> [16554,]  321 #> [16555,]  321 #> [16556,]  321 #> [16557,]  321 #> [16558,]  321 #> [16559,]  321 #> [16560,]  321 #> [16561,]  321 #> [16562,]  321 #> [16563,]  320 #> [16564,]  321 #> [16565,]  321 #> [16566,]  321 #> [16567,]  321 #> [16568,]  321 #> [16569,]  321 #> [16570,]  320 #> [16571,]  321 #> [16572,]  321 #> [16573,]  321 #> [16574,]  321 #> [16575,]  320 #> [16576,]  321 #> [16577,]  321 #> [16578,]  320 #> [16579,]  320 #> [16580,]  321 #> [16581,]  320 #> [16582,]  321 #> [16583,]  321 #> [16584,]  321 #> [16585,]  321 #> [16586,]  321 #> [16587,]  321 #> [16588,]  321 #> [16589,]  321 #> [16590,]  321 #> [16591,]  321 #> [16592,]  321 #> [16593,]  321 #> [16594,]  320 #> [16595,]  320 #> [16596,]  321 #> [16597,]  321 #> [16598,]  321 #> [16599,]  321 #> [16600,]  320 #> [16601,]  322 #> [16602,]  323 #> [16603,]  323 #> [16604,]  322 #> [16605,]  322 #> [16606,]  323 #> [16607,]  323 #> [16608,]  322 #> [16609,]  322 #> [16610,]  323 #> [16611,]  322 #> [16612,]  323 #> [16613,]  322 #> [16614,]  322 #> [16615,]  322 #> [16616,]  322 #> [16617,]  322 #> [16618,]  323 #> [16619,]  323 #> [16620,]  323 #> [16621,]  322 #> [16622,]  322 #> [16623,]  323 #> [16624,]  322 #> [16625,]  323 #> [16626,]  322 #> [16627,]  322 #> [16628,]  323 #> [16629,]  323 #> [16630,]  322 #> [16631,]  323 #> [16632,]  323 #> [16633,]  323 #> [16634,]  323 #> [16635,]  322 #> [16636,]  323 #> [16637,]  322 #> [16638,]  322 #> [16639,]  323 #> [16640,]  323 #> [16641,]  322 #> [16642,]  323 #> [16643,]  322 #> [16644,]  322 #> [16645,]  322 #> [16646,]  322 #> [16647,]  323 #> [16648,]  323 #> [16649,]  322 #> [16650,]  323 #> [16651,]  322 #> [16652,]  322 #> [16653,]  323 #> [16654,]  322 #> [16655,]  322 #> [16656,]  323 #> [16657,]  323 #> [16658,]  322 #> [16659,]  322 #> [16660,]  323 #> [16661,]  323 #> [16662,]  322 #> [16663,]  323 #> [16664,]  323 #> [16665,]  323 #> [16666,]  322 #> [16667,]  322 #> [16668,]  322 #> [16669,]  322 #> [16670,]  323 #> [16671,]  323 #> [16672,]  323 #> [16673,]  323 #> [16674,]  322 #> [16675,]  323 #> [16676,]  323 #> [16677,]  323 #> [16678,]  323 #> [16679,]  322 #> [16680,]  322 #> [16681,]  322 #> [16682,]  322 #> [16683,]  322 #> [16684,]  323 #> [16685,]  322 #> [16686,]  323 #> [16687,]  322 #> [16688,]  322 #> [16689,]  322 #> [16690,]  322 #> [16691,]  322 #> [16692,]  322 #> [16693,]  323 #> [16694,]  323 #> [16695,]  322 #> [16696,]  322 #> [16697,]  323 #> [16698,]  323 #> [16699,]  322 #> [16700,]  323 #> [16701,]  325 #> [16702,]  325 #> [16703,]  325 #> [16704,]  325 #> [16705,]  325 #> [16706,]  325 #> [16707,]  325 #> [16708,]  325 #> [16709,]  325 #> [16710,]  325 #> [16711,]  325 #> [16712,]  325 #> [16713,]  325 #> [16714,]  325 #> [16715,]  325 #> [16716,]  325 #> [16717,]  325 #> [16718,]  325 #> [16719,]  325 #> [16720,]  325 #> [16721,]  325 #> [16722,]  325 #> [16723,]  325 #> [16724,]  325 #> [16725,]  324 #> [16726,]  325 #> [16727,]  325 #> [16728,]  325 #> [16729,]  325 #> [16730,]  325 #> [16731,]  325 #> [16732,]  325 #> [16733,]  325 #> [16734,]  325 #> [16735,]  325 #> [16736,]  325 #> [16737,]  325 #> [16738,]  325 #> [16739,]  325 #> [16740,]  325 #> [16741,]  325 #> [16742,]  325 #> [16743,]  325 #> [16744,]  325 #> [16745,]  325 #> [16746,]  325 #> [16747,]  325 #> [16748,]  325 #> [16749,]  325 #> [16750,]  325 #> [16751,]  325 #> [16752,]  325 #> [16753,]  325 #> [16754,]  325 #> [16755,]  325 #> [16756,]  324 #> [16757,]  325 #> [16758,]  325 #> [16759,]  325 #> [16760,]  325 #> [16761,]  325 #> [16762,]  325 #> [16763,]  325 #> [16764,]  325 #> [16765,]  324 #> [16766,]  325 #> [16767,]  325 #> [16768,]  325 #> [16769,]  325 #> [16770,]  325 #> [16771,]  325 #> [16772,]  325 #> [16773,]  325 #> [16774,]  325 #> [16775,]  325 #> [16776,]  325 #> [16777,]  325 #> [16778,]  325 #> [16779,]  325 #> [16780,]  324 #> [16781,]  325 #> [16782,]  325 #> [16783,]  325 #> [16784,]  325 #> [16785,]  324 #> [16786,]  325 #> [16787,]  325 #> [16788,]  325 #> [16789,]  325 #> [16790,]  325 #> [16791,]  325 #> [16792,]  325 #> [16793,]  325 #> [16794,]  325 #> [16795,]  325 #> [16796,]  325 #> [16797,]  325 #> [16798,]  325 #> [16799,]  325 #> [16800,]  325 #> [16801,]  327 #> [16802,]  326 #> [16803,]  326 #> [16804,]  326 #> [16805,]  326 #> [16806,]  326 #> [16807,]  326 #> [16808,]  326 #> [16809,]  326 #> [16810,]  326 #> [16811,]  326 #> [16812,]  326 #> [16813,]  326 #> [16814,]  327 #> [16815,]  327 #> [16816,]  327 #> [16817,]  326 #> [16818,]  326 #> [16819,]  326 #> [16820,]  326 #> [16821,]  326 #> [16822,]  326 #> [16823,]  326 #> [16824,]  326 #> [16825,]  326 #> [16826,]  326 #> [16827,]  326 #> [16828,]  326 #> [16829,]  326 #> [16830,]  326 #> [16831,]  326 #> [16832,]  326 #> [16833,]  326 #> [16834,]  326 #> [16835,]  326 #> [16836,]  326 #> [16837,]  326 #> [16838,]  326 #> [16839,]  326 #> [16840,]  326 #> [16841,]  327 #> [16842,]  326 #> [16843,]  326 #> [16844,]  327 #> [16845,]  326 #> [16846,]  326 #> [16847,]  326 #> [16848,]  326 #> [16849,]  326 #> [16850,]  327 #> [16851,]  326 #> [16852,]  326 #> [16853,]  326 #> [16854,]  326 #> [16855,]  326 #> [16856,]  326 #> [16857,]  326 #> [16858,]  326 #> [16859,]  326 #> [16860,]  326 #> [16861,]  326 #> [16862,]  326 #> [16863,]  326 #> [16864,]  326 #> [16865,]  326 #> [16866,]  326 #> [16867,]  326 #> [16868,]  326 #> [16869,]  326 #> [16870,]  326 #> [16871,]  326 #> [16872,]  326 #> [16873,]  326 #> [16874,]  326 #> [16875,]  326 #> [16876,]  326 #> [16877,]  326 #> [16878,]  326 #> [16879,]  326 #> [16880,]  326 #> [16881,]  326 #> [16882,]  326 #> [16883,]  326 #> [16884,]  326 #> [16885,]  326 #> [16886,]  326 #> [16887,]  326 #> [16888,]  326 #> [16889,]  326 #> [16890,]  326 #> [16891,]  326 #> [16892,]  326 #> [16893,]  326 #> [16894,]  326 #> [16895,]  326 #> [16896,]  326 #> [16897,]  326 #> [16898,]  326 #> [16899,]  327 #> [16900,]  326 #> [16901,]  328 #> [16902,]  328 #> [16903,]  329 #> [16904,]  328 #> [16905,]  328 #> [16906,]  329 #> [16907,]  328 #> [16908,]  328 #> [16909,]  328 #> [16910,]  328 #> [16911,]  328 #> [16912,]  328 #> [16913,]  328 #> [16914,]  328 #> [16915,]  328 #> [16916,]  328 #> [16917,]  328 #> [16918,]  328 #> [16919,]  328 #> [16920,]  328 #> [16921,]  328 #> [16922,]  328 #> [16923,]  328 #> [16924,]  328 #> [16925,]  328 #> [16926,]  328 #> [16927,]  328 #> [16928,]  328 #> [16929,]  328 #> [16930,]  328 #> [16931,]  328 #> [16932,]  328 #> [16933,]  328 #> [16934,]  329 #> [16935,]  328 #> [16936,]  328 #> [16937,]  328 #> [16938,]  328 #> [16939,]  328 #> [16940,]  328 #> [16941,]  328 #> [16942,]  328 #> [16943,]  328 #> [16944,]  328 #> [16945,]  328 #> [16946,]  328 #> [16947,]  328 #> [16948,]  328 #> [16949,]  328 #> [16950,]  328 #> [16951,]  328 #> [16952,]  328 #> [16953,]  328 #> [16954,]  328 #> [16955,]  328 #> [16956,]  328 #> [16957,]  328 #> [16958,]  328 #> [16959,]  328 #> [16960,]  329 #> [16961,]  328 #> [16962,]  328 #> [16963,]  328 #> [16964,]  328 #> [16965,]  329 #> [16966,]  328 #> [16967,]  328 #> [16968,]  328 #> [16969,]  328 #> [16970,]  329 #> [16971,]  328 #> [16972,]  328 #> [16973,]  329 #> [16974,]  328 #> [16975,]  328 #> [16976,]  328 #> [16977,]  328 #> [16978,]  328 #> [16979,]  328 #> [16980,]  328 #> [16981,]  328 #> [16982,]  328 #> [16983,]  328 #> [16984,]  328 #> [16985,]  328 #> [16986,]  328 #> [16987,]  328 #> [16988,]  328 #> [16989,]  328 #> [16990,]  328 #> [16991,]  328 #> [16992,]  328 #> [16993,]  329 #> [16994,]  328 #> [16995,]  328 #> [16996,]  328 #> [16997,]  328 #> [16998,]  328 #> [16999,]  328 #> [17000,]  328 #> [17001,]  331 #> [17002,]  331 #> [17003,]  330 #> [17004,]  330 #> [17005,]  331 #> [17006,]  331 #> [17007,]  330 #> [17008,]  330 #> [17009,]  331 #> [17010,]  331 #> [17011,]  331 #> [17012,]  330 #> [17013,]  331 #> [17014,]  330 #> [17015,]  331 #> [17016,]  331 #> [17017,]  331 #> [17018,]  331 #> [17019,]  331 #> [17020,]  331 #> [17021,]  331 #> [17022,]  331 #> [17023,]  330 #> [17024,]  331 #> [17025,]  330 #> [17026,]  331 #> [17027,]  331 #> [17028,]  331 #> [17029,]  331 #> [17030,]  331 #> [17031,]  330 #> [17032,]  330 #> [17033,]  331 #> [17034,]  331 #> [17035,]  331 #> [17036,]  331 #> [17037,]  330 #> [17038,]  331 #> [17039,]  331 #> [17040,]  330 #> [17041,]  331 #> [17042,]  331 #> [17043,]  331 #> [17044,]  331 #> [17045,]  331 #> [17046,]  330 #> [17047,]  330 #> [17048,]  331 #> [17049,]  331 #> [17050,]  331 #> [17051,]  331 #> [17052,]  330 #> [17053,]  331 #> [17054,]  331 #> [17055,]  330 #> [17056,]  331 #> [17057,]  330 #> [17058,]  331 #> [17059,]  330 #> [17060,]  330 #> [17061,]  331 #> [17062,]  331 #> [17063,]  331 #> [17064,]  331 #> [17065,]  331 #> [17066,]  331 #> [17067,]  330 #> [17068,]  330 #> [17069,]  331 #> [17070,]  331 #> [17071,]  331 #> [17072,]  330 #> [17073,]  331 #> [17074,]  330 #> [17075,]  331 #> [17076,]  330 #> [17077,]  331 #> [17078,]  330 #> [17079,]  331 #> [17080,]  330 #> [17081,]  331 #> [17082,]  331 #> [17083,]  331 #> [17084,]  331 #> [17085,]  331 #> [17086,]  330 #> [17087,]  331 #> [17088,]  331 #> [17089,]  331 #> [17090,]  331 #> [17091,]  331 #> [17092,]  330 #> [17093,]  331 #> [17094,]  331 #> [17095,]  331 #> [17096,]  330 #> [17097,]  330 #> [17098,]  330 #> [17099,]  331 #> [17100,]  331 #> [17101,]  333 #> [17102,]  333 #> [17103,]  332 #> [17104,]  332 #> [17105,]  333 #> [17106,]  333 #> [17107,]  332 #> [17108,]  332 #> [17109,]  333 #> [17110,]  332 #> [17111,]  333 #> [17112,]  332 #> [17113,]  333 #> [17114,]  332 #> [17115,]  333 #> [17116,]  332 #> [17117,]  333 #> [17118,]  333 #> [17119,]  333 #> [17120,]  333 #> [17121,]  333 #> [17122,]  333 #> [17123,]  332 #> [17124,]  333 #> [17125,]  332 #> [17126,]  332 #> [17127,]  333 #> [17128,]  333 #> [17129,]  333 #> [17130,]  333 #> [17131,]  332 #> [17132,]  332 #> [17133,]  333 #> [17134,]  333 #> [17135,]  332 #> [17136,]  333 #> [17137,]  332 #> [17138,]  333 #> [17139,]  333 #> [17140,]  332 #> [17141,]  333 #> [17142,]  333 #> [17143,]  333 #> [17144,]  332 #> [17145,]  332 #> [17146,]  332 #> [17147,]  332 #> [17148,]  333 #> [17149,]  333 #> [17150,]  333 #> [17151,]  333 #> [17152,]  332 #> [17153,]  333 #> [17154,]  333 #> [17155,]  332 #> [17156,]  333 #> [17157,]  332 #> [17158,]  333 #> [17159,]  332 #> [17160,]  332 #> [17161,]  333 #> [17162,]  333 #> [17163,]  333 #> [17164,]  333 #> [17165,]  333 #> [17166,]  333 #> [17167,]  332 #> [17168,]  332 #> [17169,]  333 #> [17170,]  333 #> [17171,]  333 #> [17172,]  332 #> [17173,]  333 #> [17174,]  332 #> [17175,]  332 #> [17176,]  332 #> [17177,]  333 #> [17178,]  332 #> [17179,]  333 #> [17180,]  332 #> [17181,]  333 #> [17182,]  333 #> [17183,]  333 #> [17184,]  333 #> [17185,]  333 #> [17186,]  332 #> [17187,]  333 #> [17188,]  332 #> [17189,]  333 #> [17190,]  333 #> [17191,]  333 #> [17192,]  332 #> [17193,]  333 #> [17194,]  333 #> [17195,]  332 #> [17196,]  332 #> [17197,]  332 #> [17198,]  332 #> [17199,]  333 #> [17200,]  333 #> [17201,]  335 #> [17202,]  335 #> [17203,]  335 #> [17204,]  334 #> [17205,]  335 #> [17206,]  335 #> [17207,]  335 #> [17208,]  334 #> [17209,]  334 #> [17210,]  335 #> [17211,]  334 #> [17212,]  335 #> [17213,]  334 #> [17214,]  335 #> [17215,]  335 #> [17216,]  335 #> [17217,]  334 #> [17218,]  335 #> [17219,]  335 #> [17220,]  335 #> [17221,]  335 #> [17222,]  334 #> [17223,]  335 #> [17224,]  335 #> [17225,]  335 #> [17226,]  335 #> [17227,]  334 #> [17228,]  335 #> [17229,]  335 #> [17230,]  335 #> [17231,]  335 #> [17232,]  335 #> [17233,]  335 #> [17234,]  335 #> [17235,]  334 #> [17236,]  335 #> [17237,]  335 #> [17238,]  335 #> [17239,]  335 #> [17240,]  335 #> [17241,]  335 #> [17242,]  335 #> [17243,]  335 #> [17244,]  334 #> [17245,]  335 #> [17246,]  335 #> [17247,]  335 #> [17248,]  335 #> [17249,]  334 #> [17250,]  335 #> [17251,]  335 #> [17252,]  334 #> [17253,]  335 #> [17254,]  335 #> [17255,]  334 #> [17256,]  335 #> [17257,]  335 #> [17258,]  334 #> [17259,]  335 #> [17260,]  335 #> [17261,]  335 #> [17262,]  335 #> [17263,]  335 #> [17264,]  335 #> [17265,]  335 #> [17266,]  334 #> [17267,]  335 #> [17268,]  335 #> [17269,]  335 #> [17270,]  335 #> [17271,]  335 #> [17272,]  335 #> [17273,]  335 #> [17274,]  335 #> [17275,]  335 #> [17276,]  335 #> [17277,]  335 #> [17278,]  335 #> [17279,]  335 #> [17280,]  334 #> [17281,]  334 #> [17282,]  334 #> [17283,]  334 #> [17284,]  335 #> [17285,]  335 #> [17286,]  335 #> [17287,]  334 #> [17288,]  335 #> [17289,]  335 #> [17290,]  334 #> [17291,]  335 #> [17292,]  334 #> [17293,]  335 #> [17294,]  335 #> [17295,]  334 #> [17296,]  335 #> [17297,]  335 #> [17298,]  335 #> [17299,]  334 #> [17300,]  335 #> [17301,]  337 #> [17302,]  337 #> [17303,]  337 #> [17304,]  337 #> [17305,]  337 #> [17306,]  336 #> [17307,]  337 #> [17308,]  337 #> [17309,]  337 #> [17310,]  337 #> [17311,]  337 #> [17312,]  337 #> [17313,]  337 #> [17314,]  337 #> [17315,]  337 #> [17316,]  337 #> [17317,]  337 #> [17318,]  337 #> [17319,]  337 #> [17320,]  336 #> [17321,]  336 #> [17322,]  337 #> [17323,]  337 #> [17324,]  337 #> [17325,]  336 #> [17326,]  337 #> [17327,]  337 #> [17328,]  337 #> [17329,]  337 #> [17330,]  337 #> [17331,]  337 #> [17332,]  337 #> [17333,]  337 #> [17334,]  337 #> [17335,]  336 #> [17336,]  337 #> [17337,]  337 #> [17338,]  337 #> [17339,]  337 #> [17340,]  337 #> [17341,]  337 #> [17342,]  336 #> [17343,]  337 #> [17344,]  336 #> [17345,]  337 #> [17346,]  337 #> [17347,]  337 #> [17348,]  337 #> [17349,]  337 #> [17350,]  337 #> [17351,]  337 #> [17352,]  337 #> [17353,]  336 #> [17354,]  337 #> [17355,]  337 #> [17356,]  336 #> [17357,]  337 #> [17358,]  337 #> [17359,]  337 #> [17360,]  337 #> [17361,]  337 #> [17362,]  337 #> [17363,]  337 #> [17364,]  337 #> [17365,]  336 #> [17366,]  337 #> [17367,]  337 #> [17368,]  337 #> [17369,]  337 #> [17370,]  337 #> [17371,]  337 #> [17372,]  337 #> [17373,]  336 #> [17374,]  336 #> [17375,]  337 #> [17376,]  337 #> [17377,]  337 #> [17378,]  337 #> [17379,]  337 #> [17380,]  336 #> [17381,]  337 #> [17382,]  336 #> [17383,]  337 #> [17384,]  336 #> [17385,]  336 #> [17386,]  336 #> [17387,]  337 #> [17388,]  337 #> [17389,]  336 #> [17390,]  337 #> [17391,]  337 #> [17392,]  337 #> [17393,]  337 #> [17394,]  336 #> [17395,]  337 #> [17396,]  337 #> [17397,]  337 #> [17398,]  337 #> [17399,]  336 #> [17400,]  337 #> [17401,]  339 #> [17402,]  339 #> [17403,]  338 #> [17404,]  338 #> [17405,]  338 #> [17406,]  338 #> [17407,]  339 #> [17408,]  339 #> [17409,]  338 #> [17410,]  338 #> [17411,]  338 #> [17412,]  339 #> [17413,]  339 #> [17414,]  338 #> [17415,]  339 #> [17416,]  339 #> [17417,]  339 #> [17418,]  339 #> [17419,]  339 #> [17420,]  339 #> [17421,]  338 #> [17422,]  339 #> [17423,]  339 #> [17424,]  338 #> [17425,]  338 #> [17426,]  339 #> [17427,]  339 #> [17428,]  338 #> [17429,]  339 #> [17430,]  339 #> [17431,]  338 #> [17432,]  338 #> [17433,]  339 #> [17434,]  338 #> [17435,]  338 #> [17436,]  339 #> [17437,]  339 #> [17438,]  339 #> [17439,]  338 #> [17440,]  338 #> [17441,]  339 #> [17442,]  338 #> [17443,]  339 #> [17444,]  339 #> [17445,]  339 #> [17446,]  339 #> [17447,]  338 #> [17448,]  338 #> [17449,]  339 #> [17450,]  339 #> [17451,]  339 #> [17452,]  338 #> [17453,]  339 #> [17454,]  338 #> [17455,]  339 #> [17456,]  339 #> [17457,]  338 #> [17458,]  339 #> [17459,]  339 #> [17460,]  339 #> [17461,]  339 #> [17462,]  338 #> [17463,]  339 #> [17464,]  339 #> [17465,]  338 #> [17466,]  339 #> [17467,]  338 #> [17468,]  339 #> [17469,]  339 #> [17470,]  338 #> [17471,]  339 #> [17472,]  338 #> [17473,]  338 #> [17474,]  338 #> [17475,]  339 #> [17476,]  338 #> [17477,]  339 #> [17478,]  339 #> [17479,]  338 #> [17480,]  339 #> [17481,]  339 #> [17482,]  338 #> [17483,]  339 #> [17484,]  339 #> [17485,]  339 #> [17486,]  338 #> [17487,]  339 #> [17488,]  338 #> [17489,]  338 #> [17490,]  339 #> [17491,]  338 #> [17492,]  338 #> [17493,]  339 #> [17494,]  338 #> [17495,]  339 #> [17496,]  339 #> [17497,]  339 #> [17498,]  338 #> [17499,]  338 #> [17500,]  339 #> [17501,]  341 #> [17502,]  341 #> [17503,]  340 #> [17504,]  340 #> [17505,]  340 #> [17506,]  340 #> [17507,]  341 #> [17508,]  341 #> [17509,]  340 #> [17510,]  340 #> [17511,]  340 #> [17512,]  341 #> [17513,]  341 #> [17514,]  340 #> [17515,]  341 #> [17516,]  341 #> [17517,]  341 #> [17518,]  341 #> [17519,]  341 #> [17520,]  341 #> [17521,]  340 #> [17522,]  341 #> [17523,]  341 #> [17524,]  340 #> [17525,]  340 #> [17526,]  341 #> [17527,]  341 #> [17528,]  340 #> [17529,]  341 #> [17530,]  341 #> [17531,]  340 #> [17532,]  340 #> [17533,]  341 #> [17534,]  340 #> [17535,]  340 #> [17536,]  341 #> [17537,]  341 #> [17538,]  341 #> [17539,]  340 #> [17540,]  340 #> [17541,]  341 #> [17542,]  340 #> [17543,]  341 #> [17544,]  341 #> [17545,]  341 #> [17546,]  341 #> [17547,]  340 #> [17548,]  340 #> [17549,]  341 #> [17550,]  341 #> [17551,]  341 #> [17552,]  340 #> [17553,]  341 #> [17554,]  340 #> [17555,]  341 #> [17556,]  341 #> [17557,]  340 #> [17558,]  341 #> [17559,]  341 #> [17560,]  341 #> [17561,]  341 #> [17562,]  340 #> [17563,]  341 #> [17564,]  341 #> [17565,]  340 #> [17566,]  341 #> [17567,]  340 #> [17568,]  341 #> [17569,]  341 #> [17570,]  340 #> [17571,]  341 #> [17572,]  340 #> [17573,]  340 #> [17574,]  340 #> [17575,]  341 #> [17576,]  340 #> [17577,]  341 #> [17578,]  341 #> [17579,]  340 #> [17580,]  341 #> [17581,]  341 #> [17582,]  340 #> [17583,]  341 #> [17584,]  341 #> [17585,]  341 #> [17586,]  340 #> [17587,]  341 #> [17588,]  340 #> [17589,]  340 #> [17590,]  341 #> [17591,]  340 #> [17592,]  341 #> [17593,]  341 #> [17594,]  340 #> [17595,]  341 #> [17596,]  341 #> [17597,]  341 #> [17598,]  340 #> [17599,]  341 #> [17600,]  341 #> [17601,]  343 #> [17602,]  342 #> [17603,]  342 #> [17604,]  342 #> [17605,]  342 #> [17606,]  342 #> [17607,]  342 #> [17608,]  342 #> [17609,]  343 #> [17610,]  342 #> [17611,]  342 #> [17612,]  342 #> [17613,]  343 #> [17614,]  342 #> [17615,]  342 #> [17616,]  342 #> [17617,]  343 #> [17618,]  343 #> [17619,]  342 #> [17620,]  342 #> [17621,]  342 #> [17622,]  342 #> [17623,]  342 #> [17624,]  342 #> [17625,]  342 #> [17626,]  342 #> [17627,]  343 #> [17628,]  342 #> [17629,]  342 #> [17630,]  342 #> [17631,]  342 #> [17632,]  342 #> [17633,]  342 #> [17634,]  342 #> [17635,]  342 #> [17636,]  343 #> [17637,]  342 #> [17638,]  342 #> [17639,]  342 #> [17640,]  342 #> [17641,]  342 #> [17642,]  343 #> [17643,]  342 #> [17644,]  342 #> [17645,]  342 #> [17646,]  342 #> [17647,]  342 #> [17648,]  342 #> [17649,]  342 #> [17650,]  342 #> [17651,]  343 #> [17652,]  342 #> [17653,]  343 #> [17654,]  343 #> [17655,]  342 #> [17656,]  343 #> [17657,]  342 #> [17658,]  342 #> [17659,]  342 #> [17660,]  342 #> [17661,]  342 #> [17662,]  342 #> [17663,]  342 #> [17664,]  342 #> [17665,]  343 #> [17666,]  343 #> [17667,]  342 #> [17668,]  342 #> [17669,]  342 #> [17670,]  342 #> [17671,]  342 #> [17672,]  342 #> [17673,]  342 #> [17674,]  342 #> [17675,]  342 #> [17676,]  342 #> [17677,]  342 #> [17678,]  342 #> [17679,]  343 #> [17680,]  342 #> [17681,]  342 #> [17682,]  343 #> [17683,]  343 #> [17684,]  343 #> [17685,]  342 #> [17686,]  342 #> [17687,]  343 #> [17688,]  342 #> [17689,]  342 #> [17690,]  342 #> [17691,]  343 #> [17692,]  342 #> [17693,]  343 #> [17694,]  343 #> [17695,]  342 #> [17696,]  342 #> [17697,]  342 #> [17698,]  342 #> [17699,]  342 #> [17700,]  342 #> [17701,]  344 #> [17702,]  344 #> [17703,]  344 #> [17704,]  344 #> [17705,]  344 #> [17706,]  344 #> [17707,]  344 #> [17708,]  344 #> [17709,]  344 #> [17710,]  344 #> [17711,]  344 #> [17712,]  344 #> [17713,]  344 #> [17714,]  344 #> [17715,]  344 #> [17716,]  344 #> [17717,]  344 #> [17718,]  344 #> [17719,]  344 #> [17720,]  344 #> [17721,]  344 #> [17722,]  344 #> [17723,]  344 #> [17724,]  344 #> [17725,]  344 #> [17726,]  344 #> [17727,]  344 #> [17728,]  344 #> [17729,]  344 #> [17730,]  344 #> [17731,]  344 #> [17732,]  344 #> [17733,]  344 #> [17734,]  344 #> [17735,]  344 #> [17736,]  344 #> [17737,]  344 #> [17738,]  344 #> [17739,]  344 #> [17740,]  344 #> [17741,]  344 #> [17742,]  344 #> [17743,]  344 #> [17744,]  344 #> [17745,]  344 #> [17746,]  344 #> [17747,]  344 #> [17748,]  344 #> [17749,]  344 #> [17750,]  344 #> [17751,]  344 #> [17752,]  344 #> [17753,]  344 #> [17754,]  344 #> [17755,]  344 #> [17756,]  344 #> [17757,]  344 #> [17758,]  344 #> [17759,]  344 #> [17760,]  344 #> [17761,]  344 #> [17762,]  344 #> [17763,]  344 #> [17764,]  344 #> [17765,]  344 #> [17766,]  344 #> [17767,]  344 #> [17768,]  344 #> [17769,]  344 #> [17770,]  344 #> [17771,]  344 #> [17772,]  344 #> [17773,]  344 #> [17774,]  344 #> [17775,]  344 #> [17776,]  344 #> [17777,]  344 #> [17778,]  344 #> [17779,]  344 #> [17780,]  344 #> [17781,]  344 #> [17782,]  344 #> [17783,]  344 #> [17784,]  344 #> [17785,]  344 #> [17786,]  344 #> [17787,]  344 #> [17788,]  344 #> [17789,]  344 #> [17790,]  344 #> [17791,]  344 #> [17792,]  344 #> [17793,]  344 #> [17794,]  344 #> [17795,]  344 #> [17796,]  344 #> [17797,]  344 #> [17798,]  344 #> [17799,]  344 #> [17800,]  344 #> [17801,]  346 #> [17802,]  346 #> [17803,]  345 #> [17804,]  345 #> [17805,]  346 #> [17806,]  346 #> [17807,]  345 #> [17808,]  345 #> [17809,]  346 #> [17810,]  346 #> [17811,]  346 #> [17812,]  345 #> [17813,]  346 #> [17814,]  346 #> [17815,]  346 #> [17816,]  346 #> [17817,]  346 #> [17818,]  346 #> [17819,]  346 #> [17820,]  346 #> [17821,]  346 #> [17822,]  346 #> [17823,]  345 #> [17824,]  346 #> [17825,]  345 #> [17826,]  346 #> [17827,]  346 #> [17828,]  346 #> [17829,]  346 #> [17830,]  346 #> [17831,]  345 #> [17832,]  346 #> [17833,]  346 #> [17834,]  346 #> [17835,]  346 #> [17836,]  346 #> [17837,]  346 #> [17838,]  346 #> [17839,]  346 #> [17840,]  345 #> [17841,]  346 #> [17842,]  346 #> [17843,]  346 #> [17844,]  346 #> [17845,]  346 #> [17846,]  346 #> [17847,]  345 #> [17848,]  346 #> [17849,]  346 #> [17850,]  346 #> [17851,]  346 #> [17852,]  345 #> [17853,]  346 #> [17854,]  346 #> [17855,]  346 #> [17856,]  346 #> [17857,]  345 #> [17858,]  346 #> [17859,]  345 #> [17860,]  345 #> [17861,]  346 #> [17862,]  346 #> [17863,]  346 #> [17864,]  346 #> [17865,]  346 #> [17866,]  346 #> [17867,]  346 #> [17868,]  345 #> [17869,]  346 #> [17870,]  346 #> [17871,]  346 #> [17872,]  346 #> [17873,]  346 #> [17874,]  346 #> [17875,]  346 #> [17876,]  346 #> [17877,]  346 #> [17878,]  346 #> [17879,]  346 #> [17880,]  345 #> [17881,]  346 #> [17882,]  346 #> [17883,]  346 #> [17884,]  346 #> [17885,]  346 #> [17886,]  345 #> [17887,]  346 #> [17888,]  346 #> [17889,]  346 #> [17890,]  346 #> [17891,]  346 #> [17892,]  346 #> [17893,]  346 #> [17894,]  346 #> [17895,]  346 #> [17896,]  345 #> [17897,]  345 #> [17898,]  345 #> [17899,]  346 #> [17900,]  346 #> [17901,]  348 #> [17902,]  348 #> [17903,]  347 #> [17904,]  348 #> [17905,]  348 #> [17906,]  348 #> [17907,]  348 #> [17908,]  348 #> [17909,]  348 #> [17910,]  348 #> [17911,]  348 #> [17912,]  347 #> [17913,]  348 #> [17914,]  347 #> [17915,]  348 #> [17916,]  348 #> [17917,]  348 #> [17918,]  348 #> [17919,]  348 #> [17920,]  348 #> [17921,]  348 #> [17922,]  348 #> [17923,]  348 #> [17924,]  348 #> [17925,]  348 #> [17926,]  347 #> [17927,]  348 #> [17928,]  348 #> [17929,]  348 #> [17930,]  348 #> [17931,]  348 #> [17932,]  347 #> [17933,]  348 #> [17934,]  348 #> [17935,]  348 #> [17936,]  348 #> [17937,]  348 #> [17938,]  348 #> [17939,]  348 #> [17940,]  348 #> [17941,]  348 #> [17942,]  348 #> [17943,]  348 #> [17944,]  348 #> [17945,]  348 #> [17946,]  348 #> [17947,]  348 #> [17948,]  348 #> [17949,]  348 #> [17950,]  348 #> [17951,]  347 #> [17952,]  348 #> [17953,]  348 #> [17954,]  347 #> [17955,]  348 #> [17956,]  348 #> [17957,]  348 #> [17958,]  348 #> [17959,]  348 #> [17960,]  348 #> [17961,]  348 #> [17962,]  348 #> [17963,]  348 #> [17964,]  348 #> [17965,]  348 #> [17966,]  347 #> [17967,]  348 #> [17968,]  348 #> [17969,]  347 #> [17970,]  348 #> [17971,]  348 #> [17972,]  348 #> [17973,]  348 #> [17974,]  348 #> [17975,]  348 #> [17976,]  348 #> [17977,]  348 #> [17978,]  348 #> [17979,]  348 #> [17980,]  347 #> [17981,]  348 #> [17982,]  348 #> [17983,]  348 #> [17984,]  348 #> [17985,]  348 #> [17986,]  348 #> [17987,]  348 #> [17988,]  348 #> [17989,]  348 #> [17990,]  348 #> [17991,]  348 #> [17992,]  348 #> [17993,]  348 #> [17994,]  348 #> [17995,]  348 #> [17996,]  348 #> [17997,]  348 #> [17998,]  348 #> [17999,]  348 #> [18000,]  348 #> [18001,]  350 #> [18002,]  349 #> [18003,]  350 #> [18004,]  350 #> [18005,]  350 #> [18006,]  349 #> [18007,]  350 #> [18008,]  350 #> [18009,]  350 #> [18010,]  350 #> [18011,]  349 #> [18012,]  349 #> [18013,]  350 #> [18014,]  350 #> [18015,]  349 #> [18016,]  350 #> [18017,]  349 #> [18018,]  350 #> [18019,]  349 #> [18020,]  350 #> [18021,]  350 #> [18022,]  350 #> [18023,]  349 #> [18024,]  350 #> [18025,]  350 #> [18026,]  349 #> [18027,]  350 #> [18028,]  350 #> [18029,]  349 #> [18030,]  349 #> [18031,]  349 #> [18032,]  350 #> [18033,]  350 #> [18034,]  349 #> [18035,]  349 #> [18036,]  350 #> [18037,]  349 #> [18038,]  350 #> [18039,]  350 #> [18040,]  350 #> [18041,]  350 #> [18042,]  349 #> [18043,]  349 #> [18044,]  349 #> [18045,]  350 #> [18046,]  350 #> [18047,]  349 #> [18048,]  349 #> [18049,]  350 #> [18050,]  350 #> [18051,]  350 #> [18052,]  350 #> [18053,]  350 #> [18054,]  350 #> [18055,]  350 #> [18056,]  349 #> [18057,]  350 #> [18058,]  350 #> [18059,]  350 #> [18060,]  349 #> [18061,]  349 #> [18062,]  350 #> [18063,]  349 #> [18064,]  349 #> [18065,]  349 #> [18066,]  349 #> [18067,]  350 #> [18068,]  349 #> [18069,]  350 #> [18070,]  349 #> [18071,]  350 #> [18072,]  350 #> [18073,]  350 #> [18074,]  350 #> [18075,]  349 #> [18076,]  350 #> [18077,]  350 #> [18078,]  349 #> [18079,]  349 #> [18080,]  350 #> [18081,]  349 #> [18082,]  350 #> [18083,]  350 #> [18084,]  350 #> [18085,]  350 #> [18086,]  350 #> [18087,]  350 #> [18088,]  350 #> [18089,]  350 #> [18090,]  350 #> [18091,]  350 #> [18092,]  349 #> [18093,]  350 #> [18094,]  349 #> [18095,]  349 #> [18096,]  349 #> [18097,]  350 #> [18098,]  350 #> [18099,]  350 #> [18100,]  349 #> [18101,]  351 #> [18102,]  351 #> [18103,]  351 #> [18104,]  351 #> [18105,]  351 #> [18106,]  351 #> [18107,]  351 #> [18108,]  351 #> [18109,]  351 #> [18110,]  351 #> [18111,]  351 #> [18112,]  351 #> [18113,]  351 #> [18114,]  351 #> [18115,]  351 #> [18116,]  351 #> [18117,]  351 #> [18118,]  351 #> [18119,]  351 #> [18120,]  351 #> [18121,]  351 #> [18122,]  351 #> [18123,]  351 #> [18124,]  351 #> [18125,]  351 #> [18126,]  351 #> [18127,]  351 #> [18128,]  351 #> [18129,]  351 #> [18130,]  351 #> [18131,]  351 #> [18132,]  351 #> [18133,]  351 #> [18134,]  351 #> [18135,]  351 #> [18136,]  351 #> [18137,]  351 #> [18138,]  351 #> [18139,]  351 #> [18140,]  351 #> [18141,]  351 #> [18142,]  351 #> [18143,]  351 #> [18144,]  351 #> [18145,]  351 #> [18146,]  351 #> [18147,]  351 #> [18148,]  351 #> [18149,]  351 #> [18150,]  351 #> [18151,]  351 #> [18152,]  351 #> [18153,]  351 #> [18154,]  351 #> [18155,]  351 #> [18156,]  351 #> [18157,]  351 #> [18158,]  351 #> [18159,]  351 #> [18160,]  351 #> [18161,]  351 #> [18162,]  351 #> [18163,]  351 #> [18164,]  351 #> [18165,]  351 #> [18166,]  351 #> [18167,]  351 #> [18168,]  351 #> [18169,]  351 #> [18170,]  351 #> [18171,]  351 #> [18172,]  351 #> [18173,]  351 #> [18174,]  351 #> [18175,]  351 #> [18176,]  351 #> [18177,]  351 #> [18178,]  351 #> [18179,]  351 #> [18180,]  351 #> [18181,]  351 #> [18182,]  351 #> [18183,]  351 #> [18184,]  351 #> [18185,]  351 #> [18186,]  351 #> [18187,]  351 #> [18188,]  351 #> [18189,]  351 #> [18190,]  351 #> [18191,]  351 #> [18192,]  351 #> [18193,]  351 #> [18194,]  351 #> [18195,]  351 #> [18196,]  351 #> [18197,]  351 #> [18198,]  351 #> [18199,]  351 #> [18200,]  351 #> [18201,]  352 #> [18202,]  352 #> [18203,]  352 #> [18204,]  353 #> [18205,]  352 #> [18206,]  353 #> [18207,]  352 #> [18208,]  352 #> [18209,]  353 #> [18210,]  353 #> [18211,]  353 #> [18212,]  353 #> [18213,]  352 #> [18214,]  353 #> [18215,]  353 #> [18216,]  352 #> [18217,]  352 #> [18218,]  353 #> [18219,]  353 #> [18220,]  352 #> [18221,]  353 #> [18222,]  352 #> [18223,]  353 #> [18224,]  352 #> [18225,]  352 #> [18226,]  353 #> [18227,]  353 #> [18228,]  352 #> [18229,]  352 #> [18230,]  353 #> [18231,]  353 #> [18232,]  353 #> [18233,]  353 #> [18234,]  353 #> [18235,]  352 #> [18236,]  353 #> [18237,]  352 #> [18238,]  353 #> [18239,]  352 #> [18240,]  352 #> [18241,]  353 #> [18242,]  353 #> [18243,]  352 #> [18244,]  352 #> [18245,]  352 #> [18246,]  352 #> [18247,]  352 #> [18248,]  353 #> [18249,]  352 #> [18250,]  352 #> [18251,]  352 #> [18252,]  353 #> [18253,]  352 #> [18254,]  352 #> [18255,]  352 #> [18256,]  352 #> [18257,]  352 #> [18258,]  353 #> [18259,]  352 #> [18260,]  353 #> [18261,]  353 #> [18262,]  353 #> [18263,]  352 #> [18264,]  353 #> [18265,]  352 #> [18266,]  352 #> [18267,]  353 #> [18268,]  353 #> [18269,]  353 #> [18270,]  352 #> [18271,]  352 #> [18272,]  352 #> [18273,]  353 #> [18274,]  353 #> [18275,]  353 #> [18276,]  352 #> [18277,]  352 #> [18278,]  352 #> [18279,]  352 #> [18280,]  353 #> [18281,]  352 #> [18282,]  353 #> [18283,]  352 #> [18284,]  352 #> [18285,]  353 #> [18286,]  352 #> [18287,]  352 #> [18288,]  352 #> [18289,]  352 #> [18290,]  352 #> [18291,]  353 #> [18292,]  353 #> [18293,]  353 #> [18294,]  352 #> [18295,]  353 #> [18296,]  353 #> [18297,]  353 #> [18298,]  352 #> [18299,]  353 #> [18300,]  352 #> [18301,]  354 #> [18302,]  354 #> [18303,]  355 #> [18304,]  354 #> [18305,]  354 #> [18306,]  355 #> [18307,]  354 #> [18308,]  354 #> [18309,]  354 #> [18310,]  354 #> [18311,]  354 #> [18312,]  354 #> [18313,]  354 #> [18314,]  354 #> [18315,]  354 #> [18316,]  354 #> [18317,]  354 #> [18318,]  354 #> [18319,]  354 #> [18320,]  354 #> [18321,]  354 #> [18322,]  354 #> [18323,]  354 #> [18324,]  354 #> [18325,]  354 #> [18326,]  354 #> [18327,]  354 #> [18328,]  354 #> [18329,]  354 #> [18330,]  354 #> [18331,]  354 #> [18332,]  354 #> [18333,]  354 #> [18334,]  355 #> [18335,]  354 #> [18336,]  354 #> [18337,]  354 #> [18338,]  354 #> [18339,]  354 #> [18340,]  354 #> [18341,]  354 #> [18342,]  354 #> [18343,]  354 #> [18344,]  354 #> [18345,]  354 #> [18346,]  354 #> [18347,]  354 #> [18348,]  354 #> [18349,]  354 #> [18350,]  354 #> [18351,]  354 #> [18352,]  354 #> [18353,]  354 #> [18354,]  354 #> [18355,]  354 #> [18356,]  354 #> [18357,]  354 #> [18358,]  354 #> [18359,]  354 #> [18360,]  355 #> [18361,]  354 #> [18362,]  354 #> [18363,]  354 #> [18364,]  354 #> [18365,]  355 #> [18366,]  354 #> [18367,]  354 #> [18368,]  354 #> [18369,]  354 #> [18370,]  355 #> [18371,]  354 #> [18372,]  354 #> [18373,]  354 #> [18374,]  354 #> [18375,]  354 #> [18376,]  354 #> [18377,]  354 #> [18378,]  354 #> [18379,]  354 #> [18380,]  354 #> [18381,]  354 #> [18382,]  354 #> [18383,]  354 #> [18384,]  354 #> [18385,]  354 #> [18386,]  354 #> [18387,]  354 #> [18388,]  354 #> [18389,]  354 #> [18390,]  354 #> [18391,]  354 #> [18392,]  354 #> [18393,]  355 #> [18394,]  354 #> [18395,]  354 #> [18396,]  354 #> [18397,]  354 #> [18398,]  354 #> [18399,]  354 #> [18400,]  354 #> [18401,]  357 #> [18402,]  357 #> [18403,]  357 #> [18404,]  357 #> [18405,]  357 #> [18406,]  357 #> [18407,]  357 #> [18408,]  357 #> [18409,]  357 #> [18410,]  357 #> [18411,]  357 #> [18412,]  356 #> [18413,]  357 #> [18414,]  357 #> [18415,]  356 #> [18416,]  357 #> [18417,]  356 #> [18418,]  357 #> [18419,]  357 #> [18420,]  357 #> [18421,]  357 #> [18422,]  357 #> [18423,]  356 #> [18424,]  357 #> [18425,]  357 #> [18426,]  357 #> [18427,]  357 #> [18428,]  357 #> [18429,]  357 #> [18430,]  357 #> [18431,]  356 #> [18432,]  357 #> [18433,]  357 #> [18434,]  356 #> [18435,]  357 #> [18436,]  357 #> [18437,]  356 #> [18438,]  357 #> [18439,]  357 #> [18440,]  357 #> [18441,]  357 #> [18442,]  356 #> [18443,]  356 #> [18444,]  356 #> [18445,]  357 #> [18446,]  357 #> [18447,]  357 #> [18448,]  356 #> [18449,]  357 #> [18450,]  357 #> [18451,]  357 #> [18452,]  357 #> [18453,]  357 #> [18454,]  357 #> [18455,]  357 #> [18456,]  357 #> [18457,]  357 #> [18458,]  357 #> [18459,]  357 #> [18460,]  357 #> [18461,]  357 #> [18462,]  357 #> [18463,]  356 #> [18464,]  357 #> [18465,]  357 #> [18466,]  357 #> [18467,]  357 #> [18468,]  357 #> [18469,]  357 #> [18470,]  356 #> [18471,]  357 #> [18472,]  357 #> [18473,]  357 #> [18474,]  357 #> [18475,]  356 #> [18476,]  357 #> [18477,]  357 #> [18478,]  356 #> [18479,]  356 #> [18480,]  357 #> [18481,]  356 #> [18482,]  357 #> [18483,]  357 #> [18484,]  357 #> [18485,]  357 #> [18486,]  357 #> [18487,]  357 #> [18488,]  357 #> [18489,]  357 #> [18490,]  357 #> [18491,]  357 #> [18492,]  357 #> [18493,]  357 #> [18494,]  356 #> [18495,]  356 #> [18496,]  357 #> [18497,]  357 #> [18498,]  357 #> [18499,]  357 #> [18500,]  356 #> [18501,]  359 #> [18502,]  359 #> [18503,]  358 #> [18504,]  358 #> [18505,]  358 #> [18506,]  359 #> [18507,]  359 #> [18508,]  358 #> [18509,]  358 #> [18510,]  358 #> [18511,]  359 #> [18512,]  359 #> [18513,]  359 #> [18514,]  359 #> [18515,]  359 #> [18516,]  359 #> [18517,]  359 #> [18518,]  358 #> [18519,]  359 #> [18520,]  358 #> [18521,]  359 #> [18522,]  359 #> [18523,]  358 #> [18524,]  358 #> [18525,]  359 #> [18526,]  359 #> [18527,]  359 #> [18528,]  359 #> [18529,]  359 #> [18530,]  358 #> [18531,]  358 #> [18532,]  358 #> [18533,]  359 #> [18534,]  358 #> [18535,]  359 #> [18536,]  358 #> [18537,]  359 #> [18538,]  359 #> [18539,]  358 #> [18540,]  359 #> [18541,]  359 #> [18542,]  358 #> [18543,]  358 #> [18544,]  359 #> [18545,]  358 #> [18546,]  359 #> [18547,]  359 #> [18548,]  358 #> [18549,]  358 #> [18550,]  359 #> [18551,]  358 #> [18552,]  359 #> [18553,]  358 #> [18554,]  359 #> [18555,]  359 #> [18556,]  358 #> [18557,]  359 #> [18558,]  359 #> [18559,]  359 #> [18560,]  358 #> [18561,]  359 #> [18562,]  358 #> [18563,]  359 #> [18564,]  358 #> [18565,]  358 #> [18566,]  358 #> [18567,]  358 #> [18568,]  359 #> [18569,]  359 #> [18570,]  359 #> [18571,]  359 #> [18572,]  358 #> [18573,]  359 #> [18574,]  359 #> [18575,]  359 #> [18576,]  359 #> [18577,]  359 #> [18578,]  358 #> [18579,]  359 #> [18580,]  359 #> [18581,]  359 #> [18582,]  359 #> [18583,]  359 #> [18584,]  359 #> [18585,]  358 #> [18586,]  359 #> [18587,]  359 #> [18588,]  358 #> [18589,]  358 #> [18590,]  359 #> [18591,]  358 #> [18592,]  359 #> [18593,]  359 #> [18594,]  359 #> [18595,]  358 #> [18596,]  359 #> [18597,]  359 #> [18598,]  359 #> [18599,]  359 #> [18600,]  359 #> [18601,]  360 #> [18602,]  360 #> [18603,]  360 #> [18604,]  360 #> [18605,]  361 #> [18606,]  360 #> [18607,]  360 #> [18608,]  360 #> [18609,]  360 #> [18610,]  360 #> [18611,]  360 #> [18612,]  360 #> [18613,]  360 #> [18614,]  361 #> [18615,]  361 #> [18616,]  360 #> [18617,]  360 #> [18618,]  361 #> [18619,]  360 #> [18620,]  360 #> [18621,]  360 #> [18622,]  360 #> [18623,]  360 #> [18624,]  360 #> [18625,]  360 #> [18626,]  360 #> [18627,]  361 #> [18628,]  360 #> [18629,]  360 #> [18630,]  360 #> [18631,]  360 #> [18632,]  361 #> [18633,]  360 #> [18634,]  360 #> [18635,]  360 #> [18636,]  360 #> [18637,]  360 #> [18638,]  360 #> [18639,]  360 #> [18640,]  360 #> [18641,]  360 #> [18642,]  360 #> [18643,]  360 #> [18644,]  360 #> [18645,]  360 #> [18646,]  360 #> [18647,]  360 #> [18648,]  360 #> [18649,]  360 #> [18650,]  360 #> [18651,]  360 #> [18652,]  360 #> [18653,]  360 #> [18654,]  360 #> [18655,]  360 #> [18656,]  360 #> [18657,]  360 #> [18658,]  360 #> [18659,]  360 #> [18660,]  360 #> [18661,]  360 #> [18662,]  360 #> [18663,]  360 #> [18664,]  360 #> [18665,]  360 #> [18666,]  360 #> [18667,]  360 #> [18668,]  360 #> [18669,]  360 #> [18670,]  360 #> [18671,]  361 #> [18672,]  360 #> [18673,]  360 #> [18674,]  360 #> [18675,]  361 #> [18676,]  360 #> [18677,]  360 #> [18678,]  360 #> [18679,]  360 #> [18680,]  360 #> [18681,]  360 #> [18682,]  360 #> [18683,]  360 #> [18684,]  360 #> [18685,]  360 #> [18686,]  360 #> [18687,]  360 #> [18688,]  360 #> [18689,]  360 #> [18690,]  360 #> [18691,]  361 #> [18692,]  360 #> [18693,]  360 #> [18694,]  360 #> [18695,]  361 #> [18696,]  360 #> [18697,]  360 #> [18698,]  360 #> [18699,]  360 #> [18700,]  361 #> [18701,]  362 #> [18702,]  362 #> [18703,]  362 #> [18704,]  362 #> [18705,]  362 #> [18706,]  362 #> [18707,]  362 #> [18708,]  362 #> [18709,]  362 #> [18710,]  362 #> [18711,]  362 #> [18712,]  362 #> [18713,]  362 #> [18714,]  362 #> [18715,]  362 #> [18716,]  362 #> [18717,]  362 #> [18718,]  362 #> [18719,]  362 #> [18720,]  362 #> [18721,]  362 #> [18722,]  362 #> [18723,]  362 #> [18724,]  362 #> [18725,]  362 #> [18726,]  362 #> [18727,]  362 #> [18728,]  362 #> [18729,]  362 #> [18730,]  362 #> [18731,]  362 #> [18732,]  362 #> [18733,]  362 #> [18734,]  362 #> [18735,]  362 #> [18736,]  362 #> [18737,]  362 #> [18738,]  362 #> [18739,]  362 #> [18740,]  362 #> [18741,]  362 #> [18742,]  362 #> [18743,]  362 #> [18744,]  362 #> [18745,]  362 #> [18746,]  362 #> [18747,]  362 #> [18748,]  362 #> [18749,]  362 #> [18750,]  362 #> [18751,]  362 #> [18752,]  362 #> [18753,]  362 #> [18754,]  362 #> [18755,]  362 #> [18756,]  362 #> [18757,]  362 #> [18758,]  362 #> [18759,]  362 #> [18760,]  362 #> [18761,]  362 #> [18762,]  362 #> [18763,]  362 #> [18764,]  362 #> [18765,]  362 #> [18766,]  362 #> [18767,]  362 #> [18768,]  362 #> [18769,]  362 #> [18770,]  362 #> [18771,]  362 #> [18772,]  362 #> [18773,]  362 #> [18774,]  362 #> [18775,]  362 #> [18776,]  362 #> [18777,]  362 #> [18778,]  362 #> [18779,]  362 #> [18780,]  362 #> [18781,]  362 #> [18782,]  362 #> [18783,]  362 #> [18784,]  362 #> [18785,]  362 #> [18786,]  362 #> [18787,]  362 #> [18788,]  362 #> [18789,]  362 #> [18790,]  362 #> [18791,]  362 #> [18792,]  362 #> [18793,]  362 #> [18794,]  362 #> [18795,]  362 #> [18796,]  362 #> [18797,]  362 #> [18798,]  362 #> [18799,]  362 #> [18800,]  362 #> [18801,]  364 #> [18802,]  364 #> [18803,]  363 #> [18804,]  364 #> [18805,]  364 #> [18806,]  364 #> [18807,]  363 #> [18808,]  363 #> [18809,]  364 #> [18810,]  364 #> [18811,]  364 #> [18812,]  364 #> [18813,]  363 #> [18814,]  364 #> [18815,]  364 #> [18816,]  363 #> [18817,]  363 #> [18818,]  364 #> [18819,]  364 #> [18820,]  363 #> [18821,]  364 #> [18822,]  363 #> [18823,]  364 #> [18824,]  363 #> [18825,]  363 #> [18826,]  364 #> [18827,]  364 #> [18828,]  364 #> [18829,]  364 #> [18830,]  364 #> [18831,]  364 #> [18832,]  364 #> [18833,]  364 #> [18834,]  364 #> [18835,]  364 #> [18836,]  364 #> [18837,]  364 #> [18838,]  364 #> [18839,]  363 #> [18840,]  363 #> [18841,]  364 #> [18842,]  364 #> [18843,]  363 #> [18844,]  363 #> [18845,]  363 #> [18846,]  363 #> [18847,]  363 #> [18848,]  364 #> [18849,]  363 #> [18850,]  363 #> [18851,]  364 #> [18852,]  364 #> [18853,]  363 #> [18854,]  363 #> [18855,]  363 #> [18856,]  363 #> [18857,]  364 #> [18858,]  364 #> [18859,]  363 #> [18860,]  364 #> [18861,]  364 #> [18862,]  364 #> [18863,]  363 #> [18864,]  364 #> [18865,]  363 #> [18866,]  363 #> [18867,]  364 #> [18868,]  364 #> [18869,]  364 #> [18870,]  363 #> [18871,]  364 #> [18872,]  363 #> [18873,]  364 #> [18874,]  364 #> [18875,]  364 #> [18876,]  364 #> [18877,]  363 #> [18878,]  363 #> [18879,]  363 #> [18880,]  364 #> [18881,]  364 #> [18882,]  364 #> [18883,]  364 #> [18884,]  363 #> [18885,]  364 #> [18886,]  363 #> [18887,]  364 #> [18888,]  364 #> [18889,]  363 #> [18890,]  363 #> [18891,]  364 #> [18892,]  364 #> [18893,]  364 #> [18894,]  363 #> [18895,]  364 #> [18896,]  364 #> [18897,]  364 #> [18898,]  363 #> [18899,]  364 #> [18900,]  363 #> [18901,]  366 #> [18902,]  365 #> [18903,]  365 #> [18904,]  365 #> [18905,]  366 #> [18906,]  365 #> [18907,]  365 #> [18908,]  365 #> [18909,]  366 #> [18910,]  365 #> [18911,]  366 #> [18912,]  365 #> [18913,]  366 #> [18914,]  365 #> [18915,]  365 #> [18916,]  365 #> [18917,]  366 #> [18918,]  366 #> [18919,]  365 #> [18920,]  366 #> [18921,]  366 #> [18922,]  365 #> [18923,]  365 #> [18924,]  365 #> [18925,]  365 #> [18926,]  365 #> [18927,]  366 #> [18928,]  366 #> [18929,]  366 #> [18930,]  365 #> [18931,]  365 #> [18932,]  365 #> [18933,]  366 #> [18934,]  365 #> [18935,]  365 #> [18936,]  366 #> [18937,]  365 #> [18938,]  366 #> [18939,]  366 #> [18940,]  365 #> [18941,]  366 #> [18942,]  366 #> [18943,]  365 #> [18944,]  365 #> [18945,]  365 #> [18946,]  365 #> [18947,]  365 #> [18948,]  365 #> [18949,]  365 #> [18950,]  365 #> [18951,]  366 #> [18952,]  365 #> [18953,]  366 #> [18954,]  366 #> [18955,]  365 #> [18956,]  366 #> [18957,]  365 #> [18958,]  366 #> [18959,]  365 #> [18960,]  365 #> [18961,]  366 #> [18962,]  366 #> [18963,]  365 #> [18964,]  366 #> [18965,]  366 #> [18966,]  366 #> [18967,]  365 #> [18968,]  365 #> [18969,]  365 #> [18970,]  366 #> [18971,]  365 #> [18972,]  365 #> [18973,]  365 #> [18974,]  365 #> [18975,]  365 #> [18976,]  365 #> [18977,]  366 #> [18978,]  365 #> [18979,]  366 #> [18980,]  365 #> [18981,]  365 #> [18982,]  366 #> [18983,]  366 #> [18984,]  366 #> [18985,]  366 #> [18986,]  365 #> [18987,]  366 #> [18988,]  365 #> [18989,]  366 #> [18990,]  366 #> [18991,]  366 #> [18992,]  365 #> [18993,]  366 #> [18994,]  366 #> [18995,]  365 #> [18996,]  365 #> [18997,]  365 #> [18998,]  365 #> [18999,]  366 #> [19000,]  365 #> [19001,]  368 #> [19002,]  368 #> [19003,]  368 #> [19004,]  367 #> [19005,]  368 #> [19006,]  368 #> [19007,]  368 #> [19008,]  367 #> [19009,]  367 #> [19010,]  367 #> [19011,]  368 #> [19012,]  368 #> [19013,]  368 #> [19014,]  368 #> [19015,]  368 #> [19016,]  368 #> [19017,]  368 #> [19018,]  367 #> [19019,]  368 #> [19020,]  367 #> [19021,]  368 #> [19022,]  368 #> [19023,]  368 #> [19024,]  368 #> [19025,]  368 #> [19026,]  368 #> [19027,]  368 #> [19028,]  368 #> [19029,]  368 #> [19030,]  367 #> [19031,]  368 #> [19032,]  368 #> [19033,]  368 #> [19034,]  368 #> [19035,]  368 #> [19036,]  368 #> [19037,]  368 #> [19038,]  368 #> [19039,]  367 #> [19040,]  368 #> [19041,]  368 #> [19042,]  368 #> [19043,]  367 #> [19044,]  368 #> [19045,]  367 #> [19046,]  368 #> [19047,]  368 #> [19048,]  368 #> [19049,]  367 #> [19050,]  368 #> [19051,]  367 #> [19052,]  368 #> [19053,]  367 #> [19054,]  368 #> [19055,]  368 #> [19056,]  367 #> [19057,]  368 #> [19058,]  368 #> [19059,]  368 #> [19060,]  367 #> [19061,]  368 #> [19062,]  368 #> [19063,]  368 #> [19064,]  367 #> [19065,]  367 #> [19066,]  367 #> [19067,]  367 #> [19068,]  368 #> [19069,]  368 #> [19070,]  368 #> [19071,]  368 #> [19072,]  368 #> [19073,]  368 #> [19074,]  368 #> [19075,]  368 #> [19076,]  368 #> [19077,]  368 #> [19078,]  367 #> [19079,]  368 #> [19080,]  368 #> [19081,]  368 #> [19082,]  368 #> [19083,]  368 #> [19084,]  368 #> [19085,]  367 #> [19086,]  368 #> [19087,]  368 #> [19088,]  368 #> [19089,]  367 #> [19090,]  368 #> [19091,]  367 #> [19092,]  368 #> [19093,]  368 #> [19094,]  368 #> [19095,]  367 #> [19096,]  368 #> [19097,]  368 #> [19098,]  368 #> [19099,]  368 #> [19100,]  368 #> [19101,]  370 #> [19102,]  369 #> [19103,]  369 #> [19104,]  369 #> [19105,]  370 #> [19106,]  369 #> [19107,]  369 #> [19108,]  369 #> [19109,]  369 #> [19110,]  370 #> [19111,]  370 #> [19112,]  370 #> [19113,]  370 #> [19114,]  370 #> [19115,]  370 #> [19116,]  370 #> [19117,]  370 #> [19118,]  370 #> [19119,]  370 #> [19120,]  369 #> [19121,]  369 #> [19122,]  370 #> [19123,]  369 #> [19124,]  370 #> [19125,]  369 #> [19126,]  370 #> [19127,]  370 #> [19128,]  370 #> [19129,]  369 #> [19130,]  369 #> [19131,]  370 #> [19132,]  370 #> [19133,]  370 #> [19134,]  369 #> [19135,]  369 #> [19136,]  369 #> [19137,]  369 #> [19138,]  370 #> [19139,]  370 #> [19140,]  369 #> [19141,]  369 #> [19142,]  369 #> [19143,]  370 #> [19144,]  369 #> [19145,]  369 #> [19146,]  370 #> [19147,]  370 #> [19148,]  370 #> [19149,]  369 #> [19150,]  369 #> [19151,]  370 #> [19152,]  370 #> [19153,]  369 #> [19154,]  369 #> [19155,]  369 #> [19156,]  369 #> [19157,]  369 #> [19158,]  370 #> [19159,]  370 #> [19160,]  369 #> [19161,]  370 #> [19162,]  369 #> [19163,]  369 #> [19164,]  369 #> [19165,]  369 #> [19166,]  370 #> [19167,]  369 #> [19168,]  370 #> [19169,]  369 #> [19170,]  370 #> [19171,]  370 #> [19172,]  369 #> [19173,]  369 #> [19174,]  369 #> [19175,]  370 #> [19176,]  369 #> [19177,]  370 #> [19178,]  369 #> [19179,]  370 #> [19180,]  369 #> [19181,]  369 #> [19182,]  369 #> [19183,]  370 #> [19184,]  369 #> [19185,]  369 #> [19186,]  369 #> [19187,]  370 #> [19188,]  369 #> [19189,]  369 #> [19190,]  370 #> [19191,]  370 #> [19192,]  370 #> [19193,]  369 #> [19194,]  369 #> [19195,]  370 #> [19196,]  370 #> [19197,]  369 #> [19198,]  369 #> [19199,]  369 #> [19200,]  370 #> [19201,]  371 #> [19202,]  371 #> [19203,]  371 #> [19204,]  371 #> [19205,]  371 #> [19206,]  371 #> [19207,]  371 #> [19208,]  371 #> [19209,]  371 #> [19210,]  371 #> [19211,]  371 #> [19212,]  371 #> [19213,]  371 #> [19214,]  371 #> [19215,]  371 #> [19216,]  371 #> [19217,]  371 #> [19218,]  371 #> [19219,]  372 #> [19220,]  372 #> [19221,]  371 #> [19222,]  372 #> [19223,]  371 #> [19224,]  371 #> [19225,]  371 #> [19226,]  371 #> [19227,]  372 #> [19228,]  371 #> [19229,]  372 #> [19230,]  371 #> [19231,]  371 #> [19232,]  371 #> [19233,]  371 #> [19234,]  371 #> [19235,]  371 #> [19236,]  372 #> [19237,]  371 #> [19238,]  371 #> [19239,]  371 #> [19240,]  371 #> [19241,]  371 #> [19242,]  371 #> [19243,]  371 #> [19244,]  371 #> [19245,]  371 #> [19246,]  371 #> [19247,]  371 #> [19248,]  371 #> [19249,]  371 #> [19250,]  371 #> [19251,]  371 #> [19252,]  371 #> [19253,]  371 #> [19254,]  371 #> [19255,]  371 #> [19256,]  371 #> [19257,]  371 #> [19258,]  372 #> [19259,]  371 #> [19260,]  371 #> [19261,]  371 #> [19262,]  371 #> [19263,]  371 #> [19264,]  372 #> [19265,]  371 #> [19266,]  372 #> [19267,]  371 #> [19268,]  371 #> [19269,]  371 #> [19270,]  371 #> [19271,]  371 #> [19272,]  371 #> [19273,]  371 #> [19274,]  371 #> [19275,]  371 #> [19276,]  371 #> [19277,]  372 #> [19278,]  371 #> [19279,]  371 #> [19280,]  371 #> [19281,]  372 #> [19282,]  371 #> [19283,]  372 #> [19284,]  371 #> [19285,]  371 #> [19286,]  371 #> [19287,]  372 #> [19288,]  371 #> [19289,]  371 #> [19290,]  371 #> [19291,]  371 #> [19292,]  371 #> [19293,]  371 #> [19294,]  371 #> [19295,]  371 #> [19296,]  371 #> [19297,]  372 #> [19298,]  371 #> [19299,]  371 #> [19300,]  372 #> [19301,]  373 #> [19302,]  373 #> [19303,]  373 #> [19304,]  374 #> [19305,]  373 #> [19306,]  373 #> [19307,]  373 #> [19308,]  373 #> [19309,]  373 #> [19310,]  373 #> [19311,]  373 #> [19312,]  373 #> [19313,]  373 #> [19314,]  374 #> [19315,]  373 #> [19316,]  373 #> [19317,]  373 #> [19318,]  373 #> [19319,]  374 #> [19320,]  373 #> [19321,]  373 #> [19322,]  373 #> [19323,]  373 #> [19324,]  373 #> [19325,]  373 #> [19326,]  373 #> [19327,]  374 #> [19328,]  373 #> [19329,]  373 #> [19330,]  373 #> [19331,]  373 #> [19332,]  373 #> [19333,]  373 #> [19334,]  373 #> [19335,]  373 #> [19336,]  373 #> [19337,]  373 #> [19338,]  373 #> [19339,]  373 #> [19340,]  373 #> [19341,]  374 #> [19342,]  373 #> [19343,]  373 #> [19344,]  373 #> [19345,]  373 #> [19346,]  373 #> [19347,]  373 #> [19348,]  374 #> [19349,]  373 #> [19350,]  373 #> [19351,]  373 #> [19352,]  373 #> [19353,]  373 #> [19354,]  373 #> [19355,]  373 #> [19356,]  373 #> [19357,]  373 #> [19358,]  373 #> [19359,]  373 #> [19360,]  373 #> [19361,]  374 #> [19362,]  373 #> [19363,]  373 #> [19364,]  373 #> [19365,]  373 #> [19366,]  373 #> [19367,]  373 #> [19368,]  373 #> [19369,]  374 #> [19370,]  373 #> [19371,]  373 #> [19372,]  373 #> [19373,]  373 #> [19374,]  373 #> [19375,]  373 #> [19376,]  373 #> [19377,]  373 #> [19378,]  373 #> [19379,]  373 #> [19380,]  373 #> [19381,]  373 #> [19382,]  374 #> [19383,]  373 #> [19384,]  373 #> [19385,]  373 #> [19386,]  373 #> [19387,]  373 #> [19388,]  373 #> [19389,]  373 #> [19390,]  373 #> [19391,]  373 #> [19392,]  374 #> [19393,]  374 #> [19394,]  373 #> [19395,]  373 #> [19396,]  374 #> [19397,]  374 #> [19398,]  373 #> [19399,]  373 #> [19400,]  373 #> [19401,]  376 #> [19402,]  375 #> [19403,]  376 #> [19404,]  376 #> [19405,]  376 #> [19406,]  375 #> [19407,]  376 #> [19408,]  376 #> [19409,]  376 #> [19410,]  376 #> [19411,]  375 #> [19412,]  375 #> [19413,]  376 #> [19414,]  376 #> [19415,]  375 #> [19416,]  376 #> [19417,]  375 #> [19418,]  375 #> [19419,]  375 #> [19420,]  376 #> [19421,]  375 #> [19422,]  376 #> [19423,]  375 #> [19424,]  376 #> [19425,]  376 #> [19426,]  375 #> [19427,]  376 #> [19428,]  376 #> [19429,]  375 #> [19430,]  375 #> [19431,]  375 #> [19432,]  375 #> [19433,]  376 #> [19434,]  375 #> [19435,]  375 #> [19436,]  376 #> [19437,]  375 #> [19438,]  376 #> [19439,]  376 #> [19440,]  376 #> [19441,]  376 #> [19442,]  375 #> [19443,]  375 #> [19444,]  375 #> [19445,]  376 #> [19446,]  375 #> [19447,]  375 #> [19448,]  375 #> [19449,]  376 #> [19450,]  376 #> [19451,]  375 #> [19452,]  376 #> [19453,]  376 #> [19454,]  376 #> [19455,]  376 #> [19456,]  375 #> [19457,]  376 #> [19458,]  376 #> [19459,]  376 #> [19460,]  375 #> [19461,]  375 #> [19462,]  375 #> [19463,]  375 #> [19464,]  375 #> [19465,]  375 #> [19466,]  375 #> [19467,]  376 #> [19468,]  375 #> [19469,]  375 #> [19470,]  375 #> [19471,]  376 #> [19472,]  376 #> [19473,]  376 #> [19474,]  376 #> [19475,]  375 #> [19476,]  376 #> [19477,]  376 #> [19478,]  375 #> [19479,]  375 #> [19480,]  376 #> [19481,]  375 #> [19482,]  375 #> [19483,]  376 #> [19484,]  376 #> [19485,]  376 #> [19486,]  376 #> [19487,]  376 #> [19488,]  376 #> [19489,]  375 #> [19490,]  376 #> [19491,]  376 #> [19492,]  375 #> [19493,]  375 #> [19494,]  375 #> [19495,]  375 #> [19496,]  375 #> [19497,]  375 #> [19498,]  376 #> [19499,]  376 #> [19500,]  375 #> [19501,]  378 #> [19502,]  377 #> [19503,]  377 #> [19504,]  377 #> [19505,]  377 #> [19506,]  377 #> [19507,]  377 #> [19508,]  377 #> [19509,]  377 #> [19510,]  377 #> [19511,]  377 #> [19512,]  377 #> [19513,]  377 #> [19514,]  378 #> [19515,]  378 #> [19516,]  378 #> [19517,]  377 #> [19518,]  377 #> [19519,]  377 #> [19520,]  377 #> [19521,]  377 #> [19522,]  377 #> [19523,]  377 #> [19524,]  377 #> [19525,]  377 #> [19526,]  377 #> [19527,]  377 #> [19528,]  377 #> [19529,]  377 #> [19530,]  377 #> [19531,]  377 #> [19532,]  377 #> [19533,]  377 #> [19534,]  377 #> [19535,]  377 #> [19536,]  377 #> [19537,]  377 #> [19538,]  377 #> [19539,]  377 #> [19540,]  377 #> [19541,]  378 #> [19542,]  377 #> [19543,]  377 #> [19544,]  378 #> [19545,]  377 #> [19546,]  377 #> [19547,]  377 #> [19548,]  377 #> [19549,]  377 #> [19550,]  378 #> [19551,]  377 #> [19552,]  377 #> [19553,]  377 #> [19554,]  377 #> [19555,]  377 #> [19556,]  377 #> [19557,]  377 #> [19558,]  377 #> [19559,]  378 #> [19560,]  377 #> [19561,]  377 #> [19562,]  377 #> [19563,]  377 #> [19564,]  377 #> [19565,]  377 #> [19566,]  377 #> [19567,]  377 #> [19568,]  377 #> [19569,]  377 #> [19570,]  378 #> [19571,]  377 #> [19572,]  377 #> [19573,]  378 #> [19574,]  377 #> [19575,]  377 #> [19576,]  377 #> [19577,]  377 #> [19578,]  377 #> [19579,]  377 #> [19580,]  377 #> [19581,]  377 #> [19582,]  377 #> [19583,]  377 #> [19584,]  377 #> [19585,]  377 #> [19586,]  377 #> [19587,]  377 #> [19588,]  377 #> [19589,]  377 #> [19590,]  377 #> [19591,]  377 #> [19592,]  377 #> [19593,]  377 #> [19594,]  377 #> [19595,]  377 #> [19596,]  378 #> [19597,]  377 #> [19598,]  377 #> [19599,]  378 #> [19600,]  377 #> [19601,]  380 #> [19602,]  380 #> [19603,]  379 #> [19604,]  380 #> [19605,]  380 #> [19606,]  380 #> [19607,]  380 #> [19608,]  380 #> [19609,]  380 #> [19610,]  379 #> [19611,]  379 #> [19612,]  380 #> [19613,]  380 #> [19614,]  379 #> [19615,]  380 #> [19616,]  380 #> [19617,]  380 #> [19618,]  380 #> [19619,]  380 #> [19620,]  380 #> [19621,]  379 #> [19622,]  380 #> [19623,]  380 #> [19624,]  380 #> [19625,]  380 #> [19626,]  380 #> [19627,]  380 #> [19628,]  379 #> [19629,]  380 #> [19630,]  380 #> [19631,]  379 #> [19632,]  379 #> [19633,]  380 #> [19634,]  379 #> [19635,]  379 #> [19636,]  380 #> [19637,]  380 #> [19638,]  380 #> [19639,]  380 #> [19640,]  379 #> [19641,]  380 #> [19642,]  380 #> [19643,]  380 #> [19644,]  380 #> [19645,]  380 #> [19646,]  380 #> [19647,]  380 #> [19648,]  379 #> [19649,]  380 #> [19650,]  380 #> [19651,]  380 #> [19652,]  380 #> [19653,]  380 #> [19654,]  380 #> [19655,]  380 #> [19656,]  380 #> [19657,]  380 #> [19658,]  380 #> [19659,]  380 #> [19660,]  380 #> [19661,]  380 #> [19662,]  380 #> [19663,]  380 #> [19664,]  380 #> [19665,]  380 #> [19666,]  380 #> [19667,]  380 #> [19668,]  380 #> [19669,]  380 #> [19670,]  379 #> [19671,]  380 #> [19672,]  380 #> [19673,]  380 #> [19674,]  379 #> [19675,]  380 #> [19676,]  380 #> [19677,]  380 #> [19678,]  380 #> [19679,]  380 #> [19680,]  380 #> [19681,]  380 #> [19682,]  379 #> [19683,]  380 #> [19684,]  380 #> [19685,]  380 #> [19686,]  380 #> [19687,]  380 #> [19688,]  380 #> [19689,]  380 #> [19690,]  380 #> [19691,]  380 #> [19692,]  380 #> [19693,]  380 #> [19694,]  380 #> [19695,]  380 #> [19696,]  380 #> [19697,]  380 #> [19698,]  379 #> [19699,]  380 #> [19700,]  380 #> [19701,]  382 #> [19702,]  381 #> [19703,]  381 #> [19704,]  381 #> [19705,]  381 #> [19706,]  381 #> [19707,]  381 #> [19708,]  381 #> [19709,]  382 #> [19710,]  381 #> [19711,]  382 #> [19712,]  381 #> [19713,]  382 #> [19714,]  381 #> [19715,]  381 #> [19716,]  381 #> [19717,]  382 #> [19718,]  382 #> [19719,]  381 #> [19720,]  382 #> [19721,]  381 #> [19722,]  381 #> [19723,]  381 #> [19724,]  381 #> [19725,]  381 #> [19726,]  381 #> [19727,]  382 #> [19728,]  382 #> [19729,]  382 #> [19730,]  381 #> [19731,]  381 #> [19732,]  381 #> [19733,]  382 #> [19734,]  381 #> [19735,]  381 #> [19736,]  382 #> [19737,]  381 #> [19738,]  382 #> [19739,]  382 #> [19740,]  381 #> [19741,]  381 #> [19742,]  382 #> [19743,]  381 #> [19744,]  381 #> [19745,]  381 #> [19746,]  381 #> [19747,]  381 #> [19748,]  381 #> [19749,]  381 #> [19750,]  381 #> [19751,]  382 #> [19752,]  381 #> [19753,]  382 #> [19754,]  382 #> [19755,]  381 #> [19756,]  382 #> [19757,]  381 #> [19758,]  382 #> [19759,]  381 #> [19760,]  381 #> [19761,]  381 #> [19762,]  382 #> [19763,]  381 #> [19764,]  381 #> [19765,]  382 #> [19766,]  382 #> [19767,]  381 #> [19768,]  381 #> [19769,]  381 #> [19770,]  381 #> [19771,]  381 #> [19772,]  381 #> [19773,]  381 #> [19774,]  381 #> [19775,]  381 #> [19776,]  381 #> [19777,]  382 #> [19778,]  381 #> [19779,]  382 #> [19780,]  381 #> [19781,]  381 #> [19782,]  382 #> [19783,]  382 #> [19784,]  382 #> [19785,]  382 #> [19786,]  381 #> [19787,]  382 #> [19788,]  381 #> [19789,]  382 #> [19790,]  381 #> [19791,]  382 #> [19792,]  381 #> [19793,]  382 #> [19794,]  382 #> [19795,]  381 #> [19796,]  381 #> [19797,]  381 #> [19798,]  381 #> [19799,]  381 #> [19800,]  381 #> [19801,]  384 #> [19802,]  384 #> [19803,]  384 #> [19804,]  383 #> [19805,]  384 #> [19806,]  384 #> [19807,]  384 #> [19808,]  383 #> [19809,]  383 #> [19810,]  383 #> [19811,]  384 #> [19812,]  384 #> [19813,]  384 #> [19814,]  384 #> [19815,]  384 #> [19816,]  384 #> [19817,]  384 #> [19818,]  383 #> [19819,]  384 #> [19820,]  383 #> [19821,]  384 #> [19822,]  384 #> [19823,]  384 #> [19824,]  384 #> [19825,]  384 #> [19826,]  384 #> [19827,]  384 #> [19828,]  384 #> [19829,]  384 #> [19830,]  383 #> [19831,]  384 #> [19832,]  384 #> [19833,]  384 #> [19834,]  384 #> [19835,]  384 #> [19836,]  384 #> [19837,]  384 #> [19838,]  384 #> [19839,]  383 #> [19840,]  384 #> [19841,]  384 #> [19842,]  384 #> [19843,]  383 #> [19844,]  384 #> [19845,]  383 #> [19846,]  384 #> [19847,]  384 #> [19848,]  384 #> [19849,]  383 #> [19850,]  384 #> [19851,]  383 #> [19852,]  384 #> [19853,]  383 #> [19854,]  384 #> [19855,]  384 #> [19856,]  383 #> [19857,]  384 #> [19858,]  384 #> [19859,]  384 #> [19860,]  383 #> [19861,]  384 #> [19862,]  384 #> [19863,]  384 #> [19864,]  383 #> [19865,]  383 #> [19866,]  383 #> [19867,]  383 #> [19868,]  384 #> [19869,]  384 #> [19870,]  384 #> [19871,]  384 #> [19872,]  384 #> [19873,]  384 #> [19874,]  384 #> [19875,]  384 #> [19876,]  384 #> [19877,]  384 #> [19878,]  383 #> [19879,]  384 #> [19880,]  384 #> [19881,]  384 #> [19882,]  384 #> [19883,]  384 #> [19884,]  384 #> [19885,]  383 #> [19886,]  384 #> [19887,]  384 #> [19888,]  384 #> [19889,]  383 #> [19890,]  384 #> [19891,]  383 #> [19892,]  384 #> [19893,]  384 #> [19894,]  384 #> [19895,]  383 #> [19896,]  384 #> [19897,]  384 #> [19898,]  384 #> [19899,]  384 #> [19900,]  384 #> [19901,]  385 #> [19902,]  386 #> [19903,]  385 #> [19904,]  386 #> [19905,]  386 #> [19906,]  385 #> [19907,]  386 #> [19908,]  386 #> [19909,]  386 #> [19910,]  386 #> [19911,]  385 #> [19912,]  386 #> [19913,]  386 #> [19914,]  385 #> [19915,]  386 #> [19916,]  385 #> [19917,]  386 #> [19918,]  386 #> [19919,]  385 #> [19920,]  386 #> [19921,]  386 #> [19922,]  386 #> [19923,]  386 #> [19924,]  386 #> [19925,]  386 #> [19926,]  385 #> [19927,]  386 #> [19928,]  385 #> [19929,]  386 #> [19930,]  386 #> [19931,]  386 #> [19932,]  386 #> [19933,]  386 #> [19934,]  385 #> [19935,]  385 #> [19936,]  386 #> [19937,]  385 #> [19938,]  385 #> [19939,]  386 #> [19940,]  386 #> [19941,]  386 #> [19942,]  385 #> [19943,]  386 #> [19944,]  386 #> [19945,]  385 #> [19946,]  386 #> [19947,]  386 #> [19948,]  386 #> [19949,]  385 #> [19950,]  386 #> [19951,]  386 #> [19952,]  385 #> [19953,]  386 #> [19954,]  386 #> [19955,]  386 #> [19956,]  386 #> [19957,]  386 #> [19958,]  386 #> [19959,]  385 #> [19960,]  386 #> [19961,]  386 #> [19962,]  386 #> [19963,]  386 #> [19964,]  385 #> [19965,]  385 #> [19966,]  386 #> [19967,]  386 #> [19968,]  385 #> [19969,]  385 #> [19970,]  386 #> [19971,]  386 #> [19972,]  385 #> [19973,]  385 #> [19974,]  386 #> [19975,]  386 #> [19976,]  386 #> [19977,]  385 #> [19978,]  386 #> [19979,]  385 #> [19980,]  386 #> [19981,]  386 #> [19982,]  386 #> [19983,]  386 #> [19984,]  386 #> [19985,]  386 #> [19986,]  386 #> [19987,]  386 #> [19988,]  386 #> [19989,]  385 #> [19990,]  386 #> [19991,]  386 #> [19992,]  386 #> [19993,]  386 #> [19994,]  385 #> [19995,]  386 #> [19996,]  385 #> [19997,]  385 #> [19998,]  386 #> [19999,]  386 #> [20000,]  385 computeForestLeafIndices(bart_model, X, \"mean\", c(1,3,9)) #>          [,1] [,2] [,3] #>     [1,]    1    1    0 #>     [2,]    1    1    0 #>     [3,]    1    1    0 #>     [4,]    1    1    0 #>     [5,]    1    1    0 #>     [6,]    1    1    0 #>     [7,]    0    0    1 #>     [8,]    1    1    0 #>     [9,]    1    1    0 #>    [10,]    1    1    0 #>    [11,]    1    1    0 #>    [12,]    1    1    0 #>    [13,]    1    1    0 #>    [14,]    1    1    0 #>    [15,]    1    1    0 #>    [16,]    1    1    0 #>    [17,]    1    1    0 #>    [18,]    1    1    0 #>    [19,]    1    1    0 #>    [20,]    1    1    0 #>    [21,]    0    0    1 #>    [22,]    1    1    0 #>    [23,]    0    0    1 #>    [24,]    1    1    0 #>    [25,]    1    1    0 #>    [26,]    1    1    0 #>    [27,]    1    1    0 #>    [28,]    1    1    0 #>    [29,]    1    1    0 #>    [30,]    0    0    1 #>    [31,]    1    1    0 #>    [32,]    1    1    0 #>    [33,]    1    1    0 #>    [34,]    1    1    0 #>    [35,]    1    1    0 #>    [36,]    1    1    0 #>    [37,]    1    1    0 #>    [38,]    1    1    0 #>    [39,]    0    0    1 #>    [40,]    1    1    0 #>    [41,]    1    1    0 #>    [42,]    1    1    0 #>    [43,]    1    1    0 #>    [44,]    1    1    0 #>    [45,]    1    1    0 #>    [46,]    1    1    0 #>    [47,]    0    0    1 #>    [48,]    1    1    0 #>    [49,]    0    0    1 #>    [50,]    1    1    0 #>    [51,]    1    1    0 #>    [52,]    1    1    0 #>    [53,]    1    1    0 #>    [54,]    0    0    1 #>    [55,]    1    1    0 #>    [56,]    1    1    0 #>    [57,]    1    1    0 #>    [58,]    1    1    0 #>    [59,]    1    1    0 #>    [60,]    1    1    0 #>    [61,]    1    1    0 #>    [62,]    0    0    1 #>    [63,]    1    1    0 #>    [64,]    1    1    0 #>    [65,]    1    1    0 #>    [66,]    1    1    0 #>    [67,]    1    1    0 #>    [68,]    1    1    0 #>    [69,]    1    1    0 #>    [70,]    0    0    1 #>    [71,]    1    1    0 #>    [72,]    1    1    0 #>    [73,]    1    1    0 #>    [74,]    1    1    0 #>    [75,]    1    1    0 #>    [76,]    1    1    0 #>    [77,]    1    1    0 #>    [78,]    1    1    0 #>    [79,]    0    0    1 #>    [80,]    0    0    1 #>    [81,]    1    1    0 #>    [82,]    1    1    0 #>    [83,]    0    0    1 #>    [84,]    1    1    0 #>    [85,]    1    1    0 #>    [86,]    1    1    0 #>    [87,]    1    1    0 #>    [88,]    1    1    0 #>    [89,]    1    1    0 #>    [90,]    1    1    0 #>    [91,]    1    1    0 #>    [92,]    1    1    0 #>    [93,]    1    1    0 #>    [94,]    1    1    0 #>    [95,]    0    0    1 #>    [96,]    1    1    0 #>    [97,]    1    1    0 #>    [98,]    0    0    1 #>    [99,]    1    1    0 #>   [100,]    1    1    0 #>   [101,]    2    4    2 #>   [102,]    2    4    2 #>   [103,]    2    3    2 #>   [104,]    2    4    2 #>   [105,]    2    4    2 #>   [106,]    2    3    2 #>   [107,]    2    4    2 #>   [108,]    2    4    2 #>   [109,]    2    4    3 #>   [110,]    2    4    2 #>   [111,]    2    4    2 #>   [112,]    2    4    2 #>   [113,]    3    2    3 #>   [114,]    2    4    2 #>   [115,]    3    2    2 #>   [116,]    2    4    2 #>   [117,]    2    4    3 #>   [118,]    2    4    3 #>   [119,]    3    2    2 #>   [120,]    3    2    2 #>   [121,]    2    4    2 #>   [122,]    3    2    2 #>   [123,]    2    4    2 #>   [124,]    2    4    2 #>   [125,]    2    4    2 #>   [126,]    2    4    2 #>   [127,]    3    2    3 #>   [128,]    2    4    2 #>   [129,]    3    2    2 #>   [130,]    2    4    2 #>   [131,]    2    4    2 #>   [132,]    2    4    2 #>   [133,]    2    4    2 #>   [134,]    2    3    2 #>   [135,]    2    4    2 #>   [136,]    3    2    2 #>   [137,]    3    2    2 #>   [138,]    3    2    2 #>   [139,]    2    4    2 #>   [140,]    2    4    2 #>   [141,]    2    4    2 #>   [142,]    2    4    3 #>   [143,]    2    4    2 #>   [144,]    2    4    2 #>   [145,]    2    3    2 #>   [146,]    3    2    2 #>   [147,]    2    4    2 #>   [148,]    2    4    2 #>   [149,]    2    3    2 #>   [150,]    2    4    2 #>   [151,]    3    2    3 #>   [152,]    2    3    2 #>   [153,]    3    2    3 #>   [154,]    2    4    2 #>   [155,]    3    2    2 #>   [156,]    2    4    2 #>   [157,]    2    4    2 #>   [158,]    3    2    2 #>   [159,]    2    4    2 #>   [160,]    2    4    2 #>   [161,]    2    4    2 #>   [162,]    2    4    2 #>   [163,]    2    4    2 #>   [164,]    3    2    2 #>   [165,]    2    4    3 #>   [166,]    3    2    3 #>   [167,]    2    4    2 #>   [168,]    2    3    2 #>   [169,]    3    2    2 #>   [170,]    2    4    2 #>   [171,]    3    2    2 #>   [172,]    2    3    2 #>   [173,]    2    4    2 #>   [174,]    2    4    2 #>   [175,]    2    4    2 #>   [176,]    2    4    2 #>   [177,]    3    2    2 #>   [178,]    2    4    2 #>   [179,]    2    4    3 #>   [180,]    3    2    2 #>   [181,]    3    2    2 #>   [182,]    2    4    3 #>   [183,]    3    2    2 #>   [184,]    2    4    3 #>   [185,]    2    4    2 #>   [186,]    2    4    2 #>   [187,]    3    2    2 #>   [188,]    2    4    2 #>   [189,]    2    4    2 #>   [190,]    3    2    2 #>   [191,]    2    4    3 #>   [192,]    2    4    2 #>   [193,]    2    4    3 #>   [194,]    2    4    3 #>   [195,]    2    4    2 #>   [196,]    3    2    2 #>   [197,]    3    2    2 #>   [198,]    2    4    2 #>   [199,]    2    4    2 #>   [200,]    3    2    2 #>   [201,]    5    6    5 #>   [202,]    5    6    5 #>   [203,]    5    6    5 #>   [204,]    5    6    5 #>   [205,]    5    6    5 #>   [206,]    5    6    5 #>   [207,]    5    6    5 #>   [208,]    5    6    5 #>   [209,]    5    6    5 #>   [210,]    5    6    5 #>   [211,]    5    6    5 #>   [212,]    4    5    4 #>   [213,]    5    6    5 #>   [214,]    5    6    5 #>   [215,]    4    5    4 #>   [216,]    5    6    5 #>   [217,]    4    5    4 #>   [218,]    5    6    5 #>   [219,]    5    6    5 #>   [220,]    5    6    5 #>   [221,]    5    6    5 #>   [222,]    5    6    5 #>   [223,]    4    5    4 #>   [224,]    5    6    5 #>   [225,]    5    6    5 #>   [226,]    5    6    5 #>   [227,]    5    6    5 #>   [228,]    5    6    5 #>   [229,]    5    6    5 #>   [230,]    5    6    5 #>   [231,]    4    5    4 #>   [232,]    5    6    5 #>   [233,]    5    6    5 #>   [234,]    4    5    4 #>   [235,]    5    6    5 #>   [236,]    5    6    5 #>   [237,]    4    5    4 #>   [238,]    5    6    5 #>   [239,]    5    6    5 #>   [240,]    5    6    5 #>   [241,]    5    6    5 #>   [242,]    4    5    4 #>   [243,]    4    5    4 #>   [244,]    4    5    4 #>   [245,]    5    6    5 #>   [246,]    5    6    5 #>   [247,]    5    6    5 #>   [248,]    4    5    4 #>   [249,]    5    6    5 #>   [250,]    5    6    5 #>   [251,]    5    6    5 #>   [252,]    5    6    5 #>   [253,]    5    6    5 #>   [254,]    5    6    5 #>   [255,]    5    6    5 #>   [256,]    5    6    5 #>   [257,]    5    6    5 #>   [258,]    5    6    5 #>   [259,]    5    6    5 #>   [260,]    5    6    5 #>   [261,]    5    6    5 #>   [262,]    5    6    5 #>   [263,]    4    5    4 #>   [264,]    5    6    5 #>   [265,]    5    6    5 #>   [266,]    5    6    5 #>   [267,]    5    6    5 #>   [268,]    5    6    5 #>   [269,]    5    6    5 #>   [270,]    4    5    4 #>   [271,]    5    6    5 #>   [272,]    5    6    5 #>   [273,]    5    6    5 #>   [274,]    5    6    5 #>   [275,]    4    5    4 #>   [276,]    5    6    5 #>   [277,]    5    6    5 #>   [278,]    4    5    4 #>   [279,]    4    5    4 #>   [280,]    5    6    5 #>   [281,]    4    5    4 #>   [282,]    5    6    5 #>   [283,]    5    6    5 #>   [284,]    5    6    5 #>   [285,]    5    6    5 #>   [286,]    5    6    5 #>   [287,]    5    6    5 #>   [288,]    5    6    5 #>   [289,]    5    6    5 #>   [290,]    5    6    5 #>   [291,]    5    6    5 #>   [292,]    5    6    5 #>   [293,]    5    6    5 #>   [294,]    4    5    4 #>   [295,]    4    5    4 #>   [296,]    5    6    5 #>   [297,]    5    6    5 #>   [298,]    5    6    5 #>   [299,]    5    6    5 #>   [300,]    4    5    4 #>   [301,]    7    8    7 #>   [302,]    7    8    7 #>   [303,]    6    7    6 #>   [304,]    7    8    7 #>   [305,]    6    7    6 #>   [306,]    6    7    6 #>   [307,]    7    8    7 #>   [308,]    7    8    7 #>   [309,]    7    8    7 #>   [310,]    7    8    7 #>   [311,]    6    7    6 #>   [312,]    6    7    6 #>   [313,]    7    8    7 #>   [314,]    6    7    6 #>   [315,]    7    8    7 #>   [316,]    7    8    7 #>   [317,]    7    8    7 #>   [318,]    7    8    7 #>   [319,]    6    7    6 #>   [320,]    6    7    6 #>   [321,]    7    8    7 #>   [322,]    6    7    6 #>   [323,]    7    8    7 #>   [324,]    6    7    6 #>   [325,]    7    8    7 #>   [326,]    6    7    6 #>   [327,]    7    8    7 #>   [328,]    7    8    7 #>   [329,]    6    7    6 #>   [330,]    6    7    6 #>   [331,]    7    8    7 #>   [332,]    6    7    6 #>   [333,]    6    7    6 #>   [334,]    6    7    6 #>   [335,]    6    7    6 #>   [336,]    6    7    6 #>   [337,]    7    8    7 #>   [338,]    7    8    7 #>   [339,]    7    8    7 #>   [340,]    6    7    6 #>   [341,]    6    7    6 #>   [342,]    6    7    6 #>   [343,]    7    8    7 #>   [344,]    7    8    7 #>   [345,]    7    8    7 #>   [346,]    7    8    7 #>   [347,]    7    8    7 #>   [348,]    6    7    6 #>   [349,]    6    7    6 #>   [350,]    7    8    7 #>   [351,]    6    7    6 #>   [352,]    6    7    6 #>   [353,]    7    8    7 #>   [354,]    6    7    6 #>   [355,]    6    7    6 #>   [356,]    7    8    7 #>   [357,]    6    7    6 #>   [358,]    6    7    6 #>   [359,]    6    7    6 #>   [360,]    6    7    6 #>   [361,]    7    8    7 #>   [362,]    6    7    6 #>   [363,]    6    7    6 #>   [364,]    7    8    7 #>   [365,]    6    7    6 #>   [366,]    6    7    6 #>   [367,]    6    7    6 #>   [368,]    6    7    6 #>   [369,]    6    7    6 #>   [370,]    7    8    7 #>   [371,]    7    8    7 #>   [372,]    7    8    7 #>   [373,]    7    8    7 #>   [374,]    7    8    7 #>   [375,]    7    8    7 #>   [376,]    7    8    7 #>   [377,]    7    8    7 #>   [378,]    6    7    6 #>   [379,]    7    8    7 #>   [380,]    6    7    6 #>   [381,]    6    7    6 #>   [382,]    7    8    7 #>   [383,]    6    7    6 #>   [384,]    7    8    7 #>   [385,]    6    7    6 #>   [386,]    7    8    7 #>   [387,]    7    8    7 #>   [388,]    7    8    7 #>   [389,]    6    7    6 #>   [390,]    7    8    7 #>   [391,]    6    7    6 #>   [392,]    6    7    6 #>   [393,]    6    7    6 #>   [394,]    7    8    7 #>   [395,]    7    8    7 #>   [396,]    7    8    7 #>   [397,]    6    7    6 #>   [398,]    6    7    6 #>   [399,]    6    7    6 #>   [400,]    7    8    7 #>   [401,]    9   10    9 #>   [402,]    9   10    9 #>   [403,]    8    9    8 #>   [404,]    9   10    9 #>   [405,]    9   10    9 #>   [406,]    9   10    9 #>   [407,]    8    9    8 #>   [408,]    9   10    9 #>   [409,]    9   10    9 #>   [410,]    9   10    9 #>   [411,]    9   10    9 #>   [412,]    8    9    8 #>   [413,]    9   10    9 #>   [414,]    9   10    9 #>   [415,]    9   10    9 #>   [416,]    9   10    9 #>   [417,]    9   10    9 #>   [418,]    9   10    9 #>   [419,]    9   10    9 #>   [420,]    9   10    9 #>   [421,]    9   10    9 #>   [422,]    9   10    9 #>   [423,]    9   10    9 #>   [424,]    9   10    9 #>   [425,]    9   10    9 #>   [426,]    9   10    9 #>   [427,]    9   10    9 #>   [428,]    9   10    9 #>   [429,]    9   10    9 #>   [430,]    9   10    9 #>   [431,]    8    9    8 #>   [432,]    9   10    9 #>   [433,]    9   10    9 #>   [434,]    9   10    9 #>   [435,]    9   10    9 #>   [436,]    9   10    9 #>   [437,]    9   10    9 #>   [438,]    9   10    9 #>   [439,]    9   10    9 #>   [440,]    9   10    9 #>   [441,]    9   10    9 #>   [442,]    9   10    9 #>   [443,]    9   10    9 #>   [444,]    9   10    9 #>   [445,]    9   10    9 #>   [446,]    9   10    9 #>   [447,]    9   10    9 #>   [448,]    9   10    9 #>   [449,]    9   10    9 #>   [450,]    9   10    9 #>   [451,]    9   10    9 #>   [452,]    8    9    8 #>   [453,]    9   10    9 #>   [454,]    9   10    9 #>   [455,]    9   10    9 #>   [456,]    9   10    9 #>   [457,]    9   10    9 #>   [458,]    9   10    9 #>   [459,]    8    9    8 #>   [460,]    8    9    8 #>   [461,]    9   10    9 #>   [462,]    9   10    9 #>   [463,]    9   10    9 #>   [464,]    9   10    9 #>   [465,]    9   10    9 #>   [466,]    9   10    9 #>   [467,]    9   10    9 #>   [468,]    9   10    9 #>   [469,]    9   10    9 #>   [470,]    9   10    9 #>   [471,]    9   10    9 #>   [472,]    9   10    9 #>   [473,]    9   10    9 #>   [474,]    9   10    9 #>   [475,]    9   10    9 #>   [476,]    9   10    9 #>   [477,]    9   10    9 #>   [478,]    9   10    9 #>   [479,]    9   10    9 #>   [480,]    9   10    9 #>   [481,]    9   10    9 #>   [482,]    9   10    9 #>   [483,]    9   10    9 #>   [484,]    9   10    9 #>   [485,]    9   10    9 #>   [486,]    9   10    9 #>   [487,]    9   10    9 #>   [488,]    9   10    9 #>   [489,]    9   10    9 #>   [490,]    9   10    9 #>   [491,]    9   10    9 #>   [492,]    9   10    9 #>   [493,]    9   10    9 #>   [494,]    9   10    9 #>   [495,]    9   10    9 #>   [496,]    9   10    9 #>   [497,]    8    9    8 #>   [498,]    9   10    9 #>   [499,]    9   10    9 #>   [500,]    9   10    9 #>   [501,]   10   11   10 #>   [502,]   10   11   10 #>   [503,]   10   11   10 #>   [504,]   11   12   11 #>   [505,]   10   11   10 #>   [506,]   10   11   10 #>   [507,]   10   11   11 #>   [508,]   10   11   10 #>   [509,]   11   12   11 #>   [510,]   10   11   11 #>   [511,]   11   12   10 #>   [512,]   11   12   10 #>   [513,]   10   11   10 #>   [514,]   11   12   11 #>   [515,]   11   12   10 #>   [516,]   10   11   11 #>   [517,]   10   11   10 #>   [518,]   10   11   10 #>   [519,]   11   12   10 #>   [520,]   10   11   11 #>   [521,]   11   12   10 #>   [522,]   10   11   10 #>   [523,]   10   11   10 #>   [524,]   10   11   11 #>   [525,]   10   11   11 #>   [526,]   10   11   10 #>   [527,]   11   12   10 #>   [528,]   10   11   11 #>   [529,]   10   11   10 #>   [530,]   10   11   10 #>   [531,]   11   12   10 #>   [532,]   10   11   10 #>   [533,]   11   12   10 #>   [534,]   10   11   10 #>   [535,]   10   11   10 #>   [536,]   11   12   11 #>   [537,]   10   11   10 #>   [538,]   11   12   10 #>   [539,]   10   11   11 #>   [540,]   10   11   10 #>   [541,]   11   12   10 #>   [542,]   11   12   10 #>   [543,]   10   11   10 #>   [544,]   10   11   10 #>   [545,]   10   11   10 #>   [546,]   10   11   10 #>   [547,]   10   11   10 #>   [548,]   11   12   10 #>   [549,]   10   11   10 #>   [550,]   10   11   11 #>   [551,]   10   11   10 #>   [552,]   10   11   11 #>   [553,]   10   11   10 #>   [554,]   10   11   11 #>   [555,]   10   11   10 #>   [556,]   10   11   10 #>   [557,]   10   11   11 #>   [558,]   11   12   10 #>   [559,]   10   11   11 #>   [560,]   10   11   10 #>   [561,]   11   12   10 #>   [562,]   10   11   10 #>   [563,]   10   11   10 #>   [564,]   10   11   10 #>   [565,]   10   11   10 #>   [566,]   10   11   10 #>   [567,]   10   11   11 #>   [568,]   11   12   10 #>   [569,]   11   12   10 #>   [570,]   10   11   10 #>   [571,]   10   11   10 #>   [572,]   10   11   10 #>   [573,]   10   11   11 #>   [574,]   11   12   10 #>   [575,]   11   12   10 #>   [576,]   10   11   11 #>   [577,]   10   11   10 #>   [578,]   10   11   10 #>   [579,]   10   11   10 #>   [580,]   10   11   10 #>   [581,]   10   11   10 #>   [582,]   11   12   10 #>   [583,]   10   11   10 #>   [584,]   10   11   10 #>   [585,]   11   12   10 #>   [586,]   10   11   11 #>   [587,]   10   11   10 #>   [588,]   10   11   10 #>   [589,]   10   11   10 #>   [590,]   10   11   11 #>   [591,]   10   11   11 #>   [592,]   11   12   10 #>   [593,]   11   12   10 #>   [594,]   10   11   10 #>   [595,]   10   11   10 #>   [596,]   11   12   10 #>   [597,]   11   12   10 #>   [598,]   10   11   10 #>   [599,]   10   11   10 #>   [600,]   10   11   10 #>   [601,]   13   14   12 #>   [602,]   12   13   13 #>   [603,]   12   13   13 #>   [604,]   13   13   13 #>   [605,]   12   14   12 #>   [606,]   12   13   13 #>   [607,]   13   13   13 #>   [608,]   13   13   13 #>   [609,]   13   13   13 #>   [610,]   13   14   12 #>   [611,]   12   14   12 #>   [612,]   12   14   12 #>   [613,]   13   13   13 #>   [614,]   12   14   12 #>   [615,]   13   14   12 #>   [616,]   13   13   13 #>   [617,]   13   14   12 #>   [618,]   13   14   12 #>   [619,]   12   13   13 #>   [620,]   12   13   13 #>   [621,]   13   13   13 #>   [622,]   12   14   12 #>   [623,]   13   13   13 #>   [624,]   12   13   13 #>   [625,]   13   13   13 #>   [626,]   12   14   12 #>   [627,]   13   14   12 #>   [628,]   13   13   13 #>   [629,]   12   13   13 #>   [630,]   12   13   13 #>   [631,]   12   14   12 #>   [632,]   12   14   12 #>   [633,]   12   13   13 #>   [634,]   12   13   13 #>   [635,]   12   13   13 #>   [636,]   12   13   13 #>   [637,]   12   13   13 #>   [638,]   12   14   12 #>   [639,]   13   13   13 #>   [640,]   12   13   13 #>   [641,]   12   13   13 #>   [642,]   12   13   13 #>   [643,]   13   14   12 #>   [644,]   12   13   13 #>   [645,]   13   13   13 #>   [646,]   13   13   13 #>   [647,]   13   14   12 #>   [648,]   12   13   13 #>   [649,]   12   13   13 #>   [650,]   12   13   13 #>   [651,]   12   13   13 #>   [652,]   12   14   12 #>   [653,]   13   13   13 #>   [654,]   12   13   13 #>   [655,]   12   13   13 #>   [656,]   13   13   13 #>   [657,]   12   13   13 #>   [658,]   12   14   12 #>   [659,]   12   14   12 #>   [660,]   12   13   13 #>   [661,]   13   14   12 #>   [662,]   12   13   13 #>   [663,]   12   13   13 #>   [664,]   13   13   13 #>   [665,]   12   13   13 #>   [666,]   12   14   12 #>   [667,]   12   13   13 #>   [668,]   12   14   12 #>   [669,]   12   13   13 #>   [670,]   13   14   12 #>   [671,]   13   14   12 #>   [672,]   13   13   13 #>   [673,]   13   13   13 #>   [674,]   13   13   13 #>   [675,]   13   14   12 #>   [676,]   13   13   13 #>   [677,]   13   14   12 #>   [678,]   12   13   13 #>   [679,]   12   14   12 #>   [680,]   12   13   13 #>   [681,]   12   13   13 #>   [682,]   13   13   13 #>   [683,]   12   13   13 #>   [684,]   13   13   13 #>   [685,]   12   13   13 #>   [686,]   12   13   13 #>   [687,]   12   14   12 #>   [688,]   13   13   13 #>   [689,]   12   13   13 #>   [690,]   12   14   12 #>   [691,]   12   14   12 #>   [692,]   12   14   12 #>   [693,]   12   13   13 #>   [694,]   13   13   13 #>   [695,]   13   14   12 #>   [696,]   12   14   12 #>   [697,]   12   13   13 #>   [698,]   12   13   13 #>   [699,]   12   13   13 #>   [700,]   13   14   12 #>   [701,]   14   16   15 #>   [702,]   14   16   15 #>   [703,]   14   15   14 #>   [704,]   14   15   14 #>   [705,]   14   15   14 #>   [706,]   14   16   15 #>   [707,]   14   16   15 #>   [708,]   14   15   14 #>   [709,]   14   15   14 #>   [710,]   14   15   14 #>   [711,]   14   16   15 #>   [712,]   14   16   15 #>   [713,]   14   16   15 #>   [714,]   14   16   15 #>   [715,]   14   16   15 #>   [716,]   14   16   15 #>   [717,]   14   16   15 #>   [718,]   14   15   14 #>   [719,]   14   16   15 #>   [720,]   14   15   14 #>   [721,]   14   16   15 #>   [722,]   14   16   15 #>   [723,]   14   15   14 #>   [724,]   14   15   14 #>   [725,]   14   16   15 #>   [726,]   14   16   15 #>   [727,]   14   16   15 #>   [728,]   14   16   15 #>   [729,]   14   16   15 #>   [730,]   14   15   14 #>   [731,]   14   15   14 #>   [732,]   14   15   14 #>   [733,]   14   16   15 #>   [734,]   14   15   14 #>   [735,]   14   16   15 #>   [736,]   14   15   14 #>   [737,]   14   16   15 #>   [738,]   14   15   14 #>   [739,]   14   15   14 #>   [740,]   14   16   15 #>   [741,]   14   16   15 #>   [742,]   14   15   14 #>   [743,]   14   15   14 #>   [744,]   14   16   15 #>   [745,]   14   15   14 #>   [746,]   14   16   15 #>   [747,]   14   16   15 #>   [748,]   14   15   14 #>   [749,]   14   15   14 #>   [750,]   14   16   15 #>   [751,]   14   15   14 #>   [752,]   14   16   15 #>   [753,]   14   15   14 #>   [754,]   14   16   15 #>   [755,]   14   16   15 #>   [756,]   14   15   14 #>   [757,]   14   16   15 #>   [758,]   14   16   15 #>   [759,]   14   16   15 #>   [760,]   14   15   14 #>   [761,]   14   16   15 #>   [762,]   14   15   14 #>   [763,]   14   16   15 #>   [764,]   14   15   14 #>   [765,]   14   15   14 #>   [766,]   14   15   14 #>   [767,]   14   15   14 #>   [768,]   14   16   15 #>   [769,]   14   16   15 #>   [770,]   14   16   15 #>   [771,]   14   16   15 #>   [772,]   14   15   14 #>   [773,]   14   16   15 #>   [774,]   14   16   15 #>   [775,]   14   16   15 #>   [776,]   14   16   15 #>   [777,]   14   16   15 #>   [778,]   14   15   14 #>   [779,]   14   16   15 #>   [780,]   14   16   15 #>   [781,]   14   16   15 #>   [782,]   14   16   15 #>   [783,]   14   16   15 #>   [784,]   14   16   15 #>   [785,]   14   15   14 #>   [786,]   14   16   15 #>   [787,]   14   16   15 #>   [788,]   14   15   14 #>   [789,]   14   15   14 #>   [790,]   14   16   15 #>   [791,]   14   15   14 #>   [792,]   14   16   15 #>   [793,]   14   16   15 #>   [794,]   14   16   15 #>   [795,]   14   15   14 #>   [796,]   14   16   15 #>   [797,]   14   16   15 #>   [798,]   14   16   15 #>   [799,]   14   16   15 #>   [800,]   14   16   15 #>   [801,]   16   18   17 #>   [802,]   16   18   17 #>   [803,]   15   17   16 #>   [804,]   16   19   17 #>   [805,]   16   18   17 #>   [806,]   16   18   17 #>   [807,]   15   17   16 #>   [808,]   15   17   16 #>   [809,]   16   19   17 #>   [810,]   16   19   17 #>   [811,]   16   18   17 #>   [812,]   16   18   17 #>   [813,]   16   18   17 #>   [814,]   16   19   17 #>   [815,]   16   18   17 #>   [816,]   15   17   16 #>   [817,]   16   18   17 #>   [818,]   16   18   17 #>   [819,]   16   18   17 #>   [820,]   15   17   16 #>   [821,]   16   18   17 #>   [822,]   16   18   17 #>   [823,]   16   18   17 #>   [824,]   15   17   16 #>   [825,]   15   17   16 #>   [826,]   16   18   17 #>   [827,]   16   18   17 #>   [828,]   16   19   17 #>   [829,]   16   18   17 #>   [830,]   16   18   17 #>   [831,]   16   18   17 #>   [832,]   16   18   17 #>   [833,]   16   18   17 #>   [834,]   16   18   17 #>   [835,]   16   18   17 #>   [836,]   16   19   17 #>   [837,]   16   18   17 #>   [838,]   16   18   17 #>   [839,]   15   17   16 #>   [840,]   16   18   17 #>   [841,]   16   18   17 #>   [842,]   16   18   17 #>   [843,]   16   18   17 #>   [844,]   15   17   16 #>   [845,]   16   18   17 #>   [846,]   15   17   16 #>   [847,]   16   18   17 #>   [848,]   16   18   17 #>   [849,]   15   17   16 #>   [850,]   15   17   16 #>   [851,]   16   18   17 #>   [852,]   16   19   17 #>   [853,]   15   17   16 #>   [854,]   16   19   17 #>   [855,]   15   17   16 #>   [856,]   15   17   16 #>   [857,]   16   19   17 #>   [858,]   16   18   17 #>   [859,]   15   17   16 #>   [860,]   16   18   17 #>   [861,]   16   18   17 #>   [862,]   16   18   17 #>   [863,]   16   18   17 #>   [864,]   16   18   17 #>   [865,]   15   17   16 #>   [866,]   15   17   16 #>   [867,]   16   19   17 #>   [868,]   16   18   17 #>   [869,]   16   18   17 #>   [870,]   15   17   16 #>   [871,]   16   18   17 #>   [872,]   15   17   16 #>   [873,]   16   19   17 #>   [874,]   16   18   17 #>   [875,]   16   18   17 #>   [876,]   16   19   17 #>   [877,]   16   18   17 #>   [878,]   16   18   17 #>   [879,]   16   18   17 #>   [880,]   16   18   17 #>   [881,]   16   18   17 #>   [882,]   16   18   17 #>   [883,]   16   18   17 #>   [884,]   15   17   16 #>   [885,]   16   18   17 #>   [886,]   15   17   16 #>   [887,]   16   18   17 #>   [888,]   16   18   17 #>   [889,]   16   18   17 #>   [890,]   15   17   16 #>   [891,]   16   19   17 #>   [892,]   16   18   17 #>   [893,]   16   18   17 #>   [894,]   16   18   17 #>   [895,]   16   18   17 #>   [896,]   16   18   17 #>   [897,]   16   18   17 #>   [898,]   15   17   16 #>   [899,]   16   18   17 #>   [900,]   15   17   16 #>   [901,]   18   21   19 #>   [902,]   18   21   19 #>   [903,]   18   21   19 #>   [904,]   17   20   18 #>   [905,]   18   21   19 #>   [906,]   18   21   19 #>   [907,]   18   21   19 #>   [908,]   17   20   18 #>   [909,]   17   20   18 #>   [910,]   17   20   18 #>   [911,]   18   21   19 #>   [912,]   18   21   19 #>   [913,]   18   21   19 #>   [914,]   18   21   19 #>   [915,]   18   21   19 #>   [916,]   18   21   19 #>   [917,]   18   21   19 #>   [918,]   18   21   19 #>   [919,]   18   21   19 #>   [920,]   17   20   18 #>   [921,]   18   21   19 #>   [922,]   18   21   19 #>   [923,]   18   21   19 #>   [924,]   18   21   19 #>   [925,]   18   21   19 #>   [926,]   18   21   19 #>   [927,]   18   21   19 #>   [928,]   18   21   19 #>   [929,]   18   21   19 #>   [930,]   17   20   18 #>   [931,]   18   21   19 #>   [932,]   18   21   19 #>   [933,]   18   21   19 #>   [934,]   18   21   19 #>   [935,]   18   21   19 #>   [936,]   18   21   19 #>   [937,]   18   21   19 #>   [938,]   18   21   19 #>   [939,]   18   21   19 #>   [940,]   18   21   19 #>   [941,]   18   21   19 #>   [942,]   18   21   19 #>   [943,]   17   20   18 #>   [944,]   18   21   19 #>   [945,]   18   21   19 #>   [946,]   18   21   19 #>   [947,]   18   21   19 #>   [948,]   18   21   19 #>   [949,]   18   21   19 #>   [950,]   18   21   19 #>   [951,]   17   20   18 #>   [952,]   18   21   19 #>   [953,]   17   20   18 #>   [954,]   18   21   19 #>   [955,]   18   21   19 #>   [956,]   17   20   18 #>   [957,]   18   21   19 #>   [958,]   18   21   19 #>   [959,]   18   21   19 #>   [960,]   17   20   18 #>   [961,]   18   21   19 #>   [962,]   18   21   19 #>   [963,]   18   21   19 #>   [964,]   17   20   18 #>   [965,]   18   21   19 #>   [966,]   17   20   18 #>   [967,]   17   20   18 #>   [968,]   18   21   19 #>   [969,]   18   21   19 #>   [970,]   18   21   19 #>   [971,]   18   21   19 #>   [972,]   18   21   19 #>   [973,]   18   21   19 #>   [974,]   18   21   19 #>   [975,]   18   21   19 #>   [976,]   18   21   19 #>   [977,]   18   21   19 #>   [978,]   17   20   18 #>   [979,]   18   21   19 #>   [980,]   18   21   19 #>   [981,]   18   21   19 #>   [982,]   18   21   19 #>   [983,]   18   21   19 #>   [984,]   18   21   19 #>   [985,]   17   20   18 #>   [986,]   18   21   19 #>   [987,]   18   21   19 #>   [988,]   18   21   19 #>   [989,]   17   20   18 #>   [990,]   18   21   19 #>   [991,]   17   20   18 #>   [992,]   18   21   19 #>   [993,]   18   21   19 #>   [994,]   18   21   19 #>   [995,]   17   20   18 #>   [996,]   18   21   19 #>   [997,]   18   21   19 #>   [998,]   18   21   19 #>   [999,]   18   21   19 #>  [1000,]   18   21   19 #>  [1001,]   20   23   22 #>  [1002,]   19   22   20 #>  [1003,]   19   22   20 #>  [1004,]   19   22   20 #>  [1005,]   20   24   21 #>  [1006,]   19   22   20 #>  [1007,]   19   22   20 #>  [1008,]   19   22   20 #>  [1009,]   19   22   20 #>  [1010,]   19   22   20 #>  [1011,]   19   22   20 #>  [1012,]   19   22   20 #>  [1013,]   19   22   20 #>  [1014,]   20   23   21 #>  [1015,]   20   23   22 #>  [1016,]   19   22   20 #>  [1017,]   19   22   20 #>  [1018,]   20   24   22 #>  [1019,]   19   22   20 #>  [1020,]   19   22   20 #>  [1021,]   19   22   20 #>  [1022,]   19   22   20 #>  [1023,]   19   22   20 #>  [1024,]   19   22   20 #>  [1025,]   19   22   20 #>  [1026,]   19   22   20 #>  [1027,]   20   23   22 #>  [1028,]   19   22   20 #>  [1029,]   19   22   20 #>  [1030,]   19   22   20 #>  [1031,]   19   22   20 #>  [1032,]   20   23   21 #>  [1033,]   19   22   20 #>  [1034,]   19   22   20 #>  [1035,]   19   22   20 #>  [1036,]   19   22   20 #>  [1037,]   19   22   20 #>  [1038,]   19   22   20 #>  [1039,]   19   22   20 #>  [1040,]   19   22   20 #>  [1041,]   19   22   20 #>  [1042,]   19   22   20 #>  [1043,]   20   23   22 #>  [1044,]   19   22   20 #>  [1045,]   19   22   20 #>  [1046,]   19   22   20 #>  [1047,]   19   22   20 #>  [1048,]   19   22   20 #>  [1049,]   19   22   20 #>  [1050,]   19   22   20 #>  [1051,]   19   22   20 #>  [1052,]   19   22   20 #>  [1053,]   19   22   20 #>  [1054,]   19   22   20 #>  [1055,]   19   22   20 #>  [1056,]   19   22   20 #>  [1057,]   19   22   20 #>  [1058,]   20   23   21 #>  [1059,]   19   22   20 #>  [1060,]   19   22   20 #>  [1061,]   19   22   20 #>  [1062,]   19   22   20 #>  [1063,]   19   22   20 #>  [1064,]   19   22   20 #>  [1065,]   19   22   20 #>  [1066,]   19   22   20 #>  [1067,]   19   22   20 #>  [1068,]   19   22   20 #>  [1069,]   19   22   20 #>  [1070,]   19   22   20 #>  [1071,]   20   24   22 #>  [1072,]   19   22   20 #>  [1073,]   19   22   20 #>  [1074,]   19   22   20 #>  [1075,]   20   24   22 #>  [1076,]   19   22   20 #>  [1077,]   19   22   20 #>  [1078,]   19   22   20 #>  [1079,]   19   22   20 #>  [1080,]   19   22   20 #>  [1081,]   19   22   20 #>  [1082,]   19   22   20 #>  [1083,]   19   22   20 #>  [1084,]   19   22   20 #>  [1085,]   19   22   20 #>  [1086,]   19   22   20 #>  [1087,]   19   22   20 #>  [1088,]   19   22   20 #>  [1089,]   19   22   20 #>  [1090,]   19   22   20 #>  [1091,]   20   23   21 #>  [1092,]   19   22   20 #>  [1093,]   19   22   20 #>  [1094,]   19   22   20 #>  [1095,]   20   23   22 #>  [1096,]   19   22   20 #>  [1097,]   19   22   20 #>  [1098,]   19   22   20 #>  [1099,]   19   22   20 #>  [1100,]   20   24   22 #>  [1101,]   21   25   24 #>  [1102,]   23   27   24 #>  [1103,]   21   25   23 #>  [1104,]   21   25   23 #>  [1105,]   21   25   23 #>  [1106,]   22   26   24 #>  [1107,]   21   25   23 #>  [1108,]   21   25   23 #>  [1109,]   21   25   23 #>  [1110,]   21   25   23 #>  [1111,]   22   26   24 #>  [1112,]   22   26   23 #>  [1113,]   21   25   24 #>  [1114,]   21   25   24 #>  [1115,]   23   27   24 #>  [1116,]   21   25   24 #>  [1117,]   23   27   24 #>  [1118,]   21   25   23 #>  [1119,]   22   26   23 #>  [1120,]   21   25   23 #>  [1121,]   21   25   24 #>  [1122,]   21   25   24 #>  [1123,]   23   27   23 #>  [1124,]   21   25   23 #>  [1125,]   21   25   23 #>  [1126,]   22   26   24 #>  [1127,]   21   25   24 #>  [1128,]   21   25   23 #>  [1129,]   22   26   24 #>  [1130,]   22   26   23 #>  [1131,]   23   27   23 #>  [1132,]   21   25   23 #>  [1133,]   21   25   24 #>  [1134,]   22   26   23 #>  [1135,]   23   27   24 #>  [1136,]   21   25   23 #>  [1137,]   23   27   24 #>  [1138,]   21   25   23 #>  [1139,]   21   25   23 #>  [1140,]   21   25   23 #>  [1141,]   21   25   24 #>  [1142,]   22   26   23 #>  [1143,]   23   27   23 #>  [1144,]   23   27   24 #>  [1145,]   21   25   23 #>  [1146,]   21   25   23 #>  [1147,]   23   27   24 #>  [1148,]   22   26   23 #>  [1149,]   21   25   23 #>  [1150,]   21   25   24 #>  [1151,]   21   25   23 #>  [1152,]   21   25   24 #>  [1153,]   21   25   23 #>  [1154,]   21   25   23 #>  [1155,]   21   25   23 #>  [1156,]   23   27   23 #>  [1157,]   21   25   23 #>  [1158,]   21   25   24 #>  [1159,]   21   25   24 #>  [1160,]   22   26   23 #>  [1161,]   23   27   24 #>  [1162,]   21   25   23 #>  [1163,]   22   26   23 #>  [1164,]   23   27   23 #>  [1165,]   23   27   23 #>  [1166,]   22   26   23 #>  [1167,]   21   25   23 #>  [1168,]   22   26   24 #>  [1169,]   21   25   23 #>  [1170,]   23   27   24 #>  [1171,]   21   25   24 #>  [1172,]   21   25   23 #>  [1173,]   21   25   24 #>  [1174,]   21   25   23 #>  [1175,]   23   27   23 #>  [1176,]   21   25   24 #>  [1177,]   21   25   24 #>  [1178,]   22   26   23 #>  [1179,]   23   27   24 #>  [1180,]   21   25   23 #>  [1181,]   22   26   24 #>  [1182,]   21   25   23 #>  [1183,]   21   25   24 #>  [1184,]   21   25   24 #>  [1185,]   21   25   23 #>  [1186,]   21   25   24 #>  [1187,]   21   25   23 #>  [1188,]   21   25   23 #>  [1189,]   21   25   23 #>  [1190,]   21   25   24 #>  [1191,]   21   25   23 #>  [1192,]   23   27   23 #>  [1193,]   21   25   24 #>  [1194,]   23   27   24 #>  [1195,]   23   27   23 #>  [1196,]   23   27   24 #>  [1197,]   21   25   23 #>  [1198,]   21   25   23 #>  [1199,]   21   25   24 #>  [1200,]   23   27   24 #>  [1201,]   25   28   25 #>  [1202,]   24   30   26 #>  [1203,]   24   29   26 #>  [1204,]   24   29   26 #>  [1205,]   25   28   25 #>  [1206,]   24   29   26 #>  [1207,]   24   30   26 #>  [1208,]   24   30   26 #>  [1209,]   24   29   26 #>  [1210,]   25   28   25 #>  [1211,]   25   28   25 #>  [1212,]   25   28   25 #>  [1213,]   24   30   26 #>  [1214,]   25   28   25 #>  [1215,]   25   28   25 #>  [1216,]   25   28   25 #>  [1217,]   25   28   25 #>  [1218,]   25   28   25 #>  [1219,]   25   28   25 #>  [1220,]   24   30   27 #>  [1221,]   24   29   26 #>  [1222,]   25   28   25 #>  [1223,]   24   30   26 #>  [1224,]   25   28   25 #>  [1225,]   24   29   26 #>  [1226,]   25   28   25 #>  [1227,]   25   28   25 #>  [1228,]   24   29   26 #>  [1229,]   24   30   27 #>  [1230,]   24   30   26 #>  [1231,]   25   28   25 #>  [1232,]   25   28   25 #>  [1233,]   24   30   26 #>  [1234,]   24   29   26 #>  [1235,]   24   29   26 #>  [1236,]   24   30   27 #>  [1237,]   24   30   27 #>  [1238,]   25   28   25 #>  [1239,]   25   28   25 #>  [1240,]   24   29   26 #>  [1241,]   24   30   26 #>  [1242,]   24   29   26 #>  [1243,]   25   28   25 #>  [1244,]   24   30   26 #>  [1245,]   24   30   26 #>  [1246,]   24   30   27 #>  [1247,]   25   28   25 #>  [1248,]   24   29   26 #>  [1249,]   24   30   26 #>  [1250,]   24   30   26 #>  [1251,]   25   28   25 #>  [1252,]   25   28   25 #>  [1253,]   24   30   27 #>  [1254,]   24   29   26 #>  [1255,]   24   30   27 #>  [1256,]   24   30   26 #>  [1257,]   24   29   26 #>  [1258,]   25   28   25 #>  [1259,]   25   28   25 #>  [1260,]   24   30   26 #>  [1261,]   25   28   25 #>  [1262,]   24   29   26 #>  [1263,]   24   30   26 #>  [1264,]   24   30   27 #>  [1265,]   24   29   26 #>  [1266,]   25   28   25 #>  [1267,]   24   29   26 #>  [1268,]   25   28   25 #>  [1269,]   24   30   27 #>  [1270,]   25   28   25 #>  [1271,]   25   28   25 #>  [1272,]   24   29   26 #>  [1273,]   24   29   26 #>  [1274,]   24   29   26 #>  [1275,]   25   28   25 #>  [1276,]   24   29   26 #>  [1277,]   25   28   25 #>  [1278,]   24   30   26 #>  [1279,]   25   28   25 #>  [1280,]   24   30   27 #>  [1281,]   24   30   27 #>  [1282,]   24   29   26 #>  [1283,]   25   28   25 #>  [1284,]   24   30   26 #>  [1285,]   24   30   26 #>  [1286,]   24   29   26 #>  [1287,]   25   28   25 #>  [1288,]   24   29   26 #>  [1289,]   24   29   26 #>  [1290,]   25   28   25 #>  [1291,]   25   28   25 #>  [1292,]   25   28   25 #>  [1293,]   24   30   26 #>  [1294,]   24   29   26 #>  [1295,]   25   28   25 #>  [1296,]   25   28   25 #>  [1297,]   24   30   27 #>  [1298,]   24   29   26 #>  [1299,]   24   29   26 #>  [1300,]   25   28   25 #>  [1301,]   27   32   28 #>  [1302,]   27   32   28 #>  [1303,]   26   31   29 #>  [1304,]   26   31   29 #>  [1305,]   27   32   28 #>  [1306,]   27   32   28 #>  [1307,]   26   31   30 #>  [1308,]   26   31   30 #>  [1309,]   27   32   28 #>  [1310,]   27   32   28 #>  [1311,]   27   32   28 #>  [1312,]   26   31   30 #>  [1313,]   27   32   28 #>  [1314,]   26   31   29 #>  [1315,]   27   32   28 #>  [1316,]   27   32   28 #>  [1317,]   27   32   28 #>  [1318,]   27   32   28 #>  [1319,]   27   32   28 #>  [1320,]   27   32   28 #>  [1321,]   27   32   28 #>  [1322,]   27   32   28 #>  [1323,]   26   31   30 #>  [1324,]   27   32   28 #>  [1325,]   26   31   29 #>  [1326,]   27   32   28 #>  [1327,]   27   32   28 #>  [1328,]   27   32   28 #>  [1329,]   27   32   28 #>  [1330,]   27   32   28 #>  [1331,]   26   31   29 #>  [1332,]   26   31   29 #>  [1333,]   27   32   28 #>  [1334,]   27   32   28 #>  [1335,]   27   32   28 #>  [1336,]   27   32   28 #>  [1337,]   26   31   30 #>  [1338,]   27   32   28 #>  [1339,]   27   32   28 #>  [1340,]   26   31   29 #>  [1341,]   27   32   28 #>  [1342,]   27   32   28 #>  [1343,]   27   32   28 #>  [1344,]   26   31   30 #>  [1345,]   27   32   28 #>  [1346,]   26   31   30 #>  [1347,]   26   31   29 #>  [1348,]   27   32   28 #>  [1349,]   27   32   28 #>  [1350,]   27   32   28 #>  [1351,]   27   32   28 #>  [1352,]   26   31   29 #>  [1353,]   27   32   28 #>  [1354,]   27   32   28 #>  [1355,]   26   31   30 #>  [1356,]   27   32   28 #>  [1357,]   26   31   29 #>  [1358,]   27   32   28 #>  [1359,]   26   31   30 #>  [1360,]   26   31   30 #>  [1361,]   27   32   28 #>  [1362,]   27   32   28 #>  [1363,]   27   32   28 #>  [1364,]   27   32   28 #>  [1365,]   27   32   28 #>  [1366,]   27   32   28 #>  [1367,]   26   31   29 #>  [1368,]   26   31   30 #>  [1369,]   27   32   28 #>  [1370,]   27   32   28 #>  [1371,]   27   32   28 #>  [1372,]   26   31   29 #>  [1373,]   27   32   28 #>  [1374,]   26   31   29 #>  [1375,]   26   31   30 #>  [1376,]   26   31   29 #>  [1377,]   27   32   28 #>  [1378,]   26   31   30 #>  [1379,]   27   32   28 #>  [1380,]   26   31   30 #>  [1381,]   27   32   28 #>  [1382,]   27   32   28 #>  [1383,]   27   32   28 #>  [1384,]   27   32   28 #>  [1385,]   27   32   28 #>  [1386,]   26   31   29 #>  [1387,]   27   32   28 #>  [1388,]   27   32   28 #>  [1389,]   27   32   28 #>  [1390,]   27   32   28 #>  [1391,]   27   32   28 #>  [1392,]   26   31   29 #>  [1393,]   27   32   28 #>  [1394,]   27   32   28 #>  [1395,]   27   32   28 #>  [1396,]   26   31   30 #>  [1397,]   26   31   30 #>  [1398,]   26   31   29 #>  [1399,]   27   32   28 #>  [1400,]   27   32   28 #>  [1401,]   28   33   32 #>  [1402,]   28   33   32 #>  [1403,]   28   33   32 #>  [1404,]   29   34   31 #>  [1405,]   28   33   32 #>  [1406,]   28   33   32 #>  [1407,]   28   33   32 #>  [1408,]   28   33   32 #>  [1409,]   28   33   32 #>  [1410,]   29   34   31 #>  [1411,]   28   33   32 #>  [1412,]   28   33   32 #>  [1413,]   28   33   32 #>  [1414,]   28   33   32 #>  [1415,]   28   33   32 #>  [1416,]   28   33   32 #>  [1417,]   28   33   32 #>  [1418,]   29   34   31 #>  [1419,]   28   33   32 #>  [1420,]   28   33   32 #>  [1421,]   28   33   32 #>  [1422,]   28   33   32 #>  [1423,]   28   33   32 #>  [1424,]   28   33   32 #>  [1425,]   29   34   31 #>  [1426,]   28   33   32 #>  [1427,]   28   33   32 #>  [1428,]   28   33   32 #>  [1429,]   28   33   32 #>  [1430,]   28   33   32 #>  [1431,]   28   33   32 #>  [1432,]   28   33   32 #>  [1433,]   28   33   32 #>  [1434,]   28   33   32 #>  [1435,]   28   33   32 #>  [1436,]   28   33   32 #>  [1437,]   28   33   32 #>  [1438,]   28   33   32 #>  [1439,]   29   34   31 #>  [1440,]   28   33   32 #>  [1441,]   28   33   32 #>  [1442,]   28   33   32 #>  [1443,]   29   34   31 #>  [1444,]   28   33   32 #>  [1445,]   29   34   31 #>  [1446,]   28   33   32 #>  [1447,]   28   33   32 #>  [1448,]   28   33   32 #>  [1449,]   28   33   32 #>  [1450,]   28   33   32 #>  [1451,]   28   33   32 #>  [1452,]   28   33   32 #>  [1453,]   28   33   32 #>  [1454,]   28   33   32 #>  [1455,]   28   33   32 #>  [1456,]   28   33   32 #>  [1457,]   28   33   32 #>  [1458,]   28   33   32 #>  [1459,]   28   33   32 #>  [1460,]   28   33   32 #>  [1461,]   28   33   32 #>  [1462,]   28   33   32 #>  [1463,]   28   33   32 #>  [1464,]   28   33   32 #>  [1465,]   28   33   32 #>  [1466,]   28   33   32 #>  [1467,]   28   33   32 #>  [1468,]   28   33   32 #>  [1469,]   28   33   32 #>  [1470,]   28   33   32 #>  [1471,]   28   33   32 #>  [1472,]   28   33   32 #>  [1473,]   29   34   31 #>  [1474,]   29   34   31 #>  [1475,]   29   34   31 #>  [1476,]   29   34   31 #>  [1477,]   29   34   31 #>  [1478,]   28   33   32 #>  [1479,]   28   33   32 #>  [1480,]   28   33   32 #>  [1481,]   28   33   32 #>  [1482,]   28   33   32 #>  [1483,]   28   33   32 #>  [1484,]   28   33   32 #>  [1485,]   28   33   32 #>  [1486,]   28   33   32 #>  [1487,]   28   33   32 #>  [1488,]   28   33   32 #>  [1489,]   28   33   32 #>  [1490,]   28   33   32 #>  [1491,]   28   33   32 #>  [1492,]   28   33   32 #>  [1493,]   28   33   32 #>  [1494,]   28   33   32 #>  [1495,]   28   33   32 #>  [1496,]   28   33   32 #>  [1497,]   28   33   32 #>  [1498,]   28   33   32 #>  [1499,]   28   33   32 #>  [1500,]   28   33   32 #>  [1501,]   30   35   33 #>  [1502,]   31   36   34 #>  [1503,]   30   35   33 #>  [1504,]   30   35   33 #>  [1505,]   31   36   34 #>  [1506,]   30   35   33 #>  [1507,]   31   36   34 #>  [1508,]   30   35   33 #>  [1509,]   31   36   34 #>  [1510,]   31   36   34 #>  [1511,]   30   35   33 #>  [1512,]   31   36   34 #>  [1513,]   31   36   34 #>  [1514,]   30   35   33 #>  [1515,]   30   35   33 #>  [1516,]   30   35   33 #>  [1517,]   31   36   34 #>  [1518,]   31   36   34 #>  [1519,]   30   35   33 #>  [1520,]   31   36   34 #>  [1521,]   31   36   34 #>  [1522,]   31   36   34 #>  [1523,]   31   36   34 #>  [1524,]   31   36   34 #>  [1525,]   30   35   33 #>  [1526,]   30   35   33 #>  [1527,]   31   36   34 #>  [1528,]   30   35   33 #>  [1529,]   31   36   34 #>  [1530,]   31   36   34 #>  [1531,]   31   36   34 #>  [1532,]   31   36   34 #>  [1533,]   31   36   34 #>  [1534,]   30   35   33 #>  [1535,]   30   35   33 #>  [1536,]   31   36   34 #>  [1537,]   30   35   33 #>  [1538,]   30   35   33 #>  [1539,]   31   36   34 #>  [1540,]   31   36   34 #>  [1541,]   31   36   34 #>  [1542,]   30   35   33 #>  [1543,]   30   35   33 #>  [1544,]   31   36   34 #>  [1545,]   30   35   33 #>  [1546,]   30   35   33 #>  [1547,]   31   36   34 #>  [1548,]   31   36   34 #>  [1549,]   30   35   33 #>  [1550,]   31   36   34 #>  [1551,]   31   36   34 #>  [1552,]   30   35   33 #>  [1553,]   31   36   34 #>  [1554,]   31   36   34 #>  [1555,]   30   35   33 #>  [1556,]   30   35   33 #>  [1557,]   30   35   33 #>  [1558,]   31   36   34 #>  [1559,]   30   35   33 #>  [1560,]   31   36   34 #>  [1561,]   31   36   34 #>  [1562,]   30   35   33 #>  [1563,]   31   36   34 #>  [1564,]   30   35   33 #>  [1565,]   30   35   33 #>  [1566,]   30   35   33 #>  [1567,]   30   35   33 #>  [1568,]   30   35   33 #>  [1569,]   30   35   33 #>  [1570,]   31   36   34 #>  [1571,]   31   36   34 #>  [1572,]   30   35   33 #>  [1573,]   30   35   33 #>  [1574,]   31   36   34 #>  [1575,]   31   36   34 #>  [1576,]   31   36   34 #>  [1577,]   30   35   33 #>  [1578,]   31   36   34 #>  [1579,]   30   35   33 #>  [1580,]   31   36   34 #>  [1581,]   31   36   34 #>  [1582,]   30   35   33 #>  [1583,]   31   36   34 #>  [1584,]   31   36   34 #>  [1585,]   30   35   33 #>  [1586,]   31   36   34 #>  [1587,]   31   36   34 #>  [1588,]   31   36   34 #>  [1589,]   30   35   33 #>  [1590,]   31   36   34 #>  [1591,]   30   35   33 #>  [1592,]   31   36   34 #>  [1593,]   31   36   34 #>  [1594,]   30   35   33 #>  [1595,]   31   36   34 #>  [1596,]   30   35   33 #>  [1597,]   30   35   33 #>  [1598,]   30   35   33 #>  [1599,]   30   35   33 #>  [1600,]   30   35   33 #>  [1601,]   32   37   35 #>  [1602,]   32   38   36 #>  [1603,]   32   37   35 #>  [1604,]   32   37   35 #>  [1605,]   32   37   35 #>  [1606,]   32   37   35 #>  [1607,]   32   37   35 #>  [1608,]   32   37   35 #>  [1609,]   32   38   36 #>  [1610,]   32   38   36 #>  [1611,]   32   37   35 #>  [1612,]   32   38   36 #>  [1613,]   32   38   36 #>  [1614,]   32   37   35 #>  [1615,]   32   37   35 #>  [1616,]   32   37   35 #>  [1617,]   32   38   36 #>  [1618,]   32   37   35 #>  [1619,]   32   37   35 #>  [1620,]   32   37   35 #>  [1621,]   32   38   36 #>  [1622,]   32   37   35 #>  [1623,]   32   37   35 #>  [1624,]   32   38   36 #>  [1625,]   32   37   35 #>  [1626,]   32   37   35 #>  [1627,]   32   37   35 #>  [1628,]   32   37   35 #>  [1629,]   32   38   36 #>  [1630,]   32   37   35 #>  [1631,]   32   38   36 #>  [1632,]   32   38   36 #>  [1633,]   32   38   36 #>  [1634,]   32   37   35 #>  [1635,]   32   37   35 #>  [1636,]   32   37   35 #>  [1637,]   32   37   35 #>  [1638,]   32   37   35 #>  [1639,]   32   37   35 #>  [1640,]   32   38   36 #>  [1641,]   32   37   35 #>  [1642,]   32   37   35 #>  [1643,]   32   37   35 #>  [1644,]   32   37   35 #>  [1645,]   32   37   35 #>  [1646,]   32   37   35 #>  [1647,]   32   37   35 #>  [1648,]   32   37   35 #>  [1649,]   32   37   35 #>  [1650,]   32   37   35 #>  [1651,]   32   37   35 #>  [1652,]   32   37   35 #>  [1653,]   32   38   36 #>  [1654,]   32   37   35 #>  [1655,]   32   37   35 #>  [1656,]   32   37   35 #>  [1657,]   32   37   35 #>  [1658,]   32   37   35 #>  [1659,]   32   37   35 #>  [1660,]   32   38   36 #>  [1661,]   32   38   36 #>  [1662,]   32   37   35 #>  [1663,]   32   38   36 #>  [1664,]   32   37   35 #>  [1665,]   32   37   35 #>  [1666,]   32   37   35 #>  [1667,]   32   37   35 #>  [1668,]   32   37   35 #>  [1669,]   32   37   35 #>  [1670,]   32   38   36 #>  [1671,]   32   37   35 #>  [1672,]   32   37   35 #>  [1673,]   32   37   35 #>  [1674,]   32   37   35 #>  [1675,]   32   38   36 #>  [1676,]   32   37   35 #>  [1677,]   32   37   35 #>  [1678,]   32   37   35 #>  [1679,]   32   37   35 #>  [1680,]   32   38   36 #>  [1681,]   32   38   36 #>  [1682,]   32   37   35 #>  [1683,]   32   38   36 #>  [1684,]   32   37   35 #>  [1685,]   32   37   35 #>  [1686,]   32   38   36 #>  [1687,]   32   37   35 #>  [1688,]   32   37   35 #>  [1689,]   32   37   35 #>  [1690,]   32   37   35 #>  [1691,]   32   37   35 #>  [1692,]   32   37   35 #>  [1693,]   32   37   35 #>  [1694,]   32   37   35 #>  [1695,]   32   37   35 #>  [1696,]   32   37   35 #>  [1697,]   32   37   35 #>  [1698,]   32   37   35 #>  [1699,]   32   37   35 #>  [1700,]   32   37   35 #>  [1701,]   35   40   38 #>  [1702,]   33   39   39 #>  [1703,]   33   39   39 #>  [1704,]   33   39   40 #>  [1705,]   35   40   38 #>  [1706,]   33   39   40 #>  [1707,]   33   39   39 #>  [1708,]   33   39   40 #>  [1709,]   33   39   40 #>  [1710,]   33   39   39 #>  [1711,]   33   39   40 #>  [1712,]   33   39   40 #>  [1713,]   33   39   39 #>  [1714,]   35   40   38 #>  [1715,]   34   40   38 #>  [1716,]   33   39   39 #>  [1717,]   33   39   39 #>  [1718,]   35   40   37 #>  [1719,]   33   39   39 #>  [1720,]   33   39   40 #>  [1721,]   33   39   39 #>  [1722,]   33   39   39 #>  [1723,]   33   39   39 #>  [1724,]   33   39   39 #>  [1725,]   33   39   39 #>  [1726,]   35   40   38 #>  [1727,]   35   40   38 #>  [1728,]   33   39   40 #>  [1729,]   33   39   39 #>  [1730,]   33   39   39 #>  [1731,]   33   39   39 #>  [1732,]   35   40   37 #>  [1733,]   33   39   40 #>  [1734,]   33   39   39 #>  [1735,]   33   39   39 #>  [1736,]   33   39   39 #>  [1737,]   33   39   39 #>  [1738,]   33   39   40 #>  [1739,]   33   39   39 #>  [1740,]   33   39   39 #>  [1741,]   33   39   40 #>  [1742,]   33   39   40 #>  [1743,]   34   40   38 #>  [1744,]   33   39   39 #>  [1745,]   33   39   40 #>  [1746,]   33   39   40 #>  [1747,]   33   39   39 #>  [1748,]   33   39   39 #>  [1749,]   33   39   39 #>  [1750,]   33   39   40 #>  [1751,]   33   39   40 #>  [1752,]   33   39   40 #>  [1753,]   33   39   40 #>  [1754,]   33   39   39 #>  [1755,]   33   39   40 #>  [1756,]   33   39   40 #>  [1757,]   33   39   40 #>  [1758,]   35   40   38 #>  [1759,]   35   40   37 #>  [1760,]   33   39   40 #>  [1761,]   35   40   38 #>  [1762,]   33   39   39 #>  [1763,]   33   39   40 #>  [1764,]   33   39   40 #>  [1765,]   33   39   40 #>  [1766,]   35   40   38 #>  [1767,]   33   39   40 #>  [1768,]   33   39   40 #>  [1769,]   33   39   40 #>  [1770,]   34   40   37 #>  [1771,]   35   40   38 #>  [1772,]   33   39   40 #>  [1773,]   33   39   40 #>  [1774,]   33   39   40 #>  [1775,]   34   40   38 #>  [1776,]   33   39   40 #>  [1777,]   33   39   39 #>  [1778,]   33   39   40 #>  [1779,]   34   40   37 #>  [1780,]   33   39   39 #>  [1781,]   33   39   40 #>  [1782,]   33   39   40 #>  [1783,]   33   39   39 #>  [1784,]   33   39   40 #>  [1785,]   33   39   39 #>  [1786,]   33   39   39 #>  [1787,]   35   40   38 #>  [1788,]   33   39   40 #>  [1789,]   33   39   40 #>  [1790,]   33   39   40 #>  [1791,]   35   40   38 #>  [1792,]   33   39   40 #>  [1793,]   33   39   39 #>  [1794,]   33   39   40 #>  [1795,]   34   40   37 #>  [1796,]   33   39   40 #>  [1797,]   33   39   40 #>  [1798,]   33   39   39 #>  [1799,]   33   39   40 #>  [1800,]   34   40   37 #>  [1801,]   37   42   41 #>  [1802,]   37   42   41 #>  [1803,]   36   41   41 #>  [1804,]   37   42   41 #>  [1805,]   37   42   41 #>  [1806,]   37   42   41 #>  [1807,]   37   42   41 #>  [1808,]   37   42   41 #>  [1809,]   37   42   41 #>  [1810,]   37   42   41 #>  [1811,]   36   41   41 #>  [1812,]   36   41   41 #>  [1813,]   37   42   41 #>  [1814,]   36   41   41 #>  [1815,]   37   42   41 #>  [1816,]   37   42   41 #>  [1817,]   37   42   41 #>  [1818,]   37   42   41 #>  [1819,]   36   41   41 #>  [1820,]   36   41   41 #>  [1821,]   37   42   41 #>  [1822,]   36   41   41 #>  [1823,]   37   42   41 #>  [1824,]   37   42   41 #>  [1825,]   37   42   41 #>  [1826,]   36   41   41 #>  [1827,]   37   42   41 #>  [1828,]   37   42   41 #>  [1829,]   36   41   41 #>  [1830,]   37   42   41 #>  [1831,]   37   42   41 #>  [1832,]   36   41   41 #>  [1833,]   37   42   41 #>  [1834,]   37   42   41 #>  [1835,]   37   42   41 #>  [1836,]   36   41   41 #>  [1837,]   37   42   41 #>  [1838,]   37   42   41 #>  [1839,]   37   42   41 #>  [1840,]   36   41   41 #>  [1841,]   36   41   41 #>  [1842,]   36   41   41 #>  [1843,]   37   42   41 #>  [1844,]   37   42   41 #>  [1845,]   37   42   41 #>  [1846,]   37   42   41 #>  [1847,]   37   42   41 #>  [1848,]   36   41   41 #>  [1849,]   37   42   41 #>  [1850,]   37   42   41 #>  [1851,]   36   41   41 #>  [1852,]   37   42   41 #>  [1853,]   37   42   41 #>  [1854,]   36   41   41 #>  [1855,]   37   42   41 #>  [1856,]   37   42   41 #>  [1857,]   37   42   41 #>  [1858,]   37   42   41 #>  [1859,]   37   42   41 #>  [1860,]   36   41   41 #>  [1861,]   37   42   41 #>  [1862,]   36   41   41 #>  [1863,]   36   41   41 #>  [1864,]   37   42   41 #>  [1865,]   37   42   41 #>  [1866,]   36   41   41 #>  [1867,]   37   42   41 #>  [1868,]   36   41   41 #>  [1869,]   36   41   41 #>  [1870,]   37   42   41 #>  [1871,]   37   42   41 #>  [1872,]   37   42   41 #>  [1873,]   37   42   41 #>  [1874,]   37   42   41 #>  [1875,]   37   42   41 #>  [1876,]   37   42   41 #>  [1877,]   37   42   41 #>  [1878,]   37   42   41 #>  [1879,]   37   42   41 #>  [1880,]   36   41   41 #>  [1881,]   36   41   41 #>  [1882,]   37   42   41 #>  [1883,]   36   41   41 #>  [1884,]   37   42   41 #>  [1885,]   37   42   41 #>  [1886,]   37   42   41 #>  [1887,]   37   42   41 #>  [1888,]   37   42   41 #>  [1889,]   36   41   41 #>  [1890,]   37   42   41 #>  [1891,]   36   41   41 #>  [1892,]   37   42   41 #>  [1893,]   37   42   41 #>  [1894,]   37   42   41 #>  [1895,]   37   42   41 #>  [1896,]   37   42   41 #>  [1897,]   37   42   41 #>  [1898,]   37   42   41 #>  [1899,]   37   42   41 #>  [1900,]   37   42   41 #>  [1901,]   38   43   43 #>  [1902,]   39   44   42 #>  [1903,]   39   44   42 #>  [1904,]   38   43   43 #>  [1905,]   38   43   43 #>  [1906,]   39   44   42 #>  [1907,]   39   44   42 #>  [1908,]   38   43   43 #>  [1909,]   38   43   43 #>  [1910,]   38   43   43 #>  [1911,]   38   43   43 #>  [1912,]   39   44   42 #>  [1913,]   38   43   43 #>  [1914,]   38   43   43 #>  [1915,]   38   43   43 #>  [1916,]   38   43   43 #>  [1917,]   38   43   43 #>  [1918,]   39   44   42 #>  [1919,]   39   44   42 #>  [1920,]   39   44   42 #>  [1921,]   38   43   43 #>  [1922,]   38   43   43 #>  [1923,]   39   44   42 #>  [1924,]   38   43   43 #>  [1925,]   39   44   42 #>  [1926,]   38   43   43 #>  [1927,]   38   43   43 #>  [1928,]   39   44   42 #>  [1929,]   39   44   42 #>  [1930,]   38   43   43 #>  [1931,]   39   44   42 #>  [1932,]   39   44   42 #>  [1933,]   39   44   42 #>  [1934,]   39   44   42 #>  [1935,]   38   43   43 #>  [1936,]   38   43   43 #>  [1937,]   38   43   43 #>  [1938,]   38   43   43 #>  [1939,]   38   43   43 #>  [1940,]   39   44   42 #>  [1941,]   38   43   43 #>  [1942,]   39   44   42 #>  [1943,]   38   43   43 #>  [1944,]   38   43   43 #>  [1945,]   38   43   43 #>  [1946,]   38   43   43 #>  [1947,]   39   44   42 #>  [1948,]   39   44   42 #>  [1949,]   38   43   43 #>  [1950,]   39   44   42 #>  [1951,]   38   43   43 #>  [1952,]   38   43   43 #>  [1953,]   38   43   43 #>  [1954,]   38   43   43 #>  [1955,]   38   43   43 #>  [1956,]   39   44   42 #>  [1957,]   39   44   42 #>  [1958,]   38   43   43 #>  [1959,]   38   43   43 #>  [1960,]   39   44   42 #>  [1961,]   39   44   42 #>  [1962,]   38   43   43 #>  [1963,]   38   43   43 #>  [1964,]   39   44   42 #>  [1965,]   39   44   42 #>  [1966,]   38   43   43 #>  [1967,]   38   43   43 #>  [1968,]   38   43   43 #>  [1969,]   38   43   43 #>  [1970,]   39   44   42 #>  [1971,]   39   44   42 #>  [1972,]   38   43   43 #>  [1973,]   39   44   42 #>  [1974,]   38   43   43 #>  [1975,]   39   44   42 #>  [1976,]   38   43   43 #>  [1977,]   39   44   42 #>  [1978,]   39   44   42 #>  [1979,]   38   43   43 #>  [1980,]   38   43   43 #>  [1981,]   38   43   43 #>  [1982,]   38   43   43 #>  [1983,]   38   43   43 #>  [1984,]   39   44   42 #>  [1985,]   38   43   43 #>  [1986,]   39   44   42 #>  [1987,]   38   43   43 #>  [1988,]   38   43   43 #>  [1989,]   38   43   43 #>  [1990,]   38   43   43 #>  [1991,]   38   43   43 #>  [1992,]   38   43   43 #>  [1993,]   39   44   42 #>  [1994,]   39   44   42 #>  [1995,]   38   43   43 #>  [1996,]   38   43   43 #>  [1997,]   39   44   42 #>  [1998,]   39   44   42 #>  [1999,]   38   43   43 #>  [2000,]   39   44   42 #>  [2001,]   40   45   44 #>  [2002,]   40   45   44 #>  [2003,]   40   45   44 #>  [2004,]   40   45   44 #>  [2005,]   40   45   44 #>  [2006,]   40   45   44 #>  [2007,]   40   45   44 #>  [2008,]   40   45   44 #>  [2009,]   41   46   45 #>  [2010,]   40   45   44 #>  [2011,]   40   45   44 #>  [2012,]   40   45   44 #>  [2013,]   41   46   45 #>  [2014,]   40   45   44 #>  [2015,]   40   45   44 #>  [2016,]   40   45   44 #>  [2017,]   41   46   45 #>  [2018,]   41   46   45 #>  [2019,]   40   45   44 #>  [2020,]   40   45   44 #>  [2021,]   40   45   44 #>  [2022,]   40   45   44 #>  [2023,]   40   45   44 #>  [2024,]   40   45   44 #>  [2025,]   40   45   44 #>  [2026,]   40   45   44 #>  [2027,]   41   46   45 #>  [2028,]   40   45   44 #>  [2029,]   40   45   44 #>  [2030,]   40   45   44 #>  [2031,]   40   45   44 #>  [2032,]   40   45   44 #>  [2033,]   40   45   44 #>  [2034,]   40   45   44 #>  [2035,]   40   45   44 #>  [2036,]   40   45   44 #>  [2037,]   40   45   44 #>  [2038,]   40   45   44 #>  [2039,]   40   45   44 #>  [2040,]   40   45   44 #>  [2041,]   40   45   44 #>  [2042,]   41   46   45 #>  [2043,]   40   45   44 #>  [2044,]   40   45   44 #>  [2045,]   40   45   44 #>  [2046,]   40   45   44 #>  [2047,]   40   45   44 #>  [2048,]   40   45   44 #>  [2049,]   40   45   44 #>  [2050,]   40   45   44 #>  [2051,]   41   46   45 #>  [2052,]   40   45   44 #>  [2053,]   41   46   45 #>  [2054,]   40   45   44 #>  [2055,]   40   45   44 #>  [2056,]   40   45   44 #>  [2057,]   40   45   44 #>  [2058,]   40   45   44 #>  [2059,]   40   45   44 #>  [2060,]   40   45   44 #>  [2061,]   40   45   44 #>  [2062,]   40   45   44 #>  [2063,]   40   45   44 #>  [2064,]   40   45   44 #>  [2065,]   41   46   45 #>  [2066,]   40   45   44 #>  [2067,]   40   45   44 #>  [2068,]   40   45   44 #>  [2069,]   40   45   44 #>  [2070,]   40   45   44 #>  [2071,]   40   45   44 #>  [2072,]   40   45   44 #>  [2073,]   40   45   44 #>  [2074,]   40   45   44 #>  [2075,]   40   45   44 #>  [2076,]   40   45   44 #>  [2077,]   40   45   44 #>  [2078,]   40   45   44 #>  [2079,]   41   46   45 #>  [2080,]   40   45   44 #>  [2081,]   40   45   44 #>  [2082,]   41   46   45 #>  [2083,]   40   45   44 #>  [2084,]   41   46   45 #>  [2085,]   40   45   44 #>  [2086,]   40   45   44 #>  [2087,]   40   45   44 #>  [2088,]   40   45   44 #>  [2089,]   40   45   44 #>  [2090,]   40   45   44 #>  [2091,]   41   46   45 #>  [2092,]   40   45   44 #>  [2093,]   41   46   45 #>  [2094,]   41   46   45 #>  [2095,]   40   45   44 #>  [2096,]   40   45   44 #>  [2097,]   40   45   44 #>  [2098,]   40   45   44 #>  [2099,]   40   45   44 #>  [2100,]   40   45   44 #>  [2101,]   42   47   46 #>  [2102,]   42   47   46 #>  [2103,]   42   47   46 #>  [2104,]   43   47   46 #>  [2105,]   42   47   46 #>  [2106,]   42   47   46 #>  [2107,]   42   47   46 #>  [2108,]   42   48   47 #>  [2109,]   42   48   47 #>  [2110,]   42   47   46 #>  [2111,]   43   47   46 #>  [2112,]   43   48   47 #>  [2113,]   42   47   46 #>  [2114,]   43   47   46 #>  [2115,]   43   48   47 #>  [2116,]   42   47   46 #>  [2117,]   42   47   46 #>  [2118,]   42   47   46 #>  [2119,]   43   47   46 #>  [2120,]   42   47   46 #>  [2121,]   43   47   46 #>  [2122,]   42   47   46 #>  [2123,]   42   47   46 #>  [2124,]   42   47   46 #>  [2125,]   42   47   46 #>  [2126,]   42   48   47 #>  [2127,]   43   47   46 #>  [2128,]   42   47   46 #>  [2129,]   42   47   46 #>  [2130,]   42   47   46 #>  [2131,]   42   47   46 #>  [2132,]   42   47   46 #>  [2133,]   42   47   46 #>  [2134,]   42   47   46 #>  [2135,]   42   47   46 #>  [2136,]   42   47   46 #>  [2137,]   42   47   46 #>  [2138,]   43   47   46 #>  [2139,]   42   47   46 #>  [2140,]   42   47   46 #>  [2141,]   43   47   46 #>  [2142,]   43   47   46 #>  [2143,]   42   48   47 #>  [2144,]   42   47   46 #>  [2145,]   42   47   46 #>  [2146,]   42   48   47 #>  [2147,]   42   47   46 #>  [2148,]   43   47   46 #>  [2149,]   42   47   46 #>  [2150,]   42   47   46 #>  [2151,]   42   47   46 #>  [2152,]   42   47   46 #>  [2153,]   42   47   46 #>  [2154,]   42   47   46 #>  [2155,]   42   47   46 #>  [2156,]   42   48   47 #>  [2157,]   42   47   46 #>  [2158,]   42   47   46 #>  [2159,]   42   47   46 #>  [2160,]   42   47   46 #>  [2161,]   43   48   47 #>  [2162,]   42   47   46 #>  [2163,]   42   47   46 #>  [2164,]   42   48   47 #>  [2165,]   42   47   46 #>  [2166,]   42   47   46 #>  [2167,]   42   47   46 #>  [2168,]   42   47   46 #>  [2169,]   43   47   46 #>  [2170,]   42   47   46 #>  [2171,]   42   47   46 #>  [2172,]   42   47   46 #>  [2173,]   42   47   46 #>  [2174,]   43   47   46 #>  [2175,]   43   47   46 #>  [2176,]   42   48   47 #>  [2177,]   42   47   46 #>  [2178,]   42   47   46 #>  [2179,]   42   47   46 #>  [2180,]   42   47   46 #>  [2181,]   42   47   46 #>  [2182,]   43   47   46 #>  [2183,]   42   47   46 #>  [2184,]   42   47   46 #>  [2185,]   42   47   46 #>  [2186,]   42   47   46 #>  [2187,]   42   47   46 #>  [2188,]   42   47   46 #>  [2189,]   42   47   46 #>  [2190,]   42   47   46 #>  [2191,]   42   47   46 #>  [2192,]   43   47   46 #>  [2193,]   43   47   46 #>  [2194,]   42   48   47 #>  [2195,]   42   47   46 #>  [2196,]   43   47   46 #>  [2197,]   43   47   46 #>  [2198,]   42   47   46 #>  [2199,]   42   47   46 #>  [2200,]   42   47   46 #>  [2201,]   44   49   48 #>  [2202,]   44   49   48 #>  [2203,]   44   49   48 #>  [2204,]   44   50   49 #>  [2205,]   44   49   48 #>  [2206,]   44   49   48 #>  [2207,]   44   49   48 #>  [2208,]   44   49   48 #>  [2209,]   44   49   48 #>  [2210,]   44   49   48 #>  [2211,]   44   49   48 #>  [2212,]   44   50   49 #>  [2213,]   44   49   48 #>  [2214,]   44   50   49 #>  [2215,]   44   50   49 #>  [2216,]   44   49   48 #>  [2217,]   44   49   48 #>  [2218,]   44   49   48 #>  [2219,]   44   50   49 #>  [2220,]   44   49   48 #>  [2221,]   44   49   48 #>  [2222,]   44   49   48 #>  [2223,]   44   49   48 #>  [2224,]   44   49   48 #>  [2225,]   44   49   48 #>  [2226,]   44   49   48 #>  [2227,]   44   50   49 #>  [2228,]   44   49   48 #>  [2229,]   44   49   48 #>  [2230,]   44   49   48 #>  [2231,]   44   49   48 #>  [2232,]   44   49   48 #>  [2233,]   44   49   48 #>  [2234,]   44   49   48 #>  [2235,]   44   49   48 #>  [2236,]   44   49   48 #>  [2237,]   44   49   48 #>  [2238,]   44   50   49 #>  [2239,]   44   49   48 #>  [2240,]   44   49   48 #>  [2241,]   44   50   49 #>  [2242,]   44   50   49 #>  [2243,]   44   49   48 #>  [2244,]   44   49   48 #>  [2245,]   44   49   48 #>  [2246,]   44   49   48 #>  [2247,]   44   49   48 #>  [2248,]   44   50   49 #>  [2249,]   44   49   48 #>  [2250,]   44   49   48 #>  [2251,]   44   49   48 #>  [2252,]   44   49   48 #>  [2253,]   44   49   48 #>  [2254,]   44   49   48 #>  [2255,]   44   49   48 #>  [2256,]   44   49   48 #>  [2257,]   44   49   48 #>  [2258,]   44   49   48 #>  [2259,]   44   49   48 #>  [2260,]   44   49   48 #>  [2261,]   44   50   49 #>  [2262,]   44   49   48 #>  [2263,]   44   49   48 #>  [2264,]   44   49   48 #>  [2265,]   44   49   48 #>  [2266,]   44   49   48 #>  [2267,]   44   49   48 #>  [2268,]   44   49   48 #>  [2269,]   44   50   49 #>  [2270,]   44   49   48 #>  [2271,]   44   49   48 #>  [2272,]   44   49   48 #>  [2273,]   44   49   48 #>  [2274,]   44   50   49 #>  [2275,]   44   50   49 #>  [2276,]   44   49   48 #>  [2277,]   44   49   48 #>  [2278,]   44   49   48 #>  [2279,]   44   49   48 #>  [2280,]   44   49   48 #>  [2281,]   44   49   48 #>  [2282,]   44   50   49 #>  [2283,]   44   49   48 #>  [2284,]   44   49   48 #>  [2285,]   44   49   48 #>  [2286,]   44   49   48 #>  [2287,]   44   49   48 #>  [2288,]   44   49   48 #>  [2289,]   44   49   48 #>  [2290,]   44   49   48 #>  [2291,]   44   49   48 #>  [2292,]   44   50   49 #>  [2293,]   44   50   49 #>  [2294,]   44   49   48 #>  [2295,]   44   49   48 #>  [2296,]   44   50   49 #>  [2297,]   44   50   49 #>  [2298,]   44   49   48 #>  [2299,]   44   49   48 #>  [2300,]   44   49   48 #>  [2301,]   45   51   51 #>  [2302,]   45   51   51 #>  [2303,]   45   51   51 #>  [2304,]   47   53   50 #>  [2305,]   45   51   51 #>  [2306,]   47   53   50 #>  [2307,]   45   51   51 #>  [2308,]   45   51   51 #>  [2309,]   47   53   50 #>  [2310,]   47   53   50 #>  [2311,]   47   53   50 #>  [2312,]   46   52   50 #>  [2313,]   45   51   51 #>  [2314,]   47   53   50 #>  [2315,]   46   52   50 #>  [2316,]   45   51   51 #>  [2317,]   45   51   51 #>  [2318,]   47   53   50 #>  [2319,]   47   53   50 #>  [2320,]   45   51   51 #>  [2321,]   47   53   50 #>  [2322,]   45   51   51 #>  [2323,]   45   51   51 #>  [2324,]   45   51   51 #>  [2325,]   45   51   52 #>  [2326,]   47   53   50 #>  [2327,]   47   53   50 #>  [2328,]   45   51   51 #>  [2329,]   45   51   51 #>  [2330,]   47   53   50 #>  [2331,]   46   52   50 #>  [2332,]   47   53   50 #>  [2333,]   47   53   50 #>  [2334,]   45   51   51 #>  [2335,]   45   51   51 #>  [2336,]   47   53   50 #>  [2337,]   45   51   51 #>  [2338,]   47   53   50 #>  [2339,]   45   51   52 #>  [2340,]   45   51   51 #>  [2341,]   47   53   50 #>  [2342,]   46   52   50 #>  [2343,]   45   51   52 #>  [2344,]   45   51   51 #>  [2345,]   45   51   52 #>  [2346,]   45   51   51 #>  [2347,]   45   51   51 #>  [2348,]   46   52   50 #>  [2349,]   45   51   51 #>  [2350,]   45   51   51 #>  [2351,]   45   51   51 #>  [2352,]   47   53   50 #>  [2353,]   45   51   51 #>  [2354,]   45   51   51 #>  [2355,]   45   51   51 #>  [2356,]   45   51   51 #>  [2357,]   45   51   51 #>  [2358,]   47   53   50 #>  [2359,]   45   51   51 #>  [2360,]   47   53   50 #>  [2361,]   47   53   50 #>  [2362,]   47   53   50 #>  [2363,]   45   51   51 #>  [2364,]   47   53   50 #>  [2365,]   45   51   51 #>  [2366,]   45   51   51 #>  [2367,]   47   53   50 #>  [2368,]   47   53   50 #>  [2369,]   47   53   50 #>  [2370,]   45   51   51 #>  [2371,]   45   51   51 #>  [2372,]   45   51   51 #>  [2373,]   47   53   50 #>  [2374,]   47   53   50 #>  [2375,]   46   52   50 #>  [2376,]   45   51   51 #>  [2377,]   45   51   52 #>  [2378,]   45   51   51 #>  [2379,]   45   51   51 #>  [2380,]   45   51   51 #>  [2381,]   45   51   51 #>  [2382,]   47   53   50 #>  [2383,]   45   51   51 #>  [2384,]   45   51   51 #>  [2385,]   47   53   50 #>  [2386,]   45   51   51 #>  [2387,]   45   51   51 #>  [2388,]   45   51   51 #>  [2389,]   45   51   51 #>  [2390,]   45   51   51 #>  [2391,]   45   51   51 #>  [2392,]   47   53   50 #>  [2393,]   47   53   50 #>  [2394,]   45   51   51 #>  [2395,]   45   51   51 #>  [2396,]   47   53   50 #>  [2397,]   47   53   50 #>  [2398,]   45   51   51 #>  [2399,]   47   53   50 #>  [2400,]   45   51   51 #>  [2401,]   49   55   53 #>  [2402,]   49   55   53 #>  [2403,]   48   54   54 #>  [2404,]   49   55   53 #>  [2405,]   49   55   53 #>  [2406,]   48   54   54 #>  [2407,]   48   54   54 #>  [2408,]   49   55   53 #>  [2409,]   49   55   53 #>  [2410,]   49   55   53 #>  [2411,]   49   55   53 #>  [2412,]   49   55   53 #>  [2413,]   49   55   53 #>  [2414,]   49   55   53 #>  [2415,]   49   55   53 #>  [2416,]   49   55   53 #>  [2417,]   49   55   53 #>  [2418,]   49   55   53 #>  [2419,]   49   55   53 #>  [2420,]   48   54   54 #>  [2421,]   48   54   54 #>  [2422,]   49   55   53 #>  [2423,]   48   54   54 #>  [2424,]   49   55   53 #>  [2425,]   48   54   54 #>  [2426,]   49   55   53 #>  [2427,]   49   55   53 #>  [2428,]   49   55   53 #>  [2429,]   49   55   53 #>  [2430,]   49   55   53 #>  [2431,]   49   55   53 #>  [2432,]   49   55   53 #>  [2433,]   49   55   53 #>  [2434,]   48   54   54 #>  [2435,]   48   54   54 #>  [2436,]   49   55   53 #>  [2437,]   48   54   54 #>  [2438,]   49   55   53 #>  [2439,]   49   55   53 #>  [2440,]   49   55   53 #>  [2441,]   49   55   53 #>  [2442,]   48   54   54 #>  [2443,]   49   55   53 #>  [2444,]   48   54   54 #>  [2445,]   49   55   53 #>  [2446,]   49   55   53 #>  [2447,]   49   55   53 #>  [2448,]   49   55   53 #>  [2449,]   49   55   53 #>  [2450,]   48   54   54 #>  [2451,]   49   55   53 #>  [2452,]   49   55   53 #>  [2453,]   48   54   54 #>  [2454,]   48   54   54 #>  [2455,]   48   54   54 #>  [2456,]   48   54   54 #>  [2457,]   48   54   54 #>  [2458,]   49   55   53 #>  [2459,]   49   55   53 #>  [2460,]   49   55   53 #>  [2461,]   49   55   53 #>  [2462,]   49   55   53 #>  [2463,]   49   55   53 #>  [2464,]   48   54   54 #>  [2465,]   48   54   54 #>  [2466,]   49   55   53 #>  [2467,]   49   55   53 #>  [2468,]   49   55   53 #>  [2469,]   49   55   53 #>  [2470,]   49   55   53 #>  [2471,]   49   55   53 #>  [2472,]   49   55   53 #>  [2473,]   48   54   54 #>  [2474,]   48   54   54 #>  [2475,]   49   55   53 #>  [2476,]   49   55   53 #>  [2477,]   49   55   53 #>  [2478,]   49   55   53 #>  [2479,]   49   55   53 #>  [2480,]   48   54   54 #>  [2481,]   48   54   54 #>  [2482,]   48   54   54 #>  [2483,]   49   55   53 #>  [2484,]   48   54   54 #>  [2485,]   48   54   54 #>  [2486,]   48   54   54 #>  [2487,]   49   55   53 #>  [2488,]   48   54   54 #>  [2489,]   48   54   54 #>  [2490,]   49   55   53 #>  [2491,]   49   55   53 #>  [2492,]   49   55   53 #>  [2493,]   49   55   53 #>  [2494,]   48   54   54 #>  [2495,]   49   55   53 #>  [2496,]   49   55   53 #>  [2497,]   48   54   54 #>  [2498,]   48   54   54 #>  [2499,]   48   54   54 #>  [2500,]   49   55   53 #>  [2501,]   50   56   55 #>  [2502,]   50   56   55 #>  [2503,]   50   56   55 #>  [2504,]   51   57   56 #>  [2505,]   50   56   55 #>  [2506,]   50   56   55 #>  [2507,]   50   56   55 #>  [2508,]   50   56   55 #>  [2509,]   50   56   55 #>  [2510,]   50   56   55 #>  [2511,]   50   56   55 #>  [2512,]   50   56   55 #>  [2513,]   50   56   55 #>  [2514,]   51   57   56 #>  [2515,]   50   56   55 #>  [2516,]   50   56   55 #>  [2517,]   50   56   55 #>  [2518,]   50   56   55 #>  [2519,]   50   56   55 #>  [2520,]   50   56   55 #>  [2521,]   50   56   55 #>  [2522,]   50   56   55 #>  [2523,]   50   56   55 #>  [2524,]   50   56   55 #>  [2525,]   50   56   55 #>  [2526,]   50   56   55 #>  [2527,]   51   57   56 #>  [2528,]   50   56   55 #>  [2529,]   50   56   55 #>  [2530,]   50   56   55 #>  [2531,]   50   56   55 #>  [2532,]   50   56   55 #>  [2533,]   50   56   55 #>  [2534,]   50   56   55 #>  [2535,]   50   56   55 #>  [2536,]   50   56   55 #>  [2537,]   50   56   55 #>  [2538,]   50   56   55 #>  [2539,]   50   56   55 #>  [2540,]   50   56   55 #>  [2541,]   50   56   55 #>  [2542,]   50   56   55 #>  [2543,]   50   56   55 #>  [2544,]   50   56   55 #>  [2545,]   50   56   55 #>  [2546,]   50   56   55 #>  [2547,]   50   56   55 #>  [2548,]   50   56   55 #>  [2549,]   50   56   55 #>  [2550,]   50   56   55 #>  [2551,]   50   56   55 #>  [2552,]   50   56   55 #>  [2553,]   50   56   55 #>  [2554,]   50   56   55 #>  [2555,]   50   56   55 #>  [2556,]   50   56   55 #>  [2557,]   50   56   55 #>  [2558,]   50   56   55 #>  [2559,]   50   56   55 #>  [2560,]   50   56   55 #>  [2561,]   51   57   56 #>  [2562,]   50   56   55 #>  [2563,]   50   56   55 #>  [2564,]   50   56   55 #>  [2565,]   50   56   55 #>  [2566,]   50   56   55 #>  [2567,]   50   56   55 #>  [2568,]   50   56   55 #>  [2569,]   51   57   56 #>  [2570,]   50   56   55 #>  [2571,]   50   56   55 #>  [2572,]   50   56   55 #>  [2573,]   50   56   55 #>  [2574,]   50   56   55 #>  [2575,]   50   56   55 #>  [2576,]   50   56   55 #>  [2577,]   50   56   55 #>  [2578,]   50   56   55 #>  [2579,]   50   56   55 #>  [2580,]   50   56   55 #>  [2581,]   50   56   55 #>  [2582,]   51   57   56 #>  [2583,]   50   56   55 #>  [2584,]   50   56   55 #>  [2585,]   50   56   55 #>  [2586,]   50   56   55 #>  [2587,]   50   56   55 #>  [2588,]   50   56   55 #>  [2589,]   50   56   55 #>  [2590,]   50   56   55 #>  [2591,]   50   56   55 #>  [2592,]   51   57   56 #>  [2593,]   51   57   56 #>  [2594,]   50   56   55 #>  [2595,]   50   56   55 #>  [2596,]   51   57   56 #>  [2597,]   51   57   56 #>  [2598,]   50   56   55 #>  [2599,]   50   56   55 #>  [2600,]   50   56   55 #>  [2601,]   53   59   58 #>  [2602,]   53   59   58 #>  [2603,]   52   58   57 #>  [2604,]   53   59   58 #>  [2605,]   52   58   57 #>  [2606,]   53   59   58 #>  [2607,]   52   58   57 #>  [2608,]   52   58   57 #>  [2609,]   53   59   58 #>  [2610,]   53   59   58 #>  [2611,]   53   59   58 #>  [2612,]   53   59   58 #>  [2613,]   52   58   57 #>  [2614,]   53   59   58 #>  [2615,]   53   59   58 #>  [2616,]   52   58   57 #>  [2617,]   52   58   57 #>  [2618,]   53   59   58 #>  [2619,]   53   59   58 #>  [2620,]   52   58   57 #>  [2621,]   53   59   58 #>  [2622,]   52   58   57 #>  [2623,]   53   59   58 #>  [2624,]   52   58   57 #>  [2625,]   52   58   57 #>  [2626,]   53   59   58 #>  [2627,]   53   59   58 #>  [2628,]   53   59   58 #>  [2629,]   52   58   57 #>  [2630,]   53   59   58 #>  [2631,]   53   59   58 #>  [2632,]   53   59   58 #>  [2633,]   53   59   58 #>  [2634,]   53   59   58 #>  [2635,]   53   59   58 #>  [2636,]   53   59   58 #>  [2637,]   53   59   58 #>  [2638,]   53   59   58 #>  [2639,]   52   58   57 #>  [2640,]   52   58   57 #>  [2641,]   53   59   58 #>  [2642,]   53   59   58 #>  [2643,]   52   58   57 #>  [2644,]   52   58   57 #>  [2645,]   52   58   57 #>  [2646,]   52   58   57 #>  [2647,]   52   58   57 #>  [2648,]   53   59   58 #>  [2649,]   52   58   57 #>  [2650,]   52   58   57 #>  [2651,]   52   58   57 #>  [2652,]   53   59   58 #>  [2653,]   52   58   57 #>  [2654,]   52   58   57 #>  [2655,]   52   58   57 #>  [2656,]   52   58   57 #>  [2657,]   53   59   58 #>  [2658,]   53   59   58 #>  [2659,]   52   58   57 #>  [2660,]   53   59   58 #>  [2661,]   53   59   58 #>  [2662,]   53   59   58 #>  [2663,]   52   58   57 #>  [2664,]   53   59   58 #>  [2665,]   52   58   57 #>  [2666,]   52   58   57 #>  [2667,]   53   59   58 #>  [2668,]   53   59   58 #>  [2669,]   53   59   58 #>  [2670,]   52   58   57 #>  [2671,]   52   58   57 #>  [2672,]   52   58   57 #>  [2673,]   53   59   58 #>  [2674,]   53   59   58 #>  [2675,]   53   59   58 #>  [2676,]   52   58   57 #>  [2677,]   52   58   57 #>  [2678,]   52   58   57 #>  [2679,]   52   58   57 #>  [2680,]   53   59   58 #>  [2681,]   52   58   57 #>  [2682,]   53   59   58 #>  [2683,]   52   58   57 #>  [2684,]   52   58   57 #>  [2685,]   53   59   58 #>  [2686,]   52   58   57 #>  [2687,]   53   59   58 #>  [2688,]   53   59   58 #>  [2689,]   52   58   57 #>  [2690,]   52   58   57 #>  [2691,]   53   59   58 #>  [2692,]   53   59   58 #>  [2693,]   53   59   58 #>  [2694,]   52   58   57 #>  [2695,]   53   59   58 #>  [2696,]   53   59   58 #>  [2697,]   53   59   58 #>  [2698,]   52   58   57 #>  [2699,]   53   59   58 #>  [2700,]   52   58   57 #>  [2701,]   55   61   60 #>  [2702,]   54   60   59 #>  [2703,]   54   60   59 #>  [2704,]   54   60   59 #>  [2705,]   55   61   60 #>  [2706,]   54   60   59 #>  [2707,]   54   60   59 #>  [2708,]   54   60   59 #>  [2709,]   54   60   59 #>  [2710,]   55   61   60 #>  [2711,]   55   61   60 #>  [2712,]   55   61   60 #>  [2713,]   54   60   59 #>  [2714,]   55   61   60 #>  [2715,]   55   61   60 #>  [2716,]   54   60   59 #>  [2717,]   55   61   60 #>  [2718,]   55   61   60 #>  [2719,]   54   60   59 #>  [2720,]   54   60   59 #>  [2721,]   54   60   59 #>  [2722,]   55   61   60 #>  [2723,]   54   60   59 #>  [2724,]   54   60   59 #>  [2725,]   54   60   59 #>  [2726,]   55   61   60 #>  [2727,]   55   61   60 #>  [2728,]   54   60   59 #>  [2729,]   54   60   59 #>  [2730,]   54   60   59 #>  [2731,]   55   61   60 #>  [2732,]   55   61   60 #>  [2733,]   54   60   59 #>  [2734,]   54   60   59 #>  [2735,]   54   60   59 #>  [2736,]   54   60   59 #>  [2737,]   54   60   59 #>  [2738,]   55   61   60 #>  [2739,]   54   60   59 #>  [2740,]   54   60   59 #>  [2741,]   54   60   59 #>  [2742,]   54   60   59 #>  [2743,]   55   61   60 #>  [2744,]   54   60   59 #>  [2745,]   54   60   59 #>  [2746,]   54   60   59 #>  [2747,]   55   61   60 #>  [2748,]   54   60   59 #>  [2749,]   54   60   59 #>  [2750,]   54   60   59 #>  [2751,]   54   60   59 #>  [2752,]   55   61   60 #>  [2753,]   54   60   59 #>  [2754,]   54   60   59 #>  [2755,]   54   60   59 #>  [2756,]   54   60   59 #>  [2757,]   54   60   59 #>  [2758,]   55   61   60 #>  [2759,]   55   61   60 #>  [2760,]   54   60   59 #>  [2761,]   55   61   60 #>  [2762,]   54   60   59 #>  [2763,]   54   60   59 #>  [2764,]   54   60   59 #>  [2765,]   54   60   59 #>  [2766,]   55   61   60 #>  [2767,]   54   60   59 #>  [2768,]   54   60   59 #>  [2769,]   54   60   59 #>  [2770,]   55   61   60 #>  [2771,]   55   61   60 #>  [2772,]   54   60   59 #>  [2773,]   54   60   59 #>  [2774,]   54   60   59 #>  [2775,]   55   61   60 #>  [2776,]   54   60   59 #>  [2777,]   55   61   60 #>  [2778,]   54   60   59 #>  [2779,]   55   61   60 #>  [2780,]   54   60   59 #>  [2781,]   54   60   59 #>  [2782,]   54   60   59 #>  [2783,]   54   60   59 #>  [2784,]   54   60   59 #>  [2785,]   54   60   59 #>  [2786,]   54   60   59 #>  [2787,]   55   61   60 #>  [2788,]   54   60   59 #>  [2789,]   54   60   59 #>  [2790,]   55   61   60 #>  [2791,]   55   61   60 #>  [2792,]   55   61   60 #>  [2793,]   54   60   59 #>  [2794,]   54   60   59 #>  [2795,]   55   61   60 #>  [2796,]   54   60   59 #>  [2797,]   54   60   59 #>  [2798,]   54   60   59 #>  [2799,]   54   60   59 #>  [2800,]   55   61   60 #>  [2801,]   57   63   62 #>  [2802,]   56   62   61 #>  [2803,]   56   62   61 #>  [2804,]   56   62   61 #>  [2805,]   56   62   61 #>  [2806,]   57   63   62 #>  [2807,]   56   62   61 #>  [2808,]   56   62   61 #>  [2809,]   56   62   61 #>  [2810,]   56   62   61 #>  [2811,]   56   62   61 #>  [2812,]   56   62   61 #>  [2813,]   57   63   62 #>  [2814,]   57   63   62 #>  [2815,]   57   63   62 #>  [2816,]   57   63   62 #>  [2817,]   57   63   62 #>  [2818,]   56   62   61 #>  [2819,]   56   62   61 #>  [2820,]   56   62   61 #>  [2821,]   57   63   62 #>  [2822,]   56   62   61 #>  [2823,]   56   62   61 #>  [2824,]   56   62   61 #>  [2825,]   56   62   61 #>  [2826,]   56   62   61 #>  [2827,]   56   62   61 #>  [2828,]   56   62   61 #>  [2829,]   57   63   62 #>  [2830,]   56   62   61 #>  [2831,]   56   62   61 #>  [2832,]   56   62   61 #>  [2833,]   57   63   62 #>  [2834,]   56   62   61 #>  [2835,]   56   62   61 #>  [2836,]   56   62   61 #>  [2837,]   56   62   61 #>  [2838,]   56   62   61 #>  [2839,]   56   62   61 #>  [2840,]   56   62   61 #>  [2841,]   57   63   62 #>  [2842,]   56   62   61 #>  [2843,]   56   62   61 #>  [2844,]   57   63   62 #>  [2845,]   56   62   61 #>  [2846,]   56   62   61 #>  [2847,]   56   62   61 #>  [2848,]   56   62   61 #>  [2849,]   56   62   61 #>  [2850,]   57   63   62 #>  [2851,]   56   62   61 #>  [2852,]   56   62   61 #>  [2853,]   56   62   61 #>  [2854,]   56   62   61 #>  [2855,]   56   62   61 #>  [2856,]   56   62   61 #>  [2857,]   56   62   61 #>  [2858,]   56   62   61 #>  [2859,]   57   63   62 #>  [2860,]   56   62   61 #>  [2861,]   57   63   62 #>  [2862,]   56   62   61 #>  [2863,]   56   62   61 #>  [2864,]   56   62   61 #>  [2865,]   56   62   61 #>  [2866,]   56   62   61 #>  [2867,]   56   62   61 #>  [2868,]   57   63   62 #>  [2869,]   56   62   61 #>  [2870,]   57   63   62 #>  [2871,]   56   62   61 #>  [2872,]   56   62   61 #>  [2873,]   57   63   62 #>  [2874,]   56   62   61 #>  [2875,]   56   62   61 #>  [2876,]   57   63   62 #>  [2877,]   56   62   61 #>  [2878,]   56   62   61 #>  [2879,]   56   62   61 #>  [2880,]   56   62   61 #>  [2881,]   57   63   62 #>  [2882,]   56   62   61 #>  [2883,]   57   63   62 #>  [2884,]   56   62   61 #>  [2885,]   56   62   61 #>  [2886,]   57   63   62 #>  [2887,]   56   62   61 #>  [2888,]   56   62   61 #>  [2889,]   56   62   61 #>  [2890,]   56   62   61 #>  [2891,]   56   62   61 #>  [2892,]   56   62   61 #>  [2893,]   56   62   61 #>  [2894,]   56   62   61 #>  [2895,]   56   62   61 #>  [2896,]   57   63   62 #>  [2897,]   56   62   61 #>  [2898,]   56   62   61 #>  [2899,]   57   63   62 #>  [2900,]   56   62   61 #>  [2901,]   59   64   63 #>  [2902,]   59   64   63 #>  [2903,]   58   65   64 #>  [2904,]   59   64   63 #>  [2905,]   59   64   63 #>  [2906,]   59   64   63 #>  [2907,]   58   65   64 #>  [2908,]   59   64   63 #>  [2909,]   59   64   63 #>  [2910,]   59   64   63 #>  [2911,]   59   64   63 #>  [2912,]   59   64   63 #>  [2913,]   59   64   63 #>  [2914,]   59   64   63 #>  [2915,]   59   64   63 #>  [2916,]   59   64   63 #>  [2917,]   59   64   63 #>  [2918,]   59   64   63 #>  [2919,]   59   64   63 #>  [2920,]   59   64   63 #>  [2921,]   58   65   64 #>  [2922,]   59   64   63 #>  [2923,]   58   65   64 #>  [2924,]   59   64   63 #>  [2925,]   59   64   63 #>  [2926,]   59   64   63 #>  [2927,]   59   64   63 #>  [2928,]   59   64   63 #>  [2929,]   59   64   63 #>  [2930,]   58   66   64 #>  [2931,]   58   65   64 #>  [2932,]   59   64   63 #>  [2933,]   59   64   63 #>  [2934,]   59   64   63 #>  [2935,]   59   64   63 #>  [2936,]   59   64   63 #>  [2937,]   59   64   63 #>  [2938,]   59   64   63 #>  [2939,]   58   65   64 #>  [2940,]   59   64   63 #>  [2941,]   59   64   63 #>  [2942,]   59   64   63 #>  [2943,]   59   64   63 #>  [2944,]   59   64   63 #>  [2945,]   59   64   63 #>  [2946,]   59   64   63 #>  [2947,]   58   65   64 #>  [2948,]   59   64   63 #>  [2949,]   58   65   64 #>  [2950,]   59   64   63 #>  [2951,]   59   64   63 #>  [2952,]   59   64   63 #>  [2953,]   59   64   63 #>  [2954,]   58   65   64 #>  [2955,]   59   64   63 #>  [2956,]   59   64   63 #>  [2957,]   59   64   63 #>  [2958,]   59   64   63 #>  [2959,]   59   64   63 #>  [2960,]   59   64   63 #>  [2961,]   59   64   63 #>  [2962,]   58   65   64 #>  [2963,]   59   64   63 #>  [2964,]   59   64   63 #>  [2965,]   59   64   63 #>  [2966,]   59   64   63 #>  [2967,]   59   64   63 #>  [2968,]   59   64   63 #>  [2969,]   59   64   63 #>  [2970,]   58   65   64 #>  [2971,]   59   64   63 #>  [2972,]   59   64   63 #>  [2973,]   59   64   63 #>  [2974,]   59   64   63 #>  [2975,]   59   64   63 #>  [2976,]   59   64   63 #>  [2977,]   58   66   64 #>  [2978,]   59   64   63 #>  [2979,]   58   65   64 #>  [2980,]   58   66   64 #>  [2981,]   59   64   63 #>  [2982,]   59   64   63 #>  [2983,]   58   66   64 #>  [2984,]   59   64   63 #>  [2985,]   59   64   63 #>  [2986,]   59   64   63 #>  [2987,]   59   64   63 #>  [2988,]   59   64   63 #>  [2989,]   59   64   63 #>  [2990,]   59   64   63 #>  [2991,]   59   64   63 #>  [2992,]   59   64   63 #>  [2993,]   59   64   63 #>  [2994,]   59   64   63 #>  [2995,]   58   66   64 #>  [2996,]   59   64   63 #>  [2997,]   59   64   63 #>  [2998,]   58   65   64 #>  [2999,]   59   64   63 #>  [3000,]   59   64   63 #>  [3001,]   61   68   66 #>  [3002,]   60   67   65 #>  [3003,]   60   67   65 #>  [3004,]   61   68   66 #>  [3005,]   61   68   66 #>  [3006,]   61   68   66 #>  [3007,]   60   67   65 #>  [3008,]   61   68   66 #>  [3009,]   61   68   66 #>  [3010,]   61   68   66 #>  [3011,]   61   68   66 #>  [3012,]   61   68   66 #>  [3013,]   60   67   65 #>  [3014,]   61   68   66 #>  [3015,]   61   68   66 #>  [3016,]   60   67   65 #>  [3017,]   61   68   66 #>  [3018,]   60   67   65 #>  [3019,]   60   67   65 #>  [3020,]   61   68   66 #>  [3021,]   60   67   65 #>  [3022,]   60   67   65 #>  [3023,]   60   67   65 #>  [3024,]   60   67   65 #>  [3025,]   61   68   66 #>  [3026,]   61   68   66 #>  [3027,]   61   68   66 #>  [3028,]   61   68   66 #>  [3029,]   61   68   66 #>  [3030,]   60   67   65 #>  [3031,]   60   67   65 #>  [3032,]   60   67   65 #>  [3033,]   61   68   66 #>  [3034,]   60   67   65 #>  [3035,]   60   67   65 #>  [3036,]   60   67   65 #>  [3037,]   60   67   65 #>  [3038,]   61   68   66 #>  [3039,]   60   67   65 #>  [3040,]   60   67   65 #>  [3041,]   61   68   66 #>  [3042,]   61   68   66 #>  [3043,]   61   68   66 #>  [3044,]   60   67   65 #>  [3045,]   61   68   66 #>  [3046,]   61   68   66 #>  [3047,]   60   67   65 #>  [3048,]   61   68   66 #>  [3049,]   60   67   65 #>  [3050,]   61   68   66 #>  [3051,]   61   68   66 #>  [3052,]   61   68   66 #>  [3053,]   61   68   66 #>  [3054,]   60   67   65 #>  [3055,]   61   68   66 #>  [3056,]   61   68   66 #>  [3057,]   61   68   66 #>  [3058,]   61   68   66 #>  [3059,]   60   67   65 #>  [3060,]   61   68   66 #>  [3061,]   61   68   66 #>  [3062,]   60   67   65 #>  [3063,]   61   68   66 #>  [3064,]   61   68   66 #>  [3065,]   61   68   66 #>  [3066,]   61   68   66 #>  [3067,]   61   68   66 #>  [3068,]   61   68   66 #>  [3069,]   61   68   66 #>  [3070,]   60   67   65 #>  [3071,]   61   68   66 #>  [3072,]   61   68   66 #>  [3073,]   61   68   66 #>  [3074,]   61   68   66 #>  [3075,]   61   68   66 #>  [3076,]   61   68   66 #>  [3077,]   60   67   65 #>  [3078,]   61   68   66 #>  [3079,]   60   67   65 #>  [3080,]   60   67   65 #>  [3081,]   61   68   66 #>  [3082,]   61   68   66 #>  [3083,]   60   67   65 #>  [3084,]   61   68   66 #>  [3085,]   61   68   66 #>  [3086,]   60   67   65 #>  [3087,]   61   68   66 #>  [3088,]   61   68   66 #>  [3089,]   61   68   66 #>  [3090,]   61   68   66 #>  [3091,]   61   68   66 #>  [3092,]   61   68   66 #>  [3093,]   60   67   65 #>  [3094,]   61   68   66 #>  [3095,]   60   67   65 #>  [3096,]   61   68   66 #>  [3097,]   61   68   66 #>  [3098,]   60   67   65 #>  [3099,]   61   68   66 #>  [3100,]   60   67   65 #>  [3101,]   63   71   68 #>  [3102,]   63   70   68 #>  [3103,]   63   71   68 #>  [3104,]   62   69   67 #>  [3105,]   63   70   68 #>  [3106,]   63   70   68 #>  [3107,]   63   71   68 #>  [3108,]   62   69   67 #>  [3109,]   62   69   67 #>  [3110,]   63   71   68 #>  [3111,]   62   69   67 #>  [3112,]   63   70   68 #>  [3113,]   62   69   67 #>  [3114,]   63   71   68 #>  [3115,]   63   70   68 #>  [3116,]   63   71   68 #>  [3117,]   62   69   67 #>  [3118,]   63   70   68 #>  [3119,]   63   70   68 #>  [3120,]   63   71   68 #>  [3121,]   63   70   68 #>  [3122,]   62   69   67 #>  [3123,]   63   70   68 #>  [3124,]   63   71   68 #>  [3125,]   63   71   68 #>  [3126,]   63   70   68 #>  [3127,]   62   69   67 #>  [3128,]   63   71   68 #>  [3129,]   63   70   68 #>  [3130,]   63   70   68 #>  [3131,]   63   70   68 #>  [3132,]   63   70   68 #>  [3133,]   63   70   68 #>  [3134,]   63   70   68 #>  [3135,]   62   69   67 #>  [3136,]   63   71   68 #>  [3137,]   63   70   68 #>  [3138,]   63   70   68 #>  [3139,]   63   71   68 #>  [3140,]   63   70   68 #>  [3141,]   63   71   68 #>  [3142,]   63   70   68 #>  [3143,]   62   69   67 #>  [3144,]   62   69   67 #>  [3145,]   63   71   68 #>  [3146,]   63   70   68 #>  [3147,]   63   70   68 #>  [3148,]   63   70   68 #>  [3149,]   62   69   67 #>  [3150,]   63   71   68 #>  [3151,]   63   70   68 #>  [3152,]   62   69   67 #>  [3153,]   63   71   68 #>  [3154,]   63   71   68 #>  [3155,]   62   69   67 #>  [3156,]   63   70   68 #>  [3157,]   63   71   68 #>  [3158,]   62   69   67 #>  [3159,]   63   71   68 #>  [3160,]   63   70   68 #>  [3161,]   63   70   68 #>  [3162,]   63   70   68 #>  [3163,]   63   70   68 #>  [3164,]   63   70   68 #>  [3165,]   63   70   68 #>  [3166,]   62   69   67 #>  [3167,]   63   71   68 #>  [3168,]   63   70   68 #>  [3169,]   62   69   67 #>  [3170,]   63   70   68 #>  [3171,]   63   71   68 #>  [3172,]   63   71   68 #>  [3173,]   63   71   68 #>  [3174,]   63   71   68 #>  [3175,]   63   70   68 #>  [3176,]   63   71   68 #>  [3177,]   63   70   68 #>  [3178,]   63   70   68 #>  [3179,]   62   69   67 #>  [3180,]   62   69   67 #>  [3181,]   62   69   67 #>  [3182,]   62   69   67 #>  [3183,]   62   69   67 #>  [3184,]   63   70   68 #>  [3185,]   63   71   68 #>  [3186,]   63   71   68 #>  [3187,]   62   69   67 #>  [3188,]   62   69   67 #>  [3189,]   62   69   67 #>  [3190,]   62   69   67 #>  [3191,]   63   71   68 #>  [3192,]   62   69   67 #>  [3193,]   63   70   68 #>  [3194,]   63   70   68 #>  [3195,]   62   69   67 #>  [3196,]   63   70   68 #>  [3197,]   63   70   68 #>  [3198,]   63   70   68 #>  [3199,]   62   69   67 #>  [3200,]   63   70   68 #>  [3201,]   64   72   70 #>  [3202,]   65   73   69 #>  [3203,]   64   72   69 #>  [3204,]   64   72   70 #>  [3205,]   65   73   69 #>  [3206,]   64   72   69 #>  [3207,]   65   73   70 #>  [3208,]   64   72   70 #>  [3209,]   65   73   70 #>  [3210,]   65   73   70 #>  [3211,]   64   72   69 #>  [3212,]   65   73   69 #>  [3213,]   65   73   70 #>  [3214,]   64   72   69 #>  [3215,]   64   72   70 #>  [3216,]   64   72   70 #>  [3217,]   65   73   70 #>  [3218,]   65   73   70 #>  [3219,]   64   72   69 #>  [3220,]   65   73   69 #>  [3221,]   65   73   70 #>  [3222,]   65   73   69 #>  [3223,]   65   73   70 #>  [3224,]   65   73   69 #>  [3225,]   64   72   70 #>  [3226,]   64   72   69 #>  [3227,]   65   73   70 #>  [3228,]   64   72   70 #>  [3229,]   65   73   69 #>  [3230,]   65   73   69 #>  [3231,]   65   73   69 #>  [3232,]   65   73   69 #>  [3233,]   65   73   69 #>  [3234,]   64   72   69 #>  [3235,]   64   72   69 #>  [3236,]   65   73   69 #>  [3237,]   64   72   70 #>  [3238,]   64   72   70 #>  [3239,]   64   72   70 #>  [3240,]   65   73   69 #>  [3241,]   65   73   69 #>  [3242,]   64   72   69 #>  [3243,]   64   72   70 #>  [3244,]   65   73   70 #>  [3245,]   64   72   70 #>  [3246,]   64   72   70 #>  [3247,]   65   73   70 #>  [3248,]   65   73   69 #>  [3249,]   64   72   69 #>  [3250,]   65   73   69 #>  [3251,]   64   72   69 #>  [3252,]   64   72   69 #>  [3253,]   65   73   70 #>  [3254,]   65   73   69 #>  [3255,]   64   72   69 #>  [3256,]   64   72   70 #>  [3257,]   64   72   69 #>  [3258,]   65   73   69 #>  [3259,]   64   72   69 #>  [3260,]   65   73   69 #>  [3261,]   65   73   70 #>  [3262,]   64   72   69 #>  [3263,]   65   73   69 #>  [3264,]   64   72   70 #>  [3265,]   64   72   69 #>  [3266,]   64   72   69 #>  [3267,]   64   72   69 #>  [3268,]   64   72   69 #>  [3269,]   64   72   69 #>  [3270,]   65   73   70 #>  [3271,]   64   72   70 #>  [3272,]   64   72   70 #>  [3273,]   64   72   70 #>  [3274,]   65   73   70 #>  [3275,]   65   73   70 #>  [3276,]   65   73   70 #>  [3277,]   64   72   70 #>  [3278,]   65   73   69 #>  [3279,]   64   72   70 #>  [3280,]   65   73   69 #>  [3281,]   65   73   69 #>  [3282,]   64   72   70 #>  [3283,]   65   73   69 #>  [3284,]   65   73   70 #>  [3285,]   64   72   69 #>  [3286,]   65   73   70 #>  [3287,]   65   73   70 #>  [3288,]   65   73   70 #>  [3289,]   64   72   69 #>  [3290,]   65   73   70 #>  [3291,]   64   72   69 #>  [3292,]   65   73   69 #>  [3293,]   65   73   69 #>  [3294,]   64   72   70 #>  [3295,]   65   73   70 #>  [3296,]   64   72   70 #>  [3297,]   64   72   69 #>  [3298,]   64   72   69 #>  [3299,]   64   72   69 #>  [3300,]   64   72   70 #>  [3301,]   67   75   72 #>  [3302,]   67   75   72 #>  [3303,]   67   75   72 #>  [3304,]   67   75   72 #>  [3305,]   67   75   72 #>  [3306,]   67   75   72 #>  [3307,]   67   75   72 #>  [3308,]   67   75   72 #>  [3309,]   67   75   72 #>  [3310,]   67   75   72 #>  [3311,]   67   75   72 #>  [3312,]   67   75   72 #>  [3313,]   67   75   72 #>  [3314,]   67   75   72 #>  [3315,]   66   74   71 #>  [3316,]   67   75   72 #>  [3317,]   67   75   72 #>  [3318,]   67   75   72 #>  [3319,]   67   75   72 #>  [3320,]   67   75   72 #>  [3321,]   67   75   72 #>  [3322,]   67   75   72 #>  [3323,]   67   75   72 #>  [3324,]   67   75   72 #>  [3325,]   67   75   72 #>  [3326,]   67   75   72 #>  [3327,]   67   75   72 #>  [3328,]   67   75   72 #>  [3329,]   67   75   72 #>  [3330,]   67   75   72 #>  [3331,]   66   74   71 #>  [3332,]   67   75   72 #>  [3333,]   67   75   72 #>  [3334,]   66   74   71 #>  [3335,]   67   75   72 #>  [3336,]   67   75   72 #>  [3337,]   67   75   72 #>  [3338,]   67   75   72 #>  [3339,]   67   75   72 #>  [3340,]   67   75   72 #>  [3341,]   67   75   72 #>  [3342,]   66   74   71 #>  [3343,]   66   74   71 #>  [3344,]   66   74   71 #>  [3345,]   67   75   72 #>  [3346,]   67   75   72 #>  [3347,]   67   75   72 #>  [3348,]   67   75   72 #>  [3349,]   67   75   72 #>  [3350,]   67   75   72 #>  [3351,]   67   75   72 #>  [3352,]   67   75   72 #>  [3353,]   67   75   72 #>  [3354,]   67   75   72 #>  [3355,]   67   75   72 #>  [3356,]   67   75   72 #>  [3357,]   67   75   72 #>  [3358,]   67   75   72 #>  [3359,]   67   75   72 #>  [3360,]   67   75   72 #>  [3361,]   67   75   72 #>  [3362,]   67   75   72 #>  [3363,]   66   74   71 #>  [3364,]   67   75   72 #>  [3365,]   67   75   72 #>  [3366,]   67   75   72 #>  [3367,]   67   75   72 #>  [3368,]   67   75   72 #>  [3369,]   67   75   72 #>  [3370,]   67   75   72 #>  [3371,]   67   75   72 #>  [3372,]   67   75   72 #>  [3373,]   67   75   72 #>  [3374,]   67   75   72 #>  [3375,]   66   74   71 #>  [3376,]   67   75   72 #>  [3377,]   67   75   72 #>  [3378,]   67   75   72 #>  [3379,]   67   75   72 #>  [3380,]   67   75   72 #>  [3381,]   67   75   72 #>  [3382,]   67   75   72 #>  [3383,]   67   75   72 #>  [3384,]   67   75   72 #>  [3385,]   67   75   72 #>  [3386,]   67   75   72 #>  [3387,]   67   75   72 #>  [3388,]   67   75   72 #>  [3389,]   67   75   72 #>  [3390,]   67   75   72 #>  [3391,]   67   75   72 #>  [3392,]   67   75   72 #>  [3393,]   67   75   72 #>  [3394,]   67   75   72 #>  [3395,]   66   74   71 #>  [3396,]   67   75   72 #>  [3397,]   67   75   72 #>  [3398,]   67   75   72 #>  [3399,]   67   75   72 #>  [3400,]   67   75   72 #>  [3401,]   69   77   73 #>  [3402,]   68   76   74 #>  [3403,]   68   76   74 #>  [3404,]   69   77   73 #>  [3405,]   69   77   73 #>  [3406,]   69   77   73 #>  [3407,]   68   76   74 #>  [3408,]   69   77   73 #>  [3409,]   69   77   73 #>  [3410,]   69   77   73 #>  [3411,]   69   77   73 #>  [3412,]   69   77   73 #>  [3413,]   68   76   74 #>  [3414,]   69   77   73 #>  [3415,]   69   77   73 #>  [3416,]   68   76   74 #>  [3417,]   69   77   73 #>  [3418,]   68   76   74 #>  [3419,]   68   76   74 #>  [3420,]   69   77   73 #>  [3421,]   68   76   74 #>  [3422,]   68   76   74 #>  [3423,]   68   76   74 #>  [3424,]   68   76   74 #>  [3425,]   69   77   73 #>  [3426,]   69   77   73 #>  [3427,]   69   77   73 #>  [3428,]   69   77   73 #>  [3429,]   68   76   74 #>  [3430,]   68   76   74 #>  [3431,]   68   76   74 #>  [3432,]   68   76   74 #>  [3433,]   69   77   73 #>  [3434,]   68   76   74 #>  [3435,]   68   76   74 #>  [3436,]   68   76   74 #>  [3437,]   68   76   74 #>  [3438,]   69   77   73 #>  [3439,]   68   76   74 #>  [3440,]   68   76   74 #>  [3441,]   69   77   73 #>  [3442,]   69   77   73 #>  [3443,]   69   77   73 #>  [3444,]   68   76   74 #>  [3445,]   69   77   73 #>  [3446,]   69   77   73 #>  [3447,]   68   76   74 #>  [3448,]   68   76   74 #>  [3449,]   68   76   74 #>  [3450,]   69   77   73 #>  [3451,]   69   77   73 #>  [3452,]   69   77   73 #>  [3453,]   69   77   73 #>  [3454,]   68   76   74 #>  [3455,]   69   77   73 #>  [3456,]   69   77   73 #>  [3457,]   69   77   73 #>  [3458,]   69   77   73 #>  [3459,]   68   76   74 #>  [3460,]   69   77   73 #>  [3461,]   69   77   73 #>  [3462,]   68   76   74 #>  [3463,]   69   77   73 #>  [3464,]   69   77   73 #>  [3465,]   69   77   73 #>  [3466,]   69   77   73 #>  [3467,]   69   77   73 #>  [3468,]   69   77   73 #>  [3469,]   69   77   73 #>  [3470,]   68   76   74 #>  [3471,]   69   77   73 #>  [3472,]   69   77   73 #>  [3473,]   69   77   73 #>  [3474,]   69   77   73 #>  [3475,]   69   77   73 #>  [3476,]   69   77   73 #>  [3477,]   68   76   74 #>  [3478,]   69   77   73 #>  [3479,]   68   76   74 #>  [3480,]   68   76   74 #>  [3481,]   69   77   73 #>  [3482,]   69   77   73 #>  [3483,]   68   76   74 #>  [3484,]   69   77   73 #>  [3485,]   68   76   74 #>  [3486,]   68   76   74 #>  [3487,]   69   77   73 #>  [3488,]   69   77   73 #>  [3489,]   69   77   73 #>  [3490,]   69   77   73 #>  [3491,]   69   77   73 #>  [3492,]   69   77   73 #>  [3493,]   68   76   74 #>  [3494,]   69   77   73 #>  [3495,]   68   76   74 #>  [3496,]   69   77   73 #>  [3497,]   69   77   73 #>  [3498,]   68   76   74 #>  [3499,]   69   77   73 #>  [3500,]   68   76   74 #>  [3501,]   71   79   77 #>  [3502,]   70   78   75 #>  [3503,]   70   78   75 #>  [3504,]   70   78   75 #>  [3505,]   70   78   75 #>  [3506,]   70   78   75 #>  [3507,]   70   78   75 #>  [3508,]   70   78   75 #>  [3509,]   71   79   76 #>  [3510,]   70   78   75 #>  [3511,]   70   78   75 #>  [3512,]   70   78   75 #>  [3513,]   71   79   77 #>  [3514,]   70   78   75 #>  [3515,]   70   78   75 #>  [3516,]   70   78   75 #>  [3517,]   71   79   77 #>  [3518,]   71   79   77 #>  [3519,]   70   78   75 #>  [3520,]   70   78   75 #>  [3521,]   70   78   75 #>  [3522,]   70   78   75 #>  [3523,]   70   78   75 #>  [3524,]   70   78   75 #>  [3525,]   70   78   75 #>  [3526,]   70   78   75 #>  [3527,]   71   79   77 #>  [3528,]   70   78   75 #>  [3529,]   70   78   75 #>  [3530,]   70   78   75 #>  [3531,]   70   78   75 #>  [3532,]   70   78   75 #>  [3533,]   70   78   75 #>  [3534,]   70   78   75 #>  [3535,]   70   78   75 #>  [3536,]   71   79   77 #>  [3537,]   70   78   75 #>  [3538,]   70   78   75 #>  [3539,]   70   78   75 #>  [3540,]   70   78   75 #>  [3541,]   70   78   75 #>  [3542,]   71   79   76 #>  [3543,]   70   78   75 #>  [3544,]   70   78   75 #>  [3545,]   70   78   75 #>  [3546,]   70   78   75 #>  [3547,]   70   78   75 #>  [3548,]   70   78   75 #>  [3549,]   70   78   75 #>  [3550,]   70   78   75 #>  [3551,]   71   79   77 #>  [3552,]   70   78   75 #>  [3553,]   71   79   77 #>  [3554,]   70   78   75 #>  [3555,]   70   78   75 #>  [3556,]   70   78   75 #>  [3557,]   70   78   75 #>  [3558,]   70   78   75 #>  [3559,]   70   78   75 #>  [3560,]   70   78   75 #>  [3561,]   70   78   75 #>  [3562,]   70   78   75 #>  [3563,]   70   78   75 #>  [3564,]   70   78   75 #>  [3565,]   71   79   76 #>  [3566,]   71   79   77 #>  [3567,]   70   78   75 #>  [3568,]   70   78   75 #>  [3569,]   70   78   75 #>  [3570,]   70   78   75 #>  [3571,]   70   78   75 #>  [3572,]   70   78   75 #>  [3573,]   70   78   75 #>  [3574,]   70   78   75 #>  [3575,]   70   78   75 #>  [3576,]   70   78   75 #>  [3577,]   70   78   75 #>  [3578,]   70   78   75 #>  [3579,]   71   79   76 #>  [3580,]   70   78   75 #>  [3581,]   70   78   75 #>  [3582,]   71   79   76 #>  [3583,]   70   78   75 #>  [3584,]   71   79   77 #>  [3585,]   70   78   75 #>  [3586,]   70   78   75 #>  [3587,]   71   79   77 #>  [3588,]   70   78   75 #>  [3589,]   70   78   75 #>  [3590,]   70   78   75 #>  [3591,]   71   79   76 #>  [3592,]   70   78   75 #>  [3593,]   71   79   77 #>  [3594,]   71   79   76 #>  [3595,]   70   78   75 #>  [3596,]   70   78   75 #>  [3597,]   70   78   75 #>  [3598,]   70   78   75 #>  [3599,]   70   78   75 #>  [3600,]   70   78   75 #>  [3601,]   72   81   79 #>  [3602,]   72   80   78 #>  [3603,]   72   80   78 #>  [3604,]   72   80   78 #>  [3605,]   72   81   79 #>  [3606,]   72   81   79 #>  [3607,]   72   80   78 #>  [3608,]   72   81   79 #>  [3609,]   72   81   79 #>  [3610,]   72   80   78 #>  [3611,]   72   80   78 #>  [3612,]   72   81   79 #>  [3613,]   72   80   78 #>  [3614,]   72   81   79 #>  [3615,]   72   81   79 #>  [3616,]   72   80   78 #>  [3617,]   72   80   78 #>  [3618,]   72   80   78 #>  [3619,]   72   80   78 #>  [3620,]   72   81   79 #>  [3621,]   72   80   78 #>  [3622,]   72   80   78 #>  [3623,]   72   80   78 #>  [3624,]   72   80   78 #>  [3625,]   72   80   78 #>  [3626,]   72   81   79 #>  [3627,]   72   80   78 #>  [3628,]   72   81   79 #>  [3629,]   72   80   78 #>  [3630,]   72   80   78 #>  [3631,]   72   80   78 #>  [3632,]   72   80   78 #>  [3633,]   72   81   79 #>  [3634,]   72   80   78 #>  [3635,]   72   80   78 #>  [3636,]   72   80   78 #>  [3637,]   72   80   78 #>  [3638,]   72   81   79 #>  [3639,]   72   80   78 #>  [3640,]   72   80   78 #>  [3641,]   72   81   79 #>  [3642,]   72   81   79 #>  [3643,]   72   81   79 #>  [3644,]   72   80   78 #>  [3645,]   72   81   79 #>  [3646,]   72   81   79 #>  [3647,]   72   80   78 #>  [3648,]   72   80   78 #>  [3649,]   72   80   78 #>  [3650,]   72   81   79 #>  [3651,]   72   81   79 #>  [3652,]   72   80   78 #>  [3653,]   72   81   79 #>  [3654,]   72   80   78 #>  [3655,]   72   81   79 #>  [3656,]   72   81   79 #>  [3657,]   72   81   79 #>  [3658,]   72   81   79 #>  [3659,]   72   80   78 #>  [3660,]   72   81   79 #>  [3661,]   72   81   79 #>  [3662,]   72   80   78 #>  [3663,]   72   81   79 #>  [3664,]   72   81   79 #>  [3665,]   72   81   79 #>  [3666,]   72   81   79 #>  [3667,]   72   81   79 #>  [3668,]   72   81   79 #>  [3669,]   72   80   78 #>  [3670,]   72   80   78 #>  [3671,]   72   81   79 #>  [3672,]   72   81   79 #>  [3673,]   72   81   79 #>  [3674,]   72   81   79 #>  [3675,]   72   81   79 #>  [3676,]   72   81   79 #>  [3677,]   72   80   78 #>  [3678,]   72   81   79 #>  [3679,]   72   80   78 #>  [3680,]   72   80   78 #>  [3681,]   72   81   79 #>  [3682,]   72   80   78 #>  [3683,]   72   80   78 #>  [3684,]   72   81   79 #>  [3685,]   72   80   78 #>  [3686,]   72   80   78 #>  [3687,]   72   81   79 #>  [3688,]   72   81   79 #>  [3689,]   72   80   78 #>  [3690,]   72   81   79 #>  [3691,]   72   81   79 #>  [3692,]   72   81   79 #>  [3693,]   72   80   78 #>  [3694,]   72   81   79 #>  [3695,]   72   80   78 #>  [3696,]   72   81   79 #>  [3697,]   72   81   79 #>  [3698,]   72   80   78 #>  [3699,]   72   80   78 #>  [3700,]   72   80   78 #>  [3701,]   73   82   80 #>  [3702,]   73   82   80 #>  [3703,]   73   82   80 #>  [3704,]   73   82   81 #>  [3705,]   73   82   80 #>  [3706,]   73   82   80 #>  [3707,]   74   83   82 #>  [3708,]   73   82   80 #>  [3709,]   73   82   80 #>  [3710,]   74   83   82 #>  [3711,]   73   82   80 #>  [3712,]   73   82   80 #>  [3713,]   73   82   80 #>  [3714,]   73   82   80 #>  [3715,]   73   82   81 #>  [3716,]   74   83   82 #>  [3717,]   73   82   80 #>  [3718,]   73   82   81 #>  [3719,]   73   82   80 #>  [3720,]   74   84   82 #>  [3721,]   73   82   81 #>  [3722,]   73   82   80 #>  [3723,]   73   82   81 #>  [3724,]   74   84   82 #>  [3725,]   73   82   81 #>  [3726,]   73   82   80 #>  [3727,]   73   82   81 #>  [3728,]   74   84   82 #>  [3729,]   73   82   80 #>  [3730,]   73   82   80 #>  [3731,]   73   82   80 #>  [3732,]   73   82   80 #>  [3733,]   73   82   80 #>  [3734,]   73   82   80 #>  [3735,]   73   82   80 #>  [3736,]   73   82   80 #>  [3737,]   73   82   80 #>  [3738,]   73   82   80 #>  [3739,]   73   82   81 #>  [3740,]   73   82   80 #>  [3741,]   73   82   80 #>  [3742,]   73   82   80 #>  [3743,]   73   82   81 #>  [3744,]   73   82   80 #>  [3745,]   73   82   81 #>  [3746,]   73   82   80 #>  [3747,]   73   82   80 #>  [3748,]   73   82   80 #>  [3749,]   73   82   80 #>  [3750,]   74   83   82 #>  [3751,]   73   82   80 #>  [3752,]   74   84   82 #>  [3753,]   73   82   81 #>  [3754,]   74   83   82 #>  [3755,]   73   82   80 #>  [3756,]   73   82   80 #>  [3757,]   73   82   80 #>  [3758,]   73   82   80 #>  [3759,]   73   82   80 #>  [3760,]   73   82   80 #>  [3761,]   73   82   81 #>  [3762,]   73   82   80 #>  [3763,]   73   82   80 #>  [3764,]   73   82   80 #>  [3765,]   73   82   80 #>  [3766,]   73   82   80 #>  [3767,]   73   82   80 #>  [3768,]   73   82   80 #>  [3769,]   73   82   80 #>  [3770,]   73   82   80 #>  [3771,]   73   82   80 #>  [3772,]   73   82   81 #>  [3773,]   73   82   81 #>  [3774,]   73   82   81 #>  [3775,]   73   82   81 #>  [3776,]   74   84   82 #>  [3777,]   73   82   81 #>  [3778,]   73   82   80 #>  [3779,]   73   82   80 #>  [3780,]   73   82   80 #>  [3781,]   73   82   80 #>  [3782,]   73   82   80 #>  [3783,]   73   82   80 #>  [3784,]   73   82   81 #>  [3785,]   73   82   80 #>  [3786,]   74   84   82 #>  [3787,]   73   82   80 #>  [3788,]   73   82   80 #>  [3789,]   73   82   80 #>  [3790,]   73   82   80 #>  [3791,]   74   83   82 #>  [3792,]   73   82   80 #>  [3793,]   73   82   80 #>  [3794,]   73   82   81 #>  [3795,]   73   82   81 #>  [3796,]   73   82   80 #>  [3797,]   73   82   80 #>  [3798,]   73   82   80 #>  [3799,]   73   82   80 #>  [3800,]   73   82   81 #>  [3801,]   76   86   84 #>  [3802,]   76   86   84 #>  [3803,]   76   86   84 #>  [3804,]   75   85   83 #>  [3805,]   76   86   84 #>  [3806,]   76   86   84 #>  [3807,]   76   86   84 #>  [3808,]   75   85   83 #>  [3809,]   75   85   83 #>  [3810,]   75   85   83 #>  [3811,]   76   86   84 #>  [3812,]   76   86   84 #>  [3813,]   76   86   84 #>  [3814,]   76   86   84 #>  [3815,]   76   86   84 #>  [3816,]   76   86   84 #>  [3817,]   76   86   84 #>  [3818,]   75   85   83 #>  [3819,]   76   86   84 #>  [3820,]   75   85   83 #>  [3821,]   76   86   84 #>  [3822,]   76   86   84 #>  [3823,]   76   86   84 #>  [3824,]   76   86   84 #>  [3825,]   76   86   84 #>  [3826,]   76   86   84 #>  [3827,]   76   86   84 #>  [3828,]   76   86   84 #>  [3829,]   76   86   84 #>  [3830,]   75   85   83 #>  [3831,]   76   86   84 #>  [3832,]   76   86   84 #>  [3833,]   76   86   84 #>  [3834,]   76   86   84 #>  [3835,]   76   86   84 #>  [3836,]   76   86   84 #>  [3837,]   76   86   84 #>  [3838,]   76   86   84 #>  [3839,]   75   85   83 #>  [3840,]   76   86   84 #>  [3841,]   76   86   84 #>  [3842,]   76   86   84 #>  [3843,]   75   85   83 #>  [3844,]   76   86   84 #>  [3845,]   75   85   83 #>  [3846,]   76   86   84 #>  [3847,]   76   86   84 #>  [3848,]   76   86   84 #>  [3849,]   75   85   83 #>  [3850,]   76   86   84 #>  [3851,]   75   85   83 #>  [3852,]   76   86   84 #>  [3853,]   75   85   83 #>  [3854,]   76   86   84 #>  [3855,]   76   86   84 #>  [3856,]   75   85   83 #>  [3857,]   76   86   84 #>  [3858,]   76   86   84 #>  [3859,]   76   86   84 #>  [3860,]   75   85   83 #>  [3861,]   76   86   84 #>  [3862,]   76   86   84 #>  [3863,]   76   86   84 #>  [3864,]   75   85   83 #>  [3865,]   75   85   83 #>  [3866,]   75   85   83 #>  [3867,]   75   85   83 #>  [3868,]   76   86   84 #>  [3869,]   76   86   84 #>  [3870,]   76   86   84 #>  [3871,]   76   86   84 #>  [3872,]   76   86   84 #>  [3873,]   76   86   84 #>  [3874,]   76   86   84 #>  [3875,]   76   86   84 #>  [3876,]   76   86   84 #>  [3877,]   76   86   84 #>  [3878,]   75   85   83 #>  [3879,]   76   86   84 #>  [3880,]   76   86   84 #>  [3881,]   76   86   84 #>  [3882,]   76   86   84 #>  [3883,]   76   86   84 #>  [3884,]   76   86   84 #>  [3885,]   75   85   83 #>  [3886,]   76   86   84 #>  [3887,]   76   86   84 #>  [3888,]   76   86   84 #>  [3889,]   75   85   83 #>  [3890,]   76   86   84 #>  [3891,]   75   85   83 #>  [3892,]   76   86   84 #>  [3893,]   76   86   84 #>  [3894,]   76   86   84 #>  [3895,]   75   85   83 #>  [3896,]   76   86   84 #>  [3897,]   76   86   84 #>  [3898,]   76   86   84 #>  [3899,]   76   86   84 #>  [3900,]   76   86   84 #>  [3901,]   78   88   85 #>  [3902,]   78   88   85 #>  [3903,]   77   87   85 #>  [3904,]   77   87   85 #>  [3905,]   77   87   85 #>  [3906,]   77   87   85 #>  [3907,]   78   88   85 #>  [3908,]   78   88   85 #>  [3909,]   77   87   85 #>  [3910,]   77   87   85 #>  [3911,]   77   87   85 #>  [3912,]   78   88   85 #>  [3913,]   78   88   85 #>  [3914,]   77   87   85 #>  [3915,]   78   88   85 #>  [3916,]   78   88   85 #>  [3917,]   78   88   85 #>  [3918,]   78   88   86 #>  [3919,]   78   88   85 #>  [3920,]   78   88   85 #>  [3921,]   77   87   85 #>  [3922,]   78   88   85 #>  [3923,]   78   88   85 #>  [3924,]   77   87   85 #>  [3925,]   77   87   85 #>  [3926,]   78   88   85 #>  [3927,]   78   88   85 #>  [3928,]   77   87   85 #>  [3929,]   78   88   85 #>  [3930,]   78   88   85 #>  [3931,]   77   87   85 #>  [3932,]   77   87   85 #>  [3933,]   78   88   85 #>  [3934,]   77   87   85 #>  [3935,]   77   87   85 #>  [3936,]   78   88   85 #>  [3937,]   78   88   85 #>  [3938,]   78   88   85 #>  [3939,]   77   87   85 #>  [3940,]   77   87   85 #>  [3941,]   78   88   85 #>  [3942,]   77   87   86 #>  [3943,]   78   88   85 #>  [3944,]   78   88   85 #>  [3945,]   78   88   85 #>  [3946,]   78   88   85 #>  [3947,]   77   87   85 #>  [3948,]   77   87   85 #>  [3949,]   78   88   85 #>  [3950,]   78   88   85 #>  [3951,]   78   88   86 #>  [3952,]   77   87   85 #>  [3953,]   78   88   86 #>  [3954,]   77   87   85 #>  [3955,]   78   88   85 #>  [3956,]   78   88   85 #>  [3957,]   77   87   85 #>  [3958,]   78   88   85 #>  [3959,]   78   88   85 #>  [3960,]   78   88   85 #>  [3961,]   78   88   85 #>  [3962,]   77   87   85 #>  [3963,]   78   88   85 #>  [3964,]   78   88   85 #>  [3965,]   77   87   85 #>  [3966,]   78   88   85 #>  [3967,]   77   87   85 #>  [3968,]   78   88   85 #>  [3969,]   78   88   85 #>  [3970,]   77   87   85 #>  [3971,]   78   88   85 #>  [3972,]   77   87   85 #>  [3973,]   77   87   85 #>  [3974,]   77   87   85 #>  [3975,]   78   88   85 #>  [3976,]   77   87   85 #>  [3977,]   78   88   85 #>  [3978,]   78   88   85 #>  [3979,]   77   87   86 #>  [3980,]   78   88   85 #>  [3981,]   78   88   85 #>  [3982,]   77   87   85 #>  [3983,]   78   88   85 #>  [3984,]   78   88   86 #>  [3985,]   78   88   85 #>  [3986,]   77   87   85 #>  [3987,]   78   88   85 #>  [3988,]   77   87   85 #>  [3989,]   77   87   85 #>  [3990,]   78   88   85 #>  [3991,]   77   87   85 #>  [3992,]   77   87   85 #>  [3993,]   78   88   86 #>  [3994,]   77   87   86 #>  [3995,]   78   88   85 #>  [3996,]   78   88   85 #>  [3997,]   78   88   85 #>  [3998,]   77   87   85 #>  [3999,]   77   87   85 #>  [4000,]   78   88   85 #>  [4001,]   80   90   87 #>  [4002,]   80   90   87 #>  [4003,]   80   90   87 #>  [4004,]   80   90   87 #>  [4005,]   80   90   87 #>  [4006,]   80   90   87 #>  [4007,]   79   89   87 #>  [4008,]   80   90   87 #>  [4009,]   80   90   87 #>  [4010,]   80   90   87 #>  [4011,]   80   90   87 #>  [4012,]   80   90   87 #>  [4013,]   80   90   87 #>  [4014,]   80   90   87 #>  [4015,]   80   90   87 #>  [4016,]   80   90   87 #>  [4017,]   80   90   87 #>  [4018,]   80   90   87 #>  [4019,]   80   90   87 #>  [4020,]   80   90   87 #>  [4021,]   79   89   87 #>  [4022,]   80   90   87 #>  [4023,]   80   90   87 #>  [4024,]   80   90   87 #>  [4025,]   80   90   87 #>  [4026,]   80   90   87 #>  [4027,]   80   90   87 #>  [4028,]   80   90   87 #>  [4029,]   80   90   87 #>  [4030,]   80   90   87 #>  [4031,]   80   90   87 #>  [4032,]   80   90   87 #>  [4033,]   80   90   87 #>  [4034,]   80   90   87 #>  [4035,]   80   90   87 #>  [4036,]   80   90   87 #>  [4037,]   80   90   87 #>  [4038,]   80   90   87 #>  [4039,]   79   89   87 #>  [4040,]   80   90   87 #>  [4041,]   80   90   87 #>  [4042,]   80   90   87 #>  [4043,]   80   90   87 #>  [4044,]   80   90   87 #>  [4045,]   80   90   87 #>  [4046,]   80   90   87 #>  [4047,]   80   90   87 #>  [4048,]   80   90   87 #>  [4049,]   79   89   87 #>  [4050,]   80   90   87 #>  [4051,]   80   90   87 #>  [4052,]   80   90   87 #>  [4053,]   80   90   87 #>  [4054,]   80   90   87 #>  [4055,]   80   90   87 #>  [4056,]   80   90   87 #>  [4057,]   80   90   87 #>  [4058,]   80   90   87 #>  [4059,]   80   90   87 #>  [4060,]   80   90   87 #>  [4061,]   80   90   87 #>  [4062,]   79   89   87 #>  [4063,]   80   90   87 #>  [4064,]   80   90   87 #>  [4065,]   80   90   87 #>  [4066,]   80   90   87 #>  [4067,]   80   90   87 #>  [4068,]   80   90   87 #>  [4069,]   80   90   87 #>  [4070,]   79   89   87 #>  [4071,]   80   90   87 #>  [4072,]   80   90   87 #>  [4073,]   80   90   87 #>  [4074,]   80   90   87 #>  [4075,]   80   90   87 #>  [4076,]   80   90   87 #>  [4077,]   80   90   87 #>  [4078,]   80   90   87 #>  [4079,]   80   90   87 #>  [4080,]   79   89   87 #>  [4081,]   80   90   87 #>  [4082,]   80   90   87 #>  [4083,]   80   90   87 #>  [4084,]   80   90   87 #>  [4085,]   80   90   87 #>  [4086,]   80   90   87 #>  [4087,]   80   90   87 #>  [4088,]   80   90   87 #>  [4089,]   80   90   87 #>  [4090,]   80   90   87 #>  [4091,]   80   90   87 #>  [4092,]   80   90   87 #>  [4093,]   80   90   87 #>  [4094,]   80   90   87 #>  [4095,]   79   89   87 #>  [4096,]   80   90   87 #>  [4097,]   80   90   87 #>  [4098,]   80   90   87 #>  [4099,]   80   90   87 #>  [4100,]   80   90   87 #>  [4101,]   81   92   90 #>  [4102,]   81   91   88 #>  [4103,]   81   91   88 #>  [4104,]   81   92   89 #>  [4105,]   81   92   89 #>  [4106,]   81   92   89 #>  [4107,]   81   91   88 #>  [4108,]   81   92   90 #>  [4109,]   81   92   89 #>  [4110,]   81   91   88 #>  [4111,]   81   92   89 #>  [4112,]   81   92   90 #>  [4113,]   81   91   88 #>  [4114,]   81   92   89 #>  [4115,]   81   92   90 #>  [4116,]   81   91   88 #>  [4117,]   81   92   90 #>  [4118,]   81   91   88 #>  [4119,]   81   91   88 #>  [4120,]   81   92   90 #>  [4121,]   81   91   88 #>  [4122,]   81   91   88 #>  [4123,]   81   91   88 #>  [4124,]   81   91   88 #>  [4125,]   81   92   89 #>  [4126,]   81   92   90 #>  [4127,]   81   92   90 #>  [4128,]   81   92   89 #>  [4129,]   81   91   88 #>  [4130,]   81   91   88 #>  [4131,]   81   91   88 #>  [4132,]   81   91   88 #>  [4133,]   81   92   90 #>  [4134,]   81   91   88 #>  [4135,]   81   91   88 #>  [4136,]   81   91   88 #>  [4137,]   81   91   88 #>  [4138,]   81   92   90 #>  [4139,]   81   91   88 #>  [4140,]   81   91   88 #>  [4141,]   81   92   90 #>  [4142,]   81   92   89 #>  [4143,]   81   92   90 #>  [4144,]   81   91   88 #>  [4145,]   81   92   90 #>  [4146,]   81   92   90 #>  [4147,]   81   91   88 #>  [4148,]   81   91   88 #>  [4149,]   81   91   88 #>  [4150,]   81   92   90 #>  [4151,]   81   92   90 #>  [4152,]   81   92   89 #>  [4153,]   81   92   90 #>  [4154,]   81   91   88 #>  [4155,]   81   92   90 #>  [4156,]   81   92   90 #>  [4157,]   81   92   89 #>  [4158,]   81   92   90 #>  [4159,]   81   91   88 #>  [4160,]   81   92   90 #>  [4161,]   81   92   90 #>  [4162,]   81   91   88 #>  [4163,]   81   92   90 #>  [4164,]   81   92   90 #>  [4165,]   81   92   89 #>  [4166,]   81   92   90 #>  [4167,]   81   92   89 #>  [4168,]   81   92   90 #>  [4169,]   81   92   90 #>  [4170,]   81   91   88 #>  [4171,]   81   92   90 #>  [4172,]   81   92   89 #>  [4173,]   81   92   89 #>  [4174,]   81   92   89 #>  [4175,]   81   92   90 #>  [4176,]   81   92   89 #>  [4177,]   81   91   88 #>  [4178,]   81   92   90 #>  [4179,]   81   91   88 #>  [4180,]   81   91   88 #>  [4181,]   81   92   90 #>  [4182,]   81   92   89 #>  [4183,]   81   91   88 #>  [4184,]   81   92   90 #>  [4185,]   81   91   88 #>  [4186,]   81   91   88 #>  [4187,]   81   92   90 #>  [4188,]   81   92   90 #>  [4189,]   81   92   89 #>  [4190,]   81   92   90 #>  [4191,]   81   92   89 #>  [4192,]   81   92   90 #>  [4193,]   81   91   88 #>  [4194,]   81   92   89 #>  [4195,]   81   91   88 #>  [4196,]   81   92   90 #>  [4197,]   81   92   90 #>  [4198,]   81   91   88 #>  [4199,]   81   92   90 #>  [4200,]   81   91   88 #>  [4201,]   82   93   91 #>  [4202,]   82   93   91 #>  [4203,]   82   94   92 #>  [4204,]   82   93   91 #>  [4205,]   82   93   91 #>  [4206,]   82   94   92 #>  [4207,]   82   93   91 #>  [4208,]   82   93   91 #>  [4209,]   82   93   91 #>  [4210,]   82   93   91 #>  [4211,]   82   93   91 #>  [4212,]   82   94   92 #>  [4213,]   82   93   91 #>  [4214,]   82   93   91 #>  [4215,]   82   93   91 #>  [4216,]   82   93   91 #>  [4217,]   82   93   91 #>  [4218,]   82   93   91 #>  [4219,]   82   94   92 #>  [4220,]   82   94   92 #>  [4221,]   82   93   91 #>  [4222,]   82   93   91 #>  [4223,]   82   93   91 #>  [4224,]   82   93   91 #>  [4225,]   82   94   92 #>  [4226,]   82   93   91 #>  [4227,]   82   93   91 #>  [4228,]   82   94   92 #>  [4229,]   82   93   91 #>  [4230,]   82   93   91 #>  [4231,]   82   93   91 #>  [4232,]   82   93   91 #>  [4233,]   82   94   92 #>  [4234,]   82   94   92 #>  [4235,]   82   93   91 #>  [4236,]   82   93   91 #>  [4237,]   82   93   91 #>  [4238,]   82   93   91 #>  [4239,]   82   93   91 #>  [4240,]   82   93   91 #>  [4241,]   82   93   91 #>  [4242,]   82   93   91 #>  [4243,]   82   93   91 #>  [4244,]   82   93   91 #>  [4245,]   82   93   91 #>  [4246,]   82   93   91 #>  [4247,]   82   93   91 #>  [4248,]   82   93   91 #>  [4249,]   82   93   91 #>  [4250,]   82   93   91 #>  [4251,]   82   93   91 #>  [4252,]   82   93   91 #>  [4253,]   82   93   91 #>  [4254,]   82   93   91 #>  [4255,]   82   93   91 #>  [4256,]   82   93   91 #>  [4257,]   82   93   91 #>  [4258,]   82   93   91 #>  [4259,]   82   93   91 #>  [4260,]   82   94   92 #>  [4261,]   82   93   91 #>  [4262,]   82   93   91 #>  [4263,]   82   93   91 #>  [4264,]   82   93   91 #>  [4265,]   82   94   92 #>  [4266,]   82   93   91 #>  [4267,]   82   93   91 #>  [4268,]   82   93   91 #>  [4269,]   82   93   91 #>  [4270,]   82   94   92 #>  [4271,]   82   93   91 #>  [4272,]   82   93   91 #>  [4273,]   82   94   92 #>  [4274,]   82   93   91 #>  [4275,]   82   93   91 #>  [4276,]   82   93   91 #>  [4277,]   82   93   91 #>  [4278,]   82   93   91 #>  [4279,]   82   93   91 #>  [4280,]   82   93   91 #>  [4281,]   82   93   91 #>  [4282,]   82   93   91 #>  [4283,]   82   93   91 #>  [4284,]   82   93   91 #>  [4285,]   82   93   91 #>  [4286,]   82   93   91 #>  [4287,]   82   93   91 #>  [4288,]   82   93   91 #>  [4289,]   82   93   91 #>  [4290,]   82   93   91 #>  [4291,]   82   93   91 #>  [4292,]   82   93   91 #>  [4293,]   82   94   92 #>  [4294,]   82   93   91 #>  [4295,]   82   93   91 #>  [4296,]   82   93   91 #>  [4297,]   82   94   92 #>  [4298,]   82   94   92 #>  [4299,]   82   93   91 #>  [4300,]   82   93   91 #>  [4301,]   84   96   94 #>  [4302,]   83   95   94 #>  [4303,]   83   96   94 #>  [4304,]   84   96   93 #>  [4305,]   84   96   94 #>  [4306,]   84   95   94 #>  [4307,]   83   96   94 #>  [4308,]   84   96   93 #>  [4309,]   84   96   93 #>  [4310,]   83   96   94 #>  [4311,]   84   95   93 #>  [4312,]   84   95   94 #>  [4313,]   83   96   93 #>  [4314,]   84   96   94 #>  [4315,]   84   95   94 #>  [4316,]   83   96   94 #>  [4317,]   83   95   93 #>  [4318,]   83   96   94 #>  [4319,]   83   95   94 #>  [4320,]   84   96   94 #>  [4321,]   83   96   94 #>  [4322,]   83   96   93 #>  [4323,]   83   95   94 #>  [4324,]   83   96   94 #>  [4325,]   83   96   94 #>  [4326,]   84   95   94 #>  [4327,]   83   96   93 #>  [4328,]   84   96   94 #>  [4329,]   83   95   94 #>  [4330,]   83   95   94 #>  [4331,]   83   95   94 #>  [4332,]   83   96   94 #>  [4333,]   84   96   94 #>  [4334,]   83   95   94 #>  [4335,]   83   95   93 #>  [4336,]   83   96   94 #>  [4337,]   83   95   94 #>  [4338,]   84   96   94 #>  [4339,]   83   96   94 #>  [4340,]   83   96   94 #>  [4341,]   84   96   94 #>  [4342,]   84   95   94 #>  [4343,]   84   95   94 #>  [4344,]   83   95   93 #>  [4345,]   84   96   94 #>  [4346,]   84   96   94 #>  [4347,]   83   95   94 #>  [4348,]   83   95   94 #>  [4349,]   83   96   93 #>  [4350,]   84   96   94 #>  [4351,]   84   96   94 #>  [4352,]   84   96   93 #>  [4353,]   84   96   94 #>  [4354,]   83   96   94 #>  [4355,]   84   96   93 #>  [4356,]   84   95   94 #>  [4357,]   84   96   94 #>  [4358,]   84   96   93 #>  [4359,]   83   96   94 #>  [4360,]   84   95   94 #>  [4361,]   84   95   94 #>  [4362,]   83   96   94 #>  [4363,]   84   95   94 #>  [4364,]   84   95   94 #>  [4365,]   84   95   94 #>  [4366,]   84   95   93 #>  [4367,]   84   96   94 #>  [4368,]   84   95   94 #>  [4369,]   83   96   94 #>  [4370,]   83   95   94 #>  [4371,]   84   96   94 #>  [4372,]   84   96   94 #>  [4373,]   84   96   94 #>  [4374,]   84   96   94 #>  [4375,]   84   95   94 #>  [4376,]   84   96   94 #>  [4377,]   83   96   94 #>  [4378,]   84   95   94 #>  [4379,]   83   95   93 #>  [4380,]   83   96   93 #>  [4381,]   84   95   93 #>  [4382,]   83   96   93 #>  [4383,]   83   96   93 #>  [4384,]   84   96   94 #>  [4385,]   83   96   94 #>  [4386,]   83   96   94 #>  [4387,]   84   96   93 #>  [4388,]   84   96   93 #>  [4389,]   84   96   93 #>  [4390,]   84   96   93 #>  [4391,]   84   96   94 #>  [4392,]   84   95   93 #>  [4393,]   83   96   94 #>  [4394,]   84   95   94 #>  [4395,]   83   95   93 #>  [4396,]   84   95   94 #>  [4397,]   84   96   94 #>  [4398,]   83   96   94 #>  [4399,]   83   96   93 #>  [4400,]   83   95   94 #>  [4401,]   86   97   95 #>  [4402,]   86   97   95 #>  [4403,]   85   99   96 #>  [4404,]   85   98   96 #>  [4405,]   85   99   96 #>  [4406,]   85   99   96 #>  [4407,]   86   97   95 #>  [4408,]   86   97   95 #>  [4409,]   85   98   96 #>  [4410,]   85   98   96 #>  [4411,]   85   99   96 #>  [4412,]   86   97   95 #>  [4413,]   86   97   95 #>  [4414,]   85   99   96 #>  [4415,]   86   97   95 #>  [4416,]   86   97   95 #>  [4417,]   86   97   95 #>  [4418,]   86   97   95 #>  [4419,]   86   97   95 #>  [4420,]   86   97   95 #>  [4421,]   85   99   96 #>  [4422,]   86   97   95 #>  [4423,]   86   97   95 #>  [4424,]   85   99   96 #>  [4425,]   85   99   96 #>  [4426,]   86   97   95 #>  [4427,]   86   97   95 #>  [4428,]   85   99   96 #>  [4429,]   86   97   95 #>  [4430,]   86   97   95 #>  [4431,]   85   99   96 #>  [4432,]   85   99   96 #>  [4433,]   86   97   95 #>  [4434,]   85   99   96 #>  [4435,]   85   99   96 #>  [4436,]   86   97   95 #>  [4437,]   86   97   95 #>  [4438,]   86   97   95 #>  [4439,]   85   99   96 #>  [4440,]   85   99   96 #>  [4441,]   86   97   95 #>  [4442,]   85   99   96 #>  [4443,]   86   97   95 #>  [4444,]   86   97   95 #>  [4445,]   86   97   95 #>  [4446,]   86   97   95 #>  [4447,]   85   99   96 #>  [4448,]   85   99   96 #>  [4449,]   86   97   95 #>  [4450,]   86   97   95 #>  [4451,]   86   97   95 #>  [4452,]   85   99   96 #>  [4453,]   86   97   95 #>  [4454,]   85   99   96 #>  [4455,]   86   97   95 #>  [4456,]   86   97   95 #>  [4457,]   85   99   96 #>  [4458,]   86   97   95 #>  [4459,]   86   97   95 #>  [4460,]   86   97   95 #>  [4461,]   86   97   95 #>  [4462,]   85   99   96 #>  [4463,]   86   97   95 #>  [4464,]   86   97   95 #>  [4465,]   85   99   96 #>  [4466,]   86   97   95 #>  [4467,]   85   98   96 #>  [4468,]   86   97   95 #>  [4469,]   86   97   95 #>  [4470,]   85   99   96 #>  [4471,]   86   97   95 #>  [4472,]   85   99   96 #>  [4473,]   85   99   96 #>  [4474,]   85   99   96 #>  [4475,]   86   97   95 #>  [4476,]   85   99   96 #>  [4477,]   86   97   95 #>  [4478,]   86   97   95 #>  [4479,]   85   99   96 #>  [4480,]   86   97   95 #>  [4481,]   86   97   95 #>  [4482,]   85   99   96 #>  [4483,]   86   97   95 #>  [4484,]   86   97   95 #>  [4485,]   86   97   95 #>  [4486,]   86   97   95 #>  [4487,]   86   97   95 #>  [4488,]   86   97   95 #>  [4489,]   85   99   96 #>  [4490,]   86   97   95 #>  [4491,]   85   98   96 #>  [4492,]   86   97   95 #>  [4493,]   86   97   95 #>  [4494,]   85   99   96 #>  [4495,]   86   97   95 #>  [4496,]   86   97   95 #>  [4497,]   86   97   95 #>  [4498,]   85   99   96 #>  [4499,]   86   97   95 #>  [4500,]   86   97   95 #>  [4501,]   88  101   98 #>  [4502,]   87  100   97 #>  [4503,]   87  100   97 #>  [4504,]   88  101   98 #>  [4505,]   88  101   98 #>  [4506,]   88  101   98 #>  [4507,]   87  100   97 #>  [4508,]   88  101   98 #>  [4509,]   88  101   98 #>  [4510,]   88  101   98 #>  [4511,]   88  101   98 #>  [4512,]   88  101   98 #>  [4513,]   87  100   97 #>  [4514,]   88  101   98 #>  [4515,]   88  101   98 #>  [4516,]   87  100   97 #>  [4517,]   88  101   98 #>  [4518,]   87  100   97 #>  [4519,]   87  100   97 #>  [4520,]   88  101   98 #>  [4521,]   87  100   97 #>  [4522,]   88  101   98 #>  [4523,]   87  100   97 #>  [4524,]   87  100   97 #>  [4525,]   88  101   98 #>  [4526,]   88  101   98 #>  [4527,]   88  101   98 #>  [4528,]   88  101   98 #>  [4529,]   88  101   98 #>  [4530,]   87  100   97 #>  [4531,]   87  100   97 #>  [4532,]   88  101   98 #>  [4533,]   88  101   98 #>  [4534,]   87  100   97 #>  [4535,]   87  100   97 #>  [4536,]   87  100   97 #>  [4537,]   87  100   97 #>  [4538,]   88  101   98 #>  [4539,]   87  100   97 #>  [4540,]   87  100   97 #>  [4541,]   88  101   98 #>  [4542,]   88  101   98 #>  [4543,]   88  101   98 #>  [4544,]   87  100   97 #>  [4545,]   88  101   98 #>  [4546,]   88  101   98 #>  [4547,]   87  100   97 #>  [4548,]   88  101   98 #>  [4549,]   87  100   97 #>  [4550,]   88  101   98 #>  [4551,]   88  101   98 #>  [4552,]   88  101   98 #>  [4553,]   88  101   98 #>  [4554,]   87  100   97 #>  [4555,]   88  101   98 #>  [4556,]   88  101   98 #>  [4557,]   88  101   98 #>  [4558,]   88  101   98 #>  [4559,]   88  101   98 #>  [4560,]   88  101   98 #>  [4561,]   88  101   98 #>  [4562,]   87  100   97 #>  [4563,]   88  101   98 #>  [4564,]   88  101   98 #>  [4565,]   88  101   98 #>  [4566,]   88  101   98 #>  [4567,]   88  101   98 #>  [4568,]   88  101   98 #>  [4569,]   88  101   98 #>  [4570,]   87  100   97 #>  [4571,]   88  101   98 #>  [4572,]   88  101   98 #>  [4573,]   88  101   98 #>  [4574,]   88  101   98 #>  [4575,]   88  101   98 #>  [4576,]   88  101   98 #>  [4577,]   87  100   97 #>  [4578,]   88  101   98 #>  [4579,]   87  100   97 #>  [4580,]   87  100   97 #>  [4581,]   88  101   98 #>  [4582,]   88  101   98 #>  [4583,]   87  100   97 #>  [4584,]   88  101   98 #>  [4585,]   88  101   98 #>  [4586,]   88  101   98 #>  [4587,]   88  101   98 #>  [4588,]   88  101   98 #>  [4589,]   88  101   98 #>  [4590,]   88  101   98 #>  [4591,]   88  101   98 #>  [4592,]   88  101   98 #>  [4593,]   87  100   97 #>  [4594,]   88  101   98 #>  [4595,]   87  100   97 #>  [4596,]   88  101   98 #>  [4597,]   88  101   98 #>  [4598,]   87  100   97 #>  [4599,]   88  101   98 #>  [4600,]   87  100   97 #>  [4601,]   89  102  101 #>  [4602,]   89  102  101 #>  [4603,]   89  102  100 #>  [4604,]   90  103   99 #>  [4605,]   89  102  100 #>  [4606,]   89  102  101 #>  [4607,]   90  103   99 #>  [4608,]   89  102  100 #>  [4609,]   89  102  101 #>  [4610,]   90  103   99 #>  [4611,]   89  102  101 #>  [4612,]   89  102  101 #>  [4613,]   89  102  100 #>  [4614,]   89  102  101 #>  [4615,]   89  102  101 #>  [4616,]   90  103   99 #>  [4617,]   89  102  100 #>  [4618,]   89  102  101 #>  [4619,]   89  102  101 #>  [4620,]   90  103   99 #>  [4621,]   89  102  101 #>  [4622,]   89  102  100 #>  [4623,]   89  102  101 #>  [4624,]   90  103   99 #>  [4625,]   90  103   99 #>  [4626,]   89  102  101 #>  [4627,]   89  102  101 #>  [4628,]   90  103   99 #>  [4629,]   89  102  100 #>  [4630,]   89  102  101 #>  [4631,]   89  102  101 #>  [4632,]   89  102  101 #>  [4633,]   89  102  101 #>  [4634,]   89  102  101 #>  [4635,]   89  102  101 #>  [4636,]   90  103   99 #>  [4637,]   89  102  101 #>  [4638,]   89  102  101 #>  [4639,]   90  103   99 #>  [4640,]   89  102  100 #>  [4641,]   89  102  101 #>  [4642,]   89  102  101 #>  [4643,]   89  102  100 #>  [4644,]   89  102  100 #>  [4645,]   89  102  100 #>  [4646,]   89  102  100 #>  [4647,]   89  102  100 #>  [4648,]   89  102  101 #>  [4649,]   89  102  100 #>  [4650,]   90  103   99 #>  [4651,]   89  102  100 #>  [4652,]   90  103   99 #>  [4653,]   89  102  100 #>  [4654,]   90  103   99 #>  [4655,]   89  102  100 #>  [4656,]   89  102  100 #>  [4657,]   90  103   99 #>  [4658,]   89  102  101 #>  [4659,]   89  102  100 #>  [4660,]   89  102  101 #>  [4661,]   89  102  101 #>  [4662,]   89  102  101 #>  [4663,]   89  102  100 #>  [4664,]   89  102  101 #>  [4665,]   89  102  100 #>  [4666,]   89  102  100 #>  [4667,]   89  102  101 #>  [4668,]   89  102  101 #>  [4669,]   89  102  101 #>  [4670,]   89  102  100 #>  [4671,]   89  102  100 #>  [4672,]   89  102  100 #>  [4673,]   90  103   99 #>  [4674,]   89  102  101 #>  [4675,]   89  102  101 #>  [4676,]   90  103   99 #>  [4677,]   89  102  100 #>  [4678,]   89  102  100 #>  [4679,]   89  102  100 #>  [4680,]   89  102  101 #>  [4681,]   89  102  100 #>  [4682,]   89  102  101 #>  [4683,]   89  102  100 #>  [4684,]   89  102  100 #>  [4685,]   89  102  101 #>  [4686,]   90  103   99 #>  [4687,]   89  102  101 #>  [4688,]   89  102  101 #>  [4689,]   89  102  100 #>  [4690,]   89  102  100 #>  [4691,]   90  103   99 #>  [4692,]   89  102  101 #>  [4693,]   89  102  101 #>  [4694,]   89  102  100 #>  [4695,]   89  102  101 #>  [4696,]   89  102  101 #>  [4697,]   89  102  101 #>  [4698,]   89  102  100 #>  [4699,]   89  102  101 #>  [4700,]   89  102  100 #>  [4701,]   92  105  102 #>  [4702,]   92  105  102 #>  [4703,]   91  104  103 #>  [4704,]   91  104  103 #>  [4705,]   91  104  103 #>  [4706,]   92  105  102 #>  [4707,]   92  105  102 #>  [4708,]   91  104  103 #>  [4709,]   91  104  103 #>  [4710,]   91  104  103 #>  [4711,]   92  105  102 #>  [4712,]   92  105  102 #>  [4713,]   92  105  102 #>  [4714,]   92  105  102 #>  [4715,]   92  105  102 #>  [4716,]   92  105  102 #>  [4717,]   92  105  102 #>  [4718,]   91  104  103 #>  [4719,]   92  105  102 #>  [4720,]   91  104  103 #>  [4721,]   92  105  102 #>  [4722,]   92  105  102 #>  [4723,]   91  104  103 #>  [4724,]   91  104  103 #>  [4725,]   92  105  102 #>  [4726,]   92  105  102 #>  [4727,]   92  105  102 #>  [4728,]   92  105  102 #>  [4729,]   92  105  102 #>  [4730,]   91  104  103 #>  [4731,]   91  104  103 #>  [4732,]   91  104  103 #>  [4733,]   92  105  102 #>  [4734,]   91  104  103 #>  [4735,]   92  105  102 #>  [4736,]   92  105  102 #>  [4737,]   92  105  102 #>  [4738,]   92  105  102 #>  [4739,]   91  104  103 #>  [4740,]   92  105  102 #>  [4741,]   92  105  102 #>  [4742,]   91  104  103 #>  [4743,]   91  104  103 #>  [4744,]   92  105  102 #>  [4745,]   91  104  103 #>  [4746,]   92  105  102 #>  [4747,]   92  105  102 #>  [4748,]   91  104  103 #>  [4749,]   91  104  103 #>  [4750,]   92  105  102 #>  [4751,]   91  104  103 #>  [4752,]   92  105  102 #>  [4753,]   91  104  103 #>  [4754,]   92  105  102 #>  [4755,]   92  105  102 #>  [4756,]   91  104  103 #>  [4757,]   92  105  102 #>  [4758,]   92  105  102 #>  [4759,]   92  105  102 #>  [4760,]   91  104  103 #>  [4761,]   92  105  102 #>  [4762,]   91  104  103 #>  [4763,]   92  105  102 #>  [4764,]   91  104  103 #>  [4765,]   91  104  103 #>  [4766,]   91  104  103 #>  [4767,]   91  104  103 #>  [4768,]   92  105  102 #>  [4769,]   92  105  102 #>  [4770,]   92  105  102 #>  [4771,]   92  105  102 #>  [4772,]   91  104  103 #>  [4773,]   92  105  102 #>  [4774,]   92  105  102 #>  [4775,]   92  105  102 #>  [4776,]   92  105  102 #>  [4777,]   92  105  102 #>  [4778,]   91  104  103 #>  [4779,]   92  105  102 #>  [4780,]   92  105  102 #>  [4781,]   92  105  102 #>  [4782,]   92  105  102 #>  [4783,]   92  105  102 #>  [4784,]   92  105  102 #>  [4785,]   91  104  103 #>  [4786,]   92  105  102 #>  [4787,]   92  105  102 #>  [4788,]   91  104  103 #>  [4789,]   91  104  103 #>  [4790,]   92  105  102 #>  [4791,]   91  104  103 #>  [4792,]   92  105  102 #>  [4793,]   92  105  102 #>  [4794,]   92  105  102 #>  [4795,]   91  104  103 #>  [4796,]   92  105  102 #>  [4797,]   92  105  102 #>  [4798,]   92  105  102 #>  [4799,]   92  105  102 #>  [4800,]   92  105  102 #>  [4801,]   95  107  105 #>  [4802,]   93  106  104 #>  [4803,]   94  107  105 #>  [4804,]   93  106  104 #>  [4805,]   93  106  104 #>  [4806,]   95  107  105 #>  [4807,]   93  106  104 #>  [4808,]   93  106  104 #>  [4809,]   93  106  104 #>  [4810,]   93  106  104 #>  [4811,]   95  107  105 #>  [4812,]   93  106  104 #>  [4813,]   93  106  104 #>  [4814,]   93  106  104 #>  [4815,]   93  106  104 #>  [4816,]   95  107  105 #>  [4817,]   93  106  104 #>  [4818,]   93  106  104 #>  [4819,]   95  107  105 #>  [4820,]   93  106  104 #>  [4821,]   93  106  104 #>  [4822,]   93  106  104 #>  [4823,]   93  106  104 #>  [4824,]   93  106  104 #>  [4825,]   93  106  104 #>  [4826,]   93  106  104 #>  [4827,]   93  106  104 #>  [4828,]   95  107  105 #>  [4829,]   93  106  104 #>  [4830,]   93  106  104 #>  [4831,]   93  106  104 #>  [4832,]   93  106  104 #>  [4833,]   93  106  104 #>  [4834,]   95  107  105 #>  [4835,]   95  107  105 #>  [4836,]   93  106  104 #>  [4837,]   95  107  105 #>  [4838,]   95  107  105 #>  [4839,]   93  106  104 #>  [4840,]   93  106  104 #>  [4841,]   93  106  104 #>  [4842,]   95  107  105 #>  [4843,]   93  106  104 #>  [4844,]   93  106  104 #>  [4845,]   95  107  105 #>  [4846,]   93  106  104 #>  [4847,]   93  106  104 #>  [4848,]   93  106  104 #>  [4849,]   95  107  105 #>  [4850,]   93  106  104 #>  [4851,]   93  106  104 #>  [4852,]   94  107  105 #>  [4853,]   93  106  104 #>  [4854,]   93  106  104 #>  [4855,]   93  106  104 #>  [4856,]   93  106  104 #>  [4857,]   93  106  104 #>  [4858,]   93  106  104 #>  [4859,]   93  106  104 #>  [4860,]   93  106  104 #>  [4861,]   93  106  104 #>  [4862,]   93  106  104 #>  [4863,]   93  106  104 #>  [4864,]   95  107  105 #>  [4865,]   93  106  104 #>  [4866,]   93  106  104 #>  [4867,]   93  106  104 #>  [4868,]   94  107  105 #>  [4869,]   93  106  104 #>  [4870,]   93  106  104 #>  [4871,]   93  106  104 #>  [4872,]   95  107  105 #>  [4873,]   95  107  105 #>  [4874,]   93  106  104 #>  [4875,]   93  106  104 #>  [4876,]   93  106  104 #>  [4877,]   95  107  105 #>  [4878,]   93  106  104 #>  [4879,]   93  106  104 #>  [4880,]   93  106  104 #>  [4881,]   93  106  104 #>  [4882,]   93  106  104 #>  [4883,]   93  106  104 #>  [4884,]   93  106  104 #>  [4885,]   93  106  104 #>  [4886,]   93  106  104 #>  [4887,]   93  106  104 #>  [4888,]   93  106  104 #>  [4889,]   93  106  104 #>  [4890,]   93  106  104 #>  [4891,]   93  106  104 #>  [4892,]   93  106  104 #>  [4893,]   93  106  104 #>  [4894,]   95  107  105 #>  [4895,]   93  106  104 #>  [4896,]   94  107  105 #>  [4897,]   94  107  105 #>  [4898,]   93  106  104 #>  [4899,]   93  106  104 #>  [4900,]   95  107  105 #>  [4901,]   96  110  107 #>  [4902,]   96  109  107 #>  [4903,]   96  109  107 #>  [4904,]   97  108  106 #>  [4905,]   96  109  107 #>  [4906,]   96  109  107 #>  [4907,]   96  110  107 #>  [4908,]   96  110  107 #>  [4909,]   96  110  107 #>  [4910,]   97  108  106 #>  [4911,]   96  109  107 #>  [4912,]   96  109  107 #>  [4913,]   96  110  107 #>  [4914,]   96  109  107 #>  [4915,]   96  110  107 #>  [4916,]   96  110  107 #>  [4917,]   96  110  107 #>  [4918,]   97  108  106 #>  [4919,]   96  109  107 #>  [4920,]   96  109  107 #>  [4921,]   96  110  107 #>  [4922,]   96  109  107 #>  [4923,]   96  110  107 #>  [4924,]   96  109  107 #>  [4925,]   97  108  106 #>  [4926,]   96  109  107 #>  [4927,]   96  110  107 #>  [4928,]   96  110  107 #>  [4929,]   96  109  107 #>  [4930,]   96  109  107 #>  [4931,]   96  109  107 #>  [4932,]   96  109  107 #>  [4933,]   96  109  107 #>  [4934,]   96  109  107 #>  [4935,]   96  109  107 #>  [4936,]   96  109  107 #>  [4937,]   96  110  107 #>  [4938,]   96  110  107 #>  [4939,]   97  108  106 #>  [4940,]   96  109  107 #>  [4941,]   96  109  107 #>  [4942,]   96  109  107 #>  [4943,]   97  108  106 #>  [4944,]   96  110  107 #>  [4945,]   97  108  106 #>  [4946,]   96  110  107 #>  [4947,]   96  110  107 #>  [4948,]   96  109  107 #>  [4949,]   96  109  107 #>  [4950,]   96  109  107 #>  [4951,]   96  109  107 #>  [4952,]   96  109  107 #>  [4953,]   96  110  107 #>  [4954,]   96  109  107 #>  [4955,]   96  109  107 #>  [4956,]   96  110  107 #>  [4957,]   96  109  107 #>  [4958,]   96  109  107 #>  [4959,]   96  109  107 #>  [4960,]   96  109  107 #>  [4961,]   96  110  107 #>  [4962,]   96  109  107 #>  [4963,]   96  109  107 #>  [4964,]   96  110  107 #>  [4965,]   96  109  107 #>  [4966,]   96  109  107 #>  [4967,]   96  109  107 #>  [4968,]   96  109  107 #>  [4969,]   96  109  107 #>  [4970,]   96  110  107 #>  [4971,]   96  110  107 #>  [4972,]   96  110  107 #>  [4973,]   97  108  106 #>  [4974,]   97  108  106 #>  [4975,]   97  108  106 #>  [4976,]   97  108  106 #>  [4977,]   97  108  106 #>  [4978,]   96  109  107 #>  [4979,]   96  110  107 #>  [4980,]   96  109  107 #>  [4981,]   96  109  107 #>  [4982,]   96  110  107 #>  [4983,]   96  109  107 #>  [4984,]   96  110  107 #>  [4985,]   96  109  107 #>  [4986,]   96  110  107 #>  [4987,]   96  110  107 #>  [4988,]   96  110  107 #>  [4989,]   96  109  107 #>  [4990,]   96  110  107 #>  [4991,]   96  109  107 #>  [4992,]   96  109  107 #>  [4993,]   96  109  107 #>  [4994,]   96  110  107 #>  [4995,]   96  110  107 #>  [4996,]   96  110  107 #>  [4997,]   96  109  107 #>  [4998,]   96  109  107 #>  [4999,]   96  109  107 #>  [5000,]   96  110  107 #>  [5001,]   98  111  110 #>  [5002,]   99  112  109 #>  [5003,]   98  111  110 #>  [5004,]   98  111  110 #>  [5005,]   99  112  108 #>  [5006,]   98  111  110 #>  [5007,]   99  112  108 #>  [5008,]   98  111  110 #>  [5009,]   99  112  108 #>  [5010,]   99  112  108 #>  [5011,]   98  111  110 #>  [5012,]   99  112  108 #>  [5013,]   99  112  109 #>  [5014,]   98  111  110 #>  [5015,]   98  111  110 #>  [5016,]   98  111  110 #>  [5017,]   99  112  109 #>  [5018,]   99  112  108 #>  [5019,]   98  111  110 #>  [5020,]   99  112  108 #>  [5021,]   99  112  109 #>  [5022,]   99  112  109 #>  [5023,]   99  112  108 #>  [5024,]   99  112  108 #>  [5025,]   98  111  110 #>  [5026,]   98  111  110 #>  [5027,]   99  112  109 #>  [5028,]   98  111  110 #>  [5029,]   99  112  109 #>  [5030,]   99  112  108 #>  [5031,]   99  112  108 #>  [5032,]   99  112  108 #>  [5033,]   99  112  109 #>  [5034,]   98  111  110 #>  [5035,]   98  111  110 #>  [5036,]   99  112  108 #>  [5037,]   98  111  110 #>  [5038,]   98  111  110 #>  [5039,]   98  111  110 #>  [5040,]   99  112  108 #>  [5041,]   99  112  109 #>  [5042,]   98  111  110 #>  [5043,]   98  111  110 #>  [5044,]   99  112  109 #>  [5045,]   98  111  110 #>  [5046,]   98  111  110 #>  [5047,]   99  112  109 #>  [5048,]   99  112  108 #>  [5049,]   98  111  110 #>  [5050,]   99  112  109 #>  [5051,]   98  111  110 #>  [5052,]   98  111  110 #>  [5053,]   99  112  108 #>  [5054,]   99  112  108 #>  [5055,]   98  111  110 #>  [5056,]   98  111  110 #>  [5057,]   98  111  110 #>  [5058,]   99  112  109 #>  [5059,]   98  111  110 #>  [5060,]   99  112  108 #>  [5061,]   99  112  109 #>  [5062,]   98  111  110 #>  [5063,]   99  112  108 #>  [5064,]   98  111  110 #>  [5065,]   98  111  110 #>  [5066,]   98  111  110 #>  [5067,]   98  111  110 #>  [5068,]   98  111  110 #>  [5069,]   98  111  110 #>  [5070,]   99  112  109 #>  [5071,]   99  112  109 #>  [5072,]   98  111  110 #>  [5073,]   98  111  110 #>  [5074,]   99  112  108 #>  [5075,]   99  112  108 #>  [5076,]   99  112  109 #>  [5077,]   98  111  110 #>  [5078,]   99  112  108 #>  [5079,]   98  111  110 #>  [5080,]   99  112  108 #>  [5081,]   99  112  109 #>  [5082,]   98  111  110 #>  [5083,]   99  112  109 #>  [5084,]   99  112  108 #>  [5085,]   98  111  110 #>  [5086,]   99  112  109 #>  [5087,]   99  112  108 #>  [5088,]   99  112  108 #>  [5089,]   98  111  110 #>  [5090,]   99  112  109 #>  [5091,]   98  111  110 #>  [5092,]   99  112  108 #>  [5093,]   99  112  109 #>  [5094,]   98  111  110 #>  [5095,]   99  112  108 #>  [5096,]   98  111  110 #>  [5097,]   98  111  110 #>  [5098,]   98  111  110 #>  [5099,]   98  111  110 #>  [5100,]   98  111  110 #>  [5101,]  100  113  111 #>  [5102,]  100  113  111 #>  [5103,]  100  113  111 #>  [5104,]  102  114  111 #>  [5105,]  100  113  111 #>  [5106,]  100  113  111 #>  [5107,]  100  113  111 #>  [5108,]  102  114  111 #>  [5109,]  102  114  111 #>  [5110,]  102  114  111 #>  [5111,]  100  113  111 #>  [5112,]  100  113  111 #>  [5113,]  100  113  111 #>  [5114,]  100  113  111 #>  [5115,]  100  113  111 #>  [5116,]  100  113  111 #>  [5117,]  100  113  111 #>  [5118,]  100  113  111 #>  [5119,]  100  113  111 #>  [5120,]  101  114  111 #>  [5121,]  100  113  111 #>  [5122,]  100  113  111 #>  [5123,]  100  113  111 #>  [5124,]  100  113  111 #>  [5125,]  100  113  111 #>  [5126,]  100  113  111 #>  [5127,]  100  113  111 #>  [5128,]  100  113  111 #>  [5129,]  100  113  111 #>  [5130,]  101  114  111 #>  [5131,]  100  113  111 #>  [5132,]  100  113  111 #>  [5133,]  100  113  111 #>  [5134,]  100  113  111 #>  [5135,]  100  113  111 #>  [5136,]  100  113  111 #>  [5137,]  100  113  111 #>  [5138,]  100  113  111 #>  [5139,]  100  113  111 #>  [5140,]  100  113  111 #>  [5141,]  100  113  111 #>  [5142,]  100  113  111 #>  [5143,]  102  114  111 #>  [5144,]  100  113  111 #>  [5145,]  100  113  111 #>  [5146,]  100  113  111 #>  [5147,]  100  113  111 #>  [5148,]  100  113  111 #>  [5149,]  100  113  111 #>  [5150,]  100  113  111 #>  [5151,]  101  114  111 #>  [5152,]  100  113  111 #>  [5153,]  100  113  111 #>  [5154,]  100  113  111 #>  [5155,]  100  113  111 #>  [5156,]  102  114  111 #>  [5157,]  100  113  111 #>  [5158,]  100  113  111 #>  [5159,]  100  113  111 #>  [5160,]  101  114  111 #>  [5161,]  100  113  111 #>  [5162,]  100  113  111 #>  [5163,]  100  113  111 #>  [5164,]  102  114  111 #>  [5165,]  100  113  111 #>  [5166,]  100  113  111 #>  [5167,]  101  114  111 #>  [5168,]  100  113  111 #>  [5169,]  100  113  111 #>  [5170,]  100  113  111 #>  [5171,]  100  113  111 #>  [5172,]  100  113  111 #>  [5173,]  100  113  111 #>  [5174,]  100  113  111 #>  [5175,]  100  113  111 #>  [5176,]  100  113  111 #>  [5177,]  100  113  111 #>  [5178,]  101  114  111 #>  [5179,]  100  113  111 #>  [5180,]  100  113  111 #>  [5181,]  100  113  111 #>  [5182,]  100  113  111 #>  [5183,]  100  113  111 #>  [5184,]  100  113  111 #>  [5185,]  102  114  111 #>  [5186,]  100  113  111 #>  [5187,]  100  113  111 #>  [5188,]  100  113  111 #>  [5189,]  101  114  111 #>  [5190,]  100  113  111 #>  [5191,]  101  114  111 #>  [5192,]  100  113  111 #>  [5193,]  100  113  111 #>  [5194,]  100  113  111 #>  [5195,]  102  114  111 #>  [5196,]  100  113  111 #>  [5197,]  100  113  111 #>  [5198,]  100  113  111 #>  [5199,]  100  113  111 #>  [5200,]  100  113  111 #>  [5201,]  103  115  112 #>  [5202,]  103  115  112 #>  [5203,]  103  115  112 #>  [5204,]  104  116  113 #>  [5205,]  103  115  112 #>  [5206,]  103  115  112 #>  [5207,]  104  116  113 #>  [5208,]  103  115  112 #>  [5209,]  103  115  112 #>  [5210,]  104  116  113 #>  [5211,]  103  115  112 #>  [5212,]  103  115  112 #>  [5213,]  103  115  112 #>  [5214,]  103  115  112 #>  [5215,]  104  116  113 #>  [5216,]  104  116  113 #>  [5217,]  103  115  112 #>  [5218,]  104  116  113 #>  [5219,]  103  115  112 #>  [5220,]  103  115  112 #>  [5221,]  104  116  113 #>  [5222,]  103  115  112 #>  [5223,]  104  116  113 #>  [5224,]  103  115  112 #>  [5225,]  104  116  113 #>  [5226,]  103  115  112 #>  [5227,]  104  116  113 #>  [5228,]  103  115  112 #>  [5229,]  103  115  112 #>  [5230,]  103  115  112 #>  [5231,]  103  115  112 #>  [5232,]  103  115  112 #>  [5233,]  103  115  112 #>  [5234,]  103  115  112 #>  [5235,]  103  115  112 #>  [5236,]  103  115  112 #>  [5237,]  103  115  112 #>  [5238,]  103  115  112 #>  [5239,]  104  116  113 #>  [5240,]  103  115  112 #>  [5241,]  103  115  112 #>  [5242,]  103  115  112 #>  [5243,]  104  116  113 #>  [5244,]  103  115  112 #>  [5245,]  104  116  113 #>  [5246,]  103  115  112 #>  [5247,]  104  116  113 #>  [5248,]  103  115  112 #>  [5249,]  103  115  112 #>  [5250,]  103  115  112 #>  [5251,]  103  115  112 #>  [5252,]  103  115  112 #>  [5253,]  104  116  113 #>  [5254,]  103  115  112 #>  [5255,]  103  115  112 #>  [5256,]  103  115  112 #>  [5257,]  103  115  112 #>  [5258,]  103  115  112 #>  [5259,]  103  115  112 #>  [5260,]  103  115  112 #>  [5261,]  104  116  113 #>  [5262,]  103  115  112 #>  [5263,]  103  115  112 #>  [5264,]  103  115  112 #>  [5265,]  103  115  112 #>  [5266,]  103  115  112 #>  [5267,]  103  115  112 #>  [5268,]  103  115  112 #>  [5269,]  103  115  112 #>  [5270,]  103  115  112 #>  [5271,]  104  116  113 #>  [5272,]  104  116  113 #>  [5273,]  104  116  113 #>  [5274,]  104  116  113 #>  [5275,]  104  116  113 #>  [5276,]  104  116  113 #>  [5277,]  104  116  113 #>  [5278,]  103  115  112 #>  [5279,]  103  115  112 #>  [5280,]  103  115  112 #>  [5281,]  103  115  112 #>  [5282,]  103  115  112 #>  [5283,]  103  115  112 #>  [5284,]  104  116  113 #>  [5285,]  103  115  112 #>  [5286,]  103  115  112 #>  [5287,]  103  115  112 #>  [5288,]  103  115  112 #>  [5289,]  103  115  112 #>  [5290,]  103  115  112 #>  [5291,]  103  115  112 #>  [5292,]  103  115  112 #>  [5293,]  103  115  112 #>  [5294,]  104  116  113 #>  [5295,]  104  116  113 #>  [5296,]  103  115  112 #>  [5297,]  103  115  112 #>  [5298,]  103  115  112 #>  [5299,]  103  115  112 #>  [5300,]  104  116  113 #>  [5301,]  107  119  115 #>  [5302,]  107  119  115 #>  [5303,]  106  118  115 #>  [5304,]  105  117  114 #>  [5305,]  106  118  115 #>  [5306,]  105  117  114 #>  [5307,]  107  119  115 #>  [5308,]  107  119  115 #>  [5309,]  105  117  114 #>  [5310,]  105  117  114 #>  [5311,]  105  117  114 #>  [5312,]  105  117  114 #>  [5313,]  107  119  115 #>  [5314,]  105  117  114 #>  [5315,]  105  117  114 #>  [5316,]  107  119  115 #>  [5317,]  107  119  115 #>  [5318,]  105  117  114 #>  [5319,]  105  117  114 #>  [5320,]  106  118  115 #>  [5321,]  105  117  114 #>  [5322,]  106  118  115 #>  [5323,]  105  117  114 #>  [5324,]  106  118  115 #>  [5325,]  107  119  115 #>  [5326,]  105  117  114 #>  [5327,]  105  117  114 #>  [5328,]  107  119  115 #>  [5329,]  106  118  115 #>  [5330,]  105  117  114 #>  [5331,]  105  117  114 #>  [5332,]  105  117  114 #>  [5333,]  105  117  114 #>  [5334,]  105  117  114 #>  [5335,]  106  118  115 #>  [5336,]  105  117  114 #>  [5337,]  107  119  115 #>  [5338,]  105  117  114 #>  [5339,]  107  119  115 #>  [5340,]  106  118  115 #>  [5341,]  105  117  114 #>  [5342,]  105  117  114 #>  [5343,]  107  119  115 #>  [5344,]  107  119  115 #>  [5345,]  107  119  115 #>  [5346,]  107  119  115 #>  [5347,]  107  119  115 #>  [5348,]  105  117  114 #>  [5349,]  107  119  115 #>  [5350,]  107  119  115 #>  [5351,]  106  118  115 #>  [5352,]  105  117  114 #>  [5353,]  107  119  115 #>  [5354,]  106  118  115 #>  [5355,]  106  118  115 #>  [5356,]  107  119  115 #>  [5357,]  106  118  115 #>  [5358,]  105  117  114 #>  [5359,]  107  119  115 #>  [5360,]  105  117  114 #>  [5361,]  105  117  114 #>  [5362,]  105  117  114 #>  [5363,]  106  118  115 #>  [5364,]  105  117  114 #>  [5365,]  106  118  115 #>  [5366,]  106  118  115 #>  [5367,]  105  117  114 #>  [5368,]  105  117  114 #>  [5369,]  105  117  114 #>  [5370,]  107  119  115 #>  [5371,]  107  119  115 #>  [5372,]  107  119  115 #>  [5373,]  105  117  114 #>  [5374,]  105  117  114 #>  [5375,]  105  117  114 #>  [5376,]  107  119  115 #>  [5377,]  107  119  115 #>  [5378,]  106  118  115 #>  [5379,]  107  119  115 #>  [5380,]  105  117  114 #>  [5381,]  106  118  115 #>  [5382,]  105  117  114 #>  [5383,]  106  118  115 #>  [5384,]  107  119  115 #>  [5385,]  105  117  114 #>  [5386,]  107  119  115 #>  [5387,]  107  119  115 #>  [5388,]  107  119  115 #>  [5389,]  106  118  115 #>  [5390,]  107  119  115 #>  [5391,]  106  118  115 #>  [5392,]  105  117  114 #>  [5393,]  105  117  114 #>  [5394,]  107  119  115 #>  [5395,]  107  119  115 #>  [5396,]  105  117  114 #>  [5397,]  105  117  114 #>  [5398,]  106  118  115 #>  [5399,]  105  117  114 #>  [5400,]  107  119  115 #>  [5401,]  109  121  117 #>  [5402,]  109  121  117 #>  [5403,]  108  120  116 #>  [5404,]  108  120  116 #>  [5405,]  108  120  116 #>  [5406,]  108  120  116 #>  [5407,]  109  121  117 #>  [5408,]  109  121  117 #>  [5409,]  108  120  116 #>  [5410,]  108  120  116 #>  [5411,]  108  120  116 #>  [5412,]  109  121  117 #>  [5413,]  109  121  117 #>  [5414,]  108  120  116 #>  [5415,]  109  121  117 #>  [5416,]  109  121  117 #>  [5417,]  109  121  117 #>  [5418,]  109  121  117 #>  [5419,]  109  121  117 #>  [5420,]  109  121  117 #>  [5421,]  108  120  116 #>  [5422,]  109  121  117 #>  [5423,]  109  121  117 #>  [5424,]  108  120  116 #>  [5425,]  108  120  116 #>  [5426,]  109  121  117 #>  [5427,]  109  121  117 #>  [5428,]  108  120  116 #>  [5429,]  109  121  117 #>  [5430,]  109  121  117 #>  [5431,]  108  120  116 #>  [5432,]  108  120  116 #>  [5433,]  109  121  117 #>  [5434,]  108  120  116 #>  [5435,]  108  120  116 #>  [5436,]  109  121  117 #>  [5437,]  109  121  117 #>  [5438,]  109  121  117 #>  [5439,]  108  120  116 #>  [5440,]  108  120  116 #>  [5441,]  109  121  117 #>  [5442,]  108  120  116 #>  [5443,]  109  121  117 #>  [5444,]  109  121  117 #>  [5445,]  109  121  117 #>  [5446,]  109  121  117 #>  [5447,]  108  120  116 #>  [5448,]  108  120  116 #>  [5449,]  109  121  117 #>  [5450,]  109  121  117 #>  [5451,]  109  121  117 #>  [5452,]  108  120  116 #>  [5453,]  109  121  117 #>  [5454,]  108  120  116 #>  [5455,]  109  121  117 #>  [5456,]  109  121  117 #>  [5457,]  108  120  116 #>  [5458,]  109  121  117 #>  [5459,]  109  121  117 #>  [5460,]  109  121  117 #>  [5461,]  109  121  117 #>  [5462,]  108  120  116 #>  [5463,]  109  121  117 #>  [5464,]  109  121  117 #>  [5465,]  108  120  116 #>  [5466,]  109  121  117 #>  [5467,]  108  120  116 #>  [5468,]  109  121  117 #>  [5469,]  109  121  117 #>  [5470,]  108  120  116 #>  [5471,]  109  121  117 #>  [5472,]  108  120  116 #>  [5473,]  108  120  116 #>  [5474,]  108  120  116 #>  [5475,]  109  121  117 #>  [5476,]  108  120  116 #>  [5477,]  109  121  117 #>  [5478,]  109  121  117 #>  [5479,]  108  120  116 #>  [5480,]  109  121  117 #>  [5481,]  109  121  117 #>  [5482,]  108  120  116 #>  [5483,]  109  121  117 #>  [5484,]  109  121  117 #>  [5485,]  109  121  117 #>  [5486,]  108  120  116 #>  [5487,]  109  121  117 #>  [5488,]  108  120  116 #>  [5489,]  108  120  116 #>  [5490,]  109  121  117 #>  [5491,]  108  120  116 #>  [5492,]  108  120  116 #>  [5493,]  109  121  117 #>  [5494,]  108  120  116 #>  [5495,]  109  121  117 #>  [5496,]  109  121  117 #>  [5497,]  109  121  117 #>  [5498,]  108  120  116 #>  [5499,]  109  121  117 #>  [5500,]  109  121  117 #>  [5501,]  110  122  118 #>  [5502,]  110  122  118 #>  [5503,]  110  122  118 #>  [5504,]  110  122  118 #>  [5505,]  110  122  118 #>  [5506,]  110  122  118 #>  [5507,]  110  122  118 #>  [5508,]  111  123  119 #>  [5509,]  110  122  118 #>  [5510,]  110  122  118 #>  [5511,]  110  122  118 #>  [5512,]  110  122  118 #>  [5513,]  111  123  119 #>  [5514,]  110  122  118 #>  [5515,]  111  123  119 #>  [5516,]  110  122  118 #>  [5517,]  110  122  118 #>  [5518,]  110  122  118 #>  [5519,]  111  123  119 #>  [5520,]  111  123  119 #>  [5521,]  110  122  118 #>  [5522,]  111  123  119 #>  [5523,]  110  122  118 #>  [5524,]  110  122  118 #>  [5525,]  110  122  118 #>  [5526,]  110  122  118 #>  [5527,]  111  123  119 #>  [5528,]  110  122  118 #>  [5529,]  111  123  119 #>  [5530,]  110  122  118 #>  [5531,]  110  122  118 #>  [5532,]  110  122  118 #>  [5533,]  110  122  118 #>  [5534,]  110  122  118 #>  [5535,]  110  122  118 #>  [5536,]  111  123  119 #>  [5537,]  111  123  119 #>  [5538,]  111  123  119 #>  [5539,]  110  122  118 #>  [5540,]  110  122  118 #>  [5541,]  111  123  119 #>  [5542,]  110  122  118 #>  [5543,]  110  122  118 #>  [5544,]  110  122  118 #>  [5545,]  110  122  118 #>  [5546,]  111  123  119 #>  [5547,]  110  122  118 #>  [5548,]  110  122  118 #>  [5549,]  110  122  118 #>  [5550,]  111  123  119 #>  [5551,]  111  123  119 #>  [5552,]  110  122  118 #>  [5553,]  111  123  119 #>  [5554,]  110  122  118 #>  [5555,]  111  123  119 #>  [5556,]  110  122  118 #>  [5557,]  110  122  118 #>  [5558,]  111  123  119 #>  [5559,]  111  123  119 #>  [5560,]  111  123  119 #>  [5561,]  110  122  118 #>  [5562,]  110  122  118 #>  [5563,]  110  122  118 #>  [5564,]  111  123  119 #>  [5565,]  110  122  118 #>  [5566,]  111  123  119 #>  [5567,]  110  122  118 #>  [5568,]  110  122  118 #>  [5569,]  111  123  119 #>  [5570,]  110  122  118 #>  [5571,]  111  123  119 #>  [5572,]  110  122  118 #>  [5573,]  110  122  118 #>  [5574,]  110  122  118 #>  [5575,]  110  122  118 #>  [5576,]  110  122  118 #>  [5577,]  111  123  119 #>  [5578,]  110  122  118 #>  [5579,]  110  122  118 #>  [5580,]  111  123  119 #>  [5581,]  111  123  119 #>  [5582,]  110  122  118 #>  [5583,]  111  123  119 #>  [5584,]  111  123  119 #>  [5585,]  111  123  119 #>  [5586,]  110  122  118 #>  [5587,]  111  123  119 #>  [5588,]  110  122  118 #>  [5589,]  110  122  118 #>  [5590,]  111  123  119 #>  [5591,]  110  122  118 #>  [5592,]  110  122  118 #>  [5593,]  110  122  118 #>  [5594,]  110  122  118 #>  [5595,]  111  123  119 #>  [5596,]  111  123  119 #>  [5597,]  111  123  119 #>  [5598,]  110  122  118 #>  [5599,]  110  122  118 #>  [5600,]  111  123  119 #>  [5601,]  113  125  121 #>  [5602,]  112  124  120 #>  [5603,]  112  124  120 #>  [5604,]  113  125  121 #>  [5605,]  112  124  120 #>  [5606,]  112  124  120 #>  [5607,]  113  125  121 #>  [5608,]  113  125  121 #>  [5609,]  113  125  121 #>  [5610,]  113  125  121 #>  [5611,]  112  124  120 #>  [5612,]  112  124  120 #>  [5613,]  113  125  121 #>  [5614,]  112  124  120 #>  [5615,]  113  125  121 #>  [5616,]  113  125  121 #>  [5617,]  113  125  121 #>  [5618,]  113  125  121 #>  [5619,]  112  124  120 #>  [5620,]  112  124  120 #>  [5621,]  113  125  121 #>  [5622,]  112  124  120 #>  [5623,]  113  125  121 #>  [5624,]  112  124  120 #>  [5625,]  113  125  121 #>  [5626,]  112  124  120 #>  [5627,]  113  125  121 #>  [5628,]  113  125  121 #>  [5629,]  112  124  120 #>  [5630,]  112  124  120 #>  [5631,]  112  124  120 #>  [5632,]  112  124  120 #>  [5633,]  112  124  120 #>  [5634,]  112  124  120 #>  [5635,]  112  124  120 #>  [5636,]  112  124  120 #>  [5637,]  113  125  121 #>  [5638,]  113  125  121 #>  [5639,]  113  125  121 #>  [5640,]  112  124  120 #>  [5641,]  112  124  120 #>  [5642,]  112  124  120 #>  [5643,]  113  125  121 #>  [5644,]  113  125  121 #>  [5645,]  113  125  121 #>  [5646,]  113  125  121 #>  [5647,]  113  125  121 #>  [5648,]  112  124  120 #>  [5649,]  112  124  120 #>  [5650,]  112  124  120 #>  [5651,]  112  124  120 #>  [5652,]  112  124  120 #>  [5653,]  113  125  121 #>  [5654,]  112  124  120 #>  [5655,]  112  124  120 #>  [5656,]  113  125  121 #>  [5657,]  112  124  120 #>  [5658,]  112  124  120 #>  [5659,]  112  124  120 #>  [5660,]  112  124  120 #>  [5661,]  113  125  121 #>  [5662,]  112  124  120 #>  [5663,]  112  124  120 #>  [5664,]  113  125  121 #>  [5665,]  112  124  120 #>  [5666,]  112  124  120 #>  [5667,]  112  124  120 #>  [5668,]  112  124  120 #>  [5669,]  112  124  120 #>  [5670,]  113  125  121 #>  [5671,]  113  125  121 #>  [5672,]  113  125  121 #>  [5673,]  113  125  121 #>  [5674,]  113  125  121 #>  [5675,]  113  125  121 #>  [5676,]  113  125  121 #>  [5677,]  113  125  121 #>  [5678,]  112  124  120 #>  [5679,]  113  125  121 #>  [5680,]  112  124  120 #>  [5681,]  112  124  120 #>  [5682,]  113  125  121 #>  [5683,]  112  124  120 #>  [5684,]  113  125  121 #>  [5685,]  112  124  120 #>  [5686,]  113  125  121 #>  [5687,]  113  125  121 #>  [5688,]  113  125  121 #>  [5689,]  112  124  120 #>  [5690,]  113  125  121 #>  [5691,]  112  124  120 #>  [5692,]  112  124  120 #>  [5693,]  112  124  120 #>  [5694,]  113  125  121 #>  [5695,]  113  125  121 #>  [5696,]  113  125  121 #>  [5697,]  112  124  120 #>  [5698,]  112  124  120 #>  [5699,]  112  124  120 #>  [5700,]  113  125  121 #>  [5701,]  115  126  122 #>  [5702,]  114  128  123 #>  [5703,]  115  126  122 #>  [5704,]  115  126  122 #>  [5705,]  115  126  122 #>  [5706,]  114  127  123 #>  [5707,]  115  126  122 #>  [5708,]  115  126  122 #>  [5709,]  115  126  122 #>  [5710,]  115  126  122 #>  [5711,]  115  126  122 #>  [5712,]  114  128  123 #>  [5713,]  115  126  122 #>  [5714,]  115  126  122 #>  [5715,]  114  128  123 #>  [5716,]  115  126  122 #>  [5717,]  114  128  123 #>  [5718,]  115  126  122 #>  [5719,]  115  126  122 #>  [5720,]  115  126  122 #>  [5721,]  115  126  122 #>  [5722,]  115  126  122 #>  [5723,]  114  128  123 #>  [5724,]  115  126  122 #>  [5725,]  115  126  122 #>  [5726,]  115  126  122 #>  [5727,]  115  126  122 #>  [5728,]  115  126  122 #>  [5729,]  114  128  123 #>  [5730,]  115  126  122 #>  [5731,]  114  127  123 #>  [5732,]  115  126  122 #>  [5733,]  115  126  122 #>  [5734,]  114  127  123 #>  [5735,]  115  126  122 #>  [5736,]  115  126  122 #>  [5737,]  114  128  123 #>  [5738,]  115  126  122 #>  [5739,]  115  126  122 #>  [5740,]  115  126  122 #>  [5741,]  115  126  122 #>  [5742,]  114  127  123 #>  [5743,]  114  128  123 #>  [5744,]  114  128  123 #>  [5745,]  115  126  122 #>  [5746,]  115  126  122 #>  [5747,]  114  127  123 #>  [5748,]  114  127  123 #>  [5749,]  115  126  122 #>  [5750,]  115  126  122 #>  [5751,]  115  126  122 #>  [5752,]  115  126  122 #>  [5753,]  115  126  122 #>  [5754,]  115  126  122 #>  [5755,]  115  126  122 #>  [5756,]  115  126  122 #>  [5757,]  115  126  122 #>  [5758,]  115  126  122 #>  [5759,]  115  126  122 #>  [5760,]  115  126  122 #>  [5761,]  115  126  122 #>  [5762,]  115  126  122 #>  [5763,]  114  128  123 #>  [5764,]  114  128  123 #>  [5765,]  115  126  122 #>  [5766,]  115  126  122 #>  [5767,]  115  126  122 #>  [5768,]  115  126  122 #>  [5769,]  115  126  122 #>  [5770,]  114  127  123 #>  [5771,]  115  126  122 #>  [5772,]  115  126  122 #>  [5773,]  115  126  122 #>  [5774,]  115  126  122 #>  [5775,]  114  128  123 #>  [5776,]  115  126  122 #>  [5777,]  115  126  122 #>  [5778,]  114  128  123 #>  [5779,]  114  127  123 #>  [5780,]  115  126  122 #>  [5781,]  114  128  123 #>  [5782,]  115  126  122 #>  [5783,]  115  126  122 #>  [5784,]  115  126  122 #>  [5785,]  115  126  122 #>  [5786,]  115  126  122 #>  [5787,]  115  126  122 #>  [5788,]  115  126  122 #>  [5789,]  115  126  122 #>  [5790,]  115  126  122 #>  [5791,]  115  126  122 #>  [5792,]  114  128  123 #>  [5793,]  115  126  122 #>  [5794,]  114  127  123 #>  [5795,]  114  128  123 #>  [5796,]  115  126  122 #>  [5797,]  115  126  122 #>  [5798,]  115  126  122 #>  [5799,]  115  126  122 #>  [5800,]  114  128  123 #>  [5801,]  117  130  125 #>  [5802,]  116  129  124 #>  [5803,]  117  130  125 #>  [5804,]  117  130  125 #>  [5805,]  117  130  125 #>  [5806,]  116  129  124 #>  [5807,]  117  130  125 #>  [5808,]  117  130  125 #>  [5809,]  117  130  125 #>  [5810,]  117  130  125 #>  [5811,]  116  129  124 #>  [5812,]  116  129  124 #>  [5813,]  117  130  125 #>  [5814,]  117  130  125 #>  [5815,]  116  129  124 #>  [5816,]  117  130  125 #>  [5817,]  116  129  124 #>  [5818,]  117  130  125 #>  [5819,]  116  129  124 #>  [5820,]  117  130  125 #>  [5821,]  117  130  125 #>  [5822,]  117  130  125 #>  [5823,]  116  129  124 #>  [5824,]  117  130  125 #>  [5825,]  117  130  125 #>  [5826,]  116  129  124 #>  [5827,]  117  130  125 #>  [5828,]  117  130  125 #>  [5829,]  116  129  124 #>  [5830,]  116  129  124 #>  [5831,]  116  129  124 #>  [5832,]  117  130  125 #>  [5833,]  117  130  125 #>  [5834,]  116  129  124 #>  [5835,]  116  129  124 #>  [5836,]  117  130  125 #>  [5837,]  116  129  124 #>  [5838,]  117  130  125 #>  [5839,]  117  130  125 #>  [5840,]  117  130  125 #>  [5841,]  117  130  125 #>  [5842,]  116  129  124 #>  [5843,]  116  129  124 #>  [5844,]  116  129  124 #>  [5845,]  117  130  125 #>  [5846,]  116  129  124 #>  [5847,]  116  129  124 #>  [5848,]  116  129  124 #>  [5849,]  117  130  125 #>  [5850,]  117  130  125 #>  [5851,]  117  130  125 #>  [5852,]  117  130  125 #>  [5853,]  117  130  125 #>  [5854,]  117  130  125 #>  [5855,]  117  130  125 #>  [5856,]  116  129  124 #>  [5857,]  117  130  125 #>  [5858,]  117  130  125 #>  [5859,]  117  130  125 #>  [5860,]  116  129  124 #>  [5861,]  116  129  124 #>  [5862,]  117  130  125 #>  [5863,]  116  129  124 #>  [5864,]  116  129  124 #>  [5865,]  116  129  124 #>  [5866,]  116  129  124 #>  [5867,]  117  130  125 #>  [5868,]  116  129  124 #>  [5869,]  117  130  125 #>  [5870,]  116  129  124 #>  [5871,]  117  130  125 #>  [5872,]  117  130  125 #>  [5873,]  117  130  125 #>  [5874,]  117  130  125 #>  [5875,]  116  129  124 #>  [5876,]  117  130  125 #>  [5877,]  117  130  125 #>  [5878,]  116  129  124 #>  [5879,]  116  129  124 #>  [5880,]  117  130  125 #>  [5881,]  116  129  124 #>  [5882,]  117  130  125 #>  [5883,]  117  130  125 #>  [5884,]  117  130  125 #>  [5885,]  117  130  125 #>  [5886,]  117  130  125 #>  [5887,]  117  130  125 #>  [5888,]  117  130  125 #>  [5889,]  117  130  125 #>  [5890,]  117  130  125 #>  [5891,]  117  130  125 #>  [5892,]  116  129  124 #>  [5893,]  116  129  124 #>  [5894,]  116  129  124 #>  [5895,]  116  129  124 #>  [5896,]  116  129  124 #>  [5897,]  117  130  125 #>  [5898,]  117  130  125 #>  [5899,]  117  130  125 #>  [5900,]  116  129  124 #>  [5901,]  120  132  127 #>  [5902,]  118  131  126 #>  [5903,]  119  132  127 #>  [5904,]  119  132  127 #>  [5905,]  119  132  127 #>  [5906,]  120  132  127 #>  [5907,]  120  132  127 #>  [5908,]  119  132  127 #>  [5909,]  118  131  126 #>  [5910,]  118  131  126 #>  [5911,]  120  132  127 #>  [5912,]  118  131  126 #>  [5913,]  120  132  127 #>  [5914,]  120  132  127 #>  [5915,]  120  132  127 #>  [5916,]  120  132  127 #>  [5917,]  118  131  126 #>  [5918,]  119  132  127 #>  [5919,]  120  132  127 #>  [5920,]  119  132  127 #>  [5921,]  118  131  126 #>  [5922,]  120  132  127 #>  [5923,]  119  132  127 #>  [5924,]  119  132  127 #>  [5925,]  120  132  127 #>  [5926,]  120  132  127 #>  [5927,]  120  132  127 #>  [5928,]  120  132  127 #>  [5929,]  118  131  126 #>  [5930,]  119  132  127 #>  [5931,]  119  132  127 #>  [5932,]  119  132  127 #>  [5933,]  118  131  126 #>  [5934,]  119  132  127 #>  [5935,]  120  132  127 #>  [5936,]  119  132  127 #>  [5937,]  120  132  127 #>  [5938,]  119  132  127 #>  [5939,]  119  132  127 #>  [5940,]  120  132  127 #>  [5941,]  120  132  127 #>  [5942,]  119  132  127 #>  [5943,]  119  132  127 #>  [5944,]  120  132  127 #>  [5945,]  119  132  127 #>  [5946,]  120  132  127 #>  [5947,]  120  132  127 #>  [5948,]  119  132  127 #>  [5949,]  119  132  127 #>  [5950,]  120  132  127 #>  [5951,]  119  132  127 #>  [5952,]  120  132  127 #>  [5953,]  118  131  126 #>  [5954,]  120  132  127 #>  [5955,]  120  132  127 #>  [5956,]  119  132  127 #>  [5957,]  120  132  127 #>  [5958,]  120  132  127 #>  [5959,]  120  132  127 #>  [5960,]  118  131  126 #>  [5961,]  120  132  127 #>  [5962,]  119  132  127 #>  [5963,]  118  131  126 #>  [5964,]  119  132  127 #>  [5965,]  119  132  127 #>  [5966,]  119  132  127 #>  [5967,]  119  132  127 #>  [5968,]  120  132  127 #>  [5969,]  120  132  127 #>  [5970,]  118  131  126 #>  [5971,]  120  132  127 #>  [5972,]  119  132  127 #>  [5973,]  120  132  127 #>  [5974,]  120  132  127 #>  [5975,]  120  132  127 #>  [5976,]  120  132  127 #>  [5977,]  120  132  127 #>  [5978,]  119  132  127 #>  [5979,]  120  132  127 #>  [5980,]  118  131  126 #>  [5981,]  118  131  126 #>  [5982,]  120  132  127 #>  [5983,]  120  132  127 #>  [5984,]  120  132  127 #>  [5985,]  119  132  127 #>  [5986,]  118  131  126 #>  [5987,]  120  132  127 #>  [5988,]  119  132  127 #>  [5989,]  119  132  127 #>  [5990,]  120  132  127 #>  [5991,]  119  132  127 #>  [5992,]  120  132  127 #>  [5993,]  120  132  127 #>  [5994,]  120  132  127 #>  [5995,]  119  132  127 #>  [5996,]  120  132  127 #>  [5997,]  120  132  127 #>  [5998,]  120  132  127 #>  [5999,]  120  132  127 #>  [6000,]  120  132  127 #>  [6001,]  122  134  128 #>  [6002,]  121  133  128 #>  [6003,]  122  134  128 #>  [6004,]  122  134  128 #>  [6005,]  122  134  128 #>  [6006,]  121  133  128 #>  [6007,]  122  134  128 #>  [6008,]  122  134  128 #>  [6009,]  122  134  128 #>  [6010,]  122  134  128 #>  [6011,]  121  133  128 #>  [6012,]  121  133  128 #>  [6013,]  122  134  128 #>  [6014,]  122  134  128 #>  [6015,]  121  133  128 #>  [6016,]  122  134  128 #>  [6017,]  121  133  128 #>  [6018,]  122  134  128 #>  [6019,]  122  134  128 #>  [6020,]  122  134  128 #>  [6021,]  122  134  128 #>  [6022,]  122  134  128 #>  [6023,]  121  133  128 #>  [6024,]  122  134  128 #>  [6025,]  122  134  128 #>  [6026,]  122  134  128 #>  [6027,]  122  134  128 #>  [6028,]  122  134  128 #>  [6029,]  121  133  128 #>  [6030,]  121  133  128 #>  [6031,]  121  133  128 #>  [6032,]  122  134  128 #>  [6033,]  122  134  128 #>  [6034,]  121  133  128 #>  [6035,]  121  133  128 #>  [6036,]  122  134  128 #>  [6037,]  121  133  128 #>  [6038,]  122  134  128 #>  [6039,]  122  134  128 #>  [6040,]  122  134  128 #>  [6041,]  122  134  128 #>  [6042,]  121  133  128 #>  [6043,]  121  133  128 #>  [6044,]  121  133  128 #>  [6045,]  122  134  128 #>  [6046,]  122  134  128 #>  [6047,]  121  133  128 #>  [6048,]  121  133  128 #>  [6049,]  122  134  128 #>  [6050,]  122  134  128 #>  [6051,]  122  134  128 #>  [6052,]  122  134  128 #>  [6053,]  122  134  128 #>  [6054,]  122  134  128 #>  [6055,]  122  134  128 #>  [6056,]  121  133  128 #>  [6057,]  122  134  128 #>  [6058,]  122  134  128 #>  [6059,]  122  134  128 #>  [6060,]  121  133  128 #>  [6061,]  121  133  128 #>  [6062,]  122  134  128 #>  [6063,]  121  133  128 #>  [6064,]  121  133  128 #>  [6065,]  121  133  128 #>  [6066,]  121  133  128 #>  [6067,]  122  134  128 #>  [6068,]  122  134  128 #>  [6069,]  122  134  128 #>  [6070,]  121  133  128 #>  [6071,]  122  134  128 #>  [6072,]  122  134  128 #>  [6073,]  122  134  128 #>  [6074,]  122  134  128 #>  [6075,]  121  133  128 #>  [6076,]  122  134  128 #>  [6077,]  122  134  128 #>  [6078,]  121  133  128 #>  [6079,]  121  133  128 #>  [6080,]  122  134  128 #>  [6081,]  121  133  128 #>  [6082,]  122  134  128 #>  [6083,]  122  134  128 #>  [6084,]  122  134  128 #>  [6085,]  122  134  128 #>  [6086,]  122  134  128 #>  [6087,]  122  134  128 #>  [6088,]  122  134  128 #>  [6089,]  122  134  128 #>  [6090,]  122  134  128 #>  [6091,]  122  134  128 #>  [6092,]  121  133  128 #>  [6093,]  122  134  128 #>  [6094,]  121  133  128 #>  [6095,]  121  133  128 #>  [6096,]  121  133  128 #>  [6097,]  122  134  128 #>  [6098,]  122  134  128 #>  [6099,]  122  134  128 #>  [6100,]  121  133  128 #>  [6101,]  123  136  130 #>  [6102,]  124  135  129 #>  [6103,]  124  135  129 #>  [6104,]  123  136  130 #>  [6105,]  123  136  130 #>  [6106,]  124  135  129 #>  [6107,]  124  135  129 #>  [6108,]  123  136  130 #>  [6109,]  123  136  130 #>  [6110,]  124  135  129 #>  [6111,]  123  136  130 #>  [6112,]  124  135  129 #>  [6113,]  123  136  130 #>  [6114,]  123  136  130 #>  [6115,]  123  136  130 #>  [6116,]  123  136  130 #>  [6117,]  123  136  130 #>  [6118,]  124  135  129 #>  [6119,]  124  135  129 #>  [6120,]  124  135  129 #>  [6121,]  123  136  130 #>  [6122,]  123  136  130 #>  [6123,]  124  135  129 #>  [6124,]  123  136  130 #>  [6125,]  124  135  129 #>  [6126,]  123  136  130 #>  [6127,]  123  136  130 #>  [6128,]  124  135  129 #>  [6129,]  124  135  129 #>  [6130,]  123  136  130 #>  [6131,]  124  135  129 #>  [6132,]  124  135  129 #>  [6133,]  124  135  129 #>  [6134,]  124  135  129 #>  [6135,]  123  136  130 #>  [6136,]  124  135  129 #>  [6137,]  123  136  130 #>  [6138,]  123  136  130 #>  [6139,]  124  135  129 #>  [6140,]  124  135  129 #>  [6141,]  123  136  130 #>  [6142,]  124  135  129 #>  [6143,]  123  136  130 #>  [6144,]  123  136  130 #>  [6145,]  123  136  130 #>  [6146,]  123  136  130 #>  [6147,]  124  135  129 #>  [6148,]  124  135  129 #>  [6149,]  123  136  130 #>  [6150,]  124  135  129 #>  [6151,]  123  136  130 #>  [6152,]  123  136  130 #>  [6153,]  124  135  129 #>  [6154,]  123  136  130 #>  [6155,]  123  136  130 #>  [6156,]  124  135  129 #>  [6157,]  124  135  129 #>  [6158,]  123  136  130 #>  [6159,]  123  136  130 #>  [6160,]  124  135  129 #>  [6161,]  124  135  129 #>  [6162,]  123  136  130 #>  [6163,]  124  135  129 #>  [6164,]  124  135  129 #>  [6165,]  124  135  129 #>  [6166,]  123  136  130 #>  [6167,]  123  136  130 #>  [6168,]  123  136  130 #>  [6169,]  123  136  130 #>  [6170,]  124  135  129 #>  [6171,]  124  135  129 #>  [6172,]  124  135  129 #>  [6173,]  124  135  129 #>  [6174,]  123  136  130 #>  [6175,]  124  135  129 #>  [6176,]  124  135  129 #>  [6177,]  124  135  129 #>  [6178,]  124  135  129 #>  [6179,]  123  136  130 #>  [6180,]  123  136  130 #>  [6181,]  123  136  130 #>  [6182,]  123  136  130 #>  [6183,]  123  136  130 #>  [6184,]  124  135  129 #>  [6185,]  123  136  130 #>  [6186,]  124  135  129 #>  [6187,]  123  136  130 #>  [6188,]  123  136  130 #>  [6189,]  123  136  130 #>  [6190,]  123  136  130 #>  [6191,]  123  136  130 #>  [6192,]  123  136  130 #>  [6193,]  124  135  129 #>  [6194,]  124  135  129 #>  [6195,]  123  136  130 #>  [6196,]  123  136  130 #>  [6197,]  124  135  129 #>  [6198,]  124  135  129 #>  [6199,]  123  136  130 #>  [6200,]  124  135  129 #>  [6201,]  126  138  132 #>  [6202,]  125  137  132 #>  [6203,]  125  137  132 #>  [6204,]  125  137  132 #>  [6205,]  126  138  132 #>  [6206,]  125  137  132 #>  [6207,]  125  137  132 #>  [6208,]  125  137  132 #>  [6209,]  125  137  132 #>  [6210,]  125  137  131 #>  [6211,]  126  138  131 #>  [6212,]  125  137  132 #>  [6213,]  125  137  132 #>  [6214,]  126  138  131 #>  [6215,]  126  138  132 #>  [6216,]  125  137  132 #>  [6217,]  126  138  132 #>  [6218,]  126  138  132 #>  [6219,]  125  137  132 #>  [6220,]  125  137  132 #>  [6221,]  125  137  132 #>  [6222,]  126  138  132 #>  [6223,]  125  137  132 #>  [6224,]  125  137  132 #>  [6225,]  125  137  132 #>  [6226,]  126  138  132 #>  [6227,]  126  138  132 #>  [6228,]  125  137  132 #>  [6229,]  125  137  132 #>  [6230,]  125  137  132 #>  [6231,]  126  138  132 #>  [6232,]  126  138  132 #>  [6233,]  125  137  132 #>  [6234,]  125  137  132 #>  [6235,]  125  137  132 #>  [6236,]  125  137  132 #>  [6237,]  125  137  132 #>  [6238,]  125  137  132 #>  [6239,]  125  137  132 #>  [6240,]  125  137  132 #>  [6241,]  125  137  132 #>  [6242,]  125  137  132 #>  [6243,]  126  138  132 #>  [6244,]  125  137  132 #>  [6245,]  125  137  132 #>  [6246,]  125  137  132 #>  [6247,]  126  138  132 #>  [6248,]  125  137  131 #>  [6249,]  125  137  132 #>  [6250,]  125  137  132 #>  [6251,]  125  137  132 #>  [6252,]  125  137  132 #>  [6253,]  125  137  132 #>  [6254,]  125  137  132 #>  [6255,]  125  137  132 #>  [6256,]  125  137  132 #>  [6257,]  125  137  132 #>  [6258,]  126  138  132 #>  [6259,]  126  138  132 #>  [6260,]  125  137  132 #>  [6261,]  126  138  132 #>  [6262,]  125  137  132 #>  [6263,]  125  137  132 #>  [6264,]  125  137  132 #>  [6265,]  125  137  132 #>  [6266,]  126  138  132 #>  [6267,]  125  137  132 #>  [6268,]  125  137  132 #>  [6269,]  125  137  132 #>  [6270,]  126  138  131 #>  [6271,]  126  138  132 #>  [6272,]  125  137  132 #>  [6273,]  125  137  132 #>  [6274,]  125  137  132 #>  [6275,]  126  138  132 #>  [6276,]  125  137  132 #>  [6277,]  126  138  132 #>  [6278,]  125  137  132 #>  [6279,]  126  138  132 #>  [6280,]  125  137  132 #>  [6281,]  125  137  132 #>  [6282,]  125  137  132 #>  [6283,]  125  137  132 #>  [6284,]  125  137  132 #>  [6285,]  125  137  132 #>  [6286,]  125  137  132 #>  [6287,]  126  138  132 #>  [6288,]  125  137  132 #>  [6289,]  125  137  132 #>  [6290,]  125  137  132 #>  [6291,]  126  138  132 #>  [6292,]  125  137  132 #>  [6293,]  125  137  132 #>  [6294,]  125  137  132 #>  [6295,]  126  138  132 #>  [6296,]  125  137  132 #>  [6297,]  125  137  132 #>  [6298,]  125  137  132 #>  [6299,]  125  137  132 #>  [6300,]  126  138  132 #>  [6301,]  128  140  135 #>  [6302,]  127  139  133 #>  [6303,]  127  139  133 #>  [6304,]  128  140  134 #>  [6305,]  127  140  135 #>  [6306,]  127  140  135 #>  [6307,]  128  139  133 #>  [6308,]  128  140  134 #>  [6309,]  127  140  134 #>  [6310,]  128  140  134 #>  [6311,]  127  140  135 #>  [6312,]  127  140  135 #>  [6313,]  128  139  133 #>  [6314,]  127  140  135 #>  [6315,]  128  140  135 #>  [6316,]  128  139  133 #>  [6317,]  128  140  135 #>  [6318,]  128  139  133 #>  [6319,]  127  139  133 #>  [6320,]  127  140  135 #>  [6321,]  128  139  133 #>  [6322,]  127  139  133 #>  [6323,]  128  139  133 #>  [6324,]  127  139  133 #>  [6325,]  128  140  135 #>  [6326,]  127  140  135 #>  [6327,]  128  140  135 #>  [6328,]  128  140  135 #>  [6329,]  127  140  135 #>  [6330,]  127  139  133 #>  [6331,]  127  139  133 #>  [6332,]  127  140  135 #>  [6333,]  127  140  135 #>  [6334,]  127  139  133 #>  [6335,]  127  139  133 #>  [6336,]  127  139  133 #>  [6337,]  127  139  133 #>  [6338,]  127  140  135 #>  [6339,]  128  139  133 #>  [6340,]  127  139  133 #>  [6341,]  127  140  135 #>  [6342,]  127  140  135 #>  [6343,]  128  140  134 #>  [6344,]  127  139  133 #>  [6345,]  128  140  135 #>  [6346,]  128  140  135 #>  [6347,]  128  139  133 #>  [6348,]  127  140  135 #>  [6349,]  127  139  133 #>  [6350,]  127  140  135 #>  [6351,]  127  140  134 #>  [6352,]  127  140  135 #>  [6353,]  128  140  135 #>  [6354,]  127  139  133 #>  [6355,]  127  140  135 #>  [6356,]  128  140  135 #>  [6357,]  127  140  135 #>  [6358,]  127  140  135 #>  [6359,]  127  139  133 #>  [6360,]  127  140  134 #>  [6361,]  128  140  135 #>  [6362,]  127  139  133 #>  [6363,]  127  140  135 #>  [6364,]  128  140  135 #>  [6365,]  127  140  135 #>  [6366,]  127  140  135 #>  [6367,]  127  140  135 #>  [6368,]  127  140  135 #>  [6369,]  127  140  135 #>  [6370,]  128  139  133 #>  [6371,]  128  140  135 #>  [6372,]  128  140  135 #>  [6373,]  128  140  135 #>  [6374,]  128  140  135 #>  [6375,]  128  140  135 #>  [6376,]  128  140  135 #>  [6377,]  128  139  133 #>  [6378,]  127  140  135 #>  [6379,]  127  139  133 #>  [6380,]  127  139  133 #>  [6381,]  127  140  135 #>  [6382,]  128  140  135 #>  [6383,]  127  139  133 #>  [6384,]  128  140  135 #>  [6385,]  127  140  134 #>  [6386,]  127  140  135 #>  [6387,]  127  140  135 #>  [6388,]  128  140  135 #>  [6389,]  127  140  135 #>  [6390,]  127  140  135 #>  [6391,]  127  140  134 #>  [6392,]  127  140  135 #>  [6393,]  127  139  133 #>  [6394,]  128  140  135 #>  [6395,]  128  139  133 #>  [6396,]  127  140  135 #>  [6397,]  127  140  135 #>  [6398,]  127  139  133 #>  [6399,]  127  140  135 #>  [6400,]  128  139  133 #>  [6401,]  130  142  137 #>  [6402,]  129  141  136 #>  [6403,]  129  141  136 #>  [6404,]  130  142  137 #>  [6405,]  130  142  137 #>  [6406,]  129  141  136 #>  [6407,]  129  141  136 #>  [6408,]  129  141  136 #>  [6409,]  129  141  136 #>  [6410,]  130  142  137 #>  [6411,]  130  142  137 #>  [6412,]  130  142  137 #>  [6413,]  130  142  137 #>  [6414,]  130  142  137 #>  [6415,]  130  142  137 #>  [6416,]  130  142  137 #>  [6417,]  130  142  137 #>  [6418,]  130  142  137 #>  [6419,]  130  142  137 #>  [6420,]  129  141  136 #>  [6421,]  129  141  136 #>  [6422,]  130  142  137 #>  [6423,]  129  141  136 #>  [6424,]  130  142  137 #>  [6425,]  129  141  136 #>  [6426,]  130  142  137 #>  [6427,]  130  142  137 #>  [6428,]  130  142  137 #>  [6429,]  129  141  136 #>  [6430,]  130  142  137 #>  [6431,]  130  142  137 #>  [6432,]  130  142  137 #>  [6433,]  130  142  137 #>  [6434,]  129  141  136 #>  [6435,]  129  141  136 #>  [6436,]  129  141  136 #>  [6437,]  129  141  136 #>  [6438,]  130  142  137 #>  [6439,]  130  142  137 #>  [6440,]  129  141  136 #>  [6441,]  129  141  136 #>  [6442,]  129  141  136 #>  [6443,]  130  142  137 #>  [6444,]  129  141  136 #>  [6445,]  129  141  136 #>  [6446,]  130  142  137 #>  [6447,]  130  142  137 #>  [6448,]  130  142  137 #>  [6449,]  129  141  136 #>  [6450,]  129  141  136 #>  [6451,]  130  142  137 #>  [6452,]  130  142  137 #>  [6453,]  129  141  136 #>  [6454,]  129  141  136 #>  [6455,]  129  141  136 #>  [6456,]  129  141  136 #>  [6457,]  129  141  136 #>  [6458,]  130  142  137 #>  [6459,]  130  142  137 #>  [6460,]  129  141  136 #>  [6461,]  130  142  137 #>  [6462,]  129  141  136 #>  [6463,]  130  142  137 #>  [6464,]  129  141  136 #>  [6465,]  129  141  136 #>  [6466,]  130  142  137 #>  [6467,]  129  141  136 #>  [6468,]  130  142  137 #>  [6469,]  130  142  137 #>  [6470,]  130  142  137 #>  [6471,]  130  142  137 #>  [6472,]  129  141  136 #>  [6473,]  129  141  136 #>  [6474,]  129  141  136 #>  [6475,]  130  142  137 #>  [6476,]  129  141  136 #>  [6477,]  130  142  137 #>  [6478,]  130  142  137 #>  [6479,]  130  142  137 #>  [6480,]  129  141  136 #>  [6481,]  129  141  136 #>  [6482,]  129  141  136 #>  [6483,]  130  142  137 #>  [6484,]  129  141  136 #>  [6485,]  129  141  136 #>  [6486,]  129  141  136 #>  [6487,]  130  142  137 #>  [6488,]  129  141  136 #>  [6489,]  129  141  136 #>  [6490,]  130  142  137 #>  [6491,]  130  142  137 #>  [6492,]  130  142  137 #>  [6493,]  130  142  137 #>  [6494,]  129  141  136 #>  [6495,]  130  142  137 #>  [6496,]  130  142  137 #>  [6497,]  129  141  136 #>  [6498,]  129  141  136 #>  [6499,]  129  141  136 #>  [6500,]  130  142  137 #>  [6501,]  131  143  138 #>  [6502,]  131  143  138 #>  [6503,]  132  143  138 #>  [6504,]  131  143  139 #>  [6505,]  131  143  138 #>  [6506,]  132  143  138 #>  [6507,]  131  143  139 #>  [6508,]  131  143  138 #>  [6509,]  131  143  138 #>  [6510,]  131  143  139 #>  [6511,]  131  143  138 #>  [6512,]  132  143  138 #>  [6513,]  131  143  138 #>  [6514,]  131  143  138 #>  [6515,]  131  143  138 #>  [6516,]  131  143  139 #>  [6517,]  131  143  138 #>  [6518,]  131  143  138 #>  [6519,]  132  143  138 #>  [6520,]  131  143  139 #>  [6521,]  131  143  138 #>  [6522,]  131  143  138 #>  [6523,]  131  143  138 #>  [6524,]  131  143  139 #>  [6525,]  132  143  139 #>  [6526,]  131  143  138 #>  [6527,]  131  143  138 #>  [6528,]  132  143  139 #>  [6529,]  131  143  138 #>  [6530,]  131  143  138 #>  [6531,]  131  143  138 #>  [6532,]  131  143  138 #>  [6533,]  132  143  138 #>  [6534,]  132  143  138 #>  [6535,]  131  143  138 #>  [6536,]  131  143  139 #>  [6537,]  131  143  138 #>  [6538,]  131  143  138 #>  [6539,]  131  143  139 #>  [6540,]  131  143  138 #>  [6541,]  131  143  138 #>  [6542,]  131  143  138 #>  [6543,]  131  143  138 #>  [6544,]  131  143  138 #>  [6545,]  131  143  138 #>  [6546,]  131  143  138 #>  [6547,]  131  143  138 #>  [6548,]  131  143  138 #>  [6549,]  131  143  138 #>  [6550,]  131  143  139 #>  [6551,]  131  143  138 #>  [6552,]  131  143  139 #>  [6553,]  131  143  138 #>  [6554,]  131  143  139 #>  [6555,]  131  143  138 #>  [6556,]  131  143  138 #>  [6557,]  131  143  139 #>  [6558,]  131  143  138 #>  [6559,]  131  143  138 #>  [6560,]  132  143  138 #>  [6561,]  131  143  138 #>  [6562,]  131  143  138 #>  [6563,]  131  143  138 #>  [6564,]  131  143  138 #>  [6565,]  132  143  138 #>  [6566,]  131  143  138 #>  [6567,]  131  143  138 #>  [6568,]  131  143  138 #>  [6569,]  131  143  138 #>  [6570,]  132  143  138 #>  [6571,]  131  143  138 #>  [6572,]  131  143  138 #>  [6573,]  132  143  139 #>  [6574,]  131  143  138 #>  [6575,]  131  143  138 #>  [6576,]  131  143  139 #>  [6577,]  131  143  138 #>  [6578,]  131  143  138 #>  [6579,]  131  143  138 #>  [6580,]  131  143  138 #>  [6581,]  131  143  138 #>  [6582,]  131  143  138 #>  [6583,]  131  143  138 #>  [6584,]  131  143  138 #>  [6585,]  131  143  138 #>  [6586,]  131  143  139 #>  [6587,]  131  143  138 #>  [6588,]  131  143  138 #>  [6589,]  131  143  138 #>  [6590,]  131  143  138 #>  [6591,]  131  143  139 #>  [6592,]  131  143  138 #>  [6593,]  132  143  138 #>  [6594,]  131  143  138 #>  [6595,]  131  143  138 #>  [6596,]  131  143  138 #>  [6597,]  132  143  138 #>  [6598,]  132  143  138 #>  [6599,]  131  143  138 #>  [6600,]  131  143  138 #>  [6601,]  133  144  140 #>  [6602,]  134  145  140 #>  [6603,]  133  144  140 #>  [6604,]  133  144  140 #>  [6605,]  134  145  140 #>  [6606,]  133  144  140 #>  [6607,]  134  145  141 #>  [6608,]  133  144  140 #>  [6609,]  134  145  140 #>  [6610,]  134  145  140 #>  [6611,]  133  144  140 #>  [6612,]  134  145  140 #>  [6613,]  134  145  140 #>  [6614,]  133  144  140 #>  [6615,]  133  144  140 #>  [6616,]  133  144  141 #>  [6617,]  134  145  140 #>  [6618,]  134  145  140 #>  [6619,]  133  144  140 #>  [6620,]  134  145  141 #>  [6621,]  134  145  140 #>  [6622,]  134  145  140 #>  [6623,]  134  145  140 #>  [6624,]  134  145  141 #>  [6625,]  134  145  140 #>  [6626,]  133  144  140 #>  [6627,]  134  145  140 #>  [6628,]  133  144  141 #>  [6629,]  134  145  140 #>  [6630,]  134  145  140 #>  [6631,]  134  145  140 #>  [6632,]  134  145  140 #>  [6633,]  134  145  140 #>  [6634,]  133  144  140 #>  [6635,]  133  144  140 #>  [6636,]  134  145  140 #>  [6637,]  133  144  140 #>  [6638,]  133  144  140 #>  [6639,]  134  145  140 #>  [6640,]  134  145  140 #>  [6641,]  134  145  140 #>  [6642,]  133  144  140 #>  [6643,]  133  144  140 #>  [6644,]  134  145  140 #>  [6645,]  133  144  140 #>  [6646,]  133  144  140 #>  [6647,]  134  145  140 #>  [6648,]  134  145  140 #>  [6649,]  133  144  140 #>  [6650,]  134  145  141 #>  [6651,]  134  145  140 #>  [6652,]  133  144  141 #>  [6653,]  134  145  140 #>  [6654,]  134  145  140 #>  [6655,]  133  144  140 #>  [6656,]  133  144  140 #>  [6657,]  133  144  140 #>  [6658,]  134  145  140 #>  [6659,]  133  144  140 #>  [6660,]  134  145  140 #>  [6661,]  134  145  140 #>  [6662,]  133  144  140 #>  [6663,]  134  145  140 #>  [6664,]  133  144  140 #>  [6665,]  133  144  140 #>  [6666,]  134  145  140 #>  [6667,]  133  144  140 #>  [6668,]  133  144  140 #>  [6669,]  133  144  140 #>  [6670,]  134  145  140 #>  [6671,]  134  145  140 #>  [6672,]  133  144  140 #>  [6673,]  133  144  140 #>  [6674,]  134  145  140 #>  [6675,]  134  145  140 #>  [6676,]  134  145  141 #>  [6677,]  133  144  140 #>  [6678,]  134  145  140 #>  [6679,]  133  144  140 #>  [6680,]  134  145  140 #>  [6681,]  134  145  140 #>  [6682,]  133  144  140 #>  [6683,]  134  145  140 #>  [6684,]  134  145  140 #>  [6685,]  133  144  140 #>  [6686,]  134  145  141 #>  [6687,]  134  145  140 #>  [6688,]  134  145  140 #>  [6689,]  133  144  140 #>  [6690,]  134  145  140 #>  [6691,]  133  144  141 #>  [6692,]  134  145  140 #>  [6693,]  134  145  140 #>  [6694,]  133  144  140 #>  [6695,]  134  145  140 #>  [6696,]  133  144  140 #>  [6697,]  133  144  140 #>  [6698,]  133  144  140 #>  [6699,]  134  145  140 #>  [6700,]  133  144  140 #>  [6701,]  137  148  143 #>  [6702,]  135  146  142 #>  [6703,]  136  147  142 #>  [6704,]  136  147  142 #>  [6705,]  136  147  143 #>  [6706,]  135  146  142 #>  [6707,]  136  147  142 #>  [6708,]  136  147  142 #>  [6709,]  136  147  142 #>  [6710,]  136  147  142 #>  [6711,]  135  146  142 #>  [6712,]  135  146  142 #>  [6713,]  137  148  142 #>  [6714,]  137  148  143 #>  [6715,]  135  146  143 #>  [6716,]  137  148  142 #>  [6717,]  135  146  142 #>  [6718,]  136  147  143 #>  [6719,]  136  147  142 #>  [6720,]  136  147  142 #>  [6721,]  137  148  142 #>  [6722,]  137  148  142 #>  [6723,]  135  146  142 #>  [6724,]  136  147  142 #>  [6725,]  136  147  142 #>  [6726,]  137  148  142 #>  [6727,]  137  148  143 #>  [6728,]  136  147  142 #>  [6729,]  135  146  142 #>  [6730,]  135  146  142 #>  [6731,]  135  146  142 #>  [6732,]  136  147  143 #>  [6733,]  137  148  142 #>  [6734,]  135  146  142 #>  [6735,]  135  146  142 #>  [6736,]  136  147  142 #>  [6737,]  135  146  142 #>  [6738,]  136  147  142 #>  [6739,]  136  147  142 #>  [6740,]  136  147  142 #>  [6741,]  137  148  142 #>  [6742,]  135  146  142 #>  [6743,]  135  146  142 #>  [6744,]  135  146  142 #>  [6745,]  136  147  142 #>  [6746,]  136  147  142 #>  [6747,]  135  146  142 #>  [6748,]  135  146  142 #>  [6749,]  136  147  142 #>  [6750,]  137  148  142 #>  [6751,]  136  147  142 #>  [6752,]  137  148  142 #>  [6753,]  136  147  142 #>  [6754,]  136  147  142 #>  [6755,]  136  147  142 #>  [6756,]  135  146  142 #>  [6757,]  136  147  142 #>  [6758,]  137  148  142 #>  [6759,]  137  148  142 #>  [6760,]  135  146  142 #>  [6761,]  135  146  142 #>  [6762,]  136  147  142 #>  [6763,]  135  146  142 #>  [6764,]  135  146  142 #>  [6765,]  135  146  142 #>  [6766,]  135  146  142 #>  [6767,]  136  147  142 #>  [6768,]  137  148  142 #>  [6769,]  136  147  142 #>  [6770,]  135  146  142 #>  [6771,]  137  148  143 #>  [6772,]  136  147  142 #>  [6773,]  137  148  142 #>  [6774,]  136  147  142 #>  [6775,]  135  146  143 #>  [6776,]  137  148  142 #>  [6777,]  137  148  142 #>  [6778,]  135  146  142 #>  [6779,]  135  146  142 #>  [6780,]  136  147  142 #>  [6781,]  135  146  142 #>  [6782,]  136  147  142 #>  [6783,]  137  148  142 #>  [6784,]  137  148  142 #>  [6785,]  136  147  142 #>  [6786,]  137  148  142 #>  [6787,]  136  147  142 #>  [6788,]  136  147  142 #>  [6789,]  136  147  142 #>  [6790,]  137  148  142 #>  [6791,]  136  147  143 #>  [6792,]  135  146  142 #>  [6793,]  137  148  142 #>  [6794,]  135  146  142 #>  [6795,]  135  146  143 #>  [6796,]  137  148  142 #>  [6797,]  136  147  142 #>  [6798,]  136  147  142 #>  [6799,]  137  148  142 #>  [6800,]  135  146  143 #>  [6801,]  139  150  145 #>  [6802,]  138  149  144 #>  [6803,]  139  150  145 #>  [6804,]  139  150  145 #>  [6805,]  139  150  145 #>  [6806,]  138  149  144 #>  [6807,]  139  150  145 #>  [6808,]  139  150  145 #>  [6809,]  139  150  145 #>  [6810,]  139  150  145 #>  [6811,]  138  149  144 #>  [6812,]  138  149  144 #>  [6813,]  139  150  145 #>  [6814,]  139  150  145 #>  [6815,]  138  149  144 #>  [6816,]  139  150  145 #>  [6817,]  138  149  144 #>  [6818,]  139  150  145 #>  [6819,]  138  149  144 #>  [6820,]  139  150  145 #>  [6821,]  139  150  145 #>  [6822,]  139  150  145 #>  [6823,]  138  149  144 #>  [6824,]  139  150  145 #>  [6825,]  139  150  145 #>  [6826,]  138  149  144 #>  [6827,]  139  150  145 #>  [6828,]  139  150  145 #>  [6829,]  138  149  144 #>  [6830,]  138  149  144 #>  [6831,]  138  149  144 #>  [6832,]  139  150  145 #>  [6833,]  139  150  145 #>  [6834,]  138  149  144 #>  [6835,]  138  149  144 #>  [6836,]  139  150  145 #>  [6837,]  138  149  144 #>  [6838,]  139  150  145 #>  [6839,]  139  150  145 #>  [6840,]  139  150  145 #>  [6841,]  139  150  145 #>  [6842,]  138  149  144 #>  [6843,]  138  149  144 #>  [6844,]  138  149  144 #>  [6845,]  139  150  145 #>  [6846,]  139  150  145 #>  [6847,]  138  149  144 #>  [6848,]  138  149  144 #>  [6849,]  139  150  145 #>  [6850,]  139  150  145 #>  [6851,]  139  150  145 #>  [6852,]  139  150  145 #>  [6853,]  139  150  145 #>  [6854,]  139  150  145 #>  [6855,]  139  150  145 #>  [6856,]  138  149  144 #>  [6857,]  139  150  145 #>  [6858,]  139  150  145 #>  [6859,]  139  150  145 #>  [6860,]  138  149  144 #>  [6861,]  138  149  144 #>  [6862,]  139  150  145 #>  [6863,]  138  149  144 #>  [6864,]  138  149  144 #>  [6865,]  138  149  144 #>  [6866,]  138  149  144 #>  [6867,]  139  150  145 #>  [6868,]  138  149  144 #>  [6869,]  139  150  145 #>  [6870,]  138  149  144 #>  [6871,]  139  150  145 #>  [6872,]  139  150  145 #>  [6873,]  139  150  145 #>  [6874,]  139  150  145 #>  [6875,]  138  149  144 #>  [6876,]  139  150  145 #>  [6877,]  139  150  145 #>  [6878,]  138  149  144 #>  [6879,]  138  149  144 #>  [6880,]  139  150  145 #>  [6881,]  138  149  144 #>  [6882,]  139  150  145 #>  [6883,]  139  150  145 #>  [6884,]  139  150  145 #>  [6885,]  139  150  145 #>  [6886,]  139  150  145 #>  [6887,]  139  150  145 #>  [6888,]  139  150  145 #>  [6889,]  139  150  145 #>  [6890,]  139  150  145 #>  [6891,]  139  150  145 #>  [6892,]  138  149  144 #>  [6893,]  139  150  145 #>  [6894,]  138  149  144 #>  [6895,]  138  149  144 #>  [6896,]  138  149  144 #>  [6897,]  139  150  145 #>  [6898,]  139  150  145 #>  [6899,]  139  150  145 #>  [6900,]  138  149  144 #>  [6901,]  141  152  146 #>  [6902,]  141  152  146 #>  [6903,]  140  151  147 #>  [6904,]  140  151  148 #>  [6905,]  140  151  148 #>  [6906,]  141  152  146 #>  [6907,]  140  151  147 #>  [6908,]  140  151  148 #>  [6909,]  140  151  148 #>  [6910,]  140  151  148 #>  [6911,]  140  151  148 #>  [6912,]  140  151  148 #>  [6913,]  141  152  146 #>  [6914,]  141  152  146 #>  [6915,]  141  152  146 #>  [6916,]  141  152  146 #>  [6917,]  141  152  146 #>  [6918,]  140  151  148 #>  [6919,]  140  151  148 #>  [6920,]  140  151  147 #>  [6921,]  141  152  146 #>  [6922,]  141  152  148 #>  [6923,]  140  151  147 #>  [6924,]  140  151  148 #>  [6925,]  140  151  147 #>  [6926,]  141  152  146 #>  [6927,]  141  152  146 #>  [6928,]  140  151  148 #>  [6929,]  141  152  146 #>  [6930,]  140  151  148 #>  [6931,]  140  151  148 #>  [6932,]  140  151  148 #>  [6933,]  141  152  146 #>  [6934,]  140  151  147 #>  [6935,]  141  152  146 #>  [6936,]  140  151  147 #>  [6937,]  141  152  146 #>  [6938,]  140  151  148 #>  [6939,]  140  151  148 #>  [6940,]  140  151  148 #>  [6941,]  141  152  146 #>  [6942,]  140  151  147 #>  [6943,]  140  151  148 #>  [6944,]  141  152  146 #>  [6945,]  140  151  147 #>  [6946,]  140  151  148 #>  [6947,]  140  151  148 #>  [6948,]  140  151  148 #>  [6949,]  140  151  148 #>  [6950,]  141  152  146 #>  [6951,]  140  151  148 #>  [6952,]  141  152  148 #>  [6953,]  140  151  147 #>  [6954,]  140  151  147 #>  [6955,]  140  151  147 #>  [6956,]  140  151  147 #>  [6957,]  140  151  147 #>  [6958,]  141  152  148 #>  [6959,]  141  152  146 #>  [6960,]  140  151  147 #>  [6961,]  141  152  146 #>  [6962,]  140  151  148 #>  [6963,]  140  151  148 #>  [6964,]  140  151  147 #>  [6965,]  140  151  147 #>  [6966,]  140  151  148 #>  [6967,]  140  151  148 #>  [6968,]  141  152  146 #>  [6969,]  140  151  148 #>  [6970,]  141  152  146 #>  [6971,]  141  152  146 #>  [6972,]  140  151  148 #>  [6973,]  141  152  146 #>  [6974,]  140  151  147 #>  [6975,]  140  151  148 #>  [6976,]  141  152  146 #>  [6977,]  141  152  146 #>  [6978,]  140  151  148 #>  [6979,]  141  152  146 #>  [6980,]  140  151  147 #>  [6981,]  141  152  146 #>  [6982,]  140  151  147 #>  [6983,]  141  152  146 #>  [6984,]  140  151  147 #>  [6985,]  140  151  147 #>  [6986,]  141  152  146 #>  [6987,]  140  151  148 #>  [6988,]  140  151  147 #>  [6989,]  140  151  147 #>  [6990,]  141  152  148 #>  [6991,]  140  151  148 #>  [6992,]  140  151  148 #>  [6993,]  141  152  146 #>  [6994,]  141  152  146 #>  [6995,]  140  151  148 #>  [6996,]  141  152  146 #>  [6997,]  140  151  147 #>  [6998,]  140  151  147 #>  [6999,]  141  152  146 #>  [7000,]  141  152  146 #>  [7001,]  143  154  151 #>  [7002,]  143  154  149 #>  [7003,]  142  153  150 #>  [7004,]  142  153  149 #>  [7005,]  143  154  149 #>  [7006,]  143  154  151 #>  [7007,]  142  153  149 #>  [7008,]  142  153  149 #>  [7009,]  143  154  149 #>  [7010,]  143  154  149 #>  [7011,]  143  154  150 #>  [7012,]  142  153  149 #>  [7013,]  143  154  149 #>  [7014,]  143  154  149 #>  [7015,]  143  154  149 #>  [7016,]  143  154  151 #>  [7017,]  143  154  149 #>  [7018,]  143  154  149 #>  [7019,]  143  154  150 #>  [7020,]  143  155  149 #>  [7021,]  143  154  149 #>  [7022,]  143  155  149 #>  [7023,]  143  154  149 #>  [7024,]  143  154  149 #>  [7025,]  142  153  149 #>  [7026,]  143  154  149 #>  [7027,]  143  154  149 #>  [7028,]  143  154  150 #>  [7029,]  143  155  149 #>  [7030,]  143  154  149 #>  [7031,]  142  153  149 #>  [7032,]  143  154  149 #>  [7033,]  143  154  149 #>  [7034,]  143  154  150 #>  [7035,]  143  154  150 #>  [7036,]  143  154  149 #>  [7037,]  143  154  150 #>  [7038,]  143  154  150 #>  [7039,]  143  154  149 #>  [7040,]  143  154  149 #>  [7041,]  143  154  149 #>  [7042,]  143  154  150 #>  [7043,]  143  154  149 #>  [7044,]  143  154  149 #>  [7045,]  143  154  150 #>  [7046,]  143  154  149 #>  [7047,]  142  153  149 #>  [7048,]  143  154  149 #>  [7049,]  143  154  150 #>  [7050,]  143  154  149 #>  [7051,]  143  154  149 #>  [7052,]  142  153  150 #>  [7053,]  143  154  149 #>  [7054,]  143  154  149 #>  [7055,]  143  154  149 #>  [7056,]  143  154  149 #>  [7057,]  142  153  149 #>  [7058,]  143  155  149 #>  [7059,]  142  153  149 #>  [7060,]  142  153  149 #>  [7061,]  143  154  149 #>  [7062,]  143  154  149 #>  [7063,]  143  154  149 #>  [7064,]  143  155  150 #>  [7065,]  143  154  149 #>  [7066,]  143  154  149 #>  [7067,]  143  154  149 #>  [7068,]  142  153  151 #>  [7069,]  143  154  149 #>  [7070,]  143  154  149 #>  [7071,]  143  154  149 #>  [7072,]  143  154  150 #>  [7073,]  143  154  151 #>  [7074,]  143  154  149 #>  [7075,]  143  154  149 #>  [7076,]  143  154  149 #>  [7077,]  143  155  150 #>  [7078,]  143  154  149 #>  [7079,]  143  154  149 #>  [7080,]  142  153  149 #>  [7081,]  143  154  149 #>  [7082,]  143  154  149 #>  [7083,]  143  154  149 #>  [7084,]  143  154  149 #>  [7085,]  143  154  149 #>  [7086,]  142  153  149 #>  [7087,]  143  155  149 #>  [7088,]  143  154  149 #>  [7089,]  143  154  149 #>  [7090,]  143  154  149 #>  [7091,]  143  154  149 #>  [7092,]  143  154  149 #>  [7093,]  143  154  149 #>  [7094,]  143  154  150 #>  [7095,]  143  154  149 #>  [7096,]  142  153  151 #>  [7097,]  142  153  150 #>  [7098,]  142  153  149 #>  [7099,]  143  154  149 #>  [7100,]  143  154  150 #>  [7101,]  145  157  152 #>  [7102,]  145  156  153 #>  [7103,]  144  156  153 #>  [7104,]  145  156  153 #>  [7105,]  145  157  152 #>  [7106,]  145  156  153 #>  [7107,]  144  156  153 #>  [7108,]  145  156  153 #>  [7109,]  145  156  153 #>  [7110,]  145  157  152 #>  [7111,]  145  157  152 #>  [7112,]  145  157  152 #>  [7113,]  145  156  153 #>  [7114,]  145  157  152 #>  [7115,]  145  157  152 #>  [7116,]  145  156  153 #>  [7117,]  145  157  152 #>  [7118,]  145  157  152 #>  [7119,]  145  156  153 #>  [7120,]  144  156  153 #>  [7121,]  145  156  153 #>  [7122,]  145  157  152 #>  [7123,]  145  156  153 #>  [7124,]  145  156  153 #>  [7125,]  144  156  153 #>  [7126,]  145  157  152 #>  [7127,]  145  157  152 #>  [7128,]  145  156  153 #>  [7129,]  145  156  153 #>  [7130,]  145  156  153 #>  [7131,]  145  157  152 #>  [7132,]  145  157  152 #>  [7133,]  145  156  153 #>  [7134,]  145  156  153 #>  [7135,]  145  156  153 #>  [7136,]  145  156  153 #>  [7137,]  145  156  153 #>  [7138,]  145  157  152 #>  [7139,]  144  156  153 #>  [7140,]  145  156  153 #>  [7141,]  145  156  153 #>  [7142,]  145  156  153 #>  [7143,]  145  157  152 #>  [7144,]  144  156  153 #>  [7145,]  145  156  153 #>  [7146,]  145  156  153 #>  [7147,]  145  157  152 #>  [7148,]  145  156  153 #>  [7149,]  144  156  153 #>  [7150,]  144  156  153 #>  [7151,]  145  156  153 #>  [7152,]  145  157  152 #>  [7153,]  144  156  153 #>  [7154,]  145  156  153 #>  [7155,]  144  156  153 #>  [7156,]  144  156  153 #>  [7157,]  145  156  153 #>  [7158,]  145  157  152 #>  [7159,]  144  157  152 #>  [7160,]  145  156  153 #>  [7161,]  145  157  152 #>  [7162,]  145  156  153 #>  [7163,]  145  156  153 #>  [7164,]  145  156  153 #>  [7165,]  144  156  153 #>  [7166,]  144  157  152 #>  [7167,]  145  156  153 #>  [7168,]  145  157  152 #>  [7169,]  145  156  153 #>  [7170,]  145  157  152 #>  [7171,]  145  157  152 #>  [7172,]  145  156  153 #>  [7173,]  145  156  153 #>  [7174,]  145  156  153 #>  [7175,]  145  157  152 #>  [7176,]  145  156  153 #>  [7177,]  145  157  152 #>  [7178,]  145  156  153 #>  [7179,]  145  157  152 #>  [7180,]  145  156  153 #>  [7181,]  145  156  153 #>  [7182,]  145  156  153 #>  [7183,]  145  156  153 #>  [7184,]  145  156  153 #>  [7185,]  145  156  153 #>  [7186,]  145  156  153 #>  [7187,]  145  157  152 #>  [7188,]  145  156  153 #>  [7189,]  145  156  153 #>  [7190,]  144  157  152 #>  [7191,]  145  157  152 #>  [7192,]  145  157  152 #>  [7193,]  145  156  153 #>  [7194,]  145  156  153 #>  [7195,]  145  157  152 #>  [7196,]  145  157  152 #>  [7197,]  145  156  153 #>  [7198,]  144  156  153 #>  [7199,]  145  156  153 #>  [7200,]  144  157  152 #>  [7201,]  147  159  155 #>  [7202,]  147  159  155 #>  [7203,]  146  158  154 #>  [7204,]  147  159  155 #>  [7205,]  147  159  155 #>  [7206,]  147  159  155 #>  [7207,]  147  159  155 #>  [7208,]  147  159  155 #>  [7209,]  147  159  155 #>  [7210,]  146  158  154 #>  [7211,]  146  158  154 #>  [7212,]  147  159  155 #>  [7213,]  147  159  155 #>  [7214,]  146  158  154 #>  [7215,]  147  159  155 #>  [7216,]  147  159  155 #>  [7217,]  147  159  155 #>  [7218,]  147  159  155 #>  [7219,]  147  159  155 #>  [7220,]  147  159  155 #>  [7221,]  146  158  154 #>  [7222,]  147  159  155 #>  [7223,]  147  159  155 #>  [7224,]  147  159  155 #>  [7225,]  147  159  155 #>  [7226,]  147  159  155 #>  [7227,]  147  159  155 #>  [7228,]  147  159  155 #>  [7229,]  147  159  155 #>  [7230,]  147  159  155 #>  [7231,]  146  158  154 #>  [7232,]  146  158  154 #>  [7233,]  147  159  155 #>  [7234,]  147  159  155 #>  [7235,]  147  159  155 #>  [7236,]  147  159  155 #>  [7237,]  147  159  155 #>  [7238,]  147  159  155 #>  [7239,]  147  159  155 #>  [7240,]  146  158  154 #>  [7241,]  147  159  155 #>  [7242,]  147  159  155 #>  [7243,]  147  159  155 #>  [7244,]  147  159  155 #>  [7245,]  147  159  155 #>  [7246,]  147  159  155 #>  [7247,]  147  159  155 #>  [7248,]  146  158  154 #>  [7249,]  147  159  155 #>  [7250,]  147  159  155 #>  [7251,]  147  159  155 #>  [7252,]  147  159  155 #>  [7253,]  147  159  155 #>  [7254,]  147  159  155 #>  [7255,]  147  159  155 #>  [7256,]  147  159  155 #>  [7257,]  147  159  155 #>  [7258,]  147  159  155 #>  [7259,]  147  159  155 #>  [7260,]  147  159  155 #>  [7261,]  147  159  155 #>  [7262,]  147  159  155 #>  [7263,]  147  159  155 #>  [7264,]  147  159  155 #>  [7265,]  147  159  155 #>  [7266,]  147  159  155 #>  [7267,]  147  159  155 #>  [7268,]  147  159  155 #>  [7269,]  147  159  155 #>  [7270,]  146  158  154 #>  [7271,]  147  159  155 #>  [7272,]  147  159  155 #>  [7273,]  147  159  155 #>  [7274,]  146  158  154 #>  [7275,]  147  159  155 #>  [7276,]  147  159  155 #>  [7277,]  147  159  155 #>  [7278,]  147  159  155 #>  [7279,]  147  159  155 #>  [7280,]  147  159  155 #>  [7281,]  147  159  155 #>  [7282,]  146  158  154 #>  [7283,]  147  159  155 #>  [7284,]  147  159  155 #>  [7285,]  147  159  155 #>  [7286,]  147  159  155 #>  [7287,]  147  159  155 #>  [7288,]  147  159  155 #>  [7289,]  147  159  155 #>  [7290,]  147  159  155 #>  [7291,]  147  159  155 #>  [7292,]  147  159  155 #>  [7293,]  147  159  155 #>  [7294,]  147  159  155 #>  [7295,]  147  159  155 #>  [7296,]  147  159  155 #>  [7297,]  147  159  155 #>  [7298,]  146  158  154 #>  [7299,]  147  159  155 #>  [7300,]  147  159  155 #>  [7301,]  149  160  157 #>  [7302,]  149  160  157 #>  [7303,]  148  160  156 #>  [7304,]  149  160  156 #>  [7305,]  149  160  156 #>  [7306,]  149  160  157 #>  [7307,]  149  160  157 #>  [7308,]  149  160  156 #>  [7309,]  149  160  156 #>  [7310,]  148  160  156 #>  [7311,]  148  160  157 #>  [7312,]  149  160  156 #>  [7313,]  149  160  157 #>  [7314,]  148  160  157 #>  [7315,]  149  160  157 #>  [7316,]  149  160  157 #>  [7317,]  149  160  157 #>  [7318,]  149  160  156 #>  [7319,]  149  160  157 #>  [7320,]  149  160  156 #>  [7321,]  148  160  157 #>  [7322,]  149  160  157 #>  [7323,]  149  160  156 #>  [7324,]  149  160  156 #>  [7325,]  149  160  156 #>  [7326,]  149  160  157 #>  [7327,]  149  160  157 #>  [7328,]  148  160  156 #>  [7329,]  149  160  157 #>  [7330,]  149  160  156 #>  [7331,]  148  160  156 #>  [7332,]  148  160  156 #>  [7333,]  149  160  157 #>  [7334,]  148  160  156 #>  [7335,]  148  160  157 #>  [7336,]  149  160  156 #>  [7337,]  149  160  157 #>  [7338,]  149  160  156 #>  [7339,]  149  160  156 #>  [7340,]  148  160  157 #>  [7341,]  149  160  157 #>  [7342,]  149  160  156 #>  [7343,]  149  160  156 #>  [7344,]  149  160  157 #>  [7345,]  149  160  156 #>  [7346,]  149  160  157 #>  [7347,]  149  160  157 #>  [7348,]  148  160  156 #>  [7349,]  149  160  156 #>  [7350,]  149  160  157 #>  [7351,]  149  160  156 #>  [7352,]  149  160  157 #>  [7353,]  149  160  156 #>  [7354,]  149  160  156 #>  [7355,]  149  160  157 #>  [7356,]  149  160  156 #>  [7357,]  149  160  156 #>  [7358,]  149  160  157 #>  [7359,]  149  160  157 #>  [7360,]  149  160  156 #>  [7361,]  149  160  157 #>  [7362,]  149  160  156 #>  [7363,]  149  160  157 #>  [7364,]  149  160  156 #>  [7365,]  148  160  156 #>  [7366,]  149  160  156 #>  [7367,]  149  160  156 #>  [7368,]  149  160  157 #>  [7369,]  149  160  157 #>  [7370,]  148  160  157 #>  [7371,]  149  160  157 #>  [7372,]  149  160  156 #>  [7373,]  149  160  157 #>  [7374,]  148  160  157 #>  [7375,]  149  160  157 #>  [7376,]  149  160  157 #>  [7377,]  149  160  157 #>  [7378,]  149  160  156 #>  [7379,]  149  160  157 #>  [7380,]  149  160  156 #>  [7381,]  149  160  157 #>  [7382,]  148  160  157 #>  [7383,]  149  160  157 #>  [7384,]  149  160  157 #>  [7385,]  149  160  156 #>  [7386,]  149  160  157 #>  [7387,]  149  160  157 #>  [7388,]  149  160  156 #>  [7389,]  149  160  156 #>  [7390,]  149  160  157 #>  [7391,]  149  160  156 #>  [7392,]  149  160  157 #>  [7393,]  149  160  157 #>  [7394,]  149  160  157 #>  [7395,]  149  160  156 #>  [7396,]  149  160  157 #>  [7397,]  149  160  157 #>  [7398,]  148  160  157 #>  [7399,]  149  160  157 #>  [7400,]  149  160  157 #>  [7401,]  151  162  159 #>  [7402,]  151  162  159 #>  [7403,]  150  161  158 #>  [7404,]  151  162  159 #>  [7405,]  151  162  159 #>  [7406,]  151  162  158 #>  [7407,]  151  162  159 #>  [7408,]  151  162  159 #>  [7409,]  151  162  159 #>  [7410,]  151  162  159 #>  [7411,]  150  161  158 #>  [7412,]  150  161  159 #>  [7413,]  151  162  159 #>  [7414,]  150  161  159 #>  [7415,]  151  162  159 #>  [7416,]  151  162  158 #>  [7417,]  151  162  159 #>  [7418,]  151  162  159 #>  [7419,]  150  161  158 #>  [7420,]  150  161  159 #>  [7421,]  151  162  159 #>  [7422,]  150  161  159 #>  [7423,]  151  162  159 #>  [7424,]  151  162  159 #>  [7425,]  151  162  159 #>  [7426,]  150  161  159 #>  [7427,]  151  162  159 #>  [7428,]  151  162  159 #>  [7429,]  150  161  159 #>  [7430,]  151  162  159 #>  [7431,]  151  162  159 #>  [7432,]  150  161  159 #>  [7433,]  151  162  159 #>  [7434,]  151  162  158 #>  [7435,]  151  162  158 #>  [7436,]  150  161  159 #>  [7437,]  151  162  158 #>  [7438,]  151  162  158 #>  [7439,]  151  162  159 #>  [7440,]  150  161  159 #>  [7441,]  150  161  159 #>  [7442,]  150  161  159 #>  [7443,]  151  162  159 #>  [7444,]  151  162  159 #>  [7445,]  151  162  158 #>  [7446,]  151  162  159 #>  [7447,]  151  162  159 #>  [7448,]  150  161  159 #>  [7449,]  151  162  158 #>  [7450,]  151  162  159 #>  [7451,]  150  161  159 #>  [7452,]  151  162  158 #>  [7453,]  151  162  159 #>  [7454,]  150  161  159 #>  [7455,]  151  162  159 #>  [7456,]  151  162  159 #>  [7457,]  151  162  159 #>  [7458,]  151  162  159 #>  [7459,]  151  162  159 #>  [7460,]  150  161  159 #>  [7461,]  151  162  159 #>  [7462,]  150  161  159 #>  [7463,]  150  161  159 #>  [7464,]  151  162  158 #>  [7465,]  151  162  159 #>  [7466,]  150  161  159 #>  [7467,]  151  162  159 #>  [7468,]  150  161  158 #>  [7469,]  150  161  159 #>  [7470,]  151  162  159 #>  [7471,]  151  162  159 #>  [7472,]  151  162  158 #>  [7473,]  151  162  159 #>  [7474,]  151  162  159 #>  [7475,]  151  162  159 #>  [7476,]  151  162  159 #>  [7477,]  151  162  159 #>  [7478,]  151  162  159 #>  [7479,]  151  162  159 #>  [7480,]  150  161  159 #>  [7481,]  150  161  159 #>  [7482,]  151  162  159 #>  [7483,]  150  161  159 #>  [7484,]  151  162  159 #>  [7485,]  151  162  159 #>  [7486,]  151  162  159 #>  [7487,]  151  162  159 #>  [7488,]  151  162  159 #>  [7489,]  150  161  159 #>  [7490,]  151  162  159 #>  [7491,]  150  161  159 #>  [7492,]  151  162  159 #>  [7493,]  151  162  159 #>  [7494,]  151  162  159 #>  [7495,]  151  162  159 #>  [7496,]  151  162  158 #>  [7497,]  151  162  158 #>  [7498,]  151  162  159 #>  [7499,]  151  162  159 #>  [7500,]  151  162  159 #>  [7501,]  153  164  160 #>  [7502,]  153  164  160 #>  [7503,]  152  163  161 #>  [7504,]  153  164  160 #>  [7505,]  153  164  160 #>  [7506,]  152  163  161 #>  [7507,]  152  163  161 #>  [7508,]  153  164  160 #>  [7509,]  153  164  160 #>  [7510,]  153  164  160 #>  [7511,]  153  164  160 #>  [7512,]  153  164  160 #>  [7513,]  153  164  160 #>  [7514,]  153  164  160 #>  [7515,]  153  164  160 #>  [7516,]  153  164  160 #>  [7517,]  153  164  160 #>  [7518,]  153  164  160 #>  [7519,]  153  164  160 #>  [7520,]  152  163  162 #>  [7521,]  152  163  162 #>  [7522,]  153  164  160 #>  [7523,]  152  163  162 #>  [7524,]  153  164  160 #>  [7525,]  152  163  161 #>  [7526,]  153  164  160 #>  [7527,]  153  164  160 #>  [7528,]  153  164  160 #>  [7529,]  153  164  160 #>  [7530,]  153  164  160 #>  [7531,]  153  164  160 #>  [7532,]  153  164  160 #>  [7533,]  153  164  160 #>  [7534,]  152  163  161 #>  [7535,]  152  163  161 #>  [7536,]  153  164  160 #>  [7537,]  152  163  161 #>  [7538,]  153  164  160 #>  [7539,]  153  164  160 #>  [7540,]  153  164  160 #>  [7541,]  153  164  160 #>  [7542,]  152  163  161 #>  [7543,]  153  164  160 #>  [7544,]  152  163  162 #>  [7545,]  153  164  160 #>  [7546,]  153  164  160 #>  [7547,]  153  164  160 #>  [7548,]  153  164  160 #>  [7549,]  153  164  160 #>  [7550,]  153  164  160 #>  [7551,]  153  164  160 #>  [7552,]  153  164  160 #>  [7553,]  152  163  162 #>  [7554,]  153  164  160 #>  [7555,]  153  164  160 #>  [7556,]  152  163  161 #>  [7557,]  152  163  161 #>  [7558,]  153  164  160 #>  [7559,]  153  164  160 #>  [7560,]  153  164  160 #>  [7561,]  153  164  160 #>  [7562,]  153  164  160 #>  [7563,]  153  164  160 #>  [7564,]  153  164  160 #>  [7565,]  152  163  161 #>  [7566,]  153  164  160 #>  [7567,]  153  164  160 #>  [7568,]  153  164  160 #>  [7569,]  153  164  160 #>  [7570,]  153  164  160 #>  [7571,]  153  164  160 #>  [7572,]  153  164  160 #>  [7573,]  152  163  161 #>  [7574,]  152  163  161 #>  [7575,]  153  164  160 #>  [7576,]  153  164  160 #>  [7577,]  153  164  160 #>  [7578,]  153  164  160 #>  [7579,]  153  164  160 #>  [7580,]  152  163  162 #>  [7581,]  153  164  160 #>  [7582,]  152  163  161 #>  [7583,]  153  164  160 #>  [7584,]  152  163  162 #>  [7585,]  152  163  161 #>  [7586,]  152  163  162 #>  [7587,]  153  164  160 #>  [7588,]  153  164  160 #>  [7589,]  152  163  161 #>  [7590,]  153  164  160 #>  [7591,]  153  164  160 #>  [7592,]  153  164  160 #>  [7593,]  153  164  160 #>  [7594,]  152  163  161 #>  [7595,]  153  164  160 #>  [7596,]  153  164  160 #>  [7597,]  153  164  160 #>  [7598,]  153  164  160 #>  [7599,]  152  163  161 #>  [7600,]  153  164  160 #>  [7601,]  154  165  164 #>  [7602,]  154  165  164 #>  [7603,]  154  165  163 #>  [7604,]  154  165  164 #>  [7605,]  154  165  164 #>  [7606,]  154  165  164 #>  [7607,]  154  165  163 #>  [7608,]  154  165  163 #>  [7609,]  154  165  164 #>  [7610,]  154  165  164 #>  [7611,]  154  165  164 #>  [7612,]  154  165  164 #>  [7613,]  154  165  164 #>  [7614,]  154  165  164 #>  [7615,]  154  165  164 #>  [7616,]  154  165  164 #>  [7617,]  154  165  164 #>  [7618,]  154  165  164 #>  [7619,]  154  165  164 #>  [7620,]  155  166  163 #>  [7621,]  154  165  164 #>  [7622,]  155  166  164 #>  [7623,]  154  165  164 #>  [7624,]  154  165  164 #>  [7625,]  154  165  163 #>  [7626,]  154  165  164 #>  [7627,]  154  165  164 #>  [7628,]  154  165  164 #>  [7629,]  155  166  164 #>  [7630,]  154  165  164 #>  [7631,]  154  165  164 #>  [7632,]  154  165  164 #>  [7633,]  154  165  164 #>  [7634,]  154  165  164 #>  [7635,]  154  165  164 #>  [7636,]  154  165  164 #>  [7637,]  154  165  164 #>  [7638,]  154  165  164 #>  [7639,]  154  165  163 #>  [7640,]  154  165  164 #>  [7641,]  154  165  164 #>  [7642,]  154  165  164 #>  [7643,]  154  165  164 #>  [7644,]  154  165  163 #>  [7645,]  154  165  164 #>  [7646,]  154  165  163 #>  [7647,]  154  165  164 #>  [7648,]  154  165  164 #>  [7649,]  154  165  163 #>  [7650,]  154  165  163 #>  [7651,]  154  165  164 #>  [7652,]  154  165  164 #>  [7653,]  154  165  163 #>  [7654,]  154  165  164 #>  [7655,]  154  165  163 #>  [7656,]  154  165  163 #>  [7657,]  154  165  164 #>  [7658,]  155  166  164 #>  [7659,]  154  165  163 #>  [7660,]  154  165  164 #>  [7661,]  154  165  164 #>  [7662,]  154  165  164 #>  [7663,]  154  165  164 #>  [7664,]  155  166  164 #>  [7665,]  154  165  163 #>  [7666,]  154  165  163 #>  [7667,]  154  165  164 #>  [7668,]  154  165  164 #>  [7669,]  154  165  164 #>  [7670,]  154  165  163 #>  [7671,]  154  165  164 #>  [7672,]  154  165  164 #>  [7673,]  154  165  164 #>  [7674,]  154  165  164 #>  [7675,]  154  165  164 #>  [7676,]  154  165  164 #>  [7677,]  155  166  164 #>  [7678,]  154  165  164 #>  [7679,]  154  165  164 #>  [7680,]  154  165  164 #>  [7681,]  155  166  164 #>  [7682,]  154  165  164 #>  [7683,]  154  165  164 #>  [7684,]  154  165  163 #>  [7685,]  154  165  164 #>  [7686,]  154  165  163 #>  [7687,]  155  166  164 #>  [7688,]  154  165  164 #>  [7689,]  154  165  164 #>  [7690,]  154  165  163 #>  [7691,]  154  165  164 #>  [7692,]  154  165  164 #>  [7693,]  154  165  164 #>  [7694,]  154  165  164 #>  [7695,]  154  165  164 #>  [7696,]  154  165  164 #>  [7697,]  154  165  164 #>  [7698,]  154  165  163 #>  [7699,]  154  165  164 #>  [7700,]  154  165  163 #>  [7701,]  157  168  165 #>  [7702,]  156  167  167 #>  [7703,]  156  167  166 #>  [7704,]  156  167  167 #>  [7705,]  157  168  165 #>  [7706,]  156  167  167 #>  [7707,]  156  167  167 #>  [7708,]  156  167  167 #>  [7709,]  156  167  167 #>  [7710,]  157  169  165 #>  [7711,]  157  168  165 #>  [7712,]  157  169  165 #>  [7713,]  156  167  167 #>  [7714,]  157  168  165 #>  [7715,]  157  168  165 #>  [7716,]  156  167  167 #>  [7717,]  157  169  165 #>  [7718,]  157  169  165 #>  [7719,]  156  167  167 #>  [7720,]  156  167  167 #>  [7721,]  156  167  166 #>  [7722,]  157  168  165 #>  [7723,]  156  167  167 #>  [7724,]  156  167  167 #>  [7725,]  156  167  167 #>  [7726,]  157  168  165 #>  [7727,]  157  169  165 #>  [7728,]  156  167  166 #>  [7729,]  156  167  167 #>  [7730,]  156  167  167 #>  [7731,]  157  169  165 #>  [7732,]  157  169  165 #>  [7733,]  156  167  167 #>  [7734,]  156  167  166 #>  [7735,]  156  167  167 #>  [7736,]  156  167  167 #>  [7737,]  156  167  167 #>  [7738,]  157  168  165 #>  [7739,]  156  167  167 #>  [7740,]  156  167  166 #>  [7741,]  156  167  167 #>  [7742,]  156  167  167 #>  [7743,]  157  168  165 #>  [7744,]  156  167  167 #>  [7745,]  156  167  167 #>  [7746,]  156  167  167 #>  [7747,]  157  168  165 #>  [7748,]  156  167  166 #>  [7749,]  156  167  167 #>  [7750,]  156  167  167 #>  [7751,]  156  167  167 #>  [7752,]  157  168  165 #>  [7753,]  156  167  167 #>  [7754,]  156  167  167 #>  [7755,]  156  167  167 #>  [7756,]  156  167  167 #>  [7757,]  156  167  167 #>  [7758,]  157  168  165 #>  [7759,]  157  168  165 #>  [7760,]  156  167  167 #>  [7761,]  157  169  165 #>  [7762,]  156  167  167 #>  [7763,]  156  167  167 #>  [7764,]  156  167  167 #>  [7765,]  156  167  167 #>  [7766,]  157  168  165 #>  [7767,]  156  167  167 #>  [7768,]  156  167  167 #>  [7769,]  156  167  167 #>  [7770,]  157  169  165 #>  [7771,]  157  168  165 #>  [7772,]  156  167  167 #>  [7773,]  156  167  167 #>  [7774,]  156  167  166 #>  [7775,]  157  169  165 #>  [7776,]  156  167  167 #>  [7777,]  157  168  165 #>  [7778,]  156  167  167 #>  [7779,]  157  168  165 #>  [7780,]  156  167  167 #>  [7781,]  156  167  167 #>  [7782,]  156  167  166 #>  [7783,]  156  167  167 #>  [7784,]  156  167  167 #>  [7785,]  156  167  167 #>  [7786,]  156  167  167 #>  [7787,]  157  168  165 #>  [7788,]  156  167  167 #>  [7789,]  156  167  167 #>  [7790,]  157  168  165 #>  [7791,]  157  168  165 #>  [7792,]  157  168  165 #>  [7793,]  156  167  167 #>  [7794,]  156  167  167 #>  [7795,]  157  168  165 #>  [7796,]  156  167  167 #>  [7797,]  156  167  167 #>  [7798,]  156  167  166 #>  [7799,]  156  167  167 #>  [7800,]  157  168  165 #>  [7801,]  158  170  168 #>  [7802,]  159  171  168 #>  [7803,]  158  170  168 #>  [7804,]  159  171  168 #>  [7805,]  159  171  168 #>  [7806,]  158  170  168 #>  [7807,]  159  171  168 #>  [7808,]  159  171  169 #>  [7809,]  159  171  169 #>  [7810,]  159  171  168 #>  [7811,]  158  170  168 #>  [7812,]  159  171  168 #>  [7813,]  159  171  168 #>  [7814,]  158  170  168 #>  [7815,]  159  171  168 #>  [7816,]  158  170  168 #>  [7817,]  159  171  168 #>  [7818,]  159  171  168 #>  [7819,]  158  170  168 #>  [7820,]  159  171  168 #>  [7821,]  159  171  168 #>  [7822,]  159  171  168 #>  [7823,]  159  171  168 #>  [7824,]  159  171  168 #>  [7825,]  159  171  168 #>  [7826,]  159  171  169 #>  [7827,]  159  171  168 #>  [7828,]  158  170  168 #>  [7829,]  159  171  168 #>  [7830,]  159  171  168 #>  [7831,]  159  171  168 #>  [7832,]  159  171  168 #>  [7833,]  159  171  168 #>  [7834,]  158  170  168 #>  [7835,]  158  170  168 #>  [7836,]  159  171  168 #>  [7837,]  158  170  168 #>  [7838,]  158  170  168 #>  [7839,]  159  171  168 #>  [7840,]  159  171  168 #>  [7841,]  159  171  168 #>  [7842,]  158  170  168 #>  [7843,]  159  171  169 #>  [7844,]  159  171  168 #>  [7845,]  158  170  168 #>  [7846,]  159  171  168 #>  [7847,]  159  171  168 #>  [7848,]  159  171  168 #>  [7849,]  158  170  168 #>  [7850,]  159  171  168 #>  [7851,]  159  171  168 #>  [7852,]  158  170  168 #>  [7853,]  159  171  168 #>  [7854,]  159  171  168 #>  [7855,]  159  171  168 #>  [7856,]  159  171  169 #>  [7857,]  159  171  168 #>  [7858,]  159  171  168 #>  [7859,]  159  171  168 #>  [7860,]  159  171  168 #>  [7861,]  159  171  169 #>  [7862,]  159  171  168 #>  [7863,]  159  171  168 #>  [7864,]  158  170  168 #>  [7865,]  159  171  168 #>  [7866,]  159  171  168 #>  [7867,]  159  171  168 #>  [7868,]  158  170  168 #>  [7869,]  159  171  168 #>  [7870,]  159  171  168 #>  [7871,]  159  171  168 #>  [7872,]  158  170  168 #>  [7873,]  158  170  168 #>  [7874,]  159  171  168 #>  [7875,]  159  171  168 #>  [7876,]  159  171  169 #>  [7877,]  158  170  168 #>  [7878,]  159  171  168 #>  [7879,]  159  171  168 #>  [7880,]  159  171  168 #>  [7881,]  159  171  168 #>  [7882,]  159  171  168 #>  [7883,]  159  171  168 #>  [7884,]  159  171  168 #>  [7885,]  159  171  168 #>  [7886,]  159  171  168 #>  [7887,]  159  171  168 #>  [7888,]  159  171  168 #>  [7889,]  158  170  168 #>  [7890,]  159  171  168 #>  [7891,]  159  171  168 #>  [7892,]  159  171  168 #>  [7893,]  159  171  168 #>  [7894,]  158  170  168 #>  [7895,]  159  171  168 #>  [7896,]  158  170  168 #>  [7897,]  158  170  168 #>  [7898,]  159  171  168 #>  [7899,]  159  171  168 #>  [7900,]  158  170  168 #>  [7901,]  162  174  171 #>  [7902,]  160  172  170 #>  [7903,]  160  172  170 #>  [7904,]  160  172  170 #>  [7905,]  162  174  171 #>  [7906,]  160  172  170 #>  [7907,]  160  172  170 #>  [7908,]  160  172  170 #>  [7909,]  160  172  170 #>  [7910,]  161  173  171 #>  [7911,]  161  173  171 #>  [7912,]  161  173  171 #>  [7913,]  160  172  170 #>  [7914,]  162  174  171 #>  [7915,]  162  174  171 #>  [7916,]  160  172  170 #>  [7917,]  161  173  171 #>  [7918,]  162  174  171 #>  [7919,]  160  172  170 #>  [7920,]  160  172  170 #>  [7921,]  160  172  170 #>  [7922,]  161  173  171 #>  [7923,]  160  172  170 #>  [7924,]  160  172  170 #>  [7925,]  160  172  170 #>  [7926,]  162  174  171 #>  [7927,]  162  174  171 #>  [7928,]  160  172  170 #>  [7929,]  160  172  170 #>  [7930,]  160  172  170 #>  [7931,]  162  174  171 #>  [7932,]  162  174  171 #>  [7933,]  160  172  170 #>  [7934,]  160  172  170 #>  [7935,]  160  172  170 #>  [7936,]  160  172  170 #>  [7937,]  160  172  170 #>  [7938,]  161  173  171 #>  [7939,]  160  172  170 #>  [7940,]  160  172  170 #>  [7941,]  160  172  170 #>  [7942,]  160  172  170 #>  [7943,]  162  174  171 #>  [7944,]  160  172  170 #>  [7945,]  160  172  170 #>  [7946,]  160  172  170 #>  [7947,]  161  173  171 #>  [7948,]  160  172  170 #>  [7949,]  160  172  170 #>  [7950,]  160  172  170 #>  [7951,]  160  172  170 #>  [7952,]  161  173  171 #>  [7953,]  160  172  170 #>  [7954,]  160  172  170 #>  [7955,]  160  172  170 #>  [7956,]  160  172  170 #>  [7957,]  160  172  170 #>  [7958,]  162  174  171 #>  [7959,]  162  174  171 #>  [7960,]  160  172  170 #>  [7961,]  162  174  171 #>  [7962,]  160  172  170 #>  [7963,]  160  172  170 #>  [7964,]  160  172  170 #>  [7965,]  160  172  170 #>  [7966,]  162  174  171 #>  [7967,]  160  172  170 #>  [7968,]  160  172  170 #>  [7969,]  160  172  170 #>  [7970,]  162  174  171 #>  [7971,]  162  174  171 #>  [7972,]  160  172  170 #>  [7973,]  160  172  170 #>  [7974,]  160  172  170 #>  [7975,]  162  174  171 #>  [7976,]  160  172  170 #>  [7977,]  161  173  171 #>  [7978,]  160  172  170 #>  [7979,]  162  174  171 #>  [7980,]  160  172  170 #>  [7981,]  160  172  170 #>  [7982,]  160  172  170 #>  [7983,]  160  172  170 #>  [7984,]  160  172  170 #>  [7985,]  160  172  170 #>  [7986,]  160  172  170 #>  [7987,]  162  174  171 #>  [7988,]  160  172  170 #>  [7989,]  160  172  170 #>  [7990,]  161  173  171 #>  [7991,]  162  174  171 #>  [7992,]  161  173  171 #>  [7993,]  160  172  170 #>  [7994,]  160  172  170 #>  [7995,]  162  174  171 #>  [7996,]  160  172  170 #>  [7997,]  160  172  170 #>  [7998,]  160  172  170 #>  [7999,]  160  172  170 #>  [8000,]  162  174  171 #>  [8001,]  164  176  173 #>  [8002,]  164  176  173 #>  [8003,]  163  175  172 #>  [8004,]  164  176  173 #>  [8005,]  164  176  173 #>  [8006,]  163  175  172 #>  [8007,]  163  175  172 #>  [8008,]  164  176  173 #>  [8009,]  164  176  173 #>  [8010,]  164  176  173 #>  [8011,]  164  176  173 #>  [8012,]  164  176  173 #>  [8013,]  164  176  173 #>  [8014,]  164  176  173 #>  [8015,]  164  176  173 #>  [8016,]  164  176  173 #>  [8017,]  164  176  173 #>  [8018,]  164  176  173 #>  [8019,]  164  176  173 #>  [8020,]  163  175  172 #>  [8021,]  163  175  172 #>  [8022,]  164  176  173 #>  [8023,]  163  175  172 #>  [8024,]  164  176  173 #>  [8025,]  163  175  172 #>  [8026,]  164  176  173 #>  [8027,]  164  176  173 #>  [8028,]  164  176  173 #>  [8029,]  164  176  173 #>  [8030,]  164  176  173 #>  [8031,]  164  176  173 #>  [8032,]  164  176  173 #>  [8033,]  164  176  173 #>  [8034,]  163  175  172 #>  [8035,]  163  175  172 #>  [8036,]  164  176  173 #>  [8037,]  163  175  172 #>  [8038,]  164  176  173 #>  [8039,]  164  176  173 #>  [8040,]  164  176  173 #>  [8041,]  164  176  173 #>  [8042,]  163  175  172 #>  [8043,]  164  176  173 #>  [8044,]  163  175  172 #>  [8045,]  164  176  173 #>  [8046,]  164  176  173 #>  [8047,]  164  176  173 #>  [8048,]  164  176  173 #>  [8049,]  164  176  173 #>  [8050,]  164  176  173 #>  [8051,]  164  176  173 #>  [8052,]  164  176  173 #>  [8053,]  163  175  172 #>  [8054,]  163  175  172 #>  [8055,]  163  175  172 #>  [8056,]  163  175  172 #>  [8057,]  163  175  172 #>  [8058,]  164  176  173 #>  [8059,]  164  176  173 #>  [8060,]  164  176  173 #>  [8061,]  164  176  173 #>  [8062,]  164  176  173 #>  [8063,]  164  176  173 #>  [8064,]  163  175  172 #>  [8065,]  163  175  172 #>  [8066,]  164  176  173 #>  [8067,]  164  176  173 #>  [8068,]  164  176  173 #>  [8069,]  164  176  173 #>  [8070,]  164  176  173 #>  [8071,]  164  176  173 #>  [8072,]  164  176  173 #>  [8073,]  163  175  172 #>  [8074,]  163  175  172 #>  [8075,]  164  176  173 #>  [8076,]  164  176  173 #>  [8077,]  164  176  173 #>  [8078,]  164  176  173 #>  [8079,]  164  176  173 #>  [8080,]  163  175  172 #>  [8081,]  164  176  173 #>  [8082,]  163  175  172 #>  [8083,]  164  176  173 #>  [8084,]  163  175  172 #>  [8085,]  163  175  172 #>  [8086,]  163  175  172 #>  [8087,]  164  176  173 #>  [8088,]  163  175  172 #>  [8089,]  163  175  172 #>  [8090,]  164  176  173 #>  [8091,]  164  176  173 #>  [8092,]  164  176  173 #>  [8093,]  164  176  173 #>  [8094,]  163  175  172 #>  [8095,]  164  176  173 #>  [8096,]  164  176  173 #>  [8097,]  164  176  173 #>  [8098,]  163  175  172 #>  [8099,]  163  175  172 #>  [8100,]  164  176  173 #>  [8101,]  165  177  174 #>  [8102,]  166  178  175 #>  [8103,]  166  178  175 #>  [8104,]  165  177  174 #>  [8105,]  165  177  174 #>  [8106,]  166  178  175 #>  [8107,]  166  178  175 #>  [8108,]  165  177  174 #>  [8109,]  165  177  174 #>  [8110,]  165  177  174 #>  [8111,]  165  177  174 #>  [8112,]  166  178  175 #>  [8113,]  165  177  174 #>  [8114,]  165  177  174 #>  [8115,]  165  177  174 #>  [8116,]  165  177  174 #>  [8117,]  165  177  174 #>  [8118,]  166  178  175 #>  [8119,]  166  178  175 #>  [8120,]  166  178  175 #>  [8121,]  165  177  174 #>  [8122,]  165  177  174 #>  [8123,]  166  178  175 #>  [8124,]  165  177  174 #>  [8125,]  166  178  175 #>  [8126,]  165  177  174 #>  [8127,]  165  177  174 #>  [8128,]  166  178  175 #>  [8129,]  165  177  174 #>  [8130,]  165  177  174 #>  [8131,]  166  178  175 #>  [8132,]  166  178  175 #>  [8133,]  166  178  175 #>  [8134,]  166  178  175 #>  [8135,]  165  177  174 #>  [8136,]  165  177  174 #>  [8137,]  165  177  174 #>  [8138,]  165  177  174 #>  [8139,]  165  177  174 #>  [8140,]  166  178  175 #>  [8141,]  165  177  174 #>  [8142,]  166  178  175 #>  [8143,]  165  177  174 #>  [8144,]  165  177  174 #>  [8145,]  165  177  174 #>  [8146,]  165  177  174 #>  [8147,]  165  177  174 #>  [8148,]  166  178  175 #>  [8149,]  165  177  174 #>  [8150,]  165  177  174 #>  [8151,]  165  177  174 #>  [8152,]  165  177  174 #>  [8153,]  165  177  174 #>  [8154,]  165  177  174 #>  [8155,]  165  177  174 #>  [8156,]  166  178  175 #>  [8157,]  165  177  174 #>  [8158,]  165  177  174 #>  [8159,]  165  177  174 #>  [8160,]  166  178  175 #>  [8161,]  165  177  174 #>  [8162,]  165  177  174 #>  [8163,]  165  177  174 #>  [8164,]  166  178  175 #>  [8165,]  166  178  175 #>  [8166,]  165  177  174 #>  [8167,]  165  177  174 #>  [8168,]  165  177  174 #>  [8169,]  165  177  174 #>  [8170,]  166  178  175 #>  [8171,]  166  178  175 #>  [8172,]  165  177  174 #>  [8173,]  166  178  175 #>  [8174,]  165  177  174 #>  [8175,]  165  177  174 #>  [8176,]  165  177  174 #>  [8177,]  165  177  174 #>  [8178,]  166  178  175 #>  [8179,]  165  177  174 #>  [8180,]  165  177  174 #>  [8181,]  165  177  174 #>  [8182,]  165  177  174 #>  [8183,]  165  177  174 #>  [8184,]  166  178  175 #>  [8185,]  165  177  174 #>  [8186,]  165  177  174 #>  [8187,]  165  177  174 #>  [8188,]  165  177  174 #>  [8189,]  165  177  174 #>  [8190,]  165  177  174 #>  [8191,]  165  177  174 #>  [8192,]  165  177  174 #>  [8193,]  166  178  175 #>  [8194,]  165  177  174 #>  [8195,]  165  177  174 #>  [8196,]  165  177  174 #>  [8197,]  166  178  175 #>  [8198,]  166  178  175 #>  [8199,]  165  177  174 #>  [8200,]  166  178  175 #>  [8201,]  168  180  177 #>  [8202,]  168  180  177 #>  [8203,]  167  179  176 #>  [8204,]  168  180  177 #>  [8205,]  168  180  177 #>  [8206,]  168  180  177 #>  [8207,]  167  179  176 #>  [8208,]  168  180  177 #>  [8209,]  168  180  177 #>  [8210,]  168  180  177 #>  [8211,]  168  180  177 #>  [8212,]  168  180  177 #>  [8213,]  168  180  177 #>  [8214,]  168  180  177 #>  [8215,]  168  180  177 #>  [8216,]  168  180  177 #>  [8217,]  168  180  177 #>  [8218,]  168  180  177 #>  [8219,]  168  180  177 #>  [8220,]  168  180  177 #>  [8221,]  168  180  177 #>  [8222,]  168  180  177 #>  [8223,]  168  180  177 #>  [8224,]  168  180  177 #>  [8225,]  168  180  177 #>  [8226,]  168  180  177 #>  [8227,]  168  180  177 #>  [8228,]  168  180  177 #>  [8229,]  168  180  177 #>  [8230,]  168  180  177 #>  [8231,]  168  180  177 #>  [8232,]  168  180  177 #>  [8233,]  168  180  177 #>  [8234,]  168  180  177 #>  [8235,]  168  180  177 #>  [8236,]  168  180  177 #>  [8237,]  168  180  177 #>  [8238,]  168  180  177 #>  [8239,]  168  180  177 #>  [8240,]  168  180  177 #>  [8241,]  168  180  177 #>  [8242,]  168  180  177 #>  [8243,]  168  180  177 #>  [8244,]  168  180  177 #>  [8245,]  168  180  177 #>  [8246,]  168  180  177 #>  [8247,]  168  180  177 #>  [8248,]  168  180  177 #>  [8249,]  167  179  176 #>  [8250,]  168  180  177 #>  [8251,]  168  180  177 #>  [8252,]  168  180  177 #>  [8253,]  167  179  176 #>  [8254,]  168  180  177 #>  [8255,]  167  179  176 #>  [8256,]  167  179  176 #>  [8257,]  168  180  177 #>  [8258,]  168  180  177 #>  [8259,]  168  180  177 #>  [8260,]  168  180  177 #>  [8261,]  168  180  177 #>  [8262,]  168  180  177 #>  [8263,]  168  180  177 #>  [8264,]  168  180  177 #>  [8265,]  168  180  177 #>  [8266,]  167  179  176 #>  [8267,]  168  180  177 #>  [8268,]  168  180  177 #>  [8269,]  168  180  177 #>  [8270,]  168  180  177 #>  [8271,]  168  180  177 #>  [8272,]  168  180  177 #>  [8273,]  168  180  177 #>  [8274,]  168  180  177 #>  [8275,]  168  180  177 #>  [8276,]  168  180  177 #>  [8277,]  168  180  177 #>  [8278,]  168  180  177 #>  [8279,]  168  180  177 #>  [8280,]  168  180  177 #>  [8281,]  168  180  177 #>  [8282,]  168  180  177 #>  [8283,]  168  180  177 #>  [8284,]  168  180  177 #>  [8285,]  168  180  177 #>  [8286,]  168  180  177 #>  [8287,]  168  180  177 #>  [8288,]  168  180  177 #>  [8289,]  168  180  177 #>  [8290,]  168  180  177 #>  [8291,]  168  180  177 #>  [8292,]  168  180  177 #>  [8293,]  168  180  177 #>  [8294,]  168  180  177 #>  [8295,]  168  180  177 #>  [8296,]  168  180  177 #>  [8297,]  168  180  177 #>  [8298,]  168  180  177 #>  [8299,]  168  180  177 #>  [8300,]  168  180  177 #>  [8301,]  170  182  178 #>  [8302,]  170  182  178 #>  [8303,]  170  182  178 #>  [8304,]  169  181  178 #>  [8305,]  170  182  178 #>  [8306,]  170  182  178 #>  [8307,]  170  182  178 #>  [8308,]  169  181  178 #>  [8309,]  169  181  178 #>  [8310,]  169  181  178 #>  [8311,]  170  182  178 #>  [8312,]  170  182  178 #>  [8313,]  170  182  178 #>  [8314,]  170  182  178 #>  [8315,]  170  182  178 #>  [8316,]  170  182  178 #>  [8317,]  170  182  178 #>  [8318,]  170  182  178 #>  [8319,]  170  182  178 #>  [8320,]  170  182  178 #>  [8321,]  170  182  178 #>  [8322,]  170  182  178 #>  [8323,]  170  182  178 #>  [8324,]  170  182  178 #>  [8325,]  170  182  178 #>  [8326,]  170  182  178 #>  [8327,]  170  182  178 #>  [8328,]  170  182  178 #>  [8329,]  170  182  178 #>  [8330,]  170  182  178 #>  [8331,]  170  182  178 #>  [8332,]  170  182  178 #>  [8333,]  170  182  178 #>  [8334,]  170  182  178 #>  [8335,]  170  182  178 #>  [8336,]  170  182  178 #>  [8337,]  170  182  178 #>  [8338,]  170  182  178 #>  [8339,]  170  182  178 #>  [8340,]  170  182  178 #>  [8341,]  170  182  178 #>  [8342,]  170  182  178 #>  [8343,]  169  181  178 #>  [8344,]  170  182  178 #>  [8345,]  170  182  178 #>  [8346,]  170  182  178 #>  [8347,]  170  182  178 #>  [8348,]  170  182  178 #>  [8349,]  170  182  178 #>  [8350,]  170  182  178 #>  [8351,]  169  181  178 #>  [8352,]  170  182  178 #>  [8353,]  170  182  178 #>  [8354,]  170  182  178 #>  [8355,]  170  182  178 #>  [8356,]  170  182  178 #>  [8357,]  170  182  178 #>  [8358,]  170  182  178 #>  [8359,]  170  182  178 #>  [8360,]  169  181  178 #>  [8361,]  170  182  178 #>  [8362,]  170  182  178 #>  [8363,]  170  182  178 #>  [8364,]  170  182  178 #>  [8365,]  170  182  178 #>  [8366,]  170  182  178 #>  [8367,]  169  181  178 #>  [8368,]  170  182  178 #>  [8369,]  170  182  178 #>  [8370,]  170  182  178 #>  [8371,]  170  182  178 #>  [8372,]  170  182  178 #>  [8373,]  170  182  178 #>  [8374,]  170  182  178 #>  [8375,]  170  182  178 #>  [8376,]  170  182  178 #>  [8377,]  170  182  178 #>  [8378,]  170  182  178 #>  [8379,]  170  182  178 #>  [8380,]  170  182  178 #>  [8381,]  170  182  178 #>  [8382,]  170  182  178 #>  [8383,]  170  182  178 #>  [8384,]  170  182  178 #>  [8385,]  169  181  178 #>  [8386,]  170  182  178 #>  [8387,]  170  182  178 #>  [8388,]  170  182  178 #>  [8389,]  170  182  178 #>  [8390,]  170  182  178 #>  [8391,]  169  181  178 #>  [8392,]  170  182  178 #>  [8393,]  170  182  178 #>  [8394,]  170  182  178 #>  [8395,]  169  181  178 #>  [8396,]  170  182  178 #>  [8397,]  170  182  178 #>  [8398,]  170  182  178 #>  [8399,]  170  182  178 #>  [8400,]  170  182  178 #>  [8401,]  172  184  179 #>  [8402,]  171  183  180 #>  [8403,]  171  183  180 #>  [8404,]  171  183  180 #>  [8405,]  172  184  179 #>  [8406,]  172  184  179 #>  [8407,]  171  183  180 #>  [8408,]  172  184  179 #>  [8409,]  172  184  179 #>  [8410,]  171  183  180 #>  [8411,]  171  183  180 #>  [8412,]  172  184  179 #>  [8413,]  171  183  180 #>  [8414,]  172  184  179 #>  [8415,]  172  184  179 #>  [8416,]  171  183  180 #>  [8417,]  171  183  180 #>  [8418,]  171  183  180 #>  [8419,]  171  183  180 #>  [8420,]  172  184  179 #>  [8421,]  171  183  180 #>  [8422,]  171  183  180 #>  [8423,]  171  183  180 #>  [8424,]  171  183  180 #>  [8425,]  171  183  180 #>  [8426,]  172  184  179 #>  [8427,]  171  183  180 #>  [8428,]  172  184  179 #>  [8429,]  171  183  180 #>  [8430,]  171  183  180 #>  [8431,]  171  183  180 #>  [8432,]  171  183  180 #>  [8433,]  172  184  179 #>  [8434,]  171  183  180 #>  [8435,]  171  183  180 #>  [8436,]  171  183  180 #>  [8437,]  171  183  180 #>  [8438,]  172  184  179 #>  [8439,]  171  183  180 #>  [8440,]  171  183  180 #>  [8441,]  172  184  179 #>  [8442,]  172  184  179 #>  [8443,]  172  184  179 #>  [8444,]  171  183  180 #>  [8445,]  172  184  179 #>  [8446,]  172  184  179 #>  [8447,]  171  183  180 #>  [8448,]  171  183  180 #>  [8449,]  171  183  180 #>  [8450,]  172  184  179 #>  [8451,]  172  184  179 #>  [8452,]  171  183  180 #>  [8453,]  172  184  179 #>  [8454,]  171  183  180 #>  [8455,]  172  184  179 #>  [8456,]  172  184  179 #>  [8457,]  172  184  179 #>  [8458,]  172  184  179 #>  [8459,]  171  183  180 #>  [8460,]  172  184  179 #>  [8461,]  172  184  179 #>  [8462,]  171  183  180 #>  [8463,]  172  184  179 #>  [8464,]  172  184  179 #>  [8465,]  172  184  179 #>  [8466,]  172  184  179 #>  [8467,]  172  184  179 #>  [8468,]  172  184  179 #>  [8469,]  171  183  180 #>  [8470,]  171  183  180 #>  [8471,]  172  184  179 #>  [8472,]  172  184  179 #>  [8473,]  172  184  179 #>  [8474,]  172  184  179 #>  [8475,]  172  184  179 #>  [8476,]  172  184  179 #>  [8477,]  171  183  180 #>  [8478,]  172  184  179 #>  [8479,]  171  183  180 #>  [8480,]  171  183  180 #>  [8481,]  172  184  179 #>  [8482,]  171  183  180 #>  [8483,]  171  183  180 #>  [8484,]  172  184  179 #>  [8485,]  171  183  180 #>  [8486,]  171  183  180 #>  [8487,]  172  184  179 #>  [8488,]  172  184  179 #>  [8489,]  171  183  180 #>  [8490,]  172  184  179 #>  [8491,]  172  184  179 #>  [8492,]  172  184  179 #>  [8493,]  171  183  180 #>  [8494,]  172  184  179 #>  [8495,]  171  183  180 #>  [8496,]  172  184  179 #>  [8497,]  172  184  179 #>  [8498,]  171  183  180 #>  [8499,]  171  183  180 #>  [8500,]  171  183  180 #>  [8501,]  174  185  181 #>  [8502,]  173  186  182 #>  [8503,]  174  185  181 #>  [8504,]  174  185  181 #>  [8505,]  174  185  181 #>  [8506,]  173  186  182 #>  [8507,]  174  185  181 #>  [8508,]  174  185  181 #>  [8509,]  174  185  181 #>  [8510,]  174  185  181 #>  [8511,]  173  187  182 #>  [8512,]  173  187  182 #>  [8513,]  174  185  181 #>  [8514,]  174  185  181 #>  [8515,]  173  187  182 #>  [8516,]  174  185  181 #>  [8517,]  173  186  182 #>  [8518,]  174  185  181 #>  [8519,]  173  187  182 #>  [8520,]  174  185  181 #>  [8521,]  174  185  181 #>  [8522,]  174  185  181 #>  [8523,]  173  186  182 #>  [8524,]  174  185  181 #>  [8525,]  174  185  181 #>  [8526,]  173  187  182 #>  [8527,]  174  185  181 #>  [8528,]  174  185  181 #>  [8529,]  173  186  182 #>  [8530,]  173  187  182 #>  [8531,]  173  187  182 #>  [8532,]  173  186  182 #>  [8533,]  174  185  181 #>  [8534,]  173  186  182 #>  [8535,]  173  186  182 #>  [8536,]  174  185  181 #>  [8537,]  173  186  182 #>  [8538,]  174  185  181 #>  [8539,]  174  185  181 #>  [8540,]  174  185  181 #>  [8541,]  174  185  181 #>  [8542,]  173  187  182 #>  [8543,]  173  186  182 #>  [8544,]  173  186  182 #>  [8545,]  174  185  181 #>  [8546,]  173  186  182 #>  [8547,]  173  186  182 #>  [8548,]  173  187  182 #>  [8549,]  174  185  181 #>  [8550,]  174  185  181 #>  [8551,]  173  186  182 #>  [8552,]  174  185  181 #>  [8553,]  174  185  181 #>  [8554,]  174  185  181 #>  [8555,]  174  185  181 #>  [8556,]  173  186  182 #>  [8557,]  174  185  181 #>  [8558,]  174  185  181 #>  [8559,]  174  185  181 #>  [8560,]  173  187  182 #>  [8561,]  173  187  182 #>  [8562,]  173  187  182 #>  [8563,]  173  186  182 #>  [8564,]  173  186  182 #>  [8565,]  173  186  182 #>  [8566,]  173  186  182 #>  [8567,]  174  185  181 #>  [8568,]  173  187  182 #>  [8569,]  173  187  182 #>  [8570,]  173  186  182 #>  [8571,]  174  185  181 #>  [8572,]  174  185  181 #>  [8573,]  174  185  181 #>  [8574,]  174  185  181 #>  [8575,]  173  187  182 #>  [8576,]  174  185  181 #>  [8577,]  174  185  181 #>  [8578,]  173  186  182 #>  [8579,]  173  186  182 #>  [8580,]  174  185  181 #>  [8581,]  173  186  182 #>  [8582,]  173  187  182 #>  [8583,]  174  185  181 #>  [8584,]  174  185  181 #>  [8585,]  174  185  181 #>  [8586,]  174  185  181 #>  [8587,]  174  185  181 #>  [8588,]  174  185  181 #>  [8589,]  173  186  182 #>  [8590,]  174  185  181 #>  [8591,]  174  185  181 #>  [8592,]  173  187  182 #>  [8593,]  173  187  182 #>  [8594,]  173  186  182 #>  [8595,]  173  186  182 #>  [8596,]  173  187  182 #>  [8597,]  173  187  182 #>  [8598,]  174  185  181 #>  [8599,]  174  185  181 #>  [8600,]  173  186  182 #>  [8601,]  176  189  184 #>  [8602,]  176  189  183 #>  [8603,]  175  188  184 #>  [8604,]  175  188  184 #>  [8605,]  176  189  184 #>  [8606,]  176  189  183 #>  [8607,]  175  188  184 #>  [8608,]  175  188  184 #>  [8609,]  176  189  184 #>  [8610,]  176  189  184 #>  [8611,]  176  189  183 #>  [8612,]  175  188  183 #>  [8613,]  176  189  184 #>  [8614,]  176  189  184 #>  [8615,]  176  189  183 #>  [8616,]  176  189  184 #>  [8617,]  176  189  183 #>  [8618,]  176  189  183 #>  [8619,]  176  189  183 #>  [8620,]  176  189  184 #>  [8621,]  176  189  183 #>  [8622,]  176  189  184 #>  [8623,]  175  188  183 #>  [8624,]  176  189  184 #>  [8625,]  175  188  184 #>  [8626,]  176  189  183 #>  [8627,]  176  189  184 #>  [8628,]  176  189  184 #>  [8629,]  176  189  183 #>  [8630,]  176  189  183 #>  [8631,]  175  188  183 #>  [8632,]  175  188  183 #>  [8633,]  176  189  184 #>  [8634,]  176  189  183 #>  [8635,]  176  189  183 #>  [8636,]  176  189  184 #>  [8637,]  175  188  183 #>  [8638,]  176  189  183 #>  [8639,]  176  189  184 #>  [8640,]  175  188  184 #>  [8641,]  176  189  184 #>  [8642,]  176  189  183 #>  [8643,]  176  189  183 #>  [8644,]  176  189  183 #>  [8645,]  176  189  184 #>  [8646,]  175  188  183 #>  [8647,]  175  188  183 #>  [8648,]  176  189  183 #>  [8649,]  176  189  184 #>  [8650,]  176  189  184 #>  [8651,]  176  189  183 #>  [8652,]  175  188  184 #>  [8653,]  176  189  184 #>  [8654,]  176  189  184 #>  [8655,]  175  188  184 #>  [8656,]  176  189  183 #>  [8657,]  175  188  184 #>  [8658,]  176  189  184 #>  [8659,]  175  188  184 #>  [8660,]  175  188  183 #>  [8661,]  176  189  183 #>  [8662,]  176  189  183 #>  [8663,]  176  189  183 #>  [8664,]  176  189  183 #>  [8665,]  176  189  183 #>  [8666,]  176  189  183 #>  [8667,]  176  189  184 #>  [8668,]  175  188  183 #>  [8669,]  176  189  183 #>  [8670,]  176  189  183 #>  [8671,]  176  189  184 #>  [8672,]  175  188  184 #>  [8673,]  176  189  184 #>  [8674,]  175  188  184 #>  [8675,]  176  189  183 #>  [8676,]  175  188  184 #>  [8677,]  176  189  184 #>  [8678,]  176  189  183 #>  [8679,]  176  189  183 #>  [8680,]  175  188  184 #>  [8681,]  176  189  183 #>  [8682,]  176  189  183 #>  [8683,]  176  189  184 #>  [8684,]  176  189  184 #>  [8685,]  176  189  184 #>  [8686,]  175  188  184 #>  [8687,]  176  189  184 #>  [8688,]  176  189  184 #>  [8689,]  176  189  183 #>  [8690,]  176  189  184 #>  [8691,]  176  189  184 #>  [8692,]  175  188  183 #>  [8693,]  176  189  183 #>  [8694,]  176  189  183 #>  [8695,]  176  189  183 #>  [8696,]  175  188  183 #>  [8697,]  175  188  183 #>  [8698,]  175  188  183 #>  [8699,]  176  189  184 #>  [8700,]  176  189  183 #>  [8701,]  177  190  185 #>  [8702,]  177  190  185 #>  [8703,]  177  190  185 #>  [8704,]  177  190  185 #>  [8705,]  177  190  185 #>  [8706,]  177  190  185 #>  [8707,]  177  190  185 #>  [8708,]  177  190  185 #>  [8709,]  178  191  186 #>  [8710,]  177  190  185 #>  [8711,]  177  190  185 #>  [8712,]  177  190  185 #>  [8713,]  178  191  186 #>  [8714,]  177  190  185 #>  [8715,]  177  190  185 #>  [8716,]  177  190  185 #>  [8717,]  178  191  186 #>  [8718,]  178  191  186 #>  [8719,]  177  190  185 #>  [8720,]  177  190  185 #>  [8721,]  177  190  185 #>  [8722,]  177  190  185 #>  [8723,]  177  190  185 #>  [8724,]  177  190  185 #>  [8725,]  177  190  185 #>  [8726,]  177  190  185 #>  [8727,]  178  191  186 #>  [8728,]  177  190  185 #>  [8729,]  177  190  185 #>  [8730,]  177  190  185 #>  [8731,]  177  190  185 #>  [8732,]  177  190  185 #>  [8733,]  177  190  185 #>  [8734,]  177  190  185 #>  [8735,]  177  190  185 #>  [8736,]  177  190  185 #>  [8737,]  177  190  185 #>  [8738,]  177  190  185 #>  [8739,]  177  190  185 #>  [8740,]  177  190  185 #>  [8741,]  177  190  185 #>  [8742,]  178  191  186 #>  [8743,]  177  190  185 #>  [8744,]  177  190  185 #>  [8745,]  177  190  185 #>  [8746,]  177  190  185 #>  [8747,]  177  190  185 #>  [8748,]  177  190  185 #>  [8749,]  177  190  185 #>  [8750,]  177  190  185 #>  [8751,]  178  191  186 #>  [8752,]  177  190  185 #>  [8753,]  178  191  186 #>  [8754,]  177  190  185 #>  [8755,]  177  190  185 #>  [8756,]  177  190  185 #>  [8757,]  177  190  185 #>  [8758,]  177  190  185 #>  [8759,]  177  190  185 #>  [8760,]  177  190  185 #>  [8761,]  177  190  185 #>  [8762,]  177  190  185 #>  [8763,]  177  190  185 #>  [8764,]  177  190  185 #>  [8765,]  178  191  186 #>  [8766,]  178  191  186 #>  [8767,]  177  190  185 #>  [8768,]  177  190  185 #>  [8769,]  177  190  185 #>  [8770,]  177  190  185 #>  [8771,]  177  190  185 #>  [8772,]  177  190  185 #>  [8773,]  177  190  185 #>  [8774,]  177  190  185 #>  [8775,]  177  190  185 #>  [8776,]  177  190  185 #>  [8777,]  177  190  185 #>  [8778,]  177  190  185 #>  [8779,]  178  191  186 #>  [8780,]  177  190  185 #>  [8781,]  177  190  185 #>  [8782,]  178  191  186 #>  [8783,]  177  190  185 #>  [8784,]  178  191  186 #>  [8785,]  177  190  185 #>  [8786,]  177  190  185 #>  [8787,]  177  190  185 #>  [8788,]  177  190  185 #>  [8789,]  177  190  185 #>  [8790,]  177  190  185 #>  [8791,]  178  191  186 #>  [8792,]  177  190  185 #>  [8793,]  178  191  186 #>  [8794,]  178  191  186 #>  [8795,]  177  190  185 #>  [8796,]  177  190  185 #>  [8797,]  177  190  185 #>  [8798,]  177  190  185 #>  [8799,]  177  190  185 #>  [8800,]  177  190  185 #>  [8801,]  180  193  187 #>  [8802,]  180  193  187 #>  [8803,]  179  192  187 #>  [8804,]  180  193  187 #>  [8805,]  180  193  187 #>  [8806,]  179  192  187 #>  [8807,]  179  192  187 #>  [8808,]  180  193  187 #>  [8809,]  180  193  187 #>  [8810,]  180  193  187 #>  [8811,]  180  193  187 #>  [8812,]  180  193  187 #>  [8813,]  180  193  187 #>  [8814,]  180  193  187 #>  [8815,]  180  193  187 #>  [8816,]  180  193  187 #>  [8817,]  180  193  187 #>  [8818,]  180  193  187 #>  [8819,]  180  193  187 #>  [8820,]  179  192  187 #>  [8821,]  179  192  187 #>  [8822,]  180  193  187 #>  [8823,]  179  192  187 #>  [8824,]  180  193  187 #>  [8825,]  179  192  187 #>  [8826,]  180  193  187 #>  [8827,]  180  193  187 #>  [8828,]  180  193  187 #>  [8829,]  180  193  187 #>  [8830,]  180  193  187 #>  [8831,]  180  193  187 #>  [8832,]  180  193  187 #>  [8833,]  180  193  187 #>  [8834,]  179  192  187 #>  [8835,]  179  192  187 #>  [8836,]  180  193  187 #>  [8837,]  179  192  187 #>  [8838,]  180  193  187 #>  [8839,]  180  193  187 #>  [8840,]  180  193  187 #>  [8841,]  180  193  187 #>  [8842,]  179  192  187 #>  [8843,]  180  193  187 #>  [8844,]  179  192  187 #>  [8845,]  180  193  187 #>  [8846,]  180  193  187 #>  [8847,]  180  193  187 #>  [8848,]  180  193  187 #>  [8849,]  180  193  187 #>  [8850,]  179  192  187 #>  [8851,]  180  193  187 #>  [8852,]  180  193  187 #>  [8853,]  179  192  187 #>  [8854,]  179  192  187 #>  [8855,]  179  192  187 #>  [8856,]  179  192  187 #>  [8857,]  179  192  187 #>  [8858,]  180  193  187 #>  [8859,]  180  193  187 #>  [8860,]  180  193  187 #>  [8861,]  180  193  187 #>  [8862,]  180  193  187 #>  [8863,]  180  193  187 #>  [8864,]  179  192  187 #>  [8865,]  179  192  187 #>  [8866,]  180  193  187 #>  [8867,]  180  193  187 #>  [8868,]  180  193  187 #>  [8869,]  180  193  187 #>  [8870,]  180  193  187 #>  [8871,]  180  193  187 #>  [8872,]  180  193  187 #>  [8873,]  179  192  187 #>  [8874,]  179  192  187 #>  [8875,]  180  193  187 #>  [8876,]  180  193  187 #>  [8877,]  180  193  187 #>  [8878,]  180  193  187 #>  [8879,]  180  193  187 #>  [8880,]  179  192  187 #>  [8881,]  179  192  187 #>  [8882,]  179  192  187 #>  [8883,]  180  193  187 #>  [8884,]  179  192  187 #>  [8885,]  179  192  187 #>  [8886,]  179  192  187 #>  [8887,]  180  193  187 #>  [8888,]  179  192  187 #>  [8889,]  179  192  187 #>  [8890,]  180  193  187 #>  [8891,]  180  193  187 #>  [8892,]  180  193  187 #>  [8893,]  180  193  187 #>  [8894,]  179  192  187 #>  [8895,]  180  193  187 #>  [8896,]  180  193  187 #>  [8897,]  179  192  187 #>  [8898,]  179  192  187 #>  [8899,]  179  192  187 #>  [8900,]  180  193  187 #>  [8901,]  182  195  189 #>  [8902,]  181  194  188 #>  [8903,]  181  194  188 #>  [8904,]  182  195  189 #>  [8905,]  182  196  189 #>  [8906,]  181  194  188 #>  [8907,]  181  194  188 #>  [8908,]  181  194  188 #>  [8909,]  181  194  188 #>  [8910,]  182  196  189 #>  [8911,]  182  195  189 #>  [8912,]  182  196  189 #>  [8913,]  182  196  189 #>  [8914,]  182  195  189 #>  [8915,]  182  195  189 #>  [8916,]  182  195  189 #>  [8917,]  182  196  189 #>  [8918,]  182  196  189 #>  [8919,]  182  195  189 #>  [8920,]  181  194  188 #>  [8921,]  181  194  188 #>  [8922,]  182  196  189 #>  [8923,]  181  194  188 #>  [8924,]  182  196  189 #>  [8925,]  181  194  188 #>  [8926,]  182  195  189 #>  [8927,]  182  196  189 #>  [8928,]  182  195  189 #>  [8929,]  181  194  188 #>  [8930,]  182  196  189 #>  [8931,]  182  196  189 #>  [8932,]  182  196  189 #>  [8933,]  182  196  189 #>  [8934,]  181  194  188 #>  [8935,]  181  194  188 #>  [8936,]  181  194  188 #>  [8937,]  181  194  188 #>  [8938,]  182  195  189 #>  [8939,]  182  196  189 #>  [8940,]  181  194  188 #>  [8941,]  181  194  188 #>  [8942,]  181  194  188 #>  [8943,]  182  195  189 #>  [8944,]  181  194  188 #>  [8945,]  181  194  188 #>  [8946,]  182  195  189 #>  [8947,]  182  196  189 #>  [8948,]  182  196  189 #>  [8949,]  181  194  188 #>  [8950,]  181  194  188 #>  [8951,]  182  196  189 #>  [8952,]  182  195  189 #>  [8953,]  181  194  188 #>  [8954,]  181  194  188 #>  [8955,]  181  194  188 #>  [8956,]  181  194  188 #>  [8957,]  181  194  188 #>  [8958,]  182  196  189 #>  [8959,]  182  195  189 #>  [8960,]  181  194  188 #>  [8961,]  182  196  189 #>  [8962,]  181  194  188 #>  [8963,]  182  196  189 #>  [8964,]  181  194  188 #>  [8965,]  181  194  188 #>  [8966,]  182  196  189 #>  [8967,]  181  194  188 #>  [8968,]  182  195  189 #>  [8969,]  182  195  189 #>  [8970,]  182  196  189 #>  [8971,]  182  196  189 #>  [8972,]  181  194  188 #>  [8973,]  181  194  188 #>  [8974,]  181  194  188 #>  [8975,]  182  196  189 #>  [8976,]  181  194  188 #>  [8977,]  182  195  189 #>  [8978,]  182  196  189 #>  [8979,]  182  195  189 #>  [8980,]  181  194  188 #>  [8981,]  181  194  188 #>  [8982,]  181  194  188 #>  [8983,]  182  196  189 #>  [8984,]  181  194  188 #>  [8985,]  181  194  188 #>  [8986,]  181  194  188 #>  [8987,]  182  196  189 #>  [8988,]  181  194  188 #>  [8989,]  181  194  188 #>  [8990,]  182  196  189 #>  [8991,]  182  195  189 #>  [8992,]  182  196  189 #>  [8993,]  182  196  189 #>  [8994,]  181  194  188 #>  [8995,]  182  196  189 #>  [8996,]  182  195  189 #>  [8997,]  181  194  188 #>  [8998,]  181  194  188 #>  [8999,]  181  194  188 #>  [9000,]  182  195  189 #>  [9001,]  184  198  191 #>  [9002,]  184  198  191 #>  [9003,]  184  198  191 #>  [9004,]  184  198  191 #>  [9005,]  184  198  191 #>  [9006,]  184  198  191 #>  [9007,]  183  197  190 #>  [9008,]  184  198  191 #>  [9009,]  184  198  191 #>  [9010,]  184  198  191 #>  [9011,]  184  198  191 #>  [9012,]  184  198  191 #>  [9013,]  184  198  191 #>  [9014,]  184  198  191 #>  [9015,]  184  198  191 #>  [9016,]  184  198  191 #>  [9017,]  184  198  191 #>  [9018,]  184  198  191 #>  [9019,]  184  198  191 #>  [9020,]  184  198  191 #>  [9021,]  183  197  190 #>  [9022,]  184  198  191 #>  [9023,]  184  198  191 #>  [9024,]  184  198  191 #>  [9025,]  184  198  191 #>  [9026,]  184  198  191 #>  [9027,]  184  198  191 #>  [9028,]  184  198  191 #>  [9029,]  184  198  191 #>  [9030,]  183  197  190 #>  [9031,]  184  198  191 #>  [9032,]  184  198  191 #>  [9033,]  184  198  191 #>  [9034,]  184  198  191 #>  [9035,]  184  198  191 #>  [9036,]  184  198  191 #>  [9037,]  184  198  191 #>  [9038,]  184  198  191 #>  [9039,]  183  197  190 #>  [9040,]  184  198  191 #>  [9041,]  184  198  191 #>  [9042,]  184  198  191 #>  [9043,]  184  198  191 #>  [9044,]  184  198  191 #>  [9045,]  184  198  191 #>  [9046,]  184  198  191 #>  [9047,]  184  198  191 #>  [9048,]  184  198  191 #>  [9049,]  183  197  190 #>  [9050,]  184  198  191 #>  [9051,]  184  198  191 #>  [9052,]  184  198  191 #>  [9053,]  184  198  191 #>  [9054,]  183  197  190 #>  [9055,]  184  198  191 #>  [9056,]  184  198  191 #>  [9057,]  184  198  191 #>  [9058,]  184  198  191 #>  [9059,]  184  198  191 #>  [9060,]  184  198  191 #>  [9061,]  184  198  191 #>  [9062,]  183  197  190 #>  [9063,]  184  198  191 #>  [9064,]  184  198  191 #>  [9065,]  184  198  191 #>  [9066,]  184  198  191 #>  [9067,]  184  198  191 #>  [9068,]  184  198  191 #>  [9069,]  184  198  191 #>  [9070,]  183  197  190 #>  [9071,]  184  198  191 #>  [9072,]  184  198  191 #>  [9073,]  184  198  191 #>  [9074,]  184  198  191 #>  [9075,]  184  198  191 #>  [9076,]  184  198  191 #>  [9077,]  184  198  191 #>  [9078,]  184  198  191 #>  [9079,]  184  198  191 #>  [9080,]  183  197  190 #>  [9081,]  184  198  191 #>  [9082,]  184  198  191 #>  [9083,]  184  198  191 #>  [9084,]  184  198  191 #>  [9085,]  184  198  191 #>  [9086,]  184  198  191 #>  [9087,]  184  198  191 #>  [9088,]  184  198  191 #>  [9089,]  184  198  191 #>  [9090,]  184  198  191 #>  [9091,]  184  198  191 #>  [9092,]  184  198  191 #>  [9093,]  184  198  191 #>  [9094,]  184  198  191 #>  [9095,]  183  197  190 #>  [9096,]  184  198  191 #>  [9097,]  184  198  191 #>  [9098,]  183  197  190 #>  [9099,]  184  198  191 #>  [9100,]  184  198  191 #>  [9101,]  185  199  192 #>  [9102,]  185  199  192 #>  [9103,]  185  199  192 #>  [9104,]  185  199  192 #>  [9105,]  185  199  192 #>  [9106,]  185  199  192 #>  [9107,]  185  199  192 #>  [9108,]  185  199  192 #>  [9109,]  185  199  192 #>  [9110,]  185  199  192 #>  [9111,]  185  199  192 #>  [9112,]  185  199  192 #>  [9113,]  185  199  192 #>  [9114,]  185  199  192 #>  [9115,]  185  199  192 #>  [9116,]  185  199  192 #>  [9117,]  185  199  192 #>  [9118,]  185  199  192 #>  [9119,]  185  199  192 #>  [9120,]  185  199  192 #>  [9121,]  185  199  192 #>  [9122,]  186  200  193 #>  [9123,]  185  199  192 #>  [9124,]  185  199  192 #>  [9125,]  185  199  192 #>  [9126,]  185  199  192 #>  [9127,]  185  199  192 #>  [9128,]  185  199  192 #>  [9129,]  186  200  193 #>  [9130,]  185  199  192 #>  [9131,]  185  199  192 #>  [9132,]  185  199  192 #>  [9133,]  185  199  192 #>  [9134,]  185  199  192 #>  [9135,]  185  199  192 #>  [9136,]  185  199  192 #>  [9137,]  185  199  192 #>  [9138,]  185  199  192 #>  [9139,]  185  199  192 #>  [9140,]  185  199  192 #>  [9141,]  185  199  192 #>  [9142,]  185  199  192 #>  [9143,]  185  199  192 #>  [9144,]  185  199  192 #>  [9145,]  185  199  192 #>  [9146,]  185  199  192 #>  [9147,]  185  199  192 #>  [9148,]  185  199  192 #>  [9149,]  185  199  192 #>  [9150,]  185  199  192 #>  [9151,]  185  199  192 #>  [9152,]  185  199  192 #>  [9153,]  185  199  192 #>  [9154,]  185  199  192 #>  [9155,]  185  199  192 #>  [9156,]  185  199  192 #>  [9157,]  185  199  192 #>  [9158,]  186  200  193 #>  [9159,]  185  199  192 #>  [9160,]  185  199  192 #>  [9161,]  185  199  192 #>  [9162,]  185  199  192 #>  [9163,]  185  199  192 #>  [9164,]  186  200  193 #>  [9165,]  185  199  192 #>  [9166,]  185  199  192 #>  [9167,]  185  199  192 #>  [9168,]  185  199  192 #>  [9169,]  185  199  192 #>  [9170,]  185  199  192 #>  [9171,]  185  199  192 #>  [9172,]  185  199  192 #>  [9173,]  185  199  192 #>  [9174,]  185  199  192 #>  [9175,]  185  199  192 #>  [9176,]  185  199  192 #>  [9177,]  186  200  193 #>  [9178,]  185  199  192 #>  [9179,]  185  199  192 #>  [9180,]  185  199  192 #>  [9181,]  185  199  192 #>  [9182,]  185  199  192 #>  [9183,]  185  199  192 #>  [9184,]  185  199  192 #>  [9185,]  185  199  192 #>  [9186,]  185  199  192 #>  [9187,]  186  200  193 #>  [9188,]  185  199  192 #>  [9189,]  185  199  192 #>  [9190,]  185  199  192 #>  [9191,]  185  199  192 #>  [9192,]  185  199  192 #>  [9193,]  185  199  192 #>  [9194,]  185  199  192 #>  [9195,]  185  199  192 #>  [9196,]  185  199  192 #>  [9197,]  185  199  192 #>  [9198,]  185  199  192 #>  [9199,]  185  199  192 #>  [9200,]  185  199  192 #>  [9201,]  188  202  195 #>  [9202,]  188  202  195 #>  [9203,]  187  201  194 #>  [9204,]  187  201  194 #>  [9205,]  187  201  194 #>  [9206,]  187  201  194 #>  [9207,]  188  202  195 #>  [9208,]  188  202  195 #>  [9209,]  187  201  194 #>  [9210,]  187  201  194 #>  [9211,]  187  201  194 #>  [9212,]  188  202  195 #>  [9213,]  188  202  195 #>  [9214,]  187  201  194 #>  [9215,]  188  202  195 #>  [9216,]  188  202  195 #>  [9217,]  187  201  194 #>  [9218,]  188  202  195 #>  [9219,]  188  202  195 #>  [9220,]  188  202  195 #>  [9221,]  187  201  194 #>  [9222,]  188  202  195 #>  [9223,]  188  202  195 #>  [9224,]  187  201  194 #>  [9225,]  187  201  194 #>  [9226,]  188  202  195 #>  [9227,]  188  202  195 #>  [9228,]  187  201  194 #>  [9229,]  188  202  195 #>  [9230,]  188  202  195 #>  [9231,]  187  201  194 #>  [9232,]  187  201  194 #>  [9233,]  188  202  195 #>  [9234,]  187  201  194 #>  [9235,]  187  201  194 #>  [9236,]  188  202  195 #>  [9237,]  188  202  195 #>  [9238,]  188  202  195 #>  [9239,]  187  201  194 #>  [9240,]  187  201  194 #>  [9241,]  188  202  195 #>  [9242,]  187  201  194 #>  [9243,]  188  202  195 #>  [9244,]  188  202  195 #>  [9245,]  188  202  195 #>  [9246,]  188  202  195 #>  [9247,]  187  201  194 #>  [9248,]  187  201  194 #>  [9249,]  188  202  195 #>  [9250,]  188  202  195 #>  [9251,]  188  202  195 #>  [9252,]  187  201  194 #>  [9253,]  188  202  195 #>  [9254,]  187  201  194 #>  [9255,]  188  202  195 #>  [9256,]  188  202  195 #>  [9257,]  187  201  194 #>  [9258,]  188  202  195 #>  [9259,]  188  202  195 #>  [9260,]  188  202  195 #>  [9261,]  188  202  195 #>  [9262,]  187  201  194 #>  [9263,]  188  202  195 #>  [9264,]  188  202  195 #>  [9265,]  187  201  194 #>  [9266,]  188  202  195 #>  [9267,]  187  201  194 #>  [9268,]  188  202  195 #>  [9269,]  188  202  195 #>  [9270,]  187  201  194 #>  [9271,]  188  202  195 #>  [9272,]  187  201  194 #>  [9273,]  187  201  194 #>  [9274,]  187  201  194 #>  [9275,]  188  202  195 #>  [9276,]  187  201  194 #>  [9277,]  188  202  195 #>  [9278,]  188  202  195 #>  [9279,]  187  201  194 #>  [9280,]  188  202  195 #>  [9281,]  188  202  195 #>  [9282,]  187  201  194 #>  [9283,]  188  202  195 #>  [9284,]  188  202  195 #>  [9285,]  188  202  195 #>  [9286,]  187  201  194 #>  [9287,]  188  202  195 #>  [9288,]  187  201  194 #>  [9289,]  187  201  194 #>  [9290,]  188  202  195 #>  [9291,]  187  201  194 #>  [9292,]  187  201  194 #>  [9293,]  188  202  195 #>  [9294,]  187  201  194 #>  [9295,]  188  202  195 #>  [9296,]  188  202  195 #>  [9297,]  188  202  195 #>  [9298,]  187  201  194 #>  [9299,]  187  201  194 #>  [9300,]  188  202  195 #>  [9301,]  189  203  196 #>  [9302,]  190  204  197 #>  [9303,]  189  203  196 #>  [9304,]  189  203  196 #>  [9305,]  190  204  197 #>  [9306,]  189  203  196 #>  [9307,]  189  203  196 #>  [9308,]  189  203  196 #>  [9309,]  190  204  197 #>  [9310,]  190  204  197 #>  [9311,]  189  203  196 #>  [9312,]  190  204  197 #>  [9313,]  190  204  197 #>  [9314,]  189  203  196 #>  [9315,]  189  203  196 #>  [9316,]  189  203  196 #>  [9317,]  190  204  197 #>  [9318,]  190  204  197 #>  [9319,]  189  203  196 #>  [9320,]  190  204  197 #>  [9321,]  190  204  197 #>  [9322,]  189  203  196 #>  [9323,]  190  204  197 #>  [9324,]  190  204  197 #>  [9325,]  189  203  196 #>  [9326,]  189  203  196 #>  [9327,]  190  204  197 #>  [9328,]  189  203  196 #>  [9329,]  190  204  197 #>  [9330,]  189  203  196 #>  [9331,]  190  204  197 #>  [9332,]  190  204  197 #>  [9333,]  190  204  197 #>  [9334,]  189  203  196 #>  [9335,]  189  203  196 #>  [9336,]  190  204  197 #>  [9337,]  189  203  196 #>  [9338,]  189  203  196 #>  [9339,]  189  203  196 #>  [9340,]  190  204  197 #>  [9341,]  189  203  196 #>  [9342,]  189  203  196 #>  [9343,]  189  203  196 #>  [9344,]  190  204  197 #>  [9345,]  189  203  196 #>  [9346,]  189  203  196 #>  [9347,]  189  203  196 #>  [9348,]  189  203  196 #>  [9349,]  189  203  196 #>  [9350,]  189  203  196 #>  [9351,]  189  203  196 #>  [9352,]  189  203  196 #>  [9353,]  190  204  197 #>  [9354,]  189  203  196 #>  [9355,]  189  203  196 #>  [9356,]  189  203  196 #>  [9357,]  189  203  196 #>  [9358,]  189  203  196 #>  [9359,]  189  203  196 #>  [9360,]  190  204  197 #>  [9361,]  190  204  197 #>  [9362,]  189  203  196 #>  [9363,]  190  204  197 #>  [9364,]  189  203  196 #>  [9365,]  189  203  196 #>  [9366,]  189  203  196 #>  [9367,]  189  203  196 #>  [9368,]  189  203  196 #>  [9369,]  189  203  196 #>  [9370,]  190  204  197 #>  [9371,]  189  203  196 #>  [9372,]  189  203  196 #>  [9373,]  189  203  196 #>  [9374,]  189  203  196 #>  [9375,]  190  204  197 #>  [9376,]  189  203  196 #>  [9377,]  189  203  196 #>  [9378,]  189  203  196 #>  [9379,]  189  203  196 #>  [9380,]  190  204  197 #>  [9381,]  190  204  197 #>  [9382,]  189  203  196 #>  [9383,]  190  204  197 #>  [9384,]  190  204  197 #>  [9385,]  189  203  196 #>  [9386,]  190  204  197 #>  [9387,]  189  203  196 #>  [9388,]  190  204  197 #>  [9389,]  189  203  196 #>  [9390,]  189  203  196 #>  [9391,]  189  203  196 #>  [9392,]  189  203  196 #>  [9393,]  189  203  196 #>  [9394,]  189  203  196 #>  [9395,]  189  203  196 #>  [9396,]  189  203  196 #>  [9397,]  189  203  196 #>  [9398,]  189  203  196 #>  [9399,]  189  203  196 #>  [9400,]  189  203  196 #>  [9401,]  191  207  198 #>  [9402,]  191  207  198 #>  [9403,]  191  206  198 #>  [9404,]  191  207  198 #>  [9405,]  191  207  198 #>  [9406,]  192  205  199 #>  [9407,]  191  206  198 #>  [9408,]  192  205  199 #>  [9409,]  192  205  199 #>  [9410,]  191  207  198 #>  [9411,]  191  207  198 #>  [9412,]  192  205  199 #>  [9413,]  191  207  198 #>  [9414,]  191  207  198 #>  [9415,]  192  205  199 #>  [9416,]  191  207  198 #>  [9417,]  191  207  198 #>  [9418,]  191  207  198 #>  [9419,]  191  207  198 #>  [9420,]  191  207  198 #>  [9421,]  191  207  198 #>  [9422,]  191  207  198 #>  [9423,]  191  207  198 #>  [9424,]  191  207  198 #>  [9425,]  191  207  198 #>  [9426,]  192  205  199 #>  [9427,]  191  207  198 #>  [9428,]  191  207  198 #>  [9429,]  191  207  198 #>  [9430,]  191  207  198 #>  [9431,]  191  206  198 #>  [9432,]  191  207  198 #>  [9433,]  192  205  199 #>  [9434,]  191  207  198 #>  [9435,]  191  207  198 #>  [9436,]  191  207  198 #>  [9437,]  191  207  198 #>  [9438,]  191  207  198 #>  [9439,]  191  207  198 #>  [9440,]  191  207  198 #>  [9441,]  191  207  198 #>  [9442,]  191  207  198 #>  [9443,]  192  205  199 #>  [9444,]  191  207  198 #>  [9445,]  191  207  198 #>  [9446,]  192  205  199 #>  [9447,]  191  207  198 #>  [9448,]  191  207  198 #>  [9449,]  191  207  198 #>  [9450,]  191  207  198 #>  [9451,]  192  205  199 #>  [9452,]  191  206  198 #>  [9453,]  191  207  198 #>  [9454,]  191  207  198 #>  [9455,]  191  207  198 #>  [9456,]  192  205  199 #>  [9457,]  192  205  199 #>  [9458,]  191  207  198 #>  [9459,]  191  206  198 #>  [9460,]  191  206  198 #>  [9461,]  192  205  199 #>  [9462,]  191  207  198 #>  [9463,]  191  207  198 #>  [9464,]  192  205  199 #>  [9465,]  191  207  198 #>  [9466,]  192  205  199 #>  [9467,]  191  207  198 #>  [9468,]  192  205  199 #>  [9469,]  191  207  198 #>  [9470,]  191  207  198 #>  [9471,]  191  207  198 #>  [9472,]  191  207  198 #>  [9473,]  191  207  198 #>  [9474,]  191  207  198 #>  [9475,]  191  207  198 #>  [9476,]  192  205  199 #>  [9477,]  191  207  198 #>  [9478,]  191  207  198 #>  [9479,]  191  207  198 #>  [9480,]  191  207  198 #>  [9481,]  191  207  198 #>  [9482,]  191  207  198 #>  [9483,]  191  207  198 #>  [9484,]  191  207  198 #>  [9485,]  191  207  198 #>  [9486,]  191  207  198 #>  [9487,]  191  207  198 #>  [9488,]  191  207  198 #>  [9489,]  191  207  198 #>  [9490,]  191  207  198 #>  [9491,]  191  207  198 #>  [9492,]  191  207  198 #>  [9493,]  191  207  198 #>  [9494,]  192  205  199 #>  [9495,]  191  207  198 #>  [9496,]  191  206  198 #>  [9497,]  191  206  198 #>  [9498,]  191  207  198 #>  [9499,]  191  207  198 #>  [9500,]  191  207  198 #>  [9501,]  193  208  200 #>  [9502,]  193  209  201 #>  [9503,]  193  209  201 #>  [9504,]  193  209  201 #>  [9505,]  193  209  201 #>  [9506,]  193  210  201 #>  [9507,]  193  209  201 #>  [9508,]  193  209  201 #>  [9509,]  193  208  200 #>  [9510,]  193  209  201 #>  [9511,]  193  208  200 #>  [9512,]  193  209  201 #>  [9513,]  193  208  200 #>  [9514,]  193  210  201 #>  [9515,]  193  210  201 #>  [9516,]  193  210  201 #>  [9517,]  193  208  200 #>  [9518,]  193  208  200 #>  [9519,]  193  209  201 #>  [9520,]  193  208  200 #>  [9521,]  193  210  201 #>  [9522,]  193  209  201 #>  [9523,]  193  209  201 #>  [9524,]  193  209  201 #>  [9525,]  193  209  201 #>  [9526,]  193  209  201 #>  [9527,]  193  208  200 #>  [9528,]  193  208  200 #>  [9529,]  193  208  200 #>  [9530,]  193  209  201 #>  [9531,]  193  209  201 #>  [9532,]  193  209  201 #>  [9533,]  193  208  200 #>  [9534,]  193  209  201 #>  [9535,]  193  209  201 #>  [9536,]  193  208  200 #>  [9537,]  193  209  201 #>  [9538,]  193  208  200 #>  [9539,]  193  208  200 #>  [9540,]  193  209  201 #>  [9541,]  193  208  200 #>  [9542,]  193  208  200 #>  [9543,]  193  209  201 #>  [9544,]  193  210  201 #>  [9545,]  193  209  201 #>  [9546,]  193  209  201 #>  [9547,]  193  209  201 #>  [9548,]  193  209  201 #>  [9549,]  193  209  201 #>  [9550,]  193  210  201 #>  [9551,]  193  208  200 #>  [9552,]  193  209  201 #>  [9553,]  193  208  200 #>  [9554,]  193  208  200 #>  [9555,]  193  209  201 #>  [9556,]  193  208  200 #>  [9557,]  193  209  201 #>  [9558,]  193  208  200 #>  [9559,]  193  210  201 #>  [9560,]  193  209  201 #>  [9561,]  193  210  201 #>  [9562,]  193  208  200 #>  [9563,]  193  209  201 #>  [9564,]  193  209  201 #>  [9565,]  193  208  200 #>  [9566,]  193  208  200 #>  [9567,]  193  209  201 #>  [9568,]  193  210  201 #>  [9569,]  193  209  201 #>  [9570,]  193  208  200 #>  [9571,]  193  209  201 #>  [9572,]  193  209  201 #>  [9573,]  193  210  201 #>  [9574,]  193  209  201 #>  [9575,]  193  209  201 #>  [9576,]  193  209  201 #>  [9577,]  193  208  200 #>  [9578,]  193  209  201 #>  [9579,]  193  208  200 #>  [9580,]  193  209  201 #>  [9581,]  193  209  201 #>  [9582,]  193  208  200 #>  [9583,]  193  208  200 #>  [9584,]  193  208  200 #>  [9585,]  193  208  200 #>  [9586,]  193  210  201 #>  [9587,]  193  208  200 #>  [9588,]  193  209  201 #>  [9589,]  193  208  200 #>  [9590,]  193  208  200 #>  [9591,]  193  208  200 #>  [9592,]  193  209  201 #>  [9593,]  193  208  200 #>  [9594,]  193  208  200 #>  [9595,]  193  209  201 #>  [9596,]  193  210  201 #>  [9597,]  193  209  201 #>  [9598,]  193  209  201 #>  [9599,]  193  210  201 #>  [9600,]  193  209  201 #>  [9601,]  195  212  203 #>  [9602,]  195  212  203 #>  [9603,]  195  212  203 #>  [9604,]  194  211  202 #>  [9605,]  195  212  203 #>  [9606,]  195  212  203 #>  [9607,]  195  212  203 #>  [9608,]  194  211  202 #>  [9609,]  194  211  202 #>  [9610,]  194  211  202 #>  [9611,]  195  212  203 #>  [9612,]  195  212  203 #>  [9613,]  195  212  203 #>  [9614,]  195  212  203 #>  [9615,]  195  212  203 #>  [9616,]  195  212  203 #>  [9617,]  195  212  203 #>  [9618,]  195  212  203 #>  [9619,]  195  212  203 #>  [9620,]  195  212  203 #>  [9621,]  195  212  203 #>  [9622,]  195  212  203 #>  [9623,]  195  212  203 #>  [9624,]  195  212  203 #>  [9625,]  195  212  203 #>  [9626,]  195  212  203 #>  [9627,]  195  212  203 #>  [9628,]  195  212  203 #>  [9629,]  195  212  203 #>  [9630,]  195  212  203 #>  [9631,]  195  212  203 #>  [9632,]  195  212  203 #>  [9633,]  195  212  203 #>  [9634,]  195  212  203 #>  [9635,]  195  212  203 #>  [9636,]  195  212  203 #>  [9637,]  195  212  203 #>  [9638,]  195  212  203 #>  [9639,]  195  212  203 #>  [9640,]  195  212  203 #>  [9641,]  195  212  203 #>  [9642,]  195  212  203 #>  [9643,]  194  211  202 #>  [9644,]  195  212  203 #>  [9645,]  195  212  203 #>  [9646,]  195  212  203 #>  [9647,]  195  212  203 #>  [9648,]  195  212  203 #>  [9649,]  195  212  203 #>  [9650,]  195  212  203 #>  [9651,]  194  211  202 #>  [9652,]  195  212  203 #>  [9653,]  195  212  203 #>  [9654,]  195  212  203 #>  [9655,]  195  212  203 #>  [9656,]  195  212  203 #>  [9657,]  195  212  203 #>  [9658,]  195  212  203 #>  [9659,]  195  212  203 #>  [9660,]  194  211  202 #>  [9661,]  195  212  203 #>  [9662,]  195  212  203 #>  [9663,]  195  212  203 #>  [9664,]  194  211  202 #>  [9665,]  195  212  203 #>  [9666,]  195  212  203 #>  [9667,]  194  211  202 #>  [9668,]  195  212  203 #>  [9669,]  195  212  203 #>  [9670,]  195  212  203 #>  [9671,]  195  212  203 #>  [9672,]  195  212  203 #>  [9673,]  195  212  203 #>  [9674,]  195  212  203 #>  [9675,]  195  212  203 #>  [9676,]  195  212  203 #>  [9677,]  195  212  203 #>  [9678,]  195  212  203 #>  [9679,]  195  212  203 #>  [9680,]  195  212  203 #>  [9681,]  195  212  203 #>  [9682,]  195  212  203 #>  [9683,]  195  212  203 #>  [9684,]  195  212  203 #>  [9685,]  194  211  202 #>  [9686,]  195  212  203 #>  [9687,]  195  212  203 #>  [9688,]  195  212  203 #>  [9689,]  195  212  203 #>  [9690,]  195  212  203 #>  [9691,]  194  211  202 #>  [9692,]  195  212  203 #>  [9693,]  195  212  203 #>  [9694,]  195  212  203 #>  [9695,]  194  211  202 #>  [9696,]  195  212  203 #>  [9697,]  195  212  203 #>  [9698,]  195  212  203 #>  [9699,]  195  212  203 #>  [9700,]  195  212  203 #>  [9701,]  197  213  204 #>  [9702,]  197  213  204 #>  [9703,]  196  214  205 #>  [9704,]  197  213  204 #>  [9705,]  196  214  205 #>  [9706,]  196  214  205 #>  [9707,]  197  213  204 #>  [9708,]  197  213  204 #>  [9709,]  197  213  204 #>  [9710,]  197  213  204 #>  [9711,]  196  215  205 #>  [9712,]  196  215  205 #>  [9713,]  197  213  204 #>  [9714,]  196  215  205 #>  [9715,]  197  213  204 #>  [9716,]  197  213  204 #>  [9717,]  197  213  204 #>  [9718,]  197  213  204 #>  [9719,]  196  215  205 #>  [9720,]  196  214  205 #>  [9721,]  197  213  204 #>  [9722,]  196  214  205 #>  [9723,]  197  213  204 #>  [9724,]  196  214  205 #>  [9725,]  197  213  204 #>  [9726,]  196  215  205 #>  [9727,]  197  213  204 #>  [9728,]  197  213  204 #>  [9729,]  196  214  205 #>  [9730,]  196  215  205 #>  [9731,]  197  213  204 #>  [9732,]  196  214  205 #>  [9733,]  196  215  205 #>  [9734,]  196  214  205 #>  [9735,]  196  214  205 #>  [9736,]  196  215  205 #>  [9737,]  197  213  204 #>  [9738,]  197  213  204 #>  [9739,]  197  213  204 #>  [9740,]  196  214  205 #>  [9741,]  196  215  205 #>  [9742,]  196  215  205 #>  [9743,]  197  213  204 #>  [9744,]  197  213  204 #>  [9745,]  197  213  204 #>  [9746,]  197  213  204 #>  [9747,]  197  213  204 #>  [9748,]  196  215  205 #>  [9749,]  197  213  204 #>  [9750,]  197  213  204 #>  [9751,]  196  214  205 #>  [9752,]  196  214  205 #>  [9753,]  197  213  204 #>  [9754,]  196  214  205 #>  [9755,]  196  214  205 #>  [9756,]  197  213  204 #>  [9757,]  196  214  205 #>  [9758,]  196  215  205 #>  [9759,]  197  213  204 #>  [9760,]  196  215  205 #>  [9761,]  197  213  204 #>  [9762,]  196  215  205 #>  [9763,]  196  214  205 #>  [9764,]  197  213  204 #>  [9765,]  197  213  204 #>  [9766,]  196  214  205 #>  [9767,]  196  214  205 #>  [9768,]  196  215  205 #>  [9769,]  196  215  205 #>  [9770,]  197  213  204 #>  [9771,]  197  213  204 #>  [9772,]  197  213  204 #>  [9773,]  197  213  204 #>  [9774,]  197  213  204 #>  [9775,]  197  213  204 #>  [9776,]  197  213  204 #>  [9777,]  197  213  204 #>  [9778,]  196  214  205 #>  [9779,]  197  213  204 #>  [9780,]  196  214  205 #>  [9781,]  196  214  205 #>  [9782,]  197  213  204 #>  [9783,]  196  214  205 #>  [9784,]  197  213  204 #>  [9785,]  197  213  204 #>  [9786,]  197  213  204 #>  [9787,]  197  213  204 #>  [9788,]  197  213  204 #>  [9789,]  196  214  205 #>  [9790,]  197  213  204 #>  [9791,]  196  214  205 #>  [9792,]  197  213  204 #>  [9793,]  196  215  205 #>  [9794,]  197  213  204 #>  [9795,]  197  213  204 #>  [9796,]  197  213  204 #>  [9797,]  196  215  205 #>  [9798,]  196  214  205 #>  [9799,]  196  214  205 #>  [9800,]  197  213  204 #>  [9801,]  199  217  206 #>  [9802,]  199  217  206 #>  [9803,]  199  217  206 #>  [9804,]  198  216  206 #>  [9805,]  199  217  206 #>  [9806,]  199  217  206 #>  [9807,]  199  217  206 #>  [9808,]  198  216  206 #>  [9809,]  198  216  206 #>  [9810,]  199  217  206 #>  [9811,]  198  216  206 #>  [9812,]  199  217  206 #>  [9813,]  198  216  206 #>  [9814,]  199  217  206 #>  [9815,]  199  217  206 #>  [9816,]  199  217  206 #>  [9817,]  198  216  206 #>  [9818,]  199  217  206 #>  [9819,]  199  217  206 #>  [9820,]  199  217  206 #>  [9821,]  199  217  206 #>  [9822,]  198  216  206 #>  [9823,]  199  217  206 #>  [9824,]  199  217  206 #>  [9825,]  199  217  206 #>  [9826,]  199  217  206 #>  [9827,]  198  216  206 #>  [9828,]  199  217  206 #>  [9829,]  199  217  206 #>  [9830,]  199  217  206 #>  [9831,]  199  217  206 #>  [9832,]  199  217  206 #>  [9833,]  199  217  206 #>  [9834,]  199  217  206 #>  [9835,]  198  216  206 #>  [9836,]  199  217  206 #>  [9837,]  199  217  206 #>  [9838,]  199  217  206 #>  [9839,]  199  217  206 #>  [9840,]  199  217  206 #>  [9841,]  199  217  206 #>  [9842,]  199  217  206 #>  [9843,]  198  216  206 #>  [9844,]  198  216  206 #>  [9845,]  199  217  206 #>  [9846,]  199  217  206 #>  [9847,]  199  217  206 #>  [9848,]  199  217  206 #>  [9849,]  198  216  206 #>  [9850,]  199  217  206 #>  [9851,]  199  217  206 #>  [9852,]  198  216  206 #>  [9853,]  199  217  206 #>  [9854,]  199  217  206 #>  [9855,]  198  216  206 #>  [9856,]  199  217  206 #>  [9857,]  199  217  206 #>  [9858,]  198  216  206 #>  [9859,]  199  217  206 #>  [9860,]  199  217  206 #>  [9861,]  199  217  206 #>  [9862,]  199  217  206 #>  [9863,]  199  217  206 #>  [9864,]  199  217  206 #>  [9865,]  199  217  206 #>  [9866,]  198  216  206 #>  [9867,]  199  217  206 #>  [9868,]  199  217  206 #>  [9869,]  198  216  206 #>  [9870,]  199  217  206 #>  [9871,]  199  217  206 #>  [9872,]  199  217  206 #>  [9873,]  199  217  206 #>  [9874,]  199  217  206 #>  [9875,]  199  217  206 #>  [9876,]  199  217  206 #>  [9877,]  199  217  206 #>  [9878,]  199  217  206 #>  [9879,]  198  216  206 #>  [9880,]  198  216  206 #>  [9881,]  198  216  206 #>  [9882,]  198  216  206 #>  [9883,]  198  216  206 #>  [9884,]  199  217  206 #>  [9885,]  199  217  206 #>  [9886,]  199  217  206 #>  [9887,]  198  216  206 #>  [9888,]  198  216  206 #>  [9889,]  198  216  206 #>  [9890,]  198  216  206 #>  [9891,]  199  217  206 #>  [9892,]  198  216  206 #>  [9893,]  199  217  206 #>  [9894,]  199  217  206 #>  [9895,]  198  216  206 #>  [9896,]  199  217  206 #>  [9897,]  199  217  206 #>  [9898,]  199  217  206 #>  [9899,]  198  216  206 #>  [9900,]  199  217  206 #>  [9901,]  201  219  208 #>  [9902,]  201  219  208 #>  [9903,]  200  218  207 #>  [9904,]  201  219  208 #>  [9905,]  201  219  208 #>  [9906,]  200  218  207 #>  [9907,]  200  218  207 #>  [9908,]  201  219  208 #>  [9909,]  201  219  208 #>  [9910,]  201  219  208 #>  [9911,]  201  219  208 #>  [9912,]  201  219  208 #>  [9913,]  201  219  208 #>  [9914,]  201  219  208 #>  [9915,]  201  219  208 #>  [9916,]  201  219  208 #>  [9917,]  201  219  208 #>  [9918,]  201  219  208 #>  [9919,]  201  219  208 #>  [9920,]  200  218  207 #>  [9921,]  200  218  207 #>  [9922,]  201  219  208 #>  [9923,]  200  218  207 #>  [9924,]  201  219  208 #>  [9925,]  200  218  207 #>  [9926,]  201  219  208 #>  [9927,]  201  219  208 #>  [9928,]  201  219  208 #>  [9929,]  201  219  208 #>  [9930,]  201  219  208 #>  [9931,]  201  219  208 #>  [9932,]  201  219  208 #>  [9933,]  201  219  208 #>  [9934,]  200  218  207 #>  [9935,]  200  218  207 #>  [9936,]  201  219  208 #>  [9937,]  200  218  207 #>  [9938,]  201  219  208 #>  [9939,]  201  219  208 #>  [9940,]  201  219  208 #>  [9941,]  201  219  208 #>  [9942,]  200  218  207 #>  [9943,]  201  219  208 #>  [9944,]  200  218  207 #>  [9945,]  201  219  208 #>  [9946,]  201  219  208 #>  [9947,]  201  219  208 #>  [9948,]  201  219  208 #>  [9949,]  201  219  208 #>  [9950,]  201  219  208 #>  [9951,]  201  219  208 #>  [9952,]  201  219  208 #>  [9953,]  200  218  207 #>  [9954,]  201  219  208 #>  [9955,]  201  219  208 #>  [9956,]  200  218  207 #>  [9957,]  200  218  207 #>  [9958,]  201  219  208 #>  [9959,]  201  219  208 #>  [9960,]  201  219  208 #>  [9961,]  201  219  208 #>  [9962,]  201  219  208 #>  [9963,]  201  219  208 #>  [9964,]  201  219  208 #>  [9965,]  200  218  207 #>  [9966,]  201  219  208 #>  [9967,]  201  219  208 #>  [9968,]  201  219  208 #>  [9969,]  201  219  208 #>  [9970,]  201  219  208 #>  [9971,]  201  219  208 #>  [9972,]  201  219  208 #>  [9973,]  200  218  207 #>  [9974,]  200  218  207 #>  [9975,]  201  219  208 #>  [9976,]  201  219  208 #>  [9977,]  201  219  208 #>  [9978,]  201  219  208 #>  [9979,]  201  219  208 #>  [9980,]  200  218  207 #>  [9981,]  201  219  208 #>  [9982,]  200  218  207 #>  [9983,]  201  219  208 #>  [9984,]  200  218  207 #>  [9985,]  200  218  207 #>  [9986,]  200  218  207 #>  [9987,]  201  219  208 #>  [9988,]  201  219  208 #>  [9989,]  200  218  207 #>  [9990,]  201  219  208 #>  [9991,]  201  219  208 #>  [9992,]  201  219  208 #>  [9993,]  201  219  208 #>  [9994,]  200  218  207 #>  [9995,]  201  219  208 #>  [9996,]  201  219  208 #>  [9997,]  201  219  208 #>  [9998,]  201  219  208 #>  [9999,]  200  218  207 #> [10000,]  201  219  208 #> [10001,]  203  221  210 #> [10002,]  203  221  210 #> [10003,]  202  220  209 #> [10004,]  203  221  210 #> [10005,]  202  220  209 #> [10006,]  203  221  210 #> [10007,]  202  220  209 #> [10008,]  202  220  209 #> [10009,]  203  221  210 #> [10010,]  203  221  210 #> [10011,]  203  221  210 #> [10012,]  203  221  210 #> [10013,]  202  220  209 #> [10014,]  203  221  210 #> [10015,]  203  221  210 #> [10016,]  202  220  209 #> [10017,]  202  220  209 #> [10018,]  203  221  210 #> [10019,]  203  221  210 #> [10020,]  202  220  209 #> [10021,]  203  221  210 #> [10022,]  202  220  209 #> [10023,]  203  221  210 #> [10024,]  202  220  209 #> [10025,]  202  220  209 #> [10026,]  203  221  210 #> [10027,]  203  221  210 #> [10028,]  203  221  210 #> [10029,]  202  220  209 #> [10030,]  203  221  210 #> [10031,]  203  221  210 #> [10032,]  203  221  210 #> [10033,]  203  221  210 #> [10034,]  203  221  210 #> [10035,]  203  221  210 #> [10036,]  203  221  210 #> [10037,]  203  221  210 #> [10038,]  203  221  210 #> [10039,]  202  220  209 #> [10040,]  202  220  209 #> [10041,]  203  221  210 #> [10042,]  203  221  210 #> [10043,]  202  220  209 #> [10044,]  202  220  209 #> [10045,]  202  220  209 #> [10046,]  202  220  209 #> [10047,]  202  220  209 #> [10048,]  203  221  210 #> [10049,]  202  220  209 #> [10050,]  202  220  209 #> [10051,]  202  220  209 #> [10052,]  203  221  210 #> [10053,]  202  220  209 #> [10054,]  202  220  209 #> [10055,]  202  220  209 #> [10056,]  202  220  209 #> [10057,]  203  221  210 #> [10058,]  203  221  210 #> [10059,]  202  220  209 #> [10060,]  203  221  210 #> [10061,]  203  221  210 #> [10062,]  203  221  210 #> [10063,]  202  220  209 #> [10064,]  203  221  210 #> [10065,]  202  220  209 #> [10066,]  202  220  209 #> [10067,]  203  221  210 #> [10068,]  203  221  210 #> [10069,]  203  221  210 #> [10070,]  202  220  209 #> [10071,]  202  220  209 #> [10072,]  202  220  209 #> [10073,]  203  221  210 #> [10074,]  203  221  210 #> [10075,]  203  221  210 #> [10076,]  202  220  209 #> [10077,]  202  220  209 #> [10078,]  202  220  209 #> [10079,]  202  220  209 #> [10080,]  203  221  210 #> [10081,]  202  220  209 #> [10082,]  203  221  210 #> [10083,]  202  220  209 #> [10084,]  202  220  209 #> [10085,]  203  221  210 #> [10086,]  202  220  209 #> [10087,]  203  221  210 #> [10088,]  203  221  210 #> [10089,]  202  220  209 #> [10090,]  202  220  209 #> [10091,]  203  221  210 #> [10092,]  203  221  210 #> [10093,]  203  221  210 #> [10094,]  202  220  209 #> [10095,]  203  221  210 #> [10096,]  203  221  210 #> [10097,]  203  221  210 #> [10098,]  202  220  209 #> [10099,]  203  221  210 #> [10100,]  202  220  209 #> [10101,]  205  223  211 #> [10102,]  205  223  211 #> [10103,]  204  222  212 #> [10104,]  205  223  211 #> [10105,]  204  222  212 #> [10106,]  205  223  211 #> [10107,]  204  222  212 #> [10108,]  204  222  212 #> [10109,]  205  223  211 #> [10110,]  205  223  211 #> [10111,]  205  223  211 #> [10112,]  205  223  211 #> [10113,]  204  222  212 #> [10114,]  205  223  211 #> [10115,]  205  223  211 #> [10116,]  204  222  212 #> [10117,]  204  222  212 #> [10118,]  205  223  211 #> [10119,]  205  223  211 #> [10120,]  204  222  212 #> [10121,]  205  223  211 #> [10122,]  204  222  212 #> [10123,]  205  223  211 #> [10124,]  204  222  212 #> [10125,]  204  222  212 #> [10126,]  205  223  211 #> [10127,]  205  223  211 #> [10128,]  205  223  211 #> [10129,]  204  222  212 #> [10130,]  205  223  211 #> [10131,]  205  223  211 #> [10132,]  205  223  211 #> [10133,]  205  223  211 #> [10134,]  205  223  211 #> [10135,]  205  223  211 #> [10136,]  205  223  211 #> [10137,]  205  223  211 #> [10138,]  205  223  211 #> [10139,]  204  222  212 #> [10140,]  204  222  212 #> [10141,]  205  223  211 #> [10142,]  205  223  211 #> [10143,]  204  222  212 #> [10144,]  204  222  212 #> [10145,]  204  222  212 #> [10146,]  204  222  212 #> [10147,]  204  222  212 #> [10148,]  205  223  211 #> [10149,]  204  222  212 #> [10150,]  204  222  212 #> [10151,]  204  222  212 #> [10152,]  205  223  211 #> [10153,]  204  222  212 #> [10154,]  204  222  212 #> [10155,]  204  222  212 #> [10156,]  204  222  212 #> [10157,]  205  223  211 #> [10158,]  205  223  211 #> [10159,]  204  222  212 #> [10160,]  205  223  211 #> [10161,]  205  223  211 #> [10162,]  205  223  211 #> [10163,]  204  222  212 #> [10164,]  205  223  211 #> [10165,]  204  222  212 #> [10166,]  204  222  212 #> [10167,]  205  223  211 #> [10168,]  205  223  211 #> [10169,]  205  223  211 #> [10170,]  204  222  212 #> [10171,]  205  223  211 #> [10172,]  204  222  212 #> [10173,]  205  223  211 #> [10174,]  205  223  211 #> [10175,]  205  223  211 #> [10176,]  204  222  212 #> [10177,]  204  222  212 #> [10178,]  204  222  212 #> [10179,]  204  222  212 #> [10180,]  205  223  211 #> [10181,]  205  223  211 #> [10182,]  205  223  211 #> [10183,]  204  222  212 #> [10184,]  204  222  212 #> [10185,]  205  223  211 #> [10186,]  204  222  212 #> [10187,]  205  223  211 #> [10188,]  205  223  211 #> [10189,]  204  222  212 #> [10190,]  204  222  212 #> [10191,]  205  223  211 #> [10192,]  205  223  211 #> [10193,]  205  223  211 #> [10194,]  204  222  212 #> [10195,]  205  223  211 #> [10196,]  205  223  211 #> [10197,]  205  223  211 #> [10198,]  204  222  212 #> [10199,]  205  223  211 #> [10200,]  204  222  212 #> [10201,]  208  225  214 #> [10202,]  208  225  214 #> [10203,]  206  224  214 #> [10204,]  207  225  213 #> [10205,]  208  225  214 #> [10206,]  206  224  214 #> [10207,]  206  224  214 #> [10208,]  207  225  213 #> [10209,]  208  225  213 #> [10210,]  208  225  213 #> [10211,]  208  225  214 #> [10212,]  207  225  214 #> [10213,]  208  225  214 #> [10214,]  208  225  214 #> [10215,]  208  225  214 #> [10216,]  208  225  214 #> [10217,]  208  225  214 #> [10218,]  208  225  213 #> [10219,]  208  225  214 #> [10220,]  206  224  213 #> [10221,]  206  224  214 #> [10222,]  208  225  214 #> [10223,]  206  224  214 #> [10224,]  208  225  214 #> [10225,]  206  224  214 #> [10226,]  208  225  214 #> [10227,]  208  225  214 #> [10228,]  208  225  214 #> [10229,]  208  225  214 #> [10230,]  208  225  213 #> [10231,]  207  225  214 #> [10232,]  208  225  214 #> [10233,]  208  225  214 #> [10234,]  206  224  214 #> [10235,]  206  224  214 #> [10236,]  208  225  214 #> [10237,]  206  224  214 #> [10238,]  208  225  214 #> [10239,]  208  225  213 #> [10240,]  208  225  214 #> [10241,]  208  225  214 #> [10242,]  206  224  214 #> [10243,]  208  225  213 #> [10244,]  206  224  214 #> [10245,]  208  225  213 #> [10246,]  208  225  214 #> [10247,]  208  225  214 #> [10248,]  208  225  214 #> [10249,]  208  225  213 #> [10250,]  206  224  214 #> [10251,]  208  225  213 #> [10252,]  207  225  214 #> [10253,]  206  224  213 #> [10254,]  206  224  214 #> [10255,]  206  224  214 #> [10256,]  206  224  213 #> [10257,]  206  224  214 #> [10258,]  208  225  214 #> [10259,]  207  225  214 #> [10260,]  206  224  213 #> [10261,]  208  225  214 #> [10262,]  208  225  214 #> [10263,]  208  225  214 #> [10264,]  206  224  213 #> [10265,]  206  224  213 #> [10266,]  208  225  213 #> [10267,]  208  225  213 #> [10268,]  207  225  214 #> [10269,]  208  225  214 #> [10270,]  208  225  214 #> [10271,]  208  225  214 #> [10272,]  208  225  214 #> [10273,]  206  224  214 #> [10274,]  206  224  214 #> [10275,]  208  225  214 #> [10276,]  208  225  214 #> [10277,]  208  225  214 #> [10278,]  208  225  213 #> [10279,]  208  225  214 #> [10280,]  206  224  214 #> [10281,]  206  224  214 #> [10282,]  206  224  214 #> [10283,]  208  225  214 #> [10284,]  206  224  214 #> [10285,]  206  224  213 #> [10286,]  206  224  214 #> [10287,]  208  225  214 #> [10288,]  206  224  214 #> [10289,]  206  224  213 #> [10290,]  208  225  214 #> [10291,]  208  225  213 #> [10292,]  208  225  214 #> [10293,]  208  225  214 #> [10294,]  206  224  214 #> [10295,]  208  225  213 #> [10296,]  207  225  214 #> [10297,]  206  224  214 #> [10298,]  206  224  214 #> [10299,]  206  224  214 #> [10300,]  208  225  214 #> [10301,]  209  226  215 #> [10302,]  210  227  216 #> [10303,]  209  226  215 #> [10304,]  209  226  215 #> [10305,]  210  227  216 #> [10306,]  209  226  215 #> [10307,]  209  226  215 #> [10308,]  209  226  215 #> [10309,]  210  227  216 #> [10310,]  210  227  216 #> [10311,]  209  226  215 #> [10312,]  210  227  216 #> [10313,]  210  227  216 #> [10314,]  209  226  215 #> [10315,]  209  226  215 #> [10316,]  209  226  215 #> [10317,]  210  227  216 #> [10318,]  210  227  216 #> [10319,]  209  226  215 #> [10320,]  210  227  216 #> [10321,]  210  227  216 #> [10322,]  210  227  216 #> [10323,]  210  227  216 #> [10324,]  210  227  216 #> [10325,]  209  226  215 #> [10326,]  209  226  215 #> [10327,]  210  227  216 #> [10328,]  209  226  215 #> [10329,]  210  227  216 #> [10330,]  210  227  216 #> [10331,]  210  227  216 #> [10332,]  210  227  216 #> [10333,]  210  227  216 #> [10334,]  209  226  215 #> [10335,]  209  226  215 #> [10336,]  210  227  216 #> [10337,]  209  226  215 #> [10338,]  209  226  215 #> [10339,]  209  226  215 #> [10340,]  210  227  216 #> [10341,]  209  226  215 #> [10342,]  209  226  215 #> [10343,]  209  226  215 #> [10344,]  210  227  216 #> [10345,]  209  226  215 #> [10346,]  209  226  215 #> [10347,]  209  226  215 #> [10348,]  209  226  215 #> [10349,]  209  226  215 #> [10350,]  210  227  216 #> [10351,]  209  226  215 #> [10352,]  209  226  215 #> [10353,]  210  227  216 #> [10354,]  210  227  216 #> [10355,]  209  226  215 #> [10356,]  209  226  215 #> [10357,]  209  226  215 #> [10358,]  209  226  215 #> [10359,]  209  226  215 #> [10360,]  210  227  216 #> [10361,]  210  227  216 #> [10362,]  209  226  215 #> [10363,]  210  227  216 #> [10364,]  209  226  215 #> [10365,]  209  226  215 #> [10366,]  209  226  215 #> [10367,]  209  226  215 #> [10368,]  209  226  215 #> [10369,]  209  226  215 #> [10370,]  210  227  216 #> [10371,]  209  226  215 #> [10372,]  209  226  215 #> [10373,]  209  226  215 #> [10374,]  209  226  215 #> [10375,]  210  227  216 #> [10376,]  209  226  215 #> [10377,]  209  226  215 #> [10378,]  210  227  216 #> [10379,]  209  226  215 #> [10380,]  210  227  216 #> [10381,]  210  227  216 #> [10382,]  209  226  215 #> [10383,]  210  227  216 #> [10384,]  210  227  216 #> [10385,]  209  226  215 #> [10386,]  210  227  216 #> [10387,]  210  227  216 #> [10388,]  210  227  216 #> [10389,]  209  226  215 #> [10390,]  209  226  215 #> [10391,]  209  226  215 #> [10392,]  210  227  216 #> [10393,]  210  227  216 #> [10394,]  209  226  215 #> [10395,]  210  227  216 #> [10396,]  209  226  215 #> [10397,]  209  226  215 #> [10398,]  209  226  215 #> [10399,]  209  226  215 #> [10400,]  209  226  215 #> [10401,]  212  229  219 #> [10402,]  212  229  219 #> [10403,]  212  229  219 #> [10404,]  212  229  218 #> [10405,]  212  229  219 #> [10406,]  212  229  218 #> [10407,]  212  229  219 #> [10408,]  212  229  219 #> [10409,]  212  229  218 #> [10410,]  212  229  218 #> [10411,]  212  229  218 #> [10412,]  212  229  218 #> [10413,]  212  229  219 #> [10414,]  212  229  218 #> [10415,]  211  228  217 #> [10416,]  212  229  219 #> [10417,]  212  229  219 #> [10418,]  212  229  218 #> [10419,]  212  229  218 #> [10420,]  212  229  219 #> [10421,]  212  229  218 #> [10422,]  212  229  219 #> [10423,]  212  229  218 #> [10424,]  212  229  219 #> [10425,]  212  229  219 #> [10426,]  212  229  218 #> [10427,]  212  229  218 #> [10428,]  212  229  219 #> [10429,]  212  229  219 #> [10430,]  212  229  218 #> [10431,]  211  228  217 #> [10432,]  212  229  218 #> [10433,]  212  229  218 #> [10434,]  211  228  217 #> [10435,]  212  229  219 #> [10436,]  212  229  218 #> [10437,]  211  228  217 #> [10438,]  212  229  218 #> [10439,]  212  229  219 #> [10440,]  212  229  219 #> [10441,]  212  229  218 #> [10442,]  211  228  217 #> [10443,]  211  228  217 #> [10444,]  211  228  217 #> [10445,]  212  229  219 #> [10446,]  212  229  219 #> [10447,]  212  229  219 #> [10448,]  212  229  218 #> [10449,]  212  229  219 #> [10450,]  212  229  219 #> [10451,]  212  229  219 #> [10452,]  212  229  218 #> [10453,]  212  229  219 #> [10454,]  212  229  219 #> [10455,]  212  229  219 #> [10456,]  212  229  219 #> [10457,]  212  229  219 #> [10458,]  212  229  218 #> [10459,]  212  229  219 #> [10460,]  212  229  218 #> [10461,]  212  229  218 #> [10462,]  212  229  218 #> [10463,]  211  228  217 #> [10464,]  212  229  218 #> [10465,]  212  229  219 #> [10466,]  212  229  219 #> [10467,]  212  229  218 #> [10468,]  212  229  218 #> [10469,]  212  229  218 #> [10470,]  212  229  219 #> [10471,]  212  229  219 #> [10472,]  212  229  219 #> [10473,]  212  229  218 #> [10474,]  212  229  218 #> [10475,]  211  228  217 #> [10476,]  212  229  219 #> [10477,]  212  229  219 #> [10478,]  211  228  217 #> [10479,]  212  229  219 #> [10480,]  212  229  218 #> [10481,]  212  229  219 #> [10482,]  212  229  218 #> [10483,]  212  229  219 #> [10484,]  212  229  219 #> [10485,]  212  229  218 #> [10486,]  212  229  219 #> [10487,]  212  229  219 #> [10488,]  212  229  219 #> [10489,]  212  229  219 #> [10490,]  212  229  219 #> [10491,]  212  229  218 #> [10492,]  212  229  218 #> [10493,]  212  229  218 #> [10494,]  212  229  219 #> [10495,]  211  228  217 #> [10496,]  212  229  218 #> [10497,]  212  229  218 #> [10498,]  212  229  219 #> [10499,]  212  229  218 #> [10500,]  211  228  217 #> [10501,]  214  231  221 #> [10502,]  214  231  221 #> [10503,]  214  231  221 #> [10504,]  213  230  220 #> [10505,]  214  231  221 #> [10506,]  214  231  221 #> [10507,]  214  231  221 #> [10508,]  213  230  220 #> [10509,]  213  230  220 #> [10510,]  214  231  221 #> [10511,]  214  231  221 #> [10512,]  214  231  221 #> [10513,]  214  231  221 #> [10514,]  214  231  221 #> [10515,]  214  231  221 #> [10516,]  214  231  221 #> [10517,]  213  230  220 #> [10518,]  214  231  221 #> [10519,]  214  231  221 #> [10520,]  214  231  221 #> [10521,]  214  231  221 #> [10522,]  214  231  221 #> [10523,]  214  231  221 #> [10524,]  214  231  221 #> [10525,]  214  231  221 #> [10526,]  214  231  221 #> [10527,]  214  231  221 #> [10528,]  214  231  221 #> [10529,]  214  231  221 #> [10530,]  214  231  221 #> [10531,]  214  231  221 #> [10532,]  214  231  221 #> [10533,]  214  231  221 #> [10534,]  214  231  221 #> [10535,]  214  231  221 #> [10536,]  214  231  221 #> [10537,]  214  231  221 #> [10538,]  214  231  221 #> [10539,]  214  231  221 #> [10540,]  214  231  221 #> [10541,]  214  231  221 #> [10542,]  214  231  221 #> [10543,]  214  231  221 #> [10544,]  214  231  221 #> [10545,]  214  231  221 #> [10546,]  214  231  221 #> [10547,]  214  231  221 #> [10548,]  214  231  221 #> [10549,]  214  231  221 #> [10550,]  214  231  221 #> [10551,]  214  231  221 #> [10552,]  213  230  220 #> [10553,]  214  231  221 #> [10554,]  214  231  221 #> [10555,]  214  231  221 #> [10556,]  214  231  221 #> [10557,]  214  231  221 #> [10558,]  214  231  221 #> [10559,]  214  231  221 #> [10560,]  214  231  221 #> [10561,]  214  231  221 #> [10562,]  214  231  221 #> [10563,]  214  231  221 #> [10564,]  214  231  221 #> [10565,]  214  231  221 #> [10566,]  214  231  221 #> [10567,]  214  231  221 #> [10568,]  214  231  221 #> [10569,]  214  231  221 #> [10570,]  214  231  221 #> [10571,]  214  231  221 #> [10572,]  214  231  221 #> [10573,]  214  231  221 #> [10574,]  214  231  221 #> [10575,]  214  231  221 #> [10576,]  214  231  221 #> [10577,]  214  231  221 #> [10578,]  214  231  221 #> [10579,]  214  231  221 #> [10580,]  214  231  221 #> [10581,]  213  230  220 #> [10582,]  213  230  220 #> [10583,]  214  231  221 #> [10584,]  214  231  221 #> [10585,]  214  231  221 #> [10586,]  214  231  221 #> [10587,]  214  231  221 #> [10588,]  214  231  221 #> [10589,]  214  231  221 #> [10590,]  214  231  221 #> [10591,]  214  231  221 #> [10592,]  214  231  221 #> [10593,]  214  231  221 #> [10594,]  214  231  221 #> [10595,]  213  230  220 #> [10596,]  214  231  221 #> [10597,]  214  231  221 #> [10598,]  214  231  221 #> [10599,]  214  231  221 #> [10600,]  214  231  221 #> [10601,]  216  232  222 #> [10602,]  216  232  222 #> [10603,]  215  233  223 #> [10604,]  215  233  223 #> [10605,]  215  234  223 #> [10606,]  216  232  222 #> [10607,]  215  233  223 #> [10608,]  215  233  223 #> [10609,]  215  234  223 #> [10610,]  215  234  223 #> [10611,]  215  234  223 #> [10612,]  215  233  223 #> [10613,]  216  232  222 #> [10614,]  216  232  222 #> [10615,]  216  232  222 #> [10616,]  216  232  222 #> [10617,]  216  232  222 #> [10618,]  215  234  223 #> [10619,]  215  234  223 #> [10620,]  215  234  223 #> [10621,]  216  232  222 #> [10622,]  216  232  222 #> [10623,]  215  234  223 #> [10624,]  215  234  223 #> [10625,]  215  233  223 #> [10626,]  216  232  222 #> [10627,]  216  232  222 #> [10628,]  215  234  223 #> [10629,]  216  232  222 #> [10630,]  215  234  223 #> [10631,]  215  233  223 #> [10632,]  215  234  223 #> [10633,]  216  232  222 #> [10634,]  215  234  223 #> [10635,]  216  232  222 #> [10636,]  215  234  223 #> [10637,]  216  232  222 #> [10638,]  215  234  223 #> [10639,]  215  234  223 #> [10640,]  215  234  223 #> [10641,]  216  232  222 #> [10642,]  215  234  223 #> [10643,]  215  234  223 #> [10644,]  216  232  222 #> [10645,]  215  234  223 #> [10646,]  215  234  223 #> [10647,]  215  234  223 #> [10648,]  215  234  223 #> [10649,]  215  234  223 #> [10650,]  216  232  222 #> [10651,]  215  234  223 #> [10652,]  216  232  222 #> [10653,]  215  234  223 #> [10654,]  215  234  223 #> [10655,]  215  234  223 #> [10656,]  215  234  223 #> [10657,]  215  233  223 #> [10658,]  216  232  222 #> [10659,]  216  232  222 #> [10660,]  215  233  223 #> [10661,]  216  232  222 #> [10662,]  215  234  223 #> [10663,]  215  234  223 #> [10664,]  215  234  223 #> [10665,]  215  234  223 #> [10666,]  215  234  223 #> [10667,]  215  234  223 #> [10668,]  216  232  222 #> [10669,]  215  234  223 #> [10670,]  216  232  222 #> [10671,]  216  232  222 #> [10672,]  215  234  223 #> [10673,]  216  232  222 #> [10674,]  215  234  223 #> [10675,]  215  234  223 #> [10676,]  216  232  222 #> [10677,]  216  232  222 #> [10678,]  215  234  223 #> [10679,]  216  232  222 #> [10680,]  215  234  223 #> [10681,]  216  232  222 #> [10682,]  215  234  223 #> [10683,]  216  232  222 #> [10684,]  215  234  223 #> [10685,]  215  234  223 #> [10686,]  216  232  222 #> [10687,]  215  234  223 #> [10688,]  215  234  223 #> [10689,]  215  234  223 #> [10690,]  216  232  222 #> [10691,]  215  234  223 #> [10692,]  215  234  223 #> [10693,]  216  232  222 #> [10694,]  216  232  222 #> [10695,]  215  234  223 #> [10696,]  216  232  222 #> [10697,]  215  233  223 #> [10698,]  215  234  223 #> [10699,]  216  232  222 #> [10700,]  216  232  222 #> [10701,]  218  236  225 #> [10702,]  218  236  225 #> [10703,]  217  235  224 #> [10704,]  218  236  225 #> [10705,]  218  236  225 #> [10706,]  218  236  225 #> [10707,]  217  235  224 #> [10708,]  217  235  224 #> [10709,]  218  236  225 #> [10710,]  218  236  225 #> [10711,]  218  236  225 #> [10712,]  218  236  225 #> [10713,]  217  235  224 #> [10714,]  218  236  225 #> [10715,]  218  236  225 #> [10716,]  217  235  224 #> [10717,]  218  236  225 #> [10718,]  218  236  225 #> [10719,]  218  236  225 #> [10720,]  217  235  224 #> [10721,]  218  236  225 #> [10722,]  217  235  224 #> [10723,]  218  236  225 #> [10724,]  217  235  224 #> [10725,]  217  235  224 #> [10726,]  218  236  225 #> [10727,]  218  236  225 #> [10728,]  218  236  225 #> [10729,]  218  236  225 #> [10730,]  218  236  225 #> [10731,]  218  236  225 #> [10732,]  218  236  225 #> [10733,]  218  236  225 #> [10734,]  218  236  225 #> [10735,]  218  236  225 #> [10736,]  218  236  225 #> [10737,]  218  236  225 #> [10738,]  218  236  225 #> [10739,]  217  235  224 #> [10740,]  217  235  224 #> [10741,]  218  236  225 #> [10742,]  218  236  225 #> [10743,]  218  236  225 #> [10744,]  217  235  224 #> [10745,]  218  236  225 #> [10746,]  217  235  224 #> [10747,]  218  236  225 #> [10748,]  218  236  225 #> [10749,]  217  235  224 #> [10750,]  217  235  224 #> [10751,]  218  236  225 #> [10752,]  218  236  225 #> [10753,]  217  235  224 #> [10754,]  217  235  224 #> [10755,]  217  235  224 #> [10756,]  217  235  224 #> [10757,]  218  236  225 #> [10758,]  218  236  225 #> [10759,]  217  235  224 #> [10760,]  218  236  225 #> [10761,]  218  236  225 #> [10762,]  218  236  225 #> [10763,]  217  235  224 #> [10764,]  218  236  225 #> [10765,]  217  235  224 #> [10766,]  217  235  224 #> [10767,]  218  236  225 #> [10768,]  218  236  225 #> [10769,]  218  236  225 #> [10770,]  217  235  224 #> [10771,]  218  236  225 #> [10772,]  217  235  224 #> [10773,]  218  236  225 #> [10774,]  218  236  225 #> [10775,]  218  236  225 #> [10776,]  218  236  225 #> [10777,]  218  236  225 #> [10778,]  217  235  224 #> [10779,]  218  236  225 #> [10780,]  218  236  225 #> [10781,]  218  236  225 #> [10782,]  218  236  225 #> [10783,]  218  236  225 #> [10784,]  217  235  224 #> [10785,]  218  236  225 #> [10786,]  217  235  224 #> [10787,]  218  236  225 #> [10788,]  218  236  225 #> [10789,]  217  235  224 #> [10790,]  217  235  224 #> [10791,]  218  236  225 #> [10792,]  218  236  225 #> [10793,]  218  236  225 #> [10794,]  218  236  225 #> [10795,]  218  236  225 #> [10796,]  218  236  225 #> [10797,]  218  236  225 #> [10798,]  217  235  224 #> [10799,]  218  236  225 #> [10800,]  217  235  224 #> [10801,]  219  237  226 #> [10802,]  220  239  227 #> [10803,]  219  237  226 #> [10804,]  219  237  226 #> [10805,]  220  239  227 #> [10806,]  219  237  226 #> [10807,]  219  237  226 #> [10808,]  219  237  226 #> [10809,]  220  239  227 #> [10810,]  220  239  227 #> [10811,]  219  237  226 #> [10812,]  220  238  227 #> [10813,]  220  239  227 #> [10814,]  219  237  226 #> [10815,]  219  237  226 #> [10816,]  219  237  226 #> [10817,]  220  238  227 #> [10818,]  220  239  227 #> [10819,]  219  237  226 #> [10820,]  220  239  227 #> [10821,]  220  239  227 #> [10822,]  220  239  227 #> [10823,]  220  238  227 #> [10824,]  220  239  227 #> [10825,]  219  237  226 #> [10826,]  219  237  226 #> [10827,]  220  239  227 #> [10828,]  219  237  226 #> [10829,]  220  238  227 #> [10830,]  219  237  226 #> [10831,]  220  238  227 #> [10832,]  220  239  227 #> [10833,]  220  239  227 #> [10834,]  219  237  226 #> [10835,]  219  237  226 #> [10836,]  220  239  227 #> [10837,]  219  237  226 #> [10838,]  219  237  226 #> [10839,]  219  237  226 #> [10840,]  220  239  227 #> [10841,]  219  237  226 #> [10842,]  219  237  226 #> [10843,]  219  237  226 #> [10844,]  220  238  227 #> [10845,]  219  237  226 #> [10846,]  219  237  226 #> [10847,]  219  237  226 #> [10848,]  219  237  226 #> [10849,]  219  237  226 #> [10850,]  220  239  227 #> [10851,]  219  237  226 #> [10852,]  219  237  226 #> [10853,]  220  239  227 #> [10854,]  219  237  226 #> [10855,]  219  237  226 #> [10856,]  219  237  226 #> [10857,]  219  237  226 #> [10858,]  219  237  226 #> [10859,]  219  237  226 #> [10860,]  220  239  227 #> [10861,]  220  239  227 #> [10862,]  219  237  226 #> [10863,]  220  238  227 #> [10864,]  219  237  226 #> [10865,]  219  237  226 #> [10866,]  219  237  226 #> [10867,]  219  237  226 #> [10868,]  219  237  226 #> [10869,]  219  237  226 #> [10870,]  220  238  227 #> [10871,]  219  237  226 #> [10872,]  219  237  226 #> [10873,]  219  237  226 #> [10874,]  219  237  226 #> [10875,]  220  238  227 #> [10876,]  219  237  226 #> [10877,]  219  237  226 #> [10878,]  219  237  226 #> [10879,]  219  237  226 #> [10880,]  220  239  227 #> [10881,]  220  238  227 #> [10882,]  219  237  226 #> [10883,]  220  239  227 #> [10884,]  220  239  227 #> [10885,]  219  237  226 #> [10886,]  220  239  227 #> [10887,]  219  237  226 #> [10888,]  220  239  227 #> [10889,]  219  237  226 #> [10890,]  219  237  226 #> [10891,]  219  237  226 #> [10892,]  220  239  227 #> [10893,]  220  239  227 #> [10894,]  219  237  226 #> [10895,]  219  237  226 #> [10896,]  219  237  226 #> [10897,]  219  237  226 #> [10898,]  219  237  226 #> [10899,]  219  237  226 #> [10900,]  219  237  226 #> [10901,]  221  240  228 #> [10902,]  221  240  228 #> [10903,]  221  240  228 #> [10904,]  222  241  229 #> [10905,]  221  240  228 #> [10906,]  221  240  228 #> [10907,]  221  240  228 #> [10908,]  221  240  228 #> [10909,]  222  241  229 #> [10910,]  221  240  228 #> [10911,]  222  241  229 #> [10912,]  222  241  229 #> [10913,]  221  240  228 #> [10914,]  222  241  229 #> [10915,]  222  241  229 #> [10916,]  221  240  228 #> [10917,]  221  240  228 #> [10918,]  222  241  229 #> [10919,]  222  241  229 #> [10920,]  221  240  228 #> [10921,]  222  241  229 #> [10922,]  221  240  228 #> [10923,]  221  240  228 #> [10924,]  221  240  228 #> [10925,]  221  240  228 #> [10926,]  222  241  229 #> [10927,]  222  241  229 #> [10928,]  221  240  228 #> [10929,]  221  240  228 #> [10930,]  222  241  229 #> [10931,]  222  241  229 #> [10932,]  221  240  228 #> [10933,]  222  241  229 #> [10934,]  221  240  228 #> [10935,]  221  240  228 #> [10936,]  222  241  229 #> [10937,]  221  240  228 #> [10938,]  222  241  229 #> [10939,]  221  240  228 #> [10940,]  221  240  228 #> [10941,]  222  241  229 #> [10942,]  222  241  229 #> [10943,]  221  240  228 #> [10944,]  221  240  228 #> [10945,]  221  240  228 #> [10946,]  221  240  228 #> [10947,]  221  240  228 #> [10948,]  222  241  229 #> [10949,]  221  240  228 #> [10950,]  221  240  228 #> [10951,]  221  240  228 #> [10952,]  221  240  228 #> [10953,]  221  240  228 #> [10954,]  221  240  228 #> [10955,]  221  240  228 #> [10956,]  221  240  228 #> [10957,]  221  240  228 #> [10958,]  222  241  229 #> [10959,]  221  240  228 #> [10960,]  222  241  229 #> [10961,]  222  241  229 #> [10962,]  222  241  229 #> [10963,]  221  240  228 #> [10964,]  221  240  228 #> [10965,]  221  240  228 #> [10966,]  221  240  228 #> [10967,]  221  240  228 #> [10968,]  222  241  229 #> [10969,]  222  241  229 #> [10970,]  221  240  228 #> [10971,]  221  240  228 #> [10972,]  221  240  228 #> [10973,]  221  240  228 #> [10974,]  222  241  229 #> [10975,]  222  241  229 #> [10976,]  221  240  228 #> [10977,]  221  240  228 #> [10978,]  221  240  228 #> [10979,]  221  240  228 #> [10980,]  221  240  228 #> [10981,]  221  240  228 #> [10982,]  222  241  229 #> [10983,]  221  240  228 #> [10984,]  221  240  228 #> [10985,]  222  241  229 #> [10986,]  221  240  228 #> [10987,]  221  240  228 #> [10988,]  221  240  228 #> [10989,]  221  240  228 #> [10990,]  221  240  228 #> [10991,]  221  240  228 #> [10992,]  222  241  229 #> [10993,]  222  241  229 #> [10994,]  221  240  228 #> [10995,]  221  240  228 #> [10996,]  222  241  229 #> [10997,]  222  241  229 #> [10998,]  221  240  228 #> [10999,]  221  240  228 #> [11000,]  221  240  228 #> [11001,]  224  242  232 #> [11002,]  224  242  232 #> [11003,]  224  242  232 #> [11004,]  224  242  232 #> [11005,]  224  242  232 #> [11006,]  224  242  232 #> [11007,]  224  242  232 #> [11008,]  224  242  232 #> [11009,]  224  242  232 #> [11010,]  224  242  232 #> [11011,]  224  242  232 #> [11012,]  223  243  230 #> [11013,]  224  242  232 #> [11014,]  224  242  232 #> [11015,]  223  244  231 #> [11016,]  224  242  232 #> [11017,]  223  244  231 #> [11018,]  224  242  232 #> [11019,]  224  242  232 #> [11020,]  224  242  232 #> [11021,]  224  242  232 #> [11022,]  224  242  232 #> [11023,]  223  243  230 #> [11024,]  224  242  232 #> [11025,]  224  242  232 #> [11026,]  224  242  232 #> [11027,]  224  242  232 #> [11028,]  224  242  232 #> [11029,]  223  243  230 #> [11030,]  224  242  232 #> [11031,]  223  244  231 #> [11032,]  224  242  232 #> [11033,]  224  242  232 #> [11034,]  223  243  230 #> [11035,]  224  242  232 #> [11036,]  224  242  232 #> [11037,]  223  243  230 #> [11038,]  224  242  232 #> [11039,]  224  242  232 #> [11040,]  224  242  232 #> [11041,]  224  242  232 #> [11042,]  223  243  230 #> [11043,]  223  244  231 #> [11044,]  223  243  230 #> [11045,]  224  242  232 #> [11046,]  224  242  232 #> [11047,]  224  242  232 #> [11048,]  223  243  230 #> [11049,]  224  242  232 #> [11050,]  224  242  232 #> [11051,]  224  242  232 #> [11052,]  224  242  232 #> [11053,]  224  242  232 #> [11054,]  224  242  232 #> [11055,]  224  242  232 #> [11056,]  224  242  232 #> [11057,]  224  242  232 #> [11058,]  224  242  232 #> [11059,]  224  242  232 #> [11060,]  224  242  232 #> [11061,]  224  242  232 #> [11062,]  224  242  232 #> [11063,]  223  243  230 #> [11064,]  223  243  230 #> [11065,]  224  242  232 #> [11066,]  224  242  232 #> [11067,]  224  242  232 #> [11068,]  224  242  232 #> [11069,]  224  242  232 #> [11070,]  223  244  231 #> [11071,]  224  242  232 #> [11072,]  224  242  232 #> [11073,]  224  242  232 #> [11074,]  224  242  232 #> [11075,]  223  244  231 #> [11076,]  224  242  232 #> [11077,]  224  242  232 #> [11078,]  223  243  230 #> [11079,]  223  244  231 #> [11080,]  224  242  232 #> [11081,]  223  243  230 #> [11082,]  224  242  232 #> [11083,]  224  242  232 #> [11084,]  224  242  232 #> [11085,]  224  242  232 #> [11086,]  224  242  232 #> [11087,]  224  242  232 #> [11088,]  224  242  232 #> [11089,]  224  242  232 #> [11090,]  224  242  232 #> [11091,]  224  242  232 #> [11092,]  223  243  230 #> [11093,]  224  242  232 #> [11094,]  223  243  230 #> [11095,]  223  244  231 #> [11096,]  224  242  232 #> [11097,]  224  242  232 #> [11098,]  224  242  232 #> [11099,]  224  242  232 #> [11100,]  223  244  231 #> [11101,]  225  245  234 #> [11102,]  225  245  233 #> [11103,]  225  245  234 #> [11104,]  226  246  235 #> [11105,]  225  245  233 #> [11106,]  225  245  233 #> [11107,]  225  245  235 #> [11108,]  225  245  233 #> [11109,]  225  245  235 #> [11110,]  225  245  235 #> [11111,]  225  245  233 #> [11112,]  225  245  233 #> [11113,]  225  245  235 #> [11114,]  226  246  234 #> [11115,]  225  245  233 #> [11116,]  225  245  234 #> [11117,]  225  245  233 #> [11118,]  225  245  233 #> [11119,]  225  245  233 #> [11120,]  225  245  235 #> [11121,]  225  245  233 #> [11122,]  225  245  235 #> [11123,]  225  245  233 #> [11124,]  225  245  235 #> [11125,]  225  245  235 #> [11126,]  225  245  233 #> [11127,]  226  246  233 #> [11128,]  225  245  234 #> [11129,]  225  245  233 #> [11130,]  225  245  233 #> [11131,]  225  245  233 #> [11132,]  225  245  233 #> [11133,]  225  245  233 #> [11134,]  225  245  233 #> [11135,]  225  245  233 #> [11136,]  225  245  235 #> [11137,]  225  245  233 #> [11138,]  225  245  233 #> [11139,]  225  245  235 #> [11140,]  225  245  233 #> [11141,]  225  245  235 #> [11142,]  225  245  233 #> [11143,]  225  245  233 #> [11144,]  225  245  233 #> [11145,]  225  245  234 #> [11146,]  225  245  233 #> [11147,]  225  245  233 #> [11148,]  225  245  233 #> [11149,]  225  245  234 #> [11150,]  225  245  235 #> [11151,]  225  245  233 #> [11152,]  225  245  234 #> [11153,]  225  245  235 #> [11154,]  225  245  235 #> [11155,]  225  245  235 #> [11156,]  225  245  233 #> [11157,]  225  245  235 #> [11158,]  225  245  235 #> [11159,]  225  245  234 #> [11160,]  225  245  233 #> [11161,]  226  246  233 #> [11162,]  225  245  233 #> [11163,]  225  245  233 #> [11164,]  225  245  233 #> [11165,]  225  245  233 #> [11166,]  225  245  233 #> [11167,]  225  245  235 #> [11168,]  225  245  233 #> [11169,]  226  246  233 #> [11170,]  225  245  233 #> [11171,]  225  245  235 #> [11172,]  225  245  234 #> [11173,]  225  245  234 #> [11174,]  225  245  233 #> [11175,]  225  245  233 #> [11176,]  225  245  235 #> [11177,]  225  245  233 #> [11178,]  225  245  233 #> [11179,]  225  245  233 #> [11180,]  225  245  233 #> [11181,]  225  245  233 #> [11182,]  226  246  233 #> [11183,]  225  245  233 #> [11184,]  225  245  233 #> [11185,]  225  245  235 #> [11186,]  225  245  235 #> [11187,]  225  245  235 #> [11188,]  225  245  235 #> [11189,]  225  245  233 #> [11190,]  225  245  235 #> [11191,]  225  245  235 #> [11192,]  226  246  233 #> [11193,]  226  246  233 #> [11194,]  225  245  233 #> [11195,]  225  245  233 #> [11196,]  226  246  233 #> [11197,]  226  246  233 #> [11198,]  225  245  233 #> [11199,]  225  245  233 #> [11200,]  225  245  233 #> [11201,]  228  248  237 #> [11202,]  227  247  236 #> [11203,]  227  247  236 #> [11204,]  227  247  236 #> [11205,]  227  247  236 #> [11206,]  227  247  236 #> [11207,]  227  247  236 #> [11208,]  227  247  236 #> [11209,]  228  248  237 #> [11210,]  227  247  236 #> [11211,]  227  247  236 #> [11212,]  227  247  236 #> [11213,]  228  248  237 #> [11214,]  227  247  236 #> [11215,]  227  247  236 #> [11216,]  227  247  236 #> [11217,]  228  248  237 #> [11218,]  228  248  237 #> [11219,]  227  247  236 #> [11220,]  227  247  236 #> [11221,]  227  247  236 #> [11222,]  227  247  236 #> [11223,]  227  247  236 #> [11224,]  227  247  236 #> [11225,]  227  247  236 #> [11226,]  227  247  236 #> [11227,]  228  248  237 #> [11228,]  227  247  236 #> [11229,]  227  247  236 #> [11230,]  227  247  236 #> [11231,]  227  247  236 #> [11232,]  227  247  236 #> [11233,]  227  247  236 #> [11234,]  227  247  236 #> [11235,]  227  247  236 #> [11236,]  228  248  237 #> [11237,]  227  247  236 #> [11238,]  227  247  236 #> [11239,]  227  247  236 #> [11240,]  227  247  236 #> [11241,]  227  247  236 #> [11242,]  228  248  237 #> [11243,]  227  247  236 #> [11244,]  227  247  236 #> [11245,]  227  247  236 #> [11246,]  227  247  236 #> [11247,]  227  247  236 #> [11248,]  227  247  236 #> [11249,]  227  247  236 #> [11250,]  227  247  236 #> [11251,]  228  248  237 #> [11252,]  227  247  236 #> [11253,]  228  248  237 #> [11254,]  227  247  236 #> [11255,]  227  247  236 #> [11256,]  227  247  236 #> [11257,]  227  247  236 #> [11258,]  227  247  236 #> [11259,]  227  247  236 #> [11260,]  227  247  236 #> [11261,]  227  247  236 #> [11262,]  227  247  236 #> [11263,]  227  247  236 #> [11264,]  227  247  236 #> [11265,]  228  248  237 #> [11266,]  228  248  237 #> [11267,]  227  247  236 #> [11268,]  227  247  236 #> [11269,]  227  247  236 #> [11270,]  227  247  236 #> [11271,]  227  247  236 #> [11272,]  227  247  236 #> [11273,]  227  247  236 #> [11274,]  227  247  236 #> [11275,]  227  247  236 #> [11276,]  227  247  236 #> [11277,]  227  247  236 #> [11278,]  227  247  236 #> [11279,]  228  248  237 #> [11280,]  227  247  236 #> [11281,]  227  247  236 #> [11282,]  228  248  237 #> [11283,]  227  247  236 #> [11284,]  228  248  237 #> [11285,]  227  247  236 #> [11286,]  227  247  236 #> [11287,]  228  248  237 #> [11288,]  227  247  236 #> [11289,]  227  247  236 #> [11290,]  227  247  236 #> [11291,]  228  248  237 #> [11292,]  227  247  236 #> [11293,]  228  248  237 #> [11294,]  228  248  237 #> [11295,]  227  247  236 #> [11296,]  227  247  236 #> [11297,]  227  247  236 #> [11298,]  227  247  236 #> [11299,]  227  247  236 #> [11300,]  227  247  236 #> [11301,]  230  249  240 #> [11302,]  230  249  240 #> [11303,]  230  249  238 #> [11304,]  229  249  239 #> [11305,]  230  249  238 #> [11306,]  230  249  240 #> [11307,]  230  249  240 #> [11308,]  229  249  239 #> [11309,]  229  249  238 #> [11310,]  230  249  238 #> [11311,]  229  249  238 #> [11312,]  230  249  240 #> [11313,]  229  249  240 #> [11314,]  230  249  238 #> [11315,]  230  249  240 #> [11316,]  230  249  240 #> [11317,]  229  249  240 #> [11318,]  230  249  239 #> [11319,]  230  249  240 #> [11320,]  230  249  239 #> [11321,]  230  249  238 #> [11322,]  229  249  240 #> [11323,]  230  249  240 #> [11324,]  230  249  238 #> [11325,]  230  249  238 #> [11326,]  230  249  240 #> [11327,]  229  249  240 #> [11328,]  230  249  238 #> [11329,]  230  249  240 #> [11330,]  230  249  239 #> [11331,]  230  249  238 #> [11332,]  230  249  238 #> [11333,]  230  249  240 #> [11334,]  230  249  238 #> [11335,]  229  249  238 #> [11336,]  230  249  240 #> [11337,]  230  249  240 #> [11338,]  230  249  240 #> [11339,]  230  249  238 #> [11340,]  230  249  238 #> [11341,]  230  249  240 #> [11342,]  230  249  240 #> [11343,]  229  249  239 #> [11344,]  229  249  240 #> [11345,]  230  249  239 #> [11346,]  230  249  240 #> [11347,]  230  249  238 #> [11348,]  230  249  238 #> [11349,]  229  249  239 #> [11350,]  230  249  240 #> [11351,]  230  249  239 #> [11352,]  229  249  238 #> [11353,]  230  249  239 #> [11354,]  230  249  238 #> [11355,]  229  249  240 #> [11356,]  230  249  239 #> [11357,]  230  249  240 #> [11358,]  229  249  240 #> [11359,]  230  249  240 #> [11360,]  230  249  239 #> [11361,]  230  249  240 #> [11362,]  230  249  238 #> [11363,]  230  249  240 #> [11364,]  230  249  239 #> [11365,]  230  249  238 #> [11366,]  229  249  239 #> [11367,]  230  249  239 #> [11368,]  230  249  240 #> [11369,]  230  249  240 #> [11370,]  230  249  238 #> [11371,]  230  249  240 #> [11372,]  230  249  238 #> [11373,]  230  249  240 #> [11374,]  230  249  238 #> [11375,]  230  249  240 #> [11376,]  230  249  238 #> [11377,]  230  249  240 #> [11378,]  230  249  239 #> [11379,]  229  249  240 #> [11380,]  229  249  240 #> [11381,]  229  249  240 #> [11382,]  229  249  238 #> [11383,]  229  249  240 #> [11384,]  230  249  240 #> [11385,]  230  249  239 #> [11386,]  230  249  240 #> [11387,]  229  249  240 #> [11388,]  229  249  239 #> [11389,]  229  249  239 #> [11390,]  229  249  240 #> [11391,]  230  249  238 #> [11392,]  229  249  240 #> [11393,]  230  249  240 #> [11394,]  230  249  240 #> [11395,]  229  249  239 #> [11396,]  230  249  240 #> [11397,]  230  249  240 #> [11398,]  230  249  238 #> [11399,]  229  249  240 #> [11400,]  230  249  240 #> [11401,]  231  250  242 #> [11402,]  231  250  242 #> [11403,]  231  250  241 #> [11404,]  231  250  242 #> [11405,]  231  250  242 #> [11406,]  231  250  242 #> [11407,]  231  250  241 #> [11408,]  231  250  241 #> [11409,]  231  250  242 #> [11410,]  231  250  242 #> [11411,]  231  250  242 #> [11412,]  231  250  242 #> [11413,]  231  250  241 #> [11414,]  231  250  242 #> [11415,]  231  251  242 #> [11416,]  231  250  241 #> [11417,]  231  250  242 #> [11418,]  231  250  242 #> [11419,]  231  251  242 #> [11420,]  231  251  241 #> [11421,]  231  250  242 #> [11422,]  231  251  241 #> [11423,]  231  250  242 #> [11424,]  231  250  241 #> [11425,]  231  250  241 #> [11426,]  231  250  242 #> [11427,]  231  251  242 #> [11428,]  231  250  242 #> [11429,]  231  251  242 #> [11430,]  231  250  242 #> [11431,]  231  250  242 #> [11432,]  231  250  242 #> [11433,]  231  250  242 #> [11434,]  231  250  242 #> [11435,]  231  250  242 #> [11436,]  231  251  242 #> [11437,]  231  250  242 #> [11438,]  231  251  242 #> [11439,]  231  250  241 #> [11440,]  231  250  241 #> [11441,]  231  250  242 #> [11442,]  231  250  242 #> [11443,]  231  250  242 #> [11444,]  231  250  241 #> [11445,]  231  250  242 #> [11446,]  231  250  241 #> [11447,]  231  250  242 #> [11448,]  231  250  242 #> [11449,]  231  250  241 #> [11450,]  231  250  241 #> [11451,]  231  250  242 #> [11452,]  231  250  242 #> [11453,]  231  250  241 #> [11454,]  231  250  242 #> [11455,]  231  251  241 #> [11456,]  231  250  241 #> [11457,]  231  250  242 #> [11458,]  231  251  242 #> [11459,]  231  250  241 #> [11460,]  231  250  242 #> [11461,]  231  250  242 #> [11462,]  231  250  242 #> [11463,]  231  250  241 #> [11464,]  231  251  242 #> [11465,]  231  250  241 #> [11466,]  231  251  241 #> [11467,]  231  250  242 #> [11468,]  231  250  242 #> [11469,]  231  250  242 #> [11470,]  231  250  241 #> [11471,]  231  250  242 #> [11472,]  231  250  241 #> [11473,]  231  250  242 #> [11474,]  231  250  242 #> [11475,]  231  250  242 #> [11476,]  231  250  242 #> [11477,]  231  251  242 #> [11478,]  231  250  242 #> [11479,]  231  250  242 #> [11480,]  231  250  242 #> [11481,]  231  251  242 #> [11482,]  231  250  242 #> [11483,]  231  251  242 #> [11484,]  231  250  241 #> [11485,]  231  250  242 #> [11486,]  231  250  241 #> [11487,]  231  251  242 #> [11488,]  231  250  242 #> [11489,]  231  250  241 #> [11490,]  231  250  241 #> [11491,]  231  250  242 #> [11492,]  231  250  242 #> [11493,]  231  250  242 #> [11494,]  231  250  242 #> [11495,]  231  250  242 #> [11496,]  231  250  242 #> [11497,]  231  251  242 #> [11498,]  231  250  241 #> [11499,]  231  250  242 #> [11500,]  231  251  241 #> [11501,]  233  253  243 #> [11502,]  233  253  243 #> [11503,]  232  252  244 #> [11504,]  234  253  243 #> [11505,]  233  253  243 #> [11506,]  233  253  243 #> [11507,]  233  253  243 #> [11508,]  233  253  243 #> [11509,]  233  253  243 #> [11510,]  234  253  243 #> [11511,]  232  252  244 #> [11512,]  232  252  245 #> [11513,]  233  253  243 #> [11514,]  232  252  244 #> [11515,]  233  253  243 #> [11516,]  233  253  243 #> [11517,]  233  253  243 #> [11518,]  234  253  243 #> [11519,]  232  252  244 #> [11520,]  232  252  244 #> [11521,]  233  253  243 #> [11522,]  232  252  244 #> [11523,]  233  253  243 #> [11524,]  232  252  244 #> [11525,]  234  253  243 #> [11526,]  232  252  244 #> [11527,]  233  253  243 #> [11528,]  233  253  243 #> [11529,]  232  252  245 #> [11530,]  232  252  244 #> [11531,]  233  253  243 #> [11532,]  232  252  245 #> [11533,]  233  253  243 #> [11534,]  232  252  244 #> [11535,]  233  253  243 #> [11536,]  232  252  244 #> [11537,]  233  253  243 #> [11538,]  233  253  243 #> [11539,]  234  253  243 #> [11540,]  232  252  244 #> [11541,]  232  252  244 #> [11542,]  232  252  244 #> [11543,]  234  253  243 #> [11544,]  233  253  243 #> [11545,]  234  253  243 #> [11546,]  233  253  243 #> [11547,]  233  253  243 #> [11548,]  232  252  244 #> [11549,]  233  253  243 #> [11550,]  233  253  243 #> [11551,]  232  252  244 #> [11552,]  233  253  243 #> [11553,]  234  253  243 #> [11554,]  232  252  244 #> [11555,]  233  253  243 #> [11556,]  233  253  243 #> [11557,]  233  253  243 #> [11558,]  233  253  243 #> [11559,]  233  253  243 #> [11560,]  232  252  245 #> [11561,]  233  253  243 #> [11562,]  232  252  244 #> [11563,]  232  252  245 #> [11564,]  233  253  243 #> [11565,]  233  253  243 #> [11566,]  232  252  244 #> [11567,]  232  252  244 #> [11568,]  232  252  244 #> [11569,]  232  252  244 #> [11570,]  233  253  243 #> [11571,]  233  253  243 #> [11572,]  233  253  243 #> [11573,]  234  253  243 #> [11574,]  234  253  243 #> [11575,]  234  253  243 #> [11576,]  234  253  243 #> [11577,]  234  253  243 #> [11578,]  232  252  244 #> [11579,]  233  253  243 #> [11580,]  232  252  245 #> [11581,]  232  252  245 #> [11582,]  233  253  243 #> [11583,]  232  252  244 #> [11584,]  233  253  243 #> [11585,]  233  253  243 #> [11586,]  233  253  243 #> [11587,]  233  253  243 #> [11588,]  233  253  243 #> [11589,]  232  252  244 #> [11590,]  233  253  243 #> [11591,]  232  252  244 #> [11592,]  233  253  243 #> [11593,]  233  253  243 #> [11594,]  233  253  243 #> [11595,]  233  253  243 #> [11596,]  233  253  243 #> [11597,]  233  253  243 #> [11598,]  233  253  243 #> [11599,]  233  253  243 #> [11600,]  233  253  243 #> [11601,]  236  255  246 #> [11602,]  236  255  246 #> [11603,]  236  255  246 #> [11604,]  236  255  246 #> [11605,]  236  255  246 #> [11606,]  236  255  246 #> [11607,]  236  255  246 #> [11608,]  236  255  246 #> [11609,]  236  255  246 #> [11610,]  236  255  246 #> [11611,]  236  255  246 #> [11612,]  235  254  247 #> [11613,]  236  255  246 #> [11614,]  236  255  246 #> [11615,]  235  254  247 #> [11616,]  236  255  246 #> [11617,]  235  254  247 #> [11618,]  236  255  246 #> [11619,]  236  255  246 #> [11620,]  236  255  246 #> [11621,]  236  255  246 #> [11622,]  236  255  246 #> [11623,]  235  254  247 #> [11624,]  236  255  246 #> [11625,]  236  255  246 #> [11626,]  236  255  246 #> [11627,]  236  255  246 #> [11628,]  236  255  246 #> [11629,]  235  254  247 #> [11630,]  236  255  246 #> [11631,]  235  254  247 #> [11632,]  236  255  246 #> [11633,]  236  255  246 #> [11634,]  235  254  247 #> [11635,]  236  255  246 #> [11636,]  236  255  246 #> [11637,]  235  254  247 #> [11638,]  236  255  246 #> [11639,]  236  255  246 #> [11640,]  236  255  246 #> [11641,]  236  255  246 #> [11642,]  235  254  247 #> [11643,]  235  254  247 #> [11644,]  235  254  247 #> [11645,]  236  255  246 #> [11646,]  236  255  246 #> [11647,]  236  255  246 #> [11648,]  235  254  247 #> [11649,]  236  255  246 #> [11650,]  236  255  246 #> [11651,]  236  255  246 #> [11652,]  236  255  246 #> [11653,]  236  255  246 #> [11654,]  236  255  246 #> [11655,]  236  255  246 #> [11656,]  236  255  246 #> [11657,]  236  255  246 #> [11658,]  236  255  246 #> [11659,]  236  255  246 #> [11660,]  236  255  246 #> [11661,]  236  255  246 #> [11662,]  236  255  246 #> [11663,]  235  254  247 #> [11664,]  235  254  247 #> [11665,]  236  255  246 #> [11666,]  236  255  246 #> [11667,]  236  255  246 #> [11668,]  236  255  246 #> [11669,]  236  255  246 #> [11670,]  235  254  247 #> [11671,]  236  255  246 #> [11672,]  236  255  246 #> [11673,]  236  255  246 #> [11674,]  236  255  246 #> [11675,]  235  254  247 #> [11676,]  236  255  246 #> [11677,]  236  255  246 #> [11678,]  235  254  247 #> [11679,]  235  254  247 #> [11680,]  236  255  246 #> [11681,]  235  254  247 #> [11682,]  236  255  246 #> [11683,]  236  255  246 #> [11684,]  236  255  246 #> [11685,]  236  255  246 #> [11686,]  236  255  246 #> [11687,]  236  255  246 #> [11688,]  236  255  246 #> [11689,]  236  255  246 #> [11690,]  236  255  246 #> [11691,]  236  255  246 #> [11692,]  236  255  246 #> [11693,]  236  255  246 #> [11694,]  235  254  247 #> [11695,]  235  254  247 #> [11696,]  236  255  246 #> [11697,]  236  255  246 #> [11698,]  236  255  246 #> [11699,]  236  255  246 #> [11700,]  235  254  247 #> [11701,]  238  257  249 #> [11702,]  237  256  248 #> [11703,]  238  257  249 #> [11704,]  238  257  249 #> [11705,]  238  257  249 #> [11706,]  237  256  248 #> [11707,]  238  257  249 #> [11708,]  238  257  249 #> [11709,]  238  257  249 #> [11710,]  238  257  249 #> [11711,]  237  256  248 #> [11712,]  237  256  248 #> [11713,]  238  257  249 #> [11714,]  238  257  249 #> [11715,]  237  256  248 #> [11716,]  238  257  249 #> [11717,]  237  256  248 #> [11718,]  237  256  248 #> [11719,]  237  256  248 #> [11720,]  238  257  249 #> [11721,]  237  256  248 #> [11722,]  238  257  249 #> [11723,]  237  256  248 #> [11724,]  238  257  249 #> [11725,]  238  257  249 #> [11726,]  237  256  248 #> [11727,]  238  257  249 #> [11728,]  238  257  249 #> [11729,]  237  256  248 #> [11730,]  237  256  248 #> [11731,]  237  256  248 #> [11732,]  237  256  248 #> [11733,]  238  257  249 #> [11734,]  237  256  248 #> [11735,]  237  256  248 #> [11736,]  238  257  249 #> [11737,]  237  256  248 #> [11738,]  237  256  248 #> [11739,]  238  257  249 #> [11740,]  238  257  249 #> [11741,]  238  257  249 #> [11742,]  237  256  248 #> [11743,]  237  256  248 #> [11744,]  237  256  248 #> [11745,]  238  257  249 #> [11746,]  237  256  248 #> [11747,]  237  256  248 #> [11748,]  237  256  248 #> [11749,]  238  257  249 #> [11750,]  238  257  249 #> [11751,]  237  256  248 #> [11752,]  238  257  249 #> [11753,]  238  257  249 #> [11754,]  238  257  249 #> [11755,]  238  257  249 #> [11756,]  237  256  248 #> [11757,]  238  257  249 #> [11758,]  238  257  249 #> [11759,]  238  257  249 #> [11760,]  237  256  248 #> [11761,]  237  256  248 #> [11762,]  237  256  248 #> [11763,]  237  256  248 #> [11764,]  237  256  248 #> [11765,]  237  256  248 #> [11766,]  237  256  248 #> [11767,]  238  257  249 #> [11768,]  237  256  248 #> [11769,]  237  256  248 #> [11770,]  237  256  248 #> [11771,]  238  257  249 #> [11772,]  238  257  249 #> [11773,]  238  257  249 #> [11774,]  238  257  249 #> [11775,]  237  256  248 #> [11776,]  238  257  249 #> [11777,]  238  257  249 #> [11778,]  237  256  248 #> [11779,]  237  256  248 #> [11780,]  238  257  249 #> [11781,]  237  256  248 #> [11782,]  237  256  248 #> [11783,]  238  257  249 #> [11784,]  238  257  249 #> [11785,]  238  257  249 #> [11786,]  238  257  249 #> [11787,]  238  257  249 #> [11788,]  238  257  249 #> [11789,]  237  256  248 #> [11790,]  238  257  249 #> [11791,]  238  257  249 #> [11792,]  237  256  248 #> [11793,]  237  256  248 #> [11794,]  237  256  248 #> [11795,]  237  256  248 #> [11796,]  237  256  248 #> [11797,]  237  256  248 #> [11798,]  237  256  248 #> [11799,]  238  257  249 #> [11800,]  237  256  248 #> [11801,]  239  258  250 #> [11802,]  240  259  251 #> [11803,]  240  259  251 #> [11804,]  239  258  250 #> [11805,]  239  258  250 #> [11806,]  240  259  251 #> [11807,]  240  259  251 #> [11808,]  239  258  250 #> [11809,]  239  258  250 #> [11810,]  239  258  250 #> [11811,]  239  258  250 #> [11812,]  240  259  251 #> [11813,]  239  258  250 #> [11814,]  239  258  250 #> [11815,]  239  258  250 #> [11816,]  239  258  250 #> [11817,]  239  258  250 #> [11818,]  240  259  251 #> [11819,]  240  259  251 #> [11820,]  240  259  251 #> [11821,]  239  258  250 #> [11822,]  239  258  250 #> [11823,]  240  259  251 #> [11824,]  239  258  250 #> [11825,]  240  259  251 #> [11826,]  239  258  250 #> [11827,]  239  258  250 #> [11828,]  240  259  251 #> [11829,]  240  259  251 #> [11830,]  239  258  250 #> [11831,]  240  259  251 #> [11832,]  240  259  251 #> [11833,]  240  259  251 #> [11834,]  240  259  251 #> [11835,]  239  258  250 #> [11836,]  239  258  250 #> [11837,]  239  258  250 #> [11838,]  239  258  250 #> [11839,]  240  259  251 #> [11840,]  240  259  251 #> [11841,]  239  258  250 #> [11842,]  240  259  251 #> [11843,]  239  258  250 #> [11844,]  239  258  250 #> [11845,]  239  258  250 #> [11846,]  239  258  250 #> [11847,]  240  259  251 #> [11848,]  240  259  251 #> [11849,]  239  258  250 #> [11850,]  240  259  251 #> [11851,]  239  258  250 #> [11852,]  239  258  250 #> [11853,]  239  258  250 #> [11854,]  239  258  250 #> [11855,]  239  258  250 #> [11856,]  240  259  251 #> [11857,]  240  259  251 #> [11858,]  239  258  250 #> [11859,]  239  258  250 #> [11860,]  240  259  251 #> [11861,]  240  259  251 #> [11862,]  239  258  250 #> [11863,]  239  258  250 #> [11864,]  240  259  251 #> [11865,]  240  259  251 #> [11866,]  239  258  250 #> [11867,]  239  258  250 #> [11868,]  239  258  250 #> [11869,]  239  258  250 #> [11870,]  240  259  251 #> [11871,]  240  259  251 #> [11872,]  239  258  250 #> [11873,]  240  259  251 #> [11874,]  239  258  250 #> [11875,]  240  259  251 #> [11876,]  239  258  250 #> [11877,]  240  259  251 #> [11878,]  240  259  251 #> [11879,]  239  258  250 #> [11880,]  239  258  250 #> [11881,]  239  258  250 #> [11882,]  239  258  250 #> [11883,]  239  258  250 #> [11884,]  240  259  251 #> [11885,]  239  258  250 #> [11886,]  240  259  251 #> [11887,]  239  258  250 #> [11888,]  239  258  250 #> [11889,]  239  258  250 #> [11890,]  239  258  250 #> [11891,]  239  258  250 #> [11892,]  239  258  250 #> [11893,]  240  259  251 #> [11894,]  240  259  251 #> [11895,]  239  258  250 #> [11896,]  239  258  250 #> [11897,]  240  259  251 #> [11898,]  240  259  251 #> [11899,]  239  258  250 #> [11900,]  240  259  251 #> [11901,]  242  260  252 #> [11902,]  242  260  252 #> [11903,]  242  260  252 #> [11904,]  241  261  253 #> [11905,]  242  260  252 #> [11906,]  242  260  252 #> [11907,]  242  260  252 #> [11908,]  241  262  253 #> [11909,]  241  261  253 #> [11910,]  241  261  253 #> [11911,]  242  260  252 #> [11912,]  242  260  252 #> [11913,]  242  260  252 #> [11914,]  242  260  252 #> [11915,]  242  260  252 #> [11916,]  242  260  252 #> [11917,]  242  260  252 #> [11918,]  242  260  252 #> [11919,]  242  260  252 #> [11920,]  242  260  252 #> [11921,]  242  260  252 #> [11922,]  242  260  252 #> [11923,]  242  260  252 #> [11924,]  242  260  252 #> [11925,]  242  260  252 #> [11926,]  242  260  252 #> [11927,]  242  260  252 #> [11928,]  242  260  252 #> [11929,]  242  260  252 #> [11930,]  242  260  252 #> [11931,]  242  260  252 #> [11932,]  242  260  252 #> [11933,]  242  260  252 #> [11934,]  242  260  252 #> [11935,]  242  260  252 #> [11936,]  242  260  252 #> [11937,]  242  260  252 #> [11938,]  242  260  252 #> [11939,]  242  260  252 #> [11940,]  242  260  252 #> [11941,]  242  260  252 #> [11942,]  242  260  252 #> [11943,]  241  262  253 #> [11944,]  242  260  252 #> [11945,]  242  260  252 #> [11946,]  242  260  252 #> [11947,]  242  260  252 #> [11948,]  242  260  252 #> [11949,]  242  260  252 #> [11950,]  242  260  252 #> [11951,]  241  262  253 #> [11952,]  242  260  252 #> [11953,]  242  260  252 #> [11954,]  242  260  252 #> [11955,]  242  260  252 #> [11956,]  242  260  252 #> [11957,]  242  260  252 #> [11958,]  242  260  252 #> [11959,]  242  260  252 #> [11960,]  241  262  253 #> [11961,]  242  260  252 #> [11962,]  242  260  252 #> [11963,]  242  260  252 #> [11964,]  241  262  253 #> [11965,]  242  260  252 #> [11966,]  242  260  252 #> [11967,]  241  261  253 #> [11968,]  242  260  252 #> [11969,]  242  260  252 #> [11970,]  242  260  252 #> [11971,]  242  260  252 #> [11972,]  242  260  252 #> [11973,]  242  260  252 #> [11974,]  242  260  252 #> [11975,]  242  260  252 #> [11976,]  242  260  252 #> [11977,]  242  260  252 #> [11978,]  242  260  252 #> [11979,]  242  260  252 #> [11980,]  242  260  252 #> [11981,]  242  260  252 #> [11982,]  242  260  252 #> [11983,]  242  260  252 #> [11984,]  242  260  252 #> [11985,]  241  262  253 #> [11986,]  242  260  252 #> [11987,]  242  260  252 #> [11988,]  242  260  252 #> [11989,]  242  260  252 #> [11990,]  242  260  252 #> [11991,]  241  261  253 #> [11992,]  242  260  252 #> [11993,]  242  260  252 #> [11994,]  242  260  252 #> [11995,]  241  262  253 #> [11996,]  242  260  252 #> [11997,]  242  260  252 #> [11998,]  242  260  252 #> [11999,]  242  260  252 #> [12000,]  242  260  252 #> [12001,]  243  263  255 #> [12002,]  243  263  255 #> [12003,]  244  264  254 #> [12004,]  243  263  255 #> [12005,]  243  263  255 #> [12006,]  244  264  254 #> [12007,]  243  263  255 #> [12008,]  243  263  255 #> [12009,]  243  263  255 #> [12010,]  243  263  255 #> [12011,]  243  263  255 #> [12012,]  243  263  255 #> [12013,]  243  263  255 #> [12014,]  243  263  255 #> [12015,]  243  263  255 #> [12016,]  243  263  255 #> [12017,]  243  263  255 #> [12018,]  243  263  255 #> [12019,]  244  264  254 #> [12020,]  243  263  255 #> [12021,]  243  263  255 #> [12022,]  243  263  255 #> [12023,]  243  263  255 #> [12024,]  243  263  255 #> [12025,]  243  263  255 #> [12026,]  243  263  255 #> [12027,]  243  263  255 #> [12028,]  243  263  255 #> [12029,]  243  263  255 #> [12030,]  243  263  255 #> [12031,]  243  263  255 #> [12032,]  243  263  255 #> [12033,]  243  263  255 #> [12034,]  244  264  254 #> [12035,]  243  263  255 #> [12036,]  243  263  255 #> [12037,]  243  263  255 #> [12038,]  243  263  255 #> [12039,]  243  263  255 #> [12040,]  243  263  255 #> [12041,]  243  263  255 #> [12042,]  243  263  255 #> [12043,]  243  263  255 #> [12044,]  243  263  255 #> [12045,]  243  263  255 #> [12046,]  243  263  255 #> [12047,]  243  263  255 #> [12048,]  243  263  255 #> [12049,]  243  263  255 #> [12050,]  243  263  255 #> [12051,]  243  263  255 #> [12052,]  243  263  255 #> [12053,]  243  263  255 #> [12054,]  243  263  255 #> [12055,]  243  263  255 #> [12056,]  243  263  255 #> [12057,]  243  263  255 #> [12058,]  243  263  255 #> [12059,]  243  263  255 #> [12060,]  244  264  254 #> [12061,]  243  263  255 #> [12062,]  243  263  255 #> [12063,]  243  263  255 #> [12064,]  243  263  255 #> [12065,]  244  264  254 #> [12066,]  243  263  255 #> [12067,]  243  263  255 #> [12068,]  243  263  255 #> [12069,]  243  263  255 #> [12070,]  244  264  254 #> [12071,]  243  263  255 #> [12072,]  243  263  255 #> [12073,]  244  264  254 #> [12074,]  243  263  255 #> [12075,]  243  263  255 #> [12076,]  243  263  255 #> [12077,]  243  263  255 #> [12078,]  243  263  255 #> [12079,]  243  263  255 #> [12080,]  243  263  255 #> [12081,]  243  263  255 #> [12082,]  243  263  255 #> [12083,]  243  263  255 #> [12084,]  243  263  255 #> [12085,]  243  263  255 #> [12086,]  243  263  255 #> [12087,]  243  263  255 #> [12088,]  243  263  255 #> [12089,]  243  263  255 #> [12090,]  243  263  255 #> [12091,]  243  263  255 #> [12092,]  243  263  255 #> [12093,]  244  264  254 #> [12094,]  243  263  255 #> [12095,]  243  263  255 #> [12096,]  243  263  255 #> [12097,]  243  263  255 #> [12098,]  243  263  255 #> [12099,]  243  263  255 #> [12100,]  243  263  255 #> [12101,]  246  266  256 #> [12102,]  247  266  256 #> [12103,]  247  266  256 #> [12104,]  246  266  256 #> [12105,]  246  266  256 #> [12106,]  247  266  256 #> [12107,]  247  266  256 #> [12108,]  246  266  256 #> [12109,]  246  266  256 #> [12110,]  247  266  256 #> [12111,]  246  266  256 #> [12112,]  245  265  256 #> [12113,]  246  266  256 #> [12114,]  246  266  256 #> [12115,]  246  266  256 #> [12116,]  246  266  256 #> [12117,]  246  266  256 #> [12118,]  247  266  256 #> [12119,]  247  266  256 #> [12120,]  247  266  256 #> [12121,]  246  266  256 #> [12122,]  246  266  256 #> [12123,]  247  266  256 #> [12124,]  246  266  256 #> [12125,]  247  266  256 #> [12126,]  246  266  256 #> [12127,]  246  266  256 #> [12128,]  247  266  256 #> [12129,]  247  266  256 #> [12130,]  246  266  256 #> [12131,]  245  265  256 #> [12132,]  247  266  256 #> [12133,]  247  266  256 #> [12134,]  247  266  256 #> [12135,]  246  266  256 #> [12136,]  246  266  256 #> [12137,]  246  266  256 #> [12138,]  246  266  256 #> [12139,]  247  266  256 #> [12140,]  247  266  256 #> [12141,]  246  266  256 #> [12142,]  247  266  256 #> [12143,]  246  266  256 #> [12144,]  246  266  256 #> [12145,]  246  266  256 #> [12146,]  246  266  256 #> [12147,]  247  266  256 #> [12148,]  247  266  256 #> [12149,]  246  266  256 #> [12150,]  247  266  256 #> [12151,]  246  266  256 #> [12152,]  245  265  256 #> [12153,]  247  266  256 #> [12154,]  246  266  256 #> [12155,]  246  266  256 #> [12156,]  247  266  256 #> [12157,]  247  266  256 #> [12158,]  246  266  256 #> [12159,]  245  265  256 #> [12160,]  245  265  256 #> [12161,]  247  266  256 #> [12162,]  246  266  256 #> [12163,]  247  266  256 #> [12164,]  247  266  256 #> [12165,]  247  266  256 #> [12166,]  246  266  256 #> [12167,]  246  266  256 #> [12168,]  246  266  256 #> [12169,]  246  266  256 #> [12170,]  247  266  256 #> [12171,]  247  266  256 #> [12172,]  246  266  256 #> [12173,]  247  266  256 #> [12174,]  246  266  256 #> [12175,]  247  266  256 #> [12176,]  246  266  256 #> [12177,]  247  266  256 #> [12178,]  247  266  256 #> [12179,]  246  266  256 #> [12180,]  246  266  256 #> [12181,]  246  266  256 #> [12182,]  246  266  256 #> [12183,]  246  266  256 #> [12184,]  247  266  256 #> [12185,]  246  266  256 #> [12186,]  247  266  256 #> [12187,]  246  266  256 #> [12188,]  246  266  256 #> [12189,]  246  266  256 #> [12190,]  246  266  256 #> [12191,]  246  266  256 #> [12192,]  246  266  256 #> [12193,]  247  266  256 #> [12194,]  247  266  256 #> [12195,]  246  266  256 #> [12196,]  246  266  256 #> [12197,]  247  266  256 #> [12198,]  247  266  256 #> [12199,]  246  266  256 #> [12200,]  247  266  256 #> [12201,]  248  267  257 #> [12202,]  248  267  257 #> [12203,]  248  267  257 #> [12204,]  249  268  258 #> [12205,]  248  267  257 #> [12206,]  248  267  257 #> [12207,]  248  267  258 #> [12208,]  248  267  257 #> [12209,]  248  267  258 #> [12210,]  248  267  258 #> [12211,]  248  267  257 #> [12212,]  248  267  257 #> [12213,]  248  267  257 #> [12214,]  249  268  258 #> [12215,]  248  267  257 #> [12216,]  248  267  258 #> [12217,]  248  267  257 #> [12218,]  248  267  257 #> [12219,]  248  267  257 #> [12220,]  248  267  258 #> [12221,]  248  267  257 #> [12222,]  248  267  258 #> [12223,]  248  267  257 #> [12224,]  248  267  258 #> [12225,]  248  267  258 #> [12226,]  248  267  257 #> [12227,]  248  267  257 #> [12228,]  248  267  258 #> [12229,]  248  267  257 #> [12230,]  248  267  257 #> [12231,]  248  267  257 #> [12232,]  248  267  257 #> [12233,]  248  267  257 #> [12234,]  248  267  257 #> [12235,]  248  267  257 #> [12236,]  248  267  258 #> [12237,]  248  267  257 #> [12238,]  248  267  257 #> [12239,]  248  267  258 #> [12240,]  248  267  257 #> [12241,]  248  267  257 #> [12242,]  248  267  257 #> [12243,]  248  267  257 #> [12244,]  248  267  257 #> [12245,]  248  267  257 #> [12246,]  248  267  257 #> [12247,]  248  267  257 #> [12248,]  248  267  257 #> [12249,]  248  267  257 #> [12250,]  248  267  258 #> [12251,]  248  267  257 #> [12252,]  248  267  258 #> [12253,]  248  267  257 #> [12254,]  248  267  258 #> [12255,]  248  267  258 #> [12256,]  248  267  257 #> [12257,]  248  267  258 #> [12258,]  248  267  257 #> [12259,]  248  267  258 #> [12260,]  248  267  257 #> [12261,]  249  268  257 #> [12262,]  248  267  257 #> [12263,]  248  267  257 #> [12264,]  248  267  257 #> [12265,]  248  267  257 #> [12266,]  248  267  257 #> [12267,]  248  267  258 #> [12268,]  248  267  257 #> [12269,]  248  267  257 #> [12270,]  248  267  257 #> [12271,]  248  267  257 #> [12272,]  248  267  257 #> [12273,]  248  267  258 #> [12274,]  248  267  257 #> [12275,]  248  267  257 #> [12276,]  248  267  258 #> [12277,]  248  267  257 #> [12278,]  248  267  257 #> [12279,]  248  267  257 #> [12280,]  248  267  257 #> [12281,]  248  267  257 #> [12282,]  249  268  257 #> [12283,]  248  267  257 #> [12284,]  248  267  257 #> [12285,]  248  267  257 #> [12286,]  248  267  258 #> [12287,]  248  267  257 #> [12288,]  248  267  257 #> [12289,]  248  267  257 #> [12290,]  248  267  258 #> [12291,]  248  267  258 #> [12292,]  249  268  257 #> [12293,]  249  268  257 #> [12294,]  248  267  257 #> [12295,]  248  267  257 #> [12296,]  249  268  257 #> [12297,]  248  267  257 #> [12298,]  248  267  257 #> [12299,]  248  267  257 #> [12300,]  248  267  257 #> [12301,]  250  269  259 #> [12302,]  251  270  260 #> [12303,]  250  269  259 #> [12304,]  250  269  259 #> [12305,]  251  270  260 #> [12306,]  250  269  259 #> [12307,]  252  270  260 #> [12308,]  250  269  259 #> [12309,]  252  270  260 #> [12310,]  252  270  260 #> [12311,]  250  269  259 #> [12312,]  251  270  260 #> [12313,]  252  270  260 #> [12314,]  250  269  259 #> [12315,]  250  269  259 #> [12316,]  250  269  259 #> [12317,]  251  270  260 #> [12318,]  251  270  260 #> [12319,]  250  269  259 #> [12320,]  252  270  260 #> [12321,]  251  270  260 #> [12322,]  252  270  260 #> [12323,]  251  270  260 #> [12324,]  252  270  260 #> [12325,]  250  269  259 #> [12326,]  250  269  259 #> [12327,]  251  270  260 #> [12328,]  250  269  259 #> [12329,]  251  270  260 #> [12330,]  251  270  260 #> [12331,]  251  270  260 #> [12332,]  251  270  260 #> [12333,]  251  270  260 #> [12334,]  250  269  259 #> [12335,]  250  269  259 #> [12336,]  252  270  260 #> [12337,]  250  269  259 #> [12338,]  250  269  259 #> [12339,]  252  270  260 #> [12340,]  251  270  260 #> [12341,]  251  270  260 #> [12342,]  250  269  259 #> [12343,]  250  269  259 #> [12344,]  251  270  260 #> [12345,]  250  269  259 #> [12346,]  250  269  259 #> [12347,]  251  270  260 #> [12348,]  251  270  260 #> [12349,]  250  269  259 #> [12350,]  252  270  260 #> [12351,]  251  270  260 #> [12352,]  250  269  259 #> [12353,]  251  270  260 #> [12354,]  252  270  260 #> [12355,]  250  269  259 #> [12356,]  250  269  259 #> [12357,]  250  269  259 #> [12358,]  252  270  260 #> [12359,]  250  269  259 #> [12360,]  251  270  260 #> [12361,]  251  270  260 #> [12362,]  250  269  259 #> [12363,]  251  270  260 #> [12364,]  250  269  259 #> [12365,]  250  269  259 #> [12366,]  250  269  259 #> [12367,]  250  269  259 #> [12368,]  250  269  259 #> [12369,]  250  269  259 #> [12370,]  251  270  260 #> [12371,]  251  270  260 #> [12372,]  250  269  259 #> [12373,]  250  269  259 #> [12374,]  251  270  260 #> [12375,]  251  270  260 #> [12376,]  252  270  260 #> [12377,]  250  269  259 #> [12378,]  251  270  260 #> [12379,]  250  269  259 #> [12380,]  251  270  260 #> [12381,]  251  270  260 #> [12382,]  250  269  259 #> [12383,]  251  270  260 #> [12384,]  251  270  260 #> [12385,]  250  269  259 #> [12386,]  252  270  260 #> [12387,]  251  270  260 #> [12388,]  251  270  260 #> [12389,]  250  269  259 #> [12390,]  252  270  260 #> [12391,]  250  269  259 #> [12392,]  251  270  260 #> [12393,]  251  270  260 #> [12394,]  250  269  259 #> [12395,]  251  270  260 #> [12396,]  250  269  259 #> [12397,]  250  269  259 #> [12398,]  250  269  259 #> [12399,]  250  269  259 #> [12400,]  250  269  259 #> [12401,]  253  271  261 #> [12402,]  253  271  261 #> [12403,]  253  271  261 #> [12404,]  253  271  261 #> [12405,]  253  271  261 #> [12406,]  253  271  261 #> [12407,]  253  271  261 #> [12408,]  253  271  261 #> [12409,]  253  271  261 #> [12410,]  253  271  261 #> [12411,]  253  271  261 #> [12412,]  253  271  261 #> [12413,]  254  272  261 #> [12414,]  253  271  261 #> [12415,]  254  272  261 #> [12416,]  253  271  261 #> [12417,]  253  271  261 #> [12418,]  253  271  261 #> [12419,]  254  272  261 #> [12420,]  254  272  261 #> [12421,]  253  271  261 #> [12422,]  254  272  261 #> [12423,]  253  271  261 #> [12424,]  253  271  261 #> [12425,]  253  271  261 #> [12426,]  253  271  261 #> [12427,]  254  272  261 #> [12428,]  253  271  261 #> [12429,]  254  272  261 #> [12430,]  253  271  261 #> [12431,]  253  271  261 #> [12432,]  253  271  261 #> [12433,]  253  271  261 #> [12434,]  253  271  261 #> [12435,]  253  271  261 #> [12436,]  254  272  261 #> [12437,]  254  272  261 #> [12438,]  254  272  261 #> [12439,]  253  271  261 #> [12440,]  253  271  261 #> [12441,]  253  271  261 #> [12442,]  253  271  261 #> [12443,]  253  271  261 #> [12444,]  253  271  261 #> [12445,]  253  271  261 #> [12446,]  254  272  261 #> [12447,]  253  271  261 #> [12448,]  253  271  261 #> [12449,]  253  271  261 #> [12450,]  253  271  261 #> [12451,]  253  271  261 #> [12452,]  253  271  261 #> [12453,]  254  272  261 #> [12454,]  253  271  261 #> [12455,]  254  272  261 #> [12456,]  253  271  261 #> [12457,]  253  271  261 #> [12458,]  254  272  261 #> [12459,]  253  271  261 #> [12460,]  253  271  261 #> [12461,]  253  271  261 #> [12462,]  253  271  261 #> [12463,]  253  271  261 #> [12464,]  254  272  261 #> [12465,]  253  271  261 #> [12466,]  254  272  261 #> [12467,]  253  271  261 #> [12468,]  253  271  261 #> [12469,]  254  272  261 #> [12470,]  253  271  261 #> [12471,]  254  272  261 #> [12472,]  253  271  261 #> [12473,]  253  271  261 #> [12474,]  253  271  261 #> [12475,]  253  271  261 #> [12476,]  253  271  261 #> [12477,]  254  272  261 #> [12478,]  253  271  261 #> [12479,]  253  271  261 #> [12480,]  254  272  261 #> [12481,]  254  272  261 #> [12482,]  253  271  261 #> [12483,]  254  272  261 #> [12484,]  253  271  261 #> [12485,]  253  271  261 #> [12486,]  253  271  261 #> [12487,]  254  272  261 #> [12488,]  253  271  261 #> [12489,]  253  271  261 #> [12490,]  254  272  261 #> [12491,]  253  271  261 #> [12492,]  253  271  261 #> [12493,]  253  271  261 #> [12494,]  253  271  261 #> [12495,]  253  271  261 #> [12496,]  254  272  261 #> [12497,]  254  272  261 #> [12498,]  253  271  261 #> [12499,]  253  271  261 #> [12500,]  254  272  261 #> [12501,]  257  274  263 #> [12502,]  256  274  263 #> [12503,]  257  274  262 #> [12504,]  257  274  262 #> [12505,]  256  274  262 #> [12506,]  256  274  263 #> [12507,]  255  273  262 #> [12508,]  256  274  262 #> [12509,]  257  274  262 #> [12510,]  257  274  262 #> [12511,]  256  274  262 #> [12512,]  256  274  262 #> [12513,]  257  274  263 #> [12514,]  257  274  263 #> [12515,]  256  274  263 #> [12516,]  257  274  263 #> [12517,]  256  274  263 #> [12518,]  256  274  262 #> [12519,]  256  274  262 #> [12520,]  257  274  262 #> [12521,]  255  273  263 #> [12522,]  257  274  263 #> [12523,]  256  274  262 #> [12524,]  257  274  262 #> [12525,]  257  274  262 #> [12526,]  256  274  263 #> [12527,]  257  274  263 #> [12528,]  257  274  262 #> [12529,]  256  274  263 #> [12530,]  256  274  262 #> [12531,]  256  274  262 #> [12532,]  256  274  262 #> [12533,]  256  274  263 #> [12534,]  256  274  262 #> [12535,]  256  274  263 #> [12536,]  257  274  262 #> [12537,]  256  274  263 #> [12538,]  256  274  262 #> [12539,]  255  273  262 #> [12540,]  256  274  262 #> [12541,]  257  274  263 #> [12542,]  256  274  262 #> [12543,]  256  274  262 #> [12544,]  256  274  263 #> [12545,]  257  274  262 #> [12546,]  256  274  262 #> [12547,]  256  274  262 #> [12548,]  256  274  262 #> [12549,]  255  273  262 #> [12550,]  257  274  263 #> [12551,]  256  274  262 #> [12552,]  257  274  263 #> [12553,]  257  274  262 #> [12554,]  257  274  262 #> [12555,]  257  274  262 #> [12556,]  256  274  262 #> [12557,]  257  274  262 #> [12558,]  257  274  263 #> [12559,]  257  274  263 #> [12560,]  256  274  262 #> [12561,]  256  274  263 #> [12562,]  255  273  262 #> [12563,]  256  274  262 #> [12564,]  256  274  262 #> [12565,]  256  274  262 #> [12566,]  256  274  262 #> [12567,]  257  274  262 #> [12568,]  256  274  263 #> [12569,]  256  274  262 #> [12570,]  255  273  263 #> [12571,]  257  274  263 #> [12572,]  257  274  262 #> [12573,]  257  274  263 #> [12574,]  257  274  262 #> [12575,]  256  274  262 #> [12576,]  257  274  263 #> [12577,]  256  274  263 #> [12578,]  256  274  262 #> [12579,]  256  274  263 #> [12580,]  255  273  262 #> [12581,]  256  274  263 #> [12582,]  256  274  262 #> [12583,]  256  274  263 #> [12584,]  256  274  262 #> [12585,]  257  274  262 #> [12586,]  257  274  263 #> [12587,]  257  274  262 #> [12588,]  257  274  262 #> [12589,]  256  274  262 #> [12590,]  257  274  263 #> [12591,]  257  274  262 #> [12592,]  256  274  262 #> [12593,]  256  274  263 #> [12594,]  256  274  263 #> [12595,]  255  273  262 #> [12596,]  256  274  263 #> [12597,]  256  274  262 #> [12598,]  256  274  262 #> [12599,]  256  274  263 #> [12600,]  256  274  263 #> [12601,]  259  276  265 #> [12602,]  259  276  265 #> [12603,]  258  275  264 #> [12604,]  259  276  265 #> [12605,]  259  276  265 #> [12606,]  259  276  265 #> [12607,]  259  276  264 #> [12608,]  259  276  264 #> [12609,]  259  276  265 #> [12610,]  258  275  265 #> [12611,]  258  275  265 #> [12612,]  259  276  265 #> [12613,]  259  276  264 #> [12614,]  258  275  265 #> [12615,]  259  276  265 #> [12616,]  259  276  264 #> [12617,]  259  276  264 #> [12618,]  259  276  265 #> [12619,]  259  276  265 #> [12620,]  259  276  264 #> [12621,]  258  275  265 #> [12622,]  259  276  264 #> [12623,]  259  276  265 #> [12624,]  259  276  264 #> [12625,]  259  276  264 #> [12626,]  259  276  265 #> [12627,]  259  276  265 #> [12628,]  258  275  265 #> [12629,]  259  276  265 #> [12630,]  259  276  265 #> [12631,]  258  275  265 #> [12632,]  258  275  265 #> [12633,]  259  276  265 #> [12634,]  258  275  265 #> [12635,]  259  276  265 #> [12636,]  259  276  265 #> [12637,]  259  276  265 #> [12638,]  259  276  265 #> [12639,]  259  276  264 #> [12640,]  258  275  264 #> [12641,]  259  276  265 #> [12642,]  259  276  265 #> [12643,]  259  276  265 #> [12644,]  259  276  264 #> [12645,]  259  276  264 #> [12646,]  259  276  264 #> [12647,]  259  276  264 #> [12648,]  258  275  265 #> [12649,]  259  276  264 #> [12650,]  259  276  264 #> [12651,]  259  276  265 #> [12652,]  259  276  265 #> [12653,]  259  276  264 #> [12654,]  259  276  264 #> [12655,]  259  276  264 #> [12656,]  259  276  264 #> [12657,]  259  276  265 #> [12658,]  259  276  265 #> [12659,]  259  276  264 #> [12660,]  259  276  265 #> [12661,]  259  276  265 #> [12662,]  259  276  265 #> [12663,]  259  276  264 #> [12664,]  259  276  265 #> [12665,]  259  276  264 #> [12666,]  259  276  264 #> [12667,]  259  276  265 #> [12668,]  259  276  265 #> [12669,]  259  276  265 #> [12670,]  258  275  264 #> [12671,]  259  276  265 #> [12672,]  259  276  264 #> [12673,]  259  276  265 #> [12674,]  258  275  265 #> [12675,]  259  276  265 #> [12676,]  259  276  265 #> [12677,]  259  276  265 #> [12678,]  259  276  264 #> [12679,]  259  276  265 #> [12680,]  259  276  265 #> [12681,]  259  276  265 #> [12682,]  258  275  265 #> [12683,]  259  276  265 #> [12684,]  259  276  264 #> [12685,]  259  276  265 #> [12686,]  259  276  264 #> [12687,]  259  276  265 #> [12688,]  259  276  265 #> [12689,]  259  276  264 #> [12690,]  259  276  264 #> [12691,]  259  276  265 #> [12692,]  259  276  265 #> [12693,]  259  276  265 #> [12694,]  259  276  264 #> [12695,]  259  276  265 #> [12696,]  259  276  265 #> [12697,]  259  276  265 #> [12698,]  258  275  264 #> [12699,]  259  276  265 #> [12700,]  259  276  264 #> [12701,]  260  277  267 #> [12702,]  260  277  267 #> [12703,]  260  277  267 #> [12704,]  261  278  266 #> [12705,]  260  277  267 #> [12706,]  260  277  267 #> [12707,]  261  278  266 #> [12708,]  260  277  267 #> [12709,]  260  277  267 #> [12710,]  261  278  266 #> [12711,]  260  277  267 #> [12712,]  260  277  267 #> [12713,]  260  277  267 #> [12714,]  260  277  267 #> [12715,]  261  278  266 #> [12716,]  261  278  266 #> [12717,]  260  277  267 #> [12718,]  261  278  266 #> [12719,]  260  277  267 #> [12720,]  260  277  267 #> [12721,]  261  278  266 #> [12722,]  260  277  267 #> [12723,]  261  278  266 #> [12724,]  260  277  267 #> [12725,]  261  278  266 #> [12726,]  260  277  267 #> [12727,]  261  278  266 #> [12728,]  261  278  266 #> [12729,]  260  277  267 #> [12730,]  260  277  267 #> [12731,]  260  277  267 #> [12732,]  260  277  267 #> [12733,]  260  277  267 #> [12734,]  260  277  267 #> [12735,]  260  277  267 #> [12736,]  260  277  267 #> [12737,]  260  277  267 #> [12738,]  260  277  267 #> [12739,]  261  278  266 #> [12740,]  260  277  267 #> [12741,]  260  277  267 #> [12742,]  260  277  267 #> [12743,]  261  278  266 #> [12744,]  260  277  267 #> [12745,]  261  278  266 #> [12746,]  260  277  267 #> [12747,]  261  278  266 #> [12748,]  260  277  267 #> [12749,]  260  277  267 #> [12750,]  260  277  267 #> [12751,]  260  277  267 #> [12752,]  260  277  267 #> [12753,]  261  278  266 #> [12754,]  260  277  267 #> [12755,]  260  277  267 #> [12756,]  260  277  267 #> [12757,]  260  277  267 #> [12758,]  260  277  267 #> [12759,]  260  277  267 #> [12760,]  260  277  267 #> [12761,]  261  278  266 #> [12762,]  260  277  267 #> [12763,]  260  277  267 #> [12764,]  261  278  266 #> [12765,]  260  277  267 #> [12766,]  260  277  267 #> [12767,]  260  277  267 #> [12768,]  260  277  267 #> [12769,]  260  277  267 #> [12770,]  260  277  267 #> [12771,]  261  278  266 #> [12772,]  261  278  266 #> [12773,]  261  278  266 #> [12774,]  261  278  266 #> [12775,]  261  278  266 #> [12776,]  261  278  266 #> [12777,]  261  278  266 #> [12778,]  260  277  267 #> [12779,]  260  277  267 #> [12780,]  260  277  267 #> [12781,]  260  277  267 #> [12782,]  260  277  267 #> [12783,]  260  277  267 #> [12784,]  261  278  266 #> [12785,]  260  277  267 #> [12786,]  260  277  267 #> [12787,]  260  277  267 #> [12788,]  261  278  266 #> [12789,]  260  277  267 #> [12790,]  260  277  267 #> [12791,]  260  277  267 #> [12792,]  260  277  267 #> [12793,]  260  277  267 #> [12794,]  261  278  266 #> [12795,]  261  278  266 #> [12796,]  260  277  267 #> [12797,]  260  277  267 #> [12798,]  260  277  267 #> [12799,]  260  277  267 #> [12800,]  261  278  266 #> [12801,]  263  280  269 #> [12802,]  263  280  269 #> [12803,]  262  279  268 #> [12804,]  262  279  268 #> [12805,]  262  279  268 #> [12806,]  263  280  269 #> [12807,]  262  279  268 #> [12808,]  262  279  268 #> [12809,]  262  279  268 #> [12810,]  262  279  268 #> [12811,]  263  280  269 #> [12812,]  262  279  268 #> [12813,]  263  280  269 #> [12814,]  263  280  269 #> [12815,]  263  280  269 #> [12816,]  263  280  269 #> [12817,]  263  280  269 #> [12818,]  262  279  268 #> [12819,]  262  279  268 #> [12820,]  262  279  268 #> [12821,]  263  280  269 #> [12822,]  263  280  269 #> [12823,]  262  279  268 #> [12824,]  262  279  268 #> [12825,]  262  279  268 #> [12826,]  263  280  269 #> [12827,]  263  280  269 #> [12828,]  262  279  268 #> [12829,]  263  280  269 #> [12830,]  262  279  268 #> [12831,]  262  279  268 #> [12832,]  262  279  268 #> [12833,]  263  280  269 #> [12834,]  262  279  268 #> [12835,]  263  280  269 #> [12836,]  262  279  268 #> [12837,]  263  280  269 #> [12838,]  262  279  268 #> [12839,]  262  279  268 #> [12840,]  262  279  268 #> [12841,]  263  280  269 #> [12842,]  262  279  268 #> [12843,]  262  279  268 #> [12844,]  263  280  269 #> [12845,]  262  279  268 #> [12846,]  262  279  268 #> [12847,]  263  280  269 #> [12848,]  262  279  268 #> [12849,]  262  279  268 #> [12850,]  263  280  269 #> [12851,]  262  279  268 #> [12852,]  263  280  269 #> [12853,]  262  279  268 #> [12854,]  262  279  268 #> [12855,]  262  279  268 #> [12856,]  262  279  268 #> [12857,]  262  279  268 #> [12858,]  263  280  269 #> [12859,]  263  280  269 #> [12860,]  262  279  268 #> [12861,]  263  280  269 #> [12862,]  262  279  268 #> [12863,]  262  279  268 #> [12864,]  262  279  268 #> [12865,]  262  279  268 #> [12866,]  262  279  268 #> [12867,]  262  279  268 #> [12868,]  263  280  269 #> [12869,]  262  279  268 #> [12870,]  263  280  269 #> [12871,]  263  280  269 #> [12872,]  262  279  268 #> [12873,]  263  280  269 #> [12874,]  262  279  268 #> [12875,]  263  280  269 #> [12876,]  263  280  269 #> [12877,]  263  280  269 #> [12878,]  262  279  268 #> [12879,]  263  280  269 #> [12880,]  262  279  268 #> [12881,]  263  280  269 #> [12882,]  262  279  268 #> [12883,]  263  280  269 #> [12884,]  263  280  269 #> [12885,]  262  279  268 #> [12886,]  263  280  269 #> [12887,]  263  280  269 #> [12888,]  262  279  268 #> [12889,]  262  279  268 #> [12890,]  263  280  269 #> [12891,]  262  279  268 #> [12892,]  262  279  268 #> [12893,]  263  280  269 #> [12894,]  263  280  269 #> [12895,]  262  279  268 #> [12896,]  263  280  269 #> [12897,]  262  279  268 #> [12898,]  262  279  268 #> [12899,]  263  280  269 #> [12900,]  263  280  269 #> [12901,]  265  282  271 #> [12902,]  265  282  271 #> [12903,]  265  282  271 #> [12904,]  265  282  271 #> [12905,]  265  282  271 #> [12906,]  265  282  271 #> [12907,]  265  282  271 #> [12908,]  265  282  271 #> [12909,]  265  282  271 #> [12910,]  265  282  271 #> [12911,]  265  282  271 #> [12912,]  265  282  271 #> [12913,]  265  282  271 #> [12914,]  265  282  271 #> [12915,]  265  282  271 #> [12916,]  265  282  271 #> [12917,]  265  282  271 #> [12918,]  265  282  271 #> [12919,]  265  282  271 #> [12920,]  265  282  271 #> [12921,]  265  282  271 #> [12922,]  265  282  271 #> [12923,]  265  282  271 #> [12924,]  265  282  271 #> [12925,]  264  281  270 #> [12926,]  265  282  271 #> [12927,]  265  282  271 #> [12928,]  265  282  271 #> [12929,]  265  282  271 #> [12930,]  265  282  271 #> [12931,]  265  282  271 #> [12932,]  265  282  271 #> [12933,]  265  282  271 #> [12934,]  265  282  271 #> [12935,]  265  282  271 #> [12936,]  265  282  271 #> [12937,]  265  282  271 #> [12938,]  265  282  271 #> [12939,]  265  282  271 #> [12940,]  265  282  271 #> [12941,]  265  282  271 #> [12942,]  265  282  271 #> [12943,]  265  282  271 #> [12944,]  265  282  271 #> [12945,]  265  282  271 #> [12946,]  265  282  271 #> [12947,]  265  282  271 #> [12948,]  265  282  271 #> [12949,]  265  282  271 #> [12950,]  265  282  271 #> [12951,]  265  282  271 #> [12952,]  265  282  271 #> [12953,]  265  282  271 #> [12954,]  265  282  271 #> [12955,]  265  282  271 #> [12956,]  264  281  270 #> [12957,]  265  282  271 #> [12958,]  265  282  271 #> [12959,]  265  282  271 #> [12960,]  265  282  271 #> [12961,]  265  282  271 #> [12962,]  265  282  271 #> [12963,]  265  282  271 #> [12964,]  265  282  271 #> [12965,]  264  281  270 #> [12966,]  265  282  271 #> [12967,]  265  282  271 #> [12968,]  265  282  271 #> [12969,]  265  282  271 #> [12970,]  265  282  271 #> [12971,]  265  282  271 #> [12972,]  265  282  271 #> [12973,]  265  282  271 #> [12974,]  265  282  271 #> [12975,]  265  282  271 #> [12976,]  265  282  271 #> [12977,]  265  282  271 #> [12978,]  265  282  271 #> [12979,]  265  282  271 #> [12980,]  264  281  270 #> [12981,]  265  282  271 #> [12982,]  265  282  271 #> [12983,]  265  282  271 #> [12984,]  265  282  271 #> [12985,]  264  281  270 #> [12986,]  265  282  271 #> [12987,]  265  282  271 #> [12988,]  265  282  271 #> [12989,]  265  282  271 #> [12990,]  265  282  271 #> [12991,]  265  282  271 #> [12992,]  265  282  271 #> [12993,]  265  282  271 #> [12994,]  265  282  271 #> [12995,]  265  282  271 #> [12996,]  265  282  271 #> [12997,]  265  282  271 #> [12998,]  265  282  271 #> [12999,]  265  282  271 #> [13000,]  265  282  271 #> [13001,]  267  284  273 #> [13002,]  266  283  272 #> [13003,]  266  283  272 #> [13004,]  267  284  273 #> [13005,]  266  283  272 #> [13006,]  267  284  273 #> [13007,]  266  283  272 #> [13008,]  266  283  272 #> [13009,]  267  284  273 #> [13010,]  267  284  273 #> [13011,]  267  284  273 #> [13012,]  267  284  273 #> [13013,]  266  283  272 #> [13014,]  267  284  273 #> [13015,]  267  284  273 #> [13016,]  266  283  272 #> [13017,]  266  283  272 #> [13018,]  267  284  273 #> [13019,]  267  284  273 #> [13020,]  266  283  272 #> [13021,]  267  284  273 #> [13022,]  266  283  272 #> [13023,]  267  284  273 #> [13024,]  266  283  272 #> [13025,]  266  283  272 #> [13026,]  267  284  273 #> [13027,]  267  284  273 #> [13028,]  266  283  272 #> [13029,]  266  283  272 #> [13030,]  267  284  273 #> [13031,]  267  284  273 #> [13032,]  267  284  273 #> [13033,]  267  284  273 #> [13034,]  267  284  273 #> [13035,]  267  284  273 #> [13036,]  267  284  273 #> [13037,]  267  284  273 #> [13038,]  267  284  273 #> [13039,]  266  283  272 #> [13040,]  266  283  272 #> [13041,]  267  284  273 #> [13042,]  267  284  273 #> [13043,]  266  283  272 #> [13044,]  266  283  272 #> [13045,]  266  283  272 #> [13046,]  266  283  272 #> [13047,]  266  283  272 #> [13048,]  267  284  273 #> [13049,]  266  283  272 #> [13050,]  266  283  272 #> [13051,]  266  283  272 #> [13052,]  267  284  273 #> [13053,]  266  283  272 #> [13054,]  266  283  272 #> [13055,]  266  283  272 #> [13056,]  266  283  272 #> [13057,]  267  284  273 #> [13058,]  267  284  273 #> [13059,]  266  283  272 #> [13060,]  267  284  273 #> [13061,]  267  284  273 #> [13062,]  267  284  273 #> [13063,]  266  283  272 #> [13064,]  267  284  273 #> [13065,]  266  283  272 #> [13066,]  266  283  272 #> [13067,]  267  284  273 #> [13068,]  267  284  273 #> [13069,]  267  284  273 #> [13070,]  266  283  272 #> [13071,]  266  283  272 #> [13072,]  266  283  272 #> [13073,]  267  284  273 #> [13074,]  267  284  273 #> [13075,]  267  284  273 #> [13076,]  266  283  272 #> [13077,]  266  283  272 #> [13078,]  266  283  272 #> [13079,]  266  283  272 #> [13080,]  267  284  273 #> [13081,]  266  283  272 #> [13082,]  267  284  273 #> [13083,]  266  283  272 #> [13084,]  266  283  272 #> [13085,]  267  284  273 #> [13086,]  266  283  272 #> [13087,]  267  284  273 #> [13088,]  267  284  273 #> [13089,]  266  283  272 #> [13090,]  266  283  272 #> [13091,]  267  284  273 #> [13092,]  267  284  273 #> [13093,]  267  284  273 #> [13094,]  266  283  272 #> [13095,]  267  284  273 #> [13096,]  267  284  273 #> [13097,]  267  284  273 #> [13098,]  266  283  272 #> [13099,]  267  284  273 #> [13100,]  266  283  272 #> [13101,]  268  285  275 #> [13102,]  268  285  274 #> [13103,]  268  285  274 #> [13104,]  269  285  274 #> [13105,]  268  285  274 #> [13106,]  268  285  274 #> [13107,]  268  285  274 #> [13108,]  268  285  274 #> [13109,]  268  285  275 #> [13110,]  269  285  274 #> [13111,]  268  285  274 #> [13112,]  268  285  274 #> [13113,]  268  285  275 #> [13114,]  268  285  274 #> [13115,]  268  285  274 #> [13116,]  268  285  274 #> [13117,]  268  285  275 #> [13118,]  269  285  275 #> [13119,]  268  285  274 #> [13120,]  268  285  275 #> [13121,]  269  285  274 #> [13122,]  268  285  274 #> [13123,]  268  285  274 #> [13124,]  268  285  274 #> [13125,]  269  285  274 #> [13126,]  268  285  274 #> [13127,]  268  285  275 #> [13128,]  268  285  274 #> [13129,]  268  285  274 #> [13130,]  268  285  274 #> [13131,]  268  285  274 #> [13132,]  268  285  274 #> [13133,]  268  285  275 #> [13134,]  268  285  274 #> [13135,]  268  285  274 #> [13136,]  268  285  275 #> [13137,]  268  285  274 #> [13138,]  268  285  275 #> [13139,]  269  285  274 #> [13140,]  268  285  274 #> [13141,]  268  285  274 #> [13142,]  268  285  275 #> [13143,]  269  285  274 #> [13144,]  268  285  274 #> [13145,]  269  285  274 #> [13146,]  268  285  274 #> [13147,]  268  285  274 #> [13148,]  268  285  274 #> [13149,]  268  285  274 #> [13150,]  268  285  274 #> [13151,]  268  285  275 #> [13152,]  268  285  274 #> [13153,]  269  285  275 #> [13154,]  268  285  275 #> [13155,]  268  285  274 #> [13156,]  268  285  275 #> [13157,]  268  285  274 #> [13158,]  268  285  274 #> [13159,]  268  285  274 #> [13160,]  268  285  274 #> [13161,]  269  285  274 #> [13162,]  268  285  274 #> [13163,]  268  285  274 #> [13164,]  268  285  274 #> [13165,]  268  285  275 #> [13166,]  268  285  275 #> [13167,]  268  285  274 #> [13168,]  268  285  274 #> [13169,]  268  285  274 #> [13170,]  268  285  274 #> [13171,]  268  285  274 #> [13172,]  269  285  274 #> [13173,]  269  285  274 #> [13174,]  269  285  274 #> [13175,]  269  285  274 #> [13176,]  269  285  274 #> [13177,]  269  285  275 #> [13178,]  268  285  274 #> [13179,]  268  285  275 #> [13180,]  268  285  274 #> [13181,]  268  285  274 #> [13182,]  268  285  275 #> [13183,]  268  285  275 #> [13184,]  269  285  275 #> [13185,]  268  285  275 #> [13186,]  268  285  274 #> [13187,]  268  285  275 #> [13188,]  268  285  274 #> [13189,]  268  285  274 #> [13190,]  268  285  274 #> [13191,]  268  285  275 #> [13192,]  268  285  274 #> [13193,]  268  285  275 #> [13194,]  269  285  275 #> [13195,]  269  285  274 #> [13196,]  268  285  274 #> [13197,]  268  285  274 #> [13198,]  268  285  274 #> [13199,]  268  285  274 #> [13200,]  269  285  274 #> [13201,]  270  286  277 #> [13202,]  270  286  276 #> [13203,]  270  286  277 #> [13204,]  271  287  277 #> [13205,]  270  286  277 #> [13206,]  270  286  276 #> [13207,]  270  286  277 #> [13208,]  270  286  277 #> [13209,]  270  286  277 #> [13210,]  271  287  277 #> [13211,]  270  286  276 #> [13212,]  270  286  276 #> [13213,]  270  286  277 #> [13214,]  270  286  277 #> [13215,]  270  286  276 #> [13216,]  270  286  277 #> [13217,]  270  286  276 #> [13218,]  271  287  277 #> [13219,]  270  286  276 #> [13220,]  270  286  277 #> [13221,]  271  287  277 #> [13222,]  270  286  277 #> [13223,]  270  286  276 #> [13224,]  270  286  277 #> [13225,]  271  287  277 #> [13226,]  270  286  276 #> [13227,]  270  286  277 #> [13228,]  270  286  277 #> [13229,]  270  286  276 #> [13230,]  270  286  276 #> [13231,]  270  286  276 #> [13232,]  270  286  277 #> [13233,]  270  286  277 #> [13234,]  270  286  276 #> [13235,]  270  286  276 #> [13236,]  270  286  277 #> [13237,]  270  286  276 #> [13238,]  270  286  277 #> [13239,]  271  287  277 #> [13240,]  270  286  277 #> [13241,]  270  286  277 #> [13242,]  270  286  276 #> [13243,]  271  287  276 #> [13244,]  270  286  276 #> [13245,]  271  287  277 #> [13246,]  270  286  276 #> [13247,]  270  286  276 #> [13248,]  270  286  276 #> [13249,]  270  286  277 #> [13250,]  270  286  277 #> [13251,]  270  286  276 #> [13252,]  270  286  277 #> [13253,]  271  287  277 #> [13254,]  270  286  277 #> [13255,]  270  286  277 #> [13256,]  270  286  276 #> [13257,]  270  286  277 #> [13258,]  270  286  277 #> [13259,]  270  286  277 #> [13260,]  270  286  276 #> [13261,]  271  287  276 #> [13262,]  270  286  276 #> [13263,]  270  286  276 #> [13264,]  270  286  276 #> [13265,]  270  286  276 #> [13266,]  270  286  276 #> [13267,]  270  286  277 #> [13268,]  270  286  276 #> [13269,]  270  286  276 #> [13270,]  270  286  276 #> [13271,]  270  286  277 #> [13272,]  271  287  277 #> [13273,]  271  287  277 #> [13274,]  271  287  277 #> [13275,]  271  287  276 #> [13276,]  271  287  277 #> [13277,]  271  287  277 #> [13278,]  270  286  276 #> [13279,]  270  286  276 #> [13280,]  270  286  277 #> [13281,]  270  286  276 #> [13282,]  270  286  277 #> [13283,]  270  286  277 #> [13284,]  271  287  277 #> [13285,]  270  286  277 #> [13286,]  270  286  277 #> [13287,]  270  286  277 #> [13288,]  270  286  277 #> [13289,]  270  286  277 #> [13290,]  270  286  277 #> [13291,]  270  286  277 #> [13292,]  270  286  276 #> [13293,]  270  286  276 #> [13294,]  271  287  276 #> [13295,]  271  287  276 #> [13296,]  270  286  276 #> [13297,]  270  286  277 #> [13298,]  270  286  277 #> [13299,]  270  286  277 #> [13300,]  271  287  276 #> [13301,]  273  289  279 #> [13302,]  272  288  278 #> [13303,]  272  288  278 #> [13304,]  272  288  278 #> [13305,]  272  288  278 #> [13306,]  272  288  278 #> [13307,]  272  288  278 #> [13308,]  272  288  278 #> [13309,]  272  288  278 #> [13310,]  272  288  278 #> [13311,]  272  288  278 #> [13312,]  272  288  278 #> [13313,]  272  288  278 #> [13314,]  273  289  279 #> [13315,]  273  289  279 #> [13316,]  273  289  279 #> [13317,]  272  288  278 #> [13318,]  272  288  278 #> [13319,]  272  288  278 #> [13320,]  272  288  278 #> [13321,]  273  289  279 #> [13322,]  272  288  278 #> [13323,]  272  288  278 #> [13324,]  272  288  278 #> [13325,]  272  288  278 #> [13326,]  272  288  278 #> [13327,]  272  288  278 #> [13328,]  272  288  278 #> [13329,]  273  289  279 #> [13330,]  272  288  278 #> [13331,]  272  288  278 #> [13332,]  272  288  278 #> [13333,]  273  289  279 #> [13334,]  272  288  278 #> [13335,]  272  288  278 #> [13336,]  272  288  278 #> [13337,]  272  288  278 #> [13338,]  272  288  278 #> [13339,]  272  288  278 #> [13340,]  272  288  278 #> [13341,]  273  289  279 #> [13342,]  272  288  278 #> [13343,]  272  288  278 #> [13344,]  273  289  279 #> [13345,]  272  288  278 #> [13346,]  272  288  278 #> [13347,]  272  288  278 #> [13348,]  272  288  278 #> [13349,]  272  288  278 #> [13350,]  273  289  279 #> [13351,]  272  288  278 #> [13352,]  272  288  278 #> [13353,]  272  288  278 #> [13354,]  272  288  278 #> [13355,]  272  288  278 #> [13356,]  272  288  278 #> [13357,]  272  288  278 #> [13358,]  272  288  278 #> [13359,]  273  289  279 #> [13360,]  272  288  278 #> [13361,]  272  288  278 #> [13362,]  272  288  278 #> [13363,]  272  288  278 #> [13364,]  272  288  278 #> [13365,]  272  288  278 #> [13366,]  272  288  278 #> [13367,]  272  288  278 #> [13368,]  273  289  279 #> [13369,]  272  288  278 #> [13370,]  273  289  279 #> [13371,]  272  288  278 #> [13372,]  272  288  278 #> [13373,]  273  289  279 #> [13374,]  272  288  278 #> [13375,]  272  288  278 #> [13376,]  272  288  278 #> [13377,]  272  288  278 #> [13378,]  272  288  278 #> [13379,]  272  288  278 #> [13380,]  272  288  278 #> [13381,]  272  288  278 #> [13382,]  272  288  278 #> [13383,]  272  288  278 #> [13384,]  272  288  278 #> [13385,]  272  288  278 #> [13386,]  272  288  278 #> [13387,]  272  288  278 #> [13388,]  272  288  278 #> [13389,]  272  288  278 #> [13390,]  272  288  278 #> [13391,]  272  288  278 #> [13392,]  272  288  278 #> [13393,]  272  288  278 #> [13394,]  272  288  278 #> [13395,]  272  288  278 #> [13396,]  273  289  279 #> [13397,]  272  288  278 #> [13398,]  272  288  278 #> [13399,]  273  289  279 #> [13400,]  272  288  278 #> [13401,]  274  290  280 #> [13402,]  275  291  281 #> [13403,]  275  291  281 #> [13404,]  274  290  280 #> [13405,]  275  291  281 #> [13406,]  275  291  281 #> [13407,]  275  291  281 #> [13408,]  274  290  280 #> [13409,]  274  290  280 #> [13410,]  275  291  281 #> [13411,]  274  290  280 #> [13412,]  275  291  281 #> [13413,]  274  290  280 #> [13414,]  274  290  280 #> [13415,]  274  290  280 #> [13416,]  274  290  280 #> [13417,]  274  290  280 #> [13418,]  275  291  281 #> [13419,]  275  291  281 #> [13420,]  275  291  281 #> [13421,]  274  290  280 #> [13422,]  274  290  280 #> [13423,]  275  291  281 #> [13424,]  274  290  280 #> [13425,]  275  291  281 #> [13426,]  275  291  281 #> [13427,]  274  290  280 #> [13428,]  275  291  281 #> [13429,]  275  291  281 #> [13430,]  274  290  280 #> [13431,]  275  291  281 #> [13432,]  275  291  281 #> [13433,]  275  291  281 #> [13434,]  275  291  281 #> [13435,]  274  290  280 #> [13436,]  275  291  281 #> [13437,]  274  290  280 #> [13438,]  274  290  280 #> [13439,]  275  291  281 #> [13440,]  275  291  281 #> [13441,]  274  290  280 #> [13442,]  275  291  281 #> [13443,]  274  290  280 #> [13444,]  274  290  280 #> [13445,]  274  290  280 #> [13446,]  274  290  280 #> [13447,]  275  291  281 #> [13448,]  275  291  281 #> [13449,]  274  290  280 #> [13450,]  275  291  281 #> [13451,]  274  290  280 #> [13452,]  274  290  280 #> [13453,]  275  291  281 #> [13454,]  274  290  280 #> [13455,]  274  290  280 #> [13456,]  275  291  281 #> [13457,]  275  291  281 #> [13458,]  274  290  280 #> [13459,]  274  290  280 #> [13460,]  275  291  281 #> [13461,]  275  291  281 #> [13462,]  274  290  280 #> [13463,]  275  291  281 #> [13464,]  275  291  281 #> [13465,]  275  291  281 #> [13466,]  274  290  280 #> [13467,]  274  290  280 #> [13468,]  274  290  280 #> [13469,]  274  290  280 #> [13470,]  275  291  281 #> [13471,]  275  291  281 #> [13472,]  275  291  281 #> [13473,]  275  291  281 #> [13474,]  274  290  280 #> [13475,]  275  291  281 #> [13476,]  275  291  281 #> [13477,]  275  291  281 #> [13478,]  275  291  281 #> [13479,]  274  290  280 #> [13480,]  274  290  280 #> [13481,]  274  290  280 #> [13482,]  274  290  280 #> [13483,]  274  290  280 #> [13484,]  275  291  281 #> [13485,]  274  290  280 #> [13486,]  275  291  281 #> [13487,]  274  290  280 #> [13488,]  274  290  280 #> [13489,]  274  290  280 #> [13490,]  274  290  280 #> [13491,]  274  290  280 #> [13492,]  274  290  280 #> [13493,]  275  291  281 #> [13494,]  275  291  281 #> [13495,]  274  290  280 #> [13496,]  274  290  280 #> [13497,]  275  291  281 #> [13498,]  275  291  281 #> [13499,]  274  290  280 #> [13500,]  275  291  281 #> [13501,]  277  293  282 #> [13502,]  277  293  282 #> [13503,]  276  292  283 #> [13504,]  276  292  283 #> [13505,]  277  293  282 #> [13506,]  277  293  282 #> [13507,]  276  292  283 #> [13508,]  276  292  283 #> [13509,]  277  293  282 #> [13510,]  276  292  283 #> [13511,]  277  293  282 #> [13512,]  276  292  283 #> [13513,]  277  293  282 #> [13514,]  276  292  283 #> [13515,]  277  293  282 #> [13516,]  276  292  283 #> [13517,]  277  293  282 #> [13518,]  277  293  282 #> [13519,]  277  293  282 #> [13520,]  277  293  282 #> [13521,]  277  293  282 #> [13522,]  277  293  282 #> [13523,]  276  292  283 #> [13524,]  277  293  282 #> [13525,]  276  292  283 #> [13526,]  276  292  283 #> [13527,]  277  293  282 #> [13528,]  277  293  282 #> [13529,]  277  293  282 #> [13530,]  276  292  283 #> [13531,]  276  292  283 #> [13532,]  276  292  283 #> [13533,]  277  293  282 #> [13534,]  276  292  283 #> [13535,]  276  292  283 #> [13536,]  277  293  282 #> [13537,]  276  292  283 #> [13538,]  277  293  282 #> [13539,]  277  293  282 #> [13540,]  276  292  283 #> [13541,]  277  293  282 #> [13542,]  277  293  282 #> [13543,]  277  293  282 #> [13544,]  276  292  283 #> [13545,]  276  292  283 #> [13546,]  276  292  283 #> [13547,]  276  292  283 #> [13548,]  277  293  282 #> [13549,]  276  292  283 #> [13550,]  277  293  282 #> [13551,]  277  293  282 #> [13552,]  276  292  283 #> [13553,]  277  293  282 #> [13554,]  277  293  282 #> [13555,]  276  292  283 #> [13556,]  277  293  282 #> [13557,]  276  292  283 #> [13558,]  277  293  282 #> [13559,]  276  292  283 #> [13560,]  276  292  283 #> [13561,]  277  293  282 #> [13562,]  277  293  282 #> [13563,]  277  293  282 #> [13564,]  277  293  282 #> [13565,]  277  293  282 #> [13566,]  277  293  282 #> [13567,]  276  292  283 #> [13568,]  276  292  283 #> [13569,]  276  292  283 #> [13570,]  277  293  282 #> [13571,]  276  292  283 #> [13572,]  276  292  283 #> [13573,]  277  293  282 #> [13574,]  276  292  283 #> [13575,]  276  292  283 #> [13576,]  276  292  283 #> [13577,]  277  293  282 #> [13578,]  276  292  283 #> [13579,]  277  293  282 #> [13580,]  276  292  283 #> [13581,]  277  293  282 #> [13582,]  277  293  282 #> [13583,]  277  293  282 #> [13584,]  277  293  282 #> [13585,]  277  293  282 #> [13586,]  276  292  283 #> [13587,]  277  293  282 #> [13588,]  276  292  283 #> [13589,]  277  293  282 #> [13590,]  277  293  282 #> [13591,]  277  293  282 #> [13592,]  276  292  283 #> [13593,]  277  293  282 #> [13594,]  277  293  282 #> [13595,]  276  292  283 #> [13596,]  276  292  283 #> [13597,]  276  292  283 #> [13598,]  276  292  283 #> [13599,]  277  293  282 #> [13600,]  277  293  282 #> [13601,]  279  295  285 #> [13602,]  279  295  285 #> [13603,]  278  294  284 #> [13604,]  278  294  284 #> [13605,]  279  295  285 #> [13606,]  279  295  285 #> [13607,]  278  294  284 #> [13608,]  278  294  284 #> [13609,]  279  295  285 #> [13610,]  279  295  285 #> [13611,]  279  295  285 #> [13612,]  278  294  284 #> [13613,]  279  295  285 #> [13614,]  279  295  285 #> [13615,]  279  295  285 #> [13616,]  279  295  285 #> [13617,]  279  295  285 #> [13618,]  279  295  285 #> [13619,]  279  295  285 #> [13620,]  279  295  285 #> [13621,]  279  295  285 #> [13622,]  279  295  285 #> [13623,]  278  294  284 #> [13624,]  279  295  285 #> [13625,]  278  294  284 #> [13626,]  279  295  285 #> [13627,]  279  295  285 #> [13628,]  279  295  285 #> [13629,]  279  295  285 #> [13630,]  279  295  285 #> [13631,]  278  294  284 #> [13632,]  278  294  284 #> [13633,]  279  295  285 #> [13634,]  279  295  285 #> [13635,]  279  295  285 #> [13636,]  279  295  285 #> [13637,]  278  294  284 #> [13638,]  279  295  285 #> [13639,]  279  295  285 #> [13640,]  278  294  284 #> [13641,]  279  295  285 #> [13642,]  279  295  285 #> [13643,]  279  295  285 #> [13644,]  279  295  285 #> [13645,]  279  295  285 #> [13646,]  278  294  284 #> [13647,]  278  294  284 #> [13648,]  279  295  285 #> [13649,]  279  295  285 #> [13650,]  279  295  285 #> [13651,]  279  295  285 #> [13652,]  278  294  284 #> [13653,]  279  295  285 #> [13654,]  279  295  285 #> [13655,]  278  294  284 #> [13656,]  279  295  285 #> [13657,]  278  294  284 #> [13658,]  279  295  285 #> [13659,]  278  294  284 #> [13660,]  278  294  284 #> [13661,]  279  295  285 #> [13662,]  279  295  285 #> [13663,]  279  295  285 #> [13664,]  279  295  285 #> [13665,]  279  295  285 #> [13666,]  279  295  285 #> [13667,]  279  295  285 #> [13668,]  278  294  284 #> [13669,]  279  295  285 #> [13670,]  279  295  285 #> [13671,]  279  295  285 #> [13672,]  278  294  284 #> [13673,]  279  295  285 #> [13674,]  278  294  284 #> [13675,]  279  295  285 #> [13676,]  278  294  284 #> [13677,]  279  295  285 #> [13678,]  279  295  285 #> [13679,]  279  295  285 #> [13680,]  278  294  284 #> [13681,]  279  295  285 #> [13682,]  279  295  285 #> [13683,]  279  295  285 #> [13684,]  279  295  285 #> [13685,]  279  295  285 #> [13686,]  278  294  284 #> [13687,]  279  295  285 #> [13688,]  279  295  285 #> [13689,]  279  295  285 #> [13690,]  279  295  285 #> [13691,]  279  295  285 #> [13692,]  278  294  284 #> [13693,]  279  295  285 #> [13694,]  279  295  285 #> [13695,]  279  295  285 #> [13696,]  278  294  284 #> [13697,]  278  294  284 #> [13698,]  278  294  284 #> [13699,]  279  295  285 #> [13700,]  279  295  285 #> [13701,]  280  296  286 #> [13702,]  280  296  286 #> [13703,]  280  296  286 #> [13704,]  280  296  286 #> [13705,]  280  296  286 #> [13706,]  281  297  287 #> [13707,]  280  296  286 #> [13708,]  281  297  287 #> [13709,]  281  297  287 #> [13710,]  280  296  286 #> [13711,]  280  296  286 #> [13712,]  281  297  287 #> [13713,]  280  296  286 #> [13714,]  280  296  286 #> [13715,]  281  297  287 #> [13716,]  280  296  286 #> [13717,]  280  296  286 #> [13718,]  280  296  286 #> [13719,]  280  296  286 #> [13720,]  280  296  286 #> [13721,]  280  296  286 #> [13722,]  280  296  286 #> [13723,]  280  296  286 #> [13724,]  280  296  286 #> [13725,]  280  296  286 #> [13726,]  281  297  287 #> [13727,]  280  296  286 #> [13728,]  280  296  286 #> [13729,]  280  296  286 #> [13730,]  280  296  286 #> [13731,]  280  296  286 #> [13732,]  280  296  286 #> [13733,]  280  296  286 #> [13734,]  280  296  286 #> [13735,]  280  296  286 #> [13736,]  280  296  286 #> [13737,]  280  296  286 #> [13738,]  280  296  286 #> [13739,]  280  296  286 #> [13740,]  280  296  286 #> [13741,]  280  296  286 #> [13742,]  280  296  286 #> [13743,]  281  297  287 #> [13744,]  280  296  286 #> [13745,]  280  296  286 #> [13746,]  281  297  287 #> [13747,]  280  296  286 #> [13748,]  280  296  286 #> [13749,]  280  296  286 #> [13750,]  280  296  286 #> [13751,]  281  297  287 #> [13752,]  280  296  286 #> [13753,]  280  296  286 #> [13754,]  280  296  286 #> [13755,]  280  296  286 #> [13756,]  281  297  287 #> [13757,]  280  296  286 #> [13758,]  280  296  286 #> [13759,]  280  296  286 #> [13760,]  280  296  286 #> [13761,]  281  297  287 #> [13762,]  280  296  286 #> [13763,]  280  296  286 #> [13764,]  281  297  287 #> [13765,]  280  296  286 #> [13766,]  281  297  287 #> [13767,]  280  296  286 #> [13768,]  280  296  286 #> [13769,]  280  296  286 #> [13770,]  280  296  286 #> [13771,]  280  296  286 #> [13772,]  280  296  286 #> [13773,]  280  296  286 #> [13774,]  280  296  286 #> [13775,]  280  296  286 #> [13776,]  281  297  287 #> [13777,]  280  296  286 #> [13778,]  280  296  286 #> [13779,]  280  296  286 #> [13780,]  280  296  286 #> [13781,]  280  296  286 #> [13782,]  280  296  286 #> [13783,]  280  296  286 #> [13784,]  280  296  286 #> [13785,]  280  296  286 #> [13786,]  280  296  286 #> [13787,]  280  296  286 #> [13788,]  280  296  286 #> [13789,]  280  296  286 #> [13790,]  280  296  286 #> [13791,]  280  296  286 #> [13792,]  280  296  286 #> [13793,]  280  296  286 #> [13794,]  281  297  287 #> [13795,]  280  296  286 #> [13796,]  280  296  286 #> [13797,]  280  296  286 #> [13798,]  280  296  286 #> [13799,]  280  296  286 #> [13800,]  280  296  286 #> [13801,]  283  299  290 #> [13802,]  282  298  288 #> [13803,]  283  299  290 #> [13804,]  283  299  289 #> [13805,]  283  299  290 #> [13806,]  282  298  288 #> [13807,]  283  299  290 #> [13808,]  283  299  289 #> [13809,]  283  299  289 #> [13810,]  283  299  289 #> [13811,]  282  298  288 #> [13812,]  282  298  288 #> [13813,]  283  299  290 #> [13814,]  283  299  290 #> [13815,]  282  298  288 #> [13816,]  283  299  290 #> [13817,]  282  298  288 #> [13818,]  283  299  290 #> [13819,]  282  298  288 #> [13820,]  283  299  289 #> [13821,]  283  299  290 #> [13822,]  283  299  290 #> [13823,]  282  298  288 #> [13824,]  283  299  290 #> [13825,]  283  299  290 #> [13826,]  282  298  288 #> [13827,]  283  299  290 #> [13828,]  283  299  290 #> [13829,]  282  298  288 #> [13830,]  282  298  288 #> [13831,]  282  298  288 #> [13832,]  283  299  290 #> [13833,]  283  299  290 #> [13834,]  282  298  288 #> [13835,]  282  298  288 #> [13836,]  283  299  290 #> [13837,]  282  298  288 #> [13838,]  283  299  290 #> [13839,]  283  299  290 #> [13840,]  283  299  290 #> [13841,]  283  299  290 #> [13842,]  282  298  288 #> [13843,]  282  298  288 #> [13844,]  282  298  288 #> [13845,]  283  299  290 #> [13846,]  283  299  290 #> [13847,]  282  298  288 #> [13848,]  282  298  288 #> [13849,]  283  299  290 #> [13850,]  283  299  290 #> [13851,]  283  299  289 #> [13852,]  283  299  290 #> [13853,]  283  299  290 #> [13854,]  283  299  290 #> [13855,]  283  299  290 #> [13856,]  282  298  288 #> [13857,]  283  299  290 #> [13858,]  283  299  290 #> [13859,]  283  299  290 #> [13860,]  282  298  288 #> [13861,]  282  298  288 #> [13862,]  283  299  290 #> [13863,]  282  298  288 #> [13864,]  282  298  288 #> [13865,]  282  298  288 #> [13866,]  282  298  288 #> [13867,]  283  299  289 #> [13868,]  282  298  288 #> [13869,]  283  299  290 #> [13870,]  282  298  288 #> [13871,]  283  299  290 #> [13872,]  283  299  290 #> [13873,]  283  299  290 #> [13874,]  283  299  290 #> [13875,]  282  298  288 #> [13876,]  283  299  290 #> [13877,]  283  299  290 #> [13878,]  282  298  288 #> [13879,]  282  298  288 #> [13880,]  283  299  290 #> [13881,]  282  298  288 #> [13882,]  283  299  290 #> [13883,]  283  299  290 #> [13884,]  283  299  290 #> [13885,]  283  299  289 #> [13886,]  283  299  290 #> [13887,]  283  299  290 #> [13888,]  283  299  290 #> [13889,]  283  299  289 #> [13890,]  283  299  290 #> [13891,]  283  299  289 #> [13892,]  282  298  288 #> [13893,]  283  299  290 #> [13894,]  282  298  288 #> [13895,]  282  298  288 #> [13896,]  282  298  288 #> [13897,]  283  299  290 #> [13898,]  283  299  290 #> [13899,]  283  299  290 #> [13900,]  282  298  288 #> [13901,]  286  302  292 #> [13902,]  286  302  292 #> [13903,]  285  301  292 #> [13904,]  285  301  292 #> [13905,]  285  301  292 #> [13906,]  286  302  292 #> [13907,]  284  300  291 #> [13908,]  285  301  292 #> [13909,]  285  301  292 #> [13910,]  285  301  292 #> [13911,]  286  302  292 #> [13912,]  285  301  292 #> [13913,]  286  302  292 #> [13914,]  286  302  292 #> [13915,]  286  302  292 #> [13916,]  286  302  292 #> [13917,]  286  302  292 #> [13918,]  285  301  292 #> [13919,]  286  302  292 #> [13920,]  285  301  292 #> [13921,]  284  300  291 #> [13922,]  286  302  292 #> [13923,]  285  301  292 #> [13924,]  285  301  292 #> [13925,]  285  301  292 #> [13926,]  286  302  292 #> [13927,]  286  302  292 #> [13928,]  285  301  292 #> [13929,]  286  302  292 #> [13930,]  285  301  292 #> [13931,]  285  301  292 #> [13932,]  285  301  292 #> [13933,]  286  302  292 #> [13934,]  285  301  292 #> [13935,]  286  302  292 #> [13936,]  285  301  292 #> [13937,]  286  302  292 #> [13938,]  285  301  292 #> [13939,]  284  300  291 #> [13940,]  285  301  292 #> [13941,]  286  302  292 #> [13942,]  285  301  292 #> [13943,]  285  301  292 #> [13944,]  286  302  292 #> [13945,]  285  301  292 #> [13946,]  285  301  292 #> [13947,]  286  302  292 #> [13948,]  285  301  292 #> [13949,]  284  300  291 #> [13950,]  286  302  292 #> [13951,]  285  301  292 #> [13952,]  286  302  292 #> [13953,]  285  301  292 #> [13954,]  285  301  292 #> [13955,]  286  302  292 #> [13956,]  285  301  292 #> [13957,]  285  301  292 #> [13958,]  286  302  292 #> [13959,]  286  302  292 #> [13960,]  285  301  292 #> [13961,]  286  302  292 #> [13962,]  284  300  291 #> [13963,]  285  301  292 #> [13964,]  285  301  292 #> [13965,]  285  301  292 #> [13966,]  285  301  292 #> [13967,]  285  301  292 #> [13968,]  286  302  292 #> [13969,]  286  302  292 #> [13970,]  284  300  291 #> [13971,]  286  302  292 #> [13972,]  285  301  292 #> [13973,]  286  302  292 #> [13974,]  286  302  292 #> [13975,]  286  302  292 #> [13976,]  286  302  292 #> [13977,]  286  302  292 #> [13978,]  285  301  292 #> [13979,]  286  302  292 #> [13980,]  284  300  291 #> [13981,]  286  302  292 #> [13982,]  285  301  292 #> [13983,]  286  302  292 #> [13984,]  286  302  292 #> [13985,]  285  301  292 #> [13986,]  286  302  292 #> [13987,]  286  302  292 #> [13988,]  285  301  292 #> [13989,]  285  301  292 #> [13990,]  286  302  292 #> [13991,]  285  301  292 #> [13992,]  286  302  292 #> [13993,]  286  302  292 #> [13994,]  286  302  292 #> [13995,]  284  300  291 #> [13996,]  286  302  292 #> [13997,]  286  302  292 #> [13998,]  286  302  292 #> [13999,]  286  302  292 #> [14000,]  286  302  292 #> [14001,]  288  305  294 #> [14002,]  287  303  293 #> [14003,]  287  303  293 #> [14004,]  288  305  294 #> [14005,]  288  304  294 #> [14006,]  287  303  293 #> [14007,]  287  303  293 #> [14008,]  287  303  293 #> [14009,]  287  303  293 #> [14010,]  288  305  294 #> [14011,]  288  304  294 #> [14012,]  288  304  294 #> [14013,]  288  305  294 #> [14014,]  288  304  294 #> [14015,]  288  305  294 #> [14016,]  288  305  294 #> [14017,]  288  305  294 #> [14018,]  288  305  294 #> [14019,]  288  304  294 #> [14020,]  287  303  293 #> [14021,]  287  303  293 #> [14022,]  288  304  294 #> [14023,]  287  303  293 #> [14024,]  288  304  294 #> [14025,]  287  303  293 #> [14026,]  288  304  294 #> [14027,]  288  305  294 #> [14028,]  288  305  294 #> [14029,]  287  303  293 #> [14030,]  288  304  294 #> [14031,]  288  305  294 #> [14032,]  288  304  294 #> [14033,]  288  304  294 #> [14034,]  287  303  293 #> [14035,]  287  303  293 #> [14036,]  287  303  293 #> [14037,]  287  303  293 #> [14038,]  288  305  294 #> [14039,]  288  305  294 #> [14040,]  287  303  293 #> [14041,]  287  303  293 #> [14042,]  287  303  293 #> [14043,]  288  305  294 #> [14044,]  287  303  293 #> [14045,]  287  303  293 #> [14046,]  288  305  294 #> [14047,]  288  305  294 #> [14048,]  288  304  294 #> [14049,]  287  303  293 #> [14050,]  287  303  293 #> [14051,]  288  304  294 #> [14052,]  288  304  294 #> [14053,]  287  303  293 #> [14054,]  287  303  293 #> [14055,]  287  303  293 #> [14056,]  287  303  293 #> [14057,]  287  303  293 #> [14058,]  288  304  294 #> [14059,]  288  304  294 #> [14060,]  287  303  293 #> [14061,]  288  305  294 #> [14062,]  287  303  293 #> [14063,]  288  304  294 #> [14064,]  287  303  293 #> [14065,]  287  303  293 #> [14066,]  288  304  294 #> [14067,]  287  303  293 #> [14068,]  288  304  294 #> [14069,]  288  304  294 #> [14070,]  288  305  294 #> [14071,]  288  305  294 #> [14072,]  287  303  293 #> [14073,]  287  303  293 #> [14074,]  287  303  293 #> [14075,]  288  305  294 #> [14076,]  287  303  293 #> [14077,]  288  305  294 #> [14078,]  288  304  294 #> [14079,]  288  305  294 #> [14080,]  287  303  293 #> [14081,]  287  303  293 #> [14082,]  287  303  293 #> [14083,]  288  304  294 #> [14084,]  287  303  293 #> [14085,]  287  303  293 #> [14086,]  287  303  293 #> [14087,]  288  305  294 #> [14088,]  287  303  293 #> [14089,]  287  303  293 #> [14090,]  288  305  294 #> [14091,]  288  304  294 #> [14092,]  288  304  294 #> [14093,]  288  304  294 #> [14094,]  287  303  293 #> [14095,]  288  305  294 #> [14096,]  288  305  294 #> [14097,]  287  303  293 #> [14098,]  287  303  293 #> [14099,]  287  303  293 #> [14100,]  288  305  294 #> [14101,]  290  307  296 #> [14102,]  289  306  295 #> [14103,]  289  306  295 #> [14104,]  289  306  295 #> [14105,]  290  307  296 #> [14106,]  289  306  295 #> [14107,]  289  306  295 #> [14108,]  289  306  295 #> [14109,]  289  306  295 #> [14110,]  290  307  296 #> [14111,]  290  307  296 #> [14112,]  290  307  296 #> [14113,]  289  306  295 #> [14114,]  290  307  296 #> [14115,]  290  307  296 #> [14116,]  289  306  295 #> [14117,]  290  307  296 #> [14118,]  290  307  296 #> [14119,]  289  306  295 #> [14120,]  289  306  295 #> [14121,]  289  306  295 #> [14122,]  290  307  296 #> [14123,]  289  306  295 #> [14124,]  289  306  295 #> [14125,]  289  306  295 #> [14126,]  290  307  296 #> [14127,]  290  307  296 #> [14128,]  289  306  295 #> [14129,]  289  306  295 #> [14130,]  289  306  295 #> [14131,]  290  307  296 #> [14132,]  290  307  296 #> [14133,]  289  306  295 #> [14134,]  289  306  295 #> [14135,]  289  306  295 #> [14136,]  289  306  295 #> [14137,]  289  306  295 #> [14138,]  290  307  296 #> [14139,]  289  306  295 #> [14140,]  289  306  295 #> [14141,]  289  306  295 #> [14142,]  289  306  295 #> [14143,]  290  307  296 #> [14144,]  289  306  295 #> [14145,]  289  306  295 #> [14146,]  289  306  295 #> [14147,]  290  307  296 #> [14148,]  289  306  295 #> [14149,]  289  306  295 #> [14150,]  289  306  295 #> [14151,]  289  306  295 #> [14152,]  290  307  296 #> [14153,]  289  306  295 #> [14154,]  289  306  295 #> [14155,]  289  306  295 #> [14156,]  289  306  295 #> [14157,]  289  306  295 #> [14158,]  290  307  296 #> [14159,]  290  307  296 #> [14160,]  289  306  295 #> [14161,]  290  307  296 #> [14162,]  289  306  295 #> [14163,]  289  306  295 #> [14164,]  289  306  295 #> [14165,]  289  306  295 #> [14166,]  290  307  296 #> [14167,]  289  306  295 #> [14168,]  289  306  295 #> [14169,]  289  306  295 #> [14170,]  290  307  296 #> [14171,]  290  307  296 #> [14172,]  289  306  295 #> [14173,]  289  306  295 #> [14174,]  289  306  295 #> [14175,]  290  307  296 #> [14176,]  289  306  295 #> [14177,]  290  307  296 #> [14178,]  289  306  295 #> [14179,]  290  307  296 #> [14180,]  289  306  295 #> [14181,]  289  306  295 #> [14182,]  289  306  295 #> [14183,]  289  306  295 #> [14184,]  289  306  295 #> [14185,]  289  306  295 #> [14186,]  289  306  295 #> [14187,]  290  307  296 #> [14188,]  289  306  295 #> [14189,]  289  306  295 #> [14190,]  290  307  296 #> [14191,]  290  307  296 #> [14192,]  290  307  296 #> [14193,]  289  306  295 #> [14194,]  289  306  295 #> [14195,]  290  307  296 #> [14196,]  289  306  295 #> [14197,]  289  306  295 #> [14198,]  289  306  295 #> [14199,]  289  306  295 #> [14200,]  290  307  296 #> [14201,]  292  309  298 #> [14202,]  292  309  298 #> [14203,]  292  309  298 #> [14204,]  292  309  298 #> [14205,]  292  309  298 #> [14206,]  292  309  298 #> [14207,]  291  308  297 #> [14208,]  292  309  298 #> [14209,]  292  309  298 #> [14210,]  292  309  298 #> [14211,]  292  309  298 #> [14212,]  292  309  298 #> [14213,]  292  309  298 #> [14214,]  292  309  298 #> [14215,]  292  309  298 #> [14216,]  292  309  298 #> [14217,]  292  309  298 #> [14218,]  292  309  298 #> [14219,]  292  309  298 #> [14220,]  292  309  298 #> [14221,]  291  308  297 #> [14222,]  292  309  298 #> [14223,]  292  309  298 #> [14224,]  292  309  298 #> [14225,]  292  309  298 #> [14226,]  292  309  298 #> [14227,]  292  309  298 #> [14228,]  292  309  298 #> [14229,]  292  309  298 #> [14230,]  291  308  297 #> [14231,]  292  309  298 #> [14232,]  292  309  298 #> [14233,]  292  309  298 #> [14234,]  292  309  298 #> [14235,]  292  309  298 #> [14236,]  292  309  298 #> [14237,]  292  309  298 #> [14238,]  292  309  298 #> [14239,]  291  308  297 #> [14240,]  292  309  298 #> [14241,]  292  309  298 #> [14242,]  292  309  298 #> [14243,]  292  309  298 #> [14244,]  292  309  298 #> [14245,]  292  309  298 #> [14246,]  292  309  298 #> [14247,]  292  309  298 #> [14248,]  292  309  298 #> [14249,]  291  308  297 #> [14250,]  292  309  298 #> [14251,]  292  309  298 #> [14252,]  292  309  298 #> [14253,]  292  309  298 #> [14254,]  292  309  298 #> [14255,]  292  309  298 #> [14256,]  292  309  298 #> [14257,]  292  309  298 #> [14258,]  292  309  298 #> [14259,]  292  309  298 #> [14260,]  292  309  298 #> [14261,]  292  309  298 #> [14262,]  291  308  297 #> [14263,]  292  309  298 #> [14264,]  292  309  298 #> [14265,]  292  309  298 #> [14266,]  292  309  298 #> [14267,]  292  309  298 #> [14268,]  292  309  298 #> [14269,]  292  309  298 #> [14270,]  291  308  297 #> [14271,]  292  309  298 #> [14272,]  292  309  298 #> [14273,]  292  309  298 #> [14274,]  292  309  298 #> [14275,]  292  309  298 #> [14276,]  292  309  298 #> [14277,]  292  309  298 #> [14278,]  292  309  298 #> [14279,]  292  309  298 #> [14280,]  291  308  297 #> [14281,]  292  309  298 #> [14282,]  292  309  298 #> [14283,]  292  309  298 #> [14284,]  292  309  298 #> [14285,]  292  309  298 #> [14286,]  292  309  298 #> [14287,]  292  309  298 #> [14288,]  292  309  298 #> [14289,]  292  309  298 #> [14290,]  292  309  298 #> [14291,]  292  309  298 #> [14292,]  292  309  298 #> [14293,]  292  309  298 #> [14294,]  292  309  298 #> [14295,]  291  308  297 #> [14296,]  292  309  298 #> [14297,]  292  309  298 #> [14298,]  292  309  298 #> [14299,]  292  309  298 #> [14300,]  292  309  298 #> [14301,]  294  311  300 #> [14302,]  294  311  300 #> [14303,]  293  310  299 #> [14304,]  294  311  300 #> [14305,]  294  311  300 #> [14306,]  294  311  300 #> [14307,]  293  310  299 #> [14308,]  294  311  300 #> [14309,]  294  311  300 #> [14310,]  294  311  300 #> [14311,]  294  311  300 #> [14312,]  293  310  299 #> [14313,]  294  311  300 #> [14314,]  294  311  300 #> [14315,]  294  311  300 #> [14316,]  294  311  300 #> [14317,]  294  311  300 #> [14318,]  294  311  300 #> [14319,]  294  311  300 #> [14320,]  294  311  300 #> [14321,]  294  311  300 #> [14322,]  294  311  300 #> [14323,]  294  311  300 #> [14324,]  294  311  300 #> [14325,]  294  311  300 #> [14326,]  294  311  300 #> [14327,]  294  311  300 #> [14328,]  294  311  300 #> [14329,]  294  311  300 #> [14330,]  294  311  300 #> [14331,]  293  310  299 #> [14332,]  294  311  300 #> [14333,]  294  311  300 #> [14334,]  294  311  300 #> [14335,]  294  311  300 #> [14336,]  294  311  300 #> [14337,]  294  311  300 #> [14338,]  294  311  300 #> [14339,]  294  311  300 #> [14340,]  294  311  300 #> [14341,]  294  311  300 #> [14342,]  294  311  300 #> [14343,]  294  311  300 #> [14344,]  294  311  300 #> [14345,]  294  311  300 #> [14346,]  294  311  300 #> [14347,]  294  311  300 #> [14348,]  294  311  300 #> [14349,]  294  311  300 #> [14350,]  294  311  300 #> [14351,]  294  311  300 #> [14352,]  293  310  299 #> [14353,]  294  311  300 #> [14354,]  294  311  300 #> [14355,]  294  311  300 #> [14356,]  294  311  300 #> [14357,]  294  311  300 #> [14358,]  294  311  300 #> [14359,]  293  310  299 #> [14360,]  293  310  299 #> [14361,]  294  311  300 #> [14362,]  294  311  300 #> [14363,]  294  311  300 #> [14364,]  294  311  300 #> [14365,]  294  311  300 #> [14366,]  294  311  300 #> [14367,]  294  311  300 #> [14368,]  294  311  300 #> [14369,]  294  311  300 #> [14370,]  294  311  300 #> [14371,]  294  311  300 #> [14372,]  294  311  300 #> [14373,]  294  311  300 #> [14374,]  294  311  300 #> [14375,]  294  311  300 #> [14376,]  294  311  300 #> [14377,]  294  311  300 #> [14378,]  294  311  300 #> [14379,]  294  311  300 #> [14380,]  294  311  300 #> [14381,]  294  311  300 #> [14382,]  294  311  300 #> [14383,]  294  311  300 #> [14384,]  294  311  300 #> [14385,]  294  311  300 #> [14386,]  294  311  300 #> [14387,]  294  311  300 #> [14388,]  294  311  300 #> [14389,]  294  311  300 #> [14390,]  294  311  300 #> [14391,]  294  311  300 #> [14392,]  294  311  300 #> [14393,]  294  311  300 #> [14394,]  294  311  300 #> [14395,]  294  311  300 #> [14396,]  294  311  300 #> [14397,]  293  310  299 #> [14398,]  294  311  300 #> [14399,]  294  311  300 #> [14400,]  294  311  300 #> [14401,]  295  312  301 #> [14402,]  295  313  302 #> [14403,]  295  313  302 #> [14404,]  295  312  301 #> [14405,]  295  313  302 #> [14406,]  295  313  302 #> [14407,]  295  313  302 #> [14408,]  295  312  301 #> [14409,]  295  312  301 #> [14410,]  295  313  302 #> [14411,]  295  312  301 #> [14412,]  295  313  302 #> [14413,]  295  312  301 #> [14414,]  295  313  302 #> [14415,]  295  313  302 #> [14416,]  295  313  302 #> [14417,]  295  312  301 #> [14418,]  295  313  302 #> [14419,]  295  313  302 #> [14420,]  295  313  302 #> [14421,]  295  312  301 #> [14422,]  295  312  301 #> [14423,]  295  313  302 #> [14424,]  295  313  302 #> [14425,]  295  313  302 #> [14426,]  295  313  302 #> [14427,]  295  312  301 #> [14428,]  295  313  302 #> [14429,]  295  313  302 #> [14430,]  295  312  301 #> [14431,]  295  313  302 #> [14432,]  295  313  302 #> [14433,]  295  313  302 #> [14434,]  295  313  302 #> [14435,]  295  312  301 #> [14436,]  295  313  302 #> [14437,]  295  313  302 #> [14438,]  295  313  302 #> [14439,]  295  313  302 #> [14440,]  295  313  302 #> [14441,]  295  313  302 #> [14442,]  295  313  302 #> [14443,]  295  312  301 #> [14444,]  295  312  301 #> [14445,]  295  313  302 #> [14446,]  295  312  301 #> [14447,]  295  313  302 #> [14448,]  295  313  302 #> [14449,]  295  312  301 #> [14450,]  295  313  302 #> [14451,]  295  313  302 #> [14452,]  295  312  301 #> [14453,]  295  313  302 #> [14454,]  295  312  301 #> [14455,]  295  312  301 #> [14456,]  295  313  302 #> [14457,]  295  313  302 #> [14458,]  295  312  301 #> [14459,]  295  313  302 #> [14460,]  295  313  302 #> [14461,]  295  313  302 #> [14462,]  295  313  302 #> [14463,]  295  313  302 #> [14464,]  295  313  302 #> [14465,]  295  313  302 #> [14466,]  295  312  301 #> [14467,]  295  313  302 #> [14468,]  295  313  302 #> [14469,]  295  312  301 #> [14470,]  295  313  302 #> [14471,]  295  313  302 #> [14472,]  295  313  302 #> [14473,]  295  313  302 #> [14474,]  295  313  302 #> [14475,]  295  313  302 #> [14476,]  295  313  302 #> [14477,]  295  313  302 #> [14478,]  295  313  302 #> [14479,]  295  312  301 #> [14480,]  295  312  301 #> [14481,]  295  312  301 #> [14482,]  295  312  301 #> [14483,]  295  312  301 #> [14484,]  295  313  302 #> [14485,]  295  313  302 #> [14486,]  295  313  302 #> [14487,]  295  312  301 #> [14488,]  295  312  301 #> [14489,]  295  312  301 #> [14490,]  295  312  301 #> [14491,]  295  312  301 #> [14492,]  295  312  301 #> [14493,]  295  313  302 #> [14494,]  295  313  302 #> [14495,]  295  312  301 #> [14496,]  295  312  301 #> [14497,]  295  313  302 #> [14498,]  295  313  302 #> [14499,]  295  312  301 #> [14500,]  295  313  302 #> [14501,]  297  315  304 #> [14502,]  297  315  304 #> [14503,]  296  314  303 #> [14504,]  297  315  304 #> [14505,]  297  315  304 #> [14506,]  296  314  303 #> [14507,]  296  314  303 #> [14508,]  297  315  304 #> [14509,]  297  315  304 #> [14510,]  297  315  304 #> [14511,]  297  315  304 #> [14512,]  297  315  304 #> [14513,]  297  315  304 #> [14514,]  297  315  304 #> [14515,]  297  315  304 #> [14516,]  297  315  304 #> [14517,]  297  315  304 #> [14518,]  297  315  304 #> [14519,]  297  315  304 #> [14520,]  296  314  303 #> [14521,]  296  314  303 #> [14522,]  297  315  304 #> [14523,]  296  314  303 #> [14524,]  297  315  304 #> [14525,]  296  314  303 #> [14526,]  297  315  304 #> [14527,]  297  315  304 #> [14528,]  297  315  304 #> [14529,]  297  315  304 #> [14530,]  297  315  304 #> [14531,]  297  315  304 #> [14532,]  297  315  304 #> [14533,]  297  315  304 #> [14534,]  296  314  303 #> [14535,]  296  314  303 #> [14536,]  297  315  304 #> [14537,]  296  314  303 #> [14538,]  297  315  304 #> [14539,]  297  315  304 #> [14540,]  297  315  304 #> [14541,]  297  315  304 #> [14542,]  296  314  303 #> [14543,]  297  315  304 #> [14544,]  296  314  303 #> [14545,]  297  315  304 #> [14546,]  297  315  304 #> [14547,]  297  315  304 #> [14548,]  297  315  304 #> [14549,]  297  315  304 #> [14550,]  297  315  304 #> [14551,]  297  315  304 #> [14552,]  297  315  304 #> [14553,]  296  314  303 #> [14554,]  297  315  304 #> [14555,]  296  314  303 #> [14556,]  296  314  303 #> [14557,]  296  314  303 #> [14558,]  297  315  304 #> [14559,]  297  315  304 #> [14560,]  297  315  304 #> [14561,]  297  315  304 #> [14562,]  297  315  304 #> [14563,]  297  315  304 #> [14564,]  296  314  303 #> [14565,]  296  314  303 #> [14566,]  297  315  304 #> [14567,]  297  315  304 #> [14568,]  297  315  304 #> [14569,]  297  315  304 #> [14570,]  297  315  304 #> [14571,]  297  315  304 #> [14572,]  297  315  304 #> [14573,]  296  314  303 #> [14574,]  296  314  303 #> [14575,]  297  315  304 #> [14576,]  297  315  304 #> [14577,]  297  315  304 #> [14578,]  297  315  304 #> [14579,]  297  315  304 #> [14580,]  296  314  303 #> [14581,]  297  315  304 #> [14582,]  296  314  303 #> [14583,]  297  315  304 #> [14584,]  296  314  303 #> [14585,]  296  314  303 #> [14586,]  296  314  303 #> [14587,]  297  315  304 #> [14588,]  296  314  303 #> [14589,]  296  314  303 #> [14590,]  297  315  304 #> [14591,]  297  315  304 #> [14592,]  297  315  304 #> [14593,]  297  315  304 #> [14594,]  296  314  303 #> [14595,]  297  315  304 #> [14596,]  297  315  304 #> [14597,]  297  315  304 #> [14598,]  296  314  303 #> [14599,]  296  314  303 #> [14600,]  297  315  304 #> [14601,]  298  318  306 #> [14602,]  298  317  306 #> [14603,]  298  317  305 #> [14604,]  298  317  305 #> [14605,]  298  317  306 #> [14606,]  298  317  306 #> [14607,]  298  317  305 #> [14608,]  298  317  305 #> [14609,]  298  318  306 #> [14610,]  298  317  306 #> [14611,]  298  318  306 #> [14612,]  298  317  305 #> [14613,]  298  318  306 #> [14614,]  298  317  305 #> [14615,]  298  317  306 #> [14616,]  298  317  306 #> [14617,]  298  318  306 #> [14618,]  298  318  306 #> [14619,]  299  316  306 #> [14620,]  299  316  306 #> [14621,]  298  317  306 #> [14622,]  299  316  306 #> [14623,]  298  317  305 #> [14624,]  298  317  306 #> [14625,]  298  317  305 #> [14626,]  298  317  306 #> [14627,]  299  316  306 #> [14628,]  298  318  306 #> [14629,]  299  316  306 #> [14630,]  298  317  306 #> [14631,]  298  317  305 #> [14632,]  298  317  305 #> [14633,]  298  318  306 #> [14634,]  298  317  306 #> [14635,]  298  317  306 #> [14636,]  299  316  306 #> [14637,]  298  317  305 #> [14638,]  298  318  306 #> [14639,]  298  318  306 #> [14640,]  298  317  305 #> [14641,]  298  317  306 #> [14642,]  298  318  306 #> [14643,]  298  317  306 #> [14644,]  298  317  305 #> [14645,]  298  317  306 #> [14646,]  298  317  305 #> [14647,]  298  317  305 #> [14648,]  298  317  306 #> [14649,]  298  317  306 #> [14650,]  298  317  306 #> [14651,]  298  318  306 #> [14652,]  298  317  305 #> [14653,]  298  318  306 #> [14654,]  298  318  306 #> [14655,]  298  317  305 #> [14656,]  298  318  306 #> [14657,]  298  317  305 #> [14658,]  299  316  306 #> [14659,]  298  317  305 #> [14660,]  298  317  305 #> [14661,]  298  317  306 #> [14662,]  298  318  306 #> [14663,]  298  317  306 #> [14664,]  299  316  306 #> [14665,]  298  318  306 #> [14666,]  299  316  306 #> [14667,]  298  317  305 #> [14668,]  298  317  305 #> [14669,]  298  317  306 #> [14670,]  298  317  306 #> [14671,]  298  317  306 #> [14672,]  298  317  305 #> [14673,]  298  317  306 #> [14674,]  298  317  305 #> [14675,]  298  317  305 #> [14676,]  298  317  305 #> [14677,]  299  316  306 #> [14678,]  298  317  305 #> [14679,]  298  318  306 #> [14680,]  298  317  305 #> [14681,]  299  316  306 #> [14682,]  298  318  306 #> [14683,]  298  318  306 #> [14684,]  298  318  306 #> [14685,]  298  318  306 #> [14686,]  298  317  305 #> [14687,]  299  316  306 #> [14688,]  298  317  306 #> [14689,]  298  318  306 #> [14690,]  298  317  306 #> [14691,]  298  318  306 #> [14692,]  298  317  305 #> [14693,]  298  318  306 #> [14694,]  298  318  306 #> [14695,]  298  317  306 #> [14696,]  298  317  305 #> [14697,]  298  317  305 #> [14698,]  298  317  305 #> [14699,]  298  317  306 #> [14700,]  299  316  306 #> [14701,]  300  321  308 #> [14702,]  300  319  307 #> [14703,]  300  319  307 #> [14704,]  300  319  307 #> [14705,]  300  320  308 #> [14706,]  300  319  307 #> [14707,]  300  319  307 #> [14708,]  300  319  307 #> [14709,]  300  319  307 #> [14710,]  300  319  307 #> [14711,]  300  319  307 #> [14712,]  300  319  307 #> [14713,]  300  319  307 #> [14714,]  300  320  308 #> [14715,]  300  321  308 #> [14716,]  300  319  307 #> [14717,]  300  319  307 #> [14718,]  300  321  308 #> [14719,]  300  319  307 #> [14720,]  300  319  307 #> [14721,]  300  319  307 #> [14722,]  300  319  307 #> [14723,]  300  319  307 #> [14724,]  300  319  307 #> [14725,]  300  319  307 #> [14726,]  300  321  308 #> [14727,]  300  321  308 #> [14728,]  300  319  307 #> [14729,]  300  319  307 #> [14730,]  300  319  307 #> [14731,]  300  319  307 #> [14732,]  300  320  308 #> [14733,]  300  319  307 #> [14734,]  300  319  307 #> [14735,]  300  319  307 #> [14736,]  300  319  307 #> [14737,]  300  319  307 #> [14738,]  300  319  307 #> [14739,]  300  319  307 #> [14740,]  300  319  307 #> [14741,]  300  319  307 #> [14742,]  300  319  307 #> [14743,]  300  321  308 #> [14744,]  300  319  307 #> [14745,]  300  319  307 #> [14746,]  300  319  307 #> [14747,]  300  319  307 #> [14748,]  300  319  307 #> [14749,]  300  319  307 #> [14750,]  300  319  307 #> [14751,]  300  319  307 #> [14752,]  300  319  307 #> [14753,]  300  319  307 #> [14754,]  300  319  307 #> [14755,]  300  319  307 #> [14756,]  300  319  307 #> [14757,]  300  319  307 #> [14758,]  300  321  308 #> [14759,]  300  321  308 #> [14760,]  300  319  307 #> [14761,]  300  321  308 #> [14762,]  300  319  307 #> [14763,]  300  319  307 #> [14764,]  300  319  307 #> [14765,]  300  319  307 #> [14766,]  300  321  308 #> [14767,]  300  319  307 #> [14768,]  300  319  307 #> [14769,]  300  319  307 #> [14770,]  300  320  308 #> [14771,]  300  321  308 #> [14772,]  300  319  307 #> [14773,]  300  319  307 #> [14774,]  300  319  307 #> [14775,]  300  321  308 #> [14776,]  300  319  307 #> [14777,]  300  319  307 #> [14778,]  300  319  307 #> [14779,]  300  320  308 #> [14780,]  300  319  307 #> [14781,]  300  319  307 #> [14782,]  300  319  307 #> [14783,]  300  319  307 #> [14784,]  300  319  307 #> [14785,]  300  319  307 #> [14786,]  300  319  307 #> [14787,]  300  321  308 #> [14788,]  300  319  307 #> [14789,]  300  319  307 #> [14790,]  300  319  307 #> [14791,]  300  320  308 #> [14792,]  300  319  307 #> [14793,]  300  319  307 #> [14794,]  300  319  307 #> [14795,]  300  321  308 #> [14796,]  300  319  307 #> [14797,]  300  319  307 #> [14798,]  300  319  307 #> [14799,]  300  319  307 #> [14800,]  300  321  308 #> [14801,]  302  323  309 #> [14802,]  301  322  310 #> [14803,]  302  323  309 #> [14804,]  302  323  309 #> [14805,]  302  323  309 #> [14806,]  301  322  310 #> [14807,]  302  323  309 #> [14808,]  302  323  309 #> [14809,]  302  323  309 #> [14810,]  302  323  309 #> [14811,]  301  322  310 #> [14812,]  301  322  310 #> [14813,]  302  323  309 #> [14814,]  302  323  309 #> [14815,]  301  322  310 #> [14816,]  302  323  309 #> [14817,]  301  322  310 #> [14818,]  302  323  309 #> [14819,]  302  323  309 #> [14820,]  302  323  309 #> [14821,]  302  323  309 #> [14822,]  302  323  309 #> [14823,]  301  322  310 #> [14824,]  302  323  309 #> [14825,]  302  323  309 #> [14826,]  302  323  309 #> [14827,]  302  323  309 #> [14828,]  302  323  309 #> [14829,]  301  322  310 #> [14830,]  301  322  310 #> [14831,]  301  322  310 #> [14832,]  302  323  309 #> [14833,]  302  323  309 #> [14834,]  301  322  310 #> [14835,]  301  322  310 #> [14836,]  302  323  309 #> [14837,]  301  322  310 #> [14838,]  302  323  309 #> [14839,]  302  323  309 #> [14840,]  302  323  309 #> [14841,]  302  323  309 #> [14842,]  301  322  310 #> [14843,]  301  322  310 #> [14844,]  301  322  310 #> [14845,]  302  323  309 #> [14846,]  302  323  309 #> [14847,]  301  322  310 #> [14848,]  301  322  310 #> [14849,]  302  323  309 #> [14850,]  302  323  309 #> [14851,]  302  323  309 #> [14852,]  302  323  309 #> [14853,]  302  323  309 #> [14854,]  302  323  309 #> [14855,]  302  323  309 #> [14856,]  301  322  310 #> [14857,]  302  323  309 #> [14858,]  302  323  309 #> [14859,]  302  323  309 #> [14860,]  301  322  310 #> [14861,]  301  322  310 #> [14862,]  302  323  309 #> [14863,]  301  322  310 #> [14864,]  301  322  310 #> [14865,]  301  322  310 #> [14866,]  301  322  310 #> [14867,]  302  323  309 #> [14868,]  302  323  309 #> [14869,]  302  323  309 #> [14870,]  301  322  310 #> [14871,]  302  323  309 #> [14872,]  302  323  309 #> [14873,]  302  323  309 #> [14874,]  302  323  309 #> [14875,]  301  322  310 #> [14876,]  302  323  309 #> [14877,]  302  323  309 #> [14878,]  301  322  310 #> [14879,]  301  322  310 #> [14880,]  302  323  309 #> [14881,]  301  322  310 #> [14882,]  302  323  309 #> [14883,]  302  323  309 #> [14884,]  302  323  309 #> [14885,]  302  323  309 #> [14886,]  302  323  309 #> [14887,]  302  323  309 #> [14888,]  302  323  309 #> [14889,]  302  323  309 #> [14890,]  302  323  309 #> [14891,]  302  323  309 #> [14892,]  301  322  310 #> [14893,]  302  323  309 #> [14894,]  301  322  310 #> [14895,]  301  322  310 #> [14896,]  302  323  309 #> [14897,]  302  323  309 #> [14898,]  302  323  309 #> [14899,]  302  323  309 #> [14900,]  301  322  310 #> [14901,]  304  325  311 #> [14902,]  304  326  311 #> [14903,]  303  324  312 #> [14904,]  304  325  311 #> [14905,]  304  325  311 #> [14906,]  303  324  312 #> [14907,]  303  324  312 #> [14908,]  304  325  311 #> [14909,]  304  326  311 #> [14910,]  304  326  311 #> [14911,]  304  325  311 #> [14912,]  304  326  311 #> [14913,]  304  326  311 #> [14914,]  304  325  311 #> [14915,]  304  325  311 #> [14916,]  304  325  311 #> [14917,]  304  326  311 #> [14918,]  304  325  311 #> [14919,]  304  325  311 #> [14920,]  303  324  312 #> [14921,]  303  324  312 #> [14922,]  304  325  311 #> [14923,]  303  324  312 #> [14924,]  304  326  311 #> [14925,]  303  324  312 #> [14926,]  304  325  311 #> [14927,]  304  325  311 #> [14928,]  304  325  311 #> [14929,]  303  324  312 #> [14930,]  304  325  311 #> [14931,]  304  326  311 #> [14932,]  304  326  311 #> [14933,]  304  326  311 #> [14934,]  303  324  312 #> [14935,]  303  324  312 #> [14936,]  303  324  312 #> [14937,]  303  324  312 #> [14938,]  304  325  311 #> [14939,]  304  325  311 #> [14940,]  304  326  311 #> [14941,]  303  324  312 #> [14942,]  303  324  312 #> [14943,]  304  325  311 #> [14944,]  303  324  312 #> [14945,]  303  324  312 #> [14946,]  304  325  311 #> [14947,]  304  325  311 #> [14948,]  304  325  311 #> [14949,]  304  325  311 #> [14950,]  303  324  312 #> [14951,]  304  325  311 #> [14952,]  304  325  311 #> [14953,]  303  324  312 #> [14954,]  303  324  312 #> [14955,]  303  324  312 #> [14956,]  303  324  312 #> [14957,]  303  324  312 #> [14958,]  304  325  311 #> [14959,]  304  325  311 #> [14960,]  303  324  312 #> [14961,]  304  326  311 #> [14962,]  304  325  311 #> [14963,]  304  326  311 #> [14964,]  303  324  312 #> [14965,]  303  324  312 #> [14966,]  304  325  311 #> [14967,]  304  325  311 #> [14968,]  304  325  311 #> [14969,]  304  325  311 #> [14970,]  304  326  311 #> [14971,]  304  325  311 #> [14972,]  304  325  311 #> [14973,]  303  324  312 #> [14974,]  303  324  312 #> [14975,]  304  326  311 #> [14976,]  303  324  312 #> [14977,]  304  325  311 #> [14978,]  304  325  311 #> [14979,]  304  325  311 #> [14980,]  303  324  312 #> [14981,]  303  324  312 #> [14982,]  303  324  312 #> [14983,]  304  326  311 #> [14984,]  303  324  312 #> [14985,]  303  324  312 #> [14986,]  303  324  312 #> [14987,]  304  325  311 #> [14988,]  303  324  312 #> [14989,]  303  324  312 #> [14990,]  304  325  311 #> [14991,]  304  325  311 #> [14992,]  304  325  311 #> [14993,]  304  325  311 #> [14994,]  303  324  312 #> [14995,]  304  325  311 #> [14996,]  304  325  311 #> [14997,]  303  324  312 #> [14998,]  303  324  312 #> [14999,]  303  324  312 #> [15000,]  304  325  311 #> [15001,]  305  327  313 #> [15002,]  305  327  313 #> [15003,]  305  327  313 #> [15004,]  306  328  314 #> [15005,]  305  327  313 #> [15006,]  305  327  313 #> [15007,]  305  327  313 #> [15008,]  305  327  313 #> [15009,]  306  328  314 #> [15010,]  305  327  313 #> [15011,]  306  328  314 #> [15012,]  306  328  314 #> [15013,]  305  327  313 #> [15014,]  306  328  314 #> [15015,]  306  328  314 #> [15016,]  305  327  313 #> [15017,]  305  327  313 #> [15018,]  306  328  314 #> [15019,]  306  328  314 #> [15020,]  305  327  313 #> [15021,]  306  328  314 #> [15022,]  305  327  313 #> [15023,]  305  327  313 #> [15024,]  305  327  313 #> [15025,]  305  327  313 #> [15026,]  306  328  314 #> [15027,]  306  328  314 #> [15028,]  305  327  313 #> [15029,]  305  327  313 #> [15030,]  306  328  314 #> [15031,]  306  328  314 #> [15032,]  305  327  313 #> [15033,]  306  328  314 #> [15034,]  305  327  313 #> [15035,]  305  327  313 #> [15036,]  306  328  314 #> [15037,]  305  327  313 #> [15038,]  306  328  314 #> [15039,]  305  327  313 #> [15040,]  305  327  313 #> [15041,]  306  328  314 #> [15042,]  306  328  314 #> [15043,]  305  327  313 #> [15044,]  305  327  313 #> [15045,]  305  327  313 #> [15046,]  305  327  313 #> [15047,]  305  327  313 #> [15048,]  306  328  314 #> [15049,]  305  327  313 #> [15050,]  305  327  313 #> [15051,]  305  327  313 #> [15052,]  305  327  313 #> [15053,]  305  327  313 #> [15054,]  305  327  313 #> [15055,]  305  327  313 #> [15056,]  305  327  313 #> [15057,]  305  327  313 #> [15058,]  306  328  314 #> [15059,]  305  327  313 #> [15060,]  305  327  313 #> [15061,]  306  328  314 #> [15062,]  305  327  313 #> [15063,]  305  327  313 #> [15064,]  305  327  313 #> [15065,]  305  327  313 #> [15066,]  305  327  313 #> [15067,]  305  327  313 #> [15068,]  306  328  314 #> [15069,]  306  328  314 #> [15070,]  305  327  313 #> [15071,]  305  327  313 #> [15072,]  305  327  313 #> [15073,]  305  327  313 #> [15074,]  306  328  314 #> [15075,]  306  328  314 #> [15076,]  305  327  313 #> [15077,]  305  327  313 #> [15078,]  305  327  313 #> [15079,]  305  327  313 #> [15080,]  305  327  313 #> [15081,]  305  327  313 #> [15082,]  306  328  314 #> [15083,]  305  327  313 #> [15084,]  305  327  313 #> [15085,]  306  328  314 #> [15086,]  305  327  313 #> [15087,]  305  327  313 #> [15088,]  305  327  313 #> [15089,]  305  327  313 #> [15090,]  305  327  313 #> [15091,]  305  327  313 #> [15092,]  306  328  314 #> [15093,]  306  328  314 #> [15094,]  305  327  313 #> [15095,]  305  327  313 #> [15096,]  306  328  314 #> [15097,]  306  328  314 #> [15098,]  305  327  313 #> [15099,]  305  327  313 #> [15100,]  305  327  313 #> [15101,]  308  332  315 #> [15102,]  308  332  315 #> [15103,]  307  329  316 #> [15104,]  308  331  315 #> [15105,]  308  331  315 #> [15106,]  308  332  315 #> [15107,]  308  331  315 #> [15108,]  308  331  315 #> [15109,]  308  331  315 #> [15110,]  308  331  315 #> [15111,]  307  329  316 #> [15112,]  307  329  316 #> [15113,]  308  332  315 #> [15114,]  307  329  316 #> [15115,]  308  332  315 #> [15116,]  308  332  315 #> [15117,]  308  332  315 #> [15118,]  308  331  315 #> [15119,]  307  330  316 #> [15120,]  307  330  316 #> [15121,]  308  332  315 #> [15122,]  307  330  316 #> [15123,]  308  331  315 #> [15124,]  308  331  315 #> [15125,]  308  331  315 #> [15126,]  307  329  316 #> [15127,]  308  332  315 #> [15128,]  308  331  315 #> [15129,]  307  330  316 #> [15130,]  307  329  316 #> [15131,]  308  331  315 #> [15132,]  307  329  316 #> [15133,]  308  332  315 #> [15134,]  307  329  316 #> [15135,]  308  332  315 #> [15136,]  307  330  316 #> [15137,]  308  332  315 #> [15138,]  308  331  315 #> [15139,]  308  331  315 #> [15140,]  307  329  316 #> [15141,]  307  330  316 #> [15142,]  307  329  316 #> [15143,]  308  331  315 #> [15144,]  308  332  315 #> [15145,]  308  331  315 #> [15146,]  308  331  315 #> [15147,]  308  331  315 #> [15148,]  307  329  316 #> [15149,]  308  331  315 #> [15150,]  308  332  315 #> [15151,]  307  330  316 #> [15152,]  308  332  315 #> [15153,]  308  331  315 #> [15154,]  307  329  316 #> [15155,]  308  331  315 #> [15156,]  308  331  315 #> [15157,]  308  331  315 #> [15158,]  308  332  315 #> [15159,]  308  332  315 #> [15160,]  307  330  316 #> [15161,]  308  332  315 #> [15162,]  307  329  316 #> [15163,]  307  329  316 #> [15164,]  308  331  315 #> [15165,]  308  331  315 #> [15166,]  307  330  316 #> [15167,]  308  331  315 #> [15168,]  307  329  316 #> [15169,]  307  330  316 #> [15170,]  308  332  315 #> [15171,]  308  332  315 #> [15172,]  308  331  315 #> [15173,]  308  332  315 #> [15174,]  308  331  315 #> [15175,]  308  331  315 #> [15176,]  308  332  315 #> [15177,]  308  332  315 #> [15178,]  308  331  315 #> [15179,]  308  332  315 #> [15180,]  307  330  316 #> [15181,]  307  330  316 #> [15182,]  308  331  315 #> [15183,]  307  330  316 #> [15184,]  308  331  315 #> [15185,]  308  331  315 #> [15186,]  308  332  315 #> [15187,]  308  331  315 #> [15188,]  308  331  315 #> [15189,]  307  329  316 #> [15190,]  308  332  315 #> [15191,]  307  329  316 #> [15192,]  308  331  315 #> [15193,]  308  332  315 #> [15194,]  308  332  315 #> [15195,]  308  331  315 #> [15196,]  308  332  315 #> [15197,]  308  331  315 #> [15198,]  308  331  315 #> [15199,]  308  332  315 #> [15200,]  308  332  315 #> [15201,]  309  333  317 #> [15202,]  310  334  318 #> [15203,]  310  334  318 #> [15204,]  309  333  317 #> [15205,]  309  333  317 #> [15206,]  310  334  318 #> [15207,]  310  334  318 #> [15208,]  309  333  317 #> [15209,]  309  333  317 #> [15210,]  310  334  318 #> [15211,]  309  333  317 #> [15212,]  310  334  318 #> [15213,]  309  333  317 #> [15214,]  309  333  317 #> [15215,]  309  333  317 #> [15216,]  309  333  317 #> [15217,]  309  333  317 #> [15218,]  310  334  318 #> [15219,]  310  334  318 #> [15220,]  310  334  318 #> [15221,]  309  333  317 #> [15222,]  309  333  317 #> [15223,]  310  334  318 #> [15224,]  309  333  317 #> [15225,]  310  334  318 #> [15226,]  309  333  317 #> [15227,]  309  333  317 #> [15228,]  310  334  318 #> [15229,]  310  334  318 #> [15230,]  309  333  317 #> [15231,]  310  334  318 #> [15232,]  310  334  318 #> [15233,]  310  334  318 #> [15234,]  310  334  318 #> [15235,]  309  333  317 #> [15236,]  309  333  317 #> [15237,]  309  333  317 #> [15238,]  309  333  317 #> [15239,]  310  334  318 #> [15240,]  310  334  318 #> [15241,]  309  333  317 #> [15242,]  310  334  318 #> [15243,]  309  333  317 #> [15244,]  309  333  317 #> [15245,]  309  333  317 #> [15246,]  309  333  317 #> [15247,]  310  334  318 #> [15248,]  310  334  318 #> [15249,]  309  333  317 #> [15250,]  310  334  318 #> [15251,]  309  333  317 #> [15252,]  309  333  317 #> [15253,]  310  334  318 #> [15254,]  309  333  317 #> [15255,]  309  333  317 #> [15256,]  310  334  318 #> [15257,]  310  334  318 #> [15258,]  309  333  317 #> [15259,]  309  333  317 #> [15260,]  310  334  318 #> [15261,]  310  334  318 #> [15262,]  309  333  317 #> [15263,]  310  334  318 #> [15264,]  310  334  318 #> [15265,]  310  334  318 #> [15266,]  309  333  317 #> [15267,]  309  333  317 #> [15268,]  309  333  317 #> [15269,]  309  333  317 #> [15270,]  310  334  318 #> [15271,]  310  334  318 #> [15272,]  310  334  318 #> [15273,]  310  334  318 #> [15274,]  309  333  317 #> [15275,]  310  334  318 #> [15276,]  310  334  318 #> [15277,]  310  334  318 #> [15278,]  310  334  318 #> [15279,]  309  333  317 #> [15280,]  309  333  317 #> [15281,]  309  333  317 #> [15282,]  309  333  317 #> [15283,]  309  333  317 #> [15284,]  310  334  318 #> [15285,]  309  333  317 #> [15286,]  310  334  318 #> [15287,]  309  333  317 #> [15288,]  309  333  317 #> [15289,]  309  333  317 #> [15290,]  309  333  317 #> [15291,]  309  333  317 #> [15292,]  309  333  317 #> [15293,]  310  334  318 #> [15294,]  310  334  318 #> [15295,]  309  333  317 #> [15296,]  309  333  317 #> [15297,]  310  334  318 #> [15298,]  310  334  318 #> [15299,]  309  333  317 #> [15300,]  310  334  318 #> [15301,]  312  336  319 #> [15302,]  312  337  319 #> [15303,]  312  337  319 #> [15304,]  312  336  320 #> [15305,]  312  336  319 #> [15306,]  312  337  319 #> [15307,]  312  337  320 #> [15308,]  312  336  319 #> [15309,]  312  336  319 #> [15310,]  312  336  320 #> [15311,]  312  336  319 #> [15312,]  312  337  319 #> [15313,]  312  336  319 #> [15314,]  312  336  319 #> [15315,]  311  335  320 #> [15316,]  312  336  320 #> [15317,]  312  336  320 #> [15318,]  312  337  320 #> [15319,]  312  337  319 #> [15320,]  312  337  319 #> [15321,]  312  336  320 #> [15322,]  312  336  319 #> [15323,]  312  337  320 #> [15324,]  312  336  319 #> [15325,]  312  337  320 #> [15326,]  312  336  319 #> [15327,]  312  336  320 #> [15328,]  312  337  320 #> [15329,]  312  336  319 #> [15330,]  312  336  319 #> [15331,]  311  335  319 #> [15332,]  312  337  319 #> [15333,]  312  337  319 #> [15334,]  311  335  319 #> [15335,]  312  336  319 #> [15336,]  312  336  319 #> [15337,]  312  336  319 #> [15338,]  312  336  319 #> [15339,]  312  336  320 #> [15340,]  312  337  319 #> [15341,]  312  336  319 #> [15342,]  311  335  319 #> [15343,]  311  335  320 #> [15344,]  311  335  319 #> [15345,]  312  336  320 #> [15346,]  312  336  320 #> [15347,]  312  336  320 #> [15348,]  312  337  319 #> [15349,]  312  336  319 #> [15350,]  312  336  319 #> [15351,]  312  336  319 #> [15352,]  312  336  319 #> [15353,]  312  336  320 #> [15354,]  312  336  319 #> [15355,]  312  336  319 #> [15356,]  312  337  320 #> [15357,]  312  336  319 #> [15358,]  312  336  319 #> [15359,]  312  336  319 #> [15360,]  312  337  319 #> [15361,]  312  337  320 #> [15362,]  312  336  319 #> [15363,]  311  335  319 #> [15364,]  312  337  320 #> [15365,]  312  337  319 #> [15366,]  312  336  319 #> [15367,]  312  336  319 #> [15368,]  312  336  319 #> [15369,]  312  336  319 #> [15370,]  312  337  319 #> [15371,]  312  337  320 #> [15372,]  312  336  320 #> [15373,]  312  337  320 #> [15374,]  312  336  320 #> [15375,]  311  335  320 #> [15376,]  312  336  320 #> [15377,]  312  336  320 #> [15378,]  312  337  319 #> [15379,]  312  336  319 #> [15380,]  312  336  319 #> [15381,]  312  336  319 #> [15382,]  312  336  319 #> [15383,]  312  336  319 #> [15384,]  312  337  320 #> [15385,]  312  336  319 #> [15386,]  312  336  319 #> [15387,]  312  336  319 #> [15388,]  312  336  320 #> [15389,]  312  336  319 #> [15390,]  312  336  319 #> [15391,]  312  336  319 #> [15392,]  312  336  319 #> [15393,]  312  337  319 #> [15394,]  312  336  320 #> [15395,]  311  335  320 #> [15396,]  312  336  319 #> [15397,]  312  337  319 #> [15398,]  312  337  319 #> [15399,]  312  336  319 #> [15400,]  312  337  320 #> [15401,]  314  339  322 #> [15402,]  313  338  321 #> [15403,]  313  338  321 #> [15404,]  313  338  321 #> [15405,]  314  338  321 #> [15406,]  313  338  321 #> [15407,]  313  338  321 #> [15408,]  313  338  321 #> [15409,]  313  338  321 #> [15410,]  313  338  321 #> [15411,]  314  338  321 #> [15412,]  313  338  321 #> [15413,]  313  338  321 #> [15414,]  314  339  322 #> [15415,]  314  339  322 #> [15416,]  313  339  322 #> [15417,]  314  338  321 #> [15418,]  314  338  321 #> [15419,]  313  338  321 #> [15420,]  313  338  321 #> [15421,]  313  339  322 #> [15422,]  314  338  321 #> [15423,]  313  338  321 #> [15424,]  313  338  321 #> [15425,]  313  338  321 #> [15426,]  314  338  321 #> [15427,]  314  338  321 #> [15428,]  313  338  321 #> [15429,]  313  339  322 #> [15430,]  313  338  321 #> [15431,]  314  338  321 #> [15432,]  314  338  321 #> [15433,]  313  339  322 #> [15434,]  313  338  321 #> [15435,]  313  338  321 #> [15436,]  313  338  321 #> [15437,]  313  338  321 #> [15438,]  313  338  321 #> [15439,]  313  338  321 #> [15440,]  313  338  321 #> [15441,]  313  339  322 #> [15442,]  313  338  321 #> [15443,]  314  338  321 #> [15444,]  313  339  322 #> [15445,]  313  338  321 #> [15446,]  313  338  321 #> [15447,]  314  338  321 #> [15448,]  313  338  321 #> [15449,]  313  338  321 #> [15450,]  313  339  322 #> [15451,]  313  338  321 #> [15452,]  313  338  321 #> [15453,]  313  338  321 #> [15454,]  313  338  321 #> [15455,]  313  338  321 #> [15456,]  313  338  321 #> [15457,]  313  338  321 #> [15458,]  314  338  321 #> [15459,]  314  339  322 #> [15460,]  313  338  321 #> [15461,]  314  338  321 #> [15462,]  313  338  321 #> [15463,]  313  338  321 #> [15464,]  313  338  321 #> [15465,]  313  338  321 #> [15466,]  314  338  321 #> [15467,]  313  338  321 #> [15468,]  313  339  322 #> [15469,]  313  338  321 #> [15470,]  314  339  322 #> [15471,]  314  338  321 #> [15472,]  313  338  321 #> [15473,]  313  339  322 #> [15474,]  313  338  321 #> [15475,]  314  338  321 #> [15476,]  313  338  321 #> [15477,]  314  338  321 #> [15478,]  313  338  321 #> [15479,]  314  338  321 #> [15480,]  313  338  321 #> [15481,]  313  338  321 #> [15482,]  313  338  321 #> [15483,]  313  338  321 #> [15484,]  313  338  321 #> [15485,]  313  338  321 #> [15486,]  313  338  321 #> [15487,]  314  338  321 #> [15488,]  313  338  321 #> [15489,]  313  338  321 #> [15490,]  313  338  321 #> [15491,]  314  338  321 #> [15492,]  313  338  321 #> [15493,]  313  338  321 #> [15494,]  313  338  321 #> [15495,]  314  338  321 #> [15496,]  313  339  322 #> [15497,]  313  338  321 #> [15498,]  313  338  321 #> [15499,]  313  339  322 #> [15500,]  314  338  321 #> [15501,]  316  340  324 #> [15502,]  316  340  324 #> [15503,]  315  340  323 #> [15504,]  315  340  324 #> [15505,]  316  340  324 #> [15506,]  316  340  324 #> [15507,]  315  340  324 #> [15508,]  315  340  324 #> [15509,]  316  340  324 #> [15510,]  316  340  324 #> [15511,]  316  340  324 #> [15512,]  315  340  323 #> [15513,]  316  340  324 #> [15514,]  315  340  323 #> [15515,]  316  340  324 #> [15516,]  315  340  324 #> [15517,]  316  340  324 #> [15518,]  316  340  324 #> [15519,]  316  340  324 #> [15520,]  316  340  324 #> [15521,]  316  340  324 #> [15522,]  316  340  324 #> [15523,]  315  340  324 #> [15524,]  316  340  324 #> [15525,]  315  340  324 #> [15526,]  316  340  323 #> [15527,]  316  340  324 #> [15528,]  316  340  324 #> [15529,]  316  340  324 #> [15530,]  316  340  324 #> [15531,]  315  340  324 #> [15532,]  315  340  323 #> [15533,]  316  340  324 #> [15534,]  316  340  324 #> [15535,]  316  340  324 #> [15536,]  316  340  324 #> [15537,]  315  340  324 #> [15538,]  316  340  324 #> [15539,]  316  340  324 #> [15540,]  315  340  324 #> [15541,]  316  340  324 #> [15542,]  316  340  324 #> [15543,]  316  340  324 #> [15544,]  315  340  324 #> [15545,]  316  340  324 #> [15546,]  315  340  324 #> [15547,]  315  340  324 #> [15548,]  316  340  323 #> [15549,]  316  340  324 #> [15550,]  316  340  324 #> [15551,]  316  340  323 #> [15552,]  315  340  324 #> [15553,]  316  340  324 #> [15554,]  316  340  323 #> [15555,]  315  340  324 #> [15556,]  316  340  324 #> [15557,]  315  340  324 #> [15558,]  316  340  324 #> [15559,]  315  340  324 #> [15560,]  315  340  324 #> [15561,]  316  340  324 #> [15562,]  316  340  324 #> [15563,]  316  340  324 #> [15564,]  316  340  324 #> [15565,]  316  340  324 #> [15566,]  316  340  323 #> [15567,]  315  340  324 #> [15568,]  315  340  324 #> [15569,]  316  340  323 #> [15570,]  316  340  324 #> [15571,]  316  340  324 #> [15572,]  315  340  324 #> [15573,]  316  340  324 #> [15574,]  315  340  324 #> [15575,]  315  340  324 #> [15576,]  315  340  324 #> [15577,]  316  340  324 #> [15578,]  315  340  324 #> [15579,]  316  340  324 #> [15580,]  315  340  323 #> [15581,]  316  340  323 #> [15582,]  316  340  324 #> [15583,]  316  340  324 #> [15584,]  316  340  324 #> [15585,]  316  340  324 #> [15586,]  315  340  324 #> [15587,]  316  340  324 #> [15588,]  316  340  324 #> [15589,]  316  340  323 #> [15590,]  316  340  324 #> [15591,]  316  340  324 #> [15592,]  315  340  324 #> [15593,]  316  340  324 #> [15594,]  316  340  324 #> [15595,]  315  340  324 #> [15596,]  315  340  324 #> [15597,]  315  340  324 #> [15598,]  315  340  324 #> [15599,]  316  340  324 #> [15600,]  316  340  324 #> [15601,]  318  342  326 #> [15602,]  318  342  326 #> [15603,]  318  342  326 #> [15604,]  317  341  325 #> [15605,]  318  342  326 #> [15606,]  318  342  326 #> [15607,]  318  342  326 #> [15608,]  317  341  325 #> [15609,]  317  341  325 #> [15610,]  318  342  326 #> [15611,]  317  341  325 #> [15612,]  318  342  326 #> [15613,]  317  341  325 #> [15614,]  318  342  326 #> [15615,]  318  342  326 #> [15616,]  318  342  326 #> [15617,]  317  341  325 #> [15618,]  318  342  326 #> [15619,]  318  342  326 #> [15620,]  318  342  326 #> [15621,]  318  342  326 #> [15622,]  317  341  325 #> [15623,]  318  342  326 #> [15624,]  318  342  326 #> [15625,]  318  342  326 #> [15626,]  318  342  326 #> [15627,]  317  341  325 #> [15628,]  318  342  326 #> [15629,]  318  342  326 #> [15630,]  318  342  326 #> [15631,]  318  342  326 #> [15632,]  318  342  326 #> [15633,]  318  342  326 #> [15634,]  318  342  326 #> [15635,]  317  341  325 #> [15636,]  318  342  326 #> [15637,]  318  342  326 #> [15638,]  318  342  326 #> [15639,]  318  342  326 #> [15640,]  318  342  326 #> [15641,]  318  342  326 #> [15642,]  318  342  326 #> [15643,]  317  341  325 #> [15644,]  317  341  325 #> [15645,]  318  342  326 #> [15646,]  318  342  326 #> [15647,]  318  342  326 #> [15648,]  318  342  326 #> [15649,]  317  341  325 #> [15650,]  318  342  326 #> [15651,]  318  342  326 #> [15652,]  317  341  325 #> [15653,]  318  342  326 #> [15654,]  318  342  326 #> [15655,]  317  341  325 #> [15656,]  318  342  326 #> [15657,]  318  342  326 #> [15658,]  317  341  325 #> [15659,]  318  342  326 #> [15660,]  318  342  326 #> [15661,]  318  342  326 #> [15662,]  318  342  326 #> [15663,]  318  342  326 #> [15664,]  318  342  326 #> [15665,]  318  342  326 #> [15666,]  317  341  325 #> [15667,]  318  342  326 #> [15668,]  318  342  326 #> [15669,]  317  341  325 #> [15670,]  318  342  326 #> [15671,]  318  342  326 #> [15672,]  318  342  326 #> [15673,]  318  342  326 #> [15674,]  318  342  326 #> [15675,]  318  342  326 #> [15676,]  318  342  326 #> [15677,]  318  342  326 #> [15678,]  318  342  326 #> [15679,]  317  341  325 #> [15680,]  317  341  325 #> [15681,]  317  341  325 #> [15682,]  317  341  325 #> [15683,]  317  341  325 #> [15684,]  318  342  326 #> [15685,]  318  342  326 #> [15686,]  318  342  326 #> [15687,]  317  341  325 #> [15688,]  317  341  325 #> [15689,]  317  341  325 #> [15690,]  317  341  325 #> [15691,]  318  342  326 #> [15692,]  317  341  325 #> [15693,]  318  342  326 #> [15694,]  318  342  326 #> [15695,]  317  341  325 #> [15696,]  318  342  326 #> [15697,]  318  342  326 #> [15698,]  318  342  326 #> [15699,]  317  341  325 #> [15700,]  318  342  326 #> [15701,]  319  343  328 #> [15702,]  319  343  328 #> [15703,]  319  343  328 #> [15704,]  319  344  327 #> [15705,]  319  343  328 #> [15706,]  319  343  328 #> [15707,]  319  343  328 #> [15708,]  319  343  328 #> [15709,]  319  343  328 #> [15710,]  319  343  328 #> [15711,]  319  343  328 #> [15712,]  319  343  328 #> [15713,]  319  343  328 #> [15714,]  319  344  327 #> [15715,]  319  343  328 #> [15716,]  319  343  328 #> [15717,]  319  343  328 #> [15718,]  319  343  328 #> [15719,]  319  343  328 #> [15720,]  319  343  328 #> [15721,]  319  343  328 #> [15722,]  319  343  328 #> [15723,]  319  343  328 #> [15724,]  319  343  328 #> [15725,]  319  343  328 #> [15726,]  319  343  328 #> [15727,]  319  344  327 #> [15728,]  319  343  328 #> [15729,]  319  343  328 #> [15730,]  319  343  328 #> [15731,]  319  343  328 #> [15732,]  319  343  328 #> [15733,]  319  343  328 #> [15734,]  319  343  328 #> [15735,]  319  343  328 #> [15736,]  319  343  328 #> [15737,]  319  343  328 #> [15738,]  319  343  328 #> [15739,]  319  343  328 #> [15740,]  319  343  328 #> [15741,]  319  343  328 #> [15742,]  319  343  328 #> [15743,]  319  343  328 #> [15744,]  319  343  328 #> [15745,]  319  343  328 #> [15746,]  319  343  328 #> [15747,]  319  343  328 #> [15748,]  319  343  328 #> [15749,]  319  343  328 #> [15750,]  319  343  328 #> [15751,]  319  343  328 #> [15752,]  319  343  328 #> [15753,]  319  343  328 #> [15754,]  319  343  328 #> [15755,]  319  343  328 #> [15756,]  319  343  328 #> [15757,]  319  343  328 #> [15758,]  319  343  328 #> [15759,]  319  343  328 #> [15760,]  319  343  328 #> [15761,]  319  344  327 #> [15762,]  319  343  328 #> [15763,]  319  343  328 #> [15764,]  319  343  328 #> [15765,]  319  343  328 #> [15766,]  319  343  328 #> [15767,]  319  343  328 #> [15768,]  319  343  328 #> [15769,]  319  344  327 #> [15770,]  319  343  328 #> [15771,]  319  343  328 #> [15772,]  319  343  328 #> [15773,]  319  343  328 #> [15774,]  319  343  328 #> [15775,]  319  343  328 #> [15776,]  319  343  328 #> [15777,]  319  343  328 #> [15778,]  319  343  328 #> [15779,]  319  343  328 #> [15780,]  319  343  328 #> [15781,]  319  343  328 #> [15782,]  319  344  327 #> [15783,]  319  343  328 #> [15784,]  319  343  328 #> [15785,]  319  343  328 #> [15786,]  319  343  328 #> [15787,]  319  343  328 #> [15788,]  319  343  328 #> [15789,]  319  343  328 #> [15790,]  319  343  328 #> [15791,]  319  343  328 #> [15792,]  319  344  327 #> [15793,]  319  344  327 #> [15794,]  319  343  328 #> [15795,]  319  343  328 #> [15796,]  319  344  327 #> [15797,]  319  344  327 #> [15798,]  319  343  328 #> [15799,]  319  343  328 #> [15800,]  319  343  328 #> [15801,]  321  347  329 #> [15802,]  321  347  329 #> [15803,]  320  345  330 #> [15804,]  320  345  331 #> [15805,]  320  345  331 #> [15806,]  321  347  329 #> [15807,]  320  345  331 #> [15808,]  320  345  331 #> [15809,]  320  345  331 #> [15810,]  320  345  331 #> [15811,]  320  345  330 #> [15812,]  320  345  331 #> [15813,]  321  347  329 #> [15814,]  321  347  329 #> [15815,]  321  346  329 #> [15816,]  321  347  329 #> [15817,]  321  346  329 #> [15818,]  320  345  331 #> [15819,]  320  345  330 #> [15820,]  320  345  331 #> [15821,]  321  347  329 #> [15822,]  320  345  331 #> [15823,]  320  345  331 #> [15824,]  320  345  331 #> [15825,]  320  345  331 #> [15826,]  321  347  329 #> [15827,]  320  345  331 #> [15828,]  320  345  330 #> [15829,]  321  347  329 #> [15830,]  320  345  331 #> [15831,]  320  345  331 #> [15832,]  320  345  331 #> [15833,]  321  347  329 #> [15834,]  320  345  330 #> [15835,]  321  347  329 #> [15836,]  320  345  331 #> [15837,]  320  345  330 #> [15838,]  320  345  330 #> [15839,]  320  345  331 #> [15840,]  320  345  331 #> [15841,]  321  347  329 #> [15842,]  320  345  330 #> [15843,]  320  345  331 #> [15844,]  321  346  329 #> [15845,]  320  345  330 #> [15846,]  320  345  331 #> [15847,]  320  345  331 #> [15848,]  320  345  331 #> [15849,]  320  345  330 #> [15850,]  321  347  329 #> [15851,]  320  345  331 #> [15852,]  320  345  330 #> [15853,]  320  345  331 #> [15854,]  320  345  331 #> [15855,]  320  345  331 #> [15856,]  320  345  331 #> [15857,]  320  345  331 #> [15858,]  320  345  331 #> [15859,]  321  347  329 #> [15860,]  320  345  331 #> [15861,]  321  347  329 #> [15862,]  320  345  331 #> [15863,]  320  345  331 #> [15864,]  320  345  330 #> [15865,]  320  345  331 #> [15866,]  320  345  331 #> [15867,]  320  345  331 #> [15868,]  321  347  329 #> [15869,]  320  345  331 #> [15870,]  321  346  329 #> [15871,]  321  347  329 #> [15872,]  320  345  330 #> [15873,]  321  347  329 #> [15874,]  320  345  331 #> [15875,]  320  345  331 #> [15876,]  321  347  329 #> [15877,]  321  347  329 #> [15878,]  320  345  331 #> [15879,]  321  346  329 #> [15880,]  320  345  331 #> [15881,]  321  347  329 #> [15882,]  320  345  331 #> [15883,]  321  347  329 #> [15884,]  320  345  331 #> [15885,]  320  345  331 #> [15886,]  321  347  329 #> [15887,]  320  345  331 #> [15888,]  320  345  331 #> [15889,]  320  345  330 #> [15890,]  320  345  331 #> [15891,]  320  345  331 #> [15892,]  320  345  331 #> [15893,]  321  347  329 #> [15894,]  321  346  329 #> [15895,]  320  345  331 #> [15896,]  321  347  329 #> [15897,]  320  345  330 #> [15898,]  320  345  331 #> [15899,]  321  347  329 #> [15900,]  320  345  330 #> [15901,]  323  349  333 #> [15902,]  322  348  332 #> [15903,]  322  348  332 #> [15904,]  323  349  333 #> [15905,]  323  349  333 #> [15906,]  323  349  333 #> [15907,]  322  348  332 #> [15908,]  323  349  333 #> [15909,]  323  349  333 #> [15910,]  322  348  332 #> [15911,]  323  349  333 #> [15912,]  323  349  333 #> [15913,]  322  348  332 #> [15914,]  323  349  333 #> [15915,]  323  349  333 #> [15916,]  322  348  332 #> [15917,]  323  349  333 #> [15918,]  322  348  332 #> [15919,]  322  348  332 #> [15920,]  323  349  333 #> [15921,]  322  348  332 #> [15922,]  322  348  332 #> [15923,]  322  348  332 #> [15924,]  322  348  332 #> [15925,]  323  349  333 #> [15926,]  323  349  333 #> [15927,]  323  349  333 #> [15928,]  323  349  333 #> [15929,]  322  348  332 #> [15930,]  322  348  332 #> [15931,]  322  348  332 #> [15932,]  322  348  332 #> [15933,]  323  349  333 #> [15934,]  322  348  332 #> [15935,]  322  348  332 #> [15936,]  322  348  332 #> [15937,]  322  348  332 #> [15938,]  323  349  333 #> [15939,]  322  348  332 #> [15940,]  322  348  332 #> [15941,]  323  349  333 #> [15942,]  323  349  333 #> [15943,]  323  349  333 #> [15944,]  322  348  332 #> [15945,]  323  349  333 #> [15946,]  323  349  333 #> [15947,]  322  348  332 #> [15948,]  322  348  332 #> [15949,]  322  348  332 #> [15950,]  323  349  333 #> [15951,]  323  349  333 #> [15952,]  323  349  333 #> [15953,]  323  349  333 #> [15954,]  322  348  332 #> [15955,]  323  349  333 #> [15956,]  323  349  333 #> [15957,]  323  349  333 #> [15958,]  323  349  333 #> [15959,]  322  348  332 #> [15960,]  323  349  333 #> [15961,]  323  349  333 #> [15962,]  322  348  332 #> [15963,]  323  349  333 #> [15964,]  323  349  333 #> [15965,]  323  349  333 #> [15966,]  323  349  333 #> [15967,]  323  349  333 #> [15968,]  323  349  333 #> [15969,]  323  349  333 #> [15970,]  322  348  332 #> [15971,]  323  349  333 #> [15972,]  323  349  333 #> [15973,]  323  349  333 #> [15974,]  323  349  333 #> [15975,]  323  349  333 #> [15976,]  323  349  333 #> [15977,]  322  348  332 #> [15978,]  323  349  333 #> [15979,]  322  348  332 #> [15980,]  322  348  332 #> [15981,]  323  349  333 #> [15982,]  323  349  333 #> [15983,]  322  348  332 #> [15984,]  323  349  333 #> [15985,]  322  348  332 #> [15986,]  322  348  332 #> [15987,]  323  349  333 #> [15988,]  323  349  333 #> [15989,]  323  349  333 #> [15990,]  323  349  333 #> [15991,]  323  349  333 #> [15992,]  323  349  333 #> [15993,]  322  348  332 #> [15994,]  323  349  333 #> [15995,]  322  348  332 #> [15996,]  323  349  333 #> [15997,]  323  349  333 #> [15998,]  322  348  332 #> [15999,]  323  349  333 #> [16000,]  322  348  332 #> [16001,]  325  351  335 #> [16002,]  324  350  334 #> [16003,]  325  351  335 #> [16004,]  325  351  335 #> [16005,]  325  351  335 #> [16006,]  324  350  334 #> [16007,]  325  351  335 #> [16008,]  325  351  335 #> [16009,]  325  351  335 #> [16010,]  325  351  335 #> [16011,]  324  350  334 #> [16012,]  324  350  334 #> [16013,]  325  351  335 #> [16014,]  325  351  335 #> [16015,]  324  350  334 #> [16016,]  325  351  335 #> [16017,]  324  350  334 #> [16018,]  325  351  335 #> [16019,]  325  351  335 #> [16020,]  325  351  335 #> [16021,]  325  351  335 #> [16022,]  325  351  335 #> [16023,]  324  350  334 #> [16024,]  325  351  335 #> [16025,]  325  351  335 #> [16026,]  325  351  335 #> [16027,]  325  351  335 #> [16028,]  325  351  335 #> [16029,]  324  350  334 #> [16030,]  324  350  334 #> [16031,]  324  350  334 #> [16032,]  325  351  335 #> [16033,]  325  351  335 #> [16034,]  324  350  334 #> [16035,]  325  351  335 #> [16036,]  325  351  335 #> [16037,]  324  350  334 #> [16038,]  325  351  335 #> [16039,]  325  351  335 #> [16040,]  325  351  335 #> [16041,]  325  351  335 #> [16042,]  324  350  334 #> [16043,]  324  350  334 #> [16044,]  324  350  334 #> [16045,]  325  351  335 #> [16046,]  325  351  335 #> [16047,]  324  350  334 #> [16048,]  324  350  334 #> [16049,]  325  351  335 #> [16050,]  325  351  335 #> [16051,]  325  351  335 #> [16052,]  325  351  335 #> [16053,]  325  351  335 #> [16054,]  325  351  335 #> [16055,]  325  351  335 #> [16056,]  324  350  334 #> [16057,]  325  351  335 #> [16058,]  325  351  335 #> [16059,]  325  351  335 #> [16060,]  324  350  334 #> [16061,]  324  350  334 #> [16062,]  325  351  335 #> [16063,]  324  350  334 #> [16064,]  324  350  334 #> [16065,]  324  350  334 #> [16066,]  325  351  335 #> [16067,]  325  351  335 #> [16068,]  325  351  335 #> [16069,]  325  351  335 #> [16070,]  324  350  334 #> [16071,]  325  351  335 #> [16072,]  325  351  335 #> [16073,]  325  351  335 #> [16074,]  325  351  335 #> [16075,]  324  350  334 #> [16076,]  325  351  335 #> [16077,]  325  351  335 #> [16078,]  324  350  334 #> [16079,]  324  350  334 #> [16080,]  325  351  335 #> [16081,]  324  350  334 #> [16082,]  325  351  335 #> [16083,]  325  351  335 #> [16084,]  325  351  335 #> [16085,]  325  351  335 #> [16086,]  325  351  335 #> [16087,]  325  351  335 #> [16088,]  325  351  335 #> [16089,]  325  351  335 #> [16090,]  325  351  335 #> [16091,]  325  351  335 #> [16092,]  324  350  334 #> [16093,]  325  351  335 #> [16094,]  324  350  334 #> [16095,]  324  350  334 #> [16096,]  325  351  335 #> [16097,]  325  351  335 #> [16098,]  325  351  335 #> [16099,]  325  351  335 #> [16100,]  324  350  334 #> [16101,]  326  352  336 #> [16102,]  326  352  336 #> [16103,]  326  352  336 #> [16104,]  326  352  336 #> [16105,]  326  352  336 #> [16106,]  326  352  336 #> [16107,]  326  352  336 #> [16108,]  326  352  336 #> [16109,]  326  352  336 #> [16110,]  326  352  336 #> [16111,]  326  352  336 #> [16112,]  326  352  336 #> [16113,]  326  352  336 #> [16114,]  326  352  336 #> [16115,]  326  352  336 #> [16116,]  326  352  336 #> [16117,]  326  352  336 #> [16118,]  326  352  336 #> [16119,]  327  353  337 #> [16120,]  327  353  338 #> [16121,]  326  352  336 #> [16122,]  327  353  338 #> [16123,]  326  352  336 #> [16124,]  326  352  336 #> [16125,]  326  352  336 #> [16126,]  326  352  336 #> [16127,]  327  353  338 #> [16128,]  326  352  336 #> [16129,]  327  353  338 #> [16130,]  326  352  336 #> [16131,]  326  352  336 #> [16132,]  326  352  336 #> [16133,]  326  352  336 #> [16134,]  326  352  336 #> [16135,]  326  352  336 #> [16136,]  327  353  338 #> [16137,]  326  352  336 #> [16138,]  326  352  336 #> [16139,]  326  352  336 #> [16140,]  326  352  336 #> [16141,]  326  352  336 #> [16142,]  326  352  336 #> [16143,]  326  352  336 #> [16144,]  326  352  336 #> [16145,]  326  352  336 #> [16146,]  326  352  336 #> [16147,]  326  352  336 #> [16148,]  326  352  336 #> [16149,]  326  352  336 #> [16150,]  326  352  336 #> [16151,]  326  352  336 #> [16152,]  326  352  336 #> [16153,]  326  352  336 #> [16154,]  326  352  336 #> [16155,]  326  352  336 #> [16156,]  326  352  336 #> [16157,]  326  352  336 #> [16158,]  327  353  337 #> [16159,]  326  352  336 #> [16160,]  326  352  336 #> [16161,]  326  352  336 #> [16162,]  326  352  336 #> [16163,]  326  352  336 #> [16164,]  327  353  337 #> [16165,]  326  352  336 #> [16166,]  327  353  337 #> [16167,]  326  352  336 #> [16168,]  326  352  336 #> [16169,]  326  352  336 #> [16170,]  326  352  336 #> [16171,]  326  352  336 #> [16172,]  326  352  336 #> [16173,]  326  352  336 #> [16174,]  326  352  336 #> [16175,]  326  352  336 #> [16176,]  326  352  336 #> [16177,]  327  353  337 #> [16178,]  326  352  336 #> [16179,]  326  352  336 #> [16180,]  326  352  336 #> [16181,]  327  353  338 #> [16182,]  326  352  336 #> [16183,]  326  352  336 #> [16184,]  326  352  336 #> [16185,]  326  352  336 #> [16186,]  326  352  336 #> [16187,]  327  353  337 #> [16188,]  326  352  336 #> [16189,]  326  352  336 #> [16190,]  326  352  336 #> [16191,]  326  352  336 #> [16192,]  326  352  336 #> [16193,]  326  352  336 #> [16194,]  326  352  336 #> [16195,]  326  352  336 #> [16196,]  326  352  336 #> [16197,]  326  352  336 #> [16198,]  326  352  336 #> [16199,]  326  352  336 #> [16200,]  327  353  337 #> [16201,]  328  354  340 #> [16202,]  328  354  340 #> [16203,]  329  355  339 #> [16204,]  328  354  341 #> [16205,]  328  354  340 #> [16206,]  329  355  339 #> [16207,]  328  354  341 #> [16208,]  328  354  340 #> [16209,]  328  354  340 #> [16210,]  328  354  341 #> [16211,]  328  354  340 #> [16212,]  329  355  339 #> [16213,]  328  354  340 #> [16214,]  328  354  340 #> [16215,]  328  354  341 #> [16216,]  328  354  341 #> [16217,]  328  354  340 #> [16218,]  329  355  339 #> [16219,]  329  355  339 #> [16220,]  329  355  339 #> [16221,]  328  354  341 #> [16222,]  328  354  340 #> [16223,]  328  354  341 #> [16224,]  328  354  340 #> [16225,]  329  355  339 #> [16226,]  328  354  340 #> [16227,]  328  354  341 #> [16228,]  329  355  339 #> [16229,]  328  354  340 #> [16230,]  328  354  340 #> [16231,]  328  354  340 #> [16232,]  328  354  340 #> [16233,]  329  355  339 #> [16234,]  329  355  339 #> [16235,]  328  354  340 #> [16236,]  328  354  340 #> [16237,]  328  354  340 #> [16238,]  328  354  340 #> [16239,]  328  354  341 #> [16240,]  328  354  340 #> [16241,]  328  354  340 #> [16242,]  328  354  340 #> [16243,]  328  354  341 #> [16244,]  328  354  340 #> [16245,]  328  354  341 #> [16246,]  328  354  340 #> [16247,]  328  354  341 #> [16248,]  328  354  340 #> [16249,]  328  354  340 #> [16250,]  328  354  340 #> [16251,]  328  354  340 #> [16252,]  328  354  340 #> [16253,]  328  354  341 #> [16254,]  328  354  340 #> [16255,]  328  354  340 #> [16256,]  328  354  340 #> [16257,]  328  354  340 #> [16258,]  328  354  340 #> [16259,]  328  354  340 #> [16260,]  329  355  339 #> [16261,]  328  354  341 #> [16262,]  328  354  340 #> [16263,]  328  354  340 #> [16264,]  328  354  341 #> [16265,]  329  355  339 #> [16266,]  328  354  340 #> [16267,]  328  354  340 #> [16268,]  328  354  340 #> [16269,]  328  354  340 #> [16270,]  329  355  339 #> [16271,]  328  354  341 #> [16272,]  328  354  341 #> [16273,]  329  355  339 #> [16274,]  328  354  341 #> [16275,]  328  354  341 #> [16276,]  328  354  341 #> [16277,]  328  354  341 #> [16278,]  328  354  340 #> [16279,]  328  354  340 #> [16280,]  328  354  340 #> [16281,]  328  354  340 #> [16282,]  328  354  340 #> [16283,]  328  354  340 #> [16284,]  329  355  339 #> [16285,]  328  354  340 #> [16286,]  328  354  340 #> [16287,]  328  354  340 #> [16288,]  328  354  341 #> [16289,]  328  354  340 #> [16290,]  328  354  340 #> [16291,]  328  354  340 #> [16292,]  328  354  340 #> [16293,]  329  355  339 #> [16294,]  328  354  341 #> [16295,]  328  354  341 #> [16296,]  328  354  340 #> [16297,]  329  355  339 #> [16298,]  329  355  339 #> [16299,]  328  354  340 #> [16300,]  328  354  341 #> [16301,]  330  356  342 #> [16302,]  330  356  342 #> [16303,]  331  357  343 #> [16304,]  330  356  342 #> [16305,]  330  356  342 #> [16306,]  331  357  343 #> [16307,]  330  356  342 #> [16308,]  330  356  342 #> [16309,]  330  356  342 #> [16310,]  330  356  342 #> [16311,]  330  356  342 #> [16312,]  330  356  342 #> [16313,]  330  356  342 #> [16314,]  330  356  342 #> [16315,]  330  356  342 #> [16316,]  330  356  342 #> [16317,]  330  356  342 #> [16318,]  330  356  342 #> [16319,]  331  357  343 #> [16320,]  330  356  342 #> [16321,]  330  356  342 #> [16322,]  330  356  342 #> [16323,]  330  356  342 #> [16324,]  330  356  342 #> [16325,]  331  357  343 #> [16326,]  330  356  342 #> [16327,]  330  356  342 #> [16328,]  330  356  342 #> [16329,]  330  356  342 #> [16330,]  330  356  342 #> [16331,]  330  356  342 #> [16332,]  330  356  342 #> [16333,]  331  357  343 #> [16334,]  331  357  343 #> [16335,]  330  356  342 #> [16336,]  330  356  342 #> [16337,]  330  356  342 #> [16338,]  330  356  342 #> [16339,]  330  356  342 #> [16340,]  330  356  342 #> [16341,]  330  356  342 #> [16342,]  330  356  342 #> [16343,]  330  356  342 #> [16344,]  330  356  342 #> [16345,]  330  356  342 #> [16346,]  330  356  342 #> [16347,]  330  356  342 #> [16348,]  330  356  342 #> [16349,]  330  356  342 #> [16350,]  330  356  342 #> [16351,]  330  356  342 #> [16352,]  330  356  342 #> [16353,]  330  356  342 #> [16354,]  330  356  342 #> [16355,]  330  356  342 #> [16356,]  330  356  342 #> [16357,]  330  356  342 #> [16358,]  330  356  342 #> [16359,]  330  356  342 #> [16360,]  331  357  343 #> [16361,]  330  356  342 #> [16362,]  330  356  342 #> [16363,]  330  356  342 #> [16364,]  330  356  342 #> [16365,]  331  357  343 #> [16366,]  330  356  342 #> [16367,]  330  356  342 #> [16368,]  330  356  342 #> [16369,]  330  356  342 #> [16370,]  331  357  343 #> [16371,]  330  356  342 #> [16372,]  330  356  342 #> [16373,]  331  357  343 #> [16374,]  330  356  342 #> [16375,]  330  356  342 #> [16376,]  330  356  342 #> [16377,]  330  356  342 #> [16378,]  330  356  342 #> [16379,]  330  356  342 #> [16380,]  330  356  342 #> [16381,]  330  356  342 #> [16382,]  330  356  342 #> [16383,]  330  356  342 #> [16384,]  330  356  342 #> [16385,]  330  356  342 #> [16386,]  330  356  342 #> [16387,]  330  356  342 #> [16388,]  330  356  342 #> [16389,]  330  356  342 #> [16390,]  330  356  342 #> [16391,]  330  356  342 #> [16392,]  330  356  342 #> [16393,]  331  357  343 #> [16394,]  330  356  342 #> [16395,]  330  356  342 #> [16396,]  330  356  342 #> [16397,]  331  357  343 #> [16398,]  331  357  343 #> [16399,]  330  356  342 #> [16400,]  330  356  342 #> [16401,]  333  359  345 #> [16402,]  332  358  344 #> [16403,]  333  359  345 #> [16404,]  333  359  345 #> [16405,]  333  359  345 #> [16406,]  332  358  344 #> [16407,]  333  359  345 #> [16408,]  333  359  345 #> [16409,]  333  359  345 #> [16410,]  333  359  345 #> [16411,]  332  358  344 #> [16412,]  332  358  344 #> [16413,]  333  359  345 #> [16414,]  333  359  345 #> [16415,]  332  358  344 #> [16416,]  333  359  345 #> [16417,]  332  358  344 #> [16418,]  333  359  345 #> [16419,]  332  358  344 #> [16420,]  333  359  345 #> [16421,]  333  359  345 #> [16422,]  333  359  345 #> [16423,]  332  358  344 #> [16424,]  333  359  345 #> [16425,]  333  359  345 #> [16426,]  332  358  344 #> [16427,]  333  359  345 #> [16428,]  333  359  345 #> [16429,]  332  358  344 #> [16430,]  332  358  344 #> [16431,]  332  358  344 #> [16432,]  333  359  345 #> [16433,]  333  359  345 #> [16434,]  332  358  344 #> [16435,]  332  358  344 #> [16436,]  333  359  345 #> [16437,]  332  358  344 #> [16438,]  333  359  345 #> [16439,]  333  359  345 #> [16440,]  333  359  345 #> [16441,]  333  359  345 #> [16442,]  332  358  344 #> [16443,]  332  358  344 #> [16444,]  332  358  344 #> [16445,]  333  359  345 #> [16446,]  332  358  344 #> [16447,]  332  358  344 #> [16448,]  332  358  344 #> [16449,]  333  359  345 #> [16450,]  333  359  345 #> [16451,]  333  359  345 #> [16452,]  333  359  345 #> [16453,]  333  359  345 #> [16454,]  333  359  345 #> [16455,]  333  359  345 #> [16456,]  332  358  344 #> [16457,]  333  359  345 #> [16458,]  333  359  345 #> [16459,]  333  359  345 #> [16460,]  332  358  344 #> [16461,]  332  358  344 #> [16462,]  333  359  345 #> [16463,]  332  358  344 #> [16464,]  332  358  344 #> [16465,]  332  358  344 #> [16466,]  332  358  344 #> [16467,]  333  359  345 #> [16468,]  332  358  344 #> [16469,]  333  359  345 #> [16470,]  332  358  344 #> [16471,]  333  359  345 #> [16472,]  333  359  345 #> [16473,]  333  359  345 #> [16474,]  333  359  345 #> [16475,]  332  358  344 #> [16476,]  333  359  345 #> [16477,]  333  359  345 #> [16478,]  332  358  344 #> [16479,]  332  358  344 #> [16480,]  333  359  345 #> [16481,]  332  358  344 #> [16482,]  333  359  345 #> [16483,]  333  359  345 #> [16484,]  333  359  345 #> [16485,]  333  359  345 #> [16486,]  333  359  345 #> [16487,]  333  359  345 #> [16488,]  333  359  345 #> [16489,]  333  359  345 #> [16490,]  333  359  345 #> [16491,]  333  359  345 #> [16492,]  332  358  344 #> [16493,]  332  358  344 #> [16494,]  332  358  344 #> [16495,]  332  358  344 #> [16496,]  332  358  344 #> [16497,]  333  359  345 #> [16498,]  333  359  345 #> [16499,]  333  359  345 #> [16500,]  332  358  344 #> [16501,]  335  361  347 #> [16502,]  335  361  347 #> [16503,]  335  361  347 #> [16504,]  335  361  347 #> [16505,]  335  361  347 #> [16506,]  335  361  347 #> [16507,]  335  361  347 #> [16508,]  335  361  347 #> [16509,]  335  361  347 #> [16510,]  335  361  347 #> [16511,]  335  361  347 #> [16512,]  334  360  348 #> [16513,]  335  361  347 #> [16514,]  335  361  347 #> [16515,]  334  360  346 #> [16516,]  335  361  347 #> [16517,]  334  360  348 #> [16518,]  335  361  347 #> [16519,]  335  361  347 #> [16520,]  335  361  347 #> [16521,]  335  361  347 #> [16522,]  335  361  347 #> [16523,]  334  360  348 #> [16524,]  335  361  347 #> [16525,]  335  361  347 #> [16526,]  335  361  347 #> [16527,]  335  361  347 #> [16528,]  335  361  347 #> [16529,]  334  360  346 #> [16530,]  335  361  347 #> [16531,]  334  360  348 #> [16532,]  335  361  347 #> [16533,]  335  361  347 #> [16534,]  334  360  348 #> [16535,]  335  361  347 #> [16536,]  335  361  347 #> [16537,]  334  360  346 #> [16538,]  335  361  347 #> [16539,]  335  361  347 #> [16540,]  335  361  347 #> [16541,]  335  361  347 #> [16542,]  334  360  348 #> [16543,]  334  360  346 #> [16544,]  334  360  348 #> [16545,]  335  361  347 #> [16546,]  335  361  347 #> [16547,]  335  361  347 #> [16548,]  334  360  348 #> [16549,]  335  361  347 #> [16550,]  335  361  347 #> [16551,]  335  361  347 #> [16552,]  335  361  347 #> [16553,]  335  361  347 #> [16554,]  335  361  347 #> [16555,]  335  361  347 #> [16556,]  335  361  347 #> [16557,]  335  361  347 #> [16558,]  335  361  347 #> [16559,]  335  361  347 #> [16560,]  335  361  347 #> [16561,]  335  361  347 #> [16562,]  335  361  347 #> [16563,]  334  360  348 #> [16564,]  335  361  347 #> [16565,]  335  361  347 #> [16566,]  335  361  347 #> [16567,]  335  361  347 #> [16568,]  335  361  347 #> [16569,]  335  361  347 #> [16570,]  334  360  348 #> [16571,]  335  361  347 #> [16572,]  335  361  347 #> [16573,]  335  361  347 #> [16574,]  335  361  347 #> [16575,]  334  360  348 #> [16576,]  335  361  347 #> [16577,]  335  361  347 #> [16578,]  334  360  348 #> [16579,]  334  360  348 #> [16580,]  335  361  347 #> [16581,]  334  360  346 #> [16582,]  335  361  347 #> [16583,]  335  361  347 #> [16584,]  335  361  347 #> [16585,]  335  361  347 #> [16586,]  335  361  347 #> [16587,]  335  361  347 #> [16588,]  335  361  347 #> [16589,]  335  361  347 #> [16590,]  335  361  347 #> [16591,]  335  361  347 #> [16592,]  335  361  347 #> [16593,]  335  361  347 #> [16594,]  334  360  348 #> [16595,]  334  360  346 #> [16596,]  335  361  347 #> [16597,]  335  361  347 #> [16598,]  335  361  347 #> [16599,]  335  361  347 #> [16600,]  334  360  346 #> [16601,]  336  362  349 #> [16602,]  337  363  350 #> [16603,]  337  363  350 #> [16604,]  336  362  349 #> [16605,]  336  362  349 #> [16606,]  337  363  350 #> [16607,]  337  363  350 #> [16608,]  336  362  349 #> [16609,]  336  362  349 #> [16610,]  337  363  350 #> [16611,]  336  362  349 #> [16612,]  337  363  350 #> [16613,]  336  362  349 #> [16614,]  336  362  349 #> [16615,]  336  362  349 #> [16616,]  336  362  349 #> [16617,]  336  362  349 #> [16618,]  337  363  350 #> [16619,]  337  363  350 #> [16620,]  337  363  350 #> [16621,]  336  362  349 #> [16622,]  336  362  349 #> [16623,]  337  363  350 #> [16624,]  336  362  349 #> [16625,]  337  363  350 #> [16626,]  336  362  349 #> [16627,]  336  362  349 #> [16628,]  337  363  350 #> [16629,]  337  363  350 #> [16630,]  336  362  349 #> [16631,]  337  363  350 #> [16632,]  337  363  350 #> [16633,]  337  363  350 #> [16634,]  337  363  350 #> [16635,]  336  362  349 #> [16636,]  337  363  350 #> [16637,]  336  362  349 #> [16638,]  336  362  349 #> [16639,]  337  363  350 #> [16640,]  337  363  350 #> [16641,]  336  362  349 #> [16642,]  337  363  350 #> [16643,]  336  362  349 #> [16644,]  336  362  349 #> [16645,]  336  362  349 #> [16646,]  336  362  349 #> [16647,]  337  363  350 #> [16648,]  337  363  350 #> [16649,]  336  362  349 #> [16650,]  337  363  350 #> [16651,]  336  362  349 #> [16652,]  336  362  349 #> [16653,]  337  363  350 #> [16654,]  336  362  349 #> [16655,]  336  362  349 #> [16656,]  337  363  350 #> [16657,]  337  363  350 #> [16658,]  336  362  349 #> [16659,]  336  362  349 #> [16660,]  337  363  350 #> [16661,]  337  363  350 #> [16662,]  336  362  349 #> [16663,]  337  363  350 #> [16664,]  337  363  350 #> [16665,]  337  363  350 #> [16666,]  336  362  349 #> [16667,]  336  362  349 #> [16668,]  336  362  349 #> [16669,]  336  362  349 #> [16670,]  337  363  350 #> [16671,]  337  363  350 #> [16672,]  337  363  350 #> [16673,]  337  363  350 #> [16674,]  336  362  349 #> [16675,]  337  363  350 #> [16676,]  337  363  350 #> [16677,]  337  363  350 #> [16678,]  337  363  350 #> [16679,]  336  362  349 #> [16680,]  336  362  349 #> [16681,]  336  362  349 #> [16682,]  336  362  349 #> [16683,]  336  362  349 #> [16684,]  337  363  350 #> [16685,]  336  362  349 #> [16686,]  337  363  350 #> [16687,]  336  362  349 #> [16688,]  336  362  349 #> [16689,]  336  362  349 #> [16690,]  336  362  349 #> [16691,]  336  362  349 #> [16692,]  336  362  349 #> [16693,]  337  363  350 #> [16694,]  337  363  350 #> [16695,]  336  362  349 #> [16696,]  336  362  349 #> [16697,]  337  363  350 #> [16698,]  337  363  350 #> [16699,]  336  362  349 #> [16700,]  337  363  350 #> [16701,]  339  365  352 #> [16702,]  339  365  352 #> [16703,]  339  365  352 #> [16704,]  339  365  352 #> [16705,]  339  365  352 #> [16706,]  339  365  352 #> [16707,]  339  365  352 #> [16708,]  339  365  352 #> [16709,]  339  365  352 #> [16710,]  339  365  352 #> [16711,]  339  365  352 #> [16712,]  339  365  352 #> [16713,]  339  365  352 #> [16714,]  339  365  352 #> [16715,]  339  365  352 #> [16716,]  339  365  352 #> [16717,]  339  365  352 #> [16718,]  339  365  352 #> [16719,]  339  365  352 #> [16720,]  339  365  352 #> [16721,]  339  365  352 #> [16722,]  339  365  352 #> [16723,]  339  365  352 #> [16724,]  339  365  352 #> [16725,]  338  364  351 #> [16726,]  339  365  352 #> [16727,]  339  365  352 #> [16728,]  339  365  352 #> [16729,]  339  365  352 #> [16730,]  339  365  352 #> [16731,]  339  365  352 #> [16732,]  339  365  352 #> [16733,]  339  365  352 #> [16734,]  339  365  352 #> [16735,]  339  365  352 #> [16736,]  339  365  352 #> [16737,]  339  365  352 #> [16738,]  339  365  352 #> [16739,]  339  365  352 #> [16740,]  339  365  352 #> [16741,]  339  365  352 #> [16742,]  339  365  352 #> [16743,]  339  365  352 #> [16744,]  339  365  352 #> [16745,]  339  365  352 #> [16746,]  339  365  352 #> [16747,]  339  365  352 #> [16748,]  339  365  352 #> [16749,]  339  365  352 #> [16750,]  339  365  352 #> [16751,]  339  365  352 #> [16752,]  339  365  352 #> [16753,]  339  365  352 #> [16754,]  339  365  352 #> [16755,]  339  365  352 #> [16756,]  338  364  351 #> [16757,]  339  365  352 #> [16758,]  339  365  352 #> [16759,]  339  365  352 #> [16760,]  339  365  352 #> [16761,]  339  365  352 #> [16762,]  339  365  352 #> [16763,]  339  365  352 #> [16764,]  339  365  352 #> [16765,]  338  364  351 #> [16766,]  339  365  352 #> [16767,]  339  365  352 #> [16768,]  339  365  352 #> [16769,]  339  365  352 #> [16770,]  339  365  352 #> [16771,]  339  365  352 #> [16772,]  339  365  352 #> [16773,]  339  365  352 #> [16774,]  339  365  352 #> [16775,]  339  365  352 #> [16776,]  339  365  352 #> [16777,]  339  365  352 #> [16778,]  339  365  352 #> [16779,]  339  365  352 #> [16780,]  338  364  351 #> [16781,]  339  365  352 #> [16782,]  339  365  352 #> [16783,]  339  365  352 #> [16784,]  339  365  352 #> [16785,]  338  364  351 #> [16786,]  339  365  352 #> [16787,]  339  365  352 #> [16788,]  339  365  352 #> [16789,]  339  365  352 #> [16790,]  339  365  352 #> [16791,]  339  365  352 #> [16792,]  339  365  352 #> [16793,]  339  365  352 #> [16794,]  339  365  352 #> [16795,]  339  365  352 #> [16796,]  339  365  352 #> [16797,]  339  365  352 #> [16798,]  339  365  352 #> [16799,]  339  365  352 #> [16800,]  339  365  352 #> [16801,]  341  367  354 #> [16802,]  340  366  353 #> [16803,]  340  366  353 #> [16804,]  340  366  353 #> [16805,]  340  366  353 #> [16806,]  340  366  353 #> [16807,]  340  366  353 #> [16808,]  340  366  353 #> [16809,]  340  366  353 #> [16810,]  340  366  353 #> [16811,]  340  366  353 #> [16812,]  340  366  353 #> [16813,]  340  366  353 #> [16814,]  341  367  354 #> [16815,]  341  367  354 #> [16816,]  341  367  354 #> [16817,]  340  366  353 #> [16818,]  340  366  353 #> [16819,]  340  366  353 #> [16820,]  340  366  353 #> [16821,]  340  366  353 #> [16822,]  340  366  353 #> [16823,]  340  366  353 #> [16824,]  340  366  353 #> [16825,]  340  366  353 #> [16826,]  340  366  353 #> [16827,]  340  366  353 #> [16828,]  340  366  353 #> [16829,]  340  366  353 #> [16830,]  340  366  353 #> [16831,]  340  366  353 #> [16832,]  340  366  353 #> [16833,]  340  366  353 #> [16834,]  340  366  353 #> [16835,]  340  366  353 #> [16836,]  340  366  353 #> [16837,]  340  366  353 #> [16838,]  340  366  353 #> [16839,]  340  366  353 #> [16840,]  340  366  353 #> [16841,]  341  367  354 #> [16842,]  340  366  353 #> [16843,]  340  366  353 #> [16844,]  341  367  354 #> [16845,]  340  366  353 #> [16846,]  340  366  353 #> [16847,]  340  366  353 #> [16848,]  340  366  353 #> [16849,]  340  366  353 #> [16850,]  341  367  354 #> [16851,]  340  366  353 #> [16852,]  340  366  353 #> [16853,]  340  366  353 #> [16854,]  340  366  353 #> [16855,]  340  366  353 #> [16856,]  340  366  353 #> [16857,]  340  366  353 #> [16858,]  340  366  353 #> [16859,]  340  366  353 #> [16860,]  340  366  353 #> [16861,]  340  366  353 #> [16862,]  340  366  353 #> [16863,]  340  366  353 #> [16864,]  340  366  353 #> [16865,]  340  366  353 #> [16866,]  340  366  353 #> [16867,]  340  366  353 #> [16868,]  340  366  353 #> [16869,]  340  366  353 #> [16870,]  340  366  353 #> [16871,]  340  366  353 #> [16872,]  340  366  353 #> [16873,]  340  366  353 #> [16874,]  340  366  353 #> [16875,]  340  366  353 #> [16876,]  340  366  353 #> [16877,]  340  366  353 #> [16878,]  340  366  353 #> [16879,]  340  366  353 #> [16880,]  340  366  353 #> [16881,]  340  366  353 #> [16882,]  340  366  353 #> [16883,]  340  366  353 #> [16884,]  340  366  353 #> [16885,]  340  366  353 #> [16886,]  340  366  353 #> [16887,]  340  366  353 #> [16888,]  340  366  353 #> [16889,]  340  366  353 #> [16890,]  340  366  353 #> [16891,]  340  366  353 #> [16892,]  340  366  353 #> [16893,]  340  366  353 #> [16894,]  340  366  353 #> [16895,]  340  366  353 #> [16896,]  340  366  353 #> [16897,]  340  366  353 #> [16898,]  340  366  353 #> [16899,]  341  367  354 #> [16900,]  340  366  353 #> [16901,]  342  368  356 #> [16902,]  342  368  356 #> [16903,]  343  369  356 #> [16904,]  342  368  355 #> [16905,]  342  368  356 #> [16906,]  343  369  356 #> [16907,]  342  368  356 #> [16908,]  342  368  355 #> [16909,]  342  368  355 #> [16910,]  342  368  356 #> [16911,]  342  368  356 #> [16912,]  342  368  356 #> [16913,]  342  368  356 #> [16914,]  342  368  356 #> [16915,]  342  368  356 #> [16916,]  342  368  356 #> [16917,]  342  368  355 #> [16918,]  342  368  356 #> [16919,]  342  368  356 #> [16920,]  342  368  356 #> [16921,]  342  368  356 #> [16922,]  342  368  356 #> [16923,]  342  368  356 #> [16924,]  342  368  356 #> [16925,]  342  368  356 #> [16926,]  342  368  356 #> [16927,]  342  368  355 #> [16928,]  342  368  356 #> [16929,]  342  368  356 #> [16930,]  342  368  356 #> [16931,]  342  368  356 #> [16932,]  342  368  356 #> [16933,]  342  368  356 #> [16934,]  343  369  356 #> [16935,]  342  368  356 #> [16936,]  342  368  356 #> [16937,]  342  368  356 #> [16938,]  342  368  356 #> [16939,]  342  368  356 #> [16940,]  342  368  356 #> [16941,]  342  368  356 #> [16942,]  342  368  356 #> [16943,]  342  368  356 #> [16944,]  342  368  355 #> [16945,]  342  368  356 #> [16946,]  342  368  356 #> [16947,]  342  368  356 #> [16948,]  342  368  356 #> [16949,]  342  368  356 #> [16950,]  342  368  356 #> [16951,]  342  368  356 #> [16952,]  342  368  355 #> [16953,]  342  368  356 #> [16954,]  342  368  356 #> [16955,]  342  368  356 #> [16956,]  342  368  356 #> [16957,]  342  368  356 #> [16958,]  342  368  355 #> [16959,]  342  368  356 #> [16960,]  343  369  356 #> [16961,]  342  368  356 #> [16962,]  342  368  356 #> [16963,]  342  368  356 #> [16964,]  342  368  356 #> [16965,]  343  369  356 #> [16966,]  342  368  355 #> [16967,]  342  368  356 #> [16968,]  342  368  356 #> [16969,]  342  368  356 #> [16970,]  343  369  356 #> [16971,]  342  368  356 #> [16972,]  342  368  356 #> [16973,]  343  369  356 #> [16974,]  342  368  356 #> [16975,]  342  368  356 #> [16976,]  342  368  356 #> [16977,]  342  368  356 #> [16978,]  342  368  356 #> [16979,]  342  368  356 #> [16980,]  342  368  356 #> [16981,]  342  368  355 #> [16982,]  342  368  355 #> [16983,]  342  368  356 #> [16984,]  342  368  356 #> [16985,]  342  368  356 #> [16986,]  342  368  356 #> [16987,]  342  368  355 #> [16988,]  342  368  356 #> [16989,]  342  368  356 #> [16990,]  342  368  355 #> [16991,]  342  368  356 #> [16992,]  342  368  355 #> [16993,]  343  369  356 #> [16994,]  342  368  356 #> [16995,]  342  368  355 #> [16996,]  342  368  356 #> [16997,]  342  368  356 #> [16998,]  342  368  356 #> [16999,]  342  368  355 #> [17000,]  342  368  356 #> [17001,]  345  371  357 #> [17002,]  345  371  357 #> [17003,]  344  370  358 #> [17004,]  344  370  358 #> [17005,]  345  371  357 #> [17006,]  345  371  357 #> [17007,]  344  370  359 #> [17008,]  344  370  359 #> [17009,]  345  371  357 #> [17010,]  345  371  357 #> [17011,]  345  371  357 #> [17012,]  344  370  359 #> [17013,]  345  371  357 #> [17014,]  344  370  358 #> [17015,]  345  371  357 #> [17016,]  345  371  357 #> [17017,]  345  371  357 #> [17018,]  345  371  357 #> [17019,]  345  371  357 #> [17020,]  345  371  357 #> [17021,]  345  371  357 #> [17022,]  345  371  357 #> [17023,]  344  370  359 #> [17024,]  345  371  357 #> [17025,]  344  370  358 #> [17026,]  345  371  357 #> [17027,]  345  371  357 #> [17028,]  345  371  357 #> [17029,]  345  371  357 #> [17030,]  345  371  357 #> [17031,]  344  370  358 #> [17032,]  344  370  358 #> [17033,]  345  371  357 #> [17034,]  345  371  357 #> [17035,]  345  371  357 #> [17036,]  345  371  357 #> [17037,]  344  370  359 #> [17038,]  345  371  357 #> [17039,]  345  371  357 #> [17040,]  344  370  358 #> [17041,]  345  371  357 #> [17042,]  345  371  357 #> [17043,]  345  371  357 #> [17044,]  345  371  357 #> [17045,]  345  371  357 #> [17046,]  344  370  359 #> [17047,]  344  370  358 #> [17048,]  345  371  357 #> [17049,]  345  371  357 #> [17050,]  345  371  357 #> [17051,]  345  371  357 #> [17052,]  344  370  358 #> [17053,]  345  371  357 #> [17054,]  345  371  357 #> [17055,]  344  370  359 #> [17056,]  345  371  357 #> [17057,]  344  370  358 #> [17058,]  345  371  357 #> [17059,]  344  370  359 #> [17060,]  344  370  359 #> [17061,]  345  371  357 #> [17062,]  345  371  357 #> [17063,]  345  371  357 #> [17064,]  345  371  357 #> [17065,]  345  371  357 #> [17066,]  345  371  357 #> [17067,]  344  370  358 #> [17068,]  344  370  359 #> [17069,]  345  371  357 #> [17070,]  345  371  357 #> [17071,]  345  371  357 #> [17072,]  344  370  358 #> [17073,]  345  371  357 #> [17074,]  344  370  358 #> [17075,]  345  371  357 #> [17076,]  344  370  358 #> [17077,]  345  371  357 #> [17078,]  344  370  359 #> [17079,]  345  371  357 #> [17080,]  344  370  359 #> [17081,]  345  371  357 #> [17082,]  345  371  357 #> [17083,]  345  371  357 #> [17084,]  345  371  357 #> [17085,]  345  371  357 #> [17086,]  344  370  358 #> [17087,]  345  371  357 #> [17088,]  345  371  357 #> [17089,]  345  371  357 #> [17090,]  345  371  357 #> [17091,]  345  371  357 #> [17092,]  344  370  359 #> [17093,]  345  371  357 #> [17094,]  345  371  357 #> [17095,]  345  371  357 #> [17096,]  344  370  359 #> [17097,]  344  370  359 #> [17098,]  344  370  358 #> [17099,]  345  371  357 #> [17100,]  345  371  357 #> [17101,]  347  373  361 #> [17102,]  347  373  361 #> [17103,]  346  372  360 #> [17104,]  346  372  360 #> [17105,]  347  373  361 #> [17106,]  347  373  361 #> [17107,]  346  372  360 #> [17108,]  346  372  360 #> [17109,]  347  373  361 #> [17110,]  346  372  360 #> [17111,]  347  373  361 #> [17112,]  346  372  360 #> [17113,]  347  373  361 #> [17114,]  346  372  360 #> [17115,]  347  373  361 #> [17116,]  346  372  360 #> [17117,]  347  373  361 #> [17118,]  347  373  361 #> [17119,]  347  373  361 #> [17120,]  347  373  361 #> [17121,]  347  373  361 #> [17122,]  347  373  361 #> [17123,]  346  372  360 #> [17124,]  347  373  361 #> [17125,]  346  372  360 #> [17126,]  346  372  360 #> [17127,]  347  373  361 #> [17128,]  347  373  361 #> [17129,]  347  373  361 #> [17130,]  347  373  361 #> [17131,]  346  372  360 #> [17132,]  346  372  360 #> [17133,]  347  373  361 #> [17134,]  347  373  361 #> [17135,]  346  372  360 #> [17136,]  347  373  361 #> [17137,]  346  372  360 #> [17138,]  347  373  361 #> [17139,]  347  373  361 #> [17140,]  346  372  360 #> [17141,]  347  373  361 #> [17142,]  347  373  361 #> [17143,]  347  373  361 #> [17144,]  346  372  360 #> [17145,]  346  372  360 #> [17146,]  346  372  360 #> [17147,]  346  372  360 #> [17148,]  347  373  361 #> [17149,]  347  373  361 #> [17150,]  347  373  361 #> [17151,]  347  373  361 #> [17152,]  346  372  360 #> [17153,]  347  373  361 #> [17154,]  347  373  361 #> [17155,]  346  372  360 #> [17156,]  347  373  361 #> [17157,]  346  372  360 #> [17158,]  347  373  361 #> [17159,]  346  372  360 #> [17160,]  346  372  360 #> [17161,]  347  373  361 #> [17162,]  347  373  361 #> [17163,]  347  373  361 #> [17164,]  347  373  361 #> [17165,]  347  373  361 #> [17166,]  347  373  361 #> [17167,]  346  372  360 #> [17168,]  346  372  360 #> [17169,]  347  373  361 #> [17170,]  347  373  361 #> [17171,]  347  373  361 #> [17172,]  346  372  360 #> [17173,]  347  373  361 #> [17174,]  346  372  360 #> [17175,]  346  372  360 #> [17176,]  346  372  360 #> [17177,]  347  373  361 #> [17178,]  346  372  360 #> [17179,]  347  373  361 #> [17180,]  346  372  360 #> [17181,]  347  373  361 #> [17182,]  347  373  361 #> [17183,]  347  373  361 #> [17184,]  347  373  361 #> [17185,]  347  373  361 #> [17186,]  346  372  360 #> [17187,]  347  373  361 #> [17188,]  346  372  360 #> [17189,]  347  373  361 #> [17190,]  347  373  361 #> [17191,]  347  373  361 #> [17192,]  346  372  360 #> [17193,]  347  373  361 #> [17194,]  347  373  361 #> [17195,]  346  372  360 #> [17196,]  346  372  360 #> [17197,]  346  372  360 #> [17198,]  346  372  360 #> [17199,]  347  373  361 #> [17200,]  347  373  361 #> [17201,]  349  375  362 #> [17202,]  349  375  362 #> [17203,]  349  375  362 #> [17204,]  348  374  363 #> [17205,]  349  375  362 #> [17206,]  349  375  362 #> [17207,]  349  375  362 #> [17208,]  348  374  363 #> [17209,]  348  374  363 #> [17210,]  349  375  362 #> [17211,]  348  374  363 #> [17212,]  349  375  362 #> [17213,]  348  374  363 #> [17214,]  349  375  362 #> [17215,]  349  375  362 #> [17216,]  349  375  362 #> [17217,]  348  374  363 #> [17218,]  349  375  362 #> [17219,]  349  375  362 #> [17220,]  349  375  362 #> [17221,]  349  375  362 #> [17222,]  348  374  363 #> [17223,]  349  375  362 #> [17224,]  349  375  362 #> [17225,]  349  375  362 #> [17226,]  349  375  362 #> [17227,]  348  374  363 #> [17228,]  349  375  362 #> [17229,]  349  375  362 #> [17230,]  349  375  362 #> [17231,]  349  375  362 #> [17232,]  349  375  362 #> [17233,]  349  375  362 #> [17234,]  349  375  362 #> [17235,]  348  374  363 #> [17236,]  349  375  362 #> [17237,]  349  375  362 #> [17238,]  349  375  362 #> [17239,]  349  375  362 #> [17240,]  349  375  362 #> [17241,]  349  375  362 #> [17242,]  349  375  362 #> [17243,]  349  375  362 #> [17244,]  348  374  363 #> [17245,]  349  375  362 #> [17246,]  349  375  362 #> [17247,]  349  375  362 #> [17248,]  349  375  362 #> [17249,]  348  374  363 #> [17250,]  349  375  362 #> [17251,]  349  375  362 #> [17252,]  348  374  363 #> [17253,]  349  375  362 #> [17254,]  349  375  362 #> [17255,]  348  374  363 #> [17256,]  349  375  362 #> [17257,]  349  375  362 #> [17258,]  348  374  363 #> [17259,]  349  375  362 #> [17260,]  349  375  362 #> [17261,]  349  375  362 #> [17262,]  349  375  362 #> [17263,]  349  375  362 #> [17264,]  349  375  362 #> [17265,]  349  375  362 #> [17266,]  348  374  363 #> [17267,]  349  375  362 #> [17268,]  349  375  362 #> [17269,]  349  375  362 #> [17270,]  349  375  362 #> [17271,]  349  375  362 #> [17272,]  349  375  362 #> [17273,]  349  375  362 #> [17274,]  349  375  362 #> [17275,]  349  375  362 #> [17276,]  349  375  362 #> [17277,]  349  375  362 #> [17278,]  349  375  362 #> [17279,]  349  375  362 #> [17280,]  348  374  363 #> [17281,]  348  374  363 #> [17282,]  348  374  363 #> [17283,]  348  374  363 #> [17284,]  349  375  362 #> [17285,]  349  375  362 #> [17286,]  349  375  362 #> [17287,]  348  374  363 #> [17288,]  349  375  362 #> [17289,]  349  375  362 #> [17290,]  348  374  363 #> [17291,]  349  375  362 #> [17292,]  348  374  363 #> [17293,]  349  375  362 #> [17294,]  349  375  362 #> [17295,]  348  374  363 #> [17296,]  349  375  362 #> [17297,]  349  375  362 #> [17298,]  349  375  362 #> [17299,]  348  374  363 #> [17300,]  349  375  362 #> [17301,]  351  377  365 #> [17302,]  351  377  365 #> [17303,]  351  377  364 #> [17304,]  351  377  364 #> [17305,]  351  377  364 #> [17306,]  350  376  364 #> [17307,]  351  377  365 #> [17308,]  351  377  365 #> [17309,]  351  377  364 #> [17310,]  351  377  364 #> [17311,]  351  377  364 #> [17312,]  351  377  365 #> [17313,]  351  377  365 #> [17314,]  351  377  364 #> [17315,]  351  377  365 #> [17316,]  351  377  365 #> [17317,]  351  377  365 #> [17318,]  351  377  365 #> [17319,]  351  377  365 #> [17320,]  350  376  365 #> [17321,]  350  376  364 #> [17322,]  351  377  365 #> [17323,]  351  377  365 #> [17324,]  351  377  364 #> [17325,]  350  376  364 #> [17326,]  351  377  365 #> [17327,]  351  377  365 #> [17328,]  351  377  364 #> [17329,]  351  377  365 #> [17330,]  351  377  365 #> [17331,]  351  377  364 #> [17332,]  351  377  364 #> [17333,]  351  377  365 #> [17334,]  351  377  364 #> [17335,]  350  376  364 #> [17336,]  351  377  365 #> [17337,]  351  377  365 #> [17338,]  351  377  365 #> [17339,]  351  377  364 #> [17340,]  351  377  364 #> [17341,]  351  377  365 #> [17342,]  350  376  364 #> [17343,]  351  377  365 #> [17344,]  350  376  365 #> [17345,]  351  377  365 #> [17346,]  351  377  365 #> [17347,]  351  377  364 #> [17348,]  351  377  364 #> [17349,]  351  377  365 #> [17350,]  351  377  365 #> [17351,]  351  377  365 #> [17352,]  351  377  364 #> [17353,]  350  376  365 #> [17354,]  351  377  364 #> [17355,]  351  377  365 #> [17356,]  350  376  365 #> [17357,]  351  377  364 #> [17358,]  351  377  365 #> [17359,]  351  377  365 #> [17360,]  351  377  365 #> [17361,]  351  377  365 #> [17362,]  351  377  364 #> [17363,]  351  377  365 #> [17364,]  351  377  365 #> [17365,]  350  376  364 #> [17366,]  351  377  365 #> [17367,]  351  377  364 #> [17368,]  351  377  365 #> [17369,]  351  377  365 #> [17370,]  351  377  364 #> [17371,]  351  377  365 #> [17372,]  351  377  364 #> [17373,]  350  376  364 #> [17374,]  350  376  364 #> [17375,]  351  377  365 #> [17376,]  351  377  364 #> [17377,]  351  377  365 #> [17378,]  351  377  365 #> [17379,]  351  377  364 #> [17380,]  350  376  365 #> [17381,]  351  377  365 #> [17382,]  350  376  364 #> [17383,]  351  377  365 #> [17384,]  350  376  365 #> [17385,]  350  376  365 #> [17386,]  350  376  364 #> [17387,]  351  377  365 #> [17388,]  351  377  364 #> [17389,]  350  376  364 #> [17390,]  351  377  365 #> [17391,]  351  377  364 #> [17392,]  351  377  364 #> [17393,]  351  377  365 #> [17394,]  350  376  364 #> [17395,]  351  377  365 #> [17396,]  351  377  365 #> [17397,]  351  377  365 #> [17398,]  351  377  364 #> [17399,]  350  376  365 #> [17400,]  351  377  365 #> [17401,]  353  379  367 #> [17402,]  353  379  367 #> [17403,]  352  378  366 #> [17404,]  352  378  367 #> [17405,]  352  378  366 #> [17406,]  352  378  366 #> [17407,]  353  379  367 #> [17408,]  353  379  367 #> [17409,]  352  378  367 #> [17410,]  352  378  367 #> [17411,]  352  378  366 #> [17412,]  353  379  366 #> [17413,]  353  379  367 #> [17414,]  352  378  366 #> [17415,]  353  379  367 #> [17416,]  353  379  367 #> [17417,]  353  379  367 #> [17418,]  353  379  367 #> [17419,]  353  379  366 #> [17420,]  353  379  366 #> [17421,]  352  378  367 #> [17422,]  353  379  366 #> [17423,]  353  379  367 #> [17424,]  352  378  366 #> [17425,]  352  378  367 #> [17426,]  353  379  366 #> [17427,]  353  379  367 #> [17428,]  352  378  367 #> [17429,]  353  379  366 #> [17430,]  353  379  366 #> [17431,]  352  378  367 #> [17432,]  352  378  366 #> [17433,]  353  379  367 #> [17434,]  352  378  366 #> [17435,]  352  378  367 #> [17436,]  353  379  366 #> [17437,]  353  379  367 #> [17438,]  353  379  367 #> [17439,]  352  378  367 #> [17440,]  352  378  366 #> [17441,]  353  379  366 #> [17442,]  352  378  366 #> [17443,]  353  379  367 #> [17444,]  353  379  367 #> [17445,]  353  379  367 #> [17446,]  353  379  367 #> [17447,]  352  378  367 #> [17448,]  352  378  366 #> [17449,]  353  379  367 #> [17450,]  353  379  367 #> [17451,]  353  379  366 #> [17452,]  352  378  367 #> [17453,]  353  379  367 #> [17454,]  352  378  366 #> [17455,]  353  379  366 #> [17456,]  353  379  367 #> [17457,]  352  378  367 #> [17458,]  353  379  367 #> [17459,]  353  379  367 #> [17460,]  353  379  366 #> [17461,]  353  379  367 #> [17462,]  352  378  366 #> [17463,]  353  379  366 #> [17464,]  353  379  367 #> [17465,]  352  378  367 #> [17466,]  353  379  366 #> [17467,]  352  378  366 #> [17468,]  353  379  366 #> [17469,]  353  379  366 #> [17470,]  352  378  367 #> [17471,]  353  379  367 #> [17472,]  352  378  367 #> [17473,]  352  378  367 #> [17474,]  352  378  367 #> [17475,]  353  379  367 #> [17476,]  352  378  367 #> [17477,]  353  379  367 #> [17478,]  353  379  366 #> [17479,]  352  378  367 #> [17480,]  353  379  366 #> [17481,]  353  379  366 #> [17482,]  352  378  367 #> [17483,]  353  379  366 #> [17484,]  353  379  367 #> [17485,]  353  379  367 #> [17486,]  352  378  367 #> [17487,]  353  379  367 #> [17488,]  352  378  367 #> [17489,]  352  378  366 #> [17490,]  353  379  367 #> [17491,]  352  378  366 #> [17492,]  352  378  367 #> [17493,]  353  379  366 #> [17494,]  352  378  367 #> [17495,]  353  379  367 #> [17496,]  353  379  367 #> [17497,]  353  379  367 #> [17498,]  352  378  366 #> [17499,]  352  378  366 #> [17500,]  353  379  367 #> [17501,]  355  381  369 #> [17502,]  355  381  369 #> [17503,]  354  380  368 #> [17504,]  354  380  368 #> [17505,]  354  380  369 #> [17506,]  354  380  369 #> [17507,]  355  381  368 #> [17508,]  355  381  368 #> [17509,]  354  380  369 #> [17510,]  354  380  368 #> [17511,]  354  380  369 #> [17512,]  355  381  368 #> [17513,]  355  381  369 #> [17514,]  354  380  368 #> [17515,]  355  381  369 #> [17516,]  355  381  368 #> [17517,]  355  381  369 #> [17518,]  355  381  369 #> [17519,]  355  381  369 #> [17520,]  355  381  369 #> [17521,]  354  380  369 #> [17522,]  355  381  369 #> [17523,]  355  381  368 #> [17524,]  354  380  369 #> [17525,]  354  380  368 #> [17526,]  355  381  368 #> [17527,]  355  381  369 #> [17528,]  354  380  369 #> [17529,]  355  381  369 #> [17530,]  355  381  368 #> [17531,]  354  380  368 #> [17532,]  354  380  368 #> [17533,]  355  381  369 #> [17534,]  354  380  368 #> [17535,]  354  380  368 #> [17536,]  355  381  369 #> [17537,]  355  381  368 #> [17538,]  355  381  369 #> [17539,]  354  380  369 #> [17540,]  354  380  368 #> [17541,]  355  381  369 #> [17542,]  354  380  369 #> [17543,]  355  381  369 #> [17544,]  355  381  368 #> [17545,]  355  381  368 #> [17546,]  355  381  368 #> [17547,]  354  380  368 #> [17548,]  354  380  369 #> [17549,]  355  381  368 #> [17550,]  355  381  369 #> [17551,]  355  381  369 #> [17552,]  354  380  368 #> [17553,]  355  381  369 #> [17554,]  354  380  369 #> [17555,]  355  381  368 #> [17556,]  355  381  369 #> [17557,]  354  380  368 #> [17558,]  355  381  369 #> [17559,]  355  381  368 #> [17560,]  355  381  368 #> [17561,]  355  381  369 #> [17562,]  354  380  369 #> [17563,]  355  381  369 #> [17564,]  355  381  369 #> [17565,]  354  380  369 #> [17566,]  355  381  369 #> [17567,]  354  380  368 #> [17568,]  355  381  368 #> [17569,]  355  381  369 #> [17570,]  354  380  369 #> [17571,]  355  381  368 #> [17572,]  354  380  368 #> [17573,]  354  380  369 #> [17574,]  354  380  368 #> [17575,]  355  381  368 #> [17576,]  354  380  368 #> [17577,]  355  381  369 #> [17578,]  355  381  368 #> [17579,]  354  380  369 #> [17580,]  355  381  368 #> [17581,]  355  381  369 #> [17582,]  354  380  369 #> [17583,]  355  381  369 #> [17584,]  355  381  369 #> [17585,]  355  381  369 #> [17586,]  354  380  368 #> [17587,]  355  381  369 #> [17588,]  354  380  368 #> [17589,]  354  380  369 #> [17590,]  355  381  369 #> [17591,]  354  380  369 #> [17592,]  355  381  368 #> [17593,]  355  381  369 #> [17594,]  354  380  369 #> [17595,]  355  381  368 #> [17596,]  355  381  368 #> [17597,]  355  381  368 #> [17598,]  354  380  368 #> [17599,]  355  381  369 #> [17600,]  355  381  369 #> [17601,]  357  382  370 #> [17602,]  356  382  370 #> [17603,]  356  382  370 #> [17604,]  356  382  370 #> [17605,]  356  382  371 #> [17606,]  356  382  370 #> [17607,]  356  382  370 #> [17608,]  356  382  370 #> [17609,]  357  382  370 #> [17610,]  356  382  370 #> [17611,]  356  382  370 #> [17612,]  356  382  370 #> [17613,]  357  382  370 #> [17614,]  356  382  370 #> [17615,]  356  382  370 #> [17616,]  356  382  370 #> [17617,]  357  382  370 #> [17618,]  357  382  371 #> [17619,]  356  382  370 #> [17620,]  356  382  370 #> [17621,]  356  382  370 #> [17622,]  356  382  370 #> [17623,]  356  382  370 #> [17624,]  356  382  370 #> [17625,]  356  382  370 #> [17626,]  356  382  370 #> [17627,]  357  382  370 #> [17628,]  356  382  370 #> [17629,]  356  382  370 #> [17630,]  356  382  370 #> [17631,]  356  382  370 #> [17632,]  356  382  371 #> [17633,]  356  382  370 #> [17634,]  356  382  370 #> [17635,]  356  382  370 #> [17636,]  357  382  370 #> [17637,]  356  382  370 #> [17638,]  356  382  370 #> [17639,]  356  382  370 #> [17640,]  356  382  370 #> [17641,]  356  382  370 #> [17642,]  357  382  370 #> [17643,]  356  382  370 #> [17644,]  356  382  370 #> [17645,]  356  382  370 #> [17646,]  356  382  370 #> [17647,]  356  382  370 #> [17648,]  356  382  370 #> [17649,]  356  382  370 #> [17650,]  356  382  370 #> [17651,]  357  382  370 #> [17652,]  356  382  370 #> [17653,]  357  382  370 #> [17654,]  357  382  370 #> [17655,]  356  382  370 #> [17656,]  357  382  370 #> [17657,]  356  382  370 #> [17658,]  356  382  370 #> [17659,]  356  382  370 #> [17660,]  356  382  370 #> [17661,]  356  382  370 #> [17662,]  356  382  370 #> [17663,]  356  382  370 #> [17664,]  356  382  370 #> [17665,]  357  382  370 #> [17666,]  357  382  370 #> [17667,]  356  382  370 #> [17668,]  356  382  370 #> [17669,]  356  382  370 #> [17670,]  356  382  370 #> [17671,]  356  382  371 #> [17672,]  356  382  370 #> [17673,]  356  382  370 #> [17674,]  356  382  370 #> [17675,]  356  382  371 #> [17676,]  356  382  370 #> [17677,]  356  382  370 #> [17678,]  356  382  370 #> [17679,]  357  382  370 #> [17680,]  356  382  370 #> [17681,]  356  382  370 #> [17682,]  357  382  370 #> [17683,]  357  382  370 #> [17684,]  357  382  370 #> [17685,]  356  382  370 #> [17686,]  356  382  370 #> [17687,]  357  382  370 #> [17688,]  356  382  370 #> [17689,]  356  382  370 #> [17690,]  356  382  370 #> [17691,]  357  382  371 #> [17692,]  356  382  370 #> [17693,]  357  382  370 #> [17694,]  357  382  370 #> [17695,]  356  382  371 #> [17696,]  356  382  370 #> [17697,]  356  382  370 #> [17698,]  356  382  370 #> [17699,]  356  382  370 #> [17700,]  356  382  371 #> [17701,]  359  383  374 #> [17702,]  358  385  372 #> [17703,]  358  384  376 #> [17704,]  358  385  372 #> [17705,]  358  385  372 #> [17706,]  359  383  373 #> [17707,]  358  384  376 #> [17708,]  359  383  374 #> [17709,]  359  383  373 #> [17710,]  358  385  372 #> [17711,]  358  385  372 #> [17712,]  359  383  374 #> [17713,]  358  385  372 #> [17714,]  359  383  373 #> [17715,]  359  383  374 #> [17716,]  358  385  372 #> [17717,]  358  385  372 #> [17718,]  358  385  372 #> [17719,]  358  385  372 #> [17720,]  359  383  374 #> [17721,]  358  384  376 #> [17722,]  358  385  372 #> [17723,]  358  384  375 #> [17724,]  358  385  372 #> [17725,]  358  384  376 #> [17726,]  359  383  374 #> [17727,]  358  385  372 #> [17728,]  358  385  372 #> [17729,]  358  385  372 #> [17730,]  358  385  372 #> [17731,]  358  385  372 #> [17732,]  358  385  372 #> [17733,]  359  383  374 #> [17734,]  358  384  375 #> [17735,]  358  384  375 #> [17736,]  358  385  372 #> [17737,]  358  384  375 #> [17738,]  358  385  372 #> [17739,]  358  385  372 #> [17740,]  358  385  372 #> [17741,]  358  385  372 #> [17742,]  358  384  375 #> [17743,]  359  383  374 #> [17744,]  358  384  375 #> [17745,]  359  383  374 #> [17746,]  359  383  374 #> [17747,]  358  385  372 #> [17748,]  358  385  372 #> [17749,]  358  385  372 #> [17750,]  359  383  374 #> [17751,]  359  383  374 #> [17752,]  358  385  372 #> [17753,]  359  383  374 #> [17754,]  358  385  372 #> [17755,]  359  383  374 #> [17756,]  359  383  374 #> [17757,]  359  383  373 #> [17758,]  359  383  374 #> [17759,]  358  385  372 #> [17760,]  359  383  374 #> [17761,]  359  383  374 #> [17762,]  358  385  372 #> [17763,]  358  385  372 #> [17764,]  359  383  374 #> [17765,]  359  383  373 #> [17766,]  359  383  374 #> [17767,]  358  385  372 #> [17768,]  359  383  374 #> [17769,]  358  385  372 #> [17770,]  358  385  372 #> [17771,]  359  383  374 #> [17772,]  359  383  373 #> [17773,]  359  383  373 #> [17774,]  359  383  373 #> [17775,]  359  383  374 #> [17776,]  359  383  373 #> [17777,]  358  385  372 #> [17778,]  359  383  374 #> [17779,]  358  385  372 #> [17780,]  358  384  376 #> [17781,]  359  383  374 #> [17782,]  358  384  376 #> [17783,]  358  385  372 #> [17784,]  358  384  376 #> [17785,]  358  384  376 #> [17786,]  358  384  376 #> [17787,]  358  385  372 #> [17788,]  358  385  372 #> [17789,]  358  384  376 #> [17790,]  358  385  372 #> [17791,]  358  385  372 #> [17792,]  359  383  373 #> [17793,]  358  385  372 #> [17794,]  359  383  373 #> [17795,]  358  385  372 #> [17796,]  359  383  374 #> [17797,]  359  383  374 #> [17798,]  358  384  376 #> [17799,]  358  384  376 #> [17800,]  358  385  372 #> [17801,]  361  387  378 #> [17802,]  361  387  378 #> [17803,]  360  386  377 #> [17804,]  360  386  377 #> [17805,]  361  387  377 #> [17806,]  361  387  378 #> [17807,]  360  386  377 #> [17808,]  360  386  377 #> [17809,]  361  387  377 #> [17810,]  361  387  377 #> [17811,]  361  387  377 #> [17812,]  360  386  377 #> [17813,]  361  387  378 #> [17814,]  361  387  378 #> [17815,]  361  387  378 #> [17816,]  361  387  378 #> [17817,]  361  387  378 #> [17818,]  361  387  377 #> [17819,]  361  387  377 #> [17820,]  361  387  377 #> [17821,]  361  387  378 #> [17822,]  361  387  377 #> [17823,]  360  386  377 #> [17824,]  361  387  377 #> [17825,]  360  386  377 #> [17826,]  361  387  378 #> [17827,]  361  387  377 #> [17828,]  361  387  377 #> [17829,]  361  387  378 #> [17830,]  361  387  377 #> [17831,]  360  386  377 #> [17832,]  361  387  377 #> [17833,]  361  387  378 #> [17834,]  361  387  377 #> [17835,]  361  387  378 #> [17836,]  361  387  377 #> [17837,]  361  387  377 #> [17838,]  361  387  377 #> [17839,]  361  387  377 #> [17840,]  360  386  377 #> [17841,]  361  387  378 #> [17842,]  361  387  377 #> [17843,]  361  387  377 #> [17844,]  361  387  378 #> [17845,]  361  387  377 #> [17846,]  361  387  377 #> [17847,]  360  386  377 #> [17848,]  361  387  377 #> [17849,]  361  387  377 #> [17850,]  361  387  378 #> [17851,]  361  387  377 #> [17852,]  360  386  377 #> [17853,]  361  387  377 #> [17854,]  361  387  377 #> [17855,]  361  387  377 #> [17856,]  361  387  377 #> [17857,]  360  386  377 #> [17858,]  361  387  377 #> [17859,]  360  386  378 #> [17860,]  360  386  377 #> [17861,]  361  387  378 #> [17862,]  361  387  377 #> [17863,]  361  387  377 #> [17864,]  361  387  377 #> [17865,]  361  387  377 #> [17866,]  361  387  377 #> [17867,]  361  387  377 #> [17868,]  360  386  378 #> [17869,]  361  387  377 #> [17870,]  361  387  378 #> [17871,]  361  387  378 #> [17872,]  361  387  377 #> [17873,]  361  387  378 #> [17874,]  361  387  377 #> [17875,]  361  387  377 #> [17876,]  361  387  378 #> [17877,]  361  387  378 #> [17878,]  361  387  377 #> [17879,]  361  387  378 #> [17880,]  360  386  377 #> [17881,]  361  387  378 #> [17882,]  361  387  377 #> [17883,]  361  387  378 #> [17884,]  361  387  377 #> [17885,]  361  387  377 #> [17886,]  360  386  378 #> [17887,]  361  387  377 #> [17888,]  361  387  377 #> [17889,]  361  387  377 #> [17890,]  361  387  377 #> [17891,]  361  387  377 #> [17892,]  361  387  377 #> [17893,]  361  387  378 #> [17894,]  361  387  378 #> [17895,]  361  387  377 #> [17896,]  360  386  378 #> [17897,]  360  386  377 #> [17898,]  360  386  377 #> [17899,]  361  387  378 #> [17900,]  361  387  377 #> [17901,]  363  389  380 #> [17902,]  363  389  380 #> [17903,]  362  388  379 #> [17904,]  363  389  380 #> [17905,]  363  389  380 #> [17906,]  363  389  380 #> [17907,]  363  389  380 #> [17908,]  363  389  380 #> [17909,]  363  389  380 #> [17910,]  363  389  380 #> [17911,]  363  389  380 #> [17912,]  362  388  379 #> [17913,]  363  389  380 #> [17914,]  362  388  379 #> [17915,]  363  389  380 #> [17916,]  363  389  380 #> [17917,]  363  389  380 #> [17918,]  363  389  380 #> [17919,]  363  389  380 #> [17920,]  363  389  380 #> [17921,]  363  389  380 #> [17922,]  363  389  380 #> [17923,]  363  389  380 #> [17924,]  363  389  380 #> [17925,]  363  389  380 #> [17926,]  362  388  379 #> [17927,]  363  389  380 #> [17928,]  363  389  380 #> [17929,]  363  389  380 #> [17930,]  363  389  380 #> [17931,]  363  389  380 #> [17932,]  362  388  379 #> [17933,]  363  389  380 #> [17934,]  363  389  380 #> [17935,]  363  389  380 #> [17936,]  363  389  380 #> [17937,]  363  389  380 #> [17938,]  363  389  380 #> [17939,]  363  389  380 #> [17940,]  363  389  380 #> [17941,]  363  389  380 #> [17942,]  363  389  380 #> [17943,]  363  389  380 #> [17944,]  363  389  380 #> [17945,]  363  389  380 #> [17946,]  363  389  380 #> [17947,]  363  389  380 #> [17948,]  363  389  380 #> [17949,]  363  389  380 #> [17950,]  363  389  380 #> [17951,]  362  388  379 #> [17952,]  363  389  380 #> [17953,]  363  389  380 #> [17954,]  362  388  379 #> [17955,]  363  389  380 #> [17956,]  363  389  380 #> [17957,]  363  389  380 #> [17958,]  363  389  380 #> [17959,]  363  389  380 #> [17960,]  363  389  380 #> [17961,]  363  389  380 #> [17962,]  363  389  380 #> [17963,]  363  389  380 #> [17964,]  363  389  380 #> [17965,]  363  389  380 #> [17966,]  362  388  379 #> [17967,]  363  389  380 #> [17968,]  363  389  380 #> [17969,]  362  388  379 #> [17970,]  363  389  380 #> [17971,]  363  389  380 #> [17972,]  363  389  380 #> [17973,]  363  389  380 #> [17974,]  363  389  380 #> [17975,]  363  389  380 #> [17976,]  363  389  380 #> [17977,]  363  389  380 #> [17978,]  363  389  380 #> [17979,]  363  389  380 #> [17980,]  362  388  379 #> [17981,]  363  389  380 #> [17982,]  363  389  380 #> [17983,]  363  389  380 #> [17984,]  363  389  380 #> [17985,]  363  389  380 #> [17986,]  363  389  380 #> [17987,]  363  389  380 #> [17988,]  363  389  380 #> [17989,]  363  389  380 #> [17990,]  363  389  380 #> [17991,]  363  389  380 #> [17992,]  363  389  380 #> [17993,]  363  389  380 #> [17994,]  363  389  380 #> [17995,]  363  389  380 #> [17996,]  363  389  380 #> [17997,]  363  389  380 #> [17998,]  363  389  380 #> [17999,]  363  389  380 #> [18000,]  363  389  380 #> [18001,]  365  391  382 #> [18002,]  364  390  381 #> [18003,]  365  391  382 #> [18004,]  365  391  382 #> [18005,]  365  391  382 #> [18006,]  364  390  381 #> [18007,]  365  391  382 #> [18008,]  365  391  382 #> [18009,]  365  391  382 #> [18010,]  365  391  382 #> [18011,]  364  390  381 #> [18012,]  364  390  381 #> [18013,]  365  391  382 #> [18014,]  365  391  382 #> [18015,]  364  390  381 #> [18016,]  365  391  382 #> [18017,]  364  390  381 #> [18018,]  365  391  382 #> [18019,]  364  390  381 #> [18020,]  365  391  382 #> [18021,]  365  391  382 #> [18022,]  365  391  382 #> [18023,]  364  390  381 #> [18024,]  365  391  382 #> [18025,]  365  391  382 #> [18026,]  364  390  381 #> [18027,]  365  391  382 #> [18028,]  365  391  382 #> [18029,]  364  390  381 #> [18030,]  364  390  381 #> [18031,]  364  390  381 #> [18032,]  365  391  382 #> [18033,]  365  391  382 #> [18034,]  364  390  381 #> [18035,]  364  390  381 #> [18036,]  365  391  382 #> [18037,]  364  390  381 #> [18038,]  365  391  382 #> [18039,]  365  391  382 #> [18040,]  365  391  382 #> [18041,]  365  391  382 #> [18042,]  364  390  381 #> [18043,]  364  390  381 #> [18044,]  364  390  381 #> [18045,]  365  391  382 #> [18046,]  365  391  382 #> [18047,]  364  390  381 #> [18048,]  364  390  381 #> [18049,]  365  391  382 #> [18050,]  365  391  382 #> [18051,]  365  391  382 #> [18052,]  365  391  382 #> [18053,]  365  391  382 #> [18054,]  365  391  382 #> [18055,]  365  391  382 #> [18056,]  364  390  381 #> [18057,]  365  391  382 #> [18058,]  365  391  382 #> [18059,]  365  391  382 #> [18060,]  364  390  381 #> [18061,]  364  390  381 #> [18062,]  365  391  382 #> [18063,]  364  390  381 #> [18064,]  364  390  381 #> [18065,]  364  390  381 #> [18066,]  364  390  381 #> [18067,]  365  391  382 #> [18068,]  364  390  381 #> [18069,]  365  391  382 #> [18070,]  364  390  381 #> [18071,]  365  391  382 #> [18072,]  365  391  382 #> [18073,]  365  391  382 #> [18074,]  365  391  382 #> [18075,]  364  390  381 #> [18076,]  365  391  382 #> [18077,]  365  391  382 #> [18078,]  364  390  381 #> [18079,]  364  390  381 #> [18080,]  365  391  382 #> [18081,]  364  390  381 #> [18082,]  365  391  382 #> [18083,]  365  391  382 #> [18084,]  365  391  382 #> [18085,]  365  391  382 #> [18086,]  365  391  382 #> [18087,]  365  391  382 #> [18088,]  365  391  382 #> [18089,]  365  391  382 #> [18090,]  365  391  382 #> [18091,]  365  391  382 #> [18092,]  364  390  381 #> [18093,]  365  391  382 #> [18094,]  364  390  381 #> [18095,]  364  390  381 #> [18096,]  364  390  381 #> [18097,]  365  391  382 #> [18098,]  365  391  382 #> [18099,]  365  391  382 #> [18100,]  364  390  381 #> [18101,]  367  393  384 #> [18102,]  367  393  384 #> [18103,]  366  392  383 #> [18104,]  366  392  383 #> [18105,]  366  392  383 #> [18106,]  366  392  383 #> [18107,]  367  393  384 #> [18108,]  367  393  384 #> [18109,]  366  392  383 #> [18110,]  366  392  383 #> [18111,]  366  392  383 #> [18112,]  367  393  384 #> [18113,]  367  393  384 #> [18114,]  366  392  383 #> [18115,]  367  393  384 #> [18116,]  367  393  384 #> [18117,]  366  392  383 #> [18118,]  367  393  384 #> [18119,]  367  393  384 #> [18120,]  367  393  384 #> [18121,]  366  392  383 #> [18122,]  367  393  384 #> [18123,]  367  393  384 #> [18124,]  366  392  383 #> [18125,]  366  392  383 #> [18126,]  367  393  384 #> [18127,]  367  393  384 #> [18128,]  366  392  383 #> [18129,]  367  393  384 #> [18130,]  367  393  384 #> [18131,]  366  392  383 #> [18132,]  366  392  383 #> [18133,]  367  393  384 #> [18134,]  366  392  383 #> [18135,]  366  392  383 #> [18136,]  367  393  384 #> [18137,]  367  393  384 #> [18138,]  367  393  384 #> [18139,]  366  392  383 #> [18140,]  366  392  383 #> [18141,]  367  393  384 #> [18142,]  366  392  383 #> [18143,]  367  393  384 #> [18144,]  367  393  384 #> [18145,]  367  393  384 #> [18146,]  367  393  384 #> [18147,]  366  392  383 #> [18148,]  366  392  383 #> [18149,]  367  393  384 #> [18150,]  367  393  384 #> [18151,]  367  393  384 #> [18152,]  366  392  383 #> [18153,]  367  393  384 #> [18154,]  366  392  383 #> [18155,]  367  393  384 #> [18156,]  367  393  384 #> [18157,]  366  392  383 #> [18158,]  367  393  384 #> [18159,]  367  393  384 #> [18160,]  367  393  384 #> [18161,]  367  393  384 #> [18162,]  366  392  383 #> [18163,]  367  393  384 #> [18164,]  367  393  384 #> [18165,]  366  392  383 #> [18166,]  367  393  384 #> [18167,]  366  392  383 #> [18168,]  367  393  384 #> [18169,]  367  393  384 #> [18170,]  366  392  383 #> [18171,]  367  393  384 #> [18172,]  366  392  383 #> [18173,]  366  392  383 #> [18174,]  366  392  383 #> [18175,]  367  393  384 #> [18176,]  366  392  383 #> [18177,]  367  393  384 #> [18178,]  367  393  384 #> [18179,]  366  392  383 #> [18180,]  367  393  384 #> [18181,]  367  393  384 #> [18182,]  366  392  383 #> [18183,]  367  393  384 #> [18184,]  367  393  384 #> [18185,]  367  393  384 #> [18186,]  366  392  383 #> [18187,]  367  393  384 #> [18188,]  366  392  383 #> [18189,]  366  392  383 #> [18190,]  367  393  384 #> [18191,]  366  392  383 #> [18192,]  366  392  383 #> [18193,]  367  393  384 #> [18194,]  366  392  383 #> [18195,]  367  393  384 #> [18196,]  367  393  384 #> [18197,]  367  393  384 #> [18198,]  366  392  383 #> [18199,]  366  392  383 #> [18200,]  367  393  384 #> [18201,]  368  394  386 #> [18202,]  368  394  385 #> [18203,]  368  394  386 #> [18204,]  369  395  386 #> [18205,]  368  394  386 #> [18206,]  369  395  385 #> [18207,]  368  394  386 #> [18208,]  368  394  386 #> [18209,]  369  395  386 #> [18210,]  369  395  386 #> [18211,]  369  395  385 #> [18212,]  369  395  385 #> [18213,]  368  394  386 #> [18214,]  369  395  386 #> [18215,]  369  395  385 #> [18216,]  368  394  386 #> [18217,]  368  394  385 #> [18218,]  369  395  386 #> [18219,]  369  395  385 #> [18220,]  368  394  386 #> [18221,]  369  395  386 #> [18222,]  368  394  386 #> [18223,]  369  395  385 #> [18224,]  368  394  386 #> [18225,]  368  394  386 #> [18226,]  369  395  385 #> [18227,]  369  395  386 #> [18228,]  368  394  386 #> [18229,]  368  394  385 #> [18230,]  369  395  385 #> [18231,]  369  395  385 #> [18232,]  369  395  386 #> [18233,]  369  395  386 #> [18234,]  369  395  385 #> [18235,]  368  394  385 #> [18236,]  369  395  386 #> [18237,]  368  394  385 #> [18238,]  369  395  386 #> [18239,]  368  394  386 #> [18240,]  368  394  386 #> [18241,]  369  395  386 #> [18242,]  369  395  385 #> [18243,]  368  394  385 #> [18244,]  368  394  385 #> [18245,]  368  394  386 #> [18246,]  368  394  385 #> [18247,]  368  394  385 #> [18248,]  369  395  385 #> [18249,]  368  394  386 #> [18250,]  368  394  386 #> [18251,]  368  394  386 #> [18252,]  369  395  386 #> [18253,]  368  394  386 #> [18254,]  368  394  386 #> [18255,]  368  394  386 #> [18256,]  368  394  385 #> [18257,]  368  394  386 #> [18258,]  369  395  386 #> [18259,]  368  394  386 #> [18260,]  369  395  385 #> [18261,]  369  395  385 #> [18262,]  369  395  386 #> [18263,]  368  394  385 #> [18264,]  369  395  385 #> [18265,]  368  394  385 #> [18266,]  368  394  385 #> [18267,]  369  395  386 #> [18268,]  369  395  385 #> [18269,]  369  395  386 #> [18270,]  368  394  385 #> [18271,]  368  394  386 #> [18272,]  368  394  386 #> [18273,]  369  395  386 #> [18274,]  369  395  386 #> [18275,]  369  395  385 #> [18276,]  368  394  386 #> [18277,]  368  394  386 #> [18278,]  368  394  385 #> [18279,]  368  394  385 #> [18280,]  369  395  386 #> [18281,]  368  394  385 #> [18282,]  369  395  386 #> [18283,]  368  394  386 #> [18284,]  368  394  386 #> [18285,]  369  395  386 #> [18286,]  368  394  386 #> [18287,]  368  394  386 #> [18288,]  368  394  386 #> [18289,]  368  394  386 #> [18290,]  368  394  386 #> [18291,]  369  395  386 #> [18292,]  369  395  385 #> [18293,]  369  395  385 #> [18294,]  368  394  385 #> [18295,]  369  395  385 #> [18296,]  369  395  385 #> [18297,]  369  395  386 #> [18298,]  368  394  386 #> [18299,]  369  395  386 #> [18300,]  368  394  385 #> [18301,]  370  396  388 #> [18302,]  370  396  388 #> [18303,]  371  396  387 #> [18304,]  370  396  388 #> [18305,]  370  396  388 #> [18306,]  371  396  388 #> [18307,]  370  396  387 #> [18308,]  370  396  388 #> [18309,]  370  396  388 #> [18310,]  370  396  388 #> [18311,]  370  396  388 #> [18312,]  370  396  387 #> [18313,]  370  396  388 #> [18314,]  370  396  388 #> [18315,]  370  396  388 #> [18316,]  370  396  388 #> [18317,]  370  396  388 #> [18318,]  370  396  388 #> [18319,]  370  396  388 #> [18320,]  370  396  388 #> [18321,]  370  396  388 #> [18322,]  370  396  388 #> [18323,]  370  396  388 #> [18324,]  370  396  388 #> [18325,]  370  396  388 #> [18326,]  370  396  388 #> [18327,]  370  396  388 #> [18328,]  370  396  388 #> [18329,]  370  396  388 #> [18330,]  370  396  388 #> [18331,]  370  396  387 #> [18332,]  370  396  388 #> [18333,]  370  396  388 #> [18334,]  371  396  388 #> [18335,]  370  396  388 #> [18336,]  370  396  388 #> [18337,]  370  396  388 #> [18338,]  370  396  388 #> [18339,]  370  396  388 #> [18340,]  370  396  388 #> [18341,]  370  396  388 #> [18342,]  370  396  388 #> [18343,]  370  396  388 #> [18344,]  370  396  388 #> [18345,]  370  396  388 #> [18346,]  370  396  388 #> [18347,]  370  396  388 #> [18348,]  370  396  388 #> [18349,]  370  396  388 #> [18350,]  370  396  388 #> [18351,]  370  396  388 #> [18352,]  370  396  387 #> [18353,]  370  396  388 #> [18354,]  370  396  388 #> [18355,]  370  396  388 #> [18356,]  370  396  388 #> [18357,]  370  396  388 #> [18358,]  370  396  388 #> [18359,]  370  396  387 #> [18360,]  371  396  387 #> [18361,]  370  396  388 #> [18362,]  370  396  388 #> [18363,]  370  396  388 #> [18364,]  370  396  388 #> [18365,]  371  396  388 #> [18366,]  370  396  388 #> [18367,]  370  396  388 #> [18368,]  370  396  388 #> [18369,]  370  396  388 #> [18370,]  371  396  388 #> [18371,]  370  396  388 #> [18372,]  370  396  388 #> [18373,]  370  396  388 #> [18374,]  370  396  388 #> [18375,]  370  396  388 #> [18376,]  370  396  388 #> [18377,]  370  396  388 #> [18378,]  370  396  388 #> [18379,]  370  396  388 #> [18380,]  370  396  388 #> [18381,]  370  396  388 #> [18382,]  370  396  388 #> [18383,]  370  396  388 #> [18384,]  370  396  388 #> [18385,]  370  396  388 #> [18386,]  370  396  388 #> [18387,]  370  396  388 #> [18388,]  370  396  388 #> [18389,]  370  396  388 #> [18390,]  370  396  388 #> [18391,]  370  396  388 #> [18392,]  370  396  388 #> [18393,]  371  396  388 #> [18394,]  370  396  388 #> [18395,]  370  396  388 #> [18396,]  370  396  388 #> [18397,]  370  396  387 #> [18398,]  370  396  388 #> [18399,]  370  396  388 #> [18400,]  370  396  388 #> [18401,]  373  397  389 #> [18402,]  373  397  389 #> [18403,]  373  397  389 #> [18404,]  373  397  389 #> [18405,]  373  397  389 #> [18406,]  373  397  389 #> [18407,]  373  397  389 #> [18408,]  373  397  389 #> [18409,]  373  397  389 #> [18410,]  373  397  389 #> [18411,]  373  397  389 #> [18412,]  372  398  390 #> [18413,]  373  397  389 #> [18414,]  373  397  389 #> [18415,]  372  398  390 #> [18416,]  373  397  389 #> [18417,]  372  398  390 #> [18418,]  373  397  389 #> [18419,]  373  397  389 #> [18420,]  373  397  389 #> [18421,]  373  397  389 #> [18422,]  373  397  389 #> [18423,]  372  398  390 #> [18424,]  373  397  389 #> [18425,]  373  397  389 #> [18426,]  373  397  389 #> [18427,]  373  397  389 #> [18428,]  373  397  389 #> [18429,]  373  397  389 #> [18430,]  373  397  389 #> [18431,]  372  398  390 #> [18432,]  373  397  389 #> [18433,]  373  397  389 #> [18434,]  372  398  390 #> [18435,]  373  397  389 #> [18436,]  373  397  389 #> [18437,]  372  398  390 #> [18438,]  373  397  389 #> [18439,]  373  397  389 #> [18440,]  373  397  389 #> [18441,]  373  397  389 #> [18442,]  372  398  390 #> [18443,]  372  398  390 #> [18444,]  372  398  390 #> [18445,]  373  397  389 #> [18446,]  373  397  389 #> [18447,]  373  397  389 #> [18448,]  372  398  390 #> [18449,]  373  397  389 #> [18450,]  373  397  389 #> [18451,]  373  397  389 #> [18452,]  373  397  389 #> [18453,]  373  397  389 #> [18454,]  373  397  389 #> [18455,]  373  397  389 #> [18456,]  373  397  389 #> [18457,]  373  397  389 #> [18458,]  373  397  389 #> [18459,]  373  397  389 #> [18460,]  373  397  389 #> [18461,]  373  397  389 #> [18462,]  373  397  389 #> [18463,]  372  398  390 #> [18464,]  373  397  389 #> [18465,]  373  397  389 #> [18466,]  373  397  389 #> [18467,]  373  397  389 #> [18468,]  373  397  389 #> [18469,]  373  397  389 #> [18470,]  372  398  390 #> [18471,]  373  397  389 #> [18472,]  373  397  389 #> [18473,]  373  397  389 #> [18474,]  373  397  389 #> [18475,]  372  398  390 #> [18476,]  373  397  389 #> [18477,]  373  397  389 #> [18478,]  372  398  390 #> [18479,]  372  398  390 #> [18480,]  373  397  389 #> [18481,]  372  398  390 #> [18482,]  373  397  389 #> [18483,]  373  397  389 #> [18484,]  373  397  389 #> [18485,]  373  397  389 #> [18486,]  373  397  389 #> [18487,]  373  397  389 #> [18488,]  373  397  389 #> [18489,]  373  397  389 #> [18490,]  373  397  389 #> [18491,]  373  397  389 #> [18492,]  373  397  389 #> [18493,]  373  397  389 #> [18494,]  372  398  390 #> [18495,]  372  398  390 #> [18496,]  373  397  389 #> [18497,]  373  397  389 #> [18498,]  373  397  389 #> [18499,]  373  397  389 #> [18500,]  372  398  390 #> [18501,]  374  400  392 #> [18502,]  374  400  392 #> [18503,]  374  399  391 #> [18504,]  374  400  392 #> [18505,]  374  400  392 #> [18506,]  374  400  392 #> [18507,]  374  399  391 #> [18508,]  374  399  391 #> [18509,]  374  400  392 #> [18510,]  374  400  392 #> [18511,]  374  400  392 #> [18512,]  374  400  392 #> [18513,]  374  400  392 #> [18514,]  374  400  392 #> [18515,]  374  400  392 #> [18516,]  374  400  391 #> [18517,]  374  400  392 #> [18518,]  374  400  392 #> [18519,]  374  400  392 #> [18520,]  374  399  391 #> [18521,]  374  400  392 #> [18522,]  374  400  392 #> [18523,]  374  400  392 #> [18524,]  374  400  391 #> [18525,]  374  399  391 #> [18526,]  374  400  392 #> [18527,]  374  400  392 #> [18528,]  374  400  392 #> [18529,]  374  400  392 #> [18530,]  374  400  392 #> [18531,]  374  400  392 #> [18532,]  374  400  392 #> [18533,]  374  400  392 #> [18534,]  374  400  392 #> [18535,]  374  400  392 #> [18536,]  374  400  392 #> [18537,]  374  400  392 #> [18538,]  374  400  392 #> [18539,]  374  399  391 #> [18540,]  374  400  392 #> [18541,]  374  400  392 #> [18542,]  374  400  392 #> [18543,]  374  400  392 #> [18544,]  374  399  391 #> [18545,]  374  400  392 #> [18546,]  374  399  391 #> [18547,]  374  400  392 #> [18548,]  374  400  392 #> [18549,]  374  399  391 #> [18550,]  374  399  391 #> [18551,]  374  400  392 #> [18552,]  374  400  392 #> [18553,]  374  399  391 #> [18554,]  374  400  392 #> [18555,]  374  399  391 #> [18556,]  374  399  391 #> [18557,]  374  400  392 #> [18558,]  374  400  392 #> [18559,]  374  399  391 #> [18560,]  374  400  392 #> [18561,]  374  400  392 #> [18562,]  374  400  392 #> [18563,]  374  400  392 #> [18564,]  374  400  392 #> [18565,]  374  399  391 #> [18566,]  374  399  391 #> [18567,]  374  400  392 #> [18568,]  374  400  392 #> [18569,]  374  400  392 #> [18570,]  374  399  391 #> [18571,]  374  400  392 #> [18572,]  374  400  391 #> [18573,]  374  400  392 #> [18574,]  374  400  392 #> [18575,]  374  400  392 #> [18576,]  374  400  392 #> [18577,]  374  400  392 #> [18578,]  374  400  392 #> [18579,]  374  400  392 #> [18580,]  374  400  392 #> [18581,]  374  400  392 #> [18582,]  374  400  392 #> [18583,]  374  400  392 #> [18584,]  374  399  391 #> [18585,]  374  400  392 #> [18586,]  374  399  391 #> [18587,]  374  400  392 #> [18588,]  374  400  392 #> [18589,]  374  400  392 #> [18590,]  374  399  391 #> [18591,]  374  400  392 #> [18592,]  374  400  392 #> [18593,]  374  400  392 #> [18594,]  374  400  392 #> [18595,]  374  400  392 #> [18596,]  374  400  392 #> [18597,]  374  400  392 #> [18598,]  374  399  391 #> [18599,]  374  400  392 #> [18600,]  374  399  391 #> [18601,]  375  401  393 #> [18602,]  375  401  393 #> [18603,]  375  401  393 #> [18604,]  375  401  393 #> [18605,]  376  402  394 #> [18606,]  375  401  393 #> [18607,]  375  401  393 #> [18608,]  375  401  393 #> [18609,]  375  401  393 #> [18610,]  375  401  393 #> [18611,]  375  401  393 #> [18612,]  375  401  393 #> [18613,]  375  401  393 #> [18614,]  376  402  394 #> [18615,]  376  402  394 #> [18616,]  375  401  393 #> [18617,]  375  401  393 #> [18618,]  376  402  394 #> [18619,]  375  401  393 #> [18620,]  375  401  393 #> [18621,]  375  401  393 #> [18622,]  375  401  393 #> [18623,]  375  401  393 #> [18624,]  375  401  393 #> [18625,]  375  401  393 #> [18626,]  375  401  393 #> [18627,]  376  402  394 #> [18628,]  375  401  393 #> [18629,]  375  401  393 #> [18630,]  375  401  393 #> [18631,]  375  401  393 #> [18632,]  376  402  394 #> [18633,]  375  401  393 #> [18634,]  375  401  393 #> [18635,]  375  401  393 #> [18636,]  375  401  393 #> [18637,]  375  401  393 #> [18638,]  375  401  393 #> [18639,]  375  401  393 #> [18640,]  375  401  393 #> [18641,]  375  401  393 #> [18642,]  375  401  393 #> [18643,]  375  401  393 #> [18644,]  375  401  393 #> [18645,]  375  401  393 #> [18646,]  375  401  393 #> [18647,]  375  401  393 #> [18648,]  375  401  393 #> [18649,]  375  401  393 #> [18650,]  375  401  393 #> [18651,]  375  401  393 #> [18652,]  375  401  393 #> [18653,]  375  401  393 #> [18654,]  375  401  393 #> [18655,]  375  401  393 #> [18656,]  375  401  393 #> [18657,]  375  401  393 #> [18658,]  375  401  393 #> [18659,]  375  401  393 #> [18660,]  375  401  393 #> [18661,]  375  401  393 #> [18662,]  375  401  393 #> [18663,]  375  401  393 #> [18664,]  375  401  393 #> [18665,]  375  401  393 #> [18666,]  375  401  393 #> [18667,]  375  401  393 #> [18668,]  375  401  393 #> [18669,]  375  401  393 #> [18670,]  375  401  393 #> [18671,]  376  402  394 #> [18672,]  375  401  393 #> [18673,]  375  401  393 #> [18674,]  375  401  393 #> [18675,]  376  402  394 #> [18676,]  375  401  393 #> [18677,]  375  401  393 #> [18678,]  375  401  393 #> [18679,]  375  401  393 #> [18680,]  375  401  393 #> [18681,]  375  401  393 #> [18682,]  375  401  393 #> [18683,]  375  401  393 #> [18684,]  375  401  393 #> [18685,]  375  401  393 #> [18686,]  375  401  393 #> [18687,]  375  401  393 #> [18688,]  375  401  393 #> [18689,]  375  401  393 #> [18690,]  375  401  393 #> [18691,]  376  402  394 #> [18692,]  375  401  393 #> [18693,]  375  401  393 #> [18694,]  375  401  393 #> [18695,]  376  402  394 #> [18696,]  375  401  393 #> [18697,]  375  401  393 #> [18698,]  375  401  393 #> [18699,]  375  401  393 #> [18700,]  376  402  394 #> [18701,]  378  404  396 #> [18702,]  378  404  396 #> [18703,]  377  403  395 #> [18704,]  377  403  395 #> [18705,]  377  403  395 #> [18706,]  377  403  395 #> [18707,]  378  404  396 #> [18708,]  378  404  396 #> [18709,]  377  403  395 #> [18710,]  377  403  395 #> [18711,]  377  403  395 #> [18712,]  378  404  396 #> [18713,]  378  404  396 #> [18714,]  377  403  395 #> [18715,]  378  404  396 #> [18716,]  378  404  396 #> [18717,]  378  404  396 #> [18718,]  378  404  396 #> [18719,]  378  404  396 #> [18720,]  378  404  396 #> [18721,]  377  403  395 #> [18722,]  378  404  396 #> [18723,]  378  404  396 #> [18724,]  377  403  395 #> [18725,]  377  403  395 #> [18726,]  378  404  396 #> [18727,]  378  404  396 #> [18728,]  377  403  395 #> [18729,]  378  404  396 #> [18730,]  378  404  396 #> [18731,]  377  403  395 #> [18732,]  377  403  395 #> [18733,]  378  404  396 #> [18734,]  377  403  395 #> [18735,]  377  403  395 #> [18736,]  378  404  396 #> [18737,]  378  404  396 #> [18738,]  378  404  396 #> [18739,]  377  403  395 #> [18740,]  377  403  395 #> [18741,]  378  404  396 #> [18742,]  377  403  395 #> [18743,]  378  404  396 #> [18744,]  378  404  396 #> [18745,]  378  404  396 #> [18746,]  378  404  396 #> [18747,]  377  403  395 #> [18748,]  377  403  395 #> [18749,]  378  404  396 #> [18750,]  378  404  396 #> [18751,]  378  404  396 #> [18752,]  377  403  395 #> [18753,]  378  404  396 #> [18754,]  377  403  395 #> [18755,]  378  404  396 #> [18756,]  378  404  396 #> [18757,]  377  403  395 #> [18758,]  378  404  396 #> [18759,]  378  404  396 #> [18760,]  378  404  396 #> [18761,]  378  404  396 #> [18762,]  377  403  395 #> [18763,]  378  404  396 #> [18764,]  378  404  396 #> [18765,]  377  403  395 #> [18766,]  378  404  396 #> [18767,]  377  403  395 #> [18768,]  378  404  396 #> [18769,]  378  404  396 #> [18770,]  377  403  395 #> [18771,]  378  404  396 #> [18772,]  377  403  395 #> [18773,]  377  403  395 #> [18774,]  377  403  395 #> [18775,]  378  404  396 #> [18776,]  377  403  395 #> [18777,]  378  404  396 #> [18778,]  378  404  396 #> [18779,]  377  403  395 #> [18780,]  378  404  396 #> [18781,]  378  404  396 #> [18782,]  377  403  395 #> [18783,]  378  404  396 #> [18784,]  378  404  396 #> [18785,]  378  404  396 #> [18786,]  377  403  395 #> [18787,]  378  404  396 #> [18788,]  377  403  395 #> [18789,]  377  403  395 #> [18790,]  378  404  396 #> [18791,]  377  403  395 #> [18792,]  377  403  395 #> [18793,]  378  404  396 #> [18794,]  377  403  395 #> [18795,]  378  404  396 #> [18796,]  378  404  396 #> [18797,]  378  404  396 #> [18798,]  377  403  395 #> [18799,]  378  404  396 #> [18800,]  378  404  396 #> [18801,]  379  405  397 #> [18802,]  379  405  397 #> [18803,]  380  406  398 #> [18804,]  379  405  398 #> [18805,]  379  405  398 #> [18806,]  379  405  397 #> [18807,]  380  406  397 #> [18808,]  380  406  398 #> [18809,]  379  405  398 #> [18810,]  379  405  398 #> [18811,]  379  405  397 #> [18812,]  379  405  398 #> [18813,]  381  406  397 #> [18814,]  379  405  397 #> [18815,]  379  405  397 #> [18816,]  381  406  397 #> [18817,]  381  406  397 #> [18818,]  379  405  398 #> [18819,]  379  405  397 #> [18820,]  380  406  398 #> [18821,]  379  405  397 #> [18822,]  381  406  397 #> [18823,]  379  405  398 #> [18824,]  380  406  398 #> [18825,]  380  406  398 #> [18826,]  379  405  397 #> [18827,]  379  405  397 #> [18828,]  379  405  398 #> [18829,]  379  405  397 #> [18830,]  379  405  398 #> [18831,]  379  405  398 #> [18832,]  379  405  398 #> [18833,]  379  405  397 #> [18834,]  379  405  398 #> [18835,]  379  405  397 #> [18836,]  379  405  398 #> [18837,]  379  405  397 #> [18838,]  379  405  398 #> [18839,]  380  406  398 #> [18840,]  381  406  397 #> [18841,]  379  405  397 #> [18842,]  379  405  398 #> [18843,]  381  406  398 #> [18844,]  380  406  397 #> [18845,]  381  406  398 #> [18846,]  380  406  398 #> [18847,]  381  406  397 #> [18848,]  379  405  398 #> [18849,]  380  406  398 #> [18850,]  380  406  397 #> [18851,]  379  405  398 #> [18852,]  379  405  397 #> [18853,]  380  406  398 #> [18854,]  381  406  398 #> [18855,]  380  406  397 #> [18856,]  380  406  398 #> [18857,]  379  405  398 #> [18858,]  379  405  397 #> [18859,]  380  406  397 #> [18860,]  379  405  398 #> [18861,]  379  405  397 #> [18862,]  379  405  398 #> [18863,]  381  406  398 #> [18864,]  379  405  398 #> [18865,]  380  406  398 #> [18866,]  380  406  398 #> [18867,]  379  405  398 #> [18868,]  379  405  397 #> [18869,]  379  405  397 #> [18870,]  380  406  397 #> [18871,]  379  405  397 #> [18872,]  380  406  398 #> [18873,]  379  405  397 #> [18874,]  379  405  397 #> [18875,]  379  405  397 #> [18876,]  379  405  397 #> [18877,]  381  406  397 #> [18878,]  381  406  398 #> [18879,]  381  406  397 #> [18880,]  379  405  398 #> [18881,]  379  405  397 #> [18882,]  379  405  398 #> [18883,]  379  405  397 #> [18884,]  380  406  397 #> [18885,]  379  405  398 #> [18886,]  380  406  397 #> [18887,]  379  405  397 #> [18888,]  379  405  398 #> [18889,]  381  406  398 #> [18890,]  380  406  397 #> [18891,]  379  405  398 #> [18892,]  379  405  397 #> [18893,]  379  405  397 #> [18894,]  381  406  397 #> [18895,]  379  405  398 #> [18896,]  379  405  397 #> [18897,]  379  405  397 #> [18898,]  380  406  397 #> [18899,]  379  405  397 #> [18900,]  380  406  397 #> [18901,]  382  408  400 #> [18902,]  382  408  400 #> [18903,]  382  407  399 #> [18904,]  382  408  401 #> [18905,]  382  408  400 #> [18906,]  382  408  401 #> [18907,]  382  408  400 #> [18908,]  382  408  400 #> [18909,]  382  408  401 #> [18910,]  382  407  399 #> [18911,]  382  407  399 #> [18912,]  382  408  401 #> [18913,]  382  408  400 #> [18914,]  382  407  399 #> [18915,]  382  408  401 #> [18916,]  382  408  400 #> [18917,]  382  408  400 #> [18918,]  382  408  401 #> [18919,]  382  408  401 #> [18920,]  382  408  400 #> [18921,]  382  408  401 #> [18922,]  382  408  400 #> [18923,]  382  408  400 #> [18924,]  382  408  400 #> [18925,]  382  408  400 #> [18926,]  382  408  401 #> [18927,]  382  408  401 #> [18928,]  382  408  400 #> [18929,]  382  408  400 #> [18930,]  382  408  401 #> [18931,]  382  408  401 #> [18932,]  382  407  399 #> [18933,]  382  408  401 #> [18934,]  382  408  400 #> [18935,]  382  408  400 #> [18936,]  382  408  401 #> [18937,]  382  408  400 #> [18938,]  382  408  401 #> [18939,]  382  408  400 #> [18940,]  382  407  399 #> [18941,]  382  408  401 #> [18942,]  382  408  401 #> [18943,]  382  408  400 #> [18944,]  382  408  400 #> [18945,]  382  408  400 #> [18946,]  382  408  400 #> [18947,]  382  408  400 #> [18948,]  382  407  399 #> [18949,]  382  408  400 #> [18950,]  382  408  400 #> [18951,]  382  408  400 #> [18952,]  382  408  401 #> [18953,]  382  408  400 #> [18954,]  382  408  400 #> [18955,]  382  408  400 #> [18956,]  382  408  400 #> [18957,]  382  408  400 #> [18958,]  382  408  401 #> [18959,]  382  408  400 #> [18960,]  382  408  401 #> [18961,]  382  408  401 #> [18962,]  382  408  401 #> [18963,]  382  408  400 #> [18964,]  382  408  401 #> [18965,]  382  408  400 #> [18966,]  382  408  400 #> [18967,]  382  408  400 #> [18968,]  382  408  401 #> [18969,]  382  408  401 #> [18970,]  382  407  399 #> [18971,]  382  408  400 #> [18972,]  382  408  400 #> [18973,]  382  408  401 #> [18974,]  382  408  401 #> [18975,]  382  408  401 #> [18976,]  382  408  400 #> [18977,]  382  408  400 #> [18978,]  382  408  400 #> [18979,]  382  408  400 #> [18980,]  382  408  400 #> [18981,]  382  408  400 #> [18982,]  382  408  401 #> [18983,]  382  408  400 #> [18984,]  382  408  400 #> [18985,]  382  408  401 #> [18986,]  382  408  400 #> [18987,]  382  408  400 #> [18988,]  382  408  400 #> [18989,]  382  408  400 #> [18990,]  382  408  400 #> [18991,]  382  408  400 #> [18992,]  382  408  401 #> [18993,]  382  408  401 #> [18994,]  382  408  400 #> [18995,]  382  408  400 #> [18996,]  382  408  401 #> [18997,]  382  408  401 #> [18998,]  382  408  400 #> [18999,]  382  408  401 #> [19000,]  382  408  400 #> [19001,]  384  410  402 #> [19002,]  384  410  402 #> [19003,]  384  410  402 #> [19004,]  383  409  402 #> [19005,]  384  410  402 #> [19006,]  384  410  402 #> [19007,]  384  410  402 #> [19008,]  383  409  402 #> [19009,]  383  409  402 #> [19010,]  383  409  402 #> [19011,]  384  410  402 #> [19012,]  384  410  402 #> [19013,]  384  410  402 #> [19014,]  384  410  402 #> [19015,]  384  410  402 #> [19016,]  384  410  402 #> [19017,]  384  410  402 #> [19018,]  383  409  402 #> [19019,]  384  410  402 #> [19020,]  383  409  402 #> [19021,]  384  410  402 #> [19022,]  384  410  402 #> [19023,]  384  410  402 #> [19024,]  384  410  402 #> [19025,]  384  410  402 #> [19026,]  384  410  402 #> [19027,]  384  410  402 #> [19028,]  384  410  402 #> [19029,]  384  410  402 #> [19030,]  383  409  402 #> [19031,]  384  410  402 #> [19032,]  384  410  402 #> [19033,]  384  410  402 #> [19034,]  384  410  402 #> [19035,]  384  410  402 #> [19036,]  384  410  402 #> [19037,]  384  410  402 #> [19038,]  384  410  402 #> [19039,]  383  409  402 #> [19040,]  384  410  402 #> [19041,]  384  410  402 #> [19042,]  384  410  402 #> [19043,]  383  409  402 #> [19044,]  384  410  402 #> [19045,]  383  409  402 #> [19046,]  384  410  402 #> [19047,]  384  410  402 #> [19048,]  384  410  402 #> [19049,]  383  409  402 #> [19050,]  384  410  402 #> [19051,]  383  409  402 #> [19052,]  384  410  402 #> [19053,]  383  409  402 #> [19054,]  384  410  402 #> [19055,]  384  410  402 #> [19056,]  383  409  402 #> [19057,]  384  410  402 #> [19058,]  384  410  402 #> [19059,]  384  410  402 #> [19060,]  383  409  402 #> [19061,]  384  410  402 #> [19062,]  384  410  402 #> [19063,]  384  410  402 #> [19064,]  383  409  402 #> [19065,]  383  409  402 #> [19066,]  383  409  402 #> [19067,]  383  409  402 #> [19068,]  384  410  402 #> [19069,]  384  410  402 #> [19070,]  384  410  402 #> [19071,]  384  410  402 #> [19072,]  384  410  402 #> [19073,]  384  410  402 #> [19074,]  384  410  402 #> [19075,]  384  410  402 #> [19076,]  384  410  402 #> [19077,]  384  410  402 #> [19078,]  383  409  402 #> [19079,]  384  410  402 #> [19080,]  384  410  402 #> [19081,]  384  410  402 #> [19082,]  384  410  402 #> [19083,]  384  410  402 #> [19084,]  384  410  402 #> [19085,]  383  409  402 #> [19086,]  384  410  402 #> [19087,]  384  410  402 #> [19088,]  384  410  402 #> [19089,]  383  409  402 #> [19090,]  384  410  402 #> [19091,]  383  409  402 #> [19092,]  384  410  402 #> [19093,]  384  410  402 #> [19094,]  384  410  402 #> [19095,]  383  409  402 #> [19096,]  384  410  402 #> [19097,]  384  410  402 #> [19098,]  384  410  402 #> [19099,]  384  410  402 #> [19100,]  384  410  402 #> [19101,]  386  412  404 #> [19102,]  385  411  403 #> [19103,]  385  411  403 #> [19104,]  385  411  403 #> [19105,]  386  412  404 #> [19106,]  385  411  403 #> [19107,]  385  411  403 #> [19108,]  385  411  403 #> [19109,]  385  411  403 #> [19110,]  386  412  404 #> [19111,]  386  412  404 #> [19112,]  386  412  404 #> [19113,]  386  412  404 #> [19114,]  386  412  404 #> [19115,]  386  412  404 #> [19116,]  386  412  404 #> [19117,]  386  412  404 #> [19118,]  386  412  404 #> [19119,]  386  412  404 #> [19120,]  385  411  403 #> [19121,]  385  411  403 #> [19122,]  386  412  404 #> [19123,]  385  411  403 #> [19124,]  386  412  404 #> [19125,]  385  411  403 #> [19126,]  386  412  404 #> [19127,]  386  412  404 #> [19128,]  386  412  404 #> [19129,]  385  411  403 #> [19130,]  385  411  403 #> [19131,]  386  412  404 #> [19132,]  386  412  404 #> [19133,]  386  412  404 #> [19134,]  385  411  403 #> [19135,]  385  411  403 #> [19136,]  385  411  403 #> [19137,]  385  411  403 #> [19138,]  386  412  404 #> [19139,]  386  412  404 #> [19140,]  385  411  403 #> [19141,]  385  411  403 #> [19142,]  385  411  403 #> [19143,]  386  412  404 #> [19144,]  385  411  403 #> [19145,]  385  411  403 #> [19146,]  386  412  404 #> [19147,]  386  412  404 #> [19148,]  386  412  404 #> [19149,]  385  411  403 #> [19150,]  385  411  403 #> [19151,]  386  412  404 #> [19152,]  386  412  404 #> [19153,]  385  411  403 #> [19154,]  385  411  403 #> [19155,]  385  411  403 #> [19156,]  385  411  403 #> [19157,]  385  411  403 #> [19158,]  386  412  404 #> [19159,]  386  412  404 #> [19160,]  385  411  403 #> [19161,]  386  412  404 #> [19162,]  385  411  403 #> [19163,]  385  411  403 #> [19164,]  385  411  403 #> [19165,]  385  411  403 #> [19166,]  386  412  404 #> [19167,]  385  411  403 #> [19168,]  386  412  404 #> [19169,]  385  411  403 #> [19170,]  386  412  404 #> [19171,]  386  412  404 #> [19172,]  385  411  403 #> [19173,]  385  411  403 #> [19174,]  385  411  403 #> [19175,]  386  412  404 #> [19176,]  385  411  403 #> [19177,]  386  412  404 #> [19178,]  385  411  403 #> [19179,]  386  412  404 #> [19180,]  385  411  403 #> [19181,]  385  411  403 #> [19182,]  385  411  403 #> [19183,]  386  412  404 #> [19184,]  385  411  403 #> [19185,]  385  411  403 #> [19186,]  385  411  403 #> [19187,]  386  412  404 #> [19188,]  385  411  403 #> [19189,]  385  411  403 #> [19190,]  386  412  404 #> [19191,]  386  412  404 #> [19192,]  386  412  404 #> [19193,]  385  411  403 #> [19194,]  385  411  403 #> [19195,]  386  412  404 #> [19196,]  386  412  404 #> [19197,]  385  411  403 #> [19198,]  385  411  403 #> [19199,]  385  411  403 #> [19200,]  386  412  404 #> [19201,]  387  413  406 #> [19202,]  387  413  406 #> [19203,]  387  413  406 #> [19204,]  387  413  406 #> [19205,]  387  413  406 #> [19206,]  387  413  406 #> [19207,]  387  413  406 #> [19208,]  387  413  406 #> [19209,]  387  413  406 #> [19210,]  387  413  406 #> [19211,]  387  413  406 #> [19212,]  387  413  406 #> [19213,]  387  413  406 #> [19214,]  387  413  406 #> [19215,]  387  413  406 #> [19216,]  387  413  406 #> [19217,]  387  413  406 #> [19218,]  387  413  406 #> [19219,]  388  414  405 #> [19220,]  388  414  405 #> [19221,]  387  413  406 #> [19222,]  388  414  405 #> [19223,]  387  413  406 #> [19224,]  387  413  406 #> [19225,]  387  413  406 #> [19226,]  387  413  406 #> [19227,]  388  414  405 #> [19228,]  387  413  406 #> [19229,]  388  414  405 #> [19230,]  387  413  406 #> [19231,]  387  413  406 #> [19232,]  387  413  406 #> [19233,]  387  413  406 #> [19234,]  387  413  406 #> [19235,]  387  413  406 #> [19236,]  388  414  405 #> [19237,]  387  413  406 #> [19238,]  387  413  406 #> [19239,]  387  413  406 #> [19240,]  387  413  406 #> [19241,]  387  413  406 #> [19242,]  387  413  406 #> [19243,]  387  413  406 #> [19244,]  387  413  406 #> [19245,]  387  413  406 #> [19246,]  387  413  406 #> [19247,]  387  413  406 #> [19248,]  387  413  406 #> [19249,]  387  413  406 #> [19250,]  387  413  406 #> [19251,]  387  413  406 #> [19252,]  387  413  406 #> [19253,]  387  413  406 #> [19254,]  387  413  406 #> [19255,]  387  413  406 #> [19256,]  387  413  406 #> [19257,]  387  413  406 #> [19258,]  388  414  405 #> [19259,]  387  413  406 #> [19260,]  387  413  406 #> [19261,]  387  413  406 #> [19262,]  387  413  406 #> [19263,]  387  413  406 #> [19264,]  388  414  405 #> [19265,]  387  413  406 #> [19266,]  388  414  405 #> [19267,]  387  413  406 #> [19268,]  387  413  406 #> [19269,]  387  413  406 #> [19270,]  387  413  406 #> [19271,]  387  413  406 #> [19272,]  387  413  406 #> [19273,]  387  413  406 #> [19274,]  387  413  406 #> [19275,]  387  413  406 #> [19276,]  387  413  406 #> [19277,]  388  414  405 #> [19278,]  387  413  406 #> [19279,]  387  413  406 #> [19280,]  387  413  406 #> [19281,]  388  414  405 #> [19282,]  387  413  406 #> [19283,]  388  414  405 #> [19284,]  387  413  406 #> [19285,]  387  413  406 #> [19286,]  387  413  406 #> [19287,]  388  414  405 #> [19288,]  387  413  406 #> [19289,]  387  413  406 #> [19290,]  387  413  406 #> [19291,]  387  413  406 #> [19292,]  387  413  406 #> [19293,]  387  413  406 #> [19294,]  387  413  406 #> [19295,]  387  413  406 #> [19296,]  387  413  406 #> [19297,]  388  414  405 #> [19298,]  387  413  406 #> [19299,]  387  413  406 #> [19300,]  388  414  405 #> [19301,]  389  415  407 #> [19302,]  389  415  407 #> [19303,]  389  415  407 #> [19304,]  390  416  408 #> [19305,]  389  415  407 #> [19306,]  389  415  407 #> [19307,]  389  415  407 #> [19308,]  389  415  407 #> [19309,]  389  415  407 #> [19310,]  389  415  407 #> [19311,]  389  415  407 #> [19312,]  389  415  407 #> [19313,]  389  415  407 #> [19314,]  390  416  408 #> [19315,]  389  415  407 #> [19316,]  389  415  407 #> [19317,]  389  415  407 #> [19318,]  389  415  407 #> [19319,]  390  416  408 #> [19320,]  389  415  407 #> [19321,]  389  415  407 #> [19322,]  389  415  407 #> [19323,]  389  415  407 #> [19324,]  389  415  407 #> [19325,]  389  415  407 #> [19326,]  389  415  407 #> [19327,]  390  416  408 #> [19328,]  389  415  407 #> [19329,]  389  415  407 #> [19330,]  389  415  407 #> [19331,]  389  415  407 #> [19332,]  389  415  407 #> [19333,]  389  415  407 #> [19334,]  389  415  407 #> [19335,]  389  415  407 #> [19336,]  389  415  407 #> [19337,]  389  415  407 #> [19338,]  389  415  407 #> [19339,]  389  415  407 #> [19340,]  389  415  407 #> [19341,]  390  416  408 #> [19342,]  389  415  407 #> [19343,]  389  415  407 #> [19344,]  389  415  407 #> [19345,]  389  415  407 #> [19346,]  389  415  407 #> [19347,]  389  415  407 #> [19348,]  390  416  408 #> [19349,]  389  415  407 #> [19350,]  389  415  407 #> [19351,]  389  415  407 #> [19352,]  389  415  407 #> [19353,]  389  415  407 #> [19354,]  389  415  407 #> [19355,]  389  415  407 #> [19356,]  389  415  407 #> [19357,]  389  415  407 #> [19358,]  389  415  407 #> [19359,]  389  415  407 #> [19360,]  389  415  407 #> [19361,]  390  416  408 #> [19362,]  389  415  407 #> [19363,]  389  415  407 #> [19364,]  389  415  407 #> [19365,]  389  415  407 #> [19366,]  389  415  407 #> [19367,]  389  415  407 #> [19368,]  389  415  407 #> [19369,]  390  416  408 #> [19370,]  389  415  407 #> [19371,]  389  415  407 #> [19372,]  389  415  407 #> [19373,]  389  415  407 #> [19374,]  389  415  407 #> [19375,]  389  415  407 #> [19376,]  389  415  407 #> [19377,]  389  415  407 #> [19378,]  389  415  407 #> [19379,]  389  415  407 #> [19380,]  389  415  407 #> [19381,]  389  415  407 #> [19382,]  390  416  408 #> [19383,]  389  415  407 #> [19384,]  389  415  407 #> [19385,]  389  415  407 #> [19386,]  389  415  407 #> [19387,]  389  415  407 #> [19388,]  389  415  407 #> [19389,]  389  415  407 #> [19390,]  389  415  407 #> [19391,]  389  415  407 #> [19392,]  390  416  408 #> [19393,]  390  416  408 #> [19394,]  389  415  407 #> [19395,]  389  415  407 #> [19396,]  390  416  408 #> [19397,]  390  416  408 #> [19398,]  389  415  407 #> [19399,]  389  415  407 #> [19400,]  389  415  407 #> [19401,]  392  418  409 #> [19402,]  391  417  410 #> [19403,]  392  418  409 #> [19404,]  392  418  409 #> [19405,]  392  418  409 #> [19406,]  391  417  410 #> [19407,]  392  418  409 #> [19408,]  392  418  409 #> [19409,]  392  418  409 #> [19410,]  392  418  409 #> [19411,]  391  417  410 #> [19412,]  391  417  410 #> [19413,]  392  418  409 #> [19414,]  392  418  409 #> [19415,]  391  417  410 #> [19416,]  392  418  409 #> [19417,]  391  417  410 #> [19418,]  391  417  410 #> [19419,]  391  417  410 #> [19420,]  392  418  409 #> [19421,]  391  417  410 #> [19422,]  392  418  409 #> [19423,]  391  417  410 #> [19424,]  392  418  409 #> [19425,]  392  418  409 #> [19426,]  391  417  410 #> [19427,]  392  418  409 #> [19428,]  392  418  409 #> [19429,]  391  417  410 #> [19430,]  391  417  410 #> [19431,]  391  417  410 #> [19432,]  391  417  410 #> [19433,]  392  418  409 #> [19434,]  391  417  410 #> [19435,]  391  417  410 #> [19436,]  392  418  409 #> [19437,]  391  417  410 #> [19438,]  392  418  409 #> [19439,]  392  418  409 #> [19440,]  392  418  409 #> [19441,]  392  418  409 #> [19442,]  391  417  410 #> [19443,]  391  417  410 #> [19444,]  391  417  410 #> [19445,]  392  418  409 #> [19446,]  391  417  410 #> [19447,]  391  417  410 #> [19448,]  391  417  410 #> [19449,]  392  418  409 #> [19450,]  392  418  409 #> [19451,]  391  417  410 #> [19452,]  392  418  409 #> [19453,]  392  418  409 #> [19454,]  392  418  409 #> [19455,]  392  418  409 #> [19456,]  391  417  410 #> [19457,]  392  418  409 #> [19458,]  392  418  409 #> [19459,]  392  418  409 #> [19460,]  391  417  410 #> [19461,]  391  417  410 #> [19462,]  391  417  410 #> [19463,]  391  417  410 #> [19464,]  391  417  410 #> [19465,]  391  417  410 #> [19466,]  391  417  410 #> [19467,]  392  418  409 #> [19468,]  391  417  410 #> [19469,]  391  417  410 #> [19470,]  391  417  410 #> [19471,]  392  418  409 #> [19472,]  392  418  409 #> [19473,]  392  418  409 #> [19474,]  392  418  409 #> [19475,]  391  417  410 #> [19476,]  392  418  409 #> [19477,]  392  418  409 #> [19478,]  391  417  410 #> [19479,]  391  417  410 #> [19480,]  392  418  409 #> [19481,]  391  417  410 #> [19482,]  391  417  410 #> [19483,]  392  418  409 #> [19484,]  392  418  409 #> [19485,]  392  418  409 #> [19486,]  392  418  409 #> [19487,]  392  418  409 #> [19488,]  392  418  409 #> [19489,]  391  417  410 #> [19490,]  392  418  409 #> [19491,]  392  418  409 #> [19492,]  391  417  410 #> [19493,]  391  417  410 #> [19494,]  391  417  410 #> [19495,]  391  417  410 #> [19496,]  391  417  410 #> [19497,]  391  417  410 #> [19498,]  392  418  409 #> [19499,]  392  418  409 #> [19500,]  391  417  410 #> [19501,]  394  420  413 #> [19502,]  393  419  411 #> [19503,]  393  419  411 #> [19504,]  393  419  411 #> [19505,]  393  419  411 #> [19506,]  393  419  411 #> [19507,]  393  419  411 #> [19508,]  393  419  411 #> [19509,]  393  419  411 #> [19510,]  393  419  411 #> [19511,]  393  419  411 #> [19512,]  393  419  411 #> [19513,]  393  419  411 #> [19514,]  394  420  413 #> [19515,]  394  420  413 #> [19516,]  394  420  412 #> [19517,]  393  419  411 #> [19518,]  393  419  411 #> [19519,]  393  419  411 #> [19520,]  393  419  411 #> [19521,]  393  419  411 #> [19522,]  393  419  411 #> [19523,]  393  419  411 #> [19524,]  393  419  411 #> [19525,]  393  419  411 #> [19526,]  393  419  411 #> [19527,]  393  419  411 #> [19528,]  393  419  411 #> [19529,]  393  419  411 #> [19530,]  393  419  411 #> [19531,]  393  419  411 #> [19532,]  393  419  411 #> [19533,]  393  419  411 #> [19534,]  393  419  411 #> [19535,]  393  419  411 #> [19536,]  393  419  411 #> [19537,]  393  419  411 #> [19538,]  393  419  411 #> [19539,]  393  419  411 #> [19540,]  393  419  411 #> [19541,]  394  420  413 #> [19542,]  393  419  411 #> [19543,]  393  419  411 #> [19544,]  394  420  412 #> [19545,]  393  419  411 #> [19546,]  393  419  411 #> [19547,]  393  419  411 #> [19548,]  393  419  411 #> [19549,]  393  419  411 #> [19550,]  394  420  412 #> [19551,]  393  419  411 #> [19552,]  393  419  411 #> [19553,]  393  419  411 #> [19554,]  393  419  411 #> [19555,]  393  419  411 #> [19556,]  393  419  411 #> [19557,]  393  419  411 #> [19558,]  393  419  411 #> [19559,]  394  420  412 #> [19560,]  393  419  411 #> [19561,]  393  419  411 #> [19562,]  393  419  411 #> [19563,]  393  419  411 #> [19564,]  393  419  411 #> [19565,]  393  419  411 #> [19566,]  393  419  411 #> [19567,]  393  419  411 #> [19568,]  393  419  411 #> [19569,]  393  419  411 #> [19570,]  394  420  412 #> [19571,]  393  419  411 #> [19572,]  393  419  411 #> [19573,]  394  420  413 #> [19574,]  393  419  411 #> [19575,]  393  419  411 #> [19576,]  393  419  411 #> [19577,]  393  419  411 #> [19578,]  393  419  411 #> [19579,]  393  419  411 #> [19580,]  393  419  411 #> [19581,]  393  419  411 #> [19582,]  393  419  411 #> [19583,]  393  419  411 #> [19584,]  393  419  411 #> [19585,]  393  419  411 #> [19586,]  393  419  411 #> [19587,]  393  419  411 #> [19588,]  393  419  411 #> [19589,]  393  419  411 #> [19590,]  393  419  411 #> [19591,]  393  419  411 #> [19592,]  393  419  411 #> [19593,]  393  419  411 #> [19594,]  393  419  411 #> [19595,]  393  419  411 #> [19596,]  394  420  413 #> [19597,]  393  419  411 #> [19598,]  393  419  411 #> [19599,]  394  420  413 #> [19600,]  393  419  411 #> [19601,]  396  422  415 #> [19602,]  396  422  415 #> [19603,]  395  421  414 #> [19604,]  396  422  415 #> [19605,]  396  422  415 #> [19606,]  396  422  415 #> [19607,]  396  422  415 #> [19608,]  396  422  415 #> [19609,]  396  422  415 #> [19610,]  395  421  414 #> [19611,]  395  421  414 #> [19612,]  396  422  415 #> [19613,]  396  422  415 #> [19614,]  395  421  414 #> [19615,]  396  422  415 #> [19616,]  396  422  415 #> [19617,]  396  422  415 #> [19618,]  396  422  415 #> [19619,]  396  422  415 #> [19620,]  396  422  415 #> [19621,]  395  421  414 #> [19622,]  396  422  415 #> [19623,]  396  422  415 #> [19624,]  396  422  415 #> [19625,]  396  422  415 #> [19626,]  396  422  415 #> [19627,]  396  422  415 #> [19628,]  395  421  414 #> [19629,]  396  422  415 #> [19630,]  396  422  415 #> [19631,]  395  421  414 #> [19632,]  395  421  414 #> [19633,]  396  422  415 #> [19634,]  395  421  414 #> [19635,]  395  421  414 #> [19636,]  396  422  415 #> [19637,]  396  422  415 #> [19638,]  396  422  415 #> [19639,]  396  422  415 #> [19640,]  395  421  414 #> [19641,]  396  422  415 #> [19642,]  396  422  415 #> [19643,]  396  422  415 #> [19644,]  396  422  415 #> [19645,]  396  422  415 #> [19646,]  396  422  415 #> [19647,]  396  422  415 #> [19648,]  395  421  414 #> [19649,]  396  422  415 #> [19650,]  396  422  415 #> [19651,]  396  422  415 #> [19652,]  396  422  415 #> [19653,]  396  422  415 #> [19654,]  396  422  415 #> [19655,]  396  422  415 #> [19656,]  396  422  415 #> [19657,]  396  422  415 #> [19658,]  396  422  415 #> [19659,]  396  422  415 #> [19660,]  396  422  415 #> [19661,]  396  422  415 #> [19662,]  396  422  415 #> [19663,]  396  422  415 #> [19664,]  396  422  415 #> [19665,]  396  422  415 #> [19666,]  396  422  415 #> [19667,]  396  422  415 #> [19668,]  396  422  415 #> [19669,]  396  422  415 #> [19670,]  395  421  414 #> [19671,]  396  422  415 #> [19672,]  396  422  415 #> [19673,]  396  422  415 #> [19674,]  395  421  414 #> [19675,]  396  422  415 #> [19676,]  396  422  415 #> [19677,]  396  422  415 #> [19678,]  396  422  415 #> [19679,]  396  422  415 #> [19680,]  396  422  415 #> [19681,]  396  422  415 #> [19682,]  395  421  414 #> [19683,]  396  422  415 #> [19684,]  396  422  415 #> [19685,]  396  422  415 #> [19686,]  396  422  415 #> [19687,]  396  422  415 #> [19688,]  396  422  415 #> [19689,]  396  422  415 #> [19690,]  396  422  415 #> [19691,]  396  422  415 #> [19692,]  396  422  415 #> [19693,]  396  422  415 #> [19694,]  396  422  415 #> [19695,]  396  422  415 #> [19696,]  396  422  415 #> [19697,]  396  422  415 #> [19698,]  395  421  414 #> [19699,]  396  422  415 #> [19700,]  396  422  415 #> [19701,]  398  424  417 #> [19702,]  397  423  416 #> [19703,]  397  423  416 #> [19704,]  397  424  417 #> [19705,]  397  424  417 #> [19706,]  397  424  417 #> [19707,]  397  423  416 #> [19708,]  397  424  417 #> [19709,]  398  424  417 #> [19710,]  397  423  416 #> [19711,]  398  424  417 #> [19712,]  397  424  417 #> [19713,]  398  423  416 #> [19714,]  397  424  417 #> [19715,]  397  424  417 #> [19716,]  397  423  416 #> [19717,]  398  423  416 #> [19718,]  398  423  416 #> [19719,]  397  423  416 #> [19720,]  398  424  417 #> [19721,]  397  423  416 #> [19722,]  397  423  416 #> [19723,]  397  423  416 #> [19724,]  397  423  416 #> [19725,]  397  423  416 #> [19726,]  397  424  417 #> [19727,]  398  424  417 #> [19728,]  398  424  417 #> [19729,]  398  423  416 #> [19730,]  397  423  416 #> [19731,]  397  423  416 #> [19732,]  397  423  416 #> [19733,]  398  424  417 #> [19734,]  397  423  416 #> [19735,]  397  423  416 #> [19736,]  398  423  416 #> [19737,]  397  423  416 #> [19738,]  398  424  417 #> [19739,]  398  423  416 #> [19740,]  397  423  416 #> [19741,]  397  424  417 #> [19742,]  398  424  417 #> [19743,]  397  424  417 #> [19744,]  397  423  416 #> [19745,]  397  424  417 #> [19746,]  397  424  417 #> [19747,]  397  423  416 #> [19748,]  397  423  416 #> [19749,]  397  423  416 #> [19750,]  397  424  417 #> [19751,]  398  424  417 #> [19752,]  397  424  417 #> [19753,]  398  424  417 #> [19754,]  398  423  416 #> [19755,]  397  424  417 #> [19756,]  398  424  417 #> [19757,]  397  424  417 #> [19758,]  398  424  417 #> [19759,]  397  423  416 #> [19760,]  397  424  417 #> [19761,]  397  424  417 #> [19762,]  398  423  416 #> [19763,]  397  424  417 #> [19764,]  397  424  417 #> [19765,]  398  424  417 #> [19766,]  398  424  417 #> [19767,]  397  424  417 #> [19768,]  397  424  417 #> [19769,]  397  424  417 #> [19770,]  397  423  416 #> [19771,]  397  424  417 #> [19772,]  397  424  417 #> [19773,]  397  424  417 #> [19774,]  397  424  417 #> [19775,]  397  424  417 #> [19776,]  397  424  417 #> [19777,]  398  423  416 #> [19778,]  397  424  417 #> [19779,]  398  423  416 #> [19780,]  397  423  416 #> [19781,]  397  424  417 #> [19782,]  398  424  417 #> [19783,]  398  423  416 #> [19784,]  398  424  417 #> [19785,]  398  423  416 #> [19786,]  397  423  416 #> [19787,]  398  424  417 #> [19788,]  397  424  417 #> [19789,]  398  424  417 #> [19790,]  397  424  417 #> [19791,]  398  424  417 #> [19792,]  397  424  417 #> [19793,]  398  423  416 #> [19794,]  398  424  417 #> [19795,]  397  423  416 #> [19796,]  397  424  417 #> [19797,]  397  424  417 #> [19798,]  397  423  416 #> [19799,]  397  424  417 #> [19800,]  397  423  416 #> [19801,]  400  426  419 #> [19802,]  400  426  419 #> [19803,]  400  426  418 #> [19804,]  399  425  419 #> [19805,]  400  426  419 #> [19806,]  400  426  419 #> [19807,]  400  426  419 #> [19808,]  399  425  419 #> [19809,]  399  425  419 #> [19810,]  399  425  418 #> [19811,]  400  426  418 #> [19812,]  400  426  419 #> [19813,]  400  426  419 #> [19814,]  400  426  418 #> [19815,]  400  426  419 #> [19816,]  400  426  419 #> [19817,]  400  426  419 #> [19818,]  399  425  419 #> [19819,]  400  426  419 #> [19820,]  399  425  419 #> [19821,]  400  426  419 #> [19822,]  400  426  419 #> [19823,]  400  426  419 #> [19824,]  400  426  419 #> [19825,]  400  426  419 #> [19826,]  400  426  419 #> [19827,]  400  426  419 #> [19828,]  400  426  419 #> [19829,]  400  426  419 #> [19830,]  399  425  419 #> [19831,]  400  426  419 #> [19832,]  400  426  418 #> [19833,]  400  426  419 #> [19834,]  400  426  419 #> [19835,]  400  426  419 #> [19836,]  400  426  419 #> [19837,]  400  426  419 #> [19838,]  400  426  419 #> [19839,]  399  425  419 #> [19840,]  400  426  418 #> [19841,]  400  426  419 #> [19842,]  400  426  419 #> [19843,]  399  425  419 #> [19844,]  400  426  419 #> [19845,]  399  425  419 #> [19846,]  400  426  419 #> [19847,]  400  426  419 #> [19848,]  400  426  418 #> [19849,]  399  425  419 #> [19850,]  400  426  419 #> [19851,]  399  425  419 #> [19852,]  400  426  419 #> [19853,]  399  425  419 #> [19854,]  400  426  419 #> [19855,]  400  426  419 #> [19856,]  399  425  419 #> [19857,]  400  426  419 #> [19858,]  400  426  419 #> [19859,]  400  426  419 #> [19860,]  399  425  419 #> [19861,]  400  426  419 #> [19862,]  400  426  419 #> [19863,]  400  426  419 #> [19864,]  399  425  419 #> [19865,]  399  425  419 #> [19866,]  399  425  419 #> [19867,]  399  425  419 #> [19868,]  400  426  419 #> [19869,]  400  426  419 #> [19870,]  400  426  418 #> [19871,]  400  426  419 #> [19872,]  400  426  419 #> [19873,]  400  426  419 #> [19874,]  400  426  419 #> [19875,]  400  426  419 #> [19876,]  400  426  419 #> [19877,]  400  426  419 #> [19878,]  399  425  419 #> [19879,]  400  426  419 #> [19880,]  400  426  419 #> [19881,]  400  426  419 #> [19882,]  400  426  419 #> [19883,]  400  426  419 #> [19884,]  400  426  419 #> [19885,]  399  425  419 #> [19886,]  400  426  419 #> [19887,]  400  426  419 #> [19888,]  400  426  419 #> [19889,]  399  425  419 #> [19890,]  400  426  419 #> [19891,]  399  425  419 #> [19892,]  400  426  419 #> [19893,]  400  426  419 #> [19894,]  400  426  419 #> [19895,]  399  425  419 #> [19896,]  400  426  419 #> [19897,]  400  426  419 #> [19898,]  400  426  419 #> [19899,]  400  426  419 #> [19900,]  400  426  419 #> [19901,]  401  427  420 #> [19902,]  402  428  421 #> [19903,]  401  427  420 #> [19904,]  402  428  421 #> [19905,]  402  428  421 #> [19906,]  401  427  420 #> [19907,]  402  428  421 #> [19908,]  402  428  421 #> [19909,]  402  428  421 #> [19910,]  402  428  421 #> [19911,]  401  427  420 #> [19912,]  402  428  421 #> [19913,]  402  428  421 #> [19914,]  401  427  420 #> [19915,]  402  428  421 #> [19916,]  401  427  420 #> [19917,]  402  428  421 #> [19918,]  402  428  421 #> [19919,]  401  427  420 #> [19920,]  402  428  421 #> [19921,]  402  428  421 #> [19922,]  402  428  421 #> [19923,]  402  428  421 #> [19924,]  402  428  421 #> [19925,]  402  428  421 #> [19926,]  401  427  420 #> [19927,]  402  428  421 #> [19928,]  401  427  420 #> [19929,]  402  428  421 #> [19930,]  402  428  421 #> [19931,]  402  428  421 #> [19932,]  402  428  421 #> [19933,]  402  428  421 #> [19934,]  401  427  420 #> [19935,]  401  427  420 #> [19936,]  402  428  421 #> [19937,]  401  427  420 #> [19938,]  401  427  420 #> [19939,]  402  428  421 #> [19940,]  402  428  421 #> [19941,]  402  428  421 #> [19942,]  401  427  420 #> [19943,]  402  428  421 #> [19944,]  402  428  421 #> [19945,]  401  427  420 #> [19946,]  402  428  421 #> [19947,]  402  428  421 #> [19948,]  402  428  421 #> [19949,]  401  427  420 #> [19950,]  402  428  421 #> [19951,]  402  428  421 #> [19952,]  401  427  420 #> [19953,]  402  428  421 #> [19954,]  402  428  421 #> [19955,]  402  428  421 #> [19956,]  402  428  421 #> [19957,]  402  428  421 #> [19958,]  402  428  421 #> [19959,]  401  427  420 #> [19960,]  402  428  421 #> [19961,]  402  428  421 #> [19962,]  402  428  421 #> [19963,]  402  428  421 #> [19964,]  401  427  420 #> [19965,]  401  427  420 #> [19966,]  402  428  421 #> [19967,]  402  428  421 #> [19968,]  401  427  420 #> [19969,]  401  427  420 #> [19970,]  402  428  421 #> [19971,]  402  428  421 #> [19972,]  401  427  420 #> [19973,]  401  427  420 #> [19974,]  402  428  421 #> [19975,]  402  428  421 #> [19976,]  402  428  421 #> [19977,]  401  427  420 #> [19978,]  402  428  421 #> [19979,]  401  427  420 #> [19980,]  402  428  421 #> [19981,]  402  428  421 #> [19982,]  402  428  421 #> [19983,]  402  428  421 #> [19984,]  402  428  421 #> [19985,]  402  428  421 #> [19986,]  402  428  421 #> [19987,]  402  428  421 #> [19988,]  402  428  421 #> [19989,]  401  427  420 #> [19990,]  402  428  421 #> [19991,]  402  428  421 #> [19992,]  402  428  421 #> [19993,]  402  428  421 #> [19994,]  401  427  420 #> [19995,]  402  428  421 #> [19996,]  401  427  420 #> [19997,]  401  427  420 #> [19998,]  402  428  421 #> [19999,]  402  428  421 #> [20000,]  401  427  420"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Return forest's leaf node scale parameters. leaf scale sampled forest question, throws error leaf model stochastic scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"computeForestLeafVariances(model_object, forest_type, forest_inds = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"model_object Object type bartmodel bcfmodel corresponding BART / BCF model least one forest sample forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Vector size length(forest_inds) leaf scale parameter requested forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafVariances(bart_model, \"mean\") #>  [1] 0.004524088 0.005353401 0.005827537 0.006045289 0.006041955 0.006195079 #>  [7] 0.007107577 0.006630711 0.006463900 0.007232629 computeForestLeafVariances(bart_model, \"mean\", 0) #> [1] 0.004524088 computeForestLeafVariances(bart_model, \"mean\", c(1,3,5)) #> [1] 0.005353401 0.006045289 0.006195079"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Compute return largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"computeForestMaxLeafIndex(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute max leaf indices. provided, function return max leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Vector containing largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestMaxLeafIndex(bart_model, X, \"mean\") #>  [1] 391 403 419 422 432 436 431 428 434 437 computeForestMaxLeafIndex(bart_model, X, \"mean\", 0) #> [1] 391 computeForestMaxLeafIndex(bart_model, X, \"mean\", c(1,3,9)) #> [1] 403 422 437"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"Convert persistent aspects covariate preprocessor (-memory) C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"convertPreprocessorToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"wrapper around -memory C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Convert list (-memory) JSON representations BART model single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"createBARTModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- list(saveBARTModelToJson(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BART models single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"createBARTModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string_list <- list(saveBARTModelToJsonString(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJsonString(bart_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Convert (-memory) JSON representation BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"createBARTModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"json_object Object type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model) bart_model_roundtrip <- createBARTModelFromJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Convert JSON file containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"createBARTModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) bart_model_roundtrip <- createBARTModelFromJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Convert JSON string containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"createBARTModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJsonString(bart_model) bart_model_roundtrip <- createBARTModelFromJsonString(bart_json) y_hat_mean_roundtrip <- rowMeans(predict(bart_model_roundtrip, X_train)$y_hat) plot(rowMeans(bart_model$y_hat_train), y_hat_mean_roundtrip,       xlab = \"original\", ylab = \"roundtrip\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"createBCFModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_list <- list(saveBCFModelToJson(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJson(bcf_json_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"createBCFModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_string_list <- list(saveBCFModelToJsonString(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJsonString(bcf_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Convert (-memory) JSON representation BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"createBCFModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"json_object Object type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) bcf_json <- saveBCFModelToJson(bcf_model) bcf_model_roundtrip <- createBCFModelFromJson(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Convert JSON file containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"createBCFModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\") # bcf_model_roundtrip <- createBCFModelFromJsonFile(\"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Convert JSON string containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"createBCFModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json <- saveBCFModelToJsonString(bcf_model) # bcf_model_roundtrip <- createBCFModelFromJsonString(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new (empty) C++ Json object — createCppJson","title":"Create a new (empty) C++ Json object — createCppJson","text":"Create new (empty) C++ Json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"createCppJson()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new (empty) C++ Json object — createCppJson","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json file — createCppJsonFile","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"Create C++ Json object Json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"createCppJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"json_filename Name file read. Must end .json.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) tmpjson <- tempfile(fileext = \".json\") example_json$save_file(file.path(tmpjson)) example_json_roundtrip <- createCppJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json string — createCppJsonString","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"Create C++ Json object Json string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"createCppJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) example_json_string <- example_json$return_json_string() example_json_roundtrip <- createCppJsonString(example_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R class that wraps a C++ random number generator — createCppRNG","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"Create R class wraps C++ random number generator","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"createCppRNG(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"CppRng object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"rng <- createCppRNG(1234) rng <- createCppRNG()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest — createForest","title":"Create a forest — createForest","text":"Create forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest — createForest","text":"","code":"createForest(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest — createForest","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest — createForest","text":"Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest — createForest","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest dataset object — createForestDataset","title":"Create a forest dataset object — createForestDataset","text":"Create forest dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest dataset object — createForestDataset","text":"","code":"createForestDataset(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest dataset object — createForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest dataset object — createForestDataset","text":"ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest dataset object — createForestDataset","text":"","code":"covariate_matrix <- matrix(runif(10*100), ncol = 10) basis_matrix <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) forest_dataset <- createForestDataset(covariate_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model object — createForestModel","title":"Create a forest model object — createForestModel","text":"Create forest model object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model object — createForestModel","text":"","code":"createForestModel(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model object — createForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree ensemble mean model. Setting -1 enforce depth limits trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model object — createForestModel","text":"ForestModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model object — createForestModel","text":"","code":"num_trees <- 100 n <- 100 p <- 10 alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a container of forest samples — createForestSamples","title":"Create a container of forest samples — createForestSamples","text":"Create container forest samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a container of forest samples — createForestSamples","text":"","code":"createForestSamples(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a container of forest samples — createForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a container of forest samples — createForestSamples","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a container of forest samples — createForestSamples","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an outcome object — createOutcome","title":"Create an outcome object — createOutcome","text":"Create outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an outcome object — createOutcome","text":"","code":"createOutcome(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an outcome object — createOutcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an outcome object — createOutcome","text":"Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an outcome object — createOutcome","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) outcome <- createOutcome(y)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"createPreprocessorFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"json_object -memory wrapper around JSON C++ object containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJson(preprocessor_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"createPreprocessorFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"json_string -memory JSON string containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJsonString(preprocessor_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectSamples object — createRandomEffectSamples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"Create RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"createRandomEffectSamples(num_components, num_groups, random_effects_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random effects dataset object — createRandomEffectsDataset","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"Create random effects dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"createRandomEffectsDataset(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"rfx_group_ids <- sample(1:2, size = 100, replace = TRUE) rfx_basis <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsModel object — createRandomEffectsModel","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"Create RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsTracker object — createRandomEffectsTracker","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"Create RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"createRandomEffectsTracker(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"# S3 method for class 'bartmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"object Object type bartmodel containing draws BART model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) snr <- 3 group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) E_y <- f_XW + rfx_term y <- E_y + rnorm(n, 0, 1)*(sd(E_y)/snr) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- group_ids[test_inds] rfx_group_ids_train <- group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     rfx_group_ids_train = rfx_group_ids_train, rfx_group_ids_test = rfx_group_ids_test,                     rfx_basis_train = rfx_basis_train, rfx_basis_test = rfx_basis_test,                     num_gfr = 100, num_burnin = 0, num_mcmc = 100) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) rfx_samples <- getRandomEffectSamples(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"Generic function extracting random effect samples model object (BCF, BART, etc...)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"object Fitted model object extract random effects ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"List random effect samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"Combine multiple JSON model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"loadForestContainerCombinedJson(json_object_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"json_object_list List objects class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) mean_forest <- loadForestContainerCombinedJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"loadForestContainerCombinedJsonString(json_string_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"json_string_list List strings parse objects type CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) mean_forest <- loadForestContainerCombinedJsonString(bart_json_string, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of forest samples from json — loadForestContainerJson","title":"Load a container of forest samples from json — loadForestContainerJson","text":"Load container forest samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"loadForestContainerJson(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of forest samples from json — loadForestContainerJson","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of forest samples from json — loadForestContainerJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) mean_forest <- loadForestContainerJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"Combine multiple JSON model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"loadRandomEffectSamplesCombinedJson(json_object_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"json_object_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"loadRandomEffectSamplesCombinedJsonString(json_string_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"json_string_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJsonString(bart_json_string, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"Load container random effect samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"loadRandomEffectSamplesJson(json_object, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"json_object Object class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) rfx_samples <- loadRandomEffectSamplesJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a scalar from json — loadScalarJson","title":"Load a scalar from json — loadScalarJson","text":"Load scalar json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a scalar from json — loadScalarJson","text":"","code":"loadScalarJson(json_object, json_scalar_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a scalar from json — loadScalarJson","text":"json_object Object class CppJson json_scalar_label Label referring particular scalar / string value (.e. \"num_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a scalar from json — loadScalarJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a scalar from json — loadScalarJson","text":"","code":"example_scalar <- 5.4 example_json <- createCppJson() example_json$add_scalar(\"myscalar\", example_scalar) roundtrip_scalar <- loadScalarJson(example_json, \"myscalar\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a vector from json — loadVectorJson","title":"Load a vector from json — loadVectorJson","text":"Load vector json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a vector from json — loadVectorJson","text":"","code":"loadVectorJson(json_object, json_vector_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a vector from json — loadVectorJson","text":"json_object Object class CppJson json_vector_label Label referring particular vector (.e. \"sigma2_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a vector from json — loadVectorJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a vector from json — loadVectorJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) roundtrip_vec <- loadVectorJson(example_json, \"myvec\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BART model on new data — predict.bartmodel","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"Predict sampled BART model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"# S3 method for class 'bartmodel' predict(   object,   X,   leaf_basis = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"object Object type bart containing draws regression forest associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. leaf_basis (Optional) Bases used prediction (e.g. dot product leaf values). Default: NULL. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"List prediction matrices. model random effects, list one element – predictions forest. model random effects, list three elements – forest predictions, random effects predictions, sum (y_hat).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) y_hat_test <- predict(bart_model, X_test)$y_hat plot(rowMeans(y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BCF model on new data — predict.bcfmodel","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"Predict sampled BCF model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' predict(   object,   X,   Z,   propensity = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. Z Treatments used prediction. propensity (Optional) Propensities used prediction. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"List 3-5 nrow(X) object$num_samples matrices: prognostic function estimates, treatment effect estimates, (optionally) random effects predictions, (optionally) variance forest predictions, outcome predictions.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train) preds <- predict(bcf_model, X_test, Z_test, pi_test) plot(rowMeans(preds$mu_hat), mu_test, xlab = \"predicted\",      ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(preds$tau_hat), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"preprocessPredictionData(input_data, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"input_data Covariates, provided either dataframe matrix metadata List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocessed data categorical variables appropriately handled","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"cov_df <- data.frame(x1 = 1:5, x2 = 5:1, x3 = 6:10) metadata <- list(num_ordered_cat_vars = 0, num_unordered_cat_vars = 0,                   num_numeric_vars = 3, numeric_vars = c(\"x1\", \"x2\", \"x3\")) X_preprocessed <- preprocessPredictionData(cov_df, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"preprocessTrainData(input_data)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"input_data Covariates, provided either dataframe matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"List preprocessed (unmodified) data details number type variable, unique categories associated categorical variables, vector feature types needed calls BART BCF.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) X <- preprocess_list$X"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"Reset active forest, either specific forest ForestContainer ensemble single-node (.e. root) trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"resetActiveForest(active_forest, forest_samples = NULL, forest_num = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"active_forest Current active forest forest_samples (Optional) Container forest samples re-initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees. forest_num (Optional) Index forest samples initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples$add_forest_with_constant_leaves(0.0) forest_samples$add_numeric_split_tree(0, 0, 0, 0, 0.5, -1.0, 1.0) forest_samples$add_numeric_split_tree(0, 1, 0, 1, 0.75, 3.4, 0.75) active_forest$set_root_leaves(0.1) resetActiveForest(active_forest, forest_samples, 0) resetActiveForest(active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"Re-initialize forest model (tracking data structures) specific forest ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"resetForestModel(forest_model, forest, dataset, residual, is_mean_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"forest_model Forest model tracking data structures forest Forest re-initialize forest model dataset Training dataset object residual Residual also updated is_mean_model Whether model updated conditional mean model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"n <- 100 p <- 10 num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) leaf_model <- 0 sigma2 <- 1.0 leaf_scale <- as.matrix(1.0) variable_weights <- rep(1/p, p) a_forest <- 1 b_forest <- 1 cutpoint_grid_size <- 100 X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) y <- -5 + 10*(X[,1] > 0.5) + rnorm(n) outcome <- createOutcome(y) rng <- createCppRNG(1234) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth) active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_model$sample_one_iteration(     forest_dataset, outcome, forest_samples, active_forest,      rng, feature_types, leaf_model, leaf_scale, variable_weights,      a_forest, b_forest, sigma2, cutpoint_grid_size, keep_forest = TRUE,      gfr = FALSE, pre_initialized = TRUE ) resetActiveForest(active_forest, forest_samples, 0) resetForestModel(forest_model, active_forest, forest_dataset, outcome, TRUE)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"Reset RandomEffectsModel object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"resetRandomEffectsModel(rfx_model, rfx_samples, sample_num, sigma_alpha_init)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"rfx_model Object type RandomEffectsModel. rfx_samples Object type RandomEffectSamples. sample_num Index sample stored rfx_samples reset state random effects model. Zero-indexed, resetting based first sample require setting sample_num = 0. sigma_alpha_init Initial value \"working parameter\" scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"Reset RandomEffectsTracker object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"resetRandomEffectsTracker(   rfx_tracker,   rfx_model,   rfx_dataset,   residual,   rfx_samples )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome. rfx_samples Object type RandomEffectSamples.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0) resetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome, rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object to its ","title":"Reset a RandomEffectsModel object to its ","text":"Reset RandomEffectsModel object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object to its ","text":"","code":"rootResetRandomEffectsModel(   rfx_model,   alpha_init,   xi_init,   sigma_alpha_init,   sigma_xi_init,   sigma_xi_shape,   sigma_xi_scale )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object to its ","text":"rfx_model Object type RandomEffectsModel. alpha_init Initial value \"working parameter\". xi_init Initial value \"group parameters\". sigma_alpha_init Initial value \"working parameter\" scale parameter. sigma_xi_init Initial value \"group parameters\" scale parameter. sigma_xi_shape Shape parameter inverse gamma variance model group parameters. sigma_xi_scale Scale parameter inverse gamma variance model group parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object to its ","title":"Reset a RandomEffectsTracker object to its ","text":"Reset RandomEffectsTracker object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object to its ","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale) rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"Sample one iteration (inverse gamma) global variance model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"sampleGlobalErrorVarianceOneIteration(residual, dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"residual Outcome class dataset ForestDataset class rng C++ random number generator Global variance shape parameter b Global variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) y_std <- (y-mean(y))/sd(y) forest_dataset <- createForestDataset(X) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 sigma2 <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"Sample one iteration leaf parameter variance model (univariate basis constant leaf!)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"sampleLeafVarianceOneIteration(forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"forest C++ forest rng C++ random number generator Leaf variance shape parameter b Leaf variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 tau <- sampleLeafVarianceOneIteration(active_forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Convert persistent aspects BART model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"saveBARTModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"Convert persistent aspects BART model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"saveBARTModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"object Object type bartmodel containing draws BART model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"Convert persistent aspects BART model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"saveBARTModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string <- saveBARTModelToJsonString(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Convert persistent aspects BCF model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"saveBCFModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # bcf_json <- saveBCFModelToJson(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"Convert persistent aspects BCF model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"saveBCFModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"Convert persistent aspects BCF model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"saveBCFModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonString(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"Convert persistent aspects covariate preprocessor (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"savePreprocessorToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Stochastic tree ensembles (XBART BART) supervised learning causal inference.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Maintainer: Drew Herren drewherrenopensource@gmail.com (ORCID) Authors: Richard Hahn Jared Murray Carlos Carvalho Jingyu contributors: stochtree contributors [copyright holder]","code":""},{"path":"https://stochastictree.github.io/stochtree-r/news/index.html","id":"stochtree-010","dir":"Changelog","previous_headings":"","what":"stochtree 0.1.0","title":"stochtree 0.1.0","text":"Initial CRAN submission.","code":""}]
