[{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Step Function","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple step function.","code":"# Generate the data n <- 500 p_x <- 10 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,     general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect BART samples burnin.","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model additive random effect structure.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) noise_sd <- sd(f_XW) / snr y <- f_XW + rfx_term + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, rfx_group_ids_train = rfx_group_ids_train,      rfx_basis_train = rfx_basis_train, X_test = X_test, leaf_basis_test = leaf_basis_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6|X3−1|τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 \\lvert X_3 - 1 \\rvert\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.97"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.95"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-2-linear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.93"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.73"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-3-linear-outcome-model-homogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=3g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 3\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau1(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-4-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)={−1.1 ifX1>X20.9 ifX1≤X2τ(X)=11+exp(−X3)+X210π(X)=Φ(μ(X))Z∼Bernoulli(π(X))X1,X2,X3∼N(0,1)X4∼N(X2,1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= \\begin{cases} -1.1 & \\text{ } X_1 > X_2\\\\ 0.9 & \\text{ } X_1 \\leq X_2 \\end{cases}\\\\ \\tau(X) &= \\frac{1}{1+\\exp(-X_3)} + \\frac{X_2}{10}\\\\ \\pi(X) &= \\Phi\\left(\\mu(X)\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right)\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim N\\left(X_2,1\\right)\\\\ \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n,x2,1) X <- cbind(x1,x2,x3,x4) p <- ncol(X) mu <- function(x) {-1*(x[,1]>(x[,2])) + 1*(x[,1]<(x[,2])) - 0.1} tau <- function(x) {1/(1 + exp(-x[,3])) + x[,2]/10} mu_x <- mu(X) tau_x <- tau(X) pi_x <- pnorm(mu_x) Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x sigma <- diff(range(mu_x + tau_x*pi))/8 y <- E_XZ + sigma*rnorm(n) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.99"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-5-nonlinear-outcome-model-heterogeneous-treatment-effect-with-additive-random-effects","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","title":"Causal Machine Learning in StochTree","text":"augment simulated example Demo 1 additive random effect structure show bcf() function can estimate incorporate effects forest sampling procedure.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw augmented “demo 1” DGP","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"simulate “warm-start” model (running root-MCMC BART random effects simply matter modifying code snippet setting num_gfr <- 0 num_mcmc > 0). Inspect BART samples initialized XBART warm-start      Examine test set interval coverage clear causal inference much difficult presence strong covariate-dependent prognostic effects strong group-level random effects. sense, proper prior calibration three μ\\mu, τ\\tau random effects models crucial.","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$rfx_preds_test), rfx_term_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Random effects terms\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ-rfx_term) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.92"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-6-nonlinear-outcome-model-heterogeneous-treatment-effect-using-different-features-in-the-prognostic-and-treatment-forests","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","title":"Causal Machine Learning in StochTree","text":", consider case might prefer use subset covariates treatment effect forest. might want ? Well, many cases plausible covariates (example age, income, etc…) influence outcome interest causal problem, moderate treatment effect. case, ’d need include variables prognostic forest deconfounding don’t necessarily need include treatment effect forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-5","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw modified “demo 1” DGP","code":"mu <- function(x) {1+g(x)+x[,1]*x[,3]-x[,2]+3*x[,3]} tau <- function(x) {1 - 2*x[,1] + 2*x[,2] + 1*x[,1]*x[,2]} n <- 500 snr <- 4 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) x6 <- rnorm(n) x7 <- rnorm(n) x8 <- rnorm(n) x9 <- rnorm(n) x10 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) p <- ncol(X) mu_x <- mu(X) tau_x <- tau(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.5 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect burned-samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.78 test_tau_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_tau_mean - tau_test)^2)) #> [1] 1.783012 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.257205"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.848 test_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_mean - tau_test)^2)) #> [1] 1.394172 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.075441"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.84 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.719198 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.98095"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.868 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.363053 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.855422"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect-1","dir":"Articles","previous_headings":"Continuous Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+2X1−𝟙(X2<0)×4+𝟙(X2≥0)×4+3(|X3|−2π)τ(X)=1+2X4X1,X2,X3,X4,X5∼N(0,1)U∼Uniform(0,1)π(X)=μ(X)−12+4(U−12)Z∼𝒩(π(X),1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + 2 X_1 - \\mathbb{1}\\left(X_2 < 0\\right) \\times 4 + \\mathbb{1}\\left(X_2 \\geq 0\\right) \\times 4 + 3 \\left(\\lvert X_3 \\rvert - \\sqrt{\\frac{2}{\\pi}} \\right)\\\\ \\tau(X) &= 1 + 2 X_4\\\\ X_1,X_2,X_3,X_4,X_5 &\\sim N\\left(0,1\\right)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ \\pi(X) &= \\frac{\\mu(X) - 1}{2} + 4 \\left(U - \\frac{1}{2}\\right)\\\\ Z &\\sim \\mathcal{N}\\left(\\pi(X), 1\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-6","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- 1 + 2*x1 - 4*(x2 < 0) + 4*(x2 >= 0) + 3*(abs(x3) - sqrt(2/pi)) tau_x <- 1 + 2*x4 u <- runif(n) pi_x <- ((mu_x-1)/4) + 4*(u-0.5) Z <- pi_x + rnorm(n,0,1) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-5","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-4","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 2000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.9"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Custom Sampling Routines in StochTree","text":"functions bart() bcf() provide simple performant interfaces supervised learning / causal inference, stochtree also offers access many “low-level” data structures typically implemented C++. low-level interface designed performance even simplicity — rather intent provide “prototype” interface C++ code doesn’t require modifying C++. illustrate prototype interface might useful, consider classic BART algorithm:    INPUT: yy, XX, τ\\tau, ν\\nu, λ\\lambda, α\\alpha, β\\beta    OUTPUT: mm samples decision forest kk trees global variance parameter σ2\\sigma^2    Initialize σ2\\sigma^2 via default data-dependent calibration exercise    Initialize “forest 0” kk trees single root node, referring tree jj’s prediction vector f0,jf_{0,j}    Compute residual r=y−∑j=1kf0,jr = y - \\sum_{j=1}^k f_{0,j}    iiIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Initialize forest ii forest −1i-1       jjIN {1,…,k}\\left\\{1,\\dots,k\\right\\}:          Add predictions tree jj residual: r=r+fi,jr = r + f_{,j}          Update tree jj via Metropolis-Hastings rr XX data tree priors depending (τ\\tau, σ2\\sigma^2, α\\alpha, β\\beta)          Sample leaf node parameters tree jj via Gibbs (leaf node prior N(0,τ)N\\left(0,\\tau\\right))          Subtract (updated) predictions tree jj residual: r=r−fi,jr = r - f_{,j}       Sample σ2\\sigma^2 via Gibbs (prior IG(ν/2,νλ/2)IG(\\nu/2,\\nu\\lambda/2)) algorithm conceptually simple, much core computation carried low-level languages C C++ tree data structure. result, changes algorithm, supporting heteroskedasticity (Pratola et al. (2020)), categorical outcomes (Murray (2021)) causal effect estimation (Hahn, Murray, Carvalho (2020)) require modifying low-level code. prototype interface exposes core components loop R level, thus making possible interchange C++ computation steps like “update tree jj via Metropolis-Hastings” R computation custom variance model, user-specified additive mean model components, . begin, load stochtree package","code":"library(stochtree)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) y <- f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size <- 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1     leaf_dimension <- p_W } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0     leaf_dimension <- 1 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale) } # Forest predictions preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via “grow--root” (Hahn (2023))   Inspect BART samples obtained “warm-starting”","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-2-supervised-learning-with-additive-random-effects","dir":"Articles","previous_headings":"","what":"Demo 2: Supervised Learning with Additive Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example add simple “random effects” structure: every observation either group 1 group 2 random group intercept (simulated quite strong, underscoring need random effects modeling).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- c(-5, 5) rfx_basis <- rep(1, n) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rfx_coefs[group_ids] * rfx_basis y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1) xi_init <- matrix(c(1,1),1,2) sigma_alpha_init <- matrix(c(1),1,1) sigma_xi_init <- matrix(c(1),1,1) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F)  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, current_sigma2, rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, current_sigma2, rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-3-supervised-learning-with-additive-multi-component-random-effects","dir":"Articles","previous_headings":"","what":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example, case allowing random intercept regression coefficient (pre-specified basis) group (1 2).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1,0) xi_init <- matrix(c(1,0,1,0),2,2) sigma_alpha_init <- diag(1,2,2) sigma_xi_init <- diag(1,2,2) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F)  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2)          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]     forest_model_config$update_leaf_model_scale(leaf_prior_scale)          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-4-supervised-learning-with-additive-linear-model","dir":"Articles","previous_headings":"","what":"Demo 4: Supervised Learning with Additive Linear Model","title":"Custom Sampling Routines in StochTree","text":"Instead group random effects, show combine stochastic forest additive linear regression term. model corresponds broadly y=Wβ+f(X)+ϵf(X)∼BART(c,d)β∼𝒩(0,τ)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= W\\beta + f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}(c,d)\\\\ \\beta &\\sim \\mathcal{N}(0, \\tau)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}(,b) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) beta_W <- c(5) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) lm_term <- W %*% beta_W y <- lm_term + f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha_bart <- 0.9 beta_bart <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init <- 1. current_sigma2 <- global_variance_init tau_init <- 1/num_trees leaf_prior_scale <- as.matrix(ifelse(p_W >= 1, diag(tau_init, p_W), diag(tau_init, 1))) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- F feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) beta_tau <- 20 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_config <- createForestModelConfig(     feature_types = feature_types, num_trees = num_trees, num_features = p_X,      num_observations = n, variable_weights = var_weights, leaf_dimension = leaf_dimension,      alpha = alpha, beta = beta, min_samples_leaf = min_samples_leaf, max_depth = max_depth,      leaf_model_type = outcome_model_type, leaf_model_scale = leaf_prior_scale,      cutpoint_grid_size = cutpoint_grid_size ) global_model_config <- createGlobalModelConfig(global_error_variance = global_variance_init) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Initialize the leaves of each tree in the forest active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, outcome_model_type, mean(resid)) active_forest$adjust_residual(forest_dataset, outcome, forest_model, ifelse(outcome_model_type==1, T, F), F) num_warmstart <- 20 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc beta_init <- 0 global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) beta_samples <- c(beta_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = T     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2) } for (i in (num_warmstart+1):num_samples) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng,          forest_model_config, global_model_config, keep_forest = T, gfr = F     )          # Sample global variance parameter     current_sigma2 <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )     global_var_samples[i+1] <- current_sigma2     global_model_config$update_global_error_variance(current_sigma2) } # Linear model predictions lm_preds <- (sapply(1:num_samples, function(x) W[,1]*beta_samples[x+1]))*y_std  # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Overall predictions preds <- forest_preds + lm_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std  # Regression parameter beta_samples <- beta_samples*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model    Inspect BART samples obtained “warm-starting” plus additive random effects model    Now inspect samples BART forest alone (without considering additive linear model predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(beta_samples[1:num_warmstart], ylab=\"beta\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(beta_samples[(num_warmstart+1):num_samples], ylab=\"beta\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-5-causal-inference","dir":"Articles","previous_headings":"","what":"Demo 5: Causal Inference","title":"Custom Sampling Routines in StochTree","text":"show implement Bayesian Causal Forest (BCF) model Hahn, Murray, Carvalho (2020) using stochtree’s prototype API, including demoing non-trivial sampling step done R level.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"background","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Background","title":"Custom Sampling Routines in StochTree","text":"supervised learning case previous demo conceptually simple, motivate causal effect estimation task additional notation. Let yy refer continuous outcome interest, ZZ refer binary treatment, XX set covariates may influence YY, ZZ, . XX exhaustive set covariates influence ZZ YY, can specific YY terms causal model (see example Pearl (2009)) Y=F(Z,X,ϵY)\\begin{equation*} \\begin{aligned} Y &= F(Z, X, \\epsilon_Y) \\end{aligned} \\end{equation*} ϵY\\epsilon_Y outcome specific random noise FF function generates YY (many cases, FF can thought inverse CDF conditional XX ZZ). “potential outcomes” (see Imbens Rubin (2015)) can recovered Y1=F(1,X,ϵY)Y^1 = F(1, X, \\epsilon_Y) Y0=F(0,X,ϵY)Y^0 = F(0, X, \\epsilon_Y). causal outcome model can decomposed “mean” “error” terms Y=μ(X)+Zτ(X)+[η(X)+Zδ(X)]μ(X)=𝔼ϵY[F(0,X,ϵY)]τ(X)=𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]η(X)=F(0,X,ϵY)−𝔼ϵY[F(0,X,ϵY)]δ(X)=F(1,X,ϵY)−F(0,X,ϵY)−𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]\\begin{equation*} \\begin{aligned} Y &= \\mu(X) + Z\\tau(X) + \\left[\\eta(X) + Z\\delta(X)\\right]\\\\ \\mu(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\tau(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right]\\\\ \\eta(X) &= F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\delta(X) &= F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right] \\end{aligned} \\end{equation*} τ(X)\\tau(X) precisely conditional average treatment effect (CATE) estimand. Unfortunately, functional form FF unavailable analysis, τ(X)\\tau(X) derived. flexible, regularized nonparametrics enter picture, aim estimate μ(X)\\mu(X) τ(X)\\tau(X) data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"Demo 5: Causal Inference > Background","what":"Bayesian Causal Forest (BCF)","title":"Custom Sampling Routines in StochTree","text":"BCF estimates μ(X)\\mu(X) τ(X)\\tau(X) using separate BART forests term. Furthermore, rather rely common implicit coding ZZ 0 control observations 1 treated observations, consider coding control observations parameter b0b_0 treated observations parameter b1b_1. Placing N(0,1/2)N(0,1/2) prior bzb_z, essentially redefines outcome model y=μ(X)+τ(X)f(Z)+ϵf(Z)=b0(1−Z)+b1Zϵ∼N(0,σ2)b0,b1∼N(0,1/2)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) f(Z) + \\epsilon\\\\ f(Z) &= b_0(1-Z) + b_1 Z\\\\ \\epsilon &\\sim N\\left(0, \\sigma^2\\right)\\\\ b_0, b_1 &\\sim N\\left(0, 1/2\\right) \\end{aligned} \\end{equation*} Updating bzb_z requires additional Gibbs step, derive . Conditioning sampled forests μ\\mu τ\\tau, essentially regressing y−μ(Z)y - \\mu(Z) [(1−Z)τ(X),Zτ(X)]\\left[(1-Z)\\tau(X), Z\\tau(X)\\right] closed form posterior b0∣y,X,μ,τ∼N(syτ,0sττ,0+2σ2,σ2sττ,0+2σ2)b1∣y,X,μ,τ∼N(syτ,1sττ,1+2σ2,σ2sττ,1+2σ2)\\begin{equation*} \\begin{aligned} b_0 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,0}}{s_{\\tau\\tau,0} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,0} + 2\\sigma^2}\\right)\\\\ b_1 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,1}}{s_{\\tau\\tau,1} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,1} + 2\\sigma^2}\\right) \\end{aligned} \\end{equation*} syτ,z=∑:Zi=z(yi−μ(Xi))τ(Xi)s_{y\\tau,z} = \\sum_{: Z_i = z} (y_i - \\mu(X_i))\\tau(X_i) sττ,z=∑:Zi=zτ(Xi)τ(Xi)s_{\\tau\\tau,z} = \\sum_{: Z_i = z} \\tau(X_i)\\tau(X_i).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"simulated causal DGP mirrors nonlinear, heterogeneous treatment effect DGP presented Hahn, Murray, Carvalho (2020).","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Prepare run sampler (now must specify initial values b0b_0 b1b_1, choose -1/2 1/2 instead 0 1). Initialize R-level access C++ classes needed sample model Run grow--root sampler “warm-start” BART, also updating adaptive coding parameter b0b_0 b1b_1 Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"# Mu forest alpha_mu <- 0.95 beta_mu <- 2.0 min_samples_leaf_mu <- 5 max_depth_mu <- 10 num_trees_mu <- 250 cutpoint_grid_size_mu = 100 tau_init_mu = 1/num_trees_mu leaf_prior_scale_mu = matrix(c(tau_init_mu), ncol = 1) a_leaf_mu <- 3. b_leaf_mu <- var(resid)/(num_trees_mu) leaf_regression_mu <- F sigma_leaf_mu <- var(resid)/(num_trees_mu) current_leaf_scale_mu <- as.matrix(sigma_leaf_mu)  # Tau forest alpha_tau <- 0.25 beta_tau <- 3.0 min_samples_leaf_tau <- 5 max_depth_tau <- 10 num_trees_tau <- 50 cutpoint_grid_size_tau = 100 a_leaf_tau <- 3. b_leaf_tau <- var(resid)/(2*num_trees_tau) leaf_regression_tau <- T sigma_leaf_tau <- var(resid)/(2*num_trees_tau) current_leaf_scale_tau <- as.matrix(sigma_leaf_tau)  # Common parameters nu <- 3 sigma2hat <- (sigma(lm(resid~X)))^2 quantile_cutoff <- 0.9 if (is.null(lambda)) {     lambda <- (sigma2hat*qgamma(1-quantile_cutoff,nu))/nu } sigma2 <- sigma2hat current_sigma2 <- sigma2 # Sampling composition num_gfr <- 20 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc  # Sigma^2 samples global_var_samples <- rep(0, num_samples)  # Adaptive coding parameter samples b_0_samples <- rep(0, num_samples) b_1_samples <- rep(0, num_samples) b_0 <- -0.5 b_1 <- 0.5 current_b_0 <- b_0 current_b_1 <- b_1 tau_basis <- (1-Z)*current_b_0 + Z*current_b_1 # Data X_mu <- cbind(X, pi_x) X_tau <- X feature_types <- c(0,0,0,1,1) feature_types_mu <- as.integer(c(feature_types,0)) feature_types_tau <- as.integer(feature_types) variable_weights_mu = rep(1/ncol(X_mu), ncol(X_mu)) variable_weights_tau = rep(1/ncol(X_tau), ncol(X_tau)) forest_dataset_mu <- createForestDataset(X_mu) forest_dataset_tau <- createForestDataset(X_tau, tau_basis) outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures global_model_config <- createGlobalModelConfig(global_error_variance = current_sigma2) forest_model_config_mu <- createForestModelConfig(     feature_types = feature_types_mu, num_trees = num_trees_mu, num_features = ncol(X_mu),      num_observations = nrow(X_mu), variable_weights = variable_weights_mu, leaf_dimension = 1,      alpha = alpha_mu, beta = beta_mu, min_samples_leaf = min_samples_leaf_mu, max_depth = max_depth_mu,      leaf_model_type = 0, leaf_model_scale = current_leaf_scale_mu, cutpoint_grid_size = cutpoint_grid_size ) forest_model_mu <- createForestModel(forest_dataset_mu, forest_model_config_mu, global_model_config) forest_model_config_tau <- createForestModelConfig(     feature_types = feature_types_tau, num_trees = num_trees_tau, num_features = ncol(X_tau),      num_observations = nrow(X_tau), variable_weights = variable_weights_tau, leaf_dimension = 1,      alpha = alpha_tau, beta = beta_tau, min_samples_leaf = min_samples_leaf_tau, max_depth = max_depth_tau,      leaf_model_type = 1, leaf_model_scale = current_leaf_scale_tau,      cutpoint_grid_size = cutpoint_grid_size ) forest_model_tau <- createForestModel(forest_dataset_tau, forest_model_config_tau, global_model_config)  # Container of forest samples forest_samples_mu <- createForestSamples(num_trees_mu, 1, T) active_forest_mu <- createForest(num_trees_mu, 1, T) forest_samples_tau <- createForestSamples(num_trees_tau, 1, F) active_forest_tau <- createForest(num_trees_tau, 1, F)  # Initialize the leaves of each tree in the prognostic forest active_forest_mu$prepare_for_sampler(forest_dataset_mu, outcome, forest_model_mu, 0, mean(resid)) active_forest_mu$adjust_residual(forest_dataset_mu, outcome, forest_model_mu, F, F)  # Initialize the leaves of each tree in the treatment effect forest active_forest_tau$prepare_for_sampler(forest_dataset_tau, outcome, forest_model_tau, 1, 0.) active_forest_tau$adjust_residual(forest_dataset_tau, outcome, forest_model_tau, T, F) if (num_gfr > 0){     for (i in 1:num_gfr) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              forest_model_config_mu, global_model_config, keep_forest = T, gfr = T         )                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              forest_model_config_tau, global_model_config, keep_forest = T, gfr = T         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_tau, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)     } } if (num_burnin + num_mcmc > 0) {     for (i in (num_gfr+1):num_samples) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              forest_model_config_mu, global_model_config, keep_forest = T, gfr = F         )                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              forest_model_config_tau, global_model_config, keep_forest = T, gfr = F         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         current_sigma2 <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_tau, rng, nu, lambda         )         global_var_samples[i] <- current_sigma2         global_model_config$update_global_error_variance(current_sigma2)     } } # Forest predictions mu_hat <- forest_samples_mu$predict(forest_dataset_mu)*y_std + y_bar tau_hat_raw <- forest_samples_tau$predict_raw(forest_dataset_tau) tau_hat <- t(t(tau_hat_raw) * (b_1_samples - b_0_samples))*y_std y_hat <- mu_hat + tau_hat * as.numeric(Z)  # Global error variance sigma2_samples <- global_var_samples*(y_std^2)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect XBART results    Inspect warm start BART results    Inspect “adaptive coding” parameters b0b_0 b1b_1.","code":"plot(sigma2_samples[1:num_gfr], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,1:num_gfr]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,1:num_gfr]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,1:num_gfr]) - tau_x)^2) #> [1] 0.2867908 plot(sigma2_samples[(num_gfr+1):num_samples], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,(num_gfr+1):num_samples]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,(num_gfr+1):num_samples]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,(num_gfr+1):num_samples]) - tau_x)^2) #> [1] 0.2897139 plot(b_0_samples, col = \"blue\", ylab = \"Coding parameter draws\",       ylim = c(min(min(b_0_samples), min(b_1_samples)), max(max(b_0_samples), max(b_1_samples)))) points(b_1_samples, col = \"orange\") legend(\"topleft\", legend = c(\"b_0\", \"b_1\"), col = c(\"blue\", \"orange\"), pch = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Kernel Methods from Tree Ensembles in StochTree","text":"trained tree ensemble strong --sample performance admits natural motivation “distance” two samples: shared leaf membership. number leaves ensemble 1 ss (, tree 1 3 leaves, reserves numbers 1 - 3, turn tree 2 5 leaves, reserves numbers 4 - 8 label leaves, ). dataset nn observations, construct matrix WW follows:    Initialize WW matrix zeroes nn rows many columns leaves ensemble    Let s = 0    jjIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Let num_leaves number leaves tree jj       iiIN {1,…,n}\\left\\{1,\\dots,n\\right\\}:          Let k leaf tree jj maps observation ii          Set element Wi,k+s=1W_{,k+s} = 1       Let s = s + num_leaves sparse matrix WW matrix representation basis predictions ensemble (.e. integrating leaf parameters just analyzing leaf indices). ensemble mm trees, can determine proportion trees map observation leaf computing WWT/mW W^T / m. can form basis kernel function used Gaussian process regression, demonstrate . begin, load stochtree package tgp package serve point reference.","code":"library(stochtree) library(tgp) library(MASS) library(Matrix) library(mvtnorm)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-1-univariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Univariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"begin simulated example tgp package (Gramacy Taddy (2010)). data generating process (DGP) non-stationary single numeric covariate. define training set test set evaluate various approaches modeling sample outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data X_train <- seq(0,20,length=100) X_test <- seq(0,20,length=99) y_train <- (sin(pi*X_train/5) + 0.2*cos(4*pi*X_train/5)) * (X_train <= 9.6) lin_train <- X_train>9.6;  y_train[lin_train] <- -1 + X_train[lin_train]/10 y_train <- y_train + rnorm(length(y_train), sd=0.1) y_test <- (sin(pi*X_test/5) + 0.2*cos(4*pi*X_test/5)) * (X_test <= 9.6) lin_test <- X_test>9.6;  y_test[lin_test] <- -1 + X_test[lin_test]/10  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 0.0466081"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) colnames(X_train) <- colnames(X_test) <- \"x1\" mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 0.09223108"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-2-multivariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 2: Multivariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"proceed simulated “Friedman” dataset, implemented tgp.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data, add many \"noise variables\" n <- 100 friedman.df <- friedman.1.data(n=n) train_inds <- sort(sample(1:n, floor(0.8*n), replace = FALSE)) test_inds <- (1:n)[!((1:n) %in% train_inds)] X <- as.matrix(friedman.df)[,1:10] X <- cbind(X, matrix(runif(n*10), ncol = 10)) y <- as.matrix(friedman.df)[,12] + rnorm(n,0,1)*(sd(as.matrix(friedman.df)[,11])/2) X_train <- X[train_inds,] X_test <- X[test_inds,] y_train <- y[train_inds] y_test <- y[test_inds]  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 5.023593"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE use case BART kernel classical kriging perhaps unclear without empirical investigation, see later vignette kernel approach can beneficial causal inference applications.","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 5.98301"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean relatively simple covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 20 a_0 <- 1.5 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean complex covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_trees <- 20 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data (relatively simple) covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X2≥0 X2<0.25−2X2≥0.25 X2<0.52X2≥0.5 X2<0.756X2≥0.75 X2<1σ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data complex covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X4X2≥0 X2<0.25−2X4X2≥0.25 X2<0.52X4X2≥0.5 X2<0.756X4X2≥0.75 X2<1σ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6X_4 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2X_4 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2X_4 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6X_4 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6*X[,4]) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2*X[,4]) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2*X[,4]) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6*X[,4]) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-1-bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"","what":"Demo 1: Bayesian Causal Forest (BCF)","title":"Model Serialization in StochTree","text":"BCF models initially sampled constructed using bcf() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw modified version data generating process defined Hahn, Murray, Carvalho (2020). Sample BCF model.","code":"# Generate synthetic data n <- 1000 snr <- 2 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      mu_forest_params = mu_forest_params, tau_forest_params = tau_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BCF model disk.","code":"saveBCFModelToJsonFile(bcf_model, \"bcf.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BCF model disk. Check predictions align original model.","code":"bcf_model_reload <- createBCFModelFromJsonFile(\"bcf.json\") bcf_preds_reload <- predict(bcf_model_reload, X_train, Z_train, pi_train, rfx_group_ids_train, rfx_basis_train) plot(rowMeans(bcf_model$mu_hat_train), rowMeans(bcf_preds_reload$mu_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Prognostic forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$tau_hat_train), rowMeans(bcf_preds_reload$tau_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Treatment forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$y_hat_train), rowMeans(bcf_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Overall outcome\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-2-bart","dir":"Articles","previous_headings":"","what":"Demo 2: BART","title":"Model Serialization in StochTree","text":"BART models initially sampled constructed using bart() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw relatively straightforward heteroskedastic supervised learning DGP. Sample BART model.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 100,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BART model disk.","code":"saveBARTModelToJsonFile(bart_model, \"bart.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BART model disk. Check predictions align original model.","code":"bart_model_reload <- createBARTModelFromJsonFile(\"bart.json\") bart_preds_reload <- predict(bart_model_reload, X_train) plot(rowMeans(bart_model$y_hat_train), rowMeans(bart_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Mean Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bart_model$sigma_x_hat_train), rowMeans(bart_preds_reload$variance_forest_predictions),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Variance Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Mixing MCMC sampler perennial concern complex Bayesian models, BART exception. common way address concerns run multiple independent “chains” MCMC sampler, chain gets stuck different region posterior, combined samples attain better coverage full posterior. idea works classic “-root” MCMC sampler Chipman, George, McCulloch (2010), key insight Hahn (2023) XBART algorithm may used warm-start initialize multiple chains BART MCMC sampler. Operationally, two approaches implementation (setting num_gfr > 0 warm-start initialization desired), vignette demonstrate run multi-chain sampler sequentially parallel. begin, load stochtree necessary packages","code":"library(stochtree) library(foreach) library(doParallel) #> Loading required package: iterators #> Loading required package: parallel"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"data-simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Data Simulation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-sequentially","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains Sequentially","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Define high-level parameters, including number chains run number samples per chain. run 4 independent chains 5 warm-start iterations 100 MCMC iterations . Run sampler, storing resulting BART objects list Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare original ŷ\\hat{y} values","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 bart_models <- list() general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) for (i in 1:num_chains) {     bart_models[[i]] <- stochtree::bart(         X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, X_test = X_test,          leaf_basis_test = leaf_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,          general_params = general_params, mean_forest_params = mean_forest_params     ) } json_string_list <- list() for (i in 1:num_chains) {     json_string_list[[i]] <- saveBARTModelToJsonString(bart_models[[i]]) } combined_bart <- createBARTModelFromCombinedJsonString(json_string_list) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(bart_models[[i]]$y_hat_test),           rowMeans(yhat_combined[,inds_start:inds_end]),          xlab = \"original\", ylab = \"deserialized\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"use high-level parameters sequential demo. order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params   )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } #> Warning: executing %dopar% sequentially: no parallel backend registered stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"warmstarting-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Warmstarting Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"example, ran multiple parallel chains MCMC sampler starting “root” forest. Consider instead “warmstart” approach Hahn (2023), forests sampled using fast “grow--root” (GFR) algorithm several MCMC chains run using different GFR forests. use high-level parameters parallel demo. First, sample model using grow--root algorithm main R session several iterations (use forests see independent parallel chains moment). order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) xbart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = 0, num_mcmc = 0,      general_params = general_params, mean_forest_params = mean_forest_params ) xbart_model_string <- stochtree::saveBARTModelToJsonString(xbart_model) ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   bart_params <- list(sample_sigma_global = T, sample_sigma_leaf = T,                        num_trees_mean = num_trees, random_seed = random_seed)   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(       X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,        X_test = X_test, leaf_basis_test = leaf_basis_test,        num_gfr = 0, num_burnin = num_burnin, num_mcmc = num_mcmc,        general_params = general_params, mean_forest_params = mean_forest_params,        previous_model_json = xbart_model_string, previous_model_warmstart_sample_num = num_gfr - i + 1,    )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"“classic” BART model Chipman, George, McCulloch (2010) y=f(X)+ϵf(X)∼BART(α,β)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}\\left(\\alpha, \\beta\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}\\left(,b\\right) \\end{aligned} \\end{equation*} semiparametric, nonparametric tree ensemble f(X)f(X) homoskedastic error variance parameter σ2\\sigma^2. Note Chipman, George, McCulloch (2010), aa bb parameterized =ν2a = \\frac{\\nu}{2} b=νλ2b = \\frac{\\nu\\lambda}{2}.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"setting-priors-on-variance-parameters-in-stochtree","dir":"Articles","previous_headings":"","what":"Setting Priors on Variance Parameters in stochtree","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"default, stochtree employs Jeffreys’ prior σ2\\sigma^2σ2∝1σ2\\begin{equation*} \\begin{aligned} \\sigma^2 &\\propto \\frac{1}{\\sigma^2} \\end{aligned} \\end{equation*} corresponds improper prior =0a = 0 b=0b = 0. provide convenience functions users wishing set σ2\\sigma^2 prior Chipman, George, McCulloch (2010). case, ν\\nu set default 3 λ\\lambda calibrated follows: “overestimate,” σ̂2\\hat{\\sigma}^2, σ2\\sigma^2 obtained via simple linear regression yy XX λ\\lambda chosen ensure p(σ2<σ̂2)=qp(\\sigma^2 < \\hat{\\sigma}^2) = q value qq, typically set default value 0.9. done stochtree via calibrateInverseGammaErrorVariance function. Now run BART model variance parameterization Inspect --sample predictions model  Inspect posterior samples σ2\\sigma^2","code":"# Load library library(stochtree)  # Generate data n <- 500 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd)  # Test/train split test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]  # Calibrate the scale parameter for the variance term as in Chipman et al (2010) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y_train, X_train, nu = nu) general_params <- list(sigma2_global_shape = nu/2, sigma2_global_scale = (nu*lambda)/2) bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     num_gfr = 0, num_burnin = 1000, num_mcmc = 100,                     general_params = general_params) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(bart_model$sigma2_global_samples, ylab = \"sigma^2\", xlab = \"iteration\") abline(h = noise_sd^2, col = \"red\", lty = 3, lwd = 3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"demo-1-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Supervised Learning","title":"Deeper Dive on Sampled Forests in StochTree","text":"Generate sample data feature 10 “important” feature.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,10]) & (0.25 > X[,10])) * (-7.5) +      ((0.25 <= X[,10]) & (0.5 > X[,10])) * (-2.5) +      ((0.5 <= X[,10]) & (0.75 > X[,10])) * (2.5) +      ((0.75 <= X[,10]) & (1 > X[,10])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"sampling-and-analysis","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling and Analysis","title":"Deeper Dive on Sampled Forests in StochTree","text":"Run BART. Inspect MCMC samples   Check variable split count last GFR sample split counts appear relatively uniform across features, let’s dig deeper look individual trees, starting first tree last “grow--root” sample. tree single split “important” feature. Now, let’s look second tree. tree also splits important feature. see “later” trees splitting features, also note trees fitting outcome already residualized many “relevant splits” made trees 1 2. Now, let’s inspect first tree last GFR sample depth, following scikit-learn vignette","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 general_params <- list(keep_gfr = T) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params ) plot(bart_model$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) bart_model$mean_forests$get_forest_split_counts(10, p_x) #>  [1] 31 22 28 29 28 31 17 28 24 30 bart_model$mean_forests$get_aggregate_split_counts(p_x) #>  [1] 2289 2372 2310 2509 2944 3126 2393 3148 2543 3870 splits = bart_model$mean_forests$get_granular_split_counts(p_x) splits[10,1,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,2,] #>  [1] 0 0 0 0 0 0 0 0 0 2 splits[10,20,] #>  [1] 0 0 0 0 0 1 0 0 0 0 splits[10,30,] #>  [1] 0 0 1 0 0 0 0 0 1 2 forest_num <- 9 tree_num <- 0 nodes <- sort(bart_model$mean_forests$nodes(forest_num, tree_num)) for (nid in nodes) {     if (bart_model$mean_forests$is_leaf_node(forest_num, tree_num, nid)) {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         leaf_values <- bart_model$mean_forests$node_leaf_values(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a leaf node with value=\",              format(leaf_values, digits = 3), \"\\n\", sep = \"\")     } else {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         left <- bart_model$mean_forests$left_child_node(forest_num, tree_num, nid)         feature <- bart_model$mean_forests$node_split_index(forest_num, tree_num, nid)         threshold <- bart_model$mean_forests$node_split_threshold(forest_num, tree_num, nid)         right <- bart_model$mean_forests$right_child_node(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a split node, which tells us to go to node \",              left, \" if X[:, \", feature, \"] <= \", format(threshold, digits = 3),              \" else to node \", right, \"\\n\", sep = \"\")     } } #> node=0 is a split node, which tells us to go to node 1 if X[:, 9] <= 0.496 else to node 2 #>  node=1 is a leaf node with value=-0.237 #>  node=2 is a leaf node with value=0.198"},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Drew Herren. Author, maintainer. Richard Hahn. Author. Jared Murray. Author. Carlos Carvalho. Author. Jingyu . Author. stochtree contributors. Copyright holder.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herren D, Hahn R, Murray J, Carvalho C, J (2025). stochtree: Stochastic tree Ensembles (XBART BART) Supervised Learning Causal Inference. R package version 0.1.0, https://stochtree.ai.","code":"@Manual{,   title = {stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference},   author = {Drew Herren and Richard Hahn and Jared Murray and Carlos Carvalho and Jingyu He},   year = {2025},   note = {R package version 0.1.0},   url = {https://stochtree.ai}, }"},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"stochtree-r-package","dir":"","previous_headings":"","what":"Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference","title":"Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference","text":"Software building stochastic tree ensembles (.e. BART, XBART) supervised learning causal inference.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference","text":"stochtree can installed CRAN via development version stochtree can installed github via","code":"install.package(\"stochtree\") remotes::install_github(\"StochasticTree/stochtree\", ref=\"r-dev\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — CppJson","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_ptr External pointer C++ nlohmann::json object num_forests Number forests nlohmann::json object forest_labels Names forest objects overall nlohmann::json object num_rfx Number random effects terms nlohman::json object rfx_container_labels Names rfx container objects overall nlohmann::json object rfx_mapper_labels Names rfx label mapper objects overall nlohmann::json object rfx_groupid_labels Names rfx group id objects overall nlohmann::json object","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"CppJson$new() CppJson$add_forest() CppJson$add_random_effects() CppJson$add_scalar() CppJson$add_integer() CppJson$add_boolean() CppJson$add_string() CppJson$add_vector() CppJson$add_integer_vector() CppJson$add_string_vector() CppJson$add_list() CppJson$add_string_list() CppJson$get_scalar() CppJson$get_integer() CppJson$get_boolean() CppJson$get_string() CppJson$get_vector() CppJson$get_integer_vector() CppJson$get_string_vector() CppJson$get_numeric_list() CppJson$get_string_list() CppJson$return_json_string() CppJson$save_file() CppJson$load_from_file() CppJson$load_from_string()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Create new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-forest-","dir":"Reference","previous_headings":"","what":"Method add_forest()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert forest container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_forest(forest_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"forest_samples ForestSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-random-effects-","dir":"Reference","previous_headings":"","what":"Method add_random_effects()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert random effects container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_random_effects(rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"rfx_samples RandomEffectSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-scalar-","dir":"Reference","previous_headings":"","what":"Method add_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_scalar(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-","dir":"Reference","previous_headings":"","what":"Method add_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Integer value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-boolean-","dir":"Reference","previous_headings":"","what":"Method add_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_boolean(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-","dir":"Reference","previous_headings":"","what":"Method add_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-vector-","dir":"Reference","previous_headings":"","what":"Method add_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-vector-","dir":"Reference","previous_headings":"","what":"Method add_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add array json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Character vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-list-","dir":"Reference","previous_headings":"","what":"Method add_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-list-","dir":"Reference","previous_headings":"","what":"Method add_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-scalar-","dir":"Reference","previous_headings":"","what":"Method get_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve scalar value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_scalar(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-","dir":"Reference","previous_headings":"","what":"Method get_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-boolean-","dir":"Reference","previous_headings":"","what":"Method get_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_boolean(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-","dir":"Reference","previous_headings":"","what":"Method get_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-vector-","dir":"Reference","previous_headings":"","what":"Method get_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-vector-","dir":"Reference","previous_headings":"","what":"Method get_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-vector-","dir":"Reference","previous_headings":"","what":"Method get_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve character vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-numeric-list-","dir":"Reference","previous_headings":"","what":"Method get_numeric_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list numeric vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_numeric_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-list-","dir":"Reference","previous_headings":"","what":"Method get_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list string vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-return-json-string-","dir":"Reference","previous_headings":"","what":"Method return_json_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert JSON object -memory string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$return_json_string()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-save-file-","dir":"Reference","previous_headings":"","what":"Method save_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Save json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$save_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-file-","dir":"Reference","previous_headings":"","what":"Method load_from_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-string-","dir":"Reference","previous_headings":"","what":"Method load_from_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_string(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Persists C++ random number generator throughout R session ensure reproducibility given random seed. seed provided, C++ random number generator initialized using std::random_device.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"rng_ptr External pointer C++ std::mt19937 class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"CppRNG$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Create new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"","code":"CppRNG$new(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores a single ensemble of decision trees (often treated as the ","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Wrapper around C++ tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_ptr External pointer C++ TreeEnsemble class internal_forest_is_empty Whether forest yet \"initialized\" predict function can called.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Forest$new() Forest$predict() Forest$predict_raw() Forest$set_root_leaves() Forest$prepare_for_sampler() Forest$adjust_residual() Forest$num_trees() Forest$leaf_dimension() Forest$is_constant_leaf() Forest$is_exponentiated() Forest$add_numeric_split_tree() Forest$get_tree_leaves() Forest$get_tree_split_counts() Forest$get_forest_split_counts() Forest$tree_max_depth() Forest$average_max_depth() Forest$is_empty()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Create new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"vector predictions many rows forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict \"raw\" leaf values (without multiplied basis) every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array vector (length number observations). case multivariate leaf regression, array matrix (number observations leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$set_root_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$adjust_residual(dataset, outcome, forest_model, requires_basis, add)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return number trees ensemble Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return output dimension trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return constant leaf status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return exponentiation status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$add_numeric_split_tree(   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_leaves(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable given tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_split_counts(tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_forest_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method tree_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum depth specific tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$tree_max_depth(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Tree index within forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-empty-","dir":"Reference","previous_headings":"","what":"Method is_empty()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest object created, \"empty\" sense none component trees leaves values. two ways \"initialize\" Forest object. First, set_root_leaves() method simply initializes every tree forest single node carrying (user-specified) leaf value. Second, prepare_for_sampler() method initializes every tree forest single node value also propagates information ForestModel object, must synchronized Forest forest sampler loop.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_empty()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"TRUE Forest yet initialized constant root value, FALSE otherwise forest already initialized / grown.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a forest — ForestDataset","title":"Dataset used to sample a forest — ForestDataset","text":"dataset consists three matrices / vectors: covariates, bases, variance weights. basis vector variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a forest — ForestDataset","text":"data_ptr External pointer C++ ForestDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a forest — ForestDataset","text":"ForestDataset$new() ForestDataset$update_basis() ForestDataset$num_observations() ForestDataset$num_covariates() ForestDataset$num_basis() ForestDataset$has_basis() ForestDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a forest — ForestDataset","text":"Create new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-update-basis-","dir":"Reference","previous_headings":"","what":"Method update_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Update basis matrix dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$update_basis(basis)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"basis Updated matrix bases used define leaf regression","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number observations ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-covariates-","dir":"Reference","previous_headings":"","what":"Method num_covariates()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number covariates ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_covariates()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Covariate count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-basis-","dir":"Reference","previous_headings":"","what":"Method num_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number bases ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Basis count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines and samples a forest model — ForestModel","title":"Class that defines and samples a forest model — ForestModel","text":"Hosts C++ data structures needed sample ensemble decision trees, exposes functionality run forest sampler (using either MCMC grow--root algorithm).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines and samples a forest model — ForestModel","text":"tracker_ptr External pointer C++ ForestTracker class tree_prior_ptr External pointer C++ TreePrior class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines and samples a forest model — ForestModel","text":"ForestModel$new() ForestModel$sample_one_iteration() ForestModel$propagate_basis_update() ForestModel$propagate_residual_update() ForestModel$update_alpha() ForestModel$update_beta() ForestModel$update_min_samples_leaf() ForestModel$update_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines and samples a forest model — ForestModel","text":"Create new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$new(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth = -1 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree can reach","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-sample-one-iteration-","dir":"Reference","previous_headings":"","what":"Method sample_one_iteration()","title":"Class that defines and samples a forest model — ForestModel","text":"Run single iteration forest sampling algorithm (MCMC GFR)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$sample_one_iteration(   forest_dataset,   residual,   forest_samples,   active_forest,   rng,   forest_model_config,   global_model_config,   keep_forest = T,   gfr = T )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset Dataset used sample forest residual Outcome used sample forest forest_samples Container forest samples active_forest \"Active\" forest updated sampler iteration rng Wrapper around C++ random number generator forest_model_config ForestModelConfig object containing forest model parameters settings global_model_config GlobalModelConfig object containing global model parameters settings keep_forest (Optional) Whether updated forest sample saved forest_samples. Default: TRUE. gfr (Optional) Whether forest sampled using \"grow--root\" (GFR) algorithm. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-basis-update-","dir":"Reference","previous_headings":"","what":"Method propagate_basis_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Propagates basis update (full/partial) residual iteratively () adding back previous prediction tree, (b) recomputing predictions tree (caching C++ side), (c) subtracting new predictions residual. useful cases basis (e.g. leaf regression) updated outside tree sampler (e.g. adaptive coding binary treatment BCF). basis updated, overall \"function\" represented tree model changed reflected residual next sampling loop run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_basis_update(dataset, outcome, active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions active_forest \"Active\" forest updated sampler iteration","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-residual-update-","dir":"Reference","previous_headings":"","what":"Method propagate_residual_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Update current state outcome (.e. partial residual) data subtracting current predictions tree. function run Outcome class's update_data method, overwrites partial residual entirely new stream outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_residual_update(residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"residual Outcome used sample forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Class that defines and samples a forest model — ForestModel","text":"Update alpha tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"alpha New value alpha used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Class that defines and samples a forest model — ForestModel","text":"Update beta tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"beta New value beta used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Class that defines and samples a forest model — ForestModel","text":"Update min_samples_leaf tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"min_samples_leaf New value min_samples_leaf used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Class that defines and samples a forest model — ForestModel","text":"Update max_depth tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"max_depth New value max_depth used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Object used to get / set parameters and other model configuration options for a forest model in the ","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"\"low-level\" stochtree interface enables high degreee sampler customization, users employ R wrappers around C++ objects like ForestDataset, Outcome, CppRng, ForestModel run Gibbs sampler BART model custom modifications. ForestModelConfig allows users specify / query parameters forest model wish run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) Vector specifying sampling probability p covariates ForestDataset Root node split probability tree prior Depth prior penalty tree prior Minimum number samples tree leaf Maximum depth tree ensemble model Scale parameter used Gaussian leaf models Shape parameter IG leaf models Scale parameter IG leaf models Number unique cutpoints consider","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled num_features Number features training dataset num_observations Number observations training dataset leaf_dimension Dimension leaf model alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree ensemble model. Setting -1 enforce depth limits trees. leaf_model_type Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression) leaf_model_scale Scale parameter used Gaussian leaf models variable_weights Vector specifying sampling probability p covariates ForestDataset variance_forest_shape Shape parameter IG leaf models (applicable leaf_model_type = 3) variance_forest_scale Scale parameter IG leaf models (applicable leaf_model_type = 3) cutpoint_grid_size Number unique cutpoints consider Create new ForestModelConfig object.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"ForestModelConfig$new() ForestModelConfig$update_feature_types() ForestModelConfig$update_variable_weights() ForestModelConfig$update_alpha() ForestModelConfig$update_beta() ForestModelConfig$update_min_samples_leaf() ForestModelConfig$update_max_depth() ForestModelConfig$update_leaf_model_scale() ForestModelConfig$update_variance_forest_shape() ForestModelConfig$update_variance_forest_scale() ForestModelConfig$update_cutpoint_grid_size() ForestModelConfig$get_feature_types() ForestModelConfig$get_variable_weights() ForestModelConfig$get_alpha() ForestModelConfig$get_beta() ForestModelConfig$get_min_samples_leaf() ForestModelConfig$get_max_depth() ForestModelConfig$get_leaf_model_scale() ForestModelConfig$get_variance_forest_shape() ForestModelConfig$get_variance_forest_scale() ForestModelConfig$get_cutpoint_grid_size()","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$new(   feature_types = NULL,   num_trees = NULL,   num_features = NULL,   num_observations = NULL,   variable_weights = NULL,   leaf_dimension = 1,   alpha = 0.95,   beta = 2,   min_samples_leaf = 5,   max_depth = -1,   leaf_model_type = 1,   leaf_model_scale = NULL,   variance_forest_shape = 1,   variance_forest_scale = 1,   cutpoint_grid_size = 100 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled num_features Number features training dataset num_observations Number observations training dataset variable_weights Vector specifying sampling probability p covariates ForestDataset leaf_dimension Dimension leaf model (default: 1) alpha Root node split probability tree prior (default: 0.95) beta Depth prior penalty tree prior (default: 2.0) min_samples_leaf Minimum number samples tree leaf (default: 5) max_depth Maximum depth tree ensemble model. Setting -1 enforce depth limits trees. Default: -1. leaf_model_type Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression). Default: 0. leaf_model_scale Scale parameter used Gaussian leaf models (can either scalar q x q matrix, q dimensionality basis >1 leaf_model_int = 2). Calibrated internally 1/num_trees, propagated along diagonal needed multivariate leaf models. variance_forest_shape Shape parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. variance_forest_scale Scale parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. cutpoint_grid_size Number unique cutpoints consider (default: 100)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"new ForestModelConfig object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-feature-types-","dir":"Reference","previous_headings":"","what":"Method update_feature_types()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update feature types","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_feature_types(feature_types)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-variable-weights-","dir":"Reference","previous_headings":"","what":"Method update_variable_weights()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update variable weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_variable_weights(variable_weights)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"variable_weights Vector specifying sampling probability p covariates ForestDataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"alpha Root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update depth prior penalty tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"beta Depth prior penalty tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"min_samples_leaf Minimum number samples tree leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update root node split probability tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"max_depth Maximum depth tree ensemble model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-leaf-model-scale-","dir":"Reference","previous_headings":"","what":"Method update_leaf_model_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update scale parameter used Gaussian leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_leaf_model_scale(leaf_model_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"leaf_model_scale Scale parameter used Gaussian leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-variance-forest-shape-","dir":"Reference","previous_headings":"","what":"Method update_variance_forest_shape()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update shape parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_variance_forest_shape(variance_forest_shape)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"variance_forest_shape Shape parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-variance-forest-scale-","dir":"Reference","previous_headings":"","what":"Method update_variance_forest_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update scale parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_variance_forest_scale(variance_forest_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"variance_forest_scale Scale parameter IG leaf models","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-update-cutpoint-grid-size-","dir":"Reference","previous_headings":"","what":"Method update_cutpoint_grid_size()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Update number unique cutpoints consider","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$update_cutpoint_grid_size(cutpoint_grid_size)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"cutpoint_grid_size Number unique cutpoints consider","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-feature-types-","dir":"Reference","previous_headings":"","what":"Method get_feature_types()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query feature types ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_feature_types()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-variable-weights-","dir":"Reference","previous_headings":"","what":"Method get_variable_weights()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query variable weights ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_variable_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-alpha-","dir":"Reference","previous_headings":"","what":"Method get_alpha()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query root node split probability tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_alpha()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-beta-","dir":"Reference","previous_headings":"","what":"Method get_beta()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query depth prior penalty tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_beta()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method get_min_samples_leaf()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query root node split probability tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_min_samples_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-max-depth-","dir":"Reference","previous_headings":"","what":"Method get_max_depth()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query root node split probability tree prior ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-leaf-model-scale-","dir":"Reference","previous_headings":"","what":"Method get_leaf_model_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query scale parameter used Gaussian leaf models ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_leaf_model_scale()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-variance-forest-shape-","dir":"Reference","previous_headings":"","what":"Method get_variance_forest_shape()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query shape parameter IG leaf models ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_variance_forest_shape()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-variance-forest-scale-","dir":"Reference","previous_headings":"","what":"Method get_variance_forest_scale()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query scale parameter IG leaf models ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_variance_forest_scale()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"method-get-cutpoint-grid-size-","dir":"Reference","previous_headings":"","what":"Method get_cutpoint_grid_size()","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"Query number unique cutpoints consider ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModelConfig.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set parameters and other model configuration options for a forest model in the ","text":"","code":"ForestModelConfig$get_cutpoint_grid_size()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — ForestSamples","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_container_ptr External pointer C++ ForestContainer class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ForestSamples$new() ForestSamples$load_from_json() ForestSamples$append_from_json() ForestSamples$load_from_json_string() ForestSamples$append_from_json_string() ForestSamples$predict() ForestSamples$predict_raw() ForestSamples$predict_raw_single_forest() ForestSamples$predict_raw_single_tree() ForestSamples$set_root_leaves() ForestSamples$prepare_for_sampler() ForestSamples$adjust_residual() ForestSamples$save_json() ForestSamples$load_json() ForestSamples$num_samples() ForestSamples$num_trees() ForestSamples$leaf_dimension() ForestSamples$is_constant_leaf() ForestSamples$is_exponentiated() ForestSamples$add_forest_with_constant_leaves() ForestSamples$add_numeric_split_tree() ForestSamples$get_tree_leaves() ForestSamples$get_tree_split_counts() ForestSamples$get_forest_split_counts() ForestSamples$get_aggregate_split_counts() ForestSamples$get_granular_split_counts() ForestSamples$ensemble_tree_max_depth() ForestSamples$average_ensemble_max_depth() ForestSamples$average_max_depth() ForestSamples$num_forest_leaves() ForestSamples$sum_leaves_squared() ForestSamples$is_leaf_node() ForestSamples$is_numeric_split_node() ForestSamples$is_categorical_split_node() ForestSamples$parent_node() ForestSamples$left_child_node() ForestSamples$right_child_node() ForestSamples$node_depth() ForestSamples$node_split_index() ForestSamples$node_split_threshold() ForestSamples$node_split_categories() ForestSamples$node_leaf_values() ForestSamples$num_nodes() ForestSamples$num_leaves() ForestSamples$num_leaf_parents() ForestSamples$num_split_nodes() ForestSamples$nodes() ForestSamples$leaves() ForestSamples$delete_sample()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns samples ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array two-dimensional (number observations, number forest samples). case multivariate leaf regression, array three-dimension (number observations, leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-forest-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_forest()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_forest(forest_dataset, forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-tree-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific tree specific forest every observation forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_tree(forest_dataset, forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$set_root_leaves(forest_num, leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest sample within container. leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$adjust_residual(   dataset,   outcome,   forest_model,   requires_basis,   forest_num,   add )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction forest_num Index forest used update residuals add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-save-json-","dir":"Reference","previous_headings":"","what":"Method save_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Store trees metadata ForestDataset class json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$save_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name output json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-json-","dir":"Reference","previous_headings":"","what":"Method load_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Load trees metadata ensemble json file. Note trees metadata already present ForestDataset class overwritten.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name model input json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-samples-","dir":"Reference","previous_headings":"","what":"Method num_samples()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number samples ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sample count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number trees ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return output dimension trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return constant leaf status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return exponentiation status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-forest-with-constant-leaves-","dir":"Reference","previous_headings":"","what":"Method add_forest_with_constant_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add new -root ensemble container, leaves set value / vector provided","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_forest_with_constant_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"leaf_value Value (vector values) initialize root nodes tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_numeric_split_tree(   forest_num,   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree split tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_split_counts(forest_num, tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_forest_split_counts(forest_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-aggregate-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_aggregate_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, aggregated across ensembles trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_aggregate_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-granular-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_granular_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, reported separately ensemble tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_granular_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-ensemble-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method ensemble_tree_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum depth specific tree specific ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$ensemble_tree_max_depth(ensemble_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number tree_num Tree index within ensemble ensemble_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-ensemble-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_ensemble_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_ensemble_max_depth(ensemble_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-forest-leaves-","dir":"Reference","previous_headings":"","what":"Method num_forest_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_forest_leaves(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count leaves ensemble stored forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-sum-leaves-squared-","dir":"Reference","previous_headings":"","what":"Method sum_leaves_squared()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sum squared (raw) leaf values given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$sum_leaves_squared(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-leaf-node-","dir":"Reference","previous_headings":"","what":"Method is_leaf_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_leaf_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node leaf, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-numeric-split-node-","dir":"Reference","previous_headings":"","what":"Method is_numeric_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples numeric split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_numeric_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node numeric split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-categorical-split-node-","dir":"Reference","previous_headings":"","what":"Method is_categorical_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples categorical split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_categorical_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node categorical split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-parent-node-","dir":"Reference","previous_headings":"","what":"Method parent_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Parent node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$parent_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID parent node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-left-child-node-","dir":"Reference","previous_headings":"","what":"Method left_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Left child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$left_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID left child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-right-child-node-","dir":"Reference","previous_headings":"","what":"Method right_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Right child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$right_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID right child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-depth-","dir":"Reference","previous_headings":"","what":"Method node_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Depth given node given tree given forest ForestSamples object, 0 depth root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_depth(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-index-","dir":"Reference","previous_headings":"","what":"Method node_split_index()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Split index given node given tree given forest ForestSamples object. Returns -1 node leaf.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_index(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-threshold-","dir":"Reference","previous_headings":"","what":"Method node_split_threshold()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defines numeric split given node given tree given forest ForestSamples object. Returns Inf node leaf categorical split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_threshold(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-categories-","dir":"Reference","previous_headings":"","what":"Method node_split_categories()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array category indices define categorical split given node given tree given forest ForestSamples object. Returns c(Inf) node leaf numeric split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_categories(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Categories defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-leaf-values-","dir":"Reference","previous_headings":"","what":"Method node_leaf_values()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node value(s) given node given tree given forest ForestSamples object. Values stale node split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_leaf_values(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Vector (often univariate) leaf values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-nodes-","dir":"Reference","previous_headings":"","what":"Method num_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaves-","dir":"Reference","previous_headings":"","what":"Method num_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaves","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaf-parents-","dir":"Reference","previous_headings":"","what":"Method num_leaf_parents()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaf parents (split nodes two leaves children) given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaf_parents(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaf parents","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-split-nodes-","dir":"Reference","previous_headings":"","what":"Method num_split_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number split nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_split_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree split nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-nodes-","dir":"Reference","previous_headings":"","what":"Method nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array node indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaves-","dir":"Reference","previous_headings":"","what":"Method leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array leaf indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices leaf nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Modify ForestSamples object removing forest sample indexed `forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$delete_sample(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Object used to get / set global parameters and other global model configuration options in the ","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"\"low-level\" stochtree interface enables high degreee sampler customization, users employ R wrappers around C++ objects like ForestDataset, Outcome, CppRng, ForestModel run Gibbs sampler BART model custom modifications. GlobalModelConfig allows users specify / query global parameters model wish run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"Global error variance parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"global_error_variance Global error variance parameter Create new GlobalModelConfig object.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"GlobalModelConfig$new() GlobalModelConfig$update_global_error_variance() GlobalModelConfig$get_global_error_variance()","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"","code":"GlobalModelConfig$new(global_error_variance = 1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"global_error_variance Global error variance parameter (default: 1.0)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"new GlobalModelConfig object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"method-update-global-error-variance-","dir":"Reference","previous_headings":"","what":"Method update_global_error_variance()","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"Update global error variance parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"","code":"GlobalModelConfig$update_global_error_variance(global_error_variance)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"global_error_variance Global error variance parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"method-get-global-error-variance-","dir":"Reference","previous_headings":"","what":"Method get_global_error_variance()","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"Query global error variance parameter GlobalModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/GlobalModelConfig.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Object used to get / set global parameters and other global model configuration options in the ","text":"","code":"GlobalModelConfig$get_global_error_variance()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome / partial residual used to sample an additive model. — Outcome","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome class wrapper around vector (mutable) outcomes ML tasks (supervised learning, causal inference). additive tree ensemble sampled, outcome used sample specific model term \"partial residual\" consisting outcome minus predictions every model term (trees, group random effects, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"data_ptr External pointer C++ Outcome class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Outcome$new() Outcome$get_data() Outcome$add_vector() Outcome$subtract_vector() Outcome$update_data()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Create new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$new(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Extract raw data R underlying C++ object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$get_data()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"R vector containing (copy ) values Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data adding values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$add_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector added outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-subtract-vector-","dir":"Reference","previous_headings":"","what":"Method subtract_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data subtracting values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$subtract_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector subtracted outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-update-data-","dir":"Reference","previous_headings":"","what":"Method update_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data replacing element elements new_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$update_data(new_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new_vector Vector overwrite current data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps the ","title":"Class that wraps the ","text":"Coordinates various C++ random effects classes persists needed prediction / serialization","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps the ","text":"rfx_container_ptr External pointer C++ StochTree::RandomEffectsContainer class label_mapper_ptr External pointer C++ StochTree::LabelMapper class training_group_ids Unique vector group IDs training dataset","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps the ","text":"RandomEffectSamples$new() RandomEffectSamples$load_in_session() RandomEffectSamples$load_from_json() RandomEffectSamples$append_from_json() RandomEffectSamples$load_from_json_string() RandomEffectSamples$append_from_json_string() RandomEffectSamples$predict() RandomEffectSamples$extract_parameter_samples() RandomEffectSamples$delete_sample() RandomEffectSamples$extract_label_mapping()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps the ","text":"Create new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-in-session-","dir":"Reference","previous_headings":"","what":"Method load_in_session()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object \"-session\" R objects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_in_session(   num_components,   num_groups,   random_effects_tracker )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that wraps the ","text":"Predict random effects observation implied rfx_group_ids rfx_basis. random effects model \"intercept-\" rfx_basis vector ones size length(rfx_group_ids).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$predict(rfx_group_ids, rfx_basis = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"rfx_group_ids Indices random effects groups prediction set rfx_basis (Optional ) Basis used random effects prediction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"Matrix many rows observations provided many columns samples drawn model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-parameter-samples-","dir":"Reference","previous_headings":"","what":"Method extract_parameter_samples()","title":"Class that wraps the ","text":"Extract random effects parameters sampled. \"redundant parameterization\" Gelman et al (2008), includes four parameters: alpha (\"working parameter\" shared across every group), xi (\"group parameter\" sampled separately group), beta (product alpha xi, corresponds overall group-level random effects), sigma (group-independent prior variance component xi).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_parameter_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that wraps the ","text":"Modify RandomEffectsSamples object removing parameter samples index sample_num.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$delete_sample(sample_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"sample_num Index RFX sample removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-label-mapping-","dir":"Reference","previous_headings":"","what":"Method extract_label_mapping()","title":"Class that wraps the ","text":"Convert mapping group IDs random effect components indices C++ R native format","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_label_mapping()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List mapping group ID random effect components.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a random effects model — RandomEffectsDataset","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"dataset consists three matrices / vectors: group labels, bases, variance weights. Variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"data_ptr External pointer C++ RandomEffectsDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"RandomEffectsDataset$new() RandomEffectsDataset$num_observations() RandomEffectsDataset$has_group_labels() RandomEffectsDataset$has_basis() RandomEffectsDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Create new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$new(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Return number observations RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-group-labels-","dir":"Reference","previous_headings":"","what":"Method has_group_labels()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset group label indices","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_group_labels()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True group label vector loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"The core ","title":"The core ","text":"Stores current model state, prior parameters, procedures sampling conditional posterior parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The core ","text":"rfx_model_ptr External pointer C++ StochTree::RandomEffectsModel class num_groups Number groups random effects model num_components Number components (.e. dimension basis) random effects model","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The core ","text":"RandomEffectsModel$new() RandomEffectsModel$sample_random_effect() RandomEffectsModel$predict() RandomEffectsModel$set_working_parameter() RandomEffectsModel$set_group_parameters() RandomEffectsModel$set_working_parameter_cov() RandomEffectsModel$set_group_parameter_cov() RandomEffectsModel$set_variance_prior_shape() RandomEffectsModel$set_variance_prior_scale()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The core ","text":"Create new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$new(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-sample-random-effect-","dir":"Reference","previous_headings":"","what":"Method sample_random_effect()","title":"The core ","text":"Sample random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$sample_random_effect(   rfx_dataset,   residual,   rfx_tracker,   rfx_samples,   keep_sample,   global_variance,   rng )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset residual Object type Outcome rfx_tracker Object type RandomEffectsTracker rfx_samples Object type RandomEffectSamples keep_sample Whether sample retained rfx_samples. FALSE, state rfx_tracker updated, parameter values added sample container. Samples commonly discarded due burn-thinning. global_variance Scalar global variance parameter rng Object type CppRNG","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"The core ","text":"Predict (single sample ) random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$predict(rfx_dataset, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset rfx_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"Vector predictions size matching number observations rfx_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter()","title":"The core ","text":"Set value \"working parameter.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameters-","dir":"Reference","previous_headings":"","what":"Method set_group_parameters()","title":"The core ","text":"Set value \"group parameters.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameters(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter_cov()","title":"The core ","text":"Set value working parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_group_parameter_cov()","title":"The core ","text":"Set value group parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-shape-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_shape()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_shape(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-scale-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_scale()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_scale(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines a ","title":"Class that defines a ","text":"Stores mapping every observation group index, mapping group indices training sample observations available group, predictions observation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines a ","text":"rfx_tracker_ptr External pointer C++ StochTree::RandomEffectsTracker class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines a ","text":"RandomEffectsTracker$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines a ","text":"Create new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines a ","text":"","code":"RandomEffectsTracker$new(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines a ","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines a ","text":"new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the BART algorithm for supervised learning. — bart","title":"Run the BART algorithm for supervised learning. — bart","text":"Run BART algorithm supervised learning.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"bart(   X_train,   y_train,   leaf_basis_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   leaf_basis_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mean_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the BART algorithm for supervised learning. — bart","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). y_train Outcome modeled ensemble. leaf_basis_train (Optional) Bases used define regression model y ~ W leaf regression tree. default, BART assumes constant leaf node parameters, implicitly regressing constant basis ones (.e. y ~ 1). rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. leaf_basis_test (Optional) Test set bases used define \"sample\" evaluation data. test set optional, structure provided test set must match training set (.e. X_train leaf_basis_train provided, test set must consist X_test leaf_basis_test number columns). rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BART model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BART sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var(y_train), y_train possibly standardized outcome, set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mean_forest_params (Optional) list mean forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional mean model. Default: 200. num_trees = 0, conditional mean modeled using forest, function proceed num_trees > 0 variance forest. alpha Prior probability splitting tree depth 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, mean model. Default: 5. max_depth Maximum depth tree ensemble mean model. Default: 10. Can overridden -1 enforce depth limits trees. sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(leaf_basis_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. var_forest_leaf_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var(y_train))/num_trees, y_train possibly standardized outcome, set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the BART algorithm for supervised learning. — bart","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"Run Bayesian Causal Forest (BCF) algorithm regularized causal effect estimation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"bcf(   X_train,   Z_train,   y_train,   propensity_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   Z_test = NULL,   propensity_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mu_forest_params = list(),   tau_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). Z_train Vector (continuous binary) treatment assignments. y_train Outcome modeled ensemble. propensity_train (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. Z_test (Optional) Test set (continuous binary) treatment assignments. propensity_test (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BCF model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BCF sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var((y_train-mean(y_train))/sd(y_train)) set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). workaround wish provide custom weight propensity score include column X_train set propensity_covariate 'none' adjust keep_vars accordingly mu tau forests. propensity_covariate Whether include propensity score covariate either forests. Enter \"none\" neither, \"mu\" prognostic forest, \"tau\" treatment forest, \"\" forests. \"none\" propensity score provided, estimated (X_train, Z_train) using stochtree::bart(). Default: \"mu\". adaptive_coding Whether use \"adaptive coding\" scheme binary treatment variable coded manually (0,1) (-1,1) learned via parameters b_0 b_1 attach outcome model [b_0 (1-Z) + b_1 Z] tau(X). ignored Z binary. Default: TRUE. control_coding_init Initial value \"control\" group coding parameter. ignored Z binary. Default: -0.5. treated_coding_init Initial value \"treatment\" group coding parameter. ignored Z binary. Default: 0.5. rfx_prior_var Prior (diagonals ) covariance additive group-level random regression coefficients. Must vector length ncol(rfx_basis_train). Default: rep(1, ncol(rfx_basis_train)) random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mu_forest_params (Optional) list prognostic forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble prognostic forest. Default: 250. Must positive integer. alpha Prior probability splitting tree depth 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, prognostic forest. Default: 5. max_depth Maximum depth tree ensemble prognostic forest. Default: 10. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable prognostic forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. tau_forest_params (Optional) list treatment effect forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble treatment effect forest. Default: 50. Must positive integer. alpha Prior probability splitting tree depth 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.25. beta Exponent decreases split probabilities nodes depth > 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 3. min_samples_leaf Minimum allowable size leaf, terms training samples, treatment effect forest. Default: 5. max_depth Maximum depth tree ensemble treatment effect forest. Default: 5. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable treatment effect forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(Z_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. variance_forest_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var((y_train-mean(y_train))/sd(y_train)))/num_trees set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, X_test = X_test, Z_test = Z_test,                   propensity_test = pi_test) plot(rowMeans(bcf_model$mu_hat_test), mu_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(bcf_model$tau_hat_test), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Chipman, H., George, E., Hahn, R., McCulloch, R., Pratola, M. Sparapani, R. (2022). Bayesian Additive Regression Trees, Computational Approaches. Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri J.L. Teugels). https://doi.org/10.1002/9781118445112.stat08288","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"calibrateInverseGammaErrorVariance(   y,   X,   W = NULL,   nu = 3,   quant = 0.9,   standardize = TRUE )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"y Outcome modeled using BART, BCF another nonparametric ensemble method. X Covariates used partition trees ensemble series ensemble. W (Optional) Basis used define \"leaf regression\" model decision tree. \"classic\" BART model assumes constant leaf parameter, equivalent \"leaf regression\" basis ones, though necessary pass vector ones, BART function. Default: NULL. nu shape parameter global error variance's IG prior. scale parameter Sparapani et al (2021) parameterization defined nu*lambda lambda output function. Default: 3. quant (Optional) Quantile inverse gamma prior distribution represented linear-regression-based overestimate sigma^2. Default: 0.9. standardize (Optional) Whether outcome standardized ((y-mean(y))/sd(y)) calibration lambda. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Value lambda determines scale parameter global error variance prior (sigma^2 ~ IG(nu,nu*lambda))","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) y <- 10*X[,1] - 20*X[,2] + rnorm(n) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y, X, nu = nu) sigma2hat <- mean(resid(lm(y~X))^2) mean(var(y)/rgamma(100000, nu, rate = nu*lambda) < sigma2hat) #> [1] 0.90021"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf indices — computeForestLeafIndices","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"Compute return vector representation forest's leaf predictions every observation dataset. vector \"row-major\" format can easily re-represented CSR sparse matrix: elements organized first n elements correspond leaf predictions n observations dataset first tree ensemble, next n elements correspond predictions second tree . \"data\" element corresponds uniquely mapped column index corresponds single leaf single tree (.e. tree 1 3 leaves, column indices range 0 2, tree 2's leaf indices begin 3, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"computeForestLeafIndices(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"List vectors. vector size num_obs * num_trees, num_obs = nrow(covariates) num_trees number trees relevant forest model_object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafIndices(bart_model, X, \"mean\") #>          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>     [1,]    1    1    1    1    1    1    1    1    1     1 #>     [2,]    1    1    1    1    1    1    1    1    1     1 #>     [3,]    0    0    0    0    0    0    0    0    0     0 #>     [4,]    0    0    0    0    0    0    0    0    0     0 #>     [5,]    0    0    0    0    0    0    0    0    0     0 #>     [6,]    0    0    0    0    0    0    0    0    0     0 #>     [7,]    1    1    1    1    1    1    1    1    1     1 #>     [8,]    1    1    1    1    1    1    1    1    1     1 #>     [9,]    0    0    0    0    0    0    0    0    0     0 #>    [10,]    0    0    0    0    0    0    0    0    0     0 #>    [11,]    0    0    0    0    0    0    0    0    0     0 #>    [12,]    1    1    1    1    1    1    1    1    1     1 #>    [13,]    1    1    1    1    1    1    1    1    1     1 #>    [14,]    0    0    0    0    0    0    0    0    0     0 #>    [15,]    1    1    1    1    1    1    1    1    1     1 #>    [16,]    1    1    1    1    1    1    1    1    1     1 #>    [17,]    0    0    0    0    0    0    0    0    0     0 #>    [18,]    1    1    1    1    1    1    1    1    1     1 #>    [19,]    1    1    1    1    1    1    1    1    1     1 #>    [20,]    1    1    1    1    1    1    1    1    1     1 #>    [21,]    0    0    0    0    0    0    0    0    0     0 #>    [22,]    1    1    1    1    1    1    1    1    1     1 #>    [23,]    1    1    1    1    1    1    1    1    1     1 #>    [24,]    0    0    0    0    0    0    0    0    0     0 #>    [25,]    0    0    0    0    0    0    0    0    0     0 #>    [26,]    1    1    1    1    1    1    1    1    1     1 #>    [27,]    1    1    1    1    1    1    1    1    1     1 #>    [28,]    0    0    0    0    0    0    0    0    0     0 #>    [29,]    1    1    1    1    1    1    1    1    1     1 #>    [30,]    1    1    1    1    1    1    1    1    1     1 #>    [31,]    0    0    0    0    0    0    0    0    0     0 #>    [32,]    0    0    0    0    0    0    0    0    0     0 #>    [33,]    1    1    1    1    1    1    1    1    1     1 #>    [34,]    0    0    0    0    0    0    0    0    0     0 #>    [35,]    0    0    0    0    0    0    0    0    0     0 #>    [36,]    1    1    1    1    1    1    1    1    1     1 #>    [37,]    1    1    1    1    1    1    1    1    1     1 #>    [38,]    1    1    1    1    1    1    1    1    1     1 #>    [39,]    0    0    0    0    0    0    0    0    0     0 #>    [40,]    0    0    0    0    0    0    0    0    0     0 #>    [41,]    1    1    1    1    1    1    1    1    1     1 #>    [42,]    0    0    0    0    0    0    0    0    0     0 #>    [43,]    1    1    1    1    1    1    1    1    1     1 #>    [44,]    1    1    1    1    1    1    1    1    1     1 #>    [45,]    1    1    1    1    1    1    1    1    1     1 #>    [46,]    1    1    1    1    1    1    1    1    1     1 #>    [47,]    0    0    0    0    0    0    0    0    0     0 #>    [48,]    0    0    0    0    0    0    0    0    0     0 #>    [49,]    1    1    1    1    1    1    1    1    1     1 #>    [50,]    1    1    1    1    1    1    1    1    1     1 #>    [51,]    1    1    1    1    1    1    1    1    1     1 #>    [52,]    0    0    0    0    0    0    0    0    0     0 #>    [53,]    1    1    1    1    1    1    1    1    1     1 #>    [54,]    0    0    0    0    0    0    0    0    0     0 #>    [55,]    1    1    1    1    1    1    1    1    1     1 #>    [56,]    1    1    1    1    1    1    1    1    1     1 #>    [57,]    0    0    0    0    0    0    0    0    0     0 #>    [58,]    1    1    1    1    1    1    1    1    1     1 #>    [59,]    1    1    1    1    1    1    1    1    1     1 #>    [60,]    1    1    1    1    1    1    1    1    1     1 #>    [61,]    1    1    1    1    1    1    1    1    1     1 #>    [62,]    0    0    0    0    0    0    0    0    0     0 #>    [63,]    1    1    1    1    1    1    1    1    1     1 #>    [64,]    1    1    1    1    1    1    1    1    1     1 #>    [65,]    0    0    0    0    0    0    0    0    0     0 #>    [66,]    1    1    1    1    1    1    1    1    1     1 #>    [67,]    0    0    0    0    0    0    0    0    0     0 #>    [68,]    1    1    1    1    1    1    1    1    1     1 #>    [69,]    1    1    1    1    1    1    1    1    1     1 #>    [70,]    0    0    0    0    0    0    0    0    0     0 #>    [71,]    1    1    1    1    1    1    1    1    1     1 #>    [72,]    0    0    0    0    0    0    0    0    0     0 #>    [73,]    0    0    0    0    0    0    0    0    0     0 #>    [74,]    0    0    0    0    0    0    0    0    0     0 #>    [75,]    1    1    1    1    1    1    1    1    1     1 #>    [76,]    0    0    0    0    0    0    0    0    0     0 #>    [77,]    1    1    1    1    1    1    1    1    1     1 #>    [78,]    1    1    1    1    1    1    1    1    1     1 #>    [79,]    0    0    0    0    0    0    0    0    0     0 #>    [80,]    1    1    1    1    1    1    1    1    1     1 #>    [81,]    1    1    1    1    1    1    1    1    1     1 #>    [82,]    0    0    0    0    0    0    0    0    0     0 #>    [83,]    1    1    1    1    1    1    1    1    1     1 #>    [84,]    1    1    1    1    1    1    1    1    1     1 #>    [85,]    1    1    1    1    1    1    1    1    1     1 #>    [86,]    0    0    0    0    0    0    0    0    0     0 #>    [87,]    1    1    1    1    1    1    1    1    1     1 #>    [88,]    0    0    0    0    0    0    0    0    0     0 #>    [89,]    0    0    0    0    0    0    0    0    0     0 #>    [90,]    1    1    1    1    1    1    1    1    1     1 #>    [91,]    0    0    0    0    0    0    0    0    0     0 #>    [92,]    0    0    0    0    0    0    0    0    0     0 #>    [93,]    1    1    1    1    1    1    1    1    1     1 #>    [94,]    0    0    0    0    0    0    0    0    0     0 #>    [95,]    1    1    1    1    1    1    1    1    1     1 #>    [96,]    1    1    1    1    1    1    1    1    1     1 #>    [97,]    1    1    1    1    1    1    1    1    1     1 #>    [98,]    0    0    0    0    0    0    0    0    0     0 #>    [99,]    0    0    0    0    0    0    0    0    0     0 #>   [100,]    1    1    1    1    1    1    1    1    1     1 #>   [101,]    3    3    3    3    3    3    3    3    3     3 #>   [102,]    2    2    2    2    2    2    2    2    2     2 #>   [103,]    2    2    2    2    2    2    2    2    2     2 #>   [104,]    3    3    3    3    3    3    3    3    3     3 #>   [105,]    2    2    2    2    2    2    2    2    2     2 #>   [106,]    3    3    3    3    3    3    3    3    3     3 #>   [107,]    2    2    2    2    2    2    2    2    2     2 #>   [108,]    2    2    2    2    2    2    2    2    2     2 #>   [109,]    3    3    3    3    3    3    3    3    3     3 #>   [110,]    3    3    3    3    3    3    3    3    3     3 #>   [111,]    3    3    3    3    3    3    3    3    3     3 #>   [112,]    3    3    3    3    3    3    3    3    3     3 #>   [113,]    2    2    2    2    2    2    2    2    2     2 #>   [114,]    3    3    3    3    3    3    3    3    3     3 #>   [115,]    3    3    3    3    3    3    3    3    3     3 #>   [116,]    2    2    2    2    2    2    2    2    2     2 #>   [117,]    2    2    2    2    2    2    2    2    2     2 #>   [118,]    3    3    3    3    3    3    3    3    3     3 #>   [119,]    3    3    3    3    3    3    3    3    3     3 #>   [120,]    2    2    2    2    2    2    2    2    2     2 #>   [121,]    3    3    3    3    3    3    3    3    3     3 #>   [122,]    2    2    2    2    2    2    2    2    2     2 #>   [123,]    3    3    3    3    3    3    3    3    3     3 #>   [124,]    2    2    2    2    2    2    2    2    2     2 #>   [125,]    2    2    2    2    2    2    2    2    2     2 #>   [126,]    3    3    3    3    3    3    3    3    3     3 #>   [127,]    3    3    3    3    3    3    3    3    3     3 #>   [128,]    2    2    2    2    2    2    2    2    2     2 #>   [129,]    2    2    2    2    2    2    2    2    2     2 #>   [130,]    3    3    3    3    3    3    3    3    3     3 #>   [131,]    3    3    3    3    3    3    3    3    3     3 #>   [132,]    3    3    3    3    3    3    3    3    3     3 #>   [133,]    3    3    3    3    3    3    3    3    3     3 #>   [134,]    3    3    3    3    3    3    3    3    3     3 #>   [135,]    3    3    3    3    3    3    3    3    3     3 #>   [136,]    3    3    3    3    3    3    3    3    3     3 #>   [137,]    3    3    3    3    3    3    3    3    3     3 #>   [138,]    3    3    3    3    3    3    3    3    3     3 #>   [139,]    2    2    2    2    2    2    2    2    2     2 #>   [140,]    2    2    2    2    2    2    2    2    2     2 #>   [141,]    3    3    3    3    3    3    3    3    3     3 #>   [142,]    3    3    3    3    3    3    3    3    3     3 #>   [143,]    2    2    2    2    2    2    2    2    2     2 #>   [144,]    2    2    2    2    2    2    2    2    2     2 #>   [145,]    2    2    2    2    2    2    2    2    2     2 #>   [146,]    2    2    2    2    2    2    2    2    2     2 #>   [147,]    2    2    2    2    2    2    2    2    2     2 #>   [148,]    3    3    3    3    3    3    3    3    3     3 #>   [149,]    2    2    2    2    2    2    2    2    2     2 #>   [150,]    2    2    2    2    2    2    2    2    2     2 #>   [151,]    2    2    2    2    2    2    2    2    2     2 #>   [152,]    3    3    3    3    3    3    3    3    3     3 #>   [153,]    2    2    2    2    2    2    2    2    2     2 #>   [154,]    2    2    2    2    2    2    2    2    2     2 #>   [155,]    2    2    2    2    2    2    2    2    2     2 #>   [156,]    2    2    2    2    2    2    2    2    2     2 #>   [157,]    3    3    3    3    3    3    3    3    3     3 #>   [158,]    3    3    3    3    3    3    3    3    3     3 #>   [159,]    2    2    2    2    2    2    2    2    2     2 #>   [160,]    3    3    3    3    3    3    3    3    3     3 #>   [161,]    3    3    3    3    3    3    3    3    3     3 #>   [162,]    3    3    3    3    3    3    3    3    3     3 #>   [163,]    2    2    2    2    2    2    2    2    2     2 #>   [164,]    3    3    3    3    3    3    3    3    3     3 #>   [165,]    2    2    2    2    2    2    2    2    2     2 #>   [166,]    2    2    2    2    2    2    2    2    2     2 #>   [167,]    3    3    3    3    3    3    3    3    3     3 #>   [168,]    3    3    3    3    3    3    3    3    3     3 #>   [169,]    3    3    3    3    3    3    3    3    3     3 #>   [170,]    2    2    2    2    2    2    2    2    2     2 #>   [171,]    2    2    2    2    2    2    2    2    2     2 #>   [172,]    2    2    2    2    2    2    2    2    2     2 #>   [173,]    3    3    3    3    3    3    3    3    3     3 #>   [174,]    3    3    3    3    3    3    3    3    3     3 #>   [175,]    3    3    3    3    3    3    3    3    3     3 #>   [176,]    2    2    2    2    2    2    2    2    2     2 #>   [177,]    2    2    2    2    2    2    2    2    2     2 #>   [178,]    2    2    2    2    2    2    2    2    2     2 #>   [179,]    2    2    2    2    2    2    2    2    2     2 #>   [180,]    3    3    3    3    3    3    3    3    3     3 #>   [181,]    2    2    2    2    2    2    2    2    2     2 #>   [182,]    3    3    3    3    3    3    3    3    3     3 #>   [183,]    2    2    2    2    2    2    2    2    2     2 #>   [184,]    2    2    2    2    2    2    2    2    2     2 #>   [185,]    3    3    3    3    3    3    3    3    3     3 #>   [186,]    2    2    2    2    2    2    2    2    2     2 #>   [187,]    3    3    3    3    3    3    3    3    3     3 #>   [188,]    3    3    3    3    3    3    3    3    3     3 #>   [189,]    2    2    2    2    2    2    2    2    2     2 #>   [190,]    2    2    2    2    2    2    2    2    2     2 #>   [191,]    3    3    3    3    3    3    3    3    3     3 #>   [192,]    3    3    3    3    3    3    3    3    3     3 #>   [193,]    3    3    3    3    3    3    3    3    3     3 #>   [194,]    2    2    2    2    2    2    2    2    2     2 #>   [195,]    3    3    3    3    3    3    3    3    3     3 #>   [196,]    3    3    3    3    3    3    3    3    3     3 #>   [197,]    3    3    3    3    3    3    3    3    3     3 #>   [198,]    2    2    2    2    2    2    2    2    2     2 #>   [199,]    3    3    3    3    3    3    3    3    3     3 #>   [200,]    2    2    2    2    2    2    2    2    2     2 #>   [201,]    5    5    5    5    5    5    5    5    5     5 #>   [202,]    5    5    5    5    5    5    5    5    5     5 #>   [203,]    4    4    4    4    4    4    4    4    4     4 #>   [204,]    5    5    5    5    5    5    5    5    5     5 #>   [205,]    4    4    4    4    4    4    4    4    4     4 #>   [206,]    4    4    4    4    4    4    4    4    4     4 #>   [207,]    5    5    5    5    5    5    5    5    5     5 #>   [208,]    5    5    5    5    5    5    5    5    5     5 #>   [209,]    5    5    5    5    5    5    5    5    5     5 #>   [210,]    5    5    5    5    5    5    5    5    5     5 #>   [211,]    4    4    4    4    4    4    4    4    4     4 #>   [212,]    4    4    4    4    4    4    4    4    4     4 #>   [213,]    5    5    5    5    5    5    5    5    5     5 #>   [214,]    4    4    4    4    4    4    4    4    4     4 #>   [215,]    5    5    5    5    5    5    5    5    5     5 #>   [216,]    5    5    5    5    5    5    5    5    5     5 #>   [217,]    5    5    5    5    5    5    5    5    5     5 #>   [218,]    5    5    5    5    5    5    5    5    5     5 #>   [219,]    4    4    4    4    4    4    4    4    4     4 #>   [220,]    4    4    4    4    4    4    4    4    4     4 #>   [221,]    5    5    5    5    5    5    5    5    5     5 #>   [222,]    4    4    4    4    4    4    4    4    4     4 #>   [223,]    5    5    5    5    5    5    5    5    5     5 #>   [224,]    4    4    4    4    4    4    4    4    4     4 #>   [225,]    5    5    5    5    5    5    5    5    5     5 #>   [226,]    4    4    4    4    4    4    4    4    4     4 #>   [227,]    5    5    5    5    5    5    5    5    5     5 #>   [228,]    5    5    5    5    5    5    5    5    5     5 #>   [229,]    4    4    4    4    4    4    4    4    4     4 #>   [230,]    4    4    4    4    4    4    4    4    4     4 #>   [231,]    5    5    5    5    5    5    5    5    5     5 #>   [232,]    4    4    4    4    4    4    4    4    4     4 #>   [233,]    4    4    4    4    4    4    4    4    4     4 #>   [234,]    4    4    4    4    4    4    4    4    4     4 #>   [235,]    4    4    4    4    4    4    4    4    4     4 #>   [236,]    4    4    4    4    4    4    4    4    4     4 #>   [237,]    5    5    5    5    5    5    5    5    5     5 #>   [238,]    5    5    5    5    5    5    5    5    5     5 #>   [239,]    5    5    5    5    5    5    5    5    5     5 #>   [240,]    4    4    4    4    4    4    4    4    4     4 #>   [241,]    4    4    4    4    4    4    4    4    4     4 #>   [242,]    4    4    4    4    4    4    4    4    4     4 #>   [243,]    5    5    5    5    5    5    5    5    5     5 #>   [244,]    5    5    5    5    5    5    5    5    5     5 #>   [245,]    5    5    5    5    5    5    5    5    5     5 #>   [246,]    5    5    5    5    5    5    5    5    5     5 #>   [247,]    5    5    5    5    5    5    5    5    5     5 #>   [248,]    4    4    4    4    4    4    4    4    4     4 #>   [249,]    5    5    5    5    5    5    5    5    5     5 #>   [250,]    5    5    5    5    5    5    5    5    5     5 #>   [251,]    4    4    4    4    4    4    4    4    4     4 #>   [252,]    4    4    4    4    4    4    4    4    4     4 #>   [253,]    5    5    5    5    5    5    5    5    5     5 #>   [254,]    4    4    4    4    4    4    4    4    4     4 #>   [255,]    4    4    4    4    4    4    4    4    4     4 #>   [256,]    5    5    5    5    5    5    5    5    5     5 #>   [257,]    4    4    4    4    4    4    4    4    4     4 #>   [258,]    4    4    4    4    4    4    4    4    4     4 #>   [259,]    5    5    5    5    5    5    5    5    5     5 #>   [260,]    4    4    4    4    4    4    4    4    4     4 #>   [261,]    5    5    5    5    5    5    5    5    5     5 #>   [262,]    4    4    4    4    4    4    4    4    4     4 #>   [263,]    4    4    4    4    4    4    4    4    4     4 #>   [264,]    5    5    5    5    5    5    5    5    5     5 #>   [265,]    5    5    5    5    5    5    5    5    5     5 #>   [266,]    4    4    4    4    4    4    4    4    4     4 #>   [267,]    4    4    4    4    4    4    4    4    4     4 #>   [268,]    4    4    4    4    4    4    4    4    4     4 #>   [269,]    4    4    4    4    4    4    4    4    4     4 #>   [270,]    5    5    5    5    5    5    5    5    5     5 #>   [271,]    5    5    5    5    5    5    5    5    5     5 #>   [272,]    5    5    5    5    5    5    5    5    5     5 #>   [273,]    5    5    5    5    5    5    5    5    5     5 #>   [274,]    5    5    5    5    5    5    5    5    5     5 #>   [275,]    5    5    5    5    5    5    5    5    5     5 #>   [276,]    5    5    5    5    5    5    5    5    5     5 #>   [277,]    5    5    5    5    5    5    5    5    5     5 #>   [278,]    4    4    4    4    4    4    4    4    4     4 #>   [279,]    5    5    5    5    5    5    5    5    5     5 #>   [280,]    4    4    4    4    4    4    4    4    4     4 #>   [281,]    4    4    4    4    4    4    4    4    4     4 #>   [282,]    5    5    5    5    5    5    5    5    5     5 #>   [283,]    4    4    4    4    4    4    4    4    4     4 #>   [284,]    5    5    5    5    5    5    5    5    5     5 #>   [285,]    5    5    5    5    5    5    5    5    5     5 #>   [286,]    5    5    5    5    5    5    5    5    5     5 #>   [287,]    5    5    5    5    5    5    5    5    5     5 #>   [288,]    5    5    5    5    5    5    5    5    5     5 #>   [289,]    4    4    4    4    4    4    4    4    4     4 #>   [290,]    5    5    5    5    5    5    5    5    5     5 #>   [291,]    4    4    4    4    4    4    4    4    4     4 #>   [292,]    5    5    5    5    5    5    5    5    5     5 #>   [293,]    4    4    4    4    4    4    4    4    4     4 #>   [294,]    5    5    5    5    5    5    5    5    5     5 #>   [295,]    5    5    5    5    5    5    5    5    5     5 #>   [296,]    5    5    5    5    5    5    5    5    5     5 #>   [297,]    4    4    4    4    4    4    4    4    4     4 #>   [298,]    4    4    4    4    4    4    4    4    4     4 #>   [299,]    4    4    4    4    4    4    4    4    4     4 #>   [300,]    5    5    5    5    5    5    5    5    5     5 #>   [301,]    7    7    7    7    7    7    7    7    7     7 #>   [302,]    6    6    6    6    6    6    6    6    6     6 #>   [303,]    6    6    6    6    6    6    6    6    6     6 #>   [304,]    6    6    6    6    6    6    6    6    6     6 #>   [305,]    7    7    7    7    7    7    7    7    7     7 #>   [306,]    6    6    6    6    6    6    6    6    6     6 #>   [307,]    6    6    6    6    6    6    6    6    6     6 #>   [308,]    6    6    6    6    6    6    6    6    6     6 #>   [309,]    6    6    6    6    6    6    6    6    6     6 #>   [310,]    7    7    7    7    7    7    7    7    7     7 #>   [311,]    7    7    7    7    7    7    7    7    7     7 #>   [312,]    7    7    7    7    7    7    7    7    7     7 #>   [313,]    6    6    6    6    6    6    6    6    6     6 #>   [314,]    7    7    7    7    7    7    7    7    7     7 #>   [315,]    7    7    7    7    7    7    7    7    7     7 #>   [316,]    6    6    6    6    6    6    6    6    6     6 #>   [317,]    7    7    7    7    7    7    7    7    7     7 #>   [318,]    7    7    7    7    7    7    7    7    7     7 #>   [319,]    6    6    6    6    6    6    6    6    6     6 #>   [320,]    6    6    6    6    6    6    6    6    6     6 #>   [321,]    6    6    6    6    6    6    6    6    6     6 #>   [322,]    7    7    7    7    7    7    7    7    7     7 #>   [323,]    6    6    6    6    6    6    6    6    6     6 #>   [324,]    6    6    6    6    6    6    6    6    6     6 #>   [325,]    6    6    6    6    6    6    6    6    6     6 #>   [326,]    7    7    7    7    7    7    7    7    7     7 #>   [327,]    7    7    7    7    7    7    7    7    7     7 #>   [328,]    6    6    6    6    6    6    6    6    6     6 #>   [329,]    6    6    6    6    6    6    6    6    6     6 #>   [330,]    6    6    6    6    6    6    6    6    6     6 #>   [331,]    7    7    7    7    7    7    7    7    7     7 #>   [332,]    7    7    7    7    7    7    7    7    7     7 #>   [333,]    6    6    6    6    6    6    6    6    6     6 #>   [334,]    6    6    6    6    6    6    6    6    6     6 #>   [335,]    6    6    6    6    6    6    6    6    6     6 #>   [336,]    6    6    6    6    6    6    6    6    6     6 #>   [337,]    6    6    6    6    6    6    6    6    6     6 #>   [338,]    6    6    6    6    6    6    6    6    6     6 #>   [339,]    6    6    6    6    6    6    6    6    6     6 #>   [340,]    6    6    6    6    6    6    6    6    6     6 #>   [341,]    6    6    6    6    6    6    6    6    6     6 #>   [342,]    6    6    6    6    6    6    6    6    6     6 #>   [343,]    7    7    7    7    7    7    7    7    7     7 #>   [344,]    6    6    6    6    6    6    6    6    6     6 #>   [345,]    6    6    6    6    6    6    6    6    6     6 #>   [346,]    6    6    6    6    6    6    6    6    6     6 #>   [347,]    7    7    7    7    7    7    7    7    7     7 #>   [348,]    6    6    6    6    6    6    6    6    6     6 #>   [349,]    6    6    6    6    6    6    6    6    6     6 #>   [350,]    6    6    6    6    6    6    6    6    6     6 #>   [351,]    6    6    6    6    6    6    6    6    6     6 #>   [352,]    7    7    7    7    7    7    7    7    7     7 #>   [353,]    6    6    6    6    6    6    6    6    6     6 #>   [354,]    6    6    6    6    6    6    6    6    6     6 #>   [355,]    6    6    6    6    6    6    6    6    6     6 #>   [356,]    6    6    6    6    6    6    6    6    6     6 #>   [357,]    6    6    6    6    6    6    6    6    6     6 #>   [358,]    7    7    7    7    7    7    7    7    7     7 #>   [359,]    7    7    7    7    7    7    7    7    7     7 #>   [360,]    6    6    6    6    6    6    6    6    6     6 #>   [361,]    7    7    7    7    7    7    7    7    7     7 #>   [362,]    6    6    6    6    6    6    6    6    6     6 #>   [363,]    6    6    6    6    6    6    6    6    6     6 #>   [364,]    6    6    6    6    6    6    6    6    6     6 #>   [365,]    6    6    6    6    6    6    6    6    6     6 #>   [366,]    7    7    7    7    7    7    7    7    7     7 #>   [367,]    6    6    6    6    6    6    6    6    6     6 #>   [368,]    6    6    6    6    6    6    6    6    6     6 #>   [369,]    6    6    6    6    6    6    6    6    6     6 #>   [370,]    7    7    7    7    7    7    7    7    7     7 #>   [371,]    7    7    7    7    7    7    7    7    7     7 #>   [372,]    6    6    6    6    6    6    6    6    6     6 #>   [373,]    6    6    6    6    6    6    6    6    6     6 #>   [374,]    6    6    6    6    6    6    6    6    6     6 #>   [375,]    7    7    7    7    7    7    7    7    7     7 #>   [376,]    6    6    6    6    6    6    6    6    6     6 #>   [377,]    7    7    7    7    7    7    7    7    7     7 #>   [378,]    6    6    6    6    6    6    6    6    6     6 #>   [379,]    7    7    7    7    7    7    7    7    7     7 #>   [380,]    6    6    6    6    6    6    6    6    6     6 #>   [381,]    6    6    6    6    6    6    6    6    6     6 #>   [382,]    6    6    6    6    6    6    6    6    6     6 #>   [383,]    6    6    6    6    6    6    6    6    6     6 #>   [384,]    6    6    6    6    6    6    6    6    6     6 #>   [385,]    6    6    6    6    6    6    6    6    6     6 #>   [386,]    6    6    6    6    6    6    6    6    6     6 #>   [387,]    7    7    7    7    7    7    7    7    7     7 #>   [388,]    6    6    6    6    6    6    6    6    6     6 #>   [389,]    6    6    6    6    6    6    6    6    6     6 #>   [390,]    7    7    7    7    7    7    7    7    7     7 #>   [391,]    7    7    7    7    7    7    7    7    7     7 #>   [392,]    6    6    6    6    6    6    6    6    6     6 #>   [393,]    6    6    6    6    6    6    6    6    6     6 #>   [394,]    6    6    6    6    6    6    6    6    6     6 #>   [395,]    7    7    7    7    7    7    7    7    7     7 #>   [396,]    6    6    6    6    6    6    6    6    6     6 #>   [397,]    6    6    6    6    6    6    6    6    6     6 #>   [398,]    6    6    6    6    6    6    6    6    6     6 #>   [399,]    6    6    6    6    6    6    6    6    6     6 #>   [400,]    7    7    7    7    7    7    7    7    7     7 #>   [401,]    9    9    9    9    9    8    8    8    8     8 #>   [402,]    9    9    9    9    9    8    8    8    8     8 #>   [403,]    8    8    8    8    8    8    9    9    9     9 #>   [404,]    8    8    8    8    8    8    8    8    8     8 #>   [405,]    8    8    8    8    8    8    8    8    8     8 #>   [406,]    9    9    9    9    9    8    9    9    9     9 #>   [407,]    8    8    8    8    8    8    8    8    8     8 #>   [408,]    8    8    8    8    8    8    8    8    8     8 #>   [409,]    8    8    8    8    8    8    8    8    8     8 #>   [410,]    8    8    8    8    8    8    8    8    8     8 #>   [411,]    8    8    8    8    8    8    8    8    8     8 #>   [412,]    8    8    8    8    8    8    9    9    9     9 #>   [413,]    9    9    9    9    9    8    8    8    8     8 #>   [414,]    9    9    9    9    9    8    8    8    8     8 #>   [415,]    9    9    9    9    9    8    8    8    8     8 #>   [416,]    9    9    9    9    9    8    8    8    8     8 #>   [417,]    9    9    9    9    9    8    8    8    8     8 #>   [418,]    8    8    8    8    8    8    9    9    9     9 #>   [419,]    8    8    8    8    8    8    9    9    9     9 #>   [420,]    8    8    8    8    8    8    9    9    9     9 #>   [421,]    9    9    9    9    9    8    8    8    8     8 #>   [422,]    9    9    9    9    9    8    8    8    8     8 #>   [423,]    8    8    8    8    8    8    8    8    8     8 #>   [424,]    8    8    8    8    8    8    8    8    8     8 #>   [425,]    8    8    8    8    8    8    9    9    9     9 #>   [426,]    9    9    9    9    9    8    8    8    8     8 #>   [427,]    9    9    9    9    9    8    8    8    8     8 #>   [428,]    8    8    8    8    8    8    9    9    9     9 #>   [429,]    9    9    9    9    9    8    8    8    8     8 #>   [430,]    8    8    8    8    8    8    8    8    8     8 #>   [431,]    8    8    8    8    8    8    8    8    8     8 #>   [432,]    8    8    8    8    8    8    8    8    8     8 #>   [433,]    9    9    9    9    9    8    9    9    9     9 #>   [434,]    8    8    8    8    8    8    9    9    9     9 #>   [435,]    9    9    9    9    9    8    8    8    8     8 #>   [436,]    8    8    8    8    8    8    8    8    8     8 #>   [437,]    9    9    9    9    9    8    8    8    8     8 #>   [438,]    8    8    8    8    8    8    8    8    8     8 #>   [439,]    8    8    8    8    8    8    8    8    8     8 #>   [440,]    8    8    8    8    8    8    8    8    8     8 #>   [441,]    9    9    9    9    9    8    8    8    8     8 #>   [442,]    8    8    8    8    8    8    8    8    8     8 #>   [443,]    8    8    8    8    8    8    8    8    8     8 #>   [444,]    9    9    9    9    9    8    8    8    8     8 #>   [445,]    8    8    8    8    8    8    8    8    8     8 #>   [446,]    8    8    8    8    8    8    8    8    8     8 #>   [447,]    9    9    9    9    9    8    8    8    8     8 #>   [448,]    8    8    8    8    8    8    8    8    8     8 #>   [449,]    8    8    8    8    8    8    8    8    8     8 #>   [450,]    9    9    9    9    9    8    8    8    8     8 #>   [451,]    8    8    8    8    8    8    8    8    8     8 #>   [452,]    9    9    9    9    9    8    8    8    8     8 #>   [453,]    8    8    8    8    8    8    8    8    8     8 #>   [454,]    8    8    8    8    8    8    8    8    8     8 #>   [455,]    8    8    8    8    8    8    8    8    8     8 #>   [456,]    8    8    8    8    8    8    8    8    8     8 #>   [457,]    8    8    8    8    8    8    8    8    8     8 #>   [458,]    9    9    9    9    9    8    8    8    8     8 #>   [459,]    9    9    9    9    9    8    8    8    8     8 #>   [460,]    8    8    8    8    8    8    9    9    9     9 #>   [461,]    9    9    9    9    9    8    8    8    8     8 #>   [462,]    8    8    8    8    8    8    8    8    8     8 #>   [463,]    8    8    8    8    8    8    8    8    8     8 #>   [464,]    8    8    8    8    8    8    8    8    8     8 #>   [465,]    8    8    8    8    8    8    9    9    9     9 #>   [466,]    8    8    8    8    8    8    8    8    8     8 #>   [467,]    8    8    8    8    8    8    8    8    8     8 #>   [468,]    9    9    9    9    9    8    8    8    8     8 #>   [469,]    8    8    8    8    8    8    8    8    8     8 #>   [470,]    9    9    9    9    9    8    9    9    9     9 #>   [471,]    9    9    9    9    9    8    8    8    8     8 #>   [472,]    8    8    8    8    8    8    8    8    8     8 #>   [473,]    9    9    9    9    9    8    9    9    9     9 #>   [474,]    8    8    8    8    8    8    8    8    8     8 #>   [475,]    8    8    8    8    8    8    8    8    8     8 #>   [476,]    9    9    9    9    9    8    8    8    8     8 #>   [477,]    9    9    9    9    9    8    8    8    8     8 #>   [478,]    8    8    8    8    8    8    8    8    8     8 #>   [479,]    9    9    9    9    9    8    8    8    8     8 #>   [480,]    8    8    8    8    8    8    8    8    8     8 #>   [481,]    9    9    9    9    9    8    8    8    8     8 #>   [482,]    8    8    8    8    8    8    8    8    8     8 #>   [483,]    9    9    9    9    9    8    8    8    8     8 #>   [484,]    8    8    8    8    8    8    9    9    9     9 #>   [485,]    8    8    8    8    8    8    8    8    8     8 #>   [486,]    9    9    9    9    9    8    8    8    8     8 #>   [487,]    8    8    8    8    8    8    8    8    8     8 #>   [488,]    8    8    8    8    8    8    8    8    8     8 #>   [489,]    8    8    8    8    8    8    8    8    8     8 #>   [490,]    9    9    9    9    9    8    8    8    8     8 #>   [491,]    8    8    8    8    8    8    8    8    8     8 #>   [492,]    8    8    8    8    8    8    8    8    8     8 #>   [493,]    9    9    9    9    9    8    9    9    9     9 #>   [494,]    9    9    9    9    9    8    8    8    8     8 #>   [495,]    8    8    8    8    8    8    8    8    8     8 #>   [496,]    9    9    9    9    9    8    8    8    8     8 #>   [497,]    8    8    8    8    8    8    9    9    9     9 #>   [498,]    8    8    8    8    8    8    9    9    9     9 #>   [499,]    9    9    9    9    9    8    8    8    8     8 #>   [500,]    9    9    9    9    9    8    8    8    8     8 #>   [501,]   10   10   10   10   10    9   10   10   10    10 #>   [502,]   10   10   10   10   10    9   10   10   10    10 #>   [503,]   10   10   10   10   10    9   10   10   10    10 #>   [504,]   11   11   11   11   11    9   11   11   11    11 #>   [505,]   10   10   10   10   10    9   10   10   10    10 #>   [506,]   10   10   10   10   10    9   10   10   10    10 #>   [507,]   11   11   11   11   11    9   10   10   10    10 #>   [508,]   10   10   10   10   10    9   10   10   10    10 #>   [509,]   11   11   11   11   11    9   10   10   10    10 #>   [510,]   11   11   11   11   11    9   11   11   11    11 #>   [511,]   10   10   10   10   10    9   10   10   10    10 #>   [512,]   10   10   10   10   10    9   10   10   10    10 #>   [513,]   10   10   10   10   10    9   10   10   10    10 #>   [514,]   11   11   11   11   11    9   10   10   10    10 #>   [515,]   10   10   10   10   10    9   10   10   10    10 #>   [516,]   11   11   11   11   11    9   10   10   10    10 #>   [517,]   10   10   10   10   10    9   10   10   10    10 #>   [518,]   10   10   10   10   10    9   11   11   11    11 #>   [519,]   10   10   10   10   10    9   10   10   10    10 #>   [520,]   11   11   11   11   11    9   10   10   10    10 #>   [521,]   10   10   10   10   10    9   11   11   11    11 #>   [522,]   10   10   10   10   10    9   10   10   10    10 #>   [523,]   10   10   10   10   10    9   10   10   10    10 #>   [524,]   11   11   11   11   11    9   10   10   10    10 #>   [525,]   11   11   11   11   11    9   11   11   11    11 #>   [526,]   10   10   10   10   10    9   10   10   10    10 #>   [527,]   10   10   10   10   10    9   10   10   10    10 #>   [528,]   11   11   11   11   11    9   10   10   10    10 #>   [529,]   10   10   10   10   10    9   10   10   10    10 #>   [530,]   10   10   10   10   10    9   10   10   10    10 #>   [531,]   10   10   10   10   10    9   10   10   10    10 #>   [532,]   10   10   10   10   10    9   10   10   10    10 #>   [533,]   10   10   10   10   10    9   10   10   10    10 #>   [534,]   10   10   10   10   10    9   10   10   10    10 #>   [535,]   10   10   10   10   10    9   10   10   10    10 #>   [536,]   11   11   11   11   11    9   10   10   10    10 #>   [537,]   10   10   10   10   10    9   10   10   10    10 #>   [538,]   10   10   10   10   10    9   10   10   10    10 #>   [539,]   11   11   11   11   11    9   11   11   11    11 #>   [540,]   10   10   10   10   10    9   10   10   10    10 #>   [541,]   10   10   10   10   10    9   10   10   10    10 #>   [542,]   10   10   10   10   10    9   10   10   10    10 #>   [543,]   10   10   10   10   10    9   11   11   11    11 #>   [544,]   10   10   10   10   10    9   10   10   10    10 #>   [545,]   10   10   10   10   10    9   11   11   11    11 #>   [546,]   10   10   10   10   10    9   10   10   10    10 #>   [547,]   10   10   10   10   10    9   10   10   10    10 #>   [548,]   10   10   10   10   10    9   10   10   10    10 #>   [549,]   10   10   10   10   10    9   10   10   10    10 #>   [550,]   11   11   11   11   11    9   10   10   10    10 #>   [551,]   10   10   10   10   10    9   10   10   10    10 #>   [552,]   11   11   11   11   11    9   10   10   10    10 #>   [553,]   10   10   10   10   10    9   11   11   11    11 #>   [554,]   11   11   11   11   11    9   10   10   10    10 #>   [555,]   10   10   10   10   10    9   10   10   10    10 #>   [556,]   10   10   10   10   10    9   10   10   10    10 #>   [557,]   11   11   11   11   11    9   10   10   10    10 #>   [558,]   10   10   10   10   10    9   10   10   10    10 #>   [559,]   11   11   11   11   11    9   10   10   10    10 #>   [560,]   10   10   10   10   10    9   10   10   10    10 #>   [561,]   10   10   10   10   10    9   10   10   10    10 #>   [562,]   10   10   10   10   10    9   10   10   10    10 #>   [563,]   10   10   10   10   10    9   10   10   10    10 #>   [564,]   10   10   10   10   10    9   10   10   10    10 #>   [565,]   10   10   10   10   10    9   10   10   10    10 #>   [566,]   10   10   10   10   10    9   10   10   10    10 #>   [567,]   11   11   11   11   11    9   10   10   10    10 #>   [568,]   10   10   10   10   10    9   10   10   10    10 #>   [569,]   10   10   10   10   10    9   10   10   10    10 #>   [570,]   10   10   10   10   10    9   10   10   10    10 #>   [571,]   10   10   10   10   10    9   10   10   10    10 #>   [572,]   10   10   10   10   10    9   11   11   11    11 #>   [573,]   11   11   11   11   11    9   11   11   11    11 #>   [574,]   10   10   10   10   10    9   11   11   11    11 #>   [575,]   10   10   10   10   10    9   11   11   11    11 #>   [576,]   11   11   11   11   11    9   11   11   11    11 #>   [577,]   10   10   10   10   10    9   11   11   11    11 #>   [578,]   10   10   10   10   10    9   10   10   10    10 #>   [579,]   10   10   10   10   10    9   10   10   10    10 #>   [580,]   10   10   10   10   10    9   10   10   10    10 #>   [581,]   10   10   10   10   10    9   10   10   10    10 #>   [582,]   10   10   10   10   10    9   10   10   10    10 #>   [583,]   10   10   10   10   10    9   10   10   10    10 #>   [584,]   10   10   10   10   10    9   11   11   11    11 #>   [585,]   10   10   10   10   10    9   10   10   10    10 #>   [586,]   11   11   11   11   11    9   10   10   10    10 #>   [587,]   10   10   10   10   10    9   10   10   10    10 #>   [588,]   10   10   10   10   10    9   10   10   10    10 #>   [589,]   10   10   10   10   10    9   10   10   10    10 #>   [590,]   11   11   11   11   11    9   10   10   10    10 #>   [591,]   11   11   11   11   11    9   10   10   10    10 #>   [592,]   10   10   10   10   10    9   10   10   10    10 #>   [593,]   10   10   10   10   10    9   10   10   10    10 #>   [594,]   10   10   10   10   10    9   11   11   11    11 #>   [595,]   10   10   10   10   10    9   11   11   11    11 #>   [596,]   10   10   10   10   10    9   10   10   10    10 #>   [597,]   10   10   10   10   10    9   10   10   10    10 #>   [598,]   10   10   10   10   10    9   10   10   10    10 #>   [599,]   10   10   10   10   10    9   10   10   10    10 #>   [600,]   10   10   10   10   10    9   10   10   10    10 #>   [601,]   13   13   13   13   13   11   13   13   13    13 #>   [602,]   13   13   13   13   13   11   13   13   13    13 #>   [603,]   12   12   12   12   12   10   12   12   12    12 #>   [604,]   13   13   13   13   13   11   13   13   13    13 #>   [605,]   13   13   13   13   13   11   13   13   13    13 #>   [606,]   13   14   14   14   13   11   13   13   13    13 #>   [607,]   12   12   12   12   12   10   12   12   12    12 #>   [608,]   13   14   14   14   13   11   13   13   13    13 #>   [609,]   13   14   14   14   13   11   13   13   13    13 #>   [610,]   13   13   13   13   13   11   13   13   13    13 #>   [611,]   13   13   13   13   13   11   13   13   13    13 #>   [612,]   13   14   14   14   13   11   13   13   13    13 #>   [613,]   13   13   13   13   13   11   13   13   13    13 #>   [614,]   13   13   13   13   13   11   13   13   13    13 #>   [615,]   13   14   14   14   13   11   13   13   13    13 #>   [616,]   13   13   13   13   13   11   13   13   13    13 #>   [617,]   13   13   13   13   13   11   13   13   13    13 #>   [618,]   13   13   13   13   13   11   13   13   13    13 #>   [619,]   13   13   13   13   13   11   13   13   13    13 #>   [620,]   13   13   13   13   13   11   13   13   13    13 #>   [621,]   12   12   12   12   12   10   12   12   12    12 #>   [622,]   13   13   13   13   13   11   13   13   13    13 #>   [623,]   12   12   12   12   12   10   12   12   12    12 #>   [624,]   13   13   13   13   13   11   13   13   13    13 #>   [625,]   13   13   13   13   13   11   13   13   13    13 #>   [626,]   13   14   14   14   13   11   13   13   13    13 #>   [627,]   13   13   13   13   13   11   13   13   13    13 #>   [628,]   13   13   13   13   13   11   13   13   13    13 #>   [629,]   13   13   13   13   13   11   13   13   13    13 #>   [630,]   12   12   12   12   12   10   12   12   12    12 #>   [631,]   12   12   12   12   12   10   12   12   12    12 #>   [632,]   13   13   13   13   13   11   13   13   13    13 #>   [633,]   13   14   14   14   13   11   13   13   13    13 #>   [634,]   13   13   13   13   13   11   13   13   13    13 #>   [635,]   13   13   13   13   13   11   13   13   13    13 #>   [636,]   13   13   13   13   13   11   13   13   13    13 #>   [637,]   13   13   13   13   13   11   13   13   13    13 #>   [638,]   13   13   13   13   13   11   13   13   13    13 #>   [639,]   12   12   12   12   12   10   12   12   12    12 #>   [640,]   13   13   13   13   13   11   13   13   13    13 #>   [641,]   13   13   13   13   13   11   13   13   13    13 #>   [642,]   13   13   13   13   13   11   13   13   13    13 #>   [643,]   13   14   14   14   13   11   13   13   13    13 #>   [644,]   13   13   13   13   13   11   13   13   13    13 #>   [645,]   13   14   14   14   13   11   13   13   13    13 #>   [646,]   13   14   14   14   13   11   13   13   13    13 #>   [647,]   12   12   12   12   12   10   12   12   12    12 #>   [648,]   13   13   13   13   13   11   13   13   13    13 #>   [649,]   12   12   12   12   12   10   12   12   12    12 #>   [650,]   13   13   13   13   13   11   13   13   13    13 #>   [651,]   13   14   14   14   13   11   13   13   13    13 #>   [652,]   13   13   13   13   13   11   13   13   13    13 #>   [653,]   13   13   13   13   13   11   13   13   13    13 #>   [654,]   12   12   12   12   12   10   12   12   12    12 #>   [655,]   13   13   13   13   13   11   13   13   13    13 #>   [656,]   13   14   14   14   13   11   13   13   13    13 #>   [657,]   13   14   14   14   13   11   13   13   13    13 #>   [658,]   13   13   13   13   13   11   13   13   13    13 #>   [659,]   13   13   13   13   13   11   13   13   13    13 #>   [660,]   13   13   13   13   13   11   13   13   13    13 #>   [661,]   13   14   14   14   13   11   13   13   13    13 #>   [662,]   12   12   12   12   12   10   12   12   12    12 #>   [663,]   13   13   13   13   13   11   13   13   13    13 #>   [664,]   13   14   14   14   13   11   13   13   13    13 #>   [665,]   13   13   13   13   13   11   13   13   13    13 #>   [666,]   13   14   14   14   13   11   13   13   13    13 #>   [667,]   13   13   13   13   13   11   13   13   13    13 #>   [668,]   13   14   14   14   13   11   13   13   13    13 #>   [669,]   13   13   13   13   13   11   13   13   13    13 #>   [670,]   12   12   12   12   12   10   12   12   12    12 #>   [671,]   13   13   13   13   13   11   13   13   13    13 #>   [672,]   13   13   13   13   13   11   13   13   13    13 #>   [673,]   13   13   13   13   13   11   13   13   13    13 #>   [674,]   13   13   13   13   13   11   13   13   13    13 #>   [675,]   13   13   13   13   13   11   13   13   13    13 #>   [676,]   13   14   14   14   13   11   13   13   13    13 #>   [677,]   12   12   12   12   12   10   12   12   12    12 #>   [678,]   13   13   13   13   13   11   13   13   13    13 #>   [679,]   12   12   12   12   12   10   12   12   12    12 #>   [680,]   12   12   12   12   12   10   12   12   12    12 #>   [681,]   13   13   13   13   13   11   13   13   13    13 #>   [682,]   13   13   13   13   13   11   13   13   13    13 #>   [683,]   12   12   12   12   12   10   12   12   12    12 #>   [684,]   13   13   13   13   13   11   13   13   13    13 #>   [685,]   13   13   13   13   13   11   13   13   13    13 #>   [686,]   13   13   13   13   13   11   13   13   13    13 #>   [687,]   13   13   13   13   13   11   13   13   13    13 #>   [688,]   13   13   13   13   13   11   13   13   13    13 #>   [689,]   13   13   13   13   13   11   13   13   13    13 #>   [690,]   13   13   13   13   13   11   13   13   13    13 #>   [691,]   13   13   13   13   13   11   13   13   13    13 #>   [692,]   13   13   13   13   13   11   13   13   13    13 #>   [693,]   13   13   13   13   13   11   13   13   13    13 #>   [694,]   13   14   14   14   13   11   13   13   13    13 #>   [695,]   12   12   12   12   12   10   12   12   12    12 #>   [696,]   13   13   13   13   13   11   13   13   13    13 #>   [697,]   13   13   13   13   13   11   13   13   13    13 #>   [698,]   12   12   12   12   12   10   12   12   12    12 #>   [699,]   13   13   13   13   13   11   13   13   13    13 #>   [700,]   13   13   13   13   13   11   13   13   13    13 #>   [701,]   14   17   17   17   15   13   14   14   14    14 #>   [702,]   15   15   15   15   14   12   16   15   15    15 #>   [703,]   15   15   15   15   14   12   15   15   15    15 #>   [704,]   14   16   16   16   15   13   14   14   14    14 #>   [705,]   15   15   15   15   14   12   16   15   15    15 #>   [706,]   15   15   15   15   14   12   15   15   15    15 #>   [707,]   15   15   15   15   14   12   15   15   15    15 #>   [708,]   14   16   16   16   15   13   14   14   14    14 #>   [709,]   14   16   16   16   15   13   14   14   14    14 #>   [710,]   15   15   15   15   14   12   16   15   15    15 #>   [711,]   14   17   17   17   15   13   14   14   14    14 #>   [712,]   15   15   15   15   14   12   16   15   15    15 #>   [713,]   14   17   17   17   15   13   14   14   14    14 #>   [714,]   14   17   17   17   15   13   14   14   14    14 #>   [715,]   14   17   17   17   15   13   14   14   14    14 #>   [716,]   15   15   15   15   14   12   15   15   15    15 #>   [717,]   14   16   16   16   15   13   14   14   14    14 #>   [718,]   15   15   15   15   14   12   16   15   15    15 #>   [719,]   15   15   15   15   14   12   15   15   15    15 #>   [720,]   15   15   15   15   14   12   16   15   15    15 #>   [721,]   14   17   17   17   15   13   14   14   14    14 #>   [722,]   14   17   17   17   15   13   14   14   14    14 #>   [723,]   15   15   15   15   14   12   16   15   15    15 #>   [724,]   15   15   15   15   14   12   16   15   15    15 #>   [725,]   15   15   15   15   14   12   15   15   15    15 #>   [726,]   15   15   15   15   14   12   15   15   15    15 #>   [727,]   14   16   16   16   15   13   14   14   14    14 #>   [728,]   15   15   15   15   14   12   15   15   15    15 #>   [729,]   15   15   15   15   14   12   16   15   15    15 #>   [730,]   14   17   17   17   15   13   14   14   14    14 #>   [731,]   15   15   15   15   14   12   16   15   15    15 #>   [732,]   15   15   15   15   14   12   16   15   15    15 #>   [733,]   15   15   15   15   14   12   16   15   15    15 #>   [734,]   15   15   15   15   14   12   15   15   15    15 #>   [735,]   14   17   17   17   15   13   14   14   14    14 #>   [736,]   15   15   15   15   14   12   16   15   15    15 #>   [737,]   15   15   15   15   14   12   15   15   15    15 #>   [738,]   15   15   15   15   14   12   15   15   15    15 #>   [739,]   15   15   15   15   14   12   15   15   15    15 #>   [740,]   15   15   15   15   14   12   16   15   15    15 #>   [741,]   15   15   15   15   14   12   15   15   15    15 #>   [742,]   15   15   15   15   14   12   15   15   15    15 #>   [743,]   14   17   17   17   15   13   14   14   14    14 #>   [744,]   14   16   16   16   15   13   14   14   14    14 #>   [745,]   14   17   17   17   15   13   14   14   14    14 #>   [746,]   14   17   17   17   15   13   14   14   14    14 #>   [747,]   15   15   15   15   14   12   15   15   15    15 #>   [748,]   15   15   15   15   14   12   15   15   15    15 #>   [749,]   14   17   17   17   15   13   14   14   14    14 #>   [750,]   15   15   15   15   14   12   16   15   15    15 #>   [751,]   15   15   15   15   14   12   15   15   15    15 #>   [752,]   14   16   16   16   15   13   14   14   14    14 #>   [753,]   15   15   15   15   14   12   16   15   15    15 #>   [754,]   14   17   17   17   15   13   14   14   14    14 #>   [755,]   14   17   17   17   15   13   14   14   14    14 #>   [756,]   15   15   15   15   14   12   15   15   15    15 #>   [757,]   15   15   15   15   14   12   15   15   15    15 #>   [758,]   14   17   17   17   15   13   14   14   14    14 #>   [759,]   15   15   15   15   14   12   15   15   15    15 #>   [760,]   15   15   15   15   14   12   16   15   15    15 #>   [761,]   15   15   15   15   14   12   16   15   15    15 #>   [762,]   14   17   17   17   15   13   14   14   14    14 #>   [763,]   15   15   15   15   14   12   16   15   15    15 #>   [764,]   15   15   15   15   14   12   15   15   15    15 #>   [765,]   15   15   15   15   14   12   15   15   15    15 #>   [766,]   14   17   17   17   15   13   14   14   14    14 #>   [767,]   14   17   17   17   15   13   14   14   14    14 #>   [768,]   14   17   17   17   15   13   14   14   14    14 #>   [769,]   14   17   17   17   15   13   14   14   14    14 #>   [770,]   15   15   15   15   14   12   16   15   15    15 #>   [771,]   15   15   15   15   14   12   15   15   15    15 #>   [772,]   15   15   15   15   14   12   15   15   15    15 #>   [773,]   15   15   15   15   14   12   15   15   15    15 #>   [774,]   14   17   17   17   15   13   14   14   14    14 #>   [775,]   15   15   15   15   14   12   16   15   15    15 #>   [776,]   15   15   15   15   14   12   15   15   15    15 #>   [777,]   15   15   15   15   14   12   15   15   15    15 #>   [778,]   15   15   15   15   14   12   15   15   15    15 #>   [779,]   14   17   17   17   15   13   14   14   14    14 #>   [780,]   14   17   17   17   15   13   14   14   14    14 #>   [781,]   14   16   16   16   15   13   14   14   14    14 #>   [782,]   14   16   16   16   15   13   14   14   14    14 #>   [783,]   14   17   17   17   15   13   14   14   14    14 #>   [784,]   15   15   15   15   14   12   16   15   15    15 #>   [785,]   14   17   17   17   15   13   14   14   14    14 #>   [786,]   15   15   15   15   14   12   16   15   15    15 #>   [787,]   14   17   17   17   15   13   14   14   14    14 #>   [788,]   14   17   17   17   15   13   14   14   14    14 #>   [789,]   14   17   17   17   15   13   14   14   14    14 #>   [790,]   14   16   16   16   15   13   14   14   14    14 #>   [791,]   14   17   17   17   15   13   14   14   14    14 #>   [792,]   14   17   17   17   15   13   14   14   14    14 #>   [793,]   15   15   15   15   14   12   16   15   15    15 #>   [794,]   15   15   15   15   14   12   15   15   15    15 #>   [795,]   14   16   16   16   15   13   14   14   14    14 #>   [796,]   14   17   17   17   15   13   14   14   14    14 #>   [797,]   15   15   15   15   14   12   15   15   15    15 #>   [798,]   15   15   15   15   14   12   15   15   15    15 #>   [799,]   14   17   17   17   15   13   14   14   14    14 #>   [800,]   15   15   15   15   14   12   15   15   15    15 #>   [801,]   16   19   19   19   17   15   18   17   17    17 #>   [802,]   16   18   18   18   16   14   17   16   16    16 #>   [803,]   16   18   18   18   16   14   17   16   16    16 #>   [804,]   16   19   19   19   17   15   18   17   17    17 #>   [805,]   16   18   18   18   16   14   17   16   16    16 #>   [806,]   16   18   18   18   16   14   17   16   16    16 #>   [807,]   16   19   19   19   17   15   18   17   17    17 #>   [808,]   16   19   19   19   17   15   18   17   17    17 #>   [809,]   16   19   19   19   17   15   18   17   17    17 #>   [810,]   16   19   19   19   17   15   18   17   17    17 #>   [811,]   16   18   18   18   16   14   17   16   16    16 #>   [812,]   16   18   18   18   16   14   17   16   16    16 #>   [813,]   16   19   19   19   17   15   18   17   17    17 #>   [814,]   16   18   18   18   16   14   17   16   16    16 #>   [815,]   16   19   19   19   17   15   18   17   17    17 #>   [816,]   16   19   19   19   17   15   18   17   17    17 #>   [817,]   16   19   19   19   17   15   18   17   17    17 #>   [818,]   16   19   19   19   17   15   18   17   17    17 #>   [819,]   16   18   18   18   16   14   17   16   16    16 #>   [820,]   16   18   18   18   16   14   17   16   16    16 #>   [821,]   16   19   19   19   17   15   18   17   17    17 #>   [822,]   16   18   18   18   16   14   17   16   16    16 #>   [823,]   16   19   19   19   17   15   18   17   17    17 #>   [824,]   16   18   18   18   16   14   17   16   16    16 #>   [825,]   16   19   19   19   17   15   18   17   17    17 #>   [826,]   16   18   18   18   16   14   17   16   16    16 #>   [827,]   16   19   19   19   17   15   18   17   17    17 #>   [828,]   16   19   19   19   17   15   18   17   17    17 #>   [829,]   16   18   18   18   16   14   17   16   16    16 #>   [830,]   16   18   18   18   16   14   17   16   16    16 #>   [831,]   16   18   18   18   16   14   17   16   16    16 #>   [832,]   16   18   18   18   16   14   17   16   16    16 #>   [833,]   16   18   18   18   16   14   17   16   16    16 #>   [834,]   16   18   18   18   16   14   17   16   16    16 #>   [835,]   16   18   18   18   16   14   17   16   16    16 #>   [836,]   16   18   18   18   16   14   17   16   16    16 #>   [837,]   16   19   19   19   17   15   18   17   17    17 #>   [838,]   16   18   18   18   16   14   17   16   16    16 #>   [839,]   16   19   19   19   17   15   18   17   17    17 #>   [840,]   16   18   18   18   16   14   17   16   16    16 #>   [841,]   16   18   18   18   16   14   17   16   16    16 #>   [842,]   16   18   18   18   16   14   17   16   16    16 #>   [843,]   16   19   19   19   17   15   18   17   17    17 #>   [844,]   16   18   18   18   16   14   17   16   16    16 #>   [845,]   16   19   19   19   17   15   18   17   17    17 #>   [846,]   16   19   19   19   17   15   18   17   17    17 #>   [847,]   16   19   19   19   17   15   18   17   17    17 #>   [848,]   16   18   18   18   16   14   17   16   16    16 #>   [849,]   16   18   18   18   16   14   17   16   16    16 #>   [850,]   16   18   18   18   16   14   17   16   16    16 #>   [851,]   16   18   18   18   16   14   17   16   16    16 #>   [852,]   16   18   18   18   16   14   17   16   16    16 #>   [853,]   16   19   19   19   17   15   18   17   17    17 #>   [854,]   16   18   18   18   16   14   17   16   16    16 #>   [855,]   16   18   18   18   16   14   17   16   16    16 #>   [856,]   16   19   19   19   17   15   18   17   17    17 #>   [857,]   16   18   18   18   16   14   17   16   16    16 #>   [858,]   16   18   18   18   16   14   17   16   16    16 #>   [859,]   16   18   18   18   16   14   17   16   16    16 #>   [860,]   16   18   18   18   16   14   17   16   16    16 #>   [861,]   16   19   19   19   17   15   18   17   17    17 #>   [862,]   16   18   18   18   16   14   17   16   16    16 #>   [863,]   16   18   18   18   16   14   17   16   16    16 #>   [864,]   16   19   19   19   17   15   18   17   17    17 #>   [865,]   16   18   18   18   16   14   17   16   16    16 #>   [866,]   16   18   18   18   16   14   17   16   16    16 #>   [867,]   16   18   18   18   16   14   17   16   16    16 #>   [868,]   16   18   18   18   16   14   17   16   16    16 #>   [869,]   16   18   18   18   16   14   17   16   16    16 #>   [870,]   16   19   19   19   17   15   18   17   17    17 #>   [871,]   16   19   19   19   17   15   18   17   17    17 #>   [872,]   16   19   19   19   17   15   18   17   17    17 #>   [873,]   16   19   19   19   17   15   18   17   17    17 #>   [874,]   16   19   19   19   17   15   18   17   17    17 #>   [875,]   16   19   19   19   17   15   18   17   17    17 #>   [876,]   16   19   19   19   17   15   18   17   17    17 #>   [877,]   16   19   19   19   17   15   18   17   17    17 #>   [878,]   16   18   18   18   16   14   17   16   16    16 #>   [879,]   16   18   18   18   16   14   17   16   16    16 #>   [880,]   16   18   18   18   16   14   17   16   16    16 #>   [881,]   16   18   18   18   16   14   17   16   16    16 #>   [882,]   16   19   19   19   17   15   18   17   17    17 #>   [883,]   16   18   18   18   16   14   17   16   16    16 #>   [884,]   16   19   19   19   17   15   18   17   17    17 #>   [885,]   16   18   18   18   16   14   17   16   16    16 #>   [886,]   16   18   18   18   16   14   17   16   16    16 #>   [887,]   16   19   19   19   17   15   18   17   17    17 #>   [888,]   16   19   19   19   17   15   18   17   17    17 #>   [889,]   16   18   18   18   16   14   17   16   16    16 #>   [890,]   16   19   19   19   17   15   18   17   17    17 #>   [891,]   16   18   18   18   16   14   17   16   16    16 #>   [892,]   16   18   18   18   16   14   17   16   16    16 #>   [893,]   16   18   18   18   16   14   17   16   16    16 #>   [894,]   16   19   19   19   17   15   18   17   17    17 #>   [895,]   16   19   19   19   17   15   18   17   17    17 #>   [896,]   16   19   19   19   17   15   18   17   17    17 #>   [897,]   16   18   18   18   16   14   17   16   16    16 #>   [898,]   16   18   18   18   16   14   17   16   16    16 #>   [899,]   16   18   18   18   16   14   17   16   16    16 #>   [900,]   16   19   19   19   17   15   18   17   17    17 #>   [901,]   18   21   21   21   19   17   20   19   19    19 #>   [902,]   18   21   21   21   19   17   20   19   19    19 #>   [903,]   18   21   21   21   19   17   20   19   19    19 #>   [904,]   18   21   21   21   19   17   20   19   19    19 #>   [905,]   18   21   21   21   19   17   20   19   19    19 #>   [906,]   17   20   20   20   18   16   19   18   18    18 #>   [907,]   18   21   21   21   19   17   20   19   19    19 #>   [908,]   18   21   21   21   19   17   20   19   19    19 #>   [909,]   18   21   21   21   19   17   20   19   19    19 #>   [910,]   18   21   21   21   19   17   20   19   19    19 #>   [911,]   18   21   21   21   19   17   20   19   19    19 #>   [912,]   18   21   21   21   19   17   20   19   19    19 #>   [913,]   18   21   21   21   19   17   20   19   19    19 #>   [914,]   18   21   21   21   19   17   20   19   19    19 #>   [915,]   18   21   21   21   19   17   20   19   19    19 #>   [916,]   18   21   21   21   19   17   20   19   19    19 #>   [917,]   18   21   21   21   19   17   20   19   19    19 #>   [918,]   18   21   21   21   19   17   20   19   19    19 #>   [919,]   18   21   21   21   19   17   20   19   19    19 #>   [920,]   17   20   20   20   18   16   19   18   18    18 #>   [921,]   17   20   20   20   18   16   19   18   18    18 #>   [922,]   18   21   21   21   19   17   20   19   19    19 #>   [923,]   18   21   21   21   19   17   20   19   19    19 #>   [924,]   18   21   21   21   19   17   20   19   19    19 #>   [925,]   17   20   20   20   18   16   19   18   18    18 #>   [926,]   18   21   21   21   19   17   20   19   19    19 #>   [927,]   18   21   21   21   19   17   20   19   19    19 #>   [928,]   18   21   21   21   19   17   20   19   19    19 #>   [929,]   18   21   21   21   19   17   20   19   19    19 #>   [930,]   18   21   21   21   19   17   20   19   19    19 #>   [931,]   18   21   21   21   19   17   20   19   19    19 #>   [932,]   18   21   21   21   19   17   20   19   19    19 #>   [933,]   18   21   21   21   19   17   20   19   19    19 #>   [934,]   18   21   21   21   19   17   20   19   19    19 #>   [935,]   17   20   20   20   18   16   19   18   18    18 #>   [936,]   18   21   21   21   19   17   20   19   19    19 #>   [937,]   18   21   21   21   19   17   20   19   19    19 #>   [938,]   18   21   21   21   19   17   20   19   19    19 #>   [939,]   18   21   21   21   19   17   20   19   19    19 #>   [940,]   18   21   21   21   19   17   20   19   19    19 #>   [941,]   18   21   21   21   19   17   20   19   19    19 #>   [942,]   17   20   20   20   18   16   19   18   18    18 #>   [943,]   18   21   21   21   19   17   20   19   19    19 #>   [944,]   17   20   20   20   18   16   19   18   18    18 #>   [945,]   18   21   21   21   19   17   20   19   19    19 #>   [946,]   18   21   21   21   19   17   20   19   19    19 #>   [947,]   18   21   21   21   19   17   20   19   19    19 #>   [948,]   18   21   21   21   19   17   20   19   19    19 #>   [949,]   18   21   21   21   19   17   20   19   19    19 #>   [950,]   18   21   21   21   19   17   20   19   19    19 #>   [951,]   18   21   21   21   19   17   20   19   19    19 #>   [952,]   18   21   21   21   19   17   20   19   19    19 #>   [953,]   17   20   20   20   18   16   19   18   18    18 #>   [954,]   18   21   21   21   19   17   20   19   19    19 #>   [955,]   18   21   21   21   19   17   20   19   19    19 #>   [956,]   17   20   20   20   18   16   19   18   18    18 #>   [957,]   18   21   21   21   19   17   20   19   19    19 #>   [958,]   18   21   21   21   19   17   20   19   19    19 #>   [959,]   18   21   21   21   19   17   20   19   19    19 #>   [960,]   18   21   21   21   19   17   20   19   19    19 #>   [961,]   18   21   21   21   19   17   20   19   19    19 #>   [962,]   18   21   21   21   19   17   20   19   19    19 #>   [963,]   18   21   21   21   19   17   20   19   19    19 #>   [964,]   18   21   21   21   19   17   20   19   19    19 #>   [965,]   17   20   20   20   18   16   19   18   18    18 #>   [966,]   18   21   21   21   19   17   20   19   19    19 #>   [967,]   18   21   21   21   19   17   20   19   19    19 #>   [968,]   18   21   21   21   19   17   20   19   19    19 #>   [969,]   18   21   21   21   19   17   20   19   19    19 #>   [970,]   18   21   21   21   19   17   20   19   19    19 #>   [971,]   18   21   21   21   19   17   20   19   19    19 #>   [972,]   18   21   21   21   19   17   20   19   19    19 #>   [973,]   17   20   20   20   18   16   19   18   18    18 #>   [974,]   17   20   20   20   18   16   19   18   18    18 #>   [975,]   18   21   21   21   19   17   20   19   19    19 #>   [976,]   18   21   21   21   19   17   20   19   19    19 #>   [977,]   18   21   21   21   19   17   20   19   19    19 #>   [978,]   18   21   21   21   19   17   20   19   19    19 #>   [979,]   18   21   21   21   19   17   20   19   19    19 #>   [980,]   17   20   20   20   18   16   19   18   18    18 #>   [981,]   18   21   21   21   19   17   20   19   19    19 #>   [982,]   17   20   20   20   18   16   19   18   18    18 #>   [983,]   18   21   21   21   19   17   20   19   19    19 #>   [984,]   17   20   20   20   18   16   19   18   18    18 #>   [985,]   17   20   20   20   18   16   19   18   18    18 #>   [986,]   17   20   20   20   18   16   19   18   18    18 #>   [987,]   18   21   21   21   19   17   20   19   19    19 #>   [988,]   18   21   21   21   19   17   20   19   19    19 #>   [989,]   17   20   20   20   18   16   19   18   18    18 #>   [990,]   18   21   21   21   19   17   20   19   19    19 #>   [991,]   18   21   21   21   19   17   20   19   19    19 #>   [992,]   18   21   21   21   19   17   20   19   19    19 #>   [993,]   18   21   21   21   19   17   20   19   19    19 #>   [994,]   17   20   20   20   18   16   19   18   18    18 #>   [995,]   18   21   21   21   19   17   20   19   19    19 #>   [996,]   18   21   21   21   19   17   20   19   19    19 #>   [997,]   18   21   21   21   19   17   20   19   19    19 #>   [998,]   18   21   21   21   19   17   20   19   19    19 #>   [999,]   17   20   20   20   18   16   19   18   18    18 #>  [1000,]   18   21   21   21   19   17   20   19   19    19 #>  [1001,]   19   22   22   22   20   18   21   20   20    20 #>  [1002,]   19   22   22   22   20   18   21   20   20    20 #>  [1003,]   19   22   22   22   20   18   21   20   20    20 #>  [1004,]   20   23   23   23   21   19   22   21   21    21 #>  [1005,]   19   22   22   22   20   18   21   20   20    20 #>  [1006,]   20   23   23   24   22   19   22   21   21    21 #>  [1007,]   19   22   22   22   20   18   21   20   20    20 #>  [1008,]   19   22   22   22   20   18   21   20   20    20 #>  [1009,]   20   23   23   23   21   19   22   21   21    21 #>  [1010,]   20   23   23   23   21   19   22   21   21    21 #>  [1011,]   20   23   23   23   21   19   22   21   21    21 #>  [1012,]   20   23   23   24   22   19   22   21   21    21 #>  [1013,]   19   22   22   22   20   18   21   20   20    20 #>  [1014,]   20   23   23   23   21   19   22   21   21    21 #>  [1015,]   20   23   23   23   21   19   22   21   21    21 #>  [1016,]   19   22   22   22   20   18   21   20   20    20 #>  [1017,]   19   22   22   22   20   18   21   20   20    20 #>  [1018,]   20   23   23   23   21   19   22   21   21    21 #>  [1019,]   20   23   23   24   22   19   22   21   21    21 #>  [1020,]   19   22   22   22   20   18   21   20   20    20 #>  [1021,]   20   23   23   23   21   19   22   21   21    21 #>  [1022,]   19   22   22   22   20   18   21   20   20    20 #>  [1023,]   20   23   23   23   21   19   22   21   21    21 #>  [1024,]   19   22   22   22   20   18   21   20   20    20 #>  [1025,]   19   22   22   22   20   18   21   20   20    20 #>  [1026,]   20   23   23   23   21   19   22   21   21    21 #>  [1027,]   20   23   23   23   21   19   22   21   21    21 #>  [1028,]   19   22   22   22   20   18   21   20   20    20 #>  [1029,]   19   22   22   22   20   18   21   20   20    20 #>  [1030,]   20   23   23   23   21   19   22   21   21    21 #>  [1031,]   20   23   23   23   21   19   22   21   21    21 #>  [1032,]   20   23   23   23   21   19   22   21   21    21 #>  [1033,]   20   23   23   24   22   19   22   21   21    21 #>  [1034,]   20   23   23   24   22   19   22   21   21    21 #>  [1035,]   20   23   23   23   21   19   22   21   21    21 #>  [1036,]   20   23   23   23   21   19   22   21   21    21 #>  [1037,]   19   22   22   22   20   18   21   20   20    20 #>  [1038,]   20   23   23   23   21   19   22   21   21    21 #>  [1039,]   19   22   22   22   20   18   21   20   20    20 #>  [1040,]   19   22   22   22   20   18   21   20   20    20 #>  [1041,]   20   23   23   23   21   19   22   21   21    21 #>  [1042,]   20   23   23   23   21   19   22   21   21    21 #>  [1043,]   19   22   22   22   20   18   21   20   20    20 #>  [1044,]   19   22   22   22   20   18   21   20   20    20 #>  [1045,]   19   22   22   22   20   18   21   20   20    20 #>  [1046,]   19   22   22   22   20   18   21   20   20    20 #>  [1047,]   19   22   22   22   20   18   21   20   20    20 #>  [1048,]   20   23   23   23   21   19   22   21   21    21 #>  [1049,]   19   22   22   22   20   18   21   20   20    20 #>  [1050,]   19   22   22   22   20   18   21   20   20    20 #>  [1051,]   19   22   22   22   20   18   21   20   20    20 #>  [1052,]   20   23   23   23   21   19   22   21   21    21 #>  [1053,]   19   22   22   22   20   18   21   20   20    20 #>  [1054,]   19   22   22   22   20   18   21   20   20    20 #>  [1055,]   19   22   22   22   20   18   21   20   20    20 #>  [1056,]   19   22   22   22   20   18   21   20   20    20 #>  [1057,]   20   23   23   23   21   19   22   21   21    21 #>  [1058,]   20   23   23   23   21   19   22   21   21    21 #>  [1059,]   19   22   22   22   20   18   21   20   20    20 #>  [1060,]   20   23   23   24   22   19   22   21   21    21 #>  [1061,]   20   23   23   23   21   19   22   21   21    21 #>  [1062,]   20   23   23   23   21   19   22   21   21    21 #>  [1063,]   19   22   22   22   20   18   21   20   20    20 #>  [1064,]   20   23   23   23   21   19   22   21   21    21 #>  [1065,]   19   22   22   22   20   18   21   20   20    20 #>  [1066,]   19   22   22   22   20   18   21   20   20    20 #>  [1067,]   20   23   23   23   21   19   22   21   21    21 #>  [1068,]   20   23   23   23   21   19   22   21   21    21 #>  [1069,]   20   23   23   23   21   19   22   21   21    21 #>  [1070,]   19   22   22   22   20   18   21   20   20    20 #>  [1071,]   19   22   22   22   20   18   21   20   20    20 #>  [1072,]   19   22   22   22   20   18   21   20   20    20 #>  [1073,]   20   23   23   24   22   19   22   21   21    21 #>  [1074,]   20   23   23   23   21   19   22   21   21    21 #>  [1075,]   20   23   23   23   21   19   22   21   21    21 #>  [1076,]   19   22   22   22   20   18   21   20   20    20 #>  [1077,]   19   22   22   22   20   18   21   20   20    20 #>  [1078,]   19   22   22   22   20   18   21   20   20    20 #>  [1079,]   19   22   22   22   20   18   21   20   20    20 #>  [1080,]   20   23   23   23   21   19   22   21   21    21 #>  [1081,]   19   22   22   22   20   18   21   20   20    20 #>  [1082,]   20   23   23   23   21   19   22   21   21    21 #>  [1083,]   19   22   22   22   20   18   21   20   20    20 #>  [1084,]   19   22   22   22   20   18   21   20   20    20 #>  [1085,]   20   23   23   23   21   19   22   21   21    21 #>  [1086,]   19   22   22   22   20   18   21   20   20    20 #>  [1087,]   20   23   23   23   21   19   22   21   21    21 #>  [1088,]   20   23   23   23   21   19   22   21   21    21 #>  [1089,]   19   22   22   22   20   18   21   20   20    20 #>  [1090,]   19   22   22   22   20   18   21   20   20    20 #>  [1091,]   20   23   23   23   21   19   22   21   21    21 #>  [1092,]   20   23   23   23   21   19   22   21   21    21 #>  [1093,]   20   23   23   24   22   19   22   21   21    21 #>  [1094,]   19   22   22   22   20   18   21   20   20    20 #>  [1095,]   20   23   23   23   21   19   22   21   21    21 #>  [1096,]   20   23   23   23   21   19   22   21   21    21 #>  [1097,]   20   23   23   24   22   19   22   21   21    21 #>  [1098,]   19   22   22   22   20   18   21   20   20    20 #>  [1099,]   20   23   23   23   21   19   22   21   21    21 #>  [1100,]   19   22   22   22   20   18   21   20   20    20 #>  [1101,]   22   25   25   25   23   20   25   24   23    23 #>  [1102,]   21   24   24   27   24   21   23   22   22    22 #>  [1103,]   22   25   25   25   23   20   25   24   23    23 #>  [1104,]   22   25   25   25   23   20   25   24   23    23 #>  [1105,]   22   25   25   25   23   20   25   24   23    23 #>  [1106,]   21   24   24   27   24   21   23   22   22    22 #>  [1107,]   22   25   25   25   23   20   24   23   23    23 #>  [1108,]   22   25   25   25   23   20   25   24   23    23 #>  [1109,]   22   25   25   25   23   20   25   24   23    23 #>  [1110,]   22   25   25   25   23   20   25   24   23    23 #>  [1111,]   21   24   24   27   24   21   23   22   22    22 #>  [1112,]   21   24   24   27   24   21   23   22   22    22 #>  [1113,]   22   25   25   25   23   20   25   24   23    23 #>  [1114,]   22   25   25   25   23   20   25   24   23    23 #>  [1115,]   21   24   24   27   24   21   23   22   22    22 #>  [1116,]   22   25   25   25   23   20   25   24   23    23 #>  [1117,]   21   24   24   26   24   21   23   22   22    22 #>  [1118,]   22   25   25   25   23   20   25   24   23    23 #>  [1119,]   22   25   25   25   23   20   25   24   23    23 #>  [1120,]   22   25   25   25   23   20   25   24   23    23 #>  [1121,]   22   25   25   25   23   20   24   23   23    23 #>  [1122,]   22   25   25   25   23   20   25   24   23    23 #>  [1123,]   21   24   24   27   24   21   23   22   22    22 #>  [1124,]   22   25   25   25   23   20   25   24   23    23 #>  [1125,]   22   25   25   25   23   20   25   24   23    23 #>  [1126,]   22   25   25   25   23   20   25   24   23    23 #>  [1127,]   22   25   25   25   23   20   25   24   23    23 #>  [1128,]   22   25   25   25   23   20   25   24   23    23 #>  [1129,]   21   24   24   26   24   21   23   22   22    22 #>  [1130,]   21   24   24   27   24   21   23   22   22    22 #>  [1131,]   21   24   24   27   24   21   23   22   22    22 #>  [1132,]   22   25   25   25   23   20   25   24   23    23 #>  [1133,]   22   25   25   25   23   20   25   24   23    23 #>  [1134,]   21   24   24   27   24   21   23   22   22    22 #>  [1135,]   22   25   25   25   23   20   25   24   23    23 #>  [1136,]   22   25   25   25   23   20   25   24   23    23 #>  [1137,]   21   24   24   27   24   21   23   22   22    22 #>  [1138,]   22   25   25   25   23   20   25   24   23    23 #>  [1139,]   22   25   25   25   23   20   24   23   23    23 #>  [1140,]   22   25   25   25   23   20   25   24   23    23 #>  [1141,]   22   25   25   25   23   20   25   24   23    23 #>  [1142,]   21   24   24   27   24   21   23   22   22    22 #>  [1143,]   21   24   24   26   24   21   23   22   22    22 #>  [1144,]   21   24   24   26   24   21   23   22   22    22 #>  [1145,]   22   25   25   25   23   20   25   24   23    23 #>  [1146,]   22   25   25   25   23   20   25   24   23    23 #>  [1147,]   21   24   24   26   24   21   23   22   22    22 #>  [1148,]   21   24   24   27   24   21   23   22   22    22 #>  [1149,]   22   25   25   25   23   20   24   23   23    23 #>  [1150,]   22   25   25   25   23   20   25   24   23    23 #>  [1151,]   22   25   25   25   23   20   25   24   23    23 #>  [1152,]   22   25   25   25   23   20   25   24   23    23 #>  [1153,]   22   25   25   25   23   20   25   24   23    23 #>  [1154,]   22   25   25   25   23   20   25   24   23    23 #>  [1155,]   22   25   25   25   23   20   25   24   23    23 #>  [1156,]   21   24   24   26   24   21   23   22   22    22 #>  [1157,]   22   25   25   25   23   20   25   24   23    23 #>  [1158,]   22   25   25   25   23   20   25   24   23    23 #>  [1159,]   22   25   25   25   23   20   25   24   23    23 #>  [1160,]   21   24   24   27   24   21   23   22   22    22 #>  [1161,]   21   24   24   27   24   21   23   22   22    22 #>  [1162,]   22   25   25   25   23   20   24   23   23    23 #>  [1163,]   21   24   24   26   24   21   23   22   22    22 #>  [1164,]   21   24   24   27   24   21   23   22   22    22 #>  [1165,]   21   24   24   26   24   21   23   22   22    22 #>  [1166,]   22   25   25   25   23   20   25   24   23    23 #>  [1167,]   22   25   25   25   23   20   25   24   23    23 #>  [1168,]   22   25   25   25   23   20   25   24   23    23 #>  [1169,]   22   25   25   25   23   20   25   24   23    23 #>  [1170,]   21   24   24   26   24   21   23   22   22    22 #>  [1171,]   22   25   25   25   23   20   25   24   23    23 #>  [1172,]   22   25   25   25   23   20   25   24   23    23 #>  [1173,]   22   25   25   25   23   20   25   24   23    23 #>  [1174,]   22   25   25   25   23   20   25   24   23    23 #>  [1175,]   21   24   24   27   24   21   23   22   22    22 #>  [1176,]   22   25   25   25   23   20   25   24   23    23 #>  [1177,]   22   25   25   25   23   20   25   24   23    23 #>  [1178,]   21   24   24   26   24   21   23   22   22    22 #>  [1179,]   21   24   24   26   24   21   23   22   22    22 #>  [1180,]   22   25   25   25   23   20   24   23   23    23 #>  [1181,]   21   24   24   27   24   21   23   22   22    22 #>  [1182,]   22   25   25   25   23   20   25   24   23    23 #>  [1183,]   22   25   25   25   23   20   25   24   23    23 #>  [1184,]   22   25   25   25   23   20   25   24   23    23 #>  [1185,]   22   25   25   25   23   20   25   24   23    23 #>  [1186,]   22   25   25   25   23   20   25   24   23    23 #>  [1187,]   22   25   25   25   23   20   25   24   23    23 #>  [1188,]   22   25   25   25   23   20   25   24   23    23 #>  [1189,]   22   25   25   25   23   20   25   24   23    23 #>  [1190,]   22   25   25   25   23   20   25   24   23    23 #>  [1191,]   22   25   25   25   23   20   25   24   23    23 #>  [1192,]   21   24   24   27   24   21   23   22   22    22 #>  [1193,]   22   25   25   25   23   20   25   24   23    23 #>  [1194,]   21   24   24   26   24   21   23   22   22    22 #>  [1195,]   21   24   24   27   24   21   23   22   22    22 #>  [1196,]   22   25   25   25   23   20   25   24   23    23 #>  [1197,]   22   25   25   25   23   20   25   24   23    23 #>  [1198,]   22   25   25   25   23   20   25   24   23    23 #>  [1199,]   22   25   25   25   23   20   25   24   23    23 #>  [1200,]   21   24   24   26   24   21   23   22   22    22 #>  [1201,]   23   26   26   29   26   23   28   26   24    24 #>  [1202,]   23   26   26   29   26   23   27   26   24    24 #>  [1203,]   23   26   26   29   26   23   27   26   24    24 #>  [1204,]   24   28   27   28   25   22   26   25   26    25 #>  [1205,]   23   26   26   29   26   23   28   26   24    24 #>  [1206,]   23   26   26   29   26   23   27   26   24    24 #>  [1207,]   24   27   27   28   25   22   26   25   25    25 #>  [1208,]   23   26   26   29   26   23   27   26   24    24 #>  [1209,]   23   26   26   30   26   23   27   26   24    24 #>  [1210,]   24   28   27   28   25   22   26   25   26    25 #>  [1211,]   23   26   26   30   26   23   28   26   24    24 #>  [1212,]   23   26   26   30   26   23   28   26   24    24 #>  [1213,]   23   26   26   29   26   23   27   26   24    24 #>  [1214,]   23   26   26   30   26   23   28   26   24    24 #>  [1215,]   24   28   27   28   25   22   26   25   26    25 #>  [1216,]   24   28   27   28   25   22   26   25   25    25 #>  [1217,]   23   26   26   29   26   23   28   26   24    24 #>  [1218,]   24   28   27   28   25   22   26   25   26    25 #>  [1219,]   23   26   26   30   26   23   27   26   24    24 #>  [1220,]   23   26   26   29   26   23   27   26   24    24 #>  [1221,]   24   27   27   28   25   22   26   25   26    25 #>  [1222,]   23   26   26   29   26   23   28   26   24    24 #>  [1223,]   24   27   27   28   25   22   26   25   25    25 #>  [1224,]   23   26   26   29   26   23   27   26   24    24 #>  [1225,]   24   27   27   28   25   22   26   25   25    25 #>  [1226,]   23   26   26   30   26   23   28   26   24    24 #>  [1227,]   24   28   27   28   25   22   26   25   26    25 #>  [1228,]   24   28   27   28   25   22   26   25   25    25 #>  [1229,]   23   26   26   29   26   23   27   26   24    24 #>  [1230,]   23   26   26   30   26   23   27   26   24    24 #>  [1231,]   23   26   26   30   26   23   28   26   24    24 #>  [1232,]   23   26   26   29   26   23   28   26   24    24 #>  [1233,]   23   26   26   30   26   23   27   26   24    24 #>  [1234,]   23   26   26   29   26   23   27   26   24    24 #>  [1235,]   23   26   26   29   26   23   27   26   24    24 #>  [1236,]   23   26   26   30   26   23   27   26   24    24 #>  [1237,]   23   26   26   29   26   23   27   26   24    24 #>  [1238,]   23   26   26   30   26   23   28   26   24    24 #>  [1239,]   24   28   27   28   25   22   26   25   25    25 #>  [1240,]   23   26   26   29   26   23   27   26   24    24 #>  [1241,]   23   26   26   30   26   23   27   26   24    24 #>  [1242,]   23   26   26   30   26   23   27   26   24    24 #>  [1243,]   24   28   27   28   25   22   26   25   25    25 #>  [1244,]   23   26   26   29   26   23   27   26   24    24 #>  [1245,]   24   28   27   28   25   22   26   25   25    25 #>  [1246,]   23   26   26   29   26   23   27   26   24    24 #>  [1247,]   24   28   27   28   25   22   26   25   25    25 #>  [1248,]   23   26   26   30   26   23   27   26   24    24 #>  [1249,]   23   26   26   29   26   23   27   26   24    24 #>  [1250,]   23   26   26   29   26   23   27   26   24    24 #>  [1251,]   23   26   26   29   26   23   27   26   24    24 #>  [1252,]   23   26   26   29   26   23   28   26   24    24 #>  [1253,]   24   27   27   28   25   22   26   25   25    25 #>  [1254,]   23   26   26   29   26   23   27   26   24    24 #>  [1255,]   23   26   26   29   26   23   27   26   24    24 #>  [1256,]   23   26   26   29   26   23   27   26   24    24 #>  [1257,]   23   26   26   29   26   23   27   26   24    24 #>  [1258,]   23   26   26   30   26   23   28   26   24    24 #>  [1259,]   23   26   26   29   26   23   28   26   24    24 #>  [1260,]   23   26   26   30   26   23   27   26   24    24 #>  [1261,]   24   28   27   28   25   22   26   25   26    25 #>  [1262,]   23   26   26   30   26   23   27   26   24    24 #>  [1263,]   23   26   26   29   26   23   27   26   24    24 #>  [1264,]   23   26   26   29   26   23   27   26   24    24 #>  [1265,]   23   26   26   29   26   23   27   26   24    24 #>  [1266,]   23   26   26   29   26   23   28   26   24    24 #>  [1267,]   23   26   26   29   26   23   27   26   24    24 #>  [1268,]   23   26   26   30   26   23   28   26   24    24 #>  [1269,]   23   26   26   30   26   23   27   26   24    24 #>  [1270,]   23   26   26   29   26   23   28   26   24    24 #>  [1271,]   24   28   27   28   25   22   26   25   25    25 #>  [1272,]   24   28   27   28   25   22   26   25   25    25 #>  [1273,]   24   27   27   28   25   22   26   25   26    25 #>  [1274,]   24   27   27   28   25   22   26   25   26    25 #>  [1275,]   24   28   27   28   25   22   26   25   26    25 #>  [1276,]   24   28   27   28   25   22   26   25   25    25 #>  [1277,]   24   28   27   28   25   22   26   25   25    25 #>  [1278,]   23   26   26   29   26   23   27   26   24    24 #>  [1279,]   23   26   26   29   26   23   28   26   24    24 #>  [1280,]   23   26   26   29   26   23   27   26   24    24 #>  [1281,]   23   26   26   29   26   23   27   26   24    24 #>  [1282,]   23   26   26   30   26   23   27   26   24    24 #>  [1283,]   23   26   26   29   26   23   28   26   24    24 #>  [1284,]   24   27   27   28   25   22   26   25   25    25 #>  [1285,]   23   26   26   30   26   23   27   26   24    24 #>  [1286,]   23   26   26   29   26   23   27   26   24    24 #>  [1287,]   23   26   26   29   26   23   28   26   24    24 #>  [1288,]   24   27   27   28   25   22   26   25   25    25 #>  [1289,]   23   26   26   29   26   23   27   26   24    24 #>  [1290,]   23   26   26   29   26   23   28   26   24    24 #>  [1291,]   23   26   26   29   26   23   28   26   24    24 #>  [1292,]   23   26   26   30   26   23   28   26   24    24 #>  [1293,]   23   26   26   30   26   23   27   26   24    24 #>  [1294,]   24   27   27   28   25   22   26   25   25    25 #>  [1295,]   24   28   27   28   25   22   26   25   25    25 #>  [1296,]   23   26   26   30   26   23   28   26   24    24 #>  [1297,]   23   26   26   30   26   23   27   26   24    24 #>  [1298,]   23   26   26   29   26   23   27   26   24    24 #>  [1299,]   23   26   26   29   26   23   27   26   24    24 #>  [1300,]   24   28   27   28   25   22   26   25   25    25 #>  [1301,]   25   29   28   31   28   25   30   28   28    27 #>  [1302,]   26   30   29   32   27   24   29   27   27    26 #>  [1303,]   25   29   28   31   29   25   30   28   28    27 #>  [1304,]   25   29   28   31   28   25   30   28   28    27 #>  [1305,]   26   30   29   32   27   24   29   27   27    26 #>  [1306,]   25   29   28   31   29   25   30   28   28    27 #>  [1307,]   26   30   29   32   27   24   29   27   27    26 #>  [1308,]   25   29   28   31   28   25   30   28   28    27 #>  [1309,]   26   30   29   32   27   24   29   27   27    26 #>  [1310,]   26   30   29   32   27   24   29   27   27    26 #>  [1311,]   25   29   28   31   28   25   30   28   28    27 #>  [1312,]   26   30   29   32   27   24   29   27   27    26 #>  [1313,]   26   30   29   32   27   24   29   27   27    26 #>  [1314,]   25   29   28   31   28   25   30   28   28    27 #>  [1315,]   25   29   28   31   28   25   30   28   28    27 #>  [1316,]   25   29   28   31   29   25   30   28   28    27 #>  [1317,]   26   30   29   32   27   24   29   27   27    26 #>  [1318,]   26   30   29   32   27   24   29   27   27    26 #>  [1319,]   25   29   28   31   29   25   30   28   28    27 #>  [1320,]   26   30   29   32   27   24   29   27   27    26 #>  [1321,]   26   30   29   32   27   24   29   27   27    26 #>  [1322,]   26   30   29   32   27   24   29   27   27    26 #>  [1323,]   26   30   29   32   27   24   29   27   27    26 #>  [1324,]   26   30   29   32   27   24   29   27   27    26 #>  [1325,]   26   30   29   32   27   24   29   27   27    26 #>  [1326,]   25   29   28   31   29   25   30   28   28    27 #>  [1327,]   26   30   29   32   27   24   29   27   27    26 #>  [1328,]   25   29   28   31   29   25   30   28   28    27 #>  [1329,]   26   30   29   32   27   24   29   27   27    26 #>  [1330,]   26   30   29   32   27   24   29   27   27    26 #>  [1331,]   26   30   29   32   27   24   29   27   27    26 #>  [1332,]   26   30   29   32   27   24   29   27   27    26 #>  [1333,]   26   30   29   32   27   24   29   27   27    26 #>  [1334,]   25   29   28   31   29   25   30   28   28    27 #>  [1335,]   25   29   28   31   28   25   30   28   28    27 #>  [1336,]   26   30   29   32   27   24   29   27   27    26 #>  [1337,]   25   29   28   31   29   25   30   28   28    27 #>  [1338,]   25   29   28   31   29   25   30   28   28    27 #>  [1339,]   26   30   29   32   27   24   29   27   27    26 #>  [1340,]   26   30   29   32   27   24   29   27   27    26 #>  [1341,]   26   30   29   32   27   24   29   27   27    26 #>  [1342,]   25   29   28   31   29   25   30   28   28    27 #>  [1343,]   26   30   29   32   27   24   29   27   27    26 #>  [1344,]   26   30   29   32   27   24   29   27   27    26 #>  [1345,]   25   29   28   31   28   25   30   28   28    27 #>  [1346,]   25   29   28   31   28   25   30   28   28    27 #>  [1347,]   26   30   29   32   27   24   29   27   27    26 #>  [1348,]   26   30   29   32   27   24   29   27   27    26 #>  [1349,]   25   29   28   31   28   25   30   28   28    27 #>  [1350,]   26   30   29   32   27   24   29   27   27    26 #>  [1351,]   26   30   29   32   27   24   29   27   27    26 #>  [1352,]   25   29   28   31   28   25   30   28   28    27 #>  [1353,]   26   30   29   32   27   24   29   27   27    26 #>  [1354,]   26   30   29   32   27   24   29   27   27    26 #>  [1355,]   25   29   28   31   28   25   30   28   28    27 #>  [1356,]   25   29   28   31   29   25   30   28   28    27 #>  [1357,]   25   29   28   31   29   25   30   28   28    27 #>  [1358,]   26   30   29   32   27   24   29   27   27    26 #>  [1359,]   25   29   28   31   29   25   30   28   28    27 #>  [1360,]   26   30   29   32   27   24   29   27   27    26 #>  [1361,]   26   30   29   32   27   24   29   27   27    26 #>  [1362,]   25   29   28   31   28   25   30   28   28    27 #>  [1363,]   26   30   29   32   27   24   29   27   27    26 #>  [1364,]   25   29   28   31   29   25   30   28   28    27 #>  [1365,]   25   29   28   31   29   25   30   28   28    27 #>  [1366,]   26   30   29   32   27   24   29   27   27    26 #>  [1367,]   26   30   29   32   27   24   29   27   27    26 #>  [1368,]   25   29   28   31   28   25   30   28   28    27 #>  [1369,]   25   29   28   31   28   25   30   28   28    27 #>  [1370,]   26   30   29   32   27   24   29   27   27    26 #>  [1371,]   26   30   29   32   27   24   29   27   27    26 #>  [1372,]   25   29   28   31   29   25   30   28   28    27 #>  [1373,]   25   29   28   31   29   25   30   28   28    27 #>  [1374,]   26   30   29   32   27   24   29   27   27    26 #>  [1375,]   26   30   29   32   27   24   29   27   27    26 #>  [1376,]   26   30   29   32   27   24   29   27   27    26 #>  [1377,]   25   29   28   31   29   25   30   28   28    27 #>  [1378,]   26   30   29   32   27   24   29   27   27    26 #>  [1379,]   25   29   28   31   28   25   30   28   28    27 #>  [1380,]   26   30   29   32   27   24   29   27   27    26 #>  [1381,]   26   30   29   32   27   24   29   27   27    26 #>  [1382,]   25   29   28   31   28   25   30   28   28    27 #>  [1383,]   26   30   29   32   27   24   29   27   27    26 #>  [1384,]   26   30   29   32   27   24   29   27   27    26 #>  [1385,]   25   29   28   31   28   25   30   28   28    27 #>  [1386,]   26   30   29   32   27   24   29   27   27    26 #>  [1387,]   26   30   29   32   27   24   29   27   27    26 #>  [1388,]   26   30   29   32   27   24   29   27   27    26 #>  [1389,]   25   29   28   31   28   25   30   28   28    27 #>  [1390,]   26   30   29   32   27   24   29   27   27    26 #>  [1391,]   25   29   28   31   28   25   30   28   28    27 #>  [1392,]   26   30   29   32   27   24   29   27   27    26 #>  [1393,]   26   30   29   32   27   24   29   27   27    26 #>  [1394,]   25   29   28   31   29   25   30   28   28    27 #>  [1395,]   26   30   29   32   27   24   29   27   27    26 #>  [1396,]   25   29   28   31   28   25   30   28   28    27 #>  [1397,]   25   29   28   31   29   25   30   28   28    27 #>  [1398,]   25   29   28   31   29   25   30   28   28    27 #>  [1399,]   26   30   29   32   27   24   29   27   27    26 #>  [1400,]   25   29   28   31   29   25   30   28   28    27 #>  [1401,]   27   32   31   34   31   26   31   29   29    28 #>  [1402,]   28   31   30   33   30   28   32   30   30    29 #>  [1403,]   28   31   30   33   30   27   32   30   30    29 #>  [1404,]   27   32   31   34   31   26   31   29   29    28 #>  [1405,]   27   33   32   34   31   26   31   29   29    28 #>  [1406,]   28   31   30   33   30   27   32   30   30    29 #>  [1407,]   28   31   30   33   30   27   32   30   30    29 #>  [1408,]   27   32   31   34   31   26   31   29   29    28 #>  [1409,]   27   32   31   34   31   26   31   29   29    28 #>  [1410,]   27   33   32   34   31   26   31   29   29    28 #>  [1411,]   27   32   31   34   31   26   31   29   29    28 #>  [1412,]   28   31   30   33   30   28   32   30   30    29 #>  [1413,]   27   32   31   34   31   26   31   29   29    28 #>  [1414,]   27   32   31   34   31   26   31   29   29    28 #>  [1415,]   27   32   31   34   31   26   31   29   29    28 #>  [1416,]   27   32   31   34   31   26   31   29   29    28 #>  [1417,]   27   32   31   34   31   26   31   29   29    28 #>  [1418,]   28   31   30   33   30   27   32   30   30    29 #>  [1419,]   28   31   30   33   30   27   32   30   30    29 #>  [1420,]   28   31   30   33   30   27   32   30   30    29 #>  [1421,]   27   32   31   34   31   26   31   29   29    28 #>  [1422,]   27   32   31   34   31   26   31   29   29    28 #>  [1423,]   28   31   30   33   30   27   32   30   30    29 #>  [1424,]   27   32   31   34   31   26   31   29   29    28 #>  [1425,]   28   31   30   33   30   27   32   30   30    29 #>  [1426,]   27   33   32   34   31   26   31   29   29    28 #>  [1427,]   27   32   31   34   31   26   31   29   29    28 #>  [1428,]   28   31   30   33   30   27   32   30   30    29 #>  [1429,]   27   33   32   34   31   26   31   29   29    28 #>  [1430,]   27   32   31   34   31   26   31   29   29    28 #>  [1431,]   28   31   30   33   30   27   32   30   30    29 #>  [1432,]   28   31   30   33   30   27   32   30   30    29 #>  [1433,]   28   31   30   33   30   28   32   30   30    29 #>  [1434,]   28   31   30   33   30   27   32   30   30    29 #>  [1435,]   27   32   31   34   31   26   31   29   29    28 #>  [1436,]   27   33   32   34   31   26   31   29   29    28 #>  [1437,]   27   32   31   34   31   26   31   29   29    28 #>  [1438,]   27   32   31   34   31   26   31   29   29    28 #>  [1439,]   27   33   32   34   31   26   31   29   29    28 #>  [1440,]   28   31   30   33   30   27   32   30   30    29 #>  [1441,]   27   32   31   34   31   26   31   29   29    28 #>  [1442,]   28   31   30   33   30   27   32   30   30    29 #>  [1443,]   27   32   31   34   31   26   31   29   29    28 #>  [1444,]   27   32   31   34   31   26   31   29   29    28 #>  [1445,]   27   32   31   34   31   26   31   29   29    28 #>  [1446,]   27   32   31   34   31   26   31   29   29    28 #>  [1447,]   27   33   32   34   31   26   31   29   29    28 #>  [1448,]   28   31   30   33   30   27   32   30   30    29 #>  [1449,]   27   32   31   34   31   26   31   29   29    28 #>  [1450,]   27   33   32   34   31   26   31   29   29    28 #>  [1451,]   27   33   32   34   31   26   31   29   29    28 #>  [1452,]   27   32   31   34   31   26   31   29   29    28 #>  [1453,]   27   33   32   34   31   26   31   29   29    28 #>  [1454,]   27   32   31   34   31   26   31   29   29    28 #>  [1455,]   27   32   31   34   31   26   31   29   29    28 #>  [1456,]   28   31   30   33   30   27   32   30   30    29 #>  [1457,]   27   33   32   34   31   26   31   29   29    28 #>  [1458,]   27   32   31   34   31   26   31   29   29    28 #>  [1459,]   27   33   32   34   31   26   31   29   29    28 #>  [1460,]   28   31   30   33   30   28   32   30   30    29 #>  [1461,]   27   33   32   34   31   26   31   29   29    28 #>  [1462,]   27   32   31   34   31   26   31   29   29    28 #>  [1463,]   27   33   32   34   31   26   31   29   29    28 #>  [1464,]   28   31   30   33   30   27   32   30   30    29 #>  [1465,]   28   31   30   33   30   27   32   30   30    29 #>  [1466,]   27   32   31   34   31   26   31   29   29    28 #>  [1467,]   27   32   31   34   31   26   31   29   29    28 #>  [1468,]   27   32   31   34   31   26   31   29   29    28 #>  [1469,]   27   32   31   34   31   26   31   29   29    28 #>  [1470,]   28   31   30   33   30   28   32   30   30    29 #>  [1471,]   28   31   30   33   30   27   32   30   30    29 #>  [1472,]   27   33   32   34   31   26   31   29   29    28 #>  [1473,]   28   31   30   33   30   27   32   30   30    29 #>  [1474,]   27   32   31   34   31   26   31   29   29    28 #>  [1475,]   27   33   32   34   31   26   31   29   29    28 #>  [1476,]   27   33   32   34   31   26   31   29   29    28 #>  [1477,]   27   33   32   34   31   26   31   29   29    28 #>  [1478,]   28   31   30   33   30   27   32   30   30    29 #>  [1479,]   27   32   31   34   31   26   31   29   29    28 #>  [1480,]   27   32   31   34   31   26   31   29   29    28 #>  [1481,]   27   32   31   34   31   26   31   29   29    28 #>  [1482,]   27   32   31   34   31   26   31   29   29    28 #>  [1483,]   27   32   31   34   31   26   31   29   29    28 #>  [1484,]   28   31   30   33   30   27   32   30   30    29 #>  [1485,]   27   32   31   34   31   26   31   29   29    28 #>  [1486,]   27   33   32   34   31   26   31   29   29    28 #>  [1487,]   27   32   31   34   31   26   31   29   29    28 #>  [1488,]   27   32   31   34   31   26   31   29   29    28 #>  [1489,]   27   32   31   34   31   26   31   29   29    28 #>  [1490,]   27   32   31   34   31   26   31   29   29    28 #>  [1491,]   27   32   31   34   31   26   31   29   29    28 #>  [1492,]   27   32   31   34   31   26   31   29   29    28 #>  [1493,]   28   31   30   33   30   27   32   30   30    29 #>  [1494,]   27   33   32   34   31   26   31   29   29    28 #>  [1495,]   27   32   31   34   31   26   31   29   29    28 #>  [1496,]   27   32   31   34   31   26   31   29   29    28 #>  [1497,]   28   31   30   33   30   27   32   30   30    29 #>  [1498,]   28   31   30   33   30   27   32   30   30    29 #>  [1499,]   27   32   31   34   31   26   31   29   29    28 #>  [1500,]   28   31   30   33   30   27   32   30   30    29 #>  [1501,]   29   34   33   35   32   29   33   31   31    30 #>  [1502,]   30   35   34   36   33   30   34   32   32    31 #>  [1503,]   29   34   33   35   32   29   33   31   31    30 #>  [1504,]   29   34   33   35   32   29   33   31   31    30 #>  [1505,]   29   34   33   35   32   29   33   31   31    30 #>  [1506,]   29   34   33   35   32   29   33   31   31    30 #>  [1507,]   29   34   33   35   32   29   33   31   31    30 #>  [1508,]   29   34   33   35   32   29   33   31   31    30 #>  [1509,]   30   35   34   36   33   30   34   32   32    31 #>  [1510,]   30   35   34   36   33   30   34   32   32    31 #>  [1511,]   29   34   33   35   32   29   33   31   31    30 #>  [1512,]   30   35   34   36   33   30   34   32   32    31 #>  [1513,]   29   34   33   35   32   29   33   31   31    30 #>  [1514,]   29   34   33   35   32   29   33   31   31    30 #>  [1515,]   29   34   33   35   32   29   33   31   31    30 #>  [1516,]   29   34   33   35   32   29   33   31   31    30 #>  [1517,]   29   34   33   35   32   29   33   31   31    30 #>  [1518,]   29   34   33   35   32   29   33   31   31    30 #>  [1519,]   29   34   33   35   32   29   33   31   31    30 #>  [1520,]   29   34   33   35   32   29   33   31   31    30 #>  [1521,]   30   35   34   36   33   30   34   32   32    31 #>  [1522,]   29   34   33   35   32   29   33   31   31    30 #>  [1523,]   29   34   33   35   32   29   33   31   31    30 #>  [1524,]   29   34   33   35   32   29   33   31   31    30 #>  [1525,]   29   34   33   35   32   29   33   31   31    30 #>  [1526,]   29   34   33   35   32   29   33   31   31    30 #>  [1527,]   29   34   33   35   32   29   33   31   31    30 #>  [1528,]   29   34   33   35   32   29   33   31   31    30 #>  [1529,]   30   35   34   36   33   30   34   32   32    31 #>  [1530,]   29   34   33   35   32   29   33   31   31    30 #>  [1531,]   29   34   33   35   32   29   33   31   31    30 #>  [1532,]   29   34   33   35   32   29   33   31   31    30 #>  [1533,]   30   35   34   36   33   30   34   32   32    31 #>  [1534,]   29   34   33   35   32   29   33   31   31    30 #>  [1535,]   29   34   33   35   32   29   33   31   31    30 #>  [1536,]   29   34   33   35   32   29   33   31   31    30 #>  [1537,]   29   34   33   35   32   29   33   31   31    30 #>  [1538,]   29   34   33   35   32   29   33   31   31    30 #>  [1539,]   29   34   33   35   32   29   33   31   31    30 #>  [1540,]   29   34   33   35   32   29   33   31   31    30 #>  [1541,]   29   34   33   35   32   29   33   31   31    30 #>  [1542,]   29   34   33   35   32   29   33   31   31    30 #>  [1543,]   29   34   33   35   32   29   33   31   31    30 #>  [1544,]   29   34   33   35   32   29   33   31   31    30 #>  [1545,]   29   34   33   35   32   29   33   31   31    30 #>  [1546,]   29   34   33   35   32   29   33   31   31    30 #>  [1547,]   29   34   33   35   32   29   33   31   31    30 #>  [1548,]   29   34   33   35   32   29   33   31   31    30 #>  [1549,]   29   34   33   35   32   29   33   31   31    30 #>  [1550,]   29   34   33   35   32   29   33   31   31    30 #>  [1551,]   29   34   33   35   32   29   33   31   31    30 #>  [1552,]   29   34   33   35   32   29   33   31   31    30 #>  [1553,]   29   34   33   35   32   29   33   31   31    30 #>  [1554,]   29   34   33   35   32   29   33   31   31    30 #>  [1555,]   29   34   33   35   32   29   33   31   31    30 #>  [1556,]   29   34   33   35   32   29   33   31   31    30 #>  [1557,]   29   34   33   35   32   29   33   31   31    30 #>  [1558,]   29   34   33   35   32   29   33   31   31    30 #>  [1559,]   29   34   33   35   32   29   33   31   31    30 #>  [1560,]   30   35   34   36   33   30   34   32   32    31 #>  [1561,]   29   34   33   35   32   29   33   31   31    30 #>  [1562,]   29   34   33   35   32   29   33   31   31    30 #>  [1563,]   29   34   33   35   32   29   33   31   31    30 #>  [1564,]   29   34   33   35   32   29   33   31   31    30 #>  [1565,]   29   34   33   35   32   29   33   31   31    30 #>  [1566,]   29   34   33   35   32   29   33   31   31    30 #>  [1567,]   29   34   33   35   32   29   33   31   31    30 #>  [1568,]   29   34   33   35   32   29   33   31   31    30 #>  [1569,]   29   34   33   35   32   29   33   31   31    30 #>  [1570,]   30   35   34   36   33   30   34   32   32    31 #>  [1571,]   29   34   33   35   32   29   33   31   31    30 #>  [1572,]   29   34   33   35   32   29   33   31   31    30 #>  [1573,]   29   34   33   35   32   29   33   31   31    30 #>  [1574,]   29   34   33   35   32   29   33   31   31    30 #>  [1575,]   29   34   33   35   32   29   33   31   31    30 #>  [1576,]   29   34   33   35   32   29   33   31   31    30 #>  [1577,]   29   34   33   35   32   29   33   31   31    30 #>  [1578,]   29   34   33   35   32   29   33   31   31    30 #>  [1579,]   29   34   33   35   32   29   33   31   31    30 #>  [1580,]   29   34   33   35   32   29   33   31   31    30 #>  [1581,]   30   35   34   36   33   30   34   32   32    31 #>  [1582,]   29   34   33   35   32   29   33   31   31    30 #>  [1583,]   29   34   33   35   32   29   33   31   31    30 #>  [1584,]   29   34   33   35   32   29   33   31   31    30 #>  [1585,]   29   34   33   35   32   29   33   31   31    30 #>  [1586,]   30   35   34   36   33   30   34   32   32    31 #>  [1587,]   29   34   33   35   32   29   33   31   31    30 #>  [1588,]   29   34   33   35   32   29   33   31   31    30 #>  [1589,]   29   34   33   35   32   29   33   31   31    30 #>  [1590,]   29   34   33   35   32   29   33   31   31    30 #>  [1591,]   29   34   33   35   32   29   33   31   31    30 #>  [1592,]   29   34   33   35   32   29   33   31   31    30 #>  [1593,]   29   34   33   35   32   29   33   31   31    30 #>  [1594,]   29   34   33   35   32   29   33   31   31    30 #>  [1595,]   29   34   33   35   32   29   33   31   31    30 #>  [1596,]   29   34   33   35   32   29   33   31   31    30 #>  [1597,]   29   34   33   35   32   29   33   31   31    30 #>  [1598,]   29   34   33   35   32   29   33   31   31    30 #>  [1599,]   29   34   33   35   32   29   33   31   31    30 #>  [1600,]   29   34   33   35   32   29   33   31   31    30 #>  [1601,]   31   36   35   37   34   31   35   33   33    32 #>  [1602,]   31   36   35   37   34   31   35   33   33    32 #>  [1603,]   31   36   35   37   34   31   35   33   33    32 #>  [1604,]   32   37   36   38   35   32   36   34   34    33 #>  [1605,]   31   36   35   37   34   31   35   33   33    32 #>  [1606,]   31   36   35   37   34   31   35   33   33    32 #>  [1607,]   32   37   36   38   35   32   36   34   34    33 #>  [1608,]   31   36   35   37   34   31   35   33   33    32 #>  [1609,]   31   36   35   37   34   31   35   33   33    32 #>  [1610,]   32   37   36   38   35   32   36   34   34    33 #>  [1611,]   31   36   35   37   34   31   35   33   33    32 #>  [1612,]   31   36   35   37   34   31   35   33   33    32 #>  [1613,]   31   36   35   37   34   31   35   33   33    32 #>  [1614,]   31   36   35   37   34   31   35   33   33    32 #>  [1615,]   32   37   36   38   35   32   36   34   34    33 #>  [1616,]   32   37   36   38   35   32   36   34   34    33 #>  [1617,]   31   36   35   37   34   31   35   33   33    32 #>  [1618,]   32   37   36   38   35   32   36   34   34    33 #>  [1619,]   31   36   35   37   34   31   35   33   33    32 #>  [1620,]   31   36   35   37   34   31   35   33   33    32 #>  [1621,]   32   37   36   38   35   32   36   34   34    33 #>  [1622,]   31   36   35   37   34   31   35   33   33    32 #>  [1623,]   32   37   36   38   35   32   36   34   34    33 #>  [1624,]   31   36   35   37   34   31   35   33   33    32 #>  [1625,]   32   37   36   38   35   32   36   34   34    33 #>  [1626,]   31   36   35   37   34   31   35   33   33    32 #>  [1627,]   32   37   36   38   35   32   36   34   34    33 #>  [1628,]   31   36   35   37   34   31   35   33   33    32 #>  [1629,]   31   36   35   37   34   31   35   33   33    32 #>  [1630,]   31   36   35   37   34   31   35   33   33    32 #>  [1631,]   31   36   35   37   34   31   35   33   33    32 #>  [1632,]   31   36   35   37   34   31   35   33   33    32 #>  [1633,]   31   36   35   37   34   31   35   33   33    32 #>  [1634,]   31   36   35   37   34   31   35   33   33    32 #>  [1635,]   31   36   35   37   34   31   35   33   33    32 #>  [1636,]   31   36   35   37   34   31   35   33   33    32 #>  [1637,]   31   36   35   37   34   31   35   33   33    32 #>  [1638,]   31   36   35   37   34   31   35   33   33    32 #>  [1639,]   32   37   36   38   35   32   36   34   34    33 #>  [1640,]   31   36   35   37   34   31   35   33   33    32 #>  [1641,]   31   36   35   37   34   31   35   33   33    32 #>  [1642,]   31   36   35   37   34   31   35   33   33    32 #>  [1643,]   32   37   36   38   35   32   36   34   34    33 #>  [1644,]   31   36   35   37   34   31   35   33   33    32 #>  [1645,]   32   37   36   38   35   32   36   34   34    33 #>  [1646,]   31   36   35   37   34   31   35   33   33    32 #>  [1647,]   31   36   35   37   34   31   35   33   33    32 #>  [1648,]   31   36   35   37   34   31   35   33   33    32 #>  [1649,]   31   36   35   37   34   31   35   33   33    32 #>  [1650,]   31   36   35   37   34   31   35   33   33    32 #>  [1651,]   31   36   35   37   34   31   35   33   33    32 #>  [1652,]   31   36   35   37   34   31   35   33   33    32 #>  [1653,]   32   37   36   38   35   32   36   34   34    33 #>  [1654,]   31   36   35   37   34   31   35   33   33    32 #>  [1655,]   31   36   35   37   34   31   35   33   33    32 #>  [1656,]   31   36   35   37   34   31   35   33   33    32 #>  [1657,]   31   36   35   37   34   31   35   33   33    32 #>  [1658,]   31   36   35   37   34   31   35   33   33    32 #>  [1659,]   31   36   35   37   34   31   35   33   33    32 #>  [1660,]   31   36   35   37   34   31   35   33   33    32 #>  [1661,]   32   37   36   38   35   32   36   34   34    33 #>  [1662,]   31   36   35   37   34   31   35   33   33    32 #>  [1663,]   31   36   35   37   34   31   35   33   33    32 #>  [1664,]   31   36   35   37   34   31   35   33   33    32 #>  [1665,]   31   36   35   37   34   31   35   33   33    32 #>  [1666,]   31   36   35   37   34   31   35   33   33    32 #>  [1667,]   31   36   35   37   34   31   35   33   33    32 #>  [1668,]   31   36   35   37   34   31   35   33   33    32 #>  [1669,]   31   36   35   37   34   31   35   33   33    32 #>  [1670,]   31   36   35   37   34   31   35   33   33    32 #>  [1671,]   32   37   36   38   35   32   36   34   34    33 #>  [1672,]   32   37   36   38   35   32   36   34   34    33 #>  [1673,]   32   37   36   38   35   32   36   34   34    33 #>  [1674,]   32   37   36   38   35   32   36   34   34    33 #>  [1675,]   32   37   36   38   35   32   36   34   34    33 #>  [1676,]   32   37   36   38   35   32   36   34   34    33 #>  [1677,]   32   37   36   38   35   32   36   34   34    33 #>  [1678,]   31   36   35   37   34   31   35   33   33    32 #>  [1679,]   31   36   35   37   34   31   35   33   33    32 #>  [1680,]   31   36   35   37   34   31   35   33   33    32 #>  [1681,]   31   36   35   37   34   31   35   33   33    32 #>  [1682,]   31   36   35   37   34   31   35   33   33    32 #>  [1683,]   31   36   35   37   34   31   35   33   33    32 #>  [1684,]   32   37   36   38   35   32   36   34   34    33 #>  [1685,]   31   36   35   37   34   31   35   33   33    32 #>  [1686,]   31   36   35   37   34   31   35   33   33    32 #>  [1687,]   31   36   35   37   34   31   35   33   33    32 #>  [1688,]   31   36   35   37   34   31   35   33   33    32 #>  [1689,]   31   36   35   37   34   31   35   33   33    32 #>  [1690,]   31   36   35   37   34   31   35   33   33    32 #>  [1691,]   31   36   35   37   34   31   35   33   33    32 #>  [1692,]   31   36   35   37   34   31   35   33   33    32 #>  [1693,]   31   36   35   37   34   31   35   33   33    32 #>  [1694,]   32   37   36   38   35   32   36   34   34    33 #>  [1695,]   32   37   36   38   35   32   36   34   34    33 #>  [1696,]   31   36   35   37   34   31   35   33   33    32 #>  [1697,]   31   36   35   37   34   31   35   33   33    32 #>  [1698,]   31   36   35   37   34   31   35   33   33    32 #>  [1699,]   31   36   35   37   34   31   35   33   33    32 #>  [1700,]   32   37   36   38   35   32   36   34   34    33 #>  [1701,]   33   38   37   39   36   33   37   35   35    34 #>  [1702,]   33   38   37   39   36   33   37   35   35    34 #>  [1703,]   33   38   37   39   36   33   37   35   35    34 #>  [1704,]   34   39   38   40   37   34   38   36   36    35 #>  [1705,]   33   38   37   39   36   33   37   35   35    34 #>  [1706,]   33   38   37   39   36   33   37   35   35    34 #>  [1707,]   33   38   37   39   36   33   37   35   35    34 #>  [1708,]   33   38   37   39   36   33   37   35   35    34 #>  [1709,]   33   38   37   39   36   33   37   35   35    34 #>  [1710,]   34   39   38   40   37   35   39   36   36    35 #>  [1711,]   33   38   37   39   36   33   37   35   35    34 #>  [1712,]   33   38   37   39   36   33   37   35   35    34 #>  [1713,]   33   38   37   39   36   33   37   35   35    34 #>  [1714,]   33   38   37   39   36   33   37   35   35    34 #>  [1715,]   33   38   37   39   36   33   37   35   35    34 #>  [1716,]   33   38   37   39   36   33   37   35   35    34 #>  [1717,]   33   38   37   39   36   33   37   35   35    34 #>  [1718,]   34   39   38   40   37   35   39   36   36    35 #>  [1719,]   33   38   37   39   36   33   37   35   35    34 #>  [1720,]   33   38   37   39   36   33   37   35   35    34 #>  [1721,]   34   39   38   40   37   34   38   36   36    35 #>  [1722,]   33   38   37   39   36   33   37   35   35    34 #>  [1723,]   33   38   37   39   36   33   37   35   35    34 #>  [1724,]   33   38   37   39   36   33   37   35   35    34 #>  [1725,]   34   39   38   40   37   35   39   36   36    35 #>  [1726,]   33   38   37   39   36   33   37   35   35    34 #>  [1727,]   33   38   37   39   36   33   37   35   35    34 #>  [1728,]   33   38   37   39   36   33   37   35   35    34 #>  [1729,]   33   38   37   39   36   33   37   35   35    34 #>  [1730,]   33   38   37   39   36   33   37   35   35    34 #>  [1731,]   33   38   37   39   36   33   37   35   35    34 #>  [1732,]   33   38   37   39   36   33   37   35   35    34 #>  [1733,]   33   38   37   39   36   33   37   35   35    34 #>  [1734,]   33   38   37   39   36   33   37   35   35    34 #>  [1735,]   33   38   37   39   36   33   37   35   35    34 #>  [1736,]   33   38   37   39   36   33   37   35   35    34 #>  [1737,]   33   38   37   39   36   33   37   35   35    34 #>  [1738,]   33   38   37   39   36   33   37   35   35    34 #>  [1739,]   34   39   38   40   37   35   39   36   36    35 #>  [1740,]   33   38   37   39   36   33   37   35   35    34 #>  [1741,]   33   38   37   39   36   33   37   35   35    34 #>  [1742,]   33   38   37   39   36   33   37   35   35    34 #>  [1743,]   34   39   38   40   37   34   38   36   36    35 #>  [1744,]   33   38   37   39   36   33   37   35   35    34 #>  [1745,]   34   39   38   40   37   34   38   36   36    35 #>  [1746,]   33   38   37   39   36   33   37   35   35    34 #>  [1747,]   33   38   37   39   36   33   37   35   35    34 #>  [1748,]   33   38   37   39   36   33   37   35   35    34 #>  [1749,]   33   38   37   39   36   33   37   35   35    34 #>  [1750,]   33   38   37   39   36   33   37   35   35    34 #>  [1751,]   33   38   37   39   36   33   37   35   35    34 #>  [1752,]   33   38   37   39   36   33   37   35   35    34 #>  [1753,]   34   39   38   40   37   35   39   36   36    35 #>  [1754,]   33   38   37   39   36   33   37   35   35    34 #>  [1755,]   33   38   37   39   36   33   37   35   35    34 #>  [1756,]   33   38   37   39   36   33   37   35   35    34 #>  [1757,]   33   38   37   39   36   33   37   35   35    34 #>  [1758,]   33   38   37   39   36   33   37   35   35    34 #>  [1759,]   33   38   37   39   36   33   37   35   35    34 #>  [1760,]   33   38   37   39   36   33   37   35   35    34 #>  [1761,]   33   38   37   39   36   33   37   35   35    34 #>  [1762,]   33   38   37   39   36   33   37   35   35    34 #>  [1763,]   33   38   37   39   36   33   37   35   35    34 #>  [1764,]   33   38   37   39   36   33   37   35   35    34 #>  [1765,]   33   38   37   39   36   33   37   35   35    34 #>  [1766,]   33   38   37   39   36   33   37   35   35    34 #>  [1767,]   33   38   37   39   36   33   37   35   35    34 #>  [1768,]   33   38   37   39   36   33   37   35   35    34 #>  [1769,]   33   38   37   39   36   33   37   35   35    34 #>  [1770,]   33   38   37   39   36   33   37   35   35    34 #>  [1771,]   33   38   37   39   36   33   37   35   35    34 #>  [1772,]   34   39   38   40   37   35   39   36   36    35 #>  [1773,]   34   39   38   40   37   35   39   36   36    35 #>  [1774,]   34   39   38   40   37   34   38   36   36    35 #>  [1775,]   34   39   38   40   37   35   39   36   36    35 #>  [1776,]   34   39   38   40   37   35   39   36   36    35 #>  [1777,]   34   39   38   40   37   35   39   36   36    35 #>  [1778,]   33   38   37   39   36   33   37   35   35    34 #>  [1779,]   33   38   37   39   36   33   37   35   35    34 #>  [1780,]   33   38   37   39   36   33   37   35   35    34 #>  [1781,]   33   38   37   39   36   33   37   35   35    34 #>  [1782,]   33   38   37   39   36   33   37   35   35    34 #>  [1783,]   33   38   37   39   36   33   37   35   35    34 #>  [1784,]   33   38   37   39   36   33   37   35   35    34 #>  [1785,]   33   38   37   39   36   33   37   35   35    34 #>  [1786,]   33   38   37   39   36   33   37   35   35    34 #>  [1787,]   33   38   37   39   36   33   37   35   35    34 #>  [1788,]   33   38   37   39   36   33   37   35   35    34 #>  [1789,]   33   38   37   39   36   33   37   35   35    34 #>  [1790,]   33   38   37   39   36   33   37   35   35    34 #>  [1791,]   33   38   37   39   36   33   37   35   35    34 #>  [1792,]   33   38   37   39   36   33   37   35   35    34 #>  [1793,]   33   38   37   39   36   33   37   35   35    34 #>  [1794,]   34   39   38   40   37   35   39   36   36    35 #>  [1795,]   34   39   38   40   37   34   38   36   36    35 #>  [1796,]   33   38   37   39   36   33   37   35   35    34 #>  [1797,]   33   38   37   39   36   33   37   35   35    34 #>  [1798,]   33   38   37   39   36   33   37   35   35    34 #>  [1799,]   33   38   37   39   36   33   37   35   35    34 #>  [1800,]   33   38   37   39   36   33   37   35   35    34 #>  [1801,]   35   40   39   41   38   36   40   37   37    36 #>  [1802,]   36   41   40   42   38   36   40   37   37    36 #>  [1803,]   35   40   39   41   38   36   40   37   37    36 #>  [1804,]   35   40   39   41   38   36   40   37   37    36 #>  [1805,]   35   40   39   41   38   36   40   37   37    36 #>  [1806,]   35   40   39   41   38   36   40   37   37    36 #>  [1807,]   35   40   39   41   38   36   40   37   37    36 #>  [1808,]   35   40   39   41   38   36   40   37   37    36 #>  [1809,]   36   41   40   42   38   36   40   37   37    36 #>  [1810,]   36   41   40   42   38   36   40   37   37    36 #>  [1811,]   35   40   39   41   38   36   40   37   37    36 #>  [1812,]   36   41   40   42   38   36   40   37   37    36 #>  [1813,]   35   40   39   41   38   36   40   37   37    36 #>  [1814,]   35   40   39   41   38   36   40   37   37    36 #>  [1815,]   35   40   39   41   38   36   40   37   37    36 #>  [1816,]   35   40   39   41   38   36   40   37   37    36 #>  [1817,]   35   40   39   41   38   36   40   37   37    36 #>  [1818,]   35   40   39   41   38   36   40   37   37    36 #>  [1819,]   35   40   39   41   38   36   40   37   37    36 #>  [1820,]   35   40   39   41   38   37   41   38   38    37 #>  [1821,]   36   41   40   42   38   36   40   37   37    36 #>  [1822,]   35   40   39   41   38   37   41   38   38    37 #>  [1823,]   35   40   39   41   38   36   40   37   37    36 #>  [1824,]   35   40   39   41   38   36   40   37   37    36 #>  [1825,]   35   40   39   41   38   36   40   37   37    36 #>  [1826,]   35   40   39   41   38   36   40   37   37    36 #>  [1827,]   35   40   39   41   38   37   41   38   38    37 #>  [1828,]   35   40   39   41   38   36   40   37   37    36 #>  [1829,]   36   41   40   42   38   37   41   38   38    37 #>  [1830,]   35   40   39   41   38   36   40   37   37    36 #>  [1831,]   35   40   39   41   38   36   40   37   37    36 #>  [1832,]   35   40   39   41   38   36   40   37   37    36 #>  [1833,]   36   41   40   42   38   36   40   37   37    36 #>  [1834,]   35   40   39   41   38   36   40   37   37    36 #>  [1835,]   35   40   39   41   38   36   40   37   37    36 #>  [1836,]   35   40   39   41   38   36   40   37   37    36 #>  [1837,]   35   40   39   41   38   36   40   37   37    36 #>  [1838,]   35   40   39   41   38   36   40   37   37    36 #>  [1839,]   35   40   39   41   38   36   40   37   37    36 #>  [1840,]   35   40   39   41   38   36   40   37   37    36 #>  [1841,]   35   40   39   41   38   36   40   37   37    36 #>  [1842,]   35   40   39   41   38   36   40   37   37    36 #>  [1843,]   35   40   39   41   38   36   40   37   37    36 #>  [1844,]   35   40   39   41   38   36   40   37   37    36 #>  [1845,]   35   40   39   41   38   36   40   37   37    36 #>  [1846,]   35   40   39   41   38   36   40   37   37    36 #>  [1847,]   35   40   39   41   38   36   40   37   37    36 #>  [1848,]   35   40   39   41   38   36   40   37   37    36 #>  [1849,]   35   40   39   41   38   36   40   37   37    36 #>  [1850,]   35   40   39   41   38   36   40   37   37    36 #>  [1851,]   35   40   39   41   38   36   40   37   37    36 #>  [1852,]   35   40   39   41   38   36   40   37   37    36 #>  [1853,]   35   40   39   41   38   36   40   37   37    36 #>  [1854,]   35   40   39   41   38   36   40   37   37    36 #>  [1855,]   35   40   39   41   38   36   40   37   37    36 #>  [1856,]   35   40   39   41   38   36   40   37   37    36 #>  [1857,]   35   40   39   41   38   36   40   37   37    36 #>  [1858,]   35   40   39   41   38   37   41   38   38    37 #>  [1859,]   35   40   39   41   38   36   40   37   37    36 #>  [1860,]   36   41   40   42   38   36   40   37   37    36 #>  [1861,]   35   40   39   41   38   36   40   37   37    36 #>  [1862,]   35   40   39   41   38   36   40   37   37    36 #>  [1863,]   35   40   39   41   38   36   40   37   37    36 #>  [1864,]   35   40   39   41   38   37   41   38   38    37 #>  [1865,]   35   40   39   41   38   36   40   37   37    36 #>  [1866,]   35   40   39   41   38   36   40   37   37    36 #>  [1867,]   35   40   39   41   38   36   40   37   37    36 #>  [1868,]   35   40   39   41   38   36   40   37   37    36 #>  [1869,]   35   40   39   41   38   36   40   37   37    36 #>  [1870,]   36   41   40   42   38   36   40   37   37    36 #>  [1871,]   35   40   39   41   38   36   40   37   37    36 #>  [1872,]   35   40   39   41   38   36   40   37   37    36 #>  [1873,]   35   40   39   41   38   36   40   37   37    36 #>  [1874,]   35   40   39   41   38   36   40   37   37    36 #>  [1875,]   35   40   39   41   38   36   40   37   37    36 #>  [1876,]   35   40   39   41   38   36   40   37   37    36 #>  [1877,]   35   40   39   41   38   37   41   38   38    37 #>  [1878,]   35   40   39   41   38   36   40   37   37    36 #>  [1879,]   35   40   39   41   38   36   40   37   37    36 #>  [1880,]   35   40   39   41   38   36   40   37   37    36 #>  [1881,]   35   40   39   41   38   37   41   38   38    37 #>  [1882,]   35   40   39   41   38   36   40   37   37    36 #>  [1883,]   35   40   39   41   38   36   40   37   37    36 #>  [1884,]   35   40   39   41   38   36   40   37   37    36 #>  [1885,]   35   40   39   41   38   36   40   37   37    36 #>  [1886,]   36   41   40   42   38   36   40   37   37    36 #>  [1887,]   35   40   39   41   38   37   41   38   38    37 #>  [1888,]   35   40   39   41   38   36   40   37   37    36 #>  [1889,]   35   40   39   41   38   36   40   37   37    36 #>  [1890,]   35   40   39   41   38   36   40   37   37    36 #>  [1891,]   35   40   39   41   38   36   40   37   37    36 #>  [1892,]   35   40   39   41   38   36   40   37   37    36 #>  [1893,]   35   40   39   41   38   36   40   37   37    36 #>  [1894,]   35   40   39   41   38   36   40   37   37    36 #>  [1895,]   35   40   39   41   38   36   40   37   37    36 #>  [1896,]   35   40   39   41   38   36   40   37   37    36 #>  [1897,]   35   40   39   41   38   36   40   37   37    36 #>  [1898,]   35   40   39   41   38   36   40   37   37    36 #>  [1899,]   35   40   39   41   38   36   40   37   37    36 #>  [1900,]   35   40   39   41   38   37   41   38   38    37 #>  [1901,]   37   42   41   43   39   38   42   39   39    38 #>  [1902,]   38   43   42   44   40   39   43   40   40    39 #>  [1903,]   37   42   41   43   39   38   42   39   39    38 #>  [1904,]   37   42   41   43   39   38   42   39   39    38 #>  [1905,]   37   42   41   43   39   38   42   39   39    38 #>  [1906,]   37   42   41   43   39   38   42   39   39    38 #>  [1907,]   37   42   41   43   39   38   42   39   39    38 #>  [1908,]   37   42   41   43   39   38   42   39   39    38 #>  [1909,]   38   43   42   44   40   39   43   40   40    39 #>  [1910,]   38   43   42   44   40   39   43   40   40    39 #>  [1911,]   37   42   41   43   39   38   42   39   39    38 #>  [1912,]   38   43   42   44   40   39   43   40   40    39 #>  [1913,]   38   43   42   44   40   39   43   40   40    39 #>  [1914,]   37   42   41   43   39   38   42   39   39    38 #>  [1915,]   37   42   41   43   39   38   42   39   39    38 #>  [1916,]   37   42   41   43   39   38   42   39   39    38 #>  [1917,]   38   43   42   44   40   39   43   40   40    39 #>  [1918,]   38   43   42   44   40   39   43   40   40    39 #>  [1919,]   37   42   41   43   39   38   42   39   39    38 #>  [1920,]   38   43   42   44   40   39   43   40   40    39 #>  [1921,]   38   43   42   44   40   39   43   40   40    39 #>  [1922,]   37   42   41   43   39   38   42   39   39    38 #>  [1923,]   38   43   42   44   40   39   43   40   40    39 #>  [1924,]   38   43   42   44   40   39   43   40   40    39 #>  [1925,]   37   42   41   43   39   38   42   39   39    38 #>  [1926,]   37   42   41   43   39   38   42   39   39    38 #>  [1927,]   37   42   41   43   39   38   42   39   39    38 #>  [1928,]   37   42   41   43   39   38   42   39   39    38 #>  [1929,]   38   43   42   44   40   39   43   40   40    39 #>  [1930,]   37   42   41   43   39   38   42   39   39    38 #>  [1931,]   38   43   42   44   40   39   43   40   40    39 #>  [1932,]   38   43   42   44   40   39   43   40   40    39 #>  [1933,]   38   43   42   44   40   39   43   40   40    39 #>  [1934,]   37   42   41   43   39   38   42   39   39    38 #>  [1935,]   37   42   41   43   39   38   42   39   39    38 #>  [1936,]   38   43   42   44   40   39   43   40   40    39 #>  [1937,]   37   42   41   43   39   38   42   39   39    38 #>  [1938,]   37   42   41   43   39   38   42   39   39    38 #>  [1939,]   37   42   41   43   39   38   42   39   39    38 #>  [1940,]   38   43   42   44   40   39   43   40   40    39 #>  [1941,]   37   42   41   43   39   38   42   39   39    38 #>  [1942,]   37   42   41   43   39   38   42   39   39    38 #>  [1943,]   37   42   41   43   39   38   42   39   39    38 #>  [1944,]   37   42   41   43   39   38   42   39   39    38 #>  [1945,]   37   42   41   43   39   38   42   39   39    38 #>  [1946,]   37   42   41   43   39   38   42   39   39    38 #>  [1947,]   37   42   41   43   39   38   42   39   39    38 #>  [1948,]   37   42   41   43   39   38   42   39   39    38 #>  [1949,]   37   42   41   43   39   38   42   39   39    38 #>  [1950,]   37   42   41   43   39   38   42   39   39    38 #>  [1951,]   37   42   41   43   39   38   42   39   39    38 #>  [1952,]   37   42   41   43   39   38   42   39   39    38 #>  [1953,]   38   43   42   44   40   39   43   40   40    39 #>  [1954,]   37   42   41   43   39   38   42   39   39    38 #>  [1955,]   37   42   41   43   39   38   42   39   39    38 #>  [1956,]   37   42   41   43   39   38   42   39   39    38 #>  [1957,]   37   42   41   43   39   38   42   39   39    38 #>  [1958,]   37   42   41   43   39   38   42   39   39    38 #>  [1959,]   37   42   41   43   39   38   42   39   39    38 #>  [1960,]   38   43   42   44   40   39   43   40   40    39 #>  [1961,]   38   43   42   44   40   39   43   40   40    39 #>  [1962,]   37   42   41   43   39   38   42   39   39    38 #>  [1963,]   38   43   42   44   40   39   43   40   40    39 #>  [1964,]   37   42   41   43   39   38   42   39   39    38 #>  [1965,]   37   42   41   43   39   38   42   39   39    38 #>  [1966,]   37   42   41   43   39   38   42   39   39    38 #>  [1967,]   37   42   41   43   39   38   42   39   39    38 #>  [1968,]   37   42   41   43   39   38   42   39   39    38 #>  [1969,]   37   42   41   43   39   38   42   39   39    38 #>  [1970,]   38   43   42   44   40   39   43   40   40    39 #>  [1971,]   37   42   41   43   39   38   42   39   39    38 #>  [1972,]   37   42   41   43   39   38   42   39   39    38 #>  [1973,]   37   42   41   43   39   38   42   39   39    38 #>  [1974,]   37   42   41   43   39   38   42   39   39    38 #>  [1975,]   38   43   42   44   40   39   43   40   40    39 #>  [1976,]   37   42   41   43   39   38   42   39   39    38 #>  [1977,]   37   42   41   43   39   38   42   39   39    38 #>  [1978,]   37   42   41   43   39   38   42   39   39    38 #>  [1979,]   37   42   41   43   39   38   42   39   39    38 #>  [1980,]   38   43   42   44   40   39   43   40   40    39 #>  [1981,]   38   43   42   44   40   39   43   40   40    39 #>  [1982,]   37   42   41   43   39   38   42   39   39    38 #>  [1983,]   38   43   42   44   40   39   43   40   40    39 #>  [1984,]   38   43   42   44   40   39   43   40   40    39 #>  [1985,]   37   42   41   43   39   38   42   39   39    38 #>  [1986,]   38   43   42   44   40   39   43   40   40    39 #>  [1987,]   37   42   41   43   39   38   42   39   39    38 #>  [1988,]   38   43   42   44   40   39   43   40   40    39 #>  [1989,]   37   42   41   43   39   38   42   39   39    38 #>  [1990,]   37   42   41   43   39   38   42   39   39    38 #>  [1991,]   37   42   41   43   39   38   42   39   39    38 #>  [1992,]   37   42   41   43   39   38   42   39   39    38 #>  [1993,]   37   42   41   43   39   38   42   39   39    38 #>  [1994,]   37   42   41   43   39   38   42   39   39    38 #>  [1995,]   37   42   41   43   39   38   42   39   39    38 #>  [1996,]   37   42   41   43   39   38   42   39   39    38 #>  [1997,]   37   42   41   43   39   38   42   39   39    38 #>  [1998,]   37   42   41   43   39   38   42   39   39    38 #>  [1999,]   37   42   41   43   39   38   42   39   39    38 #>  [2000,]   37   42   41   43   39   38   42   39   39    38 #>  [2001,]   39   45   44   46   42   41   45   42   42    41 #>  [2002,]   39   45   44   46   42   41   45   42   42    41 #>  [2003,]   39   45   44   46   42   41   45   42   42    41 #>  [2004,]   39   44   43   45   41   40   44   41   41    40 #>  [2005,]   39   45   44   46   42   41   45   42   42    41 #>  [2006,]   39   45   44   46   42   41   45   43   43    42 #>  [2007,]   39   45   44   46   42   41   45   42   42    41 #>  [2008,]   39   44   43   45   41   40   44   41   41    40 #>  [2009,]   39   44   43   45   41   40   44   41   41    40 #>  [2010,]   39   44   43   45   41   40   44   41   41    40 #>  [2011,]   39   45   44   46   42   41   45   43   43    42 #>  [2012,]   39   45   44   46   42   41   45   43   43    42 #>  [2013,]   39   45   44   46   42   41   45   42   42    41 #>  [2014,]   39   45   44   46   42   41   45   43   43    42 #>  [2015,]   39   45   44   46   42   41   45   43   43    42 #>  [2016,]   39   45   44   46   42   41   45   42   42    41 #>  [2017,]   39   45   44   46   42   41   45   42   42    41 #>  [2018,]   39   45   44   46   42   41   45   43   43    42 #>  [2019,]   39   45   44   46   42   41   45   43   43    42 #>  [2020,]   39   45   44   46   42   41   45   42   42    41 #>  [2021,]   39   45   44   46   42   41   45   43   43    42 #>  [2022,]   39   45   44   46   42   41   45   42   42    41 #>  [2023,]   39   45   44   46   42   41   45   43   43    42 #>  [2024,]   39   45   44   46   42   41   45   42   42    41 #>  [2025,]   39   45   44   46   42   41   45   42   42    41 #>  [2026,]   39   45   44   46   42   41   45   43   43    42 #>  [2027,]   39   45   44   46   42   41   45   43   43    42 #>  [2028,]   39   45   44   46   42   41   45   42   42    41 #>  [2029,]   39   45   44   46   42   41   45   42   42    41 #>  [2030,]   39   44   43   45   41   40   44   41   41    40 #>  [2031,]   39   45   44   46   42   41   45   43   43    42 #>  [2032,]   39   45   44   46   42   41   45   43   43    42 #>  [2033,]   39   45   44   46   42   41   45   43   43    42 #>  [2034,]   39   45   44   46   42   41   45   43   43    42 #>  [2035,]   39   45   44   46   42   41   45   42   42    41 #>  [2036,]   39   45   44   46   42   41   45   43   43    42 #>  [2037,]   39   45   44   46   42   41   45   42   42    41 #>  [2038,]   39   45   44   46   42   41   45   43   43    42 #>  [2039,]   39   45   44   46   42   41   45   42   42    41 #>  [2040,]   39   45   44   46   42   41   45   42   42    41 #>  [2041,]   39   45   44   46   42   41   45   43   43    42 #>  [2042,]   39   45   44   46   42   41   45   43   43    42 #>  [2043,]   39   44   43   45   41   40   44   41   41    40 #>  [2044,]   39   45   44   46   42   41   45   42   42    41 #>  [2045,]   39   45   44   46   42   41   45   42   42    41 #>  [2046,]   39   45   44   46   42   41   45   42   42    41 #>  [2047,]   39   45   44   46   42   41   45   42   42    41 #>  [2048,]   39   45   44   46   42   41   45   43   43    42 #>  [2049,]   39   45   44   46   42   41   45   42   42    41 #>  [2050,]   39   45   44   46   42   41   45   42   42    41 #>  [2051,]   39   44   43   45   41   40   44   41   41    40 #>  [2052,]   39   45   44   46   42   41   45   43   43    42 #>  [2053,]   39   45   44   46   42   41   45   42   42    41 #>  [2054,]   39   45   44   46   42   41   45   42   42    41 #>  [2055,]   39   45   44   46   42   41   45   42   42    41 #>  [2056,]   39   45   44   46   42   41   45   42   42    41 #>  [2057,]   39   45   44   46   42   41   45   42   42    41 #>  [2058,]   39   45   44   46   42   41   45   43   43    42 #>  [2059,]   39   45   44   46   42   41   45   42   42    41 #>  [2060,]   39   44   43   45   41   40   44   41   41    40 #>  [2061,]   39   45   44   46   42   41   45   43   43    42 #>  [2062,]   39   45   44   46   42   41   45   43   43    42 #>  [2063,]   39   45   44   46   42   41   45   42   42    41 #>  [2064,]   39   44   43   45   41   40   44   41   41    40 #>  [2065,]   39   45   44   46   42   41   45   42   42    41 #>  [2066,]   39   45   44   46   42   41   45   42   42    41 #>  [2067,]   39   44   43   45   41   40   44   41   41    40 #>  [2068,]   39   45   44   46   42   41   45   43   43    42 #>  [2069,]   39   45   44   46   42   41   45   43   43    42 #>  [2070,]   39   45   44   46   42   41   45   42   42    41 #>  [2071,]   39   45   44   46   42   41   45   42   42    41 #>  [2072,]   39   45   44   46   42   41   45   42   42    41 #>  [2073,]   39   45   44   46   42   41   45   43   43    42 #>  [2074,]   39   45   44   46   42   41   45   43   43    42 #>  [2075,]   39   45   44   46   42   41   45   43   43    42 #>  [2076,]   39   45   44   46   42   41   45   42   42    41 #>  [2077,]   39   45   44   46   42   41   45   42   42    41 #>  [2078,]   39   44   43   45   41   40   44   41   41    40 #>  [2079,]   39   45   44   46   42   41   45   42   42    41 #>  [2080,]   39   45   44   46   42   41   45   43   43    42 #>  [2081,]   39   45   44   46   42   41   45   42   42    41 #>  [2082,]   39   45   44   46   42   41   45   43   43    42 #>  [2083,]   39   45   44   46   42   41   45   42   42    41 #>  [2084,]   39   45   44   46   42   41   45   42   42    41 #>  [2085,]   39   44   43   45   41   40   44   41   41    40 #>  [2086,]   39   45   44   46   42   41   45   42   42    41 #>  [2087,]   39   45   44   46   42   41   45   42   42    41 #>  [2088,]   39   45   44   46   42   41   45   42   42    41 #>  [2089,]   39   44   43   45   41   40   44   41   41    40 #>  [2090,]   39   45   44   46   42   41   45   42   42    41 #>  [2091,]   39   44   43   45   41   40   44   41   41    40 #>  [2092,]   39   45   44   46   42   41   45   43   43    42 #>  [2093,]   39   45   44   46   42   41   45   43   43    42 #>  [2094,]   39   45   44   46   42   41   45   42   42    41 #>  [2095,]   39   44   43   45   41   40   44   41   41    40 #>  [2096,]   39   45   44   46   42   41   45   43   43    42 #>  [2097,]   39   45   44   46   42   41   45   43   43    42 #>  [2098,]   39   45   44   46   42   41   45   42   42    41 #>  [2099,]   39   45   44   46   42   41   45   43   43    42 #>  [2100,]   39   45   44   46   42   41   45   42   42    41 #>  [2101,]   40   46   45   48   44   43   47   45   44    43 #>  [2102,]   40   46   45   48   44   43   47   45   44    43 #>  [2103,]   40   46   45   47   43   42   46   44   44    43 #>  [2104,]   40   46   45   47   43   42   46   44   44    44 #>  [2105,]   40   46   45   47   43   42   46   44   44    43 #>  [2106,]   40   46   45   48   44   43   47   45   44    43 #>  [2107,]   40   46   45   47   43   42   46   44   44    43 #>  [2108,]   40   46   45   47   43   42   46   44   44    43 #>  [2109,]   40   46   45   47   43   42   46   44   44    44 #>  [2110,]   41   47   45   47   43   42   46   44   44    43 #>  [2111,]   40   46   45   48   44   43   47   45   44    44 #>  [2112,]   40   46   45   47   43   42   46   44   44    44 #>  [2113,]   40   46   45   48   44   43   47   45   44    43 #>  [2114,]   40   46   45   48   44   43   47   45   44    44 #>  [2115,]   40   46   45   48   44   43   47   45   44    44 #>  [2116,]   40   46   45   48   44   43   47   45   44    43 #>  [2117,]   40   46   45   48   44   43   47   45   44    43 #>  [2118,]   41   47   45   47   43   42   46   44   44    44 #>  [2119,]   40   46   45   47   43   42   46   44   44    44 #>  [2120,]   40   46   45   47   43   42   46   44   44    43 #>  [2121,]   40   46   45   48   44   43   47   45   44    44 #>  [2122,]   40   46   45   48   44   43   47   45   44    43 #>  [2123,]   40   46   45   47   43   42   46   44   44    43 #>  [2124,]   40   46   45   47   43   42   46   44   44    43 #>  [2125,]   41   47   45   47   43   42   46   44   44    43 #>  [2126,]   40   46   45   48   44   43   47   45   44    44 #>  [2127,]   40   46   45   48   44   43   47   45   44    44 #>  [2128,]   40   46   45   47   43   42   46   44   44    43 #>  [2129,]   40   46   45   48   44   43   47   45   44    43 #>  [2130,]   40   46   45   47   43   42   46   44   44    44 #>  [2131,]   40   46   45   47   43   42   46   44   44    44 #>  [2132,]   40   46   45   47   43   42   46   44   44    43 #>  [2133,]   40   46   45   48   44   43   47   45   44    44 #>  [2134,]   40   46   45   47   43   42   46   44   44    43 #>  [2135,]   40   46   45   48   44   43   47   45   44    43 #>  [2136,]   40   46   45   47   43   42   46   44   44    44 #>  [2137,]   40   46   45   48   44   43   47   45   44    43 #>  [2138,]   40   46   45   47   43   42   46   44   44    44 #>  [2139,]   41   47   45   47   43   42   46   44   44    43 #>  [2140,]   40   46   45   47   43   42   46   44   44    43 #>  [2141,]   40   46   45   48   44   43   47   45   44    44 #>  [2142,]   40   46   45   47   43   42   46   44   44    44 #>  [2143,]   41   47   45   47   43   42   46   44   44    43 #>  [2144,]   40   46   45   48   44   43   47   45   44    43 #>  [2145,]   41   47   45   47   43   42   46   44   44    43 #>  [2146,]   40   46   45   47   43   42   46   44   44    43 #>  [2147,]   40   46   45   48   44   43   47   45   44    43 #>  [2148,]   40   46   45   47   43   42   46   44   44    44 #>  [2149,]   40   46   45   47   43   42   46   44   44    43 #>  [2150,]   40   46   45   48   44   43   47   45   44    43 #>  [2151,]   40   46   45   47   43   42   46   44   44    43 #>  [2152,]   40   46   45   48   44   43   47   45   44    43 #>  [2153,]   40   46   45   47   43   42   46   44   44    43 #>  [2154,]   40   46   45   47   43   42   46   44   44    43 #>  [2155,]   40   46   45   47   43   42   46   44   44    43 #>  [2156,]   40   46   45   47   43   42   46   44   44    43 #>  [2157,]   40   46   45   47   43   42   46   44   44    43 #>  [2158,]   40   46   45   48   44   43   47   45   44    44 #>  [2159,]   40   46   45   48   44   43   47   45   44    43 #>  [2160,]   40   46   45   47   43   42   46   44   44    44 #>  [2161,]   40   46   45   48   44   43   47   45   44    44 #>  [2162,]   40   46   45   47   43   42   46   44   44    44 #>  [2163,]   40   46   45   47   43   42   46   44   44    43 #>  [2164,]   40   46   45   47   43   42   46   44   44    43 #>  [2165,]   40   46   45   47   43   42   46   44   44    43 #>  [2166,]   40   46   45   47   43   42   46   44   44    43 #>  [2167,]   40   46   45   47   43   42   46   44   44    43 #>  [2168,]   40   46   45   48   44   43   47   45   44    44 #>  [2169,]   40   46   45   47   43   42   46   44   44    44 #>  [2170,]   40   46   45   48   44   43   47   45   44    43 #>  [2171,]   40   46   45   48   44   43   47   45   44    43 #>  [2172,]   40   46   45   47   43   42   46   44   44    43 #>  [2173,]   41   47   45   48   44   43   47   45   44    43 #>  [2174,]   40   46   45   47   43   42   46   44   44    44 #>  [2175,]   41   47   45   48   44   43   47   45   44    44 #>  [2176,]   40   46   45   48   44   43   47   45   44    43 #>  [2177,]   41   47   45   48   44   43   47   45   44    43 #>  [2178,]   40   46   45   47   43   42   46   44   44    43 #>  [2179,]   40   46   45   48   44   43   47   45   44    43 #>  [2180,]   40   46   45   47   43   42   46   44   44    43 #>  [2181,]   40   46   45   48   44   43   47   45   44    43 #>  [2182,]   40   46   45   47   43   42   46   44   44    44 #>  [2183,]   40   46   45   48   44   43   47   45   44    43 #>  [2184,]   40   46   45   48   44   43   47   45   44    43 #>  [2185,]   40   46   45   47   43   42   46   44   44    44 #>  [2186,]   40   46   45   48   44   43   47   45   44    43 #>  [2187,]   40   46   45   48   44   43   47   45   44    43 #>  [2188,]   40   46   45   47   43   42   46   44   44    43 #>  [2189,]   40   46   45   47   43   42   46   44   44    43 #>  [2190,]   40   46   45   48   44   43   47   45   44    43 #>  [2191,]   40   46   45   47   43   42   46   44   44    43 #>  [2192,]   40   46   45   47   43   42   46   44   44    44 #>  [2193,]   40   46   45   48   44   43   47   45   44    44 #>  [2194,]   40   46   45   48   44   43   47   45   44    43 #>  [2195,]   40   46   45   47   43   42   46   44   44    43 #>  [2196,]   40   46   45   48   44   43   47   45   44    44 #>  [2197,]   40   46   45   48   44   43   47   45   44    44 #>  [2198,]   40   46   45   47   43   42   46   44   44    43 #>  [2199,]   40   46   45   48   44   43   47   45   44    44 #>  [2200,]   40   46   45   48   44   43   47   45   44    43 #>  [2201,]   43   49   47   51   46   45   49   47   46    46 #>  [2202,]   42   48   46   49   45   44   48   46   45    45 #>  [2203,]   42   48   46   49   45   44   48   46   45    45 #>  [2204,]   43   49   47   51   46   45   49   47   46    46 #>  [2205,]   43   49   47   50   46   45   49   47   46    46 #>  [2206,]   43   49   47   50   46   45   49   47   46    46 #>  [2207,]   42   48   46   49   45   44   48   46   45    45 #>  [2208,]   43   49   47   51   46   45   49   47   46    46 #>  [2209,]   43   49   47   51   46   45   49   47   46    46 #>  [2210,]   42   48   46   49   45   44   48   46   45    45 #>  [2211,]   43   49   47   50   46   45   49   47   46    46 #>  [2212,]   43   49   47   50   46   45   49   47   46    46 #>  [2213,]   42   48   46   49   45   44   48   46   45    45 #>  [2214,]   43   49   47   50   46   45   49   47   46    46 #>  [2215,]   43   49   47   51   46   45   49   47   46    46 #>  [2216,]   42   48   46   49   45   44   48   46   45    45 #>  [2217,]   42   48   46   49   45   44   48   46   45    45 #>  [2218,]   42   48   46   49   45   44   48   46   45    45 #>  [2219,]   42   48   46   49   45   44   48   46   45    45 #>  [2220,]   43   49   47   50   46   45   49   47   46    46 #>  [2221,]   42   48   46   49   45   44   48   46   45    45 #>  [2222,]   42   48   46   49   45   44   48   46   45    45 #>  [2223,]   42   48   46   49   45   44   48   46   45    45 #>  [2224,]   42   48   46   49   45   44   48   46   45    45 #>  [2225,]   42   48   46   49   45   44   48   46   45    45 #>  [2226,]   43   49   47   50   46   45   49   47   46    46 #>  [2227,]   43   49   47   51   46   45   49   47   46    46 #>  [2228,]   43   49   47   51   46   45   49   47   46    46 #>  [2229,]   42   48   46   49   45   44   48   46   45    45 #>  [2230,]   42   48   46   49   45   44   48   46   45    45 #>  [2231,]   42   48   46   49   45   44   48   46   45    45 #>  [2232,]   42   48   46   49   45   44   48   46   45    45 #>  [2233,]   43   49   47   50   46   45   49   47   46    46 #>  [2234,]   42   48   46   49   45   44   48   46   45    45 #>  [2235,]   42   48   46   49   45   44   48   46   45    45 #>  [2236,]   42   48   46   49   45   44   48   46   45    45 #>  [2237,]   42   48   46   49   45   44   48   46   45    45 #>  [2238,]   43   49   47   51   46   45   49   47   46    46 #>  [2239,]   42   48   46   49   45   44   48   46   45    45 #>  [2240,]   42   48   46   49   45   44   48   46   45    45 #>  [2241,]   43   49   47   50   46   45   49   47   46    46 #>  [2242,]   43   49   47   50   46   45   49   47   46    46 #>  [2243,]   43   49   47   51   46   45   49   47   46    46 #>  [2244,]   42   48   46   49   45   44   48   46   45    45 #>  [2245,]   43   49   47   51   46   45   49   47   46    46 #>  [2246,]   43   49   47   51   46   45   49   47   46    46 #>  [2247,]   42   48   46   49   45   44   48   46   45    45 #>  [2248,]   42   48   46   49   45   44   48   46   45    45 #>  [2249,]   42   48   46   49   45   44   48   46   45    45 #>  [2250,]   43   49   47   50   46   45   49   47   46    46 #>  [2251,]   43   49   47   50   46   45   49   47   46    46 #>  [2252,]   43   49   47   50   46   45   49   47   46    46 #>  [2253,]   43   49   47   51   46   45   49   47   46    46 #>  [2254,]   42   48   46   49   45   44   48   46   45    45 #>  [2255,]   43   49   47   50   46   45   49   47   46    46 #>  [2256,]   43   49   47   51   46   45   49   47   46    46 #>  [2257,]   43   49   47   50   46   45   49   47   46    46 #>  [2258,]   43   49   47   50   46   45   49   47   46    46 #>  [2259,]   42   48   46   49   45   44   48   46   45    45 #>  [2260,]   43   49   47   50   46   45   49   47   46    46 #>  [2261,]   43   49   47   51   46   45   49   47   46    46 #>  [2262,]   42   48   46   49   45   44   48   46   45    45 #>  [2263,]   43   49   47   50   46   45   49   47   46    46 #>  [2264,]   43   49   47   51   46   45   49   47   46    46 #>  [2265,]   43   49   47   50   46   45   49   47   46    46 #>  [2266,]   43   49   47   50   46   45   49   47   46    46 #>  [2267,]   43   49   47   50   46   45   49   47   46    46 #>  [2268,]   43   49   47   50   46   45   49   47   46    46 #>  [2269,]   43   49   47   50   46   45   49   47   46    46 #>  [2270,]   42   48   46   49   45   44   48   46   45    45 #>  [2271,]   43   49   47   51   46   45   49   47   46    46 #>  [2272,]   43   49   47   51   46   45   49   47   46    46 #>  [2273,]   43   49   47   51   46   45   49   47   46    46 #>  [2274,]   43   49   47   51   46   45   49   47   46    46 #>  [2275,]   43   49   47   51   46   45   49   47   46    46 #>  [2276,]   43   49   47   51   46   45   49   47   46    46 #>  [2277,]   42   48   46   49   45   44   48   46   45    45 #>  [2278,]   43   49   47   50   46   45   49   47   46    46 #>  [2279,]   42   48   46   49   45   44   48   46   45    45 #>  [2280,]   42   48   46   49   45   44   48   46   45    45 #>  [2281,]   43   49   47   50   46   45   49   47   46    46 #>  [2282,]   43   49   47   51   46   45   49   47   46    46 #>  [2283,]   42   48   46   49   45   44   48   46   45    45 #>  [2284,]   43   49   47   51   46   45   49   47   46    46 #>  [2285,]   42   48   46   49   45   44   48   46   45    45 #>  [2286,]   42   48   46   49   45   44   48   46   45    45 #>  [2287,]   43   49   47   51   46   45   49   47   46    46 #>  [2288,]   43   49   47   51   46   45   49   47   46    46 #>  [2289,]   43   49   47   50   46   45   49   47   46    46 #>  [2290,]   43   49   47   51   46   45   49   47   46    46 #>  [2291,]   43   49   47   50   46   45   49   47   46    46 #>  [2292,]   43   49   47   50   46   45   49   47   46    46 #>  [2293,]   42   48   46   49   45   44   48   46   45    45 #>  [2294,]   43   49   47   51   46   45   49   47   46    46 #>  [2295,]   42   48   46   49   45   44   48   46   45    45 #>  [2296,]   43   49   47   51   46   45   49   47   46    46 #>  [2297,]   43   49   47   50   46   45   49   47   46    46 #>  [2298,]   42   48   46   49   45   44   48   46   45    45 #>  [2299,]   43   49   47   50   46   45   49   47   46    46 #>  [2300,]   42   48   46   49   45   44   48   46   45    45 #>  [2301,]   45   51   49   53   48   47   51   49   48    48 #>  [2302,]   45   51   49   53   48   47   51   49   48    49 #>  [2303,]   44   50   48   52   47   46   50   48   47    47 #>  [2304,]   45   51   49   53   48   47   51   49   48    48 #>  [2305,]   45   51   49   53   48   47   51   49   48    49 #>  [2306,]   45   51   49   53   48   47   51   49   48    48 #>  [2307,]   44   50   48   52   47   46   50   48   47    47 #>  [2308,]   44   50   48   52   47   46   50   48   47    47 #>  [2309,]   45   51   49   53   48   47   51   49   48    49 #>  [2310,]   45   51   49   53   48   47   51   49   48    49 #>  [2311,]   45   51   49   53   48   47   51   49   48    48 #>  [2312,]   45   51   49   53   48   47   51   49   48    49 #>  [2313,]   45   51   49   53   48   47   51   49   48    49 #>  [2314,]   45   51   49   53   48   47   51   49   48    48 #>  [2315,]   45   51   49   53   48   47   51   49   48    48 #>  [2316,]   45   51   49   53   48   47   51   49   48    48 #>  [2317,]   45   51   49   53   48   47   51   49   48    49 #>  [2318,]   45   51   49   53   48   47   51   49   48    49 #>  [2319,]   45   51   49   53   48   47   51   49   48    48 #>  [2320,]   44   50   48   52   47   46   50   48   47    47 #>  [2321,]   45   51   49   53   48   47   51   49   48    49 #>  [2322,]   45   51   49   53   48   47   51   49   48    49 #>  [2323,]   45   51   49   53   48   47   51   49   48    49 #>  [2324,]   45   51   49   53   48   47   51   49   48    49 #>  [2325,]   44   50   48   52   47   46   50   48   47    47 #>  [2326,]   45   51   49   53   48   47   51   49   48    48 #>  [2327,]   45   51   49   53   48   47   51   49   48    49 #>  [2328,]   45   51   49   53   48   47   51   49   48    48 #>  [2329,]   45   51   49   53   48   47   51   49   48    49 #>  [2330,]   45   51   49   53   48   47   51   49   48    49 #>  [2331,]   45   51   49   53   48   47   51   49   48    49 #>  [2332,]   45   51   49   53   48   47   51   49   48    49 #>  [2333,]   45   51   49   53   48   47   51   49   48    49 #>  [2334,]   45   51   49   53   48   47   51   49   48    48 #>  [2335,]   45   51   49   53   48   47   51   49   48    48 #>  [2336,]   45   51   49   53   48   47   51   49   48    49 #>  [2337,]   45   51   49   53   48   47   51   49   48    48 #>  [2338,]   45   51   49   53   48   47   51   49   48    48 #>  [2339,]   44   50   48   52   47   46   50   48   47    47 #>  [2340,]   45   51   49   53   48   47   51   49   48    49 #>  [2341,]   45   51   49   53   48   47   51   49   48    49 #>  [2342,]   45   51   49   53   48   47   51   49   48    48 #>  [2343,]   45   51   49   53   48   47   51   49   48    48 #>  [2344,]   44   50   48   52   47   46   50   48   47    47 #>  [2345,]   45   51   49   53   48   47   51   49   48    48 #>  [2346,]   44   50   48   52   47   46   50   48   47    47 #>  [2347,]   45   51   49   53   48   47   51   49   48    49 #>  [2348,]   45   51   49   53   48   47   51   49   48    49 #>  [2349,]   44   50   48   52   47   46   50   48   47    47 #>  [2350,]   44   50   48   52   47   46   50   48   47    47 #>  [2351,]   45   51   49   53   48   47   51   49   48    49 #>  [2352,]   45   51   49   53   48   47   51   49   48    48 #>  [2353,]   44   50   48   52   47   46   50   48   47    47 #>  [2354,]   45   51   49   53   48   47   51   49   48    49 #>  [2355,]   44   50   48   52   47   46   50   48   47    47 #>  [2356,]   44   50   48   52   47   46   50   48   47    47 #>  [2357,]   45   51   49   53   48   47   51   49   48    48 #>  [2358,]   45   51   49   53   48   47   51   49   48    49 #>  [2359,]   44   50   48   52   47   46   50   48   47    47 #>  [2360,]   45   51   49   53   48   47   51   49   48    49 #>  [2361,]   45   51   49   53   48   47   51   49   48    49 #>  [2362,]   45   51   49   53   48   47   51   49   48    48 #>  [2363,]   45   51   49   53   48   47   51   49   48    49 #>  [2364,]   45   51   49   53   48   47   51   49   48    48 #>  [2365,]   44   50   48   52   47   46   50   48   47    47 #>  [2366,]   44   50   48   52   47   46   50   48   47    47 #>  [2367,]   45   51   49   53   48   47   51   49   48    48 #>  [2368,]   45   51   49   53   48   47   51   49   48    48 #>  [2369,]   45   51   49   53   48   47   51   49   48    48 #>  [2370,]   44   50   48   52   47   46   50   48   47    47 #>  [2371,]   45   51   49   53   48   47   51   49   48    49 #>  [2372,]   45   51   49   53   48   47   51   49   48    48 #>  [2373,]   45   51   49   53   48   47   51   49   48    48 #>  [2374,]   45   51   49   53   48   47   51   49   48    49 #>  [2375,]   45   51   49   53   48   47   51   49   48    49 #>  [2376,]   45   51   49   53   48   47   51   49   48    49 #>  [2377,]   45   51   49   53   48   47   51   49   48    48 #>  [2378,]   45   51   49   53   48   47   51   49   48    49 #>  [2379,]   45   51   49   53   48   47   51   49   48    48 #>  [2380,]   45   51   49   53   48   47   51   49   48    49 #>  [2381,]   45   51   49   53   48   47   51   49   48    49 #>  [2382,]   45   51   49   53   48   47   51   49   48    48 #>  [2383,]   45   51   49   53   48   47   51   49   48    49 #>  [2384,]   44   50   48   52   47   46   50   48   47    47 #>  [2385,]   45   51   49   53   48   47   51   49   48    48 #>  [2386,]   44   50   48   52   47   46   50   48   47    47 #>  [2387,]   45   51   49   53   48   47   51   49   48    49 #>  [2388,]   45   51   49   53   48   47   51   49   48    49 #>  [2389,]   45   51   49   53   48   47   51   49   48    48 #>  [2390,]   44   50   48   52   47   46   50   48   47    47 #>  [2391,]   45   51   49   53   48   47   51   49   48    48 #>  [2392,]   45   51   49   53   48   47   51   49   48    49 #>  [2393,]   45   51   49   53   48   47   51   49   48    49 #>  [2394,]   45   51   49   53   48   47   51   49   48    48 #>  [2395,]   45   51   49   53   48   47   51   49   48    49 #>  [2396,]   45   51   49   53   48   47   51   49   48    48 #>  [2397,]   45   51   49   53   48   47   51   49   48    48 #>  [2398,]   44   50   48   52   47   46   50   48   47    47 #>  [2399,]   45   51   49   53   48   47   51   49   48    49 #>  [2400,]   44   50   48   52   47   46   50   48   47    47 #>  [2401,]   46   52   50   54   49   48   52   50   49    50 #>  [2402,]   46   52   50   54   49   48   52   50   49    50 #>  [2403,]   46   52   50   54   49   48   52   50   49    50 #>  [2404,]   47   53   51   55   50   49   53   51   50    51 #>  [2405,]   46   52   50   54   49   48   52   50   49    50 #>  [2406,]   46   52   50   54   49   48   52   50   49    50 #>  [2407,]   46   52   50   54   49   48   52   50   49    50 #>  [2408,]   46   52   50   54   49   48   52   50   49    50 #>  [2409,]   46   52   50   54   49   48   52   50   49    50 #>  [2410,]   46   52   50   54   49   48   52   50   49    50 #>  [2411,]   46   52   50   54   49   48   52   50   49    50 #>  [2412,]   46   52   50   54   49   48   52   50   49    50 #>  [2413,]   46   52   50   54   49   48   52   50   49    50 #>  [2414,]   47   53   51   55   50   49   53   51   50    51 #>  [2415,]   46   52   50   54   49   48   52   50   49    50 #>  [2416,]   46   52   50   54   49   48   52   50   49    50 #>  [2417,]   46   52   50   54   49   48   52   50   49    50 #>  [2418,]   46   52   50   54   49   48   52   50   49    50 #>  [2419,]   46   52   50   54   49   48   52   50   49    50 #>  [2420,]   46   52   50   54   49   48   52   50   49    50 #>  [2421,]   46   52   50   54   49   48   52   50   49    50 #>  [2422,]   46   52   50   54   49   48   52   50   49    50 #>  [2423,]   46   52   50   54   49   48   52   50   49    50 #>  [2424,]   46   52   50   54   49   48   52   50   49    50 #>  [2425,]   46   52   50   54   49   48   52   50   49    50 #>  [2426,]   46   52   50   54   49   48   52   50   49    50 #>  [2427,]   47   53   51   55   50   49   53   51   50    51 #>  [2428,]   46   52   50   54   49   48   52   50   49    50 #>  [2429,]   46   52   50   54   49   48   52   50   49    50 #>  [2430,]   46   52   50   54   49   48   52   50   49    50 #>  [2431,]   46   52   50   54   49   48   52   50   49    50 #>  [2432,]   46   52   50   54   49   48   52   50   49    50 #>  [2433,]   46   52   50   54   49   48   52   50   49    50 #>  [2434,]   46   52   50   54   49   48   52   50   49    50 #>  [2435,]   46   52   50   54   49   48   52   50   49    50 #>  [2436,]   46   52   50   54   49   48   52   50   49    50 #>  [2437,]   46   52   50   54   49   48   52   50   49    50 #>  [2438,]   46   52   50   54   49   48   52   50   49    50 #>  [2439,]   46   52   50   54   49   48   52   50   49    50 #>  [2440,]   46   52   50   54   49   48   52   50   49    50 #>  [2441,]   46   52   50   54   49   48   52   50   49    50 #>  [2442,]   46   52   50   54   49   48   52   50   49    50 #>  [2443,]   46   52   50   54   49   48   52   50   49    50 #>  [2444,]   46   52   50   54   49   48   52   50   49    50 #>  [2445,]   46   52   50   54   49   48   52   50   49    50 #>  [2446,]   46   52   50   54   49   48   52   50   49    50 #>  [2447,]   46   52   50   54   49   48   52   50   49    50 #>  [2448,]   46   52   50   54   49   48   52   50   49    50 #>  [2449,]   46   52   50   54   49   48   52   50   49    50 #>  [2450,]   46   52   50   54   49   48   52   50   49    50 #>  [2451,]   46   52   50   54   49   48   52   50   49    50 #>  [2452,]   46   52   50   54   49   48   52   50   49    50 #>  [2453,]   46   52   50   54   49   48   52   50   49    50 #>  [2454,]   46   52   50   54   49   48   52   50   49    50 #>  [2455,]   46   52   50   54   49   48   52   50   49    50 #>  [2456,]   46   52   50   54   49   48   52   50   49    50 #>  [2457,]   46   52   50   54   49   48   52   50   49    50 #>  [2458,]   46   52   50   54   49   48   52   50   49    50 #>  [2459,]   46   52   50   54   49   48   52   50   49    50 #>  [2460,]   46   52   50   54   49   48   52   50   49    50 #>  [2461,]   47   53   51   55   50   49   53   51   50    51 #>  [2462,]   46   52   50   54   49   48   52   50   49    50 #>  [2463,]   46   52   50   54   49   48   52   50   49    50 #>  [2464,]   46   52   50   54   49   48   52   50   49    50 #>  [2465,]   46   52   50   54   49   48   52   50   49    50 #>  [2466,]   46   52   50   54   49   48   52   50   49    50 #>  [2467,]   46   52   50   54   49   48   52   50   49    50 #>  [2468,]   46   52   50   54   49   48   52   50   49    50 #>  [2469,]   47   53   51   55   50   49   53   51   50    51 #>  [2470,]   46   52   50   54   49   48   52   50   49    50 #>  [2471,]   46   52   50   54   49   48   52   50   49    50 #>  [2472,]   46   52   50   54   49   48   52   50   49    50 #>  [2473,]   46   52   50   54   49   48   52   50   49    50 #>  [2474,]   46   52   50   54   49   48   52   50   49    50 #>  [2475,]   46   52   50   54   49   48   52   50   49    50 #>  [2476,]   46   52   50   54   49   48   52   50   49    50 #>  [2477,]   46   52   50   54   49   48   52   50   49    50 #>  [2478,]   46   52   50   54   49   48   52   50   49    50 #>  [2479,]   46   52   50   54   49   48   52   50   49    50 #>  [2480,]   46   52   50   54   49   48   52   50   49    50 #>  [2481,]   46   52   50   54   49   48   52   50   49    50 #>  [2482,]   47   53   51   55   50   49   53   51   50    51 #>  [2483,]   46   52   50   54   49   48   52   50   49    50 #>  [2484,]   46   52   50   54   49   48   52   50   49    50 #>  [2485,]   46   52   50   54   49   48   52   50   49    50 #>  [2486,]   46   52   50   54   49   48   52   50   49    50 #>  [2487,]   46   52   50   54   49   48   52   50   49    50 #>  [2488,]   46   52   50   54   49   48   52   50   49    50 #>  [2489,]   46   52   50   54   49   48   52   50   49    50 #>  [2490,]   46   52   50   54   49   48   52   50   49    50 #>  [2491,]   46   52   50   54   49   48   52   50   49    50 #>  [2492,]   47   53   51   55   50   49   53   51   50    51 #>  [2493,]   47   53   51   55   50   49   53   51   50    51 #>  [2494,]   46   52   50   54   49   48   52   50   49    50 #>  [2495,]   46   52   50   54   49   48   52   50   49    50 #>  [2496,]   47   53   51   55   50   49   53   51   50    51 #>  [2497,]   47   53   51   55   50   49   53   51   50    51 #>  [2498,]   46   52   50   54   49   48   52   50   49    50 #>  [2499,]   46   52   50   54   49   48   52   50   49    50 #>  [2500,]   46   52   50   54   49   48   52   50   49    50 #>  [2501,]   49   55   53   57   52   51   55   53   52    52 #>  [2502,]   49   55   53   57   52   51   55   53   52    52 #>  [2503,]   49   55   53   57   52   51   55   53   52    52 #>  [2504,]   49   55   53   57   52   51   55   53   52    52 #>  [2505,]   49   55   53   57   52   51   55   53   52    52 #>  [2506,]   49   55   53   57   52   51   55   53   52    52 #>  [2507,]   49   55   53   57   52   51   55   53   52    52 #>  [2508,]   49   55   53   57   52   51   55   53   52    52 #>  [2509,]   49   55   53   57   52   51   55   53   52    52 #>  [2510,]   49   55   53   57   52   51   55   53   52    52 #>  [2511,]   49   55   53   57   52   51   55   53   52    52 #>  [2512,]   49   55   53   57   52   51   55   53   52    52 #>  [2513,]   49   55   53   57   52   51   55   53   52    52 #>  [2514,]   49   55   53   57   52   51   55   53   52    52 #>  [2515,]   48   54   52   56   51   50   54   52   51    52 #>  [2516,]   49   55   53   57   52   51   55   53   52    52 #>  [2517,]   48   54   52   56   51   50   54   52   51    52 #>  [2518,]   49   55   53   57   52   51   55   53   52    52 #>  [2519,]   49   55   53   57   52   51   55   53   52    52 #>  [2520,]   49   55   53   57   52   51   55   53   52    52 #>  [2521,]   49   55   53   57   52   51   55   53   52    52 #>  [2522,]   49   55   53   57   52   51   55   53   52    52 #>  [2523,]   49   55   53   57   52   51   55   53   52    52 #>  [2524,]   49   55   53   57   52   51   55   53   52    52 #>  [2525,]   49   55   53   57   52   51   55   53   52    52 #>  [2526,]   49   55   53   57   52   51   55   53   52    52 #>  [2527,]   49   55   53   57   52   51   55   53   52    52 #>  [2528,]   49   55   53   57   52   51   55   53   52    52 #>  [2529,]   49   55   53   57   52   51   55   53   52    52 #>  [2530,]   49   55   53   57   52   51   55   53   52    52 #>  [2531,]   48   54   52   56   51   50   54   52   51    52 #>  [2532,]   49   55   53   57   52   51   55   53   52    52 #>  [2533,]   49   55   53   57   52   51   55   53   52    52 #>  [2534,]   48   54   52   56   51   50   54   52   51    52 #>  [2535,]   49   55   53   57   52   51   55   53   52    52 #>  [2536,]   49   55   53   57   52   51   55   53   52    52 #>  [2537,]   48   54   52   56   51   50   54   52   51    52 #>  [2538,]   49   55   53   57   52   51   55   53   52    52 #>  [2539,]   49   55   53   57   52   51   55   53   52    52 #>  [2540,]   49   55   53   57   52   51   55   53   52    52 #>  [2541,]   49   55   53   57   52   51   55   53   52    52 #>  [2542,]   48   54   52   56   51   50   54   52   51    52 #>  [2543,]   48   54   52   56   51   50   54   52   51    52 #>  [2544,]   48   54   52   56   51   50   54   52   51    52 #>  [2545,]   49   55   53   57   52   51   55   53   52    52 #>  [2546,]   49   55   53   57   52   51   55   53   52    52 #>  [2547,]   49   55   53   57   52   51   55   53   52    52 #>  [2548,]   48   54   52   56   51   50   54   52   51    52 #>  [2549,]   49   55   53   57   52   51   55   53   52    52 #>  [2550,]   49   55   53   57   52   51   55   53   52    52 #>  [2551,]   49   55   53   57   52   51   55   53   52    52 #>  [2552,]   49   55   53   57   52   51   55   53   52    52 #>  [2553,]   49   55   53   57   52   51   55   53   52    52 #>  [2554,]   49   55   53   57   52   51   55   53   52    52 #>  [2555,]   49   55   53   57   52   51   55   53   52    52 #>  [2556,]   49   55   53   57   52   51   55   53   52    52 #>  [2557,]   49   55   53   57   52   51   55   53   52    52 #>  [2558,]   49   55   53   57   52   51   55   53   52    52 #>  [2559,]   49   55   53   57   52   51   55   53   52    52 #>  [2560,]   49   55   53   57   52   51   55   53   52    52 #>  [2561,]   49   55   53   57   52   51   55   53   52    52 #>  [2562,]   49   55   53   57   52   51   55   53   52    52 #>  [2563,]   48   54   52   56   51   50   54   52   51    52 #>  [2564,]   49   55   53   57   52   51   55   53   52    52 #>  [2565,]   49   55   53   57   52   51   55   53   52    52 #>  [2566,]   49   55   53   57   52   51   55   53   52    52 #>  [2567,]   49   55   53   57   52   51   55   53   52    52 #>  [2568,]   49   55   53   57   52   51   55   53   52    52 #>  [2569,]   49   55   53   57   52   51   55   53   52    52 #>  [2570,]   48   54   52   56   51   50   54   52   51    52 #>  [2571,]   49   55   53   57   52   51   55   53   52    52 #>  [2572,]   49   55   53   57   52   51   55   53   52    52 #>  [2573,]   49   55   53   57   52   51   55   53   52    52 #>  [2574,]   49   55   53   57   52   51   55   53   52    52 #>  [2575,]   48   54   52   56   51   50   54   52   51    52 #>  [2576,]   49   55   53   57   52   51   55   53   52    52 #>  [2577,]   49   55   53   57   52   51   55   53   52    52 #>  [2578,]   48   54   52   56   51   50   54   52   51    52 #>  [2579,]   48   54   52   56   51   50   54   52   51    52 #>  [2580,]   49   55   53   57   52   51   55   53   52    52 #>  [2581,]   49   55   53   57   52   51   55   53   52    52 #>  [2582,]   49   55   53   57   52   51   55   53   52    52 #>  [2583,]   49   55   53   57   52   51   55   53   52    52 #>  [2584,]   49   55   53   57   52   51   55   53   52    52 #>  [2585,]   49   55   53   57   52   51   55   53   52    52 #>  [2586,]   49   55   53   57   52   51   55   53   52    52 #>  [2587,]   49   55   53   57   52   51   55   53   52    52 #>  [2588,]   49   55   53   57   52   51   55   53   52    52 #>  [2589,]   49   55   53   57   52   51   55   53   52    52 #>  [2590,]   49   55   53   57   52   51   55   53   52    52 #>  [2591,]   49   55   53   57   52   51   55   53   52    52 #>  [2592,]   49   55   53   57   52   51   55   53   52    52 #>  [2593,]   49   55   53   57   52   51   55   53   52    52 #>  [2594,]   48   54   52   56   51   50   54   52   51    52 #>  [2595,]   48   54   52   56   51   50   54   52   51    52 #>  [2596,]   49   55   53   57   52   51   55   53   52    52 #>  [2597,]   49   55   53   57   52   51   55   53   52    52 #>  [2598,]   49   55   53   57   52   51   55   53   52    52 #>  [2599,]   49   55   53   57   52   51   55   53   52    52 #>  [2600,]   48   54   52   56   51   50   54   52   51    52 #>  [2601,]   51   57   55   60   54   53   57   55   54    54 #>  [2602,]   50   56   54   58   53   52   56   54   53    53 #>  [2603,]   50   56   54   58   53   52   56   54   53    53 #>  [2604,]   50   56   54   58   53   52   56   54   53    53 #>  [2605,]   50   56   54   58   53   52   56   54   53    53 #>  [2606,]   50   56   54   58   53   52   56   54   53    53 #>  [2607,]   50   56   54   58   53   52   56   54   53    53 #>  [2608,]   50   56   54   58   53   52   56   54   53    53 #>  [2609,]   51   57   55   60   54   53   57   55   54    54 #>  [2610,]   50   56   54   58   53   52   56   54   53    53 #>  [2611,]   50   56   54   58   53   52   56   54   53    53 #>  [2612,]   50   56   54   58   53   52   56   54   53    53 #>  [2613,]   51   57   55   59   54   53   57   55   54    54 #>  [2614,]   50   56   54   58   53   52   56   54   53    53 #>  [2615,]   50   56   54   58   53   52   56   54   53    53 #>  [2616,]   50   56   54   58   53   52   56   54   53    53 #>  [2617,]   51   57   55   60   54   53   57   55   54    54 #>  [2618,]   51   57   55   60   54   53   57   55   54    54 #>  [2619,]   50   56   54   58   53   52   56   54   53    53 #>  [2620,]   51   57   55   60   54   53   57   55   54    54 #>  [2621,]   50   56   54   58   53   52   56   54   53    53 #>  [2622,]   50   56   54   58   53   52   56   54   53    53 #>  [2623,]   50   56   54   58   53   52   56   54   53    53 #>  [2624,]   50   56   54   58   53   52   56   54   53    53 #>  [2625,]   50   56   54   58   53   52   56   54   53    53 #>  [2626,]   50   56   54   58   53   52   56   54   53    53 #>  [2627,]   51   57   55   60   54   53   57   55   54    54 #>  [2628,]   50   56   54   58   53   52   56   54   53    53 #>  [2629,]   50   56   54   58   53   52   56   54   53    53 #>  [2630,]   50   56   54   58   53   52   56   54   53    53 #>  [2631,]   50   56   54   58   53   52   56   54   53    53 #>  [2632,]   50   56   54   58   53   52   56   54   53    53 #>  [2633,]   51   57   55   60   54   53   57   55   54    54 #>  [2634,]   50   56   54   58   53   52   56   54   53    53 #>  [2635,]   50   56   54   58   53   52   56   54   53    53 #>  [2636,]   51   57   55   60   54   53   57   55   54    54 #>  [2637,]   50   56   54   58   53   52   56   54   53    53 #>  [2638,]   51   57   55   60   54   53   57   55   54    54 #>  [2639,]   50   56   54   58   53   52   56   54   53    53 #>  [2640,]   50   56   54   58   53   52   56   54   53    53 #>  [2641,]   50   56   54   58   53   52   56   54   53    53 #>  [2642,]   51   57   55   60   54   53   57   55   54    54 #>  [2643,]   50   56   54   58   53   52   56   54   53    53 #>  [2644,]   50   56   54   58   53   52   56   54   53    53 #>  [2645,]   50   56   54   58   53   52   56   54   53    53 #>  [2646,]   50   56   54   58   53   52   56   54   53    53 #>  [2647,]   50   56   54   58   53   52   56   54   53    53 #>  [2648,]   50   56   54   58   53   52   56   54   53    53 #>  [2649,]   50   56   54   58   53   52   56   54   53    53 #>  [2650,]   50   56   54   58   53   52   56   54   53    53 #>  [2651,]   51   57   55   60   54   53   57   55   54    54 #>  [2652,]   50   56   54   58   53   52   56   54   53    53 #>  [2653,]   51   57   55   60   54   53   57   55   54    54 #>  [2654,]   51   57   55   59   54   53   57   55   54    54 #>  [2655,]   50   56   54   58   53   52   56   54   53    53 #>  [2656,]   51   57   55   60   54   53   57   55   54    54 #>  [2657,]   50   56   54   58   53   52   56   54   53    53 #>  [2658,]   50   56   54   58   53   52   56   54   53    53 #>  [2659,]   50   56   54   58   53   52   56   54   53    53 #>  [2660,]   50   56   54   58   53   52   56   54   53    53 #>  [2661,]   50   56   54   58   53   52   56   54   53    53 #>  [2662,]   51   57   55   59   54   53   57   55   54    54 #>  [2663,]   50   56   54   58   53   52   56   54   53    53 #>  [2664,]   50   56   54   58   53   52   56   54   53    53 #>  [2665,]   51   57   55   60   54   53   57   55   54    54 #>  [2666,]   51   57   55   60   54   53   57   55   54    54 #>  [2667,]   50   56   54   58   53   52   56   54   53    53 #>  [2668,]   50   56   54   58   53   52   56   54   53    53 #>  [2669,]   50   56   54   58   53   52   56   54   53    53 #>  [2670,]   50   56   54   58   53   52   56   54   53    53 #>  [2671,]   50   56   54   58   53   52   56   54   53    53 #>  [2672,]   50   56   54   58   53   52   56   54   53    53 #>  [2673,]   50   56   54   58   53   52   56   54   53    53 #>  [2674,]   50   56   54   58   53   52   56   54   53    53 #>  [2675,]   50   56   54   58   53   52   56   54   53    53 #>  [2676,]   50   56   54   58   53   52   56   54   53    53 #>  [2677,]   51   57   55   59   54   53   57   55   54    54 #>  [2678,]   50   56   54   58   53   52   56   54   53    53 #>  [2679,]   51   57   55   59   54   53   57   55   54    54 #>  [2680,]   50   56   54   58   53   52   56   54   53    53 #>  [2681,]   50   56   54   58   53   52   56   54   53    53 #>  [2682,]   51   57   55   60   54   53   57   55   54    54 #>  [2683,]   51   57   55   59   54   53   57   55   54    54 #>  [2684,]   51   57   55   60   54   53   57   55   54    54 #>  [2685,]   51   57   55   60   54   53   57   55   54    54 #>  [2686,]   50   56   54   58   53   52   56   54   53    53 #>  [2687,]   51   57   55   60   54   53   57   55   54    54 #>  [2688,]   50   56   54   58   53   52   56   54   53    53 #>  [2689,]   50   56   54   58   53   52   56   54   53    53 #>  [2690,]   50   56   54   58   53   52   56   54   53    53 #>  [2691,]   51   57   55   60   54   53   57   55   54    54 #>  [2692,]   50   56   54   58   53   52   56   54   53    53 #>  [2693,]   51   57   55   60   54   53   57   55   54    54 #>  [2694,]   51   57   55   60   54   53   57   55   54    54 #>  [2695,]   50   56   54   58   53   52   56   54   53    53 #>  [2696,]   50   56   54   58   53   52   56   54   53    53 #>  [2697,]   50   56   54   58   53   52   56   54   53    53 #>  [2698,]   50   56   54   58   53   52   56   54   53    53 #>  [2699,]   50   56   54   58   53   52   56   54   53    53 #>  [2700,]   50   56   54   58   53   52   56   54   53    53 #>  [2701,]   52   58   56   63   56   55   59   57   55    56 #>  [2702,]   52   58   56   62   56   55   59   57   55    56 #>  [2703,]   53   59   57   61   55   54   58   56   55    55 #>  [2704,]   52   58   56   63   56   55   59   57   55    55 #>  [2705,]   52   58   56   62   56   55   59   57   55    56 #>  [2706,]   53   59   57   61   55   54   58   56   55    56 #>  [2707,]   52   58   56   63   56   55   59   57   55    55 #>  [2708,]   52   58   56   62   56   55   59   57   55    55 #>  [2709,]   52   58   56   63   56   55   59   57   55    56 #>  [2710,]   52   58   56   63   56   55   59   57   55    56 #>  [2711,]   52   58   56   62   56   55   59   57   55    56 #>  [2712,]   52   58   56   62   56   55   59   57   55    55 #>  [2713,]   52   58   56   63   56   55   59   57   55    56 #>  [2714,]   52   58   56   63   56   55   59   57   55    56 #>  [2715,]   52   58   56   62   56   55   59   57   55    56 #>  [2716,]   52   58   56   63   56   55   59   57   55    56 #>  [2717,]   52   58   56   62   56   55   59   57   55    56 #>  [2718,]   52   58   56   62   56   55   59   57   55    56 #>  [2719,]   52   58   56   62   56   55   59   57   55    56 #>  [2720,]   52   58   56   63   56   55   59   57   55    56 #>  [2721,]   52   58   56   62   56   55   59   57   55    56 #>  [2722,]   52   58   56   63   56   55   59   57   55    56 #>  [2723,]   52   58   56   62   56   55   59   57   55    55 #>  [2724,]   52   58   56   63   56   55   59   57   55    56 #>  [2725,]   52   58   56   63   56   55   59   57   55    55 #>  [2726,]   52   58   56   62   56   55   59   57   55    56 #>  [2727,]   52   58   56   62   56   55   59   57   55    56 #>  [2728,]   52   58   56   63   56   55   59   57   55    56 #>  [2729,]   52   58   56   62   56   55   59   57   55    56 #>  [2730,]   52   58   56   62   56   55   59   57   55    56 #>  [2731,]   52   58   56   62   56   55   59   57   55    55 #>  [2732,]   52   58   56   62   56   55   59   57   55    56 #>  [2733,]   52   58   56   62   56   55   59   57   55    56 #>  [2734,]   53   59   57   61   55   54   58   56   55    56 #>  [2735,]   52   58   56   62   56   55   59   57   55    56 #>  [2736,]   52   58   56   63   56   55   59   57   55    56 #>  [2737,]   52   58   56   62   56   55   59   57   55    55 #>  [2738,]   52   58   56   62   56   55   59   57   55    56 #>  [2739,]   52   58   56   63   56   55   59   57   55    56 #>  [2740,]   52   58   56   62   56   55   59   57   55    55 #>  [2741,]   52   58   56   62   56   55   59   57   55    56 #>  [2742,]   52   58   56   62   56   55   59   57   55    56 #>  [2743,]   52   58   56   62   56   55   59   57   55    56 #>  [2744,]   52   58   56   62   56   55   59   57   55    56 #>  [2745,]   52   58   56   63   56   55   59   57   55    56 #>  [2746,]   52   58   56   62   56   55   59   57   55    55 #>  [2747,]   52   58   56   62   56   55   59   57   55    55 #>  [2748,]   52   58   56   62   56   55   59   57   55    56 #>  [2749,]   52   58   56   63   56   55   59   57   55    56 #>  [2750,]   52   58   56   63   56   55   59   57   55    56 #>  [2751,]   52   58   56   62   56   55   59   57   55    56 #>  [2752,]   52   58   56   63   56   55   59   57   55    55 #>  [2753,]   52   58   56   63   56   55   59   57   55    56 #>  [2754,]   52   58   56   63   56   55   59   57   55    56 #>  [2755,]   52   58   56   63   56   55   59   57   55    55 #>  [2756,]   52   58   56   62   56   55   59   57   55    56 #>  [2757,]   52   58   56   63   56   55   59   57   55    55 #>  [2758,]   52   58   56   63   56   55   59   57   55    56 #>  [2759,]   52   58   56   63   56   55   59   57   55    55 #>  [2760,]   53   59   57   61   55   54   58   56   55    55 #>  [2761,]   52   58   56   62   56   55   59   57   55    56 #>  [2762,]   52   58   56   62   56   55   59   57   55    56 #>  [2763,]   52   58   56   62   56   55   59   57   55    56 #>  [2764,]   52   58   56   62   56   55   59   57   55    56 #>  [2765,]   53   59   57   61   55   54   58   56   55    56 #>  [2766,]   52   58   56   62   56   55   59   57   55    56 #>  [2767,]   52   58   56   63   56   55   59   57   55    56 #>  [2768,]   52   58   56   62   56   55   59   57   55    55 #>  [2769,]   52   58   56   62   56   55   59   57   55    56 #>  [2770,]   52   58   56   62   56   55   59   57   55    56 #>  [2771,]   52   58   56   62   56   55   59   57   55    56 #>  [2772,]   52   58   56   63   56   55   59   57   55    56 #>  [2773,]   52   58   56   63   56   55   59   57   55    56 #>  [2774,]   52   58   56   62   56   55   59   57   55    55 #>  [2775,]   52   58   56   62   56   55   59   57   55    56 #>  [2776,]   52   58   56   63   56   55   59   57   55    55 #>  [2777,]   52   58   56   62   56   55   59   57   55    56 #>  [2778,]   52   58   56   62   56   55   59   57   55    56 #>  [2779,]   52   58   56   62   56   55   59   57   55    56 #>  [2780,]   52   58   56   62   56   55   59   57   55    55 #>  [2781,]   52   58   56   62   56   55   59   57   55    56 #>  [2782,]   52   58   56   62   56   55   59   57   55    56 #>  [2783,]   52   58   56   62   56   55   59   57   55    56 #>  [2784,]   52   58   56   62   56   55   59   57   55    56 #>  [2785,]   52   58   56   63   56   55   59   57   55    56 #>  [2786,]   52   58   56   63   56   55   59   57   55    55 #>  [2787,]   52   58   56   63   56   55   59   57   55    56 #>  [2788,]   52   58   56   63   56   55   59   57   55    56 #>  [2789,]   52   58   56   62   56   55   59   57   55    56 #>  [2790,]   52   58   56   63   56   55   59   57   55    56 #>  [2791,]   52   58   56   63   56   55   59   57   55    56 #>  [2792,]   52   58   56   62   56   55   59   57   55    55 #>  [2793,]   53   59   57   61   55   54   58   56   55    56 #>  [2794,]   52   58   56   62   56   55   59   57   55    56 #>  [2795,]   52   58   56   62   56   55   59   57   55    56 #>  [2796,]   52   58   56   62   56   55   59   57   55    55 #>  [2797,]   52   58   56   62   56   55   59   57   55    55 #>  [2798,]   52   58   56   62   56   55   59   57   55    55 #>  [2799,]   52   58   56   62   56   55   59   57   55    56 #>  [2800,]   52   58   56   62   56   55   59   57   55    56 #>  [2801,]   55   61   59   65   58   57   61   59   57    58 #>  [2802,]   55   61   59   65   58   57   61   59   57    58 #>  [2803,]   55   61   59   65   58   57   61   59   57    58 #>  [2804,]   55   61   59   65   58   57   61   59   57    58 #>  [2805,]   55   61   59   65   58   57   61   59   57    58 #>  [2806,]   55   61   59   65   58   57   61   59   57    58 #>  [2807,]   55   61   59   65   58   57   61   59   57    58 #>  [2808,]   55   61   59   65   58   57   61   59   57    58 #>  [2809,]   55   61   59   65   58   57   61   59   57    58 #>  [2810,]   55   61   59   65   58   57   61   59   57    58 #>  [2811,]   55   61   59   65   58   57   61   59   57    58 #>  [2812,]   55   61   59   65   58   57   61   59   57    58 #>  [2813,]   55   61   59   65   58   57   61   59   57    58 #>  [2814,]   55   61   59   65   58   57   61   59   57    58 #>  [2815,]   54   60   58   64   57   56   60   58   56    57 #>  [2816,]   55   61   59   65   58   57   61   59   57    58 #>  [2817,]   55   61   59   65   58   57   61   59   57    58 #>  [2818,]   55   61   59   65   58   57   61   59   57    58 #>  [2819,]   55   61   59   65   58   57   61   59   57    58 #>  [2820,]   55   61   59   65   58   57   61   59   57    58 #>  [2821,]   55   61   59   65   58   57   61   59   57    58 #>  [2822,]   55   61   59   65   58   57   61   59   57    58 #>  [2823,]   55   61   59   65   58   57   61   59   57    58 #>  [2824,]   55   61   59   65   58   57   61   59   57    58 #>  [2825,]   55   61   59   65   58   57   61   59   57    58 #>  [2826,]   55   61   59   65   58   57   61   59   57    58 #>  [2827,]   55   61   59   65   58   57   61   59   57    58 #>  [2828,]   55   61   59   65   58   57   61   59   57    58 #>  [2829,]   55   61   59   65   58   57   61   59   57    58 #>  [2830,]   55   61   59   65   58   57   61   59   57    58 #>  [2831,]   54   60   58   64   57   56   60   58   56    57 #>  [2832,]   55   61   59   65   58   57   61   59   57    58 #>  [2833,]   55   61   59   65   58   57   61   59   57    58 #>  [2834,]   54   60   58   64   57   56   60   58   56    57 #>  [2835,]   55   61   59   65   58   57   61   59   57    58 #>  [2836,]   55   61   59   65   58   57   61   59   57    58 #>  [2837,]   55   61   59   65   58   57   61   59   57    58 #>  [2838,]   55   61   59   65   58   57   61   59   57    58 #>  [2839,]   55   61   59   65   58   57   61   59   57    58 #>  [2840,]   55   61   59   65   58   57   61   59   57    58 #>  [2841,]   55   61   59   65   58   57   61   59   57    58 #>  [2842,]   54   60   58   64   57   56   60   58   56    57 #>  [2843,]   54   60   58   64   57   56   60   58   56    57 #>  [2844,]   54   60   58   64   57   56   60   58   56    57 #>  [2845,]   55   61   59   65   58   57   61   59   57    58 #>  [2846,]   55   61   59   65   58   57   61   59   57    58 #>  [2847,]   55   61   59   65   58   57   61   59   57    58 #>  [2848,]   55   61   59   65   58   57   61   59   57    58 #>  [2849,]   55   61   59   65   58   57   61   59   57    58 #>  [2850,]   55   61   59   65   58   57   61   59   57    58 #>  [2851,]   55   61   59   65   58   57   61   59   57    58 #>  [2852,]   55   61   59   65   58   57   61   59   57    58 #>  [2853,]   55   61   59   65   58   57   61   59   57    58 #>  [2854,]   55   61   59   65   58   57   61   59   57    58 #>  [2855,]   55   61   59   65   58   57   61   59   57    58 #>  [2856,]   55   61   59   65   58   57   61   59   57    58 #>  [2857,]   55   61   59   65   58   57   61   59   57    58 #>  [2858,]   55   61   59   65   58   57   61   59   57    58 #>  [2859,]   55   61   59   65   58   57   61   59   57    58 #>  [2860,]   55   61   59   65   58   57   61   59   57    58 #>  [2861,]   55   61   59   65   58   57   61   59   57    58 #>  [2862,]   55   61   59   65   58   57   61   59   57    58 #>  [2863,]   54   60   58   64   57   56   60   58   56    57 #>  [2864,]   55   61   59   65   58   57   61   59   57    58 #>  [2865,]   55   61   59   65   58   57   61   59   57    58 #>  [2866,]   55   61   59   65   58   57   61   59   57    58 #>  [2867,]   55   61   59   65   58   57   61   59   57    58 #>  [2868,]   55   61   59   65   58   57   61   59   57    58 #>  [2869,]   55   61   59   65   58   57   61   59   57    58 #>  [2870,]   55   61   59   65   58   57   61   59   57    58 #>  [2871,]   55   61   59   65   58   57   61   59   57    58 #>  [2872,]   55   61   59   65   58   57   61   59   57    58 #>  [2873,]   55   61   59   65   58   57   61   59   57    58 #>  [2874,]   55   61   59   65   58   57   61   59   57    58 #>  [2875,]   54   60   58   64   57   56   60   58   56    57 #>  [2876,]   55   61   59   65   58   57   61   59   57    58 #>  [2877,]   55   61   59   65   58   57   61   59   57    58 #>  [2878,]   54   60   58   64   57   56   60   58   56    57 #>  [2879,]   55   61   59   65   58   57   61   59   57    58 #>  [2880,]   55   61   59   65   58   57   61   59   57    58 #>  [2881,]   55   61   59   65   58   57   61   59   57    58 #>  [2882,]   55   61   59   65   58   57   61   59   57    58 #>  [2883,]   55   61   59   65   58   57   61   59   57    58 #>  [2884,]   55   61   59   65   58   57   61   59   57    58 #>  [2885,]   55   61   59   65   58   57   61   59   57    58 #>  [2886,]   55   61   59   65   58   57   61   59   57    58 #>  [2887,]   55   61   59   65   58   57   61   59   57    58 #>  [2888,]   55   61   59   65   58   57   61   59   57    58 #>  [2889,]   55   61   59   65   58   57   61   59   57    58 #>  [2890,]   55   61   59   65   58   57   61   59   57    58 #>  [2891,]   55   61   59   65   58   57   61   59   57    58 #>  [2892,]   55   61   59   65   58   57   61   59   57    58 #>  [2893,]   55   61   59   65   58   57   61   59   57    58 #>  [2894,]   55   61   59   65   58   57   61   59   57    58 #>  [2895,]   54   60   58   64   57   56   60   58   56    57 #>  [2896,]   55   61   59   65   58   57   61   59   57    58 #>  [2897,]   55   61   59   65   58   57   61   59   57    58 #>  [2898,]   55   61   59   65   58   57   61   59   57    58 #>  [2899,]   55   61   59   65   58   57   61   59   57    58 #>  [2900,]   55   61   59   65   58   57   61   59   57    58 #>  [2901,]   56   62   62   68   60   60   63   61   59    60 #>  [2902,]   57   63   60   66   59   58   62   60   58    59 #>  [2903,]   56   62   61   67   60   60   63   61   59    60 #>  [2904,]   56   62   61   67   60   60   63   61   59    60 #>  [2905,]   57   63   60   66   59   58   62   60   58    59 #>  [2906,]   56   62   62   68   60   60   63   61   59    60 #>  [2907,]   56   62   61   67   60   60   63   61   59    60 #>  [2908,]   56   62   61   67   60   60   63   61   59    60 #>  [2909,]   57   63   60   66   59   58   62   60   58    59 #>  [2910,]   57   63   60   66   59   58   62   60   58    59 #>  [2911,]   56   62   62   68   60   60   63   61   59    60 #>  [2912,]   57   63   60   66   59   58   62   60   58    59 #>  [2913,]   57   63   60   66   59   58   62   60   58    59 #>  [2914,]   56   62   62   68   60   60   63   61   59    60 #>  [2915,]   56   62   62   68   60   59   63   61   59    60 #>  [2916,]   56   62   62   68   60   60   63   61   59    60 #>  [2917,]   57   63   60   66   59   58   62   60   58    59 #>  [2918,]   57   63   60   66   59   58   62   60   58    59 #>  [2919,]   56   62   62   68   60   60   63   61   59    60 #>  [2920,]   57   63   60   66   59   58   62   60   58    59 #>  [2921,]   57   63   60   66   59   58   62   60   58    59 #>  [2922,]   56   62   62   68   60   60   63   61   59    60 #>  [2923,]   57   63   60   66   59   58   62   60   58    59 #>  [2924,]   57   63   60   66   59   58   62   60   58    59 #>  [2925,]   56   62   61   67   60   60   63   61   59    60 #>  [2926,]   56   62   62   68   60   60   63   61   59    60 #>  [2927,]   57   63   60   66   59   58   62   60   58    59 #>  [2928,]   56   62   62   68   60   60   63   61   59    60 #>  [2929,]   57   63   60   66   59   58   62   60   58    59 #>  [2930,]   56   62   62   68   60   60   63   61   59    60 #>  [2931,]   57   63   60   66   59   58   62   60   58    59 #>  [2932,]   57   63   60   66   59   58   62   60   58    59 #>  [2933,]   57   63   60   66   59   58   62   60   58    59 #>  [2934,]   56   62   62   68   60   59   63   61   59    60 #>  [2935,]   56   62   62   68   60   60   63   61   59    60 #>  [2936,]   57   63   60   66   59   58   62   60   58    59 #>  [2937,]   56   62   62   68   60   59   63   61   59    60 #>  [2938,]   56   62   62   68   60   60   63   61   59    60 #>  [2939,]   56   62   62   68   60   60   63   61   59    60 #>  [2940,]   57   63   60   66   59   58   62   60   58    59 #>  [2941,]   56   62   62   68   60   60   63   61   59    60 #>  [2942,]   56   62   62   68   60   59   63   61   59    60 #>  [2943,]   56   62   62   68   60   59   63   61   59    60 #>  [2944,]   56   62   62   68   60   59   63   61   59    60 #>  [2945,]   56   62   62   68   60   60   63   61   59    60 #>  [2946,]   56   62   62   68   60   60   63   61   59    60 #>  [2947,]   56   62   62   68   60   60   63   61   59    60 #>  [2948,]   56   62   62   68   60   59   63   61   59    60 #>  [2949,]   56   62   62   68   60   60   63   61   59    60 #>  [2950,]   56   62   62   68   60   60   63   61   59    60 #>  [2951,]   56   62   62   68   60   60   63   61   59    60 #>  [2952,]   56   62   61   67   60   60   63   61   59    60 #>  [2953,]   57   63   60   66   59   58   62   60   58    59 #>  [2954,]   56   62   62   68   60   60   63   61   59    60 #>  [2955,]   56   62   62   68   60   60   63   61   59    60 #>  [2956,]   56   62   62   68   60   60   63   61   59    60 #>  [2957,]   56   62   61   67   60   60   63   61   59    60 #>  [2958,]   56   62   62   68   60   60   63   61   59    60 #>  [2959,]   56   62   61   67   60   60   63   61   59    60 #>  [2960,]   57   63   60   66   59   58   62   60   58    59 #>  [2961,]   57   63   60   66   59   58   62   60   58    59 #>  [2962,]   56   62   62   68   60   60   63   61   59    60 #>  [2963,]   57   63   60   66   59   58   62   60   58    59 #>  [2964,]   56   62   62   68   60   60   63   61   59    60 #>  [2965,]   56   62   62   68   60   60   63   61   59    60 #>  [2966,]   56   62   62   68   60   60   63   61   59    60 #>  [2967,]   56   62   62   68   60   60   63   61   59    60 #>  [2968,]   56   62   62   68   60   60   63   61   59    60 #>  [2969,]   56   62   62   68   60   60   63   61   59    60 #>  [2970,]   57   63   60   66   59   58   62   60   58    59 #>  [2971,]   56   62   62   68   60   60   63   61   59    60 #>  [2972,]   56   62   62   68   60   60   63   61   59    60 #>  [2973,]   56   62   62   68   60   60   63   61   59    60 #>  [2974,]   56   62   62   68   60   60   63   61   59    60 #>  [2975,]   57   63   60   66   59   58   62   60   58    59 #>  [2976,]   56   62   62   68   60   60   63   61   59    60 #>  [2977,]   56   62   62   68   60   60   63   61   59    60 #>  [2978,]   56   62   62   68   60   59   63   61   59    60 #>  [2979,]   56   62   62   68   60   59   63   61   59    60 #>  [2980,]   57   63   60   66   59   58   62   60   58    59 #>  [2981,]   57   63   60   66   59   58   62   60   58    59 #>  [2982,]   56   62   62   68   60   60   63   61   59    60 #>  [2983,]   57   63   60   66   59   58   62   60   58    59 #>  [2984,]   57   63   60   66   59   58   62   60   58    59 #>  [2985,]   56   62   62   68   60   60   63   61   59    60 #>  [2986,]   57   63   60   66   59   58   62   60   58    59 #>  [2987,]   56   62   62   68   60   60   63   61   59    60 #>  [2988,]   57   63   60   66   59   58   62   60   58    59 #>  [2989,]   56   62   62   68   60   60   63   61   59    60 #>  [2990,]   56   62   62   68   60   60   63   61   59    60 #>  [2991,]   56   62   62   68   60   60   63   61   59    60 #>  [2992,]   56   62   62   68   60   60   63   61   59    60 #>  [2993,]   56   62   62   68   60   60   63   61   59    60 #>  [2994,]   56   62   62   68   60   59   63   61   59    60 #>  [2995,]   56   62   62   68   60   59   63   61   59    60 #>  [2996,]   56   62   61   67   60   60   63   61   59    60 #>  [2997,]   56   62   61   67   60   60   63   61   59    60 #>  [2998,]   56   62   62   68   60   60   63   61   59    60 #>  [2999,]   56   62   62   68   60   60   63   61   59    60 #>  [3000,]   56   62   62   68   60   59   63   61   59    60 #>  [3001,]   59   65   63   70   62   62   65   63   61    62 #>  [3002,]   59   65   63   69   61   61   64   62   60    61 #>  [3003,]   58   64   63   69   61   61   64   62   60    61 #>  [3004,]   59   65   63   70   62   62   65   63   61    62 #>  [3005,]   59   65   63   69   61   61   64   62   60    61 #>  [3006,]   59   65   63   69   61   61   64   62   60    61 #>  [3007,]   59   65   63   70   62   62   65   63   61    62 #>  [3008,]   59   65   63   69   61   61   64   62   60    61 #>  [3009,]   59   65   63   70   62   62   65   63   61    62 #>  [3010,]   58   64   63   70   62   62   65   63   61    62 #>  [3011,]   58   64   63   69   61   61   64   62   60    61 #>  [3012,]   59   65   63   69   61   61   64   62   60    61 #>  [3013,]   59   65   63   70   62   62   65   63   61    62 #>  [3014,]   58   64   63   70   62   62   65   63   61    62 #>  [3015,]   59   65   63   69   61   61   64   62   60    61 #>  [3016,]   59   65   63   70   62   62   65   63   61    62 #>  [3017,]   59   65   63   69   61   61   64   62   60    61 #>  [3018,]   59   65   63   69   61   61   64   62   60    61 #>  [3019,]   59   65   63   69   61   61   64   62   60    61 #>  [3020,]   59   65   63   70   62   62   65   63   61    62 #>  [3021,]   58   64   63   69   61   61   64   62   60    61 #>  [3022,]   59   65   63   70   62   62   65   63   61    62 #>  [3023,]   59   65   63   69   61   61   64   62   60    61 #>  [3024,]   59   65   63   70   62   62   65   63   61    62 #>  [3025,]   59   65   63   70   62   62   65   63   61    62 #>  [3026,]   59   65   63   69   61   61   64   62   60    61 #>  [3027,]   59   65   63   69   61   61   64   62   60    61 #>  [3028,]   58   64   63   70   62   62   65   63   61    62 #>  [3029,]   59   65   63   69   61   61   64   62   60    61 #>  [3030,]   59   65   63   69   61   61   64   62   60    61 #>  [3031,]   58   64   63   69   61   61   64   62   60    61 #>  [3032,]   58   64   63   69   61   61   64   62   60    61 #>  [3033,]   59   65   63   69   61   61   64   62   60    61 #>  [3034,]   58   64   63   69   61   61   64   62   60    61 #>  [3035,]   59   65   63   69   61   61   64   62   60    61 #>  [3036,]   59   65   63   70   62   62   65   63   61    62 #>  [3037,]   59   65   63   69   61   61   64   62   60    61 #>  [3038,]   59   65   63   69   61   61   64   62   60    61 #>  [3039,]   59   65   63   70   62   62   65   63   61    62 #>  [3040,]   58   64   63   69   61   61   64   62   60    61 #>  [3041,]   59   65   63   69   61   61   64   62   60    61 #>  [3042,]   59   65   63   69   61   61   64   62   60    61 #>  [3043,]   59   65   63   69   61   61   64   62   60    61 #>  [3044,]   59   65   63   69   61   61   64   62   60    61 #>  [3045,]   59   65   63   70   62   62   65   63   61    62 #>  [3046,]   59   65   63   69   61   61   64   62   60    61 #>  [3047,]   59   65   63   69   61   61   64   62   60    61 #>  [3048,]   58   64   63   69   61   61   64   62   60    61 #>  [3049,]   59   65   63   70   62   62   65   63   61    62 #>  [3050,]   59   65   63   70   62   62   65   63   61    62 #>  [3051,]   59   65   63   69   61   61   64   62   60    61 #>  [3052,]   59   65   63   70   62   62   65   63   61    62 #>  [3053,]   59   65   63   70   62   62   65   63   61    62 #>  [3054,]   59   65   63   70   62   62   65   63   61    62 #>  [3055,]   59   65   63   70   62   62   65   63   61    62 #>  [3056,]   59   65   63   69   61   61   64   62   60    61 #>  [3057,]   59   65   63   70   62   62   65   63   61    62 #>  [3058,]   59   65   63   70   62   62   65   63   61    62 #>  [3059,]   59   65   63   70   62   62   65   63   61    62 #>  [3060,]   59   65   63   69   61   61   64   62   60    61 #>  [3061,]   59   65   63   69   61   61   64   62   60    61 #>  [3062,]   59   65   63   69   61   61   64   62   60    61 #>  [3063,]   59   65   63   69   61   61   64   62   60    61 #>  [3064,]   59   65   63   69   61   61   64   62   60    61 #>  [3065,]   59   65   63   69   61   61   64   62   60    61 #>  [3066,]   59   65   63   69   61   61   64   62   60    61 #>  [3067,]   59   65   63   70   62   62   65   63   61    62 #>  [3068,]   59   65   63   69   61   61   64   62   60    61 #>  [3069,]   59   65   63   69   61   61   64   62   60    61 #>  [3070,]   58   64   63   69   61   61   64   62   60    61 #>  [3071,]   59   65   63   69   61   61   64   62   60    61 #>  [3072,]   59   65   63   70   62   62   65   63   61    62 #>  [3073,]   59   65   63   70   62   62   65   63   61    62 #>  [3074,]   58   64   63   69   61   61   64   62   60    61 #>  [3075,]   59   65   63   69   61   61   64   62   60    61 #>  [3076,]   59   65   63   70   62   62   65   63   61    62 #>  [3077,]   59   65   63   69   61   61   64   62   60    61 #>  [3078,]   59   65   63   69   61   61   64   62   60    61 #>  [3079,]   59   65   63   69   61   61   64   62   60    61 #>  [3080,]   59   65   63   69   61   61   64   62   60    61 #>  [3081,]   59   65   63   69   61   61   64   62   60    61 #>  [3082,]   58   64   63   69   61   61   64   62   60    61 #>  [3083,]   59   65   63   69   61   61   64   62   60    61 #>  [3084,]   59   65   63   69   61   61   64   62   60    61 #>  [3085,]   59   65   63   70   62   62   65   63   61    62 #>  [3086,]   59   65   63   70   62   62   65   63   61    62 #>  [3087,]   59   65   63   70   62   62   65   63   61    62 #>  [3088,]   59   65   63   69   61   61   64   62   60    61 #>  [3089,]   59   65   63   69   61   61   64   62   60    61 #>  [3090,]   59   65   63   70   62   62   65   63   61    62 #>  [3091,]   59   65   63   70   62   62   65   63   61    62 #>  [3092,]   59   65   63   69   61   61   64   62   60    61 #>  [3093,]   59   65   63   69   61   61   64   62   60    61 #>  [3094,]   59   65   63   69   61   61   64   62   60    61 #>  [3095,]   59   65   63   69   61   61   64   62   60    61 #>  [3096,]   59   65   63   69   61   61   64   62   60    61 #>  [3097,]   59   65   63   69   61   61   64   62   60    61 #>  [3098,]   58   64   63   69   61   61   64   62   60    61 #>  [3099,]   59   65   63   69   61   61   64   62   60    61 #>  [3100,]   59   65   63   69   61   61   64   62   60    61 #>  [3101,]   61   67   65   72   64   64   67   65   62    63 #>  [3102,]   61   67   65   72   64   64   67   65   62    63 #>  [3103,]   60   66   64   71   63   63   66   64   63    64 #>  [3104,]   61   67   65   72   64   64   67   65   62    63 #>  [3105,]   61   67   65   72   64   64   67   65   62    63 #>  [3106,]   61   67   65   72   64   64   67   65   62    63 #>  [3107,]   61   67   65   72   64   64   67   65   62    63 #>  [3108,]   61   67   65   72   64   64   67   65   62    63 #>  [3109,]   61   67   65   72   64   64   67   65   62    63 #>  [3110,]   61   67   65   72   64   64   67   65   62    63 #>  [3111,]   60   66   64   71   63   63   66   64   64    65 #>  [3112,]   60   66   64   71   63   63   66   64   63    64 #>  [3113,]   61   67   65   72   64   64   67   65   62    63 #>  [3114,]   60   66   64   71   63   63   66   64   63    64 #>  [3115,]   61   67   65   72   64   64   67   65   62    63 #>  [3116,]   61   67   65   72   64   64   67   65   62    63 #>  [3117,]   61   67   65   72   64   64   67   65   62    63 #>  [3118,]   61   67   65   72   64   64   67   65   62    63 #>  [3119,]   60   66   64   71   63   63   66   64   64    65 #>  [3120,]   60   66   64   71   63   63   66   64   64    65 #>  [3121,]   61   67   65   72   64   64   67   65   62    63 #>  [3122,]   60   66   64   71   63   63   66   64   64    65 #>  [3123,]   61   67   65   72   64   64   67   65   62    63 #>  [3124,]   61   67   65   72   64   64   67   65   62    63 #>  [3125,]   61   67   65   72   64   64   67   65   62    63 #>  [3126,]   60   66   64   71   63   63   66   64   63    64 #>  [3127,]   61   67   65   72   64   64   67   65   62    63 #>  [3128,]   61   67   65   72   64   64   67   65   62    63 #>  [3129,]   60   66   64   71   63   63   66   64   64    65 #>  [3130,]   61   67   65   72   64   64   67   65   62    63 #>  [3131,]   61   67   65   72   64   64   67   65   62    63 #>  [3132,]   60   66   64   71   63   63   66   64   63    64 #>  [3133,]   61   67   65   72   64   64   67   65   62    63 #>  [3134,]   61   67   65   72   64   64   67   65   62    63 #>  [3135,]   61   67   65   72   64   64   67   65   62    63 #>  [3136,]   60   66   64   71   63   63   66   64   64    65 #>  [3137,]   61   67   65   72   64   64   67   65   62    63 #>  [3138,]   61   67   65   72   64   64   67   65   62    63 #>  [3139,]   61   67   65   72   64   64   67   65   62    63 #>  [3140,]   60   66   64   71   63   63   66   64   64    65 #>  [3141,]   60   66   64   71   63   63   66   64   64    65 #>  [3142,]   60   66   64   71   63   63   66   64   64    65 #>  [3143,]   61   67   65   72   64   64   67   65   62    63 #>  [3144,]   61   67   65   72   64   64   67   65   62    63 #>  [3145,]   61   67   65   72   64   64   67   65   62    63 #>  [3146,]   61   67   65   72   64   64   67   65   62    63 #>  [3147,]   61   67   65   72   64   64   67   65   62    63 #>  [3148,]   60   66   64   71   63   63   66   64   64    65 #>  [3149,]   61   67   65   72   64   64   67   65   62    63 #>  [3150,]   61   67   65   72   64   64   67   65   62    63 #>  [3151,]   60   66   64   71   63   63   66   64   64    65 #>  [3152,]   61   67   65   72   64   64   67   65   62    63 #>  [3153,]   61   67   65   72   64   64   67   65   62    63 #>  [3154,]   60   66   64   71   63   63   66   64   64    65 #>  [3155,]   61   67   65   72   64   64   67   65   62    63 #>  [3156,]   61   67   65   72   64   64   67   65   62    63 #>  [3157,]   61   67   65   72   64   64   67   65   62    63 #>  [3158,]   61   67   65   72   64   64   67   65   62    63 #>  [3159,]   61   67   65   72   64   64   67   65   62    63 #>  [3160,]   60   66   64   71   63   63   66   64   64    65 #>  [3161,]   61   67   65   72   64   64   67   65   62    63 #>  [3162,]   60   66   64   71   63   63   66   64   64    65 #>  [3163,]   60   66   64   71   63   63   66   64   64    65 #>  [3164,]   61   67   65   72   64   64   67   65   62    63 #>  [3165,]   61   67   65   72   64   64   67   65   62    63 #>  [3166,]   60   66   64   71   63   63   66   64   64    65 #>  [3167,]   61   67   65   72   64   64   67   65   62    63 #>  [3168,]   60   66   64   71   63   63   66   64   64    65 #>  [3169,]   60   66   64   71   63   63   66   64   63    64 #>  [3170,]   61   67   65   72   64   64   67   65   62    63 #>  [3171,]   61   67   65   72   64   64   67   65   62    63 #>  [3172,]   61   67   65   72   64   64   67   65   62    63 #>  [3173,]   61   67   65   72   64   64   67   65   62    63 #>  [3174,]   61   67   65   72   64   64   67   65   62    63 #>  [3175,]   61   67   65   72   64   64   67   65   62    63 #>  [3176,]   61   67   65   72   64   64   67   65   62    63 #>  [3177,]   61   67   65   72   64   64   67   65   62    63 #>  [3178,]   61   67   65   72   64   64   67   65   62    63 #>  [3179,]   61   67   65   72   64   64   67   65   62    63 #>  [3180,]   60   66   64   71   63   63   66   64   63    64 #>  [3181,]   60   66   64   71   63   63   66   64   64    65 #>  [3182,]   61   67   65   72   64   64   67   65   62    63 #>  [3183,]   60   66   64   71   63   63   66   64   64    65 #>  [3184,]   61   67   65   72   64   64   67   65   62    63 #>  [3185,]   61   67   65   72   64   64   67   65   62    63 #>  [3186,]   61   67   65   72   64   64   67   65   62    63 #>  [3187,]   61   67   65   72   64   64   67   65   62    63 #>  [3188,]   61   67   65   72   64   64   67   65   62    63 #>  [3189,]   60   66   64   71   63   63   66   64   64    65 #>  [3190,]   61   67   65   72   64   64   67   65   62    63 #>  [3191,]   60   66   64   71   63   63   66   64   64    65 #>  [3192,]   61   67   65   72   64   64   67   65   62    63 #>  [3193,]   61   67   65   72   64   64   67   65   62    63 #>  [3194,]   61   67   65   72   64   64   67   65   62    63 #>  [3195,]   61   67   65   72   64   64   67   65   62    63 #>  [3196,]   61   67   65   72   64   64   67   65   62    63 #>  [3197,]   61   67   65   72   64   64   67   65   62    63 #>  [3198,]   61   67   65   72   64   64   67   65   62    63 #>  [3199,]   61   67   65   72   64   64   67   65   62    63 #>  [3200,]   61   67   65   72   64   64   67   65   62    63 #>  [3201,]   62   68   66   73   66   66   69   66   65    66 #>  [3202,]   62   68   66   73   66   66   69   66   65    66 #>  [3203,]   63   69   67   74   65   65   68   68   67    68 #>  [3204,]   62   68   66   73   67   67   70   67   66    67 #>  [3205,]   62   68   66   73   66   66   69   66   65    66 #>  [3206,]   63   69   67   74   65   65   68   69   67    68 #>  [3207,]   62   68   66   73   66   66   69   66   65    66 #>  [3208,]   62   68   66   73   66   66   69   66   65    66 #>  [3209,]   62   68   66   73   67   67   70   67   66    67 #>  [3210,]   62   68   66   73   67   67   70   67   66    67 #>  [3211,]   62   68   66   73   67   67   70   67   66    67 #>  [3212,]   63   69   67   74   65   65   68   68   67    68 #>  [3213,]   62   68   66   73   66   66   69   66   65    66 #>  [3214,]   62   68   66   73   67   67   70   67   66    67 #>  [3215,]   62   68   66   73   67   67   70   67   66    67 #>  [3216,]   62   68   66   73   66   66   69   66   65    66 #>  [3217,]   62   68   66   73   66   66   69   66   65    66 #>  [3218,]   62   68   66   73   67   67   70   67   66    67 #>  [3219,]   63   69   67   74   65   65   68   69   67    68 #>  [3220,]   63   69   67   74   65   65   68   69   67    68 #>  [3221,]   62   68   66   73   67   67   70   67   66    67 #>  [3222,]   62   68   66   73   66   66   69   66   65    66 #>  [3223,]   62   68   66   73   66   66   69   66   65    66 #>  [3224,]   62   68   66   73   66   66   69   66   65    66 #>  [3225,]   63   69   67   74   65   65   68   68   67    68 #>  [3226,]   62   68   66   73   67   67   70   67   66    67 #>  [3227,]   62   68   66   73   67   67   70   67   66    67 #>  [3228,]   63   69   67   74   65   65   68   69   67    68 #>  [3229,]   62   68   66   73   66   66   69   66   65    66 #>  [3230,]   62   68   66   73   67   67   70   67   66    67 #>  [3231,]   62   68   66   73   67   67   70   67   66    67 #>  [3232,]   62   68   66   73   67   67   70   67   66    67 #>  [3233,]   63   69   67   74   65   65   68   69   67    68 #>  [3234,]   63   69   67   74   65   65   68   68   67    68 #>  [3235,]   62   68   66   73   66   66   69   66   65    66 #>  [3236,]   62   68   66   73   67   67   70   67   66    67 #>  [3237,]   62   68   66   73   66   66   69   66   65    66 #>  [3238,]   62   68   66   73   67   67   70   67   66    67 #>  [3239,]   62   68   66   73   66   66   69   66   65    66 #>  [3240,]   62   68   66   73   66   66   69   66   65    66 #>  [3241,]   62   68   66   73   67   67   70   67   66    67 #>  [3242,]   62   68   66   73   67   67   70   67   66    67 #>  [3243,]   62   68   66   73   66   66   69   66   65    66 #>  [3244,]   62   68   66   73   66   66   69   66   65    66 #>  [3245,]   62   68   66   73   66   66   69   66   65    66 #>  [3246,]   62   68   66   73   66   66   69   66   65    66 #>  [3247,]   62   68   66   73   66   66   69   66   65    66 #>  [3248,]   62   68   66   73   67   67   70   67   66    67 #>  [3249,]   62   68   66   73   66   66   69   66   65    66 #>  [3250,]   62   68   66   73   66   66   69   66   65    66 #>  [3251,]   62   68   66   73   66   66   69   66   65    66 #>  [3252,]   62   68   66   73   66   66   69   66   65    66 #>  [3253,]   62   68   66   73   66   66   69   66   65    66 #>  [3254,]   62   68   66   73   66   66   69   66   65    66 #>  [3255,]   62   68   66   73   66   66   69   66   65    66 #>  [3256,]   62   68   66   73   66   66   69   66   65    66 #>  [3257,]   62   68   66   73   66   66   69   66   65    66 #>  [3258,]   62   68   66   73   67   67   70   67   66    67 #>  [3259,]   62   68   66   73   66   66   69   66   65    66 #>  [3260,]   63   69   67   74   65   65   68   68   67    68 #>  [3261,]   62   68   66   73   67   67   70   67   66    67 #>  [3262,]   62   68   66   73   67   67   70   67   66    67 #>  [3263,]   62   68   66   73   66   66   69   66   65    66 #>  [3264,]   62   68   66   73   66   66   69   66   65    66 #>  [3265,]   63   69   67   74   65   65   68   69   67    68 #>  [3266,]   62   68   66   73   66   66   69   66   65    66 #>  [3267,]   62   68   66   73   66   66   69   66   65    66 #>  [3268,]   62   68   66   73   67   67   70   67   66    67 #>  [3269,]   62   68   66   73   67   67   70   67   66    67 #>  [3270,]   63   69   67   74   65   65   68   69   67    68 #>  [3271,]   62   68   66   73   66   66   69   66   65    66 #>  [3272,]   62   68   66   73   66   66   69   66   65    66 #>  [3273,]   63   69   67   74   65   65   68   69   67    68 #>  [3274,]   62   68   66   73   67   67   70   67   66    67 #>  [3275,]   62   68   66   73   67   67   70   67   66    67 #>  [3276,]   62   68   66   73   66   66   69   66   65    66 #>  [3277,]   62   68   66   73   66   66   69   66   65    66 #>  [3278,]   62   68   66   73   66   66   69   66   65    66 #>  [3279,]   62   68   66   73   66   66   69   66   65    66 #>  [3280,]   62   68   66   73   66   66   69   66   65    66 #>  [3281,]   62   68   66   73   66   66   69   66   65    66 #>  [3282,]   62   68   66   73   67   67   70   67   66    67 #>  [3283,]   62   68   66   73   66   66   69   66   65    66 #>  [3284,]   62   68   66   73   66   66   69   66   65    66 #>  [3285,]   62   68   66   73   67   67   70   67   66    67 #>  [3286,]   62   68   66   73   66   66   69   66   65    66 #>  [3287,]   62   68   66   73   66   66   69   66   65    66 #>  [3288,]   62   68   66   73   66   66   69   66   65    66 #>  [3289,]   62   68   66   73   66   66   69   66   65    66 #>  [3290,]   62   68   66   73   66   66   69   66   65    66 #>  [3291,]   62   68   66   73   66   66   69   66   65    66 #>  [3292,]   62   68   66   73   67   67   70   67   66    67 #>  [3293,]   63   69   67   74   65   65   68   69   67    68 #>  [3294,]   62   68   66   73   66   66   69   66   65    66 #>  [3295,]   62   68   66   73   66   66   69   66   65    66 #>  [3296,]   62   68   66   73   67   67   70   67   66    67 #>  [3297,]   63   69   67   74   65   65   68   68   67    68 #>  [3298,]   63   69   67   74   65   65   68   68   67    68 #>  [3299,]   62   68   66   73   67   67   70   67   66    67 #>  [3300,]   62   68   66   73   66   66   69   66   65    66 #>  [3301,]   65   71   69   76   69   69   72   71   69    70 #>  [3302,]   65   71   69   76   69   69   72   71   69    70 #>  [3303,]   64   70   68   75   68   68   71   70   68    69 #>  [3304,]   64   70   68   75   68   68   71   70   68    69 #>  [3305,]   65   71   69   76   69   69   72   71   69    70 #>  [3306,]   65   71   69   76   69   69   72   71   69    70 #>  [3307,]   64   70   68   75   68   68   71   70   68    69 #>  [3308,]   64   70   68   75   68   68   71   70   68    69 #>  [3309,]   65   71   69   76   69   69   72   71   69    70 #>  [3310,]   65   71   69   76   69   69   72   71   69    70 #>  [3311,]   65   71   69   76   69   69   72   71   69    70 #>  [3312,]   64   70   68   75   68   68   71   70   68    69 #>  [3313,]   65   71   69   76   69   69   72   71   69    70 #>  [3314,]   65   71   69   76   69   69   72   71   69    70 #>  [3315,]   65   71   69   76   69   69   72   71   69    70 #>  [3316,]   65   71   69   76   69   69   72   71   69    70 #>  [3317,]   65   71   69   76   69   69   72   71   69    70 #>  [3318,]   65   71   69   76   69   69   72   71   69    70 #>  [3319,]   65   71   69   76   69   69   72   71   69    70 #>  [3320,]   65   71   69   76   69   69   72   71   69    70 #>  [3321,]   65   71   69   76   69   69   72   71   69    70 #>  [3322,]   65   71   69   76   69   69   72   71   69    70 #>  [3323,]   65   71   69   76   69   69   72   71   69    70 #>  [3324,]   65   71   69   76   69   69   72   71   69    70 #>  [3325,]   64   70   68   75   68   68   71   70   68    69 #>  [3326,]   65   71   69   76   69   69   72   71   69    70 #>  [3327,]   65   71   69   76   69   69   72   71   69    70 #>  [3328,]   65   71   69   76   69   69   72   71   69    70 #>  [3329,]   65   71   69   76   69   69   72   71   69    70 #>  [3330,]   65   71   69   76   69   69   72   71   69    70 #>  [3331,]   64   70   68   75   68   68   71   70   68    69 #>  [3332,]   65   71   69   76   69   69   72   71   69    70 #>  [3333,]   65   71   69   76   69   69   72   71   69    70 #>  [3334,]   65   71   69   76   69   69   72   71   69    70 #>  [3335,]   65   71   69   76   69   69   72   71   69    70 #>  [3336,]   65   71   69   76   69   69   72   71   69    70 #>  [3337,]   65   71   69   76   69   69   72   71   69    70 #>  [3338,]   65   71   69   76   69   69   72   71   69    70 #>  [3339,]   65   71   69   76   69   69   72   71   69    70 #>  [3340,]   65   71   69   76   69   69   72   71   69    70 #>  [3341,]   65   71   69   76   69   69   72   71   69    70 #>  [3342,]   65   71   69   76   69   69   72   71   69    70 #>  [3343,]   65   71   69   76   69   69   72   71   69    70 #>  [3344,]   65   71   69   76   69   69   72   71   69    70 #>  [3345,]   65   71   69   76   69   69   72   71   69    70 #>  [3346,]   65   71   69   76   69   69   72   71   69    70 #>  [3347,]   65   71   69   76   69   69   72   71   69    70 #>  [3348,]   65   71   69   76   69   69   72   71   69    70 #>  [3349,]   65   71   69   76   69   69   72   71   69    70 #>  [3350,]   65   71   69   76   69   69   72   71   69    70 #>  [3351,]   65   71   69   76   69   69   72   71   69    70 #>  [3352,]   64   70   68   75   68   68   71   70   68    69 #>  [3353,]   65   71   69   76   69   69   72   71   69    70 #>  [3354,]   65   71   69   76   69   69   72   71   69    70 #>  [3355,]   65   71   69   76   69   69   72   71   69    70 #>  [3356,]   65   71   69   76   69   69   72   71   69    70 #>  [3357,]   64   70   68   75   68   68   71   70   68    69 #>  [3358,]   65   71   69   76   69   69   72   71   69    70 #>  [3359,]   64   70   68   75   68   68   71   70   68    69 #>  [3360,]   64   70   68   75   68   68   71   70   68    69 #>  [3361,]   65   71   69   76   69   69   72   71   69    70 #>  [3362,]   65   71   69   76   69   69   72   71   69    70 #>  [3363,]   65   71   69   76   69   69   72   71   69    70 #>  [3364,]   65   71   69   76   69   69   72   71   69    70 #>  [3365,]   65   71   69   76   69   69   72   71   69    70 #>  [3366,]   65   71   69   76   69   69   72   71   69    70 #>  [3367,]   65   71   69   76   69   69   72   71   69    70 #>  [3368,]   64   70   68   75   68   68   71   70   68    69 #>  [3369,]   65   71   69   76   69   69   72   71   69    70 #>  [3370,]   65   71   69   76   69   69   72   71   69    70 #>  [3371,]   65   71   69   76   69   69   72   71   69    70 #>  [3372,]   65   71   69   76   69   69   72   71   69    70 #>  [3373,]   65   71   69   76   69   69   72   71   69    70 #>  [3374,]   65   71   69   76   69   69   72   71   69    70 #>  [3375,]   65   71   69   76   69   69   72   71   69    70 #>  [3376,]   65   71   69   76   69   69   72   71   69    70 #>  [3377,]   65   71   69   76   69   69   72   71   69    70 #>  [3378,]   65   71   69   76   69   69   72   71   69    70 #>  [3379,]   65   71   69   76   69   69   72   71   69    70 #>  [3380,]   65   71   69   76   69   69   72   71   69    70 #>  [3381,]   65   71   69   76   69   69   72   71   69    70 #>  [3382,]   65   71   69   76   69   69   72   71   69    70 #>  [3383,]   65   71   69   76   69   69   72   71   69    70 #>  [3384,]   65   71   69   76   69   69   72   71   69    70 #>  [3385,]   65   71   69   76   69   69   72   71   69    70 #>  [3386,]   64   70   68   75   68   68   71   70   68    69 #>  [3387,]   65   71   69   76   69   69   72   71   69    70 #>  [3388,]   65   71   69   76   69   69   72   71   69    70 #>  [3389,]   65   71   69   76   69   69   72   71   69    70 #>  [3390,]   65   71   69   76   69   69   72   71   69    70 #>  [3391,]   65   71   69   76   69   69   72   71   69    70 #>  [3392,]   65   71   69   76   69   69   72   71   69    70 #>  [3393,]   65   71   69   76   69   69   72   71   69    70 #>  [3394,]   65   71   69   76   69   69   72   71   69    70 #>  [3395,]   65   71   69   76   69   69   72   71   69    70 #>  [3396,]   64   70   68   75   68   68   71   70   68    69 #>  [3397,]   64   70   68   75   68   68   71   70   68    69 #>  [3398,]   65   71   69   76   69   69   72   71   69    70 #>  [3399,]   65   71   69   76   69   69   72   71   69    70 #>  [3400,]   65   71   69   76   69   69   72   71   69    70 #>  [3401,]   67   73   71   78   71   71   74   73   71    72 #>  [3402,]   67   73   71   78   71   71   74   73   71    72 #>  [3403,]   66   72   70   77   70   70   73   72   70    71 #>  [3404,]   66   72   70   77   70   70   73   72   70    71 #>  [3405,]   66   72   70   77   70   70   73   72   70    71 #>  [3406,]   66   72   70   77   70   70   73   72   70    71 #>  [3407,]   66   72   70   77   70   70   73   72   70    71 #>  [3408,]   67   73   71   78   71   71   74   73   71    72 #>  [3409,]   66   72   70   77   70   70   73   72   70    71 #>  [3410,]   66   72   70   77   70   70   73   72   70    71 #>  [3411,]   66   72   70   77   70   70   73   72   70    71 #>  [3412,]   67   73   71   78   71   71   74   73   71    72 #>  [3413,]   67   73   71   78   71   71   74   73   71    72 #>  [3414,]   66   72   70   77   70   70   73   72   70    71 #>  [3415,]   67   73   71   78   71   71   74   73   71    72 #>  [3416,]   67   73   71   78   71   71   74   73   71    72 #>  [3417,]   66   72   70   77   70   70   73   72   70    71 #>  [3418,]   66   72   70   77   70   70   73   72   70    71 #>  [3419,]   67   73   71   78   71   71   74   73   71    72 #>  [3420,]   67   73   71   78   71   71   74   73   71    72 #>  [3421,]   66   72   70   77   70   70   73   72   70    71 #>  [3422,]   67   73   71   78   71   71   74   73   71    72 #>  [3423,]   67   73   71   78   71   71   74   73   71    72 #>  [3424,]   66   72   70   77   70   70   73   72   70    71 #>  [3425,]   66   72   70   77   70   70   73   72   70    71 #>  [3426,]   67   73   71   78   71   71   74   73   71    72 #>  [3427,]   67   73   71   78   71   71   74   73   71    72 #>  [3428,]   66   72   70   77   70   70   73   72   70    71 #>  [3429,]   67   73   71   78   71   71   74   73   71    72 #>  [3430,]   67   73   71   78   71   71   74   73   71    72 #>  [3431,]   66   72   70   77   70   70   73   72   70    71 #>  [3432,]   66   72   70   77   70   70   73   72   70    71 #>  [3433,]   67   73   71   78   71   71   74   73   71    72 #>  [3434,]   66   72   70   77   70   70   73   72   70    71 #>  [3435,]   66   72   70   77   70   70   73   72   70    71 #>  [3436,]   67   73   71   78   71   71   74   73   71    72 #>  [3437,]   67   73   71   78   71   71   74   73   71    72 #>  [3438,]   67   73   71   78   71   71   74   73   71    72 #>  [3439,]   66   72   70   77   70   70   73   72   70    71 #>  [3440,]   66   72   70   77   70   70   73   72   70    71 #>  [3441,]   67   73   71   78   71   71   74   73   71    72 #>  [3442,]   66   72   70   77   70   70   73   72   70    71 #>  [3443,]   67   73   71   78   71   71   74   73   71    72 #>  [3444,]   67   73   71   78   71   71   74   73   71    72 #>  [3445,]   67   73   71   78   71   71   74   73   71    72 #>  [3446,]   67   73   71   78   71   71   74   73   71    72 #>  [3447,]   66   72   70   77   70   70   73   72   70    71 #>  [3448,]   66   72   70   77   70   70   73   72   70    71 #>  [3449,]   67   73   71   78   71   71   74   73   71    72 #>  [3450,]   67   73   71   78   71   71   74   73   71    72 #>  [3451,]   67   73   71   78   71   71   74   73   71    72 #>  [3452,]   66   72   70   77   70   70   73   72   70    71 #>  [3453,]   67   73   71   78   71   71   74   73   71    72 #>  [3454,]   66   72   70   77   70   70   73   72   70    71 #>  [3455,]   67   73   71   78   71   71   74   73   71    72 #>  [3456,]   67   73   71   78   71   71   74   73   71    72 #>  [3457,]   66   72   70   77   70   70   73   72   70    71 #>  [3458,]   67   73   71   78   71   71   74   73   71    72 #>  [3459,]   67   73   71   78   71   71   74   73   71    72 #>  [3460,]   67   73   71   78   71   71   74   73   71    72 #>  [3461,]   67   73   71   78   71   71   74   73   71    72 #>  [3462,]   66   72   70   77   70   70   73   72   70    71 #>  [3463,]   67   73   71   78   71   71   74   73   71    72 #>  [3464,]   67   73   71   78   71   71   74   73   71    72 #>  [3465,]   66   72   70   77   70   70   73   72   70    71 #>  [3466,]   67   73   71   78   71   71   74   73   71    72 #>  [3467,]   66   72   70   77   70   70   73   72   70    71 #>  [3468,]   67   73   71   78   71   71   74   73   71    72 #>  [3469,]   67   73   71   78   71   71   74   73   71    72 #>  [3470,]   66   72   70   77   70   70   73   72   70    71 #>  [3471,]   67   73   71   78   71   71   74   73   71    72 #>  [3472,]   66   72   70   77   70   70   73   72   70    71 #>  [3473,]   66   72   70   77   70   70   73   72   70    71 #>  [3474,]   66   72   70   77   70   70   73   72   70    71 #>  [3475,]   67   73   71   78   71   71   74   73   71    72 #>  [3476,]   66   72   70   77   70   70   73   72   70    71 #>  [3477,]   67   73   71   78   71   71   74   73   71    72 #>  [3478,]   67   73   71   78   71   71   74   73   71    72 #>  [3479,]   66   72   70   77   70   70   73   72   70    71 #>  [3480,]   67   73   71   78   71   71   74   73   71    72 #>  [3481,]   67   73   71   78   71   71   74   73   71    72 #>  [3482,]   66   72   70   77   70   70   73   72   70    71 #>  [3483,]   67   73   71   78   71   71   74   73   71    72 #>  [3484,]   67   73   71   78   71   71   74   73   71    72 #>  [3485,]   67   73   71   78   71   71   74   73   71    72 #>  [3486,]   66   72   70   77   70   70   73   72   70    71 #>  [3487,]   67   73   71   78   71   71   74   73   71    72 #>  [3488,]   66   72   70   77   70   70   73   72   70    71 #>  [3489,]   66   72   70   77   70   70   73   72   70    71 #>  [3490,]   67   73   71   78   71   71   74   73   71    72 #>  [3491,]   66   72   70   77   70   70   73   72   70    71 #>  [3492,]   66   72   70   77   70   70   73   72   70    71 #>  [3493,]   67   73   71   78   71   71   74   73   71    72 #>  [3494,]   66   72   70   77   70   70   73   72   70    71 #>  [3495,]   67   73   71   78   71   71   74   73   71    72 #>  [3496,]   67   73   71   78   71   71   74   73   71    72 #>  [3497,]   67   73   71   78   71   71   74   73   71    72 #>  [3498,]   66   72   70   77   70   70   73   72   70    71 #>  [3499,]   66   72   70   77   70   70   73   72   70    71 #>  [3500,]   67   73   71   78   71   71   74   73   71    72 #>  [3501,]   69   75   74   80   73   73   76   75   73    74 #>  [3502,]   69   75   74   80   73   73   76   75   73    74 #>  [3503,]   68   74   72   79   72   72   75   74   72    73 #>  [3504,]   69   75   73   80   73   73   76   75   73    74 #>  [3505,]   69   75   74   80   73   73   76   75   73    74 #>  [3506,]   69   75   74   80   73   73   76   75   73    74 #>  [3507,]   69   75   73   80   73   73   76   75   73    74 #>  [3508,]   69   75   73   80   73   73   76   75   73    74 #>  [3509,]   69   75   74   80   73   73   76   75   73    74 #>  [3510,]   68   74   72   79   72   72   75   74   72    73 #>  [3511,]   68   74   72   79   72   72   75   74   72    73 #>  [3512,]   69   75   73   80   73   73   76   75   73    74 #>  [3513,]   69   75   74   80   73   73   76   75   73    74 #>  [3514,]   68   74   72   79   72   72   75   74   72    73 #>  [3515,]   69   75   74   80   73   73   76   75   73    74 #>  [3516,]   69   75   73   80   73   73   76   75   73    74 #>  [3517,]   69   75   74   80   73   73   76   75   73    74 #>  [3518,]   69   75   74   80   73   73   76   75   73    74 #>  [3519,]   69   75   74   80   73   73   76   75   73    74 #>  [3520,]   69   75   74   80   73   73   76   75   73    74 #>  [3521,]   69   75   74   80   73   73   76   75   73    74 #>  [3522,]   69   75   74   80   73   73   76   75   73    74 #>  [3523,]   69   75   73   80   73   73   76   75   73    74 #>  [3524,]   69   75   74   80   73   73   76   75   73    74 #>  [3525,]   69   75   73   80   73   73   76   75   73    74 #>  [3526,]   69   75   74   80   73   73   76   75   73    74 #>  [3527,]   69   75   74   80   73   73   76   75   73    74 #>  [3528,]   69   75   74   80   73   73   76   75   73    74 #>  [3529,]   69   75   74   80   73   73   76   75   73    74 #>  [3530,]   69   75   74   80   73   73   76   75   73    74 #>  [3531,]   68   74   72   79   72   72   75   74   72    73 #>  [3532,]   68   74   72   79   72   72   75   74   72    73 #>  [3533,]   69   75   74   80   73   73   76   75   73    74 #>  [3534,]   69   75   74   80   73   73   76   75   73    74 #>  [3535,]   69   75   74   80   73   73   76   75   73    74 #>  [3536,]   69   75   74   80   73   73   76   75   73    74 #>  [3537,]   69   75   73   80   73   73   76   75   73    74 #>  [3538,]   69   75   74   80   73   73   76   75   73    74 #>  [3539,]   69   75   74   80   73   73   76   75   73    74 #>  [3540,]   68   74   72   79   72   72   75   74   72    73 #>  [3541,]   69   75   74   80   73   73   76   75   73    74 #>  [3542,]   69   75   74   80   73   73   76   75   73    74 #>  [3543,]   69   75   74   80   73   73   76   75   73    74 #>  [3544,]   69   75   73   80   73   73   76   75   73    74 #>  [3545,]   69   75   74   80   73   73   76   75   73    74 #>  [3546,]   69   75   73   80   73   73   76   75   73    74 #>  [3547,]   69   75   73   80   73   73   76   75   73    74 #>  [3548,]   68   74   72   79   72   72   75   74   72    73 #>  [3549,]   69   75   74   80   73   73   76   75   73    74 #>  [3550,]   69   75   74   80   73   73   76   75   73    74 #>  [3551,]   69   75   74   80   73   73   76   75   73    74 #>  [3552,]   69   75   73   80   73   73   76   75   73    74 #>  [3553,]   69   75   74   80   73   73   76   75   73    74 #>  [3554,]   69   75   74   80   73   73   76   75   73    74 #>  [3555,]   69   75   73   80   73   73   76   75   73    74 #>  [3556,]   69   75   74   80   73   73   76   75   73    74 #>  [3557,]   69   75   73   80   73   73   76   75   73    74 #>  [3558,]   69   75   74   80   73   73   76   75   73    74 #>  [3559,]   69   75   73   80   73   73   76   75   73    74 #>  [3560,]   69   75   73   80   73   73   76   75   73    74 #>  [3561,]   69   75   74   80   73   73   76   75   73    74 #>  [3562,]   69   75   74   80   73   73   76   75   73    74 #>  [3563,]   69   75   74   80   73   73   76   75   73    74 #>  [3564,]   69   75   74   80   73   73   76   75   73    74 #>  [3565,]   69   75   74   80   73   73   76   75   73    74 #>  [3566,]   69   75   74   80   73   73   76   75   73    74 #>  [3567,]   69   75   73   80   73   73   76   75   73    74 #>  [3568,]   69   75   73   80   73   73   76   75   73    74 #>  [3569,]   69   75   74   80   73   73   76   75   73    74 #>  [3570,]   68   74   72   79   72   72   75   74   72    73 #>  [3571,]   69   75   74   80   73   73   76   75   73    74 #>  [3572,]   69   75   73   80   73   73   76   75   73    74 #>  [3573,]   69   75   74   80   73   73   76   75   73    74 #>  [3574,]   68   74   72   79   72   72   75   74   72    73 #>  [3575,]   69   75   73   80   73   73   76   75   73    74 #>  [3576,]   69   75   73   80   73   73   76   75   73    74 #>  [3577,]   69   75   74   80   73   73   76   75   73    74 #>  [3578,]   69   75   73   80   73   73   76   75   73    74 #>  [3579,]   69   75   74   80   73   73   76   75   73    74 #>  [3580,]   69   75   73   80   73   73   76   75   73    74 #>  [3581,]   69   75   74   80   73   73   76   75   73    74 #>  [3582,]   68   74   72   79   72   72   75   74   72    73 #>  [3583,]   69   75   74   80   73   73   76   75   73    74 #>  [3584,]   69   75   74   80   73   73   76   75   73    74 #>  [3585,]   69   75   74   80   73   73   76   75   73    74 #>  [3586,]   69   75   73   80   73   73   76   75   73    74 #>  [3587,]   69   75   74   80   73   73   76   75   73    74 #>  [3588,]   69   75   74   80   73   73   76   75   73    74 #>  [3589,]   69   75   74   80   73   73   76   75   73    74 #>  [3590,]   69   75   74   80   73   73   76   75   73    74 #>  [3591,]   69   75   74   80   73   73   76   75   73    74 #>  [3592,]   69   75   73   80   73   73   76   75   73    74 #>  [3593,]   69   75   74   80   73   73   76   75   73    74 #>  [3594,]   69   75   74   80   73   73   76   75   73    74 #>  [3595,]   69   75   73   80   73   73   76   75   73    74 #>  [3596,]   69   75   73   80   73   73   76   75   73    74 #>  [3597,]   69   75   73   80   73   73   76   75   73    74 #>  [3598,]   68   74   72   79   72   72   75   74   72    73 #>  [3599,]   69   75   74   80   73   73   76   75   73    74 #>  [3600,]   69   75   74   80   73   73   76   75   73    74 #>  [3601,]   71   77   76   82   75   75   78   77   75    75 #>  [3602,]   71   78   76   82   75   75   78   77   75    75 #>  [3603,]   70   76   75   81   74   74   77   76   74    76 #>  [3604,]   71   77   76   82   75   75   78   77   75    75 #>  [3605,]   71   78   76   82   75   75   78   77   75    75 #>  [3606,]   71   78   76   82   75   75   78   77   75    75 #>  [3607,]   71   78   76   82   75   75   78   77   75    75 #>  [3608,]   71   77   76   82   75   75   78   77   75    75 #>  [3609,]   71   77   76   82   75   75   78   77   75    75 #>  [3610,]   71   78   76   82   75   75   78   77   75    75 #>  [3611,]   71   77   76   82   75   75   78   77   75    75 #>  [3612,]   70   76   75   81   74   74   77   76   74    77 #>  [3613,]   71   77   76   82   75   75   78   77   75    75 #>  [3614,]   70   76   75   81   74   74   77   76   74    77 #>  [3615,]   71   77   76   82   75   75   78   77   75    75 #>  [3616,]   71   78   76   82   75   75   78   77   75    75 #>  [3617,]   71   77   76   82   75   75   78   77   75    75 #>  [3618,]   71   78   76   82   75   75   78   77   75    75 #>  [3619,]   71   78   76   82   75   75   78   77   75    75 #>  [3620,]   71   78   76   82   75   75   78   77   75    75 #>  [3621,]   71   77   76   82   75   75   78   77   75    75 #>  [3622,]   71   77   76   82   75   75   78   77   75    75 #>  [3623,]   71   78   76   82   75   75   78   77   75    75 #>  [3624,]   71   78   76   82   75   75   78   77   75    75 #>  [3625,]   71   78   76   82   75   75   78   77   75    75 #>  [3626,]   70   76   75   81   74   74   77   76   74    77 #>  [3627,]   71   77   76   82   75   75   78   77   75    75 #>  [3628,]   71   78   76   82   75   75   78   77   75    75 #>  [3629,]   71   78   76   82   75   75   78   77   75    75 #>  [3630,]   71   77   76   82   75   75   78   77   75    75 #>  [3631,]   71   78   76   82   75   75   78   77   75    75 #>  [3632,]   70   76   75   81   74   74   77   76   74    77 #>  [3633,]   71   78   76   82   75   75   78   77   75    75 #>  [3634,]   71   78   76   82   75   75   78   77   75    75 #>  [3635,]   71   77   76   82   75   75   78   77   75    75 #>  [3636,]   71   78   76   82   75   75   78   77   75    75 #>  [3637,]   71   78   76   82   75   75   78   77   75    75 #>  [3638,]   71   78   76   82   75   75   78   77   75    75 #>  [3639,]   71   78   76   82   75   75   78   77   75    75 #>  [3640,]   71   78   76   82   75   75   78   77   75    75 #>  [3641,]   71   78   76   82   75   75   78   77   75    75 #>  [3642,]   71   78   76   82   75   75   78   77   75    75 #>  [3643,]   71   77   76   82   75   75   78   77   75    75 #>  [3644,]   71   77   76   82   75   75   78   77   75    75 #>  [3645,]   71   77   76   82   75   75   78   77   75    75 #>  [3646,]   71   77   76   82   75   75   78   77   75    75 #>  [3647,]   71   78   76   82   75   75   78   77   75    75 #>  [3648,]   70   76   75   81   74   74   77   76   74    76 #>  [3649,]   71   77   76   82   75   75   78   77   75    75 #>  [3650,]   71   78   76   82   75   75   78   77   75    75 #>  [3651,]   70   76   75   81   74   74   77   76   74    76 #>  [3652,]   71   77   76   82   75   75   78   77   75    75 #>  [3653,]   71   78   76   82   75   75   78   77   75    75 #>  [3654,]   70   76   75   81   74   74   77   76   74    76 #>  [3655,]   71   77   76   82   75   75   78   77   75    75 #>  [3656,]   71   78   76   82   75   75   78   77   75    75 #>  [3657,]   71   78   76   82   75   75   78   77   75    75 #>  [3658,]   71   77   76   82   75   75   78   77   75    75 #>  [3659,]   71   78   76   82   75   75   78   77   75    75 #>  [3660,]   71   78   76   82   75   75   78   77   75    75 #>  [3661,]   71   78   76   82   75   75   78   77   75    75 #>  [3662,]   70   76   75   81   74   74   77   76   74    76 #>  [3663,]   71   78   76   82   75   75   78   77   75    75 #>  [3664,]   71   78   76   82   75   75   78   77   75    75 #>  [3665,]   71   78   76   82   75   75   78   77   75    75 #>  [3666,]   70   76   75   81   74   74   77   76   74    77 #>  [3667,]   71   77   76   82   75   75   78   77   75    75 #>  [3668,]   71   77   76   82   75   75   78   77   75    75 #>  [3669,]   70   76   75   81   74   74   77   76   74    76 #>  [3670,]   71   78   76   82   75   75   78   77   75    75 #>  [3671,]   71   78   76   82   75   75   78   77   75    75 #>  [3672,]   71   78   76   82   75   75   78   77   75    75 #>  [3673,]   71   78   76   82   75   75   78   77   75    75 #>  [3674,]   71   77   76   82   75   75   78   77   75    75 #>  [3675,]   71   78   76   82   75   75   78   77   75    75 #>  [3676,]   71   78   76   82   75   75   78   77   75    75 #>  [3677,]   71   78   76   82   75   75   78   77   75    75 #>  [3678,]   71   78   76   82   75   75   78   77   75    75 #>  [3679,]   71   77   76   82   75   75   78   77   75    75 #>  [3680,]   70   76   75   81   74   74   77   76   74    76 #>  [3681,]   70   76   75   81   74   74   77   76   74    76 #>  [3682,]   71   77   76   82   75   75   78   77   75    75 #>  [3683,]   71   77   76   82   75   75   78   77   75    75 #>  [3684,]   71   78   76   82   75   75   78   77   75    75 #>  [3685,]   71   77   76   82   75   75   78   77   75    75 #>  [3686,]   71   78   76   82   75   75   78   77   75    75 #>  [3687,]   71   77   76   82   75   75   78   77   75    75 #>  [3688,]   71   77   76   82   75   75   78   77   75    75 #>  [3689,]   70   76   75   81   74   74   77   76   74    76 #>  [3690,]   71   77   76   82   75   75   78   77   75    75 #>  [3691,]   71   77   76   82   75   75   78   77   75    75 #>  [3692,]   71   77   76   82   75   75   78   77   75    75 #>  [3693,]   71   78   76   82   75   75   78   77   75    75 #>  [3694,]   71   78   76   82   75   75   78   77   75    75 #>  [3695,]   71   77   76   82   75   75   78   77   75    75 #>  [3696,]   71   77   76   82   75   75   78   77   75    75 #>  [3697,]   71   78   76   82   75   75   78   77   75    75 #>  [3698,]   71   78   76   82   75   75   78   77   75    75 #>  [3699,]   71   77   76   82   75   75   78   77   75    75 #>  [3700,]   71   78   76   82   75   75   78   77   75    75 #>  [3701,]   72   79   77   84   77   77   80   79   77    79 #>  [3702,]   72   79   77   83   76   76   79   78   76    78 #>  [3703,]   72   79   77   84   77   77   80   79   77    79 #>  [3704,]   72   79   77   84   77   77   80   79   77    79 #>  [3705,]   72   79   77   84   77   77   80   79   77    79 #>  [3706,]   72   79   77   83   76   76   79   78   76    78 #>  [3707,]   72   79   77   84   77   77   80   79   77    79 #>  [3708,]   72   79   77   84   77   77   80   79   77    79 #>  [3709,]   72   79   77   84   77   77   80   79   77    79 #>  [3710,]   72   79   77   84   77   77   80   79   77    79 #>  [3711,]   72   79   77   83   76   76   79   78   76    78 #>  [3712,]   72   79   77   83   76   76   79   78   76    78 #>  [3713,]   72   79   77   84   77   77   80   79   77    79 #>  [3714,]   72   79   77   84   77   77   80   79   77    79 #>  [3715,]   72   79   77   83   76   76   79   78   76    78 #>  [3716,]   72   79   77   84   77   77   80   79   77    79 #>  [3717,]   72   79   77   83   76   76   79   78   76    78 #>  [3718,]   72   79   77   84   77   77   80   79   77    79 #>  [3719,]   72   79   77   83   76   76   79   78   76    78 #>  [3720,]   73   80   77   84   77   77   80   79   77    79 #>  [3721,]   72   79   77   84   77   77   80   79   77    79 #>  [3722,]   73   80   77   84   77   77   80   79   77    79 #>  [3723,]   72   79   77   83   76   76   79   78   76    78 #>  [3724,]   72   79   77   84   77   77   80   79   77    79 #>  [3725,]   72   79   77   84   77   77   80   79   77    79 #>  [3726,]   72   79   77   83   76   76   79   78   76    78 #>  [3727,]   72   79   77   84   77   77   80   79   77    79 #>  [3728,]   72   79   77   84   77   77   80   79   77    79 #>  [3729,]   73   80   77   83   76   76   79   78   76    78 #>  [3730,]   72   79   77   83   76   76   79   78   76    78 #>  [3731,]   72   79   77   83   76   76   79   78   76    78 #>  [3732,]   72   79   77   83   76   76   79   78   76    78 #>  [3733,]   72   79   77   84   77   77   80   79   77    79 #>  [3734,]   72   79   77   83   76   76   79   78   76    78 #>  [3735,]   72   79   77   83   76   76   79   78   76    78 #>  [3736,]   72   79   77   84   77   77   80   79   77    79 #>  [3737,]   72   79   77   83   76   76   79   78   76    78 #>  [3738,]   72   79   77   84   77   77   80   79   77    79 #>  [3739,]   72   79   77   84   77   77   80   79   77    79 #>  [3740,]   72   79   77   84   77   77   80   79   77    79 #>  [3741,]   72   79   77   84   77   77   80   79   77    79 #>  [3742,]   72   79   77   83   76   76   79   78   76    78 #>  [3743,]   72   79   77   83   76   76   79   78   76    78 #>  [3744,]   72   79   77   83   76   76   79   78   76    78 #>  [3745,]   72   79   77   84   77   77   80   79   77    79 #>  [3746,]   72   79   77   83   76   76   79   78   76    78 #>  [3747,]   72   79   77   83   76   76   79   78   76    78 #>  [3748,]   72   79   77   83   76   76   79   78   76    78 #>  [3749,]   72   79   77   84   77   77   80   79   77    79 #>  [3750,]   72   79   77   84   77   77   80   79   77    79 #>  [3751,]   72   79   77   83   76   76   79   78   76    78 #>  [3752,]   72   79   77   84   77   77   80   79   77    79 #>  [3753,]   72   79   77   84   77   77   80   79   77    79 #>  [3754,]   72   79   77   84   77   77   80   79   77    79 #>  [3755,]   72   79   77   84   77   77   80   79   77    79 #>  [3756,]   72   79   77   83   76   76   79   78   76    78 #>  [3757,]   72   79   77   84   77   77   80   79   77    79 #>  [3758,]   73   80   77   84   77   77   80   79   77    79 #>  [3759,]   72   79   77   84   77   77   80   79   77    79 #>  [3760,]   72   79   77   83   76   76   79   78   76    78 #>  [3761,]   72   79   77   83   76   76   79   78   76    78 #>  [3762,]   72   79   77   83   76   76   79   78   76    78 #>  [3763,]   72   79   77   83   76   76   79   78   76    78 #>  [3764,]   73   80   77   83   76   76   79   78   76    78 #>  [3765,]   72   79   77   83   76   76   79   78   76    78 #>  [3766,]   72   79   77   83   76   76   79   78   76    78 #>  [3767,]   72   79   77   84   77   77   80   79   77    79 #>  [3768,]   72   79   77   83   76   76   79   78   76    78 #>  [3769,]   72   79   77   83   76   76   79   78   76    78 #>  [3770,]   72   79   77   83   76   76   79   78   76    78 #>  [3771,]   72   79   77   84   77   77   80   79   77    79 #>  [3772,]   72   79   77   84   77   77   80   79   77    79 #>  [3773,]   72   79   77   84   77   77   80   79   77    79 #>  [3774,]   72   79   77   84   77   77   80   79   77    79 #>  [3775,]   72   79   77   83   76   76   79   78   76    78 #>  [3776,]   72   79   77   84   77   77   80   79   77    79 #>  [3777,]   73   80   77   84   77   77   80   79   77    79 #>  [3778,]   72   79   77   83   76   76   79   78   76    78 #>  [3779,]   72   79   77   83   76   76   79   78   76    78 #>  [3780,]   72   79   77   84   77   77   80   79   77    79 #>  [3781,]   72   79   77   83   76   76   79   78   76    78 #>  [3782,]   72   79   77   83   76   76   79   78   76    78 #>  [3783,]   72   79   77   84   77   77   80   79   77    79 #>  [3784,]   72   79   77   84   77   77   80   79   77    79 #>  [3785,]   72   79   77   84   77   77   80   79   77    79 #>  [3786,]   72   79   77   84   77   77   80   79   77    79 #>  [3787,]   73   80   77   84   77   77   80   79   77    79 #>  [3788,]   72   79   77   84   77   77   80   79   77    79 #>  [3789,]   72   79   77   83   76   76   79   78   76    78 #>  [3790,]   72   79   77   84   77   77   80   79   77    79 #>  [3791,]   72   79   77   84   77   77   80   79   77    79 #>  [3792,]   72   79   77   83   76   76   79   78   76    78 #>  [3793,]   72   79   77   83   76   76   79   78   76    78 #>  [3794,]   72   79   77   83   76   76   79   78   76    78 #>  [3795,]   72   79   77   83   76   76   79   78   76    78 #>  [3796,]   72   79   77   83   76   76   79   78   76    78 #>  [3797,]   72   79   77   83   76   76   79   78   76    78 #>  [3798,]   72   79   77   84   77   77   80   79   77    79 #>  [3799,]   72   79   77   84   77   77   80   79   77    79 #>  [3800,]   72   79   77   83   76   76   79   78   76    78 #>  [3801,]   75   82   79   86   79   79   82   81   79    81 #>  [3802,]   75   82   79   86   79   79   82   81   79    81 #>  [3803,]   74   81   78   85   78   78   81   80   78    80 #>  [3804,]   75   82   79   86   79   79   82   81   79    81 #>  [3805,]   75   82   79   86   79   79   82   81   79    81 #>  [3806,]   75   82   79   86   79   79   82   81   79    81 #>  [3807,]   74   81   78   85   78   78   81   80   78    80 #>  [3808,]   74   81   78   85   78   78   81   80   78    80 #>  [3809,]   75   82   79   86   79   79   82   81   79    81 #>  [3810,]   75   82   79   86   79   79   82   81   79    81 #>  [3811,]   75   82   79   86   79   79   82   81   79    81 #>  [3812,]   75   82   79   86   79   79   82   81   79    81 #>  [3813,]   74   81   78   85   78   78   81   80   78    80 #>  [3814,]   75   82   79   86   79   79   82   81   79    81 #>  [3815,]   75   82   79   86   79   79   82   81   79    81 #>  [3816,]   74   81   78   85   78   78   81   80   78    80 #>  [3817,]   75   82   79   86   79   79   82   81   79    81 #>  [3818,]   75   82   79   86   79   79   82   81   79    81 #>  [3819,]   75   82   79   86   79   79   82   81   79    81 #>  [3820,]   74   81   78   85   78   78   81   80   78    80 #>  [3821,]   75   82   79   86   79   79   82   81   79    81 #>  [3822,]   74   81   78   85   78   78   81   80   78    80 #>  [3823,]   75   82   79   86   79   79   82   81   79    81 #>  [3824,]   74   81   78   85   78   78   81   80   78    80 #>  [3825,]   74   81   78   85   78   78   81   80   78    80 #>  [3826,]   75   82   79   86   79   79   82   81   79    81 #>  [3827,]   75   82   79   86   79   79   82   81   79    81 #>  [3828,]   75   82   79   86   79   79   82   81   79    81 #>  [3829,]   75   82   79   86   79   79   82   81   79    81 #>  [3830,]   75   82   79   86   79   79   82   81   79    81 #>  [3831,]   75   82   79   86   79   79   82   81   79    81 #>  [3832,]   75   82   79   86   79   79   82   81   79    81 #>  [3833,]   75   82   79   86   79   79   82   81   79    81 #>  [3834,]   75   82   79   86   79   79   82   81   79    81 #>  [3835,]   75   82   79   86   79   79   82   81   79    81 #>  [3836,]   75   82   79   86   79   79   82   81   79    81 #>  [3837,]   75   82   79   86   79   79   82   81   79    81 #>  [3838,]   75   82   79   86   79   79   82   81   79    81 #>  [3839,]   74   81   78   85   78   78   81   80   78    80 #>  [3840,]   74   81   78   85   78   78   81   80   78    80 #>  [3841,]   75   82   79   86   79   79   82   81   79    81 #>  [3842,]   75   82   79   86   79   79   82   81   79    81 #>  [3843,]   75   82   79   86   79   79   82   81   79    81 #>  [3844,]   74   81   78   85   78   78   81   80   78    80 #>  [3845,]   75   82   79   86   79   79   82   81   79    81 #>  [3846,]   74   81   78   85   78   78   81   80   78    80 #>  [3847,]   75   82   79   86   79   79   82   81   79    81 #>  [3848,]   75   82   79   86   79   79   82   81   79    81 #>  [3849,]   74   81   78   85   78   78   81   80   78    80 #>  [3850,]   74   81   78   85   78   78   81   80   78    80 #>  [3851,]   75   82   79   86   79   79   82   81   79    81 #>  [3852,]   75   82   79   86   79   79   82   81   79    81 #>  [3853,]   74   81   78   85   78   78   81   80   78    80 #>  [3854,]   75   82   79   86   79   79   82   81   79    81 #>  [3855,]   74   81   78   85   78   78   81   80   78    80 #>  [3856,]   74   81   78   85   78   78   81   80   78    80 #>  [3857,]   75   82   79   86   79   79   82   81   79    81 #>  [3858,]   75   82   79   86   79   79   82   81   79    81 #>  [3859,]   74   81   78   85   78   78   81   80   78    80 #>  [3860,]   75   82   79   86   79   79   82   81   79    81 #>  [3861,]   75   82   79   86   79   79   82   81   79    81 #>  [3862,]   75   82   79   86   79   79   82   81   79    81 #>  [3863,]   74   81   78   85   78   78   81   80   78    80 #>  [3864,]   75   82   79   86   79   79   82   81   79    81 #>  [3865,]   74   81   78   85   78   78   81   80   78    80 #>  [3866,]   74   81   78   85   78   78   81   80   78    80 #>  [3867,]   75   82   79   86   79   79   82   81   79    81 #>  [3868,]   75   82   79   86   79   79   82   81   79    81 #>  [3869,]   75   82   79   86   79   79   82   81   79    81 #>  [3870,]   74   81   78   85   78   78   81   80   78    80 #>  [3871,]   75   82   79   86   79   79   82   81   79    81 #>  [3872,]   74   81   78   85   78   78   81   80   78    80 #>  [3873,]   75   82   79   86   79   79   82   81   79    81 #>  [3874,]   75   82   79   86   79   79   82   81   79    81 #>  [3875,]   75   82   79   86   79   79   82   81   79    81 #>  [3876,]   75   82   79   86   79   79   82   81   79    81 #>  [3877,]   75   82   79   86   79   79   82   81   79    81 #>  [3878,]   75   82   79   86   79   79   82   81   79    81 #>  [3879,]   75   82   79   86   79   79   82   81   79    81 #>  [3880,]   75   82   79   86   79   79   82   81   79    81 #>  [3881,]   75   82   79   86   79   79   82   81   79    81 #>  [3882,]   75   82   79   86   79   79   82   81   79    81 #>  [3883,]   75   82   79   86   79   79   82   81   79    81 #>  [3884,]   74   81   78   85   78   78   81   80   78    80 #>  [3885,]   75   82   79   86   79   79   82   81   79    81 #>  [3886,]   74   81   78   85   78   78   81   80   78    80 #>  [3887,]   75   82   79   86   79   79   82   81   79    81 #>  [3888,]   75   82   79   86   79   79   82   81   79    81 #>  [3889,]   74   81   78   85   78   78   81   80   78    80 #>  [3890,]   74   81   78   85   78   78   81   80   78    80 #>  [3891,]   75   82   79   86   79   79   82   81   79    81 #>  [3892,]   75   82   79   86   79   79   82   81   79    81 #>  [3893,]   75   82   79   86   79   79   82   81   79    81 #>  [3894,]   75   82   79   86   79   79   82   81   79    81 #>  [3895,]   75   82   79   86   79   79   82   81   79    81 #>  [3896,]   75   82   79   86   79   79   82   81   79    81 #>  [3897,]   75   82   79   86   79   79   82   81   79    81 #>  [3898,]   74   81   78   85   78   78   81   80   78    80 #>  [3899,]   75   82   79   86   79   79   82   81   79    81 #>  [3900,]   74   81   78   85   78   78   81   80   78    80 #>  [3901,]   76   83   80   87   80   80   83   82   80    82 #>  [3902,]   77   84   80   87   80   80   83   82   80    82 #>  [3903,]   77   84   80   87   80   80   83   82   80    82 #>  [3904,]   76   83   80   87   80   80   83   82   80    82 #>  [3905,]   77   84   80   87   80   80   83   82   80    82 #>  [3906,]   77   84   80   87   80   80   83   82   80    82 #>  [3907,]   77   84   80   87   80   80   83   82   80    82 #>  [3908,]   76   83   80   87   80   80   83   82   80    82 #>  [3909,]   76   83   80   87   80   80   83   82   80    82 #>  [3910,]   77   84   80   87   80   80   83   82   80    82 #>  [3911,]   76   83   80   87   80   80   83   82   80    82 #>  [3912,]   77   84   80   87   80   80   83   82   80    82 #>  [3913,]   76   83   80   87   80   80   83   82   80    82 #>  [3914,]   77   84   80   87   80   80   83   82   80    82 #>  [3915,]   77   84   80   87   80   80   83   82   80    82 #>  [3916,]   77   84   80   87   80   80   83   82   80    82 #>  [3917,]   76   83   80   87   80   80   83   82   80    82 #>  [3918,]   77   84   80   87   80   80   83   82   80    82 #>  [3919,]   77   84   80   87   80   80   83   82   80    82 #>  [3920,]   77   84   80   88   81   81   84   83   81    82 #>  [3921,]   77   84   80   87   80   80   83   82   80    82 #>  [3922,]   76   83   80   88   81   81   84   83   81    82 #>  [3923,]   77   84   80   87   80   80   83   82   80    82 #>  [3924,]   77   84   80   87   80   80   83   82   80    82 #>  [3925,]   77   84   80   87   80   80   83   82   80    82 #>  [3926,]   77   84   80   87   80   80   83   82   80    82 #>  [3927,]   76   83   80   87   80   80   83   82   80    82 #>  [3928,]   77   84   80   87   80   80   83   82   80    82 #>  [3929,]   77   84   80   88   81   81   84   83   81    82 #>  [3930,]   76   83   80   87   80   80   83   82   80    82 #>  [3931,]   77   84   80   87   80   80   83   82   80    82 #>  [3932,]   77   84   80   87   80   80   83   82   80    82 #>  [3933,]   77   84   80   87   80   80   83   82   80    82 #>  [3934,]   77   84   80   87   80   80   83   82   80    82 #>  [3935,]   76   83   80   87   80   80   83   82   80    82 #>  [3936,]   77   84   80   87   80   80   83   82   80    82 #>  [3937,]   77   84   80   87   80   80   83   82   80    82 #>  [3938,]   77   84   80   87   80   80   83   82   80    82 #>  [3939,]   77   84   80   87   80   80   83   82   80    82 #>  [3940,]   77   84   80   87   80   80   83   82   80    82 #>  [3941,]   77   84   80   87   80   80   83   82   80    82 #>  [3942,]   77   84   80   87   80   80   83   82   80    82 #>  [3943,]   76   83   80   87   80   80   83   82   80    82 #>  [3944,]   76   83   80   87   80   80   83   82   80    82 #>  [3945,]   77   84   80   87   80   80   83   82   80    82 #>  [3946,]   77   84   80   87   80   80   83   82   80    82 #>  [3947,]   77   84   80   87   80   80   83   82   80    82 #>  [3948,]   77   84   80   87   80   80   83   82   80    82 #>  [3949,]   76   83   80   87   80   80   83   82   80    82 #>  [3950,]   77   84   80   87   80   80   83   82   80    82 #>  [3951,]   77   84   80   87   80   80   83   82   80    82 #>  [3952,]   76   83   80   87   80   80   83   82   80    82 #>  [3953,]   77   84   80   87   80   80   83   82   80    82 #>  [3954,]   76   83   80   87   80   80   83   82   80    82 #>  [3955,]   76   83   80   87   80   80   83   82   80    82 #>  [3956,]   77   84   80   87   80   80   83   82   80    82 #>  [3957,]   77   84   80   87   80   80   83   82   80    82 #>  [3958,]   76   83   80   88   81   81   84   83   81    82 #>  [3959,]   77   84   80   87   80   80   83   82   80    82 #>  [3960,]   77   84   80   87   80   80   83   82   80    82 #>  [3961,]   77   84   80   87   80   80   83   82   80    82 #>  [3962,]   77   84   80   87   80   80   83   82   80    82 #>  [3963,]   77   84   80   87   80   80   83   82   80    82 #>  [3964,]   77   84   80   88   81   81   84   83   81    82 #>  [3965,]   77   84   80   87   80   80   83   82   80    82 #>  [3966,]   76   83   80   87   80   80   83   82   80    82 #>  [3967,]   77   84   80   87   80   80   83   82   80    82 #>  [3968,]   77   84   80   87   80   80   83   82   80    82 #>  [3969,]   76   83   80   87   80   80   83   82   80    82 #>  [3970,]   77   84   80   87   80   80   83   82   80    82 #>  [3971,]   77   84   80   87   80   80   83   82   80    82 #>  [3972,]   77   84   80   87   80   80   83   82   80    82 #>  [3973,]   77   84   80   87   80   80   83   82   80    82 #>  [3974,]   77   84   80   87   80   80   83   82   80    82 #>  [3975,]   77   84   80   87   80   80   83   82   80    82 #>  [3976,]   77   84   80   87   80   80   83   82   80    82 #>  [3977,]   77   84   80   88   81   81   84   83   81    82 #>  [3978,]   77   84   80   87   80   80   83   82   80    82 #>  [3979,]   76   83   80   87   80   80   83   82   80    82 #>  [3980,]   76   83   80   87   80   80   83   82   80    82 #>  [3981,]   76   83   80   88   81   81   84   83   81    82 #>  [3982,]   76   83   80   87   80   80   83   82   80    82 #>  [3983,]   76   83   80   87   80   80   83   82   80    82 #>  [3984,]   77   84   80   87   80   80   83   82   80    82 #>  [3985,]   77   84   80   87   80   80   83   82   80    82 #>  [3986,]   77   84   80   87   80   80   83   82   80    82 #>  [3987,]   76   83   80   88   81   81   84   83   81    82 #>  [3988,]   76   83   80   87   80   80   83   82   80    82 #>  [3989,]   76   83   80   87   80   80   83   82   80    82 #>  [3990,]   76   83   80   87   80   80   83   82   80    82 #>  [3991,]   77   84   80   87   80   80   83   82   80    82 #>  [3992,]   76   83   80   87   80   80   83   82   80    82 #>  [3993,]   77   84   80   87   80   80   83   82   80    82 #>  [3994,]   77   84   80   87   80   80   83   82   80    82 #>  [3995,]   76   83   80   87   80   80   83   82   80    82 #>  [3996,]   76   83   80   87   80   80   83   82   80    82 #>  [3997,]   77   84   80   87   80   80   83   82   80    82 #>  [3998,]   77   84   80   87   80   80   83   82   80    82 #>  [3999,]   76   83   80   87   80   80   83   82   80    82 #>  [4000,]   77   84   80   87   80   80   83   82   80    82 #>  [4001,]   78   86   82   90   83   82   85   84   82    85 #>  [4002,]   78   85   81   89   82   83   86   85   83    83 #>  [4003,]   78   85   81   89   82   83   86   85   83    83 #>  [4004,]   78   86   82   90   83   82   85   84   82    85 #>  [4005,]   78   85   81   89   82   83   86   85   83    83 #>  [4006,]   78   85   81   89   82   83   86   85   83    83 #>  [4007,]   78   86   82   90   83   82   85   84   82    85 #>  [4008,]   78   85   81   89   82   84   87   85   83    83 #>  [4009,]   78   86   82   90   83   82   85   84   82    85 #>  [4010,]   78   86   82   90   83   82   85   84   82    85 #>  [4011,]   78   85   81   89   82   83   86   85   83    83 #>  [4012,]   78   85   81   89   82   83   86   85   83    83 #>  [4013,]   78   86   82   90   83   82   85   84   82    85 #>  [4014,]   78   86   82   90   83   82   85   84   82    85 #>  [4015,]   78   85   81   89   82   84   87   85   83    83 #>  [4016,]   78   86   82   90   83   82   85   84   82    85 #>  [4017,]   78   85   81   89   82   84   87   85   83    83 #>  [4018,]   78   85   81   89   82   84   87   85   83    83 #>  [4019,]   78   85   81   89   82   83   86   85   83    83 #>  [4020,]   78   86   82   90   83   82   85   84   82    85 #>  [4021,]   78   85   81   89   82   84   87   85   83    83 #>  [4022,]   78   86   82   90   83   82   85   84   82    85 #>  [4023,]   78   85   81   89   82   84   87   85   83    83 #>  [4024,]   78   86   82   90   83   82   85   84   82    85 #>  [4025,]   78   86   82   90   83   82   85   84   82    85 #>  [4026,]   78   85   81   89   82   83   86   85   83    83 #>  [4027,]   78   85   81   89   82   84   87   85   83    83 #>  [4028,]   78   86   82   90   83   82   85   84   82    85 #>  [4029,]   78   85   81   89   82   83   86   85   83    83 #>  [4030,]   78   85   81   89   82   83   86   85   83    83 #>  [4031,]   78   85   81   89   82   83   86   85   83    83 #>  [4032,]   78   85   81   89   82   83   86   85   83    83 #>  [4033,]   78   85   81   89   82   83   86   85   83    83 #>  [4034,]   78   85   81   89   82   83   86   85   83    83 #>  [4035,]   78   85   81   89   82   83   86   85   83    83 #>  [4036,]   78   86   82   90   83   82   85   84   82    85 #>  [4037,]   78   85   81   89   82   84   87   85   83    83 #>  [4038,]   78   85   81   89   82   84   87   85   83    83 #>  [4039,]   78   86   82   90   83   82   85   84   82    85 #>  [4040,]   78   85   81   89   82   83   86   85   83    83 #>  [4041,]   78   85   81   89   82   83   86   85   83    83 #>  [4042,]   78   85   81   89   82   83   86   85   83    83 #>  [4043,]   78   85   81   89   82   84   87   85   83    83 #>  [4044,]   78   85   81   89   82   84   87   85   83    83 #>  [4045,]   78   86   82   90   83   82   85   84   82    84 #>  [4046,]   78   85   81   89   82   84   87   85   83    83 #>  [4047,]   78   85   81   89   82   84   87   85   83    83 #>  [4048,]   78   85   81   89   82   83   86   85   83    83 #>  [4049,]   78   86   82   90   83   82   85   84   82    84 #>  [4050,]   78   86   82   90   83   82   85   84   82    85 #>  [4051,]   78   85   81   89   82   83   86   85   83    83 #>  [4052,]   78   86   82   90   83   82   85   84   82    85 #>  [4053,]   78   86   82   90   83   82   85   84   82    84 #>  [4054,]   78   86   82   90   83   82   85   84   82    85 #>  [4055,]   78   86   82   90   83   82   85   84   82    85 #>  [4056,]   78   85   81   89   82   84   87   85   83    83 #>  [4057,]   78   86   82   90   83   82   85   84   82    85 #>  [4058,]   78   86   82   90   83   82   85   84   82    85 #>  [4059,]   78   86   82   90   83   82   85   84   82    85 #>  [4060,]   78   85   81   89   82   83   86   85   83    83 #>  [4061,]   78   85   81   89   82   84   87   85   83    83 #>  [4062,]   78   85   81   89   82   83   86   85   83    83 #>  [4063,]   78   85   81   89   82   83   86   85   83    83 #>  [4064,]   78   85   81   89   82   84   87   85   83    83 #>  [4065,]   78   85   81   89   82   83   86   85   83    83 #>  [4066,]   78   85   81   89   82   83   86   85   83    83 #>  [4067,]   78   86   82   90   83   82   85   84   82    85 #>  [4068,]   78   85   81   89   82   83   86   85   83    83 #>  [4069,]   78   85   81   89   82   83   86   85   83    83 #>  [4070,]   78   85   81   89   82   84   87   85   83    83 #>  [4071,]   78   85   81   89   82   84   87   85   83    83 #>  [4072,]   78   86   82   90   83   82   85   84   82    84 #>  [4073,]   78   86   82   90   83   82   85   84   82    85 #>  [4074,]   78   85   81   89   82   84   87   85   83    83 #>  [4075,]   78   85   81   89   82   84   87   85   83    83 #>  [4076,]   78   86   82   90   83   82   85   84   82    85 #>  [4077,]   78   85   81   89   82   84   87   85   83    83 #>  [4078,]   78   85   81   89   82   83   86   85   83    83 #>  [4079,]   78   85   81   89   82   84   87   85   83    83 #>  [4080,]   78   85   81   89   82   83   86   85   83    83 #>  [4081,]   78   85   81   89   82   83   86   85   83    83 #>  [4082,]   78   85   81   89   82   84   87   85   83    83 #>  [4083,]   78   85   81   89   82   83   86   85   83    83 #>  [4084,]   78   85   81   89   82   84   87   85   83    83 #>  [4085,]   78   86   82   90   83   82   85   84   82    85 #>  [4086,]   78   86   82   90   83   82   85   84   82    85 #>  [4087,]   78   86   82   90   83   82   85   84   82    84 #>  [4088,]   78   85   81   89   82   84   87   85   83    83 #>  [4089,]   78   85   81   89   82   83   86   85   83    83 #>  [4090,]   78   86   82   90   83   82   85   84   82    85 #>  [4091,]   78   86   82   90   83   82   85   84   82    85 #>  [4092,]   78   85   81   89   82   83   86   85   83    83 #>  [4093,]   78   85   81   89   82   83   86   85   83    83 #>  [4094,]   78   85   81   89   82   84   87   85   83    83 #>  [4095,]   78   85   81   89   82   84   87   85   83    83 #>  [4096,]   78   85   81   89   82   84   87   85   83    83 #>  [4097,]   78   85   81   89   82   83   86   85   83    83 #>  [4098,]   78   85   81   89   82   83   86   85   83    83 #>  [4099,]   78   85   81   89   82   83   86   85   83    83 #>  [4100,]   78   85   81   89   82   84   87   85   83    83 #>  [4101,]   79   88   84   92   85   85   88   86   84    86 #>  [4102,]   79   87   83   91   84   87   89   87   85    87 #>  [4103,]   79   88   84   92   85   85   88   86   84    86 #>  [4104,]   79   88   84   92   85   85   88   86   84    86 #>  [4105,]   79   87   83   91   84   87   89   87   85    87 #>  [4106,]   79   87   83   91   84   86   89   87   85    87 #>  [4107,]   79   88   84   92   85   85   88   86   84    86 #>  [4108,]   79   87   83   91   84   87   89   87   85    87 #>  [4109,]   79   88   84   92   85   85   88   86   84    86 #>  [4110,]   79   88   84   92   85   85   88   86   84    86 #>  [4111,]   79   87   83   91   84   87   89   87   85    87 #>  [4112,]   79   87   83   91   84   87   89   87   85    87 #>  [4113,]   79   88   84   92   85   85   88   86   84    86 #>  [4114,]   79   88   84   92   85   85   88   86   84    86 #>  [4115,]   79   87   83   91   84   87   89   87   85    87 #>  [4116,]   79   88   84   92   85   85   88   86   84    86 #>  [4117,]   79   87   83   91   84   87   89   87   85    87 #>  [4118,]   79   87   83   91   84   87   89   87   85    87 #>  [4119,]   79   87   83   91   84   86   89   87   85    87 #>  [4120,]   79   88   84   92   85   85   88   86   84    86 #>  [4121,]   79   87   83   91   84   87   89   87   85    87 #>  [4122,]   79   88   84   92   85   85   88   86   84    86 #>  [4123,]   79   87   83   91   84   87   89   87   85    87 #>  [4124,]   79   88   84   92   85   85   88   86   84    86 #>  [4125,]   79   88   84   92   85   85   88   86   84    86 #>  [4126,]   79   87   83   91   84   87   89   87   85    87 #>  [4127,]   79   88   84   92   85   85   88   86   84    86 #>  [4128,]   79   88   84   92   85   85   88   86   84    86 #>  [4129,]   79   87   83   91   84   87   89   87   85    87 #>  [4130,]   79   87   83   91   84   87   89   87   85    87 #>  [4131,]   79   87   83   91   84   87   89   87   85    87 #>  [4132,]   79   87   83   91   84   87   89   87   85    87 #>  [4133,]   79   88   84   92   85   85   88   86   84    86 #>  [4134,]   79   87   83   91   84   86   89   87   85    87 #>  [4135,]   79   87   83   91   84   87   89   87   85    87 #>  [4136,]   79   88   84   92   85   85   88   86   84    86 #>  [4137,]   79   87   83   91   84   86   89   87   85    87 #>  [4138,]   79   87   83   91   84   86   89   87   85    87 #>  [4139,]   79   88   84   92   85   85   88   86   84    86 #>  [4140,]   79   87   83   91   84   87   89   87   85    87 #>  [4141,]   79   88   84   92   85   85   88   86   84    86 #>  [4142,]   79   87   83   91   84   87   89   87   85    87 #>  [4143,]   79   87   83   91   84   87   89   87   85    87 #>  [4144,]   79   87   83   91   84   87   89   87   85    87 #>  [4145,]   79   88   84   92   85   85   88   86   84    86 #>  [4146,]   79   87   83   91   84   87   89   87   85    87 #>  [4147,]   79   87   83   91   84   87   89   87   85    87 #>  [4148,]   79   87   83   91   84   87   89   87   85    87 #>  [4149,]   79   88   84   92   85   85   88   86   84    86 #>  [4150,]   79   88   84   92   85   85   88   86   84    86 #>  [4151,]   79   87   83   91   84   87   89   87   85    87 #>  [4152,]   79   88   84   92   85   85   88   86   84    86 #>  [4153,]   79   88   84   92   85   85   88   86   84    86 #>  [4154,]   79   88   84   92   85   85   88   86   84    86 #>  [4155,]   79   88   84   92   85   85   88   86   84    86 #>  [4156,]   79   87   83   91   84   87   89   87   85    87 #>  [4157,]   79   88   84   92   85   85   88   86   84    86 #>  [4158,]   79   88   84   92   85   85   88   86   84    86 #>  [4159,]   79   88   84   92   85   85   88   86   84    86 #>  [4160,]   79   87   83   91   84   87   89   87   85    87 #>  [4161,]   79   87   83   91   84   87   89   87   85    87 #>  [4162,]   79   87   83   91   84   87   89   87   85    87 #>  [4163,]   79   87   83   91   84   87   89   87   85    87 #>  [4164,]   79   87   83   91   84   86   89   87   85    87 #>  [4165,]   79   87   83   91   84   87   89   87   85    87 #>  [4166,]   79   87   83   91   84   87   89   87   85    87 #>  [4167,]   79   88   84   92   85   85   88   86   84    86 #>  [4168,]   79   87   83   91   84   86   89   87   85    87 #>  [4169,]   79   87   83   91   84   87   89   87   85    87 #>  [4170,]   79   87   83   91   84   87   89   87   85    87 #>  [4171,]   79   88   84   92   85   85   88   86   84    86 #>  [4172,]   79   88   84   92   85   85   88   86   84    86 #>  [4173,]   79   88   84   92   85   85   88   86   84    86 #>  [4174,]   79   88   84   92   85   85   88   86   84    86 #>  [4175,]   79   87   83   91   84   87   89   87   85    87 #>  [4176,]   79   88   84   92   85   85   88   86   84    86 #>  [4177,]   79   87   83   91   84   87   89   87   85    87 #>  [4178,]   79   87   83   91   84   87   89   87   85    87 #>  [4179,]   79   87   83   91   84   87   89   87   85    87 #>  [4180,]   79   88   84   92   85   85   88   86   84    86 #>  [4181,]   79   87   83   91   84   87   89   87   85    87 #>  [4182,]   79   87   83   91   84   87   89   87   85    87 #>  [4183,]   79   87   83   91   84   87   89   87   85    87 #>  [4184,]   79   87   83   91   84   87   89   87   85    87 #>  [4185,]   79   88   84   92   85   85   88   86   84    86 #>  [4186,]   79   88   84   92   85   85   88   86   84    86 #>  [4187,]   79   88   84   92   85   85   88   86   84    86 #>  [4188,]   79   88   84   92   85   85   88   86   84    86 #>  [4189,]   79   87   83   91   84   87   89   87   85    87 #>  [4190,]   79   88   84   92   85   85   88   86   84    86 #>  [4191,]   79   88   84   92   85   85   88   86   84    86 #>  [4192,]   79   87   83   91   84   87   89   87   85    87 #>  [4193,]   79   87   83   91   84   87   89   87   85    87 #>  [4194,]   79   87   83   91   84   87   89   87   85    87 #>  [4195,]   79   87   83   91   84   87   89   87   85    87 #>  [4196,]   79   87   83   91   84   86   89   87   85    87 #>  [4197,]   79   87   83   91   84   86   89   87   85    87 #>  [4198,]   79   87   83   91   84   87   89   87   85    87 #>  [4199,]   79   87   83   91   84   87   89   87   85    87 #>  [4200,]   79   87   83   91   84   87   89   87   85    87 #>  [4201,]   81   90   85   93   86   90   92   90   86    88 #>  [4202,]   81   90   85   93   86   91   93   91   87    89 #>  [4203,]   80   89   86   94   87   88   90   88   88    90 #>  [4204,]   81   90   85   93   86   91   93   91   87    89 #>  [4205,]   81   90   85   93   86   91   93   91   87    89 #>  [4206,]   81   90   85   93   86   90   92   90   86    88 #>  [4207,]   81   90   85   93   86   91   93   91   87    89 #>  [4208,]   81   90   85   93   86   91   93   91   87    89 #>  [4209,]   81   90   85   93   86   91   93   91   87    89 #>  [4210,]   81   90   85   93   86   91   93   91   87    89 #>  [4211,]   80   89   87   95   88   89   91   89   88    90 #>  [4212,]   80   89   86   94   87   88   90   88   88    90 #>  [4213,]   81   90   85   93   86   91   93   91   87    89 #>  [4214,]   80   89   87   95   88   89   91   89   88    90 #>  [4215,]   81   90   85   93   86   91   93   91   87    89 #>  [4216,]   81   90   85   93   86   90   92   90   86    88 #>  [4217,]   81   90   85   93   86   91   93   91   87    89 #>  [4218,]   81   90   85   93   86   91   93   91   87    89 #>  [4219,]   81   90   85   93   86   90   92   90   86    88 #>  [4220,]   80   89   87   95   88   89   91   89   88    90 #>  [4221,]   81   90   85   93   86   91   93   91   87    89 #>  [4222,]   80   89   87   95   88   89   91   89   88    90 #>  [4223,]   81   90   85   93   86   91   93   91   87    89 #>  [4224,]   81   90   85   93   86   91   93   91   87    89 #>  [4225,]   81   90   85   93   86   91   93   91   87    89 #>  [4226,]   80   89   87   95   88   89   91   89   88    90 #>  [4227,]   81   90   85   93   86   91   93   91   87    89 #>  [4228,]   81   90   85   93   86   90   92   90   86    88 #>  [4229,]   80   89   87   95   88   89   91   89   88    90 #>  [4230,]   81   90   85   93   86   91   93   91   87    89 #>  [4231,]   81   90   85   93   86   91   93   91   87    89 #>  [4232,]   80   89   86   94   87   88   90   88   88    90 #>  [4233,]   81   90   85   93   86   91   93   91   87    89 #>  [4234,]   81   90   85   93   86   90   92   90   86    88 #>  [4235,]   81   90   85   93   86   90   92   90   86    88 #>  [4236,]   80   89   87   95   88   89   91   89   88    90 #>  [4237,]   81   90   85   93   86   90   92   90   86    88 #>  [4238,]   81   90   85   93   86   90   92   90   86    88 #>  [4239,]   81   90   85   93   86   91   93   91   87    89 #>  [4240,]   80   89   86   94   87   88   90   88   88    90 #>  [4241,]   80   89   87   95   88   89   91   89   88    90 #>  [4242,]   80   89   87   95   88   89   91   89   88    90 #>  [4243,]   81   90   85   93   86   91   93   91   87    89 #>  [4244,]   81   90   85   93   86   91   93   91   87    89 #>  [4245,]   81   90   85   93   86   90   92   90   86    88 #>  [4246,]   81   90   85   93   86   91   93   91   87    89 #>  [4247,]   81   90   85   93   86   91   93   91   87    89 #>  [4248,]   80   89   87   95   88   89   91   89   88    90 #>  [4249,]   81   90   85   93   86   90   92   90   86    88 #>  [4250,]   81   90   85   93   86   91   93   91   87    89 #>  [4251,]   80   89   87   95   88   89   91   89   88    90 #>  [4252,]   81   90   85   93   86   90   92   90   86    88 #>  [4253,]   81   90   85   93   86   91   93   91   87    89 #>  [4254,]   80   89   87   95   88   89   91   89   88    90 #>  [4255,]   81   90   85   93   86   91   93   91   87    89 #>  [4256,]   81   90   85   93   86   90   92   90   86    88 #>  [4257,]   81   90   85   93   86   91   93   91   87    89 #>  [4258,]   81   90   85   93   86   91   93   91   87    89 #>  [4259,]   81   90   85   93   86   90   92   90   86    88 #>  [4260,]   80   89   86   94   87   88   90   88   88    90 #>  [4261,]   81   90   85   93   86   91   93   91   87    89 #>  [4262,]   80   89   87   95   88   89   91   89   88    90 #>  [4263,]   81   90   85   93   86   91   93   91   87    89 #>  [4264,]   81   90   85   93   86   90   92   90   86    88 #>  [4265,]   81   90   85   93   86   90   92   90   86    88 #>  [4266,]   80   89   87   95   88   89   91   89   88    90 #>  [4267,]   81   90   85   93   86   91   93   91   87    89 #>  [4268,]   80   89   86   94   87   88   90   88   88    90 #>  [4269,]   80   89   87   95   88   89   91   89   88    90 #>  [4270,]   81   90   85   93   86   91   93   91   87    89 #>  [4271,]   81   90   85   93   86   91   93   91   87    89 #>  [4272,]   81   90   85   93   86   90   92   90   86    88 #>  [4273,]   81   90   85   93   86   90   92   90   86    88 #>  [4274,]   81   90   85   93   86   91   93   91   87    89 #>  [4275,]   81   90   85   93   86   91   93   91   87    89 #>  [4276,]   81   90   85   93   86   91   93   91   87    89 #>  [4277,]   81   90   85   93   86   90   92   90   86    88 #>  [4278,]   81   90   85   93   86   91   93   91   87    89 #>  [4279,]   81   90   85   93   86   90   92   90   86    88 #>  [4280,]   80   89   86   94   87   88   90   88   88    90 #>  [4281,]   80   89   87   95   88   89   91   89   88    90 #>  [4282,]   81   90   85   93   86   91   93   91   87    89 #>  [4283,]   80   89   87   95   88   89   91   89   88    90 #>  [4284,]   81   90   85   93   86   91   93   91   87    89 #>  [4285,]   81   90   85   93   86   91   93   91   87    89 #>  [4286,]   81   90   85   93   86   91   93   91   87    89 #>  [4287,]   81   90   85   93   86   91   93   91   87    89 #>  [4288,]   81   90   85   93   86   91   93   91   87    89 #>  [4289,]   80   89   87   95   88   89   91   89   88    90 #>  [4290,]   81   90   85   93   86   91   93   91   87    89 #>  [4291,]   80   89   87   95   88   89   91   89   88    90 #>  [4292,]   81   90   85   93   86   91   93   91   87    89 #>  [4293,]   81   90   85   93   86   91   93   91   87    89 #>  [4294,]   81   90   85   93   86   90   92   90   86    88 #>  [4295,]   81   90   85   93   86   91   93   91   87    89 #>  [4296,]   81   90   85   93   86   90   92   90   86    88 #>  [4297,]   81   90   85   93   86   90   92   90   86    88 #>  [4298,]   81   90   85   93   86   91   93   91   87    89 #>  [4299,]   81   90   85   93   86   91   93   91   87    89 #>  [4300,]   81   90   85   93   86   90   92   90   86    88 #>  [4301,]   83   92   89   96   89   93   95   93   90    92 #>  [4302,]   82   91   88   96   89   93   95   93   90    92 #>  [4303,]   82   91   88   96   89   93   95   93   90    92 #>  [4304,]   83   92   89   96   89   92   94   92   89    91 #>  [4305,]   82   91   88   96   89   93   95   93   90    92 #>  [4306,]   82   91   88   96   89   93   95   93   90    92 #>  [4307,]   83   92   89   96   89   93   95   93   90    92 #>  [4308,]   82   91   88   96   89   92   94   92   89    91 #>  [4309,]   83   92   89   96   89   92   94   92   89    91 #>  [4310,]   83   92   89   96   89   93   95   93   90    92 #>  [4311,]   82   91   88   96   89   93   95   93   90    92 #>  [4312,]   82   91   88   96   89   93   95   93   90    92 #>  [4313,]   83   92   89   96   89   93   95   93   90    92 #>  [4314,]   83   92   89   96   89   93   95   93   90    92 #>  [4315,]   82   91   88   96   89   93   95   93   90    92 #>  [4316,]   83   92   89   96   89   93   95   93   90    92 #>  [4317,]   82   91   88   96   89   92   94   92   89    91 #>  [4318,]   82   91   88   96   89   93   95   93   90    92 #>  [4319,]   82   91   88   96   89   93   95   93   90    92 #>  [4320,]   83   92   89   96   89   93   95   93   90    92 #>  [4321,]   82   91   88   96   89   93   95   93   90    92 #>  [4322,]   83   92   89   96   89   92   94   92   89    91 #>  [4323,]   82   91   88   96   89   93   95   93   90    92 #>  [4324,]   83   92   89   96   89   93   95   93   90    92 #>  [4325,]   83   92   89   96   89   93   95   93   90    92 #>  [4326,]   82   91   88   96   89   93   95   93   90    92 #>  [4327,]   82   91   88   96   89   92   94   92   89    91 #>  [4328,]   83   92   89   96   89   93   95   93   90    92 #>  [4329,]   82   91   88   96   89   93   95   93   90    92 #>  [4330,]   82   91   88   96   89   93   95   93   90    92 #>  [4331,]   82   91   88   96   89   93   95   93   90    92 #>  [4332,]   82   91   88   96   89   93   95   93   90    92 #>  [4333,]   82   91   88   96   89   93   95   93   90    92 #>  [4334,]   82   91   88   96   89   93   95   93   90    92 #>  [4335,]   82   91   88   96   89   92   94   92   89    91 #>  [4336,]   83   92   89   96   89   93   95   93   90    92 #>  [4337,]   82   91   88   96   89   93   95   93   90    92 #>  [4338,]   82   91   88   96   89   93   95   93   90    92 #>  [4339,]   83   92   89   96   89   93   95   93   90    92 #>  [4340,]   82   91   88   96   89   93   95   93   90    92 #>  [4341,]   82   91   88   96   89   93   95   93   90    92 #>  [4342,]   82   91   88   96   89   93   95   93   90    92 #>  [4343,]   82   91   88   96   89   93   95   93   90    92 #>  [4344,]   82   91   88   96   89   92   94   92   89    91 #>  [4345,]   83   92   89   96   89   93   95   93   90    92 #>  [4346,]   82   91   88   96   89   93   95   93   90    92 #>  [4347,]   82   91   88   96   89   93   95   93   90    92 #>  [4348,]   82   91   88   96   89   93   95   93   90    92 #>  [4349,]   83   92   89   96   89   93   95   93   90    92 #>  [4350,]   83   92   89   96   89   93   95   93   90    92 #>  [4351,]   82   91   88   96   89   93   95   93   90    92 #>  [4352,]   83   92   89   96   89   92   94   92   89    91 #>  [4353,]   83   92   89   96   89   93   95   93   90    92 #>  [4354,]   83   92   89   96   89   93   95   93   90    92 #>  [4355,]   83   92   89   96   89   93   95   93   90    92 #>  [4356,]   82   91   88   96   89   93   95   93   90    92 #>  [4357,]   83   92   89   96   89   93   95   93   90    92 #>  [4358,]   83   92   89   96   89   92   94   92   89    91 #>  [4359,]   83   92   89   96   89   93   95   93   90    92 #>  [4360,]   82   91   88   96   89   93   95   93   90    92 #>  [4361,]   82   91   88   96   89   93   95   93   90    92 #>  [4362,]   82   91   88   96   89   93   95   93   90    92 #>  [4363,]   82   91   88   96   89   93   95   93   90    92 #>  [4364,]   82   91   88   96   89   93   95   93   90    92 #>  [4365,]   82   91   88   96   89   93   95   93   90    92 #>  [4366,]   82   91   88   96   89   92   94   92   89    91 #>  [4367,]   83   92   89   96   89   93   95   93   90    92 #>  [4368,]   82   91   88   96   89   93   95   93   90    92 #>  [4369,]   82   91   88   96   89   93   95   93   90    92 #>  [4370,]   82   91   88   96   89   93   95   93   90    92 #>  [4371,]   82   91   88   96   89   93   95   93   90    92 #>  [4372,]   83   92   89   96   89   93   95   93   90    92 #>  [4373,]   83   92   89   96   89   93   95   93   90    92 #>  [4374,]   82   91   88   96   89   93   95   93   90    92 #>  [4375,]   82   91   88   96   89   93   95   93   90    92 #>  [4376,]   83   92   89   96   89   93   95   93   90    92 #>  [4377,]   82   91   88   96   89   93   95   93   90    92 #>  [4378,]   82   91   88   96   89   93   95   93   90    92 #>  [4379,]   82   91   88   96   89   93   95   93   90    92 #>  [4380,]   82   91   88   96   89   93   95   93   90    92 #>  [4381,]   82   91   88   96   89   92   94   92   89    91 #>  [4382,]   82   91   88   96   89   92   94   92   89    91 #>  [4383,]   82   91   88   96   89   93   95   93   90    92 #>  [4384,]   82   91   88   96   89   93   95   93   90    92 #>  [4385,]   83   92   89   96   89   93   95   93   90    92 #>  [4386,]   83   92   89   96   89   93   95   93   90    92 #>  [4387,]   83   92   89   96   89   92   94   92   89    91 #>  [4388,]   83   92   89   96   89   93   95   93   90    92 #>  [4389,]   82   91   88   96   89   93   95   93   90    92 #>  [4390,]   83   92   89   96   89   92   94   92   89    91 #>  [4391,]   83   92   89   96   89   93   95   93   90    92 #>  [4392,]   82   91   88   96   89   92   94   92   89    91 #>  [4393,]   82   91   88   96   89   93   95   93   90    92 #>  [4394,]   82   91   88   96   89   93   95   93   90    92 #>  [4395,]   82   91   88   96   89   92   94   92   89    91 #>  [4396,]   82   91   88   96   89   93   95   93   90    92 #>  [4397,]   82   91   88   96   89   93   95   93   90    92 #>  [4398,]   82   91   88   96   89   93   95   93   90    92 #>  [4399,]   82   91   88   96   89   92   94   92   89    91 #>  [4400,]   82   91   88   96   89   93   95   93   90    92 #>  [4401,]   85   95   92   98   91   95   97   95   93    94 #>  [4402,]   85   95   92   98   91   95   97   95   93    94 #>  [4403,]   85   95   92   98   91   95   97   95   92    93 #>  [4404,]   85   94   91   98   91   95   97   95   92    93 #>  [4405,]   85   95   92   98   91   95   97   95   92    93 #>  [4406,]   85   95   92   98   91   95   97   95   93    94 #>  [4407,]   85   95   92   98   91   95   97   95   92    93 #>  [4408,]   85   94   91   98   91   95   97   95   92    93 #>  [4409,]   85   94   91   98   91   95   97   95   92    93 #>  [4410,]   85   95   92   98   91   95   97   95   92    93 #>  [4411,]   85   94   91   98   91   95   97   95   93    94 #>  [4412,]   85   95   92   98   91   95   97   95   92    93 #>  [4413,]   85   94   91   98   91   95   97   95   93    94 #>  [4414,]   85   95   92   98   91   95   97   95   93    94 #>  [4415,]   84   93   90   97   90   94   96   94   91    95 #>  [4416,]   85   95   92   98   91   95   97   95   93    94 #>  [4417,]   85   94   91   98   91   95   97   95   93    94 #>  [4418,]   85   95   92   98   91   95   97   95   92    93 #>  [4419,]   85   95   92   98   91   95   97   95   92    93 #>  [4420,]   85   95   92   98   91   95   97   95   92    93 #>  [4421,]   85   95   92   98   91   95   97   95   93    94 #>  [4422,]   85   94   91   98   91   95   97   95   93    94 #>  [4423,]   85   95   92   98   91   95   97   95   92    93 #>  [4424,]   85   95   92   98   91   95   97   95   92    93 #>  [4425,]   85   95   92   98   91   95   97   95   92    93 #>  [4426,]   85   95   92   98   91   95   97   95   93    94 #>  [4427,]   85   94   91   98   91   95   97   95   93    94 #>  [4428,]   85   95   92   98   91   95   97   95   92    93 #>  [4429,]   85   95   92   98   91   95   97   95   93    94 #>  [4430,]   85   94   91   98   91   95   97   95   92    93 #>  [4431,]   84   93   90   97   90   94   96   94   91    96 #>  [4432,]   85   95   92   98   91   95   97   95   92    93 #>  [4433,]   85   95   92   98   91   95   97   95   93    94 #>  [4434,]   84   93   90   97   90   94   96   94   91    96 #>  [4435,]   85   94   91   98   91   95   97   95   93    94 #>  [4436,]   85   95   92   98   91   95   97   95   92    93 #>  [4437,]   85   95   92   98   91   95   97   95   93    94 #>  [4438,]   85   95   92   98   91   95   97   95   92    93 #>  [4439,]   85   95   92   98   91   95   97   95   92    93 #>  [4440,]   85   95   92   98   91   95   97   95   92    93 #>  [4441,]   85   95   92   98   91   95   97   95   93    94 #>  [4442,]   84   93   90   97   90   94   96   94   91    96 #>  [4443,]   84   93   90   97   90   94   96   94   91    95 #>  [4444,]   84   93   90   97   90   94   96   94   91    95 #>  [4445,]   85   95   92   98   91   95   97   95   92    93 #>  [4446,]   85   95   92   98   91   95   97   95   92    93 #>  [4447,]   85   95   92   98   91   95   97   95   93    94 #>  [4448,]   85   95   92   98   91   95   97   95   92    93 #>  [4449,]   85   94   91   98   91   95   97   95   92    93 #>  [4450,]   85   95   92   98   91   95   97   95   93    94 #>  [4451,]   85   95   92   98   91   95   97   95   92    93 #>  [4452,]   85   94   91   98   91   95   97   95   93    94 #>  [4453,]   85   95   92   98   91   95   97   95   92    93 #>  [4454,]   85   94   91   98   91   95   97   95   92    93 #>  [4455,]   85   94   91   98   91   95   97   95   92    93 #>  [4456,]   85   95   92   98   91   95   97   95   92    93 #>  [4457,]   85   95   92   98   91   95   97   95   92    93 #>  [4458,]   85   94   91   98   91   95   97   95   93    94 #>  [4459,]   85   95   92   98   91   95   97   95   93    94 #>  [4460,]   85   95   92   98   91   95   97   95   92    93 #>  [4461,]   85   95   92   98   91   95   97   95   93    94 #>  [4462,]   85   95   92   98   91   95   97   95   92    93 #>  [4463,]   84   93   90   97   90   94   96   94   91    95 #>  [4464,]   85   95   92   98   91   95   97   95   92    93 #>  [4465,]   85   95   92   98   91   95   97   95   92    93 #>  [4466,]   85   94   91   98   91   95   97   95   92    93 #>  [4467,]   85   95   92   98   91   95   97   95   92    93 #>  [4468,]   85   95   92   98   91   95   97   95   93    94 #>  [4469,]   85   94   91   98   91   95   97   95   92    93 #>  [4470,]   85   95   92   98   91   95   97   95   93    94 #>  [4471,]   85   95   92   98   91   95   97   95   93    94 #>  [4472,]   85   95   92   98   91   95   97   95   92    93 #>  [4473,]   85   95   92   98   91   95   97   95   93    94 #>  [4474,]   85   95   92   98   91   95   97   95   92    93 #>  [4475,]   84   93   90   97   90   94   96   94   91    96 #>  [4476,]   85   95   92   98   91   95   97   95   93    94 #>  [4477,]   85   95   92   98   91   95   97   95   93    94 #>  [4478,]   84   93   90   97   90   94   96   94   91    96 #>  [4479,]   85   94   91   98   91   95   97   95   93    94 #>  [4480,]   85   94   91   98   91   95   97   95   92    93 #>  [4481,]   85   94   91   98   91   95   97   95   93    94 #>  [4482,]   85   94   91   98   91   95   97   95   92    93 #>  [4483,]   85   94   91   98   91   95   97   95   93    94 #>  [4484,]   85   95   92   98   91   95   97   95   93    94 #>  [4485,]   85   95   92   98   91   95   97   95   92    93 #>  [4486,]   85   95   92   98   91   95   97   95   93    94 #>  [4487,]   85   94   91   98   91   95   97   95   93    94 #>  [4488,]   85   94   91   98   91   95   97   95   92    93 #>  [4489,]   85   94   91   98   91   95   97   95   92    93 #>  [4490,]   85   94   91   98   91   95   97   95   93    94 #>  [4491,]   85   95   92   98   91   95   97   95   92    93 #>  [4492,]   85   94   91   98   91   95   97   95   92    93 #>  [4493,]   85   95   92   98   91   95   97   95   93    94 #>  [4494,]   85   95   92   98   91   95   97   95   93    94 #>  [4495,]   84   93   90   97   90   94   96   94   91    95 #>  [4496,]   85   95   92   98   91   95   97   95   93    94 #>  [4497,]   85   95   92   98   91   95   97   95   92    93 #>  [4498,]   85   95   92   98   91   95   97   95   92    93 #>  [4499,]   85   94   91   98   91   95   97   95   93    94 #>  [4500,]   85   95   92   98   91   95   97   95   93    94 #>  [4501,]   87   97   94  100   93   97   99   97   95    98 #>  [4502,]   87   97   94  100   93   97   99   97   95    98 #>  [4503,]   87   97   94  100   93   97   99   97   95    98 #>  [4504,]   86   96   93   99   92   96   98   96   94    97 #>  [4505,]   87   97   94  100   93   97   99   97   95    98 #>  [4506,]   87   97   94  100   93   97   99   97   95    98 #>  [4507,]   87   97   94  100   93   97   99   97   95    98 #>  [4508,]   86   96   93   99   92   96   98   96   94    97 #>  [4509,]   86   96   93   99   92   96   98   96   94    97 #>  [4510,]   86   96   93   99   92   96   98   96   94    97 #>  [4511,]   87   97   94  100   93   97   99   97   95    98 #>  [4512,]   87   97   94  100   93   97   99   97   95    98 #>  [4513,]   87   97   94  100   93   97   99   97   95    98 #>  [4514,]   87   97   94  100   93   97   99   97   95    98 #>  [4515,]   87   97   94  100   93   97   99   97   95    98 #>  [4516,]   87   97   94  100   93   97   99   97   95    98 #>  [4517,]   87   97   94  100   93   97   99   97   95    98 #>  [4518,]   87   97   94  100   93   97   99   97   95    98 #>  [4519,]   87   97   94  100   93   97   99   97   95    98 #>  [4520,]   87   97   94  100   93   97   99   97   95    98 #>  [4521,]   87   97   94  100   93   97   99   97   95    98 #>  [4522,]   87   97   94  100   93   97   99   97   95    98 #>  [4523,]   87   97   94  100   93   97   99   97   95    98 #>  [4524,]   87   97   94  100   93   97   99   97   95    98 #>  [4525,]   87   97   94  100   93   97   99   97   95    98 #>  [4526,]   87   97   94  100   93   97   99   97   95    98 #>  [4527,]   87   97   94  100   93   97   99   97   95    98 #>  [4528,]   87   97   94  100   93   97   99   97   95    98 #>  [4529,]   87   97   94  100   93   97   99   97   95    98 #>  [4530,]   87   97   94  100   93   97   99   97   95    98 #>  [4531,]   87   97   94  100   93   97   99   97   95    98 #>  [4532,]   87   97   94  100   93   97   99   97   95    98 #>  [4533,]   87   97   94  100   93   97   99   97   95    98 #>  [4534,]   87   97   94  100   93   97   99   97   95    98 #>  [4535,]   87   97   94  100   93   97   99   97   95    98 #>  [4536,]   87   97   94  100   93   97   99   97   95    98 #>  [4537,]   87   97   94  100   93   97   99   97   95    98 #>  [4538,]   87   97   94  100   93   97   99   97   95    98 #>  [4539,]   87   97   94  100   93   97   99   97   95    98 #>  [4540,]   87   97   94  100   93   97   99   97   95    98 #>  [4541,]   87   97   94  100   93   97   99   97   95    98 #>  [4542,]   87   97   94  100   93   97   99   97   95    98 #>  [4543,]   86   96   93   99   92   96   98   96   94    97 #>  [4544,]   87   97   94  100   93   97   99   97   95    98 #>  [4545,]   87   97   94  100   93   97   99   97   95    98 #>  [4546,]   87   97   94  100   93   97   99   97   95    98 #>  [4547,]   87   97   94  100   93   97   99   97   95    98 #>  [4548,]   87   97   94  100   93   97   99   97   95    98 #>  [4549,]   87   97   94  100   93   97   99   97   95    98 #>  [4550,]   87   97   94  100   93   97   99   97   95    98 #>  [4551,]   86   96   93   99   92   96   98   96   94    97 #>  [4552,]   87   97   94  100   93   97   99   97   95    98 #>  [4553,]   87   97   94  100   93   97   99   97   95    98 #>  [4554,]   87   97   94  100   93   97   99   97   95    98 #>  [4555,]   87   97   94  100   93   97   99   97   95    98 #>  [4556,]   87   97   94  100   93   97   99   97   95    98 #>  [4557,]   87   97   94  100   93   97   99   97   95    98 #>  [4558,]   87   97   94  100   93   97   99   97   95    98 #>  [4559,]   87   97   94  100   93   97   99   97   95    98 #>  [4560,]   86   96   93   99   92   96   98   96   94    97 #>  [4561,]   87   97   94  100   93   97   99   97   95    98 #>  [4562,]   87   97   94  100   93   97   99   97   95    98 #>  [4563,]   87   97   94  100   93   97   99   97   95    98 #>  [4564,]   87   97   94  100   93   97   99   97   95    98 #>  [4565,]   87   97   94  100   93   97   99   97   95    98 #>  [4566,]   87   97   94  100   93   97   99   97   95    98 #>  [4567,]   87   97   94  100   93   97   99   97   95    98 #>  [4568,]   87   97   94  100   93   97   99   97   95    98 #>  [4569,]   87   97   94  100   93   97   99   97   95    98 #>  [4570,]   87   97   94  100   93   97   99   97   95    98 #>  [4571,]   87   97   94  100   93   97   99   97   95    98 #>  [4572,]   87   97   94  100   93   97   99   97   95    98 #>  [4573,]   87   97   94  100   93   97   99   97   95    98 #>  [4574,]   87   97   94  100   93   97   99   97   95    98 #>  [4575,]   87   97   94  100   93   97   99   97   95    98 #>  [4576,]   87   97   94  100   93   97   99   97   95    98 #>  [4577,]   87   97   94  100   93   97   99   97   95    98 #>  [4578,]   87   97   94  100   93   97   99   97   95    98 #>  [4579,]   87   97   94  100   93   97   99   97   95    98 #>  [4580,]   87   97   94  100   93   97   99   97   95    98 #>  [4581,]   87   97   94  100   93   97   99   97   95    98 #>  [4582,]   87   97   94  100   93   97   99   97   95    98 #>  [4583,]   87   97   94  100   93   97   99   97   95    98 #>  [4584,]   87   97   94  100   93   97   99   97   95    98 #>  [4585,]   86   96   93   99   92   96   98   96   94    97 #>  [4586,]   87   97   94  100   93   97   99   97   95    98 #>  [4587,]   87   97   94  100   93   97   99   97   95    98 #>  [4588,]   87   97   94  100   93   97   99   97   95    98 #>  [4589,]   87   97   94  100   93   97   99   97   95    98 #>  [4590,]   87   97   94  100   93   97   99   97   95    98 #>  [4591,]   86   96   93   99   92   96   98   96   94    97 #>  [4592,]   87   97   94  100   93   97   99   97   95    98 #>  [4593,]   87   97   94  100   93   97   99   97   95    98 #>  [4594,]   87   97   94  100   93   97   99   97   95    98 #>  [4595,]   86   96   93   99   92   96   98   96   94    97 #>  [4596,]   87   97   94  100   93   97   99   97   95    98 #>  [4597,]   87   97   94  100   93   97   99   97   95    98 #>  [4598,]   87   97   94  100   93   97   99   97   95    98 #>  [4599,]   87   97   94  100   93   97   99   97   95    98 #>  [4600,]   87   97   94  100   93   97   99   97   95    98 #>  [4601,]   88   98   95  101   94   98  101   99   97   100 #>  [4602,]   88   98   95  101   94   98  101   99   97   100 #>  [4603,]   88   98   95  101   94   98  100   98   96    99 #>  [4604,]   88   99   96  102   95   98  101   99   98   100 #>  [4605,]   88   98   95  101   94   98  101   99   97   100 #>  [4606,]   88   99   96  102   95   98  101   99   97   100 #>  [4607,]   88   98   95  101   94   98  100   98   96    99 #>  [4608,]   88   98   95  101   94   98  101   99   97   100 #>  [4609,]   88   99   96  102   95   98  101   99   97   100 #>  [4610,]   88   99   96  102   95   98  101   99   98   100 #>  [4611,]   88   99   96  102   95   98  101   99   97   100 #>  [4612,]   88   99   96  102   95   98  101   99   97   100 #>  [4613,]   88   98   95  101   94   98  101   99   97   100 #>  [4614,]   88   99   96  102   95   98  101   99   97   100 #>  [4615,]   88   99   96  102   95   98  101   99   98   100 #>  [4616,]   88   98   95  101   94   98  101   99   98   100 #>  [4617,]   88   98   95  101   94   98  101   99   97   100 #>  [4618,]   88   99   96  102   95   98  101   99   98   100 #>  [4619,]   88   99   96  102   95   98  101   99   97   100 #>  [4620,]   88   98   95  101   94   98  101   99   97   100 #>  [4621,]   88   99   96  102   95   98  101   99   98   100 #>  [4622,]   88   98   95  101   94   98  101   99   97   100 #>  [4623,]   88   98   95  101   94   98  101   99   98   100 #>  [4624,]   88   98   95  101   94   98  101   99   97   100 #>  [4625,]   88   98   95  101   94   98  101   99   98   100 #>  [4626,]   88   99   96  102   95   98  101   99   97   100 #>  [4627,]   88   99   96  102   95   98  101   99   98   100 #>  [4628,]   88   98   95  101   94   98  101   99   97   100 #>  [4629,]   88   98   95  101   94   98  101   99   97   100 #>  [4630,]   88   99   96  102   95   98  101   99   97   100 #>  [4631,]   88   99   96  102   95   98  101   99   97   100 #>  [4632,]   88   99   96  102   95   98  101   99   97   100 #>  [4633,]   88   99   96  102   95   98  101   99   97   100 #>  [4634,]   88   98   95  101   94   98  101   99   97   100 #>  [4635,]   88   98   95  101   94   98  101   99   97   100 #>  [4636,]   88   99   96  102   95   98  101   99   97   100 #>  [4637,]   88   98   95  101   94   98  101   99   97   100 #>  [4638,]   88   99   96  102   95   98  101   99   97   100 #>  [4639,]   88   98   95  101   94   98  101   99   98   100 #>  [4640,]   88   98   95  101   94   98  101   99   97   100 #>  [4641,]   88   99   96  102   95   98  101   99   97   100 #>  [4642,]   88   99   96  102   95   98  101   99   97   100 #>  [4643,]   88   98   95  101   94   98  101   99   98   100 #>  [4644,]   88   98   95  101   94   98  101   99   97   100 #>  [4645,]   88   98   95  101   94   98  101   99   98   100 #>  [4646,]   88   98   95  101   94   98  101   99   97   100 #>  [4647,]   88   98   95  101   94   98  101   99   97   100 #>  [4648,]   88   99   96  102   95   98  101   99   97   100 #>  [4649,]   88   98   95  101   94   98  100   98   96    99 #>  [4650,]   88   98   95  101   94   98  101   99   97   100 #>  [4651,]   88   98   95  101   94   98  101   99   97   100 #>  [4652,]   88   98   95  101   94   98  101   99   97   100 #>  [4653,]   88   98   95  101   94   98  100   98   96    99 #>  [4654,]   88   98   95  101   94   98  101   99   97   100 #>  [4655,]   88   98   95  101   94   98  100   98   96    99 #>  [4656,]   88   98   95  101   94   98  100   98   96    99 #>  [4657,]   88   98   95  101   94   98  101   99   97   100 #>  [4658,]   88   99   96  102   95   98  101   99   97   100 #>  [4659,]   88   98   95  101   94   98  101   99   97   100 #>  [4660,]   88   99   96  102   95   98  101   99   97   100 #>  [4661,]   88   99   96  102   95   98  101   99   98   100 #>  [4662,]   88   99   96  102   95   98  101   99   97   100 #>  [4663,]   88   98   95  101   94   98  101   99   97   100 #>  [4664,]   88   99   96  102   95   98  101   99   97   100 #>  [4665,]   88   98   95  101   94   98  101   99   97   100 #>  [4666,]   88   98   95  101   94   98  100   98   96    99 #>  [4667,]   88   98   95  101   94   98  101   99   97   100 #>  [4668,]   88   99   96  102   95   98  101   99   97   100 #>  [4669,]   88   99   96  102   95   98  101   99   97   100 #>  [4670,]   88   98   95  101   94   98  101   99   97   100 #>  [4671,]   88   98   95  101   94   98  101   99   97   100 #>  [4672,]   88   98   95  101   94   98  101   99   98   100 #>  [4673,]   88   98   95  101   94   98  101   99   98   100 #>  [4674,]   88   99   96  102   95   98  101   99   98   100 #>  [4675,]   88   99   96  102   95   98  101   99   98   100 #>  [4676,]   88   98   95  101   94   98  101   99   98   100 #>  [4677,]   88   98   95  101   94   98  101   99   98   100 #>  [4678,]   88   98   95  101   94   98  101   99   97   100 #>  [4679,]   88   98   95  101   94   98  101   99   97   100 #>  [4680,]   88   98   95  101   94   98  101   99   97   100 #>  [4681,]   88   98   95  101   94   98  101   99   97   100 #>  [4682,]   88   99   96  102   95   98  101   99   97   100 #>  [4683,]   88   98   95  101   94   98  101   99   97   100 #>  [4684,]   88   98   95  101   94   98  101   99   98   100 #>  [4685,]   88   99   96  102   95   98  101   99   97   100 #>  [4686,]   88   98   95  101   94   98  101   99   97   100 #>  [4687,]   88   98   95  101   94   98  101   99   97   100 #>  [4688,]   88   98   95  101   94   98  101   99   97   100 #>  [4689,]   88   98   95  101   94   98  101   99   97   100 #>  [4690,]   88   98   95  101   94   98  101   99   97   100 #>  [4691,]   88   98   95  101   94   98  101   99   97   100 #>  [4692,]   88   99   96  102   95   98  101   99   97   100 #>  [4693,]   88   99   96  102   95   98  101   99   97   100 #>  [4694,]   88   98   95  101   94   98  101   99   98   100 #>  [4695,]   88   98   95  101   94   98  101   99   98   100 #>  [4696,]   88   99   96  102   95   98  101   99   97   100 #>  [4697,]   88   99   96  102   95   98  101   99   97   100 #>  [4698,]   88   98   95  101   94   98  101   99   97   100 #>  [4699,]   88   99   96  102   95   98  101   99   97   100 #>  [4700,]   88   98   95  101   94   98  101   99   98   100 #>  [4701,]   90  101   98  103   96   99  102  100   99   101 #>  [4702,]   89  100   97  105   98  100  103  101  100   102 #>  [4703,]   89  100   97  105   98  100  103  101  100   102 #>  [4704,]   89  100   97  104   97  100  103  101  100   102 #>  [4705,]   89  100   97  105   98  100  103  101  100   102 #>  [4706,]   89  100   97  105   98  100  103  101  100   102 #>  [4707,]   89  100   97  105   98  100  103  101  100   102 #>  [4708,]   89  100   97  104   97  100  103  101  100   102 #>  [4709,]   90  101   98  103   96   99  102  100   99   101 #>  [4710,]   89  100   97  105   98  100  103  101  100   102 #>  [4711,]   90  101   98  103   96   99  102  100   99   101 #>  [4712,]   89  100   97  105   98  100  103  101  100   102 #>  [4713,]   90  101   98  103   96   99  102  100   99   101 #>  [4714,]   89  100   97  105   98  100  103  101  100   102 #>  [4715,]   89  100   97  105   98  100  103  101  100   102 #>  [4716,]   89  100   97  105   98  100  103  101  100   102 #>  [4717,]   90  101   98  103   96   99  102  100   99   101 #>  [4718,]   90  101   98  103   96   99  102  100   99   101 #>  [4719,]   89  100   97  105   98  100  103  101  100   102 #>  [4720,]   90  101   98  103   96   99  102  100   99   101 #>  [4721,]   89  100   97  105   98  100  103  101  100   102 #>  [4722,]   89  100   97  104   97  100  103  101  100   102 #>  [4723,]   89  100   97  105   98  100  103  101  100   102 #>  [4724,]   89  100   97  105   98  100  103  101  100   102 #>  [4725,]   89  100   97  105   98  100  103  101  100   102 #>  [4726,]   89  100   97  105   98  100  103  101  100   102 #>  [4727,]   90  101   98  103   96   99  102  100   99   101 #>  [4728,]   90  101   98  103   96   99  102  100   99   101 #>  [4729,]   90  101   98  103   96   99  102  100   99   101 #>  [4730,]   89  100   97  105   98  100  103  101  100   102 #>  [4731,]   89  100   97  105   98  100  103  101  100   102 #>  [4732,]   89  100   97  105   98  100  103  101  100   102 #>  [4733,]   90  101   98  103   96   99  102  100   99   101 #>  [4734,]   89  100   97  105   98  100  103  101  100   102 #>  [4735,]   89  100   97  104   97  100  103  101  100   102 #>  [4736,]   90  101   98  103   96   99  102  100   99   101 #>  [4737,]   89  100   97  105   98  100  103  101  100   102 #>  [4738,]   90  101   98  103   96   99  102  100   99   101 #>  [4739,]   90  101   98  103   96   99  102  100   99   101 #>  [4740,]   89  100   97  105   98  100  103  101  100   102 #>  [4741,]   89  100   97  105   98  100  103  101  100   102 #>  [4742,]   90  101   98  103   96   99  102  100   99   101 #>  [4743,]   89  100   97  105   98  100  103  101  100   102 #>  [4744,]   89  100   97  104   97  100  103  101  100   102 #>  [4745,]   89  100   97  105   98  100  103  101  100   102 #>  [4746,]   89  100   97  105   98  100  103  101  100   102 #>  [4747,]   89  100   97  105   98  100  103  101  100   102 #>  [4748,]   89  100   97  105   98  100  103  101  100   102 #>  [4749,]   89  100   97  105   98  100  103  101  100   102 #>  [4750,]   89  100   97  105   98  100  103  101  100   102 #>  [4751,]   90  101   98  103   96   99  102  100   99   101 #>  [4752,]   89  100   97  104   97  100  103  101  100   102 #>  [4753,]   90  101   98  103   96   99  102  100   99   101 #>  [4754,]   90  101   98  103   96   99  102  100   99   101 #>  [4755,]   89  100   97  105   98  100  103  101  100   102 #>  [4756,]   90  101   98  103   96   99  102  100   99   101 #>  [4757,]   89  100   97  105   98  100  103  101  100   102 #>  [4758,]   90  101   98  103   96   99  102  100   99   101 #>  [4759,]   89  100   97  105   98  100  103  101  100   102 #>  [4760,]   89  100   97  105   98  100  103  101  100   102 #>  [4761,]   89  100   97  105   98  100  103  101  100   102 #>  [4762,]   90  101   98  103   96   99  102  100   99   101 #>  [4763,]   89  100   97  105   98  100  103  101  100   102 #>  [4764,]   89  100   97  105   98  100  103  101  100   102 #>  [4765,]   90  101   98  103   96   99  102  100   99   101 #>  [4766,]   90  101   98  103   96   99  102  100   99   101 #>  [4767,]   89  100   97  105   98  100  103  101  100   102 #>  [4768,]   89  100   97  105   98  100  103  101  100   102 #>  [4769,]   89  100   97  105   98  100  103  101  100   102 #>  [4770,]   89  100   97  105   98  100  103  101  100   102 #>  [4771,]   89  100   97  105   98  100  103  101  100   102 #>  [4772,]   89  100   97  105   98  100  103  101  100   102 #>  [4773,]   89  100   97  105   98  100  103  101  100   102 #>  [4774,]   89  100   97  105   98  100  103  101  100   102 #>  [4775,]   89  100   97  105   98  100  103  101  100   102 #>  [4776,]   89  100   97  105   98  100  103  101  100   102 #>  [4777,]   90  101   98  103   96   99  102  100   99   101 #>  [4778,]   89  100   97  105   98  100  103  101  100   102 #>  [4779,]   90  101   98  103   96   99  102  100   99   101 #>  [4780,]   89  100   97  105   98  100  103  101  100   102 #>  [4781,]   89  100   97  104   97  100  103  101  100   102 #>  [4782,]   90  101   98  103   96   99  102  100   99   101 #>  [4783,]   90  101   98  103   96   99  102  100   99   101 #>  [4784,]   90  101   98  103   96   99  102  100   99   101 #>  [4785,]   90  101   98  103   96   99  102  100   99   101 #>  [4786,]   89  100   97  105   98  100  103  101  100   102 #>  [4787,]   90  101   98  103   96   99  102  100   99   101 #>  [4788,]   89  100   97  105   98  100  103  101  100   102 #>  [4789,]   90  101   98  103   96   99  102  100   99   101 #>  [4790,]   89  100   97  104   97  100  103  101  100   102 #>  [4791,]   90  101   98  103   96   99  102  100   99   101 #>  [4792,]   89  100   97  104   97  100  103  101  100   102 #>  [4793,]   90  101   98  103   96   99  102  100   99   101 #>  [4794,]   90  101   98  103   96   99  102  100   99   101 #>  [4795,]   89  100   97  104   97  100  103  101  100   102 #>  [4796,]   89  100   97  105   98  100  103  101  100   102 #>  [4797,]   89  100   97  105   98  100  103  101  100   102 #>  [4798,]   89  100   97  105   98  100  103  101  100   102 #>  [4799,]   89  100   97  104   97  100  103  101  100   102 #>  [4800,]   89  100   97  105   98  100  103  101  100   102 #>  [4801,]   91  102   99  106   99  101  104  102  101   103 #>  [4802,]   91  102   99  106   99  101  104  102  101   103 #>  [4803,]   91  102   99  106   99  101  104  102  101   103 #>  [4804,]   91  102   99  106   99  101  104  102  101   103 #>  [4805,]   91  102   99  106   99  101  104  102  101   103 #>  [4806,]   91  102   99  106   99  101  104  102  101   103 #>  [4807,]   91  102   99  106   99  101  104  102  101   103 #>  [4808,]   91  102   99  106   99  101  104  102  101   103 #>  [4809,]   91  102   99  106   99  101  104  102  101   103 #>  [4810,]   91  102   99  106   99  101  104  102  101   103 #>  [4811,]   91  102   99  106   99  101  104  102  101   103 #>  [4812,]   91  102   99  106   99  101  104  102  101   103 #>  [4813,]   91  102   99  106   99  101  104  102  101   103 #>  [4814,]   91  102   99  106   99  101  104  102  101   103 #>  [4815,]   91  102   99  106   99  101  104  102  101   103 #>  [4816,]   91  102   99  106   99  101  104  102  101   103 #>  [4817,]   91  102   99  106   99  101  104  102  101   103 #>  [4818,]   91  102   99  106   99  101  104  102  101   103 #>  [4819,]   91  102   99  106   99  101  104  102  101   103 #>  [4820,]   92  103  100  107  100  102  105  103  102   104 #>  [4821,]   91  102   99  106   99  101  104  102  101   103 #>  [4822,]   91  102   99  106   99  101  104  102  101   103 #>  [4823,]   91  102   99  106   99  101  104  102  101   103 #>  [4824,]   92  103  100  107  100  102  105  103  102   104 #>  [4825,]   91  102   99  106   99  101  104  102  101   103 #>  [4826,]   91  102   99  106   99  101  104  102  101   103 #>  [4827,]   91  102   99  106   99  101  104  102  101   103 #>  [4828,]   92  103  100  107  100  102  105  103  102   104 #>  [4829,]   91  102   99  106   99  101  104  102  101   103 #>  [4830,]   91  102   99  106   99  101  104  102  101   103 #>  [4831,]   91  102   99  106   99  101  104  102  101   103 #>  [4832,]   91  102   99  106   99  101  104  102  101   103 #>  [4833,]   91  102   99  106   99  101  104  102  101   103 #>  [4834,]   91  102   99  106   99  101  104  102  101   103 #>  [4835,]   91  102   99  106   99  101  104  102  101   103 #>  [4836,]   91  102   99  106   99  101  104  102  101   103 #>  [4837,]   91  102   99  106   99  101  104  102  101   103 #>  [4838,]   91  102   99  106   99  101  104  102  101   103 #>  [4839,]   91  102   99  106   99  101  104  102  101   103 #>  [4840,]   91  102   99  106   99  101  104  102  101   103 #>  [4841,]   91  102   99  106   99  101  104  102  101   103 #>  [4842,]   91  102   99  106   99  101  104  102  101   103 #>  [4843,]   91  102   99  106   99  101  104  102  101   103 #>  [4844,]   91  102   99  106   99  101  104  102  101   103 #>  [4845,]   91  102   99  106   99  101  104  102  101   103 #>  [4846,]   91  102   99  106   99  101  104  102  101   103 #>  [4847,]   91  102   99  106   99  101  104  102  101   103 #>  [4848,]   91  102   99  106   99  101  104  102  101   103 #>  [4849,]   91  102   99  106   99  101  104  102  101   103 #>  [4850,]   92  103  100  107  100  102  105  103  102   104 #>  [4851,]   91  102   99  106   99  101  104  102  101   103 #>  [4852,]   92  103  100  107  100  102  105  103  102   104 #>  [4853,]   91  102   99  106   99  101  104  102  101   103 #>  [4854,]   91  102   99  106   99  101  104  102  101   103 #>  [4855,]   91  102   99  106   99  101  104  102  101   103 #>  [4856,]   91  102   99  106   99  101  104  102  101   103 #>  [4857,]   91  102   99  106   99  101  104  102  101   103 #>  [4858,]   91  102   99  106   99  101  104  102  101   103 #>  [4859,]   91  102   99  106   99  101  104  102  101   103 #>  [4860,]   91  102   99  106   99  101  104  102  101   103 #>  [4861,]   91  102   99  106   99  101  104  102  101   103 #>  [4862,]   91  102   99  106   99  101  104  102  101   103 #>  [4863,]   91  102   99  106   99  101  104  102  101   103 #>  [4864,]   91  102   99  106   99  101  104  102  101   103 #>  [4865,]   91  102   99  106   99  101  104  102  101   103 #>  [4866,]   91  102   99  106   99  101  104  102  101   103 #>  [4867,]   91  102   99  106   99  101  104  102  101   103 #>  [4868,]   91  102   99  106   99  101  104  102  101   103 #>  [4869,]   91  102   99  106   99  101  104  102  101   103 #>  [4870,]   91  102   99  106   99  101  104  102  101   103 #>  [4871,]   91  102   99  106   99  101  104  102  101   103 #>  [4872,]   91  102   99  106   99  101  104  102  101   103 #>  [4873,]   91  102   99  106   99  101  104  102  101   103 #>  [4874,]   91  102   99  106   99  101  104  102  101   103 #>  [4875,]   91  102   99  106   99  101  104  102  101   103 #>  [4876,]   92  103  100  107  100  102  105  103  102   104 #>  [4877,]   91  102   99  106   99  101  104  102  101   103 #>  [4878,]   91  102   99  106   99  101  104  102  101   103 #>  [4879,]   91  102   99  106   99  101  104  102  101   103 #>  [4880,]   91  102   99  106   99  101  104  102  101   103 #>  [4881,]   91  102   99  106   99  101  104  102  101   103 #>  [4882,]   91  102   99  106   99  101  104  102  101   103 #>  [4883,]   91  102   99  106   99  101  104  102  101   103 #>  [4884,]   91  102   99  106   99  101  104  102  101   103 #>  [4885,]   91  102   99  106   99  101  104  102  101   103 #>  [4886,]   92  103  100  107  100  102  105  103  102   104 #>  [4887,]   91  102   99  106   99  101  104  102  101   103 #>  [4888,]   91  102   99  106   99  101  104  102  101   103 #>  [4889,]   91  102   99  106   99  101  104  102  101   103 #>  [4890,]   91  102   99  106   99  101  104  102  101   103 #>  [4891,]   91  102   99  106   99  101  104  102  101   103 #>  [4892,]   91  102   99  106   99  101  104  102  101   103 #>  [4893,]   91  102   99  106   99  101  104  102  101   103 #>  [4894,]   91  102   99  106   99  101  104  102  101   103 #>  [4895,]   91  102   99  106   99  101  104  102  101   103 #>  [4896,]   91  102   99  106   99  101  104  102  101   103 #>  [4897,]   91  102   99  106   99  101  104  102  101   103 #>  [4898,]   91  102   99  106   99  101  104  102  101   103 #>  [4899,]   91  102   99  106   99  101  104  102  101   103 #>  [4900,]   91  102   99  106   99  101  104  102  101   103 #>  [4901,]   93  104  101  108  104  105  108  104  103   105 #>  [4902,]   93  104  101  108  104  105  108  104  103   105 #>  [4903,]   93  104  101  108  103  105  108  104  103   105 #>  [4904,]   94  105  102  109  101  103  106  105  104   106 #>  [4905,]   93  104  101  108  104  105  108  104  103   105 #>  [4906,]   93  104  101  108  104  105  108  104  103   105 #>  [4907,]   94  105  102  109  101  103  106  105  104   106 #>  [4908,]   93  104  101  108  104  105  108  104  103   105 #>  [4909,]   93  104  101  108  104  105  108  104  103   105 #>  [4910,]   94  105  102  109  101  103  106  105  104   106 #>  [4911,]   93  104  101  108  104  105  108  104  103   105 #>  [4912,]   93  104  101  108  104  105  108  104  103   105 #>  [4913,]   93  104  101  108  103  105  108  104  103   105 #>  [4914,]   93  104  101  108  104  105  108  104  103   105 #>  [4915,]   94  105  102  109  101  103  106  105  104   106 #>  [4916,]   94  105  102  109  101  103  106  105  104   106 #>  [4917,]   93  104  101  108  104  105  108  104  103   105 #>  [4918,]   94  105  103  110  102  104  107  105  104   106 #>  [4919,]   93  104  101  108  103  105  108  104  103   105 #>  [4920,]   93  104  101  108  104  105  108  104  103   105 #>  [4921,]   94  105  102  109  101  103  106  105  104   106 #>  [4922,]   93  104  101  108  104  105  108  104  103   105 #>  [4923,]   94  105  102  109  101  103  106  105  104   106 #>  [4924,]   93  104  101  108  104  105  108  104  103   105 #>  [4925,]   94  105  102  109  101  103  106  105  104   106 #>  [4926,]   93  104  101  108  104  105  108  104  103   105 #>  [4927,]   94  105  103  110  102  104  107  105  104   106 #>  [4928,]   93  104  101  108  104  105  108  104  103   105 #>  [4929,]   93  104  101  108  104  105  108  104  103   105 #>  [4930,]   93  104  101  108  103  105  108  104  103   105 #>  [4931,]   93  104  101  108  103  105  108  104  103   105 #>  [4932,]   93  104  101  108  104  105  108  104  103   105 #>  [4933,]   93  104  101  108  104  105  108  104  103   105 #>  [4934,]   93  104  101  108  103  105  108  104  103   105 #>  [4935,]   93  104  101  108  103  105  108  104  103   105 #>  [4936,]   93  104  101  108  103  105  108  104  103   105 #>  [4937,]   93  104  101  108  103  105  108  104  103   105 #>  [4938,]   93  104  101  108  104  105  108  104  103   105 #>  [4939,]   94  105  103  110  102  104  107  105  104   106 #>  [4940,]   93  104  101  108  103  105  108  104  103   105 #>  [4941,]   93  104  101  108  104  105  108  104  103   105 #>  [4942,]   93  104  101  108  104  105  108  104  103   105 #>  [4943,]   94  105  102  109  101  103  106  105  104   106 #>  [4944,]   93  104  101  108  104  105  108  104  103   105 #>  [4945,]   94  105  102  109  101  103  106  105  104   106 #>  [4946,]   93  104  101  108  104  105  108  104  103   105 #>  [4947,]   93  104  101  108  103  105  108  104  103   105 #>  [4948,]   93  104  101  108  104  105  108  104  103   105 #>  [4949,]   93  104  101  108  103  105  108  104  103   105 #>  [4950,]   93  104  101  108  104  105  108  104  103   105 #>  [4951,]   93  104  101  108  104  105  108  104  103   105 #>  [4952,]   93  104  101  108  104  105  108  104  103   105 #>  [4953,]   94  105  103  110  102  104  107  105  104   106 #>  [4954,]   93  104  101  108  103  105  108  104  103   105 #>  [4955,]   93  104  101  108  104  105  108  104  103   105 #>  [4956,]   93  104  101  108  104  105  108  104  103   105 #>  [4957,]   93  104  101  108  104  105  108  104  103   105 #>  [4958,]   93  104  101  108  104  105  108  104  103   105 #>  [4959,]   93  104  101  108  104  105  108  104  103   105 #>  [4960,]   93  104  101  108  104  105  108  104  103   105 #>  [4961,]   94  105  102  109  101  103  106  105  104   106 #>  [4962,]   93  104  101  108  103  105  108  104  103   105 #>  [4963,]   93  104  101  108  104  105  108  104  103   105 #>  [4964,]   93  104  101  108  104  105  108  104  103   105 #>  [4965,]   93  104  101  108  104  105  108  104  103   105 #>  [4966,]   93  104  101  108  104  105  108  104  103   105 #>  [4967,]   93  104  101  108  104  105  108  104  103   105 #>  [4968,]   93  104  101  108  104  105  108  104  103   105 #>  [4969,]   93  104  101  108  104  105  108  104  103   105 #>  [4970,]   93  104  101  108  103  105  108  104  103   105 #>  [4971,]   93  104  101  108  104  105  108  104  103   105 #>  [4972,]   94  105  102  109  101  103  106  105  104   106 #>  [4973,]   94  105  102  109  101  103  106  105  104   106 #>  [4974,]   94  105  102  109  101  103  106  105  104   106 #>  [4975,]   94  105  102  109  101  103  106  105  104   106 #>  [4976,]   94  105  102  109  101  103  106  105  104   106 #>  [4977,]   94  105  103  110  102  104  107  105  104   106 #>  [4978,]   93  104  101  108  104  105  108  104  103   105 #>  [4979,]   93  104  101  108  103  105  108  104  103   105 #>  [4980,]   93  104  101  108  103  105  108  104  103   105 #>  [4981,]   93  104  101  108  104  105  108  104  103   105 #>  [4982,]   93  104  101  108  104  105  108  104  103   105 #>  [4983,]   93  104  101  108  103  105  108  104  103   105 #>  [4984,]   94  105  103  110  102  104  107  105  104   106 #>  [4985,]   93  104  101  108  104  105  108  104  103   105 #>  [4986,]   93  104  101  108  104  105  108  104  103   105 #>  [4987,]   93  104  101  108  104  105  108  104  103   105 #>  [4988,]   93  104  101  108  104  105  108  104  103   105 #>  [4989,]   93  104  101  108  104  105  108  104  103   105 #>  [4990,]   93  104  101  108  104  105  108  104  103   105 #>  [4991,]   93  104  101  108  104  105  108  104  103   105 #>  [4992,]   93  104  101  108  104  105  108  104  103   105 #>  [4993,]   93  104  101  108  103  105  108  104  103   105 #>  [4994,]   94  105  103  110  102  104  107  105  104   106 #>  [4995,]   94  105  102  109  101  103  106  105  104   106 #>  [4996,]   93  104  101  108  104  105  108  104  103   105 #>  [4997,]   93  104  101  108  104  105  108  104  103   105 #>  [4998,]   93  104  101  108  103  105  108  104  103   105 #>  [4999,]   93  104  101  108  104  105  108  104  103   105 #>  [5000,]   94  105  102  109  101  103  106  105  104   106 #>  [5001,]   96  107  105  112  106  107  110  107  106   108 #>  [5002,]   96  107  105  112  106  107  110  107  106   108 #>  [5003,]   96  107  105  112  106  107  110  107  106   108 #>  [5004,]   96  107  105  112  106  107  110  107  106   108 #>  [5005,]   96  107  105  112  106  107  110  107  106   108 #>  [5006,]   95  106  104  111  105  106  109  106  105   107 #>  [5007,]   96  107  105  112  106  107  110  107  106   108 #>  [5008,]   96  107  105  112  106  107  110  107  106   108 #>  [5009,]   96  107  105  112  106  107  110  107  106   108 #>  [5010,]   96  107  105  112  106  107  110  107  106   108 #>  [5011,]   96  107  105  112  106  107  110  107  106   108 #>  [5012,]   96  107  105  112  106  107  110  107  106   108 #>  [5013,]   96  107  105  112  106  107  110  107  106   108 #>  [5014,]   96  107  105  112  106  107  110  107  106   108 #>  [5015,]   96  107  105  112  106  107  110  107  106   108 #>  [5016,]   96  107  105  112  106  107  110  107  106   108 #>  [5017,]   96  107  105  112  106  107  110  107  106   108 #>  [5018,]   96  107  105  112  106  107  110  107  106   108 #>  [5019,]   96  107  105  112  106  107  110  107  106   108 #>  [5020,]   95  106  104  111  105  106  109  106  105   107 #>  [5021,]   95  106  104  111  105  106  109  106  105   107 #>  [5022,]   96  107  105  112  106  107  110  107  106   108 #>  [5023,]   96  107  105  112  106  107  110  107  106   108 #>  [5024,]   96  107  105  112  106  107  110  107  106   108 #>  [5025,]   95  106  104  111  105  106  109  106  105   107 #>  [5026,]   96  107  105  112  106  107  110  107  106   108 #>  [5027,]   96  107  105  112  106  107  110  107  106   108 #>  [5028,]   96  107  105  112  106  107  110  107  106   108 #>  [5029,]   96  107  105  112  106  107  110  107  106   108 #>  [5030,]   96  107  105  112  106  107  110  107  106   108 #>  [5031,]   96  107  105  112  106  107  110  107  106   108 #>  [5032,]   96  107  105  112  106  107  110  107  106   108 #>  [5033,]   96  107  105  112  106  107  110  107  106   108 #>  [5034,]   96  107  105  112  106  107  110  107  106   108 #>  [5035,]   95  106  104  111  105  106  109  106  105   107 #>  [5036,]   96  107  105  112  106  107  110  107  106   108 #>  [5037,]   96  107  105  112  106  107  110  107  106   108 #>  [5038,]   96  107  105  112  106  107  110  107  106   108 #>  [5039,]   96  107  105  112  106  107  110  107  106   108 #>  [5040,]   96  107  105  112  106  107  110  107  106   108 #>  [5041,]   96  107  105  112  106  107  110  107  106   108 #>  [5042,]   96  107  105  112  106  107  110  107  106   108 #>  [5043,]   96  107  105  112  106  107  110  107  106   108 #>  [5044,]   95  106  104  111  105  106  109  106  105   107 #>  [5045,]   96  107  105  112  106  107  110  107  106   108 #>  [5046,]   96  107  105  112  106  107  110  107  106   108 #>  [5047,]   96  107  105  112  106  107  110  107  106   108 #>  [5048,]   96  107  105  112  106  107  110  107  106   108 #>  [5049,]   96  107  105  112  106  107  110  107  106   108 #>  [5050,]   96  107  105  112  106  107  110  107  106   108 #>  [5051,]   96  107  105  112  106  107  110  107  106   108 #>  [5052,]   96  107  105  112  106  107  110  107  106   108 #>  [5053,]   95  106  104  111  105  106  109  106  105   107 #>  [5054,]   96  107  105  112  106  107  110  107  106   108 #>  [5055,]   96  107  105  112  106  107  110  107  106   108 #>  [5056,]   95  106  104  111  105  106  109  106  105   107 #>  [5057,]   96  107  105  112  106  107  110  107  106   108 #>  [5058,]   96  107  105  112  106  107  110  107  106   108 #>  [5059,]   96  107  105  112  106  107  110  107  106   108 #>  [5060,]   96  107  105  112  106  107  110  107  106   108 #>  [5061,]   96  107  105  112  106  107  110  107  106   108 #>  [5062,]   96  107  105  112  106  107  110  107  106   108 #>  [5063,]   96  107  105  112  106  107  110  107  106   108 #>  [5064,]   96  107  105  112  106  107  110  107  106   108 #>  [5065,]   95  106  104  111  105  106  109  106  105   107 #>  [5066,]   96  107  105  112  106  107  110  107  106   108 #>  [5067,]   96  107  105  112  106  107  110  107  106   108 #>  [5068,]   96  107  105  112  106  107  110  107  106   108 #>  [5069,]   96  107  105  112  106  107  110  107  106   108 #>  [5070,]   96  107  105  112  106  107  110  107  106   108 #>  [5071,]   96  107  105  112  106  107  110  107  106   108 #>  [5072,]   96  107  105  112  106  107  110  107  106   108 #>  [5073,]   96  107  105  112  106  107  110  107  106   108 #>  [5074,]   95  106  104  111  105  106  109  106  105   107 #>  [5075,]   96  107  105  112  106  107  110  107  106   108 #>  [5076,]   96  107  105  112  106  107  110  107  106   108 #>  [5077,]   96  107  105  112  106  107  110  107  106   108 #>  [5078,]   96  107  105  112  106  107  110  107  106   108 #>  [5079,]   96  107  105  112  106  107  110  107  106   108 #>  [5080,]   95  106  104  111  105  106  109  106  105   107 #>  [5081,]   96  107  105  112  106  107  110  107  106   108 #>  [5082,]   95  106  104  111  105  106  109  106  105   107 #>  [5083,]   96  107  105  112  106  107  110  107  106   108 #>  [5084,]   96  107  105  112  106  107  110  107  106   108 #>  [5085,]   95  106  104  111  105  106  109  106  105   107 #>  [5086,]   95  106  104  111  105  106  109  106  105   107 #>  [5087,]   96  107  105  112  106  107  110  107  106   108 #>  [5088,]   96  107  105  112  106  107  110  107  106   108 #>  [5089,]   95  106  104  111  105  106  109  106  105   107 #>  [5090,]   96  107  105  112  106  107  110  107  106   108 #>  [5091,]   96  107  105  112  106  107  110  107  106   108 #>  [5092,]   96  107  105  112  106  107  110  107  106   108 #>  [5093,]   96  107  105  112  106  107  110  107  106   108 #>  [5094,]   96  107  105  112  106  107  110  107  106   108 #>  [5095,]   96  107  105  112  106  107  110  107  106   108 #>  [5096,]   96  107  105  112  106  107  110  107  106   108 #>  [5097,]   96  107  105  112  106  107  110  107  106   108 #>  [5098,]   96  107  105  112  106  107  110  107  106   108 #>  [5099,]   95  106  104  111  105  106  109  106  105   107 #>  [5100,]   96  107  105  112  106  107  110  107  106   108 #>  [5101,]   98  109  107  114  108  109  112  109  108   110 #>  [5102,]   98  109  107  114  108  109  112  109  108   110 #>  [5103,]   98  109  107  114  108  109  112  109  108   110 #>  [5104,]   97  108  106  113  107  108  111  108  107   109 #>  [5105,]   98  109  107  114  108  109  112  109  108   110 #>  [5106,]   98  109  107  114  108  109  112  109  108   110 #>  [5107,]   98  109  107  114  108  109  112  109  108   110 #>  [5108,]   98  109  107  114  108  109  112  109  108   110 #>  [5109,]   97  108  106  113  107  108  111  108  107   109 #>  [5110,]   98  109  107  114  108  109  112  109  108   110 #>  [5111,]   98  109  107  114  108  109  112  109  108   110 #>  [5112,]   98  109  107  114  108  109  112  109  108   110 #>  [5113,]   98  109  107  114  108  109  112  109  108   110 #>  [5114,]   98  109  107  114  108  109  112  109  108   110 #>  [5115,]   98  109  107  114  108  109  112  109  108   110 #>  [5116,]   98  109  107  114  108  109  112  109  108   110 #>  [5117,]   97  108  106  113  107  108  111  108  107   109 #>  [5118,]   98  109  107  114  108  109  112  109  108   110 #>  [5119,]   98  109  107  114  108  109  112  109  108   110 #>  [5120,]   98  109  107  114  108  109  112  109  108   110 #>  [5121,]   98  109  107  114  108  109  112  109  108   110 #>  [5122,]   98  109  107  114  108  109  112  109  108   110 #>  [5123,]   98  109  107  114  108  109  112  109  108   110 #>  [5124,]   98  109  107  114  108  109  112  109  108   110 #>  [5125,]   98  109  107  114  108  109  112  109  108   110 #>  [5126,]   98  109  107  114  108  109  112  109  108   110 #>  [5127,]   98  109  107  114  108  109  112  109  108   110 #>  [5128,]   98  109  107  114  108  109  112  109  108   110 #>  [5129,]   98  109  107  114  108  109  112  109  108   110 #>  [5130,]   98  109  107  114  108  109  112  109  108   110 #>  [5131,]   98  109  107  114  108  109  112  109  108   110 #>  [5132,]   98  109  107  114  108  109  112  109  108   110 #>  [5133,]   98  109  107  114  108  109  112  109  108   110 #>  [5134,]   98  109  107  114  108  109  112  109  108   110 #>  [5135,]   98  109  107  114  108  109  112  109  108   110 #>  [5136,]   98  109  107  114  108  109  112  109  108   110 #>  [5137,]   98  109  107  114  108  109  112  109  108   110 #>  [5138,]   98  109  107  114  108  109  112  109  108   110 #>  [5139,]   98  109  107  114  108  109  112  109  108   110 #>  [5140,]   98  109  107  114  108  109  112  109  108   110 #>  [5141,]   98  109  107  114  108  109  112  109  108   110 #>  [5142,]   98  109  107  114  108  109  112  109  108   110 #>  [5143,]   98  109  107  114  108  109  112  109  108   110 #>  [5144,]   98  109  107  114  108  109  112  109  108   110 #>  [5145,]   98  109  107  114  108  109  112  109  108   110 #>  [5146,]   98  109  107  114  108  109  112  109  108   110 #>  [5147,]   98  109  107  114  108  109  112  109  108   110 #>  [5148,]   98  109  107  114  108  109  112  109  108   110 #>  [5149,]   98  109  107  114  108  109  112  109  108   110 #>  [5150,]   98  109  107  114  108  109  112  109  108   110 #>  [5151,]   98  109  107  114  108  109  112  109  108   110 #>  [5152,]   97  108  106  113  107  108  111  108  107   109 #>  [5153,]   98  109  107  114  108  109  112  109  108   110 #>  [5154,]   98  109  107  114  108  109  112  109  108   110 #>  [5155,]   98  109  107  114  108  109  112  109  108   110 #>  [5156,]   98  109  107  114  108  109  112  109  108   110 #>  [5157,]   98  109  107  114  108  109  112  109  108   110 #>  [5158,]   98  109  107  114  108  109  112  109  108   110 #>  [5159,]   98  109  107  114  108  109  112  109  108   110 #>  [5160,]   98  109  107  114  108  109  112  109  108   110 #>  [5161,]   98  109  107  114  108  109  112  109  108   110 #>  [5162,]   98  109  107  114  108  109  112  109  108   110 #>  [5163,]   98  109  107  114  108  109  112  109  108   110 #>  [5164,]   98  109  107  114  108  109  112  109  108   110 #>  [5165,]   98  109  107  114  108  109  112  109  108   110 #>  [5166,]   98  109  107  114  108  109  112  109  108   110 #>  [5167,]   98  109  107  114  108  109  112  109  108   110 #>  [5168,]   98  109  107  114  108  109  112  109  108   110 #>  [5169,]   98  109  107  114  108  109  112  109  108   110 #>  [5170,]   98  109  107  114  108  109  112  109  108   110 #>  [5171,]   98  109  107  114  108  109  112  109  108   110 #>  [5172,]   98  109  107  114  108  109  112  109  108   110 #>  [5173,]   98  109  107  114  108  109  112  109  108   110 #>  [5174,]   98  109  107  114  108  109  112  109  108   110 #>  [5175,]   98  109  107  114  108  109  112  109  108   110 #>  [5176,]   98  109  107  114  108  109  112  109  108   110 #>  [5177,]   98  109  107  114  108  109  112  109  108   110 #>  [5178,]   98  109  107  114  108  109  112  109  108   110 #>  [5179,]   98  109  107  114  108  109  112  109  108   110 #>  [5180,]   98  109  107  114  108  109  112  109  108   110 #>  [5181,]   97  108  106  113  107  108  111  108  107   109 #>  [5182,]   97  108  106  113  107  108  111  108  107   109 #>  [5183,]   98  109  107  114  108  109  112  109  108   110 #>  [5184,]   98  109  107  114  108  109  112  109  108   110 #>  [5185,]   98  109  107  114  108  109  112  109  108   110 #>  [5186,]   98  109  107  114  108  109  112  109  108   110 #>  [5187,]   98  109  107  114  108  109  112  109  108   110 #>  [5188,]   98  109  107  114  108  109  112  109  108   110 #>  [5189,]   98  109  107  114  108  109  112  109  108   110 #>  [5190,]   98  109  107  114  108  109  112  109  108   110 #>  [5191,]   98  109  107  114  108  109  112  109  108   110 #>  [5192,]   98  109  107  114  108  109  112  109  108   110 #>  [5193,]   98  109  107  114  108  109  112  109  108   110 #>  [5194,]   98  109  107  114  108  109  112  109  108   110 #>  [5195,]   97  108  106  113  107  108  111  108  107   109 #>  [5196,]   98  109  107  114  108  109  112  109  108   110 #>  [5197,]   98  109  107  114  108  109  112  109  108   110 #>  [5198,]   98  109  107  114  108  109  112  109  108   110 #>  [5199,]   98  109  107  114  108  109  112  109  108   110 #>  [5200,]   98  109  107  114  108  109  112  109  108   110 #>  [5201,]   99  111  109  116  110  111  113  110  109   111 #>  [5202,]   99  110  108  115  109  110  115  111  110   112 #>  [5203,]   99  110  108  115  109  110  115  111  110   112 #>  [5204,]   99  110  108  115  109  110  114  111  110   112 #>  [5205,]   99  110  108  115  109  110  115  111  110   112 #>  [5206,]   99  110  108  115  109  110  115  111  110   112 #>  [5207,]   99  110  108  115  109  110  115  111  110   112 #>  [5208,]   99  110  108  115  109  110  114  111  110   112 #>  [5209,]   99  111  109  116  110  111  113  110  109   111 #>  [5210,]   99  110  108  115  109  110  115  111  110   112 #>  [5211,]   99  110  108  115  109  110  114  111  110   112 #>  [5212,]   99  110  108  115  109  110  115  111  110   112 #>  [5213,]   99  111  109  116  110  111  113  110  109   111 #>  [5214,]   99  110  108  115  109  110  115  111  110   112 #>  [5215,]   99  110  108  115  109  110  115  111  110   112 #>  [5216,]   99  110  108  115  109  110  115  111  110   112 #>  [5217,]   99  111  109  116  110  111  113  110  109   111 #>  [5218,]   99  111  109  116  110  111  113  110  109   111 #>  [5219,]   99  110  108  115  109  110  115  111  110   112 #>  [5220,]   99  111  109  116  110  111  113  110  109   111 #>  [5221,]   99  110  108  115  109  110  115  111  110   112 #>  [5222,]   99  110  108  115  109  110  114  111  110   112 #>  [5223,]   99  110  108  115  109  110  115  111  110   112 #>  [5224,]   99  110  108  115  109  110  115  111  110   112 #>  [5225,]   99  110  108  115  109  110  115  111  110   112 #>  [5226,]   99  110  108  115  109  110  115  111  110   112 #>  [5227,]   99  111  109  116  110  111  113  110  109   111 #>  [5228,]   99  110  108  115  109  110  115  111  110   112 #>  [5229,]   99  110  108  115  109  110  115  111  110   112 #>  [5230,]   99  110  108  115  109  110  114  111  110   112 #>  [5231,]   99  110  108  115  109  110  115  111  110   112 #>  [5232,]   99  110  108  115  109  110  115  111  110   112 #>  [5233,]   99  111  109  116  110  111  113  110  109   111 #>  [5234,]   99  110  108  115  109  110  115  111  110   112 #>  [5235,]   99  110  108  115  109  110  114  111  110   112 #>  [5236,]   99  111  109  116  110  111  113  110  109   111 #>  [5237,]   99  110  108  115  109  110  115  111  110   112 #>  [5238,]   99  111  109  116  110  111  113  110  109   111 #>  [5239,]   99  110  108  115  109  110  115  111  110   112 #>  [5240,]   99  110  108  115  109  110  115  111  110   112 #>  [5241,]   99  110  108  115  109  110  115  111  110   112 #>  [5242,]   99  111  109  116  110  111  113  110  109   111 #>  [5243,]   99  110  108  115  109  110  114  111  110   112 #>  [5244,]   99  110  108  115  109  110  114  111  110   112 #>  [5245,]   99  110  108  115  109  110  115  111  110   112 #>  [5246,]   99  110  108  115  109  110  114  111  110   112 #>  [5247,]   99  110  108  115  109  110  115  111  110   112 #>  [5248,]   99  110  108  115  109  110  115  111  110   112 #>  [5249,]   99  110  108  115  109  110  114  111  110   112 #>  [5250,]   99  110  108  115  109  110  115  111  110   112 #>  [5251,]   99  111  109  116  110  111  113  110  109   111 #>  [5252,]   99  110  108  115  109  110  114  111  110   112 #>  [5253,]   99  111  109  116  110  111  113  110  109   111 #>  [5254,]   99  111  109  116  110  111  113  110  109   111 #>  [5255,]   99  110  108  115  109  110  114  111  110   112 #>  [5256,]   99  111  109  116  110  111  113  110  109   111 #>  [5257,]   99  110  108  115  109  110  115  111  110   112 #>  [5258,]   99  110  108  115  109  110  114  111  110   112 #>  [5259,]   99  110  108  115  109  110  115  111  110   112 #>  [5260,]   99  110  108  115  109  110  115  111  110   112 #>  [5261,]   99  110  108  115  109  110  115  111  110   112 #>  [5262,]   99  110  108  115  109  110  115  111  110   112 #>  [5263,]   99  110  108  115  109  110  115  111  110   112 #>  [5264,]   99  110  108  115  109  110  115  111  110   112 #>  [5265,]   99  111  109  116  110  111  113  110  109   111 #>  [5266,]   99  111  109  116  110  111  113  110  109   111 #>  [5267,]   99  110  108  115  109  110  115  111  110   112 #>  [5268,]   99  110  108  115  109  110  115  111  110   112 #>  [5269,]   99  110  108  115  109  110  114  111  110   112 #>  [5270,]   99  110  108  115  109  110  115  111  110   112 #>  [5271,]   99  110  108  115  109  110  115  111  110   112 #>  [5272,]   99  110  108  115  109  110  115  111  110   112 #>  [5273,]   99  110  108  115  109  110  115  111  110   112 #>  [5274,]   99  110  108  115  109  110  115  111  110   112 #>  [5275,]   99  110  108  115  109  110  115  111  110   112 #>  [5276,]   99  110  108  115  109  110  115  111  110   112 #>  [5277,]   99  111  109  116  110  111  113  110  109   111 #>  [5278,]   99  110  108  115  109  110  115  111  110   112 #>  [5279,]   99  111  109  116  110  111  113  110  109   111 #>  [5280,]   99  110  108  115  109  110  114  111  110   112 #>  [5281,]   99  110  108  115  109  110  114  111  110   112 #>  [5282,]   99  111  109  116  110  111  113  110  109   111 #>  [5283,]   99  111  109  116  110  111  113  110  109   111 #>  [5284,]   99  111  109  116  110  111  113  110  109   111 #>  [5285,]   99  110  108  115  109  110  115  111  110   112 #>  [5286,]   99  110  108  115  109  110  115  111  110   112 #>  [5287,]   99  111  109  116  110  111  113  110  109   111 #>  [5288,]   99  110  108  115  109  110  114  111  110   112 #>  [5289,]   99  110  108  115  109  110  114  111  110   112 #>  [5290,]   99  110  108  115  109  110  114  111  110   112 #>  [5291,]   99  111  109  116  110  111  113  110  109   111 #>  [5292,]   99  110  108  115  109  110  114  111  110   112 #>  [5293,]   99  111  109  116  110  111  113  110  109   111 #>  [5294,]   99  111  109  116  110  111  113  110  109   111 #>  [5295,]   99  110  108  115  109  110  114  111  110   112 #>  [5296,]   99  110  108  115  109  110  114  111  110   112 #>  [5297,]   99  110  108  115  109  110  115  111  110   112 #>  [5298,]   99  110  108  115  109  110  115  111  110   112 #>  [5299,]   99  110  108  115  109  110  114  111  110   112 #>  [5300,]   99  110  108  115  109  110  115  111  110   112 #>  [5301,]  101  113  111  118  111  112  116  113  112   114 #>  [5302,]  101  113  111  118  111  112  116  113  112   114 #>  [5303,]  100  112  110  117  112  113  117  112  111   113 #>  [5304,]  100  112  110  117  113  113  117  112  111   113 #>  [5305,]  100  112  110  117  112  113  117  112  111   113 #>  [5306,]  101  113  111  118  111  112  116  114  113   114 #>  [5307,]  100  112  110  117  113  113  117  112  111   113 #>  [5308,]  100  112  110  117  112  113  117  112  111   113 #>  [5309,]  100  112  110  117  113  113  117  112  111   113 #>  [5310,]  100  112  110  117  113  113  117  112  111   113 #>  [5311,]  101  113  111  118  111  112  116  113  112   114 #>  [5312,]  100  112  110  117  112  113  117  112  111   113 #>  [5313,]  101  113  111  118  111  112  116  113  112   114 #>  [5314,]  101  113  111  118  111  112  116  113  112   114 #>  [5315,]  101  113  111  118  111  112  116  114  113   114 #>  [5316,]  101  113  111  118  111  112  116  113  112   114 #>  [5317,]  101  113  111  118  111  112  116  113  112   114 #>  [5318,]  100  112  110  117  112  113  117  112  111   113 #>  [5319,]  101  113  111  118  111  112  116  113  112   114 #>  [5320,]  100  112  110  117  113  113  117  112  111   113 #>  [5321,]  101  113  111  118  111  112  116  113  112   114 #>  [5322,]  101  113  111  118  111  112  116  113  112   114 #>  [5323,]  100  112  110  117  112  113  117  112  111   113 #>  [5324,]  100  112  110  117  113  113  117  112  111   113 #>  [5325,]  100  112  110  117  113  113  117  112  111   113 #>  [5326,]  101  113  111  118  111  112  116  114  113   114 #>  [5327,]  101  113  111  118  111  112  116  113  112   114 #>  [5328,]  100  112  110  117  113  113  117  112  111   113 #>  [5329,]  101  113  111  118  111  112  116  113  112   114 #>  [5330,]  100  112  110  117  112  113  117  112  111   113 #>  [5331,]  100  112  110  117  112  113  117  112  111   113 #>  [5332,]  100  112  110  117  112  113  117  112  111   113 #>  [5333,]  101  113  111  118  111  112  116  114  113   114 #>  [5334,]  100  112  110  117  112  113  117  112  111   113 #>  [5335,]  101  113  111  118  111  112  116  113  112   114 #>  [5336,]  100  112  110  117  113  113  117  112  111   113 #>  [5337,]  101  113  111  118  111  112  116  113  112   114 #>  [5338,]  100  112  110  117  112  113  117  112  111   113 #>  [5339,]  100  112  110  117  113  113  117  112  111   113 #>  [5340,]  100  112  110  117  112  113  117  112  111   113 #>  [5341,]  101  113  111  118  111  112  116  113  112   114 #>  [5342,]  100  112  110  117  112  113  117  112  111   113 #>  [5343,]  100  112  110  117  112  113  117  112  111   113 #>  [5344,]  101  113  111  118  111  112  116  113  112   114 #>  [5345,]  100  112  110  117  112  113  117  112  111   113 #>  [5346,]  100  112  110  117  112  113  117  112  111   113 #>  [5347,]  101  113  111  118  111  112  116  113  112   114 #>  [5348,]  100  112  110  117  112  113  117  112  111   113 #>  [5349,]  100  112  110  117  112  113  117  112  111   113 #>  [5350,]  101  113  111  118  111  112  116  114  113   114 #>  [5351,]  100  112  110  117  112  113  117  112  111   113 #>  [5352,]  101  113  111  118  111  112  116  113  112   114 #>  [5353,]  100  112  110  117  112  113  117  112  111   113 #>  [5354,]  100  112  110  117  113  113  117  112  111   113 #>  [5355,]  101  113  111  118  111  112  116  113  112   114 #>  [5356,]  100  112  110  117  112  113  117  112  111   113 #>  [5357,]  100  112  110  117  113  113  117  112  111   113 #>  [5358,]  101  113  111  118  111  112  116  114  113   114 #>  [5359,]  101  113  111  118  111  112  116  113  112   114 #>  [5360,]  100  112  110  117  112  113  117  112  111   113 #>  [5361,]  101  113  111  118  111  112  116  114  113   114 #>  [5362,]  100  112  110  117  112  113  117  112  111   113 #>  [5363,]  100  112  110  117  112  113  117  112  111   113 #>  [5364,]  100  112  110  117  112  113  117  112  111   113 #>  [5365,]  100  112  110  117  112  113  117  112  111   113 #>  [5366,]  100  112  110  117  112  113  117  112  111   113 #>  [5367,]  100  112  110  117  113  113  117  112  111   113 #>  [5368,]  101  113  111  118  111  112  116  114  113   114 #>  [5369,]  101  113  111  118  111  112  116  113  112   114 #>  [5370,]  101  113  111  118  111  112  116  113  112   114 #>  [5371,]  101  113  111  118  111  112  116  113  112   114 #>  [5372,]  100  112  110  117  112  113  117  112  111   113 #>  [5373,]  101  113  111  118  111  112  116  113  112   114 #>  [5374,]  101  113  111  118  111  112  116  113  112   114 #>  [5375,]  101  113  111  118  111  112  116  113  112   114 #>  [5376,]  101  113  111  118  111  112  116  114  113   114 #>  [5377,]  101  113  111  118  111  112  116  113  112   114 #>  [5378,]  100  112  110  117  112  113  117  112  111   113 #>  [5379,]  101  113  111  118  111  112  116  113  112   114 #>  [5380,]  100  112  110  117  112  113  117  112  111   113 #>  [5381,]  101  113  111  118  111  112  116  114  113   114 #>  [5382,]  100  112  110  117  112  113  117  112  111   113 #>  [5383,]  101  113  111  118  111  112  116  113  112   114 #>  [5384,]  101  113  111  118  111  112  116  113  112   114 #>  [5385,]  100  112  110  117  112  113  117  112  111   113 #>  [5386,]  101  113  111  118  111  112  116  113  112   114 #>  [5387,]  101  113  111  118  111  112  116  113  112   114 #>  [5388,]  100  112  110  117  112  113  117  112  111   113 #>  [5389,]  100  112  110  117  112  113  117  112  111   113 #>  [5390,]  101  113  111  118  111  112  116  113  112   114 #>  [5391,]  100  112  110  117  113  113  117  112  111   113 #>  [5392,]  101  113  111  118  111  112  116  114  113   114 #>  [5393,]  101  113  111  118  111  112  116  113  112   114 #>  [5394,]  101  113  111  118  111  112  116  114  113   114 #>  [5395,]  100  112  110  117  112  113  117  112  111   113 #>  [5396,]  101  113  111  118  111  112  116  114  113   114 #>  [5397,]  101  113  111  118  111  112  116  114  113   114 #>  [5398,]  101  113  111  118  111  112  116  113  112   114 #>  [5399,]  101  113  111  118  111  112  116  113  112   114 #>  [5400,]  101  113  111  118  111  112  116  113  112   114 #>  [5401,]  102  114  112  119  114  116  119  116  116   117 #>  [5402,]  103  115  113  120  115  114  120  117  114   115 #>  [5403,]  102  114  112  119  114  115  118  115  116   117 #>  [5404,]  102  114  112  119  114  115  118  115  116   117 #>  [5405,]  103  115  113  120  115  114  120  117  114   115 #>  [5406,]  102  114  112  119  114  115  118  115  116   117 #>  [5407,]  103  115  113  120  115  114  120  117  114   115 #>  [5408,]  102  114  112  119  114  115  118  115  116   117 #>  [5409,]  103  115  113  120  115  114  120  117  114   115 #>  [5410,]  103  115  113  120  115  114  120  117  114   115 #>  [5411,]  102  114  112  119  114  116  119  116  116   117 #>  [5412,]  103  115  113  120  115  114  120  117  114   115 #>  [5413,]  103  115  113  120  115  114  120  117  114   115 #>  [5414,]  102  114  112  119  114  116  119  116  116   117 #>  [5415,]  102  114  112  119  114  116  119  116  116   117 #>  [5416,]  102  114  112  119  114  115  118  115  116   117 #>  [5417,]  103  115  113  120  115  114  120  117  114   115 #>  [5418,]  103  115  113  120  115  114  120  117  114   115 #>  [5419,]  102  114  112  119  114  115  118  115  116   117 #>  [5420,]  103  115  113  120  115  114  121  118  115   116 #>  [5421,]  103  115  113  120  115  114  120  117  114   115 #>  [5422,]  103  115  113  120  115  114  121  118  115   116 #>  [5423,]  103  115  113  120  115  114  120  117  114   115 #>  [5424,]  103  115  113  120  115  114  120  117  114   115 #>  [5425,]  102  114  112  119  114  115  118  115  116   117 #>  [5426,]  102  114  112  119  114  116  119  116  116   117 #>  [5427,]  103  115  113  120  115  114  121  118  115   116 #>  [5428,]  102  114  112  119  114  115  118  115  116   117 #>  [5429,]  103  115  113  120  115  114  121  118  115   116 #>  [5430,]  103  115  113  120  115  114  120  117  114   115 #>  [5431,]  103  115  113  120  115  114  120  117  114   115 #>  [5432,]  103  115  113  120  115  114  120  117  114   115 #>  [5433,]  103  115  113  120  115  114  120  117  114   115 #>  [5434,]  102  114  112  119  114  115  118  115  116   117 #>  [5435,]  102  114  112  119  114  115  118  115  116   117 #>  [5436,]  103  115  113  120  115  114  120  117  114   115 #>  [5437,]  102  114  112  119  114  115  118  115  116   117 #>  [5438,]  102  114  112  119  114  115  118  115  116   117 #>  [5439,]  102  114  112  119  114  115  118  115  116   117 #>  [5440,]  103  115  113  120  115  114  120  117  114   115 #>  [5441,]  103  115  113  120  115  114  120  117  114   115 #>  [5442,]  102  114  112  119  114  115  118  115  116   117 #>  [5443,]  102  114  112  119  114  116  119  116  116   117 #>  [5444,]  103  115  113  120  115  114  120  117  114   115 #>  [5445,]  102  114  112  119  114  115  118  115  116   117 #>  [5446,]  102  114  112  119  114  115  118  115  116   117 #>  [5447,]  103  115  113  120  115  114  120  117  114   115 #>  [5448,]  103  115  113  120  115  114  120  117  114   115 #>  [5449,]  102  114  112  119  114  115  118  115  116   117 #>  [5450,]  103  115  113  120  115  114  120  117  114   115 #>  [5451,]  102  114  112  119  114  115  118  115  116   117 #>  [5452,]  102  114  112  119  114  116  119  116  116   117 #>  [5453,]  103  115  113  120  115  114  120  117  114   115 #>  [5454,]  103  115  113  120  115  114  120  117  114   115 #>  [5455,]  102  114  112  119  114  115  118  115  116   117 #>  [5456,]  102  114  112  119  114  115  118  115  116   117 #>  [5457,]  102  114  112  119  114  115  118  115  116   117 #>  [5458,]  103  115  113  120  115  114  121  118  115   116 #>  [5459,]  102  114  112  119  114  116  119  116  116   117 #>  [5460,]  103  115  113  120  115  114  120  117  114   115 #>  [5461,]  103  115  113  120  115  114  120  117  114   115 #>  [5462,]  102  114  112  119  114  115  118  115  116   117 #>  [5463,]  103  115  113  120  115  114  120  117  114   115 #>  [5464,]  102  114  112  119  114  115  118  115  116   117 #>  [5465,]  102  114  112  119  114  115  118  115  116   117 #>  [5466,]  102  114  112  119  114  116  119  116  116   117 #>  [5467,]  102  114  112  119  114  115  118  115  116   117 #>  [5468,]  102  114  112  119  114  115  118  115  116   117 #>  [5469,]  102  114  112  119  114  115  118  115  116   117 #>  [5470,]  103  115  113  120  115  114  120  117  114   115 #>  [5471,]  102  114  112  119  114  116  119  116  116   117 #>  [5472,]  102  114  112  119  114  115  118  115  116   117 #>  [5473,]  102  114  112  119  114  115  118  115  116   117 #>  [5474,]  103  115  113  120  115  114  120  117  114   115 #>  [5475,]  103  115  113  120  115  114  120  117  114   115 #>  [5476,]  103  115  113  120  115  114  120  117  114   115 #>  [5477,]  102  114  112  119  114  116  119  116  116   117 #>  [5478,]  103  115  113  120  115  114  120  117  114   115 #>  [5479,]  102  114  112  119  114  116  119  116  116   117 #>  [5480,]  103  115  113  120  115  114  120  117  114   115 #>  [5481,]  103  115  113  120  115  114  121  118  115   116 #>  [5482,]  102  114  112  119  114  115  118  115  116   117 #>  [5483,]  103  115  113  120  115  114  120  117  114   115 #>  [5484,]  103  115  113  120  115  114  120  117  114   115 #>  [5485,]  102  114  112  119  114  115  118  115  116   117 #>  [5486,]  103  115  113  120  115  114  120  117  114   115 #>  [5487,]  103  115  113  120  115  114  121  118  115   116 #>  [5488,]  103  115  113  120  115  114  120  117  114   115 #>  [5489,]  102  114  112  119  114  115  118  115  116   117 #>  [5490,]  102  114  112  119  114  116  119  116  116   117 #>  [5491,]  102  114  112  119  114  116  119  116  116   117 #>  [5492,]  103  115  113  120  115  114  120  117  114   115 #>  [5493,]  103  115  113  120  115  114  120  117  114   115 #>  [5494,]  102  114  112  119  114  115  118  115  116   117 #>  [5495,]  103  115  113  120  115  114  120  117  114   115 #>  [5496,]  102  114  112  119  114  115  118  115  116   117 #>  [5497,]  102  114  112  119  114  115  118  115  116   117 #>  [5498,]  102  114  112  119  114  115  118  115  116   117 #>  [5499,]  102  114  112  119  114  115  118  115  116   117 #>  [5500,]  102  114  112  119  114  116  119  116  116   117 #>  [5501,]  105  118  115  122  117  118  123  120  118   119 #>  [5502,]  104  116  114  121  116  117  122  119  117   118 #>  [5503,]  104  116  114  121  116  117  122  119  117   118 #>  [5504,]  104  116  114  121  116  117  122  119  117   118 #>  [5505,]  104  116  114  121  116  117  122  119  117   118 #>  [5506,]  104  116  114  121  116  117  122  119  117   118 #>  [5507,]  104  116  114  121  116  117  122  119  117   118 #>  [5508,]  104  116  114  121  116  117  122  119  117   118 #>  [5509,]  105  118  115  122  117  118  123  120  118   119 #>  [5510,]  104  116  114  121  116  117  122  119  117   118 #>  [5511,]  105  118  115  122  117  118  123  120  118   119 #>  [5512,]  104  116  114  121  116  117  122  119  117   118 #>  [5513,]  105  118  115  122  117  118  123  120  118   119 #>  [5514,]  104  116  114  121  116  117  122  119  117   118 #>  [5515,]  104  116  114  121  116  117  122  119  117   118 #>  [5516,]  104  116  114  121  116  117  122  119  117   118 #>  [5517,]  105  118  115  122  117  118  123  120  118   119 #>  [5518,]  105  118  115  122  117  118  123  120  118   119 #>  [5519,]  104  116  114  121  116  117  122  119  117   118 #>  [5520,]  105  117  115  122  117  118  123  120  118   119 #>  [5521,]  104  116  114  121  116  117  122  119  117   118 #>  [5522,]  104  116  114  121  116  117  122  119  117   118 #>  [5523,]  104  116  114  121  116  117  122  119  117   118 #>  [5524,]  104  116  114  121  116  117  122  119  117   118 #>  [5525,]  104  116  114  121  116  117  122  119  117   118 #>  [5526,]  104  116  114  121  116  117  122  119  117   118 #>  [5527,]  105  118  115  122  117  118  123  120  118   119 #>  [5528,]  105  118  115  122  117  118  123  120  118   119 #>  [5529,]  105  117  115  122  117  118  123  120  118   119 #>  [5530,]  104  116  114  121  116  117  122  119  117   118 #>  [5531,]  104  116  114  121  116  117  122  119  117   118 #>  [5532,]  104  116  114  121  116  117  122  119  117   118 #>  [5533,]  105  118  115  122  117  118  123  120  118   119 #>  [5534,]  104  116  114  121  116  117  122  119  117   118 #>  [5535,]  104  116  114  121  116  117  122  119  117   118 #>  [5536,]  105  118  115  122  117  118  123  120  118   119 #>  [5537,]  104  116  114  121  116  117  122  119  117   118 #>  [5538,]  105  118  115  122  117  118  123  120  118   119 #>  [5539,]  105  118  115  122  117  118  123  120  118   119 #>  [5540,]  104  116  114  121  116  117  122  119  117   118 #>  [5541,]  105  117  115  122  117  118  123  120  118   119 #>  [5542,]  105  117  115  122  117  118  123  120  118   119 #>  [5543,]  104  116  114  121  116  117  122  119  117   118 #>  [5544,]  104  116  114  121  116  117  122  119  117   118 #>  [5545,]  104  116  114  121  116  117  122  119  117   118 #>  [5546,]  104  116  114  121  116  117  122  119  117   118 #>  [5547,]  104  116  114  121  116  117  122  119  117   118 #>  [5548,]  104  116  114  121  116  117  122  119  117   118 #>  [5549,]  104  116  114  121  116  117  122  119  117   118 #>  [5550,]  104  116  114  121  116  117  122  119  117   118 #>  [5551,]  105  118  115  122  117  118  123  120  118   119 #>  [5552,]  104  116  114  121  116  117  122  119  117   118 #>  [5553,]  105  117  115  122  117  118  123  120  118   119 #>  [5554,]  105  117  115  122  117  118  123  120  118   119 #>  [5555,]  104  116  114  121  116  117  122  119  117   118 #>  [5556,]  105  117  115  122  117  118  123  120  118   119 #>  [5557,]  104  116  114  121  116  117  122  119  117   118 #>  [5558,]  105  118  115  122  117  118  123  120  118   119 #>  [5559,]  104  116  114  121  116  117  122  119  117   118 #>  [5560,]  104  116  114  121  116  117  122  119  117   118 #>  [5561,]  104  116  114  121  116  117  122  119  117   118 #>  [5562,]  105  118  115  122  117  118  123  120  118   119 #>  [5563,]  104  116  114  121  116  117  122  119  117   118 #>  [5564,]  104  116  114  121  116  117  122  119  117   118 #>  [5565,]  105  117  115  122  117  118  123  120  118   119 #>  [5566,]  105  118  115  122  117  118  123  120  118   119 #>  [5567,]  104  116  114  121  116  117  122  119  117   118 #>  [5568,]  104  116  114  121  116  117  122  119  117   118 #>  [5569,]  104  116  114  121  116  117  122  119  117   118 #>  [5570,]  105  118  115  122  117  118  123  120  118   119 #>  [5571,]  104  116  114  121  116  117  122  119  117   118 #>  [5572,]  104  116  114  121  116  117  122  119  117   118 #>  [5573,]  104  116  114  121  116  117  122  119  117   118 #>  [5574,]  104  116  114  121  116  117  122  119  117   118 #>  [5575,]  104  116  114  121  116  117  122  119  117   118 #>  [5576,]  104  116  114  121  116  117  122  119  117   118 #>  [5577,]  105  118  115  122  117  118  123  120  118   119 #>  [5578,]  104  116  114  121  116  117  122  119  117   118 #>  [5579,]  105  118  115  122  117  118  123  120  118   119 #>  [5580,]  104  116  114  121  116  117  122  119  117   118 #>  [5581,]  104  116  114  121  116  117  122  119  117   118 #>  [5582,]  105  117  115  122  117  118  123  120  118   119 #>  [5583,]  105  118  115  122  117  118  123  120  118   119 #>  [5584,]  105  117  115  122  117  118  123  120  118   119 #>  [5585,]  105  117  115  122  117  118  123  120  118   119 #>  [5586,]  104  116  114  121  116  117  122  119  117   118 #>  [5587,]  105  118  115  122  117  118  123  120  118   119 #>  [5588,]  104  116  114  121  116  117  122  119  117   118 #>  [5589,]  105  117  115  122  117  118  123  120  118   119 #>  [5590,]  105  118  115  122  117  118  123  120  118   119 #>  [5591,]  105  118  115  122  117  118  123  120  118   119 #>  [5592,]  104  116  114  121  116  117  122  119  117   118 #>  [5593,]  105  118  115  122  117  118  123  120  118   119 #>  [5594,]  105  117  115  122  117  118  123  120  118   119 #>  [5595,]  104  116  114  121  116  117  122  119  117   118 #>  [5596,]  104  116  114  121  116  117  122  119  117   118 #>  [5597,]  104  116  114  121  116  117  122  119  117   118 #>  [5598,]  104  116  114  121  116  117  122  119  117   118 #>  [5599,]  104  116  114  121  116  117  122  119  117   118 #>  [5600,]  104  116  114  121  116  117  122  119  117   118 #>  [5601,]  107  120  117  124  119  120  125  122  120   121 #>  [5602,]  107  120  117  124  119  120  125  122  120   121 #>  [5603,]  106  119  116  123  118  119  124  121  119   120 #>  [5604,]  107  120  117  124  119  120  125  122  120   121 #>  [5605,]  107  120  117  124  119  120  125  122  120   121 #>  [5606,]  106  119  116  123  118  119  124  121  119   120 #>  [5607,]  107  120  117  124  119  120  125  122  120   121 #>  [5608,]  107  120  117  124  119  120  125  122  120   121 #>  [5609,]  107  120  117  124  119  120  125  122  120   121 #>  [5610,]  107  120  117  124  119  120  125  122  120   121 #>  [5611,]  106  119  116  123  118  119  124  121  119   120 #>  [5612,]  107  120  117  124  119  120  125  122  120   121 #>  [5613,]  107  120  117  124  119  120  125  122  120   121 #>  [5614,]  107  120  117  124  119  120  125  122  120   121 #>  [5615,]  107  120  117  124  119  120  125  122  120   121 #>  [5616,]  106  119  116  123  118  119  124  121  119   120 #>  [5617,]  107  120  117  124  119  120  125  122  120   121 #>  [5618,]  107  120  117  124  119  120  125  122  120   121 #>  [5619,]  106  119  116  123  118  119  124  121  119   120 #>  [5620,]  107  120  117  124  119  120  125  122  120   121 #>  [5621,]  107  120  117  124  119  120  125  122  120   121 #>  [5622,]  107  120  117  124  119  120  125  122  120   121 #>  [5623,]  107  120  117  124  119  120  125  122  120   121 #>  [5624,]  107  120  117  124  119  120  125  122  120   121 #>  [5625,]  107  120  117  124  119  120  125  122  120   121 #>  [5626,]  107  120  117  124  119  120  125  122  120   121 #>  [5627,]  107  120  117  124  119  120  125  122  120   121 #>  [5628,]  107  120  117  124  119  120  125  122  120   121 #>  [5629,]  107  120  117  124  119  120  125  122  120   121 #>  [5630,]  107  120  117  124  119  120  125  122  120   121 #>  [5631,]  107  120  117  124  119  120  125  122  120   121 #>  [5632,]  107  120  117  124  119  120  125  122  120   121 #>  [5633,]  107  120  117  124  119  120  125  122  120   121 #>  [5634,]  106  119  116  123  118  119  124  121  119   120 #>  [5635,]  106  119  116  123  118  119  124  121  119   120 #>  [5636,]  107  120  117  124  119  120  125  122  120   121 #>  [5637,]  106  119  116  123  118  119  124  121  119   120 #>  [5638,]  106  119  116  123  118  119  124  121  119   120 #>  [5639,]  107  120  117  124  119  120  125  122  120   121 #>  [5640,]  107  120  117  124  119  120  125  122  120   121 #>  [5641,]  107  120  117  124  119  120  125  122  120   121 #>  [5642,]  107  120  117  124  119  120  125  122  120   121 #>  [5643,]  107  120  117  124  119  120  125  122  120   121 #>  [5644,]  107  120  117  124  119  120  125  122  120   121 #>  [5645,]  106  119  116  123  118  119  124  121  119   120 #>  [5646,]  107  120  117  124  119  120  125  122  120   121 #>  [5647,]  107  120  117  124  119  120  125  122  120   121 #>  [5648,]  107  120  117  124  119  120  125  122  120   121 #>  [5649,]  106  119  116  123  118  119  124  121  119   120 #>  [5650,]  107  120  117  124  119  120  125  122  120   121 #>  [5651,]  107  120  117  124  119  120  125  122  120   121 #>  [5652,]  106  119  116  123  118  119  124  121  119   120 #>  [5653,]  107  120  117  124  119  120  125  122  120   121 #>  [5654,]  107  120  117  124  119  120  125  122  120   121 #>  [5655,]  107  120  117  124  119  120  125  122  120   121 #>  [5656,]  107  120  117  124  119  120  125  122  120   121 #>  [5657,]  107  120  117  124  119  120  125  122  120   121 #>  [5658,]  107  120  117  124  119  120  125  122  120   121 #>  [5659,]  107  120  117  124  119  120  125  122  120   121 #>  [5660,]  107  120  117  124  119  120  125  122  120   121 #>  [5661,]  107  120  117  124  119  120  125  122  120   121 #>  [5662,]  107  120  117  124  119  120  125  122  120   121 #>  [5663,]  107  120  117  124  119  120  125  122  120   121 #>  [5664,]  106  119  116  123  118  119  124  121  119   120 #>  [5665,]  107  120  117  124  119  120  125  122  120   121 #>  [5666,]  107  120  117  124  119  120  125  122  120   121 #>  [5667,]  107  120  117  124  119  120  125  122  120   121 #>  [5668,]  106  119  116  123  118  119  124  121  119   120 #>  [5669,]  107  120  117  124  119  120  125  122  120   121 #>  [5670,]  107  120  117  124  119  120  125  122  120   121 #>  [5671,]  107  120  117  124  119  120  125  122  120   121 #>  [5672,]  106  119  116  123  118  119  124  121  119   120 #>  [5673,]  107  120  117  124  119  120  125  122  120   121 #>  [5674,]  107  120  117  124  119  120  125  122  120   121 #>  [5675,]  107  120  117  124  119  120  125  122  120   121 #>  [5676,]  107  120  117  124  119  120  125  122  120   121 #>  [5677,]  107  120  117  124  119  120  125  122  120   121 #>  [5678,]  107  120  117  124  119  120  125  122  120   121 #>  [5679,]  107  120  117  124  119  120  125  122  120   121 #>  [5680,]  107  120  117  124  119  120  125  122  120   121 #>  [5681,]  107  120  117  124  119  120  125  122  120   121 #>  [5682,]  107  120  117  124  119  120  125  122  120   121 #>  [5683,]  107  120  117  124  119  120  125  122  120   121 #>  [5684,]  107  120  117  124  119  120  125  122  120   121 #>  [5685,]  107  120  117  124  119  120  125  122  120   121 #>  [5686,]  107  120  117  124  119  120  125  122  120   121 #>  [5687,]  107  120  117  124  119  120  125  122  120   121 #>  [5688,]  107  120  117  124  119  120  125  122  120   121 #>  [5689,]  107  120  117  124  119  120  125  122  120   121 #>  [5690,]  107  120  117  124  119  120  125  122  120   121 #>  [5691,]  107  120  117  124  119  120  125  122  120   121 #>  [5692,]  107  120  117  124  119  120  125  122  120   121 #>  [5693,]  107  120  117  124  119  120  125  122  120   121 #>  [5694,]  107  120  117  124  119  120  125  122  120   121 #>  [5695,]  107  120  117  124  119  120  125  122  120   121 #>  [5696,]  106  119  116  123  118  119  124  121  119   120 #>  [5697,]  106  119  116  123  118  119  124  121  119   120 #>  [5698,]  107  120  117  124  119  120  125  122  120   121 #>  [5699,]  107  120  117  124  119  120  125  122  120   121 #>  [5700,]  107  120  117  124  119  120  125  122  120   121 #>  [5701,]  108  121  118  125  122  123  127  124  122   123 #>  [5702,]  108  121  118  125  121  122  127  124  122   123 #>  [5703,]  108  121  118  125  121  122  127  124  122   123 #>  [5704,]  108  121  118  125  121  122  127  124  122   123 #>  [5705,]  108  121  118  125  121  122  127  124  122   123 #>  [5706,]  108  121  118  125  121  122  127  124  122   123 #>  [5707,]  109  122  119  126  120  121  126  123  121   122 #>  [5708,]  108  121  118  125  121  122  127  124  122   123 #>  [5709,]  108  121  118  125  121  122  127  124  122   123 #>  [5710,]  108  121  118  125  121  122  127  124  122   123 #>  [5711,]  108  121  118  125  121  122  127  124  122   123 #>  [5712,]  108  121  118  125  121  122  127  124  122   123 #>  [5713,]  108  121  118  125  122  123  127  124  122   123 #>  [5714,]  108  121  118  125  122  123  127  124  122   123 #>  [5715,]  108  121  118  125  122  123  127  124  122   123 #>  [5716,]  109  122  119  126  120  121  126  123  121   122 #>  [5717,]  108  121  118  125  121  122  127  124  122   123 #>  [5718,]  108  121  118  125  121  122  127  124  122   123 #>  [5719,]  108  121  118  125  121  122  127  124  122   123 #>  [5720,]  109  122  119  126  120  121  126  123  121   122 #>  [5721,]  108  121  118  125  122  123  127  124  122   123 #>  [5722,]  108  121  118  125  121  122  127  124  122   123 #>  [5723,]  108  121  118  125  121  122  127  124  122   123 #>  [5724,]  109  122  119  126  120  121  126  123  121   122 #>  [5725,]  108  121  118  125  121  122  127  124  122   123 #>  [5726,]  108  121  118  125  121  122  127  124  122   123 #>  [5727,]  108  121  118  125  121  122  127  124  122   123 #>  [5728,]  109  122  119  126  120  121  126  123  121   122 #>  [5729,]  108  121  118  125  122  123  127  124  122   123 #>  [5730,]  108  121  118  125  121  122  127  124  122   123 #>  [5731,]  108  121  118  125  121  122  127  124  122   123 #>  [5732,]  108  121  118  125  121  122  127  124  122   123 #>  [5733,]  108  121  118  125  122  123  127  124  122   123 #>  [5734,]  108  121  118  125  121  122  127  124  122   123 #>  [5735,]  108  121  118  125  121  122  127  124  122   123 #>  [5736,]  108  121  118  125  121  122  127  124  122   123 #>  [5737,]  108  121  118  125  121  122  127  124  122   123 #>  [5738,]  108  121  118  125  121  122  127  124  122   123 #>  [5739,]  108  121  118  125  121  122  127  124  122   123 #>  [5740,]  108  121  118  125  121  122  127  124  122   123 #>  [5741,]  108  121  118  125  122  123  127  124  122   123 #>  [5742,]  108  121  118  125  121  122  127  124  122   123 #>  [5743,]  108  121  118  125  121  122  127  124  122   123 #>  [5744,]  108  121  118  125  122  123  127  124  122   123 #>  [5745,]  108  121  118  125  121  122  127  124  122   123 #>  [5746,]  108  121  118  125  121  122  127  124  122   123 #>  [5747,]  108  121  118  125  121  122  127  124  122   123 #>  [5748,]  108  121  118  125  121  122  127  124  122   123 #>  [5749,]  108  121  118  125  121  122  127  124  122   123 #>  [5750,]  109  122  119  126  120  121  126  123  121   122 #>  [5751,]  108  121  118  125  121  122  127  124  122   123 #>  [5752,]  109  122  119  126  120  121  126  123  121   122 #>  [5753,]  108  121  118  125  121  122  127  124  122   123 #>  [5754,]  108  121  118  125  121  122  127  124  122   123 #>  [5755,]  108  121  118  125  121  122  127  124  122   123 #>  [5756,]  108  121  118  125  121  122  127  124  122   123 #>  [5757,]  108  121  118  125  121  122  127  124  122   123 #>  [5758,]  108  121  118  125  121  122  127  124  122   123 #>  [5759,]  108  121  118  125  122  123  127  124  122   123 #>  [5760,]  108  121  118  125  121  122  127  124  122   123 #>  [5761,]  108  121  118  125  121  122  127  124  122   123 #>  [5762,]  108  121  118  125  121  122  127  124  122   123 #>  [5763,]  108  121  118  125  121  122  127  124  122   123 #>  [5764,]  108  121  118  125  121  122  127  124  122   123 #>  [5765,]  108  121  118  125  121  122  127  124  122   123 #>  [5766,]  108  121  118  125  121  122  127  124  122   123 #>  [5767,]  108  121  118  125  121  122  127  124  122   123 #>  [5768,]  108  121  118  125  122  123  127  124  122   123 #>  [5769,]  108  121  118  125  121  122  127  124  122   123 #>  [5770,]  108  121  118  125  122  123  127  124  122   123 #>  [5771,]  108  121  118  125  121  122  127  124  122   123 #>  [5772,]  108  121  118  125  121  122  127  124  122   123 #>  [5773,]  108  121  118  125  122  123  127  124  122   123 #>  [5774,]  108  121  118  125  121  122  127  124  122   123 #>  [5775,]  108  121  118  125  121  122  127  124  122   123 #>  [5776,]  109  122  119  126  120  121  126  123  121   122 #>  [5777,]  108  121  118  125  121  122  127  124  122   123 #>  [5778,]  108  121  118  125  121  122  127  124  122   123 #>  [5779,]  108  121  118  125  121  122  127  124  122   123 #>  [5780,]  108  121  118  125  121  122  127  124  122   123 #>  [5781,]  108  121  118  125  121  122  127  124  122   123 #>  [5782,]  108  121  118  125  121  122  127  124  122   123 #>  [5783,]  108  121  118  125  121  122  127  124  122   123 #>  [5784,]  108  121  118  125  121  122  127  124  122   123 #>  [5785,]  108  121  118  125  121  122  127  124  122   123 #>  [5786,]  109  122  119  126  120  121  126  123  121   122 #>  [5787,]  108  121  118  125  121  122  127  124  122   123 #>  [5788,]  108  121  118  125  121  122  127  124  122   123 #>  [5789,]  108  121  118  125  121  122  127  124  122   123 #>  [5790,]  108  121  118  125  121  122  127  124  122   123 #>  [5791,]  109  122  119  126  120  121  126  123  121   122 #>  [5792,]  108  121  118  125  121  122  127  124  122   123 #>  [5793,]  108  121  118  125  121  122  127  124  122   123 #>  [5794,]  108  121  118  125  121  122  127  124  122   123 #>  [5795,]  108  121  118  125  121  122  127  124  122   123 #>  [5796,]  108  121  118  125  122  123  127  124  122   123 #>  [5797,]  108  121  118  125  121  122  127  124  122   123 #>  [5798,]  108  121  118  125  121  122  127  124  122   123 #>  [5799,]  108  121  118  125  122  123  127  124  122   123 #>  [5800,]  108  121  118  125  121  122  127  124  122   123 #>  [5801,]  110  123  120  127  123  124  128  125  123   124 #>  [5802,]  111  124  121  128  124  125  129  126  124   125 #>  [5803,]  110  123  120  127  123  124  128  125  123   124 #>  [5804,]  110  123  120  127  123  124  128  125  123   124 #>  [5805,]  111  124  121  128  124  125  129  126  124   125 #>  [5806,]  110  123  120  127  123  124  128  125  123   124 #>  [5807,]  111  124  121  128  124  125  129  126  124   125 #>  [5808,]  110  123  120  127  123  124  128  125  123   124 #>  [5809,]  111  124  121  128  124  125  129  126  124   125 #>  [5810,]  111  124  121  128  124  125  129  126  124   125 #>  [5811,]  110  123  120  127  123  124  128  125  123   124 #>  [5812,]  111  124  121  128  124  125  129  126  124   125 #>  [5813,]  111  124  121  128  124  125  129  126  124   125 #>  [5814,]  110  123  120  127  123  124  128  125  123   124 #>  [5815,]  111  124  121  128  124  125  129  126  124   125 #>  [5816,]  110  123  120  127  123  124  128  125  123   124 #>  [5817,]  111  124  121  128  124  125  129  126  124   125 #>  [5818,]  111  124  121  128  124  125  129  126  124   125 #>  [5819,]  110  123  120  127  123  124  128  125  123   124 #>  [5820,]  111  124  121  128  124  125  129  126  124   125 #>  [5821,]  111  124  121  128  124  125  129  126  124   125 #>  [5822,]  111  124  121  128  124  125  129  126  124   125 #>  [5823,]  111  124  121  128  124  125  129  126  124   125 #>  [5824,]  111  124  121  128  124  125  129  126  124   125 #>  [5825,]  111  124  121  128  124  125  129  126  124   125 #>  [5826,]  110  123  120  127  123  124  128  125  123   124 #>  [5827,]  111  124  121  128  124  125  129  126  124   125 #>  [5828,]  110  123  120  127  123  124  128  125  123   124 #>  [5829,]  111  124  121  128  124  125  129  126  124   125 #>  [5830,]  111  124  121  128  124  125  129  126  124   125 #>  [5831,]  111  124  121  128  124  125  129  126  124   125 #>  [5832,]  111  124  121  128  124  125  129  126  124   125 #>  [5833,]  111  124  121  128  124  125  129  126  124   125 #>  [5834,]  110  123  120  127  123  124  128  125  123   124 #>  [5835,]  110  123  120  127  123  124  128  125  123   124 #>  [5836,]  111  124  121  128  124  125  129  126  124   125 #>  [5837,]  110  123  120  127  123  124  128  125  123   124 #>  [5838,]  110  123  120  127  123  124  128  125  123   124 #>  [5839,]  111  124  121  128  124  125  129  126  124   125 #>  [5840,]  111  124  121  128  124  125  129  126  124   125 #>  [5841,]  111  124  121  128  124  125  129  126  124   125 #>  [5842,]  110  123  120  127  123  124  128  125  123   124 #>  [5843,]  111  124  121  128  124  125  129  126  124   125 #>  [5844,]  111  124  121  128  124  125  129  126  124   125 #>  [5845,]  110  123  120  127  123  124  128  125  123   124 #>  [5846,]  111  124  121  128  124  125  129  126  124   125 #>  [5847,]  111  124  121  128  124  125  129  126  124   125 #>  [5848,]  111  124  121  128  124  125  129  126  124   125 #>  [5849,]  110  123  120  127  123  124  128  125  123   124 #>  [5850,]  111  124  121  128  124  125  129  126  124   125 #>  [5851,]  111  124  121  128  124  125  129  126  124   125 #>  [5852,]  110  123  120  127  123  124  128  125  123   124 #>  [5853,]  111  124  121  128  124  125  129  126  124   125 #>  [5854,]  111  124  121  128  124  125  129  126  124   125 #>  [5855,]  110  123  120  127  123  124  128  125  123   124 #>  [5856,]  110  123  120  127  123  124  128  125  123   124 #>  [5857,]  111  124  121  128  124  125  129  126  124   125 #>  [5858,]  111  124  121  128  124  125  129  126  124   125 #>  [5859,]  110  123  120  127  123  124  128  125  123   124 #>  [5860,]  111  124  121  128  124  125  129  126  124   125 #>  [5861,]  111  124  121  128  124  125  129  126  124   125 #>  [5862,]  110  123  120  127  123  124  128  125  123   124 #>  [5863,]  111  124  121  128  124  125  129  126  124   125 #>  [5864,]  110  123  120  127  123  124  128  125  123   124 #>  [5865,]  110  123  120  127  123  124  128  125  123   124 #>  [5866,]  111  124  121  128  124  125  129  126  124   125 #>  [5867,]  111  124  121  128  124  125  129  126  124   125 #>  [5868,]  110  123  120  127  123  124  128  125  123   124 #>  [5869,]  110  123  120  127  123  124  128  125  123   124 #>  [5870,]  111  124  121  128  124  125  129  126  124   125 #>  [5871,]  111  124  121  128  124  125  129  126  124   125 #>  [5872,]  110  123  120  127  123  124  128  125  123   124 #>  [5873,]  110  123  120  127  123  124  128  125  123   124 #>  [5874,]  111  124  121  128  124  125  129  126  124   125 #>  [5875,]  111  124  121  128  124  125  129  126  124   125 #>  [5876,]  111  124  121  128  124  125  129  126  124   125 #>  [5877,]  110  123  120  127  123  124  128  125  123   124 #>  [5878,]  111  124  121  128  124  125  129  126  124   125 #>  [5879,]  110  123  120  127  123  124  128  125  123   124 #>  [5880,]  111  124  121  128  124  125  129  126  124   125 #>  [5881,]  111  124  121  128  124  125  129  126  124   125 #>  [5882,]  111  124  121  128  124  125  129  126  124   125 #>  [5883,]  111  124  121  128  124  125  129  126  124   125 #>  [5884,]  111  124  121  128  124  125  129  126  124   125 #>  [5885,]  111  124  121  128  124  125  129  126  124   125 #>  [5886,]  111  124  121  128  124  125  129  126  124   125 #>  [5887,]  111  124  121  128  124  125  129  126  124   125 #>  [5888,]  111  124  121  128  124  125  129  126  124   125 #>  [5889,]  110  123  120  127  123  124  128  125  123   124 #>  [5890,]  111  124  121  128  124  125  129  126  124   125 #>  [5891,]  110  123  120  127  123  124  128  125  123   124 #>  [5892,]  111  124  121  128  124  125  129  126  124   125 #>  [5893,]  111  124  121  128  124  125  129  126  124   125 #>  [5894,]  110  123  120  127  123  124  128  125  123   124 #>  [5895,]  111  124  121  128  124  125  129  126  124   125 #>  [5896,]  110  123  120  127  123  124  128  125  123   124 #>  [5897,]  110  123  120  127  123  124  128  125  123   124 #>  [5898,]  111  124  121  128  124  125  129  126  124   125 #>  [5899,]  111  124  121  128  124  125  129  126  124   125 #>  [5900,]  110  123  120  127  123  124  128  125  123   124 #>  [5901,]  113  126  123  130  126  127  131  128  126   127 #>  [5902,]  112  125  122  129  125  126  130  127  125   126 #>  [5903,]  112  125  122  129  125  126  130  127  125   126 #>  [5904,]  113  126  123  130  126  127  131  128  126   127 #>  [5905,]  112  125  122  129  125  126  130  127  125   126 #>  [5906,]  112  125  122  129  125  126  130  127  125   126 #>  [5907,]  113  126  123  130  126  127  131  128  126   127 #>  [5908,]  113  126  123  130  126  127  131  128  126   127 #>  [5909,]  113  126  123  130  126  127  131  128  126   127 #>  [5910,]  113  126  123  130  126  127  131  128  126   127 #>  [5911,]  112  125  122  129  125  126  130  127  125   126 #>  [5912,]  112  125  122  129  125  126  130  127  125   126 #>  [5913,]  113  126  123  130  126  127  131  128  126   127 #>  [5914,]  112  125  122  129  125  126  130  127  125   126 #>  [5915,]  113  126  123  130  126  127  131  128  126   127 #>  [5916,]  113  126  123  130  126  127  131  128  126   127 #>  [5917,]  113  126  123  130  126  127  131  128  126   127 #>  [5918,]  113  126  123  130  126  127  131  128  126   127 #>  [5919,]  112  125  122  129  125  126  130  127  125   126 #>  [5920,]  112  125  122  129  125  126  130  127  125   126 #>  [5921,]  113  126  123  130  126  127  131  128  126   127 #>  [5922,]  112  125  122  129  125  126  130  127  125   126 #>  [5923,]  113  126  123  130  126  127  131  128  126   127 #>  [5924,]  112  125  122  129  125  126  130  127  125   126 #>  [5925,]  113  126  123  130  126  127  131  128  126   127 #>  [5926,]  112  125  122  129  125  126  130  127  125   126 #>  [5927,]  113  126  123  130  126  127  131  128  126   127 #>  [5928,]  113  126  123  130  126  127  131  128  126   127 #>  [5929,]  112  125  122  129  125  126  130  127  125   126 #>  [5930,]  112  125  122  129  125  126  130  127  125   126 #>  [5931,]  112  125  122  129  125  126  130  127  125   126 #>  [5932,]  112  125  122  129  125  126  130  127  125   126 #>  [5933,]  112  125  122  129  125  126  130  127  125   126 #>  [5934,]  112  125  122  129  125  126  130  127  125   126 #>  [5935,]  112  125  122  129  125  126  130  127  125   126 #>  [5936,]  112  125  122  129  125  126  130  127  125   126 #>  [5937,]  113  126  123  130  126  127  131  128  126   127 #>  [5938,]  113  126  123  130  126  127  131  128  126   127 #>  [5939,]  113  126  123  130  126  127  131  128  126   127 #>  [5940,]  112  125  122  129  125  126  130  127  125   126 #>  [5941,]  112  125  122  129  125  126  130  127  125   126 #>  [5942,]  112  125  122  129  125  126  130  127  125   126 #>  [5943,]  113  126  123  130  126  127  131  128  126   127 #>  [5944,]  113  126  123  130  126  127  131  128  126   127 #>  [5945,]  113  126  123  130  126  127  131  128  126   127 #>  [5946,]  113  126  123  130  126  127  131  128  126   127 #>  [5947,]  113  126  123  130  126  127  131  128  126   127 #>  [5948,]  112  125  122  129  125  126  130  127  125   126 #>  [5949,]  112  125  122  129  125  126  130  127  125   126 #>  [5950,]  112  125  122  129  125  126  130  127  125   126 #>  [5951,]  112  125  122  129  125  126  130  127  125   126 #>  [5952,]  112  125  122  129  125  126  130  127  125   126 #>  [5953,]  113  126  123  130  126  127  131  128  126   127 #>  [5954,]  112  125  122  129  125  126  130  127  125   126 #>  [5955,]  112  125  122  129  125  126  130  127  125   126 #>  [5956,]  113  126  123  130  126  127  131  128  126   127 #>  [5957,]  112  125  122  129  125  126  130  127  125   126 #>  [5958,]  112  125  122  129  125  126  130  127  125   126 #>  [5959,]  112  125  122  129  125  126  130  127  125   126 #>  [5960,]  112  125  122  129  125  126  130  127  125   126 #>  [5961,]  113  126  123  130  126  127  131  128  126   127 #>  [5962,]  112  125  122  129  125  126  130  127  125   126 #>  [5963,]  112  125  122  129  125  126  130  127  125   126 #>  [5964,]  113  126  123  130  126  127  131  128  126   127 #>  [5965,]  112  125  122  129  125  126  130  127  125   126 #>  [5966,]  112  125  122  129  125  126  130  127  125   126 #>  [5967,]  112  125  122  129  125  126  130  127  125   126 #>  [5968,]  112  125  122  129  125  126  130  127  125   126 #>  [5969,]  112  125  122  129  125  126  130  127  125   126 #>  [5970,]  113  126  123  130  126  127  131  128  126   127 #>  [5971,]  113  126  123  130  126  127  131  128  126   127 #>  [5972,]  113  126  123  130  126  127  131  128  126   127 #>  [5973,]  113  126  123  130  126  127  131  128  126   127 #>  [5974,]  113  126  123  130  126  127  131  128  126   127 #>  [5975,]  113  126  123  130  126  127  131  128  126   127 #>  [5976,]  113  126  123  130  126  127  131  128  126   127 #>  [5977,]  113  126  123  130  126  127  131  128  126   127 #>  [5978,]  112  125  122  129  125  126  130  127  125   126 #>  [5979,]  113  126  123  130  126  127  131  128  126   127 #>  [5980,]  112  125  122  129  125  126  130  127  125   126 #>  [5981,]  112  125  122  129  125  126  130  127  125   126 #>  [5982,]  113  126  123  130  126  127  131  128  126   127 #>  [5983,]  112  125  122  129  125  126  130  127  125   126 #>  [5984,]  113  126  123  130  126  127  131  128  126   127 #>  [5985,]  112  125  122  129  125  126  130  127  125   126 #>  [5986,]  113  126  123  130  126  127  131  128  126   127 #>  [5987,]  113  126  123  130  126  127  131  128  126   127 #>  [5988,]  113  126  123  130  126  127  131  128  126   127 #>  [5989,]  112  125  122  129  125  126  130  127  125   126 #>  [5990,]  113  126  123  130  126  127  131  128  126   127 #>  [5991,]  112  125  122  129  125  126  130  127  125   126 #>  [5992,]  112  125  122  129  125  126  130  127  125   126 #>  [5993,]  112  125  122  129  125  126  130  127  125   126 #>  [5994,]  113  126  123  130  126  127  131  128  126   127 #>  [5995,]  113  126  123  130  126  127  131  128  126   127 #>  [5996,]  113  126  123  130  126  127  131  128  126   127 #>  [5997,]  112  125  122  129  125  126  130  127  125   126 #>  [5998,]  112  125  122  129  125  126  130  127  125   126 #>  [5999,]  112  125  122  129  125  126  130  127  125   126 #>  [6000,]  113  126  123  130  126  127  131  128  126   127 #>  [6001,]  115  128  125  132  128  129  133  130  128   129 #>  [6002,]  114  127  124  131  127  128  132  129  127   128 #>  [6003,]  114  127  124  131  127  128  132  129  127   128 #>  [6004,]  114  127  124  131  127  128  132  129  127   128 #>  [6005,]  114  127  124  131  127  128  132  129  127   128 #>  [6006,]  114  127  124  131  127  128  132  129  127   128 #>  [6007,]  114  127  124  131  127  128  132  129  127   128 #>  [6008,]  114  127  124  131  127  128  132  129  127   128 #>  [6009,]  115  128  125  132  128  129  133  130  128   129 #>  [6010,]  114  127  124  131  127  128  132  129  127   128 #>  [6011,]  115  128  125  132  128  129  133  130  128   129 #>  [6012,]  114  127  124  131  127  128  132  129  127   128 #>  [6013,]  115  128  125  132  128  129  133  130  128   129 #>  [6014,]  114  127  124  131  127  128  132  129  127   128 #>  [6015,]  114  127  124  131  127  128  132  129  127   128 #>  [6016,]  114  127  124  131  127  128  132  129  127   128 #>  [6017,]  115  128  125  132  128  129  133  130  128   129 #>  [6018,]  115  128  125  132  128  129  133  130  128   129 #>  [6019,]  114  127  124  131  127  128  132  129  127   128 #>  [6020,]  115  128  125  132  128  129  133  130  128   129 #>  [6021,]  114  127  124  131  127  128  132  129  127   128 #>  [6022,]  114  127  124  131  127  128  132  129  127   128 #>  [6023,]  114  127  124  131  127  128  132  129  127   128 #>  [6024,]  114  127  124  131  127  128  132  129  127   128 #>  [6025,]  114  127  124  131  127  128  132  129  127   128 #>  [6026,]  114  127  124  131  127  128  132  129  127   128 #>  [6027,]  115  128  125  132  128  129  133  130  128   129 #>  [6028,]  115  128  125  132  128  129  133  130  128   129 #>  [6029,]  115  128  125  132  128  129  133  130  128   129 #>  [6030,]  114  127  124  131  127  128  132  129  127   128 #>  [6031,]  114  127  124  131  127  128  132  129  127   128 #>  [6032,]  114  127  124  131  127  128  132  129  127   128 #>  [6033,]  115  128  125  132  128  129  133  130  128   129 #>  [6034,]  114  127  124  131  127  128  132  129  127   128 #>  [6035,]  114  127  124  131  127  128  132  129  127   128 #>  [6036,]  115  128  125  132  128  129  133  130  128   129 #>  [6037,]  114  127  124  131  127  128  132  129  127   128 #>  [6038,]  115  128  125  132  128  129  133  130  128   129 #>  [6039,]  115  128  125  132  128  129  133  130  128   129 #>  [6040,]  114  127  124  131  127  128  132  129  127   128 #>  [6041,]  114  127  124  131  127  128  132  129  127   128 #>  [6042,]  115  128  125  132  128  129  133  130  128   129 #>  [6043,]  114  127  124  131  127  128  132  129  127   128 #>  [6044,]  114  127  124  131  127  128  132  129  127   128 #>  [6045,]  114  127  124  131  127  128  132  129  127   128 #>  [6046,]  114  127  124  131  127  128  132  129  127   128 #>  [6047,]  114  127  124  131  127  128  132  129  127   128 #>  [6048,]  114  127  124  131  127  128  132  129  127   128 #>  [6049,]  114  127  124  131  127  128  132  129  127   128 #>  [6050,]  114  127  124  131  127  128  132  129  127   128 #>  [6051,]  115  128  125  132  128  129  133  130  128   129 #>  [6052,]  114  127  124  131  127  128  132  129  127   128 #>  [6053,]  115  128  125  132  128  129  133  130  128   129 #>  [6054,]  115  128  125  132  128  129  133  130  128   129 #>  [6055,]  114  127  124  131  127  128  132  129  127   128 #>  [6056,]  115  128  125  132  128  129  133  130  128   129 #>  [6057,]  114  127  124  131  127  128  132  129  127   128 #>  [6058,]  115  128  125  132  128  129  133  130  128   129 #>  [6059,]  114  127  124  131  127  128  132  129  127   128 #>  [6060,]  114  127  124  131  127  128  132  129  127   128 #>  [6061,]  114  127  124  131  127  128  132  129  127   128 #>  [6062,]  115  128  125  132  128  129  133  130  128   129 #>  [6063,]  114  127  124  131  127  128  132  129  127   128 #>  [6064,]  114  127  124  131  127  128  132  129  127   128 #>  [6065,]  115  128  125  132  128  129  133  130  128   129 #>  [6066,]  115  128  125  132  128  129  133  130  128   129 #>  [6067,]  114  127  124  131  127  128  132  129  127   128 #>  [6068,]  114  127  124  131  127  128  132  129  127   128 #>  [6069,]  114  127  124  131  127  128  132  129  127   128 #>  [6070,]  114  127  124  131  127  128  132  129  127   128 #>  [6071,]  114  127  124  131  127  128  132  129  127   128 #>  [6072,]  114  127  124  131  127  128  132  129  127   128 #>  [6073,]  114  127  124  131  127  128  132  129  127   128 #>  [6074,]  114  127  124  131  127  128  132  129  127   128 #>  [6075,]  114  127  124  131  127  128  132  129  127   128 #>  [6076,]  114  127  124  131  127  128  132  129  127   128 #>  [6077,]  115  128  125  132  128  129  133  130  128   129 #>  [6078,]  114  127  124  131  127  128  132  129  127   128 #>  [6079,]  115  128  125  132  128  129  133  130  128   129 #>  [6080,]  114  127  124  131  127  128  132  129  127   128 #>  [6081,]  114  127  124  131  127  128  132  129  127   128 #>  [6082,]  115  128  125  132  128  129  133  130  128   129 #>  [6083,]  115  128  125  132  128  129  133  130  128   129 #>  [6084,]  115  128  125  132  128  129  133  130  128   129 #>  [6085,]  115  128  125  132  128  129  133  130  128   129 #>  [6086,]  114  127  124  131  127  128  132  129  127   128 #>  [6087,]  115  128  125  132  128  129  133  130  128   129 #>  [6088,]  114  127  124  131  127  128  132  129  127   128 #>  [6089,]  115  128  125  132  128  129  133  130  128   129 #>  [6090,]  115  128  125  132  128  129  133  130  128   129 #>  [6091,]  115  128  125  132  128  129  133  130  128   129 #>  [6092,]  114  127  124  131  127  128  132  129  127   128 #>  [6093,]  115  128  125  132  128  129  133  130  128   129 #>  [6094,]  115  128  125  132  128  129  133  130  128   129 #>  [6095,]  114  127  124  131  127  128  132  129  127   128 #>  [6096,]  114  127  124  131  127  128  132  129  127   128 #>  [6097,]  114  127  124  131  127  128  132  129  127   128 #>  [6098,]  114  127  124  131  127  128  132  129  127   128 #>  [6099,]  114  127  124  131  127  128  132  129  127   128 #>  [6100,]  114  127  124  131  127  128  132  129  127   128 #>  [6101,]  117  130  127  134  130  132  136  132  130   131 #>  [6102,]  116  129  126  133  129  130  134  131  129   130 #>  [6103,]  116  129  126  133  129  130  134  131  129   130 #>  [6104,]  117  130  127  134  130  131  135  132  130   131 #>  [6105,]  116  129  126  133  129  130  134  131  129   130 #>  [6106,]  116  129  126  133  129  130  134  131  129   130 #>  [6107,]  117  130  127  134  130  131  135  132  130   131 #>  [6108,]  116  129  126  133  129  130  134  131  129   130 #>  [6109,]  117  130  127  134  130  132  136  132  130   131 #>  [6110,]  117  130  127  134  130  131  135  132  130   131 #>  [6111,]  116  129  126  133  129  130  134  131  129   130 #>  [6112,]  116  129  126  133  129  130  134  131  129   130 #>  [6113,]  117  130  127  134  130  132  136  132  130   131 #>  [6114,]  117  130  127  134  130  131  135  132  130   131 #>  [6115,]  116  129  126  133  129  130  134  131  129   130 #>  [6116,]  117  130  127  134  130  131  135  132  130   131 #>  [6117,]  116  129  126  133  129  130  134  131  129   130 #>  [6118,]  116  129  126  133  129  130  134  131  129   130 #>  [6119,]  116  129  126  133  129  130  134  131  129   130 #>  [6120,]  117  130  127  134  130  131  135  132  130   131 #>  [6121,]  116  129  126  133  129  130  134  131  129   130 #>  [6122,]  117  130  127  134  130  131  135  132  130   131 #>  [6123,]  116  129  126  133  129  130  134  131  129   130 #>  [6124,]  117  130  127  134  130  131  135  132  130   131 #>  [6125,]  117  130  127  134  130  131  135  132  130   131 #>  [6126,]  116  129  126  133  129  130  134  131  129   130 #>  [6127,]  116  129  126  133  129  130  134  131  129   130 #>  [6128,]  117  130  127  134  130  131  135  132  130   131 #>  [6129,]  116  129  126  133  129  130  134  131  129   130 #>  [6130,]  116  129  126  133  129  130  134  131  129   130 #>  [6131,]  116  129  126  133  129  130  134  131  129   130 #>  [6132,]  116  129  126  133  129  130  134  131  129   130 #>  [6133,]  116  129  126  133  129  130  134  131  129   130 #>  [6134,]  116  129  126  133  129  130  134  131  129   130 #>  [6135,]  116  129  126  133  129  130  134  131  129   130 #>  [6136,]  117  130  127  134  130  132  136  132  130   131 #>  [6137,]  116  129  126  133  129  130  134  131  129   130 #>  [6138,]  116  129  126  133  129  130  134  131  129   130 #>  [6139,]  117  130  127  134  130  131  135  132  130   131 #>  [6140,]  116  129  126  133  129  130  134  131  129   130 #>  [6141,]  116  129  126  133  129  130  134  131  129   130 #>  [6142,]  116  129  126  133  129  130  134  131  129   130 #>  [6143,]  116  129  126  133  129  130  134  131  129   130 #>  [6144,]  116  129  126  133  129  130  134  131  129   130 #>  [6145,]  117  130  127  134  130  131  135  132  130   131 #>  [6146,]  116  129  126  133  129  130  134  131  129   130 #>  [6147,]  116  129  126  133  129  130  134  131  129   130 #>  [6148,]  116  129  126  133  129  130  134  131  129   130 #>  [6149,]  117  130  127  134  130  131  135  132  130   131 #>  [6150,]  117  130  127  134  130  131  135  132  130   131 #>  [6151,]  116  129  126  133  129  130  134  131  129   130 #>  [6152,]  117  130  127  134  130  131  135  132  130   131 #>  [6153,]  117  130  127  134  130  132  136  132  130   131 #>  [6154,]  117  130  127  134  130  132  136  132  130   131 #>  [6155,]  117  130  127  134  130  131  135  132  130   131 #>  [6156,]  116  129  126  133  129  130  134  131  129   130 #>  [6157,]  117  130  127  134  130  131  135  132  130   131 #>  [6158,]  117  130  127  134  130  131  135  132  130   131 #>  [6159,]  117  130  127  134  130  131  135  132  130   131 #>  [6160,]  116  129  126  133  129  130  134  131  129   130 #>  [6161,]  116  129  126  133  129  130  134  131  129   130 #>  [6162,]  116  129  126  133  129  130  134  131  129   130 #>  [6163,]  116  129  126  133  129  130  134  131  129   130 #>  [6164,]  116  129  126  133  129  130  134  131  129   130 #>  [6165,]  116  129  126  133  129  130  134  131  129   130 #>  [6166,]  116  129  126  133  129  130  134  131  129   130 #>  [6167,]  117  130  127  134  130  131  135  132  130   131 #>  [6168,]  116  129  126  133  129  130  134  131  129   130 #>  [6169,]  116  129  126  133  129  130  134  131  129   130 #>  [6170,]  116  129  126  133  129  130  134  131  129   130 #>  [6171,]  116  129  126  133  129  130  134  131  129   130 #>  [6172,]  117  130  127  134  130  131  135  132  130   131 #>  [6173,]  117  130  127  134  130  131  135  132  130   131 #>  [6174,]  116  129  126  133  129  130  134  131  129   130 #>  [6175,]  116  129  126  133  129  130  134  131  129   130 #>  [6176,]  117  130  127  134  130  131  135  132  130   131 #>  [6177,]  116  129  126  133  129  130  134  131  129   130 #>  [6178,]  116  129  126  133  129  130  134  131  129   130 #>  [6179,]  116  129  126  133  129  130  134  131  129   130 #>  [6180,]  116  129  126  133  129  130  134  131  129   130 #>  [6181,]  116  129  126  133  129  130  134  131  129   130 #>  [6182,]  116  129  126  133  129  130  134  131  129   130 #>  [6183,]  116  129  126  133  129  130  134  131  129   130 #>  [6184,]  116  129  126  133  129  130  134  131  129   130 #>  [6185,]  117  130  127  134  130  131  135  132  130   131 #>  [6186,]  117  130  127  134  130  131  135  132  130   131 #>  [6187,]  117  130  127  134  130  132  136  132  130   131 #>  [6188,]  117  130  127  134  130  131  135  132  130   131 #>  [6189,]  116  129  126  133  129  130  134  131  129   130 #>  [6190,]  117  130  127  134  130  131  135  132  130   131 #>  [6191,]  117  130  127  134  130  132  136  132  130   131 #>  [6192,]  116  129  126  133  129  130  134  131  129   130 #>  [6193,]  116  129  126  133  129  130  134  131  129   130 #>  [6194,]  116  129  126  133  129  130  134  131  129   130 #>  [6195,]  116  129  126  133  129  130  134  131  129   130 #>  [6196,]  116  129  126  133  129  130  134  131  129   130 #>  [6197,]  116  129  126  133  129  130  134  131  129   130 #>  [6198,]  116  129  126  133  129  130  134  131  129   130 #>  [6199,]  116  129  126  133  129  130  134  131  129   130 #>  [6200,]  116  129  126  133  129  130  134  131  129   130 #>  [6201,]  118  131  128  135  131  133  137  133  131   132 #>  [6202,]  118  131  128  135  131  133  137  133  131   132 #>  [6203,]  118  131  128  135  131  133  137  133  131   132 #>  [6204,]  118  131  128  135  131  133  137  133  131   132 #>  [6205,]  118  131  128  135  131  133  137  133  131   132 #>  [6206,]  118  131  128  135  131  133  137  133  131   132 #>  [6207,]  118  131  128  135  131  133  137  133  131   132 #>  [6208,]  119  132  129  136  132  134  138  134  132   133 #>  [6209,]  118  131  128  135  131  133  137  133  131   132 #>  [6210,]  118  131  128  135  131  133  137  133  131   132 #>  [6211,]  118  131  128  135  131  133  137  133  131   132 #>  [6212,]  118  131  128  135  131  133  137  133  131   132 #>  [6213,]  119  132  129  136  132  134  138  134  132   133 #>  [6214,]  118  131  128  135  131  133  137  133  131   132 #>  [6215,]  119  132  129  136  132  134  138  134  132   133 #>  [6216,]  118  131  128  135  131  133  137  133  131   132 #>  [6217,]  118  131  128  135  131  133  137  133  131   132 #>  [6218,]  118  131  128  135  131  133  137  133  131   132 #>  [6219,]  119  132  129  136  132  134  138  134  132   133 #>  [6220,]  119  132  129  136  132  134  138  134  132   133 #>  [6221,]  118  131  128  135  131  133  137  133  131   132 #>  [6222,]  119  132  129  136  132  134  138  134  132   133 #>  [6223,]  118  131  128  135  131  133  137  133  131   132 #>  [6224,]  118  131  128  135  131  133  137  133  131   132 #>  [6225,]  118  131  128  135  131  133  137  133  131   132 #>  [6226,]  118  131  128  135  131  133  137  133  131   132 #>  [6227,]  119  132  129  136  132  134  138  134  132   133 #>  [6228,]  118  131  128  135  131  133  137  133  131   132 #>  [6229,]  119  132  129  136  132  134  138  134  132   133 #>  [6230,]  118  131  128  135  131  133  137  133  131   132 #>  [6231,]  118  131  128  135  131  133  137  133  131   132 #>  [6232,]  118  131  128  135  131  133  137  133  131   132 #>  [6233,]  118  131  128  135  131  133  137  133  131   132 #>  [6234,]  118  131  128  135  131  133  137  133  131   132 #>  [6235,]  118  131  128  135  131  133  137  133  131   132 #>  [6236,]  119  132  129  136  132  134  138  134  132   133 #>  [6237,]  119  132  129  136  132  134  138  134  132   133 #>  [6238,]  119  132  129  136  132  134  138  134  132   133 #>  [6239,]  118  131  128  135  131  133  137  133  131   132 #>  [6240,]  118  131  128  135  131  133  137  133  131   132 #>  [6241,]  119  132  129  136  132  134  138  134  132   133 #>  [6242,]  118  131  128  135  131  133  137  133  131   132 #>  [6243,]  118  131  128  135  131  133  137  133  131   132 #>  [6244,]  118  131  128  135  131  133  137  133  131   132 #>  [6245,]  118  131  128  135  131  133  137  133  131   132 #>  [6246,]  119  132  129  136  132  134  138  134  132   133 #>  [6247,]  118  131  128  135  131  133  137  133  131   132 #>  [6248,]  118  131  128  135  131  133  137  133  131   132 #>  [6249,]  118  131  128  135  131  133  137  133  131   132 #>  [6250,]  119  132  129  136  132  134  138  134  132   133 #>  [6251,]  119  132  129  136  132  134  138  134  132   133 #>  [6252,]  118  131  128  135  131  133  137  133  131   132 #>  [6253,]  119  132  129  136  132  134  138  134  132   133 #>  [6254,]  118  131  128  135  131  133  137  133  131   132 #>  [6255,]  119  132  129  136  132  134  138  134  132   133 #>  [6256,]  118  131  128  135  131  133  137  133  131   132 #>  [6257,]  118  131  128  135  131  133  137  133  131   132 #>  [6258,]  119  132  129  136  132  134  138  134  132   133 #>  [6259,]  118  131  128  135  131  133  137  133  131   132 #>  [6260,]  119  132  129  136  132  134  138  134  132   133 #>  [6261,]  118  131  128  135  131  133  137  133  131   132 #>  [6262,]  118  131  128  135  131  133  137  133  131   132 #>  [6263,]  118  131  128  135  131  133  137  133  131   132 #>  [6264,]  119  132  129  136  132  134  138  134  132   133 #>  [6265,]  118  131  128  135  131  133  137  133  131   132 #>  [6266,]  119  132  129  136  132  134  138  134  132   133 #>  [6267,]  118  131  128  135  131  133  137  133  131   132 #>  [6268,]  118  131  128  135  131  133  137  133  131   132 #>  [6269,]  119  132  129  136  132  134  138  134  132   133 #>  [6270,]  118  131  128  135  131  133  137  133  131   132 #>  [6271,]  119  132  129  136  132  134  138  134  132   133 #>  [6272,]  118  131  128  135  131  133  137  133  131   132 #>  [6273,]  118  131  128  135  131  133  137  133  131   132 #>  [6274,]  118  131  128  135  131  133  137  133  131   132 #>  [6275,]  118  131  128  135  131  133  137  133  131   132 #>  [6276,]  118  131  128  135  131  133  137  133  131   132 #>  [6277,]  119  132  129  136  132  134  138  134  132   133 #>  [6278,]  118  131  128  135  131  133  137  133  131   132 #>  [6279,]  118  131  128  135  131  133  137  133  131   132 #>  [6280,]  119  132  129  136  132  134  138  134  132   133 #>  [6281,]  119  132  129  136  132  134  138  134  132   133 #>  [6282,]  118  131  128  135  131  133  137  133  131   132 #>  [6283,]  119  132  129  136  132  134  138  134  132   133 #>  [6284,]  119  132  129  136  132  134  138  134  132   133 #>  [6285,]  119  132  129  136  132  134  138  134  132   133 #>  [6286,]  118  131  128  135  131  133  137  133  131   132 #>  [6287,]  119  132  129  136  132  134  138  134  132   133 #>  [6288,]  118  131  128  135  131  133  137  133  131   132 #>  [6289,]  118  131  128  135  131  133  137  133  131   132 #>  [6290,]  119  132  129  136  132  134  138  134  132   133 #>  [6291,]  118  131  128  135  131  133  137  133  131   132 #>  [6292,]  118  131  128  135  131  133  137  133  131   132 #>  [6293,]  118  131  128  135  131  133  137  133  131   132 #>  [6294,]  118  131  128  135  131  133  137  133  131   132 #>  [6295,]  118  131  128  135  131  133  137  133  131   132 #>  [6296,]  119  132  129  136  132  134  138  134  132   133 #>  [6297,]  119  132  129  136  132  134  138  134  132   133 #>  [6298,]  118  131  128  135  131  133  137  133  131   132 #>  [6299,]  118  131  128  135  131  133  137  133  131   132 #>  [6300,]  119  132  129  136  132  134  138  134  132   133 #>  [6301,]  121  134  131  138  134  137  140  136  134   135 #>  [6302,]  120  133  130  137  133  135  139  135  133   134 #>  [6303,]  121  134  131  138  134  137  140  136  134   135 #>  [6304,]  121  134  131  138  134  136  140  136  134   135 #>  [6305,]  121  134  131  138  134  137  140  136  134   135 #>  [6306,]  120  133  130  137  133  135  139  135  133   134 #>  [6307,]  121  134  131  138  134  137  140  136  134   135 #>  [6308,]  121  134  131  138  134  136  140  136  134   135 #>  [6309,]  121  134  131  138  134  136  140  136  134   135 #>  [6310,]  121  134  131  138  134  136  140  136  134   135 #>  [6311,]  120  133  130  137  133  135  139  135  133   134 #>  [6312,]  120  133  130  137  133  135  139  135  133   134 #>  [6313,]  121  134  131  138  134  137  140  136  134   135 #>  [6314,]  121  134  131  138  134  137  140  136  134   135 #>  [6315,]  120  133  130  137  133  135  139  135  133   134 #>  [6316,]  121  134  131  138  134  137  140  136  134   135 #>  [6317,]  120  133  130  137  133  135  139  135  133   134 #>  [6318,]  121  134  131  138  134  137  140  136  134   135 #>  [6319,]  120  133  130  137  133  135  139  135  133   134 #>  [6320,]  121  134  131  138  134  137  140  136  134   135 #>  [6321,]  121  134  131  138  134  137  140  136  134   135 #>  [6322,]  121  134  131  138  134  137  140  136  134   135 #>  [6323,]  120  133  130  137  133  135  139  135  133   134 #>  [6324,]  121  134  131  138  134  137  140  136  134   135 #>  [6325,]  121  134  131  138  134  137  140  136  134   135 #>  [6326,]  120  133  130  137  133  135  139  135  133   134 #>  [6327,]  121  134  131  138  134  137  140  136  134   135 #>  [6328,]  121  134  131  138  134  137  140  136  134   135 #>  [6329,]  120  133  130  137  133  135  139  135  133   134 #>  [6330,]  120  133  130  137  133  135  139  135  133   134 #>  [6331,]  120  133  130  137  133  135  139  135  133   134 #>  [6332,]  121  134  131  138  134  137  140  136  134   135 #>  [6333,]  121  134  131  138  134  137  140  136  134   135 #>  [6334,]  120  133  130  137  133  135  139  135  133   134 #>  [6335,]  120  133  130  137  133  135  139  135  133   134 #>  [6336,]  121  134  131  138  134  137  140  136  134   135 #>  [6337,]  120  133  130  137  133  135  139  135  133   134 #>  [6338,]  121  134  131  138  134  137  140  136  134   135 #>  [6339,]  121  134  131  138  134  137  140  136  134   135 #>  [6340,]  121  134  131  138  134  137  140  136  134   135 #>  [6341,]  121  134  131  138  134  137  140  136  134   135 #>  [6342,]  120  133  130  137  133  135  139  135  133   134 #>  [6343,]  120  133  130  137  133  135  139  135  133   134 #>  [6344,]  120  133  130  137  133  135  139  135  133   134 #>  [6345,]  121  134  131  138  134  137  140  136  134   135 #>  [6346,]  120  133  130  137  133  135  139  135  133   134 #>  [6347,]  120  133  130  137  133  135  139  135  133   134 #>  [6348,]  120  133  130  137  133  135  139  135  133   134 #>  [6349,]  121  134  131  138  134  137  140  136  134   135 #>  [6350,]  121  134  131  138  134  137  140  136  134   135 #>  [6351,]  121  134  131  138  134  136  140  136  134   135 #>  [6352,]  121  134  131  138  134  137  140  136  134   135 #>  [6353,]  121  134  131  138  134  137  140  136  134   135 #>  [6354,]  121  134  131  138  134  137  140  136  134   135 #>  [6355,]  121  134  131  138  134  137  140  136  134   135 #>  [6356,]  120  133  130  137  133  135  139  135  133   134 #>  [6357,]  121  134  131  138  134  137  140  136  134   135 #>  [6358,]  121  134  131  138  134  137  140  136  134   135 #>  [6359,]  121  134  131  138  134  137  140  136  134   135 #>  [6360,]  120  133  130  137  133  135  139  135  133   134 #>  [6361,]  120  133  130  137  133  135  139  135  133   134 #>  [6362,]  121  134  131  138  134  137  140  136  134   135 #>  [6363,]  120  133  130  137  133  135  139  135  133   134 #>  [6364,]  120  133  130  137  133  135  139  135  133   134 #>  [6365,]  120  133  130  137  133  135  139  135  133   134 #>  [6366,]  120  133  130  137  133  135  139  135  133   134 #>  [6367,]  121  134  131  138  134  136  140  136  134   135 #>  [6368,]  120  133  130  137  133  135  139  135  133   134 #>  [6369,]  121  134  131  138  134  137  140  136  134   135 #>  [6370,]  120  133  130  137  133  135  139  135  133   134 #>  [6371,]  121  134  131  138  134  137  140  136  134   135 #>  [6372,]  121  134  131  138  134  137  140  136  134   135 #>  [6373,]  121  134  131  138  134  137  140  136  134   135 #>  [6374,]  121  134  131  138  134  137  140  136  134   135 #>  [6375,]  120  133  130  137  133  135  139  135  133   134 #>  [6376,]  121  134  131  138  134  137  140  136  134   135 #>  [6377,]  121  134  131  138  134  137  140  136  134   135 #>  [6378,]  120  133  130  137  133  135  139  135  133   134 #>  [6379,]  120  133  130  137  133  135  139  135  133   134 #>  [6380,]  121  134  131  138  134  137  140  136  134   135 #>  [6381,]  120  133  130  137  133  135  139  135  133   134 #>  [6382,]  121  134  131  138  134  137  140  136  134   135 #>  [6383,]  121  134  131  138  134  137  140  136  134   135 #>  [6384,]  121  134  131  138  134  137  140  136  134   135 #>  [6385,]  121  134  131  138  134  136  140  136  134   135 #>  [6386,]  121  134  131  138  134  137  140  136  134   135 #>  [6387,]  121  134  131  138  134  137  140  136  134   135 #>  [6388,]  121  134  131  138  134  137  140  136  134   135 #>  [6389,]  121  134  131  138  134  137  140  136  134   135 #>  [6390,]  121  134  131  138  134  137  140  136  134   135 #>  [6391,]  121  134  131  138  134  136  140  136  134   135 #>  [6392,]  120  133  130  137  133  135  139  135  133   134 #>  [6393,]  120  133  130  137  133  135  139  135  133   134 #>  [6394,]  120  133  130  137  133  135  139  135  133   134 #>  [6395,]  120  133  130  137  133  135  139  135  133   134 #>  [6396,]  120  133  130  137  133  135  139  135  133   134 #>  [6397,]  121  134  131  138  134  137  140  136  134   135 #>  [6398,]  121  134  131  138  134  137  140  136  134   135 #>  [6399,]  121  134  131  138  134  137  140  136  134   135 #>  [6400,]  120  133  130  137  133  135  139  135  133   134 #>  [6401,]  123  136  133  140  136  139  142  138  136   137 #>  [6402,]  123  136  133  140  136  139  142  138  136   137 #>  [6403,]  122  135  132  139  135  138  141  137  135   136 #>  [6404,]  123  136  133  140  136  139  142  138  136   137 #>  [6405,]  123  136  133  140  136  139  142  138  136   137 #>  [6406,]  122  135  132  139  135  138  141  137  135   136 #>  [6407,]  122  135  132  139  135  138  141  137  135   136 #>  [6408,]  123  136  133  140  136  139  142  138  136   137 #>  [6409,]  123  136  133  140  136  139  142  138  136   137 #>  [6410,]  123  136  133  140  136  139  142  138  136   137 #>  [6411,]  123  136  133  140  136  139  142  138  136   137 #>  [6412,]  123  136  133  140  136  139  142  138  136   137 #>  [6413,]  123  136  133  140  136  139  142  138  136   137 #>  [6414,]  123  136  133  140  136  139  142  138  136   137 #>  [6415,]  123  136  133  140  136  139  142  138  136   137 #>  [6416,]  123  136  133  140  136  139  142  138  136   137 #>  [6417,]  123  136  133  140  136  139  142  138  136   137 #>  [6418,]  123  136  133  140  136  139  142  138  136   137 #>  [6419,]  123  136  133  140  136  139  142  138  136   137 #>  [6420,]  122  135  132  139  135  138  141  137  135   136 #>  [6421,]  122  135  132  139  135  138  141  137  135   136 #>  [6422,]  123  136  133  140  136  139  142  138  136   137 #>  [6423,]  122  135  132  139  135  138  141  137  135   136 #>  [6424,]  123  136  133  140  136  139  142  138  136   137 #>  [6425,]  122  135  132  139  135  138  141  137  135   136 #>  [6426,]  123  136  133  140  136  139  142  138  136   137 #>  [6427,]  123  136  133  140  136  139  142  138  136   137 #>  [6428,]  123  136  133  140  136  139  142  138  136   137 #>  [6429,]  122  135  132  139  135  138  141  137  135   136 #>  [6430,]  123  136  133  140  136  139  142  138  136   137 #>  [6431,]  123  136  133  140  136  139  142  138  136   137 #>  [6432,]  123  136  133  140  136  139  142  138  136   137 #>  [6433,]  123  136  133  140  136  139  142  138  136   137 #>  [6434,]  122  135  132  139  135  138  141  137  135   136 #>  [6435,]  122  135  132  139  135  138  141  137  135   136 #>  [6436,]  123  136  133  140  136  139  142  138  136   137 #>  [6437,]  122  135  132  139  135  138  141  137  135   136 #>  [6438,]  123  136  133  140  136  139  142  138  136   137 #>  [6439,]  123  136  133  140  136  139  142  138  136   137 #>  [6440,]  123  136  133  140  136  139  142  138  136   137 #>  [6441,]  123  136  133  140  136  139  142  138  136   137 #>  [6442,]  122  135  132  139  135  138  141  137  135   136 #>  [6443,]  123  136  133  140  136  139  142  138  136   137 #>  [6444,]  122  135  132  139  135  138  141  137  135   136 #>  [6445,]  122  135  132  139  135  138  141  137  135   136 #>  [6446,]  123  136  133  140  136  139  142  138  136   137 #>  [6447,]  123  136  133  140  136  139  142  138  136   137 #>  [6448,]  123  136  133  140  136  139  142  138  136   137 #>  [6449,]  123  136  133  140  136  139  142  138  136   137 #>  [6450,]  122  135  132  139  135  138  141  137  135   136 #>  [6451,]  123  136  133  140  136  139  142  138  136   137 #>  [6452,]  123  136  133  140  136  139  142  138  136   137 #>  [6453,]  122  135  132  139  135  138  141  137  135   136 #>  [6454,]  122  135  132  139  135  138  141  137  135   136 #>  [6455,]  122  135  132  139  135  138  141  137  135   136 #>  [6456,]  122  135  132  139  135  138  141  137  135   136 #>  [6457,]  122  135  132  139  135  138  141  137  135   136 #>  [6458,]  123  136  133  140  136  139  142  138  136   137 #>  [6459,]  123  136  133  140  136  139  142  138  136   137 #>  [6460,]  122  135  132  139  135  138  141  137  135   136 #>  [6461,]  123  136  133  140  136  139  142  138  136   137 #>  [6462,]  123  136  133  140  136  139  142  138  136   137 #>  [6463,]  123  136  133  140  136  139  142  138  136   137 #>  [6464,]  122  135  132  139  135  138  141  137  135   136 #>  [6465,]  122  135  132  139  135  138  141  137  135   136 #>  [6466,]  123  136  133  140  136  139  142  138  136   137 #>  [6467,]  123  136  133  140  136  139  142  138  136   137 #>  [6468,]  123  136  133  140  136  139  142  138  136   137 #>  [6469,]  123  136  133  140  136  139  142  138  136   137 #>  [6470,]  123  136  133  140  136  139  142  138  136   137 #>  [6471,]  123  136  133  140  136  139  142  138  136   137 #>  [6472,]  123  136  133  140  136  139  142  138  136   137 #>  [6473,]  122  135  132  139  135  138  141  137  135   136 #>  [6474,]  122  135  132  139  135  138  141  137  135   136 #>  [6475,]  123  136  133  140  136  139  142  138  136   137 #>  [6476,]  123  136  133  140  136  139  142  138  136   137 #>  [6477,]  123  136  133  140  136  139  142  138  136   137 #>  [6478,]  123  136  133  140  136  139  142  138  136   137 #>  [6479,]  123  136  133  140  136  139  142  138  136   137 #>  [6480,]  122  135  132  139  135  138  141  137  135   136 #>  [6481,]  122  135  132  139  135  138  141  137  135   136 #>  [6482,]  122  135  132  139  135  138  141  137  135   136 #>  [6483,]  123  136  133  140  136  139  142  138  136   137 #>  [6484,]  122  135  132  139  135  138  141  137  135   136 #>  [6485,]  122  135  132  139  135  138  141  137  135   136 #>  [6486,]  122  135  132  139  135  138  141  137  135   136 #>  [6487,]  123  136  133  140  136  139  142  138  136   137 #>  [6488,]  122  135  132  139  135  138  141  137  135   136 #>  [6489,]  122  135  132  139  135  138  141  137  135   136 #>  [6490,]  123  136  133  140  136  139  142  138  136   137 #>  [6491,]  123  136  133  140  136  139  142  138  136   137 #>  [6492,]  123  136  133  140  136  139  142  138  136   137 #>  [6493,]  123  136  133  140  136  139  142  138  136   137 #>  [6494,]  122  135  132  139  135  138  141  137  135   136 #>  [6495,]  123  136  133  140  136  139  142  138  136   137 #>  [6496,]  123  136  133  140  136  139  142  138  136   137 #>  [6497,]  122  135  132  139  135  138  141  137  135   136 #>  [6498,]  122  135  132  139  135  138  141  137  135   136 #>  [6499,]  122  135  132  139  135  138  141  137  135   136 #>  [6500,]  123  136  133  140  136  139  142  138  136   137 #>  [6501,]  125  138  135  142  138  141  144  140  138   139 #>  [6502,]  125  138  135  142  138  141  144  140  138   139 #>  [6503,]  125  138  135  142  138  141  144  140  138   139 #>  [6504,]  125  138  135  142  138  141  144  140  138   139 #>  [6505,]  125  138  135  142  138  141  144  140  138   139 #>  [6506,]  125  138  135  142  138  141  144  140  138   139 #>  [6507,]  124  137  134  141  137  140  143  139  137   138 #>  [6508,]  125  138  135  142  138  141  144  140  138   139 #>  [6509,]  125  138  135  142  138  141  144  140  138   139 #>  [6510,]  125  138  135  142  138  141  144  140  138   139 #>  [6511,]  125  138  135  142  138  141  144  140  138   139 #>  [6512,]  125  138  135  142  138  141  144  140  138   139 #>  [6513,]  125  138  135  142  138  141  144  140  138   139 #>  [6514,]  125  138  135  142  138  141  144  140  138   139 #>  [6515,]  125  138  135  142  138  141  144  140  138   139 #>  [6516,]  125  138  135  142  138  141  144  140  138   139 #>  [6517,]  125  138  135  142  138  141  144  140  138   139 #>  [6518,]  125  138  135  142  138  141  144  140  138   139 #>  [6519,]  125  138  135  142  138  141  144  140  138   139 #>  [6520,]  125  138  135  142  138  141  144  140  138   139 #>  [6521,]  124  137  134  141  137  140  143  139  137   138 #>  [6522,]  125  138  135  142  138  141  144  140  138   139 #>  [6523,]  124  137  134  141  137  140  143  139  137   138 #>  [6524,]  125  138  135  142  138  141  144  140  138   139 #>  [6525,]  125  138  135  142  138  141  144  140  138   139 #>  [6526,]  125  138  135  142  138  141  144  140  138   139 #>  [6527,]  125  138  135  142  138  141  144  140  138   139 #>  [6528,]  125  138  135  142  138  141  144  140  138   139 #>  [6529,]  125  138  135  142  138  141  144  140  138   139 #>  [6530,]  124  137  134  141  137  140  143  139  137   138 #>  [6531,]  125  138  135  142  138  141  144  140  138   139 #>  [6532,]  125  138  135  142  138  141  144  140  138   139 #>  [6533,]  125  138  135  142  138  141  144  140  138   139 #>  [6534,]  125  138  135  142  138  141  144  140  138   139 #>  [6535,]  125  138  135  142  138  141  144  140  138   139 #>  [6536,]  125  138  135  142  138  141  144  140  138   139 #>  [6537,]  125  138  135  142  138  141  144  140  138   139 #>  [6538,]  125  138  135  142  138  141  144  140  138   139 #>  [6539,]  124  137  134  141  137  140  143  139  137   138 #>  [6540,]  125  138  135  142  138  141  144  140  138   139 #>  [6541,]  125  138  135  142  138  141  144  140  138   139 #>  [6542,]  125  138  135  142  138  141  144  140  138   139 #>  [6543,]  125  138  135  142  138  141  144  140  138   139 #>  [6544,]  125  138  135  142  138  141  144  140  138   139 #>  [6545,]  125  138  135  142  138  141  144  140  138   139 #>  [6546,]  125  138  135  142  138  141  144  140  138   139 #>  [6547,]  125  138  135  142  138  141  144  140  138   139 #>  [6548,]  125  138  135  142  138  141  144  140  138   139 #>  [6549,]  124  137  134  141  137  140  143  139  137   138 #>  [6550,]  125  138  135  142  138  141  144  140  138   139 #>  [6551,]  125  138  135  142  138  141  144  140  138   139 #>  [6552,]  125  138  135  142  138  141  144  140  138   139 #>  [6553,]  125  138  135  142  138  141  144  140  138   139 #>  [6554,]  124  137  134  141  137  140  143  139  137   138 #>  [6555,]  125  138  135  142  138  141  144  140  138   139 #>  [6556,]  125  138  135  142  138  141  144  140  138   139 #>  [6557,]  125  138  135  142  138  141  144  140  138   139 #>  [6558,]  125  138  135  142  138  141  144  140  138   139 #>  [6559,]  125  138  135  142  138  141  144  140  138   139 #>  [6560,]  125  138  135  142  138  141  144  140  138   139 #>  [6561,]  125  138  135  142  138  141  144  140  138   139 #>  [6562,]  124  137  134  141  137  140  143  139  137   138 #>  [6563,]  125  138  135  142  138  141  144  140  138   139 #>  [6564,]  125  138  135  142  138  141  144  140  138   139 #>  [6565,]  125  138  135  142  138  141  144  140  138   139 #>  [6566,]  125  138  135  142  138  141  144  140  138   139 #>  [6567,]  125  138  135  142  138  141  144  140  138   139 #>  [6568,]  125  138  135  142  138  141  144  140  138   139 #>  [6569,]  125  138  135  142  138  141  144  140  138   139 #>  [6570,]  124  137  134  141  137  140  143  139  137   138 #>  [6571,]  125  138  135  142  138  141  144  140  138   139 #>  [6572,]  125  138  135  142  138  141  144  140  138   139 #>  [6573,]  125  138  135  142  138  141  144  140  138   139 #>  [6574,]  125  138  135  142  138  141  144  140  138   139 #>  [6575,]  125  138  135  142  138  141  144  140  138   139 #>  [6576,]  125  138  135  142  138  141  144  140  138   139 #>  [6577,]  125  138  135  142  138  141  144  140  138   139 #>  [6578,]  125  138  135  142  138  141  144  140  138   139 #>  [6579,]  125  138  135  142  138  141  144  140  138   139 #>  [6580,]  124  137  134  141  137  140  143  139  137   138 #>  [6581,]  125  138  135  142  138  141  144  140  138   139 #>  [6582,]  125  138  135  142  138  141  144  140  138   139 #>  [6583,]  124  137  134  141  137  140  143  139  137   138 #>  [6584,]  125  138  135  142  138  141  144  140  138   139 #>  [6585,]  125  138  135  142  138  141  144  140  138   139 #>  [6586,]  125  138  135  142  138  141  144  140  138   139 #>  [6587,]  125  138  135  142  138  141  144  140  138   139 #>  [6588,]  125  138  135  142  138  141  144  140  138   139 #>  [6589,]  125  138  135  142  138  141  144  140  138   139 #>  [6590,]  125  138  135  142  138  141  144  140  138   139 #>  [6591,]  125  138  135  142  138  141  144  140  138   139 #>  [6592,]  125  138  135  142  138  141  144  140  138   139 #>  [6593,]  125  138  135  142  138  141  144  140  138   139 #>  [6594,]  125  138  135  142  138  141  144  140  138   139 #>  [6595,]  124  137  134  141  137  140  143  139  137   138 #>  [6596,]  125  138  135  142  138  141  144  140  138   139 #>  [6597,]  125  138  135  142  138  141  144  140  138   139 #>  [6598,]  124  137  134  141  137  140  143  139  137   138 #>  [6599,]  125  138  135  142  138  141  144  140  138   139 #>  [6600,]  125  138  135  142  138  141  144  140  138   139 #>  [6601,]  127  140  137  144  141  144  146  142  139   140 #>  [6602,]  126  139  136  143  139  142  145  141  140   141 #>  [6603,]  126  139  136  143  139  142  145  141  141   142 #>  [6604,]  126  139  136  143  139  142  145  141  141   142 #>  [6605,]  127  140  137  144  140  143  146  142  139   140 #>  [6606,]  126  139  136  143  139  142  145  141  140   141 #>  [6607,]  126  139  136  143  139  142  145  141  141   142 #>  [6608,]  126  139  136  143  139  142  145  141  141   142 #>  [6609,]  127  140  137  144  141  144  146  142  139   140 #>  [6610,]  126  139  136  143  139  142  145  141  141   142 #>  [6611,]  127  140  137  144  140  143  146  142  139   140 #>  [6612,]  126  139  136  143  139  142  145  141  140   141 #>  [6613,]  127  140  137  144  141  144  146  142  139   140 #>  [6614,]  126  139  136  143  139  142  145  141  141   142 #>  [6615,]  126  139  136  143  139  142  145  141  140   141 #>  [6616,]  126  139  136  143  139  142  145  141  141   142 #>  [6617,]  127  140  137  144  141  144  146  142  139   140 #>  [6618,]  127  140  137  144  141  144  146  142  139   140 #>  [6619,]  127  140  137  144  140  143  146  142  139   140 #>  [6620,]  127  140  137  144  141  144  146  142  139   140 #>  [6621,]  127  140  137  144  140  143  146  142  139   140 #>  [6622,]  127  140  137  144  140  143  146  142  139   140 #>  [6623,]  126  139  136  143  139  142  145  141  140   141 #>  [6624,]  127  140  137  144  140  143  146  142  139   140 #>  [6625,]  126  139  136  143  139  142  145  141  141   142 #>  [6626,]  126  139  136  143  139  142  145  141  140   141 #>  [6627,]  127  140  137  144  141  144  146  142  139   140 #>  [6628,]  127  140  137  144  140  143  146  142  139   140 #>  [6629,]  127  140  137  144  140  143  146  142  139   140 #>  [6630,]  126  139  136  143  139  142  145  141  140   141 #>  [6631,]  126  139  136  143  139  142  145  141  140   141 #>  [6632,]  126  139  136  143  139  142  145  141  141   142 #>  [6633,]  127  140  137  144  141  144  146  142  139   140 #>  [6634,]  126  139  136  143  139  142  145  141  140   141 #>  [6635,]  126  139  136  143  139  142  145  141  140   141 #>  [6636,]  127  140  137  144  141  144  146  142  139   140 #>  [6637,]  126  139  136  143  139  142  145  141  140   141 #>  [6638,]  127  140  137  144  141  144  146  142  139   140 #>  [6639,]  127  140  137  144  140  143  146  142  139   140 #>  [6640,]  126  139  136  143  139  142  145  141  141   142 #>  [6641,]  127  140  137  144  140  143  146  142  139   140 #>  [6642,]  127  140  137  144  141  144  146  142  139   140 #>  [6643,]  126  139  136  143  139  142  145  141  140   141 #>  [6644,]  126  139  136  143  139  142  145  141  140   141 #>  [6645,]  126  139  136  143  139  142  145  141  141   142 #>  [6646,]  126  139  136  143  139  142  145  141  140   141 #>  [6647,]  126  139  136  143  139  142  145  141  140   141 #>  [6648,]  126  139  136  143  139  142  145  141  140   141 #>  [6649,]  126  139  136  143  139  142  145  141  141   142 #>  [6650,]  126  139  136  143  139  142  145  141  141   142 #>  [6651,]  127  140  137  144  141  144  146  142  139   140 #>  [6652,]  126  139  136  143  139  142  145  141  141   142 #>  [6653,]  127  140  137  144  141  144  146  142  139   140 #>  [6654,]  127  140  137  144  141  144  146  142  139   140 #>  [6655,]  126  139  136  143  139  142  145  141  141   142 #>  [6656,]  127  140  137  144  141  144  146  142  139   140 #>  [6657,]  126  139  136  143  139  142  145  141  141   142 #>  [6658,]  127  140  137  144  140  143  146  142  139   140 #>  [6659,]  126  139  136  143  139  142  145  141  141   142 #>  [6660,]  126  139  136  143  139  142  145  141  140   141 #>  [6661,]  127  140  137  144  140  143  146  142  139   140 #>  [6662,]  127  140  137  144  141  144  146  142  139   140 #>  [6663,]  126  139  136  143  139  142  145  141  140   141 #>  [6664,]  127  140  137  144  140  143  146  142  139   140 #>  [6665,]  127  140  137  144  141  144  146  142  139   140 #>  [6666,]  127  140  137  144  141  144  146  142  139   140 #>  [6667,]  126  139  136  143  139  142  145  141  141   142 #>  [6668,]  126  139  136  143  139  142  145  141  140   141 #>  [6669,]  126  139  136  143  139  142  145  141  141   142 #>  [6670,]  127  140  137  144  140  143  146  142  139   140 #>  [6671,]  126  139  136  143  139  142  145  141  141   142 #>  [6672,]  126  139  136  143  139  142  145  141  141   142 #>  [6673,]  127  140  137  144  140  143  146  142  139   140 #>  [6674,]  126  139  136  143  139  142  145  141  141   142 #>  [6675,]  126  139  136  143  139  142  145  141  140   141 #>  [6676,]  126  139  136  143  139  142  145  141  141   142 #>  [6677,]  127  140  137  144  141  144  146  142  139   140 #>  [6678,]  126  139  136  143  139  142  145  141  140   141 #>  [6679,]  127  140  137  144  141  144  146  142  139   140 #>  [6680,]  126  139  136  143  139  142  145  141  141   142 #>  [6681,]  127  140  137  144  140  143  146  142  139   140 #>  [6682,]  127  140  137  144  141  144  146  142  139   140 #>  [6683,]  127  140  137  144  141  144  146  142  139   140 #>  [6684,]  127  140  137  144  141  144  146  142  139   140 #>  [6685,]  127  140  137  144  141  144  146  142  139   140 #>  [6686,]  126  139  136  143  139  142  145  141  141   142 #>  [6687,]  127  140  137  144  141  144  146  142  139   140 #>  [6688,]  126  139  136  143  139  142  145  141  141   142 #>  [6689,]  127  140  137  144  141  144  146  142  139   140 #>  [6690,]  127  140  137  144  140  143  146  142  139   140 #>  [6691,]  127  140  137  144  141  144  146  142  139   140 #>  [6692,]  126  139  136  143  139  142  145  141  140   141 #>  [6693,]  127  140  137  144  141  144  146  142  139   140 #>  [6694,]  127  140  137  144  141  144  146  142  139   140 #>  [6695,]  126  139  136  143  139  142  145  141  140   141 #>  [6696,]  126  139  136  143  139  142  145  141  140   141 #>  [6697,]  126  139  136  143  139  142  145  141  141   142 #>  [6698,]  126  139  136  143  139  142  145  141  141   142 #>  [6699,]  127  140  137  144  140  143  146  142  139   140 #>  [6700,]  127  140  137  144  140  143  146  142  139   140 #>  [6701,]  129  142  139  146  143  145  147  143  143   144 #>  [6702,]  129  142  139  146  143  145  148  143  143   144 #>  [6703,]  129  142  139  146  143  145  148  143  143   144 #>  [6704,]  129  142  139  146  143  145  147  143  143   144 #>  [6705,]  129  142  139  146  143  145  147  143  143   144 #>  [6706,]  129  142  139  146  143  145  148  143  143   144 #>  [6707,]  128  141  138  145  142  145  147  143  142   143 #>  [6708,]  129  142  139  146  143  145  147  143  143   144 #>  [6709,]  129  142  139  146  143  145  147  143  143   144 #>  [6710,]  129  142  139  146  143  145  147  143  143   144 #>  [6711,]  129  142  139  146  143  145  147  143  143   144 #>  [6712,]  129  142  139  146  143  145  148  143  143   144 #>  [6713,]  129  142  139  146  143  145  147  143  143   144 #>  [6714,]  129  142  139  146  143  145  147  143  143   144 #>  [6715,]  129  142  139  146  143  145  147  143  143   144 #>  [6716,]  129  142  139  146  143  145  147  143  143   144 #>  [6717,]  129  142  139  146  143  145  147  143  143   144 #>  [6718,]  129  142  139  146  143  145  148  143  143   144 #>  [6719,]  129  142  139  146  143  145  148  143  143   144 #>  [6720,]  129  142  139  146  143  145  148  143  143   144 #>  [6721,]  128  141  138  145  142  145  147  143  142   143 #>  [6722,]  129  142  139  146  143  145  147  143  143   144 #>  [6723,]  128  141  138  145  142  145  147  143  143   144 #>  [6724,]  129  142  139  146  143  145  147  143  143   144 #>  [6725,]  129  142  139  146  143  145  148  143  143   144 #>  [6726,]  129  142  139  146  143  145  147  143  143   144 #>  [6727,]  129  142  139  146  143  145  147  143  143   144 #>  [6728,]  129  142  139  146  143  145  148  143  143   144 #>  [6729,]  129  142  139  146  143  145  147  143  143   144 #>  [6730,]  128  141  138  145  142  145  147  143  143   144 #>  [6731,]  129  142  139  146  143  145  148  143  143   144 #>  [6732,]  129  142  139  146  143  145  148  143  143   144 #>  [6733,]  129  142  139  146  143  145  148  143  143   144 #>  [6734,]  129  142  139  146  143  145  148  143  143   144 #>  [6735,]  129  142  139  146  143  145  147  143  143   144 #>  [6736,]  129  142  139  146  143  145  147  143  143   144 #>  [6737,]  129  142  139  146  143  145  147  143  143   144 #>  [6738,]  129  142  139  146  143  145  147  143  143   144 #>  [6739,]  128  141  138  145  142  145  147  143  142   143 #>  [6740,]  129  142  139  146  143  145  147  143  143   144 #>  [6741,]  129  142  139  146  143  145  147  143  143   144 #>  [6742,]  129  142  139  146  143  145  148  143  143   144 #>  [6743,]  129  142  139  146  143  145  147  143  143   144 #>  [6744,]  129  142  139  146  143  145  147  143  143   144 #>  [6745,]  129  142  139  146  143  145  147  143  143   144 #>  [6746,]  129  142  139  146  143  145  147  143  143   144 #>  [6747,]  129  142  139  146  143  145  147  143  143   144 #>  [6748,]  129  142  139  146  143  145  147  143  143   144 #>  [6749,]  128  141  138  145  142  145  147  143  142   143 #>  [6750,]  129  142  139  146  143  145  147  143  143   144 #>  [6751,]  129  142  139  146  143  145  147  143  143   144 #>  [6752,]  129  142  139  146  143  145  147  143  143   144 #>  [6753,]  129  142  139  146  143  145  147  143  143   144 #>  [6754,]  128  141  138  145  142  145  147  143  143   144 #>  [6755,]  129  142  139  146  143  145  147  143  143   144 #>  [6756,]  129  142  139  146  143  145  147  143  143   144 #>  [6757,]  129  142  139  146  143  145  147  143  143   144 #>  [6758,]  129  142  139  146  143  145  147  143  143   144 #>  [6759,]  129  142  139  146  143  145  147  143  143   144 #>  [6760,]  129  142  139  146  143  145  148  143  143   144 #>  [6761,]  129  142  139  146  143  145  147  143  143   144 #>  [6762,]  128  141  138  145  142  145  147  143  142   143 #>  [6763,]  129  142  139  146  143  145  147  143  143   144 #>  [6764,]  129  142  139  146  143  145  148  143  143   144 #>  [6765,]  129  142  139  146  143  145  148  143  143   144 #>  [6766,]  129  142  139  146  143  145  147  143  143   144 #>  [6767,]  129  142  139  146  143  145  147  143  143   144 #>  [6768,]  129  142  139  146  143  145  147  143  143   144 #>  [6769,]  129  142  139  146  143  145  147  143  143   144 #>  [6770,]  128  141  138  145  142  145  148  143  142   143 #>  [6771,]  129  142  139  146  143  145  148  143  143   144 #>  [6772,]  129  142  139  146  143  145  147  143  143   144 #>  [6773,]  129  142  139  146  143  145  148  143  143   144 #>  [6774,]  129  142  139  146  143  145  147  143  143   144 #>  [6775,]  129  142  139  146  143  145  147  143  143   144 #>  [6776,]  129  142  139  146  143  145  147  143  143   144 #>  [6777,]  129  142  139  146  143  145  147  143  143   144 #>  [6778,]  129  142  139  146  143  145  147  143  143   144 #>  [6779,]  129  142  139  146  143  145  147  143  143   144 #>  [6780,]  128  141  138  145  142  145  147  143  142   143 #>  [6781,]  129  142  139  146  143  145  147  143  143   144 #>  [6782,]  129  142  139  146  143  145  147  143  143   144 #>  [6783,]  128  141  138  145  142  145  147  143  143   144 #>  [6784,]  129  142  139  146  143  145  148  143  143   144 #>  [6785,]  129  142  139  146  143  145  147  143  143   144 #>  [6786,]  129  142  139  146  143  145  147  143  143   144 #>  [6787,]  129  142  139  146  143  145  147  143  143   144 #>  [6788,]  129  142  139  146  143  145  147  143  143   144 #>  [6789,]  129  142  139  146  143  145  147  143  143   144 #>  [6790,]  129  142  139  146  143  145  147  143  143   144 #>  [6791,]  129  142  139  146  143  145  147  143  143   144 #>  [6792,]  129  142  139  146  143  145  147  143  143   144 #>  [6793,]  129  142  139  146  143  145  148  143  143   144 #>  [6794,]  129  142  139  146  143  145  147  143  143   144 #>  [6795,]  128  141  138  145  142  145  147  143  142   143 #>  [6796,]  129  142  139  146  143  145  147  143  143   144 #>  [6797,]  129  142  139  146  143  145  148  143  143   144 #>  [6798,]  128  141  138  145  142  145  148  143  143   144 #>  [6799,]  129  142  139  146  143  145  147  143  143   144 #>  [6800,]  129  142  139  146  143  145  148  143  143   144 #>  [6801,]  131  144  141  148  145  147  149  145  144   145 #>  [6802,]  131  144  141  148  145  147  149  145  144   145 #>  [6803,]  130  143  140  147  144  146  149  144  146   147 #>  [6804,]  131  144  141  148  145  147  149  144  146   147 #>  [6805,]  130  143  140  147  144  146  149  144  146   147 #>  [6806,]  130  143  140  147  144  146  149  145  144   145 #>  [6807,]  131  144  141  148  145  147  149  145  144   145 #>  [6808,]  131  144  141  148  145  147  149  144  146   147 #>  [6809,]  131  144  141  148  145  147  149  144  146   147 #>  [6810,]  131  144  141  148  145  147  149  144  146   147 #>  [6811,]  130  143  140  147  144  146  149  145  144   145 #>  [6812,]  130  143  140  147  144  146  149  145  144   145 #>  [6813,]  131  144  141  148  145  147  149  145  144   145 #>  [6814,]  130  143  140  147  144  146  149  145  144   145 #>  [6815,]  131  144  141  148  145  147  149  145  144   145 #>  [6816,]  131  144  141  148  145  147  149  145  144   145 #>  [6817,]  131  144  141  148  145  147  149  145  144   145 #>  [6818,]  131  144  141  148  145  147  149  144  146   147 #>  [6819,]  130  143  140  147  144  146  149  145  144   145 #>  [6820,]  130  143  140  147  144  146  149  144  145   146 #>  [6821,]  131  144  141  148  145  147  149  145  144   145 #>  [6822,]  130  143  140  147  144  146  149  145  144   145 #>  [6823,]  131  144  141  148  145  147  149  144  146   147 #>  [6824,]  130  143  140  147  144  146  149  144  146   147 #>  [6825,]  131  144  141  148  145  147  149  145  144   145 #>  [6826,]  130  143  140  147  144  146  149  145  144   145 #>  [6827,]  131  144  141  148  145  147  149  145  144   145 #>  [6828,]  131  144  141  148  145  147  149  145  144   145 #>  [6829,]  130  143  140  147  144  146  149  145  144   145 #>  [6830,]  130  143  140  147  144  146  149  144  146   147 #>  [6831,]  131  144  141  148  145  147  149  144  146   147 #>  [6832,]  130  143  140  147  144  146  149  144  146   147 #>  [6833,]  130  143  140  147  144  146  149  145  144   145 #>  [6834,]  130  143  140  147  144  146  149  144  146   147 #>  [6835,]  130  143  140  147  144  146  149  145  144   145 #>  [6836,]  130  143  140  147  144  146  149  145  144   145 #>  [6837,]  131  144  141  148  145  147  149  145  144   145 #>  [6838,]  131  144  141  148  145  147  149  145  144   145 #>  [6839,]  131  144  141  148  145  147  149  144  146   147 #>  [6840,]  130  143  140  147  144  146  149  145  144   145 #>  [6841,]  130  143  140  147  144  146  149  145  144   145 #>  [6842,]  130  143  140  147  144  146  149  144  145   146 #>  [6843,]  131  144  141  148  145  147  149  144  146   147 #>  [6844,]  131  144  141  148  145  147  149  145  144   145 #>  [6845,]  131  144  141  148  145  147  149  144  146   147 #>  [6846,]  131  144  141  148  145  147  149  145  144   145 #>  [6847,]  131  144  141  148  145  147  149  145  144   145 #>  [6848,]  130  143  140  147  144  146  149  144  146   147 #>  [6849,]  131  144  141  148  145  147  149  144  146   147 #>  [6850,]  131  144  141  148  145  147  149  145  144   145 #>  [6851,]  130  143  140  147  144  146  149  144  146   147 #>  [6852,]  130  143  140  147  144  146  149  145  144   145 #>  [6853,]  131  144  141  148  145  147  149  144  145   146 #>  [6854,]  130  143  140  147  144  146  149  145  144   145 #>  [6855,]  130  143  140  147  144  146  149  145  144   145 #>  [6856,]  131  144  141  148  145  147  149  144  145   146 #>  [6857,]  130  143  140  147  144  146  149  145  144   145 #>  [6858,]  130  143  140  147  144  146  149  145  144   145 #>  [6859,]  131  144  141  148  145  147  149  145  144   145 #>  [6860,]  130  143  140  147  144  146  149  144  146   147 #>  [6861,]  131  144  141  148  145  147  149  145  144   145 #>  [6862,]  130  143  140  147  144  146  149  144  146   147 #>  [6863,]  130  143  140  147  144  146  149  145  144   145 #>  [6864,]  131  144  141  148  145  147  149  144  146   147 #>  [6865,]  131  144  141  148  145  147  149  144  145   146 #>  [6866,]  130  143  140  147  144  146  149  144  146   147 #>  [6867,]  130  143  140  147  144  146  149  144  146   147 #>  [6868,]  130  143  140  147  144  146  149  145  144   145 #>  [6869,]  130  143  140  147  144  146  149  145  144   145 #>  [6870,]  131  144  141  148  145  147  149  145  144   145 #>  [6871,]  131  144  141  148  145  147  149  145  144   145 #>  [6872,]  131  144  141  148  145  147  149  144  146   147 #>  [6873,]  131  144  141  148  145  147  149  145  144   145 #>  [6874,]  131  144  141  148  145  147  149  145  144   145 #>  [6875,]  131  144  141  148  145  147  149  145  144   145 #>  [6876,]  131  144  141  148  145  147  149  145  144   145 #>  [6877,]  131  144  141  148  145  147  149  145  144   145 #>  [6878,]  130  143  140  147  144  146  149  144  146   147 #>  [6879,]  131  144  141  148  145  147  149  145  144   145 #>  [6880,]  130  143  140  147  144  146  149  145  144   145 #>  [6881,]  130  143  140  147  144  146  149  145  144   145 #>  [6882,]  131  144  141  148  145  147  149  145  144   145 #>  [6883,]  130  143  140  147  144  146  149  145  144   145 #>  [6884,]  131  144  141  148  145  147  149  145  144   145 #>  [6885,]  131  144  141  148  145  147  149  144  145   146 #>  [6886,]  131  144  141  148  145  147  149  145  144   145 #>  [6887,]  131  144  141  148  145  147  149  145  144   145 #>  [6888,]  131  144  141  148  145  147  149  144  146   147 #>  [6889,]  130  143  140  147  144  146  149  144  145   146 #>  [6890,]  131  144  141  148  145  147  149  145  144   145 #>  [6891,]  130  143  140  147  144  146  149  144  146   147 #>  [6892,]  131  144  141  148  145  147  149  145  144   145 #>  [6893,]  130  143  140  147  144  146  149  145  144   145 #>  [6894,]  131  144  141  148  145  147  149  145  144   145 #>  [6895,]  131  144  141  148  145  147  149  144  146   147 #>  [6896,]  131  144  141  148  145  147  149  145  144   145 #>  [6897,]  130  143  140  147  144  146  149  145  144   145 #>  [6898,]  130  143  140  147  144  146  149  145  144   145 #>  [6899,]  130  143  140  147  144  146  149  145  144   145 #>  [6900,]  131  144  141  148  145  147  149  145  144   145 #>  [6901,]  133  146  143  150  147  149  151  147  148   149 #>  [6902,]  132  145  142  149  146  148  150  146  147   148 #>  [6903,]  133  146  143  150  147  149  151  147  148   149 #>  [6904,]  133  146  143  150  147  149  151  147  148   149 #>  [6905,]  133  146  143  150  147  149  151  147  148   149 #>  [6906,]  132  145  142  149  146  148  150  146  147   148 #>  [6907,]  133  146  143  150  147  149  151  147  148   149 #>  [6908,]  133  146  143  150  147  149  151  147  148   149 #>  [6909,]  133  146  143  150  147  149  151  147  148   149 #>  [6910,]  133  146  143  150  147  149  151  147  148   149 #>  [6911,]  132  145  142  149  146  148  150  146  147   148 #>  [6912,]  132  145  142  149  146  148  150  146  147   148 #>  [6913,]  133  146  143  150  147  149  151  147  148   149 #>  [6914,]  133  146  143  150  147  149  151  147  148   149 #>  [6915,]  132  145  142  149  146  148  150  146  147   148 #>  [6916,]  133  146  143  150  147  149  151  147  148   149 #>  [6917,]  132  145  142  149  146  148  150  146  147   148 #>  [6918,]  133  146  143  150  147  149  151  147  148   149 #>  [6919,]  132  145  142  149  146  148  150  146  147   148 #>  [6920,]  133  146  143  150  147  149  151  147  148   149 #>  [6921,]  133  146  143  150  147  149  151  147  148   149 #>  [6922,]  133  146  143  150  147  149  151  147  148   149 #>  [6923,]  132  145  142  149  146  148  150  146  147   148 #>  [6924,]  133  146  143  150  147  149  151  147  148   149 #>  [6925,]  133  146  143  150  147  149  151  147  148   149 #>  [6926,]  132  145  142  149  146  148  150  146  147   148 #>  [6927,]  133  146  143  150  147  149  151  147  148   149 #>  [6928,]  133  146  143  150  147  149  151  147  148   149 #>  [6929,]  132  145  142  149  146  148  150  146  147   148 #>  [6930,]  132  145  142  149  146  148  150  146  147   148 #>  [6931,]  132  145  142  149  146  148  150  146  147   148 #>  [6932,]  133  146  143  150  147  149  151  147  148   149 #>  [6933,]  133  146  143  150  147  149  151  147  148   149 #>  [6934,]  132  145  142  149  146  148  150  146  147   148 #>  [6935,]  132  145  142  149  146  148  150  146  147   148 #>  [6936,]  133  146  143  150  147  149  151  147  148   149 #>  [6937,]  132  145  142  149  146  148  150  146  147   148 #>  [6938,]  133  146  143  150  147  149  151  147  148   149 #>  [6939,]  133  146  143  150  147  149  151  147  148   149 #>  [6940,]  133  146  143  150  147  149  151  147  148   149 #>  [6941,]  133  146  143  150  147  149  151  147  148   149 #>  [6942,]  132  145  142  149  146  148  150  146  147   148 #>  [6943,]  132  145  142  149  146  148  150  146  147   148 #>  [6944,]  132  145  142  149  146  148  150  146  147   148 #>  [6945,]  133  146  143  150  147  149  151  147  148   149 #>  [6946,]  132  145  142  149  146  148  150  146  147   148 #>  [6947,]  132  145  142  149  146  148  150  146  147   148 #>  [6948,]  132  145  142  149  146  148  150  146  147   148 #>  [6949,]  133  146  143  150  147  149  151  147  148   149 #>  [6950,]  133  146  143  150  147  149  151  147  148   149 #>  [6951,]  133  146  143  150  147  149  151  147  148   149 #>  [6952,]  133  146  143  150  147  149  151  147  148   149 #>  [6953,]  133  146  143  150  147  149  151  147  148   149 #>  [6954,]  133  146  143  150  147  149  151  147  148   149 #>  [6955,]  133  146  143  150  147  149  151  147  148   149 #>  [6956,]  132  145  142  149  146  148  150  146  147   148 #>  [6957,]  133  146  143  150  147  149  151  147  148   149 #>  [6958,]  133  146  143  150  147  149  151  147  148   149 #>  [6959,]  133  146  143  150  147  149  151  147  148   149 #>  [6960,]  132  145  142  149  146  148  150  146  147   148 #>  [6961,]  132  145  142  149  146  148  150  146  147   148 #>  [6962,]  133  146  143  150  147  149  151  147  148   149 #>  [6963,]  132  145  142  149  146  148  150  146  147   148 #>  [6964,]  132  145  142  149  146  148  150  146  147   148 #>  [6965,]  132  145  142  149  146  148  150  146  147   148 #>  [6966,]  132  145  142  149  146  148  150  146  147   148 #>  [6967,]  133  146  143  150  147  149  151  147  148   149 #>  [6968,]  132  145  142  149  146  148  150  146  147   148 #>  [6969,]  133  146  143  150  147  149  151  147  148   149 #>  [6970,]  132  145  142  149  146  148  150  146  147   148 #>  [6971,]  133  146  143  150  147  149  151  147  148   149 #>  [6972,]  133  146  143  150  147  149  151  147  148   149 #>  [6973,]  133  146  143  150  147  149  151  147  148   149 #>  [6974,]  133  146  143  150  147  149  151  147  148   149 #>  [6975,]  132  145  142  149  146  148  150  146  147   148 #>  [6976,]  133  146  143  150  147  149  151  147  148   149 #>  [6977,]  133  146  143  150  147  149  151  147  148   149 #>  [6978,]  132  145  142  149  146  148  150  146  147   148 #>  [6979,]  132  145  142  149  146  148  150  146  147   148 #>  [6980,]  133  146  143  150  147  149  151  147  148   149 #>  [6981,]  132  145  142  149  146  148  150  146  147   148 #>  [6982,]  133  146  143  150  147  149  151  147  148   149 #>  [6983,]  133  146  143  150  147  149  151  147  148   149 #>  [6984,]  133  146  143  150  147  149  151  147  148   149 #>  [6985,]  133  146  143  150  147  149  151  147  148   149 #>  [6986,]  133  146  143  150  147  149  151  147  148   149 #>  [6987,]  133  146  143  150  147  149  151  147  148   149 #>  [6988,]  133  146  143  150  147  149  151  147  148   149 #>  [6989,]  133  146  143  150  147  149  151  147  148   149 #>  [6990,]  133  146  143  150  147  149  151  147  148   149 #>  [6991,]  133  146  143  150  147  149  151  147  148   149 #>  [6992,]  132  145  142  149  146  148  150  146  147   148 #>  [6993,]  132  145  142  149  146  148  150  146  147   148 #>  [6994,]  132  145  142  149  146  148  150  146  147   148 #>  [6995,]  132  145  142  149  146  148  150  146  147   148 #>  [6996,]  132  145  142  149  146  148  150  146  147   148 #>  [6997,]  133  146  143  150  147  149  151  147  148   149 #>  [6998,]  133  146  143  150  147  149  151  147  148   149 #>  [6999,]  133  146  143  150  147  149  151  147  148   149 #>  [7000,]  132  145  142  149  146  148  150  146  147   148 #>  [7001,]  135  148  145  152  149  151  153  149  150   152 #>  [7002,]  135  148  145  152  149  151  153  149  150   152 #>  [7003,]  134  147  144  151  148  150  152  148  149   150 #>  [7004,]  135  148  145  152  149  151  153  149  150   151 #>  [7005,]  135  148  145  152  149  151  153  149  150   151 #>  [7006,]  135  148  145  152  149  151  153  149  150   152 #>  [7007,]  135  148  145  152  149  151  153  149  150   151 #>  [7008,]  135  148  145  152  149  151  153  149  150   151 #>  [7009,]  135  148  145  152  149  151  153  149  150   151 #>  [7010,]  135  148  145  152  149  151  153  149  150   151 #>  [7011,]  134  147  144  151  148  150  152  148  149   150 #>  [7012,]  134  147  144  151  148  150  152  148  149   150 #>  [7013,]  135  148  145  152  149  151  153  149  150   152 #>  [7014,]  134  147  144  151  148  150  152  148  149   150 #>  [7015,]  135  148  145  152  149  151  153  149  150   152 #>  [7016,]  135  148  145  152  149  151  153  149  150   152 #>  [7017,]  135  148  145  152  149  151  153  149  150   152 #>  [7018,]  135  148  145  152  149  151  153  149  150   151 #>  [7019,]  134  147  144  151  148  150  152  148  149   150 #>  [7020,]  134  147  144  151  148  150  152  148  149   150 #>  [7021,]  135  148  145  152  149  151  153  149  150   152 #>  [7022,]  134  147  144  151  148  150  152  148  149   150 #>  [7023,]  135  148  145  152  149  151  153  149  150   151 #>  [7024,]  135  148  145  152  149  151  153  149  150   151 #>  [7025,]  135  148  145  152  149  151  153  149  150   151 #>  [7026,]  134  147  144  151  148  150  152  148  149   150 #>  [7027,]  135  148  145  152  149  151  153  149  150   151 #>  [7028,]  135  148  145  152  149  151  153  149  150   151 #>  [7029,]  134  147  144  151  148  150  152  148  149   150 #>  [7030,]  135  148  145  152  149  151  153  149  150   151 #>  [7031,]  135  148  145  152  149  151  153  149  150   151 #>  [7032,]  134  147  144  151  148  150  152  148  149   150 #>  [7033,]  135  148  145  152  149  151  153  149  150   152 #>  [7034,]  135  148  145  152  149  151  153  149  150   151 #>  [7035,]  135  148  145  152  149  151  153  149  150   152 #>  [7036,]  134  147  144  151  148  150  152  148  149   150 #>  [7037,]  135  148  145  152  149  151  153  149  150   151 #>  [7038,]  135  148  145  152  149  151  153  149  150   151 #>  [7039,]  135  148  145  152  149  151  153  149  150   151 #>  [7040,]  134  147  144  151  148  150  152  148  149   150 #>  [7041,]  134  147  144  151  148  150  152  148  149   150 #>  [7042,]  134  147  144  151  148  150  152  148  149   150 #>  [7043,]  135  148  145  152  149  151  153  149  150   151 #>  [7044,]  135  148  145  152  149  151  153  149  150   152 #>  [7045,]  135  148  145  152  149  151  153  149  150   151 #>  [7046,]  135  148  145  152  149  151  153  149  150   151 #>  [7047,]  135  148  145  152  149  151  153  149  150   151 #>  [7048,]  134  147  144  151  148  150  152  148  149   150 #>  [7049,]  135  148  145  152  149  151  153  149  150   151 #>  [7050,]  135  148  145  152  149  151  153  149  150   152 #>  [7051,]  134  147  144  151  148  150  152  148  149   150 #>  [7052,]  135  148  145  152  149  151  153  149  150   151 #>  [7053,]  135  148  145  152  149  151  153  149  150   151 #>  [7054,]  134  147  144  151  148  150  152  148  149   150 #>  [7055,]  135  148  145  152  149  151  153  149  150   151 #>  [7056,]  135  148  145  152  149  151  153  149  150   151 #>  [7057,]  135  148  145  152  149  151  153  149  150   151 #>  [7058,]  135  148  145  152  149  151  153  149  150   151 #>  [7059,]  135  148  145  152  149  151  153  149  150   152 #>  [7060,]  134  147  144  151  148  150  152  148  149   150 #>  [7061,]  135  148  145  152  149  151  153  149  150   152 #>  [7062,]  134  147  144  151  148  150  152  148  149   150 #>  [7063,]  134  147  144  151  148  150  152  148  149   150 #>  [7064,]  135  148  145  152  149  151  153  149  150   151 #>  [7065,]  135  148  145  152  149  151  153  149  150   151 #>  [7066,]  134  147  144  151  148  150  152  148  149   150 #>  [7067,]  135  148  145  152  149  151  153  149  150   151 #>  [7068,]  134  147  144  151  148  150  152  148  149   150 #>  [7069,]  134  147  144  151  148  150  152  148  149   150 #>  [7070,]  135  148  145  152  149  151  153  149  150   152 #>  [7071,]  135  148  145  152  149  151  153  149  150   152 #>  [7072,]  135  148  145  152  149  151  153  149  150   151 #>  [7073,]  135  148  145  152  149  151  153  149  150   152 #>  [7074,]  135  148  145  152  149  151  153  149  150   151 #>  [7075,]  135  148  145  152  149  151  153  149  150   151 #>  [7076,]  135  148  145  152  149  151  153  149  150   152 #>  [7077,]  135  148  145  152  149  151  153  149  150   152 #>  [7078,]  135  148  145  152  149  151  153  149  150   151 #>  [7079,]  135  148  145  152  149  151  153  149  150   152 #>  [7080,]  134  147  144  151  148  150  152  148  149   150 #>  [7081,]  134  147  144  151  148  150  152  148  149   150 #>  [7082,]  135  148  145  152  149  151  153  149  150   151 #>  [7083,]  134  147  144  151  148  150  152  148  149   150 #>  [7084,]  135  148  145  152  149  151  153  149  150   151 #>  [7085,]  135  148  145  152  149  151  153  149  150   151 #>  [7086,]  135  148  145  152  149  151  153  149  150   152 #>  [7087,]  135  148  145  152  149  151  153  149  150   151 #>  [7088,]  135  148  145  152  149  151  153  149  150   151 #>  [7089,]  134  147  144  151  148  150  152  148  149   150 #>  [7090,]  135  148  145  152  149  151  153  149  150   151 #>  [7091,]  134  147  144  151  148  150  152  148  149   150 #>  [7092,]  135  148  145  152  149  151  153  149  150   151 #>  [7093,]  135  148  145  152  149  151  153  149  150   152 #>  [7094,]  135  148  145  152  149  151  153  149  150   151 #>  [7095,]  135  148  145  152  149  151  153  149  150   151 #>  [7096,]  135  148  145  152  149  151  153  149  150   152 #>  [7097,]  135  148  145  152  149  151  153  149  150   151 #>  [7098,]  135  148  145  152  149  151  153  149  150   151 #>  [7099,]  135  148  145  152  149  151  153  149  150   152 #>  [7100,]  135  148  145  152  149  151  153  149  150   151 #>  [7101,]  137  150  147  154  151  153  155  151  152   154 #>  [7102,]  137  150  147  154  151  153  155  151  152   154 #>  [7103,]  137  150  147  154  151  153  155  151  152   154 #>  [7104,]  137  150  147  154  151  153  155  151  152   154 #>  [7105,]  137  150  147  154  151  153  155  151  152   154 #>  [7106,]  137  150  147  154  151  153  155  151  152   154 #>  [7107,]  136  149  146  153  150  152  154  150  151   153 #>  [7108,]  137  150  147  154  151  153  155  151  152   154 #>  [7109,]  137  150  147  154  151  153  155  151  152   154 #>  [7110,]  137  150  147  154  151  153  155  151  152   154 #>  [7111,]  137  150  147  154  151  153  155  151  152   154 #>  [7112,]  137  150  147  154  151  153  155  151  152   154 #>  [7113,]  137  150  147  154  151  153  155  151  152   154 #>  [7114,]  137  150  147  154  151  153  155  151  152   154 #>  [7115,]  137  150  147  154  151  153  155  151  152   154 #>  [7116,]  137  150  147  154  151  153  155  151  152   154 #>  [7117,]  137  150  147  154  151  153  155  151  152   154 #>  [7118,]  137  150  147  154  151  153  155  151  152   154 #>  [7119,]  137  150  147  154  151  153  155  151  152   154 #>  [7120,]  137  150  147  154  151  153  155  151  152   154 #>  [7121,]  136  149  146  153  150  152  154  150  151   153 #>  [7122,]  137  150  147  154  151  153  155  151  152   154 #>  [7123,]  136  149  146  153  150  152  154  150  151   153 #>  [7124,]  137  150  147  154  151  153  155  151  152   154 #>  [7125,]  137  150  147  154  151  153  155  151  152   154 #>  [7126,]  137  150  147  154  151  153  155  151  152   154 #>  [7127,]  137  150  147  154  151  153  155  151  152   154 #>  [7128,]  137  150  147  154  151  153  155  151  152   154 #>  [7129,]  137  150  147  154  151  153  155  151  152   154 #>  [7130,]  136  149  146  153  150  152  154  150  151   153 #>  [7131,]  137  150  147  154  151  153  155  151  152   154 #>  [7132,]  137  150  147  154  151  153  155  151  152   154 #>  [7133,]  137  150  147  154  151  153  155  151  152   154 #>  [7134,]  137  150  147  154  151  153  155  151  152   154 #>  [7135,]  137  150  147  154  151  153  155  151  152   154 #>  [7136,]  137  150  147  154  151  153  155  151  152   154 #>  [7137,]  137  150  147  154  151  153  155  151  152   154 #>  [7138,]  137  150  147  154  151  153  155  151  152   154 #>  [7139,]  136  149  146  153  150  152  154  150  151   153 #>  [7140,]  137  150  147  154  151  153  155  151  152   154 #>  [7141,]  137  150  147  154  151  153  155  151  152   154 #>  [7142,]  137  150  147  154  151  153  155  151  152   154 #>  [7143,]  137  150  147  154  151  153  155  151  152   154 #>  [7144,]  137  150  147  154  151  153  155  151  152   154 #>  [7145,]  137  150  147  154  151  153  155  151  152   154 #>  [7146,]  137  150  147  154  151  153  155  151  152   154 #>  [7147,]  137  150  147  154  151  153  155  151  152   154 #>  [7148,]  137  150  147  154  151  153  155  151  152   154 #>  [7149,]  136  149  146  153  150  152  154  150  151   153 #>  [7150,]  137  150  147  154  151  153  155  151  152   154 #>  [7151,]  137  150  147  154  151  153  155  151  152   154 #>  [7152,]  137  150  147  154  151  153  155  151  152   154 #>  [7153,]  137  150  147  154  151  153  155  151  152   154 #>  [7154,]  136  149  146  153  150  152  154  150  151   153 #>  [7155,]  137  150  147  154  151  153  155  151  152   154 #>  [7156,]  137  150  147  154  151  153  155  151  152   154 #>  [7157,]  137  150  147  154  151  153  155  151  152   154 #>  [7158,]  137  150  147  154  151  153  155  151  152   154 #>  [7159,]  137  150  147  154  151  153  155  151  152   154 #>  [7160,]  137  150  147  154  151  153  155  151  152   154 #>  [7161,]  137  150  147  154  151  153  155  151  152   154 #>  [7162,]  136  149  146  153  150  152  154  150  151   153 #>  [7163,]  137  150  147  154  151  153  155  151  152   154 #>  [7164,]  137  150  147  154  151  153  155  151  152   154 #>  [7165,]  137  150  147  154  151  153  155  151  152   154 #>  [7166,]  137  150  147  154  151  153  155  151  152   154 #>  [7167,]  137  150  147  154  151  153  155  151  152   154 #>  [7168,]  137  150  147  154  151  153  155  151  152   154 #>  [7169,]  137  150  147  154  151  153  155  151  152   154 #>  [7170,]  136  149  146  153  150  152  154  150  151   153 #>  [7171,]  137  150  147  154  151  153  155  151  152   154 #>  [7172,]  137  150  147  154  151  153  155  151  152   154 #>  [7173,]  137  150  147  154  151  153  155  151  152   154 #>  [7174,]  137  150  147  154  151  153  155  151  152   154 #>  [7175,]  137  150  147  154  151  153  155  151  152   154 #>  [7176,]  137  150  147  154  151  153  155  151  152   154 #>  [7177,]  137  150  147  154  151  153  155  151  152   154 #>  [7178,]  137  150  147  154  151  153  155  151  152   154 #>  [7179,]  137  150  147  154  151  153  155  151  152   154 #>  [7180,]  136  149  146  153  150  152  154  150  151   153 #>  [7181,]  137  150  147  154  151  153  155  151  152   154 #>  [7182,]  137  150  147  154  151  153  155  151  152   154 #>  [7183,]  136  149  146  153  150  152  154  150  151   153 #>  [7184,]  137  150  147  154  151  153  155  151  152   154 #>  [7185,]  137  150  147  154  151  153  155  151  152   154 #>  [7186,]  137  150  147  154  151  153  155  151  152   154 #>  [7187,]  137  150  147  154  151  153  155  151  152   154 #>  [7188,]  137  150  147  154  151  153  155  151  152   154 #>  [7189,]  137  150  147  154  151  153  155  151  152   154 #>  [7190,]  137  150  147  154  151  153  155  151  152   154 #>  [7191,]  137  150  147  154  151  153  155  151  152   154 #>  [7192,]  137  150  147  154  151  153  155  151  152   154 #>  [7193,]  137  150  147  154  151  153  155  151  152   154 #>  [7194,]  137  150  147  154  151  153  155  151  152   154 #>  [7195,]  136  149  146  153  150  152  154  150  151   153 #>  [7196,]  137  150  147  154  151  153  155  151  152   154 #>  [7197,]  137  150  147  154  151  153  155  151  152   154 #>  [7198,]  136  149  146  153  150  152  154  150  151   153 #>  [7199,]  137  150  147  154  151  153  155  151  152   154 #>  [7200,]  137  150  147  154  151  153  155  151  152   154 #>  [7201,]  138  151  150  156  153  155  157  153  154   156 #>  [7202,]  139  152  148  157  154  156  158  152  153   155 #>  [7203,]  139  152  148  157  154  156  158  152  153   155 #>  [7204,]  138  151  149  155  152  154  156  153  154   156 #>  [7205,]  138  151  150  156  153  155  157  153  154   156 #>  [7206,]  139  152  148  157  154  156  158  152  153   155 #>  [7207,]  139  152  148  157  154  156  158  152  153   155 #>  [7208,]  138  151  149  155  152  154  156  153  154   156 #>  [7209,]  138  151  150  156  153  155  157  153  154   156 #>  [7210,]  138  151  150  156  153  155  157  153  154   156 #>  [7211,]  138  151  150  156  153  155  157  153  154   156 #>  [7212,]  139  152  148  158  155  156  158  152  153   155 #>  [7213,]  138  151  150  156  153  155  157  153  154   156 #>  [7214,]  138  151  150  156  153  155  157  153  154   156 #>  [7215,]  138  151  150  156  153  155  157  153  154   156 #>  [7216,]  138  151  150  156  153  155  157  153  154   156 #>  [7217,]  138  151  150  156  153  155  157  153  154   156 #>  [7218,]  139  152  148  157  154  156  158  152  153   155 #>  [7219,]  139  152  148  158  155  156  158  152  153   155 #>  [7220,]  139  152  148  157  154  156  158  152  153   155 #>  [7221,]  138  151  150  156  153  155  157  153  154   156 #>  [7222,]  138  151  150  156  153  155  157  153  154   156 #>  [7223,]  139  152  148  157  154  156  158  152  153   155 #>  [7224,]  138  151  150  156  153  155  157  153  154   156 #>  [7225,]  139  152  148  157  154  156  158  152  153   155 #>  [7226,]  138  151  150  156  153  155  157  153  154   156 #>  [7227,]  138  151  150  156  153  155  157  153  154   156 #>  [7228,]  139  152  148  157  154  156  158  152  153   155 #>  [7229,]  138  151  150  156  153  155  157  153  154   156 #>  [7230,]  138  151  150  156  153  155  157  153  154   156 #>  [7231,]  139  152  148  158  155  156  158  152  153   155 #>  [7232,]  139  152  148  157  154  156  158  152  153   155 #>  [7233,]  139  152  148  158  155  156  158  152  153   155 #>  [7234,]  139  152  148  157  154  156  158  152  153   155 #>  [7235,]  138  151  150  156  153  155  157  153  154   156 #>  [7236,]  138  151  150  156  153  155  157  153  154   156 #>  [7237,]  138  151  149  155  152  154  156  153  154   156 #>  [7238,]  138  151  150  156  153  155  157  153  154   156 #>  [7239,]  138  151  150  156  153  155  157  153  154   156 #>  [7240,]  139  152  148  157  154  156  158  152  153   155 #>  [7241,]  138  151  150  156  153  155  157  153  154   156 #>  [7242,]  139  152  148  158  155  156  158  152  153   155 #>  [7243,]  138  151  150  156  153  155  157  153  154   156 #>  [7244,]  138  151  150  156  153  155  157  153  154   156 #>  [7245,]  138  151  150  156  153  155  157  153  154   156 #>  [7246,]  138  151  149  155  152  154  156  153  154   156 #>  [7247,]  138  151  149  155  152  154  156  153  154   156 #>  [7248,]  139  152  148  158  155  156  158  152  153   155 #>  [7249,]  138  151  150  156  153  155  157  153  154   156 #>  [7250,]  138  151  150  156  153  155  157  153  154   156 #>  [7251,]  138  151  150  156  153  155  157  153  154   156 #>  [7252,]  138  151  149  155  152  154  156  153  154   156 #>  [7253,]  138  151  150  156  153  155  157  153  154   156 #>  [7254,]  138  151  150  156  153  155  157  153  154   156 #>  [7255,]  138  151  149  155  152  154  156  153  154   156 #>  [7256,]  139  152  148  157  154  156  158  152  153   155 #>  [7257,]  138  151  149  155  152  154  156  153  154   156 #>  [7258,]  138  151  150  156  153  155  157  153  154   156 #>  [7259,]  138  151  149  155  152  154  156  153  154   156 #>  [7260,]  139  152  148  157  154  156  158  152  153   155 #>  [7261,]  139  152  148  158  155  156  158  152  153   155 #>  [7262,]  138  151  150  156  153  155  157  153  154   156 #>  [7263,]  138  151  150  156  153  155  157  153  154   156 #>  [7264,]  139  152  148  157  154  156  158  152  153   155 #>  [7265,]  139  152  148  157  154  156  158  152  153   155 #>  [7266,]  138  151  150  156  153  155  157  153  154   156 #>  [7267,]  138  151  150  156  153  155  157  153  154   156 #>  [7268,]  138  151  149  155  152  154  156  153  154   156 #>  [7269,]  138  151  150  156  153  155  157  153  154   156 #>  [7270,]  139  152  148  157  154  156  158  152  153   155 #>  [7271,]  139  152  148  157  154  156  158  152  153   155 #>  [7272,]  138  151  150  156  153  155  157  153  154   156 #>  [7273,]  139  152  148  157  154  156  158  152  153   155 #>  [7274,]  138  151  149  155  152  154  156  153  154   156 #>  [7275,]  138  151  150  156  153  155  157  153  154   156 #>  [7276,]  138  151  150  156  153  155  157  153  154   156 #>  [7277,]  138  151  150  156  153  155  157  153  154   156 #>  [7278,]  139  152  148  157  154  156  158  152  153   155 #>  [7279,]  138  151  150  156  153  155  157  153  154   156 #>  [7280,]  138  151  149  155  152  154  156  153  154   156 #>  [7281,]  138  151  150  156  153  155  157  153  154   156 #>  [7282,]  138  151  150  156  153  155  157  153  154   156 #>  [7283,]  138  151  150  156  153  155  157  153  154   156 #>  [7284,]  139  152  148  157  154  156  158  152  153   155 #>  [7285,]  138  151  150  156  153  155  157  153  154   156 #>  [7286,]  138  151  149  155  152  154  156  153  154   156 #>  [7287,]  138  151  150  156  153  155  157  153  154   156 #>  [7288,]  138  151  150  156  153  155  157  153  154   156 #>  [7289,]  138  151  150  156  153  155  157  153  154   156 #>  [7290,]  138  151  150  156  153  155  157  153  154   156 #>  [7291,]  138  151  150  156  153  155  157  153  154   156 #>  [7292,]  138  151  149  155  152  154  156  153  154   156 #>  [7293,]  139  152  148  158  155  156  158  152  153   155 #>  [7294,]  138  151  150  156  153  155  157  153  154   156 #>  [7295,]  138  151  150  156  153  155  157  153  154   156 #>  [7296,]  138  151  149  155  152  154  156  153  154   156 #>  [7297,]  139  152  148  158  155  156  158  152  153   155 #>  [7298,]  139  152  148  157  154  156  158  152  153   155 #>  [7299,]  138  151  150  156  153  155  157  153  154   156 #>  [7300,]  139  152  148  157  154  156  158  152  153   155 #>  [7301,]  141  154  152  160  157  158  160  156  157   159 #>  [7302,]  141  154  152  160  157  158  160  155  156   158 #>  [7303,]  140  153  151  159  156  157  159  154  155   157 #>  [7304,]  140  153  151  159  156  157  159  154  155   157 #>  [7305,]  141  154  152  160  157  158  160  156  157   159 #>  [7306,]  141  154  152  160  157  158  160  155  156   158 #>  [7307,]  140  153  151  159  156  157  159  154  155   157 #>  [7308,]  140  153  151  159  156  157  159  154  155   157 #>  [7309,]  141  154  152  160  157  158  160  156  157   159 #>  [7310,]  140  153  151  159  156  157  159  154  155   157 #>  [7311,]  141  154  152  160  157  158  160  156  157   159 #>  [7312,]  140  153  151  159  156  157  159  154  155   157 #>  [7313,]  141  154  152  160  157  158  160  156  157   159 #>  [7314,]  140  153  151  159  156  157  159  154  155   157 #>  [7315,]  141  154  152  160  157  158  160  155  156   158 #>  [7316,]  140  153  151  159  156  157  159  154  155   157 #>  [7317,]  141  154  152  160  157  158  160  156  157   159 #>  [7318,]  141  154  152  160  157  158  160  156  157   159 #>  [7319,]  141  154  152  160  157  158  160  156  157   159 #>  [7320,]  141  154  152  160  157  158  160  156  157   159 #>  [7321,]  141  154  152  160  157  158  160  156  157   159 #>  [7322,]  141  154  152  160  157  158  160  156  157   159 #>  [7323,]  140  153  151  159  156  157  159  154  155   157 #>  [7324,]  141  154  152  160  157  158  160  156  157   159 #>  [7325,]  140  153  151  159  156  157  159  154  155   157 #>  [7326,]  140  153  151  159  156  157  159  154  155   157 #>  [7327,]  141  154  152  160  157  158  160  156  157   159 #>  [7328,]  141  154  152  160  157  158  160  156  157   159 #>  [7329,]  141  154  152  160  157  158  160  156  157   159 #>  [7330,]  141  154  152  160  157  158  160  155  156   158 #>  [7331,]  140  153  151  159  156  157  159  154  155   157 #>  [7332,]  140  153  151  159  156  157  159  154  155   157 #>  [7333,]  141  154  152  160  157  158  160  156  157   159 #>  [7334,]  141  154  152  160  157  158  160  155  156   158 #>  [7335,]  140  153  151  159  156  157  159  154  155   157 #>  [7336,]  141  154  152  160  157  158  160  156  157   159 #>  [7337,]  140  153  151  159  156  157  159  154  155   157 #>  [7338,]  141  154  152  160  157  158  160  156  157   159 #>  [7339,]  141  154  152  160  157  158  160  156  157   159 #>  [7340,]  140  153  151  159  156  157  159  154  155   157 #>  [7341,]  141  154  152  160  157  158  160  156  157   159 #>  [7342,]  141  154  152  160  157  158  160  156  157   159 #>  [7343,]  141  154  152  160  157  158  160  156  157   159 #>  [7344,]  140  153  151  159  156  157  159  154  155   157 #>  [7345,]  140  153  151  159  156  157  159  154  155   157 #>  [7346,]  140  153  151  159  156  157  159  154  155   157 #>  [7347,]  140  153  151  159  156  157  159  154  155   157 #>  [7348,]  141  154  152  160  157  158  160  155  156   158 #>  [7349,]  141  154  152  160  157  158  160  155  156   158 #>  [7350,]  141  154  152  160  157  158  160  156  157   159 #>  [7351,]  141  154  152  160  157  158  160  156  157   159 #>  [7352,]  140  153  151  159  156  157  159  154  155   157 #>  [7353,]  141  154  152  160  157  158  160  156  157   159 #>  [7354,]  141  154  152  160  157  158  160  156  157   159 #>  [7355,]  140  153  151  159  156  157  159  154  155   157 #>  [7356,]  141  154  152  160  157  158  160  156  157   159 #>  [7357,]  140  153  151  159  156  157  159  154  155   157 #>  [7358,]  141  154  152  160  157  158  160  156  157   159 #>  [7359,]  140  153  151  159  156  157  159  154  155   157 #>  [7360,]  140  153  151  159  156  157  159  154  155   157 #>  [7361,]  141  154  152  160  157  158  160  156  157   159 #>  [7362,]  141  154  152  160  157  158  160  156  157   159 #>  [7363,]  141  154  152  160  157  158  160  156  157   159 #>  [7364,]  141  154  152  160  157  158  160  156  157   159 #>  [7365,]  141  154  152  160  157  158  160  156  157   159 #>  [7366,]  141  154  152  160  157  158  160  156  157   159 #>  [7367,]  140  153  151  159  156  157  159  154  155   157 #>  [7368,]  140  153  151  159  156  157  159  154  155   157 #>  [7369,]  141  154  152  160  157  158  160  155  156   158 #>  [7370,]  141  154  152  160  157  158  160  156  157   159 #>  [7371,]  141  154  152  160  157  158  160  155  156   158 #>  [7372,]  140  153  151  159  156  157  159  154  155   157 #>  [7373,]  141  154  152  160  157  158  160  156  157   159 #>  [7374,]  140  153  151  159  156  157  159  154  155   157 #>  [7375,]  140  153  151  159  156  157  159  154  155   157 #>  [7376,]  140  153  151  159  156  157  159  154  155   157 #>  [7377,]  141  154  152  160  157  158  160  156  157   159 #>  [7378,]  140  153  151  159  156  157  159  154  155   157 #>  [7379,]  141  154  152  160  157  158  160  156  157   159 #>  [7380,]  140  153  151  159  156  157  159  154  155   157 #>  [7381,]  141  154  152  160  157  158  160  156  157   159 #>  [7382,]  141  154  152  160  157  158  160  156  157   159 #>  [7383,]  141  154  152  160  157  158  160  156  157   159 #>  [7384,]  141  154  152  160  157  158  160  156  157   159 #>  [7385,]  141  154  152  160  157  158  160  156  157   159 #>  [7386,]  140  153  151  159  156  157  159  154  155   157 #>  [7387,]  141  154  152  160  157  158  160  156  157   159 #>  [7388,]  140  153  151  159  156  157  159  154  155   157 #>  [7389,]  141  154  152  160  157  158  160  156  157   159 #>  [7390,]  141  154  152  160  157  158  160  156  157   159 #>  [7391,]  141  154  152  160  157  158  160  156  157   159 #>  [7392,]  140  153  151  159  156  157  159  154  155   157 #>  [7393,]  141  154  152  160  157  158  160  156  157   159 #>  [7394,]  141  154  152  160  157  158  160  156  157   159 #>  [7395,]  140  153  151  159  156  157  159  154  155   157 #>  [7396,]  140  153  151  159  156  157  159  154  155   157 #>  [7397,]  140  153  151  159  156  157  159  154  155   157 #>  [7398,]  140  153  151  159  156  157  159  154  155   157 #>  [7399,]  141  154  152  160  157  158  160  156  157   159 #>  [7400,]  141  154  152  160  157  158  160  156  157   159 #>  [7401,]  143  156  154  162  159  160  162  158  160   162 #>  [7402,]  142  155  153  161  158  159  161  157  158   160 #>  [7403,]  142  155  153  161  158  159  161  157  158   160 #>  [7404,]  142  155  153  161  158  159  161  157  158   160 #>  [7405,]  142  155  153  161  158  159  161  157  158   160 #>  [7406,]  142  155  153  161  158  159  161  157  158   160 #>  [7407,]  142  155  153  161  158  159  161  157  158   160 #>  [7408,]  142  155  153  161  158  159  161  157  158   160 #>  [7409,]  143  156  154  162  159  160  162  158  160   162 #>  [7410,]  142  155  153  161  158  159  161  157  158   160 #>  [7411,]  142  155  153  161  158  159  161  157  158   160 #>  [7412,]  142  155  153  161  158  159  161  157  158   160 #>  [7413,]  143  156  154  162  159  160  162  158  159   161 #>  [7414,]  142  155  153  161  158  159  161  157  158   160 #>  [7415,]  142  155  153  161  158  159  161  157  158   160 #>  [7416,]  142  155  153  161  158  159  161  157  158   160 #>  [7417,]  143  156  154  162  159  160  162  158  160   162 #>  [7418,]  143  156  154  162  159  160  162  158  160   162 #>  [7419,]  142  155  153  161  158  159  161  157  158   160 #>  [7420,]  142  155  153  161  158  159  161  157  158   160 #>  [7421,]  142  155  153  161  158  159  161  157  158   160 #>  [7422,]  142  155  153  161  158  159  161  157  158   160 #>  [7423,]  142  155  153  161  158  159  161  157  158   160 #>  [7424,]  142  155  153  161  158  159  161  157  158   160 #>  [7425,]  142  155  153  161  158  159  161  157  158   160 #>  [7426,]  142  155  153  161  158  159  161  157  158   160 #>  [7427,]  143  156  154  162  159  160  162  158  160   162 #>  [7428,]  142  155  153  161  158  159  161  157  158   160 #>  [7429,]  142  155  153  161  158  159  161  157  158   160 #>  [7430,]  142  155  153  161  158  159  161  157  158   160 #>  [7431,]  142  155  153  161  158  159  161  157  158   160 #>  [7432,]  142  155  153  161  158  159  161  157  158   160 #>  [7433,]  142  155  153  161  158  159  161  157  158   160 #>  [7434,]  142  155  153  161  158  159  161  157  158   160 #>  [7435,]  142  155  153  161  158  159  161  157  158   160 #>  [7436,]  143  156  154  162  159  160  162  158  160   162 #>  [7437,]  142  155  153  161  158  159  161  157  158   160 #>  [7438,]  142  155  153  161  158  159  161  157  158   160 #>  [7439,]  142  155  153  161  158  159  161  157  158   160 #>  [7440,]  142  155  153  161  158  159  161  157  158   160 #>  [7441,]  142  155  153  161  158  159  161  157  158   160 #>  [7442,]  143  156  154  162  159  160  162  158  160   162 #>  [7443,]  142  155  153  161  158  159  161  157  158   160 #>  [7444,]  142  155  153  161  158  159  161  157  158   160 #>  [7445,]  142  155  153  161  158  159  161  157  158   160 #>  [7446,]  142  155  153  161  158  159  161  157  158   160 #>  [7447,]  142  155  153  161  158  159  161  157  158   160 #>  [7448,]  142  155  153  161  158  159  161  157  158   160 #>  [7449,]  142  155  153  161  158  159  161  157  158   160 #>  [7450,]  142  155  153  161  158  159  161  157  158   160 #>  [7451,]  143  156  154  162  159  160  162  158  160   162 #>  [7452,]  142  155  153  161  158  159  161  157  158   160 #>  [7453,]  143  156  154  162  159  160  162  158  159   161 #>  [7454,]  142  155  153  161  158  159  161  157  158   160 #>  [7455,]  142  155  153  161  158  159  161  157  158   160 #>  [7456,]  143  156  154  162  159  160  162  158  159   161 #>  [7457,]  142  155  153  161  158  159  161  157  158   160 #>  [7458,]  142  155  153  161  158  159  161  157  158   160 #>  [7459,]  142  155  153  161  158  159  161  157  158   160 #>  [7460,]  142  155  153  161  158  159  161  157  158   160 #>  [7461,]  142  155  153  161  158  159  161  157  158   160 #>  [7462,]  142  155  153  161  158  159  161  157  158   160 #>  [7463,]  142  155  153  161  158  159  161  157  158   160 #>  [7464,]  142  155  153  161  158  159  161  157  158   160 #>  [7465,]  143  156  154  162  159  160  162  158  159   161 #>  [7466,]  143  156  154  162  159  160  162  158  159   161 #>  [7467,]  142  155  153  161  158  159  161  157  158   160 #>  [7468,]  142  155  153  161  158  159  161  157  158   160 #>  [7469,]  142  155  153  161  158  159  161  157  158   160 #>  [7470,]  142  155  153  161  158  159  161  157  158   160 #>  [7471,]  142  155  153  161  158  159  161  157  158   160 #>  [7472,]  142  155  153  161  158  159  161  157  158   160 #>  [7473,]  142  155  153  161  158  159  161  157  158   160 #>  [7474,]  142  155  153  161  158  159  161  157  158   160 #>  [7475,]  142  155  153  161  158  159  161  157  158   160 #>  [7476,]  142  155  153  161  158  159  161  157  158   160 #>  [7477,]  142  155  153  161  158  159  161  157  158   160 #>  [7478,]  142  155  153  161  158  159  161  157  158   160 #>  [7479,]  143  156  154  162  159  160  162  158  160   162 #>  [7480,]  142  155  153  161  158  159  161  157  158   160 #>  [7481,]  142  155  153  161  158  159  161  157  158   160 #>  [7482,]  143  156  154  162  159  160  162  158  160   162 #>  [7483,]  143  156  154  162  159  160  162  158  160   162 #>  [7484,]  143  156  154  162  159  160  162  158  159   161 #>  [7485,]  142  155  153  161  158  159  161  157  158   160 #>  [7486,]  142  155  153  161  158  159  161  157  158   160 #>  [7487,]  143  156  154  162  159  160  162  158  160   162 #>  [7488,]  142  155  153  161  158  159  161  157  158   160 #>  [7489,]  142  155  153  161  158  159  161  157  158   160 #>  [7490,]  142  155  153  161  158  159  161  157  158   160 #>  [7491,]  143  156  154  162  159  160  162  158  160   162 #>  [7492,]  142  155  153  161  158  159  161  157  158   160 #>  [7493,]  143  156  154  162  159  160  162  158  160   162 #>  [7494,]  143  156  154  162  159  160  162  158  160   162 #>  [7495,]  142  155  153  161  158  159  161  157  158   160 #>  [7496,]  142  155  153  161  158  159  161  157  158   160 #>  [7497,]  142  155  153  161  158  159  161  157  158   160 #>  [7498,]  142  155  153  161  158  159  161  157  158   160 #>  [7499,]  142  155  153  161  158  159  161  157  158   160 #>  [7500,]  142  155  153  161  158  159  161  157  158   160 #>  [7501,]  144  157  155  163  160  161  163  159  161   163 #>  [7502,]  144  157  155  163  160  161  163  159  161   163 #>  [7503,]  144  157  155  163  160  161  163  159  161   163 #>  [7504,]  144  157  155  163  160  161  163  159  161   163 #>  [7505,]  145  158  156  164  161  162  164  160  162   164 #>  [7506,]  144  157  155  163  160  161  163  159  161   163 #>  [7507,]  144  157  155  163  160  161  163  159  161   163 #>  [7508,]  144  157  155  163  160  161  163  159  161   163 #>  [7509,]  144  157  155  163  160  161  163  159  161   163 #>  [7510,]  144  157  155  163  160  161  163  159  161   163 #>  [7511,]  144  157  155  163  160  161  163  159  161   163 #>  [7512,]  144  157  155  163  160  161  163  159  161   163 #>  [7513,]  144  157  155  163  160  161  163  159  161   163 #>  [7514,]  144  157  155  163  160  161  163  159  161   163 #>  [7515,]  144  157  155  163  160  161  163  159  161   163 #>  [7516,]  144  157  155  163  160  161  163  159  161   163 #>  [7517,]  144  157  155  163  160  161  163  159  161   163 #>  [7518,]  145  158  156  164  161  162  164  160  162   164 #>  [7519,]  144  157  155  163  160  161  163  159  161   163 #>  [7520,]  144  157  155  163  160  161  163  159  161   163 #>  [7521,]  144  157  155  163  160  161  163  159  161   163 #>  [7522,]  144  157  155  163  160  161  163  159  161   163 #>  [7523,]  144  157  155  163  160  161  163  159  161   163 #>  [7524,]  144  157  155  163  160  161  163  159  161   163 #>  [7525,]  144  157  155  163  160  161  163  159  161   163 #>  [7526,]  144  157  155  163  160  161  163  159  161   163 #>  [7527,]  144  157  155  163  160  161  163  159  161   163 #>  [7528,]  144  157  155  163  160  161  163  159  161   163 #>  [7529,]  144  157  155  163  160  161  163  159  161   163 #>  [7530,]  144  157  155  163  160  161  163  159  161   163 #>  [7531,]  144  157  155  163  160  161  163  159  161   163 #>  [7532,]  145  158  156  164  161  162  164  160  162   164 #>  [7533,]  144  157  155  163  160  161  163  159  161   163 #>  [7534,]  144  157  155  163  160  161  163  159  161   163 #>  [7535,]  144  157  155  163  160  161  163  159  161   163 #>  [7536,]  144  157  155  163  160  161  163  159  161   163 #>  [7537,]  144  157  155  163  160  161  163  159  161   163 #>  [7538,]  144  157  155  163  160  161  163  159  161   163 #>  [7539,]  144  157  155  163  160  161  163  159  161   163 #>  [7540,]  144  157  155  163  160  161  163  159  161   163 #>  [7541,]  144  157  155  163  160  161  163  159  161   163 #>  [7542,]  144  157  155  163  160  161  163  159  161   163 #>  [7543,]  144  157  155  163  160  161  163  159  161   163 #>  [7544,]  144  157  155  163  160  161  163  159  161   163 #>  [7545,]  144  157  155  163  160  161  163  159  161   163 #>  [7546,]  144  157  155  163  160  161  163  159  161   163 #>  [7547,]  144  157  155  163  160  161  163  159  161   163 #>  [7548,]  144  157  155  163  160  161  163  159  161   163 #>  [7549,]  144  157  155  163  160  161  163  159  161   163 #>  [7550,]  144  157  155  163  160  161  163  159  161   163 #>  [7551,]  144  157  155  163  160  161  163  159  161   163 #>  [7552,]  144  157  155  163  160  161  163  159  161   163 #>  [7553,]  144  157  155  163  160  161  163  159  161   163 #>  [7554,]  144  157  155  163  160  161  163  159  161   163 #>  [7555,]  144  157  155  163  160  161  163  159  161   163 #>  [7556,]  144  157  155  163  160  161  163  159  161   163 #>  [7557,]  144  157  155  163  160  161  163  159  161   163 #>  [7558,]  144  157  155  163  160  161  163  159  161   163 #>  [7559,]  144  157  155  163  160  161  163  159  161   163 #>  [7560,]  144  157  155  163  160  161  163  159  161   163 #>  [7561,]  144  157  155  163  160  161  163  159  161   163 #>  [7562,]  144  157  155  163  160  161  163  159  161   163 #>  [7563,]  144  157  155  163  160  161  163  159  161   163 #>  [7564,]  144  157  155  163  160  161  163  159  161   163 #>  [7565,]  144  157  155  163  160  161  163  159  161   163 #>  [7566,]  144  157  155  163  160  161  163  159  161   163 #>  [7567,]  144  157  155  163  160  161  163  159  161   163 #>  [7568,]  144  157  155  163  160  161  163  159  161   163 #>  [7569,]  144  157  155  163  160  161  163  159  161   163 #>  [7570,]  144  157  155  163  160  161  163  159  161   163 #>  [7571,]  145  158  156  164  161  162  164  160  162   164 #>  [7572,]  144  157  155  163  160  161  163  159  161   163 #>  [7573,]  144  157  155  163  160  161  163  159  161   163 #>  [7574,]  144  157  155  163  160  161  163  159  161   163 #>  [7575,]  145  158  156  164  161  162  164  160  162   164 #>  [7576,]  144  157  155  163  160  161  163  159  161   163 #>  [7577,]  144  157  155  163  160  161  163  159  161   163 #>  [7578,]  144  157  155  163  160  161  163  159  161   163 #>  [7579,]  144  157  155  163  160  161  163  159  161   163 #>  [7580,]  144  157  155  163  160  161  163  159  161   163 #>  [7581,]  144  157  155  163  160  161  163  159  161   163 #>  [7582,]  144  157  155  163  160  161  163  159  161   163 #>  [7583,]  144  157  155  163  160  161  163  159  161   163 #>  [7584,]  144  157  155  163  160  161  163  159  161   163 #>  [7585,]  144  157  155  163  160  161  163  159  161   163 #>  [7586,]  144  157  155  163  160  161  163  159  161   163 #>  [7587,]  144  157  155  163  160  161  163  159  161   163 #>  [7588,]  144  157  155  163  160  161  163  159  161   163 #>  [7589,]  144  157  155  163  160  161  163  159  161   163 #>  [7590,]  144  157  155  163  160  161  163  159  161   163 #>  [7591,]  145  158  156  164  161  162  164  160  162   164 #>  [7592,]  144  157  155  163  160  161  163  159  161   163 #>  [7593,]  144  157  155  163  160  161  163  159  161   163 #>  [7594,]  144  157  155  163  160  161  163  159  161   163 #>  [7595,]  145  158  156  164  161  162  164  160  162   164 #>  [7596,]  144  157  155  163  160  161  163  159  161   163 #>  [7597,]  144  157  155  163  160  161  163  159  161   163 #>  [7598,]  144  157  155  163  160  161  163  159  161   163 #>  [7599,]  144  157  155  163  160  161  163  159  161   163 #>  [7600,]  145  158  156  164  161  162  164  160  162   164 #>  [7601,]  146  159  157  166  163  164  166  162  164   166 #>  [7602,]  146  159  157  166  163  164  166  162  165   166 #>  [7603,]  146  159  157  165  162  163  165  161  163   165 #>  [7604,]  146  159  157  166  163  164  166  162  164   166 #>  [7605,]  147  160  157  166  163  164  166  162  165   166 #>  [7606,]  146  159  157  166  163  164  166  162  164   166 #>  [7607,]  146  159  157  166  163  164  166  162  165   166 #>  [7608,]  146  159  157  166  163  164  166  162  164   166 #>  [7609,]  146  159  157  166  163  164  166  162  165   166 #>  [7610,]  146  159  157  166  163  164  166  162  165   166 #>  [7611,]  146  159  157  165  162  163  165  161  163   165 #>  [7612,]  146  159  157  165  162  163  165  161  163   165 #>  [7613,]  146  159  157  166  163  164  166  162  165   166 #>  [7614,]  146  159  157  165  162  163  165  161  163   165 #>  [7615,]  146  159  157  166  163  164  166  162  165   166 #>  [7616,]  146  159  157  166  163  164  166  162  164   166 #>  [7617,]  146  159  157  166  163  164  166  162  165   166 #>  [7618,]  147  160  157  166  163  164  166  162  165   166 #>  [7619,]  146  159  157  166  163  164  166  162  164   166 #>  [7620,]  146  159  157  165  162  163  165  161  163   165 #>  [7621,]  146  159  157  166  163  164  166  162  165   166 #>  [7622,]  146  159  157  165  162  163  165  161  163   165 #>  [7623,]  146  159  157  166  163  164  166  162  165   166 #>  [7624,]  146  159  157  166  163  164  166  162  165   166 #>  [7625,]  146  159  157  166  163  164  166  162  165   166 #>  [7626,]  146  159  157  165  162  163  165  161  163   165 #>  [7627,]  146  159  157  166  163  164  166  162  165   166 #>  [7628,]  146  159  157  166  163  164  166  162  164   166 #>  [7629,]  146  159  157  165  162  163  165  161  163   165 #>  [7630,]  146  159  157  166  163  164  166  162  165   166 #>  [7631,]  146  159  157  166  163  164  166  162  165   166 #>  [7632,]  147  160  157  165  162  163  165  161  163   165 #>  [7633,]  146  159  157  166  163  164  166  162  165   166 #>  [7634,]  146  159  157  166  163  164  166  162  164   166 #>  [7635,]  146  159  157  166  163  164  166  162  164   166 #>  [7636,]  146  159  157  165  162  163  165  161  163   165 #>  [7637,]  146  159  157  166  163  164  166  162  164   166 #>  [7638,]  146  159  157  166  163  164  166  162  164   166 #>  [7639,]  146  159  157  166  163  164  166  162  165   166 #>  [7640,]  146  159  157  165  162  163  165  161  163   165 #>  [7641,]  146  159  157  165  162  163  165  161  163   165 #>  [7642,]  146  159  157  165  162  163  165  161  163   165 #>  [7643,]  146  159  157  166  163  164  166  162  165   166 #>  [7644,]  146  159  157  166  163  164  166  162  165   166 #>  [7645,]  146  159  157  166  163  164  166  162  164   166 #>  [7646,]  146  159  157  166  163  164  166  162  165   166 #>  [7647,]  146  159  157  166  163  164  166  162  165   166 #>  [7648,]  146  159  157  165  162  163  165  161  163   165 #>  [7649,]  146  159  157  166  163  164  166  162  164   166 #>  [7650,]  146  159  157  166  163  164  166  162  165   166 #>  [7651,]  146  159  157  165  162  163  165  161  163   165 #>  [7652,]  146  159  157  166  163  164  166  162  164   166 #>  [7653,]  146  159  157  166  163  164  166  162  165   166 #>  [7654,]  146  159  157  165  162  163  165  161  163   165 #>  [7655,]  146  159  157  166  163  164  166  162  164   166 #>  [7656,]  146  159  157  166  163  164  166  162  164   166 #>  [7657,]  146  159  157  166  163  164  166  162  164   166 #>  [7658,]  146  159  157  166  163  164  166  162  165   166 #>  [7659,]  146  159  157  166  163  164  166  162  164   166 #>  [7660,]  146  159  157  165  162  163  165  161  163   165 #>  [7661,]  146  159  157  166  163  164  166  162  165   166 #>  [7662,]  146  159  157  165  162  163  165  161  163   165 #>  [7663,]  146  159  157  166  163  164  166  162  165   166 #>  [7664,]  146  159  157  166  163  164  166  162  164   166 #>  [7665,]  146  159  157  166  163  164  166  162  164   166 #>  [7666,]  146  159  157  165  162  163  165  161  163   165 #>  [7667,]  146  159  157  166  163  164  166  162  165   166 #>  [7668,]  146  159  157  165  162  163  165  161  163   165 #>  [7669,]  146  159  157  165  162  163  165  161  163   165 #>  [7670,]  146  159  157  166  163  164  166  162  165   166 #>  [7671,]  147  160  157  166  163  164  166  162  165   166 #>  [7672,]  146  159  157  166  163  164  166  162  164   166 #>  [7673,]  146  159  157  166  163  164  166  162  164   166 #>  [7674,]  146  159  157  166  163  164  166  162  165   166 #>  [7675,]  147  160  157  166  163  164  166  162  165   166 #>  [7676,]  146  159  157  166  163  164  166  162  165   166 #>  [7677,]  146  159  157  166  163  164  166  162  164   166 #>  [7678,]  146  159  157  166  163  164  166  162  165   166 #>  [7679,]  146  159  157  166  163  164  166  162  164   166 #>  [7680,]  146  159  157  165  162  163  165  161  163   165 #>  [7681,]  146  159  157  165  162  163  165  161  163   165 #>  [7682,]  146  159  157  166  163  164  166  162  164   166 #>  [7683,]  146  159  157  165  162  163  165  161  163   165 #>  [7684,]  146  159  157  166  163  164  166  162  165   166 #>  [7685,]  146  159  157  166  163  164  166  162  165   166 #>  [7686,]  146  159  157  166  163  164  166  162  165   166 #>  [7687,]  146  159  157  166  163  164  166  162  165   166 #>  [7688,]  146  159  157  166  163  164  166  162  165   166 #>  [7689,]  146  159  157  165  162  163  165  161  163   165 #>  [7690,]  146  159  157  166  163  164  166  162  165   166 #>  [7691,]  147  160  157  165  162  163  165  161  163   165 #>  [7692,]  146  159  157  166  163  164  166  162  165   166 #>  [7693,]  146  159  157  166  163  164  166  162  165   166 #>  [7694,]  146  159  157  166  163  164  166  162  164   166 #>  [7695,]  147  160  157  166  163  164  166  162  165   166 #>  [7696,]  146  159  157  166  163  164  166  162  164   166 #>  [7697,]  146  159  157  166  163  164  166  162  164   166 #>  [7698,]  146  159  157  166  163  164  166  162  165   166 #>  [7699,]  146  159  157  166  163  164  166  162  165   166 #>  [7700,]  147  160  157  166  163  164  166  162  164   166 #>  [7701,]  148  161  158  167  164  165  167  163  166   167 #>  [7702,]  148  161  158  167  164  165  167  163  166   167 #>  [7703,]  148  161  158  167  164  165  167  163  166   167 #>  [7704,]  148  161  158  167  164  165  167  163  166   167 #>  [7705,]  148  161  158  167  164  165  167  163  166   167 #>  [7706,]  149  162  159  168  165  166  168  164  167   168 #>  [7707,]  148  161  158  167  164  165  167  163  166   167 #>  [7708,]  149  162  159  168  165  166  168  164  167   168 #>  [7709,]  149  162  159  168  165  166  168  164  167   168 #>  [7710,]  148  161  158  167  164  165  167  163  166   167 #>  [7711,]  148  161  158  167  164  165  167  163  166   167 #>  [7712,]  149  162  159  168  165  166  168  164  167   168 #>  [7713,]  148  161  158  167  164  165  167  163  166   167 #>  [7714,]  148  161  158  167  164  165  167  163  166   167 #>  [7715,]  149  162  159  168  165  166  168  164  167   168 #>  [7716,]  148  161  158  167  164  165  167  163  166   167 #>  [7717,]  148  161  158  167  164  165  167  163  166   167 #>  [7718,]  148  161  158  167  164  165  167  163  166   167 #>  [7719,]  148  161  158  167  164  165  167  163  166   167 #>  [7720,]  148  161  158  167  164  165  167  163  166   167 #>  [7721,]  148  161  158  167  164  165  167  163  166   167 #>  [7722,]  148  161  158  167  164  165  167  163  166   167 #>  [7723,]  148  161  158  167  164  165  167  163  166   167 #>  [7724,]  148  161  158  167  164  165  167  163  166   167 #>  [7725,]  148  161  158  167  164  165  167  163  166   167 #>  [7726,]  149  162  159  168  165  166  168  164  167   168 #>  [7727,]  148  161  158  167  164  165  167  163  166   167 #>  [7728,]  148  161  158  167  164  165  167  163  166   167 #>  [7729,]  148  161  158  167  164  165  167  163  166   167 #>  [7730,]  148  161  158  167  164  165  167  163  166   167 #>  [7731,]  148  161  158  167  164  165  167  163  166   167 #>  [7732,]  148  161  158  167  164  165  167  163  166   167 #>  [7733,]  149  162  159  168  165  166  168  164  167   168 #>  [7734,]  148  161  158  167  164  165  167  163  166   167 #>  [7735,]  148  161  158  167  164  165  167  163  166   167 #>  [7736,]  148  161  158  167  164  165  167  163  166   167 #>  [7737,]  148  161  158  167  164  165  167  163  166   167 #>  [7738,]  148  161  158  167  164  165  167  163  166   167 #>  [7739,]  148  161  158  167  164  165  167  163  166   167 #>  [7740,]  148  161  158  167  164  165  167  163  166   167 #>  [7741,]  148  161  158  167  164  165  167  163  166   167 #>  [7742,]  148  161  158  167  164  165  167  163  166   167 #>  [7743,]  149  162  159  168  165  166  168  164  167   168 #>  [7744,]  148  161  158  167  164  165  167  163  166   167 #>  [7745,]  149  162  159  168  165  166  168  164  167   168 #>  [7746,]  149  162  159  168  165  166  168  164  167   168 #>  [7747,]  148  161  158  167  164  165  167  163  166   167 #>  [7748,]  148  161  158  167  164  165  167  163  166   167 #>  [7749,]  148  161  158  167  164  165  167  163  166   167 #>  [7750,]  148  161  158  167  164  165  167  163  166   167 #>  [7751,]  149  162  159  168  165  166  168  164  167   168 #>  [7752,]  148  161  158  167  164  165  167  163  166   167 #>  [7753,]  148  161  158  167  164  165  167  163  166   167 #>  [7754,]  148  161  158  167  164  165  167  163  166   167 #>  [7755,]  148  161  158  167  164  165  167  163  166   167 #>  [7756,]  149  162  159  168  165  166  168  164  167   168 #>  [7757,]  149  162  159  168  165  166  168  164  167   168 #>  [7758,]  148  161  158  167  164  165  167  163  166   167 #>  [7759,]  148  161  158  167  164  165  167  163  166   167 #>  [7760,]  148  161  158  167  164  165  167  163  166   167 #>  [7761,]  149  162  159  168  165  166  168  164  167   168 #>  [7762,]  148  161  158  167  164  165  167  163  166   167 #>  [7763,]  148  161  158  167  164  165  167  163  166   167 #>  [7764,]  149  162  159  168  165  166  168  164  167   168 #>  [7765,]  148  161  158  167  164  165  167  163  166   167 #>  [7766,]  149  162  159  168  165  166  168  164  167   168 #>  [7767,]  148  161  158  167  164  165  167  163  166   167 #>  [7768,]  149  162  159  168  165  166  168  164  167   168 #>  [7769,]  148  161  158  167  164  165  167  163  166   167 #>  [7770,]  148  161  158  167  164  165  167  163  166   167 #>  [7771,]  148  161  158  167  164  165  167  163  166   167 #>  [7772,]  148  161  158  167  164  165  167  163  166   167 #>  [7773,]  148  161  158  167  164  165  167  163  166   167 #>  [7774,]  148  161  158  167  164  165  167  163  166   167 #>  [7775,]  148  161  158  167  164  165  167  163  166   167 #>  [7776,]  149  162  159  168  165  166  168  164  167   168 #>  [7777,]  148  161  158  167  164  165  167  163  166   167 #>  [7778,]  148  161  158  167  164  165  167  163  166   167 #>  [7779,]  148  161  158  167  164  165  167  163  166   167 #>  [7780,]  148  161  158  167  164  165  167  163  166   167 #>  [7781,]  148  161  158  167  164  165  167  163  166   167 #>  [7782,]  148  161  158  167  164  165  167  163  166   167 #>  [7783,]  148  161  158  167  164  165  167  163  166   167 #>  [7784,]  148  161  158  167  164  165  167  163  166   167 #>  [7785,]  148  161  158  167  164  165  167  163  166   167 #>  [7786,]  148  161  158  167  164  165  167  163  166   167 #>  [7787,]  148  161  158  167  164  165  167  163  166   167 #>  [7788,]  148  161  158  167  164  165  167  163  166   167 #>  [7789,]  148  161  158  167  164  165  167  163  166   167 #>  [7790,]  148  161  158  167  164  165  167  163  166   167 #>  [7791,]  148  161  158  167  164  165  167  163  166   167 #>  [7792,]  148  161  158  167  164  165  167  163  166   167 #>  [7793,]  148  161  158  167  164  165  167  163  166   167 #>  [7794,]  149  162  159  168  165  166  168  164  167   168 #>  [7795,]  148  161  158  167  164  165  167  163  166   167 #>  [7796,]  148  161  158  167  164  165  167  163  166   167 #>  [7797,]  148  161  158  167  164  165  167  163  166   167 #>  [7798,]  148  161  158  167  164  165  167  163  166   167 #>  [7799,]  148  161  158  167  164  165  167  163  166   167 #>  [7800,]  148  161  158  167  164  165  167  163  166   167 #>  [7801,]  151  164  161  170  167  168  169  165  168   169 #>  [7802,]  151  164  161  170  167  168  169  165  168   169 #>  [7803,]  151  164  161  170  167  168  169  165  168   169 #>  [7804,]  150  163  160  169  166  167  171  167  170   171 #>  [7805,]  151  164  161  170  167  168  169  165  168   169 #>  [7806,]  151  164  161  170  167  168  169  165  168   169 #>  [7807,]  151  164  161  170  167  168  169  165  168   169 #>  [7808,]  150  163  160  169  166  167  170  166  169   170 #>  [7809,]  150  163  160  169  166  167  171  167  170   171 #>  [7810,]  151  164  161  170  167  168  169  165  168   169 #>  [7811,]  151  164  161  170  167  168  169  165  168   169 #>  [7812,]  151  164  161  170  167  168  169  165  168   169 #>  [7813,]  151  164  161  170  167  168  169  165  168   169 #>  [7814,]  151  164  161  170  167  168  169  165  168   169 #>  [7815,]  151  164  161  170  167  168  169  165  168   169 #>  [7816,]  151  164  161  170  167  168  169  165  168   169 #>  [7817,]  150  163  160  169  166  167  170  166  169   170 #>  [7818,]  151  164  161  170  167  168  169  165  168   169 #>  [7819,]  151  164  161  170  167  168  169  165  168   169 #>  [7820,]  151  164  161  170  167  168  169  165  168   169 #>  [7821,]  151  164  161  170  167  168  169  165  168   169 #>  [7822,]  151  164  161  170  167  168  169  165  168   169 #>  [7823,]  151  164  161  170  167  168  169  165  168   169 #>  [7824,]  151  164  161  170  167  168  169  165  168   169 #>  [7825,]  151  164  161  170  167  168  169  165  168   169 #>  [7826,]  151  164  161  170  167  168  169  165  168   169 #>  [7827,]  150  163  160  169  166  167  171  167  170   171 #>  [7828,]  151  164  161  170  167  168  169  165  168   169 #>  [7829,]  151  164  161  170  167  168  169  165  168   169 #>  [7830,]  151  164  161  170  167  168  169  165  168   169 #>  [7831,]  151  164  161  170  167  168  169  165  168   169 #>  [7832,]  151  164  161  170  167  168  169  165  168   169 #>  [7833,]  151  164  161  170  167  168  169  165  168   169 #>  [7834,]  151  164  161  170  167  168  169  165  168   169 #>  [7835,]  151  164  161  170  167  168  169  165  168   169 #>  [7836,]  151  164  161  170  167  168  169  165  168   169 #>  [7837,]  151  164  161  170  167  168  169  165  168   169 #>  [7838,]  151  164  161  170  167  168  169  165  168   169 #>  [7839,]  151  164  161  170  167  168  169  165  168   169 #>  [7840,]  151  164  161  170  167  168  169  165  168   169 #>  [7841,]  151  164  161  170  167  168  169  165  168   169 #>  [7842,]  151  164  161  170  167  168  169  165  168   169 #>  [7843,]  151  164  161  170  167  168  169  165  168   169 #>  [7844,]  150  163  160  169  166  167  170  166  169   170 #>  [7845,]  151  164  161  170  167  168  169  165  168   169 #>  [7846,]  151  164  161  170  167  168  169  165  168   169 #>  [7847,]  151  164  161  170  167  168  169  165  168   169 #>  [7848,]  151  164  161  170  167  168  169  165  168   169 #>  [7849,]  151  164  161  170  167  168  169  165  168   169 #>  [7850,]  151  164  161  170  167  168  169  165  168   169 #>  [7851,]  151  164  161  170  167  168  169  165  168   169 #>  [7852,]  150  163  160  169  166  167  171  167  170   171 #>  [7853,]  151  164  161  170  167  168  169  165  168   169 #>  [7854,]  151  164  161  170  167  168  169  165  168   169 #>  [7855,]  151  164  161  170  167  168  169  165  168   169 #>  [7856,]  151  164  161  170  167  168  169  165  168   169 #>  [7857,]  151  164  161  170  167  168  169  165  168   169 #>  [7858,]  151  164  161  170  167  168  169  165  168   169 #>  [7859,]  151  164  161  170  167  168  169  165  168   169 #>  [7860,]  151  164  161  170  167  168  169  165  168   169 #>  [7861,]  151  164  161  170  167  168  169  165  168   169 #>  [7862,]  151  164  161  170  167  168  169  165  168   169 #>  [7863,]  151  164  161  170  167  168  169  165  168   169 #>  [7864,]  151  164  161  170  167  168  169  165  168   169 #>  [7865,]  151  164  161  170  167  168  169  165  168   169 #>  [7866,]  150  163  160  169  166  167  170  166  169   170 #>  [7867,]  151  164  161  170  167  168  169  165  168   169 #>  [7868,]  151  164  161  170  167  168  169  165  168   169 #>  [7869,]  151  164  161  170  167  168  169  165  168   169 #>  [7870,]  151  164  161  170  167  168  169  165  168   169 #>  [7871,]  151  164  161  170  167  168  169  165  168   169 #>  [7872,]  151  164  161  170  167  168  169  165  168   169 #>  [7873,]  151  164  161  170  167  168  169  165  168   169 #>  [7874,]  151  164  161  170  167  168  169  165  168   169 #>  [7875,]  151  164  161  170  167  168  169  165  168   169 #>  [7876,]  151  164  161  170  167  168  169  165  168   169 #>  [7877,]  151  164  161  170  167  168  169  165  168   169 #>  [7878,]  151  164  161  170  167  168  169  165  168   169 #>  [7879,]  151  164  161  170  167  168  169  165  168   169 #>  [7880,]  151  164  161  170  167  168  169  165  168   169 #>  [7881,]  150  163  160  169  166  167  170  166  169   170 #>  [7882,]  150  163  160  169  166  167  171  167  170   171 #>  [7883,]  151  164  161  170  167  168  169  165  168   169 #>  [7884,]  151  164  161  170  167  168  169  165  168   169 #>  [7885,]  151  164  161  170  167  168  169  165  168   169 #>  [7886,]  151  164  161  170  167  168  169  165  168   169 #>  [7887,]  151  164  161  170  167  168  169  165  168   169 #>  [7888,]  151  164  161  170  167  168  169  165  168   169 #>  [7889,]  151  164  161  170  167  168  169  165  168   169 #>  [7890,]  150  163  160  169  166  167  170  166  169   170 #>  [7891,]  151  164  161  170  167  168  169  165  168   169 #>  [7892,]  150  163  160  169  166  167  171  167  170   171 #>  [7893,]  151  164  161  170  167  168  169  165  168   169 #>  [7894,]  151  164  161  170  167  168  169  165  168   169 #>  [7895,]  150  163  160  169  166  167  171  167  170   171 #>  [7896,]  151  164  161  170  167  168  169  165  168   169 #>  [7897,]  151  164  161  170  167  168  169  165  168   169 #>  [7898,]  151  164  161  170  167  168  169  165  168   169 #>  [7899,]  150  163  160  169  166  167  171  167  170   171 #>  [7900,]  151  164  161  170  167  168  169  165  168   169 #>  [7901,]  152  165  162  171  168  169  172  168  171   172 #>  [7902,]  153  166  164  173  169  170  173  169  172   173 #>  [7903,]  152  165  162  171  168  169  172  168  171   172 #>  [7904,]  152  165  162  171  168  169  172  168  171   172 #>  [7905,]  152  165  162  171  168  169  172  168  171   172 #>  [7906,]  152  165  162  171  168  169  172  168  171   172 #>  [7907,]  152  165  162  171  168  169  172  168  171   172 #>  [7908,]  152  165  162  171  168  169  172  168  171   172 #>  [7909,]  153  166  163  172  169  170  173  169  172   173 #>  [7910,]  153  166  163  172  169  170  173  169  172   173 #>  [7911,]  152  165  162  171  168  169  172  168  171   172 #>  [7912,]  153  166  163  172  169  170  173  169  172   173 #>  [7913,]  153  166  164  173  169  170  173  169  172   173 #>  [7914,]  152  165  162  171  168  169  172  168  171   172 #>  [7915,]  152  165  162  171  168  169  172  168  171   172 #>  [7916,]  152  165  162  171  168  169  172  168  171   172 #>  [7917,]  153  166  164  173  169  170  173  169  172   173 #>  [7918,]  152  165  162  171  168  169  172  168  171   172 #>  [7919,]  152  165  162  171  168  169  172  168  171   172 #>  [7920,]  152  165  162  171  168  169  172  168  171   172 #>  [7921,]  153  166  164  173  169  170  173  169  172   173 #>  [7922,]  152  165  162  171  168  169  172  168  171   172 #>  [7923,]  152  165  162  171  168  169  172  168  171   172 #>  [7924,]  152  165  162  171  168  169  172  168  171   172 #>  [7925,]  152  165  162  171  168  169  172  168  171   172 #>  [7926,]  152  165  162  171  168  169  172  168  171   172 #>  [7927,]  152  165  162  171  168  169  172  168  171   172 #>  [7928,]  152  165  162  171  168  169  172  168  171   172 #>  [7929,]  153  166  164  173  169  170  173  169  172   173 #>  [7930,]  152  165  162  171  168  169  172  168  171   172 #>  [7931,]  152  165  162  171  168  169  172  168  171   172 #>  [7932,]  152  165  162  171  168  169  172  168  171   172 #>  [7933,]  153  166  164  173  169  170  173  169  172   173 #>  [7934,]  152  165  162  171  168  169  172  168  171   172 #>  [7935,]  152  165  162  171  168  169  172  168  171   172 #>  [7936,]  152  165  162  171  168  169  172  168  171   172 #>  [7937,]  152  165  162  171  168  169  172  168  171   172 #>  [7938,]  152  165  162  171  168  169  172  168  171   172 #>  [7939,]  152  165  162  171  168  169  172  168  171   172 #>  [7940,]  152  165  162  171  168  169  172  168  171   172 #>  [7941,]  152  165  162  171  168  169  172  168  171   172 #>  [7942,]  152  165  162  171  168  169  172  168  171   172 #>  [7943,]  152  165  162  171  168  169  172  168  171   172 #>  [7944,]  152  165  162  171  168  169  172  168  171   172 #>  [7945,]  152  165  162  171  168  169  172  168  171   172 #>  [7946,]  152  165  162  171  168  169  172  168  171   172 #>  [7947,]  152  165  162  171  168  169  172  168  171   172 #>  [7948,]  152  165  162  171  168  169  172  168  171   172 #>  [7949,]  152  165  162  171  168  169  172  168  171   172 #>  [7950,]  152  165  162  171  168  169  172  168  171   172 #>  [7951,]  152  165  162  171  168  169  172  168  171   172 #>  [7952,]  152  165  162  171  168  169  172  168  171   172 #>  [7953,]  153  166  163  172  169  170  173  169  172   173 #>  [7954,]  152  165  162  171  168  169  172  168  171   172 #>  [7955,]  152  165  162  171  168  169  172  168  171   172 #>  [7956,]  152  165  162  171  168  169  172  168  171   172 #>  [7957,]  152  165  162  171  168  169  172  168  171   172 #>  [7958,]  152  165  162  171  168  169  172  168  171   172 #>  [7959,]  152  165  162  171  168  169  172  168  171   172 #>  [7960,]  153  166  163  172  169  170  173  169  172   173 #>  [7961,]  152  165  162  171  168  169  172  168  171   172 #>  [7962,]  152  165  162  171  168  169  172  168  171   172 #>  [7963,]  153  166  163  172  169  170  173  169  172   173 #>  [7964,]  152  165  162  171  168  169  172  168  171   172 #>  [7965,]  152  165  162  171  168  169  172  168  171   172 #>  [7966,]  152  165  162  171  168  169  172  168  171   172 #>  [7967,]  152  165  162  171  168  169  172  168  171   172 #>  [7968,]  152  165  162  171  168  169  172  168  171   172 #>  [7969,]  152  165  162  171  168  169  172  168  171   172 #>  [7970,]  153  166  164  173  169  170  173  169  172   173 #>  [7971,]  152  165  162  171  168  169  172  168  171   172 #>  [7972,]  152  165  162  171  168  169  172  168  171   172 #>  [7973,]  152  165  162  171  168  169  172  168  171   172 #>  [7974,]  152  165  162  171  168  169  172  168  171   172 #>  [7975,]  152  165  162  171  168  169  172  168  171   172 #>  [7976,]  152  165  162  171  168  169  172  168  171   172 #>  [7977,]  152  165  162  171  168  169  172  168  171   172 #>  [7978,]  152  165  162  171  168  169  172  168  171   172 #>  [7979,]  152  165  162  171  168  169  172  168  171   172 #>  [7980,]  153  166  163  172  169  170  173  169  172   173 #>  [7981,]  153  166  164  173  169  170  173  169  172   173 #>  [7982,]  152  165  162  171  168  169  172  168  171   172 #>  [7983,]  152  165  162  171  168  169  172  168  171   172 #>  [7984,]  152  165  162  171  168  169  172  168  171   172 #>  [7985,]  152  165  162  171  168  169  172  168  171   172 #>  [7986,]  153  166  164  173  169  170  173  169  172   173 #>  [7987,]  152  165  162  171  168  169  172  168  171   172 #>  [7988,]  152  165  162  171  168  169  172  168  171   172 #>  [7989,]  152  165  162  171  168  169  172  168  171   172 #>  [7990,]  152  165  162  171  168  169  172  168  171   172 #>  [7991,]  152  165  162  171  168  169  172  168  171   172 #>  [7992,]  152  165  162  171  168  169  172  168  171   172 #>  [7993,]  152  165  162  171  168  169  172  168  171   172 #>  [7994,]  152  165  162  171  168  169  172  168  171   172 #>  [7995,]  152  165  162  171  168  169  172  168  171   172 #>  [7996,]  152  165  162  171  168  169  172  168  171   172 #>  [7997,]  152  165  162  171  168  169  172  168  171   172 #>  [7998,]  152  165  162  171  168  169  172  168  171   172 #>  [7999,]  152  165  162  171  168  169  172  168  171   172 #>  [8000,]  152  165  162  171  168  169  172  168  171   172 #>  [8001,]  155  168  166  175  171  172  175  171  174   175 #>  [8002,]  155  168  166  175  171  172  175  171  174   175 #>  [8003,]  154  167  165  174  170  171  174  170  173   174 #>  [8004,]  155  168  166  175  171  172  175  171  174   175 #>  [8005,]  155  168  166  175  171  172  175  171  174   175 #>  [8006,]  155  168  166  175  171  172  175  171  174   175 #>  [8007,]  155  168  166  175  171  172  175  171  174   175 #>  [8008,]  155  168  166  175  171  172  175  171  174   175 #>  [8009,]  155  168  166  175  171  172  175  171  174   175 #>  [8010,]  155  168  166  175  171  172  175  171  174   175 #>  [8011,]  155  168  166  175  171  172  175  171  174   175 #>  [8012,]  154  167  165  174  170  171  174  170  173   174 #>  [8013,]  155  168  166  175  171  172  175  171  174   175 #>  [8014,]  154  167  165  174  170  171  174  170  173   174 #>  [8015,]  155  168  166  175  171  172  175  171  174   175 #>  [8016,]  155  168  166  175  171  172  175  171  174   175 #>  [8017,]  155  168  166  175  171  172  175  171  174   175 #>  [8018,]  155  168  166  175  171  172  175  171  174   175 #>  [8019,]  155  168  166  175  171  172  175  171  174   175 #>  [8020,]  155  168  166  175  171  172  175  171  174   175 #>  [8021,]  155  168  166  175  171  172  175  171  174   175 #>  [8022,]  155  168  166  175  171  172  175  171  174   175 #>  [8023,]  155  168  166  175  171  172  175  171  174   175 #>  [8024,]  155  168  166  175  171  172  175  171  174   175 #>  [8025,]  155  168  166  175  171  172  175  171  174   175 #>  [8026,]  154  167  165  174  170  171  174  170  173   174 #>  [8027,]  155  168  166  175  171  172  175  171  174   175 #>  [8028,]  155  168  166  175  171  172  175  171  174   175 #>  [8029,]  155  168  166  175  171  172  175  171  174   175 #>  [8030,]  155  168  166  175  171  172  175  171  174   175 #>  [8031,]  155  168  166  175  171  172  175  171  174   175 #>  [8032,]  154  167  165  174  170  171  174  170  173   174 #>  [8033,]  155  168  166  175  171  172  175  171  174   175 #>  [8034,]  155  168  166  175  171  172  175  171  174   175 #>  [8035,]  155  168  166  175  171  172  175  171  174   175 #>  [8036,]  155  168  166  175  171  172  175  171  174   175 #>  [8037,]  155  168  166  175  171  172  175  171  174   175 #>  [8038,]  155  168  166  175  171  172  175  171  174   175 #>  [8039,]  155  168  166  175  171  172  175  171  174   175 #>  [8040,]  155  168  166  175  171  172  175  171  174   175 #>  [8041,]  155  168  166  175  171  172  175  171  174   175 #>  [8042,]  155  168  166  175  171  172  175  171  174   175 #>  [8043,]  155  168  166  175  171  172  175  171  174   175 #>  [8044,]  155  168  166  175  171  172  175  171  174   175 #>  [8045,]  155  168  166  175  171  172  175  171  174   175 #>  [8046,]  155  168  166  175  171  172  175  171  174   175 #>  [8047,]  155  168  166  175  171  172  175  171  174   175 #>  [8048,]  154  167  165  174  170  171  174  170  173   174 #>  [8049,]  155  168  166  175  171  172  175  171  174   175 #>  [8050,]  155  168  166  175  171  172  175  171  174   175 #>  [8051,]  154  167  165  174  170  171  174  170  173   174 #>  [8052,]  155  168  166  175  171  172  175  171  174   175 #>  [8053,]  155  168  166  175  171  172  175  171  174   175 #>  [8054,]  154  167  165  174  170  171  174  170  173   174 #>  [8055,]  155  168  166  175  171  172  175  171  174   175 #>  [8056,]  155  168  166  175  171  172  175  171  174   175 #>  [8057,]  155  168  166  175  171  172  175  171  174   175 #>  [8058,]  155  168  166  175  171  172  175  171  174   175 #>  [8059,]  155  168  166  175  171  172  175  171  174   175 #>  [8060,]  155  168  166  175  171  172  175  171  174   175 #>  [8061,]  155  168  166  175  171  172  175  171  174   175 #>  [8062,]  155  168  166  175  171  172  175  171  174   175 #>  [8063,]  155  168  166  175  171  172  175  171  174   175 #>  [8064,]  155  168  166  175  171  172  175  171  174   175 #>  [8065,]  155  168  166  175  171  172  175  171  174   175 #>  [8066,]  154  167  165  174  170  171  174  170  173   174 #>  [8067,]  155  168  166  175  171  172  175  171  174   175 #>  [8068,]  155  168  166  175  171  172  175  171  174   175 #>  [8069,]  154  167  165  174  170  171  174  170  173   174 #>  [8070,]  155  168  166  175  171  172  175  171  174   175 #>  [8071,]  155  168  166  175  171  172  175  171  174   175 #>  [8072,]  155  168  166  175  171  172  175  171  174   175 #>  [8073,]  155  168  166  175  171  172  175  171  174   175 #>  [8074,]  155  168  166  175  171  172  175  171  174   175 #>  [8075,]  155  168  166  175  171  172  175  171  174   175 #>  [8076,]  155  168  166  175  171  172  175  171  174   175 #>  [8077,]  155  168  166  175  171  172  175  171  174   175 #>  [8078,]  155  168  166  175  171  172  175  171  174   175 #>  [8079,]  155  168  166  175  171  172  175  171  174   175 #>  [8080,]  154  167  165  174  170  171  174  170  173   174 #>  [8081,]  154  167  165  174  170  171  174  170  173   174 #>  [8082,]  155  168  166  175  171  172  175  171  174   175 #>  [8083,]  155  168  166  175  171  172  175  171  174   175 #>  [8084,]  155  168  166  175  171  172  175  171  174   175 #>  [8085,]  155  168  166  175  171  172  175  171  174   175 #>  [8086,]  155  168  166  175  171  172  175  171  174   175 #>  [8087,]  155  168  166  175  171  172  175  171  174   175 #>  [8088,]  155  168  166  175  171  172  175  171  174   175 #>  [8089,]  154  167  165  174  170  171  174  170  173   174 #>  [8090,]  155  168  166  175  171  172  175  171  174   175 #>  [8091,]  155  168  166  175  171  172  175  171  174   175 #>  [8092,]  155  168  166  175  171  172  175  171  174   175 #>  [8093,]  155  168  166  175  171  172  175  171  174   175 #>  [8094,]  155  168  166  175  171  172  175  171  174   175 #>  [8095,]  155  168  166  175  171  172  175  171  174   175 #>  [8096,]  155  168  166  175  171  172  175  171  174   175 #>  [8097,]  155  168  166  175  171  172  175  171  174   175 #>  [8098,]  155  168  166  175  171  172  175  171  174   175 #>  [8099,]  155  168  166  175  171  172  175  171  174   175 #>  [8100,]  155  168  166  175  171  172  175  171  174   175 #>  [8101,]  157  170  168  176  172  173  176  172  175   176 #>  [8102,]  157  170  168  176  172  173  176  172  175   176 #>  [8103,]  156  169  167  177  173  174  177  173  176   177 #>  [8104,]  156  169  167  178  174  175  178  174  177   178 #>  [8105,]  156  169  167  178  174  175  178  174  177   178 #>  [8106,]  157  170  168  176  172  173  176  172  175   176 #>  [8107,]  156  169  167  177  173  174  177  173  176   177 #>  [8108,]  156  169  167  177  173  174  177  173  176   177 #>  [8109,]  156  169  167  178  174  175  178  174  177   178 #>  [8110,]  156  169  167  178  174  175  178  174  177   178 #>  [8111,]  157  170  168  176  172  173  176  172  175   176 #>  [8112,]  156  169  167  178  174  175  178  174  177   178 #>  [8113,]  157  170  168  176  172  173  176  172  175   176 #>  [8114,]  157  170  168  176  172  173  176  172  175   176 #>  [8115,]  157  170  168  176  172  173  176  172  175   176 #>  [8116,]  157  170  168  176  172  173  176  172  175   176 #>  [8117,]  157  170  168  176  172  173  176  172  175   176 #>  [8118,]  156  169  167  178  174  175  178  174  177   178 #>  [8119,]  157  170  168  176  172  173  176  172  175   176 #>  [8120,]  156  169  167  177  173  174  177  173  176   177 #>  [8121,]  157  170  168  176  172  173  176  172  175   176 #>  [8122,]  157  170  168  176  172  173  176  172  175   176 #>  [8123,]  156  169  167  178  174  175  178  174  177   178 #>  [8124,]  156  169  167  177  173  174  177  173  176   177 #>  [8125,]  156  169  167  177  173  174  177  173  176   177 #>  [8126,]  157  170  168  176  172  173  176  172  175   176 #>  [8127,]  157  170  168  176  172  173  176  172  175   176 #>  [8128,]  156  169  167  178  174  175  178  174  177   178 #>  [8129,]  157  170  168  176  172  173  176  172  175   176 #>  [8130,]  156  169  167  178  174  175  178  174  177   178 #>  [8131,]  156  169  167  178  174  175  178  174  177   178 #>  [8132,]  156  169  167  178  174  175  178  174  177   178 #>  [8133,]  157  170  168  176  172  173  176  172  175   176 #>  [8134,]  156  169  167  178  174  175  178  174  177   178 #>  [8135,]  157  170  168  176  172  173  176  172  175   176 #>  [8136,]  156  169  167  178  174  175  178  174  177   178 #>  [8137,]  157  170  168  176  172  173  176  172  175   176 #>  [8138,]  156  169  167  178  174  175  178  174  177   178 #>  [8139,]  156  169  167  177  173  174  177  173  176   177 #>  [8140,]  156  169  167  177  173  174  177  173  176   177 #>  [8141,]  157  170  168  176  172  173  176  172  175   176 #>  [8142,]  156  169  167  178  174  175  178  174  177   178 #>  [8143,]  156  169  167  177  173  174  177  173  176   177 #>  [8144,]  157  170  168  176  172  173  176  172  175   176 #>  [8145,]  156  169  167  177  173  174  177  173  176   177 #>  [8146,]  156  169  167  177  173  174  177  173  176   177 #>  [8147,]  157  170  168  176  172  173  176  172  175   176 #>  [8148,]  156  169  167  178  174  175  178  174  177   178 #>  [8149,]  156  169  167  177  173  174  177  173  176   177 #>  [8150,]  157  170  168  176  172  173  176  172  175   176 #>  [8151,]  156  169  167  177  173  174  177  173  176   177 #>  [8152,]  157  170  168  176  172  173  176  172  175   176 #>  [8153,]  156  169  167  177  173  174  177  173  176   177 #>  [8154,]  156  169  167  177  173  174  177  173  176   177 #>  [8155,]  157  170  168  176  172  173  176  172  175   176 #>  [8156,]  156  169  167  177  173  174  177  173  176   177 #>  [8157,]  156  169  167  178  174  175  178  174  177   178 #>  [8158,]  157  170  168  176  172  173  176  172  175   176 #>  [8159,]  157  170  168  176  172  173  176  172  175   176 #>  [8160,]  156  169  167  178  174  175  178  174  177   178 #>  [8161,]  157  170  168  176  172  173  176  172  175   176 #>  [8162,]  156  169  167  178  174  175  178  174  177   178 #>  [8163,]  156  169  167  177  173  174  177  173  176   177 #>  [8164,]  156  169  167  178  174  175  178  174  177   178 #>  [8165,]  156  169  167  177  173  174  177  173  176   177 #>  [8166,]  156  169  167  177  173  174  177  173  176   177 #>  [8167,]  156  169  167  178  174  175  178  174  177   178 #>  [8168,]  157  170  168  176  172  173  176  172  175   176 #>  [8169,]  157  170  168  176  172  173  176  172  175   176 #>  [8170,]  157  170  168  176  172  173  176  172  175   176 #>  [8171,]  157  170  168  176  172  173  176  172  175   176 #>  [8172,]  156  169  167  177  173  174  177  173  176   177 #>  [8173,]  157  170  168  176  172  173  176  172  175   176 #>  [8174,]  156  169  167  178  174  175  178  174  177   178 #>  [8175,]  157  170  168  176  172  173  176  172  175   176 #>  [8176,]  157  170  168  176  172  173  176  172  175   176 #>  [8177,]  157  170  168  176  172  173  176  172  175   176 #>  [8178,]  156  169  167  177  173  174  177  173  176   177 #>  [8179,]  157  170  168  176  172  173  176  172  175   176 #>  [8180,]  156  169  167  178  174  175  178  174  177   178 #>  [8181,]  157  170  168  176  172  173  176  172  175   176 #>  [8182,]  156  169  167  178  174  175  178  174  177   178 #>  [8183,]  157  170  168  176  172  173  176  172  175   176 #>  [8184,]  157  170  168  176  172  173  176  172  175   176 #>  [8185,]  156  169  167  178  174  175  178  174  177   178 #>  [8186,]  157  170  168  176  172  173  176  172  175   176 #>  [8187,]  157  170  168  176  172  173  176  172  175   176 #>  [8188,]  156  169  167  178  174  175  178  174  177   178 #>  [8189,]  156  169  167  177  173  174  177  173  176   177 #>  [8190,]  157  170  168  176  172  173  176  172  175   176 #>  [8191,]  156  169  167  178  174  175  178  174  177   178 #>  [8192,]  157  170  168  176  172  173  176  172  175   176 #>  [8193,]  157  170  168  176  172  173  176  172  175   176 #>  [8194,]  157  170  168  176  172  173  176  172  175   176 #>  [8195,]  156  169  167  178  174  175  178  174  177   178 #>  [8196,]  157  170  168  176  172  173  176  172  175   176 #>  [8197,]  157  170  168  176  172  173  176  172  175   176 #>  [8198,]  157  170  168  176  172  173  176  172  175   176 #>  [8199,]  157  170  168  176  172  173  176  172  175   176 #>  [8200,]  157  170  168  176  172  173  176  172  175   176 #>  [8201,]  158  171  169  179  175  176  179  175  178   181 #>  [8202,]  158  171  169  179  175  176  179  175  178   181 #>  [8203,]  158  171  169  179  175  176  179  175  178   180 #>  [8204,]  158  171  169  179  175  176  179  175  178   181 #>  [8205,]  159  172  170  180  176  177  180  176  179   179 #>  [8206,]  158  171  169  179  175  176  179  175  178   181 #>  [8207,]  158  171  169  179  175  176  179  175  178   181 #>  [8208,]  158  171  169  179  175  176  179  175  178   181 #>  [8209,]  158  171  169  179  175  176  179  175  178   181 #>  [8210,]  158  171  169  179  175  176  179  175  178   180 #>  [8211,]  158  171  169  179  175  176  179  175  178   180 #>  [8212,]  158  171  169  179  175  176  179  175  178   181 #>  [8213,]  158  171  169  179  175  176  179  175  178   181 #>  [8214,]  158  171  169  179  175  176  179  175  178   180 #>  [8215,]  158  171  169  179  175  176  179  175  178   181 #>  [8216,]  158  171  169  179  175  176  179  175  178   181 #>  [8217,]  158  171  169  179  175  176  179  175  178   181 #>  [8218,]  159  172  170  180  176  177  180  176  179   179 #>  [8219,]  158  171  169  179  175  176  179  175  178   181 #>  [8220,]  158  171  169  179  175  176  179  175  178   181 #>  [8221,]  158  171  169  179  175  176  179  175  178   181 #>  [8222,]  158  171  169  179  175  176  179  175  178   181 #>  [8223,]  158  171  169  179  175  176  179  175  178   181 #>  [8224,]  158  171  169  179  175  176  179  175  178   181 #>  [8225,]  158  171  169  179  175  176  179  175  178   181 #>  [8226,]  158  171  169  179  175  176  179  175  178   181 #>  [8227,]  158  171  169  179  175  176  179  175  178   181 #>  [8228,]  158  171  169  179  175  176  179  175  178   181 #>  [8229,]  158  171  169  179  175  176  179  175  178   181 #>  [8230,]  158  171  169  179  175  176  179  175  178   181 #>  [8231,]  158  171  169  179  175  176  179  175  178   180 #>  [8232,]  158  171  169  179  175  176  179  175  178   180 #>  [8233,]  158  171  169  179  175  176  179  175  178   181 #>  [8234,]  158  171  169  179  175  176  179  175  178   181 #>  [8235,]  158  171  169  179  175  176  179  175  178   181 #>  [8236,]  158  171  169  179  175  176  179  175  178   181 #>  [8237,]  158  171  169  179  175  176  179  175  178   181 #>  [8238,]  158  171  169  179  175  176  179  175  178   181 #>  [8239,]  158  171  169  179  175  176  179  175  178   181 #>  [8240,]  158  171  169  179  175  176  179  175  178   180 #>  [8241,]  158  171  169  179  175  176  179  175  178   181 #>  [8242,]  158  171  169  179  175  176  179  175  178   181 #>  [8243,]  158  171  169  179  175  176  179  175  178   181 #>  [8244,]  158  171  169  179  175  176  179  175  178   181 #>  [8245,]  158  171  169  179  175  176  179  175  178   181 #>  [8246,]  158  171  169  179  175  176  179  175  178   181 #>  [8247,]  158  171  169  179  175  176  179  175  178   181 #>  [8248,]  158  171  169  179  175  176  179  175  178   180 #>  [8249,]  158  171  169  179  175  176  179  175  178   181 #>  [8250,]  158  171  169  179  175  176  179  175  178   181 #>  [8251,]  158  171  169  179  175  176  179  175  178   181 #>  [8252,]  158  171  169  179  175  176  179  175  178   181 #>  [8253,]  158  171  169  179  175  176  179  175  178   181 #>  [8254,]  158  171  169  179  175  176  179  175  178   181 #>  [8255,]  158  171  169  179  175  176  179  175  178   181 #>  [8256,]  158  171  169  179  175  176  179  175  178   181 #>  [8257,]  158  171  169  179  175  176  179  175  178   181 #>  [8258,]  158  171  169  179  175  176  179  175  178   181 #>  [8259,]  158  171  169  179  175  176  179  175  178   181 #>  [8260,]  158  171  169  179  175  176  179  175  178   181 #>  [8261,]  158  171  169  179  175  176  179  175  178   181 #>  [8262,]  158  171  169  179  175  176  179  175  178   181 #>  [8263,]  158  171  169  179  175  176  179  175  178   181 #>  [8264,]  158  171  169  179  175  176  179  175  178   181 #>  [8265,]  158  171  169  179  175  176  179  175  178   181 #>  [8266,]  158  171  169  179  175  176  179  175  178   181 #>  [8267,]  158  171  169  179  175  176  179  175  178   181 #>  [8268,]  158  171  169  179  175  176  179  175  178   181 #>  [8269,]  158  171  169  179  175  176  179  175  178   181 #>  [8270,]  158  171  169  179  175  176  179  175  178   180 #>  [8271,]  159  172  170  180  176  177  180  176  179   179 #>  [8272,]  158  171  169  179  175  176  179  175  178   181 #>  [8273,]  158  171  169  179  175  176  179  175  178   181 #>  [8274,]  158  171  169  179  175  176  179  175  178   180 #>  [8275,]  159  172  170  180  176  177  180  176  179   179 #>  [8276,]  158  171  169  179  175  176  179  175  178   181 #>  [8277,]  158  171  169  179  175  176  179  175  178   181 #>  [8278,]  158  171  169  179  175  176  179  175  178   181 #>  [8279,]  158  171  169  179  175  176  179  175  178   181 #>  [8280,]  158  171  169  179  175  176  179  175  178   181 #>  [8281,]  158  171  169  179  175  176  179  175  178   181 #>  [8282,]  158  171  169  179  175  176  179  175  178   181 #>  [8283,]  158  171  169  179  175  176  179  175  178   181 #>  [8284,]  158  171  169  179  175  176  179  175  178   181 #>  [8285,]  158  171  169  179  175  176  179  175  178   181 #>  [8286,]  158  171  169  179  175  176  179  175  178   181 #>  [8287,]  158  171  169  179  175  176  179  175  178   181 #>  [8288,]  158  171  169  179  175  176  179  175  178   181 #>  [8289,]  158  171  169  179  175  176  179  175  178   181 #>  [8290,]  158  171  169  179  175  176  179  175  178   181 #>  [8291,]  158  171  169  179  175  176  179  175  178   181 #>  [8292,]  158  171  169  179  175  176  179  175  178   181 #>  [8293,]  158  171  169  179  175  176  179  175  178   181 #>  [8294,]  158  171  169  179  175  176  179  175  178   181 #>  [8295,]  158  171  169  179  175  176  179  175  178   181 #>  [8296,]  158  171  169  179  175  176  179  175  178   181 #>  [8297,]  158  171  169  179  175  176  179  175  178   181 #>  [8298,]  158  171  169  179  175  176  179  175  178   180 #>  [8299,]  158  171  169  179  175  176  179  175  178   181 #>  [8300,]  159  172  170  180  176  177  180  176  179   179 #>  [8301,]  160  173  171  182  178  179  183  179  182   184 #>  [8302,]  161  174  171  182  178  179  183  179  182   184 #>  [8303,]  160  173  171  181  177  178  181  177  180   182 #>  [8304,]  160  173  171  182  178  179  182  178  181   183 #>  [8305,]  161  174  171  182  178  179  182  178  181   183 #>  [8306,]  160  173  171  181  177  178  181  177  180   182 #>  [8307,]  161  174  171  182  178  179  183  179  182   184 #>  [8308,]  160  173  171  182  178  179  182  178  181   183 #>  [8309,]  161  174  171  182  178  179  182  178  181   183 #>  [8310,]  161  174  171  182  178  179  182  178  181   183 #>  [8311,]  160  173  171  182  178  179  183  180  183   185 #>  [8312,]  161  174  171  182  178  179  183  180  183   185 #>  [8313,]  161  174  171  182  178  179  183  179  182   184 #>  [8314,]  160  173  171  182  178  179  183  180  183   185 #>  [8315,]  160  173  171  182  178  179  183  180  183   185 #>  [8316,]  160  173  171  182  178  179  183  179  182   184 #>  [8317,]  161  174  171  182  178  179  183  179  182   184 #>  [8318,]  161  174  171  182  178  179  182  178  181   183 #>  [8319,]  160  173  171  181  177  178  181  177  180   182 #>  [8320,]  161  174  171  182  178  179  182  178  181   183 #>  [8321,]  161  174  171  182  178  179  183  180  183   185 #>  [8322,]  161  174  171  182  178  179  183  179  182   184 #>  [8323,]  161  174  171  182  178  179  182  178  181   183 #>  [8324,]  161  174  171  182  178  179  182  178  181   183 #>  [8325,]  160  173  171  182  178  179  183  179  182   184 #>  [8326,]  160  173  171  182  178  179  183  180  183   185 #>  [8327,]  161  174  171  182  178  179  183  180  183   185 #>  [8328,]  160  173  171  182  178  179  183  179  182   184 #>  [8329,]  161  174  171  182  178  179  183  179  182   184 #>  [8330,]  161  174  171  182  178  179  182  178  181   183 #>  [8331,]  161  174  171  182  178  179  182  178  181   183 #>  [8332,]  161  174  171  182  178  179  182  178  181   183 #>  [8333,]  161  174  171  182  178  179  183  180  183   185 #>  [8334,]  160  173  171  181  177  178  181  177  180   182 #>  [8335,]  160  173  171  182  178  179  183  179  182   184 #>  [8336,]  161  174  171  182  178  179  183  180  183   185 #>  [8337,]  160  173  171  181  177  178  181  177  180   182 #>  [8338,]  160  173  171  181  177  178  181  177  180   182 #>  [8339,]  160  173  171  182  178  179  182  178  181   183 #>  [8340,]  161  174  171  182  178  179  183  179  182   184 #>  [8341,]  161  174  171  182  178  179  183  180  183   185 #>  [8342,]  160  173  171  182  178  179  182  178  181   183 #>  [8343,]  160  173  171  182  178  179  182  178  181   183 #>  [8344,]  161  174  171  182  178  179  183  179  182   184 #>  [8345,]  160  173  171  181  177  178  181  177  180   182 #>  [8346,]  160  173  171  182  178  179  183  179  182   184 #>  [8347,]  160  173  171  182  178  179  183  179  182   184 #>  [8348,]  161  174  171  182  178  179  182  178  181   183 #>  [8349,]  160  173  171  181  177  178  181  177  180   182 #>  [8350,]  161  174  171  182  178  179  183  179  182   184 #>  [8351,]  160  173  171  182  178  179  182  178  181   183 #>  [8352,]  160  173  171  181  177  178  181  177  180   182 #>  [8353,]  161  174  171  182  178  179  182  178  181   183 #>  [8354,]  161  174  171  182  178  179  183  179  182   184 #>  [8355,]  160  173  171  182  178  179  183  179  182   184 #>  [8356,]  160  173  171  182  178  179  182  178  181   183 #>  [8357,]  160  173  171  182  178  179  183  179  182   184 #>  [8358,]  160  173  171  182  178  179  183  180  183   185 #>  [8359,]  160  173  171  182  178  179  183  179  182   184 #>  [8360,]  161  174  171  182  178  179  182  178  181   183 #>  [8361,]  161  174  171  182  178  179  183  180  183   185 #>  [8362,]  160  173  171  182  178  179  182  178  181   183 #>  [8363,]  161  174  171  182  178  179  183  179  182   184 #>  [8364,]  160  173  171  182  178  179  182  178  181   183 #>  [8365,]  160  173  171  182  178  179  182  178  181   183 #>  [8366,]  160  173  171  182  178  179  182  178  181   183 #>  [8367,]  160  173  171  182  178  179  182  178  181   183 #>  [8368,]  160  173  171  181  177  178  181  177  180   182 #>  [8369,]  160  173  171  182  178  179  183  180  183   185 #>  [8370,]  161  174  171  182  178  179  183  179  182   184 #>  [8371,]  160  173  171  182  178  179  183  179  182   184 #>  [8372,]  160  173  171  181  177  178  181  177  180   182 #>  [8373,]  160  173  171  182  178  179  183  179  182   184 #>  [8374,]  160  173  171  182  178  179  183  180  183   185 #>  [8375,]  161  174  171  182  178  179  183  180  183   185 #>  [8376,]  160  173  171  182  178  179  183  179  182   184 #>  [8377,]  160  173  171  182  178  179  183  179  182   184 #>  [8378,]  161  174  171  182  178  179  182  178  181   183 #>  [8379,]  160  173  171  182  178  179  183  179  182   184 #>  [8380,]  161  174  171  182  178  179  183  179  182   184 #>  [8381,]  161  174  171  182  178  179  183  179  182   184 #>  [8382,]  160  173  171  182  178  179  183  180  183   185 #>  [8383,]  161  174  171  182  178  179  183  179  182   184 #>  [8384,]  161  174  171  182  178  179  183  179  182   184 #>  [8385,]  160  173  171  182  178  179  182  178  181   183 #>  [8386,]  161  174  171  182  178  179  183  179  182   184 #>  [8387,]  161  174  171  182  178  179  183  179  182   184 #>  [8388,]  161  174  171  182  178  179  182  178  181   183 #>  [8389,]  160  173  171  182  178  179  182  178  181   183 #>  [8390,]  160  173  171  182  178  179  183  179  182   184 #>  [8391,]  160  173  171  182  178  179  182  178  181   183 #>  [8392,]  161  174  171  182  178  179  183  180  183   185 #>  [8393,]  161  174  171  182  178  179  183  180  183   185 #>  [8394,]  160  173  171  182  178  179  183  179  182   184 #>  [8395,]  161  174  171  182  178  179  182  178  181   183 #>  [8396,]  160  173  171  181  177  178  181  177  180   182 #>  [8397,]  160  173  171  182  178  179  183  180  183   185 #>  [8398,]  160  173  171  182  178  179  183  179  182   184 #>  [8399,]  160  173  171  182  178  179  183  180  183   185 #>  [8400,]  160  173  171  182  178  179  183  179  182   184 #>  [8401,]  163  176  173  183  180  181  185  182  185   187 #>  [8402,]  162  175  172  183  180  181  185  182  185   187 #>  [8403,]  162  175  172  183  179  180  184  181  184   186 #>  [8404,]  163  176  173  183  180  181  185  182  185   187 #>  [8405,]  162  175  172  183  180  181  185  182  185   187 #>  [8406,]  162  175  172  183  180  181  185  182  185   187 #>  [8407,]  163  176  173  183  179  180  184  181  184   186 #>  [8408,]  163  176  173  183  180  181  185  182  185   187 #>  [8409,]  163  176  173  183  180  181  185  182  185   187 #>  [8410,]  163  176  173  183  180  181  185  182  185   187 #>  [8411,]  162  175  172  183  180  181  185  182  185   187 #>  [8412,]  162  175  172  183  179  180  184  181  184   186 #>  [8413,]  163  176  173  183  180  181  185  182  185   187 #>  [8414,]  162  175  172  183  180  181  185  182  185   187 #>  [8415,]  163  176  173  183  180  181  185  182  185   187 #>  [8416,]  163  176  173  183  180  181  185  182  185   187 #>  [8417,]  163  176  173  183  180  181  185  182  185   187 #>  [8418,]  163  176  173  183  180  181  185  182  185   187 #>  [8419,]  162  175  172  183  180  181  185  182  185   187 #>  [8420,]  162  175  172  183  180  181  185  182  185   187 #>  [8421,]  163  176  173  183  180  181  185  182  185   187 #>  [8422,]  162  175  172  183  180  181  185  182  185   187 #>  [8423,]  163  176  173  183  180  181  185  182  185   187 #>  [8424,]  162  175  172  183  180  181  185  182  185   187 #>  [8425,]  163  176  173  183  180  181  185  182  185   187 #>  [8426,]  162  175  172  183  180  181  185  182  185   187 #>  [8427,]  163  176  173  183  180  181  185  182  185   187 #>  [8428,]  163  176  173  183  180  181  185  182  185   187 #>  [8429,]  162  175  172  183  180  181  185  182  185   187 #>  [8430,]  162  175  172  183  180  181  185  182  185   187 #>  [8431,]  162  175  172  183  179  180  184  181  184   186 #>  [8432,]  162  175  172  183  180  181  185  182  185   187 #>  [8433,]  162  175  172  183  180  181  185  182  185   187 #>  [8434,]  162  175  172  183  180  181  185  182  185   187 #>  [8435,]  162  175  172  183  180  181  185  182  185   187 #>  [8436,]  162  175  172  183  180  181  185  182  185   187 #>  [8437,]  162  175  172  183  180  181  185  182  185   187 #>  [8438,]  162  175  172  183  180  181  185  182  185   187 #>  [8439,]  163  176  173  183  180  181  185  182  185   187 #>  [8440,]  162  175  172  183  180  181  185  182  185   187 #>  [8441,]  162  175  172  183  180  181  185  182  185   187 #>  [8442,]  162  175  172  183  180  181  185  182  185   187 #>  [8443,]  163  176  173  183  180  181  185  182  185   187 #>  [8444,]  162  175  172  183  180  181  185  182  185   187 #>  [8445,]  163  176  173  183  180  181  185  182  185   187 #>  [8446,]  163  176  173  183  180  181  185  182  185   187 #>  [8447,]  163  176  173  183  180  181  185  182  185   187 #>  [8448,]  162  175  172  183  180  181  185  182  185   187 #>  [8449,]  162  175  172  183  180  181  185  182  185   187 #>  [8450,]  162  175  172  183  180  181  185  182  185   187 #>  [8451,]  162  175  172  183  180  181  185  182  185   187 #>  [8452,]  162  175  172  183  179  180  184  181  184   186 #>  [8453,]  163  176  173  183  180  181  185  182  185   187 #>  [8454,]  162  175  172  183  180  181  185  182  185   187 #>  [8455,]  162  175  172  183  180  181  185  182  185   187 #>  [8456,]  163  176  173  183  180  181  185  182  185   187 #>  [8457,]  162  175  172  183  180  181  185  182  185   187 #>  [8458,]  162  175  172  183  180  181  185  182  185   187 #>  [8459,]  162  175  172  183  179  180  184  181  184   186 #>  [8460,]  162  175  172  183  179  180  184  181  184   186 #>  [8461,]  163  176  173  183  180  181  185  182  185   187 #>  [8462,]  162  175  172  183  180  181  185  182  185   187 #>  [8463,]  162  175  172  183  180  181  185  182  185   187 #>  [8464,]  163  176  173  183  180  181  185  182  185   187 #>  [8465,]  162  175  172  183  180  181  185  182  185   187 #>  [8466,]  162  175  172  183  180  181  185  182  185   187 #>  [8467,]  162  175  172  183  180  181  185  182  185   187 #>  [8468,]  162  175  172  183  180  181  185  182  185   187 #>  [8469,]  162  175  172  183  180  181  185  182  185   187 #>  [8470,]  163  176  173  183  180  181  185  182  185   187 #>  [8471,]  163  176  173  183  180  181  185  182  185   187 #>  [8472,]  163  176  173  183  180  181  185  182  185   187 #>  [8473,]  163  176  173  183  180  181  185  182  185   187 #>  [8474,]  163  176  173  183  180  181  185  182  185   187 #>  [8475,]  163  176  173  183  180  181  185  182  185   187 #>  [8476,]  163  176  173  183  180  181  185  182  185   187 #>  [8477,]  163  176  173  183  180  181  185  182  185   187 #>  [8478,]  162  175  172  183  180  181  185  182  185   187 #>  [8479,]  162  175  172  183  180  181  185  182  185   187 #>  [8480,]  162  175  172  183  180  181  185  182  185   187 #>  [8481,]  162  175  172  183  180  181  185  182  185   187 #>  [8482,]  163  176  173  183  180  181  185  182  185   187 #>  [8483,]  162  175  172  183  180  181  185  182  185   187 #>  [8484,]  163  176  173  183  180  181  185  182  185   187 #>  [8485,]  162  175  172  183  180  181  185  182  185   187 #>  [8486,]  162  175  172  183  180  181  185  182  185   187 #>  [8487,]  163  176  173  183  180  181  185  182  185   187 #>  [8488,]  163  176  173  183  180  181  185  182  185   187 #>  [8489,]  162  175  172  183  180  181  185  182  185   187 #>  [8490,]  163  176  173  183  180  181  185  182  185   187 #>  [8491,]  162  175  172  183  180  181  185  182  185   187 #>  [8492,]  162  175  172  183  180  181  185  182  185   187 #>  [8493,]  162  175  172  183  180  181  185  182  185   187 #>  [8494,]  163  176  173  183  180  181  185  182  185   187 #>  [8495,]  163  176  173  183  180  181  185  182  185   187 #>  [8496,]  163  176  173  183  180  181  185  182  185   187 #>  [8497,]  162  175  172  183  179  180  184  181  184   186 #>  [8498,]  162  175  172  183  180  181  185  182  185   187 #>  [8499,]  162  175  172  183  180  181  185  182  185   187 #>  [8500,]  163  176  173  183  180  181  185  182  185   187 #>  [8501,]  165  178  176  186  182  183  187  184  187   189 #>  [8502,]  165  178  176  186  182  183  187  184  187   189 #>  [8503,]  164  177  174  184  181  182  186  183  186   188 #>  [8504,]  165  178  175  185  182  183  187  184  187   189 #>  [8505,]  165  178  176  186  182  183  187  184  187   189 #>  [8506,]  165  178  176  186  182  183  187  184  187   189 #>  [8507,]  164  177  174  184  181  182  186  183  186   188 #>  [8508,]  165  178  175  185  182  183  187  184  187   189 #>  [8509,]  165  178  175  185  182  183  187  184  187   189 #>  [8510,]  165  178  176  186  182  183  187  184  187   189 #>  [8511,]  165  178  176  186  182  183  187  184  187   189 #>  [8512,]  165  178  176  186  182  183  187  184  187   189 #>  [8513,]  165  178  176  186  182  183  187  184  187   189 #>  [8514,]  165  178  176  186  182  183  187  184  187   189 #>  [8515,]  165  178  176  186  182  183  187  184  187   189 #>  [8516,]  165  178  176  186  182  183  187  184  187   189 #>  [8517,]  165  178  175  185  182  183  187  184  187   189 #>  [8518,]  165  178  176  186  182  183  187  184  187   189 #>  [8519,]  165  178  176  186  182  183  187  184  187   189 #>  [8520,]  165  178  176  186  182  183  187  184  187   189 #>  [8521,]  165  178  176  186  182  183  187  184  187   189 #>  [8522,]  165  178  176  186  182  183  187  184  187   189 #>  [8523,]  165  178  176  186  182  183  187  184  187   189 #>  [8524,]  165  178  176  186  182  183  187  184  187   189 #>  [8525,]  165  178  176  186  182  183  187  184  187   189 #>  [8526,]  165  178  176  186  182  183  187  184  187   189 #>  [8527,]  165  178  175  185  182  183  187  184  187   189 #>  [8528,]  165  178  176  186  182  183  187  184  187   189 #>  [8529,]  165  178  176  186  182  183  187  184  187   189 #>  [8530,]  165  178  176  186  182  183  187  184  187   189 #>  [8531,]  165  178  176  186  182  183  187  184  187   189 #>  [8532,]  165  178  176  186  182  183  187  184  187   189 #>  [8533,]  165  178  176  186  182  183  187  184  187   189 #>  [8534,]  165  178  176  186  182  183  187  184  187   189 #>  [8535,]  165  178  176  186  182  183  187  184  187   189 #>  [8536,]  165  178  176  186  182  183  187  184  187   189 #>  [8537,]  165  178  176  186  182  183  187  184  187   189 #>  [8538,]  165  178  176  186  182  183  187  184  187   189 #>  [8539,]  165  178  176  186  182  183  187  184  187   189 #>  [8540,]  165  178  176  186  182  183  187  184  187   189 #>  [8541,]  165  178  176  186  182  183  187  184  187   189 #>  [8542,]  165  178  176  186  182  183  187  184  187   189 #>  [8543,]  165  178  176  186  182  183  187  184  187   189 #>  [8544,]  165  178  175  185  182  183  187  184  187   189 #>  [8545,]  165  178  176  186  182  183  187  184  187   189 #>  [8546,]  165  178  176  186  182  183  187  184  187   189 #>  [8547,]  165  178  176  186  182  183  187  184  187   189 #>  [8548,]  165  178  176  186  182  183  187  184  187   189 #>  [8549,]  164  177  174  184  181  182  186  183  186   188 #>  [8550,]  165  178  176  186  182  183  187  184  187   189 #>  [8551,]  165  178  176  186  182  183  187  184  187   189 #>  [8552,]  165  178  175  185  182  183  187  184  187   189 #>  [8553,]  164  177  174  184  181  182  186  183  186   188 #>  [8554,]  165  178  176  186  182  183  187  184  187   189 #>  [8555,]  165  178  176  186  182  183  187  184  187   189 #>  [8556,]  164  177  174  184  181  182  186  183  186   188 #>  [8557,]  165  178  176  186  182  183  187  184  187   189 #>  [8558,]  165  178  176  186  182  183  187  184  187   189 #>  [8559,]  165  178  176  186  182  183  187  184  187   189 #>  [8560,]  165  178  176  186  182  183  187  184  187   189 #>  [8561,]  165  178  176  186  182  183  187  184  187   189 #>  [8562,]  165  178  176  186  182  183  187  184  187   189 #>  [8563,]  165  178  176  186  182  183  187  184  187   189 #>  [8564,]  165  178  176  186  182  183  187  184  187   189 #>  [8565,]  165  178  176  186  182  183  187  184  187   189 #>  [8566,]  164  177  174  184  181  182  186  183  186   188 #>  [8567,]  165  178  176  186  182  183  187  184  187   189 #>  [8568,]  165  178  176  186  182  183  187  184  187   189 #>  [8569,]  165  178  176  186  182  183  187  184  187   189 #>  [8570,]  165  178  176  186  182  183  187  184  187   189 #>  [8571,]  165  178  176  186  182  183  187  184  187   189 #>  [8572,]  165  178  176  186  182  183  187  184  187   189 #>  [8573,]  165  178  176  186  182  183  187  184  187   189 #>  [8574,]  165  178  176  186  182  183  187  184  187   189 #>  [8575,]  165  178  176  186  182  183  187  184  187   189 #>  [8576,]  165  178  176  186  182  183  187  184  187   189 #>  [8577,]  165  178  176  186  182  183  187  184  187   189 #>  [8578,]  165  178  176  186  182  183  187  184  187   189 #>  [8579,]  165  178  176  186  182  183  187  184  187   189 #>  [8580,]  165  178  176  186  182  183  187  184  187   189 #>  [8581,]  165  178  175  185  182  183  187  184  187   189 #>  [8582,]  165  178  175  185  182  183  187  184  187   189 #>  [8583,]  165  178  176  186  182  183  187  184  187   189 #>  [8584,]  165  178  176  186  182  183  187  184  187   189 #>  [8585,]  165  178  176  186  182  183  187  184  187   189 #>  [8586,]  165  178  176  186  182  183  187  184  187   189 #>  [8587,]  165  178  176  186  182  183  187  184  187   189 #>  [8588,]  165  178  176  186  182  183  187  184  187   189 #>  [8589,]  165  178  176  186  182  183  187  184  187   189 #>  [8590,]  165  178  175  185  182  183  187  184  187   189 #>  [8591,]  165  178  176  186  182  183  187  184  187   189 #>  [8592,]  165  178  176  186  182  183  187  184  187   189 #>  [8593,]  165  178  176  186  182  183  187  184  187   189 #>  [8594,]  165  178  176  186  182  183  187  184  187   189 #>  [8595,]  165  178  175  185  182  183  187  184  187   189 #>  [8596,]  165  178  176  186  182  183  187  184  187   189 #>  [8597,]  165  178  176  186  182  183  187  184  187   189 #>  [8598,]  165  178  176  186  182  183  187  184  187   189 #>  [8599,]  165  178  176  186  182  183  187  184  187   189 #>  [8600,]  165  178  176  186  182  183  187  184  187   189 #>  [8601,]  166  179  177  187  183  184  188  185  188   190 #>  [8602,]  167  180  178  188  184  185  189  186  189   191 #>  [8603,]  166  179  177  187  183  184  188  185  188   190 #>  [8604,]  166  179  177  187  183  184  188  185  188   190 #>  [8605,]  166  179  177  187  183  184  188  185  188   190 #>  [8606,]  166  179  177  187  183  184  188  185  188   190 #>  [8607,]  166  179  177  187  183  184  188  185  188   190 #>  [8608,]  166  179  177  187  183  184  188  185  188   190 #>  [8609,]  167  180  178  188  184  185  189  186  189   191 #>  [8610,]  167  180  178  188  184  185  189  186  189   191 #>  [8611,]  166  179  177  187  183  184  188  185  188   190 #>  [8612,]  167  180  178  188  184  185  189  186  189   191 #>  [8613,]  166  179  177  187  183  184  188  185  188   190 #>  [8614,]  166  179  177  187  183  184  188  185  188   190 #>  [8615,]  166  179  177  187  183  184  188  185  188   190 #>  [8616,]  166  179  177  187  183  184  188  185  188   190 #>  [8617,]  166  179  177  187  183  184  188  185  188   190 #>  [8618,]  166  179  177  187  183  184  188  185  188   190 #>  [8619,]  166  179  177  187  183  184  188  185  188   190 #>  [8620,]  166  179  177  187  183  184  188  185  188   190 #>  [8621,]  167  180  178  188  184  185  189  186  189   191 #>  [8622,]  166  179  177  187  183  184  188  185  188   190 #>  [8623,]  166  179  177  187  183  184  188  185  188   190 #>  [8624,]  166  179  177  187  183  184  188  185  188   190 #>  [8625,]  166  179  177  187  183  184  188  185  188   190 #>  [8626,]  166  179  177  187  183  184  188  185  188   190 #>  [8627,]  166  179  177  187  183  184  188  185  188   190 #>  [8628,]  166  179  177  187  183  184  188  185  188   190 #>  [8629,]  167  180  178  188  184  185  189  186  189   191 #>  [8630,]  166  179  177  187  183  184  188  185  188   190 #>  [8631,]  166  179  177  187  183  184  188  185  188   190 #>  [8632,]  166  179  177  187  183  184  188  185  188   190 #>  [8633,]  167  180  178  188  184  185  189  186  189   191 #>  [8634,]  166  179  177  187  183  184  188  185  188   190 #>  [8635,]  166  179  177  187  183  184  188  185  188   190 #>  [8636,]  166  179  177  187  183  184  188  185  188   190 #>  [8637,]  166  179  177  187  183  184  188  185  188   190 #>  [8638,]  166  179  177  187  183  184  188  185  188   190 #>  [8639,]  166  179  177  187  183  184  188  185  188   190 #>  [8640,]  166  179  177  187  183  184  188  185  188   190 #>  [8641,]  166  179  177  187  183  184  188  185  188   190 #>  [8642,]  166  179  177  187  183  184  188  185  188   190 #>  [8643,]  166  179  177  187  183  184  188  185  188   190 #>  [8644,]  166  179  177  187  183  184  188  185  188   190 #>  [8645,]  166  179  177  187  183  184  188  185  188   190 #>  [8646,]  166  179  177  187  183  184  188  185  188   190 #>  [8647,]  166  179  177  187  183  184  188  185  188   190 #>  [8648,]  166  179  177  187  183  184  188  185  188   190 #>  [8649,]  166  179  177  187  183  184  188  185  188   190 #>  [8650,]  166  179  177  187  183  184  188  185  188   190 #>  [8651,]  166  179  177  187  183  184  188  185  188   190 #>  [8652,]  166  179  177  187  183  184  188  185  188   190 #>  [8653,]  166  179  177  187  183  184  188  185  188   190 #>  [8654,]  166  179  177  187  183  184  188  185  188   190 #>  [8655,]  166  179  177  187  183  184  188  185  188   190 #>  [8656,]  166  179  177  187  183  184  188  185  188   190 #>  [8657,]  166  179  177  187  183  184  188  185  188   190 #>  [8658,]  166  179  177  187  183  184  188  185  188   190 #>  [8659,]  166  179  177  187  183  184  188  185  188   190 #>  [8660,]  167  180  178  188  184  185  189  186  189   191 #>  [8661,]  166  179  177  187  183  184  188  185  188   190 #>  [8662,]  166  179  177  187  183  184  188  185  188   190 #>  [8663,]  166  179  177  187  183  184  188  185  188   190 #>  [8664,]  166  179  177  187  183  184  188  185  188   190 #>  [8665,]  166  179  177  187  183  184  188  185  188   190 #>  [8666,]  166  179  177  187  183  184  188  185  188   190 #>  [8667,]  166  179  177  187  183  184  188  185  188   190 #>  [8668,]  166  179  177  187  183  184  188  185  188   190 #>  [8669,]  166  179  177  187  183  184  188  185  188   190 #>  [8670,]  167  180  178  188  184  185  189  186  189   191 #>  [8671,]  166  179  177  187  183  184  188  185  188   190 #>  [8672,]  166  179  177  187  183  184  188  185  188   190 #>  [8673,]  166  179  177  187  183  184  188  185  188   190 #>  [8674,]  166  179  177  187  183  184  188  185  188   190 #>  [8675,]  166  179  177  187  183  184  188  185  188   190 #>  [8676,]  166  179  177  187  183  184  188  185  188   190 #>  [8677,]  166  179  177  187  183  184  188  185  188   190 #>  [8678,]  166  179  177  187  183  184  188  185  188   190 #>  [8679,]  166  179  177  187  183  184  188  185  188   190 #>  [8680,]  166  179  177  187  183  184  188  185  188   190 #>  [8681,]  167  180  178  188  184  185  189  186  189   191 #>  [8682,]  166  179  177  187  183  184  188  185  188   190 #>  [8683,]  166  179  177  187  183  184  188  185  188   190 #>  [8684,]  166  179  177  187  183  184  188  185  188   190 #>  [8685,]  166  179  177  187  183  184  188  185  188   190 #>  [8686,]  167  180  178  188  184  185  189  186  189   191 #>  [8687,]  166  179  177  187  183  184  188  185  188   190 #>  [8688,]  166  179  177  187  183  184  188  185  188   190 #>  [8689,]  166  179  177  187  183  184  188  185  188   190 #>  [8690,]  166  179  177  187  183  184  188  185  188   190 #>  [8691,]  166  179  177  187  183  184  188  185  188   190 #>  [8692,]  166  179  177  187  183  184  188  185  188   190 #>  [8693,]  166  179  177  187  183  184  188  185  188   190 #>  [8694,]  166  179  177  187  183  184  188  185  188   190 #>  [8695,]  166  179  177  187  183  184  188  185  188   190 #>  [8696,]  166  179  177  187  183  184  188  185  188   190 #>  [8697,]  166  179  177  187  183  184  188  185  188   190 #>  [8698,]  166  179  177  187  183  184  188  185  188   190 #>  [8699,]  166  179  177  187  183  184  188  185  188   190 #>  [8700,]  166  179  177  187  183  184  188  185  188   190 #>  [8701,]  168  181  181  190  186  187  191  188  191   193 #>  [8702,]  168  181  181  190  186  187  191  188  191   193 #>  [8703,]  168  181  181  190  186  187  191  188  191   193 #>  [8704,]  169  182  179  189  185  186  190  187  190   192 #>  [8705,]  168  181  181  190  186  187  191  189  191   193 #>  [8706,]  168  181  181  190  186  187  191  188  191   193 #>  [8707,]  168  181  181  190  186  187  191  188  191   193 #>  [8708,]  168  181  181  190  186  187  191  188  191   193 #>  [8709,]  168  181  181  190  186  187  191  188  191   193 #>  [8710,]  168  181  181  190  186  187  191  188  191   193 #>  [8711,]  168  181  181  190  186  187  191  188  191   193 #>  [8712,]  168  181  181  190  186  187  191  188  191   193 #>  [8713,]  168  181  181  190  186  187  191  188  191   193 #>  [8714,]  169  182  179  189  185  186  190  187  190   192 #>  [8715,]  168  181  180  190  186  187  191  188  191   193 #>  [8716,]  168  181  181  190  186  187  191  188  191   193 #>  [8717,]  168  181  180  190  186  187  191  188  191   193 #>  [8718,]  168  181  181  190  186  187  191  189  191   193 #>  [8719,]  168  181  181  190  186  187  191  188  191   193 #>  [8720,]  168  181  181  190  186  187  191  188  191   193 #>  [8721,]  168  181  181  190  186  187  191  188  191   193 #>  [8722,]  168  181  181  190  186  187  191  188  191   193 #>  [8723,]  168  181  181  190  186  187  191  188  191   193 #>  [8724,]  168  181  181  190  186  187  191  188  191   193 #>  [8725,]  168  181  181  190  186  187  191  188  191   193 #>  [8726,]  168  181  181  190  186  187  191  188  191   193 #>  [8727,]  168  181  181  190  186  187  191  188  191   193 #>  [8728,]  168  181  181  190  186  187  191  188  191   193 #>  [8729,]  168  181  181  190  186  187  191  188  191   193 #>  [8730,]  168  181  181  190  186  187  191  188  191   193 #>  [8731,]  168  181  180  190  186  187  191  188  191   193 #>  [8732,]  168  181  181  190  186  187  191  188  191   193 #>  [8733,]  168  181  181  190  186  187  191  188  191   193 #>  [8734,]  168  181  180  190  186  187  191  188  191   193 #>  [8735,]  168  181  181  190  186  187  191  188  191   193 #>  [8736,]  168  181  181  190  186  187  191  188  191   193 #>  [8737,]  168  181  180  190  186  187  191  188  191   193 #>  [8738,]  168  181  181  190  186  187  191  188  191   193 #>  [8739,]  168  181  181  190  186  187  191  188  191   193 #>  [8740,]  168  181  181  190  186  187  191  188  191   193 #>  [8741,]  168  181  181  190  186  187  191  188  191   193 #>  [8742,]  168  181  180  190  186  187  191  188  191   193 #>  [8743,]  168  181  180  190  186  187  191  188  191   193 #>  [8744,]  168  181  180  190  186  187  191  188  191   193 #>  [8745,]  168  181  181  190  186  187  191  188  191   193 #>  [8746,]  168  181  181  190  186  187  191  188  191   193 #>  [8747,]  168  181  181  190  186  187  191  188  191   193 #>  [8748,]  168  181  181  190  186  187  191  188  191   193 #>  [8749,]  168  181  181  190  186  187  191  188  191   193 #>  [8750,]  168  181  181  190  186  187  191  188  191   193 #>  [8751,]  168  181  181  190  186  187  191  188  191   193 #>  [8752,]  168  181  181  190  186  187  191  188  191   193 #>  [8753,]  168  181  181  190  186  187  191  188  191   193 #>  [8754,]  168  181  181  190  186  187  191  188  191   193 #>  [8755,]  168  181  181  190  186  187  191  188  191   193 #>  [8756,]  168  181  181  190  186  187  191  188  191   193 #>  [8757,]  168  181  181  190  186  187  191  188  191   193 #>  [8758,]  168  181  181  190  186  187  191  188  191   193 #>  [8759,]  168  181  181  190  186  187  191  188  191   193 #>  [8760,]  168  181  181  190  186  187  191  188  191   193 #>  [8761,]  169  182  179  189  185  186  190  187  190   192 #>  [8762,]  168  181  181  190  186  187  191  188  191   193 #>  [8763,]  168  181  180  190  186  187  191  188  191   193 #>  [8764,]  168  181  181  190  186  187  191  188  191   193 #>  [8765,]  168  181  181  190  186  187  191  188  191   193 #>  [8766,]  168  181  181  190  186  187  191  188  191   193 #>  [8767,]  168  181  181  190  186  187  191  188  191   193 #>  [8768,]  168  181  181  190  186  187  191  188  191   193 #>  [8769,]  168  181  181  190  186  187  191  188  191   193 #>  [8770,]  168  181  181  190  186  187  191  188  191   193 #>  [8771,]  168  181  181  190  186  187  191  189  191   193 #>  [8772,]  168  181  181  190  186  187  191  188  191   193 #>  [8773,]  168  181  181  190  186  187  191  188  191   193 #>  [8774,]  168  181  181  190  186  187  191  188  191   193 #>  [8775,]  168  181  180  190  186  187  191  189  191   193 #>  [8776,]  168  181  181  190  186  187  191  188  191   193 #>  [8777,]  168  181  181  190  186  187  191  188  191   193 #>  [8778,]  168  181  180  190  186  187  191  188  191   193 #>  [8779,]  168  181  180  190  186  187  191  188  191   193 #>  [8780,]  168  181  181  190  186  187  191  188  191   193 #>  [8781,]  168  181  181  190  186  187  191  188  191   193 #>  [8782,]  169  182  179  189  185  186  190  187  190   192 #>  [8783,]  168  181  181  190  186  187  191  188  191   193 #>  [8784,]  168  181  181  190  186  187  191  188  191   193 #>  [8785,]  168  181  181  190  186  187  191  188  191   193 #>  [8786,]  168  181  181  190  186  187  191  188  191   193 #>  [8787,]  168  181  181  190  186  187  191  188  191   193 #>  [8788,]  168  181  181  190  186  187  191  188  191   193 #>  [8789,]  168  181  181  190  186  187  191  188  191   193 #>  [8790,]  168  181  181  190  186  187  191  188  191   193 #>  [8791,]  168  181  181  190  186  187  191  188  191   193 #>  [8792,]  169  182  179  189  185  186  190  187  190   192 #>  [8793,]  169  182  179  189  185  186  190  187  190   192 #>  [8794,]  168  181  181  190  186  187  191  188  191   193 #>  [8795,]  168  181  180  190  186  187  191  188  191   193 #>  [8796,]  169  182  179  189  185  186  190  187  190   192 #>  [8797,]  168  181  181  190  186  187  191  188  191   193 #>  [8798,]  168  181  181  190  186  187  191  188  191   193 #>  [8799,]  168  181  181  190  186  187  191  188  191   193 #>  [8800,]  168  181  180  190  186  187  191  189  191   193 #>  [8801,]  171  185  183  192  188  189  193  191  193   195 #>  [8802,]  171  184  183  192  188  189  193  191  193   195 #>  [8803,]  171  185  183  192  188  189  193  191  193   195 #>  [8804,]  170  183  182  191  187  188  192  190  192   194 #>  [8805,]  171  185  183  192  188  189  193  191  193   195 #>  [8806,]  171  184  183  192  188  189  193  191  193   195 #>  [8807,]  171  185  183  192  188  189  193  191  193   195 #>  [8808,]  170  183  182  191  187  188  192  190  192   194 #>  [8809,]  170  183  182  191  187  188  192  190  192   194 #>  [8810,]  171  185  183  192  188  189  193  191  193   195 #>  [8811,]  171  184  183  192  188  189  193  191  193   195 #>  [8812,]  171  184  183  192  188  189  193  191  193   195 #>  [8813,]  171  185  183  192  188  189  193  191  193   195 #>  [8814,]  171  185  183  192  188  189  193  191  193   195 #>  [8815,]  171  184  183  192  188  189  193  191  193   195 #>  [8816,]  171  185  183  192  188  189  193  191  193   195 #>  [8817,]  170  183  182  191  187  188  192  190  192   194 #>  [8818,]  171  184  183  192  188  189  193  191  193   195 #>  [8819,]  171  184  183  192  188  189  193  191  193   195 #>  [8820,]  171  185  183  192  188  189  193  191  193   195 #>  [8821,]  171  184  183  192  188  189  193  191  193   195 #>  [8822,]  171  185  183  192  188  189  193  191  193   195 #>  [8823,]  171  184  183  192  188  189  193  191  193   195 #>  [8824,]  171  185  183  192  188  189  193  191  193   195 #>  [8825,]  171  185  183  192  188  189  193  191  193   195 #>  [8826,]  171  184  183  192  188  189  193  191  193   195 #>  [8827,]  170  183  182  191  187  188  192  190  192   194 #>  [8828,]  171  185  183  192  188  189  193  191  193   195 #>  [8829,]  171  184  183  192  188  189  193  191  193   195 #>  [8830,]  171  184  183  192  188  189  193  191  193   195 #>  [8831,]  171  184  183  192  188  189  193  191  193   195 #>  [8832,]  171  184  183  192  188  189  193  191  193   195 #>  [8833,]  171  185  183  192  188  189  193  191  193   195 #>  [8834,]  171  184  183  192  188  189  193  191  193   195 #>  [8835,]  171  184  183  192  188  189  193  191  193   195 #>  [8836,]  171  185  183  192  188  189  193  191  193   195 #>  [8837,]  171  184  183  192  188  189  193  191  193   195 #>  [8838,]  171  184  183  192  188  189  193  191  193   195 #>  [8839,]  171  185  183  192  188  189  193  191  193   195 #>  [8840,]  171  184  183  192  188  189  193  191  193   195 #>  [8841,]  171  185  183  192  188  189  193  191  193   195 #>  [8842,]  171  184  183  192  188  189  193  191  193   195 #>  [8843,]  171  184  183  192  188  189  193  191  193   195 #>  [8844,]  171  184  183  192  188  189  193  191  193   195 #>  [8845,]  171  185  183  192  188  189  193  191  193   195 #>  [8846,]  171  184  183  192  188  189  193  191  193   195 #>  [8847,]  171  184  183  192  188  189  193  191  193   195 #>  [8848,]  171  184  183  192  188  189  193  191  193   195 #>  [8849,]  171  185  183  192  188  189  193  191  193   195 #>  [8850,]  171  185  183  192  188  189  193  191  193   195 #>  [8851,]  171  184  183  192  188  189  193  191  193   195 #>  [8852,]  170  183  182  191  187  188  192  190  192   194 #>  [8853,]  171  185  183  192  188  189  193  191  193   195 #>  [8854,]  171  185  183  192  188  189  193  191  193   195 #>  [8855,]  171  185  183  192  188  189  193  191  193   195 #>  [8856,]  171  184  183  192  188  189  193  191  193   195 #>  [8857,]  171  185  183  192  188  189  193  191  193   195 #>  [8858,]  171  185  183  192  188  189  193  191  193   195 #>  [8859,]  171  185  183  192  188  189  193  191  193   195 #>  [8860,]  171  184  183  192  188  189  193  191  193   195 #>  [8861,]  171  184  183  192  188  189  193  191  193   195 #>  [8862,]  171  184  183  192  188  189  193  191  193   195 #>  [8863,]  171  184  183  192  188  189  193  191  193   195 #>  [8864,]  171  184  183  192  188  189  193  191  193   195 #>  [8865,]  171  184  183  192  188  189  193  191  193   195 #>  [8866,]  171  184  183  192  188  189  193  191  193   195 #>  [8867,]  171  185  183  192  188  189  193  191  193   195 #>  [8868,]  171  184  183  192  188  189  193  191  193   195 #>  [8869,]  171  184  183  192  188  189  193  191  193   195 #>  [8870,]  171  184  183  192  188  189  193  191  193   195 #>  [8871,]  171  185  183  192  188  189  193  191  193   195 #>  [8872,]  171  185  183  192  188  189  193  191  193   195 #>  [8873,]  171  185  183  192  188  189  193  191  193   195 #>  [8874,]  171  185  183  192  188  189  193  191  193   195 #>  [8875,]  171  184  183  192  188  189  193  191  193   195 #>  [8876,]  171  185  183  192  188  189  193  191  193   195 #>  [8877,]  171  185  183  192  188  189  193  191  193   195 #>  [8878,]  171  184  183  192  188  189  193  191  193   195 #>  [8879,]  171  184  183  192  188  189  193  191  193   195 #>  [8880,]  171  185  183  192  188  189  193  191  193   195 #>  [8881,]  170  183  182  191  187  188  192  190  192   194 #>  [8882,]  170  183  182  191  187  188  192  190  192   194 #>  [8883,]  171  184  183  192  188  189  193  191  193   195 #>  [8884,]  171  185  183  192  188  189  193  191  193   195 #>  [8885,]  171  185  183  192  188  189  193  191  193   195 #>  [8886,]  171  185  183  192  188  189  193  191  193   195 #>  [8887,]  171  185  183  192  188  189  193  191  193   195 #>  [8888,]  171  185  183  192  188  189  193  191  193   195 #>  [8889,]  171  184  183  192  188  189  193  191  193   195 #>  [8890,]  171  185  183  192  188  189  193  191  193   195 #>  [8891,]  171  185  183  192  188  189  193  191  193   195 #>  [8892,]  171  184  183  192  188  189  193  191  193   195 #>  [8893,]  171  184  183  192  188  189  193  191  193   195 #>  [8894,]  171  184  183  192  188  189  193  191  193   195 #>  [8895,]  170  183  182  191  187  188  192  190  192   194 #>  [8896,]  171  184  183  192  188  189  193  191  193   195 #>  [8897,]  171  184  183  192  188  189  193  191  193   195 #>  [8898,]  171  184  183  192  188  189  193  191  193   195 #>  [8899,]  171  185  183  192  188  189  193  191  193   195 #>  [8900,]  171  184  183  192  188  189  193  191  193   195 #>  [8901,]  172  186  184  193  189  192  196  193  195   197 #>  [8902,]  172  186  184  193  189  192  196  193  195   197 #>  [8903,]  172  186  184  193  189  191  195  193  195   197 #>  [8904,]  172  186  184  193  189  192  196  193  195   198 #>  [8905,]  172  186  184  193  189  192  196  193  195   197 #>  [8906,]  173  187  185  194  190  190  194  192  194   196 #>  [8907,]  172  186  184  193  189  192  196  193  195   197 #>  [8908,]  173  187  185  194  190  190  194  192  194   196 #>  [8909,]  173  187  185  194  190  190  194  192  194   196 #>  [8910,]  172  186  184  193  189  192  196  193  195   198 #>  [8911,]  172  186  184  193  189  191  195  193  195   198 #>  [8912,]  173  187  185  194  190  190  194  192  194   196 #>  [8913,]  172  186  184  193  189  192  196  193  195   197 #>  [8914,]  172  186  184  193  189  192  196  193  195   198 #>  [8915,]  173  187  185  194  190  190  194  192  194   196 #>  [8916,]  172  186  184  193  189  191  195  193  195   197 #>  [8917,]  172  186  184  193  189  192  196  193  195   197 #>  [8918,]  172  186  184  193  189  192  196  193  195   198 #>  [8919,]  172  186  184  193  189  191  195  193  195   198 #>  [8920,]  172  186  184  193  189  192  196  193  195   197 #>  [8921,]  172  186  184  193  189  192  196  193  195   198 #>  [8922,]  172  186  184  193  189  192  196  193  195   197 #>  [8923,]  172  186  184  193  189  192  196  193  195   197 #>  [8924,]  172  186  184  193  189  192  196  193  195   197 #>  [8925,]  172  186  184  193  189  192  196  193  195   197 #>  [8926,]  173  187  185  194  190  190  194  192  194   196 #>  [8927,]  172  186  184  193  189  192  196  193  195   198 #>  [8928,]  172  186  184  193  189  192  196  193  195   197 #>  [8929,]  172  186  184  193  189  192  196  193  195   197 #>  [8930,]  172  186  184  193  189  192  196  193  195   198 #>  [8931,]  172  186  184  193  189  192  196  193  195   198 #>  [8932,]  172  186  184  193  189  192  196  193  195   198 #>  [8933,]  172  186  184  193  189  192  196  193  195   198 #>  [8934,]  172  186  184  193  189  191  195  193  195   198 #>  [8935,]  172  186  184  193  189  191  195  193  195   197 #>  [8936,]  172  186  184  193  189  192  196  193  195   198 #>  [8937,]  172  186  184  193  189  191  195  193  195   197 #>  [8938,]  172  186  184  193  189  191  195  193  195   198 #>  [8939,]  172  186  184  193  189  192  196  193  195   197 #>  [8940,]  172  186  184  193  189  192  196  193  195   197 #>  [8941,]  172  186  184  193  189  192  196  193  195   198 #>  [8942,]  172  186  184  193  189  192  196  193  195   198 #>  [8943,]  173  187  185  194  190  190  194  192  194   196 #>  [8944,]  172  186  184  193  189  192  196  193  195   197 #>  [8945,]  172  186  184  193  189  191  195  193  195   197 #>  [8946,]  173  187  185  194  190  190  194  192  194   196 #>  [8947,]  172  186  184  193  189  192  196  193  195   197 #>  [8948,]  172  186  184  193  189  192  196  193  195   198 #>  [8949,]  172  186  184  193  189  191  195  193  195   197 #>  [8950,]  172  186  184  193  189  192  196  193  195   197 #>  [8951,]  173  187  185  194  190  190  194  192  194   196 #>  [8952,]  172  186  184  193  189  191  195  193  195   198 #>  [8953,]  172  186  184  193  189  192  196  193  195   197 #>  [8954,]  172  186  184  193  189  192  196  193  195   197 #>  [8955,]  172  186  184  193  189  192  196  193  195   197 #>  [8956,]  173  187  185  194  190  190  194  192  194   196 #>  [8957,]  172  186  184  193  189  192  196  193  195   197 #>  [8958,]  172  186  184  193  189  192  196  193  195   198 #>  [8959,]  172  186  184  193  189  192  196  193  195   197 #>  [8960,]  172  186  184  193  189  192  196  193  195   198 #>  [8961,]  173  187  185  194  190  190  194  192  194   196 #>  [8962,]  172  186  184  193  189  192  196  193  195   198 #>  [8963,]  172  186  184  193  189  192  196  193  195   197 #>  [8964,]  173  187  185  194  190  190  194  192  194   196 #>  [8965,]  172  186  184  193  189  192  196  193  195   197 #>  [8966,]  173  187  185  194  190  190  194  192  194   196 #>  [8967,]  172  186  184  193  189  192  196  193  195   198 #>  [8968,]  172  186  184  193  189  191  195  193  195   198 #>  [8969,]  172  186  184  193  189  192  196  193  195   198 #>  [8970,]  172  186  184  193  189  192  196  193  195   197 #>  [8971,]  172  186  184  193  189  192  196  193  195   197 #>  [8972,]  172  186  184  193  189  191  195  193  195   197 #>  [8973,]  172  186  184  193  189  192  196  193  195   198 #>  [8974,]  172  186  184  193  189  192  196  193  195   198 #>  [8975,]  172  186  184  193  189  192  196  193  195   198 #>  [8976,]  173  187  185  194  190  190  194  192  194   196 #>  [8977,]  172  186  184  193  189  192  196  193  195   197 #>  [8978,]  172  186  184  193  189  192  196  193  195   197 #>  [8979,]  172  186  184  193  189  192  196  193  195   197 #>  [8980,]  172  186  184  193  189  192  196  193  195   198 #>  [8981,]  172  186  184  193  189  192  196  193  195   197 #>  [8982,]  172  186  184  193  189  192  196  193  195   198 #>  [8983,]  172  186  184  193  189  192  196  193  195   197 #>  [8984,]  172  186  184  193  189  192  196  193  195   197 #>  [8985,]  172  186  184  193  189  192  196  193  195   198 #>  [8986,]  172  186  184  193  189  192  196  193  195   197 #>  [8987,]  172  186  184  193  189  192  196  193  195   197 #>  [8988,]  172  186  184  193  189  192  196  193  195   197 #>  [8989,]  172  186  184  193  189  192  196  193  195   197 #>  [8990,]  172  186  184  193  189  192  196  193  195   197 #>  [8991,]  172  186  184  193  189  192  196  193  195   197 #>  [8992,]  172  186  184  193  189  192  196  193  195   198 #>  [8993,]  172  186  184  193  189  192  196  193  195   198 #>  [8994,]  173  187  185  194  190  190  194  192  194   196 #>  [8995,]  172  186  184  193  189  192  196  193  195   197 #>  [8996,]  172  186  184  193  189  191  195  193  195   198 #>  [8997,]  172  186  184  193  189  191  195  193  195   198 #>  [8998,]  172  186  184  193  189  192  196  193  195   197 #>  [8999,]  172  186  184  193  189  192  196  193  195   198 #>  [9000,]  172  186  184  193  189  192  196  193  195   197 #>  [9001,]  174  188  186  195  191  193  197  196  197   199 #>  [9002,]  174  188  186  195  191  193  197  195  197   199 #>  [9003,]  174  188  186  195  191  193  197  195  197   199 #>  [9004,]  175  189  187  196  192  194  198  194  196   199 #>  [9005,]  174  188  186  195  191  193  197  195  197   199 #>  [9006,]  174  188  186  195  191  193  197  196  197   199 #>  [9007,]  174  188  186  195  191  193  197  195  197   199 #>  [9008,]  174  188  186  195  191  193  197  195  197   199 #>  [9009,]  174  188  186  195  191  193  197  195  197   199 #>  [9010,]  174  188  186  195  191  193  197  195  197   199 #>  [9011,]  174  188  186  195  191  193  197  195  197   199 #>  [9012,]  174  188  186  195  191  193  197  195  197   199 #>  [9013,]  174  188  186  195  191  193  197  196  197   199 #>  [9014,]  175  189  187  196  192  194  198  194  196   199 #>  [9015,]  174  188  186  195  191  193  197  196  197   199 #>  [9016,]  174  188  186  195  191  193  197  196  197   199 #>  [9017,]  174  188  186  195  191  193  197  196  197   199 #>  [9018,]  174  188  186  195  191  193  197  195  197   199 #>  [9019,]  174  188  186  195  191  193  197  195  197   199 #>  [9020,]  174  188  186  195  191  193  197  195  197   199 #>  [9021,]  174  188  186  195  191  193  197  196  197   199 #>  [9022,]  174  188  186  195  191  193  197  195  197   199 #>  [9023,]  174  188  186  195  191  193  197  195  197   199 #>  [9024,]  174  188  186  195  191  193  197  195  197   199 #>  [9025,]  174  188  186  195  191  193  197  195  197   199 #>  [9026,]  174  188  186  195  191  193  197  195  197   199 #>  [9027,]  175  189  187  196  192  194  198  194  196   199 #>  [9028,]  174  188  186  195  191  193  197  195  197   199 #>  [9029,]  174  188  186  195  191  193  197  196  197   199 #>  [9030,]  174  188  186  195  191  193  197  195  197   199 #>  [9031,]  174  188  186  195  191  193  197  195  197   199 #>  [9032,]  174  188  186  195  191  193  197  195  197   199 #>  [9033,]  174  188  186  195  191  193  197  196  197   199 #>  [9034,]  174  188  186  195  191  193  197  195  197   199 #>  [9035,]  174  188  186  195  191  193  197  195  197   199 #>  [9036,]  174  188  186  195  191  193  197  195  197   199 #>  [9037,]  174  188  186  195  191  193  197  195  197   199 #>  [9038,]  174  188  186  195  191  193  197  195  197   199 #>  [9039,]  174  188  186  195  191  193  197  195  197   199 #>  [9040,]  174  188  186  195  191  193  197  195  197   199 #>  [9041,]  174  188  186  195  191  193  197  196  197   199 #>  [9042,]  174  188  186  195  191  193  197  195  197   199 #>  [9043,]  174  188  186  195  191  193  197  195  197   199 #>  [9044,]  174  188  186  195  191  193  197  196  197   199 #>  [9045,]  174  188  186  195  191  193  197  195  197   199 #>  [9046,]  174  188  186  195  191  193  197  195  197   199 #>  [9047,]  174  188  186  195  191  193  197  195  197   199 #>  [9048,]  174  188  186  195  191  193  197  195  197   199 #>  [9049,]  174  188  186  195  191  193  197  195  197   199 #>  [9050,]  174  188  186  195  191  193  197  196  197   199 #>  [9051,]  174  188  186  195  191  193  197  195  197   199 #>  [9052,]  174  188  186  195  191  193  197  195  197   199 #>  [9053,]  174  188  186  195  191  193  197  195  197   199 #>  [9054,]  174  188  186  195  191  193  197  195  197   199 #>  [9055,]  174  188  186  195  191  193  197  195  197   199 #>  [9056,]  174  188  186  195  191  193  197  195  197   199 #>  [9057,]  174  188  186  195  191  193  197  195  197   199 #>  [9058,]  174  188  186  195  191  193  197  195  197   199 #>  [9059,]  174  188  186  195  191  193  197  196  197   199 #>  [9060,]  174  188  186  195  191  193  197  195  197   199 #>  [9061,]  175  189  187  196  192  194  198  194  196   199 #>  [9062,]  174  188  186  195  191  193  197  195  197   199 #>  [9063,]  174  188  186  195  191  193  197  195  197   199 #>  [9064,]  174  188  186  195  191  193  197  195  197   199 #>  [9065,]  174  188  186  195  191  193  197  195  197   199 #>  [9066,]  174  188  186  195  191  193  197  195  197   199 #>  [9067,]  174  188  186  195  191  193  197  195  197   199 #>  [9068,]  174  188  186  195  191  193  197  196  197   199 #>  [9069,]  174  188  186  195  191  193  197  195  197   199 #>  [9070,]  174  188  186  195  191  193  197  196  197   199 #>  [9071,]  174  188  186  195  191  193  197  195  197   199 #>  [9072,]  174  188  186  195  191  193  197  195  197   199 #>  [9073,]  174  188  186  195  191  193  197  196  197   199 #>  [9074,]  174  188  186  195  191  193  197  195  197   199 #>  [9075,]  174  188  186  195  191  193  197  195  197   199 #>  [9076,]  174  188  186  195  191  193  197  196  197   199 #>  [9077,]  174  188  186  195  191  193  197  195  197   199 #>  [9078,]  174  188  186  195  191  193  197  195  197   199 #>  [9079,]  174  188  186  195  191  193  197  195  197   199 #>  [9080,]  174  188  186  195  191  193  197  195  197   199 #>  [9081,]  174  188  186  195  191  193  197  196  197   199 #>  [9082,]  175  189  187  196  192  194  198  194  196   199 #>  [9083,]  174  188  186  195  191  193  197  196  197   199 #>  [9084,]  174  188  186  195  191  193  197  195  197   199 #>  [9085,]  174  188  186  195  191  193  197  195  197   199 #>  [9086,]  174  188  186  195  191  193  197  196  197   199 #>  [9087,]  174  188  186  195  191  193  197  195  197   199 #>  [9088,]  174  188  186  195  191  193  197  195  197   199 #>  [9089,]  174  188  186  195  191  193  197  195  197   199 #>  [9090,]  174  188  186  195  191  193  197  195  197   199 #>  [9091,]  174  188  186  195  191  193  197  195  197   199 #>  [9092,]  175  189  187  196  192  194  198  194  196   199 #>  [9093,]  175  189  187  196  192  194  198  194  196   199 #>  [9094,]  174  188  186  195  191  193  197  195  197   199 #>  [9095,]  174  188  186  195  191  193  197  195  197   199 #>  [9096,]  175  189  187  196  192  194  198  194  196   199 #>  [9097,]  175  189  187  196  192  194  198  194  196   199 #>  [9098,]  174  188  186  195  191  193  197  195  197   199 #>  [9099,]  174  188  186  195  191  193  197  196  197   199 #>  [9100,]  174  188  186  195  191  193  197  195  197   199 #>  [9101,]  177  191  189  198  194  195  200  197  198   200 #>  [9102,]  177  191  189  198  194  195  200  197  198   200 #>  [9103,]  176  190  188  197  193  195  200  197  198   200 #>  [9104,]  177  191  189  198  194  195  200  197  198   200 #>  [9105,]  176  190  188  197  193  195  200  197  198   200 #>  [9106,]  176  190  188  197  193  195  200  197  198   200 #>  [9107,]  177  191  189  198  194  195  199  199  199   201 #>  [9108,]  177  191  189  198  194  195  200  197  198   200 #>  [9109,]  177  191  189  198  194  195  200  197  198   200 #>  [9110,]  177  191  189  198  194  195  200  197  198   200 #>  [9111,]  176  190  188  197  193  195  200  197  198   200 #>  [9112,]  176  190  188  197  193  195  200  197  198   200 #>  [9113,]  177  191  189  198  194  195  200  197  198   200 #>  [9114,]  176  190  188  197  193  195  200  197  198   200 #>  [9115,]  177  191  189  198  194  195  200  197  198   200 #>  [9116,]  177  191  189  198  194  195  200  197  198   200 #>  [9117,]  177  191  189  198  194  195  200  197  198   200 #>  [9118,]  177  191  189  198  194  195  200  197  198   200 #>  [9119,]  176  190  188  197  193  195  200  197  198   200 #>  [9120,]  176  190  188  197  193  195  200  197  198   200 #>  [9121,]  177  191  189  198  194  195  199  199  199   201 #>  [9122,]  176  190  188  197  193  195  200  197  198   200 #>  [9123,]  177  191  189  198  194  195  199  199  199   201 #>  [9124,]  176  190  188  197  193  195  200  197  198   200 #>  [9125,]  177  191  189  198  194  195  200  197  198   200 #>  [9126,]  176  190  188  197  193  195  200  197  198   200 #>  [9127,]  177  191  189  198  194  195  200  197  198   200 #>  [9128,]  177  191  189  198  194  195  200  197  198   200 #>  [9129,]  176  190  188  197  193  195  200  197  198   200 #>  [9130,]  176  190  188  197  193  195  199  198  199   201 #>  [9131,]  177  191  189  198  194  195  200  197  198   200 #>  [9132,]  176  190  188  197  193  195  200  197  198   200 #>  [9133,]  176  190  188  197  193  195  200  197  198   200 #>  [9134,]  176  190  188  197  193  195  200  197  198   200 #>  [9135,]  176  190  188  197  193  195  200  197  198   200 #>  [9136,]  176  190  188  197  193  195  200  197  198   200 #>  [9137,]  177  191  189  198  194  195  200  197  198   200 #>  [9138,]  177  191  189  198  194  195  200  197  198   200 #>  [9139,]  177  191  189  198  194  195  199  199  199   201 #>  [9140,]  176  190  188  197  193  195  200  197  198   200 #>  [9141,]  176  190  188  197  193  195  200  197  198   200 #>  [9142,]  176  190  188  197  193  195  200  197  198   200 #>  [9143,]  177  191  189  198  194  195  200  197  198   200 #>  [9144,]  177  191  189  198  194  195  200  197  198   200 #>  [9145,]  177  191  189  198  194  195  200  197  198   200 #>  [9146,]  177  191  189  198  194  195  200  197  198   200 #>  [9147,]  177  191  189  198  194  195  200  197  198   200 #>  [9148,]  176  190  188  197  193  195  200  197  198   200 #>  [9149,]  177  191  189  198  194  195  199  198  199   201 #>  [9150,]  177  191  189  198  194  195  200  197  198   200 #>  [9151,]  176  190  188  197  193  195  200  197  198   200 #>  [9152,]  176  190  188  197  193  195  200  197  198   200 #>  [9153,]  177  191  189  198  194  195  200  197  198   200 #>  [9154,]  176  190  188  197  193  195  199  198  199   201 #>  [9155,]  176  190  188  197  193  195  200  197  198   200 #>  [9156,]  177  191  189  198  194  195  200  197  198   200 #>  [9157,]  176  190  188  197  193  195  200  197  198   200 #>  [9158,]  176  190  188  197  193  195  200  197  198   200 #>  [9159,]  177  191  189  198  194  195  200  197  198   200 #>  [9160,]  176  190  188  197  193  195  200  197  198   200 #>  [9161,]  177  191  189  198  194  195  200  197  198   200 #>  [9162,]  176  190  188  197  193  195  199  198  199   201 #>  [9163,]  176  190  188  197  193  195  200  197  198   200 #>  [9164,]  177  191  189  198  194  195  200  197  198   200 #>  [9165,]  177  191  189  198  194  195  200  197  198   200 #>  [9166,]  176  190  188  197  193  195  200  197  198   200 #>  [9167,]  176  190  188  197  193  195  200  197  198   200 #>  [9168,]  176  190  188  197  193  195  200  197  198   200 #>  [9169,]  176  190  188  197  193  195  200  197  198   200 #>  [9170,]  177  191  189  198  194  195  199  199  199   201 #>  [9171,]  177  191  189  198  194  195  200  197  198   200 #>  [9172,]  177  191  189  198  194  195  200  197  198   200 #>  [9173,]  177  191  189  198  194  195  200  197  198   200 #>  [9174,]  177  191  189  198  194  195  200  197  198   200 #>  [9175,]  177  191  189  198  194  195  200  197  198   200 #>  [9176,]  177  191  189  198  194  195  200  197  198   200 #>  [9177,]  177  191  189  198  194  195  200  197  198   200 #>  [9178,]  176  190  188  197  193  195  200  197  198   200 #>  [9179,]  177  191  189  198  194  195  200  197  198   200 #>  [9180,]  176  190  188  197  193  195  199  198  199   201 #>  [9181,]  176  190  188  197  193  195  200  197  198   200 #>  [9182,]  177  191  189  198  194  195  200  197  198   200 #>  [9183,]  176  190  188  197  193  195  199  198  199   201 #>  [9184,]  177  191  189  198  194  195  200  197  198   200 #>  [9185,]  177  191  189  198  194  195  200  197  198   200 #>  [9186,]  177  191  189  198  194  195  200  197  198   200 #>  [9187,]  177  191  189  198  194  195  200  197  198   200 #>  [9188,]  177  191  189  198  194  195  200  197  198   200 #>  [9189,]  176  190  188  197  193  195  200  197  198   200 #>  [9190,]  177  191  189  198  194  195  200  197  198   200 #>  [9191,]  176  190  188  197  193  195  200  197  198   200 #>  [9192,]  177  191  189  198  194  195  200  197  198   200 #>  [9193,]  176  190  188  197  193  195  200  197  198   200 #>  [9194,]  177  191  189  198  194  195  200  197  198   200 #>  [9195,]  177  191  189  198  194  195  199  199  199   201 #>  [9196,]  177  191  189  198  194  195  200  197  198   200 #>  [9197,]  177  191  189  198  194  195  200  197  198   200 #>  [9198,]  176  190  188  197  193  195  199  198  199   201 #>  [9199,]  176  190  188  197  193  195  200  197  198   200 #>  [9200,]  177  191  189  198  194  195  200  197  198   200 #>  [9201,]  178  192  190  199  195  196  201  200  200   202 #>  [9202,]  178  192  190  199  195  196  201  200  200   202 #>  [9203,]  178  192  190  199  195  196  201  200  200   202 #>  [9204,]  179  193  191  200  196  197  202  201  201   203 #>  [9205,]  178  192  190  199  195  196  201  200  200   202 #>  [9206,]  178  192  190  199  195  196  201  200  200   202 #>  [9207,]  178  192  190  199  195  196  201  200  200   202 #>  [9208,]  178  192  190  199  195  196  201  200  200   202 #>  [9209,]  178  192  190  199  195  196  201  200  200   202 #>  [9210,]  179  193  191  200  196  197  202  201  201   203 #>  [9211,]  178  192  190  199  195  196  201  200  200   202 #>  [9212,]  178  192  190  199  195  196  201  200  200   202 #>  [9213,]  178  192  190  199  195  196  201  200  200   202 #>  [9214,]  178  192  190  199  195  196  201  200  200   202 #>  [9215,]  178  192  190  199  195  196  201  200  200   202 #>  [9216,]  178  192  190  199  195  196  201  200  200   202 #>  [9217,]  178  192  190  199  195  196  201  200  200   202 #>  [9218,]  179  193  191  200  196  197  202  201  201   203 #>  [9219,]  178  192  190  199  195  196  201  200  200   202 #>  [9220,]  178  192  190  199  195  196  201  200  200   202 #>  [9221,]  179  193  191  200  196  197  202  201  201   203 #>  [9222,]  178  192  190  199  195  196  201  200  200   202 #>  [9223,]  178  192  190  199  195  196  201  200  200   202 #>  [9224,]  178  192  190  199  195  196  201  200  200   202 #>  [9225,]  179  193  191  200  196  197  202  201  201   203 #>  [9226,]  178  192  190  199  195  196  201  200  200   202 #>  [9227,]  178  192  190  199  195  196  201  200  200   202 #>  [9228,]  178  192  190  199  195  196  201  200  200   202 #>  [9229,]  178  192  190  199  195  196  201  200  200   202 #>  [9230,]  178  192  190  199  195  196  201  200  200   202 #>  [9231,]  178  192  190  199  195  196  201  200  200   202 #>  [9232,]  178  192  190  199  195  196  201  200  200   202 #>  [9233,]  178  192  190  199  195  196  201  200  200   202 #>  [9234,]  178  192  190  199  195  196  201  200  200   202 #>  [9235,]  178  192  190  199  195  196  201  200  200   202 #>  [9236,]  178  192  190  199  195  196  201  200  200   202 #>  [9237,]  178  192  190  199  195  196  201  200  200   202 #>  [9238,]  178  192  190  199  195  196  201  200  200   202 #>  [9239,]  179  193  191  200  196  197  202  201  201   203 #>  [9240,]  178  192  190  199  195  196  201  200  200   202 #>  [9241,]  178  192  190  199  195  196  201  200  200   202 #>  [9242,]  178  192  190  199  195  196  201  200  200   202 #>  [9243,]  179  193  191  200  196  197  202  201  201   203 #>  [9244,]  178  192  190  199  195  196  201  200  200   202 #>  [9245,]  179  193  191  200  196  197  202  201  201   203 #>  [9246,]  178  192  190  199  195  196  201  200  200   202 #>  [9247,]  178  192  190  199  195  196  201  200  200   202 #>  [9248,]  178  192  190  199  195  196  201  200  200   202 #>  [9249,]  178  192  190  199  195  196  201  200  200   202 #>  [9250,]  178  192  190  199  195  196  201  200  200   202 #>  [9251,]  178  192  190  199  195  196  201  200  200   202 #>  [9252,]  178  192  190  199  195  196  201  200  200   202 #>  [9253,]  179  193  191  200  196  197  202  201  201   203 #>  [9254,]  178  192  190  199  195  196  201  200  200   202 #>  [9255,]  178  192  190  199  195  196  201  200  200   202 #>  [9256,]  178  192  190  199  195  196  201  200  200   202 #>  [9257,]  178  192  190  199  195  196  201  200  200   202 #>  [9258,]  178  192  190  199  195  196  201  200  200   202 #>  [9259,]  178  192  190  199  195  196  201  200  200   202 #>  [9260,]  178  192  190  199  195  196  201  200  200   202 #>  [9261,]  179  193  191  200  196  197  202  201  201   203 #>  [9262,]  178  192  190  199  195  196  201  200  200   202 #>  [9263,]  178  192  190  199  195  196  201  200  200   202 #>  [9264,]  178  192  190  199  195  196  201  200  200   202 #>  [9265,]  178  192  190  199  195  196  201  200  200   202 #>  [9266,]  178  192  190  199  195  196  201  200  200   202 #>  [9267,]  178  192  190  199  195  196  201  200  200   202 #>  [9268,]  178  192  190  199  195  196  201  200  200   202 #>  [9269,]  178  192  190  199  195  196  201  200  200   202 #>  [9270,]  178  192  190  199  195  196  201  200  200   202 #>  [9271,]  178  192  190  199  195  196  201  200  200   202 #>  [9272,]  179  193  191  200  196  197  202  201  201   203 #>  [9273,]  179  193  191  200  196  197  202  201  201   203 #>  [9274,]  179  193  191  200  196  197  202  201  201   203 #>  [9275,]  179  193  191  200  196  197  202  201  201   203 #>  [9276,]  179  193  191  200  196  197  202  201  201   203 #>  [9277,]  179  193  191  200  196  197  202  201  201   203 #>  [9278,]  178  192  190  199  195  196  201  200  200   202 #>  [9279,]  178  192  190  199  195  196  201  200  200   202 #>  [9280,]  178  192  190  199  195  196  201  200  200   202 #>  [9281,]  178  192  190  199  195  196  201  200  200   202 #>  [9282,]  178  192  190  199  195  196  201  200  200   202 #>  [9283,]  178  192  190  199  195  196  201  200  200   202 #>  [9284,]  179  193  191  200  196  197  202  201  201   203 #>  [9285,]  178  192  190  199  195  196  201  200  200   202 #>  [9286,]  178  192  190  199  195  196  201  200  200   202 #>  [9287,]  178  192  190  199  195  196  201  200  200   202 #>  [9288,]  178  192  190  199  195  196  201  200  200   202 #>  [9289,]  178  192  190  199  195  196  201  200  200   202 #>  [9290,]  178  192  190  199  195  196  201  200  200   202 #>  [9291,]  178  192  190  199  195  196  201  200  200   202 #>  [9292,]  178  192  190  199  195  196  201  200  200   202 #>  [9293,]  178  192  190  199  195  196  201  200  200   202 #>  [9294,]  179  193  191  200  196  197  202  201  201   203 #>  [9295,]  179  193  191  200  196  197  202  201  201   203 #>  [9296,]  178  192  190  199  195  196  201  200  200   202 #>  [9297,]  178  192  190  199  195  196  201  200  200   202 #>  [9298,]  178  192  190  199  195  196  201  200  200   202 #>  [9299,]  178  192  190  199  195  196  201  200  200   202 #>  [9300,]  179  193  191  200  196  197  202  201  201   203 #>  [9301,]  180  194  192  201  197  198  204  203  203   205 #>  [9302,]  180  194  192  201  197  198  204  203  203   205 #>  [9303,]  181  195  193  202  198  198  203  202  202   204 #>  [9304,]  180  194  192  201  197  198  204  203  203   205 #>  [9305,]  180  194  192  201  197  198  204  203  203   205 #>  [9306,]  181  195  193  202  198  198  204  203  203   205 #>  [9307,]  180  194  192  201  197  198  203  202  202   204 #>  [9308,]  180  194  192  201  197  198  204  203  203   205 #>  [9309,]  180  194  192  201  197  198  204  203  203   205 #>  [9310,]  180  194  192  201  197  198  204  203  203   205 #>  [9311,]  180  194  192  201  197  198  204  203  203   205 #>  [9312,]  181  195  193  202  198  198  204  203  203   205 #>  [9313,]  180  194  192  201  197  198  203  202  202   204 #>  [9314,]  180  194  192  201  197  198  204  203  203   205 #>  [9315,]  180  194  192  201  197  198  204  203  203   205 #>  [9316,]  180  194  192  201  197  198  204  203  203   205 #>  [9317,]  180  194  192  201  197  198  204  203  203   205 #>  [9318,]  180  194  192  201  197  198  204  203  203   205 #>  [9319,]  181  195  193  202  198  198  204  203  203   205 #>  [9320,]  181  195  193  202  198  198  204  203  203   205 #>  [9321,]  180  194  192  201  197  198  203  202  202   204 #>  [9322,]  180  194  192  201  197  198  204  203  203   205 #>  [9323,]  180  194  192  201  197  198  203  202  202   204 #>  [9324,]  180  194  192  201  197  198  204  203  203   205 #>  [9325,]  181  195  193  202  198  198  204  203  203   205 #>  [9326,]  180  194  192  201  197  198  204  203  203   205 #>  [9327,]  180  194  192  201  197  198  204  203  203   205 #>  [9328,]  181  195  193  202  198  198  204  203  203   205 #>  [9329,]  180  194  192  201  197  198  204  203  203   205 #>  [9330,]  180  194  192  201  197  198  203  202  202   204 #>  [9331,]  180  194  192  201  197  198  203  202  202   204 #>  [9332,]  180  194  192  201  197  198  204  203  203   205 #>  [9333,]  181  195  193  202  198  198  204  203  203   205 #>  [9334,]  181  195  193  202  198  198  204  203  203   205 #>  [9335,]  180  194  192  201  197  198  204  203  203   205 #>  [9336,]  180  194  192  201  197  198  204  203  203   205 #>  [9337,]  180  194  192  201  197  198  204  203  203   205 #>  [9338,]  180  194  192  201  197  198  204  203  203   205 #>  [9339,]  180  194  192  201  197  198  203  202  202   204 #>  [9340,]  180  194  192  201  197  198  204  203  203   205 #>  [9341,]  180  194  192  201  197  198  204  203  203   205 #>  [9342,]  180  194  192  201  197  198  204  203  203   205 #>  [9343,]  180  194  192  201  197  198  204  203  203   205 #>  [9344,]  180  194  192  201  197  198  204  203  203   205 #>  [9345,]  180  194  192  201  197  198  204  203  203   205 #>  [9346,]  180  194  192  201  197  198  204  203  203   205 #>  [9347,]  180  194  192  201  197  198  203  202  202   204 #>  [9348,]  180  194  192  201  197  198  204  203  203   205 #>  [9349,]  180  194  192  201  197  198  203  202  202   204 #>  [9350,]  180  194  192  201  197  198  204  203  203   205 #>  [9351,]  180  194  192  201  197  198  204  203  203   205 #>  [9352,]  180  194  192  201  197  198  204  203  203   205 #>  [9353,]  180  194  192  201  197  198  204  203  203   205 #>  [9354,]  180  194  192  201  197  198  203  202  202   204 #>  [9355,]  180  194  192  201  197  198  204  203  203   205 #>  [9356,]  180  194  192  201  197  198  204  203  203   205 #>  [9357,]  180  194  192  201  197  198  204  203  203   205 #>  [9358,]  180  194  192  201  197  198  204  203  203   205 #>  [9359,]  180  194  192  201  197  198  204  203  203   205 #>  [9360,]  181  195  193  202  198  198  204  203  203   205 #>  [9361,]  180  194  192  201  197  198  204  203  203   205 #>  [9362,]  180  194  192  201  197  198  203  202  202   204 #>  [9363,]  180  194  192  201  197  198  204  203  203   205 #>  [9364,]  180  194  192  201  197  198  204  203  203   205 #>  [9365,]  181  195  193  202  198  198  204  203  203   205 #>  [9366,]  180  194  192  201  197  198  204  203  203   205 #>  [9367,]  180  194  192  201  197  198  204  203  203   205 #>  [9368,]  180  194  192  201  197  198  204  203  203   205 #>  [9369,]  180  194  192  201  197  198  204  203  203   205 #>  [9370,]  181  195  193  202  198  198  203  202  202   204 #>  [9371,]  180  194  192  201  197  198  204  203  203   205 #>  [9372,]  180  194  192  201  197  198  204  203  203   205 #>  [9373,]  181  195  193  202  198  198  204  203  203   205 #>  [9374,]  180  194  192  201  197  198  204  203  203   205 #>  [9375,]  180  194  192  201  197  198  204  203  203   205 #>  [9376,]  180  194  192  201  197  198  204  203  203   205 #>  [9377,]  180  194  192  201  197  198  203  202  202   204 #>  [9378,]  180  194  192  201  197  198  204  203  203   205 #>  [9379,]  180  194  192  201  197  198  203  202  202   204 #>  [9380,]  180  194  192  201  197  198  203  202  202   204 #>  [9381,]  180  194  192  201  197  198  204  203  203   205 #>  [9382,]  180  194  192  201  197  198  204  203  203   205 #>  [9383,]  180  194  192  201  197  198  203  202  202   204 #>  [9384,]  181  195  193  202  198  198  204  203  203   205 #>  [9385,]  180  194  192  201  197  198  204  203  203   205 #>  [9386,]  180  194  192  201  197  198  204  203  203   205 #>  [9387,]  180  194  192  201  197  198  204  203  203   205 #>  [9388,]  180  194  192  201  197  198  204  203  203   205 #>  [9389,]  180  194  192  201  197  198  204  203  203   205 #>  [9390,]  180  194  192  201  197  198  204  203  203   205 #>  [9391,]  180  194  192  201  197  198  204  203  203   205 #>  [9392,]  180  194  192  201  197  198  204  203  203   205 #>  [9393,]  181  195  193  202  198  198  204  203  203   205 #>  [9394,]  180  194  192  201  197  198  204  203  203   205 #>  [9395,]  180  194  192  201  197  198  203  202  202   204 #>  [9396,]  180  194  192  201  197  198  204  203  203   205 #>  [9397,]  181  195  193  202  198  198  204  203  203   205 #>  [9398,]  181  195  193  202  198  198  203  202  202   204 #>  [9399,]  180  194  192  201  197  198  204  203  203   205 #>  [9400,]  180  194  192  201  197  198  204  203  203   205 #>  [9401,]  183  197  195  204  199  199  205  206  206   206 #>  [9402,]  183  197  196  205  200  200  206  206  206   206 #>  [9403,]  182  196  194  203  201  201  207  204  204   207 #>  [9404,]  182  196  194  203  202  202  208  205  205   207 #>  [9405,]  183  197  195  204  199  199  205  206  206   206 #>  [9406,]  183  197  195  204  199  199  205  206  206   206 #>  [9407,]  182  196  194  203  202  202  208  205  205   207 #>  [9408,]  182  196  194  203  202  202  208  205  205   207 #>  [9409,]  183  197  196  205  200  200  206  206  206   206 #>  [9410,]  183  197  196  205  200  200  206  206  206   206 #>  [9411,]  183  197  195  204  199  199  205  206  206   206 #>  [9412,]  182  196  194  203  202  202  208  205  205   207 #>  [9413,]  183  197  195  204  199  199  205  206  206   206 #>  [9414,]  183  197  195  204  199  199  205  206  206   206 #>  [9415,]  183  197  195  204  199  199  205  206  206   206 #>  [9416,]  183  197  195  204  199  199  205  206  206   206 #>  [9417,]  183  197  195  204  199  199  205  206  206   206 #>  [9418,]  183  197  195  204  199  199  205  206  206   206 #>  [9419,]  183  197  195  204  199  199  205  206  206   206 #>  [9420,]  183  197  195  204  199  199  205  206  206   206 #>  [9421,]  183  197  196  205  200  200  206  206  206   206 #>  [9422,]  183  197  195  204  199  199  205  206  206   206 #>  [9423,]  182  196  194  203  202  202  208  205  205   207 #>  [9424,]  183  197  195  204  199  199  205  206  206   206 #>  [9425,]  182  196  194  203  202  202  208  205  205   207 #>  [9426,]  183  197  195  204  199  199  205  206  206   206 #>  [9427,]  183  197  195  204  199  199  205  206  206   206 #>  [9428,]  183  197  195  204  199  199  205  206  206   206 #>  [9429,]  183  197  196  205  200  200  206  206  206   206 #>  [9430,]  183  197  195  204  199  199  205  206  206   206 #>  [9431,]  182  196  194  203  202  202  208  205  205   207 #>  [9432,]  183  197  195  204  199  199  205  206  206   206 #>  [9433,]  183  197  196  205  200  200  206  206  206   206 #>  [9434,]  183  197  195  204  199  199  205  206  206   206 #>  [9435,]  183  197  195  204  199  199  205  206  206   206 #>  [9436,]  183  197  195  204  199  199  205  206  206   206 #>  [9437,]  182  196  194  203  201  201  207  204  204   207 #>  [9438,]  183  197  195  204  199  199  205  206  206   206 #>  [9439,]  183  197  195  204  199  199  205  206  206   206 #>  [9440,]  182  196  194  203  202  202  208  205  205   207 #>  [9441,]  183  197  195  204  199  199  205  206  206   206 #>  [9442,]  183  197  195  204  199  199  205  206  206   206 #>  [9443,]  183  197  195  204  199  199  205  206  206   206 #>  [9444,]  183  197  195  204  199  199  205  206  206   206 #>  [9445,]  183  197  195  204  199  199  205  206  206   206 #>  [9446,]  182  196  194  203  202  202  208  205  205   207 #>  [9447,]  182  196  194  203  202  202  208  205  205   207 #>  [9448,]  183  197  195  204  199  199  205  206  206   206 #>  [9449,]  183  197  195  204  199  199  205  206  206   206 #>  [9450,]  183  197  195  204  199  199  205  206  206   206 #>  [9451,]  183  197  195  204  199  199  205  206  206   206 #>  [9452,]  182  196  194  203  201  201  207  204  204   207 #>  [9453,]  183  197  195  204  199  199  205  206  206   206 #>  [9454,]  183  197  195  204  199  199  205  206  206   206 #>  [9455,]  182  196  194  203  202  202  208  205  205   207 #>  [9456,]  183  197  195  204  199  199  205  206  206   206 #>  [9457,]  182  196  194  203  202  202  208  205  205   207 #>  [9458,]  183  197  195  204  199  199  205  206  206   206 #>  [9459,]  182  196  194  203  201  201  207  204  204   207 #>  [9460,]  182  196  194  203  202  202  208  205  205   207 #>  [9461,]  183  197  195  204  199  199  205  206  206   206 #>  [9462,]  183  197  195  204  199  199  205  206  206   206 #>  [9463,]  183  197  195  204  199  199  205  206  206   206 #>  [9464,]  183  197  195  204  199  199  205  206  206   206 #>  [9465,]  183  197  195  204  199  199  205  206  206   206 #>  [9466,]  183  197  195  204  199  199  205  206  206   206 #>  [9467,]  183  197  195  204  199  199  205  206  206   206 #>  [9468,]  182  196  194  203  201  201  207  204  204   207 #>  [9469,]  183  197  195  204  199  199  205  206  206   206 #>  [9470,]  183  197  196  205  200  200  206  206  206   206 #>  [9471,]  183  197  195  204  199  199  205  206  206   206 #>  [9472,]  183  197  195  204  199  199  205  206  206   206 #>  [9473,]  183  197  195  204  199  199  205  206  206   206 #>  [9474,]  182  196  194  203  202  202  208  205  205   207 #>  [9475,]  183  197  195  204  199  199  205  206  206   206 #>  [9476,]  183  197  195  204  199  199  205  206  206   206 #>  [9477,]  183  197  195  204  199  199  205  206  206   206 #>  [9478,]  183  197  195  204  199  199  205  206  206   206 #>  [9479,]  183  197  195  204  199  199  205  206  206   206 #>  [9480,]  182  196  194  203  202  202  208  205  205   207 #>  [9481,]  183  197  196  205  200  200  206  206  206   206 #>  [9482,]  183  197  195  204  199  199  205  206  206   206 #>  [9483,]  183  197  195  204  199  199  205  206  206   206 #>  [9484,]  183  197  195  204  199  199  205  206  206   206 #>  [9485,]  183  197  195  204  199  199  205  206  206   206 #>  [9486,]  182  196  194  203  202  202  208  205  205   207 #>  [9487,]  183  197  195  204  199  199  205  206  206   206 #>  [9488,]  183  197  195  204  199  199  205  206  206   206 #>  [9489,]  183  197  195  204  199  199  205  206  206   206 #>  [9490,]  183  197  195  204  199  199  205  206  206   206 #>  [9491,]  183  197  195  204  199  199  205  206  206   206 #>  [9492,]  182  196  194  203  202  202  208  205  205   207 #>  [9493,]  183  197  195  204  199  199  205  206  206   206 #>  [9494,]  183  197  195  204  199  199  205  206  206   206 #>  [9495,]  183  197  195  204  199  199  205  206  206   206 #>  [9496,]  182  196  194  203  201  201  207  204  204   207 #>  [9497,]  182  196  194  203  201  201  207  204  204   207 #>  [9498,]  182  196  194  203  202  202  208  205  205   207 #>  [9499,]  183  197  195  204  199  199  205  206  206   206 #>  [9500,]  183  197  195  204  199  199  205  206  206   206 #>  [9501,]  184  200  199  208  205  205  211  209  209   210 #>  [9502,]  185  198  197  206  203  203  209  207  207   208 #>  [9503,]  185  198  197  206  203  203  209  207  207   208 #>  [9504,]  184  200  199  208  205  205  211  209  209   210 #>  [9505,]  184  200  199  208  205  205  211  209  209   210 #>  [9506,]  185  198  197  206  203  203  209  207  207   208 #>  [9507,]  184  199  198  207  204  204  210  208  208   209 #>  [9508,]  184  200  199  208  205  205  211  209  209   210 #>  [9509,]  184  200  199  208  205  205  211  209  209   210 #>  [9510,]  184  200  199  208  205  205  211  209  209   210 #>  [9511,]  184  200  199  208  205  205  211  209  209   210 #>  [9512,]  185  198  197  206  203  203  209  207  207   208 #>  [9513,]  184  199  198  207  204  204  210  208  208   209 #>  [9514,]  184  200  199  208  205  205  211  209  209   210 #>  [9515,]  184  200  199  208  205  205  211  209  209   210 #>  [9516,]  184  199  198  207  204  204  210  208  208   209 #>  [9517,]  184  200  199  208  205  205  211  209  209   210 #>  [9518,]  185  198  197  206  203  203  209  207  207   208 #>  [9519,]  185  198  197  206  203  203  209  207  207   208 #>  [9520,]  185  198  197  206  203  203  209  207  207   208 #>  [9521,]  184  199  198  207  204  204  210  208  208   209 #>  [9522,]  184  199  198  207  204  204  210  208  208   209 #>  [9523,]  184  199  198  207  204  204  210  208  208   209 #>  [9524,]  184  199  198  207  204  204  210  208  208   209 #>  [9525,]  185  198  197  206  203  203  209  207  207   208 #>  [9526,]  184  200  199  208  205  205  211  209  209   210 #>  [9527,]  184  200  199  208  205  205  211  209  209   210 #>  [9528,]  185  198  197  206  203  203  209  207  207   208 #>  [9529,]  184  199  198  207  204  204  210  208  208   209 #>  [9530,]  184  199  198  207  204  204  210  208  208   209 #>  [9531,]  185  198  197  206  203  203  209  207  207   208 #>  [9532,]  184  199  198  207  204  204  210  208  208   209 #>  [9533,]  185  198  197  206  203  203  209  207  207   208 #>  [9534,]  185  198  197  206  203  203  209  207  207   208 #>  [9535,]  184  199  198  207  204  204  210  208  208   209 #>  [9536,]  184  199  198  207  204  204  210  208  208   209 #>  [9537,]  184  199  198  207  204  204  210  208  208   209 #>  [9538,]  184  200  199  208  205  205  211  209  209   210 #>  [9539,]  184  199  198  207  204  204  210  208  208   209 #>  [9540,]  184  199  198  207  204  204  210  208  208   209 #>  [9541,]  184  200  199  208  205  205  211  209  209   210 #>  [9542,]  184  200  199  208  205  205  211  209  209   210 #>  [9543,]  184  200  199  208  205  205  211  209  209   210 #>  [9544,]  184  199  198  207  204  204  210  208  208   209 #>  [9545,]  184  200  199  208  205  205  211  209  209   210 #>  [9546,]  184  200  199  208  205  205  211  209  209   210 #>  [9547,]  184  199  198  207  204  204  210  208  208   209 #>  [9548,]  184  199  198  207  204  204  210  208  208   209 #>  [9549,]  184  199  198  207  204  204  210  208  208   209 #>  [9550,]  184  200  199  208  205  205  211  209  209   210 #>  [9551,]  184  200  199  208  205  205  211  209  209   210 #>  [9552,]  184  200  199  208  205  205  211  209  209   210 #>  [9553,]  184  200  199  208  205  205  211  209  209   210 #>  [9554,]  184  199  198  207  204  204  210  208  208   209 #>  [9555,]  184  200  199  208  205  205  211  209  209   210 #>  [9556,]  184  200  199  208  205  205  211  209  209   210 #>  [9557,]  184  200  199  208  205  205  211  209  209   210 #>  [9558,]  184  200  199  208  205  205  211  209  209   210 #>  [9559,]  184  199  198  207  204  204  210  208  208   209 #>  [9560,]  185  198  197  206  203  203  209  207  207   208 #>  [9561,]  184  200  199  208  205  205  211  209  209   210 #>  [9562,]  184  199  198  207  204  204  210  208  208   209 #>  [9563,]  184  200  199  208  205  205  211  209  209   210 #>  [9564,]  184  200  199  208  205  205  211  209  209   210 #>  [9565,]  185  198  197  206  203  203  209  207  207   208 #>  [9566,]  184  200  199  208  205  205  211  209  209   210 #>  [9567,]  184  200  199  208  205  205  211  209  209   210 #>  [9568,]  184  200  199  208  205  205  211  209  209   210 #>  [9569,]  184  200  199  208  205  205  211  209  209   210 #>  [9570,]  185  198  197  206  203  203  209  207  207   208 #>  [9571,]  185  198  197  206  203  203  209  207  207   208 #>  [9572,]  184  200  199  208  205  205  211  209  209   210 #>  [9573,]  185  198  197  206  203  203  209  207  207   208 #>  [9574,]  184  200  199  208  205  205  211  209  209   210 #>  [9575,]  184  200  199  208  205  205  211  209  209   210 #>  [9576,]  184  200  199  208  205  205  211  209  209   210 #>  [9577,]  184  199  198  207  204  204  210  208  208   209 #>  [9578,]  184  200  199  208  205  205  211  209  209   210 #>  [9579,]  184  199  198  207  204  204  210  208  208   209 #>  [9580,]  184  199  198  207  204  204  210  208  208   209 #>  [9581,]  184  200  199  208  205  205  211  209  209   210 #>  [9582,]  184  200  199  208  205  205  211  209  209   210 #>  [9583,]  184  199  198  207  204  204  210  208  208   209 #>  [9584,]  185  198  197  206  203  203  209  207  207   208 #>  [9585,]  184  199  198  207  204  204  210  208  208   209 #>  [9586,]  184  199  198  207  204  204  210  208  208   209 #>  [9587,]  184  200  199  208  205  205  211  209  209   210 #>  [9588,]  184  200  199  208  205  205  211  209  209   210 #>  [9589,]  184  200  199  208  205  205  211  209  209   210 #>  [9590,]  184  200  199  208  205  205  211  209  209   210 #>  [9591,]  184  200  199  208  205  205  211  209  209   210 #>  [9592,]  184  200  199  208  205  205  211  209  209   210 #>  [9593,]  185  198  197  206  203  203  209  207  207   208 #>  [9594,]  184  200  199  208  205  205  211  209  209   210 #>  [9595,]  184  199  198  207  204  204  210  208  208   209 #>  [9596,]  184  200  199  208  205  205  211  209  209   210 #>  [9597,]  185  198  197  206  203  203  209  207  207   208 #>  [9598,]  185  198  197  206  203  203  209  207  207   208 #>  [9599,]  184  200  199  208  205  205  211  209  209   210 #>  [9600,]  185  198  197  206  203  203  209  207  207   208 #>  [9601,]  187  202  201  210  207  206  213  211  211   212 #>  [9602,]  187  202  201  210  207  206  213  211  211   212 #>  [9603,]  186  201  200  209  206  206  212  210  210   211 #>  [9604,]  186  201  200  209  206  206  212  210  210   211 #>  [9605,]  186  201  200  209  206  206  212  210  210   211 #>  [9606,]  187  202  201  210  207  206  212  210  210   211 #>  [9607,]  186  201  200  209  206  206  213  211  211   212 #>  [9608,]  186  201  200  209  206  206  213  211  211   212 #>  [9609,]  186  201  200  209  206  206  212  210  210   211 #>  [9610,]  186  201  200  209  206  206  212  210  210   211 #>  [9611,]  187  202  201  210  207  206  212  210  210   211 #>  [9612,]  186  201  200  209  206  206  213  211  211   212 #>  [9613,]  187  202  201  210  207  206  213  211  211   212 #>  [9614,]  187  202  201  210  207  206  212  210  210   211 #>  [9615,]  187  202  201  210  207  206  213  211  211   212 #>  [9616,]  187  202  201  210  207  206  213  211  211   212 #>  [9617,]  187  202  201  210  207  206  213  211  211   212 #>  [9618,]  186  201  200  209  206  206  213  211  211   212 #>  [9619,]  187  202  201  210  207  206  213  211  211   212 #>  [9620,]  186  201  200  209  206  206  213  211  211   212 #>  [9621,]  187  202  201  210  207  206  212  210  210   211 #>  [9622,]  187  202  201  210  207  206  213  211  211   212 #>  [9623,]  186  201  200  209  206  206  213  211  211   212 #>  [9624,]  186  201  200  209  206  206  212  210  210   211 #>  [9625,]  186  201  200  209  206  206  212  210  210   211 #>  [9626,]  187  202  201  210  207  206  213  211  211   212 #>  [9627,]  187  202  201  210  207  206  213  211  211   212 #>  [9628,]  186  201  200  209  206  206  212  210  210   211 #>  [9629,]  187  202  201  210  207  206  213  211  211   212 #>  [9630,]  186  201  200  209  206  206  213  211  211   212 #>  [9631,]  186  201  200  209  206  206  212  210  210   211 #>  [9632,]  186  201  200  209  206  206  212  210  210   211 #>  [9633,]  187  202  201  210  207  206  213  211  211   212 #>  [9634,]  186  201  200  209  206  206  212  210  210   211 #>  [9635,]  187  202  201  210  207  206  212  210  210   211 #>  [9636,]  186  201  200  209  206  206  213  211  211   212 #>  [9637,]  187  202  201  210  207  206  213  211  211   212 #>  [9638,]  186  201  200  209  206  206  213  211  211   212 #>  [9639,]  186  201  200  209  206  206  212  210  210   211 #>  [9640,]  186  201  200  209  206  206  212  210  210   211 #>  [9641,]  187  202  201  210  207  206  213  211  211   212 #>  [9642,]  186  201  200  209  206  206  212  210  210   211 #>  [9643,]  186  201  200  209  206  206  213  211  211   212 #>  [9644,]  187  202  201  210  207  206  213  211  211   212 #>  [9645,]  186  201  200  209  206  206  213  211  211   212 #>  [9646,]  186  201  200  209  206  206  213  211  211   212 #>  [9647,]  187  202  201  210  207  206  212  210  210   211 #>  [9648,]  186  201  200  209  206  206  212  210  210   211 #>  [9649,]  186  201  200  209  206  206  213  211  211   212 #>  [9650,]  187  202  201  210  207  206  213  211  211   212 #>  [9651,]  186  201  200  209  206  206  213  211  211   212 #>  [9652,]  187  202  201  210  207  206  212  210  210   211 #>  [9653,]  186  201  200  209  206  206  213  211  211   212 #>  [9654,]  186  201  200  209  206  206  212  210  210   211 #>  [9655,]  187  202  201  210  207  206  213  211  211   212 #>  [9656,]  186  201  200  209  206  206  213  211  211   212 #>  [9657,]  186  201  200  209  206  206  212  210  210   211 #>  [9658,]  187  202  201  210  207  206  213  211  211   212 #>  [9659,]  187  202  201  210  207  206  213  211  211   212 #>  [9660,]  186  201  200  209  206  206  213  211  211   212 #>  [9661,]  187  202  201  210  207  206  213  211  211   212 #>  [9662,]  186  201  200  209  206  206  212  210  210   211 #>  [9663,]  186  201  200  209  206  206  213  211  211   212 #>  [9664,]  186  201  200  209  206  206  213  211  211   212 #>  [9665,]  186  201  200  209  206  206  212  210  210   211 #>  [9666,]  186  201  200  209  206  206  213  211  211   212 #>  [9667,]  186  201  200  209  206  206  212  210  210   211 #>  [9668,]  187  202  201  210  207  206  213  211  211   212 #>  [9669,]  187  202  201  210  207  206  213  211  211   212 #>  [9670,]  187  202  201  210  207  206  212  210  210   211 #>  [9671,]  187  202  201  210  207  206  213  211  211   212 #>  [9672,]  186  201  200  209  206  206  212  210  210   211 #>  [9673,]  187  202  201  210  207  206  212  210  210   211 #>  [9674,]  186  201  200  209  206  206  212  210  210   211 #>  [9675,]  187  202  201  210  207  206  213  211  211   212 #>  [9676,]  187  202  201  210  207  206  212  210  210   211 #>  [9677,]  187  202  201  210  207  206  213  211  211   212 #>  [9678,]  186  201  200  209  206  206  213  211  211   212 #>  [9679,]  187  202  201  210  207  206  212  210  210   211 #>  [9680,]  186  201  200  209  206  206  213  211  211   212 #>  [9681,]  187  202  201  210  207  206  213  211  211   212 #>  [9682,]  186  201  200  209  206  206  212  210  210   211 #>  [9683,]  187  202  201  210  207  206  213  211  211   212 #>  [9684,]  187  202  201  210  207  206  213  211  211   212 #>  [9685,]  186  201  200  209  206  206  213  211  211   212 #>  [9686,]  187  202  201  210  207  206  212  210  210   211 #>  [9687,]  187  202  201  210  207  206  213  211  211   212 #>  [9688,]  186  201  200  209  206  206  212  210  210   211 #>  [9689,]  186  201  200  209  206  206  212  210  210   211 #>  [9690,]  187  202  201  210  207  206  213  211  211   212 #>  [9691,]  186  201  200  209  206  206  212  210  210   211 #>  [9692,]  187  202  201  210  207  206  212  210  210   211 #>  [9693,]  187  202  201  210  207  206  213  211  211   212 #>  [9694,]  187  202  201  210  207  206  212  210  210   211 #>  [9695,]  186  201  200  209  206  206  213  211  211   212 #>  [9696,]  187  202  201  210  207  206  213  211  211   212 #>  [9697,]  187  202  201  210  207  206  213  211  211   212 #>  [9698,]  187  202  201  210  207  206  212  210  210   211 #>  [9699,]  187  202  201  210  207  206  213  211  211   212 #>  [9700,]  187  202  201  210  207  206  213  211  211   212 #>  [9701,]  188  203  202  211  208  207  214  212  212   213 #>  [9702,]  188  203  202  211  208  207  214  212  212   213 #>  [9703,]  188  203  202  211  208  207  214  212  212   213 #>  [9704,]  189  204  203  212  209  208  215  213  213   214 #>  [9705,]  188  203  202  211  208  207  214  212  212   213 #>  [9706,]  188  203  202  211  208  207  214  212  212   213 #>  [9707,]  188  203  202  211  208  207  214  212  212   213 #>  [9708,]  188  203  202  211  208  207  214  212  212   213 #>  [9709,]  189  204  203  212  209  208  215  213  213   214 #>  [9710,]  188  203  202  211  208  207  214  212  212   213 #>  [9711,]  189  204  203  212  209  208  215  213  213   214 #>  [9712,]  189  204  203  212  209  208  215  213  213   214 #>  [9713,]  188  203  202  211  208  207  214  212  212   213 #>  [9714,]  189  204  203  212  209  208  215  213  213   214 #>  [9715,]  189  204  203  212  209  208  215  213  213   214 #>  [9716,]  188  203  202  211  208  207  214  212  212   213 #>  [9717,]  188  203  202  211  208  207  214  212  212   213 #>  [9718,]  189  204  203  212  209  208  215  213  213   214 #>  [9719,]  189  204  203  212  209  208  215  213  213   214 #>  [9720,]  188  203  202  211  208  207  214  212  212   213 #>  [9721,]  189  204  203  212  209  208  215  213  213   214 #>  [9722,]  188  203  202  211  208  207  214  212  212   213 #>  [9723,]  188  203  202  211  208  207  214  212  212   213 #>  [9724,]  188  203  202  211  208  207  214  212  212   213 #>  [9725,]  188  203  202  211  208  207  214  212  212   213 #>  [9726,]  189  204  203  212  209  208  215  213  213   214 #>  [9727,]  189  204  203  212  209  208  215  213  213   214 #>  [9728,]  188  203  202  211  208  207  214  212  212   213 #>  [9729,]  188  203  202  211  208  207  214  212  212   213 #>  [9730,]  189  204  203  212  209  208  215  213  213   214 #>  [9731,]  189  204  203  212  209  208  215  213  213   214 #>  [9732,]  188  203  202  211  208  207  214  212  212   213 #>  [9733,]  189  204  203  212  209  208  215  213  213   214 #>  [9734,]  188  203  202  211  208  207  214  212  212   213 #>  [9735,]  188  203  202  211  208  207  214  212  212   213 #>  [9736,]  189  204  203  212  209  208  215  213  213   214 #>  [9737,]  188  203  202  211  208  207  214  212  212   213 #>  [9738,]  189  204  203  212  209  208  215  213  213   214 #>  [9739,]  188  203  202  211  208  207  214  212  212   213 #>  [9740,]  188  203  202  211  208  207  214  212  212   213 #>  [9741,]  189  204  203  212  209  208  215  213  213   214 #>  [9742,]  189  204  203  212  209  208  215  213  213   214 #>  [9743,]  188  203  202  211  208  207  214  212  212   213 #>  [9744,]  188  203  202  211  208  207  214  212  212   213 #>  [9745,]  188  203  202  211  208  207  214  212  212   213 #>  [9746,]  188  203  202  211  208  207  214  212  212   213 #>  [9747,]  188  203  202  211  208  207  214  212  212   213 #>  [9748,]  189  204  203  212  209  208  215  213  213   214 #>  [9749,]  188  203  202  211  208  207  214  212  212   213 #>  [9750,]  188  203  202  211  208  207  214  212  212   213 #>  [9751,]  188  203  202  211  208  207  214  212  212   213 #>  [9752,]  188  203  202  211  208  207  214  212  212   213 #>  [9753,]  188  203  202  211  208  207  214  212  212   213 #>  [9754,]  188  203  202  211  208  207  214  212  212   213 #>  [9755,]  188  203  202  211  208  207  214  212  212   213 #>  [9756,]  188  203  202  211  208  207  214  212  212   213 #>  [9757,]  188  203  202  211  208  207  214  212  212   213 #>  [9758,]  189  204  203  212  209  208  215  213  213   214 #>  [9759,]  188  203  202  211  208  207  214  212  212   213 #>  [9760,]  189  204  203  212  209  208  215  213  213   214 #>  [9761,]  189  204  203  212  209  208  215  213  213   214 #>  [9762,]  188  203  202  211  208  207  214  212  212   213 #>  [9763,]  188  203  202  211  208  207  214  212  212   213 #>  [9764,]  188  203  202  211  208  207  214  212  212   213 #>  [9765,]  188  203  202  211  208  207  214  212  212   213 #>  [9766,]  188  203  202  211  208  207  214  212  212   213 #>  [9767,]  188  203  202  211  208  207  214  212  212   213 #>  [9768,]  189  204  203  212  209  208  215  213  213   214 #>  [9769,]  189  204  203  212  209  208  215  213  213   214 #>  [9770,]  188  203  202  211  208  207  214  212  212   213 #>  [9771,]  188  203  202  211  208  207  214  212  212   213 #>  [9772,]  188  203  202  211  208  207  214  212  212   213 #>  [9773,]  188  203  202  211  208  207  214  212  212   213 #>  [9774,]  189  204  203  212  209  208  215  213  213   214 #>  [9775,]  189  204  203  212  209  208  215  213  213   214 #>  [9776,]  188  203  202  211  208  207  214  212  212   213 #>  [9777,]  188  203  202  211  208  207  214  212  212   213 #>  [9778,]  188  203  202  211  208  207  214  212  212   213 #>  [9779,]  188  203  202  211  208  207  214  212  212   213 #>  [9780,]  188  203  202  211  208  207  214  212  212   213 #>  [9781,]  188  203  202  211  208  207  214  212  212   213 #>  [9782,]  189  204  203  212  209  208  215  213  213   214 #>  [9783,]  188  203  202  211  208  207  214  212  212   213 #>  [9784,]  188  203  202  211  208  207  214  212  212   213 #>  [9785,]  189  204  203  212  209  208  215  213  213   214 #>  [9786,]  188  203  202  211  208  207  214  212  212   213 #>  [9787,]  188  203  202  211  208  207  214  212  212   213 #>  [9788,]  188  203  202  211  208  207  214  212  212   213 #>  [9789,]  188  203  202  211  208  207  214  212  212   213 #>  [9790,]  188  203  202  211  208  207  214  212  212   213 #>  [9791,]  188  203  202  211  208  207  214  212  212   213 #>  [9792,]  189  204  203  212  209  208  215  213  213   214 #>  [9793,]  189  204  203  212  209  208  215  213  213   214 #>  [9794,]  188  203  202  211  208  207  214  212  212   213 #>  [9795,]  188  203  202  211  208  207  214  212  212   213 #>  [9796,]  189  204  203  212  209  208  215  213  213   214 #>  [9797,]  189  204  203  212  209  208  215  213  213   214 #>  [9798,]  188  203  202  211  208  207  214  212  212   213 #>  [9799,]  188  203  202  211  208  207  214  212  212   213 #>  [9800,]  188  203  202  211  208  207  214  212  212   213 #>  [9801,]  191  206  205  214  211  210  218  215  215   216 #>  [9802,]  191  206  205  214  211  210  217  215  215   216 #>  [9803,]  190  205  204  213  210  209  216  214  214   215 #>  [9804,]  191  206  205  214  211  210  217  215  215   216 #>  [9805,]  191  206  205  214  211  210  218  215  215   216 #>  [9806,]  191  206  205  214  211  210  217  215  215   216 #>  [9807,]  190  205  204  213  210  209  216  214  214   215 #>  [9808,]  191  206  205  214  211  210  217  215  215   216 #>  [9809,]  191  206  205  214  211  210  217  215  215   216 #>  [9810,]  191  206  205  214  211  210  217  215  215   216 #>  [9811,]  191  206  205  214  211  210  217  215  215   216 #>  [9812,]  191  206  205  214  211  210  217  215  215   216 #>  [9813,]  190  205  204  213  210  209  216  214  214   215 #>  [9814,]  191  206  205  214  211  210  218  215  215   216 #>  [9815,]  191  206  205  214  211  210  218  215  215   216 #>  [9816,]  191  206  205  214  211  210  217  215  215   216 #>  [9817,]  191  206  205  214  211  210  217  215  215   216 #>  [9818,]  191  206  205  214  211  210  218  215  215   216 #>  [9819,]  191  206  205  214  211  210  217  215  215   216 #>  [9820,]  191  206  205  214  211  210  217  215  215   216 #>  [9821,]  190  205  204  213  210  209  216  214  214   215 #>  [9822,]  191  206  205  214  211  210  217  215  215   216 #>  [9823,]  190  205  204  213  210  209  216  214  214   215 #>  [9824,]  191  206  205  214  211  210  217  215  215   216 #>  [9825,]  191  206  205  214  211  210  217  215  215   216 #>  [9826,]  191  206  205  214  211  210  217  215  215   216 #>  [9827,]  191  206  205  214  211  210  218  215  215   216 #>  [9828,]  191  206  205  214  211  210  217  215  215   216 #>  [9829,]  191  206  205  214  211  210  217  215  215   216 #>  [9830,]  190  205  204  213  210  209  216  214  214   215 #>  [9831,]  190  205  204  213  210  209  216  214  214   215 #>  [9832,]  191  206  205  214  211  210  218  215  215   216 #>  [9833,]  191  206  205  214  211  210  217  215  215   216 #>  [9834,]  191  206  205  214  211  210  217  215  215   216 #>  [9835,]  191  206  205  214  211  210  217  215  215   216 #>  [9836,]  191  206  205  214  211  210  217  215  215   216 #>  [9837,]  191  206  205  214  211  210  217  215  215   216 #>  [9838,]  191  206  205  214  211  210  217  215  215   216 #>  [9839,]  190  205  204  213  210  209  216  214  214   215 #>  [9840,]  191  206  205  214  211  210  217  215  215   216 #>  [9841,]  191  206  205  214  211  210  217  215  215   216 #>  [9842,]  191  206  205  214  211  210  217  215  215   216 #>  [9843,]  191  206  205  214  211  210  218  215  215   216 #>  [9844,]  191  206  205  214  211  210  217  215  215   216 #>  [9845,]  191  206  205  214  211  210  217  215  215   216 #>  [9846,]  191  206  205  214  211  210  217  215  215   216 #>  [9847,]  190  205  204  213  210  209  216  214  214   215 #>  [9848,]  191  206  205  214  211  210  217  215  215   216 #>  [9849,]  190  205  204  213  210  209  216  214  214   215 #>  [9850,]  191  206  205  214  211  210  217  215  215   216 #>  [9851,]  191  206  205  214  211  210  217  215  215   216 #>  [9852,]  191  206  205  214  211  210  217  215  215   216 #>  [9853,]  191  206  205  214  211  210  217  215  215   216 #>  [9854,]  190  205  204  213  210  209  216  214  214   215 #>  [9855,]  191  206  205  214  211  210  217  215  215   216 #>  [9856,]  191  206  205  214  211  210  217  215  215   216 #>  [9857,]  191  206  205  214  211  210  217  215  215   216 #>  [9858,]  191  206  205  214  211  210  218  215  215   216 #>  [9859,]  191  206  205  214  211  210  217  215  215   216 #>  [9860,]  191  206  205  214  211  210  217  215  215   216 #>  [9861,]  191  206  205  214  211  210  217  215  215   216 #>  [9862,]  190  205  204  213  210  209  216  214  214   215 #>  [9863,]  191  206  205  214  211  210  217  215  215   216 #>  [9864,]  191  206  205  214  211  210  217  215  215   216 #>  [9865,]  191  206  205  214  211  210  217  215  215   216 #>  [9866,]  191  206  205  214  211  210  217  215  215   216 #>  [9867,]  191  206  205  214  211  210  217  215  215   216 #>  [9868,]  191  206  205  214  211  210  217  215  215   216 #>  [9869,]  191  206  205  214  211  210  217  215  215   216 #>  [9870,]  190  205  204  213  210  209  216  214  214   215 #>  [9871,]  191  206  205  214  211  210  218  215  215   216 #>  [9872,]  191  206  205  214  211  210  217  215  215   216 #>  [9873,]  191  206  205  214  211  210  217  215  215   216 #>  [9874,]  191  206  205  214  211  210  217  215  215   216 #>  [9875,]  191  206  205  214  211  210  218  215  215   216 #>  [9876,]  191  206  205  214  211  210  217  215  215   216 #>  [9877,]  190  205  204  213  210  209  216  214  214   215 #>  [9878,]  191  206  205  214  211  210  217  215  215   216 #>  [9879,]  190  205  204  213  210  209  216  214  214   215 #>  [9880,]  190  205  204  213  210  209  216  214  214   215 #>  [9881,]  191  206  205  214  211  210  217  215  215   216 #>  [9882,]  191  206  205  214  211  210  217  215  215   216 #>  [9883,]  190  205  204  213  210  209  216  214  214   215 #>  [9884,]  191  206  205  214  211  210  217  215  215   216 #>  [9885,]  191  206  205  214  211  210  217  215  215   216 #>  [9886,]  191  206  205  214  211  210  217  215  215   216 #>  [9887,]  191  206  205  214  211  210  217  215  215   216 #>  [9888,]  191  206  205  214  211  210  217  215  215   216 #>  [9889,]  191  206  205  214  211  210  217  215  215   216 #>  [9890,]  191  206  205  214  211  210  217  215  215   216 #>  [9891,]  191  206  205  214  211  210  218  215  215   216 #>  [9892,]  191  206  205  214  211  210  217  215  215   216 #>  [9893,]  191  206  205  214  211  210  217  215  215   216 #>  [9894,]  191  206  205  214  211  210  217  215  215   216 #>  [9895,]  190  205  204  213  210  209  216  214  214   215 #>  [9896,]  191  206  205  214  211  210  217  215  215   216 #>  [9897,]  191  206  205  214  211  210  217  215  215   216 #>  [9898,]  190  205  204  213  210  209  216  214  214   215 #>  [9899,]  191  206  205  214  211  210  217  215  215   216 #>  [9900,]  191  206  205  214  211  210  218  215  215   216 #>  [9901,]  193  208  206  215  214  212  221  218  218   219 #>  [9902,]  192  207  208  216  212  211  219  216  216   217 #>  [9903,]  193  208  206  215  213  212  220  217  217   218 #>  [9904,]  193  208  206  215  214  212  220  217  217   218 #>  [9905,]  193  208  206  215  213  212  220  217  217   218 #>  [9906,]  192  207  208  216  212  211  219  216  216   217 #>  [9907,]  193  208  206  215  214  212  220  217  217   218 #>  [9908,]  193  208  206  215  213  212  220  217  217   218 #>  [9909,]  193  208  206  215  214  212  220  217  217   218 #>  [9910,]  193  208  206  215  214  212  220  217  217   218 #>  [9911,]  192  207  208  216  212  211  219  216  216   217 #>  [9912,]  192  207  207  216  212  211  219  216  216   217 #>  [9913,]  193  208  206  215  214  212  221  218  218   219 #>  [9914,]  193  208  206  215  214  212  221  218  218   219 #>  [9915,]  192  207  208  216  212  211  219  216  216   217 #>  [9916,]  193  208  206  215  214  212  221  218  218   219 #>  [9917,]  192  207  208  216  212  211  219  216  216   217 #>  [9918,]  193  208  206  215  213  212  220  217  217   218 #>  [9919,]  193  208  206  215  213  212  220  217  217   218 #>  [9920,]  193  208  206  215  214  212  220  217  217   218 #>  [9921,]  193  208  206  215  213  212  221  218  218   219 #>  [9922,]  193  208  206  215  214  212  221  218  218   219 #>  [9923,]  192  207  207  216  212  211  219  216  216   217 #>  [9924,]  193  208  206  215  214  212  220  217  217   218 #>  [9925,]  193  208  206  215  214  212  220  217  217   218 #>  [9926,]  193  208  206  215  213  212  221  218  218   219 #>  [9927,]  193  208  206  215  213  212  221  218  218   219 #>  [9928,]  193  208  206  215  214  212  220  217  217   218 #>  [9929,]  192  207  208  216  212  211  219  216  216   217 #>  [9930,]  192  207  208  216  212  211  219  216  216   217 #>  [9931,]  192  207  207  216  212  211  219  216  216   217 #>  [9932,]  193  208  206  215  213  212  220  217  217   218 #>  [9933,]  193  208  206  215  213  212  221  218  218   219 #>  [9934,]  192  207  208  216  212  211  219  216  216   217 #>  [9935,]  192  207  208  216  212  211  219  216  216   217 #>  [9936,]  193  208  206  215  214  212  220  217  217   218 #>  [9937,]  192  207  207  216  212  211  219  216  216   217 #>  [9938,]  193  208  206  215  213  212  220  217  217   218 #>  [9939,]  193  208  206  215  214  212  220  217  217   218 #>  [9940,]  193  208  206  215  213  212  220  217  217   218 #>  [9941,]  193  208  206  215  213  212  221  218  218   219 #>  [9942,]  192  207  208  216  212  211  219  216  216   217 #>  [9943,]  192  207  208  216  212  211  219  216  216   217 #>  [9944,]  192  207  207  216  212  211  219  216  216   217 #>  [9945,]  193  208  206  215  213  212  220  217  217   218 #>  [9946,]  193  208  206  215  213  212  220  217  217   218 #>  [9947,]  192  207  207  216  212  211  219  216  216   217 #>  [9948,]  192  207  208  216  212  211  219  216  216   217 #>  [9949,]  193  208  206  215  213  212  220  217  217   218 #>  [9950,]  193  208  206  215  214  212  221  218  218   219 #>  [9951,]  193  208  206  215  213  212  220  217  217   218 #>  [9952,]  193  208  206  215  214  212  221  218  218   219 #>  [9953,]  193  208  206  215  213  212  220  217  217   218 #>  [9954,]  193  208  206  215  214  212  220  217  217   218 #>  [9955,]  193  208  206  215  214  212  220  217  217   218 #>  [9956,]  192  207  208  216  212  211  219  216  216   217 #>  [9957,]  193  208  206  215  214  212  220  217  217   218 #>  [9958,]  193  208  206  215  214  212  221  218  218   219 #>  [9959,]  193  208  206  215  214  212  221  218  218   219 #>  [9960,]  192  207  207  216  212  211  219  216  216   217 #>  [9961,]  192  207  208  216  212  211  219  216  216   217 #>  [9962,]  193  208  206  215  213  212  220  217  217   218 #>  [9963,]  192  207  208  216  212  211  219  216  216   217 #>  [9964,]  192  207  208  216  212  211  219  216  216   217 #>  [9965,]  192  207  208  216  212  211  219  216  216   217 #>  [9966,]  192  207  208  216  212  211  219  216  216   217 #>  [9967,]  193  208  206  215  214  212  220  217  217   218 #>  [9968,]  193  208  206  215  213  212  221  218  218   219 #>  [9969,]  193  208  206  215  213  212  220  217  217   218 #>  [9970,]  192  207  208  216  212  211  219  216  216   217 #>  [9971,]  193  208  206  215  213  212  221  218  218   219 #>  [9972,]  193  208  206  215  213  212  220  217  217   218 #>  [9973,]  193  208  206  215  214  212  221  218  218   219 #>  [9974,]  193  208  206  215  213  212  220  217  217   218 #>  [9975,]  192  207  207  216  212  211  219  216  216   217 #>  [9976,]  193  208  206  215  214  212  221  218  218   219 #>  [9977,]  193  208  206  215  213  212  221  218  218   219 #>  [9978,]  192  207  207  216  212  211  219  216  216   217 #>  [9979,]  192  207  208  216  212  211  219  216  216   217 #>  [9980,]  193  208  206  215  213  212  220  217  217   218 #>  [9981,]  192  207  208  216  212  211  219  216  216   217 #>  [9982,]  193  208  206  215  213  212  220  217  217   218 #>  [9983,]  193  208  206  215  213  212  221  218  218   219 #>  [9984,]  193  208  206  215  213  212  221  218  218   219 #>  [9985,]  193  208  206  215  214  212  220  217  217   218 #>  [9986,]  193  208  206  215  214  212  221  218  218   219 #>  [9987,]  193  208  206  215  213  212  221  218  218   219 #>  [9988,]  193  208  206  215  213  212  220  217  217   218 #>  [9989,]  193  208  206  215  213  212  220  217  217   218 #>  [9990,]  193  208  206  215  214  212  221  218  218   219 #>  [9991,]  193  208  206  215  214  212  220  217  217   218 #>  [9992,]  192  207  207  216  212  211  219  216  216   217 #>  [9993,]  193  208  206  215  213  212  221  218  218   219 #>  [9994,]  192  207  208  216  212  211  219  216  216   217 #>  [9995,]  192  207  207  216  212  211  219  216  216   217 #>  [9996,]  193  208  206  215  213  212  221  218  218   219 #>  [9997,]  193  208  206  215  213  212  221  218  218   219 #>  [9998,]  193  208  206  215  213  212  220  217  217   218 #>  [9999,]  193  208  206  215  213  212  221  218  218   219 #>  [ reached getOption(\"max.print\") -- omitted 10001 rows ] computeForestLeafIndices(bart_model, X, \"mean\", 0) #>          [,1] #>     [1,]    1 #>     [2,]    1 #>     [3,]    0 #>     [4,]    0 #>     [5,]    0 #>     [6,]    0 #>     [7,]    1 #>     [8,]    1 #>     [9,]    0 #>    [10,]    0 #>    [11,]    0 #>    [12,]    1 #>    [13,]    1 #>    [14,]    0 #>    [15,]    1 #>    [16,]    1 #>    [17,]    0 #>    [18,]    1 #>    [19,]    1 #>    [20,]    1 #>    [21,]    0 #>    [22,]    1 #>    [23,]    1 #>    [24,]    0 #>    [25,]    0 #>    [26,]    1 #>    [27,]    1 #>    [28,]    0 #>    [29,]    1 #>    [30,]    1 #>    [31,]    0 #>    [32,]    0 #>    [33,]    1 #>    [34,]    0 #>    [35,]    0 #>    [36,]    1 #>    [37,]    1 #>    [38,]    1 #>    [39,]    0 #>    [40,]    0 #>    [41,]    1 #>    [42,]    0 #>    [43,]    1 #>    [44,]    1 #>    [45,]    1 #>    [46,]    1 #>    [47,]    0 #>    [48,]    0 #>    [49,]    1 #>    [50,]    1 #>    [51,]    1 #>    [52,]    0 #>    [53,]    1 #>    [54,]    0 #>    [55,]    1 #>    [56,]    1 #>    [57,]    0 #>    [58,]    1 #>    [59,]    1 #>    [60,]    1 #>    [61,]    1 #>    [62,]    0 #>    [63,]    1 #>    [64,]    1 #>    [65,]    0 #>    [66,]    1 #>    [67,]    0 #>    [68,]    1 #>    [69,]    1 #>    [70,]    0 #>    [71,]    1 #>    [72,]    0 #>    [73,]    0 #>    [74,]    0 #>    [75,]    1 #>    [76,]    0 #>    [77,]    1 #>    [78,]    1 #>    [79,]    0 #>    [80,]    1 #>    [81,]    1 #>    [82,]    0 #>    [83,]    1 #>    [84,]    1 #>    [85,]    1 #>    [86,]    0 #>    [87,]    1 #>    [88,]    0 #>    [89,]    0 #>    [90,]    1 #>    [91,]    0 #>    [92,]    0 #>    [93,]    1 #>    [94,]    0 #>    [95,]    1 #>    [96,]    1 #>    [97,]    1 #>    [98,]    0 #>    [99,]    0 #>   [100,]    1 #>   [101,]    3 #>   [102,]    2 #>   [103,]    2 #>   [104,]    3 #>   [105,]    2 #>   [106,]    3 #>   [107,]    2 #>   [108,]    2 #>   [109,]    3 #>   [110,]    3 #>   [111,]    3 #>   [112,]    3 #>   [113,]    2 #>   [114,]    3 #>   [115,]    3 #>   [116,]    2 #>   [117,]    2 #>   [118,]    3 #>   [119,]    3 #>   [120,]    2 #>   [121,]    3 #>   [122,]    2 #>   [123,]    3 #>   [124,]    2 #>   [125,]    2 #>   [126,]    3 #>   [127,]    3 #>   [128,]    2 #>   [129,]    2 #>   [130,]    3 #>   [131,]    3 #>   [132,]    3 #>   [133,]    3 #>   [134,]    3 #>   [135,]    3 #>   [136,]    3 #>   [137,]    3 #>   [138,]    3 #>   [139,]    2 #>   [140,]    2 #>   [141,]    3 #>   [142,]    3 #>   [143,]    2 #>   [144,]    2 #>   [145,]    2 #>   [146,]    2 #>   [147,]    2 #>   [148,]    3 #>   [149,]    2 #>   [150,]    2 #>   [151,]    2 #>   [152,]    3 #>   [153,]    2 #>   [154,]    2 #>   [155,]    2 #>   [156,]    2 #>   [157,]    3 #>   [158,]    3 #>   [159,]    2 #>   [160,]    3 #>   [161,]    3 #>   [162,]    3 #>   [163,]    2 #>   [164,]    3 #>   [165,]    2 #>   [166,]    2 #>   [167,]    3 #>   [168,]    3 #>   [169,]    3 #>   [170,]    2 #>   [171,]    2 #>   [172,]    2 #>   [173,]    3 #>   [174,]    3 #>   [175,]    3 #>   [176,]    2 #>   [177,]    2 #>   [178,]    2 #>   [179,]    2 #>   [180,]    3 #>   [181,]    2 #>   [182,]    3 #>   [183,]    2 #>   [184,]    2 #>   [185,]    3 #>   [186,]    2 #>   [187,]    3 #>   [188,]    3 #>   [189,]    2 #>   [190,]    2 #>   [191,]    3 #>   [192,]    3 #>   [193,]    3 #>   [194,]    2 #>   [195,]    3 #>   [196,]    3 #>   [197,]    3 #>   [198,]    2 #>   [199,]    3 #>   [200,]    2 #>   [201,]    5 #>   [202,]    5 #>   [203,]    4 #>   [204,]    5 #>   [205,]    4 #>   [206,]    4 #>   [207,]    5 #>   [208,]    5 #>   [209,]    5 #>   [210,]    5 #>   [211,]    4 #>   [212,]    4 #>   [213,]    5 #>   [214,]    4 #>   [215,]    5 #>   [216,]    5 #>   [217,]    5 #>   [218,]    5 #>   [219,]    4 #>   [220,]    4 #>   [221,]    5 #>   [222,]    4 #>   [223,]    5 #>   [224,]    4 #>   [225,]    5 #>   [226,]    4 #>   [227,]    5 #>   [228,]    5 #>   [229,]    4 #>   [230,]    4 #>   [231,]    5 #>   [232,]    4 #>   [233,]    4 #>   [234,]    4 #>   [235,]    4 #>   [236,]    4 #>   [237,]    5 #>   [238,]    5 #>   [239,]    5 #>   [240,]    4 #>   [241,]    4 #>   [242,]    4 #>   [243,]    5 #>   [244,]    5 #>   [245,]    5 #>   [246,]    5 #>   [247,]    5 #>   [248,]    4 #>   [249,]    5 #>   [250,]    5 #>   [251,]    4 #>   [252,]    4 #>   [253,]    5 #>   [254,]    4 #>   [255,]    4 #>   [256,]    5 #>   [257,]    4 #>   [258,]    4 #>   [259,]    5 #>   [260,]    4 #>   [261,]    5 #>   [262,]    4 #>   [263,]    4 #>   [264,]    5 #>   [265,]    5 #>   [266,]    4 #>   [267,]    4 #>   [268,]    4 #>   [269,]    4 #>   [270,]    5 #>   [271,]    5 #>   [272,]    5 #>   [273,]    5 #>   [274,]    5 #>   [275,]    5 #>   [276,]    5 #>   [277,]    5 #>   [278,]    4 #>   [279,]    5 #>   [280,]    4 #>   [281,]    4 #>   [282,]    5 #>   [283,]    4 #>   [284,]    5 #>   [285,]    5 #>   [286,]    5 #>   [287,]    5 #>   [288,]    5 #>   [289,]    4 #>   [290,]    5 #>   [291,]    4 #>   [292,]    5 #>   [293,]    4 #>   [294,]    5 #>   [295,]    5 #>   [296,]    5 #>   [297,]    4 #>   [298,]    4 #>   [299,]    4 #>   [300,]    5 #>   [301,]    7 #>   [302,]    6 #>   [303,]    6 #>   [304,]    6 #>   [305,]    7 #>   [306,]    6 #>   [307,]    6 #>   [308,]    6 #>   [309,]    6 #>   [310,]    7 #>   [311,]    7 #>   [312,]    7 #>   [313,]    6 #>   [314,]    7 #>   [315,]    7 #>   [316,]    6 #>   [317,]    7 #>   [318,]    7 #>   [319,]    6 #>   [320,]    6 #>   [321,]    6 #>   [322,]    7 #>   [323,]    6 #>   [324,]    6 #>   [325,]    6 #>   [326,]    7 #>   [327,]    7 #>   [328,]    6 #>   [329,]    6 #>   [330,]    6 #>   [331,]    7 #>   [332,]    7 #>   [333,]    6 #>   [334,]    6 #>   [335,]    6 #>   [336,]    6 #>   [337,]    6 #>   [338,]    6 #>   [339,]    6 #>   [340,]    6 #>   [341,]    6 #>   [342,]    6 #>   [343,]    7 #>   [344,]    6 #>   [345,]    6 #>   [346,]    6 #>   [347,]    7 #>   [348,]    6 #>   [349,]    6 #>   [350,]    6 #>   [351,]    6 #>   [352,]    7 #>   [353,]    6 #>   [354,]    6 #>   [355,]    6 #>   [356,]    6 #>   [357,]    6 #>   [358,]    7 #>   [359,]    7 #>   [360,]    6 #>   [361,]    7 #>   [362,]    6 #>   [363,]    6 #>   [364,]    6 #>   [365,]    6 #>   [366,]    7 #>   [367,]    6 #>   [368,]    6 #>   [369,]    6 #>   [370,]    7 #>   [371,]    7 #>   [372,]    6 #>   [373,]    6 #>   [374,]    6 #>   [375,]    7 #>   [376,]    6 #>   [377,]    7 #>   [378,]    6 #>   [379,]    7 #>   [380,]    6 #>   [381,]    6 #>   [382,]    6 #>   [383,]    6 #>   [384,]    6 #>   [385,]    6 #>   [386,]    6 #>   [387,]    7 #>   [388,]    6 #>   [389,]    6 #>   [390,]    7 #>   [391,]    7 #>   [392,]    6 #>   [393,]    6 #>   [394,]    6 #>   [395,]    7 #>   [396,]    6 #>   [397,]    6 #>   [398,]    6 #>   [399,]    6 #>   [400,]    7 #>   [401,]    9 #>   [402,]    9 #>   [403,]    8 #>   [404,]    8 #>   [405,]    8 #>   [406,]    9 #>   [407,]    8 #>   [408,]    8 #>   [409,]    8 #>   [410,]    8 #>   [411,]    8 #>   [412,]    8 #>   [413,]    9 #>   [414,]    9 #>   [415,]    9 #>   [416,]    9 #>   [417,]    9 #>   [418,]    8 #>   [419,]    8 #>   [420,]    8 #>   [421,]    9 #>   [422,]    9 #>   [423,]    8 #>   [424,]    8 #>   [425,]    8 #>   [426,]    9 #>   [427,]    9 #>   [428,]    8 #>   [429,]    9 #>   [430,]    8 #>   [431,]    8 #>   [432,]    8 #>   [433,]    9 #>   [434,]    8 #>   [435,]    9 #>   [436,]    8 #>   [437,]    9 #>   [438,]    8 #>   [439,]    8 #>   [440,]    8 #>   [441,]    9 #>   [442,]    8 #>   [443,]    8 #>   [444,]    9 #>   [445,]    8 #>   [446,]    8 #>   [447,]    9 #>   [448,]    8 #>   [449,]    8 #>   [450,]    9 #>   [451,]    8 #>   [452,]    9 #>   [453,]    8 #>   [454,]    8 #>   [455,]    8 #>   [456,]    8 #>   [457,]    8 #>   [458,]    9 #>   [459,]    9 #>   [460,]    8 #>   [461,]    9 #>   [462,]    8 #>   [463,]    8 #>   [464,]    8 #>   [465,]    8 #>   [466,]    8 #>   [467,]    8 #>   [468,]    9 #>   [469,]    8 #>   [470,]    9 #>   [471,]    9 #>   [472,]    8 #>   [473,]    9 #>   [474,]    8 #>   [475,]    8 #>   [476,]    9 #>   [477,]    9 #>   [478,]    8 #>   [479,]    9 #>   [480,]    8 #>   [481,]    9 #>   [482,]    8 #>   [483,]    9 #>   [484,]    8 #>   [485,]    8 #>   [486,]    9 #>   [487,]    8 #>   [488,]    8 #>   [489,]    8 #>   [490,]    9 #>   [491,]    8 #>   [492,]    8 #>   [493,]    9 #>   [494,]    9 #>   [495,]    8 #>   [496,]    9 #>   [497,]    8 #>   [498,]    8 #>   [499,]    9 #>   [500,]    9 #>   [501,]   10 #>   [502,]   10 #>   [503,]   10 #>   [504,]   11 #>   [505,]   10 #>   [506,]   10 #>   [507,]   11 #>   [508,]   10 #>   [509,]   11 #>   [510,]   11 #>   [511,]   10 #>   [512,]   10 #>   [513,]   10 #>   [514,]   11 #>   [515,]   10 #>   [516,]   11 #>   [517,]   10 #>   [518,]   10 #>   [519,]   10 #>   [520,]   11 #>   [521,]   10 #>   [522,]   10 #>   [523,]   10 #>   [524,]   11 #>   [525,]   11 #>   [526,]   10 #>   [527,]   10 #>   [528,]   11 #>   [529,]   10 #>   [530,]   10 #>   [531,]   10 #>   [532,]   10 #>   [533,]   10 #>   [534,]   10 #>   [535,]   10 #>   [536,]   11 #>   [537,]   10 #>   [538,]   10 #>   [539,]   11 #>   [540,]   10 #>   [541,]   10 #>   [542,]   10 #>   [543,]   10 #>   [544,]   10 #>   [545,]   10 #>   [546,]   10 #>   [547,]   10 #>   [548,]   10 #>   [549,]   10 #>   [550,]   11 #>   [551,]   10 #>   [552,]   11 #>   [553,]   10 #>   [554,]   11 #>   [555,]   10 #>   [556,]   10 #>   [557,]   11 #>   [558,]   10 #>   [559,]   11 #>   [560,]   10 #>   [561,]   10 #>   [562,]   10 #>   [563,]   10 #>   [564,]   10 #>   [565,]   10 #>   [566,]   10 #>   [567,]   11 #>   [568,]   10 #>   [569,]   10 #>   [570,]   10 #>   [571,]   10 #>   [572,]   10 #>   [573,]   11 #>   [574,]   10 #>   [575,]   10 #>   [576,]   11 #>   [577,]   10 #>   [578,]   10 #>   [579,]   10 #>   [580,]   10 #>   [581,]   10 #>   [582,]   10 #>   [583,]   10 #>   [584,]   10 #>   [585,]   10 #>   [586,]   11 #>   [587,]   10 #>   [588,]   10 #>   [589,]   10 #>   [590,]   11 #>   [591,]   11 #>   [592,]   10 #>   [593,]   10 #>   [594,]   10 #>   [595,]   10 #>   [596,]   10 #>   [597,]   10 #>   [598,]   10 #>   [599,]   10 #>   [600,]   10 #>   [601,]   13 #>   [602,]   13 #>   [603,]   12 #>   [604,]   13 #>   [605,]   13 #>   [606,]   13 #>   [607,]   12 #>   [608,]   13 #>   [609,]   13 #>   [610,]   13 #>   [611,]   13 #>   [612,]   13 #>   [613,]   13 #>   [614,]   13 #>   [615,]   13 #>   [616,]   13 #>   [617,]   13 #>   [618,]   13 #>   [619,]   13 #>   [620,]   13 #>   [621,]   12 #>   [622,]   13 #>   [623,]   12 #>   [624,]   13 #>   [625,]   13 #>   [626,]   13 #>   [627,]   13 #>   [628,]   13 #>   [629,]   13 #>   [630,]   12 #>   [631,]   12 #>   [632,]   13 #>   [633,]   13 #>   [634,]   13 #>   [635,]   13 #>   [636,]   13 #>   [637,]   13 #>   [638,]   13 #>   [639,]   12 #>   [640,]   13 #>   [641,]   13 #>   [642,]   13 #>   [643,]   13 #>   [644,]   13 #>   [645,]   13 #>   [646,]   13 #>   [647,]   12 #>   [648,]   13 #>   [649,]   12 #>   [650,]   13 #>   [651,]   13 #>   [652,]   13 #>   [653,]   13 #>   [654,]   12 #>   [655,]   13 #>   [656,]   13 #>   [657,]   13 #>   [658,]   13 #>   [659,]   13 #>   [660,]   13 #>   [661,]   13 #>   [662,]   12 #>   [663,]   13 #>   [664,]   13 #>   [665,]   13 #>   [666,]   13 #>   [667,]   13 #>   [668,]   13 #>   [669,]   13 #>   [670,]   12 #>   [671,]   13 #>   [672,]   13 #>   [673,]   13 #>   [674,]   13 #>   [675,]   13 #>   [676,]   13 #>   [677,]   12 #>   [678,]   13 #>   [679,]   12 #>   [680,]   12 #>   [681,]   13 #>   [682,]   13 #>   [683,]   12 #>   [684,]   13 #>   [685,]   13 #>   [686,]   13 #>   [687,]   13 #>   [688,]   13 #>   [689,]   13 #>   [690,]   13 #>   [691,]   13 #>   [692,]   13 #>   [693,]   13 #>   [694,]   13 #>   [695,]   12 #>   [696,]   13 #>   [697,]   13 #>   [698,]   12 #>   [699,]   13 #>   [700,]   13 #>   [701,]   14 #>   [702,]   15 #>   [703,]   15 #>   [704,]   14 #>   [705,]   15 #>   [706,]   15 #>   [707,]   15 #>   [708,]   14 #>   [709,]   14 #>   [710,]   15 #>   [711,]   14 #>   [712,]   15 #>   [713,]   14 #>   [714,]   14 #>   [715,]   14 #>   [716,]   15 #>   [717,]   14 #>   [718,]   15 #>   [719,]   15 #>   [720,]   15 #>   [721,]   14 #>   [722,]   14 #>   [723,]   15 #>   [724,]   15 #>   [725,]   15 #>   [726,]   15 #>   [727,]   14 #>   [728,]   15 #>   [729,]   15 #>   [730,]   14 #>   [731,]   15 #>   [732,]   15 #>   [733,]   15 #>   [734,]   15 #>   [735,]   14 #>   [736,]   15 #>   [737,]   15 #>   [738,]   15 #>   [739,]   15 #>   [740,]   15 #>   [741,]   15 #>   [742,]   15 #>   [743,]   14 #>   [744,]   14 #>   [745,]   14 #>   [746,]   14 #>   [747,]   15 #>   [748,]   15 #>   [749,]   14 #>   [750,]   15 #>   [751,]   15 #>   [752,]   14 #>   [753,]   15 #>   [754,]   14 #>   [755,]   14 #>   [756,]   15 #>   [757,]   15 #>   [758,]   14 #>   [759,]   15 #>   [760,]   15 #>   [761,]   15 #>   [762,]   14 #>   [763,]   15 #>   [764,]   15 #>   [765,]   15 #>   [766,]   14 #>   [767,]   14 #>   [768,]   14 #>   [769,]   14 #>   [770,]   15 #>   [771,]   15 #>   [772,]   15 #>   [773,]   15 #>   [774,]   14 #>   [775,]   15 #>   [776,]   15 #>   [777,]   15 #>   [778,]   15 #>   [779,]   14 #>   [780,]   14 #>   [781,]   14 #>   [782,]   14 #>   [783,]   14 #>   [784,]   15 #>   [785,]   14 #>   [786,]   15 #>   [787,]   14 #>   [788,]   14 #>   [789,]   14 #>   [790,]   14 #>   [791,]   14 #>   [792,]   14 #>   [793,]   15 #>   [794,]   15 #>   [795,]   14 #>   [796,]   14 #>   [797,]   15 #>   [798,]   15 #>   [799,]   14 #>   [800,]   15 #>   [801,]   16 #>   [802,]   16 #>   [803,]   16 #>   [804,]   16 #>   [805,]   16 #>   [806,]   16 #>   [807,]   16 #>   [808,]   16 #>   [809,]   16 #>   [810,]   16 #>   [811,]   16 #>   [812,]   16 #>   [813,]   16 #>   [814,]   16 #>   [815,]   16 #>   [816,]   16 #>   [817,]   16 #>   [818,]   16 #>   [819,]   16 #>   [820,]   16 #>   [821,]   16 #>   [822,]   16 #>   [823,]   16 #>   [824,]   16 #>   [825,]   16 #>   [826,]   16 #>   [827,]   16 #>   [828,]   16 #>   [829,]   16 #>   [830,]   16 #>   [831,]   16 #>   [832,]   16 #>   [833,]   16 #>   [834,]   16 #>   [835,]   16 #>   [836,]   16 #>   [837,]   16 #>   [838,]   16 #>   [839,]   16 #>   [840,]   16 #>   [841,]   16 #>   [842,]   16 #>   [843,]   16 #>   [844,]   16 #>   [845,]   16 #>   [846,]   16 #>   [847,]   16 #>   [848,]   16 #>   [849,]   16 #>   [850,]   16 #>   [851,]   16 #>   [852,]   16 #>   [853,]   16 #>   [854,]   16 #>   [855,]   16 #>   [856,]   16 #>   [857,]   16 #>   [858,]   16 #>   [859,]   16 #>   [860,]   16 #>   [861,]   16 #>   [862,]   16 #>   [863,]   16 #>   [864,]   16 #>   [865,]   16 #>   [866,]   16 #>   [867,]   16 #>   [868,]   16 #>   [869,]   16 #>   [870,]   16 #>   [871,]   16 #>   [872,]   16 #>   [873,]   16 #>   [874,]   16 #>   [875,]   16 #>   [876,]   16 #>   [877,]   16 #>   [878,]   16 #>   [879,]   16 #>   [880,]   16 #>   [881,]   16 #>   [882,]   16 #>   [883,]   16 #>   [884,]   16 #>   [885,]   16 #>   [886,]   16 #>   [887,]   16 #>   [888,]   16 #>   [889,]   16 #>   [890,]   16 #>   [891,]   16 #>   [892,]   16 #>   [893,]   16 #>   [894,]   16 #>   [895,]   16 #>   [896,]   16 #>   [897,]   16 #>   [898,]   16 #>   [899,]   16 #>   [900,]   16 #>   [901,]   18 #>   [902,]   18 #>   [903,]   18 #>   [904,]   18 #>   [905,]   18 #>   [906,]   17 #>   [907,]   18 #>   [908,]   18 #>   [909,]   18 #>   [910,]   18 #>   [911,]   18 #>   [912,]   18 #>   [913,]   18 #>   [914,]   18 #>   [915,]   18 #>   [916,]   18 #>   [917,]   18 #>   [918,]   18 #>   [919,]   18 #>   [920,]   17 #>   [921,]   17 #>   [922,]   18 #>   [923,]   18 #>   [924,]   18 #>   [925,]   17 #>   [926,]   18 #>   [927,]   18 #>   [928,]   18 #>   [929,]   18 #>   [930,]   18 #>   [931,]   18 #>   [932,]   18 #>   [933,]   18 #>   [934,]   18 #>   [935,]   17 #>   [936,]   18 #>   [937,]   18 #>   [938,]   18 #>   [939,]   18 #>   [940,]   18 #>   [941,]   18 #>   [942,]   17 #>   [943,]   18 #>   [944,]   17 #>   [945,]   18 #>   [946,]   18 #>   [947,]   18 #>   [948,]   18 #>   [949,]   18 #>   [950,]   18 #>   [951,]   18 #>   [952,]   18 #>   [953,]   17 #>   [954,]   18 #>   [955,]   18 #>   [956,]   17 #>   [957,]   18 #>   [958,]   18 #>   [959,]   18 #>   [960,]   18 #>   [961,]   18 #>   [962,]   18 #>   [963,]   18 #>   [964,]   18 #>   [965,]   17 #>   [966,]   18 #>   [967,]   18 #>   [968,]   18 #>   [969,]   18 #>   [970,]   18 #>   [971,]   18 #>   [972,]   18 #>   [973,]   17 #>   [974,]   17 #>   [975,]   18 #>   [976,]   18 #>   [977,]   18 #>   [978,]   18 #>   [979,]   18 #>   [980,]   17 #>   [981,]   18 #>   [982,]   17 #>   [983,]   18 #>   [984,]   17 #>   [985,]   17 #>   [986,]   17 #>   [987,]   18 #>   [988,]   18 #>   [989,]   17 #>   [990,]   18 #>   [991,]   18 #>   [992,]   18 #>   [993,]   18 #>   [994,]   17 #>   [995,]   18 #>   [996,]   18 #>   [997,]   18 #>   [998,]   18 #>   [999,]   17 #>  [1000,]   18 #>  [1001,]   19 #>  [1002,]   19 #>  [1003,]   19 #>  [1004,]   20 #>  [1005,]   19 #>  [1006,]   20 #>  [1007,]   19 #>  [1008,]   19 #>  [1009,]   20 #>  [1010,]   20 #>  [1011,]   20 #>  [1012,]   20 #>  [1013,]   19 #>  [1014,]   20 #>  [1015,]   20 #>  [1016,]   19 #>  [1017,]   19 #>  [1018,]   20 #>  [1019,]   20 #>  [1020,]   19 #>  [1021,]   20 #>  [1022,]   19 #>  [1023,]   20 #>  [1024,]   19 #>  [1025,]   19 #>  [1026,]   20 #>  [1027,]   20 #>  [1028,]   19 #>  [1029,]   19 #>  [1030,]   20 #>  [1031,]   20 #>  [1032,]   20 #>  [1033,]   20 #>  [1034,]   20 #>  [1035,]   20 #>  [1036,]   20 #>  [1037,]   19 #>  [1038,]   20 #>  [1039,]   19 #>  [1040,]   19 #>  [1041,]   20 #>  [1042,]   20 #>  [1043,]   19 #>  [1044,]   19 #>  [1045,]   19 #>  [1046,]   19 #>  [1047,]   19 #>  [1048,]   20 #>  [1049,]   19 #>  [1050,]   19 #>  [1051,]   19 #>  [1052,]   20 #>  [1053,]   19 #>  [1054,]   19 #>  [1055,]   19 #>  [1056,]   19 #>  [1057,]   20 #>  [1058,]   20 #>  [1059,]   19 #>  [1060,]   20 #>  [1061,]   20 #>  [1062,]   20 #>  [1063,]   19 #>  [1064,]   20 #>  [1065,]   19 #>  [1066,]   19 #>  [1067,]   20 #>  [1068,]   20 #>  [1069,]   20 #>  [1070,]   19 #>  [1071,]   19 #>  [1072,]   19 #>  [1073,]   20 #>  [1074,]   20 #>  [1075,]   20 #>  [1076,]   19 #>  [1077,]   19 #>  [1078,]   19 #>  [1079,]   19 #>  [1080,]   20 #>  [1081,]   19 #>  [1082,]   20 #>  [1083,]   19 #>  [1084,]   19 #>  [1085,]   20 #>  [1086,]   19 #>  [1087,]   20 #>  [1088,]   20 #>  [1089,]   19 #>  [1090,]   19 #>  [1091,]   20 #>  [1092,]   20 #>  [1093,]   20 #>  [1094,]   19 #>  [1095,]   20 #>  [1096,]   20 #>  [1097,]   20 #>  [1098,]   19 #>  [1099,]   20 #>  [1100,]   19 #>  [1101,]   22 #>  [1102,]   21 #>  [1103,]   22 #>  [1104,]   22 #>  [1105,]   22 #>  [1106,]   21 #>  [1107,]   22 #>  [1108,]   22 #>  [1109,]   22 #>  [1110,]   22 #>  [1111,]   21 #>  [1112,]   21 #>  [1113,]   22 #>  [1114,]   22 #>  [1115,]   21 #>  [1116,]   22 #>  [1117,]   21 #>  [1118,]   22 #>  [1119,]   22 #>  [1120,]   22 #>  [1121,]   22 #>  [1122,]   22 #>  [1123,]   21 #>  [1124,]   22 #>  [1125,]   22 #>  [1126,]   22 #>  [1127,]   22 #>  [1128,]   22 #>  [1129,]   21 #>  [1130,]   21 #>  [1131,]   21 #>  [1132,]   22 #>  [1133,]   22 #>  [1134,]   21 #>  [1135,]   22 #>  [1136,]   22 #>  [1137,]   21 #>  [1138,]   22 #>  [1139,]   22 #>  [1140,]   22 #>  [1141,]   22 #>  [1142,]   21 #>  [1143,]   21 #>  [1144,]   21 #>  [1145,]   22 #>  [1146,]   22 #>  [1147,]   21 #>  [1148,]   21 #>  [1149,]   22 #>  [1150,]   22 #>  [1151,]   22 #>  [1152,]   22 #>  [1153,]   22 #>  [1154,]   22 #>  [1155,]   22 #>  [1156,]   21 #>  [1157,]   22 #>  [1158,]   22 #>  [1159,]   22 #>  [1160,]   21 #>  [1161,]   21 #>  [1162,]   22 #>  [1163,]   21 #>  [1164,]   21 #>  [1165,]   21 #>  [1166,]   22 #>  [1167,]   22 #>  [1168,]   22 #>  [1169,]   22 #>  [1170,]   21 #>  [1171,]   22 #>  [1172,]   22 #>  [1173,]   22 #>  [1174,]   22 #>  [1175,]   21 #>  [1176,]   22 #>  [1177,]   22 #>  [1178,]   21 #>  [1179,]   21 #>  [1180,]   22 #>  [1181,]   21 #>  [1182,]   22 #>  [1183,]   22 #>  [1184,]   22 #>  [1185,]   22 #>  [1186,]   22 #>  [1187,]   22 #>  [1188,]   22 #>  [1189,]   22 #>  [1190,]   22 #>  [1191,]   22 #>  [1192,]   21 #>  [1193,]   22 #>  [1194,]   21 #>  [1195,]   21 #>  [1196,]   22 #>  [1197,]   22 #>  [1198,]   22 #>  [1199,]   22 #>  [1200,]   21 #>  [1201,]   23 #>  [1202,]   23 #>  [1203,]   23 #>  [1204,]   24 #>  [1205,]   23 #>  [1206,]   23 #>  [1207,]   24 #>  [1208,]   23 #>  [1209,]   23 #>  [1210,]   24 #>  [1211,]   23 #>  [1212,]   23 #>  [1213,]   23 #>  [1214,]   23 #>  [1215,]   24 #>  [1216,]   24 #>  [1217,]   23 #>  [1218,]   24 #>  [1219,]   23 #>  [1220,]   23 #>  [1221,]   24 #>  [1222,]   23 #>  [1223,]   24 #>  [1224,]   23 #>  [1225,]   24 #>  [1226,]   23 #>  [1227,]   24 #>  [1228,]   24 #>  [1229,]   23 #>  [1230,]   23 #>  [1231,]   23 #>  [1232,]   23 #>  [1233,]   23 #>  [1234,]   23 #>  [1235,]   23 #>  [1236,]   23 #>  [1237,]   23 #>  [1238,]   23 #>  [1239,]   24 #>  [1240,]   23 #>  [1241,]   23 #>  [1242,]   23 #>  [1243,]   24 #>  [1244,]   23 #>  [1245,]   24 #>  [1246,]   23 #>  [1247,]   24 #>  [1248,]   23 #>  [1249,]   23 #>  [1250,]   23 #>  [1251,]   23 #>  [1252,]   23 #>  [1253,]   24 #>  [1254,]   23 #>  [1255,]   23 #>  [1256,]   23 #>  [1257,]   23 #>  [1258,]   23 #>  [1259,]   23 #>  [1260,]   23 #>  [1261,]   24 #>  [1262,]   23 #>  [1263,]   23 #>  [1264,]   23 #>  [1265,]   23 #>  [1266,]   23 #>  [1267,]   23 #>  [1268,]   23 #>  [1269,]   23 #>  [1270,]   23 #>  [1271,]   24 #>  [1272,]   24 #>  [1273,]   24 #>  [1274,]   24 #>  [1275,]   24 #>  [1276,]   24 #>  [1277,]   24 #>  [1278,]   23 #>  [1279,]   23 #>  [1280,]   23 #>  [1281,]   23 #>  [1282,]   23 #>  [1283,]   23 #>  [1284,]   24 #>  [1285,]   23 #>  [1286,]   23 #>  [1287,]   23 #>  [1288,]   24 #>  [1289,]   23 #>  [1290,]   23 #>  [1291,]   23 #>  [1292,]   23 #>  [1293,]   23 #>  [1294,]   24 #>  [1295,]   24 #>  [1296,]   23 #>  [1297,]   23 #>  [1298,]   23 #>  [1299,]   23 #>  [1300,]   24 #>  [1301,]   25 #>  [1302,]   26 #>  [1303,]   25 #>  [1304,]   25 #>  [1305,]   26 #>  [1306,]   25 #>  [1307,]   26 #>  [1308,]   25 #>  [1309,]   26 #>  [1310,]   26 #>  [1311,]   25 #>  [1312,]   26 #>  [1313,]   26 #>  [1314,]   25 #>  [1315,]   25 #>  [1316,]   25 #>  [1317,]   26 #>  [1318,]   26 #>  [1319,]   25 #>  [1320,]   26 #>  [1321,]   26 #>  [1322,]   26 #>  [1323,]   26 #>  [1324,]   26 #>  [1325,]   26 #>  [1326,]   25 #>  [1327,]   26 #>  [1328,]   25 #>  [1329,]   26 #>  [1330,]   26 #>  [1331,]   26 #>  [1332,]   26 #>  [1333,]   26 #>  [1334,]   25 #>  [1335,]   25 #>  [1336,]   26 #>  [1337,]   25 #>  [1338,]   25 #>  [1339,]   26 #>  [1340,]   26 #>  [1341,]   26 #>  [1342,]   25 #>  [1343,]   26 #>  [1344,]   26 #>  [1345,]   25 #>  [1346,]   25 #>  [1347,]   26 #>  [1348,]   26 #>  [1349,]   25 #>  [1350,]   26 #>  [1351,]   26 #>  [1352,]   25 #>  [1353,]   26 #>  [1354,]   26 #>  [1355,]   25 #>  [1356,]   25 #>  [1357,]   25 #>  [1358,]   26 #>  [1359,]   25 #>  [1360,]   26 #>  [1361,]   26 #>  [1362,]   25 #>  [1363,]   26 #>  [1364,]   25 #>  [1365,]   25 #>  [1366,]   26 #>  [1367,]   26 #>  [1368,]   25 #>  [1369,]   25 #>  [1370,]   26 #>  [1371,]   26 #>  [1372,]   25 #>  [1373,]   25 #>  [1374,]   26 #>  [1375,]   26 #>  [1376,]   26 #>  [1377,]   25 #>  [1378,]   26 #>  [1379,]   25 #>  [1380,]   26 #>  [1381,]   26 #>  [1382,]   25 #>  [1383,]   26 #>  [1384,]   26 #>  [1385,]   25 #>  [1386,]   26 #>  [1387,]   26 #>  [1388,]   26 #>  [1389,]   25 #>  [1390,]   26 #>  [1391,]   25 #>  [1392,]   26 #>  [1393,]   26 #>  [1394,]   25 #>  [1395,]   26 #>  [1396,]   25 #>  [1397,]   25 #>  [1398,]   25 #>  [1399,]   26 #>  [1400,]   25 #>  [1401,]   27 #>  [1402,]   28 #>  [1403,]   28 #>  [1404,]   27 #>  [1405,]   27 #>  [1406,]   28 #>  [1407,]   28 #>  [1408,]   27 #>  [1409,]   27 #>  [1410,]   27 #>  [1411,]   27 #>  [1412,]   28 #>  [1413,]   27 #>  [1414,]   27 #>  [1415,]   27 #>  [1416,]   27 #>  [1417,]   27 #>  [1418,]   28 #>  [1419,]   28 #>  [1420,]   28 #>  [1421,]   27 #>  [1422,]   27 #>  [1423,]   28 #>  [1424,]   27 #>  [1425,]   28 #>  [1426,]   27 #>  [1427,]   27 #>  [1428,]   28 #>  [1429,]   27 #>  [1430,]   27 #>  [1431,]   28 #>  [1432,]   28 #>  [1433,]   28 #>  [1434,]   28 #>  [1435,]   27 #>  [1436,]   27 #>  [1437,]   27 #>  [1438,]   27 #>  [1439,]   27 #>  [1440,]   28 #>  [1441,]   27 #>  [1442,]   28 #>  [1443,]   27 #>  [1444,]   27 #>  [1445,]   27 #>  [1446,]   27 #>  [1447,]   27 #>  [1448,]   28 #>  [1449,]   27 #>  [1450,]   27 #>  [1451,]   27 #>  [1452,]   27 #>  [1453,]   27 #>  [1454,]   27 #>  [1455,]   27 #>  [1456,]   28 #>  [1457,]   27 #>  [1458,]   27 #>  [1459,]   27 #>  [1460,]   28 #>  [1461,]   27 #>  [1462,]   27 #>  [1463,]   27 #>  [1464,]   28 #>  [1465,]   28 #>  [1466,]   27 #>  [1467,]   27 #>  [1468,]   27 #>  [1469,]   27 #>  [1470,]   28 #>  [1471,]   28 #>  [1472,]   27 #>  [1473,]   28 #>  [1474,]   27 #>  [1475,]   27 #>  [1476,]   27 #>  [1477,]   27 #>  [1478,]   28 #>  [1479,]   27 #>  [1480,]   27 #>  [1481,]   27 #>  [1482,]   27 #>  [1483,]   27 #>  [1484,]   28 #>  [1485,]   27 #>  [1486,]   27 #>  [1487,]   27 #>  [1488,]   27 #>  [1489,]   27 #>  [1490,]   27 #>  [1491,]   27 #>  [1492,]   27 #>  [1493,]   28 #>  [1494,]   27 #>  [1495,]   27 #>  [1496,]   27 #>  [1497,]   28 #>  [1498,]   28 #>  [1499,]   27 #>  [1500,]   28 #>  [1501,]   29 #>  [1502,]   30 #>  [1503,]   29 #>  [1504,]   29 #>  [1505,]   29 #>  [1506,]   29 #>  [1507,]   29 #>  [1508,]   29 #>  [1509,]   30 #>  [1510,]   30 #>  [1511,]   29 #>  [1512,]   30 #>  [1513,]   29 #>  [1514,]   29 #>  [1515,]   29 #>  [1516,]   29 #>  [1517,]   29 #>  [1518,]   29 #>  [1519,]   29 #>  [1520,]   29 #>  [1521,]   30 #>  [1522,]   29 #>  [1523,]   29 #>  [1524,]   29 #>  [1525,]   29 #>  [1526,]   29 #>  [1527,]   29 #>  [1528,]   29 #>  [1529,]   30 #>  [1530,]   29 #>  [1531,]   29 #>  [1532,]   29 #>  [1533,]   30 #>  [1534,]   29 #>  [1535,]   29 #>  [1536,]   29 #>  [1537,]   29 #>  [1538,]   29 #>  [1539,]   29 #>  [1540,]   29 #>  [1541,]   29 #>  [1542,]   29 #>  [1543,]   29 #>  [1544,]   29 #>  [1545,]   29 #>  [1546,]   29 #>  [1547,]   29 #>  [1548,]   29 #>  [1549,]   29 #>  [1550,]   29 #>  [1551,]   29 #>  [1552,]   29 #>  [1553,]   29 #>  [1554,]   29 #>  [1555,]   29 #>  [1556,]   29 #>  [1557,]   29 #>  [1558,]   29 #>  [1559,]   29 #>  [1560,]   30 #>  [1561,]   29 #>  [1562,]   29 #>  [1563,]   29 #>  [1564,]   29 #>  [1565,]   29 #>  [1566,]   29 #>  [1567,]   29 #>  [1568,]   29 #>  [1569,]   29 #>  [1570,]   30 #>  [1571,]   29 #>  [1572,]   29 #>  [1573,]   29 #>  [1574,]   29 #>  [1575,]   29 #>  [1576,]   29 #>  [1577,]   29 #>  [1578,]   29 #>  [1579,]   29 #>  [1580,]   29 #>  [1581,]   30 #>  [1582,]   29 #>  [1583,]   29 #>  [1584,]   29 #>  [1585,]   29 #>  [1586,]   30 #>  [1587,]   29 #>  [1588,]   29 #>  [1589,]   29 #>  [1590,]   29 #>  [1591,]   29 #>  [1592,]   29 #>  [1593,]   29 #>  [1594,]   29 #>  [1595,]   29 #>  [1596,]   29 #>  [1597,]   29 #>  [1598,]   29 #>  [1599,]   29 #>  [1600,]   29 #>  [1601,]   31 #>  [1602,]   31 #>  [1603,]   31 #>  [1604,]   32 #>  [1605,]   31 #>  [1606,]   31 #>  [1607,]   32 #>  [1608,]   31 #>  [1609,]   31 #>  [1610,]   32 #>  [1611,]   31 #>  [1612,]   31 #>  [1613,]   31 #>  [1614,]   31 #>  [1615,]   32 #>  [1616,]   32 #>  [1617,]   31 #>  [1618,]   32 #>  [1619,]   31 #>  [1620,]   31 #>  [1621,]   32 #>  [1622,]   31 #>  [1623,]   32 #>  [1624,]   31 #>  [1625,]   32 #>  [1626,]   31 #>  [1627,]   32 #>  [1628,]   31 #>  [1629,]   31 #>  [1630,]   31 #>  [1631,]   31 #>  [1632,]   31 #>  [1633,]   31 #>  [1634,]   31 #>  [1635,]   31 #>  [1636,]   31 #>  [1637,]   31 #>  [1638,]   31 #>  [1639,]   32 #>  [1640,]   31 #>  [1641,]   31 #>  [1642,]   31 #>  [1643,]   32 #>  [1644,]   31 #>  [1645,]   32 #>  [1646,]   31 #>  [1647,]   31 #>  [1648,]   31 #>  [1649,]   31 #>  [1650,]   31 #>  [1651,]   31 #>  [1652,]   31 #>  [1653,]   32 #>  [1654,]   31 #>  [1655,]   31 #>  [1656,]   31 #>  [1657,]   31 #>  [1658,]   31 #>  [1659,]   31 #>  [1660,]   31 #>  [1661,]   32 #>  [1662,]   31 #>  [1663,]   31 #>  [1664,]   31 #>  [1665,]   31 #>  [1666,]   31 #>  [1667,]   31 #>  [1668,]   31 #>  [1669,]   31 #>  [1670,]   31 #>  [1671,]   32 #>  [1672,]   32 #>  [1673,]   32 #>  [1674,]   32 #>  [1675,]   32 #>  [1676,]   32 #>  [1677,]   32 #>  [1678,]   31 #>  [1679,]   31 #>  [1680,]   31 #>  [1681,]   31 #>  [1682,]   31 #>  [1683,]   31 #>  [1684,]   32 #>  [1685,]   31 #>  [1686,]   31 #>  [1687,]   31 #>  [1688,]   31 #>  [1689,]   31 #>  [1690,]   31 #>  [1691,]   31 #>  [1692,]   31 #>  [1693,]   31 #>  [1694,]   32 #>  [1695,]   32 #>  [1696,]   31 #>  [1697,]   31 #>  [1698,]   31 #>  [1699,]   31 #>  [1700,]   32 #>  [1701,]   33 #>  [1702,]   33 #>  [1703,]   33 #>  [1704,]   34 #>  [1705,]   33 #>  [1706,]   33 #>  [1707,]   33 #>  [1708,]   33 #>  [1709,]   33 #>  [1710,]   34 #>  [1711,]   33 #>  [1712,]   33 #>  [1713,]   33 #>  [1714,]   33 #>  [1715,]   33 #>  [1716,]   33 #>  [1717,]   33 #>  [1718,]   34 #>  [1719,]   33 #>  [1720,]   33 #>  [1721,]   34 #>  [1722,]   33 #>  [1723,]   33 #>  [1724,]   33 #>  [1725,]   34 #>  [1726,]   33 #>  [1727,]   33 #>  [1728,]   33 #>  [1729,]   33 #>  [1730,]   33 #>  [1731,]   33 #>  [1732,]   33 #>  [1733,]   33 #>  [1734,]   33 #>  [1735,]   33 #>  [1736,]   33 #>  [1737,]   33 #>  [1738,]   33 #>  [1739,]   34 #>  [1740,]   33 #>  [1741,]   33 #>  [1742,]   33 #>  [1743,]   34 #>  [1744,]   33 #>  [1745,]   34 #>  [1746,]   33 #>  [1747,]   33 #>  [1748,]   33 #>  [1749,]   33 #>  [1750,]   33 #>  [1751,]   33 #>  [1752,]   33 #>  [1753,]   34 #>  [1754,]   33 #>  [1755,]   33 #>  [1756,]   33 #>  [1757,]   33 #>  [1758,]   33 #>  [1759,]   33 #>  [1760,]   33 #>  [1761,]   33 #>  [1762,]   33 #>  [1763,]   33 #>  [1764,]   33 #>  [1765,]   33 #>  [1766,]   33 #>  [1767,]   33 #>  [1768,]   33 #>  [1769,]   33 #>  [1770,]   33 #>  [1771,]   33 #>  [1772,]   34 #>  [1773,]   34 #>  [1774,]   34 #>  [1775,]   34 #>  [1776,]   34 #>  [1777,]   34 #>  [1778,]   33 #>  [1779,]   33 #>  [1780,]   33 #>  [1781,]   33 #>  [1782,]   33 #>  [1783,]   33 #>  [1784,]   33 #>  [1785,]   33 #>  [1786,]   33 #>  [1787,]   33 #>  [1788,]   33 #>  [1789,]   33 #>  [1790,]   33 #>  [1791,]   33 #>  [1792,]   33 #>  [1793,]   33 #>  [1794,]   34 #>  [1795,]   34 #>  [1796,]   33 #>  [1797,]   33 #>  [1798,]   33 #>  [1799,]   33 #>  [1800,]   33 #>  [1801,]   35 #>  [1802,]   36 #>  [1803,]   35 #>  [1804,]   35 #>  [1805,]   35 #>  [1806,]   35 #>  [1807,]   35 #>  [1808,]   35 #>  [1809,]   36 #>  [1810,]   36 #>  [1811,]   35 #>  [1812,]   36 #>  [1813,]   35 #>  [1814,]   35 #>  [1815,]   35 #>  [1816,]   35 #>  [1817,]   35 #>  [1818,]   35 #>  [1819,]   35 #>  [1820,]   35 #>  [1821,]   36 #>  [1822,]   35 #>  [1823,]   35 #>  [1824,]   35 #>  [1825,]   35 #>  [1826,]   35 #>  [1827,]   35 #>  [1828,]   35 #>  [1829,]   36 #>  [1830,]   35 #>  [1831,]   35 #>  [1832,]   35 #>  [1833,]   36 #>  [1834,]   35 #>  [1835,]   35 #>  [1836,]   35 #>  [1837,]   35 #>  [1838,]   35 #>  [1839,]   35 #>  [1840,]   35 #>  [1841,]   35 #>  [1842,]   35 #>  [1843,]   35 #>  [1844,]   35 #>  [1845,]   35 #>  [1846,]   35 #>  [1847,]   35 #>  [1848,]   35 #>  [1849,]   35 #>  [1850,]   35 #>  [1851,]   35 #>  [1852,]   35 #>  [1853,]   35 #>  [1854,]   35 #>  [1855,]   35 #>  [1856,]   35 #>  [1857,]   35 #>  [1858,]   35 #>  [1859,]   35 #>  [1860,]   36 #>  [1861,]   35 #>  [1862,]   35 #>  [1863,]   35 #>  [1864,]   35 #>  [1865,]   35 #>  [1866,]   35 #>  [1867,]   35 #>  [1868,]   35 #>  [1869,]   35 #>  [1870,]   36 #>  [1871,]   35 #>  [1872,]   35 #>  [1873,]   35 #>  [1874,]   35 #>  [1875,]   35 #>  [1876,]   35 #>  [1877,]   35 #>  [1878,]   35 #>  [1879,]   35 #>  [1880,]   35 #>  [1881,]   35 #>  [1882,]   35 #>  [1883,]   35 #>  [1884,]   35 #>  [1885,]   35 #>  [1886,]   36 #>  [1887,]   35 #>  [1888,]   35 #>  [1889,]   35 #>  [1890,]   35 #>  [1891,]   35 #>  [1892,]   35 #>  [1893,]   35 #>  [1894,]   35 #>  [1895,]   35 #>  [1896,]   35 #>  [1897,]   35 #>  [1898,]   35 #>  [1899,]   35 #>  [1900,]   35 #>  [1901,]   37 #>  [1902,]   38 #>  [1903,]   37 #>  [1904,]   37 #>  [1905,]   37 #>  [1906,]   37 #>  [1907,]   37 #>  [1908,]   37 #>  [1909,]   38 #>  [1910,]   38 #>  [1911,]   37 #>  [1912,]   38 #>  [1913,]   38 #>  [1914,]   37 #>  [1915,]   37 #>  [1916,]   37 #>  [1917,]   38 #>  [1918,]   38 #>  [1919,]   37 #>  [1920,]   38 #>  [1921,]   38 #>  [1922,]   37 #>  [1923,]   38 #>  [1924,]   38 #>  [1925,]   37 #>  [1926,]   37 #>  [1927,]   37 #>  [1928,]   37 #>  [1929,]   38 #>  [1930,]   37 #>  [1931,]   38 #>  [1932,]   38 #>  [1933,]   38 #>  [1934,]   37 #>  [1935,]   37 #>  [1936,]   38 #>  [1937,]   37 #>  [1938,]   37 #>  [1939,]   37 #>  [1940,]   38 #>  [1941,]   37 #>  [1942,]   37 #>  [1943,]   37 #>  [1944,]   37 #>  [1945,]   37 #>  [1946,]   37 #>  [1947,]   37 #>  [1948,]   37 #>  [1949,]   37 #>  [1950,]   37 #>  [1951,]   37 #>  [1952,]   37 #>  [1953,]   38 #>  [1954,]   37 #>  [1955,]   37 #>  [1956,]   37 #>  [1957,]   37 #>  [1958,]   37 #>  [1959,]   37 #>  [1960,]   38 #>  [1961,]   38 #>  [1962,]   37 #>  [1963,]   38 #>  [1964,]   37 #>  [1965,]   37 #>  [1966,]   37 #>  [1967,]   37 #>  [1968,]   37 #>  [1969,]   37 #>  [1970,]   38 #>  [1971,]   37 #>  [1972,]   37 #>  [1973,]   37 #>  [1974,]   37 #>  [1975,]   38 #>  [1976,]   37 #>  [1977,]   37 #>  [1978,]   37 #>  [1979,]   37 #>  [1980,]   38 #>  [1981,]   38 #>  [1982,]   37 #>  [1983,]   38 #>  [1984,]   38 #>  [1985,]   37 #>  [1986,]   38 #>  [1987,]   37 #>  [1988,]   38 #>  [1989,]   37 #>  [1990,]   37 #>  [1991,]   37 #>  [1992,]   37 #>  [1993,]   37 #>  [1994,]   37 #>  [1995,]   37 #>  [1996,]   37 #>  [1997,]   37 #>  [1998,]   37 #>  [1999,]   37 #>  [2000,]   37 #>  [2001,]   39 #>  [2002,]   39 #>  [2003,]   39 #>  [2004,]   39 #>  [2005,]   39 #>  [2006,]   39 #>  [2007,]   39 #>  [2008,]   39 #>  [2009,]   39 #>  [2010,]   39 #>  [2011,]   39 #>  [2012,]   39 #>  [2013,]   39 #>  [2014,]   39 #>  [2015,]   39 #>  [2016,]   39 #>  [2017,]   39 #>  [2018,]   39 #>  [2019,]   39 #>  [2020,]   39 #>  [2021,]   39 #>  [2022,]   39 #>  [2023,]   39 #>  [2024,]   39 #>  [2025,]   39 #>  [2026,]   39 #>  [2027,]   39 #>  [2028,]   39 #>  [2029,]   39 #>  [2030,]   39 #>  [2031,]   39 #>  [2032,]   39 #>  [2033,]   39 #>  [2034,]   39 #>  [2035,]   39 #>  [2036,]   39 #>  [2037,]   39 #>  [2038,]   39 #>  [2039,]   39 #>  [2040,]   39 #>  [2041,]   39 #>  [2042,]   39 #>  [2043,]   39 #>  [2044,]   39 #>  [2045,]   39 #>  [2046,]   39 #>  [2047,]   39 #>  [2048,]   39 #>  [2049,]   39 #>  [2050,]   39 #>  [2051,]   39 #>  [2052,]   39 #>  [2053,]   39 #>  [2054,]   39 #>  [2055,]   39 #>  [2056,]   39 #>  [2057,]   39 #>  [2058,]   39 #>  [2059,]   39 #>  [2060,]   39 #>  [2061,]   39 #>  [2062,]   39 #>  [2063,]   39 #>  [2064,]   39 #>  [2065,]   39 #>  [2066,]   39 #>  [2067,]   39 #>  [2068,]   39 #>  [2069,]   39 #>  [2070,]   39 #>  [2071,]   39 #>  [2072,]   39 #>  [2073,]   39 #>  [2074,]   39 #>  [2075,]   39 #>  [2076,]   39 #>  [2077,]   39 #>  [2078,]   39 #>  [2079,]   39 #>  [2080,]   39 #>  [2081,]   39 #>  [2082,]   39 #>  [2083,]   39 #>  [2084,]   39 #>  [2085,]   39 #>  [2086,]   39 #>  [2087,]   39 #>  [2088,]   39 #>  [2089,]   39 #>  [2090,]   39 #>  [2091,]   39 #>  [2092,]   39 #>  [2093,]   39 #>  [2094,]   39 #>  [2095,]   39 #>  [2096,]   39 #>  [2097,]   39 #>  [2098,]   39 #>  [2099,]   39 #>  [2100,]   39 #>  [2101,]   40 #>  [2102,]   40 #>  [2103,]   40 #>  [2104,]   40 #>  [2105,]   40 #>  [2106,]   40 #>  [2107,]   40 #>  [2108,]   40 #>  [2109,]   40 #>  [2110,]   41 #>  [2111,]   40 #>  [2112,]   40 #>  [2113,]   40 #>  [2114,]   40 #>  [2115,]   40 #>  [2116,]   40 #>  [2117,]   40 #>  [2118,]   41 #>  [2119,]   40 #>  [2120,]   40 #>  [2121,]   40 #>  [2122,]   40 #>  [2123,]   40 #>  [2124,]   40 #>  [2125,]   41 #>  [2126,]   40 #>  [2127,]   40 #>  [2128,]   40 #>  [2129,]   40 #>  [2130,]   40 #>  [2131,]   40 #>  [2132,]   40 #>  [2133,]   40 #>  [2134,]   40 #>  [2135,]   40 #>  [2136,]   40 #>  [2137,]   40 #>  [2138,]   40 #>  [2139,]   41 #>  [2140,]   40 #>  [2141,]   40 #>  [2142,]   40 #>  [2143,]   41 #>  [2144,]   40 #>  [2145,]   41 #>  [2146,]   40 #>  [2147,]   40 #>  [2148,]   40 #>  [2149,]   40 #>  [2150,]   40 #>  [2151,]   40 #>  [2152,]   40 #>  [2153,]   40 #>  [2154,]   40 #>  [2155,]   40 #>  [2156,]   40 #>  [2157,]   40 #>  [2158,]   40 #>  [2159,]   40 #>  [2160,]   40 #>  [2161,]   40 #>  [2162,]   40 #>  [2163,]   40 #>  [2164,]   40 #>  [2165,]   40 #>  [2166,]   40 #>  [2167,]   40 #>  [2168,]   40 #>  [2169,]   40 #>  [2170,]   40 #>  [2171,]   40 #>  [2172,]   40 #>  [2173,]   41 #>  [2174,]   40 #>  [2175,]   41 #>  [2176,]   40 #>  [2177,]   41 #>  [2178,]   40 #>  [2179,]   40 #>  [2180,]   40 #>  [2181,]   40 #>  [2182,]   40 #>  [2183,]   40 #>  [2184,]   40 #>  [2185,]   40 #>  [2186,]   40 #>  [2187,]   40 #>  [2188,]   40 #>  [2189,]   40 #>  [2190,]   40 #>  [2191,]   40 #>  [2192,]   40 #>  [2193,]   40 #>  [2194,]   40 #>  [2195,]   40 #>  [2196,]   40 #>  [2197,]   40 #>  [2198,]   40 #>  [2199,]   40 #>  [2200,]   40 #>  [2201,]   43 #>  [2202,]   42 #>  [2203,]   42 #>  [2204,]   43 #>  [2205,]   43 #>  [2206,]   43 #>  [2207,]   42 #>  [2208,]   43 #>  [2209,]   43 #>  [2210,]   42 #>  [2211,]   43 #>  [2212,]   43 #>  [2213,]   42 #>  [2214,]   43 #>  [2215,]   43 #>  [2216,]   42 #>  [2217,]   42 #>  [2218,]   42 #>  [2219,]   42 #>  [2220,]   43 #>  [2221,]   42 #>  [2222,]   42 #>  [2223,]   42 #>  [2224,]   42 #>  [2225,]   42 #>  [2226,]   43 #>  [2227,]   43 #>  [2228,]   43 #>  [2229,]   42 #>  [2230,]   42 #>  [2231,]   42 #>  [2232,]   42 #>  [2233,]   43 #>  [2234,]   42 #>  [2235,]   42 #>  [2236,]   42 #>  [2237,]   42 #>  [2238,]   43 #>  [2239,]   42 #>  [2240,]   42 #>  [2241,]   43 #>  [2242,]   43 #>  [2243,]   43 #>  [2244,]   42 #>  [2245,]   43 #>  [2246,]   43 #>  [2247,]   42 #>  [2248,]   42 #>  [2249,]   42 #>  [2250,]   43 #>  [2251,]   43 #>  [2252,]   43 #>  [2253,]   43 #>  [2254,]   42 #>  [2255,]   43 #>  [2256,]   43 #>  [2257,]   43 #>  [2258,]   43 #>  [2259,]   42 #>  [2260,]   43 #>  [2261,]   43 #>  [2262,]   42 #>  [2263,]   43 #>  [2264,]   43 #>  [2265,]   43 #>  [2266,]   43 #>  [2267,]   43 #>  [2268,]   43 #>  [2269,]   43 #>  [2270,]   42 #>  [2271,]   43 #>  [2272,]   43 #>  [2273,]   43 #>  [2274,]   43 #>  [2275,]   43 #>  [2276,]   43 #>  [2277,]   42 #>  [2278,]   43 #>  [2279,]   42 #>  [2280,]   42 #>  [2281,]   43 #>  [2282,]   43 #>  [2283,]   42 #>  [2284,]   43 #>  [2285,]   42 #>  [2286,]   42 #>  [2287,]   43 #>  [2288,]   43 #>  [2289,]   43 #>  [2290,]   43 #>  [2291,]   43 #>  [2292,]   43 #>  [2293,]   42 #>  [2294,]   43 #>  [2295,]   42 #>  [2296,]   43 #>  [2297,]   43 #>  [2298,]   42 #>  [2299,]   43 #>  [2300,]   42 #>  [2301,]   45 #>  [2302,]   45 #>  [2303,]   44 #>  [2304,]   45 #>  [2305,]   45 #>  [2306,]   45 #>  [2307,]   44 #>  [2308,]   44 #>  [2309,]   45 #>  [2310,]   45 #>  [2311,]   45 #>  [2312,]   45 #>  [2313,]   45 #>  [2314,]   45 #>  [2315,]   45 #>  [2316,]   45 #>  [2317,]   45 #>  [2318,]   45 #>  [2319,]   45 #>  [2320,]   44 #>  [2321,]   45 #>  [2322,]   45 #>  [2323,]   45 #>  [2324,]   45 #>  [2325,]   44 #>  [2326,]   45 #>  [2327,]   45 #>  [2328,]   45 #>  [2329,]   45 #>  [2330,]   45 #>  [2331,]   45 #>  [2332,]   45 #>  [2333,]   45 #>  [2334,]   45 #>  [2335,]   45 #>  [2336,]   45 #>  [2337,]   45 #>  [2338,]   45 #>  [2339,]   44 #>  [2340,]   45 #>  [2341,]   45 #>  [2342,]   45 #>  [2343,]   45 #>  [2344,]   44 #>  [2345,]   45 #>  [2346,]   44 #>  [2347,]   45 #>  [2348,]   45 #>  [2349,]   44 #>  [2350,]   44 #>  [2351,]   45 #>  [2352,]   45 #>  [2353,]   44 #>  [2354,]   45 #>  [2355,]   44 #>  [2356,]   44 #>  [2357,]   45 #>  [2358,]   45 #>  [2359,]   44 #>  [2360,]   45 #>  [2361,]   45 #>  [2362,]   45 #>  [2363,]   45 #>  [2364,]   45 #>  [2365,]   44 #>  [2366,]   44 #>  [2367,]   45 #>  [2368,]   45 #>  [2369,]   45 #>  [2370,]   44 #>  [2371,]   45 #>  [2372,]   45 #>  [2373,]   45 #>  [2374,]   45 #>  [2375,]   45 #>  [2376,]   45 #>  [2377,]   45 #>  [2378,]   45 #>  [2379,]   45 #>  [2380,]   45 #>  [2381,]   45 #>  [2382,]   45 #>  [2383,]   45 #>  [2384,]   44 #>  [2385,]   45 #>  [2386,]   44 #>  [2387,]   45 #>  [2388,]   45 #>  [2389,]   45 #>  [2390,]   44 #>  [2391,]   45 #>  [2392,]   45 #>  [2393,]   45 #>  [2394,]   45 #>  [2395,]   45 #>  [2396,]   45 #>  [2397,]   45 #>  [2398,]   44 #>  [2399,]   45 #>  [2400,]   44 #>  [2401,]   46 #>  [2402,]   46 #>  [2403,]   46 #>  [2404,]   47 #>  [2405,]   46 #>  [2406,]   46 #>  [2407,]   46 #>  [2408,]   46 #>  [2409,]   46 #>  [2410,]   46 #>  [2411,]   46 #>  [2412,]   46 #>  [2413,]   46 #>  [2414,]   47 #>  [2415,]   46 #>  [2416,]   46 #>  [2417,]   46 #>  [2418,]   46 #>  [2419,]   46 #>  [2420,]   46 #>  [2421,]   46 #>  [2422,]   46 #>  [2423,]   46 #>  [2424,]   46 #>  [2425,]   46 #>  [2426,]   46 #>  [2427,]   47 #>  [2428,]   46 #>  [2429,]   46 #>  [2430,]   46 #>  [2431,]   46 #>  [2432,]   46 #>  [2433,]   46 #>  [2434,]   46 #>  [2435,]   46 #>  [2436,]   46 #>  [2437,]   46 #>  [2438,]   46 #>  [2439,]   46 #>  [2440,]   46 #>  [2441,]   46 #>  [2442,]   46 #>  [2443,]   46 #>  [2444,]   46 #>  [2445,]   46 #>  [2446,]   46 #>  [2447,]   46 #>  [2448,]   46 #>  [2449,]   46 #>  [2450,]   46 #>  [2451,]   46 #>  [2452,]   46 #>  [2453,]   46 #>  [2454,]   46 #>  [2455,]   46 #>  [2456,]   46 #>  [2457,]   46 #>  [2458,]   46 #>  [2459,]   46 #>  [2460,]   46 #>  [2461,]   47 #>  [2462,]   46 #>  [2463,]   46 #>  [2464,]   46 #>  [2465,]   46 #>  [2466,]   46 #>  [2467,]   46 #>  [2468,]   46 #>  [2469,]   47 #>  [2470,]   46 #>  [2471,]   46 #>  [2472,]   46 #>  [2473,]   46 #>  [2474,]   46 #>  [2475,]   46 #>  [2476,]   46 #>  [2477,]   46 #>  [2478,]   46 #>  [2479,]   46 #>  [2480,]   46 #>  [2481,]   46 #>  [2482,]   47 #>  [2483,]   46 #>  [2484,]   46 #>  [2485,]   46 #>  [2486,]   46 #>  [2487,]   46 #>  [2488,]   46 #>  [2489,]   46 #>  [2490,]   46 #>  [2491,]   46 #>  [2492,]   47 #>  [2493,]   47 #>  [2494,]   46 #>  [2495,]   46 #>  [2496,]   47 #>  [2497,]   47 #>  [2498,]   46 #>  [2499,]   46 #>  [2500,]   46 #>  [2501,]   49 #>  [2502,]   49 #>  [2503,]   49 #>  [2504,]   49 #>  [2505,]   49 #>  [2506,]   49 #>  [2507,]   49 #>  [2508,]   49 #>  [2509,]   49 #>  [2510,]   49 #>  [2511,]   49 #>  [2512,]   49 #>  [2513,]   49 #>  [2514,]   49 #>  [2515,]   48 #>  [2516,]   49 #>  [2517,]   48 #>  [2518,]   49 #>  [2519,]   49 #>  [2520,]   49 #>  [2521,]   49 #>  [2522,]   49 #>  [2523,]   49 #>  [2524,]   49 #>  [2525,]   49 #>  [2526,]   49 #>  [2527,]   49 #>  [2528,]   49 #>  [2529,]   49 #>  [2530,]   49 #>  [2531,]   48 #>  [2532,]   49 #>  [2533,]   49 #>  [2534,]   48 #>  [2535,]   49 #>  [2536,]   49 #>  [2537,]   48 #>  [2538,]   49 #>  [2539,]   49 #>  [2540,]   49 #>  [2541,]   49 #>  [2542,]   48 #>  [2543,]   48 #>  [2544,]   48 #>  [2545,]   49 #>  [2546,]   49 #>  [2547,]   49 #>  [2548,]   48 #>  [2549,]   49 #>  [2550,]   49 #>  [2551,]   49 #>  [2552,]   49 #>  [2553,]   49 #>  [2554,]   49 #>  [2555,]   49 #>  [2556,]   49 #>  [2557,]   49 #>  [2558,]   49 #>  [2559,]   49 #>  [2560,]   49 #>  [2561,]   49 #>  [2562,]   49 #>  [2563,]   48 #>  [2564,]   49 #>  [2565,]   49 #>  [2566,]   49 #>  [2567,]   49 #>  [2568,]   49 #>  [2569,]   49 #>  [2570,]   48 #>  [2571,]   49 #>  [2572,]   49 #>  [2573,]   49 #>  [2574,]   49 #>  [2575,]   48 #>  [2576,]   49 #>  [2577,]   49 #>  [2578,]   48 #>  [2579,]   48 #>  [2580,]   49 #>  [2581,]   49 #>  [2582,]   49 #>  [2583,]   49 #>  [2584,]   49 #>  [2585,]   49 #>  [2586,]   49 #>  [2587,]   49 #>  [2588,]   49 #>  [2589,]   49 #>  [2590,]   49 #>  [2591,]   49 #>  [2592,]   49 #>  [2593,]   49 #>  [2594,]   48 #>  [2595,]   48 #>  [2596,]   49 #>  [2597,]   49 #>  [2598,]   49 #>  [2599,]   49 #>  [2600,]   48 #>  [2601,]   51 #>  [2602,]   50 #>  [2603,]   50 #>  [2604,]   50 #>  [2605,]   50 #>  [2606,]   50 #>  [2607,]   50 #>  [2608,]   50 #>  [2609,]   51 #>  [2610,]   50 #>  [2611,]   50 #>  [2612,]   50 #>  [2613,]   51 #>  [2614,]   50 #>  [2615,]   50 #>  [2616,]   50 #>  [2617,]   51 #>  [2618,]   51 #>  [2619,]   50 #>  [2620,]   51 #>  [2621,]   50 #>  [2622,]   50 #>  [2623,]   50 #>  [2624,]   50 #>  [2625,]   50 #>  [2626,]   50 #>  [2627,]   51 #>  [2628,]   50 #>  [2629,]   50 #>  [2630,]   50 #>  [2631,]   50 #>  [2632,]   50 #>  [2633,]   51 #>  [2634,]   50 #>  [2635,]   50 #>  [2636,]   51 #>  [2637,]   50 #>  [2638,]   51 #>  [2639,]   50 #>  [2640,]   50 #>  [2641,]   50 #>  [2642,]   51 #>  [2643,]   50 #>  [2644,]   50 #>  [2645,]   50 #>  [2646,]   50 #>  [2647,]   50 #>  [2648,]   50 #>  [2649,]   50 #>  [2650,]   50 #>  [2651,]   51 #>  [2652,]   50 #>  [2653,]   51 #>  [2654,]   51 #>  [2655,]   50 #>  [2656,]   51 #>  [2657,]   50 #>  [2658,]   50 #>  [2659,]   50 #>  [2660,]   50 #>  [2661,]   50 #>  [2662,]   51 #>  [2663,]   50 #>  [2664,]   50 #>  [2665,]   51 #>  [2666,]   51 #>  [2667,]   50 #>  [2668,]   50 #>  [2669,]   50 #>  [2670,]   50 #>  [2671,]   50 #>  [2672,]   50 #>  [2673,]   50 #>  [2674,]   50 #>  [2675,]   50 #>  [2676,]   50 #>  [2677,]   51 #>  [2678,]   50 #>  [2679,]   51 #>  [2680,]   50 #>  [2681,]   50 #>  [2682,]   51 #>  [2683,]   51 #>  [2684,]   51 #>  [2685,]   51 #>  [2686,]   50 #>  [2687,]   51 #>  [2688,]   50 #>  [2689,]   50 #>  [2690,]   50 #>  [2691,]   51 #>  [2692,]   50 #>  [2693,]   51 #>  [2694,]   51 #>  [2695,]   50 #>  [2696,]   50 #>  [2697,]   50 #>  [2698,]   50 #>  [2699,]   50 #>  [2700,]   50 #>  [2701,]   52 #>  [2702,]   52 #>  [2703,]   53 #>  [2704,]   52 #>  [2705,]   52 #>  [2706,]   53 #>  [2707,]   52 #>  [2708,]   52 #>  [2709,]   52 #>  [2710,]   52 #>  [2711,]   52 #>  [2712,]   52 #>  [2713,]   52 #>  [2714,]   52 #>  [2715,]   52 #>  [2716,]   52 #>  [2717,]   52 #>  [2718,]   52 #>  [2719,]   52 #>  [2720,]   52 #>  [2721,]   52 #>  [2722,]   52 #>  [2723,]   52 #>  [2724,]   52 #>  [2725,]   52 #>  [2726,]   52 #>  [2727,]   52 #>  [2728,]   52 #>  [2729,]   52 #>  [2730,]   52 #>  [2731,]   52 #>  [2732,]   52 #>  [2733,]   52 #>  [2734,]   53 #>  [2735,]   52 #>  [2736,]   52 #>  [2737,]   52 #>  [2738,]   52 #>  [2739,]   52 #>  [2740,]   52 #>  [2741,]   52 #>  [2742,]   52 #>  [2743,]   52 #>  [2744,]   52 #>  [2745,]   52 #>  [2746,]   52 #>  [2747,]   52 #>  [2748,]   52 #>  [2749,]   52 #>  [2750,]   52 #>  [2751,]   52 #>  [2752,]   52 #>  [2753,]   52 #>  [2754,]   52 #>  [2755,]   52 #>  [2756,]   52 #>  [2757,]   52 #>  [2758,]   52 #>  [2759,]   52 #>  [2760,]   53 #>  [2761,]   52 #>  [2762,]   52 #>  [2763,]   52 #>  [2764,]   52 #>  [2765,]   53 #>  [2766,]   52 #>  [2767,]   52 #>  [2768,]   52 #>  [2769,]   52 #>  [2770,]   52 #>  [2771,]   52 #>  [2772,]   52 #>  [2773,]   52 #>  [2774,]   52 #>  [2775,]   52 #>  [2776,]   52 #>  [2777,]   52 #>  [2778,]   52 #>  [2779,]   52 #>  [2780,]   52 #>  [2781,]   52 #>  [2782,]   52 #>  [2783,]   52 #>  [2784,]   52 #>  [2785,]   52 #>  [2786,]   52 #>  [2787,]   52 #>  [2788,]   52 #>  [2789,]   52 #>  [2790,]   52 #>  [2791,]   52 #>  [2792,]   52 #>  [2793,]   53 #>  [2794,]   52 #>  [2795,]   52 #>  [2796,]   52 #>  [2797,]   52 #>  [2798,]   52 #>  [2799,]   52 #>  [2800,]   52 #>  [2801,]   55 #>  [2802,]   55 #>  [2803,]   55 #>  [2804,]   55 #>  [2805,]   55 #>  [2806,]   55 #>  [2807,]   55 #>  [2808,]   55 #>  [2809,]   55 #>  [2810,]   55 #>  [2811,]   55 #>  [2812,]   55 #>  [2813,]   55 #>  [2814,]   55 #>  [2815,]   54 #>  [2816,]   55 #>  [2817,]   55 #>  [2818,]   55 #>  [2819,]   55 #>  [2820,]   55 #>  [2821,]   55 #>  [2822,]   55 #>  [2823,]   55 #>  [2824,]   55 #>  [2825,]   55 #>  [2826,]   55 #>  [2827,]   55 #>  [2828,]   55 #>  [2829,]   55 #>  [2830,]   55 #>  [2831,]   54 #>  [2832,]   55 #>  [2833,]   55 #>  [2834,]   54 #>  [2835,]   55 #>  [2836,]   55 #>  [2837,]   55 #>  [2838,]   55 #>  [2839,]   55 #>  [2840,]   55 #>  [2841,]   55 #>  [2842,]   54 #>  [2843,]   54 #>  [2844,]   54 #>  [2845,]   55 #>  [2846,]   55 #>  [2847,]   55 #>  [2848,]   55 #>  [2849,]   55 #>  [2850,]   55 #>  [2851,]   55 #>  [2852,]   55 #>  [2853,]   55 #>  [2854,]   55 #>  [2855,]   55 #>  [2856,]   55 #>  [2857,]   55 #>  [2858,]   55 #>  [2859,]   55 #>  [2860,]   55 #>  [2861,]   55 #>  [2862,]   55 #>  [2863,]   54 #>  [2864,]   55 #>  [2865,]   55 #>  [2866,]   55 #>  [2867,]   55 #>  [2868,]   55 #>  [2869,]   55 #>  [2870,]   55 #>  [2871,]   55 #>  [2872,]   55 #>  [2873,]   55 #>  [2874,]   55 #>  [2875,]   54 #>  [2876,]   55 #>  [2877,]   55 #>  [2878,]   54 #>  [2879,]   55 #>  [2880,]   55 #>  [2881,]   55 #>  [2882,]   55 #>  [2883,]   55 #>  [2884,]   55 #>  [2885,]   55 #>  [2886,]   55 #>  [2887,]   55 #>  [2888,]   55 #>  [2889,]   55 #>  [2890,]   55 #>  [2891,]   55 #>  [2892,]   55 #>  [2893,]   55 #>  [2894,]   55 #>  [2895,]   54 #>  [2896,]   55 #>  [2897,]   55 #>  [2898,]   55 #>  [2899,]   55 #>  [2900,]   55 #>  [2901,]   56 #>  [2902,]   57 #>  [2903,]   56 #>  [2904,]   56 #>  [2905,]   57 #>  [2906,]   56 #>  [2907,]   56 #>  [2908,]   56 #>  [2909,]   57 #>  [2910,]   57 #>  [2911,]   56 #>  [2912,]   57 #>  [2913,]   57 #>  [2914,]   56 #>  [2915,]   56 #>  [2916,]   56 #>  [2917,]   57 #>  [2918,]   57 #>  [2919,]   56 #>  [2920,]   57 #>  [2921,]   57 #>  [2922,]   56 #>  [2923,]   57 #>  [2924,]   57 #>  [2925,]   56 #>  [2926,]   56 #>  [2927,]   57 #>  [2928,]   56 #>  [2929,]   57 #>  [2930,]   56 #>  [2931,]   57 #>  [2932,]   57 #>  [2933,]   57 #>  [2934,]   56 #>  [2935,]   56 #>  [2936,]   57 #>  [2937,]   56 #>  [2938,]   56 #>  [2939,]   56 #>  [2940,]   57 #>  [2941,]   56 #>  [2942,]   56 #>  [2943,]   56 #>  [2944,]   56 #>  [2945,]   56 #>  [2946,]   56 #>  [2947,]   56 #>  [2948,]   56 #>  [2949,]   56 #>  [2950,]   56 #>  [2951,]   56 #>  [2952,]   56 #>  [2953,]   57 #>  [2954,]   56 #>  [2955,]   56 #>  [2956,]   56 #>  [2957,]   56 #>  [2958,]   56 #>  [2959,]   56 #>  [2960,]   57 #>  [2961,]   57 #>  [2962,]   56 #>  [2963,]   57 #>  [2964,]   56 #>  [2965,]   56 #>  [2966,]   56 #>  [2967,]   56 #>  [2968,]   56 #>  [2969,]   56 #>  [2970,]   57 #>  [2971,]   56 #>  [2972,]   56 #>  [2973,]   56 #>  [2974,]   56 #>  [2975,]   57 #>  [2976,]   56 #>  [2977,]   56 #>  [2978,]   56 #>  [2979,]   56 #>  [2980,]   57 #>  [2981,]   57 #>  [2982,]   56 #>  [2983,]   57 #>  [2984,]   57 #>  [2985,]   56 #>  [2986,]   57 #>  [2987,]   56 #>  [2988,]   57 #>  [2989,]   56 #>  [2990,]   56 #>  [2991,]   56 #>  [2992,]   56 #>  [2993,]   56 #>  [2994,]   56 #>  [2995,]   56 #>  [2996,]   56 #>  [2997,]   56 #>  [2998,]   56 #>  [2999,]   56 #>  [3000,]   56 #>  [3001,]   59 #>  [3002,]   59 #>  [3003,]   58 #>  [3004,]   59 #>  [3005,]   59 #>  [3006,]   59 #>  [3007,]   59 #>  [3008,]   59 #>  [3009,]   59 #>  [3010,]   58 #>  [3011,]   58 #>  [3012,]   59 #>  [3013,]   59 #>  [3014,]   58 #>  [3015,]   59 #>  [3016,]   59 #>  [3017,]   59 #>  [3018,]   59 #>  [3019,]   59 #>  [3020,]   59 #>  [3021,]   58 #>  [3022,]   59 #>  [3023,]   59 #>  [3024,]   59 #>  [3025,]   59 #>  [3026,]   59 #>  [3027,]   59 #>  [3028,]   58 #>  [3029,]   59 #>  [3030,]   59 #>  [3031,]   58 #>  [3032,]   58 #>  [3033,]   59 #>  [3034,]   58 #>  [3035,]   59 #>  [3036,]   59 #>  [3037,]   59 #>  [3038,]   59 #>  [3039,]   59 #>  [3040,]   58 #>  [3041,]   59 #>  [3042,]   59 #>  [3043,]   59 #>  [3044,]   59 #>  [3045,]   59 #>  [3046,]   59 #>  [3047,]   59 #>  [3048,]   58 #>  [3049,]   59 #>  [3050,]   59 #>  [3051,]   59 #>  [3052,]   59 #>  [3053,]   59 #>  [3054,]   59 #>  [3055,]   59 #>  [3056,]   59 #>  [3057,]   59 #>  [3058,]   59 #>  [3059,]   59 #>  [3060,]   59 #>  [3061,]   59 #>  [3062,]   59 #>  [3063,]   59 #>  [3064,]   59 #>  [3065,]   59 #>  [3066,]   59 #>  [3067,]   59 #>  [3068,]   59 #>  [3069,]   59 #>  [3070,]   58 #>  [3071,]   59 #>  [3072,]   59 #>  [3073,]   59 #>  [3074,]   58 #>  [3075,]   59 #>  [3076,]   59 #>  [3077,]   59 #>  [3078,]   59 #>  [3079,]   59 #>  [3080,]   59 #>  [3081,]   59 #>  [3082,]   58 #>  [3083,]   59 #>  [3084,]   59 #>  [3085,]   59 #>  [3086,]   59 #>  [3087,]   59 #>  [3088,]   59 #>  [3089,]   59 #>  [3090,]   59 #>  [3091,]   59 #>  [3092,]   59 #>  [3093,]   59 #>  [3094,]   59 #>  [3095,]   59 #>  [3096,]   59 #>  [3097,]   59 #>  [3098,]   58 #>  [3099,]   59 #>  [3100,]   59 #>  [3101,]   61 #>  [3102,]   61 #>  [3103,]   60 #>  [3104,]   61 #>  [3105,]   61 #>  [3106,]   61 #>  [3107,]   61 #>  [3108,]   61 #>  [3109,]   61 #>  [3110,]   61 #>  [3111,]   60 #>  [3112,]   60 #>  [3113,]   61 #>  [3114,]   60 #>  [3115,]   61 #>  [3116,]   61 #>  [3117,]   61 #>  [3118,]   61 #>  [3119,]   60 #>  [3120,]   60 #>  [3121,]   61 #>  [3122,]   60 #>  [3123,]   61 #>  [3124,]   61 #>  [3125,]   61 #>  [3126,]   60 #>  [3127,]   61 #>  [3128,]   61 #>  [3129,]   60 #>  [3130,]   61 #>  [3131,]   61 #>  [3132,]   60 #>  [3133,]   61 #>  [3134,]   61 #>  [3135,]   61 #>  [3136,]   60 #>  [3137,]   61 #>  [3138,]   61 #>  [3139,]   61 #>  [3140,]   60 #>  [3141,]   60 #>  [3142,]   60 #>  [3143,]   61 #>  [3144,]   61 #>  [3145,]   61 #>  [3146,]   61 #>  [3147,]   61 #>  [3148,]   60 #>  [3149,]   61 #>  [3150,]   61 #>  [3151,]   60 #>  [3152,]   61 #>  [3153,]   61 #>  [3154,]   60 #>  [3155,]   61 #>  [3156,]   61 #>  [3157,]   61 #>  [3158,]   61 #>  [3159,]   61 #>  [3160,]   60 #>  [3161,]   61 #>  [3162,]   60 #>  [3163,]   60 #>  [3164,]   61 #>  [3165,]   61 #>  [3166,]   60 #>  [3167,]   61 #>  [3168,]   60 #>  [3169,]   60 #>  [3170,]   61 #>  [3171,]   61 #>  [3172,]   61 #>  [3173,]   61 #>  [3174,]   61 #>  [3175,]   61 #>  [3176,]   61 #>  [3177,]   61 #>  [3178,]   61 #>  [3179,]   61 #>  [3180,]   60 #>  [3181,]   60 #>  [3182,]   61 #>  [3183,]   60 #>  [3184,]   61 #>  [3185,]   61 #>  [3186,]   61 #>  [3187,]   61 #>  [3188,]   61 #>  [3189,]   60 #>  [3190,]   61 #>  [3191,]   60 #>  [3192,]   61 #>  [3193,]   61 #>  [3194,]   61 #>  [3195,]   61 #>  [3196,]   61 #>  [3197,]   61 #>  [3198,]   61 #>  [3199,]   61 #>  [3200,]   61 #>  [3201,]   62 #>  [3202,]   62 #>  [3203,]   63 #>  [3204,]   62 #>  [3205,]   62 #>  [3206,]   63 #>  [3207,]   62 #>  [3208,]   62 #>  [3209,]   62 #>  [3210,]   62 #>  [3211,]   62 #>  [3212,]   63 #>  [3213,]   62 #>  [3214,]   62 #>  [3215,]   62 #>  [3216,]   62 #>  [3217,]   62 #>  [3218,]   62 #>  [3219,]   63 #>  [3220,]   63 #>  [3221,]   62 #>  [3222,]   62 #>  [3223,]   62 #>  [3224,]   62 #>  [3225,]   63 #>  [3226,]   62 #>  [3227,]   62 #>  [3228,]   63 #>  [3229,]   62 #>  [3230,]   62 #>  [3231,]   62 #>  [3232,]   62 #>  [3233,]   63 #>  [3234,]   63 #>  [3235,]   62 #>  [3236,]   62 #>  [3237,]   62 #>  [3238,]   62 #>  [3239,]   62 #>  [3240,]   62 #>  [3241,]   62 #>  [3242,]   62 #>  [3243,]   62 #>  [3244,]   62 #>  [3245,]   62 #>  [3246,]   62 #>  [3247,]   62 #>  [3248,]   62 #>  [3249,]   62 #>  [3250,]   62 #>  [3251,]   62 #>  [3252,]   62 #>  [3253,]   62 #>  [3254,]   62 #>  [3255,]   62 #>  [3256,]   62 #>  [3257,]   62 #>  [3258,]   62 #>  [3259,]   62 #>  [3260,]   63 #>  [3261,]   62 #>  [3262,]   62 #>  [3263,]   62 #>  [3264,]   62 #>  [3265,]   63 #>  [3266,]   62 #>  [3267,]   62 #>  [3268,]   62 #>  [3269,]   62 #>  [3270,]   63 #>  [3271,]   62 #>  [3272,]   62 #>  [3273,]   63 #>  [3274,]   62 #>  [3275,]   62 #>  [3276,]   62 #>  [3277,]   62 #>  [3278,]   62 #>  [3279,]   62 #>  [3280,]   62 #>  [3281,]   62 #>  [3282,]   62 #>  [3283,]   62 #>  [3284,]   62 #>  [3285,]   62 #>  [3286,]   62 #>  [3287,]   62 #>  [3288,]   62 #>  [3289,]   62 #>  [3290,]   62 #>  [3291,]   62 #>  [3292,]   62 #>  [3293,]   63 #>  [3294,]   62 #>  [3295,]   62 #>  [3296,]   62 #>  [3297,]   63 #>  [3298,]   63 #>  [3299,]   62 #>  [3300,]   62 #>  [3301,]   65 #>  [3302,]   65 #>  [3303,]   64 #>  [3304,]   64 #>  [3305,]   65 #>  [3306,]   65 #>  [3307,]   64 #>  [3308,]   64 #>  [3309,]   65 #>  [3310,]   65 #>  [3311,]   65 #>  [3312,]   64 #>  [3313,]   65 #>  [3314,]   65 #>  [3315,]   65 #>  [3316,]   65 #>  [3317,]   65 #>  [3318,]   65 #>  [3319,]   65 #>  [3320,]   65 #>  [3321,]   65 #>  [3322,]   65 #>  [3323,]   65 #>  [3324,]   65 #>  [3325,]   64 #>  [3326,]   65 #>  [3327,]   65 #>  [3328,]   65 #>  [3329,]   65 #>  [3330,]   65 #>  [3331,]   64 #>  [3332,]   65 #>  [3333,]   65 #>  [3334,]   65 #>  [3335,]   65 #>  [3336,]   65 #>  [3337,]   65 #>  [3338,]   65 #>  [3339,]   65 #>  [3340,]   65 #>  [3341,]   65 #>  [3342,]   65 #>  [3343,]   65 #>  [3344,]   65 #>  [3345,]   65 #>  [3346,]   65 #>  [3347,]   65 #>  [3348,]   65 #>  [3349,]   65 #>  [3350,]   65 #>  [3351,]   65 #>  [3352,]   64 #>  [3353,]   65 #>  [3354,]   65 #>  [3355,]   65 #>  [3356,]   65 #>  [3357,]   64 #>  [3358,]   65 #>  [3359,]   64 #>  [3360,]   64 #>  [3361,]   65 #>  [3362,]   65 #>  [3363,]   65 #>  [3364,]   65 #>  [3365,]   65 #>  [3366,]   65 #>  [3367,]   65 #>  [3368,]   64 #>  [3369,]   65 #>  [3370,]   65 #>  [3371,]   65 #>  [3372,]   65 #>  [3373,]   65 #>  [3374,]   65 #>  [3375,]   65 #>  [3376,]   65 #>  [3377,]   65 #>  [3378,]   65 #>  [3379,]   65 #>  [3380,]   65 #>  [3381,]   65 #>  [3382,]   65 #>  [3383,]   65 #>  [3384,]   65 #>  [3385,]   65 #>  [3386,]   64 #>  [3387,]   65 #>  [3388,]   65 #>  [3389,]   65 #>  [3390,]   65 #>  [3391,]   65 #>  [3392,]   65 #>  [3393,]   65 #>  [3394,]   65 #>  [3395,]   65 #>  [3396,]   64 #>  [3397,]   64 #>  [3398,]   65 #>  [3399,]   65 #>  [3400,]   65 #>  [3401,]   67 #>  [3402,]   67 #>  [3403,]   66 #>  [3404,]   66 #>  [3405,]   66 #>  [3406,]   66 #>  [3407,]   66 #>  [3408,]   67 #>  [3409,]   66 #>  [3410,]   66 #>  [3411,]   66 #>  [3412,]   67 #>  [3413,]   67 #>  [3414,]   66 #>  [3415,]   67 #>  [3416,]   67 #>  [3417,]   66 #>  [3418,]   66 #>  [3419,]   67 #>  [3420,]   67 #>  [3421,]   66 #>  [3422,]   67 #>  [3423,]   67 #>  [3424,]   66 #>  [3425,]   66 #>  [3426,]   67 #>  [3427,]   67 #>  [3428,]   66 #>  [3429,]   67 #>  [3430,]   67 #>  [3431,]   66 #>  [3432,]   66 #>  [3433,]   67 #>  [3434,]   66 #>  [3435,]   66 #>  [3436,]   67 #>  [3437,]   67 #>  [3438,]   67 #>  [3439,]   66 #>  [3440,]   66 #>  [3441,]   67 #>  [3442,]   66 #>  [3443,]   67 #>  [3444,]   67 #>  [3445,]   67 #>  [3446,]   67 #>  [3447,]   66 #>  [3448,]   66 #>  [3449,]   67 #>  [3450,]   67 #>  [3451,]   67 #>  [3452,]   66 #>  [3453,]   67 #>  [3454,]   66 #>  [3455,]   67 #>  [3456,]   67 #>  [3457,]   66 #>  [3458,]   67 #>  [3459,]   67 #>  [3460,]   67 #>  [3461,]   67 #>  [3462,]   66 #>  [3463,]   67 #>  [3464,]   67 #>  [3465,]   66 #>  [3466,]   67 #>  [3467,]   66 #>  [3468,]   67 #>  [3469,]   67 #>  [3470,]   66 #>  [3471,]   67 #>  [3472,]   66 #>  [3473,]   66 #>  [3474,]   66 #>  [3475,]   67 #>  [3476,]   66 #>  [3477,]   67 #>  [3478,]   67 #>  [3479,]   66 #>  [3480,]   67 #>  [3481,]   67 #>  [3482,]   66 #>  [3483,]   67 #>  [3484,]   67 #>  [3485,]   67 #>  [3486,]   66 #>  [3487,]   67 #>  [3488,]   66 #>  [3489,]   66 #>  [3490,]   67 #>  [3491,]   66 #>  [3492,]   66 #>  [3493,]   67 #>  [3494,]   66 #>  [3495,]   67 #>  [3496,]   67 #>  [3497,]   67 #>  [3498,]   66 #>  [3499,]   66 #>  [3500,]   67 #>  [3501,]   69 #>  [3502,]   69 #>  [3503,]   68 #>  [3504,]   69 #>  [3505,]   69 #>  [3506,]   69 #>  [3507,]   69 #>  [3508,]   69 #>  [3509,]   69 #>  [3510,]   68 #>  [3511,]   68 #>  [3512,]   69 #>  [3513,]   69 #>  [3514,]   68 #>  [3515,]   69 #>  [3516,]   69 #>  [3517,]   69 #>  [3518,]   69 #>  [3519,]   69 #>  [3520,]   69 #>  [3521,]   69 #>  [3522,]   69 #>  [3523,]   69 #>  [3524,]   69 #>  [3525,]   69 #>  [3526,]   69 #>  [3527,]   69 #>  [3528,]   69 #>  [3529,]   69 #>  [3530,]   69 #>  [3531,]   68 #>  [3532,]   68 #>  [3533,]   69 #>  [3534,]   69 #>  [3535,]   69 #>  [3536,]   69 #>  [3537,]   69 #>  [3538,]   69 #>  [3539,]   69 #>  [3540,]   68 #>  [3541,]   69 #>  [3542,]   69 #>  [3543,]   69 #>  [3544,]   69 #>  [3545,]   69 #>  [3546,]   69 #>  [3547,]   69 #>  [3548,]   68 #>  [3549,]   69 #>  [3550,]   69 #>  [3551,]   69 #>  [3552,]   69 #>  [3553,]   69 #>  [3554,]   69 #>  [3555,]   69 #>  [3556,]   69 #>  [3557,]   69 #>  [3558,]   69 #>  [3559,]   69 #>  [3560,]   69 #>  [3561,]   69 #>  [3562,]   69 #>  [3563,]   69 #>  [3564,]   69 #>  [3565,]   69 #>  [3566,]   69 #>  [3567,]   69 #>  [3568,]   69 #>  [3569,]   69 #>  [3570,]   68 #>  [3571,]   69 #>  [3572,]   69 #>  [3573,]   69 #>  [3574,]   68 #>  [3575,]   69 #>  [3576,]   69 #>  [3577,]   69 #>  [3578,]   69 #>  [3579,]   69 #>  [3580,]   69 #>  [3581,]   69 #>  [3582,]   68 #>  [3583,]   69 #>  [3584,]   69 #>  [3585,]   69 #>  [3586,]   69 #>  [3587,]   69 #>  [3588,]   69 #>  [3589,]   69 #>  [3590,]   69 #>  [3591,]   69 #>  [3592,]   69 #>  [3593,]   69 #>  [3594,]   69 #>  [3595,]   69 #>  [3596,]   69 #>  [3597,]   69 #>  [3598,]   68 #>  [3599,]   69 #>  [3600,]   69 #>  [3601,]   71 #>  [3602,]   71 #>  [3603,]   70 #>  [3604,]   71 #>  [3605,]   71 #>  [3606,]   71 #>  [3607,]   71 #>  [3608,]   71 #>  [3609,]   71 #>  [3610,]   71 #>  [3611,]   71 #>  [3612,]   70 #>  [3613,]   71 #>  [3614,]   70 #>  [3615,]   71 #>  [3616,]   71 #>  [3617,]   71 #>  [3618,]   71 #>  [3619,]   71 #>  [3620,]   71 #>  [3621,]   71 #>  [3622,]   71 #>  [3623,]   71 #>  [3624,]   71 #>  [3625,]   71 #>  [3626,]   70 #>  [3627,]   71 #>  [3628,]   71 #>  [3629,]   71 #>  [3630,]   71 #>  [3631,]   71 #>  [3632,]   70 #>  [3633,]   71 #>  [3634,]   71 #>  [3635,]   71 #>  [3636,]   71 #>  [3637,]   71 #>  [3638,]   71 #>  [3639,]   71 #>  [3640,]   71 #>  [3641,]   71 #>  [3642,]   71 #>  [3643,]   71 #>  [3644,]   71 #>  [3645,]   71 #>  [3646,]   71 #>  [3647,]   71 #>  [3648,]   70 #>  [3649,]   71 #>  [3650,]   71 #>  [3651,]   70 #>  [3652,]   71 #>  [3653,]   71 #>  [3654,]   70 #>  [3655,]   71 #>  [3656,]   71 #>  [3657,]   71 #>  [3658,]   71 #>  [3659,]   71 #>  [3660,]   71 #>  [3661,]   71 #>  [3662,]   70 #>  [3663,]   71 #>  [3664,]   71 #>  [3665,]   71 #>  [3666,]   70 #>  [3667,]   71 #>  [3668,]   71 #>  [3669,]   70 #>  [3670,]   71 #>  [3671,]   71 #>  [3672,]   71 #>  [3673,]   71 #>  [3674,]   71 #>  [3675,]   71 #>  [3676,]   71 #>  [3677,]   71 #>  [3678,]   71 #>  [3679,]   71 #>  [3680,]   70 #>  [3681,]   70 #>  [3682,]   71 #>  [3683,]   71 #>  [3684,]   71 #>  [3685,]   71 #>  [3686,]   71 #>  [3687,]   71 #>  [3688,]   71 #>  [3689,]   70 #>  [3690,]   71 #>  [3691,]   71 #>  [3692,]   71 #>  [3693,]   71 #>  [3694,]   71 #>  [3695,]   71 #>  [3696,]   71 #>  [3697,]   71 #>  [3698,]   71 #>  [3699,]   71 #>  [3700,]   71 #>  [3701,]   72 #>  [3702,]   72 #>  [3703,]   72 #>  [3704,]   72 #>  [3705,]   72 #>  [3706,]   72 #>  [3707,]   72 #>  [3708,]   72 #>  [3709,]   72 #>  [3710,]   72 #>  [3711,]   72 #>  [3712,]   72 #>  [3713,]   72 #>  [3714,]   72 #>  [3715,]   72 #>  [3716,]   72 #>  [3717,]   72 #>  [3718,]   72 #>  [3719,]   72 #>  [3720,]   73 #>  [3721,]   72 #>  [3722,]   73 #>  [3723,]   72 #>  [3724,]   72 #>  [3725,]   72 #>  [3726,]   72 #>  [3727,]   72 #>  [3728,]   72 #>  [3729,]   73 #>  [3730,]   72 #>  [3731,]   72 #>  [3732,]   72 #>  [3733,]   72 #>  [3734,]   72 #>  [3735,]   72 #>  [3736,]   72 #>  [3737,]   72 #>  [3738,]   72 #>  [3739,]   72 #>  [3740,]   72 #>  [3741,]   72 #>  [3742,]   72 #>  [3743,]   72 #>  [3744,]   72 #>  [3745,]   72 #>  [3746,]   72 #>  [3747,]   72 #>  [3748,]   72 #>  [3749,]   72 #>  [3750,]   72 #>  [3751,]   72 #>  [3752,]   72 #>  [3753,]   72 #>  [3754,]   72 #>  [3755,]   72 #>  [3756,]   72 #>  [3757,]   72 #>  [3758,]   73 #>  [3759,]   72 #>  [3760,]   72 #>  [3761,]   72 #>  [3762,]   72 #>  [3763,]   72 #>  [3764,]   73 #>  [3765,]   72 #>  [3766,]   72 #>  [3767,]   72 #>  [3768,]   72 #>  [3769,]   72 #>  [3770,]   72 #>  [3771,]   72 #>  [3772,]   72 #>  [3773,]   72 #>  [3774,]   72 #>  [3775,]   72 #>  [3776,]   72 #>  [3777,]   73 #>  [3778,]   72 #>  [3779,]   72 #>  [3780,]   72 #>  [3781,]   72 #>  [3782,]   72 #>  [3783,]   72 #>  [3784,]   72 #>  [3785,]   72 #>  [3786,]   72 #>  [3787,]   73 #>  [3788,]   72 #>  [3789,]   72 #>  [3790,]   72 #>  [3791,]   72 #>  [3792,]   72 #>  [3793,]   72 #>  [3794,]   72 #>  [3795,]   72 #>  [3796,]   72 #>  [3797,]   72 #>  [3798,]   72 #>  [3799,]   72 #>  [3800,]   72 #>  [3801,]   75 #>  [3802,]   75 #>  [3803,]   74 #>  [3804,]   75 #>  [3805,]   75 #>  [3806,]   75 #>  [3807,]   74 #>  [3808,]   74 #>  [3809,]   75 #>  [3810,]   75 #>  [3811,]   75 #>  [3812,]   75 #>  [3813,]   74 #>  [3814,]   75 #>  [3815,]   75 #>  [3816,]   74 #>  [3817,]   75 #>  [3818,]   75 #>  [3819,]   75 #>  [3820,]   74 #>  [3821,]   75 #>  [3822,]   74 #>  [3823,]   75 #>  [3824,]   74 #>  [3825,]   74 #>  [3826,]   75 #>  [3827,]   75 #>  [3828,]   75 #>  [3829,]   75 #>  [3830,]   75 #>  [3831,]   75 #>  [3832,]   75 #>  [3833,]   75 #>  [3834,]   75 #>  [3835,]   75 #>  [3836,]   75 #>  [3837,]   75 #>  [3838,]   75 #>  [3839,]   74 #>  [3840,]   74 #>  [3841,]   75 #>  [3842,]   75 #>  [3843,]   75 #>  [3844,]   74 #>  [3845,]   75 #>  [3846,]   74 #>  [3847,]   75 #>  [3848,]   75 #>  [3849,]   74 #>  [3850,]   74 #>  [3851,]   75 #>  [3852,]   75 #>  [3853,]   74 #>  [3854,]   75 #>  [3855,]   74 #>  [3856,]   74 #>  [3857,]   75 #>  [3858,]   75 #>  [3859,]   74 #>  [3860,]   75 #>  [3861,]   75 #>  [3862,]   75 #>  [3863,]   74 #>  [3864,]   75 #>  [3865,]   74 #>  [3866,]   74 #>  [3867,]   75 #>  [3868,]   75 #>  [3869,]   75 #>  [3870,]   74 #>  [3871,]   75 #>  [3872,]   74 #>  [3873,]   75 #>  [3874,]   75 #>  [3875,]   75 #>  [3876,]   75 #>  [3877,]   75 #>  [3878,]   75 #>  [3879,]   75 #>  [3880,]   75 #>  [3881,]   75 #>  [3882,]   75 #>  [3883,]   75 #>  [3884,]   74 #>  [3885,]   75 #>  [3886,]   74 #>  [3887,]   75 #>  [3888,]   75 #>  [3889,]   74 #>  [3890,]   74 #>  [3891,]   75 #>  [3892,]   75 #>  [3893,]   75 #>  [3894,]   75 #>  [3895,]   75 #>  [3896,]   75 #>  [3897,]   75 #>  [3898,]   74 #>  [3899,]   75 #>  [3900,]   74 #>  [3901,]   76 #>  [3902,]   77 #>  [3903,]   77 #>  [3904,]   76 #>  [3905,]   77 #>  [3906,]   77 #>  [3907,]   77 #>  [3908,]   76 #>  [3909,]   76 #>  [3910,]   77 #>  [3911,]   76 #>  [3912,]   77 #>  [3913,]   76 #>  [3914,]   77 #>  [3915,]   77 #>  [3916,]   77 #>  [3917,]   76 #>  [3918,]   77 #>  [3919,]   77 #>  [3920,]   77 #>  [3921,]   77 #>  [3922,]   76 #>  [3923,]   77 #>  [3924,]   77 #>  [3925,]   77 #>  [3926,]   77 #>  [3927,]   76 #>  [3928,]   77 #>  [3929,]   77 #>  [3930,]   76 #>  [3931,]   77 #>  [3932,]   77 #>  [3933,]   77 #>  [3934,]   77 #>  [3935,]   76 #>  [3936,]   77 #>  [3937,]   77 #>  [3938,]   77 #>  [3939,]   77 #>  [3940,]   77 #>  [3941,]   77 #>  [3942,]   77 #>  [3943,]   76 #>  [3944,]   76 #>  [3945,]   77 #>  [3946,]   77 #>  [3947,]   77 #>  [3948,]   77 #>  [3949,]   76 #>  [3950,]   77 #>  [3951,]   77 #>  [3952,]   76 #>  [3953,]   77 #>  [3954,]   76 #>  [3955,]   76 #>  [3956,]   77 #>  [3957,]   77 #>  [3958,]   76 #>  [3959,]   77 #>  [3960,]   77 #>  [3961,]   77 #>  [3962,]   77 #>  [3963,]   77 #>  [3964,]   77 #>  [3965,]   77 #>  [3966,]   76 #>  [3967,]   77 #>  [3968,]   77 #>  [3969,]   76 #>  [3970,]   77 #>  [3971,]   77 #>  [3972,]   77 #>  [3973,]   77 #>  [3974,]   77 #>  [3975,]   77 #>  [3976,]   77 #>  [3977,]   77 #>  [3978,]   77 #>  [3979,]   76 #>  [3980,]   76 #>  [3981,]   76 #>  [3982,]   76 #>  [3983,]   76 #>  [3984,]   77 #>  [3985,]   77 #>  [3986,]   77 #>  [3987,]   76 #>  [3988,]   76 #>  [3989,]   76 #>  [3990,]   76 #>  [3991,]   77 #>  [3992,]   76 #>  [3993,]   77 #>  [3994,]   77 #>  [3995,]   76 #>  [3996,]   76 #>  [3997,]   77 #>  [3998,]   77 #>  [3999,]   76 #>  [4000,]   77 #>  [4001,]   78 #>  [4002,]   78 #>  [4003,]   78 #>  [4004,]   78 #>  [4005,]   78 #>  [4006,]   78 #>  [4007,]   78 #>  [4008,]   78 #>  [4009,]   78 #>  [4010,]   78 #>  [4011,]   78 #>  [4012,]   78 #>  [4013,]   78 #>  [4014,]   78 #>  [4015,]   78 #>  [4016,]   78 #>  [4017,]   78 #>  [4018,]   78 #>  [4019,]   78 #>  [4020,]   78 #>  [4021,]   78 #>  [4022,]   78 #>  [4023,]   78 #>  [4024,]   78 #>  [4025,]   78 #>  [4026,]   78 #>  [4027,]   78 #>  [4028,]   78 #>  [4029,]   78 #>  [4030,]   78 #>  [4031,]   78 #>  [4032,]   78 #>  [4033,]   78 #>  [4034,]   78 #>  [4035,]   78 #>  [4036,]   78 #>  [4037,]   78 #>  [4038,]   78 #>  [4039,]   78 #>  [4040,]   78 #>  [4041,]   78 #>  [4042,]   78 #>  [4043,]   78 #>  [4044,]   78 #>  [4045,]   78 #>  [4046,]   78 #>  [4047,]   78 #>  [4048,]   78 #>  [4049,]   78 #>  [4050,]   78 #>  [4051,]   78 #>  [4052,]   78 #>  [4053,]   78 #>  [4054,]   78 #>  [4055,]   78 #>  [4056,]   78 #>  [4057,]   78 #>  [4058,]   78 #>  [4059,]   78 #>  [4060,]   78 #>  [4061,]   78 #>  [4062,]   78 #>  [4063,]   78 #>  [4064,]   78 #>  [4065,]   78 #>  [4066,]   78 #>  [4067,]   78 #>  [4068,]   78 #>  [4069,]   78 #>  [4070,]   78 #>  [4071,]   78 #>  [4072,]   78 #>  [4073,]   78 #>  [4074,]   78 #>  [4075,]   78 #>  [4076,]   78 #>  [4077,]   78 #>  [4078,]   78 #>  [4079,]   78 #>  [4080,]   78 #>  [4081,]   78 #>  [4082,]   78 #>  [4083,]   78 #>  [4084,]   78 #>  [4085,]   78 #>  [4086,]   78 #>  [4087,]   78 #>  [4088,]   78 #>  [4089,]   78 #>  [4090,]   78 #>  [4091,]   78 #>  [4092,]   78 #>  [4093,]   78 #>  [4094,]   78 #>  [4095,]   78 #>  [4096,]   78 #>  [4097,]   78 #>  [4098,]   78 #>  [4099,]   78 #>  [4100,]   78 #>  [4101,]   79 #>  [4102,]   79 #>  [4103,]   79 #>  [4104,]   79 #>  [4105,]   79 #>  [4106,]   79 #>  [4107,]   79 #>  [4108,]   79 #>  [4109,]   79 #>  [4110,]   79 #>  [4111,]   79 #>  [4112,]   79 #>  [4113,]   79 #>  [4114,]   79 #>  [4115,]   79 #>  [4116,]   79 #>  [4117,]   79 #>  [4118,]   79 #>  [4119,]   79 #>  [4120,]   79 #>  [4121,]   79 #>  [4122,]   79 #>  [4123,]   79 #>  [4124,]   79 #>  [4125,]   79 #>  [4126,]   79 #>  [4127,]   79 #>  [4128,]   79 #>  [4129,]   79 #>  [4130,]   79 #>  [4131,]   79 #>  [4132,]   79 #>  [4133,]   79 #>  [4134,]   79 #>  [4135,]   79 #>  [4136,]   79 #>  [4137,]   79 #>  [4138,]   79 #>  [4139,]   79 #>  [4140,]   79 #>  [4141,]   79 #>  [4142,]   79 #>  [4143,]   79 #>  [4144,]   79 #>  [4145,]   79 #>  [4146,]   79 #>  [4147,]   79 #>  [4148,]   79 #>  [4149,]   79 #>  [4150,]   79 #>  [4151,]   79 #>  [4152,]   79 #>  [4153,]   79 #>  [4154,]   79 #>  [4155,]   79 #>  [4156,]   79 #>  [4157,]   79 #>  [4158,]   79 #>  [4159,]   79 #>  [4160,]   79 #>  [4161,]   79 #>  [4162,]   79 #>  [4163,]   79 #>  [4164,]   79 #>  [4165,]   79 #>  [4166,]   79 #>  [4167,]   79 #>  [4168,]   79 #>  [4169,]   79 #>  [4170,]   79 #>  [4171,]   79 #>  [4172,]   79 #>  [4173,]   79 #>  [4174,]   79 #>  [4175,]   79 #>  [4176,]   79 #>  [4177,]   79 #>  [4178,]   79 #>  [4179,]   79 #>  [4180,]   79 #>  [4181,]   79 #>  [4182,]   79 #>  [4183,]   79 #>  [4184,]   79 #>  [4185,]   79 #>  [4186,]   79 #>  [4187,]   79 #>  [4188,]   79 #>  [4189,]   79 #>  [4190,]   79 #>  [4191,]   79 #>  [4192,]   79 #>  [4193,]   79 #>  [4194,]   79 #>  [4195,]   79 #>  [4196,]   79 #>  [4197,]   79 #>  [4198,]   79 #>  [4199,]   79 #>  [4200,]   79 #>  [4201,]   81 #>  [4202,]   81 #>  [4203,]   80 #>  [4204,]   81 #>  [4205,]   81 #>  [4206,]   81 #>  [4207,]   81 #>  [4208,]   81 #>  [4209,]   81 #>  [4210,]   81 #>  [4211,]   80 #>  [4212,]   80 #>  [4213,]   81 #>  [4214,]   80 #>  [4215,]   81 #>  [4216,]   81 #>  [4217,]   81 #>  [4218,]   81 #>  [4219,]   81 #>  [4220,]   80 #>  [4221,]   81 #>  [4222,]   80 #>  [4223,]   81 #>  [4224,]   81 #>  [4225,]   81 #>  [4226,]   80 #>  [4227,]   81 #>  [4228,]   81 #>  [4229,]   80 #>  [4230,]   81 #>  [4231,]   81 #>  [4232,]   80 #>  [4233,]   81 #>  [4234,]   81 #>  [4235,]   81 #>  [4236,]   80 #>  [4237,]   81 #>  [4238,]   81 #>  [4239,]   81 #>  [4240,]   80 #>  [4241,]   80 #>  [4242,]   80 #>  [4243,]   81 #>  [4244,]   81 #>  [4245,]   81 #>  [4246,]   81 #>  [4247,]   81 #>  [4248,]   80 #>  [4249,]   81 #>  [4250,]   81 #>  [4251,]   80 #>  [4252,]   81 #>  [4253,]   81 #>  [4254,]   80 #>  [4255,]   81 #>  [4256,]   81 #>  [4257,]   81 #>  [4258,]   81 #>  [4259,]   81 #>  [4260,]   80 #>  [4261,]   81 #>  [4262,]   80 #>  [4263,]   81 #>  [4264,]   81 #>  [4265,]   81 #>  [4266,]   80 #>  [4267,]   81 #>  [4268,]   80 #>  [4269,]   80 #>  [4270,]   81 #>  [4271,]   81 #>  [4272,]   81 #>  [4273,]   81 #>  [4274,]   81 #>  [4275,]   81 #>  [4276,]   81 #>  [4277,]   81 #>  [4278,]   81 #>  [4279,]   81 #>  [4280,]   80 #>  [4281,]   80 #>  [4282,]   81 #>  [4283,]   80 #>  [4284,]   81 #>  [4285,]   81 #>  [4286,]   81 #>  [4287,]   81 #>  [4288,]   81 #>  [4289,]   80 #>  [4290,]   81 #>  [4291,]   80 #>  [4292,]   81 #>  [4293,]   81 #>  [4294,]   81 #>  [4295,]   81 #>  [4296,]   81 #>  [4297,]   81 #>  [4298,]   81 #>  [4299,]   81 #>  [4300,]   81 #>  [4301,]   83 #>  [4302,]   82 #>  [4303,]   82 #>  [4304,]   83 #>  [4305,]   82 #>  [4306,]   82 #>  [4307,]   83 #>  [4308,]   82 #>  [4309,]   83 #>  [4310,]   83 #>  [4311,]   82 #>  [4312,]   82 #>  [4313,]   83 #>  [4314,]   83 #>  [4315,]   82 #>  [4316,]   83 #>  [4317,]   82 #>  [4318,]   82 #>  [4319,]   82 #>  [4320,]   83 #>  [4321,]   82 #>  [4322,]   83 #>  [4323,]   82 #>  [4324,]   83 #>  [4325,]   83 #>  [4326,]   82 #>  [4327,]   82 #>  [4328,]   83 #>  [4329,]   82 #>  [4330,]   82 #>  [4331,]   82 #>  [4332,]   82 #>  [4333,]   82 #>  [4334,]   82 #>  [4335,]   82 #>  [4336,]   83 #>  [4337,]   82 #>  [4338,]   82 #>  [4339,]   83 #>  [4340,]   82 #>  [4341,]   82 #>  [4342,]   82 #>  [4343,]   82 #>  [4344,]   82 #>  [4345,]   83 #>  [4346,]   82 #>  [4347,]   82 #>  [4348,]   82 #>  [4349,]   83 #>  [4350,]   83 #>  [4351,]   82 #>  [4352,]   83 #>  [4353,]   83 #>  [4354,]   83 #>  [4355,]   83 #>  [4356,]   82 #>  [4357,]   83 #>  [4358,]   83 #>  [4359,]   83 #>  [4360,]   82 #>  [4361,]   82 #>  [4362,]   82 #>  [4363,]   82 #>  [4364,]   82 #>  [4365,]   82 #>  [4366,]   82 #>  [4367,]   83 #>  [4368,]   82 #>  [4369,]   82 #>  [4370,]   82 #>  [4371,]   82 #>  [4372,]   83 #>  [4373,]   83 #>  [4374,]   82 #>  [4375,]   82 #>  [4376,]   83 #>  [4377,]   82 #>  [4378,]   82 #>  [4379,]   82 #>  [4380,]   82 #>  [4381,]   82 #>  [4382,]   82 #>  [4383,]   82 #>  [4384,]   82 #>  [4385,]   83 #>  [4386,]   83 #>  [4387,]   83 #>  [4388,]   83 #>  [4389,]   82 #>  [4390,]   83 #>  [4391,]   83 #>  [4392,]   82 #>  [4393,]   82 #>  [4394,]   82 #>  [4395,]   82 #>  [4396,]   82 #>  [4397,]   82 #>  [4398,]   82 #>  [4399,]   82 #>  [4400,]   82 #>  [4401,]   85 #>  [4402,]   85 #>  [4403,]   85 #>  [4404,]   85 #>  [4405,]   85 #>  [4406,]   85 #>  [4407,]   85 #>  [4408,]   85 #>  [4409,]   85 #>  [4410,]   85 #>  [4411,]   85 #>  [4412,]   85 #>  [4413,]   85 #>  [4414,]   85 #>  [4415,]   84 #>  [4416,]   85 #>  [4417,]   85 #>  [4418,]   85 #>  [4419,]   85 #>  [4420,]   85 #>  [4421,]   85 #>  [4422,]   85 #>  [4423,]   85 #>  [4424,]   85 #>  [4425,]   85 #>  [4426,]   85 #>  [4427,]   85 #>  [4428,]   85 #>  [4429,]   85 #>  [4430,]   85 #>  [4431,]   84 #>  [4432,]   85 #>  [4433,]   85 #>  [4434,]   84 #>  [4435,]   85 #>  [4436,]   85 #>  [4437,]   85 #>  [4438,]   85 #>  [4439,]   85 #>  [4440,]   85 #>  [4441,]   85 #>  [4442,]   84 #>  [4443,]   84 #>  [4444,]   84 #>  [4445,]   85 #>  [4446,]   85 #>  [4447,]   85 #>  [4448,]   85 #>  [4449,]   85 #>  [4450,]   85 #>  [4451,]   85 #>  [4452,]   85 #>  [4453,]   85 #>  [4454,]   85 #>  [4455,]   85 #>  [4456,]   85 #>  [4457,]   85 #>  [4458,]   85 #>  [4459,]   85 #>  [4460,]   85 #>  [4461,]   85 #>  [4462,]   85 #>  [4463,]   84 #>  [4464,]   85 #>  [4465,]   85 #>  [4466,]   85 #>  [4467,]   85 #>  [4468,]   85 #>  [4469,]   85 #>  [4470,]   85 #>  [4471,]   85 #>  [4472,]   85 #>  [4473,]   85 #>  [4474,]   85 #>  [4475,]   84 #>  [4476,]   85 #>  [4477,]   85 #>  [4478,]   84 #>  [4479,]   85 #>  [4480,]   85 #>  [4481,]   85 #>  [4482,]   85 #>  [4483,]   85 #>  [4484,]   85 #>  [4485,]   85 #>  [4486,]   85 #>  [4487,]   85 #>  [4488,]   85 #>  [4489,]   85 #>  [4490,]   85 #>  [4491,]   85 #>  [4492,]   85 #>  [4493,]   85 #>  [4494,]   85 #>  [4495,]   84 #>  [4496,]   85 #>  [4497,]   85 #>  [4498,]   85 #>  [4499,]   85 #>  [4500,]   85 #>  [4501,]   87 #>  [4502,]   87 #>  [4503,]   87 #>  [4504,]   86 #>  [4505,]   87 #>  [4506,]   87 #>  [4507,]   87 #>  [4508,]   86 #>  [4509,]   86 #>  [4510,]   86 #>  [4511,]   87 #>  [4512,]   87 #>  [4513,]   87 #>  [4514,]   87 #>  [4515,]   87 #>  [4516,]   87 #>  [4517,]   87 #>  [4518,]   87 #>  [4519,]   87 #>  [4520,]   87 #>  [4521,]   87 #>  [4522,]   87 #>  [4523,]   87 #>  [4524,]   87 #>  [4525,]   87 #>  [4526,]   87 #>  [4527,]   87 #>  [4528,]   87 #>  [4529,]   87 #>  [4530,]   87 #>  [4531,]   87 #>  [4532,]   87 #>  [4533,]   87 #>  [4534,]   87 #>  [4535,]   87 #>  [4536,]   87 #>  [4537,]   87 #>  [4538,]   87 #>  [4539,]   87 #>  [4540,]   87 #>  [4541,]   87 #>  [4542,]   87 #>  [4543,]   86 #>  [4544,]   87 #>  [4545,]   87 #>  [4546,]   87 #>  [4547,]   87 #>  [4548,]   87 #>  [4549,]   87 #>  [4550,]   87 #>  [4551,]   86 #>  [4552,]   87 #>  [4553,]   87 #>  [4554,]   87 #>  [4555,]   87 #>  [4556,]   87 #>  [4557,]   87 #>  [4558,]   87 #>  [4559,]   87 #>  [4560,]   86 #>  [4561,]   87 #>  [4562,]   87 #>  [4563,]   87 #>  [4564,]   87 #>  [4565,]   87 #>  [4566,]   87 #>  [4567,]   87 #>  [4568,]   87 #>  [4569,]   87 #>  [4570,]   87 #>  [4571,]   87 #>  [4572,]   87 #>  [4573,]   87 #>  [4574,]   87 #>  [4575,]   87 #>  [4576,]   87 #>  [4577,]   87 #>  [4578,]   87 #>  [4579,]   87 #>  [4580,]   87 #>  [4581,]   87 #>  [4582,]   87 #>  [4583,]   87 #>  [4584,]   87 #>  [4585,]   86 #>  [4586,]   87 #>  [4587,]   87 #>  [4588,]   87 #>  [4589,]   87 #>  [4590,]   87 #>  [4591,]   86 #>  [4592,]   87 #>  [4593,]   87 #>  [4594,]   87 #>  [4595,]   86 #>  [4596,]   87 #>  [4597,]   87 #>  [4598,]   87 #>  [4599,]   87 #>  [4600,]   87 #>  [4601,]   88 #>  [4602,]   88 #>  [4603,]   88 #>  [4604,]   88 #>  [4605,]   88 #>  [4606,]   88 #>  [4607,]   88 #>  [4608,]   88 #>  [4609,]   88 #>  [4610,]   88 #>  [4611,]   88 #>  [4612,]   88 #>  [4613,]   88 #>  [4614,]   88 #>  [4615,]   88 #>  [4616,]   88 #>  [4617,]   88 #>  [4618,]   88 #>  [4619,]   88 #>  [4620,]   88 #>  [4621,]   88 #>  [4622,]   88 #>  [4623,]   88 #>  [4624,]   88 #>  [4625,]   88 #>  [4626,]   88 #>  [4627,]   88 #>  [4628,]   88 #>  [4629,]   88 #>  [4630,]   88 #>  [4631,]   88 #>  [4632,]   88 #>  [4633,]   88 #>  [4634,]   88 #>  [4635,]   88 #>  [4636,]   88 #>  [4637,]   88 #>  [4638,]   88 #>  [4639,]   88 #>  [4640,]   88 #>  [4641,]   88 #>  [4642,]   88 #>  [4643,]   88 #>  [4644,]   88 #>  [4645,]   88 #>  [4646,]   88 #>  [4647,]   88 #>  [4648,]   88 #>  [4649,]   88 #>  [4650,]   88 #>  [4651,]   88 #>  [4652,]   88 #>  [4653,]   88 #>  [4654,]   88 #>  [4655,]   88 #>  [4656,]   88 #>  [4657,]   88 #>  [4658,]   88 #>  [4659,]   88 #>  [4660,]   88 #>  [4661,]   88 #>  [4662,]   88 #>  [4663,]   88 #>  [4664,]   88 #>  [4665,]   88 #>  [4666,]   88 #>  [4667,]   88 #>  [4668,]   88 #>  [4669,]   88 #>  [4670,]   88 #>  [4671,]   88 #>  [4672,]   88 #>  [4673,]   88 #>  [4674,]   88 #>  [4675,]   88 #>  [4676,]   88 #>  [4677,]   88 #>  [4678,]   88 #>  [4679,]   88 #>  [4680,]   88 #>  [4681,]   88 #>  [4682,]   88 #>  [4683,]   88 #>  [4684,]   88 #>  [4685,]   88 #>  [4686,]   88 #>  [4687,]   88 #>  [4688,]   88 #>  [4689,]   88 #>  [4690,]   88 #>  [4691,]   88 #>  [4692,]   88 #>  [4693,]   88 #>  [4694,]   88 #>  [4695,]   88 #>  [4696,]   88 #>  [4697,]   88 #>  [4698,]   88 #>  [4699,]   88 #>  [4700,]   88 #>  [4701,]   90 #>  [4702,]   89 #>  [4703,]   89 #>  [4704,]   89 #>  [4705,]   89 #>  [4706,]   89 #>  [4707,]   89 #>  [4708,]   89 #>  [4709,]   90 #>  [4710,]   89 #>  [4711,]   90 #>  [4712,]   89 #>  [4713,]   90 #>  [4714,]   89 #>  [4715,]   89 #>  [4716,]   89 #>  [4717,]   90 #>  [4718,]   90 #>  [4719,]   89 #>  [4720,]   90 #>  [4721,]   89 #>  [4722,]   89 #>  [4723,]   89 #>  [4724,]   89 #>  [4725,]   89 #>  [4726,]   89 #>  [4727,]   90 #>  [4728,]   90 #>  [4729,]   90 #>  [4730,]   89 #>  [4731,]   89 #>  [4732,]   89 #>  [4733,]   90 #>  [4734,]   89 #>  [4735,]   89 #>  [4736,]   90 #>  [4737,]   89 #>  [4738,]   90 #>  [4739,]   90 #>  [4740,]   89 #>  [4741,]   89 #>  [4742,]   90 #>  [4743,]   89 #>  [4744,]   89 #>  [4745,]   89 #>  [4746,]   89 #>  [4747,]   89 #>  [4748,]   89 #>  [4749,]   89 #>  [4750,]   89 #>  [4751,]   90 #>  [4752,]   89 #>  [4753,]   90 #>  [4754,]   90 #>  [4755,]   89 #>  [4756,]   90 #>  [4757,]   89 #>  [4758,]   90 #>  [4759,]   89 #>  [4760,]   89 #>  [4761,]   89 #>  [4762,]   90 #>  [4763,]   89 #>  [4764,]   89 #>  [4765,]   90 #>  [4766,]   90 #>  [4767,]   89 #>  [4768,]   89 #>  [4769,]   89 #>  [4770,]   89 #>  [4771,]   89 #>  [4772,]   89 #>  [4773,]   89 #>  [4774,]   89 #>  [4775,]   89 #>  [4776,]   89 #>  [4777,]   90 #>  [4778,]   89 #>  [4779,]   90 #>  [4780,]   89 #>  [4781,]   89 #>  [4782,]   90 #>  [4783,]   90 #>  [4784,]   90 #>  [4785,]   90 #>  [4786,]   89 #>  [4787,]   90 #>  [4788,]   89 #>  [4789,]   90 #>  [4790,]   89 #>  [4791,]   90 #>  [4792,]   89 #>  [4793,]   90 #>  [4794,]   90 #>  [4795,]   89 #>  [4796,]   89 #>  [4797,]   89 #>  [4798,]   89 #>  [4799,]   89 #>  [4800,]   89 #>  [4801,]   91 #>  [4802,]   91 #>  [4803,]   91 #>  [4804,]   91 #>  [4805,]   91 #>  [4806,]   91 #>  [4807,]   91 #>  [4808,]   91 #>  [4809,]   91 #>  [4810,]   91 #>  [4811,]   91 #>  [4812,]   91 #>  [4813,]   91 #>  [4814,]   91 #>  [4815,]   91 #>  [4816,]   91 #>  [4817,]   91 #>  [4818,]   91 #>  [4819,]   91 #>  [4820,]   92 #>  [4821,]   91 #>  [4822,]   91 #>  [4823,]   91 #>  [4824,]   92 #>  [4825,]   91 #>  [4826,]   91 #>  [4827,]   91 #>  [4828,]   92 #>  [4829,]   91 #>  [4830,]   91 #>  [4831,]   91 #>  [4832,]   91 #>  [4833,]   91 #>  [4834,]   91 #>  [4835,]   91 #>  [4836,]   91 #>  [4837,]   91 #>  [4838,]   91 #>  [4839,]   91 #>  [4840,]   91 #>  [4841,]   91 #>  [4842,]   91 #>  [4843,]   91 #>  [4844,]   91 #>  [4845,]   91 #>  [4846,]   91 #>  [4847,]   91 #>  [4848,]   91 #>  [4849,]   91 #>  [4850,]   92 #>  [4851,]   91 #>  [4852,]   92 #>  [4853,]   91 #>  [4854,]   91 #>  [4855,]   91 #>  [4856,]   91 #>  [4857,]   91 #>  [4858,]   91 #>  [4859,]   91 #>  [4860,]   91 #>  [4861,]   91 #>  [4862,]   91 #>  [4863,]   91 #>  [4864,]   91 #>  [4865,]   91 #>  [4866,]   91 #>  [4867,]   91 #>  [4868,]   91 #>  [4869,]   91 #>  [4870,]   91 #>  [4871,]   91 #>  [4872,]   91 #>  [4873,]   91 #>  [4874,]   91 #>  [4875,]   91 #>  [4876,]   92 #>  [4877,]   91 #>  [4878,]   91 #>  [4879,]   91 #>  [4880,]   91 #>  [4881,]   91 #>  [4882,]   91 #>  [4883,]   91 #>  [4884,]   91 #>  [4885,]   91 #>  [4886,]   92 #>  [4887,]   91 #>  [4888,]   91 #>  [4889,]   91 #>  [4890,]   91 #>  [4891,]   91 #>  [4892,]   91 #>  [4893,]   91 #>  [4894,]   91 #>  [4895,]   91 #>  [4896,]   91 #>  [4897,]   91 #>  [4898,]   91 #>  [4899,]   91 #>  [4900,]   91 #>  [4901,]   93 #>  [4902,]   93 #>  [4903,]   93 #>  [4904,]   94 #>  [4905,]   93 #>  [4906,]   93 #>  [4907,]   94 #>  [4908,]   93 #>  [4909,]   93 #>  [4910,]   94 #>  [4911,]   93 #>  [4912,]   93 #>  [4913,]   93 #>  [4914,]   93 #>  [4915,]   94 #>  [4916,]   94 #>  [4917,]   93 #>  [4918,]   94 #>  [4919,]   93 #>  [4920,]   93 #>  [4921,]   94 #>  [4922,]   93 #>  [4923,]   94 #>  [4924,]   93 #>  [4925,]   94 #>  [4926,]   93 #>  [4927,]   94 #>  [4928,]   93 #>  [4929,]   93 #>  [4930,]   93 #>  [4931,]   93 #>  [4932,]   93 #>  [4933,]   93 #>  [4934,]   93 #>  [4935,]   93 #>  [4936,]   93 #>  [4937,]   93 #>  [4938,]   93 #>  [4939,]   94 #>  [4940,]   93 #>  [4941,]   93 #>  [4942,]   93 #>  [4943,]   94 #>  [4944,]   93 #>  [4945,]   94 #>  [4946,]   93 #>  [4947,]   93 #>  [4948,]   93 #>  [4949,]   93 #>  [4950,]   93 #>  [4951,]   93 #>  [4952,]   93 #>  [4953,]   94 #>  [4954,]   93 #>  [4955,]   93 #>  [4956,]   93 #>  [4957,]   93 #>  [4958,]   93 #>  [4959,]   93 #>  [4960,]   93 #>  [4961,]   94 #>  [4962,]   93 #>  [4963,]   93 #>  [4964,]   93 #>  [4965,]   93 #>  [4966,]   93 #>  [4967,]   93 #>  [4968,]   93 #>  [4969,]   93 #>  [4970,]   93 #>  [4971,]   93 #>  [4972,]   94 #>  [4973,]   94 #>  [4974,]   94 #>  [4975,]   94 #>  [4976,]   94 #>  [4977,]   94 #>  [4978,]   93 #>  [4979,]   93 #>  [4980,]   93 #>  [4981,]   93 #>  [4982,]   93 #>  [4983,]   93 #>  [4984,]   94 #>  [4985,]   93 #>  [4986,]   93 #>  [4987,]   93 #>  [4988,]   93 #>  [4989,]   93 #>  [4990,]   93 #>  [4991,]   93 #>  [4992,]   93 #>  [4993,]   93 #>  [4994,]   94 #>  [4995,]   94 #>  [4996,]   93 #>  [4997,]   93 #>  [4998,]   93 #>  [4999,]   93 #>  [5000,]   94 #>  [5001,]   96 #>  [5002,]   96 #>  [5003,]   96 #>  [5004,]   96 #>  [5005,]   96 #>  [5006,]   95 #>  [5007,]   96 #>  [5008,]   96 #>  [5009,]   96 #>  [5010,]   96 #>  [5011,]   96 #>  [5012,]   96 #>  [5013,]   96 #>  [5014,]   96 #>  [5015,]   96 #>  [5016,]   96 #>  [5017,]   96 #>  [5018,]   96 #>  [5019,]   96 #>  [5020,]   95 #>  [5021,]   95 #>  [5022,]   96 #>  [5023,]   96 #>  [5024,]   96 #>  [5025,]   95 #>  [5026,]   96 #>  [5027,]   96 #>  [5028,]   96 #>  [5029,]   96 #>  [5030,]   96 #>  [5031,]   96 #>  [5032,]   96 #>  [5033,]   96 #>  [5034,]   96 #>  [5035,]   95 #>  [5036,]   96 #>  [5037,]   96 #>  [5038,]   96 #>  [5039,]   96 #>  [5040,]   96 #>  [5041,]   96 #>  [5042,]   96 #>  [5043,]   96 #>  [5044,]   95 #>  [5045,]   96 #>  [5046,]   96 #>  [5047,]   96 #>  [5048,]   96 #>  [5049,]   96 #>  [5050,]   96 #>  [5051,]   96 #>  [5052,]   96 #>  [5053,]   95 #>  [5054,]   96 #>  [5055,]   96 #>  [5056,]   95 #>  [5057,]   96 #>  [5058,]   96 #>  [5059,]   96 #>  [5060,]   96 #>  [5061,]   96 #>  [5062,]   96 #>  [5063,]   96 #>  [5064,]   96 #>  [5065,]   95 #>  [5066,]   96 #>  [5067,]   96 #>  [5068,]   96 #>  [5069,]   96 #>  [5070,]   96 #>  [5071,]   96 #>  [5072,]   96 #>  [5073,]   96 #>  [5074,]   95 #>  [5075,]   96 #>  [5076,]   96 #>  [5077,]   96 #>  [5078,]   96 #>  [5079,]   96 #>  [5080,]   95 #>  [5081,]   96 #>  [5082,]   95 #>  [5083,]   96 #>  [5084,]   96 #>  [5085,]   95 #>  [5086,]   95 #>  [5087,]   96 #>  [5088,]   96 #>  [5089,]   95 #>  [5090,]   96 #>  [5091,]   96 #>  [5092,]   96 #>  [5093,]   96 #>  [5094,]   96 #>  [5095,]   96 #>  [5096,]   96 #>  [5097,]   96 #>  [5098,]   96 #>  [5099,]   95 #>  [5100,]   96 #>  [5101,]   98 #>  [5102,]   98 #>  [5103,]   98 #>  [5104,]   97 #>  [5105,]   98 #>  [5106,]   98 #>  [5107,]   98 #>  [5108,]   98 #>  [5109,]   97 #>  [5110,]   98 #>  [5111,]   98 #>  [5112,]   98 #>  [5113,]   98 #>  [5114,]   98 #>  [5115,]   98 #>  [5116,]   98 #>  [5117,]   97 #>  [5118,]   98 #>  [5119,]   98 #>  [5120,]   98 #>  [5121,]   98 #>  [5122,]   98 #>  [5123,]   98 #>  [5124,]   98 #>  [5125,]   98 #>  [5126,]   98 #>  [5127,]   98 #>  [5128,]   98 #>  [5129,]   98 #>  [5130,]   98 #>  [5131,]   98 #>  [5132,]   98 #>  [5133,]   98 #>  [5134,]   98 #>  [5135,]   98 #>  [5136,]   98 #>  [5137,]   98 #>  [5138,]   98 #>  [5139,]   98 #>  [5140,]   98 #>  [5141,]   98 #>  [5142,]   98 #>  [5143,]   98 #>  [5144,]   98 #>  [5145,]   98 #>  [5146,]   98 #>  [5147,]   98 #>  [5148,]   98 #>  [5149,]   98 #>  [5150,]   98 #>  [5151,]   98 #>  [5152,]   97 #>  [5153,]   98 #>  [5154,]   98 #>  [5155,]   98 #>  [5156,]   98 #>  [5157,]   98 #>  [5158,]   98 #>  [5159,]   98 #>  [5160,]   98 #>  [5161,]   98 #>  [5162,]   98 #>  [5163,]   98 #>  [5164,]   98 #>  [5165,]   98 #>  [5166,]   98 #>  [5167,]   98 #>  [5168,]   98 #>  [5169,]   98 #>  [5170,]   98 #>  [5171,]   98 #>  [5172,]   98 #>  [5173,]   98 #>  [5174,]   98 #>  [5175,]   98 #>  [5176,]   98 #>  [5177,]   98 #>  [5178,]   98 #>  [5179,]   98 #>  [5180,]   98 #>  [5181,]   97 #>  [5182,]   97 #>  [5183,]   98 #>  [5184,]   98 #>  [5185,]   98 #>  [5186,]   98 #>  [5187,]   98 #>  [5188,]   98 #>  [5189,]   98 #>  [5190,]   98 #>  [5191,]   98 #>  [5192,]   98 #>  [5193,]   98 #>  [5194,]   98 #>  [5195,]   97 #>  [5196,]   98 #>  [5197,]   98 #>  [5198,]   98 #>  [5199,]   98 #>  [5200,]   98 #>  [5201,]   99 #>  [5202,]   99 #>  [5203,]   99 #>  [5204,]   99 #>  [5205,]   99 #>  [5206,]   99 #>  [5207,]   99 #>  [5208,]   99 #>  [5209,]   99 #>  [5210,]   99 #>  [5211,]   99 #>  [5212,]   99 #>  [5213,]   99 #>  [5214,]   99 #>  [5215,]   99 #>  [5216,]   99 #>  [5217,]   99 #>  [5218,]   99 #>  [5219,]   99 #>  [5220,]   99 #>  [5221,]   99 #>  [5222,]   99 #>  [5223,]   99 #>  [5224,]   99 #>  [5225,]   99 #>  [5226,]   99 #>  [5227,]   99 #>  [5228,]   99 #>  [5229,]   99 #>  [5230,]   99 #>  [5231,]   99 #>  [5232,]   99 #>  [5233,]   99 #>  [5234,]   99 #>  [5235,]   99 #>  [5236,]   99 #>  [5237,]   99 #>  [5238,]   99 #>  [5239,]   99 #>  [5240,]   99 #>  [5241,]   99 #>  [5242,]   99 #>  [5243,]   99 #>  [5244,]   99 #>  [5245,]   99 #>  [5246,]   99 #>  [5247,]   99 #>  [5248,]   99 #>  [5249,]   99 #>  [5250,]   99 #>  [5251,]   99 #>  [5252,]   99 #>  [5253,]   99 #>  [5254,]   99 #>  [5255,]   99 #>  [5256,]   99 #>  [5257,]   99 #>  [5258,]   99 #>  [5259,]   99 #>  [5260,]   99 #>  [5261,]   99 #>  [5262,]   99 #>  [5263,]   99 #>  [5264,]   99 #>  [5265,]   99 #>  [5266,]   99 #>  [5267,]   99 #>  [5268,]   99 #>  [5269,]   99 #>  [5270,]   99 #>  [5271,]   99 #>  [5272,]   99 #>  [5273,]   99 #>  [5274,]   99 #>  [5275,]   99 #>  [5276,]   99 #>  [5277,]   99 #>  [5278,]   99 #>  [5279,]   99 #>  [5280,]   99 #>  [5281,]   99 #>  [5282,]   99 #>  [5283,]   99 #>  [5284,]   99 #>  [5285,]   99 #>  [5286,]   99 #>  [5287,]   99 #>  [5288,]   99 #>  [5289,]   99 #>  [5290,]   99 #>  [5291,]   99 #>  [5292,]   99 #>  [5293,]   99 #>  [5294,]   99 #>  [5295,]   99 #>  [5296,]   99 #>  [5297,]   99 #>  [5298,]   99 #>  [5299,]   99 #>  [5300,]   99 #>  [5301,]  101 #>  [5302,]  101 #>  [5303,]  100 #>  [5304,]  100 #>  [5305,]  100 #>  [5306,]  101 #>  [5307,]  100 #>  [5308,]  100 #>  [5309,]  100 #>  [5310,]  100 #>  [5311,]  101 #>  [5312,]  100 #>  [5313,]  101 #>  [5314,]  101 #>  [5315,]  101 #>  [5316,]  101 #>  [5317,]  101 #>  [5318,]  100 #>  [5319,]  101 #>  [5320,]  100 #>  [5321,]  101 #>  [5322,]  101 #>  [5323,]  100 #>  [5324,]  100 #>  [5325,]  100 #>  [5326,]  101 #>  [5327,]  101 #>  [5328,]  100 #>  [5329,]  101 #>  [5330,]  100 #>  [5331,]  100 #>  [5332,]  100 #>  [5333,]  101 #>  [5334,]  100 #>  [5335,]  101 #>  [5336,]  100 #>  [5337,]  101 #>  [5338,]  100 #>  [5339,]  100 #>  [5340,]  100 #>  [5341,]  101 #>  [5342,]  100 #>  [5343,]  100 #>  [5344,]  101 #>  [5345,]  100 #>  [5346,]  100 #>  [5347,]  101 #>  [5348,]  100 #>  [5349,]  100 #>  [5350,]  101 #>  [5351,]  100 #>  [5352,]  101 #>  [5353,]  100 #>  [5354,]  100 #>  [5355,]  101 #>  [5356,]  100 #>  [5357,]  100 #>  [5358,]  101 #>  [5359,]  101 #>  [5360,]  100 #>  [5361,]  101 #>  [5362,]  100 #>  [5363,]  100 #>  [5364,]  100 #>  [5365,]  100 #>  [5366,]  100 #>  [5367,]  100 #>  [5368,]  101 #>  [5369,]  101 #>  [5370,]  101 #>  [5371,]  101 #>  [5372,]  100 #>  [5373,]  101 #>  [5374,]  101 #>  [5375,]  101 #>  [5376,]  101 #>  [5377,]  101 #>  [5378,]  100 #>  [5379,]  101 #>  [5380,]  100 #>  [5381,]  101 #>  [5382,]  100 #>  [5383,]  101 #>  [5384,]  101 #>  [5385,]  100 #>  [5386,]  101 #>  [5387,]  101 #>  [5388,]  100 #>  [5389,]  100 #>  [5390,]  101 #>  [5391,]  100 #>  [5392,]  101 #>  [5393,]  101 #>  [5394,]  101 #>  [5395,]  100 #>  [5396,]  101 #>  [5397,]  101 #>  [5398,]  101 #>  [5399,]  101 #>  [5400,]  101 #>  [5401,]  102 #>  [5402,]  103 #>  [5403,]  102 #>  [5404,]  102 #>  [5405,]  103 #>  [5406,]  102 #>  [5407,]  103 #>  [5408,]  102 #>  [5409,]  103 #>  [5410,]  103 #>  [5411,]  102 #>  [5412,]  103 #>  [5413,]  103 #>  [5414,]  102 #>  [5415,]  102 #>  [5416,]  102 #>  [5417,]  103 #>  [5418,]  103 #>  [5419,]  102 #>  [5420,]  103 #>  [5421,]  103 #>  [5422,]  103 #>  [5423,]  103 #>  [5424,]  103 #>  [5425,]  102 #>  [5426,]  102 #>  [5427,]  103 #>  [5428,]  102 #>  [5429,]  103 #>  [5430,]  103 #>  [5431,]  103 #>  [5432,]  103 #>  [5433,]  103 #>  [5434,]  102 #>  [5435,]  102 #>  [5436,]  103 #>  [5437,]  102 #>  [5438,]  102 #>  [5439,]  102 #>  [5440,]  103 #>  [5441,]  103 #>  [5442,]  102 #>  [5443,]  102 #>  [5444,]  103 #>  [5445,]  102 #>  [5446,]  102 #>  [5447,]  103 #>  [5448,]  103 #>  [5449,]  102 #>  [5450,]  103 #>  [5451,]  102 #>  [5452,]  102 #>  [5453,]  103 #>  [5454,]  103 #>  [5455,]  102 #>  [5456,]  102 #>  [5457,]  102 #>  [5458,]  103 #>  [5459,]  102 #>  [5460,]  103 #>  [5461,]  103 #>  [5462,]  102 #>  [5463,]  103 #>  [5464,]  102 #>  [5465,]  102 #>  [5466,]  102 #>  [5467,]  102 #>  [5468,]  102 #>  [5469,]  102 #>  [5470,]  103 #>  [5471,]  102 #>  [5472,]  102 #>  [5473,]  102 #>  [5474,]  103 #>  [5475,]  103 #>  [5476,]  103 #>  [5477,]  102 #>  [5478,]  103 #>  [5479,]  102 #>  [5480,]  103 #>  [5481,]  103 #>  [5482,]  102 #>  [5483,]  103 #>  [5484,]  103 #>  [5485,]  102 #>  [5486,]  103 #>  [5487,]  103 #>  [5488,]  103 #>  [5489,]  102 #>  [5490,]  102 #>  [5491,]  102 #>  [5492,]  103 #>  [5493,]  103 #>  [5494,]  102 #>  [5495,]  103 #>  [5496,]  102 #>  [5497,]  102 #>  [5498,]  102 #>  [5499,]  102 #>  [5500,]  102 #>  [5501,]  105 #>  [5502,]  104 #>  [5503,]  104 #>  [5504,]  104 #>  [5505,]  104 #>  [5506,]  104 #>  [5507,]  104 #>  [5508,]  104 #>  [5509,]  105 #>  [5510,]  104 #>  [5511,]  105 #>  [5512,]  104 #>  [5513,]  105 #>  [5514,]  104 #>  [5515,]  104 #>  [5516,]  104 #>  [5517,]  105 #>  [5518,]  105 #>  [5519,]  104 #>  [5520,]  105 #>  [5521,]  104 #>  [5522,]  104 #>  [5523,]  104 #>  [5524,]  104 #>  [5525,]  104 #>  [5526,]  104 #>  [5527,]  105 #>  [5528,]  105 #>  [5529,]  105 #>  [5530,]  104 #>  [5531,]  104 #>  [5532,]  104 #>  [5533,]  105 #>  [5534,]  104 #>  [5535,]  104 #>  [5536,]  105 #>  [5537,]  104 #>  [5538,]  105 #>  [5539,]  105 #>  [5540,]  104 #>  [5541,]  105 #>  [5542,]  105 #>  [5543,]  104 #>  [5544,]  104 #>  [5545,]  104 #>  [5546,]  104 #>  [5547,]  104 #>  [5548,]  104 #>  [5549,]  104 #>  [5550,]  104 #>  [5551,]  105 #>  [5552,]  104 #>  [5553,]  105 #>  [5554,]  105 #>  [5555,]  104 #>  [5556,]  105 #>  [5557,]  104 #>  [5558,]  105 #>  [5559,]  104 #>  [5560,]  104 #>  [5561,]  104 #>  [5562,]  105 #>  [5563,]  104 #>  [5564,]  104 #>  [5565,]  105 #>  [5566,]  105 #>  [5567,]  104 #>  [5568,]  104 #>  [5569,]  104 #>  [5570,]  105 #>  [5571,]  104 #>  [5572,]  104 #>  [5573,]  104 #>  [5574,]  104 #>  [5575,]  104 #>  [5576,]  104 #>  [5577,]  105 #>  [5578,]  104 #>  [5579,]  105 #>  [5580,]  104 #>  [5581,]  104 #>  [5582,]  105 #>  [5583,]  105 #>  [5584,]  105 #>  [5585,]  105 #>  [5586,]  104 #>  [5587,]  105 #>  [5588,]  104 #>  [5589,]  105 #>  [5590,]  105 #>  [5591,]  105 #>  [5592,]  104 #>  [5593,]  105 #>  [5594,]  105 #>  [5595,]  104 #>  [5596,]  104 #>  [5597,]  104 #>  [5598,]  104 #>  [5599,]  104 #>  [5600,]  104 #>  [5601,]  107 #>  [5602,]  107 #>  [5603,]  106 #>  [5604,]  107 #>  [5605,]  107 #>  [5606,]  106 #>  [5607,]  107 #>  [5608,]  107 #>  [5609,]  107 #>  [5610,]  107 #>  [5611,]  106 #>  [5612,]  107 #>  [5613,]  107 #>  [5614,]  107 #>  [5615,]  107 #>  [5616,]  106 #>  [5617,]  107 #>  [5618,]  107 #>  [5619,]  106 #>  [5620,]  107 #>  [5621,]  107 #>  [5622,]  107 #>  [5623,]  107 #>  [5624,]  107 #>  [5625,]  107 #>  [5626,]  107 #>  [5627,]  107 #>  [5628,]  107 #>  [5629,]  107 #>  [5630,]  107 #>  [5631,]  107 #>  [5632,]  107 #>  [5633,]  107 #>  [5634,]  106 #>  [5635,]  106 #>  [5636,]  107 #>  [5637,]  106 #>  [5638,]  106 #>  [5639,]  107 #>  [5640,]  107 #>  [5641,]  107 #>  [5642,]  107 #>  [5643,]  107 #>  [5644,]  107 #>  [5645,]  106 #>  [5646,]  107 #>  [5647,]  107 #>  [5648,]  107 #>  [5649,]  106 #>  [5650,]  107 #>  [5651,]  107 #>  [5652,]  106 #>  [5653,]  107 #>  [5654,]  107 #>  [5655,]  107 #>  [5656,]  107 #>  [5657,]  107 #>  [5658,]  107 #>  [5659,]  107 #>  [5660,]  107 #>  [5661,]  107 #>  [5662,]  107 #>  [5663,]  107 #>  [5664,]  106 #>  [5665,]  107 #>  [5666,]  107 #>  [5667,]  107 #>  [5668,]  106 #>  [5669,]  107 #>  [5670,]  107 #>  [5671,]  107 #>  [5672,]  106 #>  [5673,]  107 #>  [5674,]  107 #>  [5675,]  107 #>  [5676,]  107 #>  [5677,]  107 #>  [5678,]  107 #>  [5679,]  107 #>  [5680,]  107 #>  [5681,]  107 #>  [5682,]  107 #>  [5683,]  107 #>  [5684,]  107 #>  [5685,]  107 #>  [5686,]  107 #>  [5687,]  107 #>  [5688,]  107 #>  [5689,]  107 #>  [5690,]  107 #>  [5691,]  107 #>  [5692,]  107 #>  [5693,]  107 #>  [5694,]  107 #>  [5695,]  107 #>  [5696,]  106 #>  [5697,]  106 #>  [5698,]  107 #>  [5699,]  107 #>  [5700,]  107 #>  [5701,]  108 #>  [5702,]  108 #>  [5703,]  108 #>  [5704,]  108 #>  [5705,]  108 #>  [5706,]  108 #>  [5707,]  109 #>  [5708,]  108 #>  [5709,]  108 #>  [5710,]  108 #>  [5711,]  108 #>  [5712,]  108 #>  [5713,]  108 #>  [5714,]  108 #>  [5715,]  108 #>  [5716,]  109 #>  [5717,]  108 #>  [5718,]  108 #>  [5719,]  108 #>  [5720,]  109 #>  [5721,]  108 #>  [5722,]  108 #>  [5723,]  108 #>  [5724,]  109 #>  [5725,]  108 #>  [5726,]  108 #>  [5727,]  108 #>  [5728,]  109 #>  [5729,]  108 #>  [5730,]  108 #>  [5731,]  108 #>  [5732,]  108 #>  [5733,]  108 #>  [5734,]  108 #>  [5735,]  108 #>  [5736,]  108 #>  [5737,]  108 #>  [5738,]  108 #>  [5739,]  108 #>  [5740,]  108 #>  [5741,]  108 #>  [5742,]  108 #>  [5743,]  108 #>  [5744,]  108 #>  [5745,]  108 #>  [5746,]  108 #>  [5747,]  108 #>  [5748,]  108 #>  [5749,]  108 #>  [5750,]  109 #>  [5751,]  108 #>  [5752,]  109 #>  [5753,]  108 #>  [5754,]  108 #>  [5755,]  108 #>  [5756,]  108 #>  [5757,]  108 #>  [5758,]  108 #>  [5759,]  108 #>  [5760,]  108 #>  [5761,]  108 #>  [5762,]  108 #>  [5763,]  108 #>  [5764,]  108 #>  [5765,]  108 #>  [5766,]  108 #>  [5767,]  108 #>  [5768,]  108 #>  [5769,]  108 #>  [5770,]  108 #>  [5771,]  108 #>  [5772,]  108 #>  [5773,]  108 #>  [5774,]  108 #>  [5775,]  108 #>  [5776,]  109 #>  [5777,]  108 #>  [5778,]  108 #>  [5779,]  108 #>  [5780,]  108 #>  [5781,]  108 #>  [5782,]  108 #>  [5783,]  108 #>  [5784,]  108 #>  [5785,]  108 #>  [5786,]  109 #>  [5787,]  108 #>  [5788,]  108 #>  [5789,]  108 #>  [5790,]  108 #>  [5791,]  109 #>  [5792,]  108 #>  [5793,]  108 #>  [5794,]  108 #>  [5795,]  108 #>  [5796,]  108 #>  [5797,]  108 #>  [5798,]  108 #>  [5799,]  108 #>  [5800,]  108 #>  [5801,]  110 #>  [5802,]  111 #>  [5803,]  110 #>  [5804,]  110 #>  [5805,]  111 #>  [5806,]  110 #>  [5807,]  111 #>  [5808,]  110 #>  [5809,]  111 #>  [5810,]  111 #>  [5811,]  110 #>  [5812,]  111 #>  [5813,]  111 #>  [5814,]  110 #>  [5815,]  111 #>  [5816,]  110 #>  [5817,]  111 #>  [5818,]  111 #>  [5819,]  110 #>  [5820,]  111 #>  [5821,]  111 #>  [5822,]  111 #>  [5823,]  111 #>  [5824,]  111 #>  [5825,]  111 #>  [5826,]  110 #>  [5827,]  111 #>  [5828,]  110 #>  [5829,]  111 #>  [5830,]  111 #>  [5831,]  111 #>  [5832,]  111 #>  [5833,]  111 #>  [5834,]  110 #>  [5835,]  110 #>  [5836,]  111 #>  [5837,]  110 #>  [5838,]  110 #>  [5839,]  111 #>  [5840,]  111 #>  [5841,]  111 #>  [5842,]  110 #>  [5843,]  111 #>  [5844,]  111 #>  [5845,]  110 #>  [5846,]  111 #>  [5847,]  111 #>  [5848,]  111 #>  [5849,]  110 #>  [5850,]  111 #>  [5851,]  111 #>  [5852,]  110 #>  [5853,]  111 #>  [5854,]  111 #>  [5855,]  110 #>  [5856,]  110 #>  [5857,]  111 #>  [5858,]  111 #>  [5859,]  110 #>  [5860,]  111 #>  [5861,]  111 #>  [5862,]  110 #>  [5863,]  111 #>  [5864,]  110 #>  [5865,]  110 #>  [5866,]  111 #>  [5867,]  111 #>  [5868,]  110 #>  [5869,]  110 #>  [5870,]  111 #>  [5871,]  111 #>  [5872,]  110 #>  [5873,]  110 #>  [5874,]  111 #>  [5875,]  111 #>  [5876,]  111 #>  [5877,]  110 #>  [5878,]  111 #>  [5879,]  110 #>  [5880,]  111 #>  [5881,]  111 #>  [5882,]  111 #>  [5883,]  111 #>  [5884,]  111 #>  [5885,]  111 #>  [5886,]  111 #>  [5887,]  111 #>  [5888,]  111 #>  [5889,]  110 #>  [5890,]  111 #>  [5891,]  110 #>  [5892,]  111 #>  [5893,]  111 #>  [5894,]  110 #>  [5895,]  111 #>  [5896,]  110 #>  [5897,]  110 #>  [5898,]  111 #>  [5899,]  111 #>  [5900,]  110 #>  [5901,]  113 #>  [5902,]  112 #>  [5903,]  112 #>  [5904,]  113 #>  [5905,]  112 #>  [5906,]  112 #>  [5907,]  113 #>  [5908,]  113 #>  [5909,]  113 #>  [5910,]  113 #>  [5911,]  112 #>  [5912,]  112 #>  [5913,]  113 #>  [5914,]  112 #>  [5915,]  113 #>  [5916,]  113 #>  [5917,]  113 #>  [5918,]  113 #>  [5919,]  112 #>  [5920,]  112 #>  [5921,]  113 #>  [5922,]  112 #>  [5923,]  113 #>  [5924,]  112 #>  [5925,]  113 #>  [5926,]  112 #>  [5927,]  113 #>  [5928,]  113 #>  [5929,]  112 #>  [5930,]  112 #>  [5931,]  112 #>  [5932,]  112 #>  [5933,]  112 #>  [5934,]  112 #>  [5935,]  112 #>  [5936,]  112 #>  [5937,]  113 #>  [5938,]  113 #>  [5939,]  113 #>  [5940,]  112 #>  [5941,]  112 #>  [5942,]  112 #>  [5943,]  113 #>  [5944,]  113 #>  [5945,]  113 #>  [5946,]  113 #>  [5947,]  113 #>  [5948,]  112 #>  [5949,]  112 #>  [5950,]  112 #>  [5951,]  112 #>  [5952,]  112 #>  [5953,]  113 #>  [5954,]  112 #>  [5955,]  112 #>  [5956,]  113 #>  [5957,]  112 #>  [5958,]  112 #>  [5959,]  112 #>  [5960,]  112 #>  [5961,]  113 #>  [5962,]  112 #>  [5963,]  112 #>  [5964,]  113 #>  [5965,]  112 #>  [5966,]  112 #>  [5967,]  112 #>  [5968,]  112 #>  [5969,]  112 #>  [5970,]  113 #>  [5971,]  113 #>  [5972,]  113 #>  [5973,]  113 #>  [5974,]  113 #>  [5975,]  113 #>  [5976,]  113 #>  [5977,]  113 #>  [5978,]  112 #>  [5979,]  113 #>  [5980,]  112 #>  [5981,]  112 #>  [5982,]  113 #>  [5983,]  112 #>  [5984,]  113 #>  [5985,]  112 #>  [5986,]  113 #>  [5987,]  113 #>  [5988,]  113 #>  [5989,]  112 #>  [5990,]  113 #>  [5991,]  112 #>  [5992,]  112 #>  [5993,]  112 #>  [5994,]  113 #>  [5995,]  113 #>  [5996,]  113 #>  [5997,]  112 #>  [5998,]  112 #>  [5999,]  112 #>  [6000,]  113 #>  [6001,]  115 #>  [6002,]  114 #>  [6003,]  114 #>  [6004,]  114 #>  [6005,]  114 #>  [6006,]  114 #>  [6007,]  114 #>  [6008,]  114 #>  [6009,]  115 #>  [6010,]  114 #>  [6011,]  115 #>  [6012,]  114 #>  [6013,]  115 #>  [6014,]  114 #>  [6015,]  114 #>  [6016,]  114 #>  [6017,]  115 #>  [6018,]  115 #>  [6019,]  114 #>  [6020,]  115 #>  [6021,]  114 #>  [6022,]  114 #>  [6023,]  114 #>  [6024,]  114 #>  [6025,]  114 #>  [6026,]  114 #>  [6027,]  115 #>  [6028,]  115 #>  [6029,]  115 #>  [6030,]  114 #>  [6031,]  114 #>  [6032,]  114 #>  [6033,]  115 #>  [6034,]  114 #>  [6035,]  114 #>  [6036,]  115 #>  [6037,]  114 #>  [6038,]  115 #>  [6039,]  115 #>  [6040,]  114 #>  [6041,]  114 #>  [6042,]  115 #>  [6043,]  114 #>  [6044,]  114 #>  [6045,]  114 #>  [6046,]  114 #>  [6047,]  114 #>  [6048,]  114 #>  [6049,]  114 #>  [6050,]  114 #>  [6051,]  115 #>  [6052,]  114 #>  [6053,]  115 #>  [6054,]  115 #>  [6055,]  114 #>  [6056,]  115 #>  [6057,]  114 #>  [6058,]  115 #>  [6059,]  114 #>  [6060,]  114 #>  [6061,]  114 #>  [6062,]  115 #>  [6063,]  114 #>  [6064,]  114 #>  [6065,]  115 #>  [6066,]  115 #>  [6067,]  114 #>  [6068,]  114 #>  [6069,]  114 #>  [6070,]  114 #>  [6071,]  114 #>  [6072,]  114 #>  [6073,]  114 #>  [6074,]  114 #>  [6075,]  114 #>  [6076,]  114 #>  [6077,]  115 #>  [6078,]  114 #>  [6079,]  115 #>  [6080,]  114 #>  [6081,]  114 #>  [6082,]  115 #>  [6083,]  115 #>  [6084,]  115 #>  [6085,]  115 #>  [6086,]  114 #>  [6087,]  115 #>  [6088,]  114 #>  [6089,]  115 #>  [6090,]  115 #>  [6091,]  115 #>  [6092,]  114 #>  [6093,]  115 #>  [6094,]  115 #>  [6095,]  114 #>  [6096,]  114 #>  [6097,]  114 #>  [6098,]  114 #>  [6099,]  114 #>  [6100,]  114 #>  [6101,]  117 #>  [6102,]  116 #>  [6103,]  116 #>  [6104,]  117 #>  [6105,]  116 #>  [6106,]  116 #>  [6107,]  117 #>  [6108,]  116 #>  [6109,]  117 #>  [6110,]  117 #>  [6111,]  116 #>  [6112,]  116 #>  [6113,]  117 #>  [6114,]  117 #>  [6115,]  116 #>  [6116,]  117 #>  [6117,]  116 #>  [6118,]  116 #>  [6119,]  116 #>  [6120,]  117 #>  [6121,]  116 #>  [6122,]  117 #>  [6123,]  116 #>  [6124,]  117 #>  [6125,]  117 #>  [6126,]  116 #>  [6127,]  116 #>  [6128,]  117 #>  [6129,]  116 #>  [6130,]  116 #>  [6131,]  116 #>  [6132,]  116 #>  [6133,]  116 #>  [6134,]  116 #>  [6135,]  116 #>  [6136,]  117 #>  [6137,]  116 #>  [6138,]  116 #>  [6139,]  117 #>  [6140,]  116 #>  [6141,]  116 #>  [6142,]  116 #>  [6143,]  116 #>  [6144,]  116 #>  [6145,]  117 #>  [6146,]  116 #>  [6147,]  116 #>  [6148,]  116 #>  [6149,]  117 #>  [6150,]  117 #>  [6151,]  116 #>  [6152,]  117 #>  [6153,]  117 #>  [6154,]  117 #>  [6155,]  117 #>  [6156,]  116 #>  [6157,]  117 #>  [6158,]  117 #>  [6159,]  117 #>  [6160,]  116 #>  [6161,]  116 #>  [6162,]  116 #>  [6163,]  116 #>  [6164,]  116 #>  [6165,]  116 #>  [6166,]  116 #>  [6167,]  117 #>  [6168,]  116 #>  [6169,]  116 #>  [6170,]  116 #>  [6171,]  116 #>  [6172,]  117 #>  [6173,]  117 #>  [6174,]  116 #>  [6175,]  116 #>  [6176,]  117 #>  [6177,]  116 #>  [6178,]  116 #>  [6179,]  116 #>  [6180,]  116 #>  [6181,]  116 #>  [6182,]  116 #>  [6183,]  116 #>  [6184,]  116 #>  [6185,]  117 #>  [6186,]  117 #>  [6187,]  117 #>  [6188,]  117 #>  [6189,]  116 #>  [6190,]  117 #>  [6191,]  117 #>  [6192,]  116 #>  [6193,]  116 #>  [6194,]  116 #>  [6195,]  116 #>  [6196,]  116 #>  [6197,]  116 #>  [6198,]  116 #>  [6199,]  116 #>  [6200,]  116 #>  [6201,]  118 #>  [6202,]  118 #>  [6203,]  118 #>  [6204,]  118 #>  [6205,]  118 #>  [6206,]  118 #>  [6207,]  118 #>  [6208,]  119 #>  [6209,]  118 #>  [6210,]  118 #>  [6211,]  118 #>  [6212,]  118 #>  [6213,]  119 #>  [6214,]  118 #>  [6215,]  119 #>  [6216,]  118 #>  [6217,]  118 #>  [6218,]  118 #>  [6219,]  119 #>  [6220,]  119 #>  [6221,]  118 #>  [6222,]  119 #>  [6223,]  118 #>  [6224,]  118 #>  [6225,]  118 #>  [6226,]  118 #>  [6227,]  119 #>  [6228,]  118 #>  [6229,]  119 #>  [6230,]  118 #>  [6231,]  118 #>  [6232,]  118 #>  [6233,]  118 #>  [6234,]  118 #>  [6235,]  118 #>  [6236,]  119 #>  [6237,]  119 #>  [6238,]  119 #>  [6239,]  118 #>  [6240,]  118 #>  [6241,]  119 #>  [6242,]  118 #>  [6243,]  118 #>  [6244,]  118 #>  [6245,]  118 #>  [6246,]  119 #>  [6247,]  118 #>  [6248,]  118 #>  [6249,]  118 #>  [6250,]  119 #>  [6251,]  119 #>  [6252,]  118 #>  [6253,]  119 #>  [6254,]  118 #>  [6255,]  119 #>  [6256,]  118 #>  [6257,]  118 #>  [6258,]  119 #>  [6259,]  118 #>  [6260,]  119 #>  [6261,]  118 #>  [6262,]  118 #>  [6263,]  118 #>  [6264,]  119 #>  [6265,]  118 #>  [6266,]  119 #>  [6267,]  118 #>  [6268,]  118 #>  [6269,]  119 #>  [6270,]  118 #>  [6271,]  119 #>  [6272,]  118 #>  [6273,]  118 #>  [6274,]  118 #>  [6275,]  118 #>  [6276,]  118 #>  [6277,]  119 #>  [6278,]  118 #>  [6279,]  118 #>  [6280,]  119 #>  [6281,]  119 #>  [6282,]  118 #>  [6283,]  119 #>  [6284,]  119 #>  [6285,]  119 #>  [6286,]  118 #>  [6287,]  119 #>  [6288,]  118 #>  [6289,]  118 #>  [6290,]  119 #>  [6291,]  118 #>  [6292,]  118 #>  [6293,]  118 #>  [6294,]  118 #>  [6295,]  118 #>  [6296,]  119 #>  [6297,]  119 #>  [6298,]  118 #>  [6299,]  118 #>  [6300,]  119 #>  [6301,]  121 #>  [6302,]  120 #>  [6303,]  121 #>  [6304,]  121 #>  [6305,]  121 #>  [6306,]  120 #>  [6307,]  121 #>  [6308,]  121 #>  [6309,]  121 #>  [6310,]  121 #>  [6311,]  120 #>  [6312,]  120 #>  [6313,]  121 #>  [6314,]  121 #>  [6315,]  120 #>  [6316,]  121 #>  [6317,]  120 #>  [6318,]  121 #>  [6319,]  120 #>  [6320,]  121 #>  [6321,]  121 #>  [6322,]  121 #>  [6323,]  120 #>  [6324,]  121 #>  [6325,]  121 #>  [6326,]  120 #>  [6327,]  121 #>  [6328,]  121 #>  [6329,]  120 #>  [6330,]  120 #>  [6331,]  120 #>  [6332,]  121 #>  [6333,]  121 #>  [6334,]  120 #>  [6335,]  120 #>  [6336,]  121 #>  [6337,]  120 #>  [6338,]  121 #>  [6339,]  121 #>  [6340,]  121 #>  [6341,]  121 #>  [6342,]  120 #>  [6343,]  120 #>  [6344,]  120 #>  [6345,]  121 #>  [6346,]  120 #>  [6347,]  120 #>  [6348,]  120 #>  [6349,]  121 #>  [6350,]  121 #>  [6351,]  121 #>  [6352,]  121 #>  [6353,]  121 #>  [6354,]  121 #>  [6355,]  121 #>  [6356,]  120 #>  [6357,]  121 #>  [6358,]  121 #>  [6359,]  121 #>  [6360,]  120 #>  [6361,]  120 #>  [6362,]  121 #>  [6363,]  120 #>  [6364,]  120 #>  [6365,]  120 #>  [6366,]  120 #>  [6367,]  121 #>  [6368,]  120 #>  [6369,]  121 #>  [6370,]  120 #>  [6371,]  121 #>  [6372,]  121 #>  [6373,]  121 #>  [6374,]  121 #>  [6375,]  120 #>  [6376,]  121 #>  [6377,]  121 #>  [6378,]  120 #>  [6379,]  120 #>  [6380,]  121 #>  [6381,]  120 #>  [6382,]  121 #>  [6383,]  121 #>  [6384,]  121 #>  [6385,]  121 #>  [6386,]  121 #>  [6387,]  121 #>  [6388,]  121 #>  [6389,]  121 #>  [6390,]  121 #>  [6391,]  121 #>  [6392,]  120 #>  [6393,]  120 #>  [6394,]  120 #>  [6395,]  120 #>  [6396,]  120 #>  [6397,]  121 #>  [6398,]  121 #>  [6399,]  121 #>  [6400,]  120 #>  [6401,]  123 #>  [6402,]  123 #>  [6403,]  122 #>  [6404,]  123 #>  [6405,]  123 #>  [6406,]  122 #>  [6407,]  122 #>  [6408,]  123 #>  [6409,]  123 #>  [6410,]  123 #>  [6411,]  123 #>  [6412,]  123 #>  [6413,]  123 #>  [6414,]  123 #>  [6415,]  123 #>  [6416,]  123 #>  [6417,]  123 #>  [6418,]  123 #>  [6419,]  123 #>  [6420,]  122 #>  [6421,]  122 #>  [6422,]  123 #>  [6423,]  122 #>  [6424,]  123 #>  [6425,]  122 #>  [6426,]  123 #>  [6427,]  123 #>  [6428,]  123 #>  [6429,]  122 #>  [6430,]  123 #>  [6431,]  123 #>  [6432,]  123 #>  [6433,]  123 #>  [6434,]  122 #>  [6435,]  122 #>  [6436,]  123 #>  [6437,]  122 #>  [6438,]  123 #>  [6439,]  123 #>  [6440,]  123 #>  [6441,]  123 #>  [6442,]  122 #>  [6443,]  123 #>  [6444,]  122 #>  [6445,]  122 #>  [6446,]  123 #>  [6447,]  123 #>  [6448,]  123 #>  [6449,]  123 #>  [6450,]  122 #>  [6451,]  123 #>  [6452,]  123 #>  [6453,]  122 #>  [6454,]  122 #>  [6455,]  122 #>  [6456,]  122 #>  [6457,]  122 #>  [6458,]  123 #>  [6459,]  123 #>  [6460,]  122 #>  [6461,]  123 #>  [6462,]  123 #>  [6463,]  123 #>  [6464,]  122 #>  [6465,]  122 #>  [6466,]  123 #>  [6467,]  123 #>  [6468,]  123 #>  [6469,]  123 #>  [6470,]  123 #>  [6471,]  123 #>  [6472,]  123 #>  [6473,]  122 #>  [6474,]  122 #>  [6475,]  123 #>  [6476,]  123 #>  [6477,]  123 #>  [6478,]  123 #>  [6479,]  123 #>  [6480,]  122 #>  [6481,]  122 #>  [6482,]  122 #>  [6483,]  123 #>  [6484,]  122 #>  [6485,]  122 #>  [6486,]  122 #>  [6487,]  123 #>  [6488,]  122 #>  [6489,]  122 #>  [6490,]  123 #>  [6491,]  123 #>  [6492,]  123 #>  [6493,]  123 #>  [6494,]  122 #>  [6495,]  123 #>  [6496,]  123 #>  [6497,]  122 #>  [6498,]  122 #>  [6499,]  122 #>  [6500,]  123 #>  [6501,]  125 #>  [6502,]  125 #>  [6503,]  125 #>  [6504,]  125 #>  [6505,]  125 #>  [6506,]  125 #>  [6507,]  124 #>  [6508,]  125 #>  [6509,]  125 #>  [6510,]  125 #>  [6511,]  125 #>  [6512,]  125 #>  [6513,]  125 #>  [6514,]  125 #>  [6515,]  125 #>  [6516,]  125 #>  [6517,]  125 #>  [6518,]  125 #>  [6519,]  125 #>  [6520,]  125 #>  [6521,]  124 #>  [6522,]  125 #>  [6523,]  124 #>  [6524,]  125 #>  [6525,]  125 #>  [6526,]  125 #>  [6527,]  125 #>  [6528,]  125 #>  [6529,]  125 #>  [6530,]  124 #>  [6531,]  125 #>  [6532,]  125 #>  [6533,]  125 #>  [6534,]  125 #>  [6535,]  125 #>  [6536,]  125 #>  [6537,]  125 #>  [6538,]  125 #>  [6539,]  124 #>  [6540,]  125 #>  [6541,]  125 #>  [6542,]  125 #>  [6543,]  125 #>  [6544,]  125 #>  [6545,]  125 #>  [6546,]  125 #>  [6547,]  125 #>  [6548,]  125 #>  [6549,]  124 #>  [6550,]  125 #>  [6551,]  125 #>  [6552,]  125 #>  [6553,]  125 #>  [6554,]  124 #>  [6555,]  125 #>  [6556,]  125 #>  [6557,]  125 #>  [6558,]  125 #>  [6559,]  125 #>  [6560,]  125 #>  [6561,]  125 #>  [6562,]  124 #>  [6563,]  125 #>  [6564,]  125 #>  [6565,]  125 #>  [6566,]  125 #>  [6567,]  125 #>  [6568,]  125 #>  [6569,]  125 #>  [6570,]  124 #>  [6571,]  125 #>  [6572,]  125 #>  [6573,]  125 #>  [6574,]  125 #>  [6575,]  125 #>  [6576,]  125 #>  [6577,]  125 #>  [6578,]  125 #>  [6579,]  125 #>  [6580,]  124 #>  [6581,]  125 #>  [6582,]  125 #>  [6583,]  124 #>  [6584,]  125 #>  [6585,]  125 #>  [6586,]  125 #>  [6587,]  125 #>  [6588,]  125 #>  [6589,]  125 #>  [6590,]  125 #>  [6591,]  125 #>  [6592,]  125 #>  [6593,]  125 #>  [6594,]  125 #>  [6595,]  124 #>  [6596,]  125 #>  [6597,]  125 #>  [6598,]  124 #>  [6599,]  125 #>  [6600,]  125 #>  [6601,]  127 #>  [6602,]  126 #>  [6603,]  126 #>  [6604,]  126 #>  [6605,]  127 #>  [6606,]  126 #>  [6607,]  126 #>  [6608,]  126 #>  [6609,]  127 #>  [6610,]  126 #>  [6611,]  127 #>  [6612,]  126 #>  [6613,]  127 #>  [6614,]  126 #>  [6615,]  126 #>  [6616,]  126 #>  [6617,]  127 #>  [6618,]  127 #>  [6619,]  127 #>  [6620,]  127 #>  [6621,]  127 #>  [6622,]  127 #>  [6623,]  126 #>  [6624,]  127 #>  [6625,]  126 #>  [6626,]  126 #>  [6627,]  127 #>  [6628,]  127 #>  [6629,]  127 #>  [6630,]  126 #>  [6631,]  126 #>  [6632,]  126 #>  [6633,]  127 #>  [6634,]  126 #>  [6635,]  126 #>  [6636,]  127 #>  [6637,]  126 #>  [6638,]  127 #>  [6639,]  127 #>  [6640,]  126 #>  [6641,]  127 #>  [6642,]  127 #>  [6643,]  126 #>  [6644,]  126 #>  [6645,]  126 #>  [6646,]  126 #>  [6647,]  126 #>  [6648,]  126 #>  [6649,]  126 #>  [6650,]  126 #>  [6651,]  127 #>  [6652,]  126 #>  [6653,]  127 #>  [6654,]  127 #>  [6655,]  126 #>  [6656,]  127 #>  [6657,]  126 #>  [6658,]  127 #>  [6659,]  126 #>  [6660,]  126 #>  [6661,]  127 #>  [6662,]  127 #>  [6663,]  126 #>  [6664,]  127 #>  [6665,]  127 #>  [6666,]  127 #>  [6667,]  126 #>  [6668,]  126 #>  [6669,]  126 #>  [6670,]  127 #>  [6671,]  126 #>  [6672,]  126 #>  [6673,]  127 #>  [6674,]  126 #>  [6675,]  126 #>  [6676,]  126 #>  [6677,]  127 #>  [6678,]  126 #>  [6679,]  127 #>  [6680,]  126 #>  [6681,]  127 #>  [6682,]  127 #>  [6683,]  127 #>  [6684,]  127 #>  [6685,]  127 #>  [6686,]  126 #>  [6687,]  127 #>  [6688,]  126 #>  [6689,]  127 #>  [6690,]  127 #>  [6691,]  127 #>  [6692,]  126 #>  [6693,]  127 #>  [6694,]  127 #>  [6695,]  126 #>  [6696,]  126 #>  [6697,]  126 #>  [6698,]  126 #>  [6699,]  127 #>  [6700,]  127 #>  [6701,]  129 #>  [6702,]  129 #>  [6703,]  129 #>  [6704,]  129 #>  [6705,]  129 #>  [6706,]  129 #>  [6707,]  128 #>  [6708,]  129 #>  [6709,]  129 #>  [6710,]  129 #>  [6711,]  129 #>  [6712,]  129 #>  [6713,]  129 #>  [6714,]  129 #>  [6715,]  129 #>  [6716,]  129 #>  [6717,]  129 #>  [6718,]  129 #>  [6719,]  129 #>  [6720,]  129 #>  [6721,]  128 #>  [6722,]  129 #>  [6723,]  128 #>  [6724,]  129 #>  [6725,]  129 #>  [6726,]  129 #>  [6727,]  129 #>  [6728,]  129 #>  [6729,]  129 #>  [6730,]  128 #>  [6731,]  129 #>  [6732,]  129 #>  [6733,]  129 #>  [6734,]  129 #>  [6735,]  129 #>  [6736,]  129 #>  [6737,]  129 #>  [6738,]  129 #>  [6739,]  128 #>  [6740,]  129 #>  [6741,]  129 #>  [6742,]  129 #>  [6743,]  129 #>  [6744,]  129 #>  [6745,]  129 #>  [6746,]  129 #>  [6747,]  129 #>  [6748,]  129 #>  [6749,]  128 #>  [6750,]  129 #>  [6751,]  129 #>  [6752,]  129 #>  [6753,]  129 #>  [6754,]  128 #>  [6755,]  129 #>  [6756,]  129 #>  [6757,]  129 #>  [6758,]  129 #>  [6759,]  129 #>  [6760,]  129 #>  [6761,]  129 #>  [6762,]  128 #>  [6763,]  129 #>  [6764,]  129 #>  [6765,]  129 #>  [6766,]  129 #>  [6767,]  129 #>  [6768,]  129 #>  [6769,]  129 #>  [6770,]  128 #>  [6771,]  129 #>  [6772,]  129 #>  [6773,]  129 #>  [6774,]  129 #>  [6775,]  129 #>  [6776,]  129 #>  [6777,]  129 #>  [6778,]  129 #>  [6779,]  129 #>  [6780,]  128 #>  [6781,]  129 #>  [6782,]  129 #>  [6783,]  128 #>  [6784,]  129 #>  [6785,]  129 #>  [6786,]  129 #>  [6787,]  129 #>  [6788,]  129 #>  [6789,]  129 #>  [6790,]  129 #>  [6791,]  129 #>  [6792,]  129 #>  [6793,]  129 #>  [6794,]  129 #>  [6795,]  128 #>  [6796,]  129 #>  [6797,]  129 #>  [6798,]  128 #>  [6799,]  129 #>  [6800,]  129 #>  [6801,]  131 #>  [6802,]  131 #>  [6803,]  130 #>  [6804,]  131 #>  [6805,]  130 #>  [6806,]  130 #>  [6807,]  131 #>  [6808,]  131 #>  [6809,]  131 #>  [6810,]  131 #>  [6811,]  130 #>  [6812,]  130 #>  [6813,]  131 #>  [6814,]  130 #>  [6815,]  131 #>  [6816,]  131 #>  [6817,]  131 #>  [6818,]  131 #>  [6819,]  130 #>  [6820,]  130 #>  [6821,]  131 #>  [6822,]  130 #>  [6823,]  131 #>  [6824,]  130 #>  [6825,]  131 #>  [6826,]  130 #>  [6827,]  131 #>  [6828,]  131 #>  [6829,]  130 #>  [6830,]  130 #>  [6831,]  131 #>  [6832,]  130 #>  [6833,]  130 #>  [6834,]  130 #>  [6835,]  130 #>  [6836,]  130 #>  [6837,]  131 #>  [6838,]  131 #>  [6839,]  131 #>  [6840,]  130 #>  [6841,]  130 #>  [6842,]  130 #>  [6843,]  131 #>  [6844,]  131 #>  [6845,]  131 #>  [6846,]  131 #>  [6847,]  131 #>  [6848,]  130 #>  [6849,]  131 #>  [6850,]  131 #>  [6851,]  130 #>  [6852,]  130 #>  [6853,]  131 #>  [6854,]  130 #>  [6855,]  130 #>  [6856,]  131 #>  [6857,]  130 #>  [6858,]  130 #>  [6859,]  131 #>  [6860,]  130 #>  [6861,]  131 #>  [6862,]  130 #>  [6863,]  130 #>  [6864,]  131 #>  [6865,]  131 #>  [6866,]  130 #>  [6867,]  130 #>  [6868,]  130 #>  [6869,]  130 #>  [6870,]  131 #>  [6871,]  131 #>  [6872,]  131 #>  [6873,]  131 #>  [6874,]  131 #>  [6875,]  131 #>  [6876,]  131 #>  [6877,]  131 #>  [6878,]  130 #>  [6879,]  131 #>  [6880,]  130 #>  [6881,]  130 #>  [6882,]  131 #>  [6883,]  130 #>  [6884,]  131 #>  [6885,]  131 #>  [6886,]  131 #>  [6887,]  131 #>  [6888,]  131 #>  [6889,]  130 #>  [6890,]  131 #>  [6891,]  130 #>  [6892,]  131 #>  [6893,]  130 #>  [6894,]  131 #>  [6895,]  131 #>  [6896,]  131 #>  [6897,]  130 #>  [6898,]  130 #>  [6899,]  130 #>  [6900,]  131 #>  [6901,]  133 #>  [6902,]  132 #>  [6903,]  133 #>  [6904,]  133 #>  [6905,]  133 #>  [6906,]  132 #>  [6907,]  133 #>  [6908,]  133 #>  [6909,]  133 #>  [6910,]  133 #>  [6911,]  132 #>  [6912,]  132 #>  [6913,]  133 #>  [6914,]  133 #>  [6915,]  132 #>  [6916,]  133 #>  [6917,]  132 #>  [6918,]  133 #>  [6919,]  132 #>  [6920,]  133 #>  [6921,]  133 #>  [6922,]  133 #>  [6923,]  132 #>  [6924,]  133 #>  [6925,]  133 #>  [6926,]  132 #>  [6927,]  133 #>  [6928,]  133 #>  [6929,]  132 #>  [6930,]  132 #>  [6931,]  132 #>  [6932,]  133 #>  [6933,]  133 #>  [6934,]  132 #>  [6935,]  132 #>  [6936,]  133 #>  [6937,]  132 #>  [6938,]  133 #>  [6939,]  133 #>  [6940,]  133 #>  [6941,]  133 #>  [6942,]  132 #>  [6943,]  132 #>  [6944,]  132 #>  [6945,]  133 #>  [6946,]  132 #>  [6947,]  132 #>  [6948,]  132 #>  [6949,]  133 #>  [6950,]  133 #>  [6951,]  133 #>  [6952,]  133 #>  [6953,]  133 #>  [6954,]  133 #>  [6955,]  133 #>  [6956,]  132 #>  [6957,]  133 #>  [6958,]  133 #>  [6959,]  133 #>  [6960,]  132 #>  [6961,]  132 #>  [6962,]  133 #>  [6963,]  132 #>  [6964,]  132 #>  [6965,]  132 #>  [6966,]  132 #>  [6967,]  133 #>  [6968,]  132 #>  [6969,]  133 #>  [6970,]  132 #>  [6971,]  133 #>  [6972,]  133 #>  [6973,]  133 #>  [6974,]  133 #>  [6975,]  132 #>  [6976,]  133 #>  [6977,]  133 #>  [6978,]  132 #>  [6979,]  132 #>  [6980,]  133 #>  [6981,]  132 #>  [6982,]  133 #>  [6983,]  133 #>  [6984,]  133 #>  [6985,]  133 #>  [6986,]  133 #>  [6987,]  133 #>  [6988,]  133 #>  [6989,]  133 #>  [6990,]  133 #>  [6991,]  133 #>  [6992,]  132 #>  [6993,]  132 #>  [6994,]  132 #>  [6995,]  132 #>  [6996,]  132 #>  [6997,]  133 #>  [6998,]  133 #>  [6999,]  133 #>  [7000,]  132 #>  [7001,]  135 #>  [7002,]  135 #>  [7003,]  134 #>  [7004,]  135 #>  [7005,]  135 #>  [7006,]  135 #>  [7007,]  135 #>  [7008,]  135 #>  [7009,]  135 #>  [7010,]  135 #>  [7011,]  134 #>  [7012,]  134 #>  [7013,]  135 #>  [7014,]  134 #>  [7015,]  135 #>  [7016,]  135 #>  [7017,]  135 #>  [7018,]  135 #>  [7019,]  134 #>  [7020,]  134 #>  [7021,]  135 #>  [7022,]  134 #>  [7023,]  135 #>  [7024,]  135 #>  [7025,]  135 #>  [7026,]  134 #>  [7027,]  135 #>  [7028,]  135 #>  [7029,]  134 #>  [7030,]  135 #>  [7031,]  135 #>  [7032,]  134 #>  [7033,]  135 #>  [7034,]  135 #>  [7035,]  135 #>  [7036,]  134 #>  [7037,]  135 #>  [7038,]  135 #>  [7039,]  135 #>  [7040,]  134 #>  [7041,]  134 #>  [7042,]  134 #>  [7043,]  135 #>  [7044,]  135 #>  [7045,]  135 #>  [7046,]  135 #>  [7047,]  135 #>  [7048,]  134 #>  [7049,]  135 #>  [7050,]  135 #>  [7051,]  134 #>  [7052,]  135 #>  [7053,]  135 #>  [7054,]  134 #>  [7055,]  135 #>  [7056,]  135 #>  [7057,]  135 #>  [7058,]  135 #>  [7059,]  135 #>  [7060,]  134 #>  [7061,]  135 #>  [7062,]  134 #>  [7063,]  134 #>  [7064,]  135 #>  [7065,]  135 #>  [7066,]  134 #>  [7067,]  135 #>  [7068,]  134 #>  [7069,]  134 #>  [7070,]  135 #>  [7071,]  135 #>  [7072,]  135 #>  [7073,]  135 #>  [7074,]  135 #>  [7075,]  135 #>  [7076,]  135 #>  [7077,]  135 #>  [7078,]  135 #>  [7079,]  135 #>  [7080,]  134 #>  [7081,]  134 #>  [7082,]  135 #>  [7083,]  134 #>  [7084,]  135 #>  [7085,]  135 #>  [7086,]  135 #>  [7087,]  135 #>  [7088,]  135 #>  [7089,]  134 #>  [7090,]  135 #>  [7091,]  134 #>  [7092,]  135 #>  [7093,]  135 #>  [7094,]  135 #>  [7095,]  135 #>  [7096,]  135 #>  [7097,]  135 #>  [7098,]  135 #>  [7099,]  135 #>  [7100,]  135 #>  [7101,]  137 #>  [7102,]  137 #>  [7103,]  137 #>  [7104,]  137 #>  [7105,]  137 #>  [7106,]  137 #>  [7107,]  136 #>  [7108,]  137 #>  [7109,]  137 #>  [7110,]  137 #>  [7111,]  137 #>  [7112,]  137 #>  [7113,]  137 #>  [7114,]  137 #>  [7115,]  137 #>  [7116,]  137 #>  [7117,]  137 #>  [7118,]  137 #>  [7119,]  137 #>  [7120,]  137 #>  [7121,]  136 #>  [7122,]  137 #>  [7123,]  136 #>  [7124,]  137 #>  [7125,]  137 #>  [7126,]  137 #>  [7127,]  137 #>  [7128,]  137 #>  [7129,]  137 #>  [7130,]  136 #>  [7131,]  137 #>  [7132,]  137 #>  [7133,]  137 #>  [7134,]  137 #>  [7135,]  137 #>  [7136,]  137 #>  [7137,]  137 #>  [7138,]  137 #>  [7139,]  136 #>  [7140,]  137 #>  [7141,]  137 #>  [7142,]  137 #>  [7143,]  137 #>  [7144,]  137 #>  [7145,]  137 #>  [7146,]  137 #>  [7147,]  137 #>  [7148,]  137 #>  [7149,]  136 #>  [7150,]  137 #>  [7151,]  137 #>  [7152,]  137 #>  [7153,]  137 #>  [7154,]  136 #>  [7155,]  137 #>  [7156,]  137 #>  [7157,]  137 #>  [7158,]  137 #>  [7159,]  137 #>  [7160,]  137 #>  [7161,]  137 #>  [7162,]  136 #>  [7163,]  137 #>  [7164,]  137 #>  [7165,]  137 #>  [7166,]  137 #>  [7167,]  137 #>  [7168,]  137 #>  [7169,]  137 #>  [7170,]  136 #>  [7171,]  137 #>  [7172,]  137 #>  [7173,]  137 #>  [7174,]  137 #>  [7175,]  137 #>  [7176,]  137 #>  [7177,]  137 #>  [7178,]  137 #>  [7179,]  137 #>  [7180,]  136 #>  [7181,]  137 #>  [7182,]  137 #>  [7183,]  136 #>  [7184,]  137 #>  [7185,]  137 #>  [7186,]  137 #>  [7187,]  137 #>  [7188,]  137 #>  [7189,]  137 #>  [7190,]  137 #>  [7191,]  137 #>  [7192,]  137 #>  [7193,]  137 #>  [7194,]  137 #>  [7195,]  136 #>  [7196,]  137 #>  [7197,]  137 #>  [7198,]  136 #>  [7199,]  137 #>  [7200,]  137 #>  [7201,]  138 #>  [7202,]  139 #>  [7203,]  139 #>  [7204,]  138 #>  [7205,]  138 #>  [7206,]  139 #>  [7207,]  139 #>  [7208,]  138 #>  [7209,]  138 #>  [7210,]  138 #>  [7211,]  138 #>  [7212,]  139 #>  [7213,]  138 #>  [7214,]  138 #>  [7215,]  138 #>  [7216,]  138 #>  [7217,]  138 #>  [7218,]  139 #>  [7219,]  139 #>  [7220,]  139 #>  [7221,]  138 #>  [7222,]  138 #>  [7223,]  139 #>  [7224,]  138 #>  [7225,]  139 #>  [7226,]  138 #>  [7227,]  138 #>  [7228,]  139 #>  [7229,]  138 #>  [7230,]  138 #>  [7231,]  139 #>  [7232,]  139 #>  [7233,]  139 #>  [7234,]  139 #>  [7235,]  138 #>  [7236,]  138 #>  [7237,]  138 #>  [7238,]  138 #>  [7239,]  138 #>  [7240,]  139 #>  [7241,]  138 #>  [7242,]  139 #>  [7243,]  138 #>  [7244,]  138 #>  [7245,]  138 #>  [7246,]  138 #>  [7247,]  138 #>  [7248,]  139 #>  [7249,]  138 #>  [7250,]  138 #>  [7251,]  138 #>  [7252,]  138 #>  [7253,]  138 #>  [7254,]  138 #>  [7255,]  138 #>  [7256,]  139 #>  [7257,]  138 #>  [7258,]  138 #>  [7259,]  138 #>  [7260,]  139 #>  [7261,]  139 #>  [7262,]  138 #>  [7263,]  138 #>  [7264,]  139 #>  [7265,]  139 #>  [7266,]  138 #>  [7267,]  138 #>  [7268,]  138 #>  [7269,]  138 #>  [7270,]  139 #>  [7271,]  139 #>  [7272,]  138 #>  [7273,]  139 #>  [7274,]  138 #>  [7275,]  138 #>  [7276,]  138 #>  [7277,]  138 #>  [7278,]  139 #>  [7279,]  138 #>  [7280,]  138 #>  [7281,]  138 #>  [7282,]  138 #>  [7283,]  138 #>  [7284,]  139 #>  [7285,]  138 #>  [7286,]  138 #>  [7287,]  138 #>  [7288,]  138 #>  [7289,]  138 #>  [7290,]  138 #>  [7291,]  138 #>  [7292,]  138 #>  [7293,]  139 #>  [7294,]  138 #>  [7295,]  138 #>  [7296,]  138 #>  [7297,]  139 #>  [7298,]  139 #>  [7299,]  138 #>  [7300,]  139 #>  [7301,]  141 #>  [7302,]  141 #>  [7303,]  140 #>  [7304,]  140 #>  [7305,]  141 #>  [7306,]  141 #>  [7307,]  140 #>  [7308,]  140 #>  [7309,]  141 #>  [7310,]  140 #>  [7311,]  141 #>  [7312,]  140 #>  [7313,]  141 #>  [7314,]  140 #>  [7315,]  141 #>  [7316,]  140 #>  [7317,]  141 #>  [7318,]  141 #>  [7319,]  141 #>  [7320,]  141 #>  [7321,]  141 #>  [7322,]  141 #>  [7323,]  140 #>  [7324,]  141 #>  [7325,]  140 #>  [7326,]  140 #>  [7327,]  141 #>  [7328,]  141 #>  [7329,]  141 #>  [7330,]  141 #>  [7331,]  140 #>  [7332,]  140 #>  [7333,]  141 #>  [7334,]  141 #>  [7335,]  140 #>  [7336,]  141 #>  [7337,]  140 #>  [7338,]  141 #>  [7339,]  141 #>  [7340,]  140 #>  [7341,]  141 #>  [7342,]  141 #>  [7343,]  141 #>  [7344,]  140 #>  [7345,]  140 #>  [7346,]  140 #>  [7347,]  140 #>  [7348,]  141 #>  [7349,]  141 #>  [7350,]  141 #>  [7351,]  141 #>  [7352,]  140 #>  [7353,]  141 #>  [7354,]  141 #>  [7355,]  140 #>  [7356,]  141 #>  [7357,]  140 #>  [7358,]  141 #>  [7359,]  140 #>  [7360,]  140 #>  [7361,]  141 #>  [7362,]  141 #>  [7363,]  141 #>  [7364,]  141 #>  [7365,]  141 #>  [7366,]  141 #>  [7367,]  140 #>  [7368,]  140 #>  [7369,]  141 #>  [7370,]  141 #>  [7371,]  141 #>  [7372,]  140 #>  [7373,]  141 #>  [7374,]  140 #>  [7375,]  140 #>  [7376,]  140 #>  [7377,]  141 #>  [7378,]  140 #>  [7379,]  141 #>  [7380,]  140 #>  [7381,]  141 #>  [7382,]  141 #>  [7383,]  141 #>  [7384,]  141 #>  [7385,]  141 #>  [7386,]  140 #>  [7387,]  141 #>  [7388,]  140 #>  [7389,]  141 #>  [7390,]  141 #>  [7391,]  141 #>  [7392,]  140 #>  [7393,]  141 #>  [7394,]  141 #>  [7395,]  140 #>  [7396,]  140 #>  [7397,]  140 #>  [7398,]  140 #>  [7399,]  141 #>  [7400,]  141 #>  [7401,]  143 #>  [7402,]  142 #>  [7403,]  142 #>  [7404,]  142 #>  [7405,]  142 #>  [7406,]  142 #>  [7407,]  142 #>  [7408,]  142 #>  [7409,]  143 #>  [7410,]  142 #>  [7411,]  142 #>  [7412,]  142 #>  [7413,]  143 #>  [7414,]  142 #>  [7415,]  142 #>  [7416,]  142 #>  [7417,]  143 #>  [7418,]  143 #>  [7419,]  142 #>  [7420,]  142 #>  [7421,]  142 #>  [7422,]  142 #>  [7423,]  142 #>  [7424,]  142 #>  [7425,]  142 #>  [7426,]  142 #>  [7427,]  143 #>  [7428,]  142 #>  [7429,]  142 #>  [7430,]  142 #>  [7431,]  142 #>  [7432,]  142 #>  [7433,]  142 #>  [7434,]  142 #>  [7435,]  142 #>  [7436,]  143 #>  [7437,]  142 #>  [7438,]  142 #>  [7439,]  142 #>  [7440,]  142 #>  [7441,]  142 #>  [7442,]  143 #>  [7443,]  142 #>  [7444,]  142 #>  [7445,]  142 #>  [7446,]  142 #>  [7447,]  142 #>  [7448,]  142 #>  [7449,]  142 #>  [7450,]  142 #>  [7451,]  143 #>  [7452,]  142 #>  [7453,]  143 #>  [7454,]  142 #>  [7455,]  142 #>  [7456,]  143 #>  [7457,]  142 #>  [7458,]  142 #>  [7459,]  142 #>  [7460,]  142 #>  [7461,]  142 #>  [7462,]  142 #>  [7463,]  142 #>  [7464,]  142 #>  [7465,]  143 #>  [7466,]  143 #>  [7467,]  142 #>  [7468,]  142 #>  [7469,]  142 #>  [7470,]  142 #>  [7471,]  142 #>  [7472,]  142 #>  [7473,]  142 #>  [7474,]  142 #>  [7475,]  142 #>  [7476,]  142 #>  [7477,]  142 #>  [7478,]  142 #>  [7479,]  143 #>  [7480,]  142 #>  [7481,]  142 #>  [7482,]  143 #>  [7483,]  143 #>  [7484,]  143 #>  [7485,]  142 #>  [7486,]  142 #>  [7487,]  143 #>  [7488,]  142 #>  [7489,]  142 #>  [7490,]  142 #>  [7491,]  143 #>  [7492,]  142 #>  [7493,]  143 #>  [7494,]  143 #>  [7495,]  142 #>  [7496,]  142 #>  [7497,]  142 #>  [7498,]  142 #>  [7499,]  142 #>  [7500,]  142 #>  [7501,]  144 #>  [7502,]  144 #>  [7503,]  144 #>  [7504,]  144 #>  [7505,]  145 #>  [7506,]  144 #>  [7507,]  144 #>  [7508,]  144 #>  [7509,]  144 #>  [7510,]  144 #>  [7511,]  144 #>  [7512,]  144 #>  [7513,]  144 #>  [7514,]  144 #>  [7515,]  144 #>  [7516,]  144 #>  [7517,]  144 #>  [7518,]  145 #>  [7519,]  144 #>  [7520,]  144 #>  [7521,]  144 #>  [7522,]  144 #>  [7523,]  144 #>  [7524,]  144 #>  [7525,]  144 #>  [7526,]  144 #>  [7527,]  144 #>  [7528,]  144 #>  [7529,]  144 #>  [7530,]  144 #>  [7531,]  144 #>  [7532,]  145 #>  [7533,]  144 #>  [7534,]  144 #>  [7535,]  144 #>  [7536,]  144 #>  [7537,]  144 #>  [7538,]  144 #>  [7539,]  144 #>  [7540,]  144 #>  [7541,]  144 #>  [7542,]  144 #>  [7543,]  144 #>  [7544,]  144 #>  [7545,]  144 #>  [7546,]  144 #>  [7547,]  144 #>  [7548,]  144 #>  [7549,]  144 #>  [7550,]  144 #>  [7551,]  144 #>  [7552,]  144 #>  [7553,]  144 #>  [7554,]  144 #>  [7555,]  144 #>  [7556,]  144 #>  [7557,]  144 #>  [7558,]  144 #>  [7559,]  144 #>  [7560,]  144 #>  [7561,]  144 #>  [7562,]  144 #>  [7563,]  144 #>  [7564,]  144 #>  [7565,]  144 #>  [7566,]  144 #>  [7567,]  144 #>  [7568,]  144 #>  [7569,]  144 #>  [7570,]  144 #>  [7571,]  145 #>  [7572,]  144 #>  [7573,]  144 #>  [7574,]  144 #>  [7575,]  145 #>  [7576,]  144 #>  [7577,]  144 #>  [7578,]  144 #>  [7579,]  144 #>  [7580,]  144 #>  [7581,]  144 #>  [7582,]  144 #>  [7583,]  144 #>  [7584,]  144 #>  [7585,]  144 #>  [7586,]  144 #>  [7587,]  144 #>  [7588,]  144 #>  [7589,]  144 #>  [7590,]  144 #>  [7591,]  145 #>  [7592,]  144 #>  [7593,]  144 #>  [7594,]  144 #>  [7595,]  145 #>  [7596,]  144 #>  [7597,]  144 #>  [7598,]  144 #>  [7599,]  144 #>  [7600,]  145 #>  [7601,]  146 #>  [7602,]  146 #>  [7603,]  146 #>  [7604,]  146 #>  [7605,]  147 #>  [7606,]  146 #>  [7607,]  146 #>  [7608,]  146 #>  [7609,]  146 #>  [7610,]  146 #>  [7611,]  146 #>  [7612,]  146 #>  [7613,]  146 #>  [7614,]  146 #>  [7615,]  146 #>  [7616,]  146 #>  [7617,]  146 #>  [7618,]  147 #>  [7619,]  146 #>  [7620,]  146 #>  [7621,]  146 #>  [7622,]  146 #>  [7623,]  146 #>  [7624,]  146 #>  [7625,]  146 #>  [7626,]  146 #>  [7627,]  146 #>  [7628,]  146 #>  [7629,]  146 #>  [7630,]  146 #>  [7631,]  146 #>  [7632,]  147 #>  [7633,]  146 #>  [7634,]  146 #>  [7635,]  146 #>  [7636,]  146 #>  [7637,]  146 #>  [7638,]  146 #>  [7639,]  146 #>  [7640,]  146 #>  [7641,]  146 #>  [7642,]  146 #>  [7643,]  146 #>  [7644,]  146 #>  [7645,]  146 #>  [7646,]  146 #>  [7647,]  146 #>  [7648,]  146 #>  [7649,]  146 #>  [7650,]  146 #>  [7651,]  146 #>  [7652,]  146 #>  [7653,]  146 #>  [7654,]  146 #>  [7655,]  146 #>  [7656,]  146 #>  [7657,]  146 #>  [7658,]  146 #>  [7659,]  146 #>  [7660,]  146 #>  [7661,]  146 #>  [7662,]  146 #>  [7663,]  146 #>  [7664,]  146 #>  [7665,]  146 #>  [7666,]  146 #>  [7667,]  146 #>  [7668,]  146 #>  [7669,]  146 #>  [7670,]  146 #>  [7671,]  147 #>  [7672,]  146 #>  [7673,]  146 #>  [7674,]  146 #>  [7675,]  147 #>  [7676,]  146 #>  [7677,]  146 #>  [7678,]  146 #>  [7679,]  146 #>  [7680,]  146 #>  [7681,]  146 #>  [7682,]  146 #>  [7683,]  146 #>  [7684,]  146 #>  [7685,]  146 #>  [7686,]  146 #>  [7687,]  146 #>  [7688,]  146 #>  [7689,]  146 #>  [7690,]  146 #>  [7691,]  147 #>  [7692,]  146 #>  [7693,]  146 #>  [7694,]  146 #>  [7695,]  147 #>  [7696,]  146 #>  [7697,]  146 #>  [7698,]  146 #>  [7699,]  146 #>  [7700,]  147 #>  [7701,]  148 #>  [7702,]  148 #>  [7703,]  148 #>  [7704,]  148 #>  [7705,]  148 #>  [7706,]  149 #>  [7707,]  148 #>  [7708,]  149 #>  [7709,]  149 #>  [7710,]  148 #>  [7711,]  148 #>  [7712,]  149 #>  [7713,]  148 #>  [7714,]  148 #>  [7715,]  149 #>  [7716,]  148 #>  [7717,]  148 #>  [7718,]  148 #>  [7719,]  148 #>  [7720,]  148 #>  [7721,]  148 #>  [7722,]  148 #>  [7723,]  148 #>  [7724,]  148 #>  [7725,]  148 #>  [7726,]  149 #>  [7727,]  148 #>  [7728,]  148 #>  [7729,]  148 #>  [7730,]  148 #>  [7731,]  148 #>  [7732,]  148 #>  [7733,]  149 #>  [7734,]  148 #>  [7735,]  148 #>  [7736,]  148 #>  [7737,]  148 #>  [7738,]  148 #>  [7739,]  148 #>  [7740,]  148 #>  [7741,]  148 #>  [7742,]  148 #>  [7743,]  149 #>  [7744,]  148 #>  [7745,]  149 #>  [7746,]  149 #>  [7747,]  148 #>  [7748,]  148 #>  [7749,]  148 #>  [7750,]  148 #>  [7751,]  149 #>  [7752,]  148 #>  [7753,]  148 #>  [7754,]  148 #>  [7755,]  148 #>  [7756,]  149 #>  [7757,]  149 #>  [7758,]  148 #>  [7759,]  148 #>  [7760,]  148 #>  [7761,]  149 #>  [7762,]  148 #>  [7763,]  148 #>  [7764,]  149 #>  [7765,]  148 #>  [7766,]  149 #>  [7767,]  148 #>  [7768,]  149 #>  [7769,]  148 #>  [7770,]  148 #>  [7771,]  148 #>  [7772,]  148 #>  [7773,]  148 #>  [7774,]  148 #>  [7775,]  148 #>  [7776,]  149 #>  [7777,]  148 #>  [7778,]  148 #>  [7779,]  148 #>  [7780,]  148 #>  [7781,]  148 #>  [7782,]  148 #>  [7783,]  148 #>  [7784,]  148 #>  [7785,]  148 #>  [7786,]  148 #>  [7787,]  148 #>  [7788,]  148 #>  [7789,]  148 #>  [7790,]  148 #>  [7791,]  148 #>  [7792,]  148 #>  [7793,]  148 #>  [7794,]  149 #>  [7795,]  148 #>  [7796,]  148 #>  [7797,]  148 #>  [7798,]  148 #>  [7799,]  148 #>  [7800,]  148 #>  [7801,]  151 #>  [7802,]  151 #>  [7803,]  151 #>  [7804,]  150 #>  [7805,]  151 #>  [7806,]  151 #>  [7807,]  151 #>  [7808,]  150 #>  [7809,]  150 #>  [7810,]  151 #>  [7811,]  151 #>  [7812,]  151 #>  [7813,]  151 #>  [7814,]  151 #>  [7815,]  151 #>  [7816,]  151 #>  [7817,]  150 #>  [7818,]  151 #>  [7819,]  151 #>  [7820,]  151 #>  [7821,]  151 #>  [7822,]  151 #>  [7823,]  151 #>  [7824,]  151 #>  [7825,]  151 #>  [7826,]  151 #>  [7827,]  150 #>  [7828,]  151 #>  [7829,]  151 #>  [7830,]  151 #>  [7831,]  151 #>  [7832,]  151 #>  [7833,]  151 #>  [7834,]  151 #>  [7835,]  151 #>  [7836,]  151 #>  [7837,]  151 #>  [7838,]  151 #>  [7839,]  151 #>  [7840,]  151 #>  [7841,]  151 #>  [7842,]  151 #>  [7843,]  151 #>  [7844,]  150 #>  [7845,]  151 #>  [7846,]  151 #>  [7847,]  151 #>  [7848,]  151 #>  [7849,]  151 #>  [7850,]  151 #>  [7851,]  151 #>  [7852,]  150 #>  [7853,]  151 #>  [7854,]  151 #>  [7855,]  151 #>  [7856,]  151 #>  [7857,]  151 #>  [7858,]  151 #>  [7859,]  151 #>  [7860,]  151 #>  [7861,]  151 #>  [7862,]  151 #>  [7863,]  151 #>  [7864,]  151 #>  [7865,]  151 #>  [7866,]  150 #>  [7867,]  151 #>  [7868,]  151 #>  [7869,]  151 #>  [7870,]  151 #>  [7871,]  151 #>  [7872,]  151 #>  [7873,]  151 #>  [7874,]  151 #>  [7875,]  151 #>  [7876,]  151 #>  [7877,]  151 #>  [7878,]  151 #>  [7879,]  151 #>  [7880,]  151 #>  [7881,]  150 #>  [7882,]  150 #>  [7883,]  151 #>  [7884,]  151 #>  [7885,]  151 #>  [7886,]  151 #>  [7887,]  151 #>  [7888,]  151 #>  [7889,]  151 #>  [7890,]  150 #>  [7891,]  151 #>  [7892,]  150 #>  [7893,]  151 #>  [7894,]  151 #>  [7895,]  150 #>  [7896,]  151 #>  [7897,]  151 #>  [7898,]  151 #>  [7899,]  150 #>  [7900,]  151 #>  [7901,]  152 #>  [7902,]  153 #>  [7903,]  152 #>  [7904,]  152 #>  [7905,]  152 #>  [7906,]  152 #>  [7907,]  152 #>  [7908,]  152 #>  [7909,]  153 #>  [7910,]  153 #>  [7911,]  152 #>  [7912,]  153 #>  [7913,]  153 #>  [7914,]  152 #>  [7915,]  152 #>  [7916,]  152 #>  [7917,]  153 #>  [7918,]  152 #>  [7919,]  152 #>  [7920,]  152 #>  [7921,]  153 #>  [7922,]  152 #>  [7923,]  152 #>  [7924,]  152 #>  [7925,]  152 #>  [7926,]  152 #>  [7927,]  152 #>  [7928,]  152 #>  [7929,]  153 #>  [7930,]  152 #>  [7931,]  152 #>  [7932,]  152 #>  [7933,]  153 #>  [7934,]  152 #>  [7935,]  152 #>  [7936,]  152 #>  [7937,]  152 #>  [7938,]  152 #>  [7939,]  152 #>  [7940,]  152 #>  [7941,]  152 #>  [7942,]  152 #>  [7943,]  152 #>  [7944,]  152 #>  [7945,]  152 #>  [7946,]  152 #>  [7947,]  152 #>  [7948,]  152 #>  [7949,]  152 #>  [7950,]  152 #>  [7951,]  152 #>  [7952,]  152 #>  [7953,]  153 #>  [7954,]  152 #>  [7955,]  152 #>  [7956,]  152 #>  [7957,]  152 #>  [7958,]  152 #>  [7959,]  152 #>  [7960,]  153 #>  [7961,]  152 #>  [7962,]  152 #>  [7963,]  153 #>  [7964,]  152 #>  [7965,]  152 #>  [7966,]  152 #>  [7967,]  152 #>  [7968,]  152 #>  [7969,]  152 #>  [7970,]  153 #>  [7971,]  152 #>  [7972,]  152 #>  [7973,]  152 #>  [7974,]  152 #>  [7975,]  152 #>  [7976,]  152 #>  [7977,]  152 #>  [7978,]  152 #>  [7979,]  152 #>  [7980,]  153 #>  [7981,]  153 #>  [7982,]  152 #>  [7983,]  152 #>  [7984,]  152 #>  [7985,]  152 #>  [7986,]  153 #>  [7987,]  152 #>  [7988,]  152 #>  [7989,]  152 #>  [7990,]  152 #>  [7991,]  152 #>  [7992,]  152 #>  [7993,]  152 #>  [7994,]  152 #>  [7995,]  152 #>  [7996,]  152 #>  [7997,]  152 #>  [7998,]  152 #>  [7999,]  152 #>  [8000,]  152 #>  [8001,]  155 #>  [8002,]  155 #>  [8003,]  154 #>  [8004,]  155 #>  [8005,]  155 #>  [8006,]  155 #>  [8007,]  155 #>  [8008,]  155 #>  [8009,]  155 #>  [8010,]  155 #>  [8011,]  155 #>  [8012,]  154 #>  [8013,]  155 #>  [8014,]  154 #>  [8015,]  155 #>  [8016,]  155 #>  [8017,]  155 #>  [8018,]  155 #>  [8019,]  155 #>  [8020,]  155 #>  [8021,]  155 #>  [8022,]  155 #>  [8023,]  155 #>  [8024,]  155 #>  [8025,]  155 #>  [8026,]  154 #>  [8027,]  155 #>  [8028,]  155 #>  [8029,]  155 #>  [8030,]  155 #>  [8031,]  155 #>  [8032,]  154 #>  [8033,]  155 #>  [8034,]  155 #>  [8035,]  155 #>  [8036,]  155 #>  [8037,]  155 #>  [8038,]  155 #>  [8039,]  155 #>  [8040,]  155 #>  [8041,]  155 #>  [8042,]  155 #>  [8043,]  155 #>  [8044,]  155 #>  [8045,]  155 #>  [8046,]  155 #>  [8047,]  155 #>  [8048,]  154 #>  [8049,]  155 #>  [8050,]  155 #>  [8051,]  154 #>  [8052,]  155 #>  [8053,]  155 #>  [8054,]  154 #>  [8055,]  155 #>  [8056,]  155 #>  [8057,]  155 #>  [8058,]  155 #>  [8059,]  155 #>  [8060,]  155 #>  [8061,]  155 #>  [8062,]  155 #>  [8063,]  155 #>  [8064,]  155 #>  [8065,]  155 #>  [8066,]  154 #>  [8067,]  155 #>  [8068,]  155 #>  [8069,]  154 #>  [8070,]  155 #>  [8071,]  155 #>  [8072,]  155 #>  [8073,]  155 #>  [8074,]  155 #>  [8075,]  155 #>  [8076,]  155 #>  [8077,]  155 #>  [8078,]  155 #>  [8079,]  155 #>  [8080,]  154 #>  [8081,]  154 #>  [8082,]  155 #>  [8083,]  155 #>  [8084,]  155 #>  [8085,]  155 #>  [8086,]  155 #>  [8087,]  155 #>  [8088,]  155 #>  [8089,]  154 #>  [8090,]  155 #>  [8091,]  155 #>  [8092,]  155 #>  [8093,]  155 #>  [8094,]  155 #>  [8095,]  155 #>  [8096,]  155 #>  [8097,]  155 #>  [8098,]  155 #>  [8099,]  155 #>  [8100,]  155 #>  [8101,]  157 #>  [8102,]  157 #>  [8103,]  156 #>  [8104,]  156 #>  [8105,]  156 #>  [8106,]  157 #>  [8107,]  156 #>  [8108,]  156 #>  [8109,]  156 #>  [8110,]  156 #>  [8111,]  157 #>  [8112,]  156 #>  [8113,]  157 #>  [8114,]  157 #>  [8115,]  157 #>  [8116,]  157 #>  [8117,]  157 #>  [8118,]  156 #>  [8119,]  157 #>  [8120,]  156 #>  [8121,]  157 #>  [8122,]  157 #>  [8123,]  156 #>  [8124,]  156 #>  [8125,]  156 #>  [8126,]  157 #>  [8127,]  157 #>  [8128,]  156 #>  [8129,]  157 #>  [8130,]  156 #>  [8131,]  156 #>  [8132,]  156 #>  [8133,]  157 #>  [8134,]  156 #>  [8135,]  157 #>  [8136,]  156 #>  [8137,]  157 #>  [8138,]  156 #>  [8139,]  156 #>  [8140,]  156 #>  [8141,]  157 #>  [8142,]  156 #>  [8143,]  156 #>  [8144,]  157 #>  [8145,]  156 #>  [8146,]  156 #>  [8147,]  157 #>  [8148,]  156 #>  [8149,]  156 #>  [8150,]  157 #>  [8151,]  156 #>  [8152,]  157 #>  [8153,]  156 #>  [8154,]  156 #>  [8155,]  157 #>  [8156,]  156 #>  [8157,]  156 #>  [8158,]  157 #>  [8159,]  157 #>  [8160,]  156 #>  [8161,]  157 #>  [8162,]  156 #>  [8163,]  156 #>  [8164,]  156 #>  [8165,]  156 #>  [8166,]  156 #>  [8167,]  156 #>  [8168,]  157 #>  [8169,]  157 #>  [8170,]  157 #>  [8171,]  157 #>  [8172,]  156 #>  [8173,]  157 #>  [8174,]  156 #>  [8175,]  157 #>  [8176,]  157 #>  [8177,]  157 #>  [8178,]  156 #>  [8179,]  157 #>  [8180,]  156 #>  [8181,]  157 #>  [8182,]  156 #>  [8183,]  157 #>  [8184,]  157 #>  [8185,]  156 #>  [8186,]  157 #>  [8187,]  157 #>  [8188,]  156 #>  [8189,]  156 #>  [8190,]  157 #>  [8191,]  156 #>  [8192,]  157 #>  [8193,]  157 #>  [8194,]  157 #>  [8195,]  156 #>  [8196,]  157 #>  [8197,]  157 #>  [8198,]  157 #>  [8199,]  157 #>  [8200,]  157 #>  [8201,]  158 #>  [8202,]  158 #>  [8203,]  158 #>  [8204,]  158 #>  [8205,]  159 #>  [8206,]  158 #>  [8207,]  158 #>  [8208,]  158 #>  [8209,]  158 #>  [8210,]  158 #>  [8211,]  158 #>  [8212,]  158 #>  [8213,]  158 #>  [8214,]  158 #>  [8215,]  158 #>  [8216,]  158 #>  [8217,]  158 #>  [8218,]  159 #>  [8219,]  158 #>  [8220,]  158 #>  [8221,]  158 #>  [8222,]  158 #>  [8223,]  158 #>  [8224,]  158 #>  [8225,]  158 #>  [8226,]  158 #>  [8227,]  158 #>  [8228,]  158 #>  [8229,]  158 #>  [8230,]  158 #>  [8231,]  158 #>  [8232,]  158 #>  [8233,]  158 #>  [8234,]  158 #>  [8235,]  158 #>  [8236,]  158 #>  [8237,]  158 #>  [8238,]  158 #>  [8239,]  158 #>  [8240,]  158 #>  [8241,]  158 #>  [8242,]  158 #>  [8243,]  158 #>  [8244,]  158 #>  [8245,]  158 #>  [8246,]  158 #>  [8247,]  158 #>  [8248,]  158 #>  [8249,]  158 #>  [8250,]  158 #>  [8251,]  158 #>  [8252,]  158 #>  [8253,]  158 #>  [8254,]  158 #>  [8255,]  158 #>  [8256,]  158 #>  [8257,]  158 #>  [8258,]  158 #>  [8259,]  158 #>  [8260,]  158 #>  [8261,]  158 #>  [8262,]  158 #>  [8263,]  158 #>  [8264,]  158 #>  [8265,]  158 #>  [8266,]  158 #>  [8267,]  158 #>  [8268,]  158 #>  [8269,]  158 #>  [8270,]  158 #>  [8271,]  159 #>  [8272,]  158 #>  [8273,]  158 #>  [8274,]  158 #>  [8275,]  159 #>  [8276,]  158 #>  [8277,]  158 #>  [8278,]  158 #>  [8279,]  158 #>  [8280,]  158 #>  [8281,]  158 #>  [8282,]  158 #>  [8283,]  158 #>  [8284,]  158 #>  [8285,]  158 #>  [8286,]  158 #>  [8287,]  158 #>  [8288,]  158 #>  [8289,]  158 #>  [8290,]  158 #>  [8291,]  158 #>  [8292,]  158 #>  [8293,]  158 #>  [8294,]  158 #>  [8295,]  158 #>  [8296,]  158 #>  [8297,]  158 #>  [8298,]  158 #>  [8299,]  158 #>  [8300,]  159 #>  [8301,]  160 #>  [8302,]  161 #>  [8303,]  160 #>  [8304,]  160 #>  [8305,]  161 #>  [8306,]  160 #>  [8307,]  161 #>  [8308,]  160 #>  [8309,]  161 #>  [8310,]  161 #>  [8311,]  160 #>  [8312,]  161 #>  [8313,]  161 #>  [8314,]  160 #>  [8315,]  160 #>  [8316,]  160 #>  [8317,]  161 #>  [8318,]  161 #>  [8319,]  160 #>  [8320,]  161 #>  [8321,]  161 #>  [8322,]  161 #>  [8323,]  161 #>  [8324,]  161 #>  [8325,]  160 #>  [8326,]  160 #>  [8327,]  161 #>  [8328,]  160 #>  [8329,]  161 #>  [8330,]  161 #>  [8331,]  161 #>  [8332,]  161 #>  [8333,]  161 #>  [8334,]  160 #>  [8335,]  160 #>  [8336,]  161 #>  [8337,]  160 #>  [8338,]  160 #>  [8339,]  160 #>  [8340,]  161 #>  [8341,]  161 #>  [8342,]  160 #>  [8343,]  160 #>  [8344,]  161 #>  [8345,]  160 #>  [8346,]  160 #>  [8347,]  160 #>  [8348,]  161 #>  [8349,]  160 #>  [8350,]  161 #>  [8351,]  160 #>  [8352,]  160 #>  [8353,]  161 #>  [8354,]  161 #>  [8355,]  160 #>  [8356,]  160 #>  [8357,]  160 #>  [8358,]  160 #>  [8359,]  160 #>  [8360,]  161 #>  [8361,]  161 #>  [8362,]  160 #>  [8363,]  161 #>  [8364,]  160 #>  [8365,]  160 #>  [8366,]  160 #>  [8367,]  160 #>  [8368,]  160 #>  [8369,]  160 #>  [8370,]  161 #>  [8371,]  160 #>  [8372,]  160 #>  [8373,]  160 #>  [8374,]  160 #>  [8375,]  161 #>  [8376,]  160 #>  [8377,]  160 #>  [8378,]  161 #>  [8379,]  160 #>  [8380,]  161 #>  [8381,]  161 #>  [8382,]  160 #>  [8383,]  161 #>  [8384,]  161 #>  [8385,]  160 #>  [8386,]  161 #>  [8387,]  161 #>  [8388,]  161 #>  [8389,]  160 #>  [8390,]  160 #>  [8391,]  160 #>  [8392,]  161 #>  [8393,]  161 #>  [8394,]  160 #>  [8395,]  161 #>  [8396,]  160 #>  [8397,]  160 #>  [8398,]  160 #>  [8399,]  160 #>  [8400,]  160 #>  [8401,]  163 #>  [8402,]  162 #>  [8403,]  162 #>  [8404,]  163 #>  [8405,]  162 #>  [8406,]  162 #>  [8407,]  163 #>  [8408,]  163 #>  [8409,]  163 #>  [8410,]  163 #>  [8411,]  162 #>  [8412,]  162 #>  [8413,]  163 #>  [8414,]  162 #>  [8415,]  163 #>  [8416,]  163 #>  [8417,]  163 #>  [8418,]  163 #>  [8419,]  162 #>  [8420,]  162 #>  [8421,]  163 #>  [8422,]  162 #>  [8423,]  163 #>  [8424,]  162 #>  [8425,]  163 #>  [8426,]  162 #>  [8427,]  163 #>  [8428,]  163 #>  [8429,]  162 #>  [8430,]  162 #>  [8431,]  162 #>  [8432,]  162 #>  [8433,]  162 #>  [8434,]  162 #>  [8435,]  162 #>  [8436,]  162 #>  [8437,]  162 #>  [8438,]  162 #>  [8439,]  163 #>  [8440,]  162 #>  [8441,]  162 #>  [8442,]  162 #>  [8443,]  163 #>  [8444,]  162 #>  [8445,]  163 #>  [8446,]  163 #>  [8447,]  163 #>  [8448,]  162 #>  [8449,]  162 #>  [8450,]  162 #>  [8451,]  162 #>  [8452,]  162 #>  [8453,]  163 #>  [8454,]  162 #>  [8455,]  162 #>  [8456,]  163 #>  [8457,]  162 #>  [8458,]  162 #>  [8459,]  162 #>  [8460,]  162 #>  [8461,]  163 #>  [8462,]  162 #>  [8463,]  162 #>  [8464,]  163 #>  [8465,]  162 #>  [8466,]  162 #>  [8467,]  162 #>  [8468,]  162 #>  [8469,]  162 #>  [8470,]  163 #>  [8471,]  163 #>  [8472,]  163 #>  [8473,]  163 #>  [8474,]  163 #>  [8475,]  163 #>  [8476,]  163 #>  [8477,]  163 #>  [8478,]  162 #>  [8479,]  162 #>  [8480,]  162 #>  [8481,]  162 #>  [8482,]  163 #>  [8483,]  162 #>  [8484,]  163 #>  [8485,]  162 #>  [8486,]  162 #>  [8487,]  163 #>  [8488,]  163 #>  [8489,]  162 #>  [8490,]  163 #>  [8491,]  162 #>  [8492,]  162 #>  [8493,]  162 #>  [8494,]  163 #>  [8495,]  163 #>  [8496,]  163 #>  [8497,]  162 #>  [8498,]  162 #>  [8499,]  162 #>  [8500,]  163 #>  [8501,]  165 #>  [8502,]  165 #>  [8503,]  164 #>  [8504,]  165 #>  [8505,]  165 #>  [8506,]  165 #>  [8507,]  164 #>  [8508,]  165 #>  [8509,]  165 #>  [8510,]  165 #>  [8511,]  165 #>  [8512,]  165 #>  [8513,]  165 #>  [8514,]  165 #>  [8515,]  165 #>  [8516,]  165 #>  [8517,]  165 #>  [8518,]  165 #>  [8519,]  165 #>  [8520,]  165 #>  [8521,]  165 #>  [8522,]  165 #>  [8523,]  165 #>  [8524,]  165 #>  [8525,]  165 #>  [8526,]  165 #>  [8527,]  165 #>  [8528,]  165 #>  [8529,]  165 #>  [8530,]  165 #>  [8531,]  165 #>  [8532,]  165 #>  [8533,]  165 #>  [8534,]  165 #>  [8535,]  165 #>  [8536,]  165 #>  [8537,]  165 #>  [8538,]  165 #>  [8539,]  165 #>  [8540,]  165 #>  [8541,]  165 #>  [8542,]  165 #>  [8543,]  165 #>  [8544,]  165 #>  [8545,]  165 #>  [8546,]  165 #>  [8547,]  165 #>  [8548,]  165 #>  [8549,]  164 #>  [8550,]  165 #>  [8551,]  165 #>  [8552,]  165 #>  [8553,]  164 #>  [8554,]  165 #>  [8555,]  165 #>  [8556,]  164 #>  [8557,]  165 #>  [8558,]  165 #>  [8559,]  165 #>  [8560,]  165 #>  [8561,]  165 #>  [8562,]  165 #>  [8563,]  165 #>  [8564,]  165 #>  [8565,]  165 #>  [8566,]  164 #>  [8567,]  165 #>  [8568,]  165 #>  [8569,]  165 #>  [8570,]  165 #>  [8571,]  165 #>  [8572,]  165 #>  [8573,]  165 #>  [8574,]  165 #>  [8575,]  165 #>  [8576,]  165 #>  [8577,]  165 #>  [8578,]  165 #>  [8579,]  165 #>  [8580,]  165 #>  [8581,]  165 #>  [8582,]  165 #>  [8583,]  165 #>  [8584,]  165 #>  [8585,]  165 #>  [8586,]  165 #>  [8587,]  165 #>  [8588,]  165 #>  [8589,]  165 #>  [8590,]  165 #>  [8591,]  165 #>  [8592,]  165 #>  [8593,]  165 #>  [8594,]  165 #>  [8595,]  165 #>  [8596,]  165 #>  [8597,]  165 #>  [8598,]  165 #>  [8599,]  165 #>  [8600,]  165 #>  [8601,]  166 #>  [8602,]  167 #>  [8603,]  166 #>  [8604,]  166 #>  [8605,]  166 #>  [8606,]  166 #>  [8607,]  166 #>  [8608,]  166 #>  [8609,]  167 #>  [8610,]  167 #>  [8611,]  166 #>  [8612,]  167 #>  [8613,]  166 #>  [8614,]  166 #>  [8615,]  166 #>  [8616,]  166 #>  [8617,]  166 #>  [8618,]  166 #>  [8619,]  166 #>  [8620,]  166 #>  [8621,]  167 #>  [8622,]  166 #>  [8623,]  166 #>  [8624,]  166 #>  [8625,]  166 #>  [8626,]  166 #>  [8627,]  166 #>  [8628,]  166 #>  [8629,]  167 #>  [8630,]  166 #>  [8631,]  166 #>  [8632,]  166 #>  [8633,]  167 #>  [8634,]  166 #>  [8635,]  166 #>  [8636,]  166 #>  [8637,]  166 #>  [8638,]  166 #>  [8639,]  166 #>  [8640,]  166 #>  [8641,]  166 #>  [8642,]  166 #>  [8643,]  166 #>  [8644,]  166 #>  [8645,]  166 #>  [8646,]  166 #>  [8647,]  166 #>  [8648,]  166 #>  [8649,]  166 #>  [8650,]  166 #>  [8651,]  166 #>  [8652,]  166 #>  [8653,]  166 #>  [8654,]  166 #>  [8655,]  166 #>  [8656,]  166 #>  [8657,]  166 #>  [8658,]  166 #>  [8659,]  166 #>  [8660,]  167 #>  [8661,]  166 #>  [8662,]  166 #>  [8663,]  166 #>  [8664,]  166 #>  [8665,]  166 #>  [8666,]  166 #>  [8667,]  166 #>  [8668,]  166 #>  [8669,]  166 #>  [8670,]  167 #>  [8671,]  166 #>  [8672,]  166 #>  [8673,]  166 #>  [8674,]  166 #>  [8675,]  166 #>  [8676,]  166 #>  [8677,]  166 #>  [8678,]  166 #>  [8679,]  166 #>  [8680,]  166 #>  [8681,]  167 #>  [8682,]  166 #>  [8683,]  166 #>  [8684,]  166 #>  [8685,]  166 #>  [8686,]  167 #>  [8687,]  166 #>  [8688,]  166 #>  [8689,]  166 #>  [8690,]  166 #>  [8691,]  166 #>  [8692,]  166 #>  [8693,]  166 #>  [8694,]  166 #>  [8695,]  166 #>  [8696,]  166 #>  [8697,]  166 #>  [8698,]  166 #>  [8699,]  166 #>  [8700,]  166 #>  [8701,]  168 #>  [8702,]  168 #>  [8703,]  168 #>  [8704,]  169 #>  [8705,]  168 #>  [8706,]  168 #>  [8707,]  168 #>  [8708,]  168 #>  [8709,]  168 #>  [8710,]  168 #>  [8711,]  168 #>  [8712,]  168 #>  [8713,]  168 #>  [8714,]  169 #>  [8715,]  168 #>  [8716,]  168 #>  [8717,]  168 #>  [8718,]  168 #>  [8719,]  168 #>  [8720,]  168 #>  [8721,]  168 #>  [8722,]  168 #>  [8723,]  168 #>  [8724,]  168 #>  [8725,]  168 #>  [8726,]  168 #>  [8727,]  168 #>  [8728,]  168 #>  [8729,]  168 #>  [8730,]  168 #>  [8731,]  168 #>  [8732,]  168 #>  [8733,]  168 #>  [8734,]  168 #>  [8735,]  168 #>  [8736,]  168 #>  [8737,]  168 #>  [8738,]  168 #>  [8739,]  168 #>  [8740,]  168 #>  [8741,]  168 #>  [8742,]  168 #>  [8743,]  168 #>  [8744,]  168 #>  [8745,]  168 #>  [8746,]  168 #>  [8747,]  168 #>  [8748,]  168 #>  [8749,]  168 #>  [8750,]  168 #>  [8751,]  168 #>  [8752,]  168 #>  [8753,]  168 #>  [8754,]  168 #>  [8755,]  168 #>  [8756,]  168 #>  [8757,]  168 #>  [8758,]  168 #>  [8759,]  168 #>  [8760,]  168 #>  [8761,]  169 #>  [8762,]  168 #>  [8763,]  168 #>  [8764,]  168 #>  [8765,]  168 #>  [8766,]  168 #>  [8767,]  168 #>  [8768,]  168 #>  [8769,]  168 #>  [8770,]  168 #>  [8771,]  168 #>  [8772,]  168 #>  [8773,]  168 #>  [8774,]  168 #>  [8775,]  168 #>  [8776,]  168 #>  [8777,]  168 #>  [8778,]  168 #>  [8779,]  168 #>  [8780,]  168 #>  [8781,]  168 #>  [8782,]  169 #>  [8783,]  168 #>  [8784,]  168 #>  [8785,]  168 #>  [8786,]  168 #>  [8787,]  168 #>  [8788,]  168 #>  [8789,]  168 #>  [8790,]  168 #>  [8791,]  168 #>  [8792,]  169 #>  [8793,]  169 #>  [8794,]  168 #>  [8795,]  168 #>  [8796,]  169 #>  [8797,]  168 #>  [8798,]  168 #>  [8799,]  168 #>  [8800,]  168 #>  [8801,]  171 #>  [8802,]  171 #>  [8803,]  171 #>  [8804,]  170 #>  [8805,]  171 #>  [8806,]  171 #>  [8807,]  171 #>  [8808,]  170 #>  [8809,]  170 #>  [8810,]  171 #>  [8811,]  171 #>  [8812,]  171 #>  [8813,]  171 #>  [8814,]  171 #>  [8815,]  171 #>  [8816,]  171 #>  [8817,]  170 #>  [8818,]  171 #>  [8819,]  171 #>  [8820,]  171 #>  [8821,]  171 #>  [8822,]  171 #>  [8823,]  171 #>  [8824,]  171 #>  [8825,]  171 #>  [8826,]  171 #>  [8827,]  170 #>  [8828,]  171 #>  [8829,]  171 #>  [8830,]  171 #>  [8831,]  171 #>  [8832,]  171 #>  [8833,]  171 #>  [8834,]  171 #>  [8835,]  171 #>  [8836,]  171 #>  [8837,]  171 #>  [8838,]  171 #>  [8839,]  171 #>  [8840,]  171 #>  [8841,]  171 #>  [8842,]  171 #>  [8843,]  171 #>  [8844,]  171 #>  [8845,]  171 #>  [8846,]  171 #>  [8847,]  171 #>  [8848,]  171 #>  [8849,]  171 #>  [8850,]  171 #>  [8851,]  171 #>  [8852,]  170 #>  [8853,]  171 #>  [8854,]  171 #>  [8855,]  171 #>  [8856,]  171 #>  [8857,]  171 #>  [8858,]  171 #>  [8859,]  171 #>  [8860,]  171 #>  [8861,]  171 #>  [8862,]  171 #>  [8863,]  171 #>  [8864,]  171 #>  [8865,]  171 #>  [8866,]  171 #>  [8867,]  171 #>  [8868,]  171 #>  [8869,]  171 #>  [8870,]  171 #>  [8871,]  171 #>  [8872,]  171 #>  [8873,]  171 #>  [8874,]  171 #>  [8875,]  171 #>  [8876,]  171 #>  [8877,]  171 #>  [8878,]  171 #>  [8879,]  171 #>  [8880,]  171 #>  [8881,]  170 #>  [8882,]  170 #>  [8883,]  171 #>  [8884,]  171 #>  [8885,]  171 #>  [8886,]  171 #>  [8887,]  171 #>  [8888,]  171 #>  [8889,]  171 #>  [8890,]  171 #>  [8891,]  171 #>  [8892,]  171 #>  [8893,]  171 #>  [8894,]  171 #>  [8895,]  170 #>  [8896,]  171 #>  [8897,]  171 #>  [8898,]  171 #>  [8899,]  171 #>  [8900,]  171 #>  [8901,]  172 #>  [8902,]  172 #>  [8903,]  172 #>  [8904,]  172 #>  [8905,]  172 #>  [8906,]  173 #>  [8907,]  172 #>  [8908,]  173 #>  [8909,]  173 #>  [8910,]  172 #>  [8911,]  172 #>  [8912,]  173 #>  [8913,]  172 #>  [8914,]  172 #>  [8915,]  173 #>  [8916,]  172 #>  [8917,]  172 #>  [8918,]  172 #>  [8919,]  172 #>  [8920,]  172 #>  [8921,]  172 #>  [8922,]  172 #>  [8923,]  172 #>  [8924,]  172 #>  [8925,]  172 #>  [8926,]  173 #>  [8927,]  172 #>  [8928,]  172 #>  [8929,]  172 #>  [8930,]  172 #>  [8931,]  172 #>  [8932,]  172 #>  [8933,]  172 #>  [8934,]  172 #>  [8935,]  172 #>  [8936,]  172 #>  [8937,]  172 #>  [8938,]  172 #>  [8939,]  172 #>  [8940,]  172 #>  [8941,]  172 #>  [8942,]  172 #>  [8943,]  173 #>  [8944,]  172 #>  [8945,]  172 #>  [8946,]  173 #>  [8947,]  172 #>  [8948,]  172 #>  [8949,]  172 #>  [8950,]  172 #>  [8951,]  173 #>  [8952,]  172 #>  [8953,]  172 #>  [8954,]  172 #>  [8955,]  172 #>  [8956,]  173 #>  [8957,]  172 #>  [8958,]  172 #>  [8959,]  172 #>  [8960,]  172 #>  [8961,]  173 #>  [8962,]  172 #>  [8963,]  172 #>  [8964,]  173 #>  [8965,]  172 #>  [8966,]  173 #>  [8967,]  172 #>  [8968,]  172 #>  [8969,]  172 #>  [8970,]  172 #>  [8971,]  172 #>  [8972,]  172 #>  [8973,]  172 #>  [8974,]  172 #>  [8975,]  172 #>  [8976,]  173 #>  [8977,]  172 #>  [8978,]  172 #>  [8979,]  172 #>  [8980,]  172 #>  [8981,]  172 #>  [8982,]  172 #>  [8983,]  172 #>  [8984,]  172 #>  [8985,]  172 #>  [8986,]  172 #>  [8987,]  172 #>  [8988,]  172 #>  [8989,]  172 #>  [8990,]  172 #>  [8991,]  172 #>  [8992,]  172 #>  [8993,]  172 #>  [8994,]  173 #>  [8995,]  172 #>  [8996,]  172 #>  [8997,]  172 #>  [8998,]  172 #>  [8999,]  172 #>  [9000,]  172 #>  [9001,]  174 #>  [9002,]  174 #>  [9003,]  174 #>  [9004,]  175 #>  [9005,]  174 #>  [9006,]  174 #>  [9007,]  174 #>  [9008,]  174 #>  [9009,]  174 #>  [9010,]  174 #>  [9011,]  174 #>  [9012,]  174 #>  [9013,]  174 #>  [9014,]  175 #>  [9015,]  174 #>  [9016,]  174 #>  [9017,]  174 #>  [9018,]  174 #>  [9019,]  174 #>  [9020,]  174 #>  [9021,]  174 #>  [9022,]  174 #>  [9023,]  174 #>  [9024,]  174 #>  [9025,]  174 #>  [9026,]  174 #>  [9027,]  175 #>  [9028,]  174 #>  [9029,]  174 #>  [9030,]  174 #>  [9031,]  174 #>  [9032,]  174 #>  [9033,]  174 #>  [9034,]  174 #>  [9035,]  174 #>  [9036,]  174 #>  [9037,]  174 #>  [9038,]  174 #>  [9039,]  174 #>  [9040,]  174 #>  [9041,]  174 #>  [9042,]  174 #>  [9043,]  174 #>  [9044,]  174 #>  [9045,]  174 #>  [9046,]  174 #>  [9047,]  174 #>  [9048,]  174 #>  [9049,]  174 #>  [9050,]  174 #>  [9051,]  174 #>  [9052,]  174 #>  [9053,]  174 #>  [9054,]  174 #>  [9055,]  174 #>  [9056,]  174 #>  [9057,]  174 #>  [9058,]  174 #>  [9059,]  174 #>  [9060,]  174 #>  [9061,]  175 #>  [9062,]  174 #>  [9063,]  174 #>  [9064,]  174 #>  [9065,]  174 #>  [9066,]  174 #>  [9067,]  174 #>  [9068,]  174 #>  [9069,]  174 #>  [9070,]  174 #>  [9071,]  174 #>  [9072,]  174 #>  [9073,]  174 #>  [9074,]  174 #>  [9075,]  174 #>  [9076,]  174 #>  [9077,]  174 #>  [9078,]  174 #>  [9079,]  174 #>  [9080,]  174 #>  [9081,]  174 #>  [9082,]  175 #>  [9083,]  174 #>  [9084,]  174 #>  [9085,]  174 #>  [9086,]  174 #>  [9087,]  174 #>  [9088,]  174 #>  [9089,]  174 #>  [9090,]  174 #>  [9091,]  174 #>  [9092,]  175 #>  [9093,]  175 #>  [9094,]  174 #>  [9095,]  174 #>  [9096,]  175 #>  [9097,]  175 #>  [9098,]  174 #>  [9099,]  174 #>  [9100,]  174 #>  [9101,]  177 #>  [9102,]  177 #>  [9103,]  176 #>  [9104,]  177 #>  [9105,]  176 #>  [9106,]  176 #>  [9107,]  177 #>  [9108,]  177 #>  [9109,]  177 #>  [9110,]  177 #>  [9111,]  176 #>  [9112,]  176 #>  [9113,]  177 #>  [9114,]  176 #>  [9115,]  177 #>  [9116,]  177 #>  [9117,]  177 #>  [9118,]  177 #>  [9119,]  176 #>  [9120,]  176 #>  [9121,]  177 #>  [9122,]  176 #>  [9123,]  177 #>  [9124,]  176 #>  [9125,]  177 #>  [9126,]  176 #>  [9127,]  177 #>  [9128,]  177 #>  [9129,]  176 #>  [9130,]  176 #>  [9131,]  177 #>  [9132,]  176 #>  [9133,]  176 #>  [9134,]  176 #>  [9135,]  176 #>  [9136,]  176 #>  [9137,]  177 #>  [9138,]  177 #>  [9139,]  177 #>  [9140,]  176 #>  [9141,]  176 #>  [9142,]  176 #>  [9143,]  177 #>  [9144,]  177 #>  [9145,]  177 #>  [9146,]  177 #>  [9147,]  177 #>  [9148,]  176 #>  [9149,]  177 #>  [9150,]  177 #>  [9151,]  176 #>  [9152,]  176 #>  [9153,]  177 #>  [9154,]  176 #>  [9155,]  176 #>  [9156,]  177 #>  [9157,]  176 #>  [9158,]  176 #>  [9159,]  177 #>  [9160,]  176 #>  [9161,]  177 #>  [9162,]  176 #>  [9163,]  176 #>  [9164,]  177 #>  [9165,]  177 #>  [9166,]  176 #>  [9167,]  176 #>  [9168,]  176 #>  [9169,]  176 #>  [9170,]  177 #>  [9171,]  177 #>  [9172,]  177 #>  [9173,]  177 #>  [9174,]  177 #>  [9175,]  177 #>  [9176,]  177 #>  [9177,]  177 #>  [9178,]  176 #>  [9179,]  177 #>  [9180,]  176 #>  [9181,]  176 #>  [9182,]  177 #>  [9183,]  176 #>  [9184,]  177 #>  [9185,]  177 #>  [9186,]  177 #>  [9187,]  177 #>  [9188,]  177 #>  [9189,]  176 #>  [9190,]  177 #>  [9191,]  176 #>  [9192,]  177 #>  [9193,]  176 #>  [9194,]  177 #>  [9195,]  177 #>  [9196,]  177 #>  [9197,]  177 #>  [9198,]  176 #>  [9199,]  176 #>  [9200,]  177 #>  [9201,]  178 #>  [9202,]  178 #>  [9203,]  178 #>  [9204,]  179 #>  [9205,]  178 #>  [9206,]  178 #>  [9207,]  178 #>  [9208,]  178 #>  [9209,]  178 #>  [9210,]  179 #>  [9211,]  178 #>  [9212,]  178 #>  [9213,]  178 #>  [9214,]  178 #>  [9215,]  178 #>  [9216,]  178 #>  [9217,]  178 #>  [9218,]  179 #>  [9219,]  178 #>  [9220,]  178 #>  [9221,]  179 #>  [9222,]  178 #>  [9223,]  178 #>  [9224,]  178 #>  [9225,]  179 #>  [9226,]  178 #>  [9227,]  178 #>  [9228,]  178 #>  [9229,]  178 #>  [9230,]  178 #>  [9231,]  178 #>  [9232,]  178 #>  [9233,]  178 #>  [9234,]  178 #>  [9235,]  178 #>  [9236,]  178 #>  [9237,]  178 #>  [9238,]  178 #>  [9239,]  179 #>  [9240,]  178 #>  [9241,]  178 #>  [9242,]  178 #>  [9243,]  179 #>  [9244,]  178 #>  [9245,]  179 #>  [9246,]  178 #>  [9247,]  178 #>  [9248,]  178 #>  [9249,]  178 #>  [9250,]  178 #>  [9251,]  178 #>  [9252,]  178 #>  [9253,]  179 #>  [9254,]  178 #>  [9255,]  178 #>  [9256,]  178 #>  [9257,]  178 #>  [9258,]  178 #>  [9259,]  178 #>  [9260,]  178 #>  [9261,]  179 #>  [9262,]  178 #>  [9263,]  178 #>  [9264,]  178 #>  [9265,]  178 #>  [9266,]  178 #>  [9267,]  178 #>  [9268,]  178 #>  [9269,]  178 #>  [9270,]  178 #>  [9271,]  178 #>  [9272,]  179 #>  [9273,]  179 #>  [9274,]  179 #>  [9275,]  179 #>  [9276,]  179 #>  [9277,]  179 #>  [9278,]  178 #>  [9279,]  178 #>  [9280,]  178 #>  [9281,]  178 #>  [9282,]  178 #>  [9283,]  178 #>  [9284,]  179 #>  [9285,]  178 #>  [9286,]  178 #>  [9287,]  178 #>  [9288,]  178 #>  [9289,]  178 #>  [9290,]  178 #>  [9291,]  178 #>  [9292,]  178 #>  [9293,]  178 #>  [9294,]  179 #>  [9295,]  179 #>  [9296,]  178 #>  [9297,]  178 #>  [9298,]  178 #>  [9299,]  178 #>  [9300,]  179 #>  [9301,]  180 #>  [9302,]  180 #>  [9303,]  181 #>  [9304,]  180 #>  [9305,]  180 #>  [9306,]  181 #>  [9307,]  180 #>  [9308,]  180 #>  [9309,]  180 #>  [9310,]  180 #>  [9311,]  180 #>  [9312,]  181 #>  [9313,]  180 #>  [9314,]  180 #>  [9315,]  180 #>  [9316,]  180 #>  [9317,]  180 #>  [9318,]  180 #>  [9319,]  181 #>  [9320,]  181 #>  [9321,]  180 #>  [9322,]  180 #>  [9323,]  180 #>  [9324,]  180 #>  [9325,]  181 #>  [9326,]  180 #>  [9327,]  180 #>  [9328,]  181 #>  [9329,]  180 #>  [9330,]  180 #>  [9331,]  180 #>  [9332,]  180 #>  [9333,]  181 #>  [9334,]  181 #>  [9335,]  180 #>  [9336,]  180 #>  [9337,]  180 #>  [9338,]  180 #>  [9339,]  180 #>  [9340,]  180 #>  [9341,]  180 #>  [9342,]  180 #>  [9343,]  180 #>  [9344,]  180 #>  [9345,]  180 #>  [9346,]  180 #>  [9347,]  180 #>  [9348,]  180 #>  [9349,]  180 #>  [9350,]  180 #>  [9351,]  180 #>  [9352,]  180 #>  [9353,]  180 #>  [9354,]  180 #>  [9355,]  180 #>  [9356,]  180 #>  [9357,]  180 #>  [9358,]  180 #>  [9359,]  180 #>  [9360,]  181 #>  [9361,]  180 #>  [9362,]  180 #>  [9363,]  180 #>  [9364,]  180 #>  [9365,]  181 #>  [9366,]  180 #>  [9367,]  180 #>  [9368,]  180 #>  [9369,]  180 #>  [9370,]  181 #>  [9371,]  180 #>  [9372,]  180 #>  [9373,]  181 #>  [9374,]  180 #>  [9375,]  180 #>  [9376,]  180 #>  [9377,]  180 #>  [9378,]  180 #>  [9379,]  180 #>  [9380,]  180 #>  [9381,]  180 #>  [9382,]  180 #>  [9383,]  180 #>  [9384,]  181 #>  [9385,]  180 #>  [9386,]  180 #>  [9387,]  180 #>  [9388,]  180 #>  [9389,]  180 #>  [9390,]  180 #>  [9391,]  180 #>  [9392,]  180 #>  [9393,]  181 #>  [9394,]  180 #>  [9395,]  180 #>  [9396,]  180 #>  [9397,]  181 #>  [9398,]  181 #>  [9399,]  180 #>  [9400,]  180 #>  [9401,]  183 #>  [9402,]  183 #>  [9403,]  182 #>  [9404,]  182 #>  [9405,]  183 #>  [9406,]  183 #>  [9407,]  182 #>  [9408,]  182 #>  [9409,]  183 #>  [9410,]  183 #>  [9411,]  183 #>  [9412,]  182 #>  [9413,]  183 #>  [9414,]  183 #>  [9415,]  183 #>  [9416,]  183 #>  [9417,]  183 #>  [9418,]  183 #>  [9419,]  183 #>  [9420,]  183 #>  [9421,]  183 #>  [9422,]  183 #>  [9423,]  182 #>  [9424,]  183 #>  [9425,]  182 #>  [9426,]  183 #>  [9427,]  183 #>  [9428,]  183 #>  [9429,]  183 #>  [9430,]  183 #>  [9431,]  182 #>  [9432,]  183 #>  [9433,]  183 #>  [9434,]  183 #>  [9435,]  183 #>  [9436,]  183 #>  [9437,]  182 #>  [9438,]  183 #>  [9439,]  183 #>  [9440,]  182 #>  [9441,]  183 #>  [9442,]  183 #>  [9443,]  183 #>  [9444,]  183 #>  [9445,]  183 #>  [9446,]  182 #>  [9447,]  182 #>  [9448,]  183 #>  [9449,]  183 #>  [9450,]  183 #>  [9451,]  183 #>  [9452,]  182 #>  [9453,]  183 #>  [9454,]  183 #>  [9455,]  182 #>  [9456,]  183 #>  [9457,]  182 #>  [9458,]  183 #>  [9459,]  182 #>  [9460,]  182 #>  [9461,]  183 #>  [9462,]  183 #>  [9463,]  183 #>  [9464,]  183 #>  [9465,]  183 #>  [9466,]  183 #>  [9467,]  183 #>  [9468,]  182 #>  [9469,]  183 #>  [9470,]  183 #>  [9471,]  183 #>  [9472,]  183 #>  [9473,]  183 #>  [9474,]  182 #>  [9475,]  183 #>  [9476,]  183 #>  [9477,]  183 #>  [9478,]  183 #>  [9479,]  183 #>  [9480,]  182 #>  [9481,]  183 #>  [9482,]  183 #>  [9483,]  183 #>  [9484,]  183 #>  [9485,]  183 #>  [9486,]  182 #>  [9487,]  183 #>  [9488,]  183 #>  [9489,]  183 #>  [9490,]  183 #>  [9491,]  183 #>  [9492,]  182 #>  [9493,]  183 #>  [9494,]  183 #>  [9495,]  183 #>  [9496,]  182 #>  [9497,]  182 #>  [9498,]  182 #>  [9499,]  183 #>  [9500,]  183 #>  [9501,]  184 #>  [9502,]  185 #>  [9503,]  185 #>  [9504,]  184 #>  [9505,]  184 #>  [9506,]  185 #>  [9507,]  184 #>  [9508,]  184 #>  [9509,]  184 #>  [9510,]  184 #>  [9511,]  184 #>  [9512,]  185 #>  [9513,]  184 #>  [9514,]  184 #>  [9515,]  184 #>  [9516,]  184 #>  [9517,]  184 #>  [9518,]  185 #>  [9519,]  185 #>  [9520,]  185 #>  [9521,]  184 #>  [9522,]  184 #>  [9523,]  184 #>  [9524,]  184 #>  [9525,]  185 #>  [9526,]  184 #>  [9527,]  184 #>  [9528,]  185 #>  [9529,]  184 #>  [9530,]  184 #>  [9531,]  185 #>  [9532,]  184 #>  [9533,]  185 #>  [9534,]  185 #>  [9535,]  184 #>  [9536,]  184 #>  [9537,]  184 #>  [9538,]  184 #>  [9539,]  184 #>  [9540,]  184 #>  [9541,]  184 #>  [9542,]  184 #>  [9543,]  184 #>  [9544,]  184 #>  [9545,]  184 #>  [9546,]  184 #>  [9547,]  184 #>  [9548,]  184 #>  [9549,]  184 #>  [9550,]  184 #>  [9551,]  184 #>  [9552,]  184 #>  [9553,]  184 #>  [9554,]  184 #>  [9555,]  184 #>  [9556,]  184 #>  [9557,]  184 #>  [9558,]  184 #>  [9559,]  184 #>  [9560,]  185 #>  [9561,]  184 #>  [9562,]  184 #>  [9563,]  184 #>  [9564,]  184 #>  [9565,]  185 #>  [9566,]  184 #>  [9567,]  184 #>  [9568,]  184 #>  [9569,]  184 #>  [9570,]  185 #>  [9571,]  185 #>  [9572,]  184 #>  [9573,]  185 #>  [9574,]  184 #>  [9575,]  184 #>  [9576,]  184 #>  [9577,]  184 #>  [9578,]  184 #>  [9579,]  184 #>  [9580,]  184 #>  [9581,]  184 #>  [9582,]  184 #>  [9583,]  184 #>  [9584,]  185 #>  [9585,]  184 #>  [9586,]  184 #>  [9587,]  184 #>  [9588,]  184 #>  [9589,]  184 #>  [9590,]  184 #>  [9591,]  184 #>  [9592,]  184 #>  [9593,]  185 #>  [9594,]  184 #>  [9595,]  184 #>  [9596,]  184 #>  [9597,]  185 #>  [9598,]  185 #>  [9599,]  184 #>  [9600,]  185 #>  [9601,]  187 #>  [9602,]  187 #>  [9603,]  186 #>  [9604,]  186 #>  [9605,]  186 #>  [9606,]  187 #>  [9607,]  186 #>  [9608,]  186 #>  [9609,]  186 #>  [9610,]  186 #>  [9611,]  187 #>  [9612,]  186 #>  [9613,]  187 #>  [9614,]  187 #>  [9615,]  187 #>  [9616,]  187 #>  [9617,]  187 #>  [9618,]  186 #>  [9619,]  187 #>  [9620,]  186 #>  [9621,]  187 #>  [9622,]  187 #>  [9623,]  186 #>  [9624,]  186 #>  [9625,]  186 #>  [9626,]  187 #>  [9627,]  187 #>  [9628,]  186 #>  [9629,]  187 #>  [9630,]  186 #>  [9631,]  186 #>  [9632,]  186 #>  [9633,]  187 #>  [9634,]  186 #>  [9635,]  187 #>  [9636,]  186 #>  [9637,]  187 #>  [9638,]  186 #>  [9639,]  186 #>  [9640,]  186 #>  [9641,]  187 #>  [9642,]  186 #>  [9643,]  186 #>  [9644,]  187 #>  [9645,]  186 #>  [9646,]  186 #>  [9647,]  187 #>  [9648,]  186 #>  [9649,]  186 #>  [9650,]  187 #>  [9651,]  186 #>  [9652,]  187 #>  [9653,]  186 #>  [9654,]  186 #>  [9655,]  187 #>  [9656,]  186 #>  [9657,]  186 #>  [9658,]  187 #>  [9659,]  187 #>  [9660,]  186 #>  [9661,]  187 #>  [9662,]  186 #>  [9663,]  186 #>  [9664,]  186 #>  [9665,]  186 #>  [9666,]  186 #>  [9667,]  186 #>  [9668,]  187 #>  [9669,]  187 #>  [9670,]  187 #>  [9671,]  187 #>  [9672,]  186 #>  [9673,]  187 #>  [9674,]  186 #>  [9675,]  187 #>  [9676,]  187 #>  [9677,]  187 #>  [9678,]  186 #>  [9679,]  187 #>  [9680,]  186 #>  [9681,]  187 #>  [9682,]  186 #>  [9683,]  187 #>  [9684,]  187 #>  [9685,]  186 #>  [9686,]  187 #>  [9687,]  187 #>  [9688,]  186 #>  [9689,]  186 #>  [9690,]  187 #>  [9691,]  186 #>  [9692,]  187 #>  [9693,]  187 #>  [9694,]  187 #>  [9695,]  186 #>  [9696,]  187 #>  [9697,]  187 #>  [9698,]  187 #>  [9699,]  187 #>  [9700,]  187 #>  [9701,]  188 #>  [9702,]  188 #>  [9703,]  188 #>  [9704,]  189 #>  [9705,]  188 #>  [9706,]  188 #>  [9707,]  188 #>  [9708,]  188 #>  [9709,]  189 #>  [9710,]  188 #>  [9711,]  189 #>  [9712,]  189 #>  [9713,]  188 #>  [9714,]  189 #>  [9715,]  189 #>  [9716,]  188 #>  [9717,]  188 #>  [9718,]  189 #>  [9719,]  189 #>  [9720,]  188 #>  [9721,]  189 #>  [9722,]  188 #>  [9723,]  188 #>  [9724,]  188 #>  [9725,]  188 #>  [9726,]  189 #>  [9727,]  189 #>  [9728,]  188 #>  [9729,]  188 #>  [9730,]  189 #>  [9731,]  189 #>  [9732,]  188 #>  [9733,]  189 #>  [9734,]  188 #>  [9735,]  188 #>  [9736,]  189 #>  [9737,]  188 #>  [9738,]  189 #>  [9739,]  188 #>  [9740,]  188 #>  [9741,]  189 #>  [9742,]  189 #>  [9743,]  188 #>  [9744,]  188 #>  [9745,]  188 #>  [9746,]  188 #>  [9747,]  188 #>  [9748,]  189 #>  [9749,]  188 #>  [9750,]  188 #>  [9751,]  188 #>  [9752,]  188 #>  [9753,]  188 #>  [9754,]  188 #>  [9755,]  188 #>  [9756,]  188 #>  [9757,]  188 #>  [9758,]  189 #>  [9759,]  188 #>  [9760,]  189 #>  [9761,]  189 #>  [9762,]  188 #>  [9763,]  188 #>  [9764,]  188 #>  [9765,]  188 #>  [9766,]  188 #>  [9767,]  188 #>  [9768,]  189 #>  [9769,]  189 #>  [9770,]  188 #>  [9771,]  188 #>  [9772,]  188 #>  [9773,]  188 #>  [9774,]  189 #>  [9775,]  189 #>  [9776,]  188 #>  [9777,]  188 #>  [9778,]  188 #>  [9779,]  188 #>  [9780,]  188 #>  [9781,]  188 #>  [9782,]  189 #>  [9783,]  188 #>  [9784,]  188 #>  [9785,]  189 #>  [9786,]  188 #>  [9787,]  188 #>  [9788,]  188 #>  [9789,]  188 #>  [9790,]  188 #>  [9791,]  188 #>  [9792,]  189 #>  [9793,]  189 #>  [9794,]  188 #>  [9795,]  188 #>  [9796,]  189 #>  [9797,]  189 #>  [9798,]  188 #>  [9799,]  188 #>  [9800,]  188 #>  [9801,]  191 #>  [9802,]  191 #>  [9803,]  190 #>  [9804,]  191 #>  [9805,]  191 #>  [9806,]  191 #>  [9807,]  190 #>  [9808,]  191 #>  [9809,]  191 #>  [9810,]  191 #>  [9811,]  191 #>  [9812,]  191 #>  [9813,]  190 #>  [9814,]  191 #>  [9815,]  191 #>  [9816,]  191 #>  [9817,]  191 #>  [9818,]  191 #>  [9819,]  191 #>  [9820,]  191 #>  [9821,]  190 #>  [9822,]  191 #>  [9823,]  190 #>  [9824,]  191 #>  [9825,]  191 #>  [9826,]  191 #>  [9827,]  191 #>  [9828,]  191 #>  [9829,]  191 #>  [9830,]  190 #>  [9831,]  190 #>  [9832,]  191 #>  [9833,]  191 #>  [9834,]  191 #>  [9835,]  191 #>  [9836,]  191 #>  [9837,]  191 #>  [9838,]  191 #>  [9839,]  190 #>  [9840,]  191 #>  [9841,]  191 #>  [9842,]  191 #>  [9843,]  191 #>  [9844,]  191 #>  [9845,]  191 #>  [9846,]  191 #>  [9847,]  190 #>  [9848,]  191 #>  [9849,]  190 #>  [9850,]  191 #>  [9851,]  191 #>  [9852,]  191 #>  [9853,]  191 #>  [9854,]  190 #>  [9855,]  191 #>  [9856,]  191 #>  [9857,]  191 #>  [9858,]  191 #>  [9859,]  191 #>  [9860,]  191 #>  [9861,]  191 #>  [9862,]  190 #>  [9863,]  191 #>  [9864,]  191 #>  [9865,]  191 #>  [9866,]  191 #>  [9867,]  191 #>  [9868,]  191 #>  [9869,]  191 #>  [9870,]  190 #>  [9871,]  191 #>  [9872,]  191 #>  [9873,]  191 #>  [9874,]  191 #>  [9875,]  191 #>  [9876,]  191 #>  [9877,]  190 #>  [9878,]  191 #>  [9879,]  190 #>  [9880,]  190 #>  [9881,]  191 #>  [9882,]  191 #>  [9883,]  190 #>  [9884,]  191 #>  [9885,]  191 #>  [9886,]  191 #>  [9887,]  191 #>  [9888,]  191 #>  [9889,]  191 #>  [9890,]  191 #>  [9891,]  191 #>  [9892,]  191 #>  [9893,]  191 #>  [9894,]  191 #>  [9895,]  190 #>  [9896,]  191 #>  [9897,]  191 #>  [9898,]  190 #>  [9899,]  191 #>  [9900,]  191 #>  [9901,]  193 #>  [9902,]  192 #>  [9903,]  193 #>  [9904,]  193 #>  [9905,]  193 #>  [9906,]  192 #>  [9907,]  193 #>  [9908,]  193 #>  [9909,]  193 #>  [9910,]  193 #>  [9911,]  192 #>  [9912,]  192 #>  [9913,]  193 #>  [9914,]  193 #>  [9915,]  192 #>  [9916,]  193 #>  [9917,]  192 #>  [9918,]  193 #>  [9919,]  193 #>  [9920,]  193 #>  [9921,]  193 #>  [9922,]  193 #>  [9923,]  192 #>  [9924,]  193 #>  [9925,]  193 #>  [9926,]  193 #>  [9927,]  193 #>  [9928,]  193 #>  [9929,]  192 #>  [9930,]  192 #>  [9931,]  192 #>  [9932,]  193 #>  [9933,]  193 #>  [9934,]  192 #>  [9935,]  192 #>  [9936,]  193 #>  [9937,]  192 #>  [9938,]  193 #>  [9939,]  193 #>  [9940,]  193 #>  [9941,]  193 #>  [9942,]  192 #>  [9943,]  192 #>  [9944,]  192 #>  [9945,]  193 #>  [9946,]  193 #>  [9947,]  192 #>  [9948,]  192 #>  [9949,]  193 #>  [9950,]  193 #>  [9951,]  193 #>  [9952,]  193 #>  [9953,]  193 #>  [9954,]  193 #>  [9955,]  193 #>  [9956,]  192 #>  [9957,]  193 #>  [9958,]  193 #>  [9959,]  193 #>  [9960,]  192 #>  [9961,]  192 #>  [9962,]  193 #>  [9963,]  192 #>  [9964,]  192 #>  [9965,]  192 #>  [9966,]  192 #>  [9967,]  193 #>  [9968,]  193 #>  [9969,]  193 #>  [9970,]  192 #>  [9971,]  193 #>  [9972,]  193 #>  [9973,]  193 #>  [9974,]  193 #>  [9975,]  192 #>  [9976,]  193 #>  [9977,]  193 #>  [9978,]  192 #>  [9979,]  192 #>  [9980,]  193 #>  [9981,]  192 #>  [9982,]  193 #>  [9983,]  193 #>  [9984,]  193 #>  [9985,]  193 #>  [9986,]  193 #>  [9987,]  193 #>  [9988,]  193 #>  [9989,]  193 #>  [9990,]  193 #>  [9991,]  193 #>  [9992,]  192 #>  [9993,]  193 #>  [9994,]  192 #>  [9995,]  192 #>  [9996,]  193 #>  [9997,]  193 #>  [9998,]  193 #>  [9999,]  193 #> [10000,]  192 #> [10001,]  194 #> [10002,]  194 #> [10003,]  194 #> [10004,]  194 #> [10005,]  195 #> [10006,]  194 #> [10007,]  194 #> [10008,]  194 #> [10009,]  194 #> [10010,]  194 #> [10011,]  194 #> [10012,]  194 #> [10013,]  194 #> [10014,]  194 #> [10015,]  194 #> [10016,]  194 #> [10017,]  194 #> [10018,]  195 #> [10019,]  194 #> [10020,]  194 #> [10021,]  194 #> [10022,]  194 #> [10023,]  194 #> [10024,]  194 #> [10025,]  194 #> [10026,]  194 #> [10027,]  194 #> [10028,]  194 #> [10029,]  194 #> [10030,]  194 #> [10031,]  194 #> [10032,]  194 #> [10033,]  194 #> [10034,]  194 #> [10035,]  194 #> [10036,]  194 #> [10037,]  194 #> [10038,]  194 #> [10039,]  194 #> [10040,]  194 #> [10041,]  194 #> [10042,]  194 #> [10043,]  194 #> [10044,]  194 #> [10045,]  194 #> [10046,]  194 #> [10047,]  194 #> [10048,]  194 #> [10049,]  194 #> [10050,]  194 #> [10051,]  194 #> [10052,]  194 #> [10053,]  194 #> [10054,]  194 #> [10055,]  194 #> [10056,]  194 #> [10057,]  194 #> [10058,]  194 #> [10059,]  194 #> [10060,]  194 #> [10061,]  194 #> [10062,]  194 #> [10063,]  194 #> [10064,]  194 #> [10065,]  194 #> [10066,]  194 #> [10067,]  194 #> [10068,]  194 #> [10069,]  194 #> [10070,]  194 #> [10071,]  195 #> [10072,]  194 #> [10073,]  194 #> [10074,]  194 #> [10075,]  195 #> [10076,]  194 #> [10077,]  194 #> [10078,]  194 #> [10079,]  194 #> [10080,]  194 #> [10081,]  194 #> [10082,]  194 #> [10083,]  194 #> [10084,]  194 #> [10085,]  194 #> [10086,]  194 #> [10087,]  194 #> [10088,]  194 #> [10089,]  194 #> [10090,]  194 #> [10091,]  194 #> [10092,]  194 #> [10093,]  194 #> [10094,]  194 #> [10095,]  194 #> [10096,]  194 #> [10097,]  194 #> [10098,]  194 #> [10099,]  194 #> [10100,]  195 #> [10101,]  197 #> [10102,]  197 #> [10103,]  196 #> [10104,]  197 #> [10105,]  197 #> [10106,]  197 #> [10107,]  196 #> [10108,]  197 #> [10109,]  197 #> [10110,]  197 #> [10111,]  197 #> [10112,]  197 #> [10113,]  197 #> [10114,]  197 #> [10115,]  197 #> [10116,]  197 #> [10117,]  197 #> [10118,]  197 #> [10119,]  197 #> [10120,]  196 #> [10121,]  197 #> [10122,]  197 #> [10123,]  197 #> [10124,]  197 #> [10125,]  196 #> [10126,]  197 #> [10127,]  197 #> [10128,]  197 #> [10129,]  197 #> [10130,]  197 #> [10131,]  197 #> [10132,]  197 #> [10133,]  197 #> [10134,]  197 #> [10135,]  197 #> [10136,]  197 #> [10137,]  197 #> [10138,]  197 #> [10139,]  196 #> [10140,]  197 #> [10141,]  197 #> [10142,]  197 #> [10143,]  197 #> [10144,]  196 #> [10145,]  197 #> [10146,]  197 #> [10147,]  197 #> [10148,]  197 #> [10149,]  196 #> [10150,]  196 #> [10151,]  197 #> [10152,]  197 #> [10153,]  196 #> [10154,]  197 #> [10155,]  196 #> [10156,]  196 #> [10157,]  197 #> [10158,]  197 #> [10159,]  196 #> [10160,]  197 #> [10161,]  197 #> [10162,]  197 #> [10163,]  197 #> [10164,]  197 #> [10165,]  196 #> [10166,]  196 #> [10167,]  197 #> [10168,]  197 #> [10169,]  197 #> [10170,]  197 #> [10171,]  197 #> [10172,]  197 #> [10173,]  197 #> [10174,]  197 #> [10175,]  197 #> [10176,]  197 #> [10177,]  197 #> [10178,]  197 #> [10179,]  197 #> [10180,]  197 #> [10181,]  197 #> [10182,]  197 #> [10183,]  197 #> [10184,]  197 #> [10185,]  197 #> [10186,]  197 #> [10187,]  197 #> [10188,]  197 #> [10189,]  197 #> [10190,]  196 #> [10191,]  197 #> [10192,]  197 #> [10193,]  197 #> [10194,]  197 #> [10195,]  197 #> [10196,]  197 #> [10197,]  197 #> [10198,]  196 #> [10199,]  197 #> [10200,]  196 #> [10201,]  199 #> [10202,]  199 #> [10203,]  198 #> [10204,]  198 #> [10205,]  199 #> [10206,]  199 #> [10207,]  198 #> [10208,]  198 #> [10209,]  199 #> [10210,]  199 #> [10211,]  199 #> [10212,]  198 #> [10213,]  199 #> [10214,]  199 #> [10215,]  199 #> [10216,]  199 #> [10217,]  199 #> [10218,]  199 #> [10219,]  199 #> [10220,]  199 #> [10221,]  199 #> [10222,]  199 #> [10223,]  199 #> [10224,]  199 #> [10225,]  198 #> [10226,]  199 #> [10227,]  199 #> [10228,]  199 #> [10229,]  199 #> [10230,]  199 #> [10231,]  198 #> [10232,]  199 #> [10233,]  199 #> [10234,]  199 #> [10235,]  199 #> [10236,]  199 #> [10237,]  199 #> [10238,]  199 #> [10239,]  199 #> [10240,]  199 #> [10241,]  199 #> [10242,]  199 #> [10243,]  199 #> [10244,]  199 #> [10245,]  199 #> [10246,]  199 #> [10247,]  199 #> [10248,]  199 #> [10249,]  199 #> [10250,]  199 #> [10251,]  199 #> [10252,]  198 #> [10253,]  199 #> [10254,]  199 #> [10255,]  199 #> [10256,]  199 #> [10257,]  198 #> [10258,]  199 #> [10259,]  198 #> [10260,]  198 #> [10261,]  199 #> [10262,]  199 #> [10263,]  199 #> [10264,]  199 #> [10265,]  199 #> [10266,]  199 #> [10267,]  199 #> [10268,]  198 #> [10269,]  199 #> [10270,]  199 #> [10271,]  199 #> [10272,]  199 #> [10273,]  199 #> [10274,]  199 #> [10275,]  199 #> [10276,]  199 #> [10277,]  199 #> [10278,]  199 #> [10279,]  199 #> [10280,]  199 #> [10281,]  199 #> [10282,]  199 #> [10283,]  199 #> [10284,]  199 #> [10285,]  199 #> [10286,]  198 #> [10287,]  199 #> [10288,]  199 #> [10289,]  199 #> [10290,]  199 #> [10291,]  199 #> [10292,]  199 #> [10293,]  199 #> [10294,]  199 #> [10295,]  199 #> [10296,]  198 #> [10297,]  198 #> [10298,]  199 #> [10299,]  199 #> [10300,]  199 #> [10301,]  201 #> [10302,]  201 #> [10303,]  200 #> [10304,]  201 #> [10305,]  201 #> [10306,]  201 #> [10307,]  200 #> [10308,]  201 #> [10309,]  201 #> [10310,]  201 #> [10311,]  201 #> [10312,]  201 #> [10313,]  200 #> [10314,]  201 #> [10315,]  201 #> [10316,]  200 #> [10317,]  201 #> [10318,]  201 #> [10319,]  200 #> [10320,]  201 #> [10321,]  200 #> [10322,]  201 #> [10323,]  200 #> [10324,]  201 #> [10325,]  201 #> [10326,]  201 #> [10327,]  201 #> [10328,]  201 #> [10329,]  201 #> [10330,]  200 #> [10331,]  200 #> [10332,]  201 #> [10333,]  201 #> [10334,]  200 #> [10335,]  200 #> [10336,]  200 #> [10337,]  200 #> [10338,]  201 #> [10339,]  200 #> [10340,]  200 #> [10341,]  201 #> [10342,]  201 #> [10343,]  201 #> [10344,]  201 #> [10345,]  201 #> [10346,]  201 #> [10347,]  200 #> [10348,]  201 #> [10349,]  200 #> [10350,]  201 #> [10351,]  201 #> [10352,]  201 #> [10353,]  201 #> [10354,]  200 #> [10355,]  201 #> [10356,]  201 #> [10357,]  201 #> [10358,]  201 #> [10359,]  201 #> [10360,]  201 #> [10361,]  201 #> [10362,]  200 #> [10363,]  201 #> [10364,]  201 #> [10365,]  201 #> [10366,]  201 #> [10367,]  201 #> [10368,]  201 #> [10369,]  201 #> [10370,]  200 #> [10371,]  201 #> [10372,]  201 #> [10373,]  201 #> [10374,]  201 #> [10375,]  201 #> [10376,]  201 #> [10377,]  200 #> [10378,]  201 #> [10379,]  200 #> [10380,]  200 #> [10381,]  201 #> [10382,]  201 #> [10383,]  200 #> [10384,]  201 #> [10385,]  201 #> [10386,]  201 #> [10387,]  201 #> [10388,]  201 #> [10389,]  201 #> [10390,]  201 #> [10391,]  201 #> [10392,]  201 #> [10393,]  200 #> [10394,]  201 #> [10395,]  200 #> [10396,]  201 #> [10397,]  201 #> [10398,]  200 #> [10399,]  201 #> [10400,]  200 #> [10401,]  203 #> [10402,]  202 #> [10403,]  202 #> [10404,]  202 #> [10405,]  203 #> [10406,]  202 #> [10407,]  202 #> [10408,]  202 #> [10409,]  203 #> [10410,]  202 #> [10411,]  203 #> [10412,]  202 #> [10413,]  203 #> [10414,]  202 #> [10415,]  202 #> [10416,]  202 #> [10417,]  203 #> [10418,]  203 #> [10419,]  202 #> [10420,]  203 #> [10421,]  203 #> [10422,]  202 #> [10423,]  202 #> [10424,]  202 #> [10425,]  202 #> [10426,]  202 #> [10427,]  203 #> [10428,]  203 #> [10429,]  203 #> [10430,]  202 #> [10431,]  202 #> [10432,]  202 #> [10433,]  203 #> [10434,]  202 #> [10435,]  202 #> [10436,]  203 #> [10437,]  202 #> [10438,]  203 #> [10439,]  203 #> [10440,]  202 #> [10441,]  203 #> [10442,]  203 #> [10443,]  202 #> [10444,]  202 #> [10445,]  202 #> [10446,]  202 #> [10447,]  202 #> [10448,]  202 #> [10449,]  202 #> [10450,]  202 #> [10451,]  203 #> [10452,]  202 #> [10453,]  203 #> [10454,]  203 #> [10455,]  202 #> [10456,]  203 #> [10457,]  202 #> [10458,]  203 #> [10459,]  202 #> [10460,]  202 #> [10461,]  203 #> [10462,]  203 #> [10463,]  202 #> [10464,]  202 #> [10465,]  203 #> [10466,]  203 #> [10467,]  202 #> [10468,]  202 #> [10469,]  202 #> [10470,]  203 #> [10471,]  202 #> [10472,]  202 #> [10473,]  202 #> [10474,]  202 #> [10475,]  202 #> [10476,]  202 #> [10477,]  203 #> [10478,]  202 #> [10479,]  203 #> [10480,]  202 #> [10481,]  202 #> [10482,]  203 #> [10483,]  203 #> [10484,]  203 #> [10485,]  203 #> [10486,]  202 #> [10487,]  203 #> [10488,]  202 #> [10489,]  203 #> [10490,]  203 #> [10491,]  203 #> [10492,]  202 #> [10493,]  203 #> [10494,]  203 #> [10495,]  202 #> [10496,]  202 #> [10497,]  202 #> [10498,]  202 #> [10499,]  202 #> [10500,]  202 #> [10501,]  205 #> [10502,]  205 #> [10503,]  204 #> [10504,]  204 #> [10505,]  204 #> [10506,]  205 #> [10507,]  204 #> [10508,]  204 #> [10509,]  204 #> [10510,]  204 #> [10511,]  204 #> [10512,]  204 #> [10513,]  205 #> [10514,]  205 #> [10515,]  205 #> [10516,]  205 #> [10517,]  205 #> [10518,]  204 #> [10519,]  204 #> [10520,]  204 #> [10521,]  205 #> [10522,]  204 #> [10523,]  204 #> [10524,]  204 #> [10525,]  204 #> [10526,]  205 #> [10527,]  204 #> [10528,]  204 #> [10529,]  205 #> [10530,]  204 #> [10531,]  204 #> [10532,]  204 #> [10533,]  205 #> [10534,]  204 #> [10535,]  205 #> [10536,]  204 #> [10537,]  204 #> [10538,]  204 #> [10539,]  204 #> [10540,]  204 #> [10541,]  205 #> [10542,]  204 #> [10543,]  204 #> [10544,]  205 #> [10545,]  204 #> [10546,]  204 #> [10547,]  204 #> [10548,]  204 #> [10549,]  204 #> [10550,]  205 #> [10551,]  204 #> [10552,]  204 #> [10553,]  204 #> [10554,]  204 #> [10555,]  204 #> [10556,]  204 #> [10557,]  204 #> [10558,]  204 #> [10559,]  205 #> [10560,]  204 #> [10561,]  205 #> [10562,]  204 #> [10563,]  204 #> [10564,]  204 #> [10565,]  204 #> [10566,]  204 #> [10567,]  204 #> [10568,]  205 #> [10569,]  204 #> [10570,]  205 #> [10571,]  205 #> [10572,]  204 #> [10573,]  205 #> [10574,]  204 #> [10575,]  204 #> [10576,]  205 #> [10577,]  205 #> [10578,]  204 #> [10579,]  205 #> [10580,]  204 #> [10581,]  205 #> [10582,]  204 #> [10583,]  205 #> [10584,]  204 #> [10585,]  204 #> [10586,]  205 #> [10587,]  204 #> [10588,]  204 #> [10589,]  204 #> [10590,]  204 #> [10591,]  204 #> [10592,]  204 #> [10593,]  205 #> [10594,]  205 #> [10595,]  204 #> [10596,]  205 #> [10597,]  204 #> [10598,]  204 #> [10599,]  205 #> [10600,]  204 #> [10601,]  206 #> [10602,]  206 #> [10603,]  206 #> [10604,]  206 #> [10605,]  206 #> [10606,]  206 #> [10607,]  206 #> [10608,]  206 #> [10609,]  206 #> [10610,]  206 #> [10611,]  206 #> [10612,]  206 #> [10613,]  206 #> [10614,]  206 #> [10615,]  206 #> [10616,]  206 #> [10617,]  206 #> [10618,]  206 #> [10619,]  206 #> [10620,]  207 #> [10621,]  206 #> [10622,]  207 #> [10623,]  206 #> [10624,]  206 #> [10625,]  206 #> [10626,]  206 #> [10627,]  207 #> [10628,]  206 #> [10629,]  207 #> [10630,]  206 #> [10631,]  206 #> [10632,]  206 #> [10633,]  206 #> [10634,]  206 #> [10635,]  206 #> [10636,]  206 #> [10637,]  206 #> [10638,]  206 #> [10639,]  206 #> [10640,]  206 #> [10641,]  206 #> [10642,]  206 #> [10643,]  206 #> [10644,]  206 #> [10645,]  206 #> [10646,]  206 #> [10647,]  206 #> [10648,]  206 #> [10649,]  206 #> [10650,]  206 #> [10651,]  206 #> [10652,]  206 #> [10653,]  206 #> [10654,]  206 #> [10655,]  206 #> [10656,]  206 #> [10657,]  206 #> [10658,]  207 #> [10659,]  206 #> [10660,]  206 #> [10661,]  206 #> [10662,]  206 #> [10663,]  206 #> [10664,]  207 #> [10665,]  206 #> [10666,]  207 #> [10667,]  206 #> [10668,]  206 #> [10669,]  206 #> [10670,]  206 #> [10671,]  206 #> [10672,]  206 #> [10673,]  206 #> [10674,]  206 #> [10675,]  206 #> [10676,]  206 #> [10677,]  207 #> [10678,]  206 #> [10679,]  206 #> [10680,]  206 #> [10681,]  207 #> [10682,]  206 #> [10683,]  206 #> [10684,]  206 #> [10685,]  206 #> [10686,]  206 #> [10687,]  207 #> [10688,]  206 #> [10689,]  206 #> [10690,]  206 #> [10691,]  206 #> [10692,]  206 #> [10693,]  206 #> [10694,]  206 #> [10695,]  206 #> [10696,]  206 #> [10697,]  206 #> [10698,]  206 #> [10699,]  206 #> [10700,]  207 #> [10701,]  208 #> [10702,]  208 #> [10703,]  208 #> [10704,]  208 #> [10705,]  208 #> [10706,]  208 #> [10707,]  208 #> [10708,]  208 #> [10709,]  208 #> [10710,]  208 #> [10711,]  208 #> [10712,]  208 #> [10713,]  208 #> [10714,]  208 #> [10715,]  208 #> [10716,]  208 #> [10717,]  208 #> [10718,]  208 #> [10719,]  208 #> [10720,]  208 #> [10721,]  208 #> [10722,]  208 #> [10723,]  208 #> [10724,]  208 #> [10725,]  208 #> [10726,]  208 #> [10727,]  208 #> [10728,]  208 #> [10729,]  208 #> [10730,]  208 #> [10731,]  208 #> [10732,]  208 #> [10733,]  208 #> [10734,]  208 #> [10735,]  208 #> [10736,]  208 #> [10737,]  208 #> [10738,]  208 #> [10739,]  208 #> [10740,]  208 #> [10741,]  208 #> [10742,]  208 #> [10743,]  208 #> [10744,]  208 #> [10745,]  208 #> [10746,]  208 #> [10747,]  208 #> [10748,]  208 #> [10749,]  208 #> [10750,]  208 #> [10751,]  208 #> [10752,]  208 #> [10753,]  208 #> [10754,]  208 #> [10755,]  208 #> [10756,]  208 #> [10757,]  208 #> [10758,]  208 #> [10759,]  208 #> [10760,]  208 #> [10761,]  208 #> [10762,]  208 #> [10763,]  208 #> [10764,]  208 #> [10765,]  208 #> [10766,]  208 #> [10767,]  208 #> [10768,]  208 #> [10769,]  208 #> [10770,]  208 #> [10771,]  208 #> [10772,]  208 #> [10773,]  208 #> [10774,]  208 #> [10775,]  208 #> [10776,]  208 #> [10777,]  208 #> [10778,]  208 #> [10779,]  208 #> [10780,]  208 #> [10781,]  208 #> [10782,]  208 #> [10783,]  208 #> [10784,]  208 #> [10785,]  208 #> [10786,]  208 #> [10787,]  208 #> [10788,]  208 #> [10789,]  208 #> [10790,]  208 #> [10791,]  208 #> [10792,]  208 #> [10793,]  208 #> [10794,]  208 #> [10795,]  208 #> [10796,]  208 #> [10797,]  208 #> [10798,]  208 #> [10799,]  208 #> [10800,]  208 #> [10801,]  209 #> [10802,]  210 #> [10803,]  209 #> [10804,]  209 #> [10805,]  210 #> [10806,]  209 #> [10807,]  210 #> [10808,]  209 #> [10809,]  210 #> [10810,]  210 #> [10811,]  209 #> [10812,]  210 #> [10813,]  210 #> [10814,]  209 #> [10815,]  209 #> [10816,]  209 #> [10817,]  210 #> [10818,]  210 #> [10819,]  209 #> [10820,]  210 #> [10821,]  210 #> [10822,]  210 #> [10823,]  210 #> [10824,]  210 #> [10825,]  210 #> [10826,]  209 #> [10827,]  210 #> [10828,]  209 #> [10829,]  210 #> [10830,]  210 #> [10831,]  210 #> [10832,]  210 #> [10833,]  210 #> [10834,]  209 #> [10835,]  209 #> [10836,]  210 #> [10837,]  209 #> [10838,]  209 #> [10839,]  210 #> [10840,]  210 #> [10841,]  210 #> [10842,]  209 #> [10843,]  209 #> [10844,]  210 #> [10845,]  209 #> [10846,]  209 #> [10847,]  210 #> [10848,]  210 #> [10849,]  209 #> [10850,]  210 #> [10851,]  210 #> [10852,]  209 #> [10853,]  210 #> [10854,]  210 #> [10855,]  209 #> [10856,]  209 #> [10857,]  209 #> [10858,]  210 #> [10859,]  209 #> [10860,]  210 #> [10861,]  210 #> [10862,]  209 #> [10863,]  210 #> [10864,]  209 #> [10865,]  209 #> [10866,]  210 #> [10867,]  209 #> [10868,]  209 #> [10869,]  209 #> [10870,]  210 #> [10871,]  210 #> [10872,]  209 #> [10873,]  209 #> [10874,]  210 #> [10875,]  210 #> [10876,]  210 #> [10877,]  209 #> [10878,]  210 #> [10879,]  209 #> [10880,]  210 #> [10881,]  210 #> [10882,]  209 #> [10883,]  210 #> [10884,]  210 #> [10885,]  209 #> [10886,]  210 #> [10887,]  210 #> [10888,]  210 #> [10889,]  209 #> [10890,]  210 #> [10891,]  209 #> [10892,]  210 #> [10893,]  210 #> [10894,]  209 #> [10895,]  210 #> [10896,]  209 #> [10897,]  209 #> [10898,]  209 #> [10899,]  210 #> [10900,]  209 #> [10901,]  211 #> [10902,]  211 #> [10903,]  211 #> [10904,]  211 #> [10905,]  211 #> [10906,]  212 #> [10907,]  211 #> [10908,]  212 #> [10909,]  212 #> [10910,]  211 #> [10911,]  211 #> [10912,]  212 #> [10913,]  211 #> [10914,]  211 #> [10915,]  212 #> [10916,]  211 #> [10917,]  211 #> [10918,]  211 #> [10919,]  211 #> [10920,]  212 #> [10921,]  211 #> [10922,]  211 #> [10923,]  211 #> [10924,]  211 #> [10925,]  211 #> [10926,]  212 #> [10927,]  211 #> [10928,]  211 #> [10929,]  211 #> [10930,]  211 #> [10931,]  211 #> [10932,]  211 #> [10933,]  212 #> [10934,]  211 #> [10935,]  211 #> [10936,]  211 #> [10937,]  211 #> [10938,]  211 #> [10939,]  211 #> [10940,]  211 #> [10941,]  211 #> [10942,]  211 #> [10943,]  212 #> [10944,]  211 #> [10945,]  212 #> [10946,]  212 #> [10947,]  211 #> [10948,]  211 #> [10949,]  211 #> [10950,]  211 #> [10951,]  212 #> [10952,]  211 #> [10953,]  211 #> [10954,]  211 #> [10955,]  211 #> [10956,]  212 #> [10957,]  212 #> [10958,]  212 #> [10959,]  211 #> [10960,]  211 #> [10961,]  212 #> [10962,]  211 #> [10963,]  211 #> [10964,]  212 #> [10965,]  212 #> [10966,]  212 #> [10967,]  211 #> [10968,]  212 #> [10969,]  211 #> [10970,]  211 #> [10971,]  211 #> [10972,]  212 #> [10973,]  211 #> [10974,]  211 #> [10975,]  211 #> [10976,]  212 #> [10977,]  211 #> [10978,]  211 #> [10979,]  211 #> [10980,]  211 #> [10981,]  212 #> [10982,]  211 #> [10983,]  211 #> [10984,]  211 #> [10985,]  211 #> [10986,]  211 #> [10987,]  211 #> [10988,]  211 #> [10989,]  211 #> [10990,]  211 #> [10991,]  211 #> [10992,]  212 #> [10993,]  211 #> [10994,]  212 #> [10995,]  211 #> [10996,]  212 #> [10997,]  212 #> [10998,]  211 #> [10999,]  211 #> [11000,]  211 #> [11001,]  214 #> [11002,]  213 #> [11003,]  213 #> [11004,]  213 #> [11005,]  214 #> [11006,]  213 #> [11007,]  213 #> [11008,]  213 #> [11009,]  213 #> [11010,]  214 #> [11011,]  214 #> [11012,]  214 #> [11013,]  213 #> [11014,]  214 #> [11015,]  214 #> [11016,]  213 #> [11017,]  214 #> [11018,]  214 #> [11019,]  213 #> [11020,]  213 #> [11021,]  213 #> [11022,]  214 #> [11023,]  213 #> [11024,]  213 #> [11025,]  213 #> [11026,]  214 #> [11027,]  214 #> [11028,]  213 #> [11029,]  213 #> [11030,]  213 #> [11031,]  214 #> [11032,]  214 #> [11033,]  213 #> [11034,]  213 #> [11035,]  213 #> [11036,]  213 #> [11037,]  213 #> [11038,]  214 #> [11039,]  214 #> [11040,]  213 #> [11041,]  213 #> [11042,]  213 #> [11043,]  214 #> [11044,]  213 #> [11045,]  213 #> [11046,]  213 #> [11047,]  214 #> [11048,]  213 #> [11049,]  213 #> [11050,]  213 #> [11051,]  213 #> [11052,]  214 #> [11053,]  213 #> [11054,]  213 #> [11055,]  213 #> [11056,]  213 #> [11057,]  213 #> [11058,]  214 #> [11059,]  214 #> [11060,]  213 #> [11061,]  214 #> [11062,]  213 #> [11063,]  213 #> [11064,]  213 #> [11065,]  213 #> [11066,]  214 #> [11067,]  213 #> [11068,]  214 #> [11069,]  213 #> [11070,]  214 #> [11071,]  214 #> [11072,]  213 #> [11073,]  213 #> [11074,]  213 #> [11075,]  214 #> [11076,]  213 #> [11077,]  214 #> [11078,]  213 #> [11079,]  214 #> [11080,]  213 #> [11081,]  213 #> [11082,]  213 #> [11083,]  214 #> [11084,]  213 #> [11085,]  213 #> [11086,]  213 #> [11087,]  214 #> [11088,]  213 #> [11089,]  213 #> [11090,]  214 #> [11091,]  214 #> [11092,]  214 #> [11093,]  213 #> [11094,]  213 #> [11095,]  214 #> [11096,]  214 #> [11097,]  213 #> [11098,]  213 #> [11099,]  213 #> [11100,]  214 #> [11101,]  216 #> [11102,]  216 #> [11103,]  215 #> [11104,]  216 #> [11105,]  216 #> [11106,]  215 #> [11107,]  215 #> [11108,]  216 #> [11109,]  216 #> [11110,]  216 #> [11111,]  216 #> [11112,]  216 #> [11113,]  216 #> [11114,]  216 #> [11115,]  216 #> [11116,]  216 #> [11117,]  216 #> [11118,]  216 #> [11119,]  216 #> [11120,]  215 #> [11121,]  215 #> [11122,]  216 #> [11123,]  215 #> [11124,]  216 #> [11125,]  215 #> [11126,]  216 #> [11127,]  216 #> [11128,]  216 #> [11129,]  216 #> [11130,]  216 #> [11131,]  216 #> [11132,]  216 #> [11133,]  216 #> [11134,]  215 #> [11135,]  215 #> [11136,]  216 #> [11137,]  215 #> [11138,]  216 #> [11139,]  216 #> [11140,]  216 #> [11141,]  216 #> [11142,]  215 #> [11143,]  216 #> [11144,]  215 #> [11145,]  216 #> [11146,]  216 #> [11147,]  216 #> [11148,]  216 #> [11149,]  216 #> [11150,]  216 #> [11151,]  216 #> [11152,]  216 #> [11153,]  215 #> [11154,]  216 #> [11155,]  216 #> [11156,]  215 #> [11157,]  215 #> [11158,]  216 #> [11159,]  216 #> [11160,]  216 #> [11161,]  216 #> [11162,]  216 #> [11163,]  216 #> [11164,]  216 #> [11165,]  215 #> [11166,]  216 #> [11167,]  216 #> [11168,]  216 #> [11169,]  216 #> [11170,]  216 #> [11171,]  216 #> [11172,]  216 #> [11173,]  215 #> [11174,]  215 #> [11175,]  216 #> [11176,]  216 #> [11177,]  216 #> [11178,]  216 #> [11179,]  216 #> [11180,]  215 #> [11181,]  216 #> [11182,]  215 #> [11183,]  216 #> [11184,]  215 #> [11185,]  215 #> [11186,]  215 #> [11187,]  216 #> [11188,]  216 #> [11189,]  215 #> [11190,]  216 #> [11191,]  216 #> [11192,]  216 #> [11193,]  216 #> [11194,]  215 #> [11195,]  216 #> [11196,]  216 #> [11197,]  216 #> [11198,]  215 #> [11199,]  215 #> [11200,]  216 #> [11201,]  217 #> [11202,]  218 #> [11203,]  218 #> [11204,]  217 #> [11205,]  217 #> [11206,]  218 #> [11207,]  218 #> [11208,]  217 #> [11209,]  217 #> [11210,]  217 #> [11211,]  217 #> [11212,]  218 #> [11213,]  217 #> [11214,]  217 #> [11215,]  217 #> [11216,]  217 #> [11217,]  217 #> [11218,]  218 #> [11219,]  218 #> [11220,]  218 #> [11221,]  217 #> [11222,]  217 #> [11223,]  218 #> [11224,]  217 #> [11225,]  218 #> [11226,]  217 #> [11227,]  217 #> [11228,]  218 #> [11229,]  217 #> [11230,]  217 #> [11231,]  218 #> [11232,]  218 #> [11233,]  218 #> [11234,]  218 #> [11235,]  217 #> [11236,]  217 #> [11237,]  217 #> [11238,]  217 #> [11239,]  217 #> [11240,]  218 #> [11241,]  217 #> [11242,]  218 #> [11243,]  217 #> [11244,]  217 #> [11245,]  217 #> [11246,]  217 #> [11247,]  217 #> [11248,]  218 #> [11249,]  217 #> [11250,]  217 #> [11251,]  217 #> [11252,]  217 #> [11253,]  217 #> [11254,]  217 #> [11255,]  217 #> [11256,]  218 #> [11257,]  217 #> [11258,]  217 #> [11259,]  217 #> [11260,]  218 #> [11261,]  218 #> [11262,]  217 #> [11263,]  217 #> [11264,]  218 #> [11265,]  218 #> [11266,]  217 #> [11267,]  217 #> [11268,]  217 #> [11269,]  217 #> [11270,]  218 #> [11271,]  218 #> [11272,]  217 #> [11273,]  218 #> [11274,]  217 #> [11275,]  217 #> [11276,]  217 #> [11277,]  217 #> [11278,]  218 #> [11279,]  217 #> [11280,]  217 #> [11281,]  217 #> [11282,]  217 #> [11283,]  217 #> [11284,]  218 #> [11285,]  217 #> [11286,]  217 #> [11287,]  217 #> [11288,]  217 #> [11289,]  217 #> [11290,]  217 #> [11291,]  217 #> [11292,]  217 #> [11293,]  218 #> [11294,]  217 #> [11295,]  217 #> [11296,]  217 #> [11297,]  218 #> [11298,]  218 #> [11299,]  217 #> [11300,]  218 #> [11301,]  220 #> [11302,]  219 #> [11303,]  219 #> [11304,]  219 #> [11305,]  219 #> [11306,]  220 #> [11307,]  219 #> [11308,]  219 #> [11309,]  219 #> [11310,]  219 #> [11311,]  219 #> [11312,]  219 #> [11313,]  220 #> [11314,]  220 #> [11315,]  220 #> [11316,]  220 #> [11317,]  220 #> [11318,]  219 #> [11319,]  219 #> [11320,]  219 #> [11321,]  220 #> [11322,]  219 #> [11323,]  219 #> [11324,]  219 #> [11325,]  219 #> [11326,]  219 #> [11327,]  219 #> [11328,]  219 #> [11329,]  220 #> [11330,]  219 #> [11331,]  219 #> [11332,]  219 #> [11333,]  220 #> [11334,]  219 #> [11335,]  219 #> [11336,]  219 #> [11337,]  219 #> [11338,]  219 #> [11339,]  219 #> [11340,]  219 #> [11341,]  220 #> [11342,]  219 #> [11343,]  219 #> [11344,]  220 #> [11345,]  219 #> [11346,]  219 #> [11347,]  219 #> [11348,]  219 #> [11349,]  219 #> [11350,]  220 #> [11351,]  219 #> [11352,]  219 #> [11353,]  219 #> [11354,]  219 #> [11355,]  219 #> [11356,]  219 #> [11357,]  219 #> [11358,]  219 #> [11359,]  220 #> [11360,]  219 #> [11361,]  220 #> [11362,]  219 #> [11363,]  219 #> [11364,]  219 #> [11365,]  219 #> [11366,]  219 #> [11367,]  219 #> [11368,]  220 #> [11369,]  219 #> [11370,]  220 #> [11371,]  219 #> [11372,]  219 #> [11373,]  220 #> [11374,]  219 #> [11375,]  219 #> [11376,]  220 #> [11377,]  219 #> [11378,]  219 #> [11379,]  219 #> [11380,]  219 #> [11381,]  220 #> [11382,]  219 #> [11383,]  220 #> [11384,]  219 #> [11385,]  219 #> [11386,]  220 #> [11387,]  219 #> [11388,]  219 #> [11389,]  219 #> [11390,]  219 #> [11391,]  219 #> [11392,]  219 #> [11393,]  220 #> [11394,]  219 #> [11395,]  219 #> [11396,]  220 #> [11397,]  219 #> [11398,]  219 #> [11399,]  220 #> [11400,]  219 #> [11401,]  222 #> [11402,]  221 #> [11403,]  221 #> [11404,]  221 #> [11405,]  221 #> [11406,]  221 #> [11407,]  221 #> [11408,]  221 #> [11409,]  222 #> [11410,]  221 #> [11411,]  221 #> [11412,]  221 #> [11413,]  222 #> [11414,]  221 #> [11415,]  221 #> [11416,]  221 #> [11417,]  222 #> [11418,]  222 #> [11419,]  221 #> [11420,]  222 #> [11421,]  221 #> [11422,]  221 #> [11423,]  221 #> [11424,]  221 #> [11425,]  221 #> [11426,]  221 #> [11427,]  222 #> [11428,]  221 #> [11429,]  221 #> [11430,]  221 #> [11431,]  221 #> [11432,]  221 #> [11433,]  222 #> [11434,]  221 #> [11435,]  221 #> [11436,]  222 #> [11437,]  221 #> [11438,]  222 #> [11439,]  221 #> [11440,]  221 #> [11441,]  221 #> [11442,]  222 #> [11443,]  221 #> [11444,]  221 #> [11445,]  221 #> [11446,]  221 #> [11447,]  221 #> [11448,]  221 #> [11449,]  221 #> [11450,]  221 #> [11451,]  222 #> [11452,]  221 #> [11453,]  222 #> [11454,]  222 #> [11455,]  221 #> [11456,]  222 #> [11457,]  221 #> [11458,]  221 #> [11459,]  221 #> [11460,]  221 #> [11461,]  221 #> [11462,]  222 #> [11463,]  221 #> [11464,]  221 #> [11465,]  222 #> [11466,]  222 #> [11467,]  221 #> [11468,]  221 #> [11469,]  221 #> [11470,]  221 #> [11471,]  221 #> [11472,]  221 #> [11473,]  221 #> [11474,]  221 #> [11475,]  221 #> [11476,]  221 #> [11477,]  222 #> [11478,]  221 #> [11479,]  222 #> [11480,]  221 #> [11481,]  221 #> [11482,]  222 #> [11483,]  222 #> [11484,]  222 #> [11485,]  222 #> [11486,]  221 #> [11487,]  222 #> [11488,]  221 #> [11489,]  221 #> [11490,]  221 #> [11491,]  222 #> [11492,]  221 #> [11493,]  222 #> [11494,]  222 #> [11495,]  221 #> [11496,]  221 #> [11497,]  221 #> [11498,]  221 #> [11499,]  221 #> [11500,]  221 #> [11501,]  223 #> [11502,]  223 #> [11503,]  223 #> [11504,]  224 #> [11505,]  223 #> [11506,]  223 #> [11507,]  223 #> [11508,]  223 #> [11509,]  223 #> [11510,]  224 #> [11511,]  223 #> [11512,]  223 #> [11513,]  223 #> [11514,]  223 #> [11515,]  224 #> [11516,]  224 #> [11517,]  223 #> [11518,]  224 #> [11519,]  223 #> [11520,]  223 #> [11521,]  224 #> [11522,]  223 #> [11523,]  224 #> [11524,]  223 #> [11525,]  224 #> [11526,]  223 #> [11527,]  224 #> [11528,]  223 #> [11529,]  223 #> [11530,]  223 #> [11531,]  223 #> [11532,]  223 #> [11533,]  223 #> [11534,]  223 #> [11535,]  223 #> [11536,]  223 #> [11537,]  223 #> [11538,]  223 #> [11539,]  224 #> [11540,]  223 #> [11541,]  223 #> [11542,]  223 #> [11543,]  224 #> [11544,]  223 #> [11545,]  224 #> [11546,]  223 #> [11547,]  223 #> [11548,]  223 #> [11549,]  223 #> [11550,]  223 #> [11551,]  223 #> [11552,]  223 #> [11553,]  224 #> [11554,]  223 #> [11555,]  223 #> [11556,]  223 #> [11557,]  223 #> [11558,]  223 #> [11559,]  223 #> [11560,]  223 #> [11561,]  224 #> [11562,]  223 #> [11563,]  223 #> [11564,]  223 #> [11565,]  223 #> [11566,]  223 #> [11567,]  223 #> [11568,]  223 #> [11569,]  223 #> [11570,]  223 #> [11571,]  223 #> [11572,]  224 #> [11573,]  224 #> [11574,]  224 #> [11575,]  224 #> [11576,]  224 #> [11577,]  224 #> [11578,]  223 #> [11579,]  223 #> [11580,]  223 #> [11581,]  223 #> [11582,]  223 #> [11583,]  223 #> [11584,]  224 #> [11585,]  223 #> [11586,]  223 #> [11587,]  223 #> [11588,]  223 #> [11589,]  223 #> [11590,]  223 #> [11591,]  223 #> [11592,]  223 #> [11593,]  223 #> [11594,]  224 #> [11595,]  224 #> [11596,]  223 #> [11597,]  223 #> [11598,]  223 #> [11599,]  223 #> [11600,]  224 #> [11601,]  225 #> [11602,]  226 #> [11603,]  225 #> [11604,]  225 #> [11605,]  226 #> [11606,]  225 #> [11607,]  226 #> [11608,]  225 #> [11609,]  226 #> [11610,]  226 #> [11611,]  225 #> [11612,]  226 #> [11613,]  226 #> [11614,]  225 #> [11615,]  226 #> [11616,]  225 #> [11617,]  226 #> [11618,]  226 #> [11619,]  225 #> [11620,]  226 #> [11621,]  226 #> [11622,]  226 #> [11623,]  226 #> [11624,]  226 #> [11625,]  226 #> [11626,]  225 #> [11627,]  226 #> [11628,]  225 #> [11629,]  226 #> [11630,]  226 #> [11631,]  226 #> [11632,]  226 #> [11633,]  226 #> [11634,]  225 #> [11635,]  225 #> [11636,]  226 #> [11637,]  225 #> [11638,]  225 #> [11639,]  226 #> [11640,]  226 #> [11641,]  226 #> [11642,]  225 #> [11643,]  226 #> [11644,]  226 #> [11645,]  225 #> [11646,]  225 #> [11647,]  226 #> [11648,]  226 #> [11649,]  225 #> [11650,]  226 #> [11651,]  226 #> [11652,]  225 #> [11653,]  226 #> [11654,]  226 #> [11655,]  225 #> [11656,]  225 #> [11657,]  225 #> [11658,]  226 #> [11659,]  225 #> [11660,]  226 #> [11661,]  226 #> [11662,]  225 #> [11663,]  226 #> [11664,]  225 #> [11665,]  225 #> [11666,]  226 #> [11667,]  226 #> [11668,]  225 #> [11669,]  225 #> [11670,]  226 #> [11671,]  226 #> [11672,]  225 #> [11673,]  225 #> [11674,]  226 #> [11675,]  226 #> [11676,]  226 #> [11677,]  225 #> [11678,]  226 #> [11679,]  225 #> [11680,]  226 #> [11681,]  226 #> [11682,]  225 #> [11683,]  226 #> [11684,]  226 #> [11685,]  226 #> [11686,]  226 #> [11687,]  226 #> [11688,]  226 #> [11689,]  225 #> [11690,]  226 #> [11691,]  225 #> [11692,]  226 #> [11693,]  226 #> [11694,]  225 #> [11695,]  226 #> [11696,]  225 #> [11697,]  225 #> [11698,]  226 #> [11699,]  226 #> [11700,]  225 #> [11701,]  227 #> [11702,]  228 #> [11703,]  227 #> [11704,]  227 #> [11705,]  227 #> [11706,]  227 #> [11707,]  227 #> [11708,]  228 #> [11709,]  227 #> [11710,]  227 #> [11711,]  227 #> [11712,]  227 #> [11713,]  228 #> [11714,]  227 #> [11715,]  228 #> [11716,]  228 #> [11717,]  227 #> [11718,]  227 #> [11719,]  228 #> [11720,]  228 #> [11721,]  227 #> [11722,]  228 #> [11723,]  227 #> [11724,]  227 #> [11725,]  227 #> [11726,]  228 #> [11727,]  228 #> [11728,]  227 #> [11729,]  228 #> [11730,]  228 #> [11731,]  227 #> [11732,]  227 #> [11733,]  228 #> [11734,]  227 #> [11735,]  227 #> [11736,]  228 #> [11737,]  228 #> [11738,]  228 #> [11739,]  227 #> [11740,]  227 #> [11741,]  228 #> [11742,]  227 #> [11743,]  228 #> [11744,]  228 #> [11745,]  227 #> [11746,]  228 #> [11747,]  227 #> [11748,]  227 #> [11749,]  227 #> [11750,]  228 #> [11751,]  228 #> [11752,]  227 #> [11753,]  228 #> [11754,]  227 #> [11755,]  228 #> [11756,]  228 #> [11757,]  227 #> [11758,]  228 #> [11759,]  228 #> [11760,]  228 #> [11761,]  228 #> [11762,]  227 #> [11763,]  228 #> [11764,]  228 #> [11765,]  227 #> [11766,]  228 #> [11767,]  227 #> [11768,]  228 #> [11769,]  228 #> [11770,]  227 #> [11771,]  228 #> [11772,]  227 #> [11773,]  227 #> [11774,]  227 #> [11775,]  228 #> [11776,]  227 #> [11777,]  228 #> [11778,]  228 #> [11779,]  227 #> [11780,]  228 #> [11781,]  228 #> [11782,]  227 #> [11783,]  228 #> [11784,]  228 #> [11785,]  228 #> [11786,]  227 #> [11787,]  228 #> [11788,]  227 #> [11789,]  227 #> [11790,]  228 #> [11791,]  227 #> [11792,]  227 #> [11793,]  228 #> [11794,]  227 #> [11795,]  228 #> [11796,]  228 #> [11797,]  228 #> [11798,]  227 #> [11799,]  227 #> [11800,]  228 #> [11801,]  230 #> [11802,]  230 #> [11803,]  229 #> [11804,]  229 #> [11805,]  229 #> [11806,]  230 #> [11807,]  230 #> [11808,]  229 #> [11809,]  229 #> [11810,]  229 #> [11811,]  230 #> [11812,]  229 #> [11813,]  230 #> [11814,]  230 #> [11815,]  230 #> [11816,]  230 #> [11817,]  230 #> [11818,]  229 #> [11819,]  230 #> [11820,]  229 #> [11821,]  230 #> [11822,]  230 #> [11823,]  229 #> [11824,]  229 #> [11825,]  229 #> [11826,]  230 #> [11827,]  230 #> [11828,]  229 #> [11829,]  230 #> [11830,]  229 #> [11831,]  229 #> [11832,]  229 #> [11833,]  230 #> [11834,]  229 #> [11835,]  230 #> [11836,]  229 #> [11837,]  230 #> [11838,]  229 #> [11839,]  229 #> [11840,]  230 #> [11841,]  230 #> [11842,]  229 #> [11843,]  229 #> [11844,]  230 #> [11845,]  229 #> [11846,]  229 #> [11847,]  230 #> [11848,]  229 #> [11849,]  229 #> [11850,]  230 #> [11851,]  229 #> [11852,]  230 #> [11853,]  229 #> [11854,]  229 #> [11855,]  230 #> [11856,]  229 #> [11857,]  229 #> [11858,]  230 #> [11859,]  230 #> [11860,]  229 #> [11861,]  230 #> [11862,]  229 #> [11863,]  229 #> [11864,]  229 #> [11865,]  229 #> [11866,]  229 #> [11867,]  229 #> [11868,]  230 #> [11869,]  230 #> [11870,]  230 #> [11871,]  230 #> [11872,]  229 #> [11873,]  230 #> [11874,]  230 #> [11875,]  230 #> [11876,]  230 #> [11877,]  230 #> [11878,]  229 #> [11879,]  230 #> [11880,]  229 #> [11881,]  230 #> [11882,]  229 #> [11883,]  230 #> [11884,]  230 #> [11885,]  229 #> [11886,]  230 #> [11887,]  230 #> [11888,]  229 #> [11889,]  229 #> [11890,]  230 #> [11891,]  229 #> [11892,]  230 #> [11893,]  230 #> [11894,]  230 #> [11895,]  229 #> [11896,]  230 #> [11897,]  230 #> [11898,]  230 #> [11899,]  230 #> [11900,]  230 #> [11901,]  232 #> [11902,]  231 #> [11903,]  232 #> [11904,]  232 #> [11905,]  232 #> [11906,]  231 #> [11907,]  232 #> [11908,]  232 #> [11909,]  232 #> [11910,]  232 #> [11911,]  231 #> [11912,]  231 #> [11913,]  232 #> [11914,]  232 #> [11915,]  231 #> [11916,]  232 #> [11917,]  231 #> [11918,]  231 #> [11919,]  231 #> [11920,]  232 #> [11921,]  231 #> [11922,]  232 #> [11923,]  231 #> [11924,]  232 #> [11925,]  232 #> [11926,]  231 #> [11927,]  232 #> [11928,]  232 #> [11929,]  231 #> [11930,]  231 #> [11931,]  231 #> [11932,]  231 #> [11933,]  232 #> [11934,]  231 #> [11935,]  231 #> [11936,]  232 #> [11937,]  231 #> [11938,]  231 #> [11939,]  232 #> [11940,]  231 #> [11941,]  232 #> [11942,]  231 #> [11943,]  231 #> [11944,]  231 #> [11945,]  232 #> [11946,]  231 #> [11947,]  231 #> [11948,]  231 #> [11949,]  232 #> [11950,]  232 #> [11951,]  231 #> [11952,]  232 #> [11953,]  232 #> [11954,]  232 #> [11955,]  232 #> [11956,]  231 #> [11957,]  232 #> [11958,]  232 #> [11959,]  232 #> [11960,]  231 #> [11961,]  231 #> [11962,]  231 #> [11963,]  231 #> [11964,]  231 #> [11965,]  231 #> [11966,]  231 #> [11967,]  232 #> [11968,]  231 #> [11969,]  231 #> [11970,]  231 #> [11971,]  232 #> [11972,]  232 #> [11973,]  232 #> [11974,]  232 #> [11975,]  231 #> [11976,]  232 #> [11977,]  232 #> [11978,]  231 #> [11979,]  231 #> [11980,]  232 #> [11981,]  231 #> [11982,]  231 #> [11983,]  231 #> [11984,]  232 #> [11985,]  232 #> [11986,]  232 #> [11987,]  232 #> [11988,]  232 #> [11989,]  231 #> [11990,]  232 #> [11991,]  232 #> [11992,]  231 #> [11993,]  231 #> [11994,]  231 #> [11995,]  231 #> [11996,]  231 #> [11997,]  231 #> [11998,]  231 #> [11999,]  231 #> [12000,]  231 #> [12001,]  234 #> [12002,]  234 #> [12003,]  234 #> [12004,]  234 #> [12005,]  234 #> [12006,]  233 #> [12007,]  234 #> [12008,]  234 #> [12009,]  234 #> [12010,]  234 #> [12011,]  234 #> [12012,]  234 #> [12013,]  234 #> [12014,]  234 #> [12015,]  234 #> [12016,]  234 #> [12017,]  234 #> [12018,]  234 #> [12019,]  234 #> [12020,]  233 #> [12021,]  233 #> [12022,]  234 #> [12023,]  234 #> [12024,]  234 #> [12025,]  233 #> [12026,]  234 #> [12027,]  234 #> [12028,]  234 #> [12029,]  234 #> [12030,]  234 #> [12031,]  234 #> [12032,]  234 #> [12033,]  234 #> [12034,]  234 #> [12035,]  233 #> [12036,]  234 #> [12037,]  234 #> [12038,]  234 #> [12039,]  234 #> [12040,]  234 #> [12041,]  234 #> [12042,]  233 #> [12043,]  234 #> [12044,]  233 #> [12045,]  234 #> [12046,]  234 #> [12047,]  234 #> [12048,]  234 #> [12049,]  234 #> [12050,]  234 #> [12051,]  234 #> [12052,]  234 #> [12053,]  233 #> [12054,]  234 #> [12055,]  234 #> [12056,]  233 #> [12057,]  234 #> [12058,]  234 #> [12059,]  234 #> [12060,]  234 #> [12061,]  234 #> [12062,]  234 #> [12063,]  234 #> [12064,]  234 #> [12065,]  233 #> [12066,]  234 #> [12067,]  234 #> [12068,]  234 #> [12069,]  234 #> [12070,]  234 #> [12071,]  234 #> [12072,]  234 #> [12073,]  233 #> [12074,]  233 #> [12075,]  234 #> [12076,]  234 #> [12077,]  234 #> [12078,]  234 #> [12079,]  234 #> [12080,]  233 #> [12081,]  234 #> [12082,]  233 #> [12083,]  234 #> [12084,]  233 #> [12085,]  233 #> [12086,]  233 #> [12087,]  234 #> [12088,]  234 #> [12089,]  233 #> [12090,]  234 #> [12091,]  234 #> [12092,]  234 #> [12093,]  234 #> [12094,]  233 #> [12095,]  234 #> [12096,]  234 #> [12097,]  234 #> [12098,]  234 #> [12099,]  233 #> [12100,]  234 #> [12101,]  236 #> [12102,]  236 #> [12103,]  236 #> [12104,]  235 #> [12105,]  236 #> [12106,]  236 #> [12107,]  236 #> [12108,]  235 #> [12109,]  235 #> [12110,]  236 #> [12111,]  236 #> [12112,]  236 #> [12113,]  236 #> [12114,]  236 #> [12115,]  236 #> [12116,]  236 #> [12117,]  235 #> [12118,]  236 #> [12119,]  236 #> [12120,]  236 #> [12121,]  236 #> [12122,]  236 #> [12123,]  236 #> [12124,]  236 #> [12125,]  236 #> [12126,]  236 #> [12127,]  235 #> [12128,]  236 #> [12129,]  236 #> [12130,]  236 #> [12131,]  236 #> [12132,]  236 #> [12133,]  236 #> [12134,]  236 #> [12135,]  236 #> [12136,]  236 #> [12137,]  236 #> [12138,]  236 #> [12139,]  236 #> [12140,]  236 #> [12141,]  236 #> [12142,]  236 #> [12143,]  236 #> [12144,]  235 #> [12145,]  236 #> [12146,]  236 #> [12147,]  236 #> [12148,]  236 #> [12149,]  236 #> [12150,]  236 #> [12151,]  236 #> [12152,]  235 #> [12153,]  236 #> [12154,]  236 #> [12155,]  236 #> [12156,]  236 #> [12157,]  236 #> [12158,]  236 #> [12159,]  236 #> [12160,]  236 #> [12161,]  236 #> [12162,]  236 #> [12163,]  236 #> [12164,]  236 #> [12165,]  236 #> [12166,]  236 #> [12167,]  236 #> [12168,]  236 #> [12169,]  236 #> [12170,]  236 #> [12171,]  236 #> [12172,]  236 #> [12173,]  236 #> [12174,]  236 #> [12175,]  236 #> [12176,]  236 #> [12177,]  236 #> [12178,]  236 #> [12179,]  236 #> [12180,]  236 #> [12181,]  235 #> [12182,]  235 #> [12183,]  236 #> [12184,]  236 #> [12185,]  236 #> [12186,]  236 #> [12187,]  236 #> [12188,]  236 #> [12189,]  236 #> [12190,]  235 #> [12191,]  236 #> [12192,]  235 #> [12193,]  236 #> [12194,]  236 #> [12195,]  235 #> [12196,]  236 #> [12197,]  236 #> [12198,]  236 #> [12199,]  235 #> [12200,]  236 #> [12201,]  237 #> [12202,]  237 #> [12203,]  238 #> [12204,]  237 #> [12205,]  237 #> [12206,]  238 #> [12207,]  237 #> [12208,]  237 #> [12209,]  237 #> [12210,]  237 #> [12211,]  237 #> [12212,]  237 #> [12213,]  237 #> [12214,]  237 #> [12215,]  237 #> [12216,]  237 #> [12217,]  237 #> [12218,]  237 #> [12219,]  237 #> [12220,]  237 #> [12221,]  237 #> [12222,]  237 #> [12223,]  237 #> [12224,]  237 #> [12225,]  237 #> [12226,]  237 #> [12227,]  237 #> [12228,]  237 #> [12229,]  237 #> [12230,]  237 #> [12231,]  237 #> [12232,]  237 #> [12233,]  237 #> [12234,]  238 #> [12235,]  237 #> [12236,]  237 #> [12237,]  237 #> [12238,]  237 #> [12239,]  237 #> [12240,]  237 #> [12241,]  237 #> [12242,]  237 #> [12243,]  237 #> [12244,]  237 #> [12245,]  237 #> [12246,]  237 #> [12247,]  237 #> [12248,]  237 #> [12249,]  237 #> [12250,]  237 #> [12251,]  237 #> [12252,]  237 #> [12253,]  237 #> [12254,]  237 #> [12255,]  237 #> [12256,]  237 #> [12257,]  237 #> [12258,]  237 #> [12259,]  237 #> [12260,]  238 #> [12261,]  237 #> [12262,]  237 #> [12263,]  237 #> [12264,]  237 #> [12265,]  238 #> [12266,]  237 #> [12267,]  237 #> [12268,]  237 #> [12269,]  237 #> [12270,]  237 #> [12271,]  237 #> [12272,]  237 #> [12273,]  237 #> [12274,]  237 #> [12275,]  237 #> [12276,]  237 #> [12277,]  237 #> [12278,]  237 #> [12279,]  237 #> [12280,]  237 #> [12281,]  237 #> [12282,]  237 #> [12283,]  237 #> [12284,]  237 #> [12285,]  237 #> [12286,]  237 #> [12287,]  237 #> [12288,]  237 #> [12289,]  237 #> [12290,]  237 #> [12291,]  237 #> [12292,]  237 #> [12293,]  238 #> [12294,]  237 #> [12295,]  237 #> [12296,]  237 #> [12297,]  237 #> [12298,]  237 #> [12299,]  237 #> [12300,]  237 #> [12301,]  240 #> [12302,]  240 #> [12303,]  239 #> [12304,]  240 #> [12305,]  240 #> [12306,]  240 #> [12307,]  239 #> [12308,]  240 #> [12309,]  240 #> [12310,]  240 #> [12311,]  240 #> [12312,]  239 #> [12313,]  240 #> [12314,]  240 #> [12315,]  240 #> [12316,]  240 #> [12317,]  240 #> [12318,]  240 #> [12319,]  240 #> [12320,]  240 #> [12321,]  240 #> [12322,]  240 #> [12323,]  240 #> [12324,]  240 #> [12325,]  240 #> [12326,]  240 #> [12327,]  240 #> [12328,]  240 #> [12329,]  240 #> [12330,]  240 #> [12331,]  239 #> [12332,]  240 #> [12333,]  240 #> [12334,]  240 #> [12335,]  240 #> [12336,]  240 #> [12337,]  240 #> [12338,]  240 #> [12339,]  240 #> [12340,]  240 #> [12341,]  240 #> [12342,]  240 #> [12343,]  240 #> [12344,]  240 #> [12345,]  240 #> [12346,]  240 #> [12347,]  240 #> [12348,]  240 #> [12349,]  240 #> [12350,]  240 #> [12351,]  240 #> [12352,]  239 #> [12353,]  240 #> [12354,]  240 #> [12355,]  240 #> [12356,]  240 #> [12357,]  240 #> [12358,]  240 #> [12359,]  239 #> [12360,]  239 #> [12361,]  240 #> [12362,]  240 #> [12363,]  240 #> [12364,]  240 #> [12365,]  240 #> [12366,]  240 #> [12367,]  240 #> [12368,]  240 #> [12369,]  240 #> [12370,]  240 #> [12371,]  240 #> [12372,]  240 #> [12373,]  240 #> [12374,]  240 #> [12375,]  240 #> [12376,]  240 #> [12377,]  240 #> [12378,]  240 #> [12379,]  240 #> [12380,]  240 #> [12381,]  240 #> [12382,]  240 #> [12383,]  240 #> [12384,]  240 #> [12385,]  240 #> [12386,]  240 #> [12387,]  240 #> [12388,]  240 #> [12389,]  240 #> [12390,]  240 #> [12391,]  240 #> [12392,]  240 #> [12393,]  240 #> [12394,]  240 #> [12395,]  240 #> [12396,]  240 #> [12397,]  239 #> [12398,]  240 #> [12399,]  240 #> [12400,]  240 #> [12401,]  241 #> [12402,]  242 #> [12403,]  241 #> [12404,]  241 #> [12405,]  241 #> [12406,]  241 #> [12407,]  241 #> [12408,]  241 #> [12409,]  242 #> [12410,]  242 #> [12411,]  241 #> [12412,]  242 #> [12413,]  241 #> [12414,]  241 #> [12415,]  241 #> [12416,]  241 #> [12417,]  242 #> [12418,]  241 #> [12419,]  241 #> [12420,]  241 #> [12421,]  242 #> [12422,]  241 #> [12423,]  241 #> [12424,]  241 #> [12425,]  241 #> [12426,]  241 #> [12427,]  241 #> [12428,]  241 #> [12429,]  242 #> [12430,]  241 #> [12431,]  241 #> [12432,]  241 #> [12433,]  242 #> [12434,]  241 #> [12435,]  241 #> [12436,]  241 #> [12437,]  241 #> [12438,]  241 #> [12439,]  241 #> [12440,]  241 #> [12441,]  241 #> [12442,]  241 #> [12443,]  241 #> [12444,]  241 #> [12445,]  241 #> [12446,]  241 #> [12447,]  241 #> [12448,]  241 #> [12449,]  241 #> [12450,]  241 #> [12451,]  241 #> [12452,]  241 #> [12453,]  242 #> [12454,]  241 #> [12455,]  241 #> [12456,]  241 #> [12457,]  241 #> [12458,]  241 #> [12459,]  241 #> [12460,]  242 #> [12461,]  241 #> [12462,]  241 #> [12463,]  242 #> [12464,]  241 #> [12465,]  241 #> [12466,]  241 #> [12467,]  241 #> [12468,]  241 #> [12469,]  241 #> [12470,]  242 #> [12471,]  241 #> [12472,]  241 #> [12473,]  241 #> [12474,]  241 #> [12475,]  241 #> [12476,]  241 #> [12477,]  241 #> [12478,]  241 #> [12479,]  241 #> [12480,]  242 #> [12481,]  242 #> [12482,]  241 #> [12483,]  241 #> [12484,]  241 #> [12485,]  241 #> [12486,]  242 #> [12487,]  241 #> [12488,]  241 #> [12489,]  241 #> [12490,]  241 #> [12491,]  241 #> [12492,]  241 #> [12493,]  241 #> [12494,]  241 #> [12495,]  241 #> [12496,]  241 #> [12497,]  241 #> [12498,]  241 #> [12499,]  241 #> [12500,]  241 #> [12501,]  243 #> [12502,]  243 #> [12503,]  243 #> [12504,]  244 #> [12505,]  243 #> [12506,]  243 #> [12507,]  243 #> [12508,]  243 #> [12509,]  243 #> [12510,]  243 #> [12511,]  243 #> [12512,]  243 #> [12513,]  243 #> [12514,]  244 #> [12515,]  243 #> [12516,]  243 #> [12517,]  243 #> [12518,]  243 #> [12519,]  244 #> [12520,]  243 #> [12521,]  243 #> [12522,]  243 #> [12523,]  243 #> [12524,]  243 #> [12525,]  243 #> [12526,]  243 #> [12527,]  244 #> [12528,]  243 #> [12529,]  243 #> [12530,]  243 #> [12531,]  243 #> [12532,]  243 #> [12533,]  243 #> [12534,]  243 #> [12535,]  243 #> [12536,]  243 #> [12537,]  243 #> [12538,]  243 #> [12539,]  243 #> [12540,]  243 #> [12541,]  244 #> [12542,]  243 #> [12543,]  243 #> [12544,]  243 #> [12545,]  243 #> [12546,]  243 #> [12547,]  243 #> [12548,]  244 #> [12549,]  243 #> [12550,]  243 #> [12551,]  243 #> [12552,]  243 #> [12553,]  243 #> [12554,]  243 #> [12555,]  243 #> [12556,]  243 #> [12557,]  243 #> [12558,]  243 #> [12559,]  243 #> [12560,]  243 #> [12561,]  244 #> [12562,]  243 #> [12563,]  243 #> [12564,]  243 #> [12565,]  243 #> [12566,]  243 #> [12567,]  243 #> [12568,]  243 #> [12569,]  244 #> [12570,]  243 #> [12571,]  243 #> [12572,]  243 #> [12573,]  243 #> [12574,]  243 #> [12575,]  243 #> [12576,]  243 #> [12577,]  243 #> [12578,]  243 #> [12579,]  243 #> [12580,]  243 #> [12581,]  243 #> [12582,]  244 #> [12583,]  243 #> [12584,]  243 #> [12585,]  243 #> [12586,]  243 #> [12587,]  243 #> [12588,]  243 #> [12589,]  243 #> [12590,]  243 #> [12591,]  243 #> [12592,]  244 #> [12593,]  244 #> [12594,]  243 #> [12595,]  243 #> [12596,]  244 #> [12597,]  244 #> [12598,]  243 #> [12599,]  243 #> [12600,]  243 #> [12601,]  246 #> [12602,]  246 #> [12603,]  245 #> [12604,]  245 #> [12605,]  246 #> [12606,]  246 #> [12607,]  245 #> [12608,]  245 #> [12609,]  246 #> [12610,]  245 #> [12611,]  246 #> [12612,]  245 #> [12613,]  246 #> [12614,]  245 #> [12615,]  246 #> [12616,]  245 #> [12617,]  246 #> [12618,]  246 #> [12619,]  246 #> [12620,]  246 #> [12621,]  246 #> [12622,]  246 #> [12623,]  245 #> [12624,]  246 #> [12625,]  245 #> [12626,]  246 #> [12627,]  246 #> [12628,]  246 #> [12629,]  246 #> [12630,]  246 #> [12631,]  245 #> [12632,]  245 #> [12633,]  246 #> [12634,]  246 #> [12635,]  246 #> [12636,]  246 #> [12637,]  245 #> [12638,]  246 #> [12639,]  246 #> [12640,]  245 #> [12641,]  246 #> [12642,]  246 #> [12643,]  246 #> [12644,]  245 #> [12645,]  246 #> [12646,]  245 #> [12647,]  245 #> [12648,]  246 #> [12649,]  246 #> [12650,]  246 #> [12651,]  246 #> [12652,]  245 #> [12653,]  246 #> [12654,]  246 #> [12655,]  245 #> [12656,]  246 #> [12657,]  245 #> [12658,]  246 #> [12659,]  245 #> [12660,]  245 #> [12661,]  246 #> [12662,]  246 #> [12663,]  246 #> [12664,]  246 #> [12665,]  246 #> [12666,]  246 #> [12667,]  245 #> [12668,]  245 #> [12669,]  246 #> [12670,]  246 #> [12671,]  246 #> [12672,]  245 #> [12673,]  246 #> [12674,]  245 #> [12675,]  245 #> [12676,]  245 #> [12677,]  246 #> [12678,]  245 #> [12679,]  246 #> [12680,]  245 #> [12681,]  246 #> [12682,]  246 #> [12683,]  246 #> [12684,]  246 #> [12685,]  246 #> [12686,]  245 #> [12687,]  246 #> [12688,]  246 #> [12689,]  246 #> [12690,]  246 #> [12691,]  246 #> [12692,]  245 #> [12693,]  246 #> [12694,]  246 #> [12695,]  245 #> [12696,]  245 #> [12697,]  245 #> [12698,]  245 #> [12699,]  246 #> [12700,]  246 #> [12701,]  248 #> [12702,]  247 #> [12703,]  248 #> [12704,]  248 #> [12705,]  248 #> [12706,]  247 #> [12707,]  248 #> [12708,]  248 #> [12709,]  248 #> [12710,]  248 #> [12711,]  247 #> [12712,]  247 #> [12713,]  248 #> [12714,]  248 #> [12715,]  247 #> [12716,]  248 #> [12717,]  247 #> [12718,]  248 #> [12719,]  247 #> [12720,]  248 #> [12721,]  248 #> [12722,]  248 #> [12723,]  247 #> [12724,]  248 #> [12725,]  248 #> [12726,]  247 #> [12727,]  248 #> [12728,]  248 #> [12729,]  247 #> [12730,]  247 #> [12731,]  247 #> [12732,]  247 #> [12733,]  248 #> [12734,]  247 #> [12735,]  247 #> [12736,]  248 #> [12737,]  247 #> [12738,]  248 #> [12739,]  248 #> [12740,]  248 #> [12741,]  248 #> [12742,]  247 #> [12743,]  247 #> [12744,]  247 #> [12745,]  248 #> [12746,]  247 #> [12747,]  247 #> [12748,]  247 #> [12749,]  248 #> [12750,]  248 #> [12751,]  247 #> [12752,]  248 #> [12753,]  248 #> [12754,]  248 #> [12755,]  248 #> [12756,]  247 #> [12757,]  248 #> [12758,]  248 #> [12759,]  248 #> [12760,]  247 #> [12761,]  247 #> [12762,]  247 #> [12763,]  247 #> [12764,]  247 #> [12765,]  247 #> [12766,]  247 #> [12767,]  248 #> [12768,]  247 #> [12769,]  247 #> [12770,]  247 #> [12771,]  248 #> [12772,]  248 #> [12773,]  248 #> [12774,]  248 #> [12775,]  247 #> [12776,]  248 #> [12777,]  248 #> [12778,]  247 #> [12779,]  247 #> [12780,]  248 #> [12781,]  247 #> [12782,]  247 #> [12783,]  248 #> [12784,]  248 #> [12785,]  248 #> [12786,]  248 #> [12787,]  248 #> [12788,]  248 #> [12789,]  248 #> [12790,]  248 #> [12791,]  248 #> [12792,]  247 #> [12793,]  247 #> [12794,]  247 #> [12795,]  247 #> [12796,]  247 #> [12797,]  247 #> [12798,]  248 #> [12799,]  248 #> [12800,]  247 #> [12801,]  249 #> [12802,]  250 #> [12803,]  250 #> [12804,]  249 #> [12805,]  250 #> [12806,]  250 #> [12807,]  250 #> [12808,]  249 #> [12809,]  249 #> [12810,]  250 #> [12811,]  249 #> [12812,]  250 #> [12813,]  249 #> [12814,]  249 #> [12815,]  249 #> [12816,]  249 #> [12817,]  249 #> [12818,]  250 #> [12819,]  250 #> [12820,]  250 #> [12821,]  249 #> [12822,]  249 #> [12823,]  250 #> [12824,]  250 #> [12825,]  250 #> [12826,]  250 #> [12827,]  249 #> [12828,]  250 #> [12829,]  250 #> [12830,]  249 #> [12831,]  250 #> [12832,]  250 #> [12833,]  250 #> [12834,]  250 #> [12835,]  249 #> [12836,]  250 #> [12837,]  249 #> [12838,]  250 #> [12839,]  250 #> [12840,]  250 #> [12841,]  249 #> [12842,]  250 #> [12843,]  249 #> [12844,]  249 #> [12845,]  249 #> [12846,]  249 #> [12847,]  250 #> [12848,]  250 #> [12849,]  249 #> [12850,]  250 #> [12851,]  250 #> [12852,]  249 #> [12853,]  250 #> [12854,]  249 #> [12855,]  249 #> [12856,]  250 #> [12857,]  250 #> [12858,]  249 #> [12859,]  250 #> [12860,]  250 #> [12861,]  250 #> [12862,]  249 #> [12863,]  250 #> [12864,]  250 #> [12865,]  250 #> [12866,]  249 #> [12867,]  249 #> [12868,]  249 #> [12869,]  249 #> [12870,]  250 #> [12871,]  250 #> [12872,]  250 #> [12873,]  250 #> [12874,]  249 #> [12875,]  250 #> [12876,]  250 #> [12877,]  250 #> [12878,]  250 #> [12879,]  249 #> [12880,]  249 #> [12881,]  249 #> [12882,]  249 #> [12883,]  249 #> [12884,]  250 #> [12885,]  249 #> [12886,]  250 #> [12887,]  249 #> [12888,]  249 #> [12889,]  249 #> [12890,]  249 #> [12891,]  249 #> [12892,]  249 #> [12893,]  250 #> [12894,]  250 #> [12895,]  249 #> [12896,]  249 #> [12897,]  250 #> [12898,]  250 #> [12899,]  249 #> [12900,]  250 #> [12901,]  252 #> [12902,]  251 #> [12903,]  251 #> [12904,]  252 #> [12905,]  251 #> [12906,]  251 #> [12907,]  252 #> [12908,]  251 #> [12909,]  252 #> [12910,]  252 #> [12911,]  251 #> [12912,]  251 #> [12913,]  252 #> [12914,]  252 #> [12915,]  251 #> [12916,]  252 #> [12917,]  251 #> [12918,]  251 #> [12919,]  251 #> [12920,]  252 #> [12921,]  251 #> [12922,]  252 #> [12923,]  251 #> [12924,]  252 #> [12925,]  252 #> [12926,]  251 #> [12927,]  251 #> [12928,]  252 #> [12929,]  251 #> [12930,]  251 #> [12931,]  251 #> [12932,]  251 #> [12933,]  251 #> [12934,]  251 #> [12935,]  251 #> [12936,]  252 #> [12937,]  251 #> [12938,]  251 #> [12939,]  252 #> [12940,]  251 #> [12941,]  251 #> [12942,]  251 #> [12943,]  251 #> [12944,]  251 #> [12945,]  252 #> [12946,]  251 #> [12947,]  251 #> [12948,]  251 #> [12949,]  252 #> [12950,]  252 #> [12951,]  251 #> [12952,]  252 #> [12953,]  252 #> [12954,]  252 #> [12955,]  252 #> [12956,]  251 #> [12957,]  252 #> [12958,]  252 #> [12959,]  252 #> [12960,]  251 #> [12961,]  251 #> [12962,]  251 #> [12963,]  251 #> [12964,]  251 #> [12965,]  251 #> [12966,]  251 #> [12967,]  252 #> [12968,]  251 #> [12969,]  251 #> [12970,]  251 #> [12971,]  251 #> [12972,]  252 #> [12973,]  252 #> [12974,]  251 #> [12975,]  251 #> [12976,]  252 #> [12977,]  251 #> [12978,]  251 #> [12979,]  251 #> [12980,]  251 #> [12981,]  251 #> [12982,]  251 #> [12983,]  251 #> [12984,]  251 #> [12985,]  252 #> [12986,]  252 #> [12987,]  252 #> [12988,]  251 #> [12989,]  251 #> [12990,]  252 #> [12991,]  252 #> [12992,]  251 #> [12993,]  251 #> [12994,]  251 #> [12995,]  251 #> [12996,]  251 #> [12997,]  251 #> [12998,]  251 #> [12999,]  251 #> [13000,]  251 #> [13001,]  254 #> [13002,]  254 #> [13003,]  253 #> [13004,]  254 #> [13005,]  253 #> [13006,]  254 #> [13007,]  253 #> [13008,]  253 #> [13009,]  254 #> [13010,]  254 #> [13011,]  254 #> [13012,]  254 #> [13013,]  253 #> [13014,]  254 #> [13015,]  254 #> [13016,]  253 #> [13017,]  253 #> [13018,]  254 #> [13019,]  254 #> [13020,]  253 #> [13021,]  254 #> [13022,]  253 #> [13023,]  254 #> [13024,]  253 #> [13025,]  253 #> [13026,]  254 #> [13027,]  254 #> [13028,]  254 #> [13029,]  253 #> [13030,]  254 #> [13031,]  254 #> [13032,]  254 #> [13033,]  254 #> [13034,]  254 #> [13035,]  254 #> [13036,]  254 #> [13037,]  254 #> [13038,]  254 #> [13039,]  253 #> [13040,]  253 #> [13041,]  254 #> [13042,]  254 #> [13043,]  253 #> [13044,]  253 #> [13045,]  253 #> [13046,]  253 #> [13047,]  253 #> [13048,]  254 #> [13049,]  253 #> [13050,]  253 #> [13051,]  253 #> [13052,]  254 #> [13053,]  253 #> [13054,]  253 #> [13055,]  253 #> [13056,]  253 #> [13057,]  254 #> [13058,]  254 #> [13059,]  253 #> [13060,]  254 #> [13061,]  254 #> [13062,]  254 #> [13063,]  253 #> [13064,]  254 #> [13065,]  253 #> [13066,]  253 #> [13067,]  254 #> [13068,]  254 #> [13069,]  254 #> [13070,]  253 #> [13071,]  253 #> [13072,]  253 #> [13073,]  254 #> [13074,]  254 #> [13075,]  254 #> [13076,]  253 #> [13077,]  253 #> [13078,]  253 #> [13079,]  253 #> [13080,]  254 #> [13081,]  253 #> [13082,]  254 #> [13083,]  253 #> [13084,]  253 #> [13085,]  254 #> [13086,]  253 #> [13087,]  254 #> [13088,]  254 #> [13089,]  253 #> [13090,]  253 #> [13091,]  254 #> [13092,]  254 #> [13093,]  254 #> [13094,]  253 #> [13095,]  254 #> [13096,]  254 #> [13097,]  254 #> [13098,]  253 #> [13099,]  254 #> [13100,]  253 #> [13101,]  256 #> [13102,]  256 #> [13103,]  255 #> [13104,]  255 #> [13105,]  255 #> [13106,]  256 #> [13107,]  256 #> [13108,]  255 #> [13109,]  255 #> [13110,]  255 #> [13111,]  256 #> [13112,]  255 #> [13113,]  256 #> [13114,]  256 #> [13115,]  256 #> [13116,]  256 #> [13117,]  256 #> [13118,]  255 #> [13119,]  256 #> [13120,]  255 #> [13121,]  256 #> [13122,]  256 #> [13123,]  255 #> [13124,]  255 #> [13125,]  255 #> [13126,]  256 #> [13127,]  256 #> [13128,]  255 #> [13129,]  256 #> [13130,]  255 #> [13131,]  255 #> [13132,]  255 #> [13133,]  256 #> [13134,]  255 #> [13135,]  256 #> [13136,]  255 #> [13137,]  256 #> [13138,]  255 #> [13139,]  255 #> [13140,]  256 #> [13141,]  256 #> [13142,]  255 #> [13143,]  255 #> [13144,]  256 #> [13145,]  255 #> [13146,]  256 #> [13147,]  256 #> [13148,]  255 #> [13149,]  255 #> [13150,]  256 #> [13151,]  255 #> [13152,]  256 #> [13153,]  255 #> [13154,]  255 #> [13155,]  256 #> [13156,]  255 #> [13157,]  255 #> [13158,]  256 #> [13159,]  256 #> [13160,]  255 #> [13161,]  256 #> [13162,]  255 #> [13163,]  256 #> [13164,]  255 #> [13165,]  255 #> [13166,]  255 #> [13167,]  255 #> [13168,]  256 #> [13169,]  256 #> [13170,]  256 #> [13171,]  256 #> [13172,]  255 #> [13173,]  256 #> [13174,]  256 #> [13175,]  256 #> [13176,]  256 #> [13177,]  256 #> [13178,]  255 #> [13179,]  256 #> [13180,]  255 #> [13181,]  256 #> [13182,]  256 #> [13183,]  256 #> [13184,]  256 #> [13185,]  255 #> [13186,]  256 #> [13187,]  256 #> [13188,]  255 #> [13189,]  255 #> [13190,]  256 #> [13191,]  255 #> [13192,]  256 #> [13193,]  256 #> [13194,]  256 #> [13195,]  255 #> [13196,]  256 #> [13197,]  256 #> [13198,]  256 #> [13199,]  256 #> [13200,]  256 #> [13201,]  258 #> [13202,]  257 #> [13203,]  258 #> [13204,]  258 #> [13205,]  258 #> [13206,]  257 #> [13207,]  258 #> [13208,]  258 #> [13209,]  258 #> [13210,]  258 #> [13211,]  257 #> [13212,]  257 #> [13213,]  258 #> [13214,]  258 #> [13215,]  257 #> [13216,]  258 #> [13217,]  257 #> [13218,]  257 #> [13219,]  257 #> [13220,]  258 #> [13221,]  257 #> [13222,]  258 #> [13223,]  257 #> [13224,]  258 #> [13225,]  258 #> [13226,]  257 #> [13227,]  258 #> [13228,]  258 #> [13229,]  257 #> [13230,]  257 #> [13231,]  257 #> [13232,]  257 #> [13233,]  258 #> [13234,]  257 #> [13235,]  257 #> [13236,]  258 #> [13237,]  257 #> [13238,]  257 #> [13239,]  258 #> [13240,]  258 #> [13241,]  258 #> [13242,]  257 #> [13243,]  257 #> [13244,]  257 #> [13245,]  258 #> [13246,]  257 #> [13247,]  257 #> [13248,]  257 #> [13249,]  258 #> [13250,]  258 #> [13251,]  257 #> [13252,]  258 #> [13253,]  258 #> [13254,]  258 #> [13255,]  258 #> [13256,]  257 #> [13257,]  258 #> [13258,]  258 #> [13259,]  258 #> [13260,]  257 #> [13261,]  257 #> [13262,]  257 #> [13263,]  257 #> [13264,]  257 #> [13265,]  257 #> [13266,]  257 #> [13267,]  258 #> [13268,]  257 #> [13269,]  257 #> [13270,]  257 #> [13271,]  258 #> [13272,]  258 #> [13273,]  258 #> [13274,]  258 #> [13275,]  257 #> [13276,]  258 #> [13277,]  258 #> [13278,]  257 #> [13279,]  257 #> [13280,]  258 #> [13281,]  257 #> [13282,]  257 #> [13283,]  257 #> [13284,]  258 #> [13285,]  258 #> [13286,]  258 #> [13287,]  258 #> [13288,]  258 #> [13289,]  257 #> [13290,]  258 #> [13291,]  258 #> [13292,]  257 #> [13293,]  257 #> [13294,]  257 #> [13295,]  257 #> [13296,]  257 #> [13297,]  257 #> [13298,]  257 #> [13299,]  258 #> [13300,]  257 #> [13301,]  260 #> [13302,]  259 #> [13303,]  259 #> [13304,]  259 #> [13305,]  259 #> [13306,]  260 #> [13307,]  259 #> [13308,]  259 #> [13309,]  259 #> [13310,]  259 #> [13311,]  259 #> [13312,]  259 #> [13313,]  260 #> [13314,]  260 #> [13315,]  260 #> [13316,]  260 #> [13317,]  260 #> [13318,]  259 #> [13319,]  259 #> [13320,]  259 #> [13321,]  260 #> [13322,]  259 #> [13323,]  259 #> [13324,]  259 #> [13325,]  259 #> [13326,]  259 #> [13327,]  259 #> [13328,]  259 #> [13329,]  260 #> [13330,]  259 #> [13331,]  259 #> [13332,]  259 #> [13333,]  260 #> [13334,]  259 #> [13335,]  259 #> [13336,]  259 #> [13337,]  259 #> [13338,]  259 #> [13339,]  259 #> [13340,]  259 #> [13341,]  260 #> [13342,]  259 #> [13343,]  259 #> [13344,]  260 #> [13345,]  259 #> [13346,]  259 #> [13347,]  259 #> [13348,]  259 #> [13349,]  259 #> [13350,]  260 #> [13351,]  259 #> [13352,]  259 #> [13353,]  259 #> [13354,]  259 #> [13355,]  259 #> [13356,]  259 #> [13357,]  259 #> [13358,]  259 #> [13359,]  260 #> [13360,]  259 #> [13361,]  260 #> [13362,]  259 #> [13363,]  259 #> [13364,]  259 #> [13365,]  259 #> [13366,]  259 #> [13367,]  259 #> [13368,]  260 #> [13369,]  259 #> [13370,]  260 #> [13371,]  259 #> [13372,]  259 #> [13373,]  260 #> [13374,]  259 #> [13375,]  259 #> [13376,]  260 #> [13377,]  259 #> [13378,]  259 #> [13379,]  259 #> [13380,]  259 #> [13381,]  260 #> [13382,]  259 #> [13383,]  260 #> [13384,]  259 #> [13385,]  259 #> [13386,]  260 #> [13387,]  259 #> [13388,]  259 #> [13389,]  259 #> [13390,]  259 #> [13391,]  259 #> [13392,]  259 #> [13393,]  259 #> [13394,]  259 #> [13395,]  259 #> [13396,]  260 #> [13397,]  259 #> [13398,]  259 #> [13399,]  260 #> [13400,]  259 #> [13401,]  262 #> [13402,]  261 #> [13403,]  261 #> [13404,]  262 #> [13405,]  262 #> [13406,]  262 #> [13407,]  261 #> [13408,]  262 #> [13409,]  262 #> [13410,]  261 #> [13411,]  262 #> [13412,]  262 #> [13413,]  261 #> [13414,]  262 #> [13415,]  262 #> [13416,]  261 #> [13417,]  261 #> [13418,]  261 #> [13419,]  261 #> [13420,]  262 #> [13421,]  261 #> [13422,]  261 #> [13423,]  261 #> [13424,]  261 #> [13425,]  261 #> [13426,]  262 #> [13427,]  261 #> [13428,]  262 #> [13429,]  261 #> [13430,]  261 #> [13431,]  261 #> [13432,]  261 #> [13433,]  262 #> [13434,]  261 #> [13435,]  261 #> [13436,]  261 #> [13437,]  261 #> [13438,]  262 #> [13439,]  261 #> [13440,]  261 #> [13441,]  262 #> [13442,]  262 #> [13443,]  262 #> [13444,]  261 #> [13445,]  262 #> [13446,]  262 #> [13447,]  261 #> [13448,]  261 #> [13449,]  261 #> [13450,]  262 #> [13451,]  262 #> [13452,]  262 #> [13453,]  262 #> [13454,]  261 #> [13455,]  262 #> [13456,]  262 #> [13457,]  262 #> [13458,]  262 #> [13459,]  261 #> [13460,]  262 #> [13461,]  262 #> [13462,]  261 #> [13463,]  262 #> [13464,]  262 #> [13465,]  262 #> [13466,]  262 #> [13467,]  262 #> [13468,]  262 #> [13469,]  262 #> [13470,]  261 #> [13471,]  262 #> [13472,]  262 #> [13473,]  262 #> [13474,]  262 #> [13475,]  262 #> [13476,]  262 #> [13477,]  261 #> [13478,]  262 #> [13479,]  261 #> [13480,]  261 #> [13481,]  262 #> [13482,]  262 #> [13483,]  261 #> [13484,]  262 #> [13485,]  261 #> [13486,]  261 #> [13487,]  262 #> [13488,]  262 #> [13489,]  262 #> [13490,]  262 #> [13491,]  262 #> [13492,]  262 #> [13493,]  261 #> [13494,]  262 #> [13495,]  261 #> [13496,]  262 #> [13497,]  262 #> [13498,]  261 #> [13499,]  262 #> [13500,]  261 #> [13501,]  264 #> [13502,]  264 #> [13503,]  263 #> [13504,]  264 #> [13505,]  264 #> [13506,]  264 #> [13507,]  263 #> [13508,]  264 #> [13509,]  264 #> [13510,]  264 #> [13511,]  264 #> [13512,]  264 #> [13513,]  264 #> [13514,]  264 #> [13515,]  264 #> [13516,]  264 #> [13517,]  264 #> [13518,]  264 #> [13519,]  264 #> [13520,]  264 #> [13521,]  264 #> [13522,]  264 #> [13523,]  264 #> [13524,]  264 #> [13525,]  264 #> [13526,]  264 #> [13527,]  264 #> [13528,]  264 #> [13529,]  264 #> [13530,]  264 #> [13531,]  264 #> [13532,]  264 #> [13533,]  264 #> [13534,]  264 #> [13535,]  264 #> [13536,]  264 #> [13537,]  264 #> [13538,]  264 #> [13539,]  264 #> [13540,]  264 #> [13541,]  264 #> [13542,]  264 #> [13543,]  264 #> [13544,]  264 #> [13545,]  264 #> [13546,]  264 #> [13547,]  264 #> [13548,]  264 #> [13549,]  263 #> [13550,]  264 #> [13551,]  264 #> [13552,]  264 #> [13553,]  263 #> [13554,]  264 #> [13555,]  263 #> [13556,]  263 #> [13557,]  264 #> [13558,]  264 #> [13559,]  264 #> [13560,]  264 #> [13561,]  264 #> [13562,]  264 #> [13563,]  264 #> [13564,]  264 #> [13565,]  264 #> [13566,]  263 #> [13567,]  264 #> [13568,]  264 #> [13569,]  264 #> [13570,]  264 #> [13571,]  264 #> [13572,]  264 #> [13573,]  264 #> [13574,]  264 #> [13575,]  264 #> [13576,]  264 #> [13577,]  264 #> [13578,]  264 #> [13579,]  264 #> [13580,]  264 #> [13581,]  264 #> [13582,]  264 #> [13583,]  264 #> [13584,]  264 #> [13585,]  264 #> [13586,]  264 #> [13587,]  264 #> [13588,]  264 #> [13589,]  264 #> [13590,]  264 #> [13591,]  264 #> [13592,]  264 #> [13593,]  264 #> [13594,]  264 #> [13595,]  264 #> [13596,]  264 #> [13597,]  264 #> [13598,]  264 #> [13599,]  264 #> [13600,]  264 #> [13601,]  266 #> [13602,]  266 #> [13603,]  265 #> [13604,]  265 #> [13605,]  265 #> [13606,]  266 #> [13607,]  265 #> [13608,]  265 #> [13609,]  265 #> [13610,]  265 #> [13611,]  265 #> [13612,]  265 #> [13613,]  266 #> [13614,]  266 #> [13615,]  266 #> [13616,]  266 #> [13617,]  266 #> [13618,]  265 #> [13619,]  265 #> [13620,]  265 #> [13621,]  266 #> [13622,]  266 #> [13623,]  265 #> [13624,]  265 #> [13625,]  265 #> [13626,]  266 #> [13627,]  266 #> [13628,]  265 #> [13629,]  266 #> [13630,]  265 #> [13631,]  265 #> [13632,]  265 #> [13633,]  266 #> [13634,]  265 #> [13635,]  266 #> [13636,]  265 #> [13637,]  266 #> [13638,]  265 #> [13639,]  265 #> [13640,]  265 #> [13641,]  266 #> [13642,]  265 #> [13643,]  265 #> [13644,]  266 #> [13645,]  265 #> [13646,]  265 #> [13647,]  265 #> [13648,]  265 #> [13649,]  265 #> [13650,]  266 #> [13651,]  265 #> [13652,]  266 #> [13653,]  265 #> [13654,]  265 #> [13655,]  265 #> [13656,]  265 #> [13657,]  265 #> [13658,]  266 #> [13659,]  266 #> [13660,]  265 #> [13661,]  266 #> [13662,]  265 #> [13663,]  265 #> [13664,]  265 #> [13665,]  265 #> [13666,]  265 #> [13667,]  265 #> [13668,]  266 #> [13669,]  265 #> [13670,]  266 #> [13671,]  266 #> [13672,]  265 #> [13673,]  266 #> [13674,]  265 #> [13675,]  265 #> [13676,]  266 #> [13677,]  266 #> [13678,]  265 #> [13679,]  266 #> [13680,]  265 #> [13681,]  266 #> [13682,]  265 #> [13683,]  266 #> [13684,]  265 #> [13685,]  265 #> [13686,]  266 #> [13687,]  265 #> [13688,]  265 #> [13689,]  265 #> [13690,]  266 #> [13691,]  265 #> [13692,]  265 #> [13693,]  266 #> [13694,]  266 #> [13695,]  265 #> [13696,]  266 #> [13697,]  265 #> [13698,]  265 #> [13699,]  266 #> [13700,]  266 #> [13701,]  268 #> [13702,]  268 #> [13703,]  268 #> [13704,]  267 #> [13705,]  268 #> [13706,]  268 #> [13707,]  268 #> [13708,]  267 #> [13709,]  267 #> [13710,]  267 #> [13711,]  268 #> [13712,]  268 #> [13713,]  268 #> [13714,]  268 #> [13715,]  268 #> [13716,]  268 #> [13717,]  268 #> [13718,]  268 #> [13719,]  268 #> [13720,]  267 #> [13721,]  268 #> [13722,]  268 #> [13723,]  268 #> [13724,]  268 #> [13725,]  268 #> [13726,]  268 #> [13727,]  268 #> [13728,]  268 #> [13729,]  268 #> [13730,]  267 #> [13731,]  268 #> [13732,]  268 #> [13733,]  268 #> [13734,]  268 #> [13735,]  268 #> [13736,]  268 #> [13737,]  268 #> [13738,]  268 #> [13739,]  267 #> [13740,]  268 #> [13741,]  268 #> [13742,]  268 #> [13743,]  267 #> [13744,]  268 #> [13745,]  268 #> [13746,]  268 #> [13747,]  268 #> [13748,]  268 #> [13749,]  268 #> [13750,]  268 #> [13751,]  267 #> [13752,]  268 #> [13753,]  267 #> [13754,]  268 #> [13755,]  268 #> [13756,]  267 #> [13757,]  268 #> [13758,]  268 #> [13759,]  268 #> [13760,]  267 #> [13761,]  268 #> [13762,]  268 #> [13763,]  268 #> [13764,]  267 #> [13765,]  268 #> [13766,]  267 #> [13767,]  267 #> [13768,]  268 #> [13769,]  268 #> [13770,]  268 #> [13771,]  268 #> [13772,]  268 #> [13773,]  268 #> [13774,]  268 #> [13775,]  268 #> [13776,]  268 #> [13777,]  268 #> [13778,]  267 #> [13779,]  268 #> [13780,]  268 #> [13781,]  268 #> [13782,]  268 #> [13783,]  268 #> [13784,]  268 #> [13785,]  267 #> [13786,]  268 #> [13787,]  268 #> [13788,]  268 #> [13789,]  267 #> [13790,]  268 #> [13791,]  267 #> [13792,]  268 #> [13793,]  268 #> [13794,]  268 #> [13795,]  267 #> [13796,]  268 #> [13797,]  268 #> [13798,]  268 #> [13799,]  268 #> [13800,]  268 #> [13801,]  269 #> [13802,]  269 #> [13803,]  269 #> [13804,]  270 #> [13805,]  269 #> [13806,]  269 #> [13807,]  269 #> [13808,]  269 #> [13809,]  269 #> [13810,]  270 #> [13811,]  269 #> [13812,]  269 #> [13813,]  269 #> [13814,]  269 #> [13815,]  270 #> [13816,]  270 #> [13817,]  269 #> [13818,]  270 #> [13819,]  269 #> [13820,]  269 #> [13821,]  270 #> [13822,]  269 #> [13823,]  270 #> [13824,]  269 #> [13825,]  270 #> [13826,]  269 #> [13827,]  270 #> [13828,]  269 #> [13829,]  269 #> [13830,]  269 #> [13831,]  269 #> [13832,]  269 #> [13833,]  269 #> [13834,]  269 #> [13835,]  269 #> [13836,]  269 #> [13837,]  269 #> [13838,]  269 #> [13839,]  270 #> [13840,]  269 #> [13841,]  269 #> [13842,]  269 #> [13843,]  270 #> [13844,]  269 #> [13845,]  270 #> [13846,]  269 #> [13847,]  269 #> [13848,]  269 #> [13849,]  269 #> [13850,]  269 #> [13851,]  269 #> [13852,]  269 #> [13853,]  270 #> [13854,]  269 #> [13855,]  269 #> [13856,]  269 #> [13857,]  269 #> [13858,]  269 #> [13859,]  269 #> [13860,]  269 #> [13861,]  270 #> [13862,]  269 #> [13863,]  269 #> [13864,]  269 #> [13865,]  269 #> [13866,]  269 #> [13867,]  269 #> [13868,]  269 #> [13869,]  269 #> [13870,]  269 #> [13871,]  269 #> [13872,]  270 #> [13873,]  270 #> [13874,]  270 #> [13875,]  270 #> [13876,]  270 #> [13877,]  270 #> [13878,]  269 #> [13879,]  269 #> [13880,]  269 #> [13881,]  269 #> [13882,]  269 #> [13883,]  269 #> [13884,]  270 #> [13885,]  269 #> [13886,]  269 #> [13887,]  269 #> [13888,]  269 #> [13889,]  269 #> [13890,]  269 #> [13891,]  269 #> [13892,]  269 #> [13893,]  269 #> [13894,]  270 #> [13895,]  270 #> [13896,]  269 #> [13897,]  269 #> [13898,]  269 #> [13899,]  269 #> [13900,]  270 #> [13901,]  272 #> [13902,]  271 #> [13903,]  272 #> [13904,]  272 #> [13905,]  272 #> [13906,]  271 #> [13907,]  272 #> [13908,]  272 #> [13909,]  272 #> [13910,]  272 #> [13911,]  271 #> [13912,]  271 #> [13913,]  272 #> [13914,]  272 #> [13915,]  271 #> [13916,]  272 #> [13917,]  271 #> [13918,]  272 #> [13919,]  272 #> [13920,]  272 #> [13921,]  272 #> [13922,]  272 #> [13923,]  271 #> [13924,]  272 #> [13925,]  272 #> [13926,]  272 #> [13927,]  272 #> [13928,]  272 #> [13929,]  271 #> [13930,]  271 #> [13931,]  271 #> [13932,]  272 #> [13933,]  272 #> [13934,]  271 #> [13935,]  271 #> [13936,]  272 #> [13937,]  271 #> [13938,]  272 #> [13939,]  272 #> [13940,]  272 #> [13941,]  272 #> [13942,]  271 #> [13943,]  271 #> [13944,]  271 #> [13945,]  272 #> [13946,]  272 #> [13947,]  271 #> [13948,]  271 #> [13949,]  272 #> [13950,]  272 #> [13951,]  272 #> [13952,]  272 #> [13953,]  272 #> [13954,]  272 #> [13955,]  272 #> [13956,]  271 #> [13957,]  272 #> [13958,]  272 #> [13959,]  272 #> [13960,]  271 #> [13961,]  271 #> [13962,]  272 #> [13963,]  271 #> [13964,]  271 #> [13965,]  271 #> [13966,]  271 #> [13967,]  272 #> [13968,]  272 #> [13969,]  272 #> [13970,]  271 #> [13971,]  272 #> [13972,]  272 #> [13973,]  272 #> [13974,]  272 #> [13975,]  271 #> [13976,]  272 #> [13977,]  272 #> [13978,]  271 #> [13979,]  271 #> [13980,]  272 #> [13981,]  271 #> [13982,]  272 #> [13983,]  272 #> [13984,]  272 #> [13985,]  272 #> [13986,]  272 #> [13987,]  272 #> [13988,]  272 #> [13989,]  272 #> [13990,]  272 #> [13991,]  272 #> [13992,]  271 #> [13993,]  272 #> [13994,]  271 #> [13995,]  271 #> [13996,]  272 #> [13997,]  272 #> [13998,]  272 #> [13999,]  272 #> [14000,]  271 #> [14001,]  273 #> [14002,]  274 #> [14003,]  273 #> [14004,]  273 #> [14005,]  274 #> [14006,]  273 #> [14007,]  273 #> [14008,]  273 #> [14009,]  274 #> [14010,]  274 #> [14011,]  273 #> [14012,]  274 #> [14013,]  274 #> [14014,]  273 #> [14015,]  273 #> [14016,]  273 #> [14017,]  274 #> [14018,]  274 #> [14019,]  273 #> [14020,]  274 #> [14021,]  274 #> [14022,]  274 #> [14023,]  274 #> [14024,]  274 #> [14025,]  273 #> [14026,]  273 #> [14027,]  274 #> [14028,]  273 #> [14029,]  274 #> [14030,]  273 #> [14031,]  274 #> [14032,]  274 #> [14033,]  274 #> [14034,]  273 #> [14035,]  273 #> [14036,]  274 #> [14037,]  273 #> [14038,]  273 #> [14039,]  273 #> [14040,]  274 #> [14041,]  273 #> [14042,]  273 #> [14043,]  273 #> [14044,]  274 #> [14045,]  273 #> [14046,]  273 #> [14047,]  273 #> [14048,]  273 #> [14049,]  273 #> [14050,]  274 #> [14051,]  273 #> [14052,]  273 #> [14053,]  274 #> [14054,]  273 #> [14055,]  273 #> [14056,]  273 #> [14057,]  273 #> [14058,]  273 #> [14059,]  273 #> [14060,]  274 #> [14061,]  274 #> [14062,]  273 #> [14063,]  274 #> [14064,]  273 #> [14065,]  273 #> [14066,]  273 #> [14067,]  273 #> [14068,]  273 #> [14069,]  273 #> [14070,]  274 #> [14071,]  273 #> [14072,]  273 #> [14073,]  273 #> [14074,]  273 #> [14075,]  274 #> [14076,]  273 #> [14077,]  273 #> [14078,]  273 #> [14079,]  273 #> [14080,]  274 #> [14081,]  274 #> [14082,]  273 #> [14083,]  274 #> [14084,]  274 #> [14085,]  273 #> [14086,]  274 #> [14087,]  273 #> [14088,]  274 #> [14089,]  273 #> [14090,]  273 #> [14091,]  273 #> [14092,]  274 #> [14093,]  274 #> [14094,]  273 #> [14095,]  273 #> [14096,]  273 #> [14097,]  273 #> [14098,]  273 #> [14099,]  273 #> [14100,]  273 #> [14101,]  275 #> [14102,]  275 #> [14103,]  275 #> [14104,]  275 #> [14105,]  275 #> [14106,]  276 #> [14107,]  275 #> [14108,]  276 #> [14109,]  276 #> [14110,]  275 #> [14111,]  275 #> [14112,]  276 #> [14113,]  275 #> [14114,]  275 #> [14115,]  276 #> [14116,]  275 #> [14117,]  275 #> [14118,]  275 #> [14119,]  275 #> [14120,]  275 #> [14121,]  275 #> [14122,]  275 #> [14123,]  275 #> [14124,]  275 #> [14125,]  275 #> [14126,]  276 #> [14127,]  275 #> [14128,]  275 #> [14129,]  275 #> [14130,]  275 #> [14131,]  275 #> [14132,]  275 #> [14133,]  276 #> [14134,]  275 #> [14135,]  275 #> [14136,]  275 #> [14137,]  275 #> [14138,]  275 #> [14139,]  275 #> [14140,]  275 #> [14141,]  275 #> [14142,]  275 #> [14143,]  276 #> [14144,]  275 #> [14145,]  276 #> [14146,]  276 #> [14147,]  275 #> [14148,]  275 #> [14149,]  275 #> [14150,]  275 #> [14151,]  276 #> [14152,]  275 #> [14153,]  275 #> [14154,]  275 #> [14155,]  275 #> [14156,]  276 #> [14157,]  276 #> [14158,]  275 #> [14159,]  275 #> [14160,]  275 #> [14161,]  276 #> [14162,]  275 #> [14163,]  275 #> [14164,]  276 #> [14165,]  276 #> [14166,]  276 #> [14167,]  275 #> [14168,]  276 #> [14169,]  275 #> [14170,]  275 #> [14171,]  275 #> [14172,]  276 #> [14173,]  275 #> [14174,]  275 #> [14175,]  275 #> [14176,]  276 #> [14177,]  275 #> [14178,]  275 #> [14179,]  275 #> [14180,]  275 #> [14181,]  276 #> [14182,]  275 #> [14183,]  275 #> [14184,]  275 #> [14185,]  275 #> [14186,]  275 #> [14187,]  275 #> [14188,]  275 #> [14189,]  275 #> [14190,]  275 #> [14191,]  275 #> [14192,]  276 #> [14193,]  275 #> [14194,]  276 #> [14195,]  275 #> [14196,]  276 #> [14197,]  276 #> [14198,]  275 #> [14199,]  275 #> [14200,]  275 #> [14201,]  278 #> [14202,]  278 #> [14203,]  277 #> [14204,]  278 #> [14205,]  278 #> [14206,]  278 #> [14207,]  277 #> [14208,]  278 #> [14209,]  278 #> [14210,]  278 #> [14211,]  278 #> [14212,]  278 #> [14213,]  278 #> [14214,]  278 #> [14215,]  278 #> [14216,]  278 #> [14217,]  278 #> [14218,]  278 #> [14219,]  278 #> [14220,]  277 #> [14221,]  278 #> [14222,]  278 #> [14223,]  278 #> [14224,]  278 #> [14225,]  277 #> [14226,]  278 #> [14227,]  278 #> [14228,]  278 #> [14229,]  278 #> [14230,]  278 #> [14231,]  278 #> [14232,]  278 #> [14233,]  278 #> [14234,]  278 #> [14235,]  278 #> [14236,]  278 #> [14237,]  278 #> [14238,]  278 #> [14239,]  277 #> [14240,]  278 #> [14241,]  278 #> [14242,]  278 #> [14243,]  278 #> [14244,]  277 #> [14245,]  278 #> [14246,]  278 #> [14247,]  278 #> [14248,]  278 #> [14249,]  277 #> [14250,]  278 #> [14251,]  278 #> [14252,]  278 #> [14253,]  277 #> [14254,]  278 #> [14255,]  277 #> [14256,]  277 #> [14257,]  278 #> [14258,]  278 #> [14259,]  277 #> [14260,]  278 #> [14261,]  278 #> [14262,]  278 #> [14263,]  278 #> [14264,]  278 #> [14265,]  277 #> [14266,]  277 #> [14267,]  278 #> [14268,]  278 #> [14269,]  278 #> [14270,]  278 #> [14271,]  278 #> [14272,]  278 #> [14273,]  278 #> [14274,]  278 #> [14275,]  278 #> [14276,]  278 #> [14277,]  278 #> [14278,]  278 #> [14279,]  278 #> [14280,]  278 #> [14281,]  278 #> [14282,]  278 #> [14283,]  278 #> [14284,]  278 #> [14285,]  278 #> [14286,]  278 #> [14287,]  278 #> [14288,]  278 #> [14289,]  278 #> [14290,]  277 #> [14291,]  278 #> [14292,]  278 #> [14293,]  278 #> [14294,]  278 #> [14295,]  278 #> [14296,]  278 #> [14297,]  278 #> [14298,]  277 #> [14299,]  278 #> [14300,]  277 #> [14301,]  280 #> [14302,]  280 #> [14303,]  279 #> [14304,]  279 #> [14305,]  279 #> [14306,]  279 #> [14307,]  280 #> [14308,]  280 #> [14309,]  279 #> [14310,]  279 #> [14311,]  279 #> [14312,]  280 #> [14313,]  280 #> [14314,]  279 #> [14315,]  280 #> [14316,]  280 #> [14317,]  280 #> [14318,]  280 #> [14319,]  280 #> [14320,]  280 #> [14321,]  279 #> [14322,]  280 #> [14323,]  280 #> [14324,]  279 #> [14325,]  279 #> [14326,]  280 #> [14327,]  280 #> [14328,]  279 #> [14329,]  280 #> [14330,]  280 #> [14331,]  279 #> [14332,]  279 #> [14333,]  280 #> [14334,]  279 #> [14335,]  279 #> [14336,]  280 #> [14337,]  280 #> [14338,]  280 #> [14339,]  279 #> [14340,]  279 #> [14341,]  280 #> [14342,]  279 #> [14343,]  280 #> [14344,]  280 #> [14345,]  280 #> [14346,]  280 #> [14347,]  279 #> [14348,]  279 #> [14349,]  280 #> [14350,]  280 #> [14351,]  280 #> [14352,]  279 #> [14353,]  280 #> [14354,]  279 #> [14355,]  280 #> [14356,]  280 #> [14357,]  279 #> [14358,]  280 #> [14359,]  280 #> [14360,]  280 #> [14361,]  280 #> [14362,]  279 #> [14363,]  280 #> [14364,]  280 #> [14365,]  279 #> [14366,]  280 #> [14367,]  280 #> [14368,]  280 #> [14369,]  280 #> [14370,]  279 #> [14371,]  280 #> [14372,]  279 #> [14373,]  280 #> [14374,]  279 #> [14375,]  280 #> [14376,]  279 #> [14377,]  280 #> [14378,]  280 #> [14379,]  280 #> [14380,]  280 #> [14381,]  280 #> [14382,]  279 #> [14383,]  280 #> [14384,]  280 #> [14385,]  280 #> [14386,]  280 #> [14387,]  280 #> [14388,]  280 #> [14389,]  280 #> [14390,]  280 #> [14391,]  279 #> [14392,]  280 #> [14393,]  280 #> [14394,]  280 #> [14395,]  280 #> [14396,]  280 #> [14397,]  280 #> [14398,]  279 #> [14399,]  280 #> [14400,]  280 #> [14401,]  282 #> [14402,]  281 #> [14403,]  281 #> [14404,]  282 #> [14405,]  282 #> [14406,]  282 #> [14407,]  281 #> [14408,]  282 #> [14409,]  282 #> [14410,]  281 #> [14411,]  282 #> [14412,]  282 #> [14413,]  281 #> [14414,]  282 #> [14415,]  282 #> [14416,]  281 #> [14417,]  281 #> [14418,]  281 #> [14419,]  281 #> [14420,]  282 #> [14421,]  281 #> [14422,]  281 #> [14423,]  281 #> [14424,]  281 #> [14425,]  281 #> [14426,]  282 #> [14427,]  281 #> [14428,]  282 #> [14429,]  281 #> [14430,]  281 #> [14431,]  281 #> [14432,]  281 #> [14433,]  282 #> [14434,]  281 #> [14435,]  281 #> [14436,]  281 #> [14437,]  281 #> [14438,]  282 #> [14439,]  281 #> [14440,]  281 #> [14441,]  282 #> [14442,]  282 #> [14443,]  282 #> [14444,]  281 #> [14445,]  282 #> [14446,]  282 #> [14447,]  281 #> [14448,]  281 #> [14449,]  281 #> [14450,]  282 #> [14451,]  282 #> [14452,]  282 #> [14453,]  282 #> [14454,]  281 #> [14455,]  282 #> [14456,]  282 #> [14457,]  282 #> [14458,]  282 #> [14459,]  281 #> [14460,]  282 #> [14461,]  282 #> [14462,]  281 #> [14463,]  282 #> [14464,]  282 #> [14465,]  282 #> [14466,]  282 #> [14467,]  282 #> [14468,]  282 #> [14469,]  282 #> [14470,]  281 #> [14471,]  282 #> [14472,]  282 #> [14473,]  282 #> [14474,]  282 #> [14475,]  282 #> [14476,]  282 #> [14477,]  281 #> [14478,]  282 #> [14479,]  281 #> [14480,]  281 #> [14481,]  282 #> [14482,]  282 #> [14483,]  281 #> [14484,]  282 #> [14485,]  281 #> [14486,]  281 #> [14487,]  282 #> [14488,]  282 #> [14489,]  282 #> [14490,]  282 #> [14491,]  282 #> [14492,]  282 #> [14493,]  281 #> [14494,]  282 #> [14495,]  281 #> [14496,]  282 #> [14497,]  282 #> [14498,]  281 #> [14499,]  282 #> [14500,]  281 #> [14501,]  284 #> [14502,]  284 #> [14503,]  283 #> [14504,]  284 #> [14505,]  284 #> [14506,]  283 #> [14507,]  284 #> [14508,]  284 #> [14509,]  284 #> [14510,]  284 #> [14511,]  283 #> [14512,]  284 #> [14513,]  284 #> [14514,]  284 #> [14515,]  284 #> [14516,]  283 #> [14517,]  284 #> [14518,]  284 #> [14519,]  283 #> [14520,]  284 #> [14521,]  284 #> [14522,]  284 #> [14523,]  284 #> [14524,]  284 #> [14525,]  284 #> [14526,]  284 #> [14527,]  284 #> [14528,]  284 #> [14529,]  284 #> [14530,]  284 #> [14531,]  284 #> [14532,]  284 #> [14533,]  284 #> [14534,]  283 #> [14535,]  283 #> [14536,]  284 #> [14537,]  283 #> [14538,]  283 #> [14539,]  284 #> [14540,]  284 #> [14541,]  284 #> [14542,]  284 #> [14543,]  284 #> [14544,]  284 #> [14545,]  283 #> [14546,]  284 #> [14547,]  284 #> [14548,]  284 #> [14549,]  283 #> [14550,]  284 #> [14551,]  284 #> [14552,]  283 #> [14553,]  284 #> [14554,]  284 #> [14555,]  284 #> [14556,]  284 #> [14557,]  284 #> [14558,]  284 #> [14559,]  284 #> [14560,]  284 #> [14561,]  284 #> [14562,]  284 #> [14563,]  284 #> [14564,]  283 #> [14565,]  284 #> [14566,]  284 #> [14567,]  284 #> [14568,]  283 #> [14569,]  284 #> [14570,]  284 #> [14571,]  284 #> [14572,]  283 #> [14573,]  284 #> [14574,]  284 #> [14575,]  284 #> [14576,]  284 #> [14577,]  284 #> [14578,]  284 #> [14579,]  284 #> [14580,]  284 #> [14581,]  284 #> [14582,]  284 #> [14583,]  284 #> [14584,]  284 #> [14585,]  284 #> [14586,]  284 #> [14587,]  284 #> [14588,]  284 #> [14589,]  284 #> [14590,]  284 #> [14591,]  284 #> [14592,]  284 #> [14593,]  284 #> [14594,]  284 #> [14595,]  284 #> [14596,]  283 #> [14597,]  283 #> [14598,]  284 #> [14599,]  284 #> [14600,]  284 #> [14601,]  286 #> [14602,]  285 #> [14603,]  285 #> [14604,]  286 #> [14605,]  286 #> [14606,]  286 #> [14607,]  285 #> [14608,]  286 #> [14609,]  286 #> [14610,]  285 #> [14611,]  286 #> [14612,]  286 #> [14613,]  285 #> [14614,]  286 #> [14615,]  286 #> [14616,]  285 #> [14617,]  286 #> [14618,]  285 #> [14619,]  285 #> [14620,]  286 #> [14621,]  285 #> [14622,]  285 #> [14623,]  285 #> [14624,]  285 #> [14625,]  286 #> [14626,]  286 #> [14627,]  286 #> [14628,]  286 #> [14629,]  285 #> [14630,]  285 #> [14631,]  285 #> [14632,]  285 #> [14633,]  286 #> [14634,]  285 #> [14635,]  285 #> [14636,]  285 #> [14637,]  285 #> [14638,]  286 #> [14639,]  285 #> [14640,]  285 #> [14641,]  286 #> [14642,]  286 #> [14643,]  286 #> [14644,]  285 #> [14645,]  286 #> [14646,]  286 #> [14647,]  285 #> [14648,]  285 #> [14649,]  285 #> [14650,]  286 #> [14651,]  286 #> [14652,]  286 #> [14653,]  286 #> [14654,]  285 #> [14655,]  286 #> [14656,]  286 #> [14657,]  286 #> [14658,]  286 #> [14659,]  285 #> [14660,]  286 #> [14661,]  286 #> [14662,]  285 #> [14663,]  286 #> [14664,]  286 #> [14665,]  286 #> [14666,]  286 #> [14667,]  286 #> [14668,]  286 #> [14669,]  286 #> [14670,]  285 #> [14671,]  286 #> [14672,]  286 #> [14673,]  286 #> [14674,]  286 #> [14675,]  286 #> [14676,]  286 #> [14677,]  285 #> [14678,]  286 #> [14679,]  285 #> [14680,]  285 #> [14681,]  286 #> [14682,]  286 #> [14683,]  285 #> [14684,]  286 #> [14685,]  285 #> [14686,]  285 #> [14687,]  286 #> [14688,]  286 #> [14689,]  286 #> [14690,]  286 #> [14691,]  286 #> [14692,]  286 #> [14693,]  285 #> [14694,]  286 #> [14695,]  285 #> [14696,]  286 #> [14697,]  286 #> [14698,]  285 #> [14699,]  286 #> [14700,]  285 #> [14701,]  288 #> [14702,]  287 #> [14703,]  287 #> [14704,]  287 #> [14705,]  287 #> [14706,]  287 #> [14707,]  287 #> [14708,]  287 #> [14709,]  288 #> [14710,]  287 #> [14711,]  287 #> [14712,]  287 #> [14713,]  288 #> [14714,]  287 #> [14715,]  287 #> [14716,]  287 #> [14717,]  288 #> [14718,]  288 #> [14719,]  287 #> [14720,]  287 #> [14721,]  287 #> [14722,]  287 #> [14723,]  287 #> [14724,]  287 #> [14725,]  287 #> [14726,]  287 #> [14727,]  288 #> [14728,]  287 #> [14729,]  287 #> [14730,]  287 #> [14731,]  287 #> [14732,]  287 #> [14733,]  287 #> [14734,]  287 #> [14735,]  287 #> [14736,]  288 #> [14737,]  287 #> [14738,]  287 #> [14739,]  287 #> [14740,]  287 #> [14741,]  287 #> [14742,]  288 #> [14743,]  287 #> [14744,]  287 #> [14745,]  287 #> [14746,]  287 #> [14747,]  287 #> [14748,]  287 #> [14749,]  287 #> [14750,]  287 #> [14751,]  288 #> [14752,]  287 #> [14753,]  288 #> [14754,]  287 #> [14755,]  287 #> [14756,]  288 #> [14757,]  287 #> [14758,]  287 #> [14759,]  287 #> [14760,]  287 #> [14761,]  287 #> [14762,]  287 #> [14763,]  287 #> [14764,]  287 #> [14765,]  288 #> [14766,]  288 #> [14767,]  287 #> [14768,]  287 #> [14769,]  287 #> [14770,]  287 #> [14771,]  287 #> [14772,]  287 #> [14773,]  287 #> [14774,]  287 #> [14775,]  287 #> [14776,]  287 #> [14777,]  287 #> [14778,]  287 #> [14779,]  288 #> [14780,]  287 #> [14781,]  287 #> [14782,]  288 #> [14783,]  288 #> [14784,]  288 #> [14785,]  287 #> [14786,]  287 #> [14787,]  288 #> [14788,]  287 #> [14789,]  287 #> [14790,]  287 #> [14791,]  288 #> [14792,]  287 #> [14793,]  288 #> [14794,]  288 #> [14795,]  287 #> [14796,]  287 #> [14797,]  287 #> [14798,]  287 #> [14799,]  287 #> [14800,]  287 #> [14801,]  290 #> [14802,]  289 #> [14803,]  290 #> [14804,]  290 #> [14805,]  290 #> [14806,]  289 #> [14807,]  290 #> [14808,]  290 #> [14809,]  290 #> [14810,]  290 #> [14811,]  289 #> [14812,]  289 #> [14813,]  290 #> [14814,]  290 #> [14815,]  289 #> [14816,]  290 #> [14817,]  289 #> [14818,]  290 #> [14819,]  289 #> [14820,]  290 #> [14821,]  290 #> [14822,]  290 #> [14823,]  289 #> [14824,]  290 #> [14825,]  290 #> [14826,]  289 #> [14827,]  290 #> [14828,]  290 #> [14829,]  289 #> [14830,]  289 #> [14831,]  289 #> [14832,]  290 #> [14833,]  290 #> [14834,]  289 #> [14835,]  289 #> [14836,]  290 #> [14837,]  289 #> [14838,]  290 #> [14839,]  290 #> [14840,]  290 #> [14841,]  290 #> [14842,]  289 #> [14843,]  289 #> [14844,]  289 #> [14845,]  290 #> [14846,]  290 #> [14847,]  289 #> [14848,]  289 #> [14849,]  290 #> [14850,]  290 #> [14851,]  290 #> [14852,]  290 #> [14853,]  290 #> [14854,]  290 #> [14855,]  290 #> [14856,]  289 #> [14857,]  290 #> [14858,]  290 #> [14859,]  290 #> [14860,]  289 #> [14861,]  289 #> [14862,]  290 #> [14863,]  289 #> [14864,]  289 #> [14865,]  289 #> [14866,]  289 #> [14867,]  290 #> [14868,]  289 #> [14869,]  290 #> [14870,]  289 #> [14871,]  290 #> [14872,]  290 #> [14873,]  290 #> [14874,]  290 #> [14875,]  289 #> [14876,]  290 #> [14877,]  290 #> [14878,]  289 #> [14879,]  289 #> [14880,]  290 #> [14881,]  289 #> [14882,]  290 #> [14883,]  290 #> [14884,]  290 #> [14885,]  290 #> [14886,]  290 #> [14887,]  290 #> [14888,]  290 #> [14889,]  290 #> [14890,]  290 #> [14891,]  290 #> [14892,]  289 #> [14893,]  290 #> [14894,]  289 #> [14895,]  289 #> [14896,]  289 #> [14897,]  290 #> [14898,]  290 #> [14899,]  290 #> [14900,]  289 #> [14901,]  292 #> [14902,]  292 #> [14903,]  292 #> [14904,]  291 #> [14905,]  292 #> [14906,]  292 #> [14907,]  292 #> [14908,]  291 #> [14909,]  291 #> [14910,]  292 #> [14911,]  292 #> [14912,]  292 #> [14913,]  292 #> [14914,]  292 #> [14915,]  292 #> [14916,]  292 #> [14917,]  291 #> [14918,]  292 #> [14919,]  292 #> [14920,]  292 #> [14921,]  292 #> [14922,]  292 #> [14923,]  292 #> [14924,]  292 #> [14925,]  292 #> [14926,]  292 #> [14927,]  291 #> [14928,]  292 #> [14929,]  292 #> [14930,]  292 #> [14931,]  292 #> [14932,]  292 #> [14933,]  292 #> [14934,]  292 #> [14935,]  292 #> [14936,]  292 #> [14937,]  292 #> [14938,]  292 #> [14939,]  292 #> [14940,]  292 #> [14941,]  292 #> [14942,]  292 #> [14943,]  292 #> [14944,]  291 #> [14945,]  292 #> [14946,]  292 #> [14947,]  292 #> [14948,]  292 #> [14949,]  292 #> [14950,]  292 #> [14951,]  292 #> [14952,]  291 #> [14953,]  292 #> [14954,]  292 #> [14955,]  292 #> [14956,]  292 #> [14957,]  292 #> [14958,]  292 #> [14959,]  292 #> [14960,]  292 #> [14961,]  292 #> [14962,]  292 #> [14963,]  292 #> [14964,]  292 #> [14965,]  292 #> [14966,]  292 #> [14967,]  292 #> [14968,]  292 #> [14969,]  292 #> [14970,]  292 #> [14971,]  292 #> [14972,]  292 #> [14973,]  292 #> [14974,]  292 #> [14975,]  292 #> [14976,]  292 #> [14977,]  292 #> [14978,]  292 #> [14979,]  292 #> [14980,]  292 #> [14981,]  291 #> [14982,]  291 #> [14983,]  292 #> [14984,]  292 #> [14985,]  292 #> [14986,]  292 #> [14987,]  292 #> [14988,]  292 #> [14989,]  292 #> [14990,]  291 #> [14991,]  292 #> [14992,]  292 #> [14993,]  292 #> [14994,]  292 #> [14995,]  291 #> [14996,]  292 #> [14997,]  292 #> [14998,]  292 #> [14999,]  291 #> [15000,]  292 #> [15001,]  294 #> [15002,]  293 #> [15003,]  293 #> [15004,]  294 #> [15005,]  293 #> [15006,]  293 #> [15007,]  294 #> [15008,]  294 #> [15009,]  294 #> [15010,]  294 #> [15011,]  293 #> [15012,]  293 #> [15013,]  294 #> [15014,]  293 #> [15015,]  294 #> [15016,]  294 #> [15017,]  294 #> [15018,]  294 #> [15019,]  293 #> [15020,]  293 #> [15021,]  294 #> [15022,]  293 #> [15023,]  294 #> [15024,]  293 #> [15025,]  294 #> [15026,]  293 #> [15027,]  294 #> [15028,]  294 #> [15029,]  293 #> [15030,]  293 #> [15031,]  293 #> [15032,]  293 #> [15033,]  293 #> [15034,]  293 #> [15035,]  293 #> [15036,]  293 #> [15037,]  294 #> [15038,]  294 #> [15039,]  294 #> [15040,]  293 #> [15041,]  293 #> [15042,]  293 #> [15043,]  294 #> [15044,]  294 #> [15045,]  294 #> [15046,]  294 #> [15047,]  294 #> [15048,]  293 #> [15049,]  293 #> [15050,]  293 #> [15051,]  293 #> [15052,]  293 #> [15053,]  294 #> [15054,]  293 #> [15055,]  293 #> [15056,]  294 #> [15057,]  293 #> [15058,]  293 #> [15059,]  293 #> [15060,]  293 #> [15061,]  294 #> [15062,]  293 #> [15063,]  293 #> [15064,]  294 #> [15065,]  293 #> [15066,]  293 #> [15067,]  293 #> [15068,]  293 #> [15069,]  293 #> [15070,]  294 #> [15071,]  294 #> [15072,]  294 #> [15073,]  294 #> [15074,]  294 #> [15075,]  294 #> [15076,]  294 #> [15077,]  294 #> [15078,]  293 #> [15079,]  294 #> [15080,]  293 #> [15081,]  293 #> [15082,]  294 #> [15083,]  293 #> [15084,]  294 #> [15085,]  293 #> [15086,]  293 #> [15087,]  294 #> [15088,]  294 #> [15089,]  293 #> [15090,]  294 #> [15091,]  293 #> [15092,]  293 #> [15093,]  293 #> [15094,]  294 #> [15095,]  294 #> [15096,]  294 #> [15097,]  293 #> [15098,]  293 #> [15099,]  293 #> [15100,]  294 #> [15101,]  296 #> [15102,]  296 #> [15103,]  296 #> [15104,]  295 #> [15105,]  296 #> [15106,]  296 #> [15107,]  296 #> [15108,]  295 #> [15109,]  295 #> [15110,]  295 #> [15111,]  296 #> [15112,]  296 #> [15113,]  296 #> [15114,]  296 #> [15115,]  296 #> [15116,]  296 #> [15117,]  296 #> [15118,]  296 #> [15119,]  296 #> [15120,]  295 #> [15121,]  296 #> [15122,]  296 #> [15123,]  296 #> [15124,]  296 #> [15125,]  296 #> [15126,]  296 #> [15127,]  296 #> [15128,]  296 #> [15129,]  296 #> [15130,]  295 #> [15131,]  296 #> [15132,]  296 #> [15133,]  296 #> [15134,]  296 #> [15135,]  296 #> [15136,]  296 #> [15137,]  296 #> [15138,]  296 #> [15139,]  296 #> [15140,]  296 #> [15141,]  296 #> [15142,]  296 #> [15143,]  295 #> [15144,]  296 #> [15145,]  296 #> [15146,]  296 #> [15147,]  296 #> [15148,]  296 #> [15149,]  296 #> [15150,]  296 #> [15151,]  295 #> [15152,]  296 #> [15153,]  296 #> [15154,]  296 #> [15155,]  296 #> [15156,]  295 #> [15157,]  296 #> [15158,]  296 #> [15159,]  296 #> [15160,]  295 #> [15161,]  296 #> [15162,]  296 #> [15163,]  296 #> [15164,]  295 #> [15165,]  296 #> [15166,]  296 #> [15167,]  295 #> [15168,]  296 #> [15169,]  296 #> [15170,]  296 #> [15171,]  296 #> [15172,]  296 #> [15173,]  296 #> [15174,]  296 #> [15175,]  296 #> [15176,]  296 #> [15177,]  296 #> [15178,]  295 #> [15179,]  296 #> [15180,]  296 #> [15181,]  296 #> [15182,]  296 #> [15183,]  296 #> [15184,]  296 #> [15185,]  295 #> [15186,]  296 #> [15187,]  296 #> [15188,]  296 #> [15189,]  295 #> [15190,]  296 #> [15191,]  295 #> [15192,]  296 #> [15193,]  296 #> [15194,]  296 #> [15195,]  295 #> [15196,]  296 #> [15197,]  296 #> [15198,]  296 #> [15199,]  296 #> [15200,]  296 #> [15201,]  298 #> [15202,]  297 #> [15203,]  297 #> [15204,]  297 #> [15205,]  297 #> [15206,]  298 #> [15207,]  297 #> [15208,]  297 #> [15209,]  297 #> [15210,]  297 #> [15211,]  297 #> [15212,]  297 #> [15213,]  298 #> [15214,]  298 #> [15215,]  298 #> [15216,]  298 #> [15217,]  297 #> [15218,]  297 #> [15219,]  297 #> [15220,]  297 #> [15221,]  298 #> [15222,]  297 #> [15223,]  297 #> [15224,]  297 #> [15225,]  297 #> [15226,]  297 #> [15227,]  297 #> [15228,]  297 #> [15229,]  298 #> [15230,]  297 #> [15231,]  297 #> [15232,]  297 #> [15233,]  298 #> [15234,]  297 #> [15235,]  297 #> [15236,]  297 #> [15237,]  297 #> [15238,]  297 #> [15239,]  297 #> [15240,]  297 #> [15241,]  298 #> [15242,]  297 #> [15243,]  297 #> [15244,]  298 #> [15245,]  297 #> [15246,]  297 #> [15247,]  297 #> [15248,]  297 #> [15249,]  297 #> [15250,]  298 #> [15251,]  297 #> [15252,]  297 #> [15253,]  297 #> [15254,]  297 #> [15255,]  297 #> [15256,]  297 #> [15257,]  297 #> [15258,]  297 #> [15259,]  298 #> [15260,]  297 #> [15261,]  298 #> [15262,]  297 #> [15263,]  297 #> [15264,]  297 #> [15265,]  297 #> [15266,]  297 #> [15267,]  297 #> [15268,]  298 #> [15269,]  297 #> [15270,]  298 #> [15271,]  297 #> [15272,]  297 #> [15273,]  298 #> [15274,]  297 #> [15275,]  297 #> [15276,]  297 #> [15277,]  297 #> [15278,]  297 #> [15279,]  297 #> [15280,]  297 #> [15281,]  297 #> [15282,]  297 #> [15283,]  298 #> [15284,]  297 #> [15285,]  297 #> [15286,]  298 #> [15287,]  297 #> [15288,]  297 #> [15289,]  297 #> [15290,]  297 #> [15291,]  297 #> [15292,]  297 #> [15293,]  297 #> [15294,]  297 #> [15295,]  297 #> [15296,]  298 #> [15297,]  297 #> [15298,]  297 #> [15299,]  298 #> [15300,]  297 #> [15301,]  299 #> [15302,]  300 #> [15303,]  299 #> [15304,]  299 #> [15305,]  299 #> [15306,]  299 #> [15307,]  299 #> [15308,]  299 #> [15309,]  300 #> [15310,]  300 #> [15311,]  299 #> [15312,]  300 #> [15313,]  300 #> [15314,]  299 #> [15315,]  299 #> [15316,]  299 #> [15317,]  300 #> [15318,]  300 #> [15319,]  299 #> [15320,]  300 #> [15321,]  300 #> [15322,]  299 #> [15323,]  300 #> [15324,]  300 #> [15325,]  299 #> [15326,]  299 #> [15327,]  299 #> [15328,]  299 #> [15329,]  300 #> [15330,]  299 #> [15331,]  300 #> [15332,]  300 #> [15333,]  300 #> [15334,]  299 #> [15335,]  299 #> [15336,]  300 #> [15337,]  299 #> [15338,]  299 #> [15339,]  299 #> [15340,]  300 #> [15341,]  299 #> [15342,]  299 #> [15343,]  299 #> [15344,]  299 #> [15345,]  299 #> [15346,]  299 #> [15347,]  299 #> [15348,]  299 #> [15349,]  299 #> [15350,]  299 #> [15351,]  299 #> [15352,]  299 #> [15353,]  300 #> [15354,]  299 #> [15355,]  299 #> [15356,]  299 #> [15357,]  299 #> [15358,]  299 #> [15359,]  299 #> [15360,]  300 #> [15361,]  300 #> [15362,]  299 #> [15363,]  300 #> [15364,]  299 #> [15365,]  299 #> [15366,]  299 #> [15367,]  299 #> [15368,]  299 #> [15369,]  299 #> [15370,]  300 #> [15371,]  299 #> [15372,]  299 #> [15373,]  299 #> [15374,]  299 #> [15375,]  300 #> [15376,]  299 #> [15377,]  299 #> [15378,]  299 #> [15379,]  299 #> [15380,]  300 #> [15381,]  300 #> [15382,]  299 #> [15383,]  300 #> [15384,]  300 #> [15385,]  299 #> [15386,]  300 #> [15387,]  299 #> [15388,]  300 #> [15389,]  299 #> [15390,]  299 #> [15391,]  299 #> [15392,]  299 #> [15393,]  299 #> [15394,]  299 #> [15395,]  299 #> [15396,]  299 #> [15397,]  299 #> [15398,]  299 #> [15399,]  299 #> [15400,]  299 #> [15401,]  302 #> [15402,]  302 #> [15403,]  301 #> [15404,]  302 #> [15405,]  302 #> [15406,]  302 #> [15407,]  301 #> [15408,]  301 #> [15409,]  302 #> [15410,]  302 #> [15411,]  302 #> [15412,]  302 #> [15413,]  301 #> [15414,]  302 #> [15415,]  302 #> [15416,]  301 #> [15417,]  301 #> [15418,]  302 #> [15419,]  302 #> [15420,]  301 #> [15421,]  302 #> [15422,]  301 #> [15423,]  302 #> [15424,]  301 #> [15425,]  301 #> [15426,]  302 #> [15427,]  302 #> [15428,]  302 #> [15429,]  302 #> [15430,]  302 #> [15431,]  302 #> [15432,]  302 #> [15433,]  302 #> [15434,]  302 #> [15435,]  302 #> [15436,]  302 #> [15437,]  302 #> [15438,]  302 #> [15439,]  301 #> [15440,]  301 #> [15441,]  302 #> [15442,]  302 #> [15443,]  301 #> [15444,]  301 #> [15445,]  301 #> [15446,]  301 #> [15447,]  301 #> [15448,]  302 #> [15449,]  301 #> [15450,]  301 #> [15451,]  301 #> [15452,]  302 #> [15453,]  301 #> [15454,]  301 #> [15455,]  301 #> [15456,]  301 #> [15457,]  302 #> [15458,]  302 #> [15459,]  301 #> [15460,]  302 #> [15461,]  302 #> [15462,]  302 #> [15463,]  301 #> [15464,]  302 #> [15465,]  301 #> [15466,]  301 #> [15467,]  302 #> [15468,]  302 #> [15469,]  302 #> [15470,]  301 #> [15471,]  302 #> [15472,]  301 #> [15473,]  302 #> [15474,]  302 #> [15475,]  302 #> [15476,]  301 #> [15477,]  301 #> [15478,]  301 #> [15479,]  301 #> [15480,]  302 #> [15481,]  302 #> [15482,]  302 #> [15483,]  301 #> [15484,]  301 #> [15485,]  302 #> [15486,]  301 #> [15487,]  302 #> [15488,]  302 #> [15489,]  301 #> [15490,]  301 #> [15491,]  302 #> [15492,]  302 #> [15493,]  302 #> [15494,]  301 #> [15495,]  302 #> [15496,]  302 #> [15497,]  302 #> [15498,]  301 #> [15499,]  302 #> [15500,]  301 #> [15501,]  303 #> [15502,]  303 #> [15503,]  303 #> [15504,]  304 #> [15505,]  303 #> [15506,]  304 #> [15507,]  303 #> [15508,]  303 #> [15509,]  304 #> [15510,]  304 #> [15511,]  304 #> [15512,]  304 #> [15513,]  303 #> [15514,]  304 #> [15515,]  304 #> [15516,]  303 #> [15517,]  303 #> [15518,]  304 #> [15519,]  304 #> [15520,]  303 #> [15521,]  304 #> [15522,]  303 #> [15523,]  303 #> [15524,]  303 #> [15525,]  303 #> [15526,]  304 #> [15527,]  304 #> [15528,]  303 #> [15529,]  303 #> [15530,]  304 #> [15531,]  304 #> [15532,]  304 #> [15533,]  304 #> [15534,]  304 #> [15535,]  303 #> [15536,]  304 #> [15537,]  303 #> [15538,]  304 #> [15539,]  303 #> [15540,]  303 #> [15541,]  304 #> [15542,]  304 #> [15543,]  303 #> [15544,]  303 #> [15545,]  303 #> [15546,]  303 #> [15547,]  303 #> [15548,]  304 #> [15549,]  303 #> [15550,]  303 #> [15551,]  303 #> [15552,]  304 #> [15553,]  303 #> [15554,]  303 #> [15555,]  303 #> [15556,]  303 #> [15557,]  303 #> [15558,]  304 #> [15559,]  303 #> [15560,]  304 #> [15561,]  304 #> [15562,]  304 #> [15563,]  303 #> [15564,]  304 #> [15565,]  303 #> [15566,]  303 #> [15567,]  304 #> [15568,]  304 #> [15569,]  304 #> [15570,]  303 #> [15571,]  303 #> [15572,]  303 #> [15573,]  304 #> [15574,]  304 #> [15575,]  304 #> [15576,]  303 #> [15577,]  303 #> [15578,]  303 #> [15579,]  303 #> [15580,]  304 #> [15581,]  303 #> [15582,]  304 #> [15583,]  303 #> [15584,]  303 #> [15585,]  304 #> [15586,]  303 #> [15587,]  303 #> [15588,]  303 #> [15589,]  303 #> [15590,]  303 #> [15591,]  303 #> [15592,]  304 #> [15593,]  304 #> [15594,]  303 #> [15595,]  303 #> [15596,]  304 #> [15597,]  304 #> [15598,]  303 #> [15599,]  304 #> [15600,]  303 #> [15601,]  306 #> [15602,]  306 #> [15603,]  305 #> [15604,]  306 #> [15605,]  306 #> [15606,]  306 #> [15607,]  306 #> [15608,]  306 #> [15609,]  306 #> [15610,]  305 #> [15611,]  305 #> [15612,]  306 #> [15613,]  306 #> [15614,]  305 #> [15615,]  306 #> [15616,]  306 #> [15617,]  306 #> [15618,]  306 #> [15619,]  306 #> [15620,]  306 #> [15621,]  305 #> [15622,]  306 #> [15623,]  306 #> [15624,]  306 #> [15625,]  306 #> [15626,]  306 #> [15627,]  306 #> [15628,]  306 #> [15629,]  306 #> [15630,]  306 #> [15631,]  305 #> [15632,]  305 #> [15633,]  306 #> [15634,]  305 #> [15635,]  306 #> [15636,]  306 #> [15637,]  306 #> [15638,]  306 #> [15639,]  306 #> [15640,]  305 #> [15641,]  306 #> [15642,]  306 #> [15643,]  306 #> [15644,]  306 #> [15645,]  306 #> [15646,]  306 #> [15647,]  306 #> [15648,]  305 #> [15649,]  306 #> [15650,]  306 #> [15651,]  306 #> [15652,]  306 #> [15653,]  306 #> [15654,]  306 #> [15655,]  306 #> [15656,]  306 #> [15657,]  306 #> [15658,]  306 #> [15659,]  306 #> [15660,]  306 #> [15661,]  306 #> [15662,]  306 #> [15663,]  306 #> [15664,]  306 #> [15665,]  306 #> [15666,]  306 #> [15667,]  306 #> [15668,]  306 #> [15669,]  306 #> [15670,]  305 #> [15671,]  306 #> [15672,]  306 #> [15673,]  306 #> [15674,]  305 #> [15675,]  306 #> [15676,]  306 #> [15677,]  306 #> [15678,]  306 #> [15679,]  306 #> [15680,]  306 #> [15681,]  306 #> [15682,]  305 #> [15683,]  306 #> [15684,]  306 #> [15685,]  306 #> [15686,]  306 #> [15687,]  306 #> [15688,]  306 #> [15689,]  306 #> [15690,]  306 #> [15691,]  306 #> [15692,]  306 #> [15693,]  306 #> [15694,]  306 #> [15695,]  306 #> [15696,]  306 #> [15697,]  306 #> [15698,]  305 #> [15699,]  306 #> [15700,]  306 #> [15701,]  308 #> [15702,]  308 #> [15703,]  307 #> [15704,]  307 #> [15705,]  308 #> [15706,]  308 #> [15707,]  307 #> [15708,]  307 #> [15709,]  308 #> [15710,]  308 #> [15711,]  308 #> [15712,]  307 #> [15713,]  308 #> [15714,]  308 #> [15715,]  308 #> [15716,]  308 #> [15717,]  308 #> [15718,]  308 #> [15719,]  308 #> [15720,]  308 #> [15721,]  308 #> [15722,]  308 #> [15723,]  307 #> [15724,]  308 #> [15725,]  307 #> [15726,]  308 #> [15727,]  308 #> [15728,]  308 #> [15729,]  308 #> [15730,]  308 #> [15731,]  307 #> [15732,]  308 #> [15733,]  308 #> [15734,]  308 #> [15735,]  308 #> [15736,]  308 #> [15737,]  307 #> [15738,]  308 #> [15739,]  308 #> [15740,]  307 #> [15741,]  308 #> [15742,]  308 #> [15743,]  308 #> [15744,]  308 #> [15745,]  308 #> [15746,]  307 #> [15747,]  307 #> [15748,]  308 #> [15749,]  308 #> [15750,]  308 #> [15751,]  308 #> [15752,]  307 #> [15753,]  308 #> [15754,]  308 #> [15755,]  307 #> [15756,]  308 #> [15757,]  307 #> [15758,]  308 #> [15759,]  307 #> [15760,]  307 #> [15761,]  308 #> [15762,]  308 #> [15763,]  308 #> [15764,]  308 #> [15765,]  308 #> [15766,]  308 #> [15767,]  308 #> [15768,]  307 #> [15769,]  308 #> [15770,]  308 #> [15771,]  308 #> [15772,]  308 #> [15773,]  308 #> [15774,]  307 #> [15775,]  308 #> [15776,]  308 #> [15777,]  308 #> [15778,]  308 #> [15779,]  308 #> [15780,]  307 #> [15781,]  308 #> [15782,]  308 #> [15783,]  308 #> [15784,]  308 #> [15785,]  308 #> [15786,]  307 #> [15787,]  308 #> [15788,]  308 #> [15789,]  308 #> [15790,]  308 #> [15791,]  308 #> [15792,]  308 #> [15793,]  308 #> [15794,]  308 #> [15795,]  308 #> [15796,]  307 #> [15797,]  307 #> [15798,]  307 #> [15799,]  308 #> [15800,]  308 #> [15801,]  309 #> [15802,]  310 #> [15803,]  309 #> [15804,]  309 #> [15805,]  310 #> [15806,]  309 #> [15807,]  310 #> [15808,]  309 #> [15809,]  310 #> [15810,]  310 #> [15811,]  309 #> [15812,]  310 #> [15813,]  310 #> [15814,]  309 #> [15815,]  309 #> [15816,]  309 #> [15817,]  310 #> [15818,]  310 #> [15819,]  309 #> [15820,]  310 #> [15821,]  310 #> [15822,]  310 #> [15823,]  310 #> [15824,]  310 #> [15825,]  310 #> [15826,]  309 #> [15827,]  310 #> [15828,]  309 #> [15829,]  310 #> [15830,]  310 #> [15831,]  310 #> [15832,]  310 #> [15833,]  310 #> [15834,]  309 #> [15835,]  309 #> [15836,]  310 #> [15837,]  309 #> [15838,]  309 #> [15839,]  310 #> [15840,]  310 #> [15841,]  310 #> [15842,]  309 #> [15843,]  310 #> [15844,]  310 #> [15845,]  309 #> [15846,]  309 #> [15847,]  310 #> [15848,]  310 #> [15849,]  309 #> [15850,]  310 #> [15851,]  310 #> [15852,]  309 #> [15853,]  310 #> [15854,]  310 #> [15855,]  309 #> [15856,]  309 #> [15857,]  309 #> [15858,]  310 #> [15859,]  309 #> [15860,]  310 #> [15861,]  310 #> [15862,]  309 #> [15863,]  310 #> [15864,]  309 #> [15865,]  309 #> [15866,]  310 #> [15867,]  310 #> [15868,]  309 #> [15869,]  309 #> [15870,]  310 #> [15871,]  310 #> [15872,]  309 #> [15873,]  309 #> [15874,]  310 #> [15875,]  310 #> [15876,]  310 #> [15877,]  309 #> [15878,]  310 #> [15879,]  309 #> [15880,]  310 #> [15881,]  310 #> [15882,]  309 #> [15883,]  310 #> [15884,]  310 #> [15885,]  309 #> [15886,]  310 #> [15887,]  310 #> [15888,]  310 #> [15889,]  309 #> [15890,]  310 #> [15891,]  309 #> [15892,]  310 #> [15893,]  310 #> [15894,]  309 #> [15895,]  310 #> [15896,]  309 #> [15897,]  309 #> [15898,]  309 #> [15899,]  310 #> [15900,]  309 #> [15901,]  312 #> [15902,]  312 #> [15903,]  311 #> [15904,]  311 #> [15905,]  311 #> [15906,]  312 #> [15907,]  312 #> [15908,]  311 #> [15909,]  311 #> [15910,]  311 #> [15911,]  312 #> [15912,]  311 #> [15913,]  312 #> [15914,]  312 #> [15915,]  312 #> [15916,]  312 #> [15917,]  312 #> [15918,]  311 #> [15919,]  312 #> [15920,]  311 #> [15921,]  312 #> [15922,]  312 #> [15923,]  311 #> [15924,]  311 #> [15925,]  311 #> [15926,]  312 #> [15927,]  312 #> [15928,]  311 #> [15929,]  312 #> [15930,]  311 #> [15931,]  311 #> [15932,]  311 #> [15933,]  312 #> [15934,]  311 #> [15935,]  312 #> [15936,]  311 #> [15937,]  312 #> [15938,]  311 #> [15939,]  311 #> [15940,]  312 #> [15941,]  312 #> [15942,]  311 #> [15943,]  311 #> [15944,]  312 #> [15945,]  311 #> [15946,]  312 #> [15947,]  312 #> [15948,]  311 #> [15949,]  311 #> [15950,]  312 #> [15951,]  311 #> [15952,]  312 #> [15953,]  311 #> [15954,]  311 #> [15955,]  312 #> [15956,]  311 #> [15957,]  311 #> [15958,]  312 #> [15959,]  312 #> [15960,]  311 #> [15961,]  312 #> [15962,]  311 #> [15963,]  311 #> [15964,]  311 #> [15965,]  311 #> [15966,]  311 #> [15967,]  311 #> [15968,]  312 #> [15969,]  312 #> [15970,]  312 #> [15971,]  312 #> [15972,]  311 #> [15973,]  312 #> [15974,]  312 #> [15975,]  312 #> [15976,]  312 #> [15977,]  312 #> [15978,]  311 #> [15979,]  312 #> [15980,]  311 #> [15981,]  312 #> [15982,]  312 #> [15983,]  312 #> [15984,]  312 #> [15985,]  311 #> [15986,]  312 #> [15987,]  312 #> [15988,]  311 #> [15989,]  311 #> [15990,]  312 #> [15991,]  311 #> [15992,]  312 #> [15993,]  312 #> [15994,]  312 #> [15995,]  311 #> [15996,]  312 #> [15997,]  312 #> [15998,]  312 #> [15999,]  312 #> [16000,]  312 #> [16001,]  314 #> [16002,]  314 #> [16003,]  314 #> [16004,]  314 #> [16005,]  314 #> [16006,]  313 #> [16007,]  314 #> [16008,]  314 #> [16009,]  314 #> [16010,]  314 #> [16011,]  314 #> [16012,]  314 #> [16013,]  314 #> [16014,]  314 #> [16015,]  314 #> [16016,]  314 #> [16017,]  314 #> [16018,]  314 #> [16019,]  314 #> [16020,]  313 #> [16021,]  313 #> [16022,]  314 #> [16023,]  314 #> [16024,]  314 #> [16025,]  313 #> [16026,]  314 #> [16027,]  314 #> [16028,]  314 #> [16029,]  314 #> [16030,]  314 #> [16031,]  314 #> [16032,]  314 #> [16033,]  314 #> [16034,]  314 #> [16035,]  313 #> [16036,]  314 #> [16037,]  314 #> [16038,]  314 #> [16039,]  314 #> [16040,]  314 #> [16041,]  314 #> [16042,]  313 #> [16043,]  314 #> [16044,]  313 #> [16045,]  314 #> [16046,]  314 #> [16047,]  314 #> [16048,]  314 #> [16049,]  314 #> [16050,]  314 #> [16051,]  314 #> [16052,]  314 #> [16053,]  313 #> [16054,]  314 #> [16055,]  314 #> [16056,]  313 #> [16057,]  314 #> [16058,]  314 #> [16059,]  314 #> [16060,]  314 #> [16061,]  314 #> [16062,]  314 #> [16063,]  314 #> [16064,]  314 #> [16065,]  313 #> [16066,]  314 #> [16067,]  314 #> [16068,]  314 #> [16069,]  314 #> [16070,]  314 #> [16071,]  314 #> [16072,]  314 #> [16073,]  313 #> [16074,]  313 #> [16075,]  314 #> [16076,]  314 #> [16077,]  314 #> [16078,]  314 #> [16079,]  314 #> [16080,]  313 #> [16081,]  314 #> [16082,]  313 #> [16083,]  314 #> [16084,]  313 #> [16085,]  313 #> [16086,]  313 #> [16087,]  314 #> [16088,]  314 #> [16089,]  313 #> [16090,]  314 #> [16091,]  314 #> [16092,]  314 #> [16093,]  314 #> [16094,]  313 #> [16095,]  314 #> [16096,]  314 #> [16097,]  314 #> [16098,]  314 #> [16099,]  313 #> [16100,]  314 #> [16101,]  315 #> [16102,]  315 #> [16103,]  315 #> [16104,]  315 #> [16105,]  315 #> [16106,]  315 #> [16107,]  315 #> [16108,]  316 #> [16109,]  316 #> [16110,]  315 #> [16111,]  315 #> [16112,]  315 #> [16113,]  315 #> [16114,]  315 #> [16115,]  315 #> [16116,]  315 #> [16117,]  315 #> [16118,]  315 #> [16119,]  315 #> [16120,]  315 #> [16121,]  315 #> [16122,]  315 #> [16123,]  315 #> [16124,]  315 #> [16125,]  315 #> [16126,]  316 #> [16127,]  315 #> [16128,]  315 #> [16129,]  315 #> [16130,]  315 #> [16131,]  315 #> [16132,]  315 #> [16133,]  315 #> [16134,]  315 #> [16135,]  315 #> [16136,]  315 #> [16137,]  315 #> [16138,]  315 #> [16139,]  315 #> [16140,]  315 #> [16141,]  315 #> [16142,]  315 #> [16143,]  316 #> [16144,]  315 #> [16145,]  315 #> [16146,]  316 #> [16147,]  315 #> [16148,]  315 #> [16149,]  315 #> [16150,]  315 #> [16151,]  315 #> [16152,]  315 #> [16153,]  315 #> [16154,]  315 #> [16155,]  315 #> [16156,]  316 #> [16157,]  315 #> [16158,]  315 #> [16159,]  315 #> [16160,]  315 #> [16161,]  316 #> [16162,]  315 #> [16163,]  315 #> [16164,]  316 #> [16165,]  315 #> [16166,]  315 #> [16167,]  315 #> [16168,]  315 #> [16169,]  315 #> [16170,]  315 #> [16171,]  315 #> [16172,]  315 #> [16173,]  315 #> [16174,]  315 #> [16175,]  315 #> [16176,]  316 #> [16177,]  315 #> [16178,]  315 #> [16179,]  315 #> [16180,]  315 #> [16181,]  315 #> [16182,]  315 #> [16183,]  315 #> [16184,]  315 #> [16185,]  315 #> [16186,]  315 #> [16187,]  315 #> [16188,]  315 #> [16189,]  315 #> [16190,]  315 #> [16191,]  315 #> [16192,]  315 #> [16193,]  315 #> [16194,]  316 #> [16195,]  315 #> [16196,]  315 #> [16197,]  315 #> [16198,]  315 #> [16199,]  315 #> [16200,]  315 #> [16201,]  317 #> [16202,]  318 #> [16203,]  317 #> [16204,]  318 #> [16205,]  318 #> [16206,]  317 #> [16207,]  318 #> [16208,]  318 #> [16209,]  318 #> [16210,]  318 #> [16211,]  317 #> [16212,]  318 #> [16213,]  318 #> [16214,]  318 #> [16215,]  318 #> [16216,]  317 #> [16217,]  318 #> [16218,]  318 #> [16219,]  317 #> [16220,]  318 #> [16221,]  318 #> [16222,]  318 #> [16223,]  318 #> [16224,]  318 #> [16225,]  318 #> [16226,]  318 #> [16227,]  318 #> [16228,]  317 #> [16229,]  318 #> [16230,]  318 #> [16231,]  318 #> [16232,]  318 #> [16233,]  318 #> [16234,]  317 #> [16235,]  317 #> [16236,]  318 #> [16237,]  317 #> [16238,]  317 #> [16239,]  318 #> [16240,]  318 #> [16241,]  318 #> [16242,]  318 #> [16243,]  318 #> [16244,]  318 #> [16245,]  317 #> [16246,]  318 #> [16247,]  318 #> [16248,]  318 #> [16249,]  317 #> [16250,]  318 #> [16251,]  318 #> [16252,]  317 #> [16253,]  318 #> [16254,]  318 #> [16255,]  318 #> [16256,]  318 #> [16257,]  318 #> [16258,]  318 #> [16259,]  318 #> [16260,]  318 #> [16261,]  318 #> [16262,]  318 #> [16263,]  318 #> [16264,]  317 #> [16265,]  318 #> [16266,]  318 #> [16267,]  318 #> [16268,]  317 #> [16269,]  318 #> [16270,]  318 #> [16271,]  318 #> [16272,]  317 #> [16273,]  317 #> [16274,]  318 #> [16275,]  318 #> [16276,]  318 #> [16277,]  317 #> [16278,]  318 #> [16279,]  318 #> [16280,]  318 #> [16281,]  318 #> [16282,]  318 #> [16283,]  318 #> [16284,]  318 #> [16285,]  318 #> [16286,]  318 #> [16287,]  318 #> [16288,]  318 #> [16289,]  318 #> [16290,]  318 #> [16291,]  318 #> [16292,]  318 #> [16293,]  318 #> [16294,]  317 #> [16295,]  318 #> [16296,]  317 #> [16297,]  317 #> [16298,]  318 #> [16299,]  318 #> [16300,]  317 #> [16301,]  319 #> [16302,]  320 #> [16303,]  320 #> [16304,]  319 #> [16305,]  320 #> [16306,]  320 #> [16307,]  320 #> [16308,]  319 #> [16309,]  319 #> [16310,]  320 #> [16311,]  319 #> [16312,]  320 #> [16313,]  319 #> [16314,]  320 #> [16315,]  320 #> [16316,]  320 #> [16317,]  319 #> [16318,]  320 #> [16319,]  320 #> [16320,]  320 #> [16321,]  320 #> [16322,]  319 #> [16323,]  320 #> [16324,]  320 #> [16325,]  320 #> [16326,]  320 #> [16327,]  319 #> [16328,]  320 #> [16329,]  320 #> [16330,]  319 #> [16331,]  320 #> [16332,]  320 #> [16333,]  320 #> [16334,]  320 #> [16335,]  319 #> [16336,]  320 #> [16337,]  320 #> [16338,]  320 #> [16339,]  320 #> [16340,]  320 #> [16341,]  320 #> [16342,]  320 #> [16343,]  319 #> [16344,]  319 #> [16345,]  320 #> [16346,]  319 #> [16347,]  320 #> [16348,]  320 #> [16349,]  319 #> [16350,]  320 #> [16351,]  320 #> [16352,]  319 #> [16353,]  320 #> [16354,]  319 #> [16355,]  319 #> [16356,]  320 #> [16357,]  320 #> [16358,]  319 #> [16359,]  320 #> [16360,]  320 #> [16361,]  320 #> [16362,]  320 #> [16363,]  320 #> [16364,]  320 #> [16365,]  320 #> [16366,]  319 #> [16367,]  320 #> [16368,]  320 #> [16369,]  319 #> [16370,]  320 #> [16371,]  320 #> [16372,]  320 #> [16373,]  320 #> [16374,]  320 #> [16375,]  320 #> [16376,]  320 #> [16377,]  320 #> [16378,]  320 #> [16379,]  319 #> [16380,]  319 #> [16381,]  319 #> [16382,]  319 #> [16383,]  319 #> [16384,]  320 #> [16385,]  320 #> [16386,]  320 #> [16387,]  319 #> [16388,]  319 #> [16389,]  319 #> [16390,]  319 #> [16391,]  320 #> [16392,]  319 #> [16393,]  320 #> [16394,]  320 #> [16395,]  319 #> [16396,]  319 #> [16397,]  320 #> [16398,]  320 #> [16399,]  319 #> [16400,]  320 #> [16401,]  321 #> [16402,]  322 #> [16403,]  321 #> [16404,]  321 #> [16405,]  322 #> [16406,]  321 #> [16407,]  322 #> [16408,]  321 #> [16409,]  322 #> [16410,]  322 #> [16411,]  321 #> [16412,]  322 #> [16413,]  322 #> [16414,]  321 #> [16415,]  322 #> [16416,]  321 #> [16417,]  322 #> [16418,]  322 #> [16419,]  321 #> [16420,]  322 #> [16421,]  322 #> [16422,]  322 #> [16423,]  322 #> [16424,]  322 #> [16425,]  322 #> [16426,]  321 #> [16427,]  322 #> [16428,]  321 #> [16429,]  322 #> [16430,]  322 #> [16431,]  322 #> [16432,]  322 #> [16433,]  322 #> [16434,]  321 #> [16435,]  321 #> [16436,]  322 #> [16437,]  321 #> [16438,]  321 #> [16439,]  322 #> [16440,]  322 #> [16441,]  322 #> [16442,]  321 #> [16443,]  322 #> [16444,]  322 #> [16445,]  321 #> [16446,]  322 #> [16447,]  322 #> [16448,]  322 #> [16449,]  321 #> [16450,]  322 #> [16451,]  322 #> [16452,]  321 #> [16453,]  322 #> [16454,]  322 #> [16455,]  321 #> [16456,]  321 #> [16457,]  322 #> [16458,]  322 #> [16459,]  321 #> [16460,]  322 #> [16461,]  322 #> [16462,]  321 #> [16463,]  322 #> [16464,]  321 #> [16465,]  321 #> [16466,]  322 #> [16467,]  322 #> [16468,]  321 #> [16469,]  321 #> [16470,]  322 #> [16471,]  322 #> [16472,]  321 #> [16473,]  321 #> [16474,]  322 #> [16475,]  322 #> [16476,]  322 #> [16477,]  321 #> [16478,]  322 #> [16479,]  321 #> [16480,]  322 #> [16481,]  322 #> [16482,]  322 #> [16483,]  322 #> [16484,]  322 #> [16485,]  322 #> [16486,]  322 #> [16487,]  322 #> [16488,]  322 #> [16489,]  321 #> [16490,]  322 #> [16491,]  321 #> [16492,]  322 #> [16493,]  322 #> [16494,]  321 #> [16495,]  322 #> [16496,]  321 #> [16497,]  321 #> [16498,]  322 #> [16499,]  322 #> [16500,]  321 #> [16501,]  324 #> [16502,]  323 #> [16503,]  323 #> [16504,]  324 #> [16505,]  323 #> [16506,]  323 #> [16507,]  324 #> [16508,]  324 #> [16509,]  324 #> [16510,]  324 #> [16511,]  323 #> [16512,]  323 #> [16513,]  324 #> [16514,]  323 #> [16515,]  324 #> [16516,]  324 #> [16517,]  324 #> [16518,]  324 #> [16519,]  323 #> [16520,]  323 #> [16521,]  324 #> [16522,]  323 #> [16523,]  324 #> [16524,]  323 #> [16525,]  324 #> [16526,]  323 #> [16527,]  324 #> [16528,]  324 #> [16529,]  323 #> [16530,]  323 #> [16531,]  323 #> [16532,]  323 #> [16533,]  323 #> [16534,]  323 #> [16535,]  323 #> [16536,]  323 #> [16537,]  324 #> [16538,]  324 #> [16539,]  324 #> [16540,]  323 #> [16541,]  323 #> [16542,]  323 #> [16543,]  324 #> [16544,]  324 #> [16545,]  324 #> [16546,]  324 #> [16547,]  324 #> [16548,]  323 #> [16549,]  323 #> [16550,]  323 #> [16551,]  323 #> [16552,]  323 #> [16553,]  324 #> [16554,]  323 #> [16555,]  323 #> [16556,]  324 #> [16557,]  323 #> [16558,]  323 #> [16559,]  323 #> [16560,]  323 #> [16561,]  324 #> [16562,]  323 #> [16563,]  323 #> [16564,]  324 #> [16565,]  323 #> [16566,]  323 #> [16567,]  323 #> [16568,]  323 #> [16569,]  323 #> [16570,]  324 #> [16571,]  324 #> [16572,]  324 #> [16573,]  324 #> [16574,]  324 #> [16575,]  324 #> [16576,]  324 #> [16577,]  324 #> [16578,]  323 #> [16579,]  324 #> [16580,]  323 #> [16581,]  323 #> [16582,]  324 #> [16583,]  323 #> [16584,]  324 #> [16585,]  323 #> [16586,]  324 #> [16587,]  324 #> [16588,]  324 #> [16589,]  323 #> [16590,]  324 #> [16591,]  323 #> [16592,]  323 #> [16593,]  323 #> [16594,]  324 #> [16595,]  324 #> [16596,]  324 #> [16597,]  323 #> [16598,]  323 #> [16599,]  323 #> [16600,]  324 #> [16601,]  326 #> [16602,]  326 #> [16603,]  325 #> [16604,]  325 #> [16605,]  325 #> [16606,]  325 #> [16607,]  326 #> [16608,]  326 #> [16609,]  325 #> [16610,]  325 #> [16611,]  325 #> [16612,]  326 #> [16613,]  326 #> [16614,]  325 #> [16615,]  326 #> [16616,]  326 #> [16617,]  326 #> [16618,]  326 #> [16619,]  326 #> [16620,]  326 #> [16621,]  325 #> [16622,]  326 #> [16623,]  326 #> [16624,]  325 #> [16625,]  325 #> [16626,]  326 #> [16627,]  326 #> [16628,]  325 #> [16629,]  326 #> [16630,]  326 #> [16631,]  325 #> [16632,]  325 #> [16633,]  326 #> [16634,]  325 #> [16635,]  325 #> [16636,]  326 #> [16637,]  326 #> [16638,]  326 #> [16639,]  325 #> [16640,]  325 #> [16641,]  326 #> [16642,]  325 #> [16643,]  326 #> [16644,]  326 #> [16645,]  326 #> [16646,]  326 #> [16647,]  325 #> [16648,]  325 #> [16649,]  326 #> [16650,]  326 #> [16651,]  326 #> [16652,]  325 #> [16653,]  326 #> [16654,]  325 #> [16655,]  326 #> [16656,]  326 #> [16657,]  325 #> [16658,]  326 #> [16659,]  326 #> [16660,]  326 #> [16661,]  326 #> [16662,]  325 #> [16663,]  326 #> [16664,]  326 #> [16665,]  325 #> [16666,]  326 #> [16667,]  326 #> [16668,]  326 #> [16669,]  326 #> [16670,]  325 #> [16671,]  326 #> [16672,]  325 #> [16673,]  325 #> [16674,]  325 #> [16675,]  326 #> [16676,]  325 #> [16677,]  326 #> [16678,]  326 #> [16679,]  325 #> [16680,]  326 #> [16681,]  326 #> [16682,]  325 #> [16683,]  326 #> [16684,]  326 #> [16685,]  326 #> [16686,]  326 #> [16687,]  326 #> [16688,]  326 #> [16689,]  326 #> [16690,]  326 #> [16691,]  325 #> [16692,]  326 #> [16693,]  326 #> [16694,]  326 #> [16695,]  326 #> [16696,]  326 #> [16697,]  326 #> [16698,]  325 #> [16699,]  326 #> [16700,]  326 #> [16701,]  327 #> [16702,]  328 #> [16703,]  328 #> [16704,]  327 #> [16705,]  328 #> [16706,]  328 #> [16707,]  328 #> [16708,]  327 #> [16709,]  327 #> [16710,]  328 #> [16711,]  327 #> [16712,]  328 #> [16713,]  327 #> [16714,]  327 #> [16715,]  327 #> [16716,]  327 #> [16717,]  327 #> [16718,]  328 #> [16719,]  328 #> [16720,]  328 #> [16721,]  327 #> [16722,]  327 #> [16723,]  328 #> [16724,]  328 #> [16725,]  328 #> [16726,]  328 #> [16727,]  327 #> [16728,]  328 #> [16729,]  328 #> [16730,]  327 #> [16731,]  328 #> [16732,]  328 #> [16733,]  328 #> [16734,]  328 #> [16735,]  327 #> [16736,]  328 #> [16737,]  327 #> [16738,]  328 #> [16739,]  328 #> [16740,]  328 #> [16741,]  327 #> [16742,]  328 #> [16743,]  327 #> [16744,]  327 #> [16745,]  327 #> [16746,]  327 #> [16747,]  328 #> [16748,]  328 #> [16749,]  327 #> [16750,]  328 #> [16751,]  328 #> [16752,]  327 #> [16753,]  328 #> [16754,]  327 #> [16755,]  327 #> [16756,]  328 #> [16757,]  328 #> [16758,]  327 #> [16759,]  328 #> [16760,]  328 #> [16761,]  328 #> [16762,]  327 #> [16763,]  328 #> [16764,]  328 #> [16765,]  328 #> [16766,]  327 #> [16767,]  327 #> [16768,]  327 #> [16769,]  327 #> [16770,]  328 #> [16771,]  328 #> [16772,]  328 #> [16773,]  328 #> [16774,]  327 #> [16775,]  328 #> [16776,]  328 #> [16777,]  328 #> [16778,]  328 #> [16779,]  327 #> [16780,]  327 #> [16781,]  327 #> [16782,]  327 #> [16783,]  327 #> [16784,]  328 #> [16785,]  327 #> [16786,]  328 #> [16787,]  327 #> [16788,]  327 #> [16789,]  327 #> [16790,]  327 #> [16791,]  327 #> [16792,]  327 #> [16793,]  328 #> [16794,]  328 #> [16795,]  327 #> [16796,]  327 #> [16797,]  328 #> [16798,]  328 #> [16799,]  327 #> [16800,]  328 #> [16801,]  330 #> [16802,]  330 #> [16803,]  330 #> [16804,]  329 #> [16805,]  330 #> [16806,]  330 #> [16807,]  330 #> [16808,]  329 #> [16809,]  329 #> [16810,]  329 #> [16811,]  330 #> [16812,]  330 #> [16813,]  330 #> [16814,]  330 #> [16815,]  330 #> [16816,]  330 #> [16817,]  330 #> [16818,]  329 #> [16819,]  330 #> [16820,]  329 #> [16821,]  330 #> [16822,]  330 #> [16823,]  330 #> [16824,]  330 #> [16825,]  330 #> [16826,]  330 #> [16827,]  330 #> [16828,]  330 #> [16829,]  330 #> [16830,]  329 #> [16831,]  330 #> [16832,]  330 #> [16833,]  330 #> [16834,]  330 #> [16835,]  330 #> [16836,]  330 #> [16837,]  330 #> [16838,]  330 #> [16839,]  329 #> [16840,]  330 #> [16841,]  330 #> [16842,]  330 #> [16843,]  329 #> [16844,]  330 #> [16845,]  329 #> [16846,]  330 #> [16847,]  330 #> [16848,]  330 #> [16849,]  329 #> [16850,]  330 #> [16851,]  329 #> [16852,]  330 #> [16853,]  329 #> [16854,]  330 #> [16855,]  330 #> [16856,]  329 #> [16857,]  330 #> [16858,]  330 #> [16859,]  330 #> [16860,]  329 #> [16861,]  330 #> [16862,]  330 #> [16863,]  330 #> [16864,]  329 #> [16865,]  329 #> [16866,]  329 #> [16867,]  329 #> [16868,]  330 #> [16869,]  330 #> [16870,]  330 #> [16871,]  330 #> [16872,]  330 #> [16873,]  330 #> [16874,]  330 #> [16875,]  330 #> [16876,]  330 #> [16877,]  330 #> [16878,]  329 #> [16879,]  330 #> [16880,]  330 #> [16881,]  330 #> [16882,]  330 #> [16883,]  330 #> [16884,]  330 #> [16885,]  329 #> [16886,]  330 #> [16887,]  330 #> [16888,]  330 #> [16889,]  329 #> [16890,]  330 #> [16891,]  329 #> [16892,]  330 #> [16893,]  330 #> [16894,]  330 #> [16895,]  329 #> [16896,]  330 #> [16897,]  330 #> [16898,]  330 #> [16899,]  330 #> [16900,]  330 #> [16901,]  332 #> [16902,]  331 #> [16903,]  331 #> [16904,]  332 #> [16905,]  332 #> [16906,]  331 #> [16907,]  331 #> [16908,]  331 #> [16909,]  331 #> [16910,]  332 #> [16911,]  332 #> [16912,]  332 #> [16913,]  332 #> [16914,]  332 #> [16915,]  332 #> [16916,]  332 #> [16917,]  332 #> [16918,]  332 #> [16919,]  332 #> [16920,]  331 #> [16921,]  331 #> [16922,]  332 #> [16923,]  331 #> [16924,]  332 #> [16925,]  331 #> [16926,]  332 #> [16927,]  332 #> [16928,]  332 #> [16929,]  331 #> [16930,]  331 #> [16931,]  332 #> [16932,]  332 #> [16933,]  332 #> [16934,]  331 #> [16935,]  331 #> [16936,]  331 #> [16937,]  331 #> [16938,]  332 #> [16939,]  332 #> [16940,]  331 #> [16941,]  331 #> [16942,]  331 #> [16943,]  332 #> [16944,]  331 #> [16945,]  331 #> [16946,]  332 #> [16947,]  332 #> [16948,]  332 #> [16949,]  331 #> [16950,]  331 #> [16951,]  332 #> [16952,]  332 #> [16953,]  331 #> [16954,]  331 #> [16955,]  331 #> [16956,]  331 #> [16957,]  331 #> [16958,]  332 #> [16959,]  332 #> [16960,]  331 #> [16961,]  332 #> [16962,]  331 #> [16963,]  332 #> [16964,]  331 #> [16965,]  331 #> [16966,]  332 #> [16967,]  331 #> [16968,]  332 #> [16969,]  332 #> [16970,]  332 #> [16971,]  332 #> [16972,]  331 #> [16973,]  331 #> [16974,]  331 #> [16975,]  332 #> [16976,]  331 #> [16977,]  332 #> [16978,]  332 #> [16979,]  332 #> [16980,]  331 #> [16981,]  331 #> [16982,]  331 #> [16983,]  332 #> [16984,]  331 #> [16985,]  331 #> [16986,]  331 #> [16987,]  332 #> [16988,]  331 #> [16989,]  331 #> [16990,]  332 #> [16991,]  332 #> [16992,]  332 #> [16993,]  332 #> [16994,]  331 #> [16995,]  332 #> [16996,]  332 #> [16997,]  331 #> [16998,]  331 #> [16999,]  331 #> [17000,]  332 #> [17001,]  334 #> [17002,]  334 #> [17003,]  333 #> [17004,]  333 #> [17005,]  333 #> [17006,]  334 #> [17007,]  333 #> [17008,]  333 #> [17009,]  333 #> [17010,]  333 #> [17011,]  333 #> [17012,]  333 #> [17013,]  334 #> [17014,]  334 #> [17015,]  334 #> [17016,]  334 #> [17017,]  334 #> [17018,]  333 #> [17019,]  333 #> [17020,]  333 #> [17021,]  334 #> [17022,]  333 #> [17023,]  333 #> [17024,]  333 #> [17025,]  333 #> [17026,]  334 #> [17027,]  334 #> [17028,]  333 #> [17029,]  334 #> [17030,]  333 #> [17031,]  333 #> [17032,]  333 #> [17033,]  334 #> [17034,]  333 #> [17035,]  334 #> [17036,]  333 #> [17037,]  333 #> [17038,]  333 #> [17039,]  333 #> [17040,]  333 #> [17041,]  334 #> [17042,]  333 #> [17043,]  333 #> [17044,]  334 #> [17045,]  333 #> [17046,]  333 #> [17047,]  333 #> [17048,]  333 #> [17049,]  333 #> [17050,]  334 #> [17051,]  333 #> [17052,]  333 #> [17053,]  333 #> [17054,]  333 #> [17055,]  333 #> [17056,]  333 #> [17057,]  333 #> [17058,]  333 #> [17059,]  334 #> [17060,]  333 #> [17061,]  334 #> [17062,]  333 #> [17063,]  333 #> [17064,]  333 #> [17065,]  333 #> [17066,]  333 #> [17067,]  333 #> [17068,]  334 #> [17069,]  333 #> [17070,]  334 #> [17071,]  334 #> [17072,]  333 #> [17073,]  334 #> [17074,]  333 #> [17075,]  333 #> [17076,]  334 #> [17077,]  334 #> [17078,]  333 #> [17079,]  334 #> [17080,]  333 #> [17081,]  334 #> [17082,]  333 #> [17083,]  334 #> [17084,]  333 #> [17085,]  333 #> [17086,]  334 #> [17087,]  333 #> [17088,]  333 #> [17089,]  333 #> [17090,]  333 #> [17091,]  333 #> [17092,]  333 #> [17093,]  334 #> [17094,]  334 #> [17095,]  333 #> [17096,]  334 #> [17097,]  333 #> [17098,]  333 #> [17099,]  334 #> [17100,]  333 #> [17101,]  336 #> [17102,]  336 #> [17103,]  336 #> [17104,]  335 #> [17105,]  336 #> [17106,]  336 #> [17107,]  336 #> [17108,]  335 #> [17109,]  335 #> [17110,]  335 #> [17111,]  336 #> [17112,]  336 #> [17113,]  336 #> [17114,]  336 #> [17115,]  336 #> [17116,]  336 #> [17117,]  336 #> [17118,]  336 #> [17119,]  336 #> [17120,]  336 #> [17121,]  336 #> [17122,]  336 #> [17123,]  336 #> [17124,]  336 #> [17125,]  336 #> [17126,]  336 #> [17127,]  336 #> [17128,]  336 #> [17129,]  336 #> [17130,]  336 #> [17131,]  336 #> [17132,]  336 #> [17133,]  336 #> [17134,]  336 #> [17135,]  336 #> [17136,]  336 #> [17137,]  336 #> [17138,]  336 #> [17139,]  336 #> [17140,]  336 #> [17141,]  336 #> [17142,]  336 #> [17143,]  335 #> [17144,]  336 #> [17145,]  336 #> [17146,]  336 #> [17147,]  336 #> [17148,]  336 #> [17149,]  336 #> [17150,]  336 #> [17151,]  335 #> [17152,]  336 #> [17153,]  336 #> [17154,]  336 #> [17155,]  336 #> [17156,]  336 #> [17157,]  336 #> [17158,]  336 #> [17159,]  336 #> [17160,]  335 #> [17161,]  336 #> [17162,]  336 #> [17163,]  336 #> [17164,]  336 #> [17165,]  336 #> [17166,]  336 #> [17167,]  336 #> [17168,]  336 #> [17169,]  336 #> [17170,]  336 #> [17171,]  336 #> [17172,]  336 #> [17173,]  336 #> [17174,]  336 #> [17175,]  336 #> [17176,]  336 #> [17177,]  336 #> [17178,]  336 #> [17179,]  336 #> [17180,]  336 #> [17181,]  336 #> [17182,]  336 #> [17183,]  336 #> [17184,]  336 #> [17185,]  335 #> [17186,]  336 #> [17187,]  336 #> [17188,]  336 #> [17189,]  336 #> [17190,]  336 #> [17191,]  335 #> [17192,]  336 #> [17193,]  336 #> [17194,]  336 #> [17195,]  335 #> [17196,]  336 #> [17197,]  336 #> [17198,]  336 #> [17199,]  336 #> [17200,]  336 #> [17201,]  338 #> [17202,]  337 #> [17203,]  338 #> [17204,]  338 #> [17205,]  338 #> [17206,]  337 #> [17207,]  338 #> [17208,]  338 #> [17209,]  338 #> [17210,]  338 #> [17211,]  337 #> [17212,]  337 #> [17213,]  338 #> [17214,]  338 #> [17215,]  337 #> [17216,]  338 #> [17217,]  337 #> [17218,]  338 #> [17219,]  337 #> [17220,]  338 #> [17221,]  338 #> [17222,]  338 #> [17223,]  337 #> [17224,]  338 #> [17225,]  338 #> [17226,]  337 #> [17227,]  338 #> [17228,]  338 #> [17229,]  337 #> [17230,]  337 #> [17231,]  337 #> [17232,]  338 #> [17233,]  338 #> [17234,]  337 #> [17235,]  337 #> [17236,]  338 #> [17237,]  337 #> [17238,]  338 #> [17239,]  338 #> [17240,]  338 #> [17241,]  338 #> [17242,]  337 #> [17243,]  337 #> [17244,]  337 #> [17245,]  338 #> [17246,]  337 #> [17247,]  337 #> [17248,]  337 #> [17249,]  338 #> [17250,]  338 #> [17251,]  337 #> [17252,]  338 #> [17253,]  338 #> [17254,]  338 #> [17255,]  338 #> [17256,]  337 #> [17257,]  338 #> [17258,]  338 #> [17259,]  338 #> [17260,]  337 #> [17261,]  337 #> [17262,]  337 #> [17263,]  337 #> [17264,]  337 #> [17265,]  337 #> [17266,]  337 #> [17267,]  338 #> [17268,]  337 #> [17269,]  337 #> [17270,]  337 #> [17271,]  338 #> [17272,]  338 #> [17273,]  338 #> [17274,]  338 #> [17275,]  337 #> [17276,]  338 #> [17277,]  338 #> [17278,]  337 #> [17279,]  337 #> [17280,]  338 #> [17281,]  337 #> [17282,]  338 #> [17283,]  338 #> [17284,]  338 #> [17285,]  338 #> [17286,]  338 #> [17287,]  338 #> [17288,]  338 #> [17289,]  338 #> [17290,]  338 #> [17291,]  338 #> [17292,]  337 #> [17293,]  337 #> [17294,]  337 #> [17295,]  337 #> [17296,]  337 #> [17297,]  338 #> [17298,]  338 #> [17299,]  338 #> [17300,]  337 #> [17301,]  339 #> [17302,]  340 #> [17303,]  340 #> [17304,]  339 #> [17305,]  340 #> [17306,]  340 #> [17307,]  340 #> [17308,]  339 #> [17309,]  339 #> [17310,]  340 #> [17311,]  339 #> [17312,]  340 #> [17313,]  339 #> [17314,]  340 #> [17315,]  340 #> [17316,]  340 #> [17317,]  339 #> [17318,]  340 #> [17319,]  340 #> [17320,]  340 #> [17321,]  340 #> [17322,]  339 #> [17323,]  340 #> [17324,]  340 #> [17325,]  340 #> [17326,]  340 #> [17327,]  339 #> [17328,]  340 #> [17329,]  340 #> [17330,]  339 #> [17331,]  340 #> [17332,]  340 #> [17333,]  340 #> [17334,]  340 #> [17335,]  339 #> [17336,]  340 #> [17337,]  340 #> [17338,]  340 #> [17339,]  340 #> [17340,]  340 #> [17341,]  340 #> [17342,]  340 #> [17343,]  339 #> [17344,]  339 #> [17345,]  340 #> [17346,]  340 #> [17347,]  340 #> [17348,]  340 #> [17349,]  339 #> [17350,]  340 #> [17351,]  340 #> [17352,]  339 #> [17353,]  340 #> [17354,]  339 #> [17355,]  339 #> [17356,]  340 #> [17357,]  340 #> [17358,]  339 #> [17359,]  340 #> [17360,]  340 #> [17361,]  340 #> [17362,]  340 #> [17363,]  340 #> [17364,]  340 #> [17365,]  340 #> [17366,]  339 #> [17367,]  340 #> [17368,]  340 #> [17369,]  339 #> [17370,]  340 #> [17371,]  340 #> [17372,]  340 #> [17373,]  340 #> [17374,]  340 #> [17375,]  340 #> [17376,]  340 #> [17377,]  340 #> [17378,]  340 #> [17379,]  339 #> [17380,]  339 #> [17381,]  339 #> [17382,]  339 #> [17383,]  339 #> [17384,]  340 #> [17385,]  340 #> [17386,]  340 #> [17387,]  339 #> [17388,]  339 #> [17389,]  339 #> [17390,]  339 #> [17391,]  340 #> [17392,]  339 #> [17393,]  340 #> [17394,]  340 #> [17395,]  339 #> [17396,]  339 #> [17397,]  340 #> [17398,]  340 #> [17399,]  339 #> [17400,]  340 #> [17401,]  342 #> [17402,]  342 #> [17403,]  341 #> [17404,]  342 #> [17405,]  342 #> [17406,]  341 #> [17407,]  341 #> [17408,]  342 #> [17409,]  342 #> [17410,]  342 #> [17411,]  342 #> [17412,]  342 #> [17413,]  342 #> [17414,]  342 #> [17415,]  342 #> [17416,]  342 #> [17417,]  342 #> [17418,]  342 #> [17419,]  342 #> [17420,]  341 #> [17421,]  341 #> [17422,]  342 #> [17423,]  341 #> [17424,]  342 #> [17425,]  341 #> [17426,]  342 #> [17427,]  342 #> [17428,]  342 #> [17429,]  341 #> [17430,]  342 #> [17431,]  342 #> [17432,]  342 #> [17433,]  342 #> [17434,]  341 #> [17435,]  341 #> [17436,]  342 #> [17437,]  341 #> [17438,]  342 #> [17439,]  342 #> [17440,]  342 #> [17441,]  342 #> [17442,]  341 #> [17443,]  342 #> [17444,]  341 #> [17445,]  341 #> [17446,]  342 #> [17447,]  342 #> [17448,]  342 #> [17449,]  342 #> [17450,]  341 #> [17451,]  342 #> [17452,]  342 #> [17453,]  341 #> [17454,]  341 #> [17455,]  341 #> [17456,]  341 #> [17457,]  341 #> [17458,]  342 #> [17459,]  342 #> [17460,]  341 #> [17461,]  342 #> [17462,]  342 #> [17463,]  342 #> [17464,]  341 #> [17465,]  341 #> [17466,]  342 #> [17467,]  342 #> [17468,]  342 #> [17469,]  342 #> [17470,]  342 #> [17471,]  342 #> [17472,]  342 #> [17473,]  341 #> [17474,]  341 #> [17475,]  342 #> [17476,]  342 #> [17477,]  342 #> [17478,]  342 #> [17479,]  342 #> [17480,]  341 #> [17481,]  341 #> [17482,]  341 #> [17483,]  342 #> [17484,]  341 #> [17485,]  341 #> [17486,]  341 #> [17487,]  342 #> [17488,]  341 #> [17489,]  341 #> [17490,]  342 #> [17491,]  342 #> [17492,]  342 #> [17493,]  342 #> [17494,]  341 #> [17495,]  342 #> [17496,]  342 #> [17497,]  341 #> [17498,]  341 #> [17499,]  341 #> [17500,]  342 #> [17501,]  343 #> [17502,]  343 #> [17503,]  343 #> [17504,]  344 #> [17505,]  343 #> [17506,]  343 #> [17507,]  343 #> [17508,]  343 #> [17509,]  343 #> [17510,]  343 #> [17511,]  343 #> [17512,]  343 #> [17513,]  343 #> [17514,]  344 #> [17515,]  343 #> [17516,]  343 #> [17517,]  343 #> [17518,]  343 #> [17519,]  343 #> [17520,]  343 #> [17521,]  343 #> [17522,]  343 #> [17523,]  343 #> [17524,]  343 #> [17525,]  343 #> [17526,]  343 #> [17527,]  343 #> [17528,]  343 #> [17529,]  343 #> [17530,]  343 #> [17531,]  343 #> [17532,]  343 #> [17533,]  343 #> [17534,]  343 #> [17535,]  343 #> [17536,]  343 #> [17537,]  343 #> [17538,]  343 #> [17539,]  343 #> [17540,]  343 #> [17541,]  343 #> [17542,]  343 #> [17543,]  343 #> [17544,]  343 #> [17545,]  343 #> [17546,]  343 #> [17547,]  343 #> [17548,]  343 #> [17549,]  343 #> [17550,]  343 #> [17551,]  343 #> [17552,]  343 #> [17553,]  343 #> [17554,]  343 #> [17555,]  343 #> [17556,]  343 #> [17557,]  343 #> [17558,]  343 #> [17559,]  343 #> [17560,]  343 #> [17561,]  344 #> [17562,]  343 #> [17563,]  343 #> [17564,]  343 #> [17565,]  343 #> [17566,]  343 #> [17567,]  343 #> [17568,]  343 #> [17569,]  343 #> [17570,]  343 #> [17571,]  343 #> [17572,]  343 #> [17573,]  343 #> [17574,]  343 #> [17575,]  343 #> [17576,]  343 #> [17577,]  343 #> [17578,]  343 #> [17579,]  343 #> [17580,]  343 #> [17581,]  343 #> [17582,]  343 #> [17583,]  343 #> [17584,]  343 #> [17585,]  343 #> [17586,]  343 #> [17587,]  343 #> [17588,]  343 #> [17589,]  343 #> [17590,]  343 #> [17591,]  343 #> [17592,]  344 #> [17593,]  344 #> [17594,]  343 #> [17595,]  343 #> [17596,]  344 #> [17597,]  343 #> [17598,]  343 #> [17599,]  343 #> [17600,]  343 #> [17601,]  345 #> [17602,]  345 #> [17603,]  345 #> [17604,]  345 #> [17605,]  345 #> [17606,]  345 #> [17607,]  345 #> [17608,]  345 #> [17609,]  345 #> [17610,]  346 #> [17611,]  345 #> [17612,]  345 #> [17613,]  345 #> [17614,]  345 #> [17615,]  345 #> [17616,]  345 #> [17617,]  345 #> [17618,]  346 #> [17619,]  345 #> [17620,]  345 #> [17621,]  345 #> [17622,]  345 #> [17623,]  345 #> [17624,]  345 #> [17625,]  346 #> [17626,]  345 #> [17627,]  345 #> [17628,]  345 #> [17629,]  345 #> [17630,]  345 #> [17631,]  345 #> [17632,]  345 #> [17633,]  345 #> [17634,]  345 #> [17635,]  345 #> [17636,]  345 #> [17637,]  345 #> [17638,]  345 #> [17639,]  346 #> [17640,]  345 #> [17641,]  345 #> [17642,]  345 #> [17643,]  346 #> [17644,]  345 #> [17645,]  346 #> [17646,]  345 #> [17647,]  345 #> [17648,]  345 #> [17649,]  345 #> [17650,]  345 #> [17651,]  345 #> [17652,]  345 #> [17653,]  345 #> [17654,]  345 #> [17655,]  345 #> [17656,]  345 #> [17657,]  345 #> [17658,]  345 #> [17659,]  345 #> [17660,]  345 #> [17661,]  345 #> [17662,]  345 #> [17663,]  345 #> [17664,]  345 #> [17665,]  345 #> [17666,]  345 #> [17667,]  345 #> [17668,]  345 #> [17669,]  345 #> [17670,]  345 #> [17671,]  345 #> [17672,]  345 #> [17673,]  346 #> [17674,]  345 #> [17675,]  346 #> [17676,]  345 #> [17677,]  346 #> [17678,]  345 #> [17679,]  345 #> [17680,]  345 #> [17681,]  345 #> [17682,]  345 #> [17683,]  345 #> [17684,]  345 #> [17685,]  345 #> [17686,]  345 #> [17687,]  345 #> [17688,]  345 #> [17689,]  345 #> [17690,]  345 #> [17691,]  345 #> [17692,]  345 #> [17693,]  345 #> [17694,]  345 #> [17695,]  345 #> [17696,]  345 #> [17697,]  345 #> [17698,]  345 #> [17699,]  345 #> [17700,]  345 #> [17701,]  348 #> [17702,]  347 #> [17703,]  347 #> [17704,]  347 #> [17705,]  347 #> [17706,]  347 #> [17707,]  347 #> [17708,]  347 #> [17709,]  348 #> [17710,]  347 #> [17711,]  348 #> [17712,]  347 #> [17713,]  348 #> [17714,]  347 #> [17715,]  347 #> [17716,]  347 #> [17717,]  348 #> [17718,]  348 #> [17719,]  347 #> [17720,]  348 #> [17721,]  347 #> [17722,]  347 #> [17723,]  347 #> [17724,]  347 #> [17725,]  347 #> [17726,]  347 #> [17727,]  348 #> [17728,]  348 #> [17729,]  348 #> [17730,]  347 #> [17731,]  347 #> [17732,]  347 #> [17733,]  348 #> [17734,]  347 #> [17735,]  347 #> [17736,]  348 #> [17737,]  347 #> [17738,]  348 #> [17739,]  348 #> [17740,]  347 #> [17741,]  347 #> [17742,]  348 #> [17743,]  347 #> [17744,]  347 #> [17745,]  347 #> [17746,]  347 #> [17747,]  347 #> [17748,]  347 #> [17749,]  347 #> [17750,]  347 #> [17751,]  348 #> [17752,]  347 #> [17753,]  348 #> [17754,]  348 #> [17755,]  347 #> [17756,]  348 #> [17757,]  347 #> [17758,]  348 #> [17759,]  347 #> [17760,]  347 #> [17761,]  347 #> [17762,]  348 #> [17763,]  347 #> [17764,]  347 #> [17765,]  348 #> [17766,]  348 #> [17767,]  347 #> [17768,]  347 #> [17769,]  347 #> [17770,]  347 #> [17771,]  347 #> [17772,]  347 #> [17773,]  347 #> [17774,]  347 #> [17775,]  347 #> [17776,]  347 #> [17777,]  348 #> [17778,]  347 #> [17779,]  348 #> [17780,]  347 #> [17781,]  347 #> [17782,]  348 #> [17783,]  348 #> [17784,]  348 #> [17785,]  348 #> [17786,]  347 #> [17787,]  348 #> [17788,]  347 #> [17789,]  348 #> [17790,]  347 #> [17791,]  348 #> [17792,]  347 #> [17793,]  348 #> [17794,]  348 #> [17795,]  347 #> [17796,]  347 #> [17797,]  347 #> [17798,]  347 #> [17799,]  347 #> [17800,]  347 #> [17801,]  350 #> [17802,]  350 #> [17803,]  349 #> [17804,]  350 #> [17805,]  350 #> [17806,]  350 #> [17807,]  349 #> [17808,]  349 #> [17809,]  350 #> [17810,]  350 #> [17811,]  350 #> [17812,]  350 #> [17813,]  350 #> [17814,]  350 #> [17815,]  350 #> [17816,]  350 #> [17817,]  350 #> [17818,]  350 #> [17819,]  350 #> [17820,]  349 #> [17821,]  350 #> [17822,]  350 #> [17823,]  350 #> [17824,]  350 #> [17825,]  349 #> [17826,]  350 #> [17827,]  350 #> [17828,]  350 #> [17829,]  350 #> [17830,]  350 #> [17831,]  350 #> [17832,]  350 #> [17833,]  350 #> [17834,]  350 #> [17835,]  350 #> [17836,]  350 #> [17837,]  350 #> [17838,]  350 #> [17839,]  349 #> [17840,]  350 #> [17841,]  350 #> [17842,]  350 #> [17843,]  350 #> [17844,]  349 #> [17845,]  350 #> [17846,]  350 #> [17847,]  350 #> [17848,]  350 #> [17849,]  349 #> [17850,]  349 #> [17851,]  350 #> [17852,]  350 #> [17853,]  349 #> [17854,]  350 #> [17855,]  349 #> [17856,]  349 #> [17857,]  350 #> [17858,]  350 #> [17859,]  349 #> [17860,]  350 #> [17861,]  350 #> [17862,]  350 #> [17863,]  350 #> [17864,]  350 #> [17865,]  349 #> [17866,]  349 #> [17867,]  350 #> [17868,]  350 #> [17869,]  350 #> [17870,]  350 #> [17871,]  350 #> [17872,]  350 #> [17873,]  350 #> [17874,]  350 #> [17875,]  350 #> [17876,]  350 #> [17877,]  350 #> [17878,]  350 #> [17879,]  350 #> [17880,]  350 #> [17881,]  350 #> [17882,]  350 #> [17883,]  350 #> [17884,]  349 #> [17885,]  350 #> [17886,]  349 #> [17887,]  350 #> [17888,]  350 #> [17889,]  350 #> [17890,]  349 #> [17891,]  350 #> [17892,]  350 #> [17893,]  350 #> [17894,]  350 #> [17895,]  350 #> [17896,]  350 #> [17897,]  350 #> [17898,]  349 #> [17899,]  350 #> [17900,]  349 #> [17901,]  351 #> [17902,]  351 #> [17903,]  352 #> [17904,]  351 #> [17905,]  351 #> [17906,]  352 #> [17907,]  351 #> [17908,]  351 #> [17909,]  351 #> [17910,]  351 #> [17911,]  351 #> [17912,]  351 #> [17913,]  351 #> [17914,]  351 #> [17915,]  351 #> [17916,]  351 #> [17917,]  351 #> [17918,]  351 #> [17919,]  352 #> [17920,]  351 #> [17921,]  351 #> [17922,]  351 #> [17923,]  351 #> [17924,]  351 #> [17925,]  352 #> [17926,]  351 #> [17927,]  351 #> [17928,]  351 #> [17929,]  351 #> [17930,]  351 #> [17931,]  351 #> [17932,]  351 #> [17933,]  352 #> [17934,]  352 #> [17935,]  351 #> [17936,]  351 #> [17937,]  351 #> [17938,]  351 #> [17939,]  351 #> [17940,]  351 #> [17941,]  351 #> [17942,]  351 #> [17943,]  351 #> [17944,]  351 #> [17945,]  351 #> [17946,]  351 #> [17947,]  351 #> [17948,]  351 #> [17949,]  351 #> [17950,]  351 #> [17951,]  351 #> [17952,]  351 #> [17953,]  351 #> [17954,]  351 #> [17955,]  351 #> [17956,]  351 #> [17957,]  351 #> [17958,]  351 #> [17959,]  351 #> [17960,]  352 #> [17961,]  351 #> [17962,]  351 #> [17963,]  351 #> [17964,]  351 #> [17965,]  352 #> [17966,]  351 #> [17967,]  351 #> [17968,]  351 #> [17969,]  351 #> [17970,]  352 #> [17971,]  351 #> [17972,]  351 #> [17973,]  352 #> [17974,]  351 #> [17975,]  351 #> [17976,]  351 #> [17977,]  351 #> [17978,]  351 #> [17979,]  351 #> [17980,]  351 #> [17981,]  351 #> [17982,]  351 #> [17983,]  351 #> [17984,]  351 #> [17985,]  351 #> [17986,]  351 #> [17987,]  351 #> [17988,]  351 #> [17989,]  351 #> [17990,]  351 #> [17991,]  351 #> [17992,]  351 #> [17993,]  352 #> [17994,]  351 #> [17995,]  351 #> [17996,]  351 #> [17997,]  351 #> [17998,]  352 #> [17999,]  351 #> [18000,]  351 #> [18001,]  354 #> [18002,]  354 #> [18003,]  353 #> [18004,]  354 #> [18005,]  354 #> [18006,]  353 #> [18007,]  353 #> [18008,]  353 #> [18009,]  354 #> [18010,]  354 #> [18011,]  354 #> [18012,]  354 #> [18013,]  354 #> [18014,]  354 #> [18015,]  354 #> [18016,]  354 #> [18017,]  354 #> [18018,]  354 #> [18019,]  354 #> [18020,]  353 #> [18021,]  353 #> [18022,]  354 #> [18023,]  353 #> [18024,]  354 #> [18025,]  353 #> [18026,]  354 #> [18027,]  354 #> [18028,]  354 #> [18029,]  353 #> [18030,]  354 #> [18031,]  354 #> [18032,]  354 #> [18033,]  354 #> [18034,]  353 #> [18035,]  353 #> [18036,]  353 #> [18037,]  353 #> [18038,]  354 #> [18039,]  354 #> [18040,]  354 #> [18041,]  353 #> [18042,]  353 #> [18043,]  354 #> [18044,]  353 #> [18045,]  353 #> [18046,]  354 #> [18047,]  354 #> [18048,]  354 #> [18049,]  354 #> [18050,]  353 #> [18051,]  354 #> [18052,]  354 #> [18053,]  353 #> [18054,]  353 #> [18055,]  353 #> [18056,]  353 #> [18057,]  353 #> [18058,]  354 #> [18059,]  354 #> [18060,]  353 #> [18061,]  354 #> [18062,]  354 #> [18063,]  354 #> [18064,]  353 #> [18065,]  353 #> [18066,]  354 #> [18067,]  353 #> [18068,]  354 #> [18069,]  354 #> [18070,]  354 #> [18071,]  354 #> [18072,]  354 #> [18073,]  353 #> [18074,]  353 #> [18075,]  354 #> [18076,]  353 #> [18077,]  354 #> [18078,]  354 #> [18079,]  354 #> [18080,]  353 #> [18081,]  353 #> [18082,]  353 #> [18083,]  354 #> [18084,]  353 #> [18085,]  353 #> [18086,]  353 #> [18087,]  354 #> [18088,]  353 #> [18089,]  353 #> [18090,]  354 #> [18091,]  354 #> [18092,]  354 #> [18093,]  354 #> [18094,]  353 #> [18095,]  354 #> [18096,]  354 #> [18097,]  353 #> [18098,]  353 #> [18099,]  353 #> [18100,]  354 #> [18101,]  356 #> [18102,]  356 #> [18103,]  356 #> [18104,]  355 #> [18105,]  356 #> [18106,]  356 #> [18107,]  356 #> [18108,]  355 #> [18109,]  355 #> [18110,]  355 #> [18111,]  356 #> [18112,]  356 #> [18113,]  356 #> [18114,]  356 #> [18115,]  356 #> [18116,]  356 #> [18117,]  356 #> [18118,]  356 #> [18119,]  356 #> [18120,]  356 #> [18121,]  356 #> [18122,]  356 #> [18123,]  356 #> [18124,]  356 #> [18125,]  356 #> [18126,]  356 #> [18127,]  356 #> [18128,]  356 #> [18129,]  356 #> [18130,]  356 #> [18131,]  356 #> [18132,]  356 #> [18133,]  356 #> [18134,]  356 #> [18135,]  356 #> [18136,]  356 #> [18137,]  356 #> [18138,]  356 #> [18139,]  356 #> [18140,]  356 #> [18141,]  356 #> [18142,]  356 #> [18143,]  355 #> [18144,]  356 #> [18145,]  356 #> [18146,]  356 #> [18147,]  356 #> [18148,]  356 #> [18149,]  356 #> [18150,]  356 #> [18151,]  355 #> [18152,]  356 #> [18153,]  356 #> [18154,]  356 #> [18155,]  356 #> [18156,]  356 #> [18157,]  356 #> [18158,]  356 #> [18159,]  356 #> [18160,]  355 #> [18161,]  356 #> [18162,]  356 #> [18163,]  356 #> [18164,]  356 #> [18165,]  356 #> [18166,]  356 #> [18167,]  355 #> [18168,]  356 #> [18169,]  356 #> [18170,]  356 #> [18171,]  356 #> [18172,]  356 #> [18173,]  356 #> [18174,]  356 #> [18175,]  356 #> [18176,]  356 #> [18177,]  356 #> [18178,]  356 #> [18179,]  356 #> [18180,]  356 #> [18181,]  356 #> [18182,]  356 #> [18183,]  356 #> [18184,]  356 #> [18185,]  355 #> [18186,]  356 #> [18187,]  356 #> [18188,]  356 #> [18189,]  356 #> [18190,]  356 #> [18191,]  355 #> [18192,]  356 #> [18193,]  356 #> [18194,]  356 #> [18195,]  355 #> [18196,]  356 #> [18197,]  356 #> [18198,]  356 #> [18199,]  356 #> [18200,]  356 #> [18201,]  357 #> [18202,]  357 #> [18203,]  357 #> [18204,]  357 #> [18205,]  357 #> [18206,]  357 #> [18207,]  357 #> [18208,]  357 #> [18209,]  357 #> [18210,]  357 #> [18211,]  357 #> [18212,]  357 #> [18213,]  357 #> [18214,]  357 #> [18215,]  357 #> [18216,]  357 #> [18217,]  357 #> [18218,]  357 #> [18219,]  357 #> [18220,]  357 #> [18221,]  357 #> [18222,]  357 #> [18223,]  357 #> [18224,]  357 #> [18225,]  357 #> [18226,]  357 #> [18227,]  357 #> [18228,]  357 #> [18229,]  357 #> [18230,]  357 #> [18231,]  357 #> [18232,]  357 #> [18233,]  357 #> [18234,]  357 #> [18235,]  357 #> [18236,]  357 #> [18237,]  357 #> [18238,]  357 #> [18239,]  357 #> [18240,]  357 #> [18241,]  357 #> [18242,]  357 #> [18243,]  357 #> [18244,]  357 #> [18245,]  357 #> [18246,]  357 #> [18247,]  357 #> [18248,]  357 #> [18249,]  357 #> [18250,]  357 #> [18251,]  357 #> [18252,]  357 #> [18253,]  357 #> [18254,]  357 #> [18255,]  357 #> [18256,]  357 #> [18257,]  357 #> [18258,]  357 #> [18259,]  357 #> [18260,]  357 #> [18261,]  357 #> [18262,]  357 #> [18263,]  357 #> [18264,]  357 #> [18265,]  357 #> [18266,]  357 #> [18267,]  357 #> [18268,]  357 #> [18269,]  357 #> [18270,]  357 #> [18271,]  357 #> [18272,]  357 #> [18273,]  357 #> [18274,]  357 #> [18275,]  357 #> [18276,]  357 #> [18277,]  357 #> [18278,]  357 #> [18279,]  357 #> [18280,]  357 #> [18281,]  357 #> [18282,]  357 #> [18283,]  357 #> [18284,]  357 #> [18285,]  357 #> [18286,]  357 #> [18287,]  357 #> [18288,]  357 #> [18289,]  357 #> [18290,]  357 #> [18291,]  357 #> [18292,]  357 #> [18293,]  357 #> [18294,]  357 #> [18295,]  357 #> [18296,]  357 #> [18297,]  357 #> [18298,]  357 #> [18299,]  357 #> [18300,]  357 #> [18301,]  358 #> [18302,]  358 #> [18303,]  358 #> [18304,]  359 #> [18305,]  358 #> [18306,]  358 #> [18307,]  359 #> [18308,]  358 #> [18309,]  359 #> [18310,]  359 #> [18311,]  358 #> [18312,]  358 #> [18313,]  359 #> [18314,]  359 #> [18315,]  358 #> [18316,]  359 #> [18317,]  358 #> [18318,]  358 #> [18319,]  358 #> [18320,]  359 #> [18321,]  358 #> [18322,]  359 #> [18323,]  358 #> [18324,]  359 #> [18325,]  359 #> [18326,]  358 #> [18327,]  358 #> [18328,]  359 #> [18329,]  358 #> [18330,]  358 #> [18331,]  358 #> [18332,]  358 #> [18333,]  358 #> [18334,]  358 #> [18335,]  358 #> [18336,]  359 #> [18337,]  358 #> [18338,]  358 #> [18339,]  359 #> [18340,]  358 #> [18341,]  358 #> [18342,]  358 #> [18343,]  358 #> [18344,]  358 #> [18345,]  358 #> [18346,]  358 #> [18347,]  358 #> [18348,]  358 #> [18349,]  358 #> [18350,]  359 #> [18351,]  358 #> [18352,]  359 #> [18353,]  358 #> [18354,]  359 #> [18355,]  359 #> [18356,]  358 #> [18357,]  359 #> [18358,]  359 #> [18359,]  359 #> [18360,]  358 #> [18361,]  358 #> [18362,]  358 #> [18363,]  358 #> [18364,]  358 #> [18365,]  358 #> [18366,]  358 #> [18367,]  359 #> [18368,]  358 #> [18369,]  358 #> [18370,]  358 #> [18371,]  358 #> [18372,]  358 #> [18373,]  359 #> [18374,]  358 #> [18375,]  358 #> [18376,]  359 #> [18377,]  358 #> [18378,]  358 #> [18379,]  358 #> [18380,]  358 #> [18381,]  358 #> [18382,]  358 #> [18383,]  358 #> [18384,]  358 #> [18385,]  358 #> [18386,]  359 #> [18387,]  358 #> [18388,]  358 #> [18389,]  358 #> [18390,]  359 #> [18391,]  359 #> [18392,]  358 #> [18393,]  358 #> [18394,]  358 #> [18395,]  358 #> [18396,]  358 #> [18397,]  358 #> [18398,]  358 #> [18399,]  358 #> [18400,]  358 #> [18401,]  361 #> [18402,]  361 #> [18403,]  360 #> [18404,]  361 #> [18405,]  361 #> [18406,]  361 #> [18407,]  360 #> [18408,]  361 #> [18409,]  361 #> [18410,]  361 #> [18411,]  361 #> [18412,]  360 #> [18413,]  361 #> [18414,]  361 #> [18415,]  361 #> [18416,]  361 #> [18417,]  361 #> [18418,]  361 #> [18419,]  361 #> [18420,]  361 #> [18421,]  361 #> [18422,]  361 #> [18423,]  361 #> [18424,]  361 #> [18425,]  361 #> [18426,]  361 #> [18427,]  361 #> [18428,]  361 #> [18429,]  361 #> [18430,]  361 #> [18431,]  360 #> [18432,]  361 #> [18433,]  361 #> [18434,]  361 #> [18435,]  361 #> [18436,]  361 #> [18437,]  361 #> [18438,]  361 #> [18439,]  361 #> [18440,]  361 #> [18441,]  361 #> [18442,]  361 #> [18443,]  361 #> [18444,]  361 #> [18445,]  361 #> [18446,]  361 #> [18447,]  361 #> [18448,]  361 #> [18449,]  361 #> [18450,]  361 #> [18451,]  361 #> [18452,]  360 #> [18453,]  361 #> [18454,]  361 #> [18455,]  361 #> [18456,]  361 #> [18457,]  361 #> [18458,]  361 #> [18459,]  360 #> [18460,]  360 #> [18461,]  361 #> [18462,]  361 #> [18463,]  361 #> [18464,]  361 #> [18465,]  361 #> [18466,]  361 #> [18467,]  361 #> [18468,]  361 #> [18469,]  361 #> [18470,]  361 #> [18471,]  361 #> [18472,]  361 #> [18473,]  361 #> [18474,]  361 #> [18475,]  361 #> [18476,]  361 #> [18477,]  361 #> [18478,]  361 #> [18479,]  361 #> [18480,]  361 #> [18481,]  361 #> [18482,]  361 #> [18483,]  361 #> [18484,]  361 #> [18485,]  361 #> [18486,]  361 #> [18487,]  361 #> [18488,]  361 #> [18489,]  361 #> [18490,]  361 #> [18491,]  361 #> [18492,]  361 #> [18493,]  361 #> [18494,]  361 #> [18495,]  361 #> [18496,]  361 #> [18497,]  360 #> [18498,]  361 #> [18499,]  361 #> [18500,]  361 #> [18501,]  363 #> [18502,]  362 #> [18503,]  362 #> [18504,]  362 #> [18505,]  363 #> [18506,]  362 #> [18507,]  362 #> [18508,]  362 #> [18509,]  362 #> [18510,]  362 #> [18511,]  363 #> [18512,]  362 #> [18513,]  362 #> [18514,]  363 #> [18515,]  363 #> [18516,]  362 #> [18517,]  363 #> [18518,]  363 #> [18519,]  362 #> [18520,]  362 #> [18521,]  362 #> [18522,]  363 #> [18523,]  362 #> [18524,]  362 #> [18525,]  362 #> [18526,]  363 #> [18527,]  363 #> [18528,]  362 #> [18529,]  362 #> [18530,]  362 #> [18531,]  363 #> [18532,]  363 #> [18533,]  362 #> [18534,]  362 #> [18535,]  362 #> [18536,]  362 #> [18537,]  362 #> [18538,]  362 #> [18539,]  362 #> [18540,]  362 #> [18541,]  362 #> [18542,]  362 #> [18543,]  363 #> [18544,]  362 #> [18545,]  362 #> [18546,]  362 #> [18547,]  363 #> [18548,]  362 #> [18549,]  362 #> [18550,]  362 #> [18551,]  362 #> [18552,]  362 #> [18553,]  362 #> [18554,]  362 #> [18555,]  362 #> [18556,]  362 #> [18557,]  362 #> [18558,]  363 #> [18559,]  363 #> [18560,]  362 #> [18561,]  363 #> [18562,]  362 #> [18563,]  362 #> [18564,]  362 #> [18565,]  362 #> [18566,]  363 #> [18567,]  362 #> [18568,]  362 #> [18569,]  362 #> [18570,]  363 #> [18571,]  363 #> [18572,]  362 #> [18573,]  362 #> [18574,]  362 #> [18575,]  363 #> [18576,]  362 #> [18577,]  363 #> [18578,]  362 #> [18579,]  363 #> [18580,]  362 #> [18581,]  362 #> [18582,]  362 #> [18583,]  362 #> [18584,]  362 #> [18585,]  362 #> [18586,]  362 #> [18587,]  363 #> [18588,]  362 #> [18589,]  362 #> [18590,]  362 #> [18591,]  363 #> [18592,]  362 #> [18593,]  362 #> [18594,]  362 #> [18595,]  363 #> [18596,]  362 #> [18597,]  362 #> [18598,]  362 #> [18599,]  362 #> [18600,]  363 #> [18601,]  365 #> [18602,]  364 #> [18603,]  364 #> [18604,]  364 #> [18605,]  365 #> [18606,]  364 #> [18607,]  364 #> [18608,]  364 #> [18609,]  364 #> [18610,]  365 #> [18611,]  365 #> [18612,]  365 #> [18613,]  364 #> [18614,]  365 #> [18615,]  365 #> [18616,]  364 #> [18617,]  365 #> [18618,]  365 #> [18619,]  365 #> [18620,]  364 #> [18621,]  364 #> [18622,]  365 #> [18623,]  364 #> [18624,]  364 #> [18625,]  364 #> [18626,]  365 #> [18627,]  365 #> [18628,]  364 #> [18629,]  364 #> [18630,]  364 #> [18631,]  365 #> [18632,]  365 #> [18633,]  364 #> [18634,]  364 #> [18635,]  364 #> [18636,]  364 #> [18637,]  364 #> [18638,]  365 #> [18639,]  365 #> [18640,]  364 #> [18641,]  364 #> [18642,]  364 #> [18643,]  365 #> [18644,]  364 #> [18645,]  364 #> [18646,]  364 #> [18647,]  365 #> [18648,]  364 #> [18649,]  364 #> [18650,]  364 #> [18651,]  365 #> [18652,]  365 #> [18653,]  364 #> [18654,]  364 #> [18655,]  364 #> [18656,]  364 #> [18657,]  364 #> [18658,]  365 #> [18659,]  365 #> [18660,]  364 #> [18661,]  365 #> [18662,]  364 #> [18663,]  364 #> [18664,]  364 #> [18665,]  364 #> [18666,]  365 #> [18667,]  364 #> [18668,]  365 #> [18669,]  364 #> [18670,]  365 #> [18671,]  365 #> [18672,]  364 #> [18673,]  364 #> [18674,]  364 #> [18675,]  365 #> [18676,]  364 #> [18677,]  365 #> [18678,]  364 #> [18679,]  365 #> [18680,]  364 #> [18681,]  364 #> [18682,]  364 #> [18683,]  365 #> [18684,]  364 #> [18685,]  364 #> [18686,]  364 #> [18687,]  365 #> [18688,]  364 #> [18689,]  364 #> [18690,]  365 #> [18691,]  365 #> [18692,]  365 #> [18693,]  364 #> [18694,]  364 #> [18695,]  365 #> [18696,]  365 #> [18697,]  364 #> [18698,]  364 #> [18699,]  364 #> [18700,]  365 #> [18701,]  367 #> [18702,]  366 #> [18703,]  366 #> [18704,]  367 #> [18705,]  366 #> [18706,]  366 #> [18707,]  367 #> [18708,]  366 #> [18709,]  367 #> [18710,]  367 #> [18711,]  366 #> [18712,]  366 #> [18713,]  367 #> [18714,]  367 #> [18715,]  366 #> [18716,]  367 #> [18717,]  366 #> [18718,]  366 #> [18719,]  366 #> [18720,]  367 #> [18721,]  366 #> [18722,]  367 #> [18723,]  366 #> [18724,]  367 #> [18725,]  367 #> [18726,]  366 #> [18727,]  366 #> [18728,]  367 #> [18729,]  366 #> [18730,]  366 #> [18731,]  366 #> [18732,]  366 #> [18733,]  366 #> [18734,]  366 #> [18735,]  366 #> [18736,]  367 #> [18737,]  366 #> [18738,]  366 #> [18739,]  367 #> [18740,]  366 #> [18741,]  366 #> [18742,]  366 #> [18743,]  366 #> [18744,]  366 #> [18745,]  367 #> [18746,]  366 #> [18747,]  366 #> [18748,]  366 #> [18749,]  367 #> [18750,]  367 #> [18751,]  366 #> [18752,]  367 #> [18753,]  367 #> [18754,]  367 #> [18755,]  367 #> [18756,]  366 #> [18757,]  367 #> [18758,]  367 #> [18759,]  367 #> [18760,]  366 #> [18761,]  366 #> [18762,]  366 #> [18763,]  366 #> [18764,]  366 #> [18765,]  366 #> [18766,]  366 #> [18767,]  367 #> [18768,]  366 #> [18769,]  366 #> [18770,]  366 #> [18771,]  366 #> [18772,]  367 #> [18773,]  367 #> [18774,]  366 #> [18775,]  366 #> [18776,]  367 #> [18777,]  366 #> [18778,]  366 #> [18779,]  366 #> [18780,]  366 #> [18781,]  366 #> [18782,]  366 #> [18783,]  366 #> [18784,]  366 #> [18785,]  367 #> [18786,]  367 #> [18787,]  367 #> [18788,]  367 #> [18789,]  366 #> [18790,]  367 #> [18791,]  367 #> [18792,]  366 #> [18793,]  366 #> [18794,]  366 #> [18795,]  366 #> [18796,]  366 #> [18797,]  366 #> [18798,]  366 #> [18799,]  366 #> [18800,]  366 #> [18801,]  369 #> [18802,]  369 #> [18803,]  368 #> [18804,]  369 #> [18805,]  369 #> [18806,]  369 #> [18807,]  368 #> [18808,]  369 #> [18809,]  369 #> [18810,]  369 #> [18811,]  369 #> [18812,]  369 #> [18813,]  369 #> [18814,]  369 #> [18815,]  369 #> [18816,]  369 #> [18817,]  369 #> [18818,]  369 #> [18819,]  369 #> [18820,]  368 #> [18821,]  369 #> [18822,]  369 #> [18823,]  369 #> [18824,]  369 #> [18825,]  368 #> [18826,]  369 #> [18827,]  369 #> [18828,]  369 #> [18829,]  369 #> [18830,]  369 #> [18831,]  369 #> [18832,]  369 #> [18833,]  369 #> [18834,]  369 #> [18835,]  369 #> [18836,]  369 #> [18837,]  369 #> [18838,]  369 #> [18839,]  368 #> [18840,]  369 #> [18841,]  369 #> [18842,]  369 #> [18843,]  369 #> [18844,]  368 #> [18845,]  369 #> [18846,]  369 #> [18847,]  369 #> [18848,]  369 #> [18849,]  368 #> [18850,]  368 #> [18851,]  369 #> [18852,]  369 #> [18853,]  368 #> [18854,]  369 #> [18855,]  368 #> [18856,]  368 #> [18857,]  369 #> [18858,]  369 #> [18859,]  368 #> [18860,]  369 #> [18861,]  369 #> [18862,]  369 #> [18863,]  369 #> [18864,]  369 #> [18865,]  368 #> [18866,]  368 #> [18867,]  369 #> [18868,]  369 #> [18869,]  369 #> [18870,]  369 #> [18871,]  369 #> [18872,]  369 #> [18873,]  369 #> [18874,]  369 #> [18875,]  369 #> [18876,]  369 #> [18877,]  369 #> [18878,]  369 #> [18879,]  369 #> [18880,]  369 #> [18881,]  369 #> [18882,]  369 #> [18883,]  369 #> [18884,]  369 #> [18885,]  369 #> [18886,]  369 #> [18887,]  369 #> [18888,]  369 #> [18889,]  369 #> [18890,]  368 #> [18891,]  369 #> [18892,]  369 #> [18893,]  369 #> [18894,]  369 #> [18895,]  369 #> [18896,]  369 #> [18897,]  369 #> [18898,]  368 #> [18899,]  369 #> [18900,]  368 #> [18901,]  371 #> [18902,]  371 #> [18903,]  370 #> [18904,]  370 #> [18905,]  370 #> [18906,]  370 #> [18907,]  371 #> [18908,]  371 #> [18909,]  370 #> [18910,]  370 #> [18911,]  370 #> [18912,]  371 #> [18913,]  371 #> [18914,]  370 #> [18915,]  371 #> [18916,]  371 #> [18917,]  370 #> [18918,]  371 #> [18919,]  371 #> [18920,]  371 #> [18921,]  370 #> [18922,]  371 #> [18923,]  371 #> [18924,]  370 #> [18925,]  370 #> [18926,]  371 #> [18927,]  371 #> [18928,]  370 #> [18929,]  371 #> [18930,]  371 #> [18931,]  370 #> [18932,]  370 #> [18933,]  371 #> [18934,]  370 #> [18935,]  370 #> [18936,]  371 #> [18937,]  371 #> [18938,]  371 #> [18939,]  370 #> [18940,]  370 #> [18941,]  371 #> [18942,]  370 #> [18943,]  371 #> [18944,]  371 #> [18945,]  371 #> [18946,]  371 #> [18947,]  370 #> [18948,]  370 #> [18949,]  371 #> [18950,]  371 #> [18951,]  371 #> [18952,]  370 #> [18953,]  371 #> [18954,]  370 #> [18955,]  371 #> [18956,]  371 #> [18957,]  370 #> [18958,]  371 #> [18959,]  371 #> [18960,]  371 #> [18961,]  371 #> [18962,]  370 #> [18963,]  371 #> [18964,]  371 #> [18965,]  370 #> [18966,]  371 #> [18967,]  370 #> [18968,]  371 #> [18969,]  371 #> [18970,]  370 #> [18971,]  371 #> [18972,]  370 #> [18973,]  370 #> [18974,]  370 #> [18975,]  371 #> [18976,]  370 #> [18977,]  371 #> [18978,]  371 #> [18979,]  370 #> [18980,]  371 #> [18981,]  371 #> [18982,]  370 #> [18983,]  371 #> [18984,]  371 #> [18985,]  371 #> [18986,]  370 #> [18987,]  371 #> [18988,]  370 #> [18989,]  370 #> [18990,]  371 #> [18991,]  370 #> [18992,]  370 #> [18993,]  371 #> [18994,]  370 #> [18995,]  371 #> [18996,]  371 #> [18997,]  371 #> [18998,]  370 #> [18999,]  370 #> [19000,]  371 #> [19001,]  373 #> [19002,]  373 #> [19003,]  372 #> [19004,]  373 #> [19005,]  373 #> [19006,]  372 #> [19007,]  372 #> [19008,]  373 #> [19009,]  373 #> [19010,]  373 #> [19011,]  373 #> [19012,]  373 #> [19013,]  373 #> [19014,]  373 #> [19015,]  373 #> [19016,]  373 #> [19017,]  373 #> [19018,]  373 #> [19019,]  373 #> [19020,]  372 #> [19021,]  372 #> [19022,]  373 #> [19023,]  372 #> [19024,]  373 #> [19025,]  372 #> [19026,]  373 #> [19027,]  373 #> [19028,]  373 #> [19029,]  373 #> [19030,]  373 #> [19031,]  373 #> [19032,]  373 #> [19033,]  373 #> [19034,]  372 #> [19035,]  372 #> [19036,]  373 #> [19037,]  372 #> [19038,]  373 #> [19039,]  373 #> [19040,]  373 #> [19041,]  373 #> [19042,]  372 #> [19043,]  373 #> [19044,]  372 #> [19045,]  373 #> [19046,]  373 #> [19047,]  373 #> [19048,]  373 #> [19049,]  373 #> [19050,]  372 #> [19051,]  373 #> [19052,]  373 #> [19053,]  372 #> [19054,]  372 #> [19055,]  372 #> [19056,]  372 #> [19057,]  372 #> [19058,]  373 #> [19059,]  373 #> [19060,]  373 #> [19061,]  373 #> [19062,]  373 #> [19063,]  373 #> [19064,]  372 #> [19065,]  372 #> [19066,]  373 #> [19067,]  373 #> [19068,]  373 #> [19069,]  373 #> [19070,]  373 #> [19071,]  373 #> [19072,]  373 #> [19073,]  372 #> [19074,]  372 #> [19075,]  373 #> [19076,]  373 #> [19077,]  373 #> [19078,]  373 #> [19079,]  373 #> [19080,]  372 #> [19081,]  373 #> [19082,]  372 #> [19083,]  373 #> [19084,]  372 #> [19085,]  372 #> [19086,]  372 #> [19087,]  373 #> [19088,]  372 #> [19089,]  372 #> [19090,]  373 #> [19091,]  373 #> [19092,]  373 #> [19093,]  373 #> [19094,]  372 #> [19095,]  373 #> [19096,]  373 #> [19097,]  372 #> [19098,]  372 #> [19099,]  372 #> [19100,]  373 #> [19101,]  374 #> [19102,]  375 #> [19103,]  375 #> [19104,]  374 #> [19105,]  374 #> [19106,]  375 #> [19107,]  374 #> [19108,]  374 #> [19109,]  374 #> [19110,]  374 #> [19111,]  374 #> [19112,]  375 #> [19113,]  374 #> [19114,]  374 #> [19115,]  374 #> [19116,]  374 #> [19117,]  374 #> [19118,]  375 #> [19119,]  375 #> [19120,]  375 #> [19121,]  374 #> [19122,]  374 #> [19123,]  374 #> [19124,]  374 #> [19125,]  375 #> [19126,]  374 #> [19127,]  374 #> [19128,]  375 #> [19129,]  374 #> [19130,]  374 #> [19131,]  374 #> [19132,]  374 #> [19133,]  375 #> [19134,]  375 #> [19135,]  374 #> [19136,]  374 #> [19137,]  374 #> [19138,]  374 #> [19139,]  374 #> [19140,]  374 #> [19141,]  374 #> [19142,]  374 #> [19143,]  374 #> [19144,]  374 #> [19145,]  374 #> [19146,]  374 #> [19147,]  374 #> [19148,]  374 #> [19149,]  374 #> [19150,]  374 #> [19151,]  374 #> [19152,]  374 #> [19153,]  374 #> [19154,]  374 #> [19155,]  374 #> [19156,]  374 #> [19157,]  374 #> [19158,]  374 #> [19159,]  374 #> [19160,]  375 #> [19161,]  374 #> [19162,]  374 #> [19163,]  374 #> [19164,]  374 #> [19165,]  375 #> [19166,]  374 #> [19167,]  374 #> [19168,]  374 #> [19169,]  374 #> [19170,]  375 #> [19171,]  375 #> [19172,]  374 #> [19173,]  375 #> [19174,]  374 #> [19175,]  374 #> [19176,]  374 #> [19177,]  374 #> [19178,]  374 #> [19179,]  374 #> [19180,]  374 #> [19181,]  374 #> [19182,]  374 #> [19183,]  374 #> [19184,]  375 #> [19185,]  374 #> [19186,]  374 #> [19187,]  374 #> [19188,]  374 #> [19189,]  374 #> [19190,]  374 #> [19191,]  374 #> [19192,]  374 #> [19193,]  375 #> [19194,]  374 #> [19195,]  374 #> [19196,]  374 #> [19197,]  375 #> [19198,]  375 #> [19199,]  374 #> [19200,]  374 #> [19201,]  377 #> [19202,]  377 #> [19203,]  376 #> [19204,]  376 #> [19205,]  376 #> [19206,]  377 #> [19207,]  376 #> [19208,]  376 #> [19209,]  376 #> [19210,]  376 #> [19211,]  377 #> [19212,]  376 #> [19213,]  377 #> [19214,]  377 #> [19215,]  377 #> [19216,]  377 #> [19217,]  377 #> [19218,]  376 #> [19219,]  377 #> [19220,]  376 #> [19221,]  377 #> [19222,]  377 #> [19223,]  376 #> [19224,]  376 #> [19225,]  376 #> [19226,]  377 #> [19227,]  377 #> [19228,]  376 #> [19229,]  377 #> [19230,]  376 #> [19231,]  376 #> [19232,]  376 #> [19233,]  377 #> [19234,]  376 #> [19235,]  377 #> [19236,]  376 #> [19237,]  377 #> [19238,]  376 #> [19239,]  376 #> [19240,]  376 #> [19241,]  377 #> [19242,]  376 #> [19243,]  376 #> [19244,]  377 #> [19245,]  376 #> [19246,]  376 #> [19247,]  377 #> [19248,]  376 #> [19249,]  376 #> [19250,]  377 #> [19251,]  376 #> [19252,]  377 #> [19253,]  376 #> [19254,]  376 #> [19255,]  377 #> [19256,]  376 #> [19257,]  376 #> [19258,]  377 #> [19259,]  377 #> [19260,]  376 #> [19261,]  377 #> [19262,]  376 #> [19263,]  376 #> [19264,]  376 #> [19265,]  376 #> [19266,]  376 #> [19267,]  376 #> [19268,]  377 #> [19269,]  377 #> [19270,]  377 #> [19271,]  377 #> [19272,]  376 #> [19273,]  377 #> [19274,]  377 #> [19275,]  377 #> [19276,]  377 #> [19277,]  377 #> [19278,]  376 #> [19279,]  377 #> [19280,]  376 #> [19281,]  377 #> [19282,]  376 #> [19283,]  377 #> [19284,]  377 #> [19285,]  376 #> [19286,]  377 #> [19287,]  377 #> [19288,]  376 #> [19289,]  376 #> [19290,]  377 #> [19291,]  376 #> [19292,]  377 #> [19293,]  377 #> [19294,]  377 #> [19295,]  376 #> [19296,]  377 #> [19297,]  377 #> [19298,]  377 #> [19299,]  377 #> [19300,]  377 #> [19301,]  378 #> [19302,]  378 #> [19303,]  378 #> [19304,]  379 #> [19305,]  378 #> [19306,]  379 #> [19307,]  378 #> [19308,]  378 #> [19309,]  379 #> [19310,]  379 #> [19311,]  379 #> [19312,]  379 #> [19313,]  378 #> [19314,]  379 #> [19315,]  379 #> [19316,]  378 #> [19317,]  378 #> [19318,]  379 #> [19319,]  379 #> [19320,]  378 #> [19321,]  379 #> [19322,]  378 #> [19323,]  379 #> [19324,]  378 #> [19325,]  378 #> [19326,]  379 #> [19327,]  379 #> [19328,]  378 #> [19329,]  378 #> [19330,]  379 #> [19331,]  379 #> [19332,]  379 #> [19333,]  379 #> [19334,]  379 #> [19335,]  378 #> [19336,]  379 #> [19337,]  378 #> [19338,]  379 #> [19339,]  378 #> [19340,]  378 #> [19341,]  379 #> [19342,]  379 #> [19343,]  378 #> [19344,]  378 #> [19345,]  378 #> [19346,]  378 #> [19347,]  378 #> [19348,]  379 #> [19349,]  378 #> [19350,]  378 #> [19351,]  378 #> [19352,]  379 #> [19353,]  378 #> [19354,]  378 #> [19355,]  378 #> [19356,]  378 #> [19357,]  378 #> [19358,]  379 #> [19359,]  378 #> [19360,]  379 #> [19361,]  379 #> [19362,]  379 #> [19363,]  378 #> [19364,]  379 #> [19365,]  378 #> [19366,]  378 #> [19367,]  379 #> [19368,]  379 #> [19369,]  379 #> [19370,]  378 #> [19371,]  378 #> [19372,]  378 #> [19373,]  379 #> [19374,]  379 #> [19375,]  379 #> [19376,]  378 #> [19377,]  378 #> [19378,]  378 #> [19379,]  378 #> [19380,]  379 #> [19381,]  378 #> [19382,]  379 #> [19383,]  378 #> [19384,]  378 #> [19385,]  379 #> [19386,]  378 #> [19387,]  378 #> [19388,]  378 #> [19389,]  378 #> [19390,]  378 #> [19391,]  379 #> [19392,]  379 #> [19393,]  379 #> [19394,]  378 #> [19395,]  379 #> [19396,]  379 #> [19397,]  379 #> [19398,]  378 #> [19399,]  379 #> [19400,]  378 #> [19401,]  380 #> [19402,]  380 #> [19403,]  380 #> [19404,]  381 #> [19405,]  380 #> [19406,]  380 #> [19407,]  381 #> [19408,]  380 #> [19409,]  380 #> [19410,]  381 #> [19411,]  380 #> [19412,]  380 #> [19413,]  380 #> [19414,]  380 #> [19415,]  381 #> [19416,]  381 #> [19417,]  381 #> [19418,]  381 #> [19419,]  380 #> [19420,]  380 #> [19421,]  381 #> [19422,]  380 #> [19423,]  381 #> [19424,]  380 #> [19425,]  381 #> [19426,]  380 #> [19427,]  381 #> [19428,]  381 #> [19429,]  380 #> [19430,]  380 #> [19431,]  380 #> [19432,]  380 #> [19433,]  380 #> [19434,]  380 #> [19435,]  380 #> [19436,]  380 #> [19437,]  380 #> [19438,]  380 #> [19439,]  381 #> [19440,]  380 #> [19441,]  380 #> [19442,]  380 #> [19443,]  381 #> [19444,]  380 #> [19445,]  381 #> [19446,]  381 #> [19447,]  381 #> [19448,]  380 #> [19449,]  380 #> [19450,]  380 #> [19451,]  380 #> [19452,]  380 #> [19453,]  381 #> [19454,]  380 #> [19455,]  380 #> [19456,]  381 #> [19457,]  380 #> [19458,]  380 #> [19459,]  380 #> [19460,]  380 #> [19461,]  381 #> [19462,]  380 #> [19463,]  380 #> [19464,]  381 #> [19465,]  380 #> [19466,]  380 #> [19467,]  380 #> [19468,]  380 #> [19469,]  380 #> [19470,]  380 #> [19471,]  381 #> [19472,]  381 #> [19473,]  381 #> [19474,]  381 #> [19475,]  381 #> [19476,]  381 #> [19477,]  381 #> [19478,]  380 #> [19479,]  380 #> [19480,]  380 #> [19481,]  380 #> [19482,]  380 #> [19483,]  380 #> [19484,]  381 #> [19485,]  380 #> [19486,]  380 #> [19487,]  380 #> [19488,]  381 #> [19489,]  380 #> [19490,]  380 #> [19491,]  380 #> [19492,]  380 #> [19493,]  380 #> [19494,]  381 #> [19495,]  381 #> [19496,]  380 #> [19497,]  380 #> [19498,]  380 #> [19499,]  380 #> [19500,]  381 #> [19501,]  382 #> [19502,]  382 #> [19503,]  382 #> [19504,]  382 #> [19505,]  382 #> [19506,]  382 #> [19507,]  383 #> [19508,]  382 #> [19509,]  382 #> [19510,]  383 #> [19511,]  382 #> [19512,]  382 #> [19513,]  382 #> [19514,]  382 #> [19515,]  382 #> [19516,]  383 #> [19517,]  382 #> [19518,]  382 #> [19519,]  382 #> [19520,]  383 #> [19521,]  382 #> [19522,]  382 #> [19523,]  382 #> [19524,]  383 #> [19525,]  382 #> [19526,]  382 #> [19527,]  382 #> [19528,]  383 #> [19529,]  382 #> [19530,]  382 #> [19531,]  382 #> [19532,]  382 #> [19533,]  382 #> [19534,]  382 #> [19535,]  382 #> [19536,]  382 #> [19537,]  382 #> [19538,]  382 #> [19539,]  382 #> [19540,]  382 #> [19541,]  382 #> [19542,]  382 #> [19543,]  382 #> [19544,]  382 #> [19545,]  382 #> [19546,]  382 #> [19547,]  382 #> [19548,]  382 #> [19549,]  382 #> [19550,]  383 #> [19551,]  382 #> [19552,]  383 #> [19553,]  382 #> [19554,]  383 #> [19555,]  382 #> [19556,]  382 #> [19557,]  382 #> [19558,]  382 #> [19559,]  382 #> [19560,]  382 #> [19561,]  382 #> [19562,]  382 #> [19563,]  382 #> [19564,]  382 #> [19565,]  382 #> [19566,]  382 #> [19567,]  382 #> [19568,]  382 #> [19569,]  382 #> [19570,]  382 #> [19571,]  382 #> [19572,]  382 #> [19573,]  382 #> [19574,]  382 #> [19575,]  382 #> [19576,]  383 #> [19577,]  382 #> [19578,]  382 #> [19579,]  382 #> [19580,]  382 #> [19581,]  382 #> [19582,]  382 #> [19583,]  382 #> [19584,]  382 #> [19585,]  382 #> [19586,]  383 #> [19587,]  382 #> [19588,]  382 #> [19589,]  382 #> [19590,]  382 #> [19591,]  383 #> [19592,]  382 #> [19593,]  382 #> [19594,]  382 #> [19595,]  382 #> [19596,]  382 #> [19597,]  382 #> [19598,]  382 #> [19599,]  382 #> [19600,]  382 #> [19601,]  385 #> [19602,]  384 #> [19603,]  384 #> [19604,]  385 #> [19605,]  385 #> [19606,]  384 #> [19607,]  384 #> [19608,]  384 #> [19609,]  384 #> [19610,]  385 #> [19611,]  385 #> [19612,]  385 #> [19613,]  385 #> [19614,]  385 #> [19615,]  385 #> [19616,]  385 #> [19617,]  385 #> [19618,]  385 #> [19619,]  385 #> [19620,]  384 #> [19621,]  384 #> [19622,]  385 #> [19623,]  384 #> [19624,]  385 #> [19625,]  384 #> [19626,]  385 #> [19627,]  385 #> [19628,]  385 #> [19629,]  384 #> [19630,]  385 #> [19631,]  385 #> [19632,]  385 #> [19633,]  385 #> [19634,]  384 #> [19635,]  384 #> [19636,]  384 #> [19637,]  384 #> [19638,]  385 #> [19639,]  385 #> [19640,]  384 #> [19641,]  384 #> [19642,]  384 #> [19643,]  385 #> [19644,]  384 #> [19645,]  384 #> [19646,]  385 #> [19647,]  385 #> [19648,]  385 #> [19649,]  384 #> [19650,]  384 #> [19651,]  385 #> [19652,]  385 #> [19653,]  384 #> [19654,]  384 #> [19655,]  384 #> [19656,]  384 #> [19657,]  384 #> [19658,]  385 #> [19659,]  385 #> [19660,]  384 #> [19661,]  385 #> [19662,]  384 #> [19663,]  385 #> [19664,]  384 #> [19665,]  384 #> [19666,]  385 #> [19667,]  384 #> [19668,]  385 #> [19669,]  385 #> [19670,]  385 #> [19671,]  385 #> [19672,]  384 #> [19673,]  384 #> [19674,]  384 #> [19675,]  385 #> [19676,]  384 #> [19677,]  385 #> [19678,]  385 #> [19679,]  385 #> [19680,]  384 #> [19681,]  384 #> [19682,]  384 #> [19683,]  385 #> [19684,]  384 #> [19685,]  384 #> [19686,]  384 #> [19687,]  385 #> [19688,]  384 #> [19689,]  384 #> [19690,]  385 #> [19691,]  385 #> [19692,]  385 #> [19693,]  385 #> [19694,]  384 #> [19695,]  385 #> [19696,]  385 #> [19697,]  384 #> [19698,]  384 #> [19699,]  384 #> [19700,]  385 #> [19701,]  387 #> [19702,]  387 #> [19703,]  387 #> [19704,]  387 #> [19705,]  387 #> [19706,]  387 #> [19707,]  387 #> [19708,]  387 #> [19709,]  387 #> [19710,]  387 #> [19711,]  387 #> [19712,]  387 #> [19713,]  387 #> [19714,]  387 #> [19715,]  386 #> [19716,]  387 #> [19717,]  387 #> [19718,]  387 #> [19719,]  387 #> [19720,]  387 #> [19721,]  387 #> [19722,]  387 #> [19723,]  387 #> [19724,]  387 #> [19725,]  387 #> [19726,]  387 #> [19727,]  387 #> [19728,]  387 #> [19729,]  387 #> [19730,]  387 #> [19731,]  386 #> [19732,]  387 #> [19733,]  387 #> [19734,]  386 #> [19735,]  387 #> [19736,]  387 #> [19737,]  387 #> [19738,]  387 #> [19739,]  387 #> [19740,]  387 #> [19741,]  387 #> [19742,]  386 #> [19743,]  386 #> [19744,]  386 #> [19745,]  387 #> [19746,]  387 #> [19747,]  387 #> [19748,]  387 #> [19749,]  387 #> [19750,]  387 #> [19751,]  387 #> [19752,]  387 #> [19753,]  387 #> [19754,]  387 #> [19755,]  387 #> [19756,]  387 #> [19757,]  387 #> [19758,]  387 #> [19759,]  387 #> [19760,]  387 #> [19761,]  387 #> [19762,]  387 #> [19763,]  386 #> [19764,]  387 #> [19765,]  387 #> [19766,]  387 #> [19767,]  387 #> [19768,]  387 #> [19769,]  387 #> [19770,]  387 #> [19771,]  387 #> [19772,]  387 #> [19773,]  387 #> [19774,]  387 #> [19775,]  386 #> [19776,]  387 #> [19777,]  387 #> [19778,]  386 #> [19779,]  387 #> [19780,]  387 #> [19781,]  387 #> [19782,]  387 #> [19783,]  387 #> [19784,]  387 #> [19785,]  387 #> [19786,]  387 #> [19787,]  387 #> [19788,]  387 #> [19789,]  387 #> [19790,]  387 #> [19791,]  387 #> [19792,]  387 #> [19793,]  387 #> [19794,]  387 #> [19795,]  386 #> [19796,]  387 #> [19797,]  387 #> [19798,]  387 #> [19799,]  387 #> [19800,]  387 #> [19801,]  389 #> [19802,]  388 #> [19803,]  388 #> [19804,]  388 #> [19805,]  388 #> [19806,]  389 #> [19807,]  388 #> [19808,]  388 #> [19809,]  388 #> [19810,]  388 #> [19811,]  388 #> [19812,]  388 #> [19813,]  389 #> [19814,]  389 #> [19815,]  389 #> [19816,]  389 #> [19817,]  388 #> [19818,]  388 #> [19819,]  388 #> [19820,]  388 #> [19821,]  389 #> [19822,]  388 #> [19823,]  388 #> [19824,]  388 #> [19825,]  388 #> [19826,]  388 #> [19827,]  388 #> [19828,]  388 #> [19829,]  389 #> [19830,]  388 #> [19831,]  388 #> [19832,]  388 #> [19833,]  389 #> [19834,]  388 #> [19835,]  388 #> [19836,]  388 #> [19837,]  388 #> [19838,]  388 #> [19839,]  388 #> [19840,]  388 #> [19841,]  389 #> [19842,]  388 #> [19843,]  388 #> [19844,]  389 #> [19845,]  388 #> [19846,]  388 #> [19847,]  388 #> [19848,]  388 #> [19849,]  388 #> [19850,]  389 #> [19851,]  388 #> [19852,]  388 #> [19853,]  388 #> [19854,]  388 #> [19855,]  388 #> [19856,]  388 #> [19857,]  388 #> [19858,]  388 #> [19859,]  389 #> [19860,]  388 #> [19861,]  389 #> [19862,]  388 #> [19863,]  388 #> [19864,]  388 #> [19865,]  388 #> [19866,]  388 #> [19867,]  388 #> [19868,]  389 #> [19869,]  388 #> [19870,]  389 #> [19871,]  388 #> [19872,]  388 #> [19873,]  389 #> [19874,]  388 #> [19875,]  388 #> [19876,]  389 #> [19877,]  388 #> [19878,]  388 #> [19879,]  388 #> [19880,]  388 #> [19881,]  389 #> [19882,]  388 #> [19883,]  389 #> [19884,]  388 #> [19885,]  388 #> [19886,]  389 #> [19887,]  388 #> [19888,]  388 #> [19889,]  388 #> [19890,]  388 #> [19891,]  388 #> [19892,]  388 #> [19893,]  388 #> [19894,]  388 #> [19895,]  388 #> [19896,]  389 #> [19897,]  388 #> [19898,]  388 #> [19899,]  389 #> [19900,]  388 #> [19901,]  390 #> [19902,]  390 #> [19903,]  390 #> [19904,]  390 #> [19905,]  390 #> [19906,]  390 #> [19907,]  390 #> [19908,]  390 #> [19909,]  390 #> [19910,]  390 #> [19911,]  390 #> [19912,]  390 #> [19913,]  390 #> [19914,]  390 #> [19915,]  390 #> [19916,]  390 #> [19917,]  390 #> [19918,]  390 #> [19919,]  390 #> [19920,]  390 #> [19921,]  390 #> [19922,]  390 #> [19923,]  390 #> [19924,]  390 #> [19925,]  390 #> [19926,]  390 #> [19927,]  390 #> [19928,]  390 #> [19929,]  390 #> [19930,]  390 #> [19931,]  390 #> [19932,]  390 #> [19933,]  390 #> [19934,]  390 #> [19935,]  390 #> [19936,]  390 #> [19937,]  390 #> [19938,]  390 #> [19939,]  390 #> [19940,]  390 #> [19941,]  390 #> [19942,]  390 #> [19943,]  390 #> [19944,]  390 #> [19945,]  390 #> [19946,]  390 #> [19947,]  390 #> [19948,]  390 #> [19949,]  390 #> [19950,]  390 #> [19951,]  390 #> [19952,]  390 #> [19953,]  390 #> [19954,]  390 #> [19955,]  390 #> [19956,]  390 #> [19957,]  390 #> [19958,]  390 #> [19959,]  390 #> [19960,]  390 #> [19961,]  390 #> [19962,]  390 #> [19963,]  390 #> [19964,]  390 #> [19965,]  390 #> [19966,]  390 #> [19967,]  390 #> [19968,]  390 #> [19969,]  390 #> [19970,]  390 #> [19971,]  390 #> [19972,]  390 #> [19973,]  390 #> [19974,]  390 #> [19975,]  390 #> [19976,]  390 #> [19977,]  390 #> [19978,]  390 #> [19979,]  390 #> [19980,]  390 #> [19981,]  390 #> [19982,]  390 #> [19983,]  390 #> [19984,]  390 #> [19985,]  390 #> [19986,]  390 #> [19987,]  390 #> [19988,]  390 #> [19989,]  390 #> [19990,]  390 #> [19991,]  390 #> [19992,]  390 #> [19993,]  390 #> [19994,]  390 #> [19995,]  390 #> [19996,]  390 #> [19997,]  390 #> [19998,]  390 #> [19999,]  390 #> [20000,]  390 computeForestLeafIndices(bart_model, X, \"mean\", c(1,3,9)) #>          [,1] [,2] [,3] #>     [1,]    1    1    1 #>     [2,]    1    1    1 #>     [3,]    0    0    0 #>     [4,]    0    0    0 #>     [5,]    0    0    0 #>     [6,]    0    0    0 #>     [7,]    1    1    1 #>     [8,]    1    1    1 #>     [9,]    0    0    0 #>    [10,]    0    0    0 #>    [11,]    0    0    0 #>    [12,]    1    1    1 #>    [13,]    1    1    1 #>    [14,]    0    0    0 #>    [15,]    1    1    1 #>    [16,]    1    1    1 #>    [17,]    0    0    0 #>    [18,]    1    1    1 #>    [19,]    1    1    1 #>    [20,]    1    1    1 #>    [21,]    0    0    0 #>    [22,]    1    1    1 #>    [23,]    1    1    1 #>    [24,]    0    0    0 #>    [25,]    0    0    0 #>    [26,]    1    1    1 #>    [27,]    1    1    1 #>    [28,]    0    0    0 #>    [29,]    1    1    1 #>    [30,]    1    1    1 #>    [31,]    0    0    0 #>    [32,]    0    0    0 #>    [33,]    1    1    1 #>    [34,]    0    0    0 #>    [35,]    0    0    0 #>    [36,]    1    1    1 #>    [37,]    1    1    1 #>    [38,]    1    1    1 #>    [39,]    0    0    0 #>    [40,]    0    0    0 #>    [41,]    1    1    1 #>    [42,]    0    0    0 #>    [43,]    1    1    1 #>    [44,]    1    1    1 #>    [45,]    1    1    1 #>    [46,]    1    1    1 #>    [47,]    0    0    0 #>    [48,]    0    0    0 #>    [49,]    1    1    1 #>    [50,]    1    1    1 #>    [51,]    1    1    1 #>    [52,]    0    0    0 #>    [53,]    1    1    1 #>    [54,]    0    0    0 #>    [55,]    1    1    1 #>    [56,]    1    1    1 #>    [57,]    0    0    0 #>    [58,]    1    1    1 #>    [59,]    1    1    1 #>    [60,]    1    1    1 #>    [61,]    1    1    1 #>    [62,]    0    0    0 #>    [63,]    1    1    1 #>    [64,]    1    1    1 #>    [65,]    0    0    0 #>    [66,]    1    1    1 #>    [67,]    0    0    0 #>    [68,]    1    1    1 #>    [69,]    1    1    1 #>    [70,]    0    0    0 #>    [71,]    1    1    1 #>    [72,]    0    0    0 #>    [73,]    0    0    0 #>    [74,]    0    0    0 #>    [75,]    1    1    1 #>    [76,]    0    0    0 #>    [77,]    1    1    1 #>    [78,]    1    1    1 #>    [79,]    0    0    0 #>    [80,]    1    1    1 #>    [81,]    1    1    1 #>    [82,]    0    0    0 #>    [83,]    1    1    1 #>    [84,]    1    1    1 #>    [85,]    1    1    1 #>    [86,]    0    0    0 #>    [87,]    1    1    1 #>    [88,]    0    0    0 #>    [89,]    0    0    0 #>    [90,]    1    1    1 #>    [91,]    0    0    0 #>    [92,]    0    0    0 #>    [93,]    1    1    1 #>    [94,]    0    0    0 #>    [95,]    1    1    1 #>    [96,]    1    1    1 #>    [97,]    1    1    1 #>    [98,]    0    0    0 #>    [99,]    0    0    0 #>   [100,]    1    1    1 #>   [101,]    3    3    3 #>   [102,]    2    2    2 #>   [103,]    2    2    2 #>   [104,]    3    3    3 #>   [105,]    2    2    2 #>   [106,]    3    3    3 #>   [107,]    2    2    2 #>   [108,]    2    2    2 #>   [109,]    3    3    3 #>   [110,]    3    3    3 #>   [111,]    3    3    3 #>   [112,]    3    3    3 #>   [113,]    2    2    2 #>   [114,]    3    3    3 #>   [115,]    3    3    3 #>   [116,]    2    2    2 #>   [117,]    2    2    2 #>   [118,]    3    3    3 #>   [119,]    3    3    3 #>   [120,]    2    2    2 #>   [121,]    3    3    3 #>   [122,]    2    2    2 #>   [123,]    3    3    3 #>   [124,]    2    2    2 #>   [125,]    2    2    2 #>   [126,]    3    3    3 #>   [127,]    3    3    3 #>   [128,]    2    2    2 #>   [129,]    2    2    2 #>   [130,]    3    3    3 #>   [131,]    3    3    3 #>   [132,]    3    3    3 #>   [133,]    3    3    3 #>   [134,]    3    3    3 #>   [135,]    3    3    3 #>   [136,]    3    3    3 #>   [137,]    3    3    3 #>   [138,]    3    3    3 #>   [139,]    2    2    2 #>   [140,]    2    2    2 #>   [141,]    3    3    3 #>   [142,]    3    3    3 #>   [143,]    2    2    2 #>   [144,]    2    2    2 #>   [145,]    2    2    2 #>   [146,]    2    2    2 #>   [147,]    2    2    2 #>   [148,]    3    3    3 #>   [149,]    2    2    2 #>   [150,]    2    2    2 #>   [151,]    2    2    2 #>   [152,]    3    3    3 #>   [153,]    2    2    2 #>   [154,]    2    2    2 #>   [155,]    2    2    2 #>   [156,]    2    2    2 #>   [157,]    3    3    3 #>   [158,]    3    3    3 #>   [159,]    2    2    2 #>   [160,]    3    3    3 #>   [161,]    3    3    3 #>   [162,]    3    3    3 #>   [163,]    2    2    2 #>   [164,]    3    3    3 #>   [165,]    2    2    2 #>   [166,]    2    2    2 #>   [167,]    3    3    3 #>   [168,]    3    3    3 #>   [169,]    3    3    3 #>   [170,]    2    2    2 #>   [171,]    2    2    2 #>   [172,]    2    2    2 #>   [173,]    3    3    3 #>   [174,]    3    3    3 #>   [175,]    3    3    3 #>   [176,]    2    2    2 #>   [177,]    2    2    2 #>   [178,]    2    2    2 #>   [179,]    2    2    2 #>   [180,]    3    3    3 #>   [181,]    2    2    2 #>   [182,]    3    3    3 #>   [183,]    2    2    2 #>   [184,]    2    2    2 #>   [185,]    3    3    3 #>   [186,]    2    2    2 #>   [187,]    3    3    3 #>   [188,]    3    3    3 #>   [189,]    2    2    2 #>   [190,]    2    2    2 #>   [191,]    3    3    3 #>   [192,]    3    3    3 #>   [193,]    3    3    3 #>   [194,]    2    2    2 #>   [195,]    3    3    3 #>   [196,]    3    3    3 #>   [197,]    3    3    3 #>   [198,]    2    2    2 #>   [199,]    3    3    3 #>   [200,]    2    2    2 #>   [201,]    5    5    5 #>   [202,]    5    5    5 #>   [203,]    4    4    4 #>   [204,]    5    5    5 #>   [205,]    4    4    4 #>   [206,]    4    4    4 #>   [207,]    5    5    5 #>   [208,]    5    5    5 #>   [209,]    5    5    5 #>   [210,]    5    5    5 #>   [211,]    4    4    4 #>   [212,]    4    4    4 #>   [213,]    5    5    5 #>   [214,]    4    4    4 #>   [215,]    5    5    5 #>   [216,]    5    5    5 #>   [217,]    5    5    5 #>   [218,]    5    5    5 #>   [219,]    4    4    4 #>   [220,]    4    4    4 #>   [221,]    5    5    5 #>   [222,]    4    4    4 #>   [223,]    5    5    5 #>   [224,]    4    4    4 #>   [225,]    5    5    5 #>   [226,]    4    4    4 #>   [227,]    5    5    5 #>   [228,]    5    5    5 #>   [229,]    4    4    4 #>   [230,]    4    4    4 #>   [231,]    5    5    5 #>   [232,]    4    4    4 #>   [233,]    4    4    4 #>   [234,]    4    4    4 #>   [235,]    4    4    4 #>   [236,]    4    4    4 #>   [237,]    5    5    5 #>   [238,]    5    5    5 #>   [239,]    5    5    5 #>   [240,]    4    4    4 #>   [241,]    4    4    4 #>   [242,]    4    4    4 #>   [243,]    5    5    5 #>   [244,]    5    5    5 #>   [245,]    5    5    5 #>   [246,]    5    5    5 #>   [247,]    5    5    5 #>   [248,]    4    4    4 #>   [249,]    5    5    5 #>   [250,]    5    5    5 #>   [251,]    4    4    4 #>   [252,]    4    4    4 #>   [253,]    5    5    5 #>   [254,]    4    4    4 #>   [255,]    4    4    4 #>   [256,]    5    5    5 #>   [257,]    4    4    4 #>   [258,]    4    4    4 #>   [259,]    5    5    5 #>   [260,]    4    4    4 #>   [261,]    5    5    5 #>   [262,]    4    4    4 #>   [263,]    4    4    4 #>   [264,]    5    5    5 #>   [265,]    5    5    5 #>   [266,]    4    4    4 #>   [267,]    4    4    4 #>   [268,]    4    4    4 #>   [269,]    4    4    4 #>   [270,]    5    5    5 #>   [271,]    5    5    5 #>   [272,]    5    5    5 #>   [273,]    5    5    5 #>   [274,]    5    5    5 #>   [275,]    5    5    5 #>   [276,]    5    5    5 #>   [277,]    5    5    5 #>   [278,]    4    4    4 #>   [279,]    5    5    5 #>   [280,]    4    4    4 #>   [281,]    4    4    4 #>   [282,]    5    5    5 #>   [283,]    4    4    4 #>   [284,]    5    5    5 #>   [285,]    5    5    5 #>   [286,]    5    5    5 #>   [287,]    5    5    5 #>   [288,]    5    5    5 #>   [289,]    4    4    4 #>   [290,]    5    5    5 #>   [291,]    4    4    4 #>   [292,]    5    5    5 #>   [293,]    4    4    4 #>   [294,]    5    5    5 #>   [295,]    5    5    5 #>   [296,]    5    5    5 #>   [297,]    4    4    4 #>   [298,]    4    4    4 #>   [299,]    4    4    4 #>   [300,]    5    5    5 #>   [301,]    7    7    7 #>   [302,]    6    6    6 #>   [303,]    6    6    6 #>   [304,]    6    6    6 #>   [305,]    7    7    7 #>   [306,]    6    6    6 #>   [307,]    6    6    6 #>   [308,]    6    6    6 #>   [309,]    6    6    6 #>   [310,]    7    7    7 #>   [311,]    7    7    7 #>   [312,]    7    7    7 #>   [313,]    6    6    6 #>   [314,]    7    7    7 #>   [315,]    7    7    7 #>   [316,]    6    6    6 #>   [317,]    7    7    7 #>   [318,]    7    7    7 #>   [319,]    6    6    6 #>   [320,]    6    6    6 #>   [321,]    6    6    6 #>   [322,]    7    7    7 #>   [323,]    6    6    6 #>   [324,]    6    6    6 #>   [325,]    6    6    6 #>   [326,]    7    7    7 #>   [327,]    7    7    7 #>   [328,]    6    6    6 #>   [329,]    6    6    6 #>   [330,]    6    6    6 #>   [331,]    7    7    7 #>   [332,]    7    7    7 #>   [333,]    6    6    6 #>   [334,]    6    6    6 #>   [335,]    6    6    6 #>   [336,]    6    6    6 #>   [337,]    6    6    6 #>   [338,]    6    6    6 #>   [339,]    6    6    6 #>   [340,]    6    6    6 #>   [341,]    6    6    6 #>   [342,]    6    6    6 #>   [343,]    7    7    7 #>   [344,]    6    6    6 #>   [345,]    6    6    6 #>   [346,]    6    6    6 #>   [347,]    7    7    7 #>   [348,]    6    6    6 #>   [349,]    6    6    6 #>   [350,]    6    6    6 #>   [351,]    6    6    6 #>   [352,]    7    7    7 #>   [353,]    6    6    6 #>   [354,]    6    6    6 #>   [355,]    6    6    6 #>   [356,]    6    6    6 #>   [357,]    6    6    6 #>   [358,]    7    7    7 #>   [359,]    7    7    7 #>   [360,]    6    6    6 #>   [361,]    7    7    7 #>   [362,]    6    6    6 #>   [363,]    6    6    6 #>   [364,]    6    6    6 #>   [365,]    6    6    6 #>   [366,]    7    7    7 #>   [367,]    6    6    6 #>   [368,]    6    6    6 #>   [369,]    6    6    6 #>   [370,]    7    7    7 #>   [371,]    7    7    7 #>   [372,]    6    6    6 #>   [373,]    6    6    6 #>   [374,]    6    6    6 #>   [375,]    7    7    7 #>   [376,]    6    6    6 #>   [377,]    7    7    7 #>   [378,]    6    6    6 #>   [379,]    7    7    7 #>   [380,]    6    6    6 #>   [381,]    6    6    6 #>   [382,]    6    6    6 #>   [383,]    6    6    6 #>   [384,]    6    6    6 #>   [385,]    6    6    6 #>   [386,]    6    6    6 #>   [387,]    7    7    7 #>   [388,]    6    6    6 #>   [389,]    6    6    6 #>   [390,]    7    7    7 #>   [391,]    7    7    7 #>   [392,]    6    6    6 #>   [393,]    6    6    6 #>   [394,]    6    6    6 #>   [395,]    7    7    7 #>   [396,]    6    6    6 #>   [397,]    6    6    6 #>   [398,]    6    6    6 #>   [399,]    6    6    6 #>   [400,]    7    7    7 #>   [401,]    9    9    8 #>   [402,]    9    9    8 #>   [403,]    8    8    9 #>   [404,]    8    8    8 #>   [405,]    8    8    8 #>   [406,]    9    9    9 #>   [407,]    8    8    8 #>   [408,]    8    8    8 #>   [409,]    8    8    8 #>   [410,]    8    8    8 #>   [411,]    8    8    8 #>   [412,]    8    8    9 #>   [413,]    9    9    8 #>   [414,]    9    9    8 #>   [415,]    9    9    8 #>   [416,]    9    9    8 #>   [417,]    9    9    8 #>   [418,]    8    8    9 #>   [419,]    8    8    9 #>   [420,]    8    8    9 #>   [421,]    9    9    8 #>   [422,]    9    9    8 #>   [423,]    8    8    8 #>   [424,]    8    8    8 #>   [425,]    8    8    9 #>   [426,]    9    9    8 #>   [427,]    9    9    8 #>   [428,]    8    8    9 #>   [429,]    9    9    8 #>   [430,]    8    8    8 #>   [431,]    8    8    8 #>   [432,]    8    8    8 #>   [433,]    9    9    9 #>   [434,]    8    8    9 #>   [435,]    9    9    8 #>   [436,]    8    8    8 #>   [437,]    9    9    8 #>   [438,]    8    8    8 #>   [439,]    8    8    8 #>   [440,]    8    8    8 #>   [441,]    9    9    8 #>   [442,]    8    8    8 #>   [443,]    8    8    8 #>   [444,]    9    9    8 #>   [445,]    8    8    8 #>   [446,]    8    8    8 #>   [447,]    9    9    8 #>   [448,]    8    8    8 #>   [449,]    8    8    8 #>   [450,]    9    9    8 #>   [451,]    8    8    8 #>   [452,]    9    9    8 #>   [453,]    8    8    8 #>   [454,]    8    8    8 #>   [455,]    8    8    8 #>   [456,]    8    8    8 #>   [457,]    8    8    8 #>   [458,]    9    9    8 #>   [459,]    9    9    8 #>   [460,]    8    8    9 #>   [461,]    9    9    8 #>   [462,]    8    8    8 #>   [463,]    8    8    8 #>   [464,]    8    8    8 #>   [465,]    8    8    9 #>   [466,]    8    8    8 #>   [467,]    8    8    8 #>   [468,]    9    9    8 #>   [469,]    8    8    8 #>   [470,]    9    9    9 #>   [471,]    9    9    8 #>   [472,]    8    8    8 #>   [473,]    9    9    9 #>   [474,]    8    8    8 #>   [475,]    8    8    8 #>   [476,]    9    9    8 #>   [477,]    9    9    8 #>   [478,]    8    8    8 #>   [479,]    9    9    8 #>   [480,]    8    8    8 #>   [481,]    9    9    8 #>   [482,]    8    8    8 #>   [483,]    9    9    8 #>   [484,]    8    8    9 #>   [485,]    8    8    8 #>   [486,]    9    9    8 #>   [487,]    8    8    8 #>   [488,]    8    8    8 #>   [489,]    8    8    8 #>   [490,]    9    9    8 #>   [491,]    8    8    8 #>   [492,]    8    8    8 #>   [493,]    9    9    9 #>   [494,]    9    9    8 #>   [495,]    8    8    8 #>   [496,]    9    9    8 #>   [497,]    8    8    9 #>   [498,]    8    8    9 #>   [499,]    9    9    8 #>   [500,]    9    9    8 #>   [501,]   10   10   10 #>   [502,]   10   10   10 #>   [503,]   10   10   10 #>   [504,]   11   11   11 #>   [505,]   10   10   10 #>   [506,]   10   10   10 #>   [507,]   11   11   10 #>   [508,]   10   10   10 #>   [509,]   11   11   10 #>   [510,]   11   11   11 #>   [511,]   10   10   10 #>   [512,]   10   10   10 #>   [513,]   10   10   10 #>   [514,]   11   11   10 #>   [515,]   10   10   10 #>   [516,]   11   11   10 #>   [517,]   10   10   10 #>   [518,]   10   10   11 #>   [519,]   10   10   10 #>   [520,]   11   11   10 #>   [521,]   10   10   11 #>   [522,]   10   10   10 #>   [523,]   10   10   10 #>   [524,]   11   11   10 #>   [525,]   11   11   11 #>   [526,]   10   10   10 #>   [527,]   10   10   10 #>   [528,]   11   11   10 #>   [529,]   10   10   10 #>   [530,]   10   10   10 #>   [531,]   10   10   10 #>   [532,]   10   10   10 #>   [533,]   10   10   10 #>   [534,]   10   10   10 #>   [535,]   10   10   10 #>   [536,]   11   11   10 #>   [537,]   10   10   10 #>   [538,]   10   10   10 #>   [539,]   11   11   11 #>   [540,]   10   10   10 #>   [541,]   10   10   10 #>   [542,]   10   10   10 #>   [543,]   10   10   11 #>   [544,]   10   10   10 #>   [545,]   10   10   11 #>   [546,]   10   10   10 #>   [547,]   10   10   10 #>   [548,]   10   10   10 #>   [549,]   10   10   10 #>   [550,]   11   11   10 #>   [551,]   10   10   10 #>   [552,]   11   11   10 #>   [553,]   10   10   11 #>   [554,]   11   11   10 #>   [555,]   10   10   10 #>   [556,]   10   10   10 #>   [557,]   11   11   10 #>   [558,]   10   10   10 #>   [559,]   11   11   10 #>   [560,]   10   10   10 #>   [561,]   10   10   10 #>   [562,]   10   10   10 #>   [563,]   10   10   10 #>   [564,]   10   10   10 #>   [565,]   10   10   10 #>   [566,]   10   10   10 #>   [567,]   11   11   10 #>   [568,]   10   10   10 #>   [569,]   10   10   10 #>   [570,]   10   10   10 #>   [571,]   10   10   10 #>   [572,]   10   10   11 #>   [573,]   11   11   11 #>   [574,]   10   10   11 #>   [575,]   10   10   11 #>   [576,]   11   11   11 #>   [577,]   10   10   11 #>   [578,]   10   10   10 #>   [579,]   10   10   10 #>   [580,]   10   10   10 #>   [581,]   10   10   10 #>   [582,]   10   10   10 #>   [583,]   10   10   10 #>   [584,]   10   10   11 #>   [585,]   10   10   10 #>   [586,]   11   11   10 #>   [587,]   10   10   10 #>   [588,]   10   10   10 #>   [589,]   10   10   10 #>   [590,]   11   11   10 #>   [591,]   11   11   10 #>   [592,]   10   10   10 #>   [593,]   10   10   10 #>   [594,]   10   10   11 #>   [595,]   10   10   11 #>   [596,]   10   10   10 #>   [597,]   10   10   10 #>   [598,]   10   10   10 #>   [599,]   10   10   10 #>   [600,]   10   10   10 #>   [601,]   13   13   13 #>   [602,]   13   13   13 #>   [603,]   12   12   12 #>   [604,]   13   13   13 #>   [605,]   13   13   13 #>   [606,]   14   14   13 #>   [607,]   12   12   12 #>   [608,]   14   14   13 #>   [609,]   14   14   13 #>   [610,]   13   13   13 #>   [611,]   13   13   13 #>   [612,]   14   14   13 #>   [613,]   13   13   13 #>   [614,]   13   13   13 #>   [615,]   14   14   13 #>   [616,]   13   13   13 #>   [617,]   13   13   13 #>   [618,]   13   13   13 #>   [619,]   13   13   13 #>   [620,]   13   13   13 #>   [621,]   12   12   12 #>   [622,]   13   13   13 #>   [623,]   12   12   12 #>   [624,]   13   13   13 #>   [625,]   13   13   13 #>   [626,]   14   14   13 #>   [627,]   13   13   13 #>   [628,]   13   13   13 #>   [629,]   13   13   13 #>   [630,]   12   12   12 #>   [631,]   12   12   12 #>   [632,]   13   13   13 #>   [633,]   14   14   13 #>   [634,]   13   13   13 #>   [635,]   13   13   13 #>   [636,]   13   13   13 #>   [637,]   13   13   13 #>   [638,]   13   13   13 #>   [639,]   12   12   12 #>   [640,]   13   13   13 #>   [641,]   13   13   13 #>   [642,]   13   13   13 #>   [643,]   14   14   13 #>   [644,]   13   13   13 #>   [645,]   14   14   13 #>   [646,]   14   14   13 #>   [647,]   12   12   12 #>   [648,]   13   13   13 #>   [649,]   12   12   12 #>   [650,]   13   13   13 #>   [651,]   14   14   13 #>   [652,]   13   13   13 #>   [653,]   13   13   13 #>   [654,]   12   12   12 #>   [655,]   13   13   13 #>   [656,]   14   14   13 #>   [657,]   14   14   13 #>   [658,]   13   13   13 #>   [659,]   13   13   13 #>   [660,]   13   13   13 #>   [661,]   14   14   13 #>   [662,]   12   12   12 #>   [663,]   13   13   13 #>   [664,]   14   14   13 #>   [665,]   13   13   13 #>   [666,]   14   14   13 #>   [667,]   13   13   13 #>   [668,]   14   14   13 #>   [669,]   13   13   13 #>   [670,]   12   12   12 #>   [671,]   13   13   13 #>   [672,]   13   13   13 #>   [673,]   13   13   13 #>   [674,]   13   13   13 #>   [675,]   13   13   13 #>   [676,]   14   14   13 #>   [677,]   12   12   12 #>   [678,]   13   13   13 #>   [679,]   12   12   12 #>   [680,]   12   12   12 #>   [681,]   13   13   13 #>   [682,]   13   13   13 #>   [683,]   12   12   12 #>   [684,]   13   13   13 #>   [685,]   13   13   13 #>   [686,]   13   13   13 #>   [687,]   13   13   13 #>   [688,]   13   13   13 #>   [689,]   13   13   13 #>   [690,]   13   13   13 #>   [691,]   13   13   13 #>   [692,]   13   13   13 #>   [693,]   13   13   13 #>   [694,]   14   14   13 #>   [695,]   12   12   12 #>   [696,]   13   13   13 #>   [697,]   13   13   13 #>   [698,]   12   12   12 #>   [699,]   13   13   13 #>   [700,]   13   13   13 #>   [701,]   17   17   14 #>   [702,]   15   15   15 #>   [703,]   15   15   15 #>   [704,]   16   16   14 #>   [705,]   15   15   15 #>   [706,]   15   15   15 #>   [707,]   15   15   15 #>   [708,]   16   16   14 #>   [709,]   16   16   14 #>   [710,]   15   15   15 #>   [711,]   17   17   14 #>   [712,]   15   15   15 #>   [713,]   17   17   14 #>   [714,]   17   17   14 #>   [715,]   17   17   14 #>   [716,]   15   15   15 #>   [717,]   16   16   14 #>   [718,]   15   15   15 #>   [719,]   15   15   15 #>   [720,]   15   15   15 #>   [721,]   17   17   14 #>   [722,]   17   17   14 #>   [723,]   15   15   15 #>   [724,]   15   15   15 #>   [725,]   15   15   15 #>   [726,]   15   15   15 #>   [727,]   16   16   14 #>   [728,]   15   15   15 #>   [729,]   15   15   15 #>   [730,]   17   17   14 #>   [731,]   15   15   15 #>   [732,]   15   15   15 #>   [733,]   15   15   15 #>   [734,]   15   15   15 #>   [735,]   17   17   14 #>   [736,]   15   15   15 #>   [737,]   15   15   15 #>   [738,]   15   15   15 #>   [739,]   15   15   15 #>   [740,]   15   15   15 #>   [741,]   15   15   15 #>   [742,]   15   15   15 #>   [743,]   17   17   14 #>   [744,]   16   16   14 #>   [745,]   17   17   14 #>   [746,]   17   17   14 #>   [747,]   15   15   15 #>   [748,]   15   15   15 #>   [749,]   17   17   14 #>   [750,]   15   15   15 #>   [751,]   15   15   15 #>   [752,]   16   16   14 #>   [753,]   15   15   15 #>   [754,]   17   17   14 #>   [755,]   17   17   14 #>   [756,]   15   15   15 #>   [757,]   15   15   15 #>   [758,]   17   17   14 #>   [759,]   15   15   15 #>   [760,]   15   15   15 #>   [761,]   15   15   15 #>   [762,]   17   17   14 #>   [763,]   15   15   15 #>   [764,]   15   15   15 #>   [765,]   15   15   15 #>   [766,]   17   17   14 #>   [767,]   17   17   14 #>   [768,]   17   17   14 #>   [769,]   17   17   14 #>   [770,]   15   15   15 #>   [771,]   15   15   15 #>   [772,]   15   15   15 #>   [773,]   15   15   15 #>   [774,]   17   17   14 #>   [775,]   15   15   15 #>   [776,]   15   15   15 #>   [777,]   15   15   15 #>   [778,]   15   15   15 #>   [779,]   17   17   14 #>   [780,]   17   17   14 #>   [781,]   16   16   14 #>   [782,]   16   16   14 #>   [783,]   17   17   14 #>   [784,]   15   15   15 #>   [785,]   17   17   14 #>   [786,]   15   15   15 #>   [787,]   17   17   14 #>   [788,]   17   17   14 #>   [789,]   17   17   14 #>   [790,]   16   16   14 #>   [791,]   17   17   14 #>   [792,]   17   17   14 #>   [793,]   15   15   15 #>   [794,]   15   15   15 #>   [795,]   16   16   14 #>   [796,]   17   17   14 #>   [797,]   15   15   15 #>   [798,]   15   15   15 #>   [799,]   17   17   14 #>   [800,]   15   15   15 #>   [801,]   19   19   17 #>   [802,]   18   18   16 #>   [803,]   18   18   16 #>   [804,]   19   19   17 #>   [805,]   18   18   16 #>   [806,]   18   18   16 #>   [807,]   19   19   17 #>   [808,]   19   19   17 #>   [809,]   19   19   17 #>   [810,]   19   19   17 #>   [811,]   18   18   16 #>   [812,]   18   18   16 #>   [813,]   19   19   17 #>   [814,]   18   18   16 #>   [815,]   19   19   17 #>   [816,]   19   19   17 #>   [817,]   19   19   17 #>   [818,]   19   19   17 #>   [819,]   18   18   16 #>   [820,]   18   18   16 #>   [821,]   19   19   17 #>   [822,]   18   18   16 #>   [823,]   19   19   17 #>   [824,]   18   18   16 #>   [825,]   19   19   17 #>   [826,]   18   18   16 #>   [827,]   19   19   17 #>   [828,]   19   19   17 #>   [829,]   18   18   16 #>   [830,]   18   18   16 #>   [831,]   18   18   16 #>   [832,]   18   18   16 #>   [833,]   18   18   16 #>   [834,]   18   18   16 #>   [835,]   18   18   16 #>   [836,]   18   18   16 #>   [837,]   19   19   17 #>   [838,]   18   18   16 #>   [839,]   19   19   17 #>   [840,]   18   18   16 #>   [841,]   18   18   16 #>   [842,]   18   18   16 #>   [843,]   19   19   17 #>   [844,]   18   18   16 #>   [845,]   19   19   17 #>   [846,]   19   19   17 #>   [847,]   19   19   17 #>   [848,]   18   18   16 #>   [849,]   18   18   16 #>   [850,]   18   18   16 #>   [851,]   18   18   16 #>   [852,]   18   18   16 #>   [853,]   19   19   17 #>   [854,]   18   18   16 #>   [855,]   18   18   16 #>   [856,]   19   19   17 #>   [857,]   18   18   16 #>   [858,]   18   18   16 #>   [859,]   18   18   16 #>   [860,]   18   18   16 #>   [861,]   19   19   17 #>   [862,]   18   18   16 #>   [863,]   18   18   16 #>   [864,]   19   19   17 #>   [865,]   18   18   16 #>   [866,]   18   18   16 #>   [867,]   18   18   16 #>   [868,]   18   18   16 #>   [869,]   18   18   16 #>   [870,]   19   19   17 #>   [871,]   19   19   17 #>   [872,]   19   19   17 #>   [873,]   19   19   17 #>   [874,]   19   19   17 #>   [875,]   19   19   17 #>   [876,]   19   19   17 #>   [877,]   19   19   17 #>   [878,]   18   18   16 #>   [879,]   18   18   16 #>   [880,]   18   18   16 #>   [881,]   18   18   16 #>   [882,]   19   19   17 #>   [883,]   18   18   16 #>   [884,]   19   19   17 #>   [885,]   18   18   16 #>   [886,]   18   18   16 #>   [887,]   19   19   17 #>   [888,]   19   19   17 #>   [889,]   18   18   16 #>   [890,]   19   19   17 #>   [891,]   18   18   16 #>   [892,]   18   18   16 #>   [893,]   18   18   16 #>   [894,]   19   19   17 #>   [895,]   19   19   17 #>   [896,]   19   19   17 #>   [897,]   18   18   16 #>   [898,]   18   18   16 #>   [899,]   18   18   16 #>   [900,]   19   19   17 #>   [901,]   21   21   19 #>   [902,]   21   21   19 #>   [903,]   21   21   19 #>   [904,]   21   21   19 #>   [905,]   21   21   19 #>   [906,]   20   20   18 #>   [907,]   21   21   19 #>   [908,]   21   21   19 #>   [909,]   21   21   19 #>   [910,]   21   21   19 #>   [911,]   21   21   19 #>   [912,]   21   21   19 #>   [913,]   21   21   19 #>   [914,]   21   21   19 #>   [915,]   21   21   19 #>   [916,]   21   21   19 #>   [917,]   21   21   19 #>   [918,]   21   21   19 #>   [919,]   21   21   19 #>   [920,]   20   20   18 #>   [921,]   20   20   18 #>   [922,]   21   21   19 #>   [923,]   21   21   19 #>   [924,]   21   21   19 #>   [925,]   20   20   18 #>   [926,]   21   21   19 #>   [927,]   21   21   19 #>   [928,]   21   21   19 #>   [929,]   21   21   19 #>   [930,]   21   21   19 #>   [931,]   21   21   19 #>   [932,]   21   21   19 #>   [933,]   21   21   19 #>   [934,]   21   21   19 #>   [935,]   20   20   18 #>   [936,]   21   21   19 #>   [937,]   21   21   19 #>   [938,]   21   21   19 #>   [939,]   21   21   19 #>   [940,]   21   21   19 #>   [941,]   21   21   19 #>   [942,]   20   20   18 #>   [943,]   21   21   19 #>   [944,]   20   20   18 #>   [945,]   21   21   19 #>   [946,]   21   21   19 #>   [947,]   21   21   19 #>   [948,]   21   21   19 #>   [949,]   21   21   19 #>   [950,]   21   21   19 #>   [951,]   21   21   19 #>   [952,]   21   21   19 #>   [953,]   20   20   18 #>   [954,]   21   21   19 #>   [955,]   21   21   19 #>   [956,]   20   20   18 #>   [957,]   21   21   19 #>   [958,]   21   21   19 #>   [959,]   21   21   19 #>   [960,]   21   21   19 #>   [961,]   21   21   19 #>   [962,]   21   21   19 #>   [963,]   21   21   19 #>   [964,]   21   21   19 #>   [965,]   20   20   18 #>   [966,]   21   21   19 #>   [967,]   21   21   19 #>   [968,]   21   21   19 #>   [969,]   21   21   19 #>   [970,]   21   21   19 #>   [971,]   21   21   19 #>   [972,]   21   21   19 #>   [973,]   20   20   18 #>   [974,]   20   20   18 #>   [975,]   21   21   19 #>   [976,]   21   21   19 #>   [977,]   21   21   19 #>   [978,]   21   21   19 #>   [979,]   21   21   19 #>   [980,]   20   20   18 #>   [981,]   21   21   19 #>   [982,]   20   20   18 #>   [983,]   21   21   19 #>   [984,]   20   20   18 #>   [985,]   20   20   18 #>   [986,]   20   20   18 #>   [987,]   21   21   19 #>   [988,]   21   21   19 #>   [989,]   20   20   18 #>   [990,]   21   21   19 #>   [991,]   21   21   19 #>   [992,]   21   21   19 #>   [993,]   21   21   19 #>   [994,]   20   20   18 #>   [995,]   21   21   19 #>   [996,]   21   21   19 #>   [997,]   21   21   19 #>   [998,]   21   21   19 #>   [999,]   20   20   18 #>  [1000,]   21   21   19 #>  [1001,]   22   22   20 #>  [1002,]   22   22   20 #>  [1003,]   22   22   20 #>  [1004,]   23   23   21 #>  [1005,]   22   22   20 #>  [1006,]   23   24   21 #>  [1007,]   22   22   20 #>  [1008,]   22   22   20 #>  [1009,]   23   23   21 #>  [1010,]   23   23   21 #>  [1011,]   23   23   21 #>  [1012,]   23   24   21 #>  [1013,]   22   22   20 #>  [1014,]   23   23   21 #>  [1015,]   23   23   21 #>  [1016,]   22   22   20 #>  [1017,]   22   22   20 #>  [1018,]   23   23   21 #>  [1019,]   23   24   21 #>  [1020,]   22   22   20 #>  [1021,]   23   23   21 #>  [1022,]   22   22   20 #>  [1023,]   23   23   21 #>  [1024,]   22   22   20 #>  [1025,]   22   22   20 #>  [1026,]   23   23   21 #>  [1027,]   23   23   21 #>  [1028,]   22   22   20 #>  [1029,]   22   22   20 #>  [1030,]   23   23   21 #>  [1031,]   23   23   21 #>  [1032,]   23   23   21 #>  [1033,]   23   24   21 #>  [1034,]   23   24   21 #>  [1035,]   23   23   21 #>  [1036,]   23   23   21 #>  [1037,]   22   22   20 #>  [1038,]   23   23   21 #>  [1039,]   22   22   20 #>  [1040,]   22   22   20 #>  [1041,]   23   23   21 #>  [1042,]   23   23   21 #>  [1043,]   22   22   20 #>  [1044,]   22   22   20 #>  [1045,]   22   22   20 #>  [1046,]   22   22   20 #>  [1047,]   22   22   20 #>  [1048,]   23   23   21 #>  [1049,]   22   22   20 #>  [1050,]   22   22   20 #>  [1051,]   22   22   20 #>  [1052,]   23   23   21 #>  [1053,]   22   22   20 #>  [1054,]   22   22   20 #>  [1055,]   22   22   20 #>  [1056,]   22   22   20 #>  [1057,]   23   23   21 #>  [1058,]   23   23   21 #>  [1059,]   22   22   20 #>  [1060,]   23   24   21 #>  [1061,]   23   23   21 #>  [1062,]   23   23   21 #>  [1063,]   22   22   20 #>  [1064,]   23   23   21 #>  [1065,]   22   22   20 #>  [1066,]   22   22   20 #>  [1067,]   23   23   21 #>  [1068,]   23   23   21 #>  [1069,]   23   23   21 #>  [1070,]   22   22   20 #>  [1071,]   22   22   20 #>  [1072,]   22   22   20 #>  [1073,]   23   24   21 #>  [1074,]   23   23   21 #>  [1075,]   23   23   21 #>  [1076,]   22   22   20 #>  [1077,]   22   22   20 #>  [1078,]   22   22   20 #>  [1079,]   22   22   20 #>  [1080,]   23   23   21 #>  [1081,]   22   22   20 #>  [1082,]   23   23   21 #>  [1083,]   22   22   20 #>  [1084,]   22   22   20 #>  [1085,]   23   23   21 #>  [1086,]   22   22   20 #>  [1087,]   23   23   21 #>  [1088,]   23   23   21 #>  [1089,]   22   22   20 #>  [1090,]   22   22   20 #>  [1091,]   23   23   21 #>  [1092,]   23   23   21 #>  [1093,]   23   24   21 #>  [1094,]   22   22   20 #>  [1095,]   23   23   21 #>  [1096,]   23   23   21 #>  [1097,]   23   24   21 #>  [1098,]   22   22   20 #>  [1099,]   23   23   21 #>  [1100,]   22   22   20 #>  [1101,]   25   25   23 #>  [1102,]   24   27   22 #>  [1103,]   25   25   23 #>  [1104,]   25   25   23 #>  [1105,]   25   25   23 #>  [1106,]   24   27   22 #>  [1107,]   25   25   23 #>  [1108,]   25   25   23 #>  [1109,]   25   25   23 #>  [1110,]   25   25   23 #>  [1111,]   24   27   22 #>  [1112,]   24   27   22 #>  [1113,]   25   25   23 #>  [1114,]   25   25   23 #>  [1115,]   24   27   22 #>  [1116,]   25   25   23 #>  [1117,]   24   26   22 #>  [1118,]   25   25   23 #>  [1119,]   25   25   23 #>  [1120,]   25   25   23 #>  [1121,]   25   25   23 #>  [1122,]   25   25   23 #>  [1123,]   24   27   22 #>  [1124,]   25   25   23 #>  [1125,]   25   25   23 #>  [1126,]   25   25   23 #>  [1127,]   25   25   23 #>  [1128,]   25   25   23 #>  [1129,]   24   26   22 #>  [1130,]   24   27   22 #>  [1131,]   24   27   22 #>  [1132,]   25   25   23 #>  [1133,]   25   25   23 #>  [1134,]   24   27   22 #>  [1135,]   25   25   23 #>  [1136,]   25   25   23 #>  [1137,]   24   27   22 #>  [1138,]   25   25   23 #>  [1139,]   25   25   23 #>  [1140,]   25   25   23 #>  [1141,]   25   25   23 #>  [1142,]   24   27   22 #>  [1143,]   24   26   22 #>  [1144,]   24   26   22 #>  [1145,]   25   25   23 #>  [1146,]   25   25   23 #>  [1147,]   24   26   22 #>  [1148,]   24   27   22 #>  [1149,]   25   25   23 #>  [1150,]   25   25   23 #>  [1151,]   25   25   23 #>  [1152,]   25   25   23 #>  [1153,]   25   25   23 #>  [1154,]   25   25   23 #>  [1155,]   25   25   23 #>  [1156,]   24   26   22 #>  [1157,]   25   25   23 #>  [1158,]   25   25   23 #>  [1159,]   25   25   23 #>  [1160,]   24   27   22 #>  [1161,]   24   27   22 #>  [1162,]   25   25   23 #>  [1163,]   24   26   22 #>  [1164,]   24   27   22 #>  [1165,]   24   26   22 #>  [1166,]   25   25   23 #>  [1167,]   25   25   23 #>  [1168,]   25   25   23 #>  [1169,]   25   25   23 #>  [1170,]   24   26   22 #>  [1171,]   25   25   23 #>  [1172,]   25   25   23 #>  [1173,]   25   25   23 #>  [1174,]   25   25   23 #>  [1175,]   24   27   22 #>  [1176,]   25   25   23 #>  [1177,]   25   25   23 #>  [1178,]   24   26   22 #>  [1179,]   24   26   22 #>  [1180,]   25   25   23 #>  [1181,]   24   27   22 #>  [1182,]   25   25   23 #>  [1183,]   25   25   23 #>  [1184,]   25   25   23 #>  [1185,]   25   25   23 #>  [1186,]   25   25   23 #>  [1187,]   25   25   23 #>  [1188,]   25   25   23 #>  [1189,]   25   25   23 #>  [1190,]   25   25   23 #>  [1191,]   25   25   23 #>  [1192,]   24   27   22 #>  [1193,]   25   25   23 #>  [1194,]   24   26   22 #>  [1195,]   24   27   22 #>  [1196,]   25   25   23 #>  [1197,]   25   25   23 #>  [1198,]   25   25   23 #>  [1199,]   25   25   23 #>  [1200,]   24   26   22 #>  [1201,]   26   29   24 #>  [1202,]   26   29   24 #>  [1203,]   26   29   24 #>  [1204,]   28   28   25 #>  [1205,]   26   29   24 #>  [1206,]   26   29   24 #>  [1207,]   27   28   25 #>  [1208,]   26   29   24 #>  [1209,]   26   30   24 #>  [1210,]   28   28   25 #>  [1211,]   26   30   24 #>  [1212,]   26   30   24 #>  [1213,]   26   29   24 #>  [1214,]   26   30   24 #>  [1215,]   28   28   25 #>  [1216,]   28   28   25 #>  [1217,]   26   29   24 #>  [1218,]   28   28   25 #>  [1219,]   26   30   24 #>  [1220,]   26   29   24 #>  [1221,]   27   28   25 #>  [1222,]   26   29   24 #>  [1223,]   27   28   25 #>  [1224,]   26   29   24 #>  [1225,]   27   28   25 #>  [1226,]   26   30   24 #>  [1227,]   28   28   25 #>  [1228,]   28   28   25 #>  [1229,]   26   29   24 #>  [1230,]   26   30   24 #>  [1231,]   26   30   24 #>  [1232,]   26   29   24 #>  [1233,]   26   30   24 #>  [1234,]   26   29   24 #>  [1235,]   26   29   24 #>  [1236,]   26   30   24 #>  [1237,]   26   29   24 #>  [1238,]   26   30   24 #>  [1239,]   28   28   25 #>  [1240,]   26   29   24 #>  [1241,]   26   30   24 #>  [1242,]   26   30   24 #>  [1243,]   28   28   25 #>  [1244,]   26   29   24 #>  [1245,]   28   28   25 #>  [1246,]   26   29   24 #>  [1247,]   28   28   25 #>  [1248,]   26   30   24 #>  [1249,]   26   29   24 #>  [1250,]   26   29   24 #>  [1251,]   26   29   24 #>  [1252,]   26   29   24 #>  [1253,]   27   28   25 #>  [1254,]   26   29   24 #>  [1255,]   26   29   24 #>  [1256,]   26   29   24 #>  [1257,]   26   29   24 #>  [1258,]   26   30   24 #>  [1259,]   26   29   24 #>  [1260,]   26   30   24 #>  [1261,]   28   28   25 #>  [1262,]   26   30   24 #>  [1263,]   26   29   24 #>  [1264,]   26   29   24 #>  [1265,]   26   29   24 #>  [1266,]   26   29   24 #>  [1267,]   26   29   24 #>  [1268,]   26   30   24 #>  [1269,]   26   30   24 #>  [1270,]   26   29   24 #>  [1271,]   28   28   25 #>  [1272,]   28   28   25 #>  [1273,]   27   28   25 #>  [1274,]   27   28   25 #>  [1275,]   28   28   25 #>  [1276,]   28   28   25 #>  [1277,]   28   28   25 #>  [1278,]   26   29   24 #>  [1279,]   26   29   24 #>  [1280,]   26   29   24 #>  [1281,]   26   29   24 #>  [1282,]   26   30   24 #>  [1283,]   26   29   24 #>  [1284,]   27   28   25 #>  [1285,]   26   30   24 #>  [1286,]   26   29   24 #>  [1287,]   26   29   24 #>  [1288,]   27   28   25 #>  [1289,]   26   29   24 #>  [1290,]   26   29   24 #>  [1291,]   26   29   24 #>  [1292,]   26   30   24 #>  [1293,]   26   30   24 #>  [1294,]   27   28   25 #>  [1295,]   28   28   25 #>  [1296,]   26   30   24 #>  [1297,]   26   30   24 #>  [1298,]   26   29   24 #>  [1299,]   26   29   24 #>  [1300,]   28   28   25 #>  [1301,]   29   31   27 #>  [1302,]   30   32   26 #>  [1303,]   29   31   27 #>  [1304,]   29   31   27 #>  [1305,]   30   32   26 #>  [1306,]   29   31   27 #>  [1307,]   30   32   26 #>  [1308,]   29   31   27 #>  [1309,]   30   32   26 #>  [1310,]   30   32   26 #>  [1311,]   29   31   27 #>  [1312,]   30   32   26 #>  [1313,]   30   32   26 #>  [1314,]   29   31   27 #>  [1315,]   29   31   27 #>  [1316,]   29   31   27 #>  [1317,]   30   32   26 #>  [1318,]   30   32   26 #>  [1319,]   29   31   27 #>  [1320,]   30   32   26 #>  [1321,]   30   32   26 #>  [1322,]   30   32   26 #>  [1323,]   30   32   26 #>  [1324,]   30   32   26 #>  [1325,]   30   32   26 #>  [1326,]   29   31   27 #>  [1327,]   30   32   26 #>  [1328,]   29   31   27 #>  [1329,]   30   32   26 #>  [1330,]   30   32   26 #>  [1331,]   30   32   26 #>  [1332,]   30   32   26 #>  [1333,]   30   32   26 #>  [1334,]   29   31   27 #>  [1335,]   29   31   27 #>  [1336,]   30   32   26 #>  [1337,]   29   31   27 #>  [1338,]   29   31   27 #>  [1339,]   30   32   26 #>  [1340,]   30   32   26 #>  [1341,]   30   32   26 #>  [1342,]   29   31   27 #>  [1343,]   30   32   26 #>  [1344,]   30   32   26 #>  [1345,]   29   31   27 #>  [1346,]   29   31   27 #>  [1347,]   30   32   26 #>  [1348,]   30   32   26 #>  [1349,]   29   31   27 #>  [1350,]   30   32   26 #>  [1351,]   30   32   26 #>  [1352,]   29   31   27 #>  [1353,]   30   32   26 #>  [1354,]   30   32   26 #>  [1355,]   29   31   27 #>  [1356,]   29   31   27 #>  [1357,]   29   31   27 #>  [1358,]   30   32   26 #>  [1359,]   29   31   27 #>  [1360,]   30   32   26 #>  [1361,]   30   32   26 #>  [1362,]   29   31   27 #>  [1363,]   30   32   26 #>  [1364,]   29   31   27 #>  [1365,]   29   31   27 #>  [1366,]   30   32   26 #>  [1367,]   30   32   26 #>  [1368,]   29   31   27 #>  [1369,]   29   31   27 #>  [1370,]   30   32   26 #>  [1371,]   30   32   26 #>  [1372,]   29   31   27 #>  [1373,]   29   31   27 #>  [1374,]   30   32   26 #>  [1375,]   30   32   26 #>  [1376,]   30   32   26 #>  [1377,]   29   31   27 #>  [1378,]   30   32   26 #>  [1379,]   29   31   27 #>  [1380,]   30   32   26 #>  [1381,]   30   32   26 #>  [1382,]   29   31   27 #>  [1383,]   30   32   26 #>  [1384,]   30   32   26 #>  [1385,]   29   31   27 #>  [1386,]   30   32   26 #>  [1387,]   30   32   26 #>  [1388,]   30   32   26 #>  [1389,]   29   31   27 #>  [1390,]   30   32   26 #>  [1391,]   29   31   27 #>  [1392,]   30   32   26 #>  [1393,]   30   32   26 #>  [1394,]   29   31   27 #>  [1395,]   30   32   26 #>  [1396,]   29   31   27 #>  [1397,]   29   31   27 #>  [1398,]   29   31   27 #>  [1399,]   30   32   26 #>  [1400,]   29   31   27 #>  [1401,]   32   34   28 #>  [1402,]   31   33   29 #>  [1403,]   31   33   29 #>  [1404,]   32   34   28 #>  [1405,]   33   34   28 #>  [1406,]   31   33   29 #>  [1407,]   31   33   29 #>  [1408,]   32   34   28 #>  [1409,]   32   34   28 #>  [1410,]   33   34   28 #>  [1411,]   32   34   28 #>  [1412,]   31   33   29 #>  [1413,]   32   34   28 #>  [1414,]   32   34   28 #>  [1415,]   32   34   28 #>  [1416,]   32   34   28 #>  [1417,]   32   34   28 #>  [1418,]   31   33   29 #>  [1419,]   31   33   29 #>  [1420,]   31   33   29 #>  [1421,]   32   34   28 #>  [1422,]   32   34   28 #>  [1423,]   31   33   29 #>  [1424,]   32   34   28 #>  [1425,]   31   33   29 #>  [1426,]   33   34   28 #>  [1427,]   32   34   28 #>  [1428,]   31   33   29 #>  [1429,]   33   34   28 #>  [1430,]   32   34   28 #>  [1431,]   31   33   29 #>  [1432,]   31   33   29 #>  [1433,]   31   33   29 #>  [1434,]   31   33   29 #>  [1435,]   32   34   28 #>  [1436,]   33   34   28 #>  [1437,]   32   34   28 #>  [1438,]   32   34   28 #>  [1439,]   33   34   28 #>  [1440,]   31   33   29 #>  [1441,]   32   34   28 #>  [1442,]   31   33   29 #>  [1443,]   32   34   28 #>  [1444,]   32   34   28 #>  [1445,]   32   34   28 #>  [1446,]   32   34   28 #>  [1447,]   33   34   28 #>  [1448,]   31   33   29 #>  [1449,]   32   34   28 #>  [1450,]   33   34   28 #>  [1451,]   33   34   28 #>  [1452,]   32   34   28 #>  [1453,]   33   34   28 #>  [1454,]   32   34   28 #>  [1455,]   32   34   28 #>  [1456,]   31   33   29 #>  [1457,]   33   34   28 #>  [1458,]   32   34   28 #>  [1459,]   33   34   28 #>  [1460,]   31   33   29 #>  [1461,]   33   34   28 #>  [1462,]   32   34   28 #>  [1463,]   33   34   28 #>  [1464,]   31   33   29 #>  [1465,]   31   33   29 #>  [1466,]   32   34   28 #>  [1467,]   32   34   28 #>  [1468,]   32   34   28 #>  [1469,]   32   34   28 #>  [1470,]   31   33   29 #>  [1471,]   31   33   29 #>  [1472,]   33   34   28 #>  [1473,]   31   33   29 #>  [1474,]   32   34   28 #>  [1475,]   33   34   28 #>  [1476,]   33   34   28 #>  [1477,]   33   34   28 #>  [1478,]   31   33   29 #>  [1479,]   32   34   28 #>  [1480,]   32   34   28 #>  [1481,]   32   34   28 #>  [1482,]   32   34   28 #>  [1483,]   32   34   28 #>  [1484,]   31   33   29 #>  [1485,]   32   34   28 #>  [1486,]   33   34   28 #>  [1487,]   32   34   28 #>  [1488,]   32   34   28 #>  [1489,]   32   34   28 #>  [1490,]   32   34   28 #>  [1491,]   32   34   28 #>  [1492,]   32   34   28 #>  [1493,]   31   33   29 #>  [1494,]   33   34   28 #>  [1495,]   32   34   28 #>  [1496,]   32   34   28 #>  [1497,]   31   33   29 #>  [1498,]   31   33   29 #>  [1499,]   32   34   28 #>  [1500,]   31   33   29 #>  [1501,]   34   35   30 #>  [1502,]   35   36   31 #>  [1503,]   34   35   30 #>  [1504,]   34   35   30 #>  [1505,]   34   35   30 #>  [1506,]   34   35   30 #>  [1507,]   34   35   30 #>  [1508,]   34   35   30 #>  [1509,]   35   36   31 #>  [1510,]   35   36   31 #>  [1511,]   34   35   30 #>  [1512,]   35   36   31 #>  [1513,]   34   35   30 #>  [1514,]   34   35   30 #>  [1515,]   34   35   30 #>  [1516,]   34   35   30 #>  [1517,]   34   35   30 #>  [1518,]   34   35   30 #>  [1519,]   34   35   30 #>  [1520,]   34   35   30 #>  [1521,]   35   36   31 #>  [1522,]   34   35   30 #>  [1523,]   34   35   30 #>  [1524,]   34   35   30 #>  [1525,]   34   35   30 #>  [1526,]   34   35   30 #>  [1527,]   34   35   30 #>  [1528,]   34   35   30 #>  [1529,]   35   36   31 #>  [1530,]   34   35   30 #>  [1531,]   34   35   30 #>  [1532,]   34   35   30 #>  [1533,]   35   36   31 #>  [1534,]   34   35   30 #>  [1535,]   34   35   30 #>  [1536,]   34   35   30 #>  [1537,]   34   35   30 #>  [1538,]   34   35   30 #>  [1539,]   34   35   30 #>  [1540,]   34   35   30 #>  [1541,]   34   35   30 #>  [1542,]   34   35   30 #>  [1543,]   34   35   30 #>  [1544,]   34   35   30 #>  [1545,]   34   35   30 #>  [1546,]   34   35   30 #>  [1547,]   34   35   30 #>  [1548,]   34   35   30 #>  [1549,]   34   35   30 #>  [1550,]   34   35   30 #>  [1551,]   34   35   30 #>  [1552,]   34   35   30 #>  [1553,]   34   35   30 #>  [1554,]   34   35   30 #>  [1555,]   34   35   30 #>  [1556,]   34   35   30 #>  [1557,]   34   35   30 #>  [1558,]   34   35   30 #>  [1559,]   34   35   30 #>  [1560,]   35   36   31 #>  [1561,]   34   35   30 #>  [1562,]   34   35   30 #>  [1563,]   34   35   30 #>  [1564,]   34   35   30 #>  [1565,]   34   35   30 #>  [1566,]   34   35   30 #>  [1567,]   34   35   30 #>  [1568,]   34   35   30 #>  [1569,]   34   35   30 #>  [1570,]   35   36   31 #>  [1571,]   34   35   30 #>  [1572,]   34   35   30 #>  [1573,]   34   35   30 #>  [1574,]   34   35   30 #>  [1575,]   34   35   30 #>  [1576,]   34   35   30 #>  [1577,]   34   35   30 #>  [1578,]   34   35   30 #>  [1579,]   34   35   30 #>  [1580,]   34   35   30 #>  [1581,]   35   36   31 #>  [1582,]   34   35   30 #>  [1583,]   34   35   30 #>  [1584,]   34   35   30 #>  [1585,]   34   35   30 #>  [1586,]   35   36   31 #>  [1587,]   34   35   30 #>  [1588,]   34   35   30 #>  [1589,]   34   35   30 #>  [1590,]   34   35   30 #>  [1591,]   34   35   30 #>  [1592,]   34   35   30 #>  [1593,]   34   35   30 #>  [1594,]   34   35   30 #>  [1595,]   34   35   30 #>  [1596,]   34   35   30 #>  [1597,]   34   35   30 #>  [1598,]   34   35   30 #>  [1599,]   34   35   30 #>  [1600,]   34   35   30 #>  [1601,]   36   37   32 #>  [1602,]   36   37   32 #>  [1603,]   36   37   32 #>  [1604,]   37   38   33 #>  [1605,]   36   37   32 #>  [1606,]   36   37   32 #>  [1607,]   37   38   33 #>  [1608,]   36   37   32 #>  [1609,]   36   37   32 #>  [1610,]   37   38   33 #>  [1611,]   36   37   32 #>  [1612,]   36   37   32 #>  [1613,]   36   37   32 #>  [1614,]   36   37   32 #>  [1615,]   37   38   33 #>  [1616,]   37   38   33 #>  [1617,]   36   37   32 #>  [1618,]   37   38   33 #>  [1619,]   36   37   32 #>  [1620,]   36   37   32 #>  [1621,]   37   38   33 #>  [1622,]   36   37   32 #>  [1623,]   37   38   33 #>  [1624,]   36   37   32 #>  [1625,]   37   38   33 #>  [1626,]   36   37   32 #>  [1627,]   37   38   33 #>  [1628,]   36   37   32 #>  [1629,]   36   37   32 #>  [1630,]   36   37   32 #>  [1631,]   36   37   32 #>  [1632,]   36   37   32 #>  [1633,]   36   37   32 #>  [1634,]   36   37   32 #>  [1635,]   36   37   32 #>  [1636,]   36   37   32 #>  [1637,]   36   37   32 #>  [1638,]   36   37   32 #>  [1639,]   37   38   33 #>  [1640,]   36   37   32 #>  [1641,]   36   37   32 #>  [1642,]   36   37   32 #>  [1643,]   37   38   33 #>  [1644,]   36   37   32 #>  [1645,]   37   38   33 #>  [1646,]   36   37   32 #>  [1647,]   36   37   32 #>  [1648,]   36   37   32 #>  [1649,]   36   37   32 #>  [1650,]   36   37   32 #>  [1651,]   36   37   32 #>  [1652,]   36   37   32 #>  [1653,]   37   38   33 #>  [1654,]   36   37   32 #>  [1655,]   36   37   32 #>  [1656,]   36   37   32 #>  [1657,]   36   37   32 #>  [1658,]   36   37   32 #>  [1659,]   36   37   32 #>  [1660,]   36   37   32 #>  [1661,]   37   38   33 #>  [1662,]   36   37   32 #>  [1663,]   36   37   32 #>  [1664,]   36   37   32 #>  [1665,]   36   37   32 #>  [1666,]   36   37   32 #>  [1667,]   36   37   32 #>  [1668,]   36   37   32 #>  [1669,]   36   37   32 #>  [1670,]   36   37   32 #>  [1671,]   37   38   33 #>  [1672,]   37   38   33 #>  [1673,]   37   38   33 #>  [1674,]   37   38   33 #>  [1675,]   37   38   33 #>  [1676,]   37   38   33 #>  [1677,]   37   38   33 #>  [1678,]   36   37   32 #>  [1679,]   36   37   32 #>  [1680,]   36   37   32 #>  [1681,]   36   37   32 #>  [1682,]   36   37   32 #>  [1683,]   36   37   32 #>  [1684,]   37   38   33 #>  [1685,]   36   37   32 #>  [1686,]   36   37   32 #>  [1687,]   36   37   32 #>  [1688,]   36   37   32 #>  [1689,]   36   37   32 #>  [1690,]   36   37   32 #>  [1691,]   36   37   32 #>  [1692,]   36   37   32 #>  [1693,]   36   37   32 #>  [1694,]   37   38   33 #>  [1695,]   37   38   33 #>  [1696,]   36   37   32 #>  [1697,]   36   37   32 #>  [1698,]   36   37   32 #>  [1699,]   36   37   32 #>  [1700,]   37   38   33 #>  [1701,]   38   39   34 #>  [1702,]   38   39   34 #>  [1703,]   38   39   34 #>  [1704,]   39   40   35 #>  [1705,]   38   39   34 #>  [1706,]   38   39   34 #>  [1707,]   38   39   34 #>  [1708,]   38   39   34 #>  [1709,]   38   39   34 #>  [1710,]   39   40   35 #>  [1711,]   38   39   34 #>  [1712,]   38   39   34 #>  [1713,]   38   39   34 #>  [1714,]   38   39   34 #>  [1715,]   38   39   34 #>  [1716,]   38   39   34 #>  [1717,]   38   39   34 #>  [1718,]   39   40   35 #>  [1719,]   38   39   34 #>  [1720,]   38   39   34 #>  [1721,]   39   40   35 #>  [1722,]   38   39   34 #>  [1723,]   38   39   34 #>  [1724,]   38   39   34 #>  [1725,]   39   40   35 #>  [1726,]   38   39   34 #>  [1727,]   38   39   34 #>  [1728,]   38   39   34 #>  [1729,]   38   39   34 #>  [1730,]   38   39   34 #>  [1731,]   38   39   34 #>  [1732,]   38   39   34 #>  [1733,]   38   39   34 #>  [1734,]   38   39   34 #>  [1735,]   38   39   34 #>  [1736,]   38   39   34 #>  [1737,]   38   39   34 #>  [1738,]   38   39   34 #>  [1739,]   39   40   35 #>  [1740,]   38   39   34 #>  [1741,]   38   39   34 #>  [1742,]   38   39   34 #>  [1743,]   39   40   35 #>  [1744,]   38   39   34 #>  [1745,]   39   40   35 #>  [1746,]   38   39   34 #>  [1747,]   38   39   34 #>  [1748,]   38   39   34 #>  [1749,]   38   39   34 #>  [1750,]   38   39   34 #>  [1751,]   38   39   34 #>  [1752,]   38   39   34 #>  [1753,]   39   40   35 #>  [1754,]   38   39   34 #>  [1755,]   38   39   34 #>  [1756,]   38   39   34 #>  [1757,]   38   39   34 #>  [1758,]   38   39   34 #>  [1759,]   38   39   34 #>  [1760,]   38   39   34 #>  [1761,]   38   39   34 #>  [1762,]   38   39   34 #>  [1763,]   38   39   34 #>  [1764,]   38   39   34 #>  [1765,]   38   39   34 #>  [1766,]   38   39   34 #>  [1767,]   38   39   34 #>  [1768,]   38   39   34 #>  [1769,]   38   39   34 #>  [1770,]   38   39   34 #>  [1771,]   38   39   34 #>  [1772,]   39   40   35 #>  [1773,]   39   40   35 #>  [1774,]   39   40   35 #>  [1775,]   39   40   35 #>  [1776,]   39   40   35 #>  [1777,]   39   40   35 #>  [1778,]   38   39   34 #>  [1779,]   38   39   34 #>  [1780,]   38   39   34 #>  [1781,]   38   39   34 #>  [1782,]   38   39   34 #>  [1783,]   38   39   34 #>  [1784,]   38   39   34 #>  [1785,]   38   39   34 #>  [1786,]   38   39   34 #>  [1787,]   38   39   34 #>  [1788,]   38   39   34 #>  [1789,]   38   39   34 #>  [1790,]   38   39   34 #>  [1791,]   38   39   34 #>  [1792,]   38   39   34 #>  [1793,]   38   39   34 #>  [1794,]   39   40   35 #>  [1795,]   39   40   35 #>  [1796,]   38   39   34 #>  [1797,]   38   39   34 #>  [1798,]   38   39   34 #>  [1799,]   38   39   34 #>  [1800,]   38   39   34 #>  [1801,]   40   41   36 #>  [1802,]   41   42   36 #>  [1803,]   40   41   36 #>  [1804,]   40   41   36 #>  [1805,]   40   41   36 #>  [1806,]   40   41   36 #>  [1807,]   40   41   36 #>  [1808,]   40   41   36 #>  [1809,]   41   42   36 #>  [1810,]   41   42   36 #>  [1811,]   40   41   36 #>  [1812,]   41   42   36 #>  [1813,]   40   41   36 #>  [1814,]   40   41   36 #>  [1815,]   40   41   36 #>  [1816,]   40   41   36 #>  [1817,]   40   41   36 #>  [1818,]   40   41   36 #>  [1819,]   40   41   36 #>  [1820,]   40   41   37 #>  [1821,]   41   42   36 #>  [1822,]   40   41   37 #>  [1823,]   40   41   36 #>  [1824,]   40   41   36 #>  [1825,]   40   41   36 #>  [1826,]   40   41   36 #>  [1827,]   40   41   37 #>  [1828,]   40   41   36 #>  [1829,]   41   42   37 #>  [1830,]   40   41   36 #>  [1831,]   40   41   36 #>  [1832,]   40   41   36 #>  [1833,]   41   42   36 #>  [1834,]   40   41   36 #>  [1835,]   40   41   36 #>  [1836,]   40   41   36 #>  [1837,]   40   41   36 #>  [1838,]   40   41   36 #>  [1839,]   40   41   36 #>  [1840,]   40   41   36 #>  [1841,]   40   41   36 #>  [1842,]   40   41   36 #>  [1843,]   40   41   36 #>  [1844,]   40   41   36 #>  [1845,]   40   41   36 #>  [1846,]   40   41   36 #>  [1847,]   40   41   36 #>  [1848,]   40   41   36 #>  [1849,]   40   41   36 #>  [1850,]   40   41   36 #>  [1851,]   40   41   36 #>  [1852,]   40   41   36 #>  [1853,]   40   41   36 #>  [1854,]   40   41   36 #>  [1855,]   40   41   36 #>  [1856,]   40   41   36 #>  [1857,]   40   41   36 #>  [1858,]   40   41   37 #>  [1859,]   40   41   36 #>  [1860,]   41   42   36 #>  [1861,]   40   41   36 #>  [1862,]   40   41   36 #>  [1863,]   40   41   36 #>  [1864,]   40   41   37 #>  [1865,]   40   41   36 #>  [1866,]   40   41   36 #>  [1867,]   40   41   36 #>  [1868,]   40   41   36 #>  [1869,]   40   41   36 #>  [1870,]   41   42   36 #>  [1871,]   40   41   36 #>  [1872,]   40   41   36 #>  [1873,]   40   41   36 #>  [1874,]   40   41   36 #>  [1875,]   40   41   36 #>  [1876,]   40   41   36 #>  [1877,]   40   41   37 #>  [1878,]   40   41   36 #>  [1879,]   40   41   36 #>  [1880,]   40   41   36 #>  [1881,]   40   41   37 #>  [1882,]   40   41   36 #>  [1883,]   40   41   36 #>  [1884,]   40   41   36 #>  [1885,]   40   41   36 #>  [1886,]   41   42   36 #>  [1887,]   40   41   37 #>  [1888,]   40   41   36 #>  [1889,]   40   41   36 #>  [1890,]   40   41   36 #>  [1891,]   40   41   36 #>  [1892,]   40   41   36 #>  [1893,]   40   41   36 #>  [1894,]   40   41   36 #>  [1895,]   40   41   36 #>  [1896,]   40   41   36 #>  [1897,]   40   41   36 #>  [1898,]   40   41   36 #>  [1899,]   40   41   36 #>  [1900,]   40   41   37 #>  [1901,]   42   43   38 #>  [1902,]   43   44   39 #>  [1903,]   42   43   38 #>  [1904,]   42   43   38 #>  [1905,]   42   43   38 #>  [1906,]   42   43   38 #>  [1907,]   42   43   38 #>  [1908,]   42   43   38 #>  [1909,]   43   44   39 #>  [1910,]   43   44   39 #>  [1911,]   42   43   38 #>  [1912,]   43   44   39 #>  [1913,]   43   44   39 #>  [1914,]   42   43   38 #>  [1915,]   42   43   38 #>  [1916,]   42   43   38 #>  [1917,]   43   44   39 #>  [1918,]   43   44   39 #>  [1919,]   42   43   38 #>  [1920,]   43   44   39 #>  [1921,]   43   44   39 #>  [1922,]   42   43   38 #>  [1923,]   43   44   39 #>  [1924,]   43   44   39 #>  [1925,]   42   43   38 #>  [1926,]   42   43   38 #>  [1927,]   42   43   38 #>  [1928,]   42   43   38 #>  [1929,]   43   44   39 #>  [1930,]   42   43   38 #>  [1931,]   43   44   39 #>  [1932,]   43   44   39 #>  [1933,]   43   44   39 #>  [1934,]   42   43   38 #>  [1935,]   42   43   38 #>  [1936,]   43   44   39 #>  [1937,]   42   43   38 #>  [1938,]   42   43   38 #>  [1939,]   42   43   38 #>  [1940,]   43   44   39 #>  [1941,]   42   43   38 #>  [1942,]   42   43   38 #>  [1943,]   42   43   38 #>  [1944,]   42   43   38 #>  [1945,]   42   43   38 #>  [1946,]   42   43   38 #>  [1947,]   42   43   38 #>  [1948,]   42   43   38 #>  [1949,]   42   43   38 #>  [1950,]   42   43   38 #>  [1951,]   42   43   38 #>  [1952,]   42   43   38 #>  [1953,]   43   44   39 #>  [1954,]   42   43   38 #>  [1955,]   42   43   38 #>  [1956,]   42   43   38 #>  [1957,]   42   43   38 #>  [1958,]   42   43   38 #>  [1959,]   42   43   38 #>  [1960,]   43   44   39 #>  [1961,]   43   44   39 #>  [1962,]   42   43   38 #>  [1963,]   43   44   39 #>  [1964,]   42   43   38 #>  [1965,]   42   43   38 #>  [1966,]   42   43   38 #>  [1967,]   42   43   38 #>  [1968,]   42   43   38 #>  [1969,]   42   43   38 #>  [1970,]   43   44   39 #>  [1971,]   42   43   38 #>  [1972,]   42   43   38 #>  [1973,]   42   43   38 #>  [1974,]   42   43   38 #>  [1975,]   43   44   39 #>  [1976,]   42   43   38 #>  [1977,]   42   43   38 #>  [1978,]   42   43   38 #>  [1979,]   42   43   38 #>  [1980,]   43   44   39 #>  [1981,]   43   44   39 #>  [1982,]   42   43   38 #>  [1983,]   43   44   39 #>  [1984,]   43   44   39 #>  [1985,]   42   43   38 #>  [1986,]   43   44   39 #>  [1987,]   42   43   38 #>  [1988,]   43   44   39 #>  [1989,]   42   43   38 #>  [1990,]   42   43   38 #>  [1991,]   42   43   38 #>  [1992,]   42   43   38 #>  [1993,]   42   43   38 #>  [1994,]   42   43   38 #>  [1995,]   42   43   38 #>  [1996,]   42   43   38 #>  [1997,]   42   43   38 #>  [1998,]   42   43   38 #>  [1999,]   42   43   38 #>  [2000,]   42   43   38 #>  [2001,]   45   46   41 #>  [2002,]   45   46   41 #>  [2003,]   45   46   41 #>  [2004,]   44   45   40 #>  [2005,]   45   46   41 #>  [2006,]   45   46   42 #>  [2007,]   45   46   41 #>  [2008,]   44   45   40 #>  [2009,]   44   45   40 #>  [2010,]   44   45   40 #>  [2011,]   45   46   42 #>  [2012,]   45   46   42 #>  [2013,]   45   46   41 #>  [2014,]   45   46   42 #>  [2015,]   45   46   42 #>  [2016,]   45   46   41 #>  [2017,]   45   46   41 #>  [2018,]   45   46   42 #>  [2019,]   45   46   42 #>  [2020,]   45   46   41 #>  [2021,]   45   46   42 #>  [2022,]   45   46   41 #>  [2023,]   45   46   42 #>  [2024,]   45   46   41 #>  [2025,]   45   46   41 #>  [2026,]   45   46   42 #>  [2027,]   45   46   42 #>  [2028,]   45   46   41 #>  [2029,]   45   46   41 #>  [2030,]   44   45   40 #>  [2031,]   45   46   42 #>  [2032,]   45   46   42 #>  [2033,]   45   46   42 #>  [2034,]   45   46   42 #>  [2035,]   45   46   41 #>  [2036,]   45   46   42 #>  [2037,]   45   46   41 #>  [2038,]   45   46   42 #>  [2039,]   45   46   41 #>  [2040,]   45   46   41 #>  [2041,]   45   46   42 #>  [2042,]   45   46   42 #>  [2043,]   44   45   40 #>  [2044,]   45   46   41 #>  [2045,]   45   46   41 #>  [2046,]   45   46   41 #>  [2047,]   45   46   41 #>  [2048,]   45   46   42 #>  [2049,]   45   46   41 #>  [2050,]   45   46   41 #>  [2051,]   44   45   40 #>  [2052,]   45   46   42 #>  [2053,]   45   46   41 #>  [2054,]   45   46   41 #>  [2055,]   45   46   41 #>  [2056,]   45   46   41 #>  [2057,]   45   46   41 #>  [2058,]   45   46   42 #>  [2059,]   45   46   41 #>  [2060,]   44   45   40 #>  [2061,]   45   46   42 #>  [2062,]   45   46   42 #>  [2063,]   45   46   41 #>  [2064,]   44   45   40 #>  [2065,]   45   46   41 #>  [2066,]   45   46   41 #>  [2067,]   44   45   40 #>  [2068,]   45   46   42 #>  [2069,]   45   46   42 #>  [2070,]   45   46   41 #>  [2071,]   45   46   41 #>  [2072,]   45   46   41 #>  [2073,]   45   46   42 #>  [2074,]   45   46   42 #>  [2075,]   45   46   42 #>  [2076,]   45   46   41 #>  [2077,]   45   46   41 #>  [2078,]   44   45   40 #>  [2079,]   45   46   41 #>  [2080,]   45   46   42 #>  [2081,]   45   46   41 #>  [2082,]   45   46   42 #>  [2083,]   45   46   41 #>  [2084,]   45   46   41 #>  [2085,]   44   45   40 #>  [2086,]   45   46   41 #>  [2087,]   45   46   41 #>  [2088,]   45   46   41 #>  [2089,]   44   45   40 #>  [2090,]   45   46   41 #>  [2091,]   44   45   40 #>  [2092,]   45   46   42 #>  [2093,]   45   46   42 #>  [2094,]   45   46   41 #>  [2095,]   44   45   40 #>  [2096,]   45   46   42 #>  [2097,]   45   46   42 #>  [2098,]   45   46   41 #>  [2099,]   45   46   42 #>  [2100,]   45   46   41 #>  [2101,]   46   48   43 #>  [2102,]   46   48   43 #>  [2103,]   46   47   43 #>  [2104,]   46   47   44 #>  [2105,]   46   47   43 #>  [2106,]   46   48   43 #>  [2107,]   46   47   43 #>  [2108,]   46   47   43 #>  [2109,]   46   47   44 #>  [2110,]   47   47   43 #>  [2111,]   46   48   44 #>  [2112,]   46   47   44 #>  [2113,]   46   48   43 #>  [2114,]   46   48   44 #>  [2115,]   46   48   44 #>  [2116,]   46   48   43 #>  [2117,]   46   48   43 #>  [2118,]   47   47   44 #>  [2119,]   46   47   44 #>  [2120,]   46   47   43 #>  [2121,]   46   48   44 #>  [2122,]   46   48   43 #>  [2123,]   46   47   43 #>  [2124,]   46   47   43 #>  [2125,]   47   47   43 #>  [2126,]   46   48   44 #>  [2127,]   46   48   44 #>  [2128,]   46   47   43 #>  [2129,]   46   48   43 #>  [2130,]   46   47   44 #>  [2131,]   46   47   44 #>  [2132,]   46   47   43 #>  [2133,]   46   48   44 #>  [2134,]   46   47   43 #>  [2135,]   46   48   43 #>  [2136,]   46   47   44 #>  [2137,]   46   48   43 #>  [2138,]   46   47   44 #>  [2139,]   47   47   43 #>  [2140,]   46   47   43 #>  [2141,]   46   48   44 #>  [2142,]   46   47   44 #>  [2143,]   47   47   43 #>  [2144,]   46   48   43 #>  [2145,]   47   47   43 #>  [2146,]   46   47   43 #>  [2147,]   46   48   43 #>  [2148,]   46   47   44 #>  [2149,]   46   47   43 #>  [2150,]   46   48   43 #>  [2151,]   46   47   43 #>  [2152,]   46   48   43 #>  [2153,]   46   47   43 #>  [2154,]   46   47   43 #>  [2155,]   46   47   43 #>  [2156,]   46   47   43 #>  [2157,]   46   47   43 #>  [2158,]   46   48   44 #>  [2159,]   46   48   43 #>  [2160,]   46   47   44 #>  [2161,]   46   48   44 #>  [2162,]   46   47   44 #>  [2163,]   46   47   43 #>  [2164,]   46   47   43 #>  [2165,]   46   47   43 #>  [2166,]   46   47   43 #>  [2167,]   46   47   43 #>  [2168,]   46   48   44 #>  [2169,]   46   47   44 #>  [2170,]   46   48   43 #>  [2171,]   46   48   43 #>  [2172,]   46   47   43 #>  [2173,]   47   48   43 #>  [2174,]   46   47   44 #>  [2175,]   47   48   44 #>  [2176,]   46   48   43 #>  [2177,]   47   48   43 #>  [2178,]   46   47   43 #>  [2179,]   46   48   43 #>  [2180,]   46   47   43 #>  [2181,]   46   48   43 #>  [2182,]   46   47   44 #>  [2183,]   46   48   43 #>  [2184,]   46   48   43 #>  [2185,]   46   47   44 #>  [2186,]   46   48   43 #>  [2187,]   46   48   43 #>  [2188,]   46   47   43 #>  [2189,]   46   47   43 #>  [2190,]   46   48   43 #>  [2191,]   46   47   43 #>  [2192,]   46   47   44 #>  [2193,]   46   48   44 #>  [2194,]   46   48   43 #>  [2195,]   46   47   43 #>  [2196,]   46   48   44 #>  [2197,]   46   48   44 #>  [2198,]   46   47   43 #>  [2199,]   46   48   44 #>  [2200,]   46   48   43 #>  [2201,]   49   51   46 #>  [2202,]   48   49   45 #>  [2203,]   48   49   45 #>  [2204,]   49   51   46 #>  [2205,]   49   50   46 #>  [2206,]   49   50   46 #>  [2207,]   48   49   45 #>  [2208,]   49   51   46 #>  [2209,]   49   51   46 #>  [2210,]   48   49   45 #>  [2211,]   49   50   46 #>  [2212,]   49   50   46 #>  [2213,]   48   49   45 #>  [2214,]   49   50   46 #>  [2215,]   49   51   46 #>  [2216,]   48   49   45 #>  [2217,]   48   49   45 #>  [2218,]   48   49   45 #>  [2219,]   48   49   45 #>  [2220,]   49   50   46 #>  [2221,]   48   49   45 #>  [2222,]   48   49   45 #>  [2223,]   48   49   45 #>  [2224,]   48   49   45 #>  [2225,]   48   49   45 #>  [2226,]   49   50   46 #>  [2227,]   49   51   46 #>  [2228,]   49   51   46 #>  [2229,]   48   49   45 #>  [2230,]   48   49   45 #>  [2231,]   48   49   45 #>  [2232,]   48   49   45 #>  [2233,]   49   50   46 #>  [2234,]   48   49   45 #>  [2235,]   48   49   45 #>  [2236,]   48   49   45 #>  [2237,]   48   49   45 #>  [2238,]   49   51   46 #>  [2239,]   48   49   45 #>  [2240,]   48   49   45 #>  [2241,]   49   50   46 #>  [2242,]   49   50   46 #>  [2243,]   49   51   46 #>  [2244,]   48   49   45 #>  [2245,]   49   51   46 #>  [2246,]   49   51   46 #>  [2247,]   48   49   45 #>  [2248,]   48   49   45 #>  [2249,]   48   49   45 #>  [2250,]   49   50   46 #>  [2251,]   49   50   46 #>  [2252,]   49   50   46 #>  [2253,]   49   51   46 #>  [2254,]   48   49   45 #>  [2255,]   49   50   46 #>  [2256,]   49   51   46 #>  [2257,]   49   50   46 #>  [2258,]   49   50   46 #>  [2259,]   48   49   45 #>  [2260,]   49   50   46 #>  [2261,]   49   51   46 #>  [2262,]   48   49   45 #>  [2263,]   49   50   46 #>  [2264,]   49   51   46 #>  [2265,]   49   50   46 #>  [2266,]   49   50   46 #>  [2267,]   49   50   46 #>  [2268,]   49   50   46 #>  [2269,]   49   50   46 #>  [2270,]   48   49   45 #>  [2271,]   49   51   46 #>  [2272,]   49   51   46 #>  [2273,]   49   51   46 #>  [2274,]   49   51   46 #>  [2275,]   49   51   46 #>  [2276,]   49   51   46 #>  [2277,]   48   49   45 #>  [2278,]   49   50   46 #>  [2279,]   48   49   45 #>  [2280,]   48   49   45 #>  [2281,]   49   50   46 #>  [2282,]   49   51   46 #>  [2283,]   48   49   45 #>  [2284,]   49   51   46 #>  [2285,]   48   49   45 #>  [2286,]   48   49   45 #>  [2287,]   49   51   46 #>  [2288,]   49   51   46 #>  [2289,]   49   50   46 #>  [2290,]   49   51   46 #>  [2291,]   49   50   46 #>  [2292,]   49   50   46 #>  [2293,]   48   49   45 #>  [2294,]   49   51   46 #>  [2295,]   48   49   45 #>  [2296,]   49   51   46 #>  [2297,]   49   50   46 #>  [2298,]   48   49   45 #>  [2299,]   49   50   46 #>  [2300,]   48   49   45 #>  [2301,]   51   53   48 #>  [2302,]   51   53   49 #>  [2303,]   50   52   47 #>  [2304,]   51   53   48 #>  [2305,]   51   53   49 #>  [2306,]   51   53   48 #>  [2307,]   50   52   47 #>  [2308,]   50   52   47 #>  [2309,]   51   53   49 #>  [2310,]   51   53   49 #>  [2311,]   51   53   48 #>  [2312,]   51   53   49 #>  [2313,]   51   53   49 #>  [2314,]   51   53   48 #>  [2315,]   51   53   48 #>  [2316,]   51   53   48 #>  [2317,]   51   53   49 #>  [2318,]   51   53   49 #>  [2319,]   51   53   48 #>  [2320,]   50   52   47 #>  [2321,]   51   53   49 #>  [2322,]   51   53   49 #>  [2323,]   51   53   49 #>  [2324,]   51   53   49 #>  [2325,]   50   52   47 #>  [2326,]   51   53   48 #>  [2327,]   51   53   49 #>  [2328,]   51   53   48 #>  [2329,]   51   53   49 #>  [2330,]   51   53   49 #>  [2331,]   51   53   49 #>  [2332,]   51   53   49 #>  [2333,]   51   53   49 #>  [2334,]   51   53   48 #>  [2335,]   51   53   48 #>  [2336,]   51   53   49 #>  [2337,]   51   53   48 #>  [2338,]   51   53   48 #>  [2339,]   50   52   47 #>  [2340,]   51   53   49 #>  [2341,]   51   53   49 #>  [2342,]   51   53   48 #>  [2343,]   51   53   48 #>  [2344,]   50   52   47 #>  [2345,]   51   53   48 #>  [2346,]   50   52   47 #>  [2347,]   51   53   49 #>  [2348,]   51   53   49 #>  [2349,]   50   52   47 #>  [2350,]   50   52   47 #>  [2351,]   51   53   49 #>  [2352,]   51   53   48 #>  [2353,]   50   52   47 #>  [2354,]   51   53   49 #>  [2355,]   50   52   47 #>  [2356,]   50   52   47 #>  [2357,]   51   53   48 #>  [2358,]   51   53   49 #>  [2359,]   50   52   47 #>  [2360,]   51   53   49 #>  [2361,]   51   53   49 #>  [2362,]   51   53   48 #>  [2363,]   51   53   49 #>  [2364,]   51   53   48 #>  [2365,]   50   52   47 #>  [2366,]   50   52   47 #>  [2367,]   51   53   48 #>  [2368,]   51   53   48 #>  [2369,]   51   53   48 #>  [2370,]   50   52   47 #>  [2371,]   51   53   49 #>  [2372,]   51   53   48 #>  [2373,]   51   53   48 #>  [2374,]   51   53   49 #>  [2375,]   51   53   49 #>  [2376,]   51   53   49 #>  [2377,]   51   53   48 #>  [2378,]   51   53   49 #>  [2379,]   51   53   48 #>  [2380,]   51   53   49 #>  [2381,]   51   53   49 #>  [2382,]   51   53   48 #>  [2383,]   51   53   49 #>  [2384,]   50   52   47 #>  [2385,]   51   53   48 #>  [2386,]   50   52   47 #>  [2387,]   51   53   49 #>  [2388,]   51   53   49 #>  [2389,]   51   53   48 #>  [2390,]   50   52   47 #>  [2391,]   51   53   48 #>  [2392,]   51   53   49 #>  [2393,]   51   53   49 #>  [2394,]   51   53   48 #>  [2395,]   51   53   49 #>  [2396,]   51   53   48 #>  [2397,]   51   53   48 #>  [2398,]   50   52   47 #>  [2399,]   51   53   49 #>  [2400,]   50   52   47 #>  [2401,]   52   54   50 #>  [2402,]   52   54   50 #>  [2403,]   52   54   50 #>  [2404,]   53   55   51 #>  [2405,]   52   54   50 #>  [2406,]   52   54   50 #>  [2407,]   52   54   50 #>  [2408,]   52   54   50 #>  [2409,]   52   54   50 #>  [2410,]   52   54   50 #>  [2411,]   52   54   50 #>  [2412,]   52   54   50 #>  [2413,]   52   54   50 #>  [2414,]   53   55   51 #>  [2415,]   52   54   50 #>  [2416,]   52   54   50 #>  [2417,]   52   54   50 #>  [2418,]   52   54   50 #>  [2419,]   52   54   50 #>  [2420,]   52   54   50 #>  [2421,]   52   54   50 #>  [2422,]   52   54   50 #>  [2423,]   52   54   50 #>  [2424,]   52   54   50 #>  [2425,]   52   54   50 #>  [2426,]   52   54   50 #>  [2427,]   53   55   51 #>  [2428,]   52   54   50 #>  [2429,]   52   54   50 #>  [2430,]   52   54   50 #>  [2431,]   52   54   50 #>  [2432,]   52   54   50 #>  [2433,]   52   54   50 #>  [2434,]   52   54   50 #>  [2435,]   52   54   50 #>  [2436,]   52   54   50 #>  [2437,]   52   54   50 #>  [2438,]   52   54   50 #>  [2439,]   52   54   50 #>  [2440,]   52   54   50 #>  [2441,]   52   54   50 #>  [2442,]   52   54   50 #>  [2443,]   52   54   50 #>  [2444,]   52   54   50 #>  [2445,]   52   54   50 #>  [2446,]   52   54   50 #>  [2447,]   52   54   50 #>  [2448,]   52   54   50 #>  [2449,]   52   54   50 #>  [2450,]   52   54   50 #>  [2451,]   52   54   50 #>  [2452,]   52   54   50 #>  [2453,]   52   54   50 #>  [2454,]   52   54   50 #>  [2455,]   52   54   50 #>  [2456,]   52   54   50 #>  [2457,]   52   54   50 #>  [2458,]   52   54   50 #>  [2459,]   52   54   50 #>  [2460,]   52   54   50 #>  [2461,]   53   55   51 #>  [2462,]   52   54   50 #>  [2463,]   52   54   50 #>  [2464,]   52   54   50 #>  [2465,]   52   54   50 #>  [2466,]   52   54   50 #>  [2467,]   52   54   50 #>  [2468,]   52   54   50 #>  [2469,]   53   55   51 #>  [2470,]   52   54   50 #>  [2471,]   52   54   50 #>  [2472,]   52   54   50 #>  [2473,]   52   54   50 #>  [2474,]   52   54   50 #>  [2475,]   52   54   50 #>  [2476,]   52   54   50 #>  [2477,]   52   54   50 #>  [2478,]   52   54   50 #>  [2479,]   52   54   50 #>  [2480,]   52   54   50 #>  [2481,]   52   54   50 #>  [2482,]   53   55   51 #>  [2483,]   52   54   50 #>  [2484,]   52   54   50 #>  [2485,]   52   54   50 #>  [2486,]   52   54   50 #>  [2487,]   52   54   50 #>  [2488,]   52   54   50 #>  [2489,]   52   54   50 #>  [2490,]   52   54   50 #>  [2491,]   52   54   50 #>  [2492,]   53   55   51 #>  [2493,]   53   55   51 #>  [2494,]   52   54   50 #>  [2495,]   52   54   50 #>  [2496,]   53   55   51 #>  [2497,]   53   55   51 #>  [2498,]   52   54   50 #>  [2499,]   52   54   50 #>  [2500,]   52   54   50 #>  [2501,]   55   57   52 #>  [2502,]   55   57   52 #>  [2503,]   55   57   52 #>  [2504,]   55   57   52 #>  [2505,]   55   57   52 #>  [2506,]   55   57   52 #>  [2507,]   55   57   52 #>  [2508,]   55   57   52 #>  [2509,]   55   57   52 #>  [2510,]   55   57   52 #>  [2511,]   55   57   52 #>  [2512,]   55   57   52 #>  [2513,]   55   57   52 #>  [2514,]   55   57   52 #>  [2515,]   54   56   52 #>  [2516,]   55   57   52 #>  [2517,]   54   56   52 #>  [2518,]   55   57   52 #>  [2519,]   55   57   52 #>  [2520,]   55   57   52 #>  [2521,]   55   57   52 #>  [2522,]   55   57   52 #>  [2523,]   55   57   52 #>  [2524,]   55   57   52 #>  [2525,]   55   57   52 #>  [2526,]   55   57   52 #>  [2527,]   55   57   52 #>  [2528,]   55   57   52 #>  [2529,]   55   57   52 #>  [2530,]   55   57   52 #>  [2531,]   54   56   52 #>  [2532,]   55   57   52 #>  [2533,]   55   57   52 #>  [2534,]   54   56   52 #>  [2535,]   55   57   52 #>  [2536,]   55   57   52 #>  [2537,]   54   56   52 #>  [2538,]   55   57   52 #>  [2539,]   55   57   52 #>  [2540,]   55   57   52 #>  [2541,]   55   57   52 #>  [2542,]   54   56   52 #>  [2543,]   54   56   52 #>  [2544,]   54   56   52 #>  [2545,]   55   57   52 #>  [2546,]   55   57   52 #>  [2547,]   55   57   52 #>  [2548,]   54   56   52 #>  [2549,]   55   57   52 #>  [2550,]   55   57   52 #>  [2551,]   55   57   52 #>  [2552,]   55   57   52 #>  [2553,]   55   57   52 #>  [2554,]   55   57   52 #>  [2555,]   55   57   52 #>  [2556,]   55   57   52 #>  [2557,]   55   57   52 #>  [2558,]   55   57   52 #>  [2559,]   55   57   52 #>  [2560,]   55   57   52 #>  [2561,]   55   57   52 #>  [2562,]   55   57   52 #>  [2563,]   54   56   52 #>  [2564,]   55   57   52 #>  [2565,]   55   57   52 #>  [2566,]   55   57   52 #>  [2567,]   55   57   52 #>  [2568,]   55   57   52 #>  [2569,]   55   57   52 #>  [2570,]   54   56   52 #>  [2571,]   55   57   52 #>  [2572,]   55   57   52 #>  [2573,]   55   57   52 #>  [2574,]   55   57   52 #>  [2575,]   54   56   52 #>  [2576,]   55   57   52 #>  [2577,]   55   57   52 #>  [2578,]   54   56   52 #>  [2579,]   54   56   52 #>  [2580,]   55   57   52 #>  [2581,]   55   57   52 #>  [2582,]   55   57   52 #>  [2583,]   55   57   52 #>  [2584,]   55   57   52 #>  [2585,]   55   57   52 #>  [2586,]   55   57   52 #>  [2587,]   55   57   52 #>  [2588,]   55   57   52 #>  [2589,]   55   57   52 #>  [2590,]   55   57   52 #>  [2591,]   55   57   52 #>  [2592,]   55   57   52 #>  [2593,]   55   57   52 #>  [2594,]   54   56   52 #>  [2595,]   54   56   52 #>  [2596,]   55   57   52 #>  [2597,]   55   57   52 #>  [2598,]   55   57   52 #>  [2599,]   55   57   52 #>  [2600,]   54   56   52 #>  [2601,]   57   60   54 #>  [2602,]   56   58   53 #>  [2603,]   56   58   53 #>  [2604,]   56   58   53 #>  [2605,]   56   58   53 #>  [2606,]   56   58   53 #>  [2607,]   56   58   53 #>  [2608,]   56   58   53 #>  [2609,]   57   60   54 #>  [2610,]   56   58   53 #>  [2611,]   56   58   53 #>  [2612,]   56   58   53 #>  [2613,]   57   59   54 #>  [2614,]   56   58   53 #>  [2615,]   56   58   53 #>  [2616,]   56   58   53 #>  [2617,]   57   60   54 #>  [2618,]   57   60   54 #>  [2619,]   56   58   53 #>  [2620,]   57   60   54 #>  [2621,]   56   58   53 #>  [2622,]   56   58   53 #>  [2623,]   56   58   53 #>  [2624,]   56   58   53 #>  [2625,]   56   58   53 #>  [2626,]   56   58   53 #>  [2627,]   57   60   54 #>  [2628,]   56   58   53 #>  [2629,]   56   58   53 #>  [2630,]   56   58   53 #>  [2631,]   56   58   53 #>  [2632,]   56   58   53 #>  [2633,]   57   60   54 #>  [2634,]   56   58   53 #>  [2635,]   56   58   53 #>  [2636,]   57   60   54 #>  [2637,]   56   58   53 #>  [2638,]   57   60   54 #>  [2639,]   56   58   53 #>  [2640,]   56   58   53 #>  [2641,]   56   58   53 #>  [2642,]   57   60   54 #>  [2643,]   56   58   53 #>  [2644,]   56   58   53 #>  [2645,]   56   58   53 #>  [2646,]   56   58   53 #>  [2647,]   56   58   53 #>  [2648,]   56   58   53 #>  [2649,]   56   58   53 #>  [2650,]   56   58   53 #>  [2651,]   57   60   54 #>  [2652,]   56   58   53 #>  [2653,]   57   60   54 #>  [2654,]   57   59   54 #>  [2655,]   56   58   53 #>  [2656,]   57   60   54 #>  [2657,]   56   58   53 #>  [2658,]   56   58   53 #>  [2659,]   56   58   53 #>  [2660,]   56   58   53 #>  [2661,]   56   58   53 #>  [2662,]   57   59   54 #>  [2663,]   56   58   53 #>  [2664,]   56   58   53 #>  [2665,]   57   60   54 #>  [2666,]   57   60   54 #>  [2667,]   56   58   53 #>  [2668,]   56   58   53 #>  [2669,]   56   58   53 #>  [2670,]   56   58   53 #>  [2671,]   56   58   53 #>  [2672,]   56   58   53 #>  [2673,]   56   58   53 #>  [2674,]   56   58   53 #>  [2675,]   56   58   53 #>  [2676,]   56   58   53 #>  [2677,]   57   59   54 #>  [2678,]   56   58   53 #>  [2679,]   57   59   54 #>  [2680,]   56   58   53 #>  [2681,]   56   58   53 #>  [2682,]   57   60   54 #>  [2683,]   57   59   54 #>  [2684,]   57   60   54 #>  [2685,]   57   60   54 #>  [2686,]   56   58   53 #>  [2687,]   57   60   54 #>  [2688,]   56   58   53 #>  [2689,]   56   58   53 #>  [2690,]   56   58   53 #>  [2691,]   57   60   54 #>  [2692,]   56   58   53 #>  [2693,]   57   60   54 #>  [2694,]   57   60   54 #>  [2695,]   56   58   53 #>  [2696,]   56   58   53 #>  [2697,]   56   58   53 #>  [2698,]   56   58   53 #>  [2699,]   56   58   53 #>  [2700,]   56   58   53 #>  [2701,]   58   63   56 #>  [2702,]   58   62   56 #>  [2703,]   59   61   55 #>  [2704,]   58   63   55 #>  [2705,]   58   62   56 #>  [2706,]   59   61   56 #>  [2707,]   58   63   55 #>  [2708,]   58   62   55 #>  [2709,]   58   63   56 #>  [2710,]   58   63   56 #>  [2711,]   58   62   56 #>  [2712,]   58   62   55 #>  [2713,]   58   63   56 #>  [2714,]   58   63   56 #>  [2715,]   58   62   56 #>  [2716,]   58   63   56 #>  [2717,]   58   62   56 #>  [2718,]   58   62   56 #>  [2719,]   58   62   56 #>  [2720,]   58   63   56 #>  [2721,]   58   62   56 #>  [2722,]   58   63   56 #>  [2723,]   58   62   55 #>  [2724,]   58   63   56 #>  [2725,]   58   63   55 #>  [2726,]   58   62   56 #>  [2727,]   58   62   56 #>  [2728,]   58   63   56 #>  [2729,]   58   62   56 #>  [2730,]   58   62   56 #>  [2731,]   58   62   55 #>  [2732,]   58   62   56 #>  [2733,]   58   62   56 #>  [2734,]   59   61   56 #>  [2735,]   58   62   56 #>  [2736,]   58   63   56 #>  [2737,]   58   62   55 #>  [2738,]   58   62   56 #>  [2739,]   58   63   56 #>  [2740,]   58   62   55 #>  [2741,]   58   62   56 #>  [2742,]   58   62   56 #>  [2743,]   58   62   56 #>  [2744,]   58   62   56 #>  [2745,]   58   63   56 #>  [2746,]   58   62   55 #>  [2747,]   58   62   55 #>  [2748,]   58   62   56 #>  [2749,]   58   63   56 #>  [2750,]   58   63   56 #>  [2751,]   58   62   56 #>  [2752,]   58   63   55 #>  [2753,]   58   63   56 #>  [2754,]   58   63   56 #>  [2755,]   58   63   55 #>  [2756,]   58   62   56 #>  [2757,]   58   63   55 #>  [2758,]   58   63   56 #>  [2759,]   58   63   55 #>  [2760,]   59   61   55 #>  [2761,]   58   62   56 #>  [2762,]   58   62   56 #>  [2763,]   58   62   56 #>  [2764,]   58   62   56 #>  [2765,]   59   61   56 #>  [2766,]   58   62   56 #>  [2767,]   58   63   56 #>  [2768,]   58   62   55 #>  [2769,]   58   62   56 #>  [2770,]   58   62   56 #>  [2771,]   58   62   56 #>  [2772,]   58   63   56 #>  [2773,]   58   63   56 #>  [2774,]   58   62   55 #>  [2775,]   58   62   56 #>  [2776,]   58   63   55 #>  [2777,]   58   62   56 #>  [2778,]   58   62   56 #>  [2779,]   58   62   56 #>  [2780,]   58   62   55 #>  [2781,]   58   62   56 #>  [2782,]   58   62   56 #>  [2783,]   58   62   56 #>  [2784,]   58   62   56 #>  [2785,]   58   63   56 #>  [2786,]   58   63   55 #>  [2787,]   58   63   56 #>  [2788,]   58   63   56 #>  [2789,]   58   62   56 #>  [2790,]   58   63   56 #>  [2791,]   58   63   56 #>  [2792,]   58   62   55 #>  [2793,]   59   61   56 #>  [2794,]   58   62   56 #>  [2795,]   58   62   56 #>  [2796,]   58   62   55 #>  [2797,]   58   62   55 #>  [2798,]   58   62   55 #>  [2799,]   58   62   56 #>  [2800,]   58   62   56 #>  [2801,]   61   65   58 #>  [2802,]   61   65   58 #>  [2803,]   61   65   58 #>  [2804,]   61   65   58 #>  [2805,]   61   65   58 #>  [2806,]   61   65   58 #>  [2807,]   61   65   58 #>  [2808,]   61   65   58 #>  [2809,]   61   65   58 #>  [2810,]   61   65   58 #>  [2811,]   61   65   58 #>  [2812,]   61   65   58 #>  [2813,]   61   65   58 #>  [2814,]   61   65   58 #>  [2815,]   60   64   57 #>  [2816,]   61   65   58 #>  [2817,]   61   65   58 #>  [2818,]   61   65   58 #>  [2819,]   61   65   58 #>  [2820,]   61   65   58 #>  [2821,]   61   65   58 #>  [2822,]   61   65   58 #>  [2823,]   61   65   58 #>  [2824,]   61   65   58 #>  [2825,]   61   65   58 #>  [2826,]   61   65   58 #>  [2827,]   61   65   58 #>  [2828,]   61   65   58 #>  [2829,]   61   65   58 #>  [2830,]   61   65   58 #>  [2831,]   60   64   57 #>  [2832,]   61   65   58 #>  [2833,]   61   65   58 #>  [2834,]   60   64   57 #>  [2835,]   61   65   58 #>  [2836,]   61   65   58 #>  [2837,]   61   65   58 #>  [2838,]   61   65   58 #>  [2839,]   61   65   58 #>  [2840,]   61   65   58 #>  [2841,]   61   65   58 #>  [2842,]   60   64   57 #>  [2843,]   60   64   57 #>  [2844,]   60   64   57 #>  [2845,]   61   65   58 #>  [2846,]   61   65   58 #>  [2847,]   61   65   58 #>  [2848,]   61   65   58 #>  [2849,]   61   65   58 #>  [2850,]   61   65   58 #>  [2851,]   61   65   58 #>  [2852,]   61   65   58 #>  [2853,]   61   65   58 #>  [2854,]   61   65   58 #>  [2855,]   61   65   58 #>  [2856,]   61   65   58 #>  [2857,]   61   65   58 #>  [2858,]   61   65   58 #>  [2859,]   61   65   58 #>  [2860,]   61   65   58 #>  [2861,]   61   65   58 #>  [2862,]   61   65   58 #>  [2863,]   60   64   57 #>  [2864,]   61   65   58 #>  [2865,]   61   65   58 #>  [2866,]   61   65   58 #>  [2867,]   61   65   58 #>  [2868,]   61   65   58 #>  [2869,]   61   65   58 #>  [2870,]   61   65   58 #>  [2871,]   61   65   58 #>  [2872,]   61   65   58 #>  [2873,]   61   65   58 #>  [2874,]   61   65   58 #>  [2875,]   60   64   57 #>  [2876,]   61   65   58 #>  [2877,]   61   65   58 #>  [2878,]   60   64   57 #>  [2879,]   61   65   58 #>  [2880,]   61   65   58 #>  [2881,]   61   65   58 #>  [2882,]   61   65   58 #>  [2883,]   61   65   58 #>  [2884,]   61   65   58 #>  [2885,]   61   65   58 #>  [2886,]   61   65   58 #>  [2887,]   61   65   58 #>  [2888,]   61   65   58 #>  [2889,]   61   65   58 #>  [2890,]   61   65   58 #>  [2891,]   61   65   58 #>  [2892,]   61   65   58 #>  [2893,]   61   65   58 #>  [2894,]   61   65   58 #>  [2895,]   60   64   57 #>  [2896,]   61   65   58 #>  [2897,]   61   65   58 #>  [2898,]   61   65   58 #>  [2899,]   61   65   58 #>  [2900,]   61   65   58 #>  [2901,]   62   68   60 #>  [2902,]   63   66   59 #>  [2903,]   62   67   60 #>  [2904,]   62   67   60 #>  [2905,]   63   66   59 #>  [2906,]   62   68   60 #>  [2907,]   62   67   60 #>  [2908,]   62   67   60 #>  [2909,]   63   66   59 #>  [2910,]   63   66   59 #>  [2911,]   62   68   60 #>  [2912,]   63   66   59 #>  [2913,]   63   66   59 #>  [2914,]   62   68   60 #>  [2915,]   62   68   60 #>  [2916,]   62   68   60 #>  [2917,]   63   66   59 #>  [2918,]   63   66   59 #>  [2919,]   62   68   60 #>  [2920,]   63   66   59 #>  [2921,]   63   66   59 #>  [2922,]   62   68   60 #>  [2923,]   63   66   59 #>  [2924,]   63   66   59 #>  [2925,]   62   67   60 #>  [2926,]   62   68   60 #>  [2927,]   63   66   59 #>  [2928,]   62   68   60 #>  [2929,]   63   66   59 #>  [2930,]   62   68   60 #>  [2931,]   63   66   59 #>  [2932,]   63   66   59 #>  [2933,]   63   66   59 #>  [2934,]   62   68   60 #>  [2935,]   62   68   60 #>  [2936,]   63   66   59 #>  [2937,]   62   68   60 #>  [2938,]   62   68   60 #>  [2939,]   62   68   60 #>  [2940,]   63   66   59 #>  [2941,]   62   68   60 #>  [2942,]   62   68   60 #>  [2943,]   62   68   60 #>  [2944,]   62   68   60 #>  [2945,]   62   68   60 #>  [2946,]   62   68   60 #>  [2947,]   62   68   60 #>  [2948,]   62   68   60 #>  [2949,]   62   68   60 #>  [2950,]   62   68   60 #>  [2951,]   62   68   60 #>  [2952,]   62   67   60 #>  [2953,]   63   66   59 #>  [2954,]   62   68   60 #>  [2955,]   62   68   60 #>  [2956,]   62   68   60 #>  [2957,]   62   67   60 #>  [2958,]   62   68   60 #>  [2959,]   62   67   60 #>  [2960,]   63   66   59 #>  [2961,]   63   66   59 #>  [2962,]   62   68   60 #>  [2963,]   63   66   59 #>  [2964,]   62   68   60 #>  [2965,]   62   68   60 #>  [2966,]   62   68   60 #>  [2967,]   62   68   60 #>  [2968,]   62   68   60 #>  [2969,]   62   68   60 #>  [2970,]   63   66   59 #>  [2971,]   62   68   60 #>  [2972,]   62   68   60 #>  [2973,]   62   68   60 #>  [2974,]   62   68   60 #>  [2975,]   63   66   59 #>  [2976,]   62   68   60 #>  [2977,]   62   68   60 #>  [2978,]   62   68   60 #>  [2979,]   62   68   60 #>  [2980,]   63   66   59 #>  [2981,]   63   66   59 #>  [2982,]   62   68   60 #>  [2983,]   63   66   59 #>  [2984,]   63   66   59 #>  [2985,]   62   68   60 #>  [2986,]   63   66   59 #>  [2987,]   62   68   60 #>  [2988,]   63   66   59 #>  [2989,]   62   68   60 #>  [2990,]   62   68   60 #>  [2991,]   62   68   60 #>  [2992,]   62   68   60 #>  [2993,]   62   68   60 #>  [2994,]   62   68   60 #>  [2995,]   62   68   60 #>  [2996,]   62   67   60 #>  [2997,]   62   67   60 #>  [2998,]   62   68   60 #>  [2999,]   62   68   60 #>  [3000,]   62   68   60 #>  [3001,]   65   70   62 #>  [3002,]   65   69   61 #>  [3003,]   64   69   61 #>  [3004,]   65   70   62 #>  [3005,]   65   69   61 #>  [3006,]   65   69   61 #>  [3007,]   65   70   62 #>  [3008,]   65   69   61 #>  [3009,]   65   70   62 #>  [3010,]   64   70   62 #>  [3011,]   64   69   61 #>  [3012,]   65   69   61 #>  [3013,]   65   70   62 #>  [3014,]   64   70   62 #>  [3015,]   65   69   61 #>  [3016,]   65   70   62 #>  [3017,]   65   69   61 #>  [3018,]   65   69   61 #>  [3019,]   65   69   61 #>  [3020,]   65   70   62 #>  [3021,]   64   69   61 #>  [3022,]   65   70   62 #>  [3023,]   65   69   61 #>  [3024,]   65   70   62 #>  [3025,]   65   70   62 #>  [3026,]   65   69   61 #>  [3027,]   65   69   61 #>  [3028,]   64   70   62 #>  [3029,]   65   69   61 #>  [3030,]   65   69   61 #>  [3031,]   64   69   61 #>  [3032,]   64   69   61 #>  [3033,]   65   69   61 #>  [3034,]   64   69   61 #>  [3035,]   65   69   61 #>  [3036,]   65   70   62 #>  [3037,]   65   69   61 #>  [3038,]   65   69   61 #>  [3039,]   65   70   62 #>  [3040,]   64   69   61 #>  [3041,]   65   69   61 #>  [3042,]   65   69   61 #>  [3043,]   65   69   61 #>  [3044,]   65   69   61 #>  [3045,]   65   70   62 #>  [3046,]   65   69   61 #>  [3047,]   65   69   61 #>  [3048,]   64   69   61 #>  [3049,]   65   70   62 #>  [3050,]   65   70   62 #>  [3051,]   65   69   61 #>  [3052,]   65   70   62 #>  [3053,]   65   70   62 #>  [3054,]   65   70   62 #>  [3055,]   65   70   62 #>  [3056,]   65   69   61 #>  [3057,]   65   70   62 #>  [3058,]   65   70   62 #>  [3059,]   65   70   62 #>  [3060,]   65   69   61 #>  [3061,]   65   69   61 #>  [3062,]   65   69   61 #>  [3063,]   65   69   61 #>  [3064,]   65   69   61 #>  [3065,]   65   69   61 #>  [3066,]   65   69   61 #>  [3067,]   65   70   62 #>  [3068,]   65   69   61 #>  [3069,]   65   69   61 #>  [3070,]   64   69   61 #>  [3071,]   65   69   61 #>  [3072,]   65   70   62 #>  [3073,]   65   70   62 #>  [3074,]   64   69   61 #>  [3075,]   65   69   61 #>  [3076,]   65   70   62 #>  [3077,]   65   69   61 #>  [3078,]   65   69   61 #>  [3079,]   65   69   61 #>  [3080,]   65   69   61 #>  [3081,]   65   69   61 #>  [3082,]   64   69   61 #>  [3083,]   65   69   61 #>  [3084,]   65   69   61 #>  [3085,]   65   70   62 #>  [3086,]   65   70   62 #>  [3087,]   65   70   62 #>  [3088,]   65   69   61 #>  [3089,]   65   69   61 #>  [3090,]   65   70   62 #>  [3091,]   65   70   62 #>  [3092,]   65   69   61 #>  [3093,]   65   69   61 #>  [3094,]   65   69   61 #>  [3095,]   65   69   61 #>  [3096,]   65   69   61 #>  [3097,]   65   69   61 #>  [3098,]   64   69   61 #>  [3099,]   65   69   61 #>  [3100,]   65   69   61 #>  [3101,]   67   72   63 #>  [3102,]   67   72   63 #>  [3103,]   66   71   64 #>  [3104,]   67   72   63 #>  [3105,]   67   72   63 #>  [3106,]   67   72   63 #>  [3107,]   67   72   63 #>  [3108,]   67   72   63 #>  [3109,]   67   72   63 #>  [3110,]   67   72   63 #>  [3111,]   66   71   65 #>  [3112,]   66   71   64 #>  [3113,]   67   72   63 #>  [3114,]   66   71   64 #>  [3115,]   67   72   63 #>  [3116,]   67   72   63 #>  [3117,]   67   72   63 #>  [3118,]   67   72   63 #>  [3119,]   66   71   65 #>  [3120,]   66   71   65 #>  [3121,]   67   72   63 #>  [3122,]   66   71   65 #>  [3123,]   67   72   63 #>  [3124,]   67   72   63 #>  [3125,]   67   72   63 #>  [3126,]   66   71   64 #>  [3127,]   67   72   63 #>  [3128,]   67   72   63 #>  [3129,]   66   71   65 #>  [3130,]   67   72   63 #>  [3131,]   67   72   63 #>  [3132,]   66   71   64 #>  [3133,]   67   72   63 #>  [3134,]   67   72   63 #>  [3135,]   67   72   63 #>  [3136,]   66   71   65 #>  [3137,]   67   72   63 #>  [3138,]   67   72   63 #>  [3139,]   67   72   63 #>  [3140,]   66   71   65 #>  [3141,]   66   71   65 #>  [3142,]   66   71   65 #>  [3143,]   67   72   63 #>  [3144,]   67   72   63 #>  [3145,]   67   72   63 #>  [3146,]   67   72   63 #>  [3147,]   67   72   63 #>  [3148,]   66   71   65 #>  [3149,]   67   72   63 #>  [3150,]   67   72   63 #>  [3151,]   66   71   65 #>  [3152,]   67   72   63 #>  [3153,]   67   72   63 #>  [3154,]   66   71   65 #>  [3155,]   67   72   63 #>  [3156,]   67   72   63 #>  [3157,]   67   72   63 #>  [3158,]   67   72   63 #>  [3159,]   67   72   63 #>  [3160,]   66   71   65 #>  [3161,]   67   72   63 #>  [3162,]   66   71   65 #>  [3163,]   66   71   65 #>  [3164,]   67   72   63 #>  [3165,]   67   72   63 #>  [3166,]   66   71   65 #>  [3167,]   67   72   63 #>  [3168,]   66   71   65 #>  [3169,]   66   71   64 #>  [3170,]   67   72   63 #>  [3171,]   67   72   63 #>  [3172,]   67   72   63 #>  [3173,]   67   72   63 #>  [3174,]   67   72   63 #>  [3175,]   67   72   63 #>  [3176,]   67   72   63 #>  [3177,]   67   72   63 #>  [3178,]   67   72   63 #>  [3179,]   67   72   63 #>  [3180,]   66   71   64 #>  [3181,]   66   71   65 #>  [3182,]   67   72   63 #>  [3183,]   66   71   65 #>  [3184,]   67   72   63 #>  [3185,]   67   72   63 #>  [3186,]   67   72   63 #>  [3187,]   67   72   63 #>  [3188,]   67   72   63 #>  [3189,]   66   71   65 #>  [3190,]   67   72   63 #>  [3191,]   66   71   65 #>  [3192,]   67   72   63 #>  [3193,]   67   72   63 #>  [3194,]   67   72   63 #>  [3195,]   67   72   63 #>  [3196,]   67   72   63 #>  [3197,]   67   72   63 #>  [3198,]   67   72   63 #>  [3199,]   67   72   63 #>  [3200,]   67   72   63 #>  [3201,]   68   73   66 #>  [3202,]   68   73   66 #>  [3203,]   69   74   68 #>  [3204,]   68   73   67 #>  [3205,]   68   73   66 #>  [3206,]   69   74   68 #>  [3207,]   68   73   66 #>  [3208,]   68   73   66 #>  [3209,]   68   73   67 #>  [3210,]   68   73   67 #>  [3211,]   68   73   67 #>  [3212,]   69   74   68 #>  [3213,]   68   73   66 #>  [3214,]   68   73   67 #>  [3215,]   68   73   67 #>  [3216,]   68   73   66 #>  [3217,]   68   73   66 #>  [3218,]   68   73   67 #>  [3219,]   69   74   68 #>  [3220,]   69   74   68 #>  [3221,]   68   73   67 #>  [3222,]   68   73   66 #>  [3223,]   68   73   66 #>  [3224,]   68   73   66 #>  [3225,]   69   74   68 #>  [3226,]   68   73   67 #>  [3227,]   68   73   67 #>  [3228,]   69   74   68 #>  [3229,]   68   73   66 #>  [3230,]   68   73   67 #>  [3231,]   68   73   67 #>  [3232,]   68   73   67 #>  [3233,]   69   74   68 #>  [3234,]   69   74   68 #>  [3235,]   68   73   66 #>  [3236,]   68   73   67 #>  [3237,]   68   73   66 #>  [3238,]   68   73   67 #>  [3239,]   68   73   66 #>  [3240,]   68   73   66 #>  [3241,]   68   73   67 #>  [3242,]   68   73   67 #>  [3243,]   68   73   66 #>  [3244,]   68   73   66 #>  [3245,]   68   73   66 #>  [3246,]   68   73   66 #>  [3247,]   68   73   66 #>  [3248,]   68   73   67 #>  [3249,]   68   73   66 #>  [3250,]   68   73   66 #>  [3251,]   68   73   66 #>  [3252,]   68   73   66 #>  [3253,]   68   73   66 #>  [3254,]   68   73   66 #>  [3255,]   68   73   66 #>  [3256,]   68   73   66 #>  [3257,]   68   73   66 #>  [3258,]   68   73   67 #>  [3259,]   68   73   66 #>  [3260,]   69   74   68 #>  [3261,]   68   73   67 #>  [3262,]   68   73   67 #>  [3263,]   68   73   66 #>  [3264,]   68   73   66 #>  [3265,]   69   74   68 #>  [3266,]   68   73   66 #>  [3267,]   68   73   66 #>  [3268,]   68   73   67 #>  [3269,]   68   73   67 #>  [3270,]   69   74   68 #>  [3271,]   68   73   66 #>  [3272,]   68   73   66 #>  [3273,]   69   74   68 #>  [3274,]   68   73   67 #>  [3275,]   68   73   67 #>  [3276,]   68   73   66 #>  [3277,]   68   73   66 #>  [3278,]   68   73   66 #>  [3279,]   68   73   66 #>  [3280,]   68   73   66 #>  [3281,]   68   73   66 #>  [3282,]   68   73   67 #>  [3283,]   68   73   66 #>  [3284,]   68   73   66 #>  [3285,]   68   73   67 #>  [3286,]   68   73   66 #>  [3287,]   68   73   66 #>  [3288,]   68   73   66 #>  [3289,]   68   73   66 #>  [3290,]   68   73   66 #>  [3291,]   68   73   66 #>  [3292,]   68   73   67 #>  [3293,]   69   74   68 #>  [3294,]   68   73   66 #>  [3295,]   68   73   66 #>  [3296,]   68   73   67 #>  [3297,]   69   74   68 #>  [3298,]   69   74   68 #>  [3299,]   68   73   67 #>  [3300,]   68   73   66 #>  [3301,]   71   76   70 #>  [3302,]   71   76   70 #>  [3303,]   70   75   69 #>  [3304,]   70   75   69 #>  [3305,]   71   76   70 #>  [3306,]   71   76   70 #>  [3307,]   70   75   69 #>  [3308,]   70   75   69 #>  [3309,]   71   76   70 #>  [3310,]   71   76   70 #>  [3311,]   71   76   70 #>  [3312,]   70   75   69 #>  [3313,]   71   76   70 #>  [3314,]   71   76   70 #>  [3315,]   71   76   70 #>  [3316,]   71   76   70 #>  [3317,]   71   76   70 #>  [3318,]   71   76   70 #>  [3319,]   71   76   70 #>  [3320,]   71   76   70 #>  [3321,]   71   76   70 #>  [3322,]   71   76   70 #>  [3323,]   71   76   70 #>  [3324,]   71   76   70 #>  [3325,]   70   75   69 #>  [3326,]   71   76   70 #>  [3327,]   71   76   70 #>  [3328,]   71   76   70 #>  [3329,]   71   76   70 #>  [3330,]   71   76   70 #>  [3331,]   70   75   69 #>  [3332,]   71   76   70 #>  [3333,]   71   76   70 #>  [3334,]   71   76   70 #>  [3335,]   71   76   70 #>  [3336,]   71   76   70 #>  [3337,]   71   76   70 #>  [3338,]   71   76   70 #>  [3339,]   71   76   70 #>  [3340,]   71   76   70 #>  [3341,]   71   76   70 #>  [3342,]   71   76   70 #>  [3343,]   71   76   70 #>  [3344,]   71   76   70 #>  [3345,]   71   76   70 #>  [3346,]   71   76   70 #>  [3347,]   71   76   70 #>  [3348,]   71   76   70 #>  [3349,]   71   76   70 #>  [3350,]   71   76   70 #>  [3351,]   71   76   70 #>  [3352,]   70   75   69 #>  [3353,]   71   76   70 #>  [3354,]   71   76   70 #>  [3355,]   71   76   70 #>  [3356,]   71   76   70 #>  [3357,]   70   75   69 #>  [3358,]   71   76   70 #>  [3359,]   70   75   69 #>  [3360,]   70   75   69 #>  [3361,]   71   76   70 #>  [3362,]   71   76   70 #>  [3363,]   71   76   70 #>  [3364,]   71   76   70 #>  [3365,]   71   76   70 #>  [3366,]   71   76   70 #>  [3367,]   71   76   70 #>  [3368,]   70   75   69 #>  [3369,]   71   76   70 #>  [3370,]   71   76   70 #>  [3371,]   71   76   70 #>  [3372,]   71   76   70 #>  [3373,]   71   76   70 #>  [3374,]   71   76   70 #>  [3375,]   71   76   70 #>  [3376,]   71   76   70 #>  [3377,]   71   76   70 #>  [3378,]   71   76   70 #>  [3379,]   71   76   70 #>  [3380,]   71   76   70 #>  [3381,]   71   76   70 #>  [3382,]   71   76   70 #>  [3383,]   71   76   70 #>  [3384,]   71   76   70 #>  [3385,]   71   76   70 #>  [3386,]   70   75   69 #>  [3387,]   71   76   70 #>  [3388,]   71   76   70 #>  [3389,]   71   76   70 #>  [3390,]   71   76   70 #>  [3391,]   71   76   70 #>  [3392,]   71   76   70 #>  [3393,]   71   76   70 #>  [3394,]   71   76   70 #>  [3395,]   71   76   70 #>  [3396,]   70   75   69 #>  [3397,]   70   75   69 #>  [3398,]   71   76   70 #>  [3399,]   71   76   70 #>  [3400,]   71   76   70 #>  [3401,]   73   78   72 #>  [3402,]   73   78   72 #>  [3403,]   72   77   71 #>  [3404,]   72   77   71 #>  [3405,]   72   77   71 #>  [3406,]   72   77   71 #>  [3407,]   72   77   71 #>  [3408,]   73   78   72 #>  [3409,]   72   77   71 #>  [3410,]   72   77   71 #>  [3411,]   72   77   71 #>  [3412,]   73   78   72 #>  [3413,]   73   78   72 #>  [3414,]   72   77   71 #>  [3415,]   73   78   72 #>  [3416,]   73   78   72 #>  [3417,]   72   77   71 #>  [3418,]   72   77   71 #>  [3419,]   73   78   72 #>  [3420,]   73   78   72 #>  [3421,]   72   77   71 #>  [3422,]   73   78   72 #>  [3423,]   73   78   72 #>  [3424,]   72   77   71 #>  [3425,]   72   77   71 #>  [3426,]   73   78   72 #>  [3427,]   73   78   72 #>  [3428,]   72   77   71 #>  [3429,]   73   78   72 #>  [3430,]   73   78   72 #>  [3431,]   72   77   71 #>  [3432,]   72   77   71 #>  [3433,]   73   78   72 #>  [3434,]   72   77   71 #>  [3435,]   72   77   71 #>  [3436,]   73   78   72 #>  [3437,]   73   78   72 #>  [3438,]   73   78   72 #>  [3439,]   72   77   71 #>  [3440,]   72   77   71 #>  [3441,]   73   78   72 #>  [3442,]   72   77   71 #>  [3443,]   73   78   72 #>  [3444,]   73   78   72 #>  [3445,]   73   78   72 #>  [3446,]   73   78   72 #>  [3447,]   72   77   71 #>  [3448,]   72   77   71 #>  [3449,]   73   78   72 #>  [3450,]   73   78   72 #>  [3451,]   73   78   72 #>  [3452,]   72   77   71 #>  [3453,]   73   78   72 #>  [3454,]   72   77   71 #>  [3455,]   73   78   72 #>  [3456,]   73   78   72 #>  [3457,]   72   77   71 #>  [3458,]   73   78   72 #>  [3459,]   73   78   72 #>  [3460,]   73   78   72 #>  [3461,]   73   78   72 #>  [3462,]   72   77   71 #>  [3463,]   73   78   72 #>  [3464,]   73   78   72 #>  [3465,]   72   77   71 #>  [3466,]   73   78   72 #>  [3467,]   72   77   71 #>  [3468,]   73   78   72 #>  [3469,]   73   78   72 #>  [3470,]   72   77   71 #>  [3471,]   73   78   72 #>  [3472,]   72   77   71 #>  [3473,]   72   77   71 #>  [3474,]   72   77   71 #>  [3475,]   73   78   72 #>  [3476,]   72   77   71 #>  [3477,]   73   78   72 #>  [3478,]   73   78   72 #>  [3479,]   72   77   71 #>  [3480,]   73   78   72 #>  [3481,]   73   78   72 #>  [3482,]   72   77   71 #>  [3483,]   73   78   72 #>  [3484,]   73   78   72 #>  [3485,]   73   78   72 #>  [3486,]   72   77   71 #>  [3487,]   73   78   72 #>  [3488,]   72   77   71 #>  [3489,]   72   77   71 #>  [3490,]   73   78   72 #>  [3491,]   72   77   71 #>  [3492,]   72   77   71 #>  [3493,]   73   78   72 #>  [3494,]   72   77   71 #>  [3495,]   73   78   72 #>  [3496,]   73   78   72 #>  [3497,]   73   78   72 #>  [3498,]   72   77   71 #>  [3499,]   72   77   71 #>  [3500,]   73   78   72 #>  [3501,]   75   80   74 #>  [3502,]   75   80   74 #>  [3503,]   74   79   73 #>  [3504,]   75   80   74 #>  [3505,]   75   80   74 #>  [3506,]   75   80   74 #>  [3507,]   75   80   74 #>  [3508,]   75   80   74 #>  [3509,]   75   80   74 #>  [3510,]   74   79   73 #>  [3511,]   74   79   73 #>  [3512,]   75   80   74 #>  [3513,]   75   80   74 #>  [3514,]   74   79   73 #>  [3515,]   75   80   74 #>  [3516,]   75   80   74 #>  [3517,]   75   80   74 #>  [3518,]   75   80   74 #>  [3519,]   75   80   74 #>  [3520,]   75   80   74 #>  [3521,]   75   80   74 #>  [3522,]   75   80   74 #>  [3523,]   75   80   74 #>  [3524,]   75   80   74 #>  [3525,]   75   80   74 #>  [3526,]   75   80   74 #>  [3527,]   75   80   74 #>  [3528,]   75   80   74 #>  [3529,]   75   80   74 #>  [3530,]   75   80   74 #>  [3531,]   74   79   73 #>  [3532,]   74   79   73 #>  [3533,]   75   80   74 #>  [3534,]   75   80   74 #>  [3535,]   75   80   74 #>  [3536,]   75   80   74 #>  [3537,]   75   80   74 #>  [3538,]   75   80   74 #>  [3539,]   75   80   74 #>  [3540,]   74   79   73 #>  [3541,]   75   80   74 #>  [3542,]   75   80   74 #>  [3543,]   75   80   74 #>  [3544,]   75   80   74 #>  [3545,]   75   80   74 #>  [3546,]   75   80   74 #>  [3547,]   75   80   74 #>  [3548,]   74   79   73 #>  [3549,]   75   80   74 #>  [3550,]   75   80   74 #>  [3551,]   75   80   74 #>  [3552,]   75   80   74 #>  [3553,]   75   80   74 #>  [3554,]   75   80   74 #>  [3555,]   75   80   74 #>  [3556,]   75   80   74 #>  [3557,]   75   80   74 #>  [3558,]   75   80   74 #>  [3559,]   75   80   74 #>  [3560,]   75   80   74 #>  [3561,]   75   80   74 #>  [3562,]   75   80   74 #>  [3563,]   75   80   74 #>  [3564,]   75   80   74 #>  [3565,]   75   80   74 #>  [3566,]   75   80   74 #>  [3567,]   75   80   74 #>  [3568,]   75   80   74 #>  [3569,]   75   80   74 #>  [3570,]   74   79   73 #>  [3571,]   75   80   74 #>  [3572,]   75   80   74 #>  [3573,]   75   80   74 #>  [3574,]   74   79   73 #>  [3575,]   75   80   74 #>  [3576,]   75   80   74 #>  [3577,]   75   80   74 #>  [3578,]   75   80   74 #>  [3579,]   75   80   74 #>  [3580,]   75   80   74 #>  [3581,]   75   80   74 #>  [3582,]   74   79   73 #>  [3583,]   75   80   74 #>  [3584,]   75   80   74 #>  [3585,]   75   80   74 #>  [3586,]   75   80   74 #>  [3587,]   75   80   74 #>  [3588,]   75   80   74 #>  [3589,]   75   80   74 #>  [3590,]   75   80   74 #>  [3591,]   75   80   74 #>  [3592,]   75   80   74 #>  [3593,]   75   80   74 #>  [3594,]   75   80   74 #>  [3595,]   75   80   74 #>  [3596,]   75   80   74 #>  [3597,]   75   80   74 #>  [3598,]   74   79   73 #>  [3599,]   75   80   74 #>  [3600,]   75   80   74 #>  [3601,]   77   82   75 #>  [3602,]   78   82   75 #>  [3603,]   76   81   76 #>  [3604,]   77   82   75 #>  [3605,]   78   82   75 #>  [3606,]   78   82   75 #>  [3607,]   78   82   75 #>  [3608,]   77   82   75 #>  [3609,]   77   82   75 #>  [3610,]   78   82   75 #>  [3611,]   77   82   75 #>  [3612,]   76   81   77 #>  [3613,]   77   82   75 #>  [3614,]   76   81   77 #>  [3615,]   77   82   75 #>  [3616,]   78   82   75 #>  [3617,]   77   82   75 #>  [3618,]   78   82   75 #>  [3619,]   78   82   75 #>  [3620,]   78   82   75 #>  [3621,]   77   82   75 #>  [3622,]   77   82   75 #>  [3623,]   78   82   75 #>  [3624,]   78   82   75 #>  [3625,]   78   82   75 #>  [3626,]   76   81   77 #>  [3627,]   77   82   75 #>  [3628,]   78   82   75 #>  [3629,]   78   82   75 #>  [3630,]   77   82   75 #>  [3631,]   78   82   75 #>  [3632,]   76   81   77 #>  [3633,]   78   82   75 #>  [3634,]   78   82   75 #>  [3635,]   77   82   75 #>  [3636,]   78   82   75 #>  [3637,]   78   82   75 #>  [3638,]   78   82   75 #>  [3639,]   78   82   75 #>  [3640,]   78   82   75 #>  [3641,]   78   82   75 #>  [3642,]   78   82   75 #>  [3643,]   77   82   75 #>  [3644,]   77   82   75 #>  [3645,]   77   82   75 #>  [3646,]   77   82   75 #>  [3647,]   78   82   75 #>  [3648,]   76   81   76 #>  [3649,]   77   82   75 #>  [3650,]   78   82   75 #>  [3651,]   76   81   76 #>  [3652,]   77   82   75 #>  [3653,]   78   82   75 #>  [3654,]   76   81   76 #>  [3655,]   77   82   75 #>  [3656,]   78   82   75 #>  [3657,]   78   82   75 #>  [3658,]   77   82   75 #>  [3659,]   78   82   75 #>  [3660,]   78   82   75 #>  [3661,]   78   82   75 #>  [3662,]   76   81   76 #>  [3663,]   78   82   75 #>  [3664,]   78   82   75 #>  [3665,]   78   82   75 #>  [3666,]   76   81   77 #>  [3667,]   77   82   75 #>  [3668,]   77   82   75 #>  [3669,]   76   81   76 #>  [3670,]   78   82   75 #>  [3671,]   78   82   75 #>  [3672,]   78   82   75 #>  [3673,]   78   82   75 #>  [3674,]   77   82   75 #>  [3675,]   78   82   75 #>  [3676,]   78   82   75 #>  [3677,]   78   82   75 #>  [3678,]   78   82   75 #>  [3679,]   77   82   75 #>  [3680,]   76   81   76 #>  [3681,]   76   81   76 #>  [3682,]   77   82   75 #>  [3683,]   77   82   75 #>  [3684,]   78   82   75 #>  [3685,]   77   82   75 #>  [3686,]   78   82   75 #>  [3687,]   77   82   75 #>  [3688,]   77   82   75 #>  [3689,]   76   81   76 #>  [3690,]   77   82   75 #>  [3691,]   77   82   75 #>  [3692,]   77   82   75 #>  [3693,]   78   82   75 #>  [3694,]   78   82   75 #>  [3695,]   77   82   75 #>  [3696,]   77   82   75 #>  [3697,]   78   82   75 #>  [3698,]   78   82   75 #>  [3699,]   77   82   75 #>  [3700,]   78   82   75 #>  [3701,]   79   84   79 #>  [3702,]   79   83   78 #>  [3703,]   79   84   79 #>  [3704,]   79   84   79 #>  [3705,]   79   84   79 #>  [3706,]   79   83   78 #>  [3707,]   79   84   79 #>  [3708,]   79   84   79 #>  [3709,]   79   84   79 #>  [3710,]   79   84   79 #>  [3711,]   79   83   78 #>  [3712,]   79   83   78 #>  [3713,]   79   84   79 #>  [3714,]   79   84   79 #>  [3715,]   79   83   78 #>  [3716,]   79   84   79 #>  [3717,]   79   83   78 #>  [3718,]   79   84   79 #>  [3719,]   79   83   78 #>  [3720,]   80   84   79 #>  [3721,]   79   84   79 #>  [3722,]   80   84   79 #>  [3723,]   79   83   78 #>  [3724,]   79   84   79 #>  [3725,]   79   84   79 #>  [3726,]   79   83   78 #>  [3727,]   79   84   79 #>  [3728,]   79   84   79 #>  [3729,]   80   83   78 #>  [3730,]   79   83   78 #>  [3731,]   79   83   78 #>  [3732,]   79   83   78 #>  [3733,]   79   84   79 #>  [3734,]   79   83   78 #>  [3735,]   79   83   78 #>  [3736,]   79   84   79 #>  [3737,]   79   83   78 #>  [3738,]   79   84   79 #>  [3739,]   79   84   79 #>  [3740,]   79   84   79 #>  [3741,]   79   84   79 #>  [3742,]   79   83   78 #>  [3743,]   79   83   78 #>  [3744,]   79   83   78 #>  [3745,]   79   84   79 #>  [3746,]   79   83   78 #>  [3747,]   79   83   78 #>  [3748,]   79   83   78 #>  [3749,]   79   84   79 #>  [3750,]   79   84   79 #>  [3751,]   79   83   78 #>  [3752,]   79   84   79 #>  [3753,]   79   84   79 #>  [3754,]   79   84   79 #>  [3755,]   79   84   79 #>  [3756,]   79   83   78 #>  [3757,]   79   84   79 #>  [3758,]   80   84   79 #>  [3759,]   79   84   79 #>  [3760,]   79   83   78 #>  [3761,]   79   83   78 #>  [3762,]   79   83   78 #>  [3763,]   79   83   78 #>  [3764,]   80   83   78 #>  [3765,]   79   83   78 #>  [3766,]   79   83   78 #>  [3767,]   79   84   79 #>  [3768,]   79   83   78 #>  [3769,]   79   83   78 #>  [3770,]   79   83   78 #>  [3771,]   79   84   79 #>  [3772,]   79   84   79 #>  [3773,]   79   84   79 #>  [3774,]   79   84   79 #>  [3775,]   79   83   78 #>  [3776,]   79   84   79 #>  [3777,]   80   84   79 #>  [3778,]   79   83   78 #>  [3779,]   79   83   78 #>  [3780,]   79   84   79 #>  [3781,]   79   83   78 #>  [3782,]   79   83   78 #>  [3783,]   79   84   79 #>  [3784,]   79   84   79 #>  [3785,]   79   84   79 #>  [3786,]   79   84   79 #>  [3787,]   80   84   79 #>  [3788,]   79   84   79 #>  [3789,]   79   83   78 #>  [3790,]   79   84   79 #>  [3791,]   79   84   79 #>  [3792,]   79   83   78 #>  [3793,]   79   83   78 #>  [3794,]   79   83   78 #>  [3795,]   79   83   78 #>  [3796,]   79   83   78 #>  [3797,]   79   83   78 #>  [3798,]   79   84   79 #>  [3799,]   79   84   79 #>  [3800,]   79   83   78 #>  [3801,]   82   86   81 #>  [3802,]   82   86   81 #>  [3803,]   81   85   80 #>  [3804,]   82   86   81 #>  [3805,]   82   86   81 #>  [3806,]   82   86   81 #>  [3807,]   81   85   80 #>  [3808,]   81   85   80 #>  [3809,]   82   86   81 #>  [3810,]   82   86   81 #>  [3811,]   82   86   81 #>  [3812,]   82   86   81 #>  [3813,]   81   85   80 #>  [3814,]   82   86   81 #>  [3815,]   82   86   81 #>  [3816,]   81   85   80 #>  [3817,]   82   86   81 #>  [3818,]   82   86   81 #>  [3819,]   82   86   81 #>  [3820,]   81   85   80 #>  [3821,]   82   86   81 #>  [3822,]   81   85   80 #>  [3823,]   82   86   81 #>  [3824,]   81   85   80 #>  [3825,]   81   85   80 #>  [3826,]   82   86   81 #>  [3827,]   82   86   81 #>  [3828,]   82   86   81 #>  [3829,]   82   86   81 #>  [3830,]   82   86   81 #>  [3831,]   82   86   81 #>  [3832,]   82   86   81 #>  [3833,]   82   86   81 #>  [3834,]   82   86   81 #>  [3835,]   82   86   81 #>  [3836,]   82   86   81 #>  [3837,]   82   86   81 #>  [3838,]   82   86   81 #>  [3839,]   81   85   80 #>  [3840,]   81   85   80 #>  [3841,]   82   86   81 #>  [3842,]   82   86   81 #>  [3843,]   82   86   81 #>  [3844,]   81   85   80 #>  [3845,]   82   86   81 #>  [3846,]   81   85   80 #>  [3847,]   82   86   81 #>  [3848,]   82   86   81 #>  [3849,]   81   85   80 #>  [3850,]   81   85   80 #>  [3851,]   82   86   81 #>  [3852,]   82   86   81 #>  [3853,]   81   85   80 #>  [3854,]   82   86   81 #>  [3855,]   81   85   80 #>  [3856,]   81   85   80 #>  [3857,]   82   86   81 #>  [3858,]   82   86   81 #>  [3859,]   81   85   80 #>  [3860,]   82   86   81 #>  [3861,]   82   86   81 #>  [3862,]   82   86   81 #>  [3863,]   81   85   80 #>  [3864,]   82   86   81 #>  [3865,]   81   85   80 #>  [3866,]   81   85   80 #>  [3867,]   82   86   81 #>  [3868,]   82   86   81 #>  [3869,]   82   86   81 #>  [3870,]   81   85   80 #>  [3871,]   82   86   81 #>  [3872,]   81   85   80 #>  [3873,]   82   86   81 #>  [3874,]   82   86   81 #>  [3875,]   82   86   81 #>  [3876,]   82   86   81 #>  [3877,]   82   86   81 #>  [3878,]   82   86   81 #>  [3879,]   82   86   81 #>  [3880,]   82   86   81 #>  [3881,]   82   86   81 #>  [3882,]   82   86   81 #>  [3883,]   82   86   81 #>  [3884,]   81   85   80 #>  [3885,]   82   86   81 #>  [3886,]   81   85   80 #>  [3887,]   82   86   81 #>  [3888,]   82   86   81 #>  [3889,]   81   85   80 #>  [3890,]   81   85   80 #>  [3891,]   82   86   81 #>  [3892,]   82   86   81 #>  [3893,]   82   86   81 #>  [3894,]   82   86   81 #>  [3895,]   82   86   81 #>  [3896,]   82   86   81 #>  [3897,]   82   86   81 #>  [3898,]   81   85   80 #>  [3899,]   82   86   81 #>  [3900,]   81   85   80 #>  [3901,]   83   87   82 #>  [3902,]   84   87   82 #>  [3903,]   84   87   82 #>  [3904,]   83   87   82 #>  [3905,]   84   87   82 #>  [3906,]   84   87   82 #>  [3907,]   84   87   82 #>  [3908,]   83   87   82 #>  [3909,]   83   87   82 #>  [3910,]   84   87   82 #>  [3911,]   83   87   82 #>  [3912,]   84   87   82 #>  [3913,]   83   87   82 #>  [3914,]   84   87   82 #>  [3915,]   84   87   82 #>  [3916,]   84   87   82 #>  [3917,]   83   87   82 #>  [3918,]   84   87   82 #>  [3919,]   84   87   82 #>  [3920,]   84   88   82 #>  [3921,]   84   87   82 #>  [3922,]   83   88   82 #>  [3923,]   84   87   82 #>  [3924,]   84   87   82 #>  [3925,]   84   87   82 #>  [3926,]   84   87   82 #>  [3927,]   83   87   82 #>  [3928,]   84   87   82 #>  [3929,]   84   88   82 #>  [3930,]   83   87   82 #>  [3931,]   84   87   82 #>  [3932,]   84   87   82 #>  [3933,]   84   87   82 #>  [3934,]   84   87   82 #>  [3935,]   83   87   82 #>  [3936,]   84   87   82 #>  [3937,]   84   87   82 #>  [3938,]   84   87   82 #>  [3939,]   84   87   82 #>  [3940,]   84   87   82 #>  [3941,]   84   87   82 #>  [3942,]   84   87   82 #>  [3943,]   83   87   82 #>  [3944,]   83   87   82 #>  [3945,]   84   87   82 #>  [3946,]   84   87   82 #>  [3947,]   84   87   82 #>  [3948,]   84   87   82 #>  [3949,]   83   87   82 #>  [3950,]   84   87   82 #>  [3951,]   84   87   82 #>  [3952,]   83   87   82 #>  [3953,]   84   87   82 #>  [3954,]   83   87   82 #>  [3955,]   83   87   82 #>  [3956,]   84   87   82 #>  [3957,]   84   87   82 #>  [3958,]   83   88   82 #>  [3959,]   84   87   82 #>  [3960,]   84   87   82 #>  [3961,]   84   87   82 #>  [3962,]   84   87   82 #>  [3963,]   84   87   82 #>  [3964,]   84   88   82 #>  [3965,]   84   87   82 #>  [3966,]   83   87   82 #>  [3967,]   84   87   82 #>  [3968,]   84   87   82 #>  [3969,]   83   87   82 #>  [3970,]   84   87   82 #>  [3971,]   84   87   82 #>  [3972,]   84   87   82 #>  [3973,]   84   87   82 #>  [3974,]   84   87   82 #>  [3975,]   84   87   82 #>  [3976,]   84   87   82 #>  [3977,]   84   88   82 #>  [3978,]   84   87   82 #>  [3979,]   83   87   82 #>  [3980,]   83   87   82 #>  [3981,]   83   88   82 #>  [3982,]   83   87   82 #>  [3983,]   83   87   82 #>  [3984,]   84   87   82 #>  [3985,]   84   87   82 #>  [3986,]   84   87   82 #>  [3987,]   83   88   82 #>  [3988,]   83   87   82 #>  [3989,]   83   87   82 #>  [3990,]   83   87   82 #>  [3991,]   84   87   82 #>  [3992,]   83   87   82 #>  [3993,]   84   87   82 #>  [3994,]   84   87   82 #>  [3995,]   83   87   82 #>  [3996,]   83   87   82 #>  [3997,]   84   87   82 #>  [3998,]   84   87   82 #>  [3999,]   83   87   82 #>  [4000,]   84   87   82 #>  [4001,]   86   90   85 #>  [4002,]   85   89   83 #>  [4003,]   85   89   83 #>  [4004,]   86   90   85 #>  [4005,]   85   89   83 #>  [4006,]   85   89   83 #>  [4007,]   86   90   85 #>  [4008,]   85   89   83 #>  [4009,]   86   90   85 #>  [4010,]   86   90   85 #>  [4011,]   85   89   83 #>  [4012,]   85   89   83 #>  [4013,]   86   90   85 #>  [4014,]   86   90   85 #>  [4015,]   85   89   83 #>  [4016,]   86   90   85 #>  [4017,]   85   89   83 #>  [4018,]   85   89   83 #>  [4019,]   85   89   83 #>  [4020,]   86   90   85 #>  [4021,]   85   89   83 #>  [4022,]   86   90   85 #>  [4023,]   85   89   83 #>  [4024,]   86   90   85 #>  [4025,]   86   90   85 #>  [4026,]   85   89   83 #>  [4027,]   85   89   83 #>  [4028,]   86   90   85 #>  [4029,]   85   89   83 #>  [4030,]   85   89   83 #>  [4031,]   85   89   83 #>  [4032,]   85   89   83 #>  [4033,]   85   89   83 #>  [4034,]   85   89   83 #>  [4035,]   85   89   83 #>  [4036,]   86   90   85 #>  [4037,]   85   89   83 #>  [4038,]   85   89   83 #>  [4039,]   86   90   85 #>  [4040,]   85   89   83 #>  [4041,]   85   89   83 #>  [4042,]   85   89   83 #>  [4043,]   85   89   83 #>  [4044,]   85   89   83 #>  [4045,]   86   90   84 #>  [4046,]   85   89   83 #>  [4047,]   85   89   83 #>  [4048,]   85   89   83 #>  [4049,]   86   90   84 #>  [4050,]   86   90   85 #>  [4051,]   85   89   83 #>  [4052,]   86   90   85 #>  [4053,]   86   90   84 #>  [4054,]   86   90   85 #>  [4055,]   86   90   85 #>  [4056,]   85   89   83 #>  [4057,]   86   90   85 #>  [4058,]   86   90   85 #>  [4059,]   86   90   85 #>  [4060,]   85   89   83 #>  [4061,]   85   89   83 #>  [4062,]   85   89   83 #>  [4063,]   85   89   83 #>  [4064,]   85   89   83 #>  [4065,]   85   89   83 #>  [4066,]   85   89   83 #>  [4067,]   86   90   85 #>  [4068,]   85   89   83 #>  [4069,]   85   89   83 #>  [4070,]   85   89   83 #>  [4071,]   85   89   83 #>  [4072,]   86   90   84 #>  [4073,]   86   90   85 #>  [4074,]   85   89   83 #>  [4075,]   85   89   83 #>  [4076,]   86   90   85 #>  [4077,]   85   89   83 #>  [4078,]   85   89   83 #>  [4079,]   85   89   83 #>  [4080,]   85   89   83 #>  [4081,]   85   89   83 #>  [4082,]   85   89   83 #>  [4083,]   85   89   83 #>  [4084,]   85   89   83 #>  [4085,]   86   90   85 #>  [4086,]   86   90   85 #>  [4087,]   86   90   84 #>  [4088,]   85   89   83 #>  [4089,]   85   89   83 #>  [4090,]   86   90   85 #>  [4091,]   86   90   85 #>  [4092,]   85   89   83 #>  [4093,]   85   89   83 #>  [4094,]   85   89   83 #>  [4095,]   85   89   83 #>  [4096,]   85   89   83 #>  [4097,]   85   89   83 #>  [4098,]   85   89   83 #>  [4099,]   85   89   83 #>  [4100,]   85   89   83 #>  [4101,]   88   92   86 #>  [4102,]   87   91   87 #>  [4103,]   88   92   86 #>  [4104,]   88   92   86 #>  [4105,]   87   91   87 #>  [4106,]   87   91   87 #>  [4107,]   88   92   86 #>  [4108,]   87   91   87 #>  [4109,]   88   92   86 #>  [4110,]   88   92   86 #>  [4111,]   87   91   87 #>  [4112,]   87   91   87 #>  [4113,]   88   92   86 #>  [4114,]   88   92   86 #>  [4115,]   87   91   87 #>  [4116,]   88   92   86 #>  [4117,]   87   91   87 #>  [4118,]   87   91   87 #>  [4119,]   87   91   87 #>  [4120,]   88   92   86 #>  [4121,]   87   91   87 #>  [4122,]   88   92   86 #>  [4123,]   87   91   87 #>  [4124,]   88   92   86 #>  [4125,]   88   92   86 #>  [4126,]   87   91   87 #>  [4127,]   88   92   86 #>  [4128,]   88   92   86 #>  [4129,]   87   91   87 #>  [4130,]   87   91   87 #>  [4131,]   87   91   87 #>  [4132,]   87   91   87 #>  [4133,]   88   92   86 #>  [4134,]   87   91   87 #>  [4135,]   87   91   87 #>  [4136,]   88   92   86 #>  [4137,]   87   91   87 #>  [4138,]   87   91   87 #>  [4139,]   88   92   86 #>  [4140,]   87   91   87 #>  [4141,]   88   92   86 #>  [4142,]   87   91   87 #>  [4143,]   87   91   87 #>  [4144,]   87   91   87 #>  [4145,]   88   92   86 #>  [4146,]   87   91   87 #>  [4147,]   87   91   87 #>  [4148,]   87   91   87 #>  [4149,]   88   92   86 #>  [4150,]   88   92   86 #>  [4151,]   87   91   87 #>  [4152,]   88   92   86 #>  [4153,]   88   92   86 #>  [4154,]   88   92   86 #>  [4155,]   88   92   86 #>  [4156,]   87   91   87 #>  [4157,]   88   92   86 #>  [4158,]   88   92   86 #>  [4159,]   88   92   86 #>  [4160,]   87   91   87 #>  [4161,]   87   91   87 #>  [4162,]   87   91   87 #>  [4163,]   87   91   87 #>  [4164,]   87   91   87 #>  [4165,]   87   91   87 #>  [4166,]   87   91   87 #>  [4167,]   88   92   86 #>  [4168,]   87   91   87 #>  [4169,]   87   91   87 #>  [4170,]   87   91   87 #>  [4171,]   88   92   86 #>  [4172,]   88   92   86 #>  [4173,]   88   92   86 #>  [4174,]   88   92   86 #>  [4175,]   87   91   87 #>  [4176,]   88   92   86 #>  [4177,]   87   91   87 #>  [4178,]   87   91   87 #>  [4179,]   87   91   87 #>  [4180,]   88   92   86 #>  [4181,]   87   91   87 #>  [4182,]   87   91   87 #>  [4183,]   87   91   87 #>  [4184,]   87   91   87 #>  [4185,]   88   92   86 #>  [4186,]   88   92   86 #>  [4187,]   88   92   86 #>  [4188,]   88   92   86 #>  [4189,]   87   91   87 #>  [4190,]   88   92   86 #>  [4191,]   88   92   86 #>  [4192,]   87   91   87 #>  [4193,]   87   91   87 #>  [4194,]   87   91   87 #>  [4195,]   87   91   87 #>  [4196,]   87   91   87 #>  [4197,]   87   91   87 #>  [4198,]   87   91   87 #>  [4199,]   87   91   87 #>  [4200,]   87   91   87 #>  [4201,]   90   93   88 #>  [4202,]   90   93   89 #>  [4203,]   89   94   90 #>  [4204,]   90   93   89 #>  [4205,]   90   93   89 #>  [4206,]   90   93   88 #>  [4207,]   90   93   89 #>  [4208,]   90   93   89 #>  [4209,]   90   93   89 #>  [4210,]   90   93   89 #>  [4211,]   89   95   90 #>  [4212,]   89   94   90 #>  [4213,]   90   93   89 #>  [4214,]   89   95   90 #>  [4215,]   90   93   89 #>  [4216,]   90   93   88 #>  [4217,]   90   93   89 #>  [4218,]   90   93   89 #>  [4219,]   90   93   88 #>  [4220,]   89   95   90 #>  [4221,]   90   93   89 #>  [4222,]   89   95   90 #>  [4223,]   90   93   89 #>  [4224,]   90   93   89 #>  [4225,]   90   93   89 #>  [4226,]   89   95   90 #>  [4227,]   90   93   89 #>  [4228,]   90   93   88 #>  [4229,]   89   95   90 #>  [4230,]   90   93   89 #>  [4231,]   90   93   89 #>  [4232,]   89   94   90 #>  [4233,]   90   93   89 #>  [4234,]   90   93   88 #>  [4235,]   90   93   88 #>  [4236,]   89   95   90 #>  [4237,]   90   93   88 #>  [4238,]   90   93   88 #>  [4239,]   90   93   89 #>  [4240,]   89   94   90 #>  [4241,]   89   95   90 #>  [4242,]   89   95   90 #>  [4243,]   90   93   89 #>  [4244,]   90   93   89 #>  [4245,]   90   93   88 #>  [4246,]   90   93   89 #>  [4247,]   90   93   89 #>  [4248,]   89   95   90 #>  [4249,]   90   93   88 #>  [4250,]   90   93   89 #>  [4251,]   89   95   90 #>  [4252,]   90   93   88 #>  [4253,]   90   93   89 #>  [4254,]   89   95   90 #>  [4255,]   90   93   89 #>  [4256,]   90   93   88 #>  [4257,]   90   93   89 #>  [4258,]   90   93   89 #>  [4259,]   90   93   88 #>  [4260,]   89   94   90 #>  [4261,]   90   93   89 #>  [4262,]   89   95   90 #>  [4263,]   90   93   89 #>  [4264,]   90   93   88 #>  [4265,]   90   93   88 #>  [4266,]   89   95   90 #>  [4267,]   90   93   89 #>  [4268,]   89   94   90 #>  [4269,]   89   95   90 #>  [4270,]   90   93   89 #>  [4271,]   90   93   89 #>  [4272,]   90   93   88 #>  [4273,]   90   93   88 #>  [4274,]   90   93   89 #>  [4275,]   90   93   89 #>  [4276,]   90   93   89 #>  [4277,]   90   93   88 #>  [4278,]   90   93   89 #>  [4279,]   90   93   88 #>  [4280,]   89   94   90 #>  [4281,]   89   95   90 #>  [4282,]   90   93   89 #>  [4283,]   89   95   90 #>  [4284,]   90   93   89 #>  [4285,]   90   93   89 #>  [4286,]   90   93   89 #>  [4287,]   90   93   89 #>  [4288,]   90   93   89 #>  [4289,]   89   95   90 #>  [4290,]   90   93   89 #>  [4291,]   89   95   90 #>  [4292,]   90   93   89 #>  [4293,]   90   93   89 #>  [4294,]   90   93   88 #>  [4295,]   90   93   89 #>  [4296,]   90   93   88 #>  [4297,]   90   93   88 #>  [4298,]   90   93   89 #>  [4299,]   90   93   89 #>  [4300,]   90   93   88 #>  [4301,]   92   96   92 #>  [4302,]   91   96   92 #>  [4303,]   91   96   92 #>  [4304,]   92   96   91 #>  [4305,]   91   96   92 #>  [4306,]   91   96   92 #>  [4307,]   92   96   92 #>  [4308,]   91   96   91 #>  [4309,]   92   96   91 #>  [4310,]   92   96   92 #>  [4311,]   91   96   92 #>  [4312,]   91   96   92 #>  [4313,]   92   96   92 #>  [4314,]   92   96   92 #>  [4315,]   91   96   92 #>  [4316,]   92   96   92 #>  [4317,]   91   96   91 #>  [4318,]   91   96   92 #>  [4319,]   91   96   92 #>  [4320,]   92   96   92 #>  [4321,]   91   96   92 #>  [4322,]   92   96   91 #>  [4323,]   91   96   92 #>  [4324,]   92   96   92 #>  [4325,]   92   96   92 #>  [4326,]   91   96   92 #>  [4327,]   91   96   91 #>  [4328,]   92   96   92 #>  [4329,]   91   96   92 #>  [4330,]   91   96   92 #>  [4331,]   91   96   92 #>  [4332,]   91   96   92 #>  [4333,]   91   96   92 #>  [4334,]   91   96   92 #>  [4335,]   91   96   91 #>  [4336,]   92   96   92 #>  [4337,]   91   96   92 #>  [4338,]   91   96   92 #>  [4339,]   92   96   92 #>  [4340,]   91   96   92 #>  [4341,]   91   96   92 #>  [4342,]   91   96   92 #>  [4343,]   91   96   92 #>  [4344,]   91   96   91 #>  [4345,]   92   96   92 #>  [4346,]   91   96   92 #>  [4347,]   91   96   92 #>  [4348,]   91   96   92 #>  [4349,]   92   96   92 #>  [4350,]   92   96   92 #>  [4351,]   91   96   92 #>  [4352,]   92   96   91 #>  [4353,]   92   96   92 #>  [4354,]   92   96   92 #>  [4355,]   92   96   92 #>  [4356,]   91   96   92 #>  [4357,]   92   96   92 #>  [4358,]   92   96   91 #>  [4359,]   92   96   92 #>  [4360,]   91   96   92 #>  [4361,]   91   96   92 #>  [4362,]   91   96   92 #>  [4363,]   91   96   92 #>  [4364,]   91   96   92 #>  [4365,]   91   96   92 #>  [4366,]   91   96   91 #>  [4367,]   92   96   92 #>  [4368,]   91   96   92 #>  [4369,]   91   96   92 #>  [4370,]   91   96   92 #>  [4371,]   91   96   92 #>  [4372,]   92   96   92 #>  [4373,]   92   96   92 #>  [4374,]   91   96   92 #>  [4375,]   91   96   92 #>  [4376,]   92   96   92 #>  [4377,]   91   96   92 #>  [4378,]   91   96   92 #>  [4379,]   91   96   92 #>  [4380,]   91   96   92 #>  [4381,]   91   96   91 #>  [4382,]   91   96   91 #>  [4383,]   91   96   92 #>  [4384,]   91   96   92 #>  [4385,]   92   96   92 #>  [4386,]   92   96   92 #>  [4387,]   92   96   91 #>  [4388,]   92   96   92 #>  [4389,]   91   96   92 #>  [4390,]   92   96   91 #>  [4391,]   92   96   92 #>  [4392,]   91   96   91 #>  [4393,]   91   96   92 #>  [4394,]   91   96   92 #>  [4395,]   91   96   91 #>  [4396,]   91   96   92 #>  [4397,]   91   96   92 #>  [4398,]   91   96   92 #>  [4399,]   91   96   91 #>  [4400,]   91   96   92 #>  [4401,]   95   98   94 #>  [4402,]   95   98   94 #>  [4403,]   95   98   93 #>  [4404,]   94   98   93 #>  [4405,]   95   98   93 #>  [4406,]   95   98   94 #>  [4407,]   95   98   93 #>  [4408,]   94   98   93 #>  [4409,]   94   98   93 #>  [4410,]   95   98   93 #>  [4411,]   94   98   94 #>  [4412,]   95   98   93 #>  [4413,]   94   98   94 #>  [4414,]   95   98   94 #>  [4415,]   93   97   95 #>  [4416,]   95   98   94 #>  [4417,]   94   98   94 #>  [4418,]   95   98   93 #>  [4419,]   95   98   93 #>  [4420,]   95   98   93 #>  [4421,]   95   98   94 #>  [4422,]   94   98   94 #>  [4423,]   95   98   93 #>  [4424,]   95   98   93 #>  [4425,]   95   98   93 #>  [4426,]   95   98   94 #>  [4427,]   94   98   94 #>  [4428,]   95   98   93 #>  [4429,]   95   98   94 #>  [4430,]   94   98   93 #>  [4431,]   93   97   96 #>  [4432,]   95   98   93 #>  [4433,]   95   98   94 #>  [4434,]   93   97   96 #>  [4435,]   94   98   94 #>  [4436,]   95   98   93 #>  [4437,]   95   98   94 #>  [4438,]   95   98   93 #>  [4439,]   95   98   93 #>  [4440,]   95   98   93 #>  [4441,]   95   98   94 #>  [4442,]   93   97   96 #>  [4443,]   93   97   95 #>  [4444,]   93   97   95 #>  [4445,]   95   98   93 #>  [4446,]   95   98   93 #>  [4447,]   95   98   94 #>  [4448,]   95   98   93 #>  [4449,]   94   98   93 #>  [4450,]   95   98   94 #>  [4451,]   95   98   93 #>  [4452,]   94   98   94 #>  [4453,]   95   98   93 #>  [4454,]   94   98   93 #>  [4455,]   94   98   93 #>  [4456,]   95   98   93 #>  [4457,]   95   98   93 #>  [4458,]   94   98   94 #>  [4459,]   95   98   94 #>  [4460,]   95   98   93 #>  [4461,]   95   98   94 #>  [4462,]   95   98   93 #>  [4463,]   93   97   95 #>  [4464,]   95   98   93 #>  [4465,]   95   98   93 #>  [4466,]   94   98   93 #>  [4467,]   95   98   93 #>  [4468,]   95   98   94 #>  [4469,]   94   98   93 #>  [4470,]   95   98   94 #>  [4471,]   95   98   94 #>  [4472,]   95   98   93 #>  [4473,]   95   98   94 #>  [4474,]   95   98   93 #>  [4475,]   93   97   96 #>  [4476,]   95   98   94 #>  [4477,]   95   98   94 #>  [4478,]   93   97   96 #>  [4479,]   94   98   94 #>  [4480,]   94   98   93 #>  [4481,]   94   98   94 #>  [4482,]   94   98   93 #>  [4483,]   94   98   94 #>  [4484,]   95   98   94 #>  [4485,]   95   98   93 #>  [4486,]   95   98   94 #>  [4487,]   94   98   94 #>  [4488,]   94   98   93 #>  [4489,]   94   98   93 #>  [4490,]   94   98   94 #>  [4491,]   95   98   93 #>  [4492,]   94   98   93 #>  [4493,]   95   98   94 #>  [4494,]   95   98   94 #>  [4495,]   93   97   95 #>  [4496,]   95   98   94 #>  [4497,]   95   98   93 #>  [4498,]   95   98   93 #>  [4499,]   94   98   94 #>  [4500,]   95   98   94 #>  [4501,]   97  100   98 #>  [4502,]   97  100   98 #>  [4503,]   97  100   98 #>  [4504,]   96   99   97 #>  [4505,]   97  100   98 #>  [4506,]   97  100   98 #>  [4507,]   97  100   98 #>  [4508,]   96   99   97 #>  [4509,]   96   99   97 #>  [4510,]   96   99   97 #>  [4511,]   97  100   98 #>  [4512,]   97  100   98 #>  [4513,]   97  100   98 #>  [4514,]   97  100   98 #>  [4515,]   97  100   98 #>  [4516,]   97  100   98 #>  [4517,]   97  100   98 #>  [4518,]   97  100   98 #>  [4519,]   97  100   98 #>  [4520,]   97  100   98 #>  [4521,]   97  100   98 #>  [4522,]   97  100   98 #>  [4523,]   97  100   98 #>  [4524,]   97  100   98 #>  [4525,]   97  100   98 #>  [4526,]   97  100   98 #>  [4527,]   97  100   98 #>  [4528,]   97  100   98 #>  [4529,]   97  100   98 #>  [4530,]   97  100   98 #>  [4531,]   97  100   98 #>  [4532,]   97  100   98 #>  [4533,]   97  100   98 #>  [4534,]   97  100   98 #>  [4535,]   97  100   98 #>  [4536,]   97  100   98 #>  [4537,]   97  100   98 #>  [4538,]   97  100   98 #>  [4539,]   97  100   98 #>  [4540,]   97  100   98 #>  [4541,]   97  100   98 #>  [4542,]   97  100   98 #>  [4543,]   96   99   97 #>  [4544,]   97  100   98 #>  [4545,]   97  100   98 #>  [4546,]   97  100   98 #>  [4547,]   97  100   98 #>  [4548,]   97  100   98 #>  [4549,]   97  100   98 #>  [4550,]   97  100   98 #>  [4551,]   96   99   97 #>  [4552,]   97  100   98 #>  [4553,]   97  100   98 #>  [4554,]   97  100   98 #>  [4555,]   97  100   98 #>  [4556,]   97  100   98 #>  [4557,]   97  100   98 #>  [4558,]   97  100   98 #>  [4559,]   97  100   98 #>  [4560,]   96   99   97 #>  [4561,]   97  100   98 #>  [4562,]   97  100   98 #>  [4563,]   97  100   98 #>  [4564,]   97  100   98 #>  [4565,]   97  100   98 #>  [4566,]   97  100   98 #>  [4567,]   97  100   98 #>  [4568,]   97  100   98 #>  [4569,]   97  100   98 #>  [4570,]   97  100   98 #>  [4571,]   97  100   98 #>  [4572,]   97  100   98 #>  [4573,]   97  100   98 #>  [4574,]   97  100   98 #>  [4575,]   97  100   98 #>  [4576,]   97  100   98 #>  [4577,]   97  100   98 #>  [4578,]   97  100   98 #>  [4579,]   97  100   98 #>  [4580,]   97  100   98 #>  [4581,]   97  100   98 #>  [4582,]   97  100   98 #>  [4583,]   97  100   98 #>  [4584,]   97  100   98 #>  [4585,]   96   99   97 #>  [4586,]   97  100   98 #>  [4587,]   97  100   98 #>  [4588,]   97  100   98 #>  [4589,]   97  100   98 #>  [4590,]   97  100   98 #>  [4591,]   96   99   97 #>  [4592,]   97  100   98 #>  [4593,]   97  100   98 #>  [4594,]   97  100   98 #>  [4595,]   96   99   97 #>  [4596,]   97  100   98 #>  [4597,]   97  100   98 #>  [4598,]   97  100   98 #>  [4599,]   97  100   98 #>  [4600,]   97  100   98 #>  [4601,]   98  101  100 #>  [4602,]   98  101  100 #>  [4603,]   98  101   99 #>  [4604,]   99  102  100 #>  [4605,]   98  101  100 #>  [4606,]   99  102  100 #>  [4607,]   98  101   99 #>  [4608,]   98  101  100 #>  [4609,]   99  102  100 #>  [4610,]   99  102  100 #>  [4611,]   99  102  100 #>  [4612,]   99  102  100 #>  [4613,]   98  101  100 #>  [4614,]   99  102  100 #>  [4615,]   99  102  100 #>  [4616,]   98  101  100 #>  [4617,]   98  101  100 #>  [4618,]   99  102  100 #>  [4619,]   99  102  100 #>  [4620,]   98  101  100 #>  [4621,]   99  102  100 #>  [4622,]   98  101  100 #>  [4623,]   98  101  100 #>  [4624,]   98  101  100 #>  [4625,]   98  101  100 #>  [4626,]   99  102  100 #>  [4627,]   99  102  100 #>  [4628,]   98  101  100 #>  [4629,]   98  101  100 #>  [4630,]   99  102  100 #>  [4631,]   99  102  100 #>  [4632,]   99  102  100 #>  [4633,]   99  102  100 #>  [4634,]   98  101  100 #>  [4635,]   98  101  100 #>  [4636,]   99  102  100 #>  [4637,]   98  101  100 #>  [4638,]   99  102  100 #>  [4639,]   98  101  100 #>  [4640,]   98  101  100 #>  [4641,]   99  102  100 #>  [4642,]   99  102  100 #>  [4643,]   98  101  100 #>  [4644,]   98  101  100 #>  [4645,]   98  101  100 #>  [4646,]   98  101  100 #>  [4647,]   98  101  100 #>  [4648,]   99  102  100 #>  [4649,]   98  101   99 #>  [4650,]   98  101  100 #>  [4651,]   98  101  100 #>  [4652,]   98  101  100 #>  [4653,]   98  101   99 #>  [4654,]   98  101  100 #>  [4655,]   98  101   99 #>  [4656,]   98  101   99 #>  [4657,]   98  101  100 #>  [4658,]   99  102  100 #>  [4659,]   98  101  100 #>  [4660,]   99  102  100 #>  [4661,]   99  102  100 #>  [4662,]   99  102  100 #>  [4663,]   98  101  100 #>  [4664,]   99  102  100 #>  [4665,]   98  101  100 #>  [4666,]   98  101   99 #>  [4667,]   98  101  100 #>  [4668,]   99  102  100 #>  [4669,]   99  102  100 #>  [4670,]   98  101  100 #>  [4671,]   98  101  100 #>  [4672,]   98  101  100 #>  [4673,]   98  101  100 #>  [4674,]   99  102  100 #>  [4675,]   99  102  100 #>  [4676,]   98  101  100 #>  [4677,]   98  101  100 #>  [4678,]   98  101  100 #>  [4679,]   98  101  100 #>  [4680,]   98  101  100 #>  [4681,]   98  101  100 #>  [4682,]   99  102  100 #>  [4683,]   98  101  100 #>  [4684,]   98  101  100 #>  [4685,]   99  102  100 #>  [4686,]   98  101  100 #>  [4687,]   98  101  100 #>  [4688,]   98  101  100 #>  [4689,]   98  101  100 #>  [4690,]   98  101  100 #>  [4691,]   98  101  100 #>  [4692,]   99  102  100 #>  [4693,]   99  102  100 #>  [4694,]   98  101  100 #>  [4695,]   98  101  100 #>  [4696,]   99  102  100 #>  [4697,]   99  102  100 #>  [4698,]   98  101  100 #>  [4699,]   99  102  100 #>  [4700,]   98  101  100 #>  [4701,]  101  103  101 #>  [4702,]  100  105  102 #>  [4703,]  100  105  102 #>  [4704,]  100  104  102 #>  [4705,]  100  105  102 #>  [4706,]  100  105  102 #>  [4707,]  100  105  102 #>  [4708,]  100  104  102 #>  [4709,]  101  103  101 #>  [4710,]  100  105  102 #>  [4711,]  101  103  101 #>  [4712,]  100  105  102 #>  [4713,]  101  103  101 #>  [4714,]  100  105  102 #>  [4715,]  100  105  102 #>  [4716,]  100  105  102 #>  [4717,]  101  103  101 #>  [4718,]  101  103  101 #>  [4719,]  100  105  102 #>  [4720,]  101  103  101 #>  [4721,]  100  105  102 #>  [4722,]  100  104  102 #>  [4723,]  100  105  102 #>  [4724,]  100  105  102 #>  [4725,]  100  105  102 #>  [4726,]  100  105  102 #>  [4727,]  101  103  101 #>  [4728,]  101  103  101 #>  [4729,]  101  103  101 #>  [4730,]  100  105  102 #>  [4731,]  100  105  102 #>  [4732,]  100  105  102 #>  [4733,]  101  103  101 #>  [4734,]  100  105  102 #>  [4735,]  100  104  102 #>  [4736,]  101  103  101 #>  [4737,]  100  105  102 #>  [4738,]  101  103  101 #>  [4739,]  101  103  101 #>  [4740,]  100  105  102 #>  [4741,]  100  105  102 #>  [4742,]  101  103  101 #>  [4743,]  100  105  102 #>  [4744,]  100  104  102 #>  [4745,]  100  105  102 #>  [4746,]  100  105  102 #>  [4747,]  100  105  102 #>  [4748,]  100  105  102 #>  [4749,]  100  105  102 #>  [4750,]  100  105  102 #>  [4751,]  101  103  101 #>  [4752,]  100  104  102 #>  [4753,]  101  103  101 #>  [4754,]  101  103  101 #>  [4755,]  100  105  102 #>  [4756,]  101  103  101 #>  [4757,]  100  105  102 #>  [4758,]  101  103  101 #>  [4759,]  100  105  102 #>  [4760,]  100  105  102 #>  [4761,]  100  105  102 #>  [4762,]  101  103  101 #>  [4763,]  100  105  102 #>  [4764,]  100  105  102 #>  [4765,]  101  103  101 #>  [4766,]  101  103  101 #>  [4767,]  100  105  102 #>  [4768,]  100  105  102 #>  [4769,]  100  105  102 #>  [4770,]  100  105  102 #>  [4771,]  100  105  102 #>  [4772,]  100  105  102 #>  [4773,]  100  105  102 #>  [4774,]  100  105  102 #>  [4775,]  100  105  102 #>  [4776,]  100  105  102 #>  [4777,]  101  103  101 #>  [4778,]  100  105  102 #>  [4779,]  101  103  101 #>  [4780,]  100  105  102 #>  [4781,]  100  104  102 #>  [4782,]  101  103  101 #>  [4783,]  101  103  101 #>  [4784,]  101  103  101 #>  [4785,]  101  103  101 #>  [4786,]  100  105  102 #>  [4787,]  101  103  101 #>  [4788,]  100  105  102 #>  [4789,]  101  103  101 #>  [4790,]  100  104  102 #>  [4791,]  101  103  101 #>  [4792,]  100  104  102 #>  [4793,]  101  103  101 #>  [4794,]  101  103  101 #>  [4795,]  100  104  102 #>  [4796,]  100  105  102 #>  [4797,]  100  105  102 #>  [4798,]  100  105  102 #>  [4799,]  100  104  102 #>  [4800,]  100  105  102 #>  [4801,]  102  106  103 #>  [4802,]  102  106  103 #>  [4803,]  102  106  103 #>  [4804,]  102  106  103 #>  [4805,]  102  106  103 #>  [4806,]  102  106  103 #>  [4807,]  102  106  103 #>  [4808,]  102  106  103 #>  [4809,]  102  106  103 #>  [4810,]  102  106  103 #>  [4811,]  102  106  103 #>  [4812,]  102  106  103 #>  [4813,]  102  106  103 #>  [4814,]  102  106  103 #>  [4815,]  102  106  103 #>  [4816,]  102  106  103 #>  [4817,]  102  106  103 #>  [4818,]  102  106  103 #>  [4819,]  102  106  103 #>  [4820,]  103  107  104 #>  [4821,]  102  106  103 #>  [4822,]  102  106  103 #>  [4823,]  102  106  103 #>  [4824,]  103  107  104 #>  [4825,]  102  106  103 #>  [4826,]  102  106  103 #>  [4827,]  102  106  103 #>  [4828,]  103  107  104 #>  [4829,]  102  106  103 #>  [4830,]  102  106  103 #>  [4831,]  102  106  103 #>  [4832,]  102  106  103 #>  [4833,]  102  106  103 #>  [4834,]  102  106  103 #>  [4835,]  102  106  103 #>  [4836,]  102  106  103 #>  [4837,]  102  106  103 #>  [4838,]  102  106  103 #>  [4839,]  102  106  103 #>  [4840,]  102  106  103 #>  [4841,]  102  106  103 #>  [4842,]  102  106  103 #>  [4843,]  102  106  103 #>  [4844,]  102  106  103 #>  [4845,]  102  106  103 #>  [4846,]  102  106  103 #>  [4847,]  102  106  103 #>  [4848,]  102  106  103 #>  [4849,]  102  106  103 #>  [4850,]  103  107  104 #>  [4851,]  102  106  103 #>  [4852,]  103  107  104 #>  [4853,]  102  106  103 #>  [4854,]  102  106  103 #>  [4855,]  102  106  103 #>  [4856,]  102  106  103 #>  [4857,]  102  106  103 #>  [4858,]  102  106  103 #>  [4859,]  102  106  103 #>  [4860,]  102  106  103 #>  [4861,]  102  106  103 #>  [4862,]  102  106  103 #>  [4863,]  102  106  103 #>  [4864,]  102  106  103 #>  [4865,]  102  106  103 #>  [4866,]  102  106  103 #>  [4867,]  102  106  103 #>  [4868,]  102  106  103 #>  [4869,]  102  106  103 #>  [4870,]  102  106  103 #>  [4871,]  102  106  103 #>  [4872,]  102  106  103 #>  [4873,]  102  106  103 #>  [4874,]  102  106  103 #>  [4875,]  102  106  103 #>  [4876,]  103  107  104 #>  [4877,]  102  106  103 #>  [4878,]  102  106  103 #>  [4879,]  102  106  103 #>  [4880,]  102  106  103 #>  [4881,]  102  106  103 #>  [4882,]  102  106  103 #>  [4883,]  102  106  103 #>  [4884,]  102  106  103 #>  [4885,]  102  106  103 #>  [4886,]  103  107  104 #>  [4887,]  102  106  103 #>  [4888,]  102  106  103 #>  [4889,]  102  106  103 #>  [4890,]  102  106  103 #>  [4891,]  102  106  103 #>  [4892,]  102  106  103 #>  [4893,]  102  106  103 #>  [4894,]  102  106  103 #>  [4895,]  102  106  103 #>  [4896,]  102  106  103 #>  [4897,]  102  106  103 #>  [4898,]  102  106  103 #>  [4899,]  102  106  103 #>  [4900,]  102  106  103 #>  [4901,]  104  108  105 #>  [4902,]  104  108  105 #>  [4903,]  104  108  105 #>  [4904,]  105  109  106 #>  [4905,]  104  108  105 #>  [4906,]  104  108  105 #>  [4907,]  105  109  106 #>  [4908,]  104  108  105 #>  [4909,]  104  108  105 #>  [4910,]  105  109  106 #>  [4911,]  104  108  105 #>  [4912,]  104  108  105 #>  [4913,]  104  108  105 #>  [4914,]  104  108  105 #>  [4915,]  105  109  106 #>  [4916,]  105  109  106 #>  [4917,]  104  108  105 #>  [4918,]  105  110  106 #>  [4919,]  104  108  105 #>  [4920,]  104  108  105 #>  [4921,]  105  109  106 #>  [4922,]  104  108  105 #>  [4923,]  105  109  106 #>  [4924,]  104  108  105 #>  [4925,]  105  109  106 #>  [4926,]  104  108  105 #>  [4927,]  105  110  106 #>  [4928,]  104  108  105 #>  [4929,]  104  108  105 #>  [4930,]  104  108  105 #>  [4931,]  104  108  105 #>  [4932,]  104  108  105 #>  [4933,]  104  108  105 #>  [4934,]  104  108  105 #>  [4935,]  104  108  105 #>  [4936,]  104  108  105 #>  [4937,]  104  108  105 #>  [4938,]  104  108  105 #>  [4939,]  105  110  106 #>  [4940,]  104  108  105 #>  [4941,]  104  108  105 #>  [4942,]  104  108  105 #>  [4943,]  105  109  106 #>  [4944,]  104  108  105 #>  [4945,]  105  109  106 #>  [4946,]  104  108  105 #>  [4947,]  104  108  105 #>  [4948,]  104  108  105 #>  [4949,]  104  108  105 #>  [4950,]  104  108  105 #>  [4951,]  104  108  105 #>  [4952,]  104  108  105 #>  [4953,]  105  110  106 #>  [4954,]  104  108  105 #>  [4955,]  104  108  105 #>  [4956,]  104  108  105 #>  [4957,]  104  108  105 #>  [4958,]  104  108  105 #>  [4959,]  104  108  105 #>  [4960,]  104  108  105 #>  [4961,]  105  109  106 #>  [4962,]  104  108  105 #>  [4963,]  104  108  105 #>  [4964,]  104  108  105 #>  [4965,]  104  108  105 #>  [4966,]  104  108  105 #>  [4967,]  104  108  105 #>  [4968,]  104  108  105 #>  [4969,]  104  108  105 #>  [4970,]  104  108  105 #>  [4971,]  104  108  105 #>  [4972,]  105  109  106 #>  [4973,]  105  109  106 #>  [4974,]  105  109  106 #>  [4975,]  105  109  106 #>  [4976,]  105  109  106 #>  [4977,]  105  110  106 #>  [4978,]  104  108  105 #>  [4979,]  104  108  105 #>  [4980,]  104  108  105 #>  [4981,]  104  108  105 #>  [4982,]  104  108  105 #>  [4983,]  104  108  105 #>  [4984,]  105  110  106 #>  [4985,]  104  108  105 #>  [4986,]  104  108  105 #>  [4987,]  104  108  105 #>  [4988,]  104  108  105 #>  [4989,]  104  108  105 #>  [4990,]  104  108  105 #>  [4991,]  104  108  105 #>  [4992,]  104  108  105 #>  [4993,]  104  108  105 #>  [4994,]  105  110  106 #>  [4995,]  105  109  106 #>  [4996,]  104  108  105 #>  [4997,]  104  108  105 #>  [4998,]  104  108  105 #>  [4999,]  104  108  105 #>  [5000,]  105  109  106 #>  [5001,]  107  112  108 #>  [5002,]  107  112  108 #>  [5003,]  107  112  108 #>  [5004,]  107  112  108 #>  [5005,]  107  112  108 #>  [5006,]  106  111  107 #>  [5007,]  107  112  108 #>  [5008,]  107  112  108 #>  [5009,]  107  112  108 #>  [5010,]  107  112  108 #>  [5011,]  107  112  108 #>  [5012,]  107  112  108 #>  [5013,]  107  112  108 #>  [5014,]  107  112  108 #>  [5015,]  107  112  108 #>  [5016,]  107  112  108 #>  [5017,]  107  112  108 #>  [5018,]  107  112  108 #>  [5019,]  107  112  108 #>  [5020,]  106  111  107 #>  [5021,]  106  111  107 #>  [5022,]  107  112  108 #>  [5023,]  107  112  108 #>  [5024,]  107  112  108 #>  [5025,]  106  111  107 #>  [5026,]  107  112  108 #>  [5027,]  107  112  108 #>  [5028,]  107  112  108 #>  [5029,]  107  112  108 #>  [5030,]  107  112  108 #>  [5031,]  107  112  108 #>  [5032,]  107  112  108 #>  [5033,]  107  112  108 #>  [5034,]  107  112  108 #>  [5035,]  106  111  107 #>  [5036,]  107  112  108 #>  [5037,]  107  112  108 #>  [5038,]  107  112  108 #>  [5039,]  107  112  108 #>  [5040,]  107  112  108 #>  [5041,]  107  112  108 #>  [5042,]  107  112  108 #>  [5043,]  107  112  108 #>  [5044,]  106  111  107 #>  [5045,]  107  112  108 #>  [5046,]  107  112  108 #>  [5047,]  107  112  108 #>  [5048,]  107  112  108 #>  [5049,]  107  112  108 #>  [5050,]  107  112  108 #>  [5051,]  107  112  108 #>  [5052,]  107  112  108 #>  [5053,]  106  111  107 #>  [5054,]  107  112  108 #>  [5055,]  107  112  108 #>  [5056,]  106  111  107 #>  [5057,]  107  112  108 #>  [5058,]  107  112  108 #>  [5059,]  107  112  108 #>  [5060,]  107  112  108 #>  [5061,]  107  112  108 #>  [5062,]  107  112  108 #>  [5063,]  107  112  108 #>  [5064,]  107  112  108 #>  [5065,]  106  111  107 #>  [5066,]  107  112  108 #>  [5067,]  107  112  108 #>  [5068,]  107  112  108 #>  [5069,]  107  112  108 #>  [5070,]  107  112  108 #>  [5071,]  107  112  108 #>  [5072,]  107  112  108 #>  [5073,]  107  112  108 #>  [5074,]  106  111  107 #>  [5075,]  107  112  108 #>  [5076,]  107  112  108 #>  [5077,]  107  112  108 #>  [5078,]  107  112  108 #>  [5079,]  107  112  108 #>  [5080,]  106  111  107 #>  [5081,]  107  112  108 #>  [5082,]  106  111  107 #>  [5083,]  107  112  108 #>  [5084,]  107  112  108 #>  [5085,]  106  111  107 #>  [5086,]  106  111  107 #>  [5087,]  107  112  108 #>  [5088,]  107  112  108 #>  [5089,]  106  111  107 #>  [5090,]  107  112  108 #>  [5091,]  107  112  108 #>  [5092,]  107  112  108 #>  [5093,]  107  112  108 #>  [5094,]  107  112  108 #>  [5095,]  107  112  108 #>  [5096,]  107  112  108 #>  [5097,]  107  112  108 #>  [5098,]  107  112  108 #>  [5099,]  106  111  107 #>  [5100,]  107  112  108 #>  [5101,]  109  114  110 #>  [5102,]  109  114  110 #>  [5103,]  109  114  110 #>  [5104,]  108  113  109 #>  [5105,]  109  114  110 #>  [5106,]  109  114  110 #>  [5107,]  109  114  110 #>  [5108,]  109  114  110 #>  [5109,]  108  113  109 #>  [5110,]  109  114  110 #>  [5111,]  109  114  110 #>  [5112,]  109  114  110 #>  [5113,]  109  114  110 #>  [5114,]  109  114  110 #>  [5115,]  109  114  110 #>  [5116,]  109  114  110 #>  [5117,]  108  113  109 #>  [5118,]  109  114  110 #>  [5119,]  109  114  110 #>  [5120,]  109  114  110 #>  [5121,]  109  114  110 #>  [5122,]  109  114  110 #>  [5123,]  109  114  110 #>  [5124,]  109  114  110 #>  [5125,]  109  114  110 #>  [5126,]  109  114  110 #>  [5127,]  109  114  110 #>  [5128,]  109  114  110 #>  [5129,]  109  114  110 #>  [5130,]  109  114  110 #>  [5131,]  109  114  110 #>  [5132,]  109  114  110 #>  [5133,]  109  114  110 #>  [5134,]  109  114  110 #>  [5135,]  109  114  110 #>  [5136,]  109  114  110 #>  [5137,]  109  114  110 #>  [5138,]  109  114  110 #>  [5139,]  109  114  110 #>  [5140,]  109  114  110 #>  [5141,]  109  114  110 #>  [5142,]  109  114  110 #>  [5143,]  109  114  110 #>  [5144,]  109  114  110 #>  [5145,]  109  114  110 #>  [5146,]  109  114  110 #>  [5147,]  109  114  110 #>  [5148,]  109  114  110 #>  [5149,]  109  114  110 #>  [5150,]  109  114  110 #>  [5151,]  109  114  110 #>  [5152,]  108  113  109 #>  [5153,]  109  114  110 #>  [5154,]  109  114  110 #>  [5155,]  109  114  110 #>  [5156,]  109  114  110 #>  [5157,]  109  114  110 #>  [5158,]  109  114  110 #>  [5159,]  109  114  110 #>  [5160,]  109  114  110 #>  [5161,]  109  114  110 #>  [5162,]  109  114  110 #>  [5163,]  109  114  110 #>  [5164,]  109  114  110 #>  [5165,]  109  114  110 #>  [5166,]  109  114  110 #>  [5167,]  109  114  110 #>  [5168,]  109  114  110 #>  [5169,]  109  114  110 #>  [5170,]  109  114  110 #>  [5171,]  109  114  110 #>  [5172,]  109  114  110 #>  [5173,]  109  114  110 #>  [5174,]  109  114  110 #>  [5175,]  109  114  110 #>  [5176,]  109  114  110 #>  [5177,]  109  114  110 #>  [5178,]  109  114  110 #>  [5179,]  109  114  110 #>  [5180,]  109  114  110 #>  [5181,]  108  113  109 #>  [5182,]  108  113  109 #>  [5183,]  109  114  110 #>  [5184,]  109  114  110 #>  [5185,]  109  114  110 #>  [5186,]  109  114  110 #>  [5187,]  109  114  110 #>  [5188,]  109  114  110 #>  [5189,]  109  114  110 #>  [5190,]  109  114  110 #>  [5191,]  109  114  110 #>  [5192,]  109  114  110 #>  [5193,]  109  114  110 #>  [5194,]  109  114  110 #>  [5195,]  108  113  109 #>  [5196,]  109  114  110 #>  [5197,]  109  114  110 #>  [5198,]  109  114  110 #>  [5199,]  109  114  110 #>  [5200,]  109  114  110 #>  [5201,]  111  116  111 #>  [5202,]  110  115  112 #>  [5203,]  110  115  112 #>  [5204,]  110  115  112 #>  [5205,]  110  115  112 #>  [5206,]  110  115  112 #>  [5207,]  110  115  112 #>  [5208,]  110  115  112 #>  [5209,]  111  116  111 #>  [5210,]  110  115  112 #>  [5211,]  110  115  112 #>  [5212,]  110  115  112 #>  [5213,]  111  116  111 #>  [5214,]  110  115  112 #>  [5215,]  110  115  112 #>  [5216,]  110  115  112 #>  [5217,]  111  116  111 #>  [5218,]  111  116  111 #>  [5219,]  110  115  112 #>  [5220,]  111  116  111 #>  [5221,]  110  115  112 #>  [5222,]  110  115  112 #>  [5223,]  110  115  112 #>  [5224,]  110  115  112 #>  [5225,]  110  115  112 #>  [5226,]  110  115  112 #>  [5227,]  111  116  111 #>  [5228,]  110  115  112 #>  [5229,]  110  115  112 #>  [5230,]  110  115  112 #>  [5231,]  110  115  112 #>  [5232,]  110  115  112 #>  [5233,]  111  116  111 #>  [5234,]  110  115  112 #>  [5235,]  110  115  112 #>  [5236,]  111  116  111 #>  [5237,]  110  115  112 #>  [5238,]  111  116  111 #>  [5239,]  110  115  112 #>  [5240,]  110  115  112 #>  [5241,]  110  115  112 #>  [5242,]  111  116  111 #>  [5243,]  110  115  112 #>  [5244,]  110  115  112 #>  [5245,]  110  115  112 #>  [5246,]  110  115  112 #>  [5247,]  110  115  112 #>  [5248,]  110  115  112 #>  [5249,]  110  115  112 #>  [5250,]  110  115  112 #>  [5251,]  111  116  111 #>  [5252,]  110  115  112 #>  [5253,]  111  116  111 #>  [5254,]  111  116  111 #>  [5255,]  110  115  112 #>  [5256,]  111  116  111 #>  [5257,]  110  115  112 #>  [5258,]  110  115  112 #>  [5259,]  110  115  112 #>  [5260,]  110  115  112 #>  [5261,]  110  115  112 #>  [5262,]  110  115  112 #>  [5263,]  110  115  112 #>  [5264,]  110  115  112 #>  [5265,]  111  116  111 #>  [5266,]  111  116  111 #>  [5267,]  110  115  112 #>  [5268,]  110  115  112 #>  [5269,]  110  115  112 #>  [5270,]  110  115  112 #>  [5271,]  110  115  112 #>  [5272,]  110  115  112 #>  [5273,]  110  115  112 #>  [5274,]  110  115  112 #>  [5275,]  110  115  112 #>  [5276,]  110  115  112 #>  [5277,]  111  116  111 #>  [5278,]  110  115  112 #>  [5279,]  111  116  111 #>  [5280,]  110  115  112 #>  [5281,]  110  115  112 #>  [5282,]  111  116  111 #>  [5283,]  111  116  111 #>  [5284,]  111  116  111 #>  [5285,]  110  115  112 #>  [5286,]  110  115  112 #>  [5287,]  111  116  111 #>  [5288,]  110  115  112 #>  [5289,]  110  115  112 #>  [5290,]  110  115  112 #>  [5291,]  111  116  111 #>  [5292,]  110  115  112 #>  [5293,]  111  116  111 #>  [5294,]  111  116  111 #>  [5295,]  110  115  112 #>  [5296,]  110  115  112 #>  [5297,]  110  115  112 #>  [5298,]  110  115  112 #>  [5299,]  110  115  112 #>  [5300,]  110  115  112 #>  [5301,]  113  118  114 #>  [5302,]  113  118  114 #>  [5303,]  112  117  113 #>  [5304,]  112  117  113 #>  [5305,]  112  117  113 #>  [5306,]  113  118  114 #>  [5307,]  112  117  113 #>  [5308,]  112  117  113 #>  [5309,]  112  117  113 #>  [5310,]  112  117  113 #>  [5311,]  113  118  114 #>  [5312,]  112  117  113 #>  [5313,]  113  118  114 #>  [5314,]  113  118  114 #>  [5315,]  113  118  114 #>  [5316,]  113  118  114 #>  [5317,]  113  118  114 #>  [5318,]  112  117  113 #>  [5319,]  113  118  114 #>  [5320,]  112  117  113 #>  [5321,]  113  118  114 #>  [5322,]  113  118  114 #>  [5323,]  112  117  113 #>  [5324,]  112  117  113 #>  [5325,]  112  117  113 #>  [5326,]  113  118  114 #>  [5327,]  113  118  114 #>  [5328,]  112  117  113 #>  [5329,]  113  118  114 #>  [5330,]  112  117  113 #>  [5331,]  112  117  113 #>  [5332,]  112  117  113 #>  [5333,]  113  118  114 #>  [5334,]  112  117  113 #>  [5335,]  113  118  114 #>  [5336,]  112  117  113 #>  [5337,]  113  118  114 #>  [5338,]  112  117  113 #>  [5339,]  112  117  113 #>  [5340,]  112  117  113 #>  [5341,]  113  118  114 #>  [5342,]  112  117  113 #>  [5343,]  112  117  113 #>  [5344,]  113  118  114 #>  [5345,]  112  117  113 #>  [5346,]  112  117  113 #>  [5347,]  113  118  114 #>  [5348,]  112  117  113 #>  [5349,]  112  117  113 #>  [5350,]  113  118  114 #>  [5351,]  112  117  113 #>  [5352,]  113  118  114 #>  [5353,]  112  117  113 #>  [5354,]  112  117  113 #>  [5355,]  113  118  114 #>  [5356,]  112  117  113 #>  [5357,]  112  117  113 #>  [5358,]  113  118  114 #>  [5359,]  113  118  114 #>  [5360,]  112  117  113 #>  [5361,]  113  118  114 #>  [5362,]  112  117  113 #>  [5363,]  112  117  113 #>  [5364,]  112  117  113 #>  [5365,]  112  117  113 #>  [5366,]  112  117  113 #>  [5367,]  112  117  113 #>  [5368,]  113  118  114 #>  [5369,]  113  118  114 #>  [5370,]  113  118  114 #>  [5371,]  113  118  114 #>  [5372,]  112  117  113 #>  [5373,]  113  118  114 #>  [5374,]  113  118  114 #>  [5375,]  113  118  114 #>  [5376,]  113  118  114 #>  [5377,]  113  118  114 #>  [5378,]  112  117  113 #>  [5379,]  113  118  114 #>  [5380,]  112  117  113 #>  [5381,]  113  118  114 #>  [5382,]  112  117  113 #>  [5383,]  113  118  114 #>  [5384,]  113  118  114 #>  [5385,]  112  117  113 #>  [5386,]  113  118  114 #>  [5387,]  113  118  114 #>  [5388,]  112  117  113 #>  [5389,]  112  117  113 #>  [5390,]  113  118  114 #>  [5391,]  112  117  113 #>  [5392,]  113  118  114 #>  [5393,]  113  118  114 #>  [5394,]  113  118  114 #>  [5395,]  112  117  113 #>  [5396,]  113  118  114 #>  [5397,]  113  118  114 #>  [5398,]  113  118  114 #>  [5399,]  113  118  114 #>  [5400,]  113  118  114 #>  [5401,]  114  119  117 #>  [5402,]  115  120  115 #>  [5403,]  114  119  117 #>  [5404,]  114  119  117 #>  [5405,]  115  120  115 #>  [5406,]  114  119  117 #>  [5407,]  115  120  115 #>  [5408,]  114  119  117 #>  [5409,]  115  120  115 #>  [5410,]  115  120  115 #>  [5411,]  114  119  117 #>  [5412,]  115  120  115 #>  [5413,]  115  120  115 #>  [5414,]  114  119  117 #>  [5415,]  114  119  117 #>  [5416,]  114  119  117 #>  [5417,]  115  120  115 #>  [5418,]  115  120  115 #>  [5419,]  114  119  117 #>  [5420,]  115  120  116 #>  [5421,]  115  120  115 #>  [5422,]  115  120  116 #>  [5423,]  115  120  115 #>  [5424,]  115  120  115 #>  [5425,]  114  119  117 #>  [5426,]  114  119  117 #>  [5427,]  115  120  116 #>  [5428,]  114  119  117 #>  [5429,]  115  120  116 #>  [5430,]  115  120  115 #>  [5431,]  115  120  115 #>  [5432,]  115  120  115 #>  [5433,]  115  120  115 #>  [5434,]  114  119  117 #>  [5435,]  114  119  117 #>  [5436,]  115  120  115 #>  [5437,]  114  119  117 #>  [5438,]  114  119  117 #>  [5439,]  114  119  117 #>  [5440,]  115  120  115 #>  [5441,]  115  120  115 #>  [5442,]  114  119  117 #>  [5443,]  114  119  117 #>  [5444,]  115  120  115 #>  [5445,]  114  119  117 #>  [5446,]  114  119  117 #>  [5447,]  115  120  115 #>  [5448,]  115  120  115 #>  [5449,]  114  119  117 #>  [5450,]  115  120  115 #>  [5451,]  114  119  117 #>  [5452,]  114  119  117 #>  [5453,]  115  120  115 #>  [5454,]  115  120  115 #>  [5455,]  114  119  117 #>  [5456,]  114  119  117 #>  [5457,]  114  119  117 #>  [5458,]  115  120  116 #>  [5459,]  114  119  117 #>  [5460,]  115  120  115 #>  [5461,]  115  120  115 #>  [5462,]  114  119  117 #>  [5463,]  115  120  115 #>  [5464,]  114  119  117 #>  [5465,]  114  119  117 #>  [5466,]  114  119  117 #>  [5467,]  114  119  117 #>  [5468,]  114  119  117 #>  [5469,]  114  119  117 #>  [5470,]  115  120  115 #>  [5471,]  114  119  117 #>  [5472,]  114  119  117 #>  [5473,]  114  119  117 #>  [5474,]  115  120  115 #>  [5475,]  115  120  115 #>  [5476,]  115  120  115 #>  [5477,]  114  119  117 #>  [5478,]  115  120  115 #>  [5479,]  114  119  117 #>  [5480,]  115  120  115 #>  [5481,]  115  120  116 #>  [5482,]  114  119  117 #>  [5483,]  115  120  115 #>  [5484,]  115  120  115 #>  [5485,]  114  119  117 #>  [5486,]  115  120  115 #>  [5487,]  115  120  116 #>  [5488,]  115  120  115 #>  [5489,]  114  119  117 #>  [5490,]  114  119  117 #>  [5491,]  114  119  117 #>  [5492,]  115  120  115 #>  [5493,]  115  120  115 #>  [5494,]  114  119  117 #>  [5495,]  115  120  115 #>  [5496,]  114  119  117 #>  [5497,]  114  119  117 #>  [5498,]  114  119  117 #>  [5499,]  114  119  117 #>  [5500,]  114  119  117 #>  [5501,]  118  122  119 #>  [5502,]  116  121  118 #>  [5503,]  116  121  118 #>  [5504,]  116  121  118 #>  [5505,]  116  121  118 #>  [5506,]  116  121  118 #>  [5507,]  116  121  118 #>  [5508,]  116  121  118 #>  [5509,]  118  122  119 #>  [5510,]  116  121  118 #>  [5511,]  118  122  119 #>  [5512,]  116  121  118 #>  [5513,]  118  122  119 #>  [5514,]  116  121  118 #>  [5515,]  116  121  118 #>  [5516,]  116  121  118 #>  [5517,]  118  122  119 #>  [5518,]  118  122  119 #>  [5519,]  116  121  118 #>  [5520,]  117  122  119 #>  [5521,]  116  121  118 #>  [5522,]  116  121  118 #>  [5523,]  116  121  118 #>  [5524,]  116  121  118 #>  [5525,]  116  121  118 #>  [5526,]  116  121  118 #>  [5527,]  118  122  119 #>  [5528,]  118  122  119 #>  [5529,]  117  122  119 #>  [5530,]  116  121  118 #>  [5531,]  116  121  118 #>  [5532,]  116  121  118 #>  [5533,]  118  122  119 #>  [5534,]  116  121  118 #>  [5535,]  116  121  118 #>  [5536,]  118  122  119 #>  [5537,]  116  121  118 #>  [5538,]  118  122  119 #>  [5539,]  118  122  119 #>  [5540,]  116  121  118 #>  [5541,]  117  122  119 #>  [5542,]  117  122  119 #>  [5543,]  116  121  118 #>  [5544,]  116  121  118 #>  [5545,]  116  121  118 #>  [5546,]  116  121  118 #>  [5547,]  116  121  118 #>  [5548,]  116  121  118 #>  [5549,]  116  121  118 #>  [5550,]  116  121  118 #>  [5551,]  118  122  119 #>  [5552,]  116  121  118 #>  [5553,]  117  122  119 #>  [5554,]  117  122  119 #>  [5555,]  116  121  118 #>  [5556,]  117  122  119 #>  [5557,]  116  121  118 #>  [5558,]  118  122  119 #>  [5559,]  116  121  118 #>  [5560,]  116  121  118 #>  [5561,]  116  121  118 #>  [5562,]  118  122  119 #>  [5563,]  116  121  118 #>  [5564,]  116  121  118 #>  [5565,]  117  122  119 #>  [5566,]  118  122  119 #>  [5567,]  116  121  118 #>  [5568,]  116  121  118 #>  [5569,]  116  121  118 #>  [5570,]  118  122  119 #>  [5571,]  116  121  118 #>  [5572,]  116  121  118 #>  [5573,]  116  121  118 #>  [5574,]  116  121  118 #>  [5575,]  116  121  118 #>  [5576,]  116  121  118 #>  [5577,]  118  122  119 #>  [5578,]  116  121  118 #>  [5579,]  118  122  119 #>  [5580,]  116  121  118 #>  [5581,]  116  121  118 #>  [5582,]  117  122  119 #>  [5583,]  118  122  119 #>  [5584,]  117  122  119 #>  [5585,]  117  122  119 #>  [5586,]  116  121  118 #>  [5587,]  118  122  119 #>  [5588,]  116  121  118 #>  [5589,]  117  122  119 #>  [5590,]  118  122  119 #>  [5591,]  118  122  119 #>  [5592,]  116  121  118 #>  [5593,]  118  122  119 #>  [5594,]  117  122  119 #>  [5595,]  116  121  118 #>  [5596,]  116  121  118 #>  [5597,]  116  121  118 #>  [5598,]  116  121  118 #>  [5599,]  116  121  118 #>  [5600,]  116  121  118 #>  [5601,]  120  124  121 #>  [5602,]  120  124  121 #>  [5603,]  119  123  120 #>  [5604,]  120  124  121 #>  [5605,]  120  124  121 #>  [5606,]  119  123  120 #>  [5607,]  120  124  121 #>  [5608,]  120  124  121 #>  [5609,]  120  124  121 #>  [5610,]  120  124  121 #>  [5611,]  119  123  120 #>  [5612,]  120  124  121 #>  [5613,]  120  124  121 #>  [5614,]  120  124  121 #>  [5615,]  120  124  121 #>  [5616,]  119  123  120 #>  [5617,]  120  124  121 #>  [5618,]  120  124  121 #>  [5619,]  119  123  120 #>  [5620,]  120  124  121 #>  [5621,]  120  124  121 #>  [5622,]  120  124  121 #>  [5623,]  120  124  121 #>  [5624,]  120  124  121 #>  [5625,]  120  124  121 #>  [5626,]  120  124  121 #>  [5627,]  120  124  121 #>  [5628,]  120  124  121 #>  [5629,]  120  124  121 #>  [5630,]  120  124  121 #>  [5631,]  120  124  121 #>  [5632,]  120  124  121 #>  [5633,]  120  124  121 #>  [5634,]  119  123  120 #>  [5635,]  119  123  120 #>  [5636,]  120  124  121 #>  [5637,]  119  123  120 #>  [5638,]  119  123  120 #>  [5639,]  120  124  121 #>  [5640,]  120  124  121 #>  [5641,]  120  124  121 #>  [5642,]  120  124  121 #>  [5643,]  120  124  121 #>  [5644,]  120  124  121 #>  [5645,]  119  123  120 #>  [5646,]  120  124  121 #>  [5647,]  120  124  121 #>  [5648,]  120  124  121 #>  [5649,]  119  123  120 #>  [5650,]  120  124  121 #>  [5651,]  120  124  121 #>  [5652,]  119  123  120 #>  [5653,]  120  124  121 #>  [5654,]  120  124  121 #>  [5655,]  120  124  121 #>  [5656,]  120  124  121 #>  [5657,]  120  124  121 #>  [5658,]  120  124  121 #>  [5659,]  120  124  121 #>  [5660,]  120  124  121 #>  [5661,]  120  124  121 #>  [5662,]  120  124  121 #>  [5663,]  120  124  121 #>  [5664,]  119  123  120 #>  [5665,]  120  124  121 #>  [5666,]  120  124  121 #>  [5667,]  120  124  121 #>  [5668,]  119  123  120 #>  [5669,]  120  124  121 #>  [5670,]  120  124  121 #>  [5671,]  120  124  121 #>  [5672,]  119  123  120 #>  [5673,]  120  124  121 #>  [5674,]  120  124  121 #>  [5675,]  120  124  121 #>  [5676,]  120  124  121 #>  [5677,]  120  124  121 #>  [5678,]  120  124  121 #>  [5679,]  120  124  121 #>  [5680,]  120  124  121 #>  [5681,]  120  124  121 #>  [5682,]  120  124  121 #>  [5683,]  120  124  121 #>  [5684,]  120  124  121 #>  [5685,]  120  124  121 #>  [5686,]  120  124  121 #>  [5687,]  120  124  121 #>  [5688,]  120  124  121 #>  [5689,]  120  124  121 #>  [5690,]  120  124  121 #>  [5691,]  120  124  121 #>  [5692,]  120  124  121 #>  [5693,]  120  124  121 #>  [5694,]  120  124  121 #>  [5695,]  120  124  121 #>  [5696,]  119  123  120 #>  [5697,]  119  123  120 #>  [5698,]  120  124  121 #>  [5699,]  120  124  121 #>  [5700,]  120  124  121 #>  [5701,]  121  125  123 #>  [5702,]  121  125  123 #>  [5703,]  121  125  123 #>  [5704,]  121  125  123 #>  [5705,]  121  125  123 #>  [5706,]  121  125  123 #>  [5707,]  122  126  122 #>  [5708,]  121  125  123 #>  [5709,]  121  125  123 #>  [5710,]  121  125  123 #>  [5711,]  121  125  123 #>  [5712,]  121  125  123 #>  [5713,]  121  125  123 #>  [5714,]  121  125  123 #>  [5715,]  121  125  123 #>  [5716,]  122  126  122 #>  [5717,]  121  125  123 #>  [5718,]  121  125  123 #>  [5719,]  121  125  123 #>  [5720,]  122  126  122 #>  [5721,]  121  125  123 #>  [5722,]  121  125  123 #>  [5723,]  121  125  123 #>  [5724,]  122  126  122 #>  [5725,]  121  125  123 #>  [5726,]  121  125  123 #>  [5727,]  121  125  123 #>  [5728,]  122  126  122 #>  [5729,]  121  125  123 #>  [5730,]  121  125  123 #>  [5731,]  121  125  123 #>  [5732,]  121  125  123 #>  [5733,]  121  125  123 #>  [5734,]  121  125  123 #>  [5735,]  121  125  123 #>  [5736,]  121  125  123 #>  [5737,]  121  125  123 #>  [5738,]  121  125  123 #>  [5739,]  121  125  123 #>  [5740,]  121  125  123 #>  [5741,]  121  125  123 #>  [5742,]  121  125  123 #>  [5743,]  121  125  123 #>  [5744,]  121  125  123 #>  [5745,]  121  125  123 #>  [5746,]  121  125  123 #>  [5747,]  121  125  123 #>  [5748,]  121  125  123 #>  [5749,]  121  125  123 #>  [5750,]  122  126  122 #>  [5751,]  121  125  123 #>  [5752,]  122  126  122 #>  [5753,]  121  125  123 #>  [5754,]  121  125  123 #>  [5755,]  121  125  123 #>  [5756,]  121  125  123 #>  [5757,]  121  125  123 #>  [5758,]  121  125  123 #>  [5759,]  121  125  123 #>  [5760,]  121  125  123 #>  [5761,]  121  125  123 #>  [5762,]  121  125  123 #>  [5763,]  121  125  123 #>  [5764,]  121  125  123 #>  [5765,]  121  125  123 #>  [5766,]  121  125  123 #>  [5767,]  121  125  123 #>  [5768,]  121  125  123 #>  [5769,]  121  125  123 #>  [5770,]  121  125  123 #>  [5771,]  121  125  123 #>  [5772,]  121  125  123 #>  [5773,]  121  125  123 #>  [5774,]  121  125  123 #>  [5775,]  121  125  123 #>  [5776,]  122  126  122 #>  [5777,]  121  125  123 #>  [5778,]  121  125  123 #>  [5779,]  121  125  123 #>  [5780,]  121  125  123 #>  [5781,]  121  125  123 #>  [5782,]  121  125  123 #>  [5783,]  121  125  123 #>  [5784,]  121  125  123 #>  [5785,]  121  125  123 #>  [5786,]  122  126  122 #>  [5787,]  121  125  123 #>  [5788,]  121  125  123 #>  [5789,]  121  125  123 #>  [5790,]  121  125  123 #>  [5791,]  122  126  122 #>  [5792,]  121  125  123 #>  [5793,]  121  125  123 #>  [5794,]  121  125  123 #>  [5795,]  121  125  123 #>  [5796,]  121  125  123 #>  [5797,]  121  125  123 #>  [5798,]  121  125  123 #>  [5799,]  121  125  123 #>  [5800,]  121  125  123 #>  [5801,]  123  127  124 #>  [5802,]  124  128  125 #>  [5803,]  123  127  124 #>  [5804,]  123  127  124 #>  [5805,]  124  128  125 #>  [5806,]  123  127  124 #>  [5807,]  124  128  125 #>  [5808,]  123  127  124 #>  [5809,]  124  128  125 #>  [5810,]  124  128  125 #>  [5811,]  123  127  124 #>  [5812,]  124  128  125 #>  [5813,]  124  128  125 #>  [5814,]  123  127  124 #>  [5815,]  124  128  125 #>  [5816,]  123  127  124 #>  [5817,]  124  128  125 #>  [5818,]  124  128  125 #>  [5819,]  123  127  124 #>  [5820,]  124  128  125 #>  [5821,]  124  128  125 #>  [5822,]  124  128  125 #>  [5823,]  124  128  125 #>  [5824,]  124  128  125 #>  [5825,]  124  128  125 #>  [5826,]  123  127  124 #>  [5827,]  124  128  125 #>  [5828,]  123  127  124 #>  [5829,]  124  128  125 #>  [5830,]  124  128  125 #>  [5831,]  124  128  125 #>  [5832,]  124  128  125 #>  [5833,]  124  128  125 #>  [5834,]  123  127  124 #>  [5835,]  123  127  124 #>  [5836,]  124  128  125 #>  [5837,]  123  127  124 #>  [5838,]  123  127  124 #>  [5839,]  124  128  125 #>  [5840,]  124  128  125 #>  [5841,]  124  128  125 #>  [5842,]  123  127  124 #>  [5843,]  124  128  125 #>  [5844,]  124  128  125 #>  [5845,]  123  127  124 #>  [5846,]  124  128  125 #>  [5847,]  124  128  125 #>  [5848,]  124  128  125 #>  [5849,]  123  127  124 #>  [5850,]  124  128  125 #>  [5851,]  124  128  125 #>  [5852,]  123  127  124 #>  [5853,]  124  128  125 #>  [5854,]  124  128  125 #>  [5855,]  123  127  124 #>  [5856,]  123  127  124 #>  [5857,]  124  128  125 #>  [5858,]  124  128  125 #>  [5859,]  123  127  124 #>  [5860,]  124  128  125 #>  [5861,]  124  128  125 #>  [5862,]  123  127  124 #>  [5863,]  124  128  125 #>  [5864,]  123  127  124 #>  [5865,]  123  127  124 #>  [5866,]  124  128  125 #>  [5867,]  124  128  125 #>  [5868,]  123  127  124 #>  [5869,]  123  127  124 #>  [5870,]  124  128  125 #>  [5871,]  124  128  125 #>  [5872,]  123  127  124 #>  [5873,]  123  127  124 #>  [5874,]  124  128  125 #>  [5875,]  124  128  125 #>  [5876,]  124  128  125 #>  [5877,]  123  127  124 #>  [5878,]  124  128  125 #>  [5879,]  123  127  124 #>  [5880,]  124  128  125 #>  [5881,]  124  128  125 #>  [5882,]  124  128  125 #>  [5883,]  124  128  125 #>  [5884,]  124  128  125 #>  [5885,]  124  128  125 #>  [5886,]  124  128  125 #>  [5887,]  124  128  125 #>  [5888,]  124  128  125 #>  [5889,]  123  127  124 #>  [5890,]  124  128  125 #>  [5891,]  123  127  124 #>  [5892,]  124  128  125 #>  [5893,]  124  128  125 #>  [5894,]  123  127  124 #>  [5895,]  124  128  125 #>  [5896,]  123  127  124 #>  [5897,]  123  127  124 #>  [5898,]  124  128  125 #>  [5899,]  124  128  125 #>  [5900,]  123  127  124 #>  [5901,]  126  130  127 #>  [5902,]  125  129  126 #>  [5903,]  125  129  126 #>  [5904,]  126  130  127 #>  [5905,]  125  129  126 #>  [5906,]  125  129  126 #>  [5907,]  126  130  127 #>  [5908,]  126  130  127 #>  [5909,]  126  130  127 #>  [5910,]  126  130  127 #>  [5911,]  125  129  126 #>  [5912,]  125  129  126 #>  [5913,]  126  130  127 #>  [5914,]  125  129  126 #>  [5915,]  126  130  127 #>  [5916,]  126  130  127 #>  [5917,]  126  130  127 #>  [5918,]  126  130  127 #>  [5919,]  125  129  126 #>  [5920,]  125  129  126 #>  [5921,]  126  130  127 #>  [5922,]  125  129  126 #>  [5923,]  126  130  127 #>  [5924,]  125  129  126 #>  [5925,]  126  130  127 #>  [5926,]  125  129  126 #>  [5927,]  126  130  127 #>  [5928,]  126  130  127 #>  [5929,]  125  129  126 #>  [5930,]  125  129  126 #>  [5931,]  125  129  126 #>  [5932,]  125  129  126 #>  [5933,]  125  129  126 #>  [5934,]  125  129  126 #>  [5935,]  125  129  126 #>  [5936,]  125  129  126 #>  [5937,]  126  130  127 #>  [5938,]  126  130  127 #>  [5939,]  126  130  127 #>  [5940,]  125  129  126 #>  [5941,]  125  129  126 #>  [5942,]  125  129  126 #>  [5943,]  126  130  127 #>  [5944,]  126  130  127 #>  [5945,]  126  130  127 #>  [5946,]  126  130  127 #>  [5947,]  126  130  127 #>  [5948,]  125  129  126 #>  [5949,]  125  129  126 #>  [5950,]  125  129  126 #>  [5951,]  125  129  126 #>  [5952,]  125  129  126 #>  [5953,]  126  130  127 #>  [5954,]  125  129  126 #>  [5955,]  125  129  126 #>  [5956,]  126  130  127 #>  [5957,]  125  129  126 #>  [5958,]  125  129  126 #>  [5959,]  125  129  126 #>  [5960,]  125  129  126 #>  [5961,]  126  130  127 #>  [5962,]  125  129  126 #>  [5963,]  125  129  126 #>  [5964,]  126  130  127 #>  [5965,]  125  129  126 #>  [5966,]  125  129  126 #>  [5967,]  125  129  126 #>  [5968,]  125  129  126 #>  [5969,]  125  129  126 #>  [5970,]  126  130  127 #>  [5971,]  126  130  127 #>  [5972,]  126  130  127 #>  [5973,]  126  130  127 #>  [5974,]  126  130  127 #>  [5975,]  126  130  127 #>  [5976,]  126  130  127 #>  [5977,]  126  130  127 #>  [5978,]  125  129  126 #>  [5979,]  126  130  127 #>  [5980,]  125  129  126 #>  [5981,]  125  129  126 #>  [5982,]  126  130  127 #>  [5983,]  125  129  126 #>  [5984,]  126  130  127 #>  [5985,]  125  129  126 #>  [5986,]  126  130  127 #>  [5987,]  126  130  127 #>  [5988,]  126  130  127 #>  [5989,]  125  129  126 #>  [5990,]  126  130  127 #>  [5991,]  125  129  126 #>  [5992,]  125  129  126 #>  [5993,]  125  129  126 #>  [5994,]  126  130  127 #>  [5995,]  126  130  127 #>  [5996,]  126  130  127 #>  [5997,]  125  129  126 #>  [5998,]  125  129  126 #>  [5999,]  125  129  126 #>  [6000,]  126  130  127 #>  [6001,]  128  132  129 #>  [6002,]  127  131  128 #>  [6003,]  127  131  128 #>  [6004,]  127  131  128 #>  [6005,]  127  131  128 #>  [6006,]  127  131  128 #>  [6007,]  127  131  128 #>  [6008,]  127  131  128 #>  [6009,]  128  132  129 #>  [6010,]  127  131  128 #>  [6011,]  128  132  129 #>  [6012,]  127  131  128 #>  [6013,]  128  132  129 #>  [6014,]  127  131  128 #>  [6015,]  127  131  128 #>  [6016,]  127  131  128 #>  [6017,]  128  132  129 #>  [6018,]  128  132  129 #>  [6019,]  127  131  128 #>  [6020,]  128  132  129 #>  [6021,]  127  131  128 #>  [6022,]  127  131  128 #>  [6023,]  127  131  128 #>  [6024,]  127  131  128 #>  [6025,]  127  131  128 #>  [6026,]  127  131  128 #>  [6027,]  128  132  129 #>  [6028,]  128  132  129 #>  [6029,]  128  132  129 #>  [6030,]  127  131  128 #>  [6031,]  127  131  128 #>  [6032,]  127  131  128 #>  [6033,]  128  132  129 #>  [6034,]  127  131  128 #>  [6035,]  127  131  128 #>  [6036,]  128  132  129 #>  [6037,]  127  131  128 #>  [6038,]  128  132  129 #>  [6039,]  128  132  129 #>  [6040,]  127  131  128 #>  [6041,]  127  131  128 #>  [6042,]  128  132  129 #>  [6043,]  127  131  128 #>  [6044,]  127  131  128 #>  [6045,]  127  131  128 #>  [6046,]  127  131  128 #>  [6047,]  127  131  128 #>  [6048,]  127  131  128 #>  [6049,]  127  131  128 #>  [6050,]  127  131  128 #>  [6051,]  128  132  129 #>  [6052,]  127  131  128 #>  [6053,]  128  132  129 #>  [6054,]  128  132  129 #>  [6055,]  127  131  128 #>  [6056,]  128  132  129 #>  [6057,]  127  131  128 #>  [6058,]  128  132  129 #>  [6059,]  127  131  128 #>  [6060,]  127  131  128 #>  [6061,]  127  131  128 #>  [6062,]  128  132  129 #>  [6063,]  127  131  128 #>  [6064,]  127  131  128 #>  [6065,]  128  132  129 #>  [6066,]  128  132  129 #>  [6067,]  127  131  128 #>  [6068,]  127  131  128 #>  [6069,]  127  131  128 #>  [6070,]  127  131  128 #>  [6071,]  127  131  128 #>  [6072,]  127  131  128 #>  [6073,]  127  131  128 #>  [6074,]  127  131  128 #>  [6075,]  127  131  128 #>  [6076,]  127  131  128 #>  [6077,]  128  132  129 #>  [6078,]  127  131  128 #>  [6079,]  128  132  129 #>  [6080,]  127  131  128 #>  [6081,]  127  131  128 #>  [6082,]  128  132  129 #>  [6083,]  128  132  129 #>  [6084,]  128  132  129 #>  [6085,]  128  132  129 #>  [6086,]  127  131  128 #>  [6087,]  128  132  129 #>  [6088,]  127  131  128 #>  [6089,]  128  132  129 #>  [6090,]  128  132  129 #>  [6091,]  128  132  129 #>  [6092,]  127  131  128 #>  [6093,]  128  132  129 #>  [6094,]  128  132  129 #>  [6095,]  127  131  128 #>  [6096,]  127  131  128 #>  [6097,]  127  131  128 #>  [6098,]  127  131  128 #>  [6099,]  127  131  128 #>  [6100,]  127  131  128 #>  [6101,]  130  134  131 #>  [6102,]  129  133  130 #>  [6103,]  129  133  130 #>  [6104,]  130  134  131 #>  [6105,]  129  133  130 #>  [6106,]  129  133  130 #>  [6107,]  130  134  131 #>  [6108,]  129  133  130 #>  [6109,]  130  134  131 #>  [6110,]  130  134  131 #>  [6111,]  129  133  130 #>  [6112,]  129  133  130 #>  [6113,]  130  134  131 #>  [6114,]  130  134  131 #>  [6115,]  129  133  130 #>  [6116,]  130  134  131 #>  [6117,]  129  133  130 #>  [6118,]  129  133  130 #>  [6119,]  129  133  130 #>  [6120,]  130  134  131 #>  [6121,]  129  133  130 #>  [6122,]  130  134  131 #>  [6123,]  129  133  130 #>  [6124,]  130  134  131 #>  [6125,]  130  134  131 #>  [6126,]  129  133  130 #>  [6127,]  129  133  130 #>  [6128,]  130  134  131 #>  [6129,]  129  133  130 #>  [6130,]  129  133  130 #>  [6131,]  129  133  130 #>  [6132,]  129  133  130 #>  [6133,]  129  133  130 #>  [6134,]  129  133  130 #>  [6135,]  129  133  130 #>  [6136,]  130  134  131 #>  [6137,]  129  133  130 #>  [6138,]  129  133  130 #>  [6139,]  130  134  131 #>  [6140,]  129  133  130 #>  [6141,]  129  133  130 #>  [6142,]  129  133  130 #>  [6143,]  129  133  130 #>  [6144,]  129  133  130 #>  [6145,]  130  134  131 #>  [6146,]  129  133  130 #>  [6147,]  129  133  130 #>  [6148,]  129  133  130 #>  [6149,]  130  134  131 #>  [6150,]  130  134  131 #>  [6151,]  129  133  130 #>  [6152,]  130  134  131 #>  [6153,]  130  134  131 #>  [6154,]  130  134  131 #>  [6155,]  130  134  131 #>  [6156,]  129  133  130 #>  [6157,]  130  134  131 #>  [6158,]  130  134  131 #>  [6159,]  130  134  131 #>  [6160,]  129  133  130 #>  [6161,]  129  133  130 #>  [6162,]  129  133  130 #>  [6163,]  129  133  130 #>  [6164,]  129  133  130 #>  [6165,]  129  133  130 #>  [6166,]  129  133  130 #>  [6167,]  130  134  131 #>  [6168,]  129  133  130 #>  [6169,]  129  133  130 #>  [6170,]  129  133  130 #>  [6171,]  129  133  130 #>  [6172,]  130  134  131 #>  [6173,]  130  134  131 #>  [6174,]  129  133  130 #>  [6175,]  129  133  130 #>  [6176,]  130  134  131 #>  [6177,]  129  133  130 #>  [6178,]  129  133  130 #>  [6179,]  129  133  130 #>  [6180,]  129  133  130 #>  [6181,]  129  133  130 #>  [6182,]  129  133  130 #>  [6183,]  129  133  130 #>  [6184,]  129  133  130 #>  [6185,]  130  134  131 #>  [6186,]  130  134  131 #>  [6187,]  130  134  131 #>  [6188,]  130  134  131 #>  [6189,]  129  133  130 #>  [6190,]  130  134  131 #>  [6191,]  130  134  131 #>  [6192,]  129  133  130 #>  [6193,]  129  133  130 #>  [6194,]  129  133  130 #>  [6195,]  129  133  130 #>  [6196,]  129  133  130 #>  [6197,]  129  133  130 #>  [6198,]  129  133  130 #>  [6199,]  129  133  130 #>  [6200,]  129  133  130 #>  [6201,]  131  135  132 #>  [6202,]  131  135  132 #>  [6203,]  131  135  132 #>  [6204,]  131  135  132 #>  [6205,]  131  135  132 #>  [6206,]  131  135  132 #>  [6207,]  131  135  132 #>  [6208,]  132  136  133 #>  [6209,]  131  135  132 #>  [6210,]  131  135  132 #>  [6211,]  131  135  132 #>  [6212,]  131  135  132 #>  [6213,]  132  136  133 #>  [6214,]  131  135  132 #>  [6215,]  132  136  133 #>  [6216,]  131  135  132 #>  [6217,]  131  135  132 #>  [6218,]  131  135  132 #>  [6219,]  132  136  133 #>  [6220,]  132  136  133 #>  [6221,]  131  135  132 #>  [6222,]  132  136  133 #>  [6223,]  131  135  132 #>  [6224,]  131  135  132 #>  [6225,]  131  135  132 #>  [6226,]  131  135  132 #>  [6227,]  132  136  133 #>  [6228,]  131  135  132 #>  [6229,]  132  136  133 #>  [6230,]  131  135  132 #>  [6231,]  131  135  132 #>  [6232,]  131  135  132 #>  [6233,]  131  135  132 #>  [6234,]  131  135  132 #>  [6235,]  131  135  132 #>  [6236,]  132  136  133 #>  [6237,]  132  136  133 #>  [6238,]  132  136  133 #>  [6239,]  131  135  132 #>  [6240,]  131  135  132 #>  [6241,]  132  136  133 #>  [6242,]  131  135  132 #>  [6243,]  131  135  132 #>  [6244,]  131  135  132 #>  [6245,]  131  135  132 #>  [6246,]  132  136  133 #>  [6247,]  131  135  132 #>  [6248,]  131  135  132 #>  [6249,]  131  135  132 #>  [6250,]  132  136  133 #>  [6251,]  132  136  133 #>  [6252,]  131  135  132 #>  [6253,]  132  136  133 #>  [6254,]  131  135  132 #>  [6255,]  132  136  133 #>  [6256,]  131  135  132 #>  [6257,]  131  135  132 #>  [6258,]  132  136  133 #>  [6259,]  131  135  132 #>  [6260,]  132  136  133 #>  [6261,]  131  135  132 #>  [6262,]  131  135  132 #>  [6263,]  131  135  132 #>  [6264,]  132  136  133 #>  [6265,]  131  135  132 #>  [6266,]  132  136  133 #>  [6267,]  131  135  132 #>  [6268,]  131  135  132 #>  [6269,]  132  136  133 #>  [6270,]  131  135  132 #>  [6271,]  132  136  133 #>  [6272,]  131  135  132 #>  [6273,]  131  135  132 #>  [6274,]  131  135  132 #>  [6275,]  131  135  132 #>  [6276,]  131  135  132 #>  [6277,]  132  136  133 #>  [6278,]  131  135  132 #>  [6279,]  131  135  132 #>  [6280,]  132  136  133 #>  [6281,]  132  136  133 #>  [6282,]  131  135  132 #>  [6283,]  132  136  133 #>  [6284,]  132  136  133 #>  [6285,]  132  136  133 #>  [6286,]  131  135  132 #>  [6287,]  132  136  133 #>  [6288,]  131  135  132 #>  [6289,]  131  135  132 #>  [6290,]  132  136  133 #>  [6291,]  131  135  132 #>  [6292,]  131  135  132 #>  [6293,]  131  135  132 #>  [6294,]  131  135  132 #>  [6295,]  131  135  132 #>  [6296,]  132  136  133 #>  [6297,]  132  136  133 #>  [6298,]  131  135  132 #>  [6299,]  131  135  132 #>  [6300,]  132  136  133 #>  [6301,]  134  138  135 #>  [6302,]  133  137  134 #>  [6303,]  134  138  135 #>  [6304,]  134  138  135 #>  [6305,]  134  138  135 #>  [6306,]  133  137  134 #>  [6307,]  134  138  135 #>  [6308,]  134  138  135 #>  [6309,]  134  138  135 #>  [6310,]  134  138  135 #>  [6311,]  133  137  134 #>  [6312,]  133  137  134 #>  [6313,]  134  138  135 #>  [6314,]  134  138  135 #>  [6315,]  133  137  134 #>  [6316,]  134  138  135 #>  [6317,]  133  137  134 #>  [6318,]  134  138  135 #>  [6319,]  133  137  134 #>  [6320,]  134  138  135 #>  [6321,]  134  138  135 #>  [6322,]  134  138  135 #>  [6323,]  133  137  134 #>  [6324,]  134  138  135 #>  [6325,]  134  138  135 #>  [6326,]  133  137  134 #>  [6327,]  134  138  135 #>  [6328,]  134  138  135 #>  [6329,]  133  137  134 #>  [6330,]  133  137  134 #>  [6331,]  133  137  134 #>  [6332,]  134  138  135 #>  [6333,]  134  138  135 #>  [6334,]  133  137  134 #>  [6335,]  133  137  134 #>  [6336,]  134  138  135 #>  [6337,]  133  137  134 #>  [6338,]  134  138  135 #>  [6339,]  134  138  135 #>  [6340,]  134  138  135 #>  [6341,]  134  138  135 #>  [6342,]  133  137  134 #>  [6343,]  133  137  134 #>  [6344,]  133  137  134 #>  [6345,]  134  138  135 #>  [6346,]  133  137  134 #>  [6347,]  133  137  134 #>  [6348,]  133  137  134 #>  [6349,]  134  138  135 #>  [6350,]  134  138  135 #>  [6351,]  134  138  135 #>  [6352,]  134  138  135 #>  [6353,]  134  138  135 #>  [6354,]  134  138  135 #>  [6355,]  134  138  135 #>  [6356,]  133  137  134 #>  [6357,]  134  138  135 #>  [6358,]  134  138  135 #>  [6359,]  134  138  135 #>  [6360,]  133  137  134 #>  [6361,]  133  137  134 #>  [6362,]  134  138  135 #>  [6363,]  133  137  134 #>  [6364,]  133  137  134 #>  [6365,]  133  137  134 #>  [6366,]  133  137  134 #>  [6367,]  134  138  135 #>  [6368,]  133  137  134 #>  [6369,]  134  138  135 #>  [6370,]  133  137  134 #>  [6371,]  134  138  135 #>  [6372,]  134  138  135 #>  [6373,]  134  138  135 #>  [6374,]  134  138  135 #>  [6375,]  133  137  134 #>  [6376,]  134  138  135 #>  [6377,]  134  138  135 #>  [6378,]  133  137  134 #>  [6379,]  133  137  134 #>  [6380,]  134  138  135 #>  [6381,]  133  137  134 #>  [6382,]  134  138  135 #>  [6383,]  134  138  135 #>  [6384,]  134  138  135 #>  [6385,]  134  138  135 #>  [6386,]  134  138  135 #>  [6387,]  134  138  135 #>  [6388,]  134  138  135 #>  [6389,]  134  138  135 #>  [6390,]  134  138  135 #>  [6391,]  134  138  135 #>  [6392,]  133  137  134 #>  [6393,]  133  137  134 #>  [6394,]  133  137  134 #>  [6395,]  133  137  134 #>  [6396,]  133  137  134 #>  [6397,]  134  138  135 #>  [6398,]  134  138  135 #>  [6399,]  134  138  135 #>  [6400,]  133  137  134 #>  [6401,]  136  140  137 #>  [6402,]  136  140  137 #>  [6403,]  135  139  136 #>  [6404,]  136  140  137 #>  [6405,]  136  140  137 #>  [6406,]  135  139  136 #>  [6407,]  135  139  136 #>  [6408,]  136  140  137 #>  [6409,]  136  140  137 #>  [6410,]  136  140  137 #>  [6411,]  136  140  137 #>  [6412,]  136  140  137 #>  [6413,]  136  140  137 #>  [6414,]  136  140  137 #>  [6415,]  136  140  137 #>  [6416,]  136  140  137 #>  [6417,]  136  140  137 #>  [6418,]  136  140  137 #>  [6419,]  136  140  137 #>  [6420,]  135  139  136 #>  [6421,]  135  139  136 #>  [6422,]  136  140  137 #>  [6423,]  135  139  136 #>  [6424,]  136  140  137 #>  [6425,]  135  139  136 #>  [6426,]  136  140  137 #>  [6427,]  136  140  137 #>  [6428,]  136  140  137 #>  [6429,]  135  139  136 #>  [6430,]  136  140  137 #>  [6431,]  136  140  137 #>  [6432,]  136  140  137 #>  [6433,]  136  140  137 #>  [6434,]  135  139  136 #>  [6435,]  135  139  136 #>  [6436,]  136  140  137 #>  [6437,]  135  139  136 #>  [6438,]  136  140  137 #>  [6439,]  136  140  137 #>  [6440,]  136  140  137 #>  [6441,]  136  140  137 #>  [6442,]  135  139  136 #>  [6443,]  136  140  137 #>  [6444,]  135  139  136 #>  [6445,]  135  139  136 #>  [6446,]  136  140  137 #>  [6447,]  136  140  137 #>  [6448,]  136  140  137 #>  [6449,]  136  140  137 #>  [6450,]  135  139  136 #>  [6451,]  136  140  137 #>  [6452,]  136  140  137 #>  [6453,]  135  139  136 #>  [6454,]  135  139  136 #>  [6455,]  135  139  136 #>  [6456,]  135  139  136 #>  [6457,]  135  139  136 #>  [6458,]  136  140  137 #>  [6459,]  136  140  137 #>  [6460,]  135  139  136 #>  [6461,]  136  140  137 #>  [6462,]  136  140  137 #>  [6463,]  136  140  137 #>  [6464,]  135  139  136 #>  [6465,]  135  139  136 #>  [6466,]  136  140  137 #>  [6467,]  136  140  137 #>  [6468,]  136  140  137 #>  [6469,]  136  140  137 #>  [6470,]  136  140  137 #>  [6471,]  136  140  137 #>  [6472,]  136  140  137 #>  [6473,]  135  139  136 #>  [6474,]  135  139  136 #>  [6475,]  136  140  137 #>  [6476,]  136  140  137 #>  [6477,]  136  140  137 #>  [6478,]  136  140  137 #>  [6479,]  136  140  137 #>  [6480,]  135  139  136 #>  [6481,]  135  139  136 #>  [6482,]  135  139  136 #>  [6483,]  136  140  137 #>  [6484,]  135  139  136 #>  [6485,]  135  139  136 #>  [6486,]  135  139  136 #>  [6487,]  136  140  137 #>  [6488,]  135  139  136 #>  [6489,]  135  139  136 #>  [6490,]  136  140  137 #>  [6491,]  136  140  137 #>  [6492,]  136  140  137 #>  [6493,]  136  140  137 #>  [6494,]  135  139  136 #>  [6495,]  136  140  137 #>  [6496,]  136  140  137 #>  [6497,]  135  139  136 #>  [6498,]  135  139  136 #>  [6499,]  135  139  136 #>  [6500,]  136  140  137 #>  [6501,]  138  142  139 #>  [6502,]  138  142  139 #>  [6503,]  138  142  139 #>  [6504,]  138  142  139 #>  [6505,]  138  142  139 #>  [6506,]  138  142  139 #>  [6507,]  137  141  138 #>  [6508,]  138  142  139 #>  [6509,]  138  142  139 #>  [6510,]  138  142  139 #>  [6511,]  138  142  139 #>  [6512,]  138  142  139 #>  [6513,]  138  142  139 #>  [6514,]  138  142  139 #>  [6515,]  138  142  139 #>  [6516,]  138  142  139 #>  [6517,]  138  142  139 #>  [6518,]  138  142  139 #>  [6519,]  138  142  139 #>  [6520,]  138  142  139 #>  [6521,]  137  141  138 #>  [6522,]  138  142  139 #>  [6523,]  137  141  138 #>  [6524,]  138  142  139 #>  [6525,]  138  142  139 #>  [6526,]  138  142  139 #>  [6527,]  138  142  139 #>  [6528,]  138  142  139 #>  [6529,]  138  142  139 #>  [6530,]  137  141  138 #>  [6531,]  138  142  139 #>  [6532,]  138  142  139 #>  [6533,]  138  142  139 #>  [6534,]  138  142  139 #>  [6535,]  138  142  139 #>  [6536,]  138  142  139 #>  [6537,]  138  142  139 #>  [6538,]  138  142  139 #>  [6539,]  137  141  138 #>  [6540,]  138  142  139 #>  [6541,]  138  142  139 #>  [6542,]  138  142  139 #>  [6543,]  138  142  139 #>  [6544,]  138  142  139 #>  [6545,]  138  142  139 #>  [6546,]  138  142  139 #>  [6547,]  138  142  139 #>  [6548,]  138  142  139 #>  [6549,]  137  141  138 #>  [6550,]  138  142  139 #>  [6551,]  138  142  139 #>  [6552,]  138  142  139 #>  [6553,]  138  142  139 #>  [6554,]  137  141  138 #>  [6555,]  138  142  139 #>  [6556,]  138  142  139 #>  [6557,]  138  142  139 #>  [6558,]  138  142  139 #>  [6559,]  138  142  139 #>  [6560,]  138  142  139 #>  [6561,]  138  142  139 #>  [6562,]  137  141  138 #>  [6563,]  138  142  139 #>  [6564,]  138  142  139 #>  [6565,]  138  142  139 #>  [6566,]  138  142  139 #>  [6567,]  138  142  139 #>  [6568,]  138  142  139 #>  [6569,]  138  142  139 #>  [6570,]  137  141  138 #>  [6571,]  138  142  139 #>  [6572,]  138  142  139 #>  [6573,]  138  142  139 #>  [6574,]  138  142  139 #>  [6575,]  138  142  139 #>  [6576,]  138  142  139 #>  [6577,]  138  142  139 #>  [6578,]  138  142  139 #>  [6579,]  138  142  139 #>  [6580,]  137  141  138 #>  [6581,]  138  142  139 #>  [6582,]  138  142  139 #>  [6583,]  137  141  138 #>  [6584,]  138  142  139 #>  [6585,]  138  142  139 #>  [6586,]  138  142  139 #>  [6587,]  138  142  139 #>  [6588,]  138  142  139 #>  [6589,]  138  142  139 #>  [6590,]  138  142  139 #>  [6591,]  138  142  139 #>  [6592,]  138  142  139 #>  [6593,]  138  142  139 #>  [6594,]  138  142  139 #>  [6595,]  137  141  138 #>  [6596,]  138  142  139 #>  [6597,]  138  142  139 #>  [6598,]  137  141  138 #>  [6599,]  138  142  139 #>  [6600,]  138  142  139 #>  [6601,]  140  144  140 #>  [6602,]  139  143  141 #>  [6603,]  139  143  142 #>  [6604,]  139  143  142 #>  [6605,]  140  144  140 #>  [6606,]  139  143  141 #>  [6607,]  139  143  142 #>  [6608,]  139  143  142 #>  [6609,]  140  144  140 #>  [6610,]  139  143  142 #>  [6611,]  140  144  140 #>  [6612,]  139  143  141 #>  [6613,]  140  144  140 #>  [6614,]  139  143  142 #>  [6615,]  139  143  141 #>  [6616,]  139  143  142 #>  [6617,]  140  144  140 #>  [6618,]  140  144  140 #>  [6619,]  140  144  140 #>  [6620,]  140  144  140 #>  [6621,]  140  144  140 #>  [6622,]  140  144  140 #>  [6623,]  139  143  141 #>  [6624,]  140  144  140 #>  [6625,]  139  143  142 #>  [6626,]  139  143  141 #>  [6627,]  140  144  140 #>  [6628,]  140  144  140 #>  [6629,]  140  144  140 #>  [6630,]  139  143  141 #>  [6631,]  139  143  141 #>  [6632,]  139  143  142 #>  [6633,]  140  144  140 #>  [6634,]  139  143  141 #>  [6635,]  139  143  141 #>  [6636,]  140  144  140 #>  [6637,]  139  143  141 #>  [6638,]  140  144  140 #>  [6639,]  140  144  140 #>  [6640,]  139  143  142 #>  [6641,]  140  144  140 #>  [6642,]  140  144  140 #>  [6643,]  139  143  141 #>  [6644,]  139  143  141 #>  [6645,]  139  143  142 #>  [6646,]  139  143  141 #>  [6647,]  139  143  141 #>  [6648,]  139  143  141 #>  [6649,]  139  143  142 #>  [6650,]  139  143  142 #>  [6651,]  140  144  140 #>  [6652,]  139  143  142 #>  [6653,]  140  144  140 #>  [6654,]  140  144  140 #>  [6655,]  139  143  142 #>  [6656,]  140  144  140 #>  [6657,]  139  143  142 #>  [6658,]  140  144  140 #>  [6659,]  139  143  142 #>  [6660,]  139  143  141 #>  [6661,]  140  144  140 #>  [6662,]  140  144  140 #>  [6663,]  139  143  141 #>  [6664,]  140  144  140 #>  [6665,]  140  144  140 #>  [6666,]  140  144  140 #>  [6667,]  139  143  142 #>  [6668,]  139  143  141 #>  [6669,]  139  143  142 #>  [6670,]  140  144  140 #>  [6671,]  139  143  142 #>  [6672,]  139  143  142 #>  [6673,]  140  144  140 #>  [6674,]  139  143  142 #>  [6675,]  139  143  141 #>  [6676,]  139  143  142 #>  [6677,]  140  144  140 #>  [6678,]  139  143  141 #>  [6679,]  140  144  140 #>  [6680,]  139  143  142 #>  [6681,]  140  144  140 #>  [6682,]  140  144  140 #>  [6683,]  140  144  140 #>  [6684,]  140  144  140 #>  [6685,]  140  144  140 #>  [6686,]  139  143  142 #>  [6687,]  140  144  140 #>  [6688,]  139  143  142 #>  [6689,]  140  144  140 #>  [6690,]  140  144  140 #>  [6691,]  140  144  140 #>  [6692,]  139  143  141 #>  [6693,]  140  144  140 #>  [6694,]  140  144  140 #>  [6695,]  139  143  141 #>  [6696,]  139  143  141 #>  [6697,]  139  143  142 #>  [6698,]  139  143  142 #>  [6699,]  140  144  140 #>  [6700,]  140  144  140 #>  [6701,]  142  146  144 #>  [6702,]  142  146  144 #>  [6703,]  142  146  144 #>  [6704,]  142  146  144 #>  [6705,]  142  146  144 #>  [6706,]  142  146  144 #>  [6707,]  141  145  143 #>  [6708,]  142  146  144 #>  [6709,]  142  146  144 #>  [6710,]  142  146  144 #>  [6711,]  142  146  144 #>  [6712,]  142  146  144 #>  [6713,]  142  146  144 #>  [6714,]  142  146  144 #>  [6715,]  142  146  144 #>  [6716,]  142  146  144 #>  [6717,]  142  146  144 #>  [6718,]  142  146  144 #>  [6719,]  142  146  144 #>  [6720,]  142  146  144 #>  [6721,]  141  145  143 #>  [6722,]  142  146  144 #>  [6723,]  141  145  144 #>  [6724,]  142  146  144 #>  [6725,]  142  146  144 #>  [6726,]  142  146  144 #>  [6727,]  142  146  144 #>  [6728,]  142  146  144 #>  [6729,]  142  146  144 #>  [6730,]  141  145  144 #>  [6731,]  142  146  144 #>  [6732,]  142  146  144 #>  [6733,]  142  146  144 #>  [6734,]  142  146  144 #>  [6735,]  142  146  144 #>  [6736,]  142  146  144 #>  [6737,]  142  146  144 #>  [6738,]  142  146  144 #>  [6739,]  141  145  143 #>  [6740,]  142  146  144 #>  [6741,]  142  146  144 #>  [6742,]  142  146  144 #>  [6743,]  142  146  144 #>  [6744,]  142  146  144 #>  [6745,]  142  146  144 #>  [6746,]  142  146  144 #>  [6747,]  142  146  144 #>  [6748,]  142  146  144 #>  [6749,]  141  145  143 #>  [6750,]  142  146  144 #>  [6751,]  142  146  144 #>  [6752,]  142  146  144 #>  [6753,]  142  146  144 #>  [6754,]  141  145  144 #>  [6755,]  142  146  144 #>  [6756,]  142  146  144 #>  [6757,]  142  146  144 #>  [6758,]  142  146  144 #>  [6759,]  142  146  144 #>  [6760,]  142  146  144 #>  [6761,]  142  146  144 #>  [6762,]  141  145  143 #>  [6763,]  142  146  144 #>  [6764,]  142  146  144 #>  [6765,]  142  146  144 #>  [6766,]  142  146  144 #>  [6767,]  142  146  144 #>  [6768,]  142  146  144 #>  [6769,]  142  146  144 #>  [6770,]  141  145  143 #>  [6771,]  142  146  144 #>  [6772,]  142  146  144 #>  [6773,]  142  146  144 #>  [6774,]  142  146  144 #>  [6775,]  142  146  144 #>  [6776,]  142  146  144 #>  [6777,]  142  146  144 #>  [6778,]  142  146  144 #>  [6779,]  142  146  144 #>  [6780,]  141  145  143 #>  [6781,]  142  146  144 #>  [6782,]  142  146  144 #>  [6783,]  141  145  144 #>  [6784,]  142  146  144 #>  [6785,]  142  146  144 #>  [6786,]  142  146  144 #>  [6787,]  142  146  144 #>  [6788,]  142  146  144 #>  [6789,]  142  146  144 #>  [6790,]  142  146  144 #>  [6791,]  142  146  144 #>  [6792,]  142  146  144 #>  [6793,]  142  146  144 #>  [6794,]  142  146  144 #>  [6795,]  141  145  143 #>  [6796,]  142  146  144 #>  [6797,]  142  146  144 #>  [6798,]  141  145  144 #>  [6799,]  142  146  144 #>  [6800,]  142  146  144 #>  [6801,]  144  148  145 #>  [6802,]  144  148  145 #>  [6803,]  143  147  147 #>  [6804,]  144  148  147 #>  [6805,]  143  147  147 #>  [6806,]  143  147  145 #>  [6807,]  144  148  145 #>  [6808,]  144  148  147 #>  [6809,]  144  148  147 #>  [6810,]  144  148  147 #>  [6811,]  143  147  145 #>  [6812,]  143  147  145 #>  [6813,]  144  148  145 #>  [6814,]  143  147  145 #>  [6815,]  144  148  145 #>  [6816,]  144  148  145 #>  [6817,]  144  148  145 #>  [6818,]  144  148  147 #>  [6819,]  143  147  145 #>  [6820,]  143  147  146 #>  [6821,]  144  148  145 #>  [6822,]  143  147  145 #>  [6823,]  144  148  147 #>  [6824,]  143  147  147 #>  [6825,]  144  148  145 #>  [6826,]  143  147  145 #>  [6827,]  144  148  145 #>  [6828,]  144  148  145 #>  [6829,]  143  147  145 #>  [6830,]  143  147  147 #>  [6831,]  144  148  147 #>  [6832,]  143  147  147 #>  [6833,]  143  147  145 #>  [6834,]  143  147  147 #>  [6835,]  143  147  145 #>  [6836,]  143  147  145 #>  [6837,]  144  148  145 #>  [6838,]  144  148  145 #>  [6839,]  144  148  147 #>  [6840,]  143  147  145 #>  [6841,]  143  147  145 #>  [6842,]  143  147  146 #>  [6843,]  144  148  147 #>  [6844,]  144  148  145 #>  [6845,]  144  148  147 #>  [6846,]  144  148  145 #>  [6847,]  144  148  145 #>  [6848,]  143  147  147 #>  [6849,]  144  148  147 #>  [6850,]  144  148  145 #>  [6851,]  143  147  147 #>  [6852,]  143  147  145 #>  [6853,]  144  148  146 #>  [6854,]  143  147  145 #>  [6855,]  143  147  145 #>  [6856,]  144  148  146 #>  [6857,]  143  147  145 #>  [6858,]  143  147  145 #>  [6859,]  144  148  145 #>  [6860,]  143  147  147 #>  [6861,]  144  148  145 #>  [6862,]  143  147  147 #>  [6863,]  143  147  145 #>  [6864,]  144  148  147 #>  [6865,]  144  148  146 #>  [6866,]  143  147  147 #>  [6867,]  143  147  147 #>  [6868,]  143  147  145 #>  [6869,]  143  147  145 #>  [6870,]  144  148  145 #>  [6871,]  144  148  145 #>  [6872,]  144  148  147 #>  [6873,]  144  148  145 #>  [6874,]  144  148  145 #>  [6875,]  144  148  145 #>  [6876,]  144  148  145 #>  [6877,]  144  148  145 #>  [6878,]  143  147  147 #>  [6879,]  144  148  145 #>  [6880,]  143  147  145 #>  [6881,]  143  147  145 #>  [6882,]  144  148  145 #>  [6883,]  143  147  145 #>  [6884,]  144  148  145 #>  [6885,]  144  148  146 #>  [6886,]  144  148  145 #>  [6887,]  144  148  145 #>  [6888,]  144  148  147 #>  [6889,]  143  147  146 #>  [6890,]  144  148  145 #>  [6891,]  143  147  147 #>  [6892,]  144  148  145 #>  [6893,]  143  147  145 #>  [6894,]  144  148  145 #>  [6895,]  144  148  147 #>  [6896,]  144  148  145 #>  [6897,]  143  147  145 #>  [6898,]  143  147  145 #>  [6899,]  143  147  145 #>  [6900,]  144  148  145 #>  [6901,]  146  150  149 #>  [6902,]  145  149  148 #>  [6903,]  146  150  149 #>  [6904,]  146  150  149 #>  [6905,]  146  150  149 #>  [6906,]  145  149  148 #>  [6907,]  146  150  149 #>  [6908,]  146  150  149 #>  [6909,]  146  150  149 #>  [6910,]  146  150  149 #>  [6911,]  145  149  148 #>  [6912,]  145  149  148 #>  [6913,]  146  150  149 #>  [6914,]  146  150  149 #>  [6915,]  145  149  148 #>  [6916,]  146  150  149 #>  [6917,]  145  149  148 #>  [6918,]  146  150  149 #>  [6919,]  145  149  148 #>  [6920,]  146  150  149 #>  [6921,]  146  150  149 #>  [6922,]  146  150  149 #>  [6923,]  145  149  148 #>  [6924,]  146  150  149 #>  [6925,]  146  150  149 #>  [6926,]  145  149  148 #>  [6927,]  146  150  149 #>  [6928,]  146  150  149 #>  [6929,]  145  149  148 #>  [6930,]  145  149  148 #>  [6931,]  145  149  148 #>  [6932,]  146  150  149 #>  [6933,]  146  150  149 #>  [6934,]  145  149  148 #>  [6935,]  145  149  148 #>  [6936,]  146  150  149 #>  [6937,]  145  149  148 #>  [6938,]  146  150  149 #>  [6939,]  146  150  149 #>  [6940,]  146  150  149 #>  [6941,]  146  150  149 #>  [6942,]  145  149  148 #>  [6943,]  145  149  148 #>  [6944,]  145  149  148 #>  [6945,]  146  150  149 #>  [6946,]  145  149  148 #>  [6947,]  145  149  148 #>  [6948,]  145  149  148 #>  [6949,]  146  150  149 #>  [6950,]  146  150  149 #>  [6951,]  146  150  149 #>  [6952,]  146  150  149 #>  [6953,]  146  150  149 #>  [6954,]  146  150  149 #>  [6955,]  146  150  149 #>  [6956,]  145  149  148 #>  [6957,]  146  150  149 #>  [6958,]  146  150  149 #>  [6959,]  146  150  149 #>  [6960,]  145  149  148 #>  [6961,]  145  149  148 #>  [6962,]  146  150  149 #>  [6963,]  145  149  148 #>  [6964,]  145  149  148 #>  [6965,]  145  149  148 #>  [6966,]  145  149  148 #>  [6967,]  146  150  149 #>  [6968,]  145  149  148 #>  [6969,]  146  150  149 #>  [6970,]  145  149  148 #>  [6971,]  146  150  149 #>  [6972,]  146  150  149 #>  [6973,]  146  150  149 #>  [6974,]  146  150  149 #>  [6975,]  145  149  148 #>  [6976,]  146  150  149 #>  [6977,]  146  150  149 #>  [6978,]  145  149  148 #>  [6979,]  145  149  148 #>  [6980,]  146  150  149 #>  [6981,]  145  149  148 #>  [6982,]  146  150  149 #>  [6983,]  146  150  149 #>  [6984,]  146  150  149 #>  [6985,]  146  150  149 #>  [6986,]  146  150  149 #>  [6987,]  146  150  149 #>  [6988,]  146  150  149 #>  [6989,]  146  150  149 #>  [6990,]  146  150  149 #>  [6991,]  146  150  149 #>  [6992,]  145  149  148 #>  [6993,]  145  149  148 #>  [6994,]  145  149  148 #>  [6995,]  145  149  148 #>  [6996,]  145  149  148 #>  [6997,]  146  150  149 #>  [6998,]  146  150  149 #>  [6999,]  146  150  149 #>  [7000,]  145  149  148 #>  [7001,]  148  152  152 #>  [7002,]  148  152  152 #>  [7003,]  147  151  150 #>  [7004,]  148  152  151 #>  [7005,]  148  152  151 #>  [7006,]  148  152  152 #>  [7007,]  148  152  151 #>  [7008,]  148  152  151 #>  [7009,]  148  152  151 #>  [7010,]  148  152  151 #>  [7011,]  147  151  150 #>  [7012,]  147  151  150 #>  [7013,]  148  152  152 #>  [7014,]  147  151  150 #>  [7015,]  148  152  152 #>  [7016,]  148  152  152 #>  [7017,]  148  152  152 #>  [7018,]  148  152  151 #>  [7019,]  147  151  150 #>  [7020,]  147  151  150 #>  [7021,]  148  152  152 #>  [7022,]  147  151  150 #>  [7023,]  148  152  151 #>  [7024,]  148  152  151 #>  [7025,]  148  152  151 #>  [7026,]  147  151  150 #>  [7027,]  148  152  151 #>  [7028,]  148  152  151 #>  [7029,]  147  151  150 #>  [7030,]  148  152  151 #>  [7031,]  148  152  151 #>  [7032,]  147  151  150 #>  [7033,]  148  152  152 #>  [7034,]  148  152  151 #>  [7035,]  148  152  152 #>  [7036,]  147  151  150 #>  [7037,]  148  152  151 #>  [7038,]  148  152  151 #>  [7039,]  148  152  151 #>  [7040,]  147  151  150 #>  [7041,]  147  151  150 #>  [7042,]  147  151  150 #>  [7043,]  148  152  151 #>  [7044,]  148  152  152 #>  [7045,]  148  152  151 #>  [7046,]  148  152  151 #>  [7047,]  148  152  151 #>  [7048,]  147  151  150 #>  [7049,]  148  152  151 #>  [7050,]  148  152  152 #>  [7051,]  147  151  150 #>  [7052,]  148  152  151 #>  [7053,]  148  152  151 #>  [7054,]  147  151  150 #>  [7055,]  148  152  151 #>  [7056,]  148  152  151 #>  [7057,]  148  152  151 #>  [7058,]  148  152  151 #>  [7059,]  148  152  152 #>  [7060,]  147  151  150 #>  [7061,]  148  152  152 #>  [7062,]  147  151  150 #>  [7063,]  147  151  150 #>  [7064,]  148  152  151 #>  [7065,]  148  152  151 #>  [7066,]  147  151  150 #>  [7067,]  148  152  151 #>  [7068,]  147  151  150 #>  [7069,]  147  151  150 #>  [7070,]  148  152  152 #>  [7071,]  148  152  152 #>  [7072,]  148  152  151 #>  [7073,]  148  152  152 #>  [7074,]  148  152  151 #>  [7075,]  148  152  151 #>  [7076,]  148  152  152 #>  [7077,]  148  152  152 #>  [7078,]  148  152  151 #>  [7079,]  148  152  152 #>  [7080,]  147  151  150 #>  [7081,]  147  151  150 #>  [7082,]  148  152  151 #>  [7083,]  147  151  150 #>  [7084,]  148  152  151 #>  [7085,]  148  152  151 #>  [7086,]  148  152  152 #>  [7087,]  148  152  151 #>  [7088,]  148  152  151 #>  [7089,]  147  151  150 #>  [7090,]  148  152  151 #>  [7091,]  147  151  150 #>  [7092,]  148  152  151 #>  [7093,]  148  152  152 #>  [7094,]  148  152  151 #>  [7095,]  148  152  151 #>  [7096,]  148  152  152 #>  [7097,]  148  152  151 #>  [7098,]  148  152  151 #>  [7099,]  148  152  152 #>  [7100,]  148  152  151 #>  [7101,]  150  154  154 #>  [7102,]  150  154  154 #>  [7103,]  150  154  154 #>  [7104,]  150  154  154 #>  [7105,]  150  154  154 #>  [7106,]  150  154  154 #>  [7107,]  149  153  153 #>  [7108,]  150  154  154 #>  [7109,]  150  154  154 #>  [7110,]  150  154  154 #>  [7111,]  150  154  154 #>  [7112,]  150  154  154 #>  [7113,]  150  154  154 #>  [7114,]  150  154  154 #>  [7115,]  150  154  154 #>  [7116,]  150  154  154 #>  [7117,]  150  154  154 #>  [7118,]  150  154  154 #>  [7119,]  150  154  154 #>  [7120,]  150  154  154 #>  [7121,]  149  153  153 #>  [7122,]  150  154  154 #>  [7123,]  149  153  153 #>  [7124,]  150  154  154 #>  [7125,]  150  154  154 #>  [7126,]  150  154  154 #>  [7127,]  150  154  154 #>  [7128,]  150  154  154 #>  [7129,]  150  154  154 #>  [7130,]  149  153  153 #>  [7131,]  150  154  154 #>  [7132,]  150  154  154 #>  [7133,]  150  154  154 #>  [7134,]  150  154  154 #>  [7135,]  150  154  154 #>  [7136,]  150  154  154 #>  [7137,]  150  154  154 #>  [7138,]  150  154  154 #>  [7139,]  149  153  153 #>  [7140,]  150  154  154 #>  [7141,]  150  154  154 #>  [7142,]  150  154  154 #>  [7143,]  150  154  154 #>  [7144,]  150  154  154 #>  [7145,]  150  154  154 #>  [7146,]  150  154  154 #>  [7147,]  150  154  154 #>  [7148,]  150  154  154 #>  [7149,]  149  153  153 #>  [7150,]  150  154  154 #>  [7151,]  150  154  154 #>  [7152,]  150  154  154 #>  [7153,]  150  154  154 #>  [7154,]  149  153  153 #>  [7155,]  150  154  154 #>  [7156,]  150  154  154 #>  [7157,]  150  154  154 #>  [7158,]  150  154  154 #>  [7159,]  150  154  154 #>  [7160,]  150  154  154 #>  [7161,]  150  154  154 #>  [7162,]  149  153  153 #>  [7163,]  150  154  154 #>  [7164,]  150  154  154 #>  [7165,]  150  154  154 #>  [7166,]  150  154  154 #>  [7167,]  150  154  154 #>  [7168,]  150  154  154 #>  [7169,]  150  154  154 #>  [7170,]  149  153  153 #>  [7171,]  150  154  154 #>  [7172,]  150  154  154 #>  [7173,]  150  154  154 #>  [7174,]  150  154  154 #>  [7175,]  150  154  154 #>  [7176,]  150  154  154 #>  [7177,]  150  154  154 #>  [7178,]  150  154  154 #>  [7179,]  150  154  154 #>  [7180,]  149  153  153 #>  [7181,]  150  154  154 #>  [7182,]  150  154  154 #>  [7183,]  149  153  153 #>  [7184,]  150  154  154 #>  [7185,]  150  154  154 #>  [7186,]  150  154  154 #>  [7187,]  150  154  154 #>  [7188,]  150  154  154 #>  [7189,]  150  154  154 #>  [7190,]  150  154  154 #>  [7191,]  150  154  154 #>  [7192,]  150  154  154 #>  [7193,]  150  154  154 #>  [7194,]  150  154  154 #>  [7195,]  149  153  153 #>  [7196,]  150  154  154 #>  [7197,]  150  154  154 #>  [7198,]  149  153  153 #>  [7199,]  150  154  154 #>  [7200,]  150  154  154 #>  [7201,]  151  156  156 #>  [7202,]  152  157  155 #>  [7203,]  152  157  155 #>  [7204,]  151  155  156 #>  [7205,]  151  156  156 #>  [7206,]  152  157  155 #>  [7207,]  152  157  155 #>  [7208,]  151  155  156 #>  [7209,]  151  156  156 #>  [7210,]  151  156  156 #>  [7211,]  151  156  156 #>  [7212,]  152  158  155 #>  [7213,]  151  156  156 #>  [7214,]  151  156  156 #>  [7215,]  151  156  156 #>  [7216,]  151  156  156 #>  [7217,]  151  156  156 #>  [7218,]  152  157  155 #>  [7219,]  152  158  155 #>  [7220,]  152  157  155 #>  [7221,]  151  156  156 #>  [7222,]  151  156  156 #>  [7223,]  152  157  155 #>  [7224,]  151  156  156 #>  [7225,]  152  157  155 #>  [7226,]  151  156  156 #>  [7227,]  151  156  156 #>  [7228,]  152  157  155 #>  [7229,]  151  156  156 #>  [7230,]  151  156  156 #>  [7231,]  152  158  155 #>  [7232,]  152  157  155 #>  [7233,]  152  158  155 #>  [7234,]  152  157  155 #>  [7235,]  151  156  156 #>  [7236,]  151  156  156 #>  [7237,]  151  155  156 #>  [7238,]  151  156  156 #>  [7239,]  151  156  156 #>  [7240,]  152  157  155 #>  [7241,]  151  156  156 #>  [7242,]  152  158  155 #>  [7243,]  151  156  156 #>  [7244,]  151  156  156 #>  [7245,]  151  156  156 #>  [7246,]  151  155  156 #>  [7247,]  151  155  156 #>  [7248,]  152  158  155 #>  [7249,]  151  156  156 #>  [7250,]  151  156  156 #>  [7251,]  151  156  156 #>  [7252,]  151  155  156 #>  [7253,]  151  156  156 #>  [7254,]  151  156  156 #>  [7255,]  151  155  156 #>  [7256,]  152  157  155 #>  [7257,]  151  155  156 #>  [7258,]  151  156  156 #>  [7259,]  151  155  156 #>  [7260,]  152  157  155 #>  [7261,]  152  158  155 #>  [7262,]  151  156  156 #>  [7263,]  151  156  156 #>  [7264,]  152  157  155 #>  [7265,]  152  157  155 #>  [7266,]  151  156  156 #>  [7267,]  151  156  156 #>  [7268,]  151  155  156 #>  [7269,]  151  156  156 #>  [7270,]  152  157  155 #>  [7271,]  152  157  155 #>  [7272,]  151  156  156 #>  [7273,]  152  157  155 #>  [7274,]  151  155  156 #>  [7275,]  151  156  156 #>  [7276,]  151  156  156 #>  [7277,]  151  156  156 #>  [7278,]  152  157  155 #>  [7279,]  151  156  156 #>  [7280,]  151  155  156 #>  [7281,]  151  156  156 #>  [7282,]  151  156  156 #>  [7283,]  151  156  156 #>  [7284,]  152  157  155 #>  [7285,]  151  156  156 #>  [7286,]  151  155  156 #>  [7287,]  151  156  156 #>  [7288,]  151  156  156 #>  [7289,]  151  156  156 #>  [7290,]  151  156  156 #>  [7291,]  151  156  156 #>  [7292,]  151  155  156 #>  [7293,]  152  158  155 #>  [7294,]  151  156  156 #>  [7295,]  151  156  156 #>  [7296,]  151  155  156 #>  [7297,]  152  158  155 #>  [7298,]  152  157  155 #>  [7299,]  151  156  156 #>  [7300,]  152  157  155 #>  [7301,]  154  160  159 #>  [7302,]  154  160  158 #>  [7303,]  153  159  157 #>  [7304,]  153  159  157 #>  [7305,]  154  160  159 #>  [7306,]  154  160  158 #>  [7307,]  153  159  157 #>  [7308,]  153  159  157 #>  [7309,]  154  160  159 #>  [7310,]  153  159  157 #>  [7311,]  154  160  159 #>  [7312,]  153  159  157 #>  [7313,]  154  160  159 #>  [7314,]  153  159  157 #>  [7315,]  154  160  158 #>  [7316,]  153  159  157 #>  [7317,]  154  160  159 #>  [7318,]  154  160  159 #>  [7319,]  154  160  159 #>  [7320,]  154  160  159 #>  [7321,]  154  160  159 #>  [7322,]  154  160  159 #>  [7323,]  153  159  157 #>  [7324,]  154  160  159 #>  [7325,]  153  159  157 #>  [7326,]  153  159  157 #>  [7327,]  154  160  159 #>  [7328,]  154  160  159 #>  [7329,]  154  160  159 #>  [7330,]  154  160  158 #>  [7331,]  153  159  157 #>  [7332,]  153  159  157 #>  [7333,]  154  160  159 #>  [7334,]  154  160  158 #>  [7335,]  153  159  157 #>  [7336,]  154  160  159 #>  [7337,]  153  159  157 #>  [7338,]  154  160  159 #>  [7339,]  154  160  159 #>  [7340,]  153  159  157 #>  [7341,]  154  160  159 #>  [7342,]  154  160  159 #>  [7343,]  154  160  159 #>  [7344,]  153  159  157 #>  [7345,]  153  159  157 #>  [7346,]  153  159  157 #>  [7347,]  153  159  157 #>  [7348,]  154  160  158 #>  [7349,]  154  160  158 #>  [7350,]  154  160  159 #>  [7351,]  154  160  159 #>  [7352,]  153  159  157 #>  [7353,]  154  160  159 #>  [7354,]  154  160  159 #>  [7355,]  153  159  157 #>  [7356,]  154  160  159 #>  [7357,]  153  159  157 #>  [7358,]  154  160  159 #>  [7359,]  153  159  157 #>  [7360,]  153  159  157 #>  [7361,]  154  160  159 #>  [7362,]  154  160  159 #>  [7363,]  154  160  159 #>  [7364,]  154  160  159 #>  [7365,]  154  160  159 #>  [7366,]  154  160  159 #>  [7367,]  153  159  157 #>  [7368,]  153  159  157 #>  [7369,]  154  160  158 #>  [7370,]  154  160  159 #>  [7371,]  154  160  158 #>  [7372,]  153  159  157 #>  [7373,]  154  160  159 #>  [7374,]  153  159  157 #>  [7375,]  153  159  157 #>  [7376,]  153  159  157 #>  [7377,]  154  160  159 #>  [7378,]  153  159  157 #>  [7379,]  154  160  159 #>  [7380,]  153  159  157 #>  [7381,]  154  160  159 #>  [7382,]  154  160  159 #>  [7383,]  154  160  159 #>  [7384,]  154  160  159 #>  [7385,]  154  160  159 #>  [7386,]  153  159  157 #>  [7387,]  154  160  159 #>  [7388,]  153  159  157 #>  [7389,]  154  160  159 #>  [7390,]  154  160  159 #>  [7391,]  154  160  159 #>  [7392,]  153  159  157 #>  [7393,]  154  160  159 #>  [7394,]  154  160  159 #>  [7395,]  153  159  157 #>  [7396,]  153  159  157 #>  [7397,]  153  159  157 #>  [7398,]  153  159  157 #>  [7399,]  154  160  159 #>  [7400,]  154  160  159 #>  [7401,]  156  162  162 #>  [7402,]  155  161  160 #>  [7403,]  155  161  160 #>  [7404,]  155  161  160 #>  [7405,]  155  161  160 #>  [7406,]  155  161  160 #>  [7407,]  155  161  160 #>  [7408,]  155  161  160 #>  [7409,]  156  162  162 #>  [7410,]  155  161  160 #>  [7411,]  155  161  160 #>  [7412,]  155  161  160 #>  [7413,]  156  162  161 #>  [7414,]  155  161  160 #>  [7415,]  155  161  160 #>  [7416,]  155  161  160 #>  [7417,]  156  162  162 #>  [7418,]  156  162  162 #>  [7419,]  155  161  160 #>  [7420,]  155  161  160 #>  [7421,]  155  161  160 #>  [7422,]  155  161  160 #>  [7423,]  155  161  160 #>  [7424,]  155  161  160 #>  [7425,]  155  161  160 #>  [7426,]  155  161  160 #>  [7427,]  156  162  162 #>  [7428,]  155  161  160 #>  [7429,]  155  161  160 #>  [7430,]  155  161  160 #>  [7431,]  155  161  160 #>  [7432,]  155  161  160 #>  [7433,]  155  161  160 #>  [7434,]  155  161  160 #>  [7435,]  155  161  160 #>  [7436,]  156  162  162 #>  [7437,]  155  161  160 #>  [7438,]  155  161  160 #>  [7439,]  155  161  160 #>  [7440,]  155  161  160 #>  [7441,]  155  161  160 #>  [7442,]  156  162  162 #>  [7443,]  155  161  160 #>  [7444,]  155  161  160 #>  [7445,]  155  161  160 #>  [7446,]  155  161  160 #>  [7447,]  155  161  160 #>  [7448,]  155  161  160 #>  [7449,]  155  161  160 #>  [7450,]  155  161  160 #>  [7451,]  156  162  162 #>  [7452,]  155  161  160 #>  [7453,]  156  162  161 #>  [7454,]  155  161  160 #>  [7455,]  155  161  160 #>  [7456,]  156  162  161 #>  [7457,]  155  161  160 #>  [7458,]  155  161  160 #>  [7459,]  155  161  160 #>  [7460,]  155  161  160 #>  [7461,]  155  161  160 #>  [7462,]  155  161  160 #>  [7463,]  155  161  160 #>  [7464,]  155  161  160 #>  [7465,]  156  162  161 #>  [7466,]  156  162  161 #>  [7467,]  155  161  160 #>  [7468,]  155  161  160 #>  [7469,]  155  161  160 #>  [7470,]  155  161  160 #>  [7471,]  155  161  160 #>  [7472,]  155  161  160 #>  [7473,]  155  161  160 #>  [7474,]  155  161  160 #>  [7475,]  155  161  160 #>  [7476,]  155  161  160 #>  [7477,]  155  161  160 #>  [7478,]  155  161  160 #>  [7479,]  156  162  162 #>  [7480,]  155  161  160 #>  [7481,]  155  161  160 #>  [7482,]  156  162  162 #>  [7483,]  156  162  162 #>  [7484,]  156  162  161 #>  [7485,]  155  161  160 #>  [7486,]  155  161  160 #>  [7487,]  156  162  162 #>  [7488,]  155  161  160 #>  [7489,]  155  161  160 #>  [7490,]  155  161  160 #>  [7491,]  156  162  162 #>  [7492,]  155  161  160 #>  [7493,]  156  162  162 #>  [7494,]  156  162  162 #>  [7495,]  155  161  160 #>  [7496,]  155  161  160 #>  [7497,]  155  161  160 #>  [7498,]  155  161  160 #>  [7499,]  155  161  160 #>  [7500,]  155  161  160 #>  [7501,]  157  163  163 #>  [7502,]  157  163  163 #>  [7503,]  157  163  163 #>  [7504,]  157  163  163 #>  [7505,]  158  164  164 #>  [7506,]  157  163  163 #>  [7507,]  157  163  163 #>  [7508,]  157  163  163 #>  [7509,]  157  163  163 #>  [7510,]  157  163  163 #>  [7511,]  157  163  163 #>  [7512,]  157  163  163 #>  [7513,]  157  163  163 #>  [7514,]  157  163  163 #>  [7515,]  157  163  163 #>  [7516,]  157  163  163 #>  [7517,]  157  163  163 #>  [7518,]  158  164  164 #>  [7519,]  157  163  163 #>  [7520,]  157  163  163 #>  [7521,]  157  163  163 #>  [7522,]  157  163  163 #>  [7523,]  157  163  163 #>  [7524,]  157  163  163 #>  [7525,]  157  163  163 #>  [7526,]  157  163  163 #>  [7527,]  157  163  163 #>  [7528,]  157  163  163 #>  [7529,]  157  163  163 #>  [7530,]  157  163  163 #>  [7531,]  157  163  163 #>  [7532,]  158  164  164 #>  [7533,]  157  163  163 #>  [7534,]  157  163  163 #>  [7535,]  157  163  163 #>  [7536,]  157  163  163 #>  [7537,]  157  163  163 #>  [7538,]  157  163  163 #>  [7539,]  157  163  163 #>  [7540,]  157  163  163 #>  [7541,]  157  163  163 #>  [7542,]  157  163  163 #>  [7543,]  157  163  163 #>  [7544,]  157  163  163 #>  [7545,]  157  163  163 #>  [7546,]  157  163  163 #>  [7547,]  157  163  163 #>  [7548,]  157  163  163 #>  [7549,]  157  163  163 #>  [7550,]  157  163  163 #>  [7551,]  157  163  163 #>  [7552,]  157  163  163 #>  [7553,]  157  163  163 #>  [7554,]  157  163  163 #>  [7555,]  157  163  163 #>  [7556,]  157  163  163 #>  [7557,]  157  163  163 #>  [7558,]  157  163  163 #>  [7559,]  157  163  163 #>  [7560,]  157  163  163 #>  [7561,]  157  163  163 #>  [7562,]  157  163  163 #>  [7563,]  157  163  163 #>  [7564,]  157  163  163 #>  [7565,]  157  163  163 #>  [7566,]  157  163  163 #>  [7567,]  157  163  163 #>  [7568,]  157  163  163 #>  [7569,]  157  163  163 #>  [7570,]  157  163  163 #>  [7571,]  158  164  164 #>  [7572,]  157  163  163 #>  [7573,]  157  163  163 #>  [7574,]  157  163  163 #>  [7575,]  158  164  164 #>  [7576,]  157  163  163 #>  [7577,]  157  163  163 #>  [7578,]  157  163  163 #>  [7579,]  157  163  163 #>  [7580,]  157  163  163 #>  [7581,]  157  163  163 #>  [7582,]  157  163  163 #>  [7583,]  157  163  163 #>  [7584,]  157  163  163 #>  [7585,]  157  163  163 #>  [7586,]  157  163  163 #>  [7587,]  157  163  163 #>  [7588,]  157  163  163 #>  [7589,]  157  163  163 #>  [7590,]  157  163  163 #>  [7591,]  158  164  164 #>  [7592,]  157  163  163 #>  [7593,]  157  163  163 #>  [7594,]  157  163  163 #>  [7595,]  158  164  164 #>  [7596,]  157  163  163 #>  [7597,]  157  163  163 #>  [7598,]  157  163  163 #>  [7599,]  157  163  163 #>  [7600,]  158  164  164 #>  [7601,]  159  166  166 #>  [7602,]  159  166  166 #>  [7603,]  159  165  165 #>  [7604,]  159  166  166 #>  [7605,]  160  166  166 #>  [7606,]  159  166  166 #>  [7607,]  159  166  166 #>  [7608,]  159  166  166 #>  [7609,]  159  166  166 #>  [7610,]  159  166  166 #>  [7611,]  159  165  165 #>  [7612,]  159  165  165 #>  [7613,]  159  166  166 #>  [7614,]  159  165  165 #>  [7615,]  159  166  166 #>  [7616,]  159  166  166 #>  [7617,]  159  166  166 #>  [7618,]  160  166  166 #>  [7619,]  159  166  166 #>  [7620,]  159  165  165 #>  [7621,]  159  166  166 #>  [7622,]  159  165  165 #>  [7623,]  159  166  166 #>  [7624,]  159  166  166 #>  [7625,]  159  166  166 #>  [7626,]  159  165  165 #>  [7627,]  159  166  166 #>  [7628,]  159  166  166 #>  [7629,]  159  165  165 #>  [7630,]  159  166  166 #>  [7631,]  159  166  166 #>  [7632,]  160  165  165 #>  [7633,]  159  166  166 #>  [7634,]  159  166  166 #>  [7635,]  159  166  166 #>  [7636,]  159  165  165 #>  [7637,]  159  166  166 #>  [7638,]  159  166  166 #>  [7639,]  159  166  166 #>  [7640,]  159  165  165 #>  [7641,]  159  165  165 #>  [7642,]  159  165  165 #>  [7643,]  159  166  166 #>  [7644,]  159  166  166 #>  [7645,]  159  166  166 #>  [7646,]  159  166  166 #>  [7647,]  159  166  166 #>  [7648,]  159  165  165 #>  [7649,]  159  166  166 #>  [7650,]  159  166  166 #>  [7651,]  159  165  165 #>  [7652,]  159  166  166 #>  [7653,]  159  166  166 #>  [7654,]  159  165  165 #>  [7655,]  159  166  166 #>  [7656,]  159  166  166 #>  [7657,]  159  166  166 #>  [7658,]  159  166  166 #>  [7659,]  159  166  166 #>  [7660,]  159  165  165 #>  [7661,]  159  166  166 #>  [7662,]  159  165  165 #>  [7663,]  159  166  166 #>  [7664,]  159  166  166 #>  [7665,]  159  166  166 #>  [7666,]  159  165  165 #>  [7667,]  159  166  166 #>  [7668,]  159  165  165 #>  [7669,]  159  165  165 #>  [7670,]  159  166  166 #>  [7671,]  160  166  166 #>  [7672,]  159  166  166 #>  [7673,]  159  166  166 #>  [7674,]  159  166  166 #>  [7675,]  160  166  166 #>  [7676,]  159  166  166 #>  [7677,]  159  166  166 #>  [7678,]  159  166  166 #>  [7679,]  159  166  166 #>  [7680,]  159  165  165 #>  [7681,]  159  165  165 #>  [7682,]  159  166  166 #>  [7683,]  159  165  165 #>  [7684,]  159  166  166 #>  [7685,]  159  166  166 #>  [7686,]  159  166  166 #>  [7687,]  159  166  166 #>  [7688,]  159  166  166 #>  [7689,]  159  165  165 #>  [7690,]  159  166  166 #>  [7691,]  160  165  165 #>  [7692,]  159  166  166 #>  [7693,]  159  166  166 #>  [7694,]  159  166  166 #>  [7695,]  160  166  166 #>  [7696,]  159  166  166 #>  [7697,]  159  166  166 #>  [7698,]  159  166  166 #>  [7699,]  159  166  166 #>  [7700,]  160  166  166 #>  [7701,]  161  167  167 #>  [7702,]  161  167  167 #>  [7703,]  161  167  167 #>  [7704,]  161  167  167 #>  [7705,]  161  167  167 #>  [7706,]  162  168  168 #>  [7707,]  161  167  167 #>  [7708,]  162  168  168 #>  [7709,]  162  168  168 #>  [7710,]  161  167  167 #>  [7711,]  161  167  167 #>  [7712,]  162  168  168 #>  [7713,]  161  167  167 #>  [7714,]  161  167  167 #>  [7715,]  162  168  168 #>  [7716,]  161  167  167 #>  [7717,]  161  167  167 #>  [7718,]  161  167  167 #>  [7719,]  161  167  167 #>  [7720,]  161  167  167 #>  [7721,]  161  167  167 #>  [7722,]  161  167  167 #>  [7723,]  161  167  167 #>  [7724,]  161  167  167 #>  [7725,]  161  167  167 #>  [7726,]  162  168  168 #>  [7727,]  161  167  167 #>  [7728,]  161  167  167 #>  [7729,]  161  167  167 #>  [7730,]  161  167  167 #>  [7731,]  161  167  167 #>  [7732,]  161  167  167 #>  [7733,]  162  168  168 #>  [7734,]  161  167  167 #>  [7735,]  161  167  167 #>  [7736,]  161  167  167 #>  [7737,]  161  167  167 #>  [7738,]  161  167  167 #>  [7739,]  161  167  167 #>  [7740,]  161  167  167 #>  [7741,]  161  167  167 #>  [7742,]  161  167  167 #>  [7743,]  162  168  168 #>  [7744,]  161  167  167 #>  [7745,]  162  168  168 #>  [7746,]  162  168  168 #>  [7747,]  161  167  167 #>  [7748,]  161  167  167 #>  [7749,]  161  167  167 #>  [7750,]  161  167  167 #>  [7751,]  162  168  168 #>  [7752,]  161  167  167 #>  [7753,]  161  167  167 #>  [7754,]  161  167  167 #>  [7755,]  161  167  167 #>  [7756,]  162  168  168 #>  [7757,]  162  168  168 #>  [7758,]  161  167  167 #>  [7759,]  161  167  167 #>  [7760,]  161  167  167 #>  [7761,]  162  168  168 #>  [7762,]  161  167  167 #>  [7763,]  161  167  167 #>  [7764,]  162  168  168 #>  [7765,]  161  167  167 #>  [7766,]  162  168  168 #>  [7767,]  161  167  167 #>  [7768,]  162  168  168 #>  [7769,]  161  167  167 #>  [7770,]  161  167  167 #>  [7771,]  161  167  167 #>  [7772,]  161  167  167 #>  [7773,]  161  167  167 #>  [7774,]  161  167  167 #>  [7775,]  161  167  167 #>  [7776,]  162  168  168 #>  [7777,]  161  167  167 #>  [7778,]  161  167  167 #>  [7779,]  161  167  167 #>  [7780,]  161  167  167 #>  [7781,]  161  167  167 #>  [7782,]  161  167  167 #>  [7783,]  161  167  167 #>  [7784,]  161  167  167 #>  [7785,]  161  167  167 #>  [7786,]  161  167  167 #>  [7787,]  161  167  167 #>  [7788,]  161  167  167 #>  [7789,]  161  167  167 #>  [7790,]  161  167  167 #>  [7791,]  161  167  167 #>  [7792,]  161  167  167 #>  [7793,]  161  167  167 #>  [7794,]  162  168  168 #>  [7795,]  161  167  167 #>  [7796,]  161  167  167 #>  [7797,]  161  167  167 #>  [7798,]  161  167  167 #>  [7799,]  161  167  167 #>  [7800,]  161  167  167 #>  [7801,]  164  170  169 #>  [7802,]  164  170  169 #>  [7803,]  164  170  169 #>  [7804,]  163  169  171 #>  [7805,]  164  170  169 #>  [7806,]  164  170  169 #>  [7807,]  164  170  169 #>  [7808,]  163  169  170 #>  [7809,]  163  169  171 #>  [7810,]  164  170  169 #>  [7811,]  164  170  169 #>  [7812,]  164  170  169 #>  [7813,]  164  170  169 #>  [7814,]  164  170  169 #>  [7815,]  164  170  169 #>  [7816,]  164  170  169 #>  [7817,]  163  169  170 #>  [7818,]  164  170  169 #>  [7819,]  164  170  169 #>  [7820,]  164  170  169 #>  [7821,]  164  170  169 #>  [7822,]  164  170  169 #>  [7823,]  164  170  169 #>  [7824,]  164  170  169 #>  [7825,]  164  170  169 #>  [7826,]  164  170  169 #>  [7827,]  163  169  171 #>  [7828,]  164  170  169 #>  [7829,]  164  170  169 #>  [7830,]  164  170  169 #>  [7831,]  164  170  169 #>  [7832,]  164  170  169 #>  [7833,]  164  170  169 #>  [7834,]  164  170  169 #>  [7835,]  164  170  169 #>  [7836,]  164  170  169 #>  [7837,]  164  170  169 #>  [7838,]  164  170  169 #>  [7839,]  164  170  169 #>  [7840,]  164  170  169 #>  [7841,]  164  170  169 #>  [7842,]  164  170  169 #>  [7843,]  164  170  169 #>  [7844,]  163  169  170 #>  [7845,]  164  170  169 #>  [7846,]  164  170  169 #>  [7847,]  164  170  169 #>  [7848,]  164  170  169 #>  [7849,]  164  170  169 #>  [7850,]  164  170  169 #>  [7851,]  164  170  169 #>  [7852,]  163  169  171 #>  [7853,]  164  170  169 #>  [7854,]  164  170  169 #>  [7855,]  164  170  169 #>  [7856,]  164  170  169 #>  [7857,]  164  170  169 #>  [7858,]  164  170  169 #>  [7859,]  164  170  169 #>  [7860,]  164  170  169 #>  [7861,]  164  170  169 #>  [7862,]  164  170  169 #>  [7863,]  164  170  169 #>  [7864,]  164  170  169 #>  [7865,]  164  170  169 #>  [7866,]  163  169  170 #>  [7867,]  164  170  169 #>  [7868,]  164  170  169 #>  [7869,]  164  170  169 #>  [7870,]  164  170  169 #>  [7871,]  164  170  169 #>  [7872,]  164  170  169 #>  [7873,]  164  170  169 #>  [7874,]  164  170  169 #>  [7875,]  164  170  169 #>  [7876,]  164  170  169 #>  [7877,]  164  170  169 #>  [7878,]  164  170  169 #>  [7879,]  164  170  169 #>  [7880,]  164  170  169 #>  [7881,]  163  169  170 #>  [7882,]  163  169  171 #>  [7883,]  164  170  169 #>  [7884,]  164  170  169 #>  [7885,]  164  170  169 #>  [7886,]  164  170  169 #>  [7887,]  164  170  169 #>  [7888,]  164  170  169 #>  [7889,]  164  170  169 #>  [7890,]  163  169  170 #>  [7891,]  164  170  169 #>  [7892,]  163  169  171 #>  [7893,]  164  170  169 #>  [7894,]  164  170  169 #>  [7895,]  163  169  171 #>  [7896,]  164  170  169 #>  [7897,]  164  170  169 #>  [7898,]  164  170  169 #>  [7899,]  163  169  171 #>  [7900,]  164  170  169 #>  [7901,]  165  171  172 #>  [7902,]  166  173  173 #>  [7903,]  165  171  172 #>  [7904,]  165  171  172 #>  [7905,]  165  171  172 #>  [7906,]  165  171  172 #>  [7907,]  165  171  172 #>  [7908,]  165  171  172 #>  [7909,]  166  172  173 #>  [7910,]  166  172  173 #>  [7911,]  165  171  172 #>  [7912,]  166  172  173 #>  [7913,]  166  173  173 #>  [7914,]  165  171  172 #>  [7915,]  165  171  172 #>  [7916,]  165  171  172 #>  [7917,]  166  173  173 #>  [7918,]  165  171  172 #>  [7919,]  165  171  172 #>  [7920,]  165  171  172 #>  [7921,]  166  173  173 #>  [7922,]  165  171  172 #>  [7923,]  165  171  172 #>  [7924,]  165  171  172 #>  [7925,]  165  171  172 #>  [7926,]  165  171  172 #>  [7927,]  165  171  172 #>  [7928,]  165  171  172 #>  [7929,]  166  173  173 #>  [7930,]  165  171  172 #>  [7931,]  165  171  172 #>  [7932,]  165  171  172 #>  [7933,]  166  173  173 #>  [7934,]  165  171  172 #>  [7935,]  165  171  172 #>  [7936,]  165  171  172 #>  [7937,]  165  171  172 #>  [7938,]  165  171  172 #>  [7939,]  165  171  172 #>  [7940,]  165  171  172 #>  [7941,]  165  171  172 #>  [7942,]  165  171  172 #>  [7943,]  165  171  172 #>  [7944,]  165  171  172 #>  [7945,]  165  171  172 #>  [7946,]  165  171  172 #>  [7947,]  165  171  172 #>  [7948,]  165  171  172 #>  [7949,]  165  171  172 #>  [7950,]  165  171  172 #>  [7951,]  165  171  172 #>  [7952,]  165  171  172 #>  [7953,]  166  172  173 #>  [7954,]  165  171  172 #>  [7955,]  165  171  172 #>  [7956,]  165  171  172 #>  [7957,]  165  171  172 #>  [7958,]  165  171  172 #>  [7959,]  165  171  172 #>  [7960,]  166  172  173 #>  [7961,]  165  171  172 #>  [7962,]  165  171  172 #>  [7963,]  166  172  173 #>  [7964,]  165  171  172 #>  [7965,]  165  171  172 #>  [7966,]  165  171  172 #>  [7967,]  165  171  172 #>  [7968,]  165  171  172 #>  [7969,]  165  171  172 #>  [7970,]  166  173  173 #>  [7971,]  165  171  172 #>  [7972,]  165  171  172 #>  [7973,]  165  171  172 #>  [7974,]  165  171  172 #>  [7975,]  165  171  172 #>  [7976,]  165  171  172 #>  [7977,]  165  171  172 #>  [7978,]  165  171  172 #>  [7979,]  165  171  172 #>  [7980,]  166  172  173 #>  [7981,]  166  173  173 #>  [7982,]  165  171  172 #>  [7983,]  165  171  172 #>  [7984,]  165  171  172 #>  [7985,]  165  171  172 #>  [7986,]  166  173  173 #>  [7987,]  165  171  172 #>  [7988,]  165  171  172 #>  [7989,]  165  171  172 #>  [7990,]  165  171  172 #>  [7991,]  165  171  172 #>  [7992,]  165  171  172 #>  [7993,]  165  171  172 #>  [7994,]  165  171  172 #>  [7995,]  165  171  172 #>  [7996,]  165  171  172 #>  [7997,]  165  171  172 #>  [7998,]  165  171  172 #>  [7999,]  165  171  172 #>  [8000,]  165  171  172 #>  [8001,]  168  175  175 #>  [8002,]  168  175  175 #>  [8003,]  167  174  174 #>  [8004,]  168  175  175 #>  [8005,]  168  175  175 #>  [8006,]  168  175  175 #>  [8007,]  168  175  175 #>  [8008,]  168  175  175 #>  [8009,]  168  175  175 #>  [8010,]  168  175  175 #>  [8011,]  168  175  175 #>  [8012,]  167  174  174 #>  [8013,]  168  175  175 #>  [8014,]  167  174  174 #>  [8015,]  168  175  175 #>  [8016,]  168  175  175 #>  [8017,]  168  175  175 #>  [8018,]  168  175  175 #>  [8019,]  168  175  175 #>  [8020,]  168  175  175 #>  [8021,]  168  175  175 #>  [8022,]  168  175  175 #>  [8023,]  168  175  175 #>  [8024,]  168  175  175 #>  [8025,]  168  175  175 #>  [8026,]  167  174  174 #>  [8027,]  168  175  175 #>  [8028,]  168  175  175 #>  [8029,]  168  175  175 #>  [8030,]  168  175  175 #>  [8031,]  168  175  175 #>  [8032,]  167  174  174 #>  [8033,]  168  175  175 #>  [8034,]  168  175  175 #>  [8035,]  168  175  175 #>  [8036,]  168  175  175 #>  [8037,]  168  175  175 #>  [8038,]  168  175  175 #>  [8039,]  168  175  175 #>  [8040,]  168  175  175 #>  [8041,]  168  175  175 #>  [8042,]  168  175  175 #>  [8043,]  168  175  175 #>  [8044,]  168  175  175 #>  [8045,]  168  175  175 #>  [8046,]  168  175  175 #>  [8047,]  168  175  175 #>  [8048,]  167  174  174 #>  [8049,]  168  175  175 #>  [8050,]  168  175  175 #>  [8051,]  167  174  174 #>  [8052,]  168  175  175 #>  [8053,]  168  175  175 #>  [8054,]  167  174  174 #>  [8055,]  168  175  175 #>  [8056,]  168  175  175 #>  [8057,]  168  175  175 #>  [8058,]  168  175  175 #>  [8059,]  168  175  175 #>  [8060,]  168  175  175 #>  [8061,]  168  175  175 #>  [8062,]  168  175  175 #>  [8063,]  168  175  175 #>  [8064,]  168  175  175 #>  [8065,]  168  175  175 #>  [8066,]  167  174  174 #>  [8067,]  168  175  175 #>  [8068,]  168  175  175 #>  [8069,]  167  174  174 #>  [8070,]  168  175  175 #>  [8071,]  168  175  175 #>  [8072,]  168  175  175 #>  [8073,]  168  175  175 #>  [8074,]  168  175  175 #>  [8075,]  168  175  175 #>  [8076,]  168  175  175 #>  [8077,]  168  175  175 #>  [8078,]  168  175  175 #>  [8079,]  168  175  175 #>  [8080,]  167  174  174 #>  [8081,]  167  174  174 #>  [8082,]  168  175  175 #>  [8083,]  168  175  175 #>  [8084,]  168  175  175 #>  [8085,]  168  175  175 #>  [8086,]  168  175  175 #>  [8087,]  168  175  175 #>  [8088,]  168  175  175 #>  [8089,]  167  174  174 #>  [8090,]  168  175  175 #>  [8091,]  168  175  175 #>  [8092,]  168  175  175 #>  [8093,]  168  175  175 #>  [8094,]  168  175  175 #>  [8095,]  168  175  175 #>  [8096,]  168  175  175 #>  [8097,]  168  175  175 #>  [8098,]  168  175  175 #>  [8099,]  168  175  175 #>  [8100,]  168  175  175 #>  [8101,]  170  176  176 #>  [8102,]  170  176  176 #>  [8103,]  169  177  177 #>  [8104,]  169  178  178 #>  [8105,]  169  178  178 #>  [8106,]  170  176  176 #>  [8107,]  169  177  177 #>  [8108,]  169  177  177 #>  [8109,]  169  178  178 #>  [8110,]  169  178  178 #>  [8111,]  170  176  176 #>  [8112,]  169  178  178 #>  [8113,]  170  176  176 #>  [8114,]  170  176  176 #>  [8115,]  170  176  176 #>  [8116,]  170  176  176 #>  [8117,]  170  176  176 #>  [8118,]  169  178  178 #>  [8119,]  170  176  176 #>  [8120,]  169  177  177 #>  [8121,]  170  176  176 #>  [8122,]  170  176  176 #>  [8123,]  169  178  178 #>  [8124,]  169  177  177 #>  [8125,]  169  177  177 #>  [8126,]  170  176  176 #>  [8127,]  170  176  176 #>  [8128,]  169  178  178 #>  [8129,]  170  176  176 #>  [8130,]  169  178  178 #>  [8131,]  169  178  178 #>  [8132,]  169  178  178 #>  [8133,]  170  176  176 #>  [8134,]  169  178  178 #>  [8135,]  170  176  176 #>  [8136,]  169  178  178 #>  [8137,]  170  176  176 #>  [8138,]  169  178  178 #>  [8139,]  169  177  177 #>  [8140,]  169  177  177 #>  [8141,]  170  176  176 #>  [8142,]  169  178  178 #>  [8143,]  169  177  177 #>  [8144,]  170  176  176 #>  [8145,]  169  177  177 #>  [8146,]  169  177  177 #>  [8147,]  170  176  176 #>  [8148,]  169  178  178 #>  [8149,]  169  177  177 #>  [8150,]  170  176  176 #>  [8151,]  169  177  177 #>  [8152,]  170  176  176 #>  [8153,]  169  177  177 #>  [8154,]  169  177  177 #>  [8155,]  170  176  176 #>  [8156,]  169  177  177 #>  [8157,]  169  178  178 #>  [8158,]  170  176  176 #>  [8159,]  170  176  176 #>  [8160,]  169  178  178 #>  [8161,]  170  176  176 #>  [8162,]  169  178  178 #>  [8163,]  169  177  177 #>  [8164,]  169  178  178 #>  [8165,]  169  177  177 #>  [8166,]  169  177  177 #>  [8167,]  169  178  178 #>  [8168,]  170  176  176 #>  [8169,]  170  176  176 #>  [8170,]  170  176  176 #>  [8171,]  170  176  176 #>  [8172,]  169  177  177 #>  [8173,]  170  176  176 #>  [8174,]  169  178  178 #>  [8175,]  170  176  176 #>  [8176,]  170  176  176 #>  [8177,]  170  176  176 #>  [8178,]  169  177  177 #>  [8179,]  170  176  176 #>  [8180,]  169  178  178 #>  [8181,]  170  176  176 #>  [8182,]  169  178  178 #>  [8183,]  170  176  176 #>  [8184,]  170  176  176 #>  [8185,]  169  178  178 #>  [8186,]  170  176  176 #>  [8187,]  170  176  176 #>  [8188,]  169  178  178 #>  [8189,]  169  177  177 #>  [8190,]  170  176  176 #>  [8191,]  169  178  178 #>  [8192,]  170  176  176 #>  [8193,]  170  176  176 #>  [8194,]  170  176  176 #>  [8195,]  169  178  178 #>  [8196,]  170  176  176 #>  [8197,]  170  176  176 #>  [8198,]  170  176  176 #>  [8199,]  170  176  176 #>  [8200,]  170  176  176 #>  [8201,]  171  179  181 #>  [8202,]  171  179  181 #>  [8203,]  171  179  180 #>  [8204,]  171  179  181 #>  [8205,]  172  180  179 #>  [8206,]  171  179  181 #>  [8207,]  171  179  181 #>  [8208,]  171  179  181 #>  [8209,]  171  179  181 #>  [8210,]  171  179  180 #>  [8211,]  171  179  180 #>  [8212,]  171  179  181 #>  [8213,]  171  179  181 #>  [8214,]  171  179  180 #>  [8215,]  171  179  181 #>  [8216,]  171  179  181 #>  [8217,]  171  179  181 #>  [8218,]  172  180  179 #>  [8219,]  171  179  181 #>  [8220,]  171  179  181 #>  [8221,]  171  179  181 #>  [8222,]  171  179  181 #>  [8223,]  171  179  181 #>  [8224,]  171  179  181 #>  [8225,]  171  179  181 #>  [8226,]  171  179  181 #>  [8227,]  171  179  181 #>  [8228,]  171  179  181 #>  [8229,]  171  179  181 #>  [8230,]  171  179  181 #>  [8231,]  171  179  180 #>  [8232,]  171  179  180 #>  [8233,]  171  179  181 #>  [8234,]  171  179  181 #>  [8235,]  171  179  181 #>  [8236,]  171  179  181 #>  [8237,]  171  179  181 #>  [8238,]  171  179  181 #>  [8239,]  171  179  181 #>  [8240,]  171  179  180 #>  [8241,]  171  179  181 #>  [8242,]  171  179  181 #>  [8243,]  171  179  181 #>  [8244,]  171  179  181 #>  [8245,]  171  179  181 #>  [8246,]  171  179  181 #>  [8247,]  171  179  181 #>  [8248,]  171  179  180 #>  [8249,]  171  179  181 #>  [8250,]  171  179  181 #>  [8251,]  171  179  181 #>  [8252,]  171  179  181 #>  [8253,]  171  179  181 #>  [8254,]  171  179  181 #>  [8255,]  171  179  181 #>  [8256,]  171  179  181 #>  [8257,]  171  179  181 #>  [8258,]  171  179  181 #>  [8259,]  171  179  181 #>  [8260,]  171  179  181 #>  [8261,]  171  179  181 #>  [8262,]  171  179  181 #>  [8263,]  171  179  181 #>  [8264,]  171  179  181 #>  [8265,]  171  179  181 #>  [8266,]  171  179  181 #>  [8267,]  171  179  181 #>  [8268,]  171  179  181 #>  [8269,]  171  179  181 #>  [8270,]  171  179  180 #>  [8271,]  172  180  179 #>  [8272,]  171  179  181 #>  [8273,]  171  179  181 #>  [8274,]  171  179  180 #>  [8275,]  172  180  179 #>  [8276,]  171  179  181 #>  [8277,]  171  179  181 #>  [8278,]  171  179  181 #>  [8279,]  171  179  181 #>  [8280,]  171  179  181 #>  [8281,]  171  179  181 #>  [8282,]  171  179  181 #>  [8283,]  171  179  181 #>  [8284,]  171  179  181 #>  [8285,]  171  179  181 #>  [8286,]  171  179  181 #>  [8287,]  171  179  181 #>  [8288,]  171  179  181 #>  [8289,]  171  179  181 #>  [8290,]  171  179  181 #>  [8291,]  171  179  181 #>  [8292,]  171  179  181 #>  [8293,]  171  179  181 #>  [8294,]  171  179  181 #>  [8295,]  171  179  181 #>  [8296,]  171  179  181 #>  [8297,]  171  179  181 #>  [8298,]  171  179  180 #>  [8299,]  171  179  181 #>  [8300,]  172  180  179 #>  [8301,]  173  182  184 #>  [8302,]  174  182  184 #>  [8303,]  173  181  182 #>  [8304,]  173  182  183 #>  [8305,]  174  182  183 #>  [8306,]  173  181  182 #>  [8307,]  174  182  184 #>  [8308,]  173  182  183 #>  [8309,]  174  182  183 #>  [8310,]  174  182  183 #>  [8311,]  173  182  185 #>  [8312,]  174  182  185 #>  [8313,]  174  182  184 #>  [8314,]  173  182  185 #>  [8315,]  173  182  185 #>  [8316,]  173  182  184 #>  [8317,]  174  182  184 #>  [8318,]  174  182  183 #>  [8319,]  173  181  182 #>  [8320,]  174  182  183 #>  [8321,]  174  182  185 #>  [8322,]  174  182  184 #>  [8323,]  174  182  183 #>  [8324,]  174  182  183 #>  [8325,]  173  182  184 #>  [8326,]  173  182  185 #>  [8327,]  174  182  185 #>  [8328,]  173  182  184 #>  [8329,]  174  182  184 #>  [8330,]  174  182  183 #>  [8331,]  174  182  183 #>  [8332,]  174  182  183 #>  [8333,]  174  182  185 #>  [8334,]  173  181  182 #>  [8335,]  173  182  184 #>  [8336,]  174  182  185 #>  [8337,]  173  181  182 #>  [8338,]  173  181  182 #>  [8339,]  173  182  183 #>  [8340,]  174  182  184 #>  [8341,]  174  182  185 #>  [8342,]  173  182  183 #>  [8343,]  173  182  183 #>  [8344,]  174  182  184 #>  [8345,]  173  181  182 #>  [8346,]  173  182  184 #>  [8347,]  173  182  184 #>  [8348,]  174  182  183 #>  [8349,]  173  181  182 #>  [8350,]  174  182  184 #>  [8351,]  173  182  183 #>  [8352,]  173  181  182 #>  [8353,]  174  182  183 #>  [8354,]  174  182  184 #>  [8355,]  173  182  184 #>  [8356,]  173  182  183 #>  [8357,]  173  182  184 #>  [8358,]  173  182  185 #>  [8359,]  173  182  184 #>  [8360,]  174  182  183 #>  [8361,]  174  182  185 #>  [8362,]  173  182  183 #>  [8363,]  174  182  184 #>  [8364,]  173  182  183 #>  [8365,]  173  182  183 #>  [8366,]  173  182  183 #>  [8367,]  173  182  183 #>  [8368,]  173  181  182 #>  [8369,]  173  182  185 #>  [8370,]  174  182  184 #>  [8371,]  173  182  184 #>  [8372,]  173  181  182 #>  [8373,]  173  182  184 #>  [8374,]  173  182  185 #>  [8375,]  174  182  185 #>  [8376,]  173  182  184 #>  [8377,]  173  182  184 #>  [8378,]  174  182  183 #>  [8379,]  173  182  184 #>  [8380,]  174  182  184 #>  [8381,]  174  182  184 #>  [8382,]  173  182  185 #>  [8383,]  174  182  184 #>  [8384,]  174  182  184 #>  [8385,]  173  182  183 #>  [8386,]  174  182  184 #>  [8387,]  174  182  184 #>  [8388,]  174  182  183 #>  [8389,]  173  182  183 #>  [8390,]  173  182  184 #>  [8391,]  173  182  183 #>  [8392,]  174  182  185 #>  [8393,]  174  182  185 #>  [8394,]  173  182  184 #>  [8395,]  174  182  183 #>  [8396,]  173  181  182 #>  [8397,]  173  182  185 #>  [8398,]  173  182  184 #>  [8399,]  173  182  185 #>  [8400,]  173  182  184 #>  [8401,]  176  183  187 #>  [8402,]  175  183  187 #>  [8403,]  175  183  186 #>  [8404,]  176  183  187 #>  [8405,]  175  183  187 #>  [8406,]  175  183  187 #>  [8407,]  176  183  186 #>  [8408,]  176  183  187 #>  [8409,]  176  183  187 #>  [8410,]  176  183  187 #>  [8411,]  175  183  187 #>  [8412,]  175  183  186 #>  [8413,]  176  183  187 #>  [8414,]  175  183  187 #>  [8415,]  176  183  187 #>  [8416,]  176  183  187 #>  [8417,]  176  183  187 #>  [8418,]  176  183  187 #>  [8419,]  175  183  187 #>  [8420,]  175  183  187 #>  [8421,]  176  183  187 #>  [8422,]  175  183  187 #>  [8423,]  176  183  187 #>  [8424,]  175  183  187 #>  [8425,]  176  183  187 #>  [8426,]  175  183  187 #>  [8427,]  176  183  187 #>  [8428,]  176  183  187 #>  [8429,]  175  183  187 #>  [8430,]  175  183  187 #>  [8431,]  175  183  186 #>  [8432,]  175  183  187 #>  [8433,]  175  183  187 #>  [8434,]  175  183  187 #>  [8435,]  175  183  187 #>  [8436,]  175  183  187 #>  [8437,]  175  183  187 #>  [8438,]  175  183  187 #>  [8439,]  176  183  187 #>  [8440,]  175  183  187 #>  [8441,]  175  183  187 #>  [8442,]  175  183  187 #>  [8443,]  176  183  187 #>  [8444,]  175  183  187 #>  [8445,]  176  183  187 #>  [8446,]  176  183  187 #>  [8447,]  176  183  187 #>  [8448,]  175  183  187 #>  [8449,]  175  183  187 #>  [8450,]  175  183  187 #>  [8451,]  175  183  187 #>  [8452,]  175  183  186 #>  [8453,]  176  183  187 #>  [8454,]  175  183  187 #>  [8455,]  175  183  187 #>  [8456,]  176  183  187 #>  [8457,]  175  183  187 #>  [8458,]  175  183  187 #>  [8459,]  175  183  186 #>  [8460,]  175  183  186 #>  [8461,]  176  183  187 #>  [8462,]  175  183  187 #>  [8463,]  175  183  187 #>  [8464,]  176  183  187 #>  [8465,]  175  183  187 #>  [8466,]  175  183  187 #>  [8467,]  175  183  187 #>  [8468,]  175  183  187 #>  [8469,]  175  183  187 #>  [8470,]  176  183  187 #>  [8471,]  176  183  187 #>  [8472,]  176  183  187 #>  [8473,]  176  183  187 #>  [8474,]  176  183  187 #>  [8475,]  176  183  187 #>  [8476,]  176  183  187 #>  [8477,]  176  183  187 #>  [8478,]  175  183  187 #>  [8479,]  175  183  187 #>  [8480,]  175  183  187 #>  [8481,]  175  183  187 #>  [8482,]  176  183  187 #>  [8483,]  175  183  187 #>  [8484,]  176  183  187 #>  [8485,]  175  183  187 #>  [8486,]  175  183  187 #>  [8487,]  176  183  187 #>  [8488,]  176  183  187 #>  [8489,]  175  183  187 #>  [8490,]  176  183  187 #>  [8491,]  175  183  187 #>  [8492,]  175  183  187 #>  [8493,]  175  183  187 #>  [8494,]  176  183  187 #>  [8495,]  176  183  187 #>  [8496,]  176  183  187 #>  [8497,]  175  183  186 #>  [8498,]  175  183  187 #>  [8499,]  175  183  187 #>  [8500,]  176  183  187 #>  [8501,]  178  186  189 #>  [8502,]  178  186  189 #>  [8503,]  177  184  188 #>  [8504,]  178  185  189 #>  [8505,]  178  186  189 #>  [8506,]  178  186  189 #>  [8507,]  177  184  188 #>  [8508,]  178  185  189 #>  [8509,]  178  185  189 #>  [8510,]  178  186  189 #>  [8511,]  178  186  189 #>  [8512,]  178  186  189 #>  [8513,]  178  186  189 #>  [8514,]  178  186  189 #>  [8515,]  178  186  189 #>  [8516,]  178  186  189 #>  [8517,]  178  185  189 #>  [8518,]  178  186  189 #>  [8519,]  178  186  189 #>  [8520,]  178  186  189 #>  [8521,]  178  186  189 #>  [8522,]  178  186  189 #>  [8523,]  178  186  189 #>  [8524,]  178  186  189 #>  [8525,]  178  186  189 #>  [8526,]  178  186  189 #>  [8527,]  178  185  189 #>  [8528,]  178  186  189 #>  [8529,]  178  186  189 #>  [8530,]  178  186  189 #>  [8531,]  178  186  189 #>  [8532,]  178  186  189 #>  [8533,]  178  186  189 #>  [8534,]  178  186  189 #>  [8535,]  178  186  189 #>  [8536,]  178  186  189 #>  [8537,]  178  186  189 #>  [8538,]  178  186  189 #>  [8539,]  178  186  189 #>  [8540,]  178  186  189 #>  [8541,]  178  186  189 #>  [8542,]  178  186  189 #>  [8543,]  178  186  189 #>  [8544,]  178  185  189 #>  [8545,]  178  186  189 #>  [8546,]  178  186  189 #>  [8547,]  178  186  189 #>  [8548,]  178  186  189 #>  [8549,]  177  184  188 #>  [8550,]  178  186  189 #>  [8551,]  178  186  189 #>  [8552,]  178  185  189 #>  [8553,]  177  184  188 #>  [8554,]  178  186  189 #>  [8555,]  178  186  189 #>  [8556,]  177  184  188 #>  [8557,]  178  186  189 #>  [8558,]  178  186  189 #>  [8559,]  178  186  189 #>  [8560,]  178  186  189 #>  [8561,]  178  186  189 #>  [8562,]  178  186  189 #>  [8563,]  178  186  189 #>  [8564,]  178  186  189 #>  [8565,]  178  186  189 #>  [8566,]  177  184  188 #>  [8567,]  178  186  189 #>  [8568,]  178  186  189 #>  [8569,]  178  186  189 #>  [8570,]  178  186  189 #>  [8571,]  178  186  189 #>  [8572,]  178  186  189 #>  [8573,]  178  186  189 #>  [8574,]  178  186  189 #>  [8575,]  178  186  189 #>  [8576,]  178  186  189 #>  [8577,]  178  186  189 #>  [8578,]  178  186  189 #>  [8579,]  178  186  189 #>  [8580,]  178  186  189 #>  [8581,]  178  185  189 #>  [8582,]  178  185  189 #>  [8583,]  178  186  189 #>  [8584,]  178  186  189 #>  [8585,]  178  186  189 #>  [8586,]  178  186  189 #>  [8587,]  178  186  189 #>  [8588,]  178  186  189 #>  [8589,]  178  186  189 #>  [8590,]  178  185  189 #>  [8591,]  178  186  189 #>  [8592,]  178  186  189 #>  [8593,]  178  186  189 #>  [8594,]  178  186  189 #>  [8595,]  178  185  189 #>  [8596,]  178  186  189 #>  [8597,]  178  186  189 #>  [8598,]  178  186  189 #>  [8599,]  178  186  189 #>  [8600,]  178  186  189 #>  [8601,]  179  187  190 #>  [8602,]  180  188  191 #>  [8603,]  179  187  190 #>  [8604,]  179  187  190 #>  [8605,]  179  187  190 #>  [8606,]  179  187  190 #>  [8607,]  179  187  190 #>  [8608,]  179  187  190 #>  [8609,]  180  188  191 #>  [8610,]  180  188  191 #>  [8611,]  179  187  190 #>  [8612,]  180  188  191 #>  [8613,]  179  187  190 #>  [8614,]  179  187  190 #>  [8615,]  179  187  190 #>  [8616,]  179  187  190 #>  [8617,]  179  187  190 #>  [8618,]  179  187  190 #>  [8619,]  179  187  190 #>  [8620,]  179  187  190 #>  [8621,]  180  188  191 #>  [8622,]  179  187  190 #>  [8623,]  179  187  190 #>  [8624,]  179  187  190 #>  [8625,]  179  187  190 #>  [8626,]  179  187  190 #>  [8627,]  179  187  190 #>  [8628,]  179  187  190 #>  [8629,]  180  188  191 #>  [8630,]  179  187  190 #>  [8631,]  179  187  190 #>  [8632,]  179  187  190 #>  [8633,]  180  188  191 #>  [8634,]  179  187  190 #>  [8635,]  179  187  190 #>  [8636,]  179  187  190 #>  [8637,]  179  187  190 #>  [8638,]  179  187  190 #>  [8639,]  179  187  190 #>  [8640,]  179  187  190 #>  [8641,]  179  187  190 #>  [8642,]  179  187  190 #>  [8643,]  179  187  190 #>  [8644,]  179  187  190 #>  [8645,]  179  187  190 #>  [8646,]  179  187  190 #>  [8647,]  179  187  190 #>  [8648,]  179  187  190 #>  [8649,]  179  187  190 #>  [8650,]  179  187  190 #>  [8651,]  179  187  190 #>  [8652,]  179  187  190 #>  [8653,]  179  187  190 #>  [8654,]  179  187  190 #>  [8655,]  179  187  190 #>  [8656,]  179  187  190 #>  [8657,]  179  187  190 #>  [8658,]  179  187  190 #>  [8659,]  179  187  190 #>  [8660,]  180  188  191 #>  [8661,]  179  187  190 #>  [8662,]  179  187  190 #>  [8663,]  179  187  190 #>  [8664,]  179  187  190 #>  [8665,]  179  187  190 #>  [8666,]  179  187  190 #>  [8667,]  179  187  190 #>  [8668,]  179  187  190 #>  [8669,]  179  187  190 #>  [8670,]  180  188  191 #>  [8671,]  179  187  190 #>  [8672,]  179  187  190 #>  [8673,]  179  187  190 #>  [8674,]  179  187  190 #>  [8675,]  179  187  190 #>  [8676,]  179  187  190 #>  [8677,]  179  187  190 #>  [8678,]  179  187  190 #>  [8679,]  179  187  190 #>  [8680,]  179  187  190 #>  [8681,]  180  188  191 #>  [8682,]  179  187  190 #>  [8683,]  179  187  190 #>  [8684,]  179  187  190 #>  [8685,]  179  187  190 #>  [8686,]  180  188  191 #>  [8687,]  179  187  190 #>  [8688,]  179  187  190 #>  [8689,]  179  187  190 #>  [8690,]  179  187  190 #>  [8691,]  179  187  190 #>  [8692,]  179  187  190 #>  [8693,]  179  187  190 #>  [8694,]  179  187  190 #>  [8695,]  179  187  190 #>  [8696,]  179  187  190 #>  [8697,]  179  187  190 #>  [8698,]  179  187  190 #>  [8699,]  179  187  190 #>  [8700,]  179  187  190 #>  [8701,]  181  190  193 #>  [8702,]  181  190  193 #>  [8703,]  181  190  193 #>  [8704,]  182  189  192 #>  [8705,]  181  190  193 #>  [8706,]  181  190  193 #>  [8707,]  181  190  193 #>  [8708,]  181  190  193 #>  [8709,]  181  190  193 #>  [8710,]  181  190  193 #>  [8711,]  181  190  193 #>  [8712,]  181  190  193 #>  [8713,]  181  190  193 #>  [8714,]  182  189  192 #>  [8715,]  181  190  193 #>  [8716,]  181  190  193 #>  [8717,]  181  190  193 #>  [8718,]  181  190  193 #>  [8719,]  181  190  193 #>  [8720,]  181  190  193 #>  [8721,]  181  190  193 #>  [8722,]  181  190  193 #>  [8723,]  181  190  193 #>  [8724,]  181  190  193 #>  [8725,]  181  190  193 #>  [8726,]  181  190  193 #>  [8727,]  181  190  193 #>  [8728,]  181  190  193 #>  [8729,]  181  190  193 #>  [8730,]  181  190  193 #>  [8731,]  181  190  193 #>  [8732,]  181  190  193 #>  [8733,]  181  190  193 #>  [8734,]  181  190  193 #>  [8735,]  181  190  193 #>  [8736,]  181  190  193 #>  [8737,]  181  190  193 #>  [8738,]  181  190  193 #>  [8739,]  181  190  193 #>  [8740,]  181  190  193 #>  [8741,]  181  190  193 #>  [8742,]  181  190  193 #>  [8743,]  181  190  193 #>  [8744,]  181  190  193 #>  [8745,]  181  190  193 #>  [8746,]  181  190  193 #>  [8747,]  181  190  193 #>  [8748,]  181  190  193 #>  [8749,]  181  190  193 #>  [8750,]  181  190  193 #>  [8751,]  181  190  193 #>  [8752,]  181  190  193 #>  [8753,]  181  190  193 #>  [8754,]  181  190  193 #>  [8755,]  181  190  193 #>  [8756,]  181  190  193 #>  [8757,]  181  190  193 #>  [8758,]  181  190  193 #>  [8759,]  181  190  193 #>  [8760,]  181  190  193 #>  [8761,]  182  189  192 #>  [8762,]  181  190  193 #>  [8763,]  181  190  193 #>  [8764,]  181  190  193 #>  [8765,]  181  190  193 #>  [8766,]  181  190  193 #>  [8767,]  181  190  193 #>  [8768,]  181  190  193 #>  [8769,]  181  190  193 #>  [8770,]  181  190  193 #>  [8771,]  181  190  193 #>  [8772,]  181  190  193 #>  [8773,]  181  190  193 #>  [8774,]  181  190  193 #>  [8775,]  181  190  193 #>  [8776,]  181  190  193 #>  [8777,]  181  190  193 #>  [8778,]  181  190  193 #>  [8779,]  181  190  193 #>  [8780,]  181  190  193 #>  [8781,]  181  190  193 #>  [8782,]  182  189  192 #>  [8783,]  181  190  193 #>  [8784,]  181  190  193 #>  [8785,]  181  190  193 #>  [8786,]  181  190  193 #>  [8787,]  181  190  193 #>  [8788,]  181  190  193 #>  [8789,]  181  190  193 #>  [8790,]  181  190  193 #>  [8791,]  181  190  193 #>  [8792,]  182  189  192 #>  [8793,]  182  189  192 #>  [8794,]  181  190  193 #>  [8795,]  181  190  193 #>  [8796,]  182  189  192 #>  [8797,]  181  190  193 #>  [8798,]  181  190  193 #>  [8799,]  181  190  193 #>  [8800,]  181  190  193 #>  [8801,]  185  192  195 #>  [8802,]  184  192  195 #>  [8803,]  185  192  195 #>  [8804,]  183  191  194 #>  [8805,]  185  192  195 #>  [8806,]  184  192  195 #>  [8807,]  185  192  195 #>  [8808,]  183  191  194 #>  [8809,]  183  191  194 #>  [8810,]  185  192  195 #>  [8811,]  184  192  195 #>  [8812,]  184  192  195 #>  [8813,]  185  192  195 #>  [8814,]  185  192  195 #>  [8815,]  184  192  195 #>  [8816,]  185  192  195 #>  [8817,]  183  191  194 #>  [8818,]  184  192  195 #>  [8819,]  184  192  195 #>  [8820,]  185  192  195 #>  [8821,]  184  192  195 #>  [8822,]  185  192  195 #>  [8823,]  184  192  195 #>  [8824,]  185  192  195 #>  [8825,]  185  192  195 #>  [8826,]  184  192  195 #>  [8827,]  183  191  194 #>  [8828,]  185  192  195 #>  [8829,]  184  192  195 #>  [8830,]  184  192  195 #>  [8831,]  184  192  195 #>  [8832,]  184  192  195 #>  [8833,]  185  192  195 #>  [8834,]  184  192  195 #>  [8835,]  184  192  195 #>  [8836,]  185  192  195 #>  [8837,]  184  192  195 #>  [8838,]  184  192  195 #>  [8839,]  185  192  195 #>  [8840,]  184  192  195 #>  [8841,]  185  192  195 #>  [8842,]  184  192  195 #>  [8843,]  184  192  195 #>  [8844,]  184  192  195 #>  [8845,]  185  192  195 #>  [8846,]  184  192  195 #>  [8847,]  184  192  195 #>  [8848,]  184  192  195 #>  [8849,]  185  192  195 #>  [8850,]  185  192  195 #>  [8851,]  184  192  195 #>  [8852,]  183  191  194 #>  [8853,]  185  192  195 #>  [8854,]  185  192  195 #>  [8855,]  185  192  195 #>  [8856,]  184  192  195 #>  [8857,]  185  192  195 #>  [8858,]  185  192  195 #>  [8859,]  185  192  195 #>  [8860,]  184  192  195 #>  [8861,]  184  192  195 #>  [8862,]  184  192  195 #>  [8863,]  184  192  195 #>  [8864,]  184  192  195 #>  [8865,]  184  192  195 #>  [8866,]  184  192  195 #>  [8867,]  185  192  195 #>  [8868,]  184  192  195 #>  [8869,]  184  192  195 #>  [8870,]  184  192  195 #>  [8871,]  185  192  195 #>  [8872,]  185  192  195 #>  [8873,]  185  192  195 #>  [8874,]  185  192  195 #>  [8875,]  184  192  195 #>  [8876,]  185  192  195 #>  [8877,]  185  192  195 #>  [8878,]  184  192  195 #>  [8879,]  184  192  195 #>  [8880,]  185  192  195 #>  [8881,]  183  191  194 #>  [8882,]  183  191  194 #>  [8883,]  184  192  195 #>  [8884,]  185  192  195 #>  [8885,]  185  192  195 #>  [8886,]  185  192  195 #>  [8887,]  185  192  195 #>  [8888,]  185  192  195 #>  [8889,]  184  192  195 #>  [8890,]  185  192  195 #>  [8891,]  185  192  195 #>  [8892,]  184  192  195 #>  [8893,]  184  192  195 #>  [8894,]  184  192  195 #>  [8895,]  183  191  194 #>  [8896,]  184  192  195 #>  [8897,]  184  192  195 #>  [8898,]  184  192  195 #>  [8899,]  185  192  195 #>  [8900,]  184  192  195 #>  [8901,]  186  193  197 #>  [8902,]  186  193  197 #>  [8903,]  186  193  197 #>  [8904,]  186  193  198 #>  [8905,]  186  193  197 #>  [8906,]  187  194  196 #>  [8907,]  186  193  197 #>  [8908,]  187  194  196 #>  [8909,]  187  194  196 #>  [8910,]  186  193  198 #>  [8911,]  186  193  198 #>  [8912,]  187  194  196 #>  [8913,]  186  193  197 #>  [8914,]  186  193  198 #>  [8915,]  187  194  196 #>  [8916,]  186  193  197 #>  [8917,]  186  193  197 #>  [8918,]  186  193  198 #>  [8919,]  186  193  198 #>  [8920,]  186  193  197 #>  [8921,]  186  193  198 #>  [8922,]  186  193  197 #>  [8923,]  186  193  197 #>  [8924,]  186  193  197 #>  [8925,]  186  193  197 #>  [8926,]  187  194  196 #>  [8927,]  186  193  198 #>  [8928,]  186  193  197 #>  [8929,]  186  193  197 #>  [8930,]  186  193  198 #>  [8931,]  186  193  198 #>  [8932,]  186  193  198 #>  [8933,]  186  193  198 #>  [8934,]  186  193  198 #>  [8935,]  186  193  197 #>  [8936,]  186  193  198 #>  [8937,]  186  193  197 #>  [8938,]  186  193  198 #>  [8939,]  186  193  197 #>  [8940,]  186  193  197 #>  [8941,]  186  193  198 #>  [8942,]  186  193  198 #>  [8943,]  187  194  196 #>  [8944,]  186  193  197 #>  [8945,]  186  193  197 #>  [8946,]  187  194  196 #>  [8947,]  186  193  197 #>  [8948,]  186  193  198 #>  [8949,]  186  193  197 #>  [8950,]  186  193  197 #>  [8951,]  187  194  196 #>  [8952,]  186  193  198 #>  [8953,]  186  193  197 #>  [8954,]  186  193  197 #>  [8955,]  186  193  197 #>  [8956,]  187  194  196 #>  [8957,]  186  193  197 #>  [8958,]  186  193  198 #>  [8959,]  186  193  197 #>  [8960,]  186  193  198 #>  [8961,]  187  194  196 #>  [8962,]  186  193  198 #>  [8963,]  186  193  197 #>  [8964,]  187  194  196 #>  [8965,]  186  193  197 #>  [8966,]  187  194  196 #>  [8967,]  186  193  198 #>  [8968,]  186  193  198 #>  [8969,]  186  193  198 #>  [8970,]  186  193  197 #>  [8971,]  186  193  197 #>  [8972,]  186  193  197 #>  [8973,]  186  193  198 #>  [8974,]  186  193  198 #>  [8975,]  186  193  198 #>  [8976,]  187  194  196 #>  [8977,]  186  193  197 #>  [8978,]  186  193  197 #>  [8979,]  186  193  197 #>  [8980,]  186  193  198 #>  [8981,]  186  193  197 #>  [8982,]  186  193  198 #>  [8983,]  186  193  197 #>  [8984,]  186  193  197 #>  [8985,]  186  193  198 #>  [8986,]  186  193  197 #>  [8987,]  186  193  197 #>  [8988,]  186  193  197 #>  [8989,]  186  193  197 #>  [8990,]  186  193  197 #>  [8991,]  186  193  197 #>  [8992,]  186  193  198 #>  [8993,]  186  193  198 #>  [8994,]  187  194  196 #>  [8995,]  186  193  197 #>  [8996,]  186  193  198 #>  [8997,]  186  193  198 #>  [8998,]  186  193  197 #>  [8999,]  186  193  198 #>  [9000,]  186  193  197 #>  [9001,]  188  195  199 #>  [9002,]  188  195  199 #>  [9003,]  188  195  199 #>  [9004,]  189  196  199 #>  [9005,]  188  195  199 #>  [9006,]  188  195  199 #>  [9007,]  188  195  199 #>  [9008,]  188  195  199 #>  [9009,]  188  195  199 #>  [9010,]  188  195  199 #>  [9011,]  188  195  199 #>  [9012,]  188  195  199 #>  [9013,]  188  195  199 #>  [9014,]  189  196  199 #>  [9015,]  188  195  199 #>  [9016,]  188  195  199 #>  [9017,]  188  195  199 #>  [9018,]  188  195  199 #>  [9019,]  188  195  199 #>  [9020,]  188  195  199 #>  [9021,]  188  195  199 #>  [9022,]  188  195  199 #>  [9023,]  188  195  199 #>  [9024,]  188  195  199 #>  [9025,]  188  195  199 #>  [9026,]  188  195  199 #>  [9027,]  189  196  199 #>  [9028,]  188  195  199 #>  [9029,]  188  195  199 #>  [9030,]  188  195  199 #>  [9031,]  188  195  199 #>  [9032,]  188  195  199 #>  [9033,]  188  195  199 #>  [9034,]  188  195  199 #>  [9035,]  188  195  199 #>  [9036,]  188  195  199 #>  [9037,]  188  195  199 #>  [9038,]  188  195  199 #>  [9039,]  188  195  199 #>  [9040,]  188  195  199 #>  [9041,]  188  195  199 #>  [9042,]  188  195  199 #>  [9043,]  188  195  199 #>  [9044,]  188  195  199 #>  [9045,]  188  195  199 #>  [9046,]  188  195  199 #>  [9047,]  188  195  199 #>  [9048,]  188  195  199 #>  [9049,]  188  195  199 #>  [9050,]  188  195  199 #>  [9051,]  188  195  199 #>  [9052,]  188  195  199 #>  [9053,]  188  195  199 #>  [9054,]  188  195  199 #>  [9055,]  188  195  199 #>  [9056,]  188  195  199 #>  [9057,]  188  195  199 #>  [9058,]  188  195  199 #>  [9059,]  188  195  199 #>  [9060,]  188  195  199 #>  [9061,]  189  196  199 #>  [9062,]  188  195  199 #>  [9063,]  188  195  199 #>  [9064,]  188  195  199 #>  [9065,]  188  195  199 #>  [9066,]  188  195  199 #>  [9067,]  188  195  199 #>  [9068,]  188  195  199 #>  [9069,]  188  195  199 #>  [9070,]  188  195  199 #>  [9071,]  188  195  199 #>  [9072,]  188  195  199 #>  [9073,]  188  195  199 #>  [9074,]  188  195  199 #>  [9075,]  188  195  199 #>  [9076,]  188  195  199 #>  [9077,]  188  195  199 #>  [9078,]  188  195  199 #>  [9079,]  188  195  199 #>  [9080,]  188  195  199 #>  [9081,]  188  195  199 #>  [9082,]  189  196  199 #>  [9083,]  188  195  199 #>  [9084,]  188  195  199 #>  [9085,]  188  195  199 #>  [9086,]  188  195  199 #>  [9087,]  188  195  199 #>  [9088,]  188  195  199 #>  [9089,]  188  195  199 #>  [9090,]  188  195  199 #>  [9091,]  188  195  199 #>  [9092,]  189  196  199 #>  [9093,]  189  196  199 #>  [9094,]  188  195  199 #>  [9095,]  188  195  199 #>  [9096,]  189  196  199 #>  [9097,]  189  196  199 #>  [9098,]  188  195  199 #>  [9099,]  188  195  199 #>  [9100,]  188  195  199 #>  [9101,]  191  198  200 #>  [9102,]  191  198  200 #>  [9103,]  190  197  200 #>  [9104,]  191  198  200 #>  [9105,]  190  197  200 #>  [9106,]  190  197  200 #>  [9107,]  191  198  201 #>  [9108,]  191  198  200 #>  [9109,]  191  198  200 #>  [9110,]  191  198  200 #>  [9111,]  190  197  200 #>  [9112,]  190  197  200 #>  [9113,]  191  198  200 #>  [9114,]  190  197  200 #>  [9115,]  191  198  200 #>  [9116,]  191  198  200 #>  [9117,]  191  198  200 #>  [9118,]  191  198  200 #>  [9119,]  190  197  200 #>  [9120,]  190  197  200 #>  [9121,]  191  198  201 #>  [9122,]  190  197  200 #>  [9123,]  191  198  201 #>  [9124,]  190  197  200 #>  [9125,]  191  198  200 #>  [9126,]  190  197  200 #>  [9127,]  191  198  200 #>  [9128,]  191  198  200 #>  [9129,]  190  197  200 #>  [9130,]  190  197  201 #>  [9131,]  191  198  200 #>  [9132,]  190  197  200 #>  [9133,]  190  197  200 #>  [9134,]  190  197  200 #>  [9135,]  190  197  200 #>  [9136,]  190  197  200 #>  [9137,]  191  198  200 #>  [9138,]  191  198  200 #>  [9139,]  191  198  201 #>  [9140,]  190  197  200 #>  [9141,]  190  197  200 #>  [9142,]  190  197  200 #>  [9143,]  191  198  200 #>  [9144,]  191  198  200 #>  [9145,]  191  198  200 #>  [9146,]  191  198  200 #>  [9147,]  191  198  200 #>  [9148,]  190  197  200 #>  [9149,]  191  198  201 #>  [9150,]  191  198  200 #>  [9151,]  190  197  200 #>  [9152,]  190  197  200 #>  [9153,]  191  198  200 #>  [9154,]  190  197  201 #>  [9155,]  190  197  200 #>  [9156,]  191  198  200 #>  [9157,]  190  197  200 #>  [9158,]  190  197  200 #>  [9159,]  191  198  200 #>  [9160,]  190  197  200 #>  [9161,]  191  198  200 #>  [9162,]  190  197  201 #>  [9163,]  190  197  200 #>  [9164,]  191  198  200 #>  [9165,]  191  198  200 #>  [9166,]  190  197  200 #>  [9167,]  190  197  200 #>  [9168,]  190  197  200 #>  [9169,]  190  197  200 #>  [9170,]  191  198  201 #>  [9171,]  191  198  200 #>  [9172,]  191  198  200 #>  [9173,]  191  198  200 #>  [9174,]  191  198  200 #>  [9175,]  191  198  200 #>  [9176,]  191  198  200 #>  [9177,]  191  198  200 #>  [9178,]  190  197  200 #>  [9179,]  191  198  200 #>  [9180,]  190  197  201 #>  [9181,]  190  197  200 #>  [9182,]  191  198  200 #>  [9183,]  190  197  201 #>  [9184,]  191  198  200 #>  [9185,]  191  198  200 #>  [9186,]  191  198  200 #>  [9187,]  191  198  200 #>  [9188,]  191  198  200 #>  [9189,]  190  197  200 #>  [9190,]  191  198  200 #>  [9191,]  190  197  200 #>  [9192,]  191  198  200 #>  [9193,]  190  197  200 #>  [9194,]  191  198  200 #>  [9195,]  191  198  201 #>  [9196,]  191  198  200 #>  [9197,]  191  198  200 #>  [9198,]  190  197  201 #>  [9199,]  190  197  200 #>  [9200,]  191  198  200 #>  [9201,]  192  199  202 #>  [9202,]  192  199  202 #>  [9203,]  192  199  202 #>  [9204,]  193  200  203 #>  [9205,]  192  199  202 #>  [9206,]  192  199  202 #>  [9207,]  192  199  202 #>  [9208,]  192  199  202 #>  [9209,]  192  199  202 #>  [9210,]  193  200  203 #>  [9211,]  192  199  202 #>  [9212,]  192  199  202 #>  [9213,]  192  199  202 #>  [9214,]  192  199  202 #>  [9215,]  192  199  202 #>  [9216,]  192  199  202 #>  [9217,]  192  199  202 #>  [9218,]  193  200  203 #>  [9219,]  192  199  202 #>  [9220,]  192  199  202 #>  [9221,]  193  200  203 #>  [9222,]  192  199  202 #>  [9223,]  192  199  202 #>  [9224,]  192  199  202 #>  [9225,]  193  200  203 #>  [9226,]  192  199  202 #>  [9227,]  192  199  202 #>  [9228,]  192  199  202 #>  [9229,]  192  199  202 #>  [9230,]  192  199  202 #>  [9231,]  192  199  202 #>  [9232,]  192  199  202 #>  [9233,]  192  199  202 #>  [9234,]  192  199  202 #>  [9235,]  192  199  202 #>  [9236,]  192  199  202 #>  [9237,]  192  199  202 #>  [9238,]  192  199  202 #>  [9239,]  193  200  203 #>  [9240,]  192  199  202 #>  [9241,]  192  199  202 #>  [9242,]  192  199  202 #>  [9243,]  193  200  203 #>  [9244,]  192  199  202 #>  [9245,]  193  200  203 #>  [9246,]  192  199  202 #>  [9247,]  192  199  202 #>  [9248,]  192  199  202 #>  [9249,]  192  199  202 #>  [9250,]  192  199  202 #>  [9251,]  192  199  202 #>  [9252,]  192  199  202 #>  [9253,]  193  200  203 #>  [9254,]  192  199  202 #>  [9255,]  192  199  202 #>  [9256,]  192  199  202 #>  [9257,]  192  199  202 #>  [9258,]  192  199  202 #>  [9259,]  192  199  202 #>  [9260,]  192  199  202 #>  [9261,]  193  200  203 #>  [9262,]  192  199  202 #>  [9263,]  192  199  202 #>  [9264,]  192  199  202 #>  [9265,]  192  199  202 #>  [9266,]  192  199  202 #>  [9267,]  192  199  202 #>  [9268,]  192  199  202 #>  [9269,]  192  199  202 #>  [9270,]  192  199  202 #>  [9271,]  192  199  202 #>  [9272,]  193  200  203 #>  [9273,]  193  200  203 #>  [9274,]  193  200  203 #>  [9275,]  193  200  203 #>  [9276,]  193  200  203 #>  [9277,]  193  200  203 #>  [9278,]  192  199  202 #>  [9279,]  192  199  202 #>  [9280,]  192  199  202 #>  [9281,]  192  199  202 #>  [9282,]  192  199  202 #>  [9283,]  192  199  202 #>  [9284,]  193  200  203 #>  [9285,]  192  199  202 #>  [9286,]  192  199  202 #>  [9287,]  192  199  202 #>  [9288,]  192  199  202 #>  [9289,]  192  199  202 #>  [9290,]  192  199  202 #>  [9291,]  192  199  202 #>  [9292,]  192  199  202 #>  [9293,]  192  199  202 #>  [9294,]  193  200  203 #>  [9295,]  193  200  203 #>  [9296,]  192  199  202 #>  [9297,]  192  199  202 #>  [9298,]  192  199  202 #>  [9299,]  192  199  202 #>  [9300,]  193  200  203 #>  [9301,]  194  201  205 #>  [9302,]  194  201  205 #>  [9303,]  195  202  204 #>  [9304,]  194  201  205 #>  [9305,]  194  201  205 #>  [9306,]  195  202  205 #>  [9307,]  194  201  204 #>  [9308,]  194  201  205 #>  [9309,]  194  201  205 #>  [9310,]  194  201  205 #>  [9311,]  194  201  205 #>  [9312,]  195  202  205 #>  [9313,]  194  201  204 #>  [9314,]  194  201  205 #>  [9315,]  194  201  205 #>  [9316,]  194  201  205 #>  [9317,]  194  201  205 #>  [9318,]  194  201  205 #>  [9319,]  195  202  205 #>  [9320,]  195  202  205 #>  [9321,]  194  201  204 #>  [9322,]  194  201  205 #>  [9323,]  194  201  204 #>  [9324,]  194  201  205 #>  [9325,]  195  202  205 #>  [9326,]  194  201  205 #>  [9327,]  194  201  205 #>  [9328,]  195  202  205 #>  [9329,]  194  201  205 #>  [9330,]  194  201  204 #>  [9331,]  194  201  204 #>  [9332,]  194  201  205 #>  [9333,]  195  202  205 #>  [9334,]  195  202  205 #>  [9335,]  194  201  205 #>  [9336,]  194  201  205 #>  [9337,]  194  201  205 #>  [9338,]  194  201  205 #>  [9339,]  194  201  204 #>  [9340,]  194  201  205 #>  [9341,]  194  201  205 #>  [9342,]  194  201  205 #>  [9343,]  194  201  205 #>  [9344,]  194  201  205 #>  [9345,]  194  201  205 #>  [9346,]  194  201  205 #>  [9347,]  194  201  204 #>  [9348,]  194  201  205 #>  [9349,]  194  201  204 #>  [9350,]  194  201  205 #>  [9351,]  194  201  205 #>  [9352,]  194  201  205 #>  [9353,]  194  201  205 #>  [9354,]  194  201  204 #>  [9355,]  194  201  205 #>  [9356,]  194  201  205 #>  [9357,]  194  201  205 #>  [9358,]  194  201  205 #>  [9359,]  194  201  205 #>  [9360,]  195  202  205 #>  [9361,]  194  201  205 #>  [9362,]  194  201  204 #>  [9363,]  194  201  205 #>  [9364,]  194  201  205 #>  [9365,]  195  202  205 #>  [9366,]  194  201  205 #>  [9367,]  194  201  205 #>  [9368,]  194  201  205 #>  [9369,]  194  201  205 #>  [9370,]  195  202  204 #>  [9371,]  194  201  205 #>  [9372,]  194  201  205 #>  [9373,]  195  202  205 #>  [9374,]  194  201  205 #>  [9375,]  194  201  205 #>  [9376,]  194  201  205 #>  [9377,]  194  201  204 #>  [9378,]  194  201  205 #>  [9379,]  194  201  204 #>  [9380,]  194  201  204 #>  [9381,]  194  201  205 #>  [9382,]  194  201  205 #>  [9383,]  194  201  204 #>  [9384,]  195  202  205 #>  [9385,]  194  201  205 #>  [9386,]  194  201  205 #>  [9387,]  194  201  205 #>  [9388,]  194  201  205 #>  [9389,]  194  201  205 #>  [9390,]  194  201  205 #>  [9391,]  194  201  205 #>  [9392,]  194  201  205 #>  [9393,]  195  202  205 #>  [9394,]  194  201  205 #>  [9395,]  194  201  204 #>  [9396,]  194  201  205 #>  [9397,]  195  202  205 #>  [9398,]  195  202  204 #>  [9399,]  194  201  205 #>  [9400,]  194  201  205 #>  [9401,]  197  204  206 #>  [9402,]  197  205  206 #>  [9403,]  196  203  207 #>  [9404,]  196  203  207 #>  [9405,]  197  204  206 #>  [9406,]  197  204  206 #>  [9407,]  196  203  207 #>  [9408,]  196  203  207 #>  [9409,]  197  205  206 #>  [9410,]  197  205  206 #>  [9411,]  197  204  206 #>  [9412,]  196  203  207 #>  [9413,]  197  204  206 #>  [9414,]  197  204  206 #>  [9415,]  197  204  206 #>  [9416,]  197  204  206 #>  [9417,]  197  204  206 #>  [9418,]  197  204  206 #>  [9419,]  197  204  206 #>  [9420,]  197  204  206 #>  [9421,]  197  205  206 #>  [9422,]  197  204  206 #>  [9423,]  196  203  207 #>  [9424,]  197  204  206 #>  [9425,]  196  203  207 #>  [9426,]  197  204  206 #>  [9427,]  197  204  206 #>  [9428,]  197  204  206 #>  [9429,]  197  205  206 #>  [9430,]  197  204  206 #>  [9431,]  196  203  207 #>  [9432,]  197  204  206 #>  [9433,]  197  205  206 #>  [9434,]  197  204  206 #>  [9435,]  197  204  206 #>  [9436,]  197  204  206 #>  [9437,]  196  203  207 #>  [9438,]  197  204  206 #>  [9439,]  197  204  206 #>  [9440,]  196  203  207 #>  [9441,]  197  204  206 #>  [9442,]  197  204  206 #>  [9443,]  197  204  206 #>  [9444,]  197  204  206 #>  [9445,]  197  204  206 #>  [9446,]  196  203  207 #>  [9447,]  196  203  207 #>  [9448,]  197  204  206 #>  [9449,]  197  204  206 #>  [9450,]  197  204  206 #>  [9451,]  197  204  206 #>  [9452,]  196  203  207 #>  [9453,]  197  204  206 #>  [9454,]  197  204  206 #>  [9455,]  196  203  207 #>  [9456,]  197  204  206 #>  [9457,]  196  203  207 #>  [9458,]  197  204  206 #>  [9459,]  196  203  207 #>  [9460,]  196  203  207 #>  [9461,]  197  204  206 #>  [9462,]  197  204  206 #>  [9463,]  197  204  206 #>  [9464,]  197  204  206 #>  [9465,]  197  204  206 #>  [9466,]  197  204  206 #>  [9467,]  197  204  206 #>  [9468,]  196  203  207 #>  [9469,]  197  204  206 #>  [9470,]  197  205  206 #>  [9471,]  197  204  206 #>  [9472,]  197  204  206 #>  [9473,]  197  204  206 #>  [9474,]  196  203  207 #>  [9475,]  197  204  206 #>  [9476,]  197  204  206 #>  [9477,]  197  204  206 #>  [9478,]  197  204  206 #>  [9479,]  197  204  206 #>  [9480,]  196  203  207 #>  [9481,]  197  205  206 #>  [9482,]  197  204  206 #>  [9483,]  197  204  206 #>  [9484,]  197  204  206 #>  [9485,]  197  204  206 #>  [9486,]  196  203  207 #>  [9487,]  197  204  206 #>  [9488,]  197  204  206 #>  [9489,]  197  204  206 #>  [9490,]  197  204  206 #>  [9491,]  197  204  206 #>  [9492,]  196  203  207 #>  [9493,]  197  204  206 #>  [9494,]  197  204  206 #>  [9495,]  197  204  206 #>  [9496,]  196  203  207 #>  [9497,]  196  203  207 #>  [9498,]  196  203  207 #>  [9499,]  197  204  206 #>  [9500,]  197  204  206 #>  [9501,]  200  208  210 #>  [9502,]  198  206  208 #>  [9503,]  198  206  208 #>  [9504,]  200  208  210 #>  [9505,]  200  208  210 #>  [9506,]  198  206  208 #>  [9507,]  199  207  209 #>  [9508,]  200  208  210 #>  [9509,]  200  208  210 #>  [9510,]  200  208  210 #>  [9511,]  200  208  210 #>  [9512,]  198  206  208 #>  [9513,]  199  207  209 #>  [9514,]  200  208  210 #>  [9515,]  200  208  210 #>  [9516,]  199  207  209 #>  [9517,]  200  208  210 #>  [9518,]  198  206  208 #>  [9519,]  198  206  208 #>  [9520,]  198  206  208 #>  [9521,]  199  207  209 #>  [9522,]  199  207  209 #>  [9523,]  199  207  209 #>  [9524,]  199  207  209 #>  [9525,]  198  206  208 #>  [9526,]  200  208  210 #>  [9527,]  200  208  210 #>  [9528,]  198  206  208 #>  [9529,]  199  207  209 #>  [9530,]  199  207  209 #>  [9531,]  198  206  208 #>  [9532,]  199  207  209 #>  [9533,]  198  206  208 #>  [9534,]  198  206  208 #>  [9535,]  199  207  209 #>  [9536,]  199  207  209 #>  [9537,]  199  207  209 #>  [9538,]  200  208  210 #>  [9539,]  199  207  209 #>  [9540,]  199  207  209 #>  [9541,]  200  208  210 #>  [9542,]  200  208  210 #>  [9543,]  200  208  210 #>  [9544,]  199  207  209 #>  [9545,]  200  208  210 #>  [9546,]  200  208  210 #>  [9547,]  199  207  209 #>  [9548,]  199  207  209 #>  [9549,]  199  207  209 #>  [9550,]  200  208  210 #>  [9551,]  200  208  210 #>  [9552,]  200  208  210 #>  [9553,]  200  208  210 #>  [9554,]  199  207  209 #>  [9555,]  200  208  210 #>  [9556,]  200  208  210 #>  [9557,]  200  208  210 #>  [9558,]  200  208  210 #>  [9559,]  199  207  209 #>  [9560,]  198  206  208 #>  [9561,]  200  208  210 #>  [9562,]  199  207  209 #>  [9563,]  200  208  210 #>  [9564,]  200  208  210 #>  [9565,]  198  206  208 #>  [9566,]  200  208  210 #>  [9567,]  200  208  210 #>  [9568,]  200  208  210 #>  [9569,]  200  208  210 #>  [9570,]  198  206  208 #>  [9571,]  198  206  208 #>  [9572,]  200  208  210 #>  [9573,]  198  206  208 #>  [9574,]  200  208  210 #>  [9575,]  200  208  210 #>  [9576,]  200  208  210 #>  [9577,]  199  207  209 #>  [9578,]  200  208  210 #>  [9579,]  199  207  209 #>  [9580,]  199  207  209 #>  [9581,]  200  208  210 #>  [9582,]  200  208  210 #>  [9583,]  199  207  209 #>  [9584,]  198  206  208 #>  [9585,]  199  207  209 #>  [9586,]  199  207  209 #>  [9587,]  200  208  210 #>  [9588,]  200  208  210 #>  [9589,]  200  208  210 #>  [9590,]  200  208  210 #>  [9591,]  200  208  210 #>  [9592,]  200  208  210 #>  [9593,]  198  206  208 #>  [9594,]  200  208  210 #>  [9595,]  199  207  209 #>  [9596,]  200  208  210 #>  [9597,]  198  206  208 #>  [9598,]  198  206  208 #>  [9599,]  200  208  210 #>  [9600,]  198  206  208 #>  [9601,]  202  210  212 #>  [9602,]  202  210  212 #>  [9603,]  201  209  211 #>  [9604,]  201  209  211 #>  [9605,]  201  209  211 #>  [9606,]  202  210  211 #>  [9607,]  201  209  212 #>  [9608,]  201  209  212 #>  [9609,]  201  209  211 #>  [9610,]  201  209  211 #>  [9611,]  202  210  211 #>  [9612,]  201  209  212 #>  [9613,]  202  210  212 #>  [9614,]  202  210  211 #>  [9615,]  202  210  212 #>  [9616,]  202  210  212 #>  [9617,]  202  210  212 #>  [9618,]  201  209  212 #>  [9619,]  202  210  212 #>  [9620,]  201  209  212 #>  [9621,]  202  210  211 #>  [9622,]  202  210  212 #>  [9623,]  201  209  212 #>  [9624,]  201  209  211 #>  [9625,]  201  209  211 #>  [9626,]  202  210  212 #>  [9627,]  202  210  212 #>  [9628,]  201  209  211 #>  [9629,]  202  210  212 #>  [9630,]  201  209  212 #>  [9631,]  201  209  211 #>  [9632,]  201  209  211 #>  [9633,]  202  210  212 #>  [9634,]  201  209  211 #>  [9635,]  202  210  211 #>  [9636,]  201  209  212 #>  [9637,]  202  210  212 #>  [9638,]  201  209  212 #>  [9639,]  201  209  211 #>  [9640,]  201  209  211 #>  [9641,]  202  210  212 #>  [9642,]  201  209  211 #>  [9643,]  201  209  212 #>  [9644,]  202  210  212 #>  [9645,]  201  209  212 #>  [9646,]  201  209  212 #>  [9647,]  202  210  211 #>  [9648,]  201  209  211 #>  [9649,]  201  209  212 #>  [9650,]  202  210  212 #>  [9651,]  201  209  212 #>  [9652,]  202  210  211 #>  [9653,]  201  209  212 #>  [9654,]  201  209  211 #>  [9655,]  202  210  212 #>  [9656,]  201  209  212 #>  [9657,]  201  209  211 #>  [9658,]  202  210  212 #>  [9659,]  202  210  212 #>  [9660,]  201  209  212 #>  [9661,]  202  210  212 #>  [9662,]  201  209  211 #>  [9663,]  201  209  212 #>  [9664,]  201  209  212 #>  [9665,]  201  209  211 #>  [9666,]  201  209  212 #>  [9667,]  201  209  211 #>  [9668,]  202  210  212 #>  [9669,]  202  210  212 #>  [9670,]  202  210  211 #>  [9671,]  202  210  212 #>  [9672,]  201  209  211 #>  [9673,]  202  210  211 #>  [9674,]  201  209  211 #>  [9675,]  202  210  212 #>  [9676,]  202  210  211 #>  [9677,]  202  210  212 #>  [9678,]  201  209  212 #>  [9679,]  202  210  211 #>  [9680,]  201  209  212 #>  [9681,]  202  210  212 #>  [9682,]  201  209  211 #>  [9683,]  202  210  212 #>  [9684,]  202  210  212 #>  [9685,]  201  209  212 #>  [9686,]  202  210  211 #>  [9687,]  202  210  212 #>  [9688,]  201  209  211 #>  [9689,]  201  209  211 #>  [9690,]  202  210  212 #>  [9691,]  201  209  211 #>  [9692,]  202  210  211 #>  [9693,]  202  210  212 #>  [9694,]  202  210  211 #>  [9695,]  201  209  212 #>  [9696,]  202  210  212 #>  [9697,]  202  210  212 #>  [9698,]  202  210  211 #>  [9699,]  202  210  212 #>  [9700,]  202  210  212 #>  [9701,]  203  211  213 #>  [9702,]  203  211  213 #>  [9703,]  203  211  213 #>  [9704,]  204  212  214 #>  [9705,]  203  211  213 #>  [9706,]  203  211  213 #>  [9707,]  203  211  213 #>  [9708,]  203  211  213 #>  [9709,]  204  212  214 #>  [9710,]  203  211  213 #>  [9711,]  204  212  214 #>  [9712,]  204  212  214 #>  [9713,]  203  211  213 #>  [9714,]  204  212  214 #>  [9715,]  204  212  214 #>  [9716,]  203  211  213 #>  [9717,]  203  211  213 #>  [9718,]  204  212  214 #>  [9719,]  204  212  214 #>  [9720,]  203  211  213 #>  [9721,]  204  212  214 #>  [9722,]  203  211  213 #>  [9723,]  203  211  213 #>  [9724,]  203  211  213 #>  [9725,]  203  211  213 #>  [9726,]  204  212  214 #>  [9727,]  204  212  214 #>  [9728,]  203  211  213 #>  [9729,]  203  211  213 #>  [9730,]  204  212  214 #>  [9731,]  204  212  214 #>  [9732,]  203  211  213 #>  [9733,]  204  212  214 #>  [9734,]  203  211  213 #>  [9735,]  203  211  213 #>  [9736,]  204  212  214 #>  [9737,]  203  211  213 #>  [9738,]  204  212  214 #>  [9739,]  203  211  213 #>  [9740,]  203  211  213 #>  [9741,]  204  212  214 #>  [9742,]  204  212  214 #>  [9743,]  203  211  213 #>  [9744,]  203  211  213 #>  [9745,]  203  211  213 #>  [9746,]  203  211  213 #>  [9747,]  203  211  213 #>  [9748,]  204  212  214 #>  [9749,]  203  211  213 #>  [9750,]  203  211  213 #>  [9751,]  203  211  213 #>  [9752,]  203  211  213 #>  [9753,]  203  211  213 #>  [9754,]  203  211  213 #>  [9755,]  203  211  213 #>  [9756,]  203  211  213 #>  [9757,]  203  211  213 #>  [9758,]  204  212  214 #>  [9759,]  203  211  213 #>  [9760,]  204  212  214 #>  [9761,]  204  212  214 #>  [9762,]  203  211  213 #>  [9763,]  203  211  213 #>  [9764,]  203  211  213 #>  [9765,]  203  211  213 #>  [9766,]  203  211  213 #>  [9767,]  203  211  213 #>  [9768,]  204  212  214 #>  [9769,]  204  212  214 #>  [9770,]  203  211  213 #>  [9771,]  203  211  213 #>  [9772,]  203  211  213 #>  [9773,]  203  211  213 #>  [9774,]  204  212  214 #>  [9775,]  204  212  214 #>  [9776,]  203  211  213 #>  [9777,]  203  211  213 #>  [9778,]  203  211  213 #>  [9779,]  203  211  213 #>  [9780,]  203  211  213 #>  [9781,]  203  211  213 #>  [9782,]  204  212  214 #>  [9783,]  203  211  213 #>  [9784,]  203  211  213 #>  [9785,]  204  212  214 #>  [9786,]  203  211  213 #>  [9787,]  203  211  213 #>  [9788,]  203  211  213 #>  [9789,]  203  211  213 #>  [9790,]  203  211  213 #>  [9791,]  203  211  213 #>  [9792,]  204  212  214 #>  [9793,]  204  212  214 #>  [9794,]  203  211  213 #>  [9795,]  203  211  213 #>  [9796,]  204  212  214 #>  [9797,]  204  212  214 #>  [9798,]  203  211  213 #>  [9799,]  203  211  213 #>  [9800,]  203  211  213 #>  [9801,]  206  214  216 #>  [9802,]  206  214  216 #>  [9803,]  205  213  215 #>  [9804,]  206  214  216 #>  [9805,]  206  214  216 #>  [9806,]  206  214  216 #>  [9807,]  205  213  215 #>  [9808,]  206  214  216 #>  [9809,]  206  214  216 #>  [9810,]  206  214  216 #>  [9811,]  206  214  216 #>  [9812,]  206  214  216 #>  [9813,]  205  213  215 #>  [9814,]  206  214  216 #>  [9815,]  206  214  216 #>  [9816,]  206  214  216 #>  [9817,]  206  214  216 #>  [9818,]  206  214  216 #>  [9819,]  206  214  216 #>  [9820,]  206  214  216 #>  [9821,]  205  213  215 #>  [9822,]  206  214  216 #>  [9823,]  205  213  215 #>  [9824,]  206  214  216 #>  [9825,]  206  214  216 #>  [9826,]  206  214  216 #>  [9827,]  206  214  216 #>  [9828,]  206  214  216 #>  [9829,]  206  214  216 #>  [9830,]  205  213  215 #>  [9831,]  205  213  215 #>  [9832,]  206  214  216 #>  [9833,]  206  214  216 #>  [9834,]  206  214  216 #>  [9835,]  206  214  216 #>  [9836,]  206  214  216 #>  [9837,]  206  214  216 #>  [9838,]  206  214  216 #>  [9839,]  205  213  215 #>  [9840,]  206  214  216 #>  [9841,]  206  214  216 #>  [9842,]  206  214  216 #>  [9843,]  206  214  216 #>  [9844,]  206  214  216 #>  [9845,]  206  214  216 #>  [9846,]  206  214  216 #>  [9847,]  205  213  215 #>  [9848,]  206  214  216 #>  [9849,]  205  213  215 #>  [9850,]  206  214  216 #>  [9851,]  206  214  216 #>  [9852,]  206  214  216 #>  [9853,]  206  214  216 #>  [9854,]  205  213  215 #>  [9855,]  206  214  216 #>  [9856,]  206  214  216 #>  [9857,]  206  214  216 #>  [9858,]  206  214  216 #>  [9859,]  206  214  216 #>  [9860,]  206  214  216 #>  [9861,]  206  214  216 #>  [9862,]  205  213  215 #>  [9863,]  206  214  216 #>  [9864,]  206  214  216 #>  [9865,]  206  214  216 #>  [9866,]  206  214  216 #>  [9867,]  206  214  216 #>  [9868,]  206  214  216 #>  [9869,]  206  214  216 #>  [9870,]  205  213  215 #>  [9871,]  206  214  216 #>  [9872,]  206  214  216 #>  [9873,]  206  214  216 #>  [9874,]  206  214  216 #>  [9875,]  206  214  216 #>  [9876,]  206  214  216 #>  [9877,]  205  213  215 #>  [9878,]  206  214  216 #>  [9879,]  205  213  215 #>  [9880,]  205  213  215 #>  [9881,]  206  214  216 #>  [9882,]  206  214  216 #>  [9883,]  205  213  215 #>  [9884,]  206  214  216 #>  [9885,]  206  214  216 #>  [9886,]  206  214  216 #>  [9887,]  206  214  216 #>  [9888,]  206  214  216 #>  [9889,]  206  214  216 #>  [9890,]  206  214  216 #>  [9891,]  206  214  216 #>  [9892,]  206  214  216 #>  [9893,]  206  214  216 #>  [9894,]  206  214  216 #>  [9895,]  205  213  215 #>  [9896,]  206  214  216 #>  [9897,]  206  214  216 #>  [9898,]  205  213  215 #>  [9899,]  206  214  216 #>  [9900,]  206  214  216 #>  [9901,]  208  215  219 #>  [9902,]  207  216  217 #>  [9903,]  208  215  218 #>  [9904,]  208  215  218 #>  [9905,]  208  215  218 #>  [9906,]  207  216  217 #>  [9907,]  208  215  218 #>  [9908,]  208  215  218 #>  [9909,]  208  215  218 #>  [9910,]  208  215  218 #>  [9911,]  207  216  217 #>  [9912,]  207  216  217 #>  [9913,]  208  215  219 #>  [9914,]  208  215  219 #>  [9915,]  207  216  217 #>  [9916,]  208  215  219 #>  [9917,]  207  216  217 #>  [9918,]  208  215  218 #>  [9919,]  208  215  218 #>  [9920,]  208  215  218 #>  [9921,]  208  215  219 #>  [9922,]  208  215  219 #>  [9923,]  207  216  217 #>  [9924,]  208  215  218 #>  [9925,]  208  215  218 #>  [9926,]  208  215  219 #>  [9927,]  208  215  219 #>  [9928,]  208  215  218 #>  [9929,]  207  216  217 #>  [9930,]  207  216  217 #>  [9931,]  207  216  217 #>  [9932,]  208  215  218 #>  [9933,]  208  215  219 #>  [9934,]  207  216  217 #>  [9935,]  207  216  217 #>  [9936,]  208  215  218 #>  [9937,]  207  216  217 #>  [9938,]  208  215  218 #>  [9939,]  208  215  218 #>  [9940,]  208  215  218 #>  [9941,]  208  215  219 #>  [9942,]  207  216  217 #>  [9943,]  207  216  217 #>  [9944,]  207  216  217 #>  [9945,]  208  215  218 #>  [9946,]  208  215  218 #>  [9947,]  207  216  217 #>  [9948,]  207  216  217 #>  [9949,]  208  215  218 #>  [9950,]  208  215  219 #>  [9951,]  208  215  218 #>  [9952,]  208  215  219 #>  [9953,]  208  215  218 #>  [9954,]  208  215  218 #>  [9955,]  208  215  218 #>  [9956,]  207  216  217 #>  [9957,]  208  215  218 #>  [9958,]  208  215  219 #>  [9959,]  208  215  219 #>  [9960,]  207  216  217 #>  [9961,]  207  216  217 #>  [9962,]  208  215  218 #>  [9963,]  207  216  217 #>  [9964,]  207  216  217 #>  [9965,]  207  216  217 #>  [9966,]  207  216  217 #>  [9967,]  208  215  218 #>  [9968,]  208  215  219 #>  [9969,]  208  215  218 #>  [9970,]  207  216  217 #>  [9971,]  208  215  219 #>  [9972,]  208  215  218 #>  [9973,]  208  215  219 #>  [9974,]  208  215  218 #>  [9975,]  207  216  217 #>  [9976,]  208  215  219 #>  [9977,]  208  215  219 #>  [9978,]  207  216  217 #>  [9979,]  207  216  217 #>  [9980,]  208  215  218 #>  [9981,]  207  216  217 #>  [9982,]  208  215  218 #>  [9983,]  208  215  219 #>  [9984,]  208  215  219 #>  [9985,]  208  215  218 #>  [9986,]  208  215  219 #>  [9987,]  208  215  219 #>  [9988,]  208  215  218 #>  [9989,]  208  215  218 #>  [9990,]  208  215  219 #>  [9991,]  208  215  218 #>  [9992,]  207  216  217 #>  [9993,]  208  215  219 #>  [9994,]  207  216  217 #>  [9995,]  207  216  217 #>  [9996,]  208  215  219 #>  [9997,]  208  215  219 #>  [9998,]  208  215  218 #>  [9999,]  208  215  219 #> [10000,]  207  216  217 #> [10001,]  209  217  221 #> [10002,]  209  217  222 #> [10003,]  209  217  222 #> [10004,]  209  217  221 #> [10005,]  210  218  220 #> [10006,]  209  217  222 #> [10007,]  209  217  221 #> [10008,]  209  217  221 #> [10009,]  209  217  221 #> [10010,]  209  217  221 #> [10011,]  209  217  221 #> [10012,]  209  217  222 #> [10013,]  209  217  221 #> [10014,]  209  217  221 #> [10015,]  209  217  221 #> [10016,]  209  217  221 #> [10017,]  209  217  221 #> [10018,]  210  218  220 #> [10019,]  209  217  222 #> [10020,]  209  217  222 #> [10021,]  209  217  221 #> [10022,]  209  217  221 #> [10023,]  209  217  221 #> [10024,]  209  217  221 #> [10025,]  209  217  222 #> [10026,]  209  217  221 #> [10027,]  209  217  221 #> [10028,]  209  217  222 #> [10029,]  209  217  221 #> [10030,]  209  217  221 #> [10031,]  209  217  222 #> [10032,]  209  217  222 #> [10033,]  209  217  222 #> [10034,]  209  217  222 #> [10035,]  209  217  221 #> [10036,]  209  217  221 #> [10037,]  209  217  221 #> [10038,]  209  217  221 #> [10039,]  209  217  221 #> [10040,]  209  217  221 #> [10041,]  209  217  221 #> [10042,]  209  217  221 #> [10043,]  209  217  221 #> [10044,]  209  217  221 #> [10045,]  209  217  221 #> [10046,]  209  217  221 #> [10047,]  209  217  221 #> [10048,]  209  217  221 #> [10049,]  209  217  221 #> [10050,]  209  217  221 #> [10051,]  209  217  221 #> [10052,]  209  217  221 #> [10053,]  209  217  221 #> [10054,]  209  217  221 #> [10055,]  209  217  221 #> [10056,]  209  217  221 #> [10057,]  209  217  221 #> [10058,]  209  217  221 #> [10059,]  209  217  221 #> [10060,]  209  217  222 #> [10061,]  209  217  221 #> [10062,]  209  217  221 #> [10063,]  209  217  221 #> [10064,]  209  217  221 #> [10065,]  209  217  222 #> [10066,]  209  217  221 #> [10067,]  209  217  221 #> [10068,]  209  217  221 #> [10069,]  209  217  221 #> [10070,]  209  217  222 #> [10071,]  210  218  220 #> [10072,]  209  217  221 #> [10073,]  209  217  222 #> [10074,]  209  217  221 #> [10075,]  210  218  220 #> [10076,]  209  217  221 #> [10077,]  209  217  221 #> [10078,]  209  217  221 #> [10079,]  209  217  221 #> [10080,]  209  217  221 #> [10081,]  209  217  221 #> [10082,]  209  217  221 #> [10083,]  209  217  221 #> [10084,]  209  217  222 #> [10085,]  209  217  221 #> [10086,]  209  217  221 #> [10087,]  209  217  221 #> [10088,]  209  217  221 #> [10089,]  209  217  221 #> [10090,]  209  217  221 #> [10091,]  209  217  221 #> [10092,]  209  217  221 #> [10093,]  209  217  222 #> [10094,]  209  217  221 #> [10095,]  209  217  221 #> [10096,]  209  217  221 #> [10097,]  209  217  222 #> [10098,]  209  217  222 #> [10099,]  209  217  221 #> [10100,]  210  218  220 #> [10101,]  212  219  224 #> [10102,]  212  219  223 #> [10103,]  211  219  223 #> [10104,]  212  219  224 #> [10105,]  212  219  224 #> [10106,]  212  219  224 #> [10107,]  211  219  223 #> [10108,]  212  219  224 #> [10109,]  212  219  224 #> [10110,]  212  219  224 #> [10111,]  212  219  224 #> [10112,]  212  219  224 #> [10113,]  212  219  223 #> [10114,]  212  219  224 #> [10115,]  212  219  224 #> [10116,]  212  219  223 #> [10117,]  212  219  224 #> [10118,]  212  219  223 #> [10119,]  212  219  223 #> [10120,]  211  219  224 #> [10121,]  212  219  223 #> [10122,]  212  219  223 #> [10123,]  212  219  223 #> [10124,]  212  219  223 #> [10125,]  211  219  224 #> [10126,]  212  219  224 #> [10127,]  212  219  224 #> [10128,]  212  219  224 #> [10129,]  212  219  224 #> [10130,]  212  219  223 #> [10131,]  212  219  223 #> [10132,]  212  219  224 #> [10133,]  212  219  224 #> [10134,]  212  219  223 #> [10135,]  212  219  223 #> [10136,]  212  219  223 #> [10137,]  212  219  223 #> [10138,]  212  219  224 #> [10139,]  211  219  223 #> [10140,]  212  219  223 #> [10141,]  212  219  224 #> [10142,]  212  219  224 #> [10143,]  212  219  224 #> [10144,]  211  219  223 #> [10145,]  212  219  224 #> [10146,]  212  219  224 #> [10147,]  212  219  223 #> [10148,]  212  219  224 #> [10149,]  211  219  223 #> [10150,]  211  219  224 #> [10151,]  212  219  224 #> [10152,]  212  219  224 #> [10153,]  211  219  224 #> [10154,]  212  219  223 #> [10155,]  211  219  224 #> [10156,]  211  219  224 #> [10157,]  212  219  224 #> [10158,]  212  219  224 #> [10159,]  211  219  223 #> [10160,]  212  219  224 #> [10161,]  212  219  224 #> [10162,]  212  219  223 #> [10163,]  212  219  224 #> [10164,]  212  219  224 #> [10165,]  211  219  224 #> [10166,]  211  219  224 #> [10167,]  212  219  224 #> [10168,]  212  219  224 #> [10169,]  212  219  224 #> [10170,]  212  219  223 #> [10171,]  212  219  224 #> [10172,]  212  219  224 #> [10173,]  212  219  224 #> [10174,]  212  219  224 #> [10175,]  212  219  224 #> [10176,]  212  219  224 #> [10177,]  212  219  223 #> [10178,]  212  219  224 #> [10179,]  212  219  223 #> [10180,]  212  219  223 #> [10181,]  212  219  224 #> [10182,]  212  219  224 #> [10183,]  212  219  223 #> [10184,]  212  219  224 #> [10185,]  212  219  224 #> [10186,]  212  219  224 #> [10187,]  212  219  224 #> [10188,]  212  219  224 #> [10189,]  212  219  224 #> [10190,]  211  219  224 #> [10191,]  212  219  224 #> [10192,]  212  219  224 #> [10193,]  212  219  223 #> [10194,]  212  219  224 #> [10195,]  212  219  223 #> [10196,]  212  219  224 #> [10197,]  212  219  224 #> [10198,]  211  219  223 #> [10199,]  212  219  224 #> [10200,]  211  219  223 #> [10201,]  214  220  225 #> [10202,]  214  220  225 #> [10203,]  213  220  225 #> [10204,]  213  220  225 #> [10205,]  214  220  226 #> [10206,]  214  220  225 #> [10207,]  213  220  225 #> [10208,]  213  220  225 #> [10209,]  214  220  225 #> [10210,]  214  220  225 #> [10211,]  214  220  225 #> [10212,]  213  220  225 #> [10213,]  214  220  225 #> [10214,]  214  220  225 #> [10215,]  214  220  225 #> [10216,]  214  220  225 #> [10217,]  214  220  225 #> [10218,]  214  220  226 #> [10219,]  214  220  225 #> [10220,]  214  220  225 #> [10221,]  214  220  225 #> [10222,]  214  220  225 #> [10223,]  214  220  225 #> [10224,]  214  220  225 #> [10225,]  213  220  225 #> [10226,]  214  220  225 #> [10227,]  214  220  225 #> [10228,]  214  220  225 #> [10229,]  214  220  225 #> [10230,]  214  220  225 #> [10231,]  213  220  225 #> [10232,]  214  220  225 #> [10233,]  214  220  225 #> [10234,]  214  220  225 #> [10235,]  214  220  225 #> [10236,]  214  220  225 #> [10237,]  214  220  225 #> [10238,]  214  220  225 #> [10239,]  214  220  225 #> [10240,]  214  220  225 #> [10241,]  214  220  225 #> [10242,]  214  220  225 #> [10243,]  214  220  225 #> [10244,]  214  220  225 #> [10245,]  214  220  225 #> [10246,]  214  220  225 #> [10247,]  214  220  225 #> [10248,]  214  220  225 #> [10249,]  214  220  225 #> [10250,]  214  220  225 #> [10251,]  214  220  225 #> [10252,]  213  220  225 #> [10253,]  214  220  225 #> [10254,]  214  220  225 #> [10255,]  214  220  225 #> [10256,]  214  220  225 #> [10257,]  213  220  225 #> [10258,]  214  220  225 #> [10259,]  213  220  225 #> [10260,]  213  220  225 #> [10261,]  214  220  225 #> [10262,]  214  220  225 #> [10263,]  214  220  225 #> [10264,]  214  220  225 #> [10265,]  214  220  225 #> [10266,]  214  220  225 #> [10267,]  214  220  225 #> [10268,]  213  220  225 #> [10269,]  214  220  225 #> [10270,]  214  220  225 #> [10271,]  214  220  226 #> [10272,]  214  220  225 #> [10273,]  214  220  225 #> [10274,]  214  220  225 #> [10275,]  214  220  226 #> [10276,]  214  220  225 #> [10277,]  214  220  225 #> [10278,]  214  220  225 #> [10279,]  214  220  225 #> [10280,]  214  220  225 #> [10281,]  214  220  225 #> [10282,]  214  220  225 #> [10283,]  214  220  225 #> [10284,]  214  220  225 #> [10285,]  214  220  225 #> [10286,]  213  220  225 #> [10287,]  214  220  225 #> [10288,]  214  220  225 #> [10289,]  214  220  225 #> [10290,]  214  220  225 #> [10291,]  214  220  225 #> [10292,]  214  220  225 #> [10293,]  214  220  225 #> [10294,]  214  220  225 #> [10295,]  214  220  225 #> [10296,]  213  220  225 #> [10297,]  213  220  225 #> [10298,]  214  220  225 #> [10299,]  214  220  225 #> [10300,]  214  220  226 #> [10301,]  216  222  229 #> [10302,]  216  222  229 #> [10303,]  215  221  227 #> [10304,]  216  222  229 #> [10305,]  216  222  228 #> [10306,]  216  222  229 #> [10307,]  215  221  227 #> [10308,]  216  222  228 #> [10309,]  216  222  229 #> [10310,]  216  222  229 #> [10311,]  216  222  229 #> [10312,]  216  222  229 #> [10313,]  215  221  227 #> [10314,]  216  222  229 #> [10315,]  216  222  229 #> [10316,]  215  221  227 #> [10317,]  216  222  228 #> [10318,]  216  222  229 #> [10319,]  215  221  227 #> [10320,]  216  222  228 #> [10321,]  215  221  227 #> [10322,]  216  222  228 #> [10323,]  215  221  227 #> [10324,]  216  222  228 #> [10325,]  216  222  228 #> [10326,]  216  222  229 #> [10327,]  216  222  229 #> [10328,]  216  222  228 #> [10329,]  216  222  228 #> [10330,]  215  221  227 #> [10331,]  215  221  227 #> [10332,]  216  222  229 #> [10333,]  216  222  229 #> [10334,]  215  221  227 #> [10335,]  215  221  227 #> [10336,]  215  221  227 #> [10337,]  215  221  227 #> [10338,]  216  222  229 #> [10339,]  215  221  227 #> [10340,]  215  221  227 #> [10341,]  216  222  229 #> [10342,]  216  222  229 #> [10343,]  216  222  228 #> [10344,]  216  222  228 #> [10345,]  216  222  228 #> [10346,]  216  222  228 #> [10347,]  215  221  227 #> [10348,]  216  222  229 #> [10349,]  215  221  227 #> [10350,]  216  222  228 #> [10351,]  216  222  228 #> [10352,]  216  222  229 #> [10353,]  216  222  228 #> [10354,]  215  221  227 #> [10355,]  216  222  228 #> [10356,]  216  222  228 #> [10357,]  216  222  229 #> [10358,]  216  222  229 #> [10359,]  216  222  228 #> [10360,]  216  222  229 #> [10361,]  216  222  229 #> [10362,]  215  221  227 #> [10363,]  216  222  228 #> [10364,]  216  222  229 #> [10365,]  216  222  228 #> [10366,]  216  222  228 #> [10367,]  216  222  229 #> [10368,]  216  222  229 #> [10369,]  216  222  229 #> [10370,]  215  221  227 #> [10371,]  216  222  228 #> [10372,]  216  222  228 #> [10373,]  216  222  229 #> [10374,]  216  222  229 #> [10375,]  216  222  229 #> [10376,]  216  222  228 #> [10377,]  215  221  227 #> [10378,]  216  222  228 #> [10379,]  215  221  227 #> [10380,]  215  221  227 #> [10381,]  216  222  228 #> [10382,]  216  222  229 #> [10383,]  215  221  227 #> [10384,]  216  222  228 #> [10385,]  216  222  229 #> [10386,]  216  222  228 #> [10387,]  216  222  229 #> [10388,]  216  222  229 #> [10389,]  216  222  228 #> [10390,]  216  222  228 #> [10391,]  216  222  229 #> [10392,]  216  222  229 #> [10393,]  215  221  227 #> [10394,]  216  222  228 #> [10395,]  215  221  227 #> [10396,]  216  222  229 #> [10397,]  216  222  229 #> [10398,]  215  221  227 #> [10399,]  216  222  229 #> [10400,]  215  221  227 #> [10401,]  217  223  230 #> [10402,]  218  224  231 #> [10403,]  218  224  231 #> [10404,]  219  225  232 #> [10405,]  217  223  230 #> [10406,]  219  225  232 #> [10407,]  218  224  231 #> [10408,]  218  224  231 #> [10409,]  217  223  230 #> [10410,]  219  225  232 #> [10411,]  217  223  230 #> [10412,]  219  225  232 #> [10413,]  217  223  230 #> [10414,]  219  225  232 #> [10415,]  219  225  232 #> [10416,]  218  224  231 #> [10417,]  217  223  230 #> [10418,]  217  223  230 #> [10419,]  219  225  232 #> [10420,]  217  223  230 #> [10421,]  217  223  230 #> [10422,]  218  224  231 #> [10423,]  219  225  232 #> [10424,]  218  224  231 #> [10425,]  218  224  231 #> [10426,]  219  225  232 #> [10427,]  217  223  230 #> [10428,]  217  223  230 #> [10429,]  217  223  230 #> [10430,]  219  225  232 #> [10431,]  219  225  232 #> [10432,]  219  225  232 #> [10433,]  217  223  230 #> [10434,]  219  225  232 #> [10435,]  219  225  232 #> [10436,]  217  223  230 #> [10437,]  219  225  232 #> [10438,]  217  223  230 #> [10439,]  217  223  230 #> [10440,]  218  224  231 #> [10441,]  217  223  230 #> [10442,]  217  223  230 #> [10443,]  218  224  231 #> [10444,]  218  224  231 #> [10445,]  218  224  231 #> [10446,]  218  224  231 #> [10447,]  218  224  231 #> [10448,]  219  225  232 #> [10449,]  218  224  231 #> [10450,]  218  224  231 #> [10451,]  217  223  230 #> [10452,]  219  225  232 #> [10453,]  217  223  230 #> [10454,]  217  223  230 #> [10455,]  218  224  231 #> [10456,]  217  223  230 #> [10457,]  219  225  232 #> [10458,]  217  223  230 #> [10459,]  218  224  231 #> [10460,]  219  225  232 #> [10461,]  217  223  230 #> [10462,]  217  223  230 #> [10463,]  218  224  231 #> [10464,]  219  225  232 #> [10465,]  217  223  230 #> [10466,]  217  223  230 #> [10467,]  219  225  232 #> [10468,]  219  225  232 #> [10469,]  219  225  232 #> [10470,]  217  223  230 #> [10471,]  218  224  231 #> [10472,]  218  224  231 #> [10473,]  219  225  232 #> [10474,]  219  225  232 #> [10475,]  219  225  232 #> [10476,]  218  224  231 #> [10477,]  217  223  230 #> [10478,]  218  224  231 #> [10479,]  217  223  230 #> [10480,]  219  225  232 #> [10481,]  218  224  231 #> [10482,]  217  223  230 #> [10483,]  217  223  230 #> [10484,]  217  223  230 #> [10485,]  217  223  230 #> [10486,]  218  224  231 #> [10487,]  217  223  230 #> [10488,]  219  225  232 #> [10489,]  217  223  230 #> [10490,]  217  223  230 #> [10491,]  217  223  230 #> [10492,]  219  225  232 #> [10493,]  217  223  230 #> [10494,]  217  223  230 #> [10495,]  219  225  232 #> [10496,]  219  225  232 #> [10497,]  219  225  232 #> [10498,]  218  224  231 #> [10499,]  219  225  232 #> [10500,]  218  224  231 #> [10501,]  221  227  233 #> [10502,]  221  227  233 #> [10503,]  220  226  234 #> [10504,]  220  226  234 #> [10505,]  220  226  234 #> [10506,]  221  227  233 #> [10507,]  220  226  234 #> [10508,]  220  226  234 #> [10509,]  220  226  234 #> [10510,]  220  226  234 #> [10511,]  220  226  234 #> [10512,]  220  226  234 #> [10513,]  221  227  233 #> [10514,]  221  227  233 #> [10515,]  221  227  233 #> [10516,]  221  227  233 #> [10517,]  221  227  233 #> [10518,]  220  226  234 #> [10519,]  220  226  234 #> [10520,]  220  226  234 #> [10521,]  221  227  233 #> [10522,]  220  226  234 #> [10523,]  220  226  234 #> [10524,]  220  226  234 #> [10525,]  220  226  234 #> [10526,]  221  227  233 #> [10527,]  220  226  234 #> [10528,]  220  226  234 #> [10529,]  221  227  233 #> [10530,]  220  226  234 #> [10531,]  220  226  234 #> [10532,]  220  226  234 #> [10533,]  221  227  233 #> [10534,]  220  226  234 #> [10535,]  221  227  233 #> [10536,]  220  226  234 #> [10537,]  220  226  234 #> [10538,]  220  226  234 #> [10539,]  220  226  234 #> [10540,]  220  226  234 #> [10541,]  221  227  233 #> [10542,]  220  226  234 #> [10543,]  220  226  234 #> [10544,]  221  227  233 #> [10545,]  220  226  234 #> [10546,]  220  226  234 #> [10547,]  220  226  234 #> [10548,]  220  226  234 #> [10549,]  220  226  234 #> [10550,]  221  227  233 #> [10551,]  220  226  234 #> [10552,]  220  226  234 #> [10553,]  220  226  234 #> [10554,]  220  226  234 #> [10555,]  220  226  234 #> [10556,]  220  226  234 #> [10557,]  220  226  234 #> [10558,]  220  226  234 #> [10559,]  221  227  233 #> [10560,]  220  226  234 #> [10561,]  221  227  233 #> [10562,]  220  226  234 #> [10563,]  220  226  234 #> [10564,]  220  226  234 #> [10565,]  220  226  234 #> [10566,]  220  226  234 #> [10567,]  220  226  234 #> [10568,]  221  227  233 #> [10569,]  220  226  234 #> [10570,]  221  227  233 #> [10571,]  221  227  233 #> [10572,]  220  226  234 #> [10573,]  221  227  233 #> [10574,]  220  226  234 #> [10575,]  220  226  234 #> [10576,]  221  227  233 #> [10577,]  221  227  233 #> [10578,]  220  226  234 #> [10579,]  221  227  233 #> [10580,]  220  226  234 #> [10581,]  221  227  233 #> [10582,]  220  226  234 #> [10583,]  221  227  233 #> [10584,]  220  226  234 #> [10585,]  220  226  234 #> [10586,]  221  227  233 #> [10587,]  220  226  234 #> [10588,]  220  226  234 #> [10589,]  220  226  234 #> [10590,]  220  226  234 #> [10591,]  220  226  234 #> [10592,]  220  226  234 #> [10593,]  221  227  233 #> [10594,]  221  227  233 #> [10595,]  220  226  234 #> [10596,]  221  227  233 #> [10597,]  220  226  234 #> [10598,]  220  226  234 #> [10599,]  221  227  233 #> [10600,]  220  226  234 #> [10601,]  222  228  236 #> [10602,]  222  228  236 #> [10603,]  222  228  236 #> [10604,]  222  228  236 #> [10605,]  222  228  236 #> [10606,]  222  228  236 #> [10607,]  222  228  236 #> [10608,]  222  228  236 #> [10609,]  222  228  236 #> [10610,]  222  228  236 #> [10611,]  222  228  236 #> [10612,]  222  228  235 #> [10613,]  222  228  236 #> [10614,]  222  228  236 #> [10615,]  222  228  235 #> [10616,]  222  228  236 #> [10617,]  222  228  235 #> [10618,]  222  228  236 #> [10619,]  222  228  236 #> [10620,]  223  229  236 #> [10621,]  222  228  236 #> [10622,]  223  229  236 #> [10623,]  222  228  235 #> [10624,]  222  228  236 #> [10625,]  222  228  236 #> [10626,]  222  228  236 #> [10627,]  223  229  236 #> [10628,]  222  228  236 #> [10629,]  223  229  236 #> [10630,]  222  228  236 #> [10631,]  222  228  235 #> [10632,]  222  228  236 #> [10633,]  222  228  236 #> [10634,]  222  228  235 #> [10635,]  222  228  236 #> [10636,]  222  228  236 #> [10637,]  222  228  235 #> [10638,]  222  228  236 #> [10639,]  222  228  236 #> [10640,]  222  228  236 #> [10641,]  222  228  236 #> [10642,]  222  228  235 #> [10643,]  222  228  235 #> [10644,]  222  228  235 #> [10645,]  222  228  236 #> [10646,]  222  228  236 #> [10647,]  222  228  236 #> [10648,]  222  228  235 #> [10649,]  222  228  236 #> [10650,]  222  228  236 #> [10651,]  222  228  236 #> [10652,]  222  228  236 #> [10653,]  222  228  236 #> [10654,]  222  228  236 #> [10655,]  222  228  236 #> [10656,]  222  228  236 #> [10657,]  222  228  236 #> [10658,]  223  229  236 #> [10659,]  222  228  236 #> [10660,]  222  228  236 #> [10661,]  222  228  236 #> [10662,]  222  228  236 #> [10663,]  222  228  235 #> [10664,]  223  229  236 #> [10665,]  222  228  236 #> [10666,]  223  229  236 #> [10667,]  222  228  236 #> [10668,]  222  228  236 #> [10669,]  222  228  236 #> [10670,]  222  228  235 #> [10671,]  222  228  236 #> [10672,]  222  228  236 #> [10673,]  222  228  236 #> [10674,]  222  228  236 #> [10675,]  222  228  235 #> [10676,]  222  228  236 #> [10677,]  223  229  236 #> [10678,]  222  228  235 #> [10679,]  222  228  235 #> [10680,]  222  228  236 #> [10681,]  223  229  236 #> [10682,]  222  228  236 #> [10683,]  222  228  236 #> [10684,]  222  228  236 #> [10685,]  222  228  236 #> [10686,]  222  228  236 #> [10687,]  223  229  236 #> [10688,]  222  228  236 #> [10689,]  222  228  236 #> [10690,]  222  228  236 #> [10691,]  222  228  236 #> [10692,]  222  228  236 #> [10693,]  222  228  236 #> [10694,]  222  228  235 #> [10695,]  222  228  235 #> [10696,]  222  228  236 #> [10697,]  222  228  236 #> [10698,]  222  228  236 #> [10699,]  222  228  236 #> [10700,]  223  229  235 #> [10701,]  225  231  237 #> [10702,]  225  231  237 #> [10703,]  224  230  237 #> [10704,]  224  230  238 #> [10705,]  224  230  237 #> [10706,]  224  230  237 #> [10707,]  225  231  237 #> [10708,]  225  231  237 #> [10709,]  224  230  237 #> [10710,]  224  230  238 #> [10711,]  224  230  237 #> [10712,]  225  231  237 #> [10713,]  225  231  237 #> [10714,]  224  230  237 #> [10715,]  225  231  238 #> [10716,]  225  231  237 #> [10717,]  224  230  237 #> [10718,]  225  231  238 #> [10719,]  225  231  237 #> [10720,]  225  231  237 #> [10721,]  224  230  238 #> [10722,]  225  231  237 #> [10723,]  225  231  238 #> [10724,]  224  230  237 #> [10725,]  224  230  238 #> [10726,]  225  231  237 #> [10727,]  225  231  237 #> [10728,]  224  230  237 #> [10729,]  225  231  237 #> [10730,]  225  231  237 #> [10731,]  224  230  237 #> [10732,]  224  230  237 #> [10733,]  225  231  237 #> [10734,]  224  230  237 #> [10735,]  224  230  237 #> [10736,]  225  231  237 #> [10737,]  225  231  237 #> [10738,]  225  231  237 #> [10739,]  224  230  238 #> [10740,]  224  230  237 #> [10741,]  225  231  237 #> [10742,]  224  230  237 #> [10743,]  225  231  238 #> [10744,]  225  231  237 #> [10745,]  225  231  238 #> [10746,]  225  231  237 #> [10747,]  224  230  237 #> [10748,]  224  230  237 #> [10749,]  225  231  237 #> [10750,]  225  231  237 #> [10751,]  225  231  237 #> [10752,]  224  230  237 #> [10753,]  225  231  238 #> [10754,]  224  230  237 #> [10755,]  225  231  237 #> [10756,]  225  231  237 #> [10757,]  224  230  237 #> [10758,]  225  231  237 #> [10759,]  225  231  237 #> [10760,]  225  231  237 #> [10761,]  225  231  238 #> [10762,]  224  230  237 #> [10763,]  225  231  237 #> [10764,]  225  231  237 #> [10765,]  224  230  237 #> [10766,]  225  231  237 #> [10767,]  224  230  237 #> [10768,]  225  231  237 #> [10769,]  225  231  237 #> [10770,]  224  230  237 #> [10771,]  225  231  237 #> [10772,]  224  230  238 #> [10773,]  224  230  238 #> [10774,]  224  230  238 #> [10775,]  225  231  238 #> [10776,]  224  230  238 #> [10777,]  225  231  238 #> [10778,]  225  231  237 #> [10779,]  224  230  237 #> [10780,]  225  231  237 #> [10781,]  225  231  237 #> [10782,]  224  230  237 #> [10783,]  225  231  237 #> [10784,]  225  231  238 #> [10785,]  225  231  237 #> [10786,]  224  230  237 #> [10787,]  225  231  237 #> [10788,]  224  230  237 #> [10789,]  224  230  237 #> [10790,]  225  231  237 #> [10791,]  224  230  237 #> [10792,]  224  230  237 #> [10793,]  225  231  237 #> [10794,]  224  230  238 #> [10795,]  225  231  238 #> [10796,]  225  231  237 #> [10797,]  225  231  237 #> [10798,]  224  230  237 #> [10799,]  224  230  237 #> [10800,]  225  231  238 #> [10801,]  226  232  239 #> [10802,]  227  233  240 #> [10803,]  226  232  239 #> [10804,]  226  232  239 #> [10805,]  227  233  240 #> [10806,]  226  232  239 #> [10807,]  227  233  240 #> [10808,]  226  232  239 #> [10809,]  227  233  240 #> [10810,]  227  233  240 #> [10811,]  226  232  239 #> [10812,]  227  233  240 #> [10813,]  227  233  240 #> [10814,]  226  232  239 #> [10815,]  226  232  239 #> [10816,]  226  232  239 #> [10817,]  227  233  240 #> [10818,]  227  233  240 #> [10819,]  226  232  239 #> [10820,]  227  233  240 #> [10821,]  227  233  240 #> [10822,]  227  233  240 #> [10823,]  227  233  240 #> [10824,]  227  233  240 #> [10825,]  227  233  240 #> [10826,]  226  232  239 #> [10827,]  227  233  240 #> [10828,]  226  232  239 #> [10829,]  227  233  240 #> [10830,]  227  233  240 #> [10831,]  227  233  240 #> [10832,]  227  233  240 #> [10833,]  227  233  240 #> [10834,]  226  232  239 #> [10835,]  226  232  239 #> [10836,]  227  233  240 #> [10837,]  226  232  239 #> [10838,]  226  232  239 #> [10839,]  227  233  240 #> [10840,]  227  233  240 #> [10841,]  227  233  240 #> [10842,]  226  232  239 #> [10843,]  226  232  239 #> [10844,]  227  233  240 #> [10845,]  226  232  239 #> [10846,]  226  232  239 #> [10847,]  227  233  240 #> [10848,]  227  233  240 #> [10849,]  226  232  239 #> [10850,]  227  233  240 #> [10851,]  227  233  240 #> [10852,]  226  232  239 #> [10853,]  227  233  240 #> [10854,]  227  233  240 #> [10855,]  226  232  239 #> [10856,]  226  232  239 #> [10857,]  226  232  239 #> [10858,]  227  233  240 #> [10859,]  226  232  239 #> [10860,]  227  233  240 #> [10861,]  227  233  240 #> [10862,]  226  232  239 #> [10863,]  227  233  240 #> [10864,]  226  232  239 #> [10865,]  226  232  239 #> [10866,]  227  233  240 #> [10867,]  226  232  239 #> [10868,]  226  232  239 #> [10869,]  226  232  239 #> [10870,]  227  233  240 #> [10871,]  227  233  240 #> [10872,]  226  232  239 #> [10873,]  226  232  239 #> [10874,]  227  233  240 #> [10875,]  227  233  240 #> [10876,]  227  233  240 #> [10877,]  226  232  239 #> [10878,]  227  233  240 #> [10879,]  226  232  239 #> [10880,]  227  233  240 #> [10881,]  227  233  240 #> [10882,]  226  232  239 #> [10883,]  227  233  240 #> [10884,]  227  233  240 #> [10885,]  226  232  239 #> [10886,]  227  233  240 #> [10887,]  227  233  240 #> [10888,]  227  233  240 #> [10889,]  226  232  239 #> [10890,]  227  233  240 #> [10891,]  226  232  239 #> [10892,]  227  233  240 #> [10893,]  227  233  240 #> [10894,]  226  232  239 #> [10895,]  227  233  240 #> [10896,]  226  232  239 #> [10897,]  226  232  239 #> [10898,]  226  232  239 #> [10899,]  227  233  240 #> [10900,]  226  232  239 #> [10901,]  228  234  241 #> [10902,]  228  234  241 #> [10903,]  228  234  241 #> [10904,]  228  234  241 #> [10905,]  228  234  241 #> [10906,]  229  235  242 #> [10907,]  228  234  241 #> [10908,]  229  235  242 #> [10909,]  229  235  242 #> [10910,]  228  234  241 #> [10911,]  228  234  241 #> [10912,]  229  235  242 #> [10913,]  228  234  241 #> [10914,]  228  234  241 #> [10915,]  229  235  242 #> [10916,]  228  234  241 #> [10917,]  228  234  241 #> [10918,]  228  234  241 #> [10919,]  228  234  241 #> [10920,]  229  235  242 #> [10921,]  228  234  241 #> [10922,]  228  234  241 #> [10923,]  228  234  241 #> [10924,]  228  234  241 #> [10925,]  228  234  241 #> [10926,]  229  235  242 #> [10927,]  228  234  241 #> [10928,]  228  234  241 #> [10929,]  228  234  241 #> [10930,]  228  234  241 #> [10931,]  228  234  241 #> [10932,]  228  234  241 #> [10933,]  229  235  242 #> [10934,]  228  234  241 #> [10935,]  228  234  241 #> [10936,]  228  234  241 #> [10937,]  228  234  241 #> [10938,]  228  234  241 #> [10939,]  228  234  241 #> [10940,]  228  234  241 #> [10941,]  228  234  241 #> [10942,]  228  234  241 #> [10943,]  229  235  242 #> [10944,]  228  234  241 #> [10945,]  229  235  242 #> [10946,]  229  235  242 #> [10947,]  228  234  241 #> [10948,]  228  234  241 #> [10949,]  228  234  241 #> [10950,]  228  234  241 #> [10951,]  229  235  242 #> [10952,]  228  234  241 #> [10953,]  228  234  241 #> [10954,]  228  234  241 #> [10955,]  228  234  241 #> [10956,]  229  235  242 #> [10957,]  229  235  242 #> [10958,]  229  235  242 #> [10959,]  228  234  241 #> [10960,]  228  234  241 #> [10961,]  229  235  242 #> [10962,]  228  234  241 #> [10963,]  228  234  241 #> [10964,]  229  235  242 #> [10965,]  229  235  242 #> [10966,]  229  235  242 #> [10967,]  228  234  241 #> [10968,]  229  235  242 #> [10969,]  228  234  241 #> [10970,]  228  234  241 #> [10971,]  228  234  241 #> [10972,]  229  235  242 #> [10973,]  228  234  241 #> [10974,]  228  234  241 #> [10975,]  228  234  241 #> [10976,]  229  235  242 #> [10977,]  228  234  241 #> [10978,]  228  234  241 #> [10979,]  228  234  241 #> [10980,]  228  234  241 #> [10981,]  229  235  242 #> [10982,]  228  234  241 #> [10983,]  228  234  241 #> [10984,]  228  234  241 #> [10985,]  228  234  241 #> [10986,]  228  234  241 #> [10987,]  228  234  241 #> [10988,]  228  234  241 #> [10989,]  228  234  241 #> [10990,]  228  234  241 #> [10991,]  228  234  241 #> [10992,]  229  235  242 #> [10993,]  228  234  241 #> [10994,]  229  235  242 #> [10995,]  228  234  241 #> [10996,]  229  235  242 #> [10997,]  229  235  242 #> [10998,]  228  234  241 #> [10999,]  228  234  241 #> [11000,]  228  234  241 #> [11001,]  231  237  243 #> [11002,]  230  236  244 #> [11003,]  230  236  244 #> [11004,]  230  236  244 #> [11005,]  231  237  243 #> [11006,]  230  236  244 #> [11007,]  230  236  244 #> [11008,]  230  236  244 #> [11009,]  230  236  244 #> [11010,]  231  237  243 #> [11011,]  231  237  243 #> [11012,]  231  237  243 #> [11013,]  230  236  244 #> [11014,]  231  237  243 #> [11015,]  231  237  243 #> [11016,]  230  236  244 #> [11017,]  231  237  243 #> [11018,]  231  237  243 #> [11019,]  230  236  244 #> [11020,]  230  236  244 #> [11021,]  230  236  244 #> [11022,]  231  237  243 #> [11023,]  230  236  244 #> [11024,]  230  236  244 #> [11025,]  230  236  244 #> [11026,]  231  237  243 #> [11027,]  231  237  243 #> [11028,]  230  236  244 #> [11029,]  230  236  244 #> [11030,]  230  236  244 #> [11031,]  231  237  243 #> [11032,]  231  237  243 #> [11033,]  230  236  244 #> [11034,]  230  236  244 #> [11035,]  230  236  244 #> [11036,]  230  236  244 #> [11037,]  230  236  244 #> [11038,]  231  237  243 #> [11039,]  231  237  243 #> [11040,]  230  236  244 #> [11041,]  230  236  244 #> [11042,]  230  236  244 #> [11043,]  231  237  243 #> [11044,]  230  236  244 #> [11045,]  230  236  244 #> [11046,]  230  236  244 #> [11047,]  231  237  243 #> [11048,]  230  236  244 #> [11049,]  230  236  244 #> [11050,]  230  236  244 #> [11051,]  230  236  244 #> [11052,]  231  237  243 #> [11053,]  230  236  244 #> [11054,]  230  236  244 #> [11055,]  230  236  244 #> [11056,]  230  236  244 #> [11057,]  230  236  244 #> [11058,]  231  237  243 #> [11059,]  231  237  243 #> [11060,]  230  236  244 #> [11061,]  231  237  243 #> [11062,]  230  236  244 #> [11063,]  230  236  244 #> [11064,]  230  236  244 #> [11065,]  230  236  244 #> [11066,]  231  237  243 #> [11067,]  230  236  244 #> [11068,]  231  237  243 #> [11069,]  230  236  244 #> [11070,]  231  237  243 #> [11071,]  231  237  243 #> [11072,]  230  236  244 #> [11073,]  230  236  244 #> [11074,]  230  236  244 #> [11075,]  231  237  243 #> [11076,]  230  236  244 #> [11077,]  231  237  243 #> [11078,]  230  236  244 #> [11079,]  231  237  243 #> [11080,]  230  236  244 #> [11081,]  230  236  244 #> [11082,]  230  236  244 #> [11083,]  231  237  243 #> [11084,]  230  236  244 #> [11085,]  230  236  244 #> [11086,]  230  236  244 #> [11087,]  231  237  243 #> [11088,]  230  236  244 #> [11089,]  230  236  244 #> [11090,]  231  237  243 #> [11091,]  231  237  243 #> [11092,]  231  237  243 #> [11093,]  230  236  244 #> [11094,]  230  236  244 #> [11095,]  231  237  243 #> [11096,]  231  237  243 #> [11097,]  230  236  244 #> [11098,]  230  236  244 #> [11099,]  230  236  244 #> [11100,]  231  237  243 #> [11101,]  233  239  246 #> [11102,]  233  239  246 #> [11103,]  232  238  245 #> [11104,]  233  239  246 #> [11105,]  233  239  246 #> [11106,]  232  238  245 #> [11107,]  232  238  245 #> [11108,]  233  239  246 #> [11109,]  233  239  246 #> [11110,]  233  239  246 #> [11111,]  233  239  246 #> [11112,]  233  239  246 #> [11113,]  233  239  246 #> [11114,]  233  239  246 #> [11115,]  233  239  246 #> [11116,]  233  239  246 #> [11117,]  233  239  246 #> [11118,]  233  239  246 #> [11119,]  233  239  246 #> [11120,]  232  238  245 #> [11121,]  232  238  245 #> [11122,]  233  239  246 #> [11123,]  232  238  245 #> [11124,]  233  239  246 #> [11125,]  232  238  245 #> [11126,]  233  239  246 #> [11127,]  233  239  246 #> [11128,]  233  239  246 #> [11129,]  233  239  246 #> [11130,]  233  239  246 #> [11131,]  233  239  246 #> [11132,]  233  239  246 #> [11133,]  233  239  246 #> [11134,]  232  238  245 #> [11135,]  232  238  245 #> [11136,]  233  239  246 #> [11137,]  232  238  245 #> [11138,]  233  239  246 #> [11139,]  233  239  246 #> [11140,]  233  239  246 #> [11141,]  233  239  246 #> [11142,]  232  238  245 #> [11143,]  233  239  246 #> [11144,]  232  238  245 #> [11145,]  233  239  246 #> [11146,]  233  239  246 #> [11147,]  233  239  246 #> [11148,]  233  239  246 #> [11149,]  233  239  246 #> [11150,]  233  239  246 #> [11151,]  233  239  246 #> [11152,]  233  239  246 #> [11153,]  232  238  245 #> [11154,]  233  239  246 #> [11155,]  233  239  246 #> [11156,]  232  238  245 #> [11157,]  232  238  245 #> [11158,]  233  239  246 #> [11159,]  233  239  246 #> [11160,]  233  239  246 #> [11161,]  233  239  246 #> [11162,]  233  239  246 #> [11163,]  233  239  246 #> [11164,]  233  239  246 #> [11165,]  232  238  245 #> [11166,]  233  239  246 #> [11167,]  233  239  246 #> [11168,]  233  239  246 #> [11169,]  233  239  246 #> [11170,]  233  239  246 #> [11171,]  233  239  246 #> [11172,]  233  239  246 #> [11173,]  232  238  245 #> [11174,]  232  238  245 #> [11175,]  233  239  246 #> [11176,]  233  239  246 #> [11177,]  233  239  246 #> [11178,]  233  239  246 #> [11179,]  233  239  246 #> [11180,]  232  238  245 #> [11181,]  233  239  246 #> [11182,]  232  238  245 #> [11183,]  233  239  246 #> [11184,]  232  238  245 #> [11185,]  232  238  245 #> [11186,]  232  238  245 #> [11187,]  233  239  246 #> [11188,]  233  239  246 #> [11189,]  232  238  245 #> [11190,]  233  239  246 #> [11191,]  233  239  246 #> [11192,]  233  239  246 #> [11193,]  233  239  246 #> [11194,]  232  238  245 #> [11195,]  233  239  246 #> [11196,]  233  239  246 #> [11197,]  233  239  246 #> [11198,]  232  238  245 #> [11199,]  232  238  245 #> [11200,]  233  239  246 #> [11201,]  234  241  247 #> [11202,]  235  240  247 #> [11203,]  235  240  247 #> [11204,]  234  241  247 #> [11205,]  234  241  247 #> [11206,]  235  240  247 #> [11207,]  235  240  247 #> [11208,]  234  242  247 #> [11209,]  234  241  247 #> [11210,]  234  241  247 #> [11211,]  234  241  247 #> [11212,]  235  240  247 #> [11213,]  234  242  247 #> [11214,]  234  241  247 #> [11215,]  234  242  247 #> [11216,]  234  242  247 #> [11217,]  234  241  247 #> [11218,]  235  240  247 #> [11219,]  235  240  247 #> [11220,]  235  240  247 #> [11221,]  234  241  247 #> [11222,]  234  242  247 #> [11223,]  235  240  247 #> [11224,]  234  241  247 #> [11225,]  235  240  247 #> [11226,]  234  242  247 #> [11227,]  234  242  247 #> [11228,]  235  240  247 #> [11229,]  234  242  247 #> [11230,]  234  242  247 #> [11231,]  235  240  247 #> [11232,]  235  240  247 #> [11233,]  235  240  247 #> [11234,]  235  240  247 #> [11235,]  234  241  247 #> [11236,]  234  242  247 #> [11237,]  234  242  247 #> [11238,]  234  242  247 #> [11239,]  234  241  247 #> [11240,]  235  240  247 #> [11241,]  234  242  247 #> [11242,]  235  240  247 #> [11243,]  234  242  247 #> [11244,]  234  242  247 #> [11245,]  234  241  247 #> [11246,]  234  242  247 #> [11247,]  234  241  247 #> [11248,]  235  240  247 #> [11249,]  234  241  247 #> [11250,]  234  242  247 #> [11251,]  234  242  247 #> [11252,]  234  241  247 #> [11253,]  234  242  247 #> [11254,]  234  241  247 #> [11255,]  234  242  247 #> [11256,]  235  240  247 #> [11257,]  234  241  247 #> [11258,]  234  242  247 #> [11259,]  234  242  247 #> [11260,]  235  240  247 #> [11261,]  235  240  247 #> [11262,]  234  241  247 #> [11263,]  234  241  247 #> [11264,]  235  240  247 #> [11265,]  235  240  247 #> [11266,]  234  242  247 #> [11267,]  234  241  247 #> [11268,]  234  242  247 #> [11269,]  234  242  247 #> [11270,]  235  240  247 #> [11271,]  235  240  247 #> [11272,]  234  241  247 #> [11273,]  235  240  247 #> [11274,]  234  241  247 #> [11275,]  234  241  247 #> [11276,]  234  241  247 #> [11277,]  234  242  247 #> [11278,]  235  240  247 #> [11279,]  234  241  247 #> [11280,]  234  242  247 #> [11281,]  234  242  247 #> [11282,]  234  241  247 #> [11283,]  234  242  247 #> [11284,]  235  240  247 #> [11285,]  234  242  247 #> [11286,]  234  241  247 #> [11287,]  234  242  247 #> [11288,]  234  241  247 #> [11289,]  234  241  247 #> [11290,]  234  242  247 #> [11291,]  234  241  247 #> [11292,]  234  241  247 #> [11293,]  235  240  247 #> [11294,]  234  241  247 #> [11295,]  234  242  247 #> [11296,]  234  242  247 #> [11297,]  235  240  247 #> [11298,]  235  240  247 #> [11299,]  234  241  247 #> [11300,]  235  240  247 #> [11301,]  237  244  249 #> [11302,]  236  243  248 #> [11303,]  236  243  248 #> [11304,]  236  243  248 #> [11305,]  236  243  248 #> [11306,]  237  244  249 #> [11307,]  236  243  248 #> [11308,]  236  243  248 #> [11309,]  236  243  248 #> [11310,]  236  243  248 #> [11311,]  236  243  248 #> [11312,]  236  243  248 #> [11313,]  237  244  249 #> [11314,]  237  244  249 #> [11315,]  237  244  249 #> [11316,]  237  244  249 #> [11317,]  237  244  249 #> [11318,]  236  243  248 #> [11319,]  236  243  248 #> [11320,]  236  243  248 #> [11321,]  237  244  249 #> [11322,]  236  243  248 #> [11323,]  236  243  248 #> [11324,]  236  243  248 #> [11325,]  236  243  248 #> [11326,]  236  243  248 #> [11327,]  236  243  248 #> [11328,]  236  243  248 #> [11329,]  237  244  249 #> [11330,]  236  243  248 #> [11331,]  236  243  248 #> [11332,]  236  243  248 #> [11333,]  237  244  249 #> [11334,]  236  243  248 #> [11335,]  236  243  248 #> [11336,]  236  243  248 #> [11337,]  236  243  248 #> [11338,]  236  243  248 #> [11339,]  236  243  248 #> [11340,]  236  243  248 #> [11341,]  237  244  249 #> [11342,]  236  243  248 #> [11343,]  236  243  248 #> [11344,]  237  244  249 #> [11345,]  236  243  248 #> [11346,]  236  243  248 #> [11347,]  236  243  248 #> [11348,]  236  243  248 #> [11349,]  236  243  248 #> [11350,]  237  244  249 #> [11351,]  236  243  248 #> [11352,]  236  243  248 #> [11353,]  236  243  248 #> [11354,]  236  243  248 #> [11355,]  236  243  248 #> [11356,]  236  243  248 #> [11357,]  236  243  248 #> [11358,]  236  243  248 #> [11359,]  237  244  249 #> [11360,]  236  243  248 #> [11361,]  237  244  249 #> [11362,]  236  243  248 #> [11363,]  236  243  248 #> [11364,]  236  243  248 #> [11365,]  236  243  248 #> [11366,]  236  243  248 #> [11367,]  236  243  248 #> [11368,]  237  244  249 #> [11369,]  236  243  248 #> [11370,]  237  244  249 #> [11371,]  236  243  248 #> [11372,]  236  243  248 #> [11373,]  237  244  249 #> [11374,]  236  243  248 #> [11375,]  236  243  248 #> [11376,]  237  244  249 #> [11377,]  236  243  248 #> [11378,]  236  243  248 #> [11379,]  236  243  248 #> [11380,]  236  243  248 #> [11381,]  237  244  249 #> [11382,]  236  243  248 #> [11383,]  237  244  249 #> [11384,]  236  243  248 #> [11385,]  236  243  248 #> [11386,]  237  244  249 #> [11387,]  236  243  248 #> [11388,]  236  243  248 #> [11389,]  236  243  248 #> [11390,]  236  243  248 #> [11391,]  236  243  248 #> [11392,]  236  243  248 #> [11393,]  237  244  249 #> [11394,]  236  243  248 #> [11395,]  236  243  248 #> [11396,]  237  244  249 #> [11397,]  236  243  248 #> [11398,]  236  243  248 #> [11399,]  237  244  249 #> [11400,]  236  243  248 #> [11401,]  239  246  250 #> [11402,]  238  245  250 #> [11403,]  238  245  250 #> [11404,]  238  245  250 #> [11405,]  238  245  250 #> [11406,]  238  245  250 #> [11407,]  238  245  250 #> [11408,]  238  245  250 #> [11409,]  239  246  250 #> [11410,]  238  245  250 #> [11411,]  238  245  250 #> [11412,]  238  245  250 #> [11413,]  239  246  250 #> [11414,]  238  245  250 #> [11415,]  238  245  250 #> [11416,]  238  245  250 #> [11417,]  239  246  250 #> [11418,]  239  246  250 #> [11419,]  238  245  250 #> [11420,]  239  246  251 #> [11421,]  238  245  250 #> [11422,]  238  245  250 #> [11423,]  238  245  250 #> [11424,]  238  245  251 #> [11425,]  238  245  250 #> [11426,]  238  245  250 #> [11427,]  239  246  250 #> [11428,]  238  245  251 #> [11429,]  238  245  250 #> [11430,]  238  245  250 #> [11431,]  238  245  250 #> [11432,]  238  245  250 #> [11433,]  239  246  250 #> [11434,]  238  245  250 #> [11435,]  238  245  250 #> [11436,]  239  246  250 #> [11437,]  238  245  250 #> [11438,]  239  246  250 #> [11439,]  238  245  250 #> [11440,]  238  245  250 #> [11441,]  238  245  250 #> [11442,]  239  246  250 #> [11443,]  238  245  250 #> [11444,]  238  245  250 #> [11445,]  238  245  250 #> [11446,]  238  245  250 #> [11447,]  238  245  250 #> [11448,]  238  245  250 #> [11449,]  238  245  250 #> [11450,]  238  245  251 #> [11451,]  239  246  250 #> [11452,]  238  245  251 #> [11453,]  239  246  250 #> [11454,]  239  246  250 #> [11455,]  238  245  250 #> [11456,]  239  246  250 #> [11457,]  238  245  250 #> [11458,]  238  245  250 #> [11459,]  238  245  250 #> [11460,]  238  245  250 #> [11461,]  238  245  250 #> [11462,]  239  246  250 #> [11463,]  238  245  250 #> [11464,]  238  245  250 #> [11465,]  239  246  250 #> [11466,]  239  246  250 #> [11467,]  238  245  250 #> [11468,]  238  245  250 #> [11469,]  238  245  250 #> [11470,]  238  245  250 #> [11471,]  238  245  250 #> [11472,]  238  245  250 #> [11473,]  238  245  250 #> [11474,]  238  245  250 #> [11475,]  238  245  250 #> [11476,]  238  245  251 #> [11477,]  239  246  250 #> [11478,]  238  245  250 #> [11479,]  239  246  250 #> [11480,]  238  245  250 #> [11481,]  238  245  250 #> [11482,]  239  246  250 #> [11483,]  239  246  250 #> [11484,]  239  246  250 #> [11485,]  239  246  250 #> [11486,]  238  245  251 #> [11487,]  239  246  250 #> [11488,]  238  245  250 #> [11489,]  238  245  250 #> [11490,]  238  245  250 #> [11491,]  239  246  250 #> [11492,]  238  245  250 #> [11493,]  239  246  250 #> [11494,]  239  246  250 #> [11495,]  238  245  250 #> [11496,]  238  245  250 #> [11497,]  238  245  250 #> [11498,]  238  245  250 #> [11499,]  238  245  250 #> [11500,]  238  245  250 #> [11501,]  240  248  252 #> [11502,]  240  248  252 #> [11503,]  240  248  252 #> [11504,]  241  248  252 #> [11505,]  240  248  252 #> [11506,]  240  248  252 #> [11507,]  240  248  252 #> [11508,]  240  248  252 #> [11509,]  240  248  252 #> [11510,]  241  248  252 #> [11511,]  240  248  252 #> [11512,]  240  247  252 #> [11513,]  240  248  252 #> [11514,]  240  247  252 #> [11515,]  241  248  252 #> [11516,]  241  248  252 #> [11517,]  240  248  252 #> [11518,]  241  248  252 #> [11519,]  240  248  252 #> [11520,]  240  248  252 #> [11521,]  241  248  252 #> [11522,]  240  248  252 #> [11523,]  241  248  252 #> [11524,]  240  248  252 #> [11525,]  241  248  252 #> [11526,]  240  247  252 #> [11527,]  241  248  252 #> [11528,]  240  248  252 #> [11529,]  240  248  252 #> [11530,]  240  248  252 #> [11531,]  240  248  252 #> [11532,]  240  247  252 #> [11533,]  240  248  252 #> [11534,]  240  248  252 #> [11535,]  240  248  252 #> [11536,]  240  248  252 #> [11537,]  240  248  252 #> [11538,]  240  248  252 #> [11539,]  241  248  252 #> [11540,]  240  248  252 #> [11541,]  240  248  252 #> [11542,]  240  248  252 #> [11543,]  241  248  252 #> [11544,]  240  248  252 #> [11545,]  241  248  252 #> [11546,]  240  248  252 #> [11547,]  240  248  252 #> [11548,]  240  248  252 #> [11549,]  240  248  252 #> [11550,]  240  248  252 #> [11551,]  240  248  252 #> [11552,]  240  248  252 #> [11553,]  241  248  252 #> [11554,]  240  248  252 #> [11555,]  240  248  252 #> [11556,]  240  248  252 #> [11557,]  240  248  252 #> [11558,]  240  248  252 #> [11559,]  240  248  252 #> [11560,]  240  248  252 #> [11561,]  241  248  252 #> [11562,]  240  248  252 #> [11563,]  240  248  252 #> [11564,]  240  248  252 #> [11565,]  240  248  252 #> [11566,]  240  248  252 #> [11567,]  240  248  252 #> [11568,]  240  248  252 #> [11569,]  240  247  252 #> [11570,]  240  248  252 #> [11571,]  240  248  252 #> [11572,]  241  248  252 #> [11573,]  241  248  252 #> [11574,]  241  248  252 #> [11575,]  241  248  252 #> [11576,]  241  248  252 #> [11577,]  241  248  252 #> [11578,]  240  248  252 #> [11579,]  240  248  252 #> [11580,]  240  247  252 #> [11581,]  240  248  252 #> [11582,]  240  248  252 #> [11583,]  240  248  252 #> [11584,]  241  248  252 #> [11585,]  240  248  252 #> [11586,]  240  248  252 #> [11587,]  240  248  252 #> [11588,]  240  248  252 #> [11589,]  240  248  252 #> [11590,]  240  248  252 #> [11591,]  240  248  252 #> [11592,]  240  248  252 #> [11593,]  240  248  252 #> [11594,]  241  248  252 #> [11595,]  241  248  252 #> [11596,]  240  248  252 #> [11597,]  240  248  252 #> [11598,]  240  248  252 #> [11599,]  240  248  252 #> [11600,]  241  248  252 #> [11601,]  242  249  253 #> [11602,]  243  250  254 #> [11603,]  242  249  253 #> [11604,]  242  249  253 #> [11605,]  243  250  254 #> [11606,]  242  249  253 #> [11607,]  243  250  254 #> [11608,]  242  249  253 #> [11609,]  243  250  254 #> [11610,]  243  250  254 #> [11611,]  242  249  253 #> [11612,]  243  250  254 #> [11613,]  243  250  254 #> [11614,]  242  249  253 #> [11615,]  243  250  254 #> [11616,]  242  249  253 #> [11617,]  243  250  254 #> [11618,]  243  250  254 #> [11619,]  242  249  253 #> [11620,]  243  250  254 #> [11621,]  243  250  254 #> [11622,]  243  250  254 #> [11623,]  243  250  254 #> [11624,]  243  250  254 #> [11625,]  243  250  254 #> [11626,]  242  249  253 #> [11627,]  243  250  254 #> [11628,]  242  249  253 #> [11629,]  243  250  254 #> [11630,]  243  250  254 #> [11631,]  243  250  254 #> [11632,]  243  250  254 #> [11633,]  243  250  254 #> [11634,]  242  249  253 #> [11635,]  242  249  253 #> [11636,]  243  250  254 #> [11637,]  242  249  253 #> [11638,]  242  249  253 #> [11639,]  243  250  254 #> [11640,]  243  250  254 #> [11641,]  243  250  254 #> [11642,]  242  249  253 #> [11643,]  243  250  254 #> [11644,]  243  250  254 #> [11645,]  242  249  253 #> [11646,]  242  249  253 #> [11647,]  243  250  254 #> [11648,]  243  250  254 #> [11649,]  242  249  253 #> [11650,]  243  250  254 #> [11651,]  243  250  254 #> [11652,]  242  249  253 #> [11653,]  243  250  254 #> [11654,]  243  250  254 #> [11655,]  242  249  253 #> [11656,]  242  249  253 #> [11657,]  242  249  253 #> [11658,]  243  250  254 #> [11659,]  242  249  253 #> [11660,]  243  250  254 #> [11661,]  243  250  254 #> [11662,]  242  249  253 #> [11663,]  243  250  254 #> [11664,]  242  249  253 #> [11665,]  242  249  253 #> [11666,]  243  250  254 #> [11667,]  243  250  254 #> [11668,]  242  249  253 #> [11669,]  242  249  253 #> [11670,]  243  250  254 #> [11671,]  243  250  254 #> [11672,]  242  249  253 #> [11673,]  242  249  253 #> [11674,]  243  250  254 #> [11675,]  243  250  254 #> [11676,]  243  250  254 #> [11677,]  242  249  253 #> [11678,]  243  250  254 #> [11679,]  242  249  253 #> [11680,]  243  250  254 #> [11681,]  243  250  254 #> [11682,]  242  249  253 #> [11683,]  243  250  254 #> [11684,]  243  250  254 #> [11685,]  243  250  254 #> [11686,]  243  250  254 #> [11687,]  243  250  254 #> [11688,]  243  250  254 #> [11689,]  242  249  253 #> [11690,]  243  250  254 #> [11691,]  242  249  253 #> [11692,]  243  250  254 #> [11693,]  243  250  254 #> [11694,]  242  249  253 #> [11695,]  243  250  254 #> [11696,]  242  249  253 #> [11697,]  242  249  253 #> [11698,]  243  250  254 #> [11699,]  243  250  254 #> [11700,]  242  249  253 #> [11701,]  244  252  256 #> [11702,]  244  251  255 #> [11703,]  244  251  255 #> [11704,]  244  251  255 #> [11705,]  244  251  255 #> [11706,]  244  251  255 #> [11707,]  244  251  255 #> [11708,]  244  251  255 #> [11709,]  244  251  255 #> [11710,]  244  251  255 #> [11711,]  244  251  255 #> [11712,]  244  251  255 #> [11713,]  244  252  256 #> [11714,]  244  252  256 #> [11715,]  244  252  256 #> [11716,]  244  252  256 #> [11717,]  244  251  255 #> [11718,]  244  251  255 #> [11719,]  244  251  255 #> [11720,]  244  251  255 #> [11721,]  244  252  256 #> [11722,]  244  251  255 #> [11723,]  244  251  255 #> [11724,]  244  251  255 #> [11725,]  244  251  255 #> [11726,]  244  251  255 #> [11727,]  244  251  255 #> [11728,]  244  251  255 #> [11729,]  244  252  256 #> [11730,]  244  251  255 #> [11731,]  244  251  255 #> [11732,]  244  251  255 #> [11733,]  244  252  256 #> [11734,]  244  251  255 #> [11735,]  244  251  255 #> [11736,]  244  251  255 #> [11737,]  244  251  255 #> [11738,]  244  251  255 #> [11739,]  244  251  255 #> [11740,]  244  251  255 #> [11741,]  244  252  256 #> [11742,]  244  251  255 #> [11743,]  244  251  255 #> [11744,]  244  252  256 #> [11745,]  244  251  255 #> [11746,]  244  251  255 #> [11747,]  244  251  255 #> [11748,]  244  251  255 #> [11749,]  244  251  255 #> [11750,]  244  252  256 #> [11751,]  244  251  255 #> [11752,]  244  251  255 #> [11753,]  244  251  255 #> [11754,]  244  251  255 #> [11755,]  244  251  255 #> [11756,]  244  251  255 #> [11757,]  244  251  255 #> [11758,]  244  251  255 #> [11759,]  244  252  256 #> [11760,]  244  251  255 #> [11761,]  244  251  255 #> [11762,]  244  251  255 #> [11763,]  244  251  255 #> [11764,]  244  251  255 #> [11765,]  244  251  255 #> [11766,]  244  251  255 #> [11767,]  244  251  255 #> [11768,]  244  252  256 #> [11769,]  244  251  255 #> [11770,]  244  252  256 #> [11771,]  244  251  255 #> [11772,]  244  251  255 #> [11773,]  244  252  256 #> [11774,]  244  251  255 #> [11775,]  244  251  255 #> [11776,]  244  251  255 #> [11777,]  244  251  255 #> [11778,]  244  251  255 #> [11779,]  244  251  255 #> [11780,]  244  251  255 #> [11781,]  244  251  255 #> [11782,]  244  251  255 #> [11783,]  244  251  255 #> [11784,]  244  251  255 #> [11785,]  244  251  255 #> [11786,]  244  251  255 #> [11787,]  244  251  255 #> [11788,]  244  251  255 #> [11789,]  244  251  255 #> [11790,]  244  251  255 #> [11791,]  244  251  255 #> [11792,]  244  251  255 #> [11793,]  244  251  255 #> [11794,]  244  251  255 #> [11795,]  244  251  255 #> [11796,]  244  252  256 #> [11797,]  244  251  255 #> [11798,]  244  251  255 #> [11799,]  244  252  256 #> [11800,]  244  251  255 #> [11801,]  246  253  259 #> [11802,]  246  253  259 #> [11803,]  245  253  259 #> [11804,]  245  254  257 #> [11805,]  245  253  259 #> [11806,]  246  253  259 #> [11807,]  246  254  257 #> [11808,]  245  253  259 #> [11809,]  245  254  257 #> [11810,]  245  254  257 #> [11811,]  246  253  259 #> [11812,]  245  253  259 #> [11813,]  246  253  259 #> [11814,]  246  254  257 #> [11815,]  246  253  258 #> [11816,]  246  254  257 #> [11817,]  246  253  259 #> [11818,]  245  253  259 #> [11819,]  246  253  259 #> [11820,]  245  254  257 #> [11821,]  246  253  259 #> [11822,]  246  254  257 #> [11823,]  245  253  259 #> [11824,]  245  254  257 #> [11825,]  245  254  257 #> [11826,]  246  253  259 #> [11827,]  246  253  259 #> [11828,]  245  254  257 #> [11829,]  246  253  259 #> [11830,]  245  253  259 #> [11831,]  245  253  258 #> [11832,]  245  253  259 #> [11833,]  246  253  259 #> [11834,]  245  253  259 #> [11835,]  246  253  259 #> [11836,]  245  254  257 #> [11837,]  246  253  259 #> [11838,]  245  253  259 #> [11839,]  245  254  257 #> [11840,]  246  253  259 #> [11841,]  246  253  259 #> [11842,]  245  253  258 #> [11843,]  245  253  258 #> [11844,]  246  253  259 #> [11845,]  245  253  259 #> [11846,]  245  253  259 #> [11847,]  246  253  259 #> [11848,]  245  253  259 #> [11849,]  245  253  259 #> [11850,]  246  254  257 #> [11851,]  245  253  259 #> [11852,]  246  254  257 #> [11853,]  245  253  259 #> [11854,]  245  254  257 #> [11855,]  246  254  257 #> [11856,]  245  253  259 #> [11857,]  245  254  257 #> [11858,]  246  253  259 #> [11859,]  246  254  257 #> [11860,]  245  253  259 #> [11861,]  246  253  259 #> [11862,]  245  253  259 #> [11863,]  245  253  258 #> [11864,]  245  253  259 #> [11865,]  245  253  259 #> [11866,]  245  253  259 #> [11867,]  245  254  257 #> [11868,]  246  253  259 #> [11869,]  246  253  259 #> [11870,]  246  253  259 #> [11871,]  246  253  259 #> [11872,]  245  253  259 #> [11873,]  246  254  257 #> [11874,]  246  253  259 #> [11875,]  246  253  258 #> [11876,]  246  254  257 #> [11877,]  246  253  259 #> [11878,]  245  253  259 #> [11879,]  246  253  259 #> [11880,]  245  253  259 #> [11881,]  246  253  259 #> [11882,]  245  253  259 #> [11883,]  246  253  259 #> [11884,]  246  253  259 #> [11885,]  245  253  259 #> [11886,]  246  254  257 #> [11887,]  246  253  259 #> [11888,]  245  253  259 #> [11889,]  245  253  259 #> [11890,]  246  254  257 #> [11891,]  245  254  257 #> [11892,]  246  253  259 #> [11893,]  246  253  259 #> [11894,]  246  253  259 #> [11895,]  245  253  259 #> [11896,]  246  253  259 #> [11897,]  246  253  259 #> [11898,]  246  253  259 #> [11899,]  246  253  259 #> [11900,]  246  253  259 #> [11901,]  248  256  261 #> [11902,]  247  255  260 #> [11903,]  248  256  261 #> [11904,]  248  256  261 #> [11905,]  248  256  261 #> [11906,]  247  255  260 #> [11907,]  248  256  261 #> [11908,]  248  256  261 #> [11909,]  248  256  261 #> [11910,]  248  256  261 #> [11911,]  247  255  260 #> [11912,]  247  255  260 #> [11913,]  248  256  261 #> [11914,]  248  256  261 #> [11915,]  247  255  260 #> [11916,]  248  256  261 #> [11917,]  247  255  260 #> [11918,]  247  255  260 #> [11919,]  247  255  260 #> [11920,]  248  256  261 #> [11921,]  247  255  260 #> [11922,]  248  256  261 #> [11923,]  247  255  260 #> [11924,]  248  256  261 #> [11925,]  248  256  261 #> [11926,]  247  255  260 #> [11927,]  248  256  261 #> [11928,]  248  256  261 #> [11929,]  247  255  260 #> [11930,]  247  255  260 #> [11931,]  247  255  260 #> [11932,]  247  255  260 #> [11933,]  248  256  261 #> [11934,]  247  255  260 #> [11935,]  247  255  260 #> [11936,]  248  256  261 #> [11937,]  247  255  260 #> [11938,]  247  255  260 #> [11939,]  248  256  261 #> [11940,]  247  255  260 #> [11941,]  248  256  261 #> [11942,]  247  255  260 #> [11943,]  247  255  260 #> [11944,]  247  255  260 #> [11945,]  248  256  261 #> [11946,]  247  255  260 #> [11947,]  247  255  260 #> [11948,]  247  255  260 #> [11949,]  248  256  261 #> [11950,]  248  256  261 #> [11951,]  247  255  260 #> [11952,]  248  256  261 #> [11953,]  248  256  261 #> [11954,]  248  256  261 #> [11955,]  248  256  261 #> [11956,]  247  255  260 #> [11957,]  248  256  261 #> [11958,]  248  256  261 #> [11959,]  248  256  261 #> [11960,]  247  255  260 #> [11961,]  247  255  260 #> [11962,]  247  255  260 #> [11963,]  247  255  260 #> [11964,]  247  255  260 #> [11965,]  247  255  260 #> [11966,]  247  255  260 #> [11967,]  248  256  261 #> [11968,]  247  255  260 #> [11969,]  247  255  260 #> [11970,]  247  255  260 #> [11971,]  248  256  261 #> [11972,]  248  256  261 #> [11973,]  248  256  261 #> [11974,]  248  256  261 #> [11975,]  247  255  260 #> [11976,]  248  256  261 #> [11977,]  248  256  261 #> [11978,]  247  255  260 #> [11979,]  247  255  260 #> [11980,]  248  256  261 #> [11981,]  247  255  260 #> [11982,]  247  255  260 #> [11983,]  247  255  260 #> [11984,]  248  256  261 #> [11985,]  248  256  261 #> [11986,]  248  256  261 #> [11987,]  248  256  261 #> [11988,]  248  256  261 #> [11989,]  247  255  260 #> [11990,]  248  256  261 #> [11991,]  248  256  261 #> [11992,]  247  255  260 #> [11993,]  247  255  260 #> [11994,]  247  255  260 #> [11995,]  247  255  260 #> [11996,]  247  255  260 #> [11997,]  247  255  260 #> [11998,]  247  255  260 #> [11999,]  247  255  260 #> [12000,]  247  255  260 #> [12001,]  250  258  263 #> [12002,]  250  258  263 #> [12003,]  250  258  262 #> [12004,]  250  258  262 #> [12005,]  250  258  263 #> [12006,]  249  257  263 #> [12007,]  250  258  262 #> [12008,]  250  258  262 #> [12009,]  250  258  263 #> [12010,]  250  258  263 #> [12011,]  250  258  263 #> [12012,]  250  258  262 #> [12013,]  250  258  263 #> [12014,]  250  258  263 #> [12015,]  250  258  263 #> [12016,]  250  258  263 #> [12017,]  250  258  263 #> [12018,]  250  258  263 #> [12019,]  250  258  263 #> [12020,]  249  257  263 #> [12021,]  249  257  263 #> [12022,]  250  258  263 #> [12023,]  250  258  262 #> [12024,]  250  258  263 #> [12025,]  249  257  262 #> [12026,]  250  258  263 #> [12027,]  250  258  263 #> [12028,]  250  258  263 #> [12029,]  250  258  263 #> [12030,]  250  258  263 #> [12031,]  250  258  262 #> [12032,]  250  258  263 #> [12033,]  250  258  263 #> [12034,]  250  258  263 #> [12035,]  249  257  263 #> [12036,]  250  258  263 #> [12037,]  250  258  262 #> [12038,]  250  258  263 #> [12039,]  250  258  263 #> [12040,]  250  258  262 #> [12041,]  250  258  263 #> [12042,]  249  257  263 #> [12043,]  250  258  263 #> [12044,]  249  257  263 #> [12045,]  250  258  263 #> [12046,]  250  258  263 #> [12047,]  250  258  262 #> [12048,]  250  258  263 #> [12049,]  250  258  263 #> [12050,]  250  258  263 #> [12051,]  250  258  263 #> [12052,]  250  258  262 #> [12053,]  249  257  263 #> [12054,]  250  258  263 #> [12055,]  250  258  263 #> [12056,]  249  257  263 #> [12057,]  250  258  262 #> [12058,]  250  258  263 #> [12059,]  250  258  262 #> [12060,]  250  258  262 #> [12061,]  250  258  263 #> [12062,]  250  258  263 #> [12063,]  250  258  263 #> [12064,]  250  258  263 #> [12065,]  249  257  263 #> [12066,]  250  258  263 #> [12067,]  250  258  263 #> [12068,]  250  258  262 #> [12069,]  250  258  263 #> [12070,]  250  258  263 #> [12071,]  250  258  263 #> [12072,]  250  258  263 #> [12073,]  249  257  263 #> [12074,]  249  257  263 #> [12075,]  250  258  263 #> [12076,]  250  258  263 #> [12077,]  250  258  263 #> [12078,]  250  258  263 #> [12079,]  250  258  263 #> [12080,]  249  257  262 #> [12081,]  250  258  263 #> [12082,]  249  257  263 #> [12083,]  250  258  263 #> [12084,]  249  257  263 #> [12085,]  249  257  263 #> [12086,]  249  257  262 #> [12087,]  250  258  263 #> [12088,]  250  258  263 #> [12089,]  249  257  263 #> [12090,]  250  258  263 #> [12091,]  250  258  263 #> [12092,]  250  258  263 #> [12093,]  250  258  263 #> [12094,]  249  257  263 #> [12095,]  250  258  263 #> [12096,]  250  258  262 #> [12097,]  250  258  262 #> [12098,]  250  258  262 #> [12099,]  249  257  263 #> [12100,]  250  258  263 #> [12101,]  252  260  264 #> [12102,]  252  260  264 #> [12103,]  252  260  265 #> [12104,]  251  259  264 #> [12105,]  252  260  264 #> [12106,]  252  260  265 #> [12107,]  252  260  264 #> [12108,]  251  259  264 #> [12109,]  251  259  264 #> [12110,]  252  260  264 #> [12111,]  252  260  264 #> [12112,]  252  260  264 #> [12113,]  252  260  264 #> [12114,]  252  260  264 #> [12115,]  252  260  264 #> [12116,]  252  260  264 #> [12117,]  251  259  264 #> [12118,]  252  260  264 #> [12119,]  252  260  264 #> [12120,]  252  260  264 #> [12121,]  252  260  264 #> [12122,]  252  260  264 #> [12123,]  252  260  264 #> [12124,]  252  260  264 #> [12125,]  252  260  264 #> [12126,]  252  260  264 #> [12127,]  251  259  264 #> [12128,]  252  260  264 #> [12129,]  252  260  264 #> [12130,]  252  260  264 #> [12131,]  252  260  264 #> [12132,]  252  260  264 #> [12133,]  252  260  264 #> [12134,]  252  260  265 #> [12135,]  252  260  264 #> [12136,]  252  260  264 #> [12137,]  252  260  264 #> [12138,]  252  260  264 #> [12139,]  252  260  264 #> [12140,]  252  260  264 #> [12141,]  252  260  264 #> [12142,]  252  260  264 #> [12143,]  252  260  264 #> [12144,]  251  259  264 #> [12145,]  252  260  264 #> [12146,]  252  260  264 #> [12147,]  252  260  264 #> [12148,]  252  260  264 #> [12149,]  252  260  264 #> [12150,]  252  260  264 #> [12151,]  252  260  264 #> [12152,]  251  259  264 #> [12153,]  252  260  264 #> [12154,]  252  260  264 #> [12155,]  252  260  264 #> [12156,]  252  260  264 #> [12157,]  252  260  264 #> [12158,]  252  260  264 #> [12159,]  252  260  264 #> [12160,]  252  260  265 #> [12161,]  252  260  264 #> [12162,]  252  260  264 #> [12163,]  252  260  264 #> [12164,]  252  260  264 #> [12165,]  252  260  265 #> [12166,]  252  260  264 #> [12167,]  252  260  264 #> [12168,]  252  260  264 #> [12169,]  252  260  264 #> [12170,]  252  260  265 #> [12171,]  252  260  264 #> [12172,]  252  260  264 #> [12173,]  252  260  265 #> [12174,]  252  260  264 #> [12175,]  252  260  264 #> [12176,]  252  260  264 #> [12177,]  252  260  264 #> [12178,]  252  260  264 #> [12179,]  252  260  264 #> [12180,]  252  260  264 #> [12181,]  251  259  264 #> [12182,]  251  259  264 #> [12183,]  252  260  264 #> [12184,]  252  260  264 #> [12185,]  252  260  264 #> [12186,]  252  260  264 #> [12187,]  252  260  264 #> [12188,]  252  260  264 #> [12189,]  252  260  264 #> [12190,]  251  259  264 #> [12191,]  252  260  264 #> [12192,]  251  259  264 #> [12193,]  252  260  265 #> [12194,]  252  260  264 #> [12195,]  251  259  264 #> [12196,]  252  260  264 #> [12197,]  252  260  264 #> [12198,]  252  260  264 #> [12199,]  251  259  264 #> [12200,]  252  260  264 #> [12201,]  253  262  267 #> [12202,]  253  262  267 #> [12203,]  254  261  266 #> [12204,]  253  262  267 #> [12205,]  253  262  267 #> [12206,]  254  261  266 #> [12207,]  253  262  267 #> [12208,]  253  262  267 #> [12209,]  253  262  267 #> [12210,]  253  262  267 #> [12211,]  253  262  267 #> [12212,]  253  262  267 #> [12213,]  253  262  267 #> [12214,]  253  262  267 #> [12215,]  253  262  267 #> [12216,]  253  262  267 #> [12217,]  253  262  267 #> [12218,]  253  262  267 #> [12219,]  253  262  267 #> [12220,]  253  262  267 #> [12221,]  253  262  267 #> [12222,]  253  262  267 #> [12223,]  253  262  267 #> [12224,]  253  262  267 #> [12225,]  253  262  267 #> [12226,]  253  262  267 #> [12227,]  253  262  267 #> [12228,]  253  262  267 #> [12229,]  253  262  267 #> [12230,]  253  262  267 #> [12231,]  253  262  267 #> [12232,]  253  262  267 #> [12233,]  253  262  267 #> [12234,]  254  261  266 #> [12235,]  253  262  267 #> [12236,]  253  262  267 #> [12237,]  253  262  267 #> [12238,]  253  262  267 #> [12239,]  253  262  267 #> [12240,]  253  262  267 #> [12241,]  253  262  267 #> [12242,]  253  262  267 #> [12243,]  253  262  267 #> [12244,]  253  262  267 #> [12245,]  253  262  267 #> [12246,]  253  262  267 #> [12247,]  253  262  267 #> [12248,]  253  262  267 #> [12249,]  253  262  267 #> [12250,]  253  262  267 #> [12251,]  253  262  267 #> [12252,]  253  262  267 #> [12253,]  253  262  267 #> [12254,]  253  262  267 #> [12255,]  253  262  267 #> [12256,]  253  262  267 #> [12257,]  253  262  267 #> [12258,]  253  262  267 #> [12259,]  253  262  267 #> [12260,]  254  261  266 #> [12261,]  253  262  267 #> [12262,]  253  262  267 #> [12263,]  253  262  267 #> [12264,]  253  262  267 #> [12265,]  254  261  266 #> [12266,]  253  262  267 #> [12267,]  253  262  267 #> [12268,]  253  262  267 #> [12269,]  253  262  267 #> [12270,]  253  262  267 #> [12271,]  253  262  267 #> [12272,]  253  262  267 #> [12273,]  253  262  267 #> [12274,]  253  262  267 #> [12275,]  253  262  267 #> [12276,]  253  262  267 #> [12277,]  253  262  267 #> [12278,]  253  262  267 #> [12279,]  253  262  267 #> [12280,]  253  262  267 #> [12281,]  253  262  267 #> [12282,]  253  262  267 #> [12283,]  253  262  267 #> [12284,]  253  262  267 #> [12285,]  253  262  267 #> [12286,]  253  262  267 #> [12287,]  253  262  267 #> [12288,]  253  262  267 #> [12289,]  253  262  267 #> [12290,]  253  262  267 #> [12291,]  253  262  267 #> [12292,]  253  262  267 #> [12293,]  254  261  266 #> [12294,]  253  262  267 #> [12295,]  253  262  267 #> [12296,]  253  262  267 #> [12297,]  253  262  267 #> [12298,]  253  262  267 #> [12299,]  253  262  267 #> [12300,]  253  262  267 #> [12301,]  256  264  269 #> [12302,]  256  264  269 #> [12303,]  255  263  268 #> [12304,]  256  264  269 #> [12305,]  256  264  269 #> [12306,]  256  264  269 #> [12307,]  255  263  268 #> [12308,]  256  264  269 #> [12309,]  256  264  269 #> [12310,]  256  264  269 #> [12311,]  256  264  269 #> [12312,]  255  263  268 #> [12313,]  256  264  269 #> [12314,]  256  264  269 #> [12315,]  256  264  269 #> [12316,]  256  264  269 #> [12317,]  256  264  269 #> [12318,]  256  264  269 #> [12319,]  256  264  269 #> [12320,]  256  264  269 #> [12321,]  256  264  269 #> [12322,]  256  264  269 #> [12323,]  256  264  269 #> [12324,]  256  264  269 #> [12325,]  256  264  269 #> [12326,]  256  264  269 #> [12327,]  256  264  269 #> [12328,]  256  264  269 #> [12329,]  256  264  269 #> [12330,]  256  264  269 #> [12331,]  255  263  268 #> [12332,]  256  264  269 #> [12333,]  256  264  269 #> [12334,]  256  264  269 #> [12335,]  256  264  269 #> [12336,]  256  264  269 #> [12337,]  256  264  269 #> [12338,]  256  264  269 #> [12339,]  256  264  269 #> [12340,]  256  264  269 #> [12341,]  256  264  269 #> [12342,]  256  264  269 #> [12343,]  256  264  269 #> [12344,]  256  264  269 #> [12345,]  256  264  269 #> [12346,]  256  264  269 #> [12347,]  256  264  269 #> [12348,]  256  264  269 #> [12349,]  256  264  269 #> [12350,]  256  264  269 #> [12351,]  256  264  269 #> [12352,]  255  263  268 #> [12353,]  256  264  269 #> [12354,]  256  264  269 #> [12355,]  256  264  269 #> [12356,]  256  264  269 #> [12357,]  256  264  269 #> [12358,]  256  264  269 #> [12359,]  255  263  268 #> [12360,]  255  263  268 #> [12361,]  256  264  269 #> [12362,]  256  264  269 #> [12363,]  256  264  269 #> [12364,]  256  264  269 #> [12365,]  256  264  269 #> [12366,]  256  264  269 #> [12367,]  256  264  269 #> [12368,]  256  264  269 #> [12369,]  256  264  269 #> [12370,]  256  264  269 #> [12371,]  256  264  269 #> [12372,]  256  264  269 #> [12373,]  256  264  269 #> [12374,]  256  264  269 #> [12375,]  256  264  269 #> [12376,]  256  264  269 #> [12377,]  256  264  269 #> [12378,]  256  264  269 #> [12379,]  256  264  269 #> [12380,]  256  264  269 #> [12381,]  256  264  269 #> [12382,]  256  264  269 #> [12383,]  256  264  269 #> [12384,]  256  264  269 #> [12385,]  256  264  269 #> [12386,]  256  264  269 #> [12387,]  256  264  269 #> [12388,]  256  264  269 #> [12389,]  256  264  269 #> [12390,]  256  264  269 #> [12391,]  256  264  269 #> [12392,]  256  264  269 #> [12393,]  256  264  269 #> [12394,]  256  264  269 #> [12395,]  256  264  269 #> [12396,]  256  264  269 #> [12397,]  255  263  268 #> [12398,]  256  264  269 #> [12399,]  256  264  269 #> [12400,]  256  264  269 #> [12401,]  257  266  271 #> [12402,]  258  265  270 #> [12403,]  257  266  271 #> [12404,]  257  266  271 #> [12405,]  257  266  271 #> [12406,]  257  266  271 #> [12407,]  257  266  271 #> [12408,]  257  266  271 #> [12409,]  258  265  270 #> [12410,]  258  265  270 #> [12411,]  257  266  271 #> [12412,]  258  265  270 #> [12413,]  257  267  271 #> [12414,]  257  266  271 #> [12415,]  257  266  271 #> [12416,]  257  266  271 #> [12417,]  258  265  270 #> [12418,]  257  266  271 #> [12419,]  257  266  271 #> [12420,]  257  266  271 #> [12421,]  258  265  270 #> [12422,]  257  266  271 #> [12423,]  257  266  271 #> [12424,]  257  267  271 #> [12425,]  257  266  271 #> [12426,]  257  266  271 #> [12427,]  257  266  271 #> [12428,]  257  266  271 #> [12429,]  258  265  270 #> [12430,]  257  266  271 #> [12431,]  257  266  271 #> [12432,]  257  267  271 #> [12433,]  258  265  270 #> [12434,]  257  266  271 #> [12435,]  257  266  271 #> [12436,]  257  266  271 #> [12437,]  257  266  271 #> [12438,]  257  266  271 #> [12439,]  257  266  271 #> [12440,]  257  267  271 #> [12441,]  257  266  271 #> [12442,]  257  266  271 #> [12443,]  257  266  271 #> [12444,]  257  266  271 #> [12445,]  257  266  271 #> [12446,]  257  266  271 #> [12447,]  257  266  271 #> [12448,]  257  266  271 #> [12449,]  257  266  271 #> [12450,]  257  266  271 #> [12451,]  257  266  271 #> [12452,]  257  266  271 #> [12453,]  258  265  270 #> [12454,]  257  266  271 #> [12455,]  257  266  271 #> [12456,]  257  266  271 #> [12457,]  257  266  271 #> [12458,]  257  266  271 #> [12459,]  257  266  271 #> [12460,]  258  265  270 #> [12461,]  257  266  271 #> [12462,]  257  266  271 #> [12463,]  258  265  270 #> [12464,]  257  266  271 #> [12465,]  257  266  271 #> [12466,]  257  266  271 #> [12467,]  257  266  271 #> [12468,]  257  266  271 #> [12469,]  257  266  271 #> [12470,]  258  265  270 #> [12471,]  257  266  271 #> [12472,]  257  266  271 #> [12473,]  257  266  271 #> [12474,]  257  266  271 #> [12475,]  257  267  271 #> [12476,]  257  266  271 #> [12477,]  257  266  271 #> [12478,]  257  266  271 #> [12479,]  257  266  271 #> [12480,]  258  265  270 #> [12481,]  258  265  270 #> [12482,]  257  266  271 #> [12483,]  257  267  271 #> [12484,]  257  266  271 #> [12485,]  257  266  271 #> [12486,]  258  265  270 #> [12487,]  257  266  271 #> [12488,]  257  266  271 #> [12489,]  257  266  271 #> [12490,]  257  266  271 #> [12491,]  257  266  271 #> [12492,]  257  266  271 #> [12493,]  257  266  271 #> [12494,]  257  266  271 #> [12495,]  257  266  271 #> [12496,]  257  266  271 #> [12497,]  257  266  271 #> [12498,]  257  266  271 #> [12499,]  257  266  271 #> [12500,]  257  266  271 #> [12501,]  259  268  272 #> [12502,]  259  268  273 #> [12503,]  259  268  272 #> [12504,]  260  269  273 #> [12505,]  259  268  273 #> [12506,]  259  268  272 #> [12507,]  259  268  273 #> [12508,]  259  268  273 #> [12509,]  259  268  273 #> [12510,]  259  268  273 #> [12511,]  259  268  272 #> [12512,]  259  268  273 #> [12513,]  259  268  273 #> [12514,]  260  269  272 #> [12515,]  259  268  273 #> [12516,]  259  268  272 #> [12517,]  259  268  273 #> [12518,]  259  268  273 #> [12519,]  260  269  272 #> [12520,]  259  268  273 #> [12521,]  259  268  273 #> [12522,]  259  268  273 #> [12523,]  259  268  273 #> [12524,]  259  268  273 #> [12525,]  259  268  273 #> [12526,]  259  268  272 #> [12527,]  260  269  273 #> [12528,]  259  268  272 #> [12529,]  259  268  273 #> [12530,]  259  268  273 #> [12531,]  259  268  273 #> [12532,]  259  268  273 #> [12533,]  259  268  273 #> [12534,]  259  268  272 #> [12535,]  259  268  272 #> [12536,]  259  268  273 #> [12537,]  259  268  272 #> [12538,]  259  268  272 #> [12539,]  259  268  273 #> [12540,]  259  268  273 #> [12541,]  260  269  273 #> [12542,]  259  268  272 #> [12543,]  259  268  273 #> [12544,]  259  268  273 #> [12545,]  259  268  272 #> [12546,]  259  268  273 #> [12547,]  259  268  273 #> [12548,]  260  269  273 #> [12549,]  259  268  272 #> [12550,]  259  268  273 #> [12551,]  259  268  273 #> [12552,]  259  268  272 #> [12553,]  259  268  273 #> [12554,]  259  268  273 #> [12555,]  259  268  273 #> [12556,]  259  268  273 #> [12557,]  259  268  273 #> [12558,]  259  268  273 #> [12559,]  259  268  273 #> [12560,]  259  268  273 #> [12561,]  260  269  273 #> [12562,]  259  268  273 #> [12563,]  259  268  273 #> [12564,]  259  268  272 #> [12565,]  259  268  273 #> [12566,]  259  268  273 #> [12567,]  259  268  273 #> [12568,]  259  268  272 #> [12569,]  260  269  273 #> [12570,]  259  268  273 #> [12571,]  259  268  273 #> [12572,]  259  268  272 #> [12573,]  259  268  272 #> [12574,]  259  268  273 #> [12575,]  259  268  273 #> [12576,]  259  268  273 #> [12577,]  259  268  272 #> [12578,]  259  268  273 #> [12579,]  259  268  273 #> [12580,]  259  268  273 #> [12581,]  259  268  273 #> [12582,]  260  269  273 #> [12583,]  259  268  273 #> [12584,]  259  268  273 #> [12585,]  259  268  273 #> [12586,]  259  268  273 #> [12587,]  259  268  273 #> [12588,]  259  268  273 #> [12589,]  259  268  272 #> [12590,]  259  268  273 #> [12591,]  259  268  273 #> [12592,]  260  269  273 #> [12593,]  260  269  273 #> [12594,]  259  268  272 #> [12595,]  259  268  273 #> [12596,]  260  269  272 #> [12597,]  260  269  272 #> [12598,]  259  268  273 #> [12599,]  259  268  273 #> [12600,]  259  268  272 #> [12601,]  262  271  276 #> [12602,]  262  271  275 #> [12603,]  261  270  274 #> [12604,]  261  270  274 #> [12605,]  262  271  275 #> [12606,]  262  271  275 #> [12607,]  261  270  274 #> [12608,]  261  270  274 #> [12609,]  262  271  276 #> [12610,]  261  270  274 #> [12611,]  262  271  275 #> [12612,]  261  270  274 #> [12613,]  262  271  276 #> [12614,]  261  270  274 #> [12615,]  262  271  276 #> [12616,]  261  270  274 #> [12617,]  262  271  276 #> [12618,]  262  271  276 #> [12619,]  262  271  275 #> [12620,]  262  271  275 #> [12621,]  262  271  276 #> [12622,]  262  271  275 #> [12623,]  261  270  274 #> [12624,]  262  271  275 #> [12625,]  261  270  274 #> [12626,]  262  271  275 #> [12627,]  262  271  276 #> [12628,]  262  271  276 #> [12629,]  262  271  275 #> [12630,]  262  271  275 #> [12631,]  261  270  274 #> [12632,]  261  270  274 #> [12633,]  262  271  275 #> [12634,]  262  271  275 #> [12635,]  262  271  275 #> [12636,]  262  271  275 #> [12637,]  261  270  274 #> [12638,]  262  271  275 #> [12639,]  262  271  276 #> [12640,]  261  270  274 #> [12641,]  262  271  275 #> [12642,]  262  271  275 #> [12643,]  262  271  276 #> [12644,]  261  270  274 #> [12645,]  262  271  276 #> [12646,]  261  270  274 #> [12647,]  261  270  274 #> [12648,]  262  271  275 #> [12649,]  262  271  275 #> [12650,]  262  271  275 #> [12651,]  262  271  275 #> [12652,]  261  270  274 #> [12653,]  262  271  276 #> [12654,]  262  271  275 #> [12655,]  261  270  274 #> [12656,]  262  271  276 #> [12657,]  261  270  274 #> [12658,]  262  271  275 #> [12659,]  261  270  274 #> [12660,]  261  270  274 #> [12661,]  262  271  276 #> [12662,]  262  271  275 #> [12663,]  262  271  275 #> [12664,]  262  271  276 #> [12665,]  262  271  275 #> [12666,]  262  271  275 #> [12667,]  261  270  274 #> [12668,]  261  270  274 #> [12669,]  262  271  275 #> [12670,]  262  271  276 #> [12671,]  262  271  276 #> [12672,]  261  270  274 #> [12673,]  262  271  276 #> [12674,]  261  270  274 #> [12675,]  261  270  274 #> [12676,]  261  270  274 #> [12677,]  262  271  276 #> [12678,]  261  270  274 #> [12679,]  262  271  275 #> [12680,]  261  270  274 #> [12681,]  262  271  275 #> [12682,]  262  271  276 #> [12683,]  262  271  275 #> [12684,]  262  271  276 #> [12685,]  262  271  275 #> [12686,]  261  270  274 #> [12687,]  262  271  276 #> [12688,]  262  271  276 #> [12689,]  262  271  275 #> [12690,]  262  271  276 #> [12691,]  262  271  275 #> [12692,]  261  270  274 #> [12693,]  262  271  275 #> [12694,]  262  271  276 #> [12695,]  261  270  274 #> [12696,]  261  270  274 #> [12697,]  261  270  274 #> [12698,]  261  270  274 #> [12699,]  262  271  275 #> [12700,]  262  271  276 #> [12701,]  264  273  278 #> [12702,]  263  272  278 #> [12703,]  264  273  278 #> [12704,]  264  273  278 #> [12705,]  264  273  278 #> [12706,]  263  272  277 #> [12707,]  264  273  277 #> [12708,]  264  273  278 #> [12709,]  264  273  278 #> [12710,]  264  273  278 #> [12711,]  263  272  278 #> [12712,]  263  272  278 #> [12713,]  264  273  278 #> [12714,]  264  273  278 #> [12715,]  263  272  278 #> [12716,]  264  273  278 #> [12717,]  263  272  278 #> [12718,]  264  273  278 #> [12719,]  263  272  278 #> [12720,]  264  273  277 #> [12721,]  264  273  277 #> [12722,]  264  273  278 #> [12723,]  263  272  278 #> [12724,]  264  273  278 #> [12725,]  264  273  277 #> [12726,]  263  272  278 #> [12727,]  264  273  278 #> [12728,]  264  273  278 #> [12729,]  263  272  278 #> [12730,]  263  272  278 #> [12731,]  263  272  278 #> [12732,]  263  272  278 #> [12733,]  264  273  278 #> [12734,]  263  272  278 #> [12735,]  263  272  277 #> [12736,]  264  273  278 #> [12737,]  263  272  277 #> [12738,]  264  273  278 #> [12739,]  264  273  278 #> [12740,]  264  273  278 #> [12741,]  264  273  278 #> [12742,]  263  272  277 #> [12743,]  263  272  278 #> [12744,]  263  272  277 #> [12745,]  264  273  278 #> [12746,]  263  272  278 #> [12747,]  263  272  278 #> [12748,]  263  272  278 #> [12749,]  264  273  278 #> [12750,]  264  273  278 #> [12751,]  263  272  278 #> [12752,]  264  273  278 #> [12753,]  264  273  277 #> [12754,]  264  273  278 #> [12755,]  264  273  278 #> [12756,]  263  272  277 #> [12757,]  264  273  277 #> [12758,]  264  273  278 #> [12759,]  264  273  278 #> [12760,]  263  272  278 #> [12761,]  263  272  278 #> [12762,]  263  272  278 #> [12763,]  263  272  278 #> [12764,]  263  272  278 #> [12765,]  263  272  277 #> [12766,]  263  272  278 #> [12767,]  264  273  278 #> [12768,]  263  272  278 #> [12769,]  263  272  278 #> [12770,]  263  272  278 #> [12771,]  264  273  278 #> [12772,]  264  273  278 #> [12773,]  264  273  277 #> [12774,]  264  273  277 #> [12775,]  263  272  278 #> [12776,]  264  273  278 #> [12777,]  264  273  278 #> [12778,]  263  272  278 #> [12779,]  263  272  278 #> [12780,]  264  273  277 #> [12781,]  263  272  278 #> [12782,]  263  272  277 #> [12783,]  264  273  278 #> [12784,]  264  273  277 #> [12785,]  264  273  277 #> [12786,]  264  273  277 #> [12787,]  264  273  278 #> [12788,]  264  273  278 #> [12789,]  264  273  277 #> [12790,]  264  273  278 #> [12791,]  264  273  278 #> [12792,]  263  272  278 #> [12793,]  263  272  278 #> [12794,]  263  272  277 #> [12795,]  263  272  278 #> [12796,]  263  272  278 #> [12797,]  263  272  278 #> [12798,]  264  273  278 #> [12799,]  264  273  277 #> [12800,]  263  272  278 #> [12801,]  265  275  280 #> [12802,]  265  275  279 #> [12803,]  265  274  279 #> [12804,]  265  274  279 #> [12805,]  265  275  279 #> [12806,]  265  275  280 #> [12807,]  265  274  279 #> [12808,]  265  274  279 #> [12809,]  265  275  279 #> [12810,]  265  275  279 #> [12811,]  265  275  279 #> [12812,]  265  274  279 #> [12813,]  265  275  280 #> [12814,]  265  274  280 #> [12815,]  265  275  280 #> [12816,]  265  275  280 #> [12817,]  265  275  280 #> [12818,]  265  275  279 #> [12819,]  265  275  279 #> [12820,]  265  275  279 #> [12821,]  265  275  280 #> [12822,]  265  275  279 #> [12823,]  265  274  279 #> [12824,]  265  275  279 #> [12825,]  265  274  279 #> [12826,]  265  275  279 #> [12827,]  265  275  279 #> [12828,]  265  275  279 #> [12829,]  265  275  280 #> [12830,]  265  275  279 #> [12831,]  265  274  279 #> [12832,]  265  274  279 #> [12833,]  265  275  280 #> [12834,]  265  275  279 #> [12835,]  265  275  279 #> [12836,]  265  275  279 #> [12837,]  265  274  279 #> [12838,]  265  275  279 #> [12839,]  265  275  279 #> [12840,]  265  274  279 #> [12841,]  265  275  280 #> [12842,]  265  275  279 #> [12843,]  265  275  279 #> [12844,]  265  274  280 #> [12845,]  265  275  279 #> [12846,]  265  274  279 #> [12847,]  265  274  279 #> [12848,]  265  275  279 #> [12849,]  265  275  279 #> [12850,]  265  275  280 #> [12851,]  265  275  279 #> [12852,]  265  274  279 #> [12853,]  265  275  279 #> [12854,]  265  275  279 #> [12855,]  265  274  279 #> [12856,]  265  275  279 #> [12857,]  265  274  279 #> [12858,]  265  275  279 #> [12859,]  265  274  280 #> [12860,]  265  274  279 #> [12861,]  265  275  280 #> [12862,]  265  275  279 #> [12863,]  265  275  279 #> [12864,]  265  275  279 #> [12865,]  265  275  279 #> [12866,]  265  275  279 #> [12867,]  265  274  279 #> [12868,]  265  274  280 #> [12869,]  265  275  279 #> [12870,]  265  275  280 #> [12871,]  265  275  279 #> [12872,]  265  274  279 #> [12873,]  265  275  280 #> [12874,]  265  274  279 #> [12875,]  265  274  279 #> [12876,]  265  274  280 #> [12877,]  265  275  279 #> [12878,]  265  274  279 #> [12879,]  265  275  279 #> [12880,]  265  274  279 #> [12881,]  265  275  280 #> [12882,]  265  275  279 #> [12883,]  265  275  280 #> [12884,]  265  275  279 #> [12885,]  265  275  279 #> [12886,]  265  274  280 #> [12887,]  265  275  279 #> [12888,]  265  275  279 #> [12889,]  265  275  279 #> [12890,]  265  275  279 #> [12891,]  265  275  279 #> [12892,]  265  274  279 #> [12893,]  265  275  279 #> [12894,]  265  275  279 #> [12895,]  265  275  279 #> [12896,]  265  274  280 #> [12897,]  265  274  279 #> [12898,]  265  274  279 #> [12899,]  265  275  280 #> [12900,]  265  275  279 #> [12901,]  267  277  282 #> [12902,]  266  276  282 #> [12903,]  266  276  281 #> [12904,]  267  277  281 #> [12905,]  266  276  281 #> [12906,]  266  276  281 #> [12907,]  267  277  282 #> [12908,]  266  276  282 #> [12909,]  267  277  281 #> [12910,]  267  277  281 #> [12911,]  266  276  281 #> [12912,]  266  276  282 #> [12913,]  267  277  282 #> [12914,]  267  277  281 #> [12915,]  266  276  282 #> [12916,]  267  277  282 #> [12917,]  266  276  281 #> [12918,]  266  276  282 #> [12919,]  266  276  282 #> [12920,]  267  277  282 #> [12921,]  266  276  281 #> [12922,]  267  277  282 #> [12923,]  266  276  282 #> [12924,]  267  277  281 #> [12925,]  267  277  281 #> [12926,]  266  276  282 #> [12927,]  266  276  282 #> [12928,]  267  277  281 #> [12929,]  266  276  282 #> [12930,]  266  276  282 #> [12931,]  266  276  281 #> [12932,]  266  276  281 #> [12933,]  266  276  282 #> [12934,]  266  276  281 #> [12935,]  266  276  281 #> [12936,]  267  277  282 #> [12937,]  266  276  282 #> [12938,]  266  276  282 #> [12939,]  267  277  281 #> [12940,]  266  276  281 #> [12941,]  266  276  282 #> [12942,]  266  276  281 #> [12943,]  266  276  282 #> [12944,]  266  276  282 #> [12945,]  267  277  282 #> [12946,]  266  276  282 #> [12947,]  266  276  281 #> [12948,]  266  276  281 #> [12949,]  267  277  282 #> [12950,]  267  277  282 #> [12951,]  266  276  282 #> [12952,]  267  277  281 #> [12953,]  267  277  282 #> [12954,]  267  277  281 #> [12955,]  267  277  282 #> [12956,]  266  276  282 #> [12957,]  267  277  281 #> [12958,]  267  277  282 #> [12959,]  267  277  282 #> [12960,]  266  276  282 #> [12961,]  266  276  282 #> [12962,]  266  276  281 #> [12963,]  266  276  282 #> [12964,]  266  276  282 #> [12965,]  266  276  281 #> [12966,]  266  276  282 #> [12967,]  267  277  281 #> [12968,]  266  276  282 #> [12969,]  266  276  282 #> [12970,]  266  276  281 #> [12971,]  266  276  282 #> [12972,]  267  277  281 #> [12973,]  267  277  281 #> [12974,]  266  276  281 #> [12975,]  266  276  282 #> [12976,]  267  277  281 #> [12977,]  266  276  282 #> [12978,]  266  276  282 #> [12979,]  266  276  281 #> [12980,]  266  276  282 #> [12981,]  266  276  282 #> [12982,]  266  276  281 #> [12983,]  266  276  282 #> [12984,]  266  276  282 #> [12985,]  267  277  282 #> [12986,]  267  277  281 #> [12987,]  267  277  282 #> [12988,]  266  276  281 #> [12989,]  266  276  281 #> [12990,]  267  277  282 #> [12991,]  267  277  281 #> [12992,]  266  276  281 #> [12993,]  266  276  282 #> [12994,]  266  276  281 #> [12995,]  266  276  282 #> [12996,]  266  276  282 #> [12997,]  266  276  282 #> [12998,]  266  276  281 #> [12999,]  266  276  281 #> [13000,]  266  276  282 #> [13001,]  269  279  284 #> [13002,]  269  279  284 #> [13003,]  268  278  283 #> [13004,]  269  279  284 #> [13005,]  268  278  283 #> [13006,]  269  279  284 #> [13007,]  268  278  283 #> [13008,]  268  278  283 #> [13009,]  269  279  284 #> [13010,]  269  279  284 #> [13011,]  269  279  284 #> [13012,]  269  279  284 #> [13013,]  268  278  283 #> [13014,]  269  279  284 #> [13015,]  269  279  284 #> [13016,]  268  278  283 #> [13017,]  268  278  283 #> [13018,]  269  279  284 #> [13019,]  269  279  284 #> [13020,]  268  278  283 #> [13021,]  269  279  284 #> [13022,]  268  278  283 #> [13023,]  269  279  284 #> [13024,]  268  278  283 #> [13025,]  268  278  283 #> [13026,]  269  279  284 #> [13027,]  269  279  284 #> [13028,]  269  279  284 #> [13029,]  268  278  283 #> [13030,]  269  279  284 #> [13031,]  269  279  284 #> [13032,]  269  279  284 #> [13033,]  269  279  284 #> [13034,]  269  279  284 #> [13035,]  269  279  284 #> [13036,]  269  279  284 #> [13037,]  269  279  284 #> [13038,]  269  279  284 #> [13039,]  268  278  283 #> [13040,]  268  278  283 #> [13041,]  269  279  284 #> [13042,]  269  279  284 #> [13043,]  268  278  283 #> [13044,]  268  278  283 #> [13045,]  268  278  283 #> [13046,]  268  278  283 #> [13047,]  268  278  283 #> [13048,]  269  279  284 #> [13049,]  268  278  283 #> [13050,]  268  278  283 #> [13051,]  268  278  283 #> [13052,]  269  279  284 #> [13053,]  268  278  283 #> [13054,]  268  278  283 #> [13055,]  268  278  283 #> [13056,]  268  278  283 #> [13057,]  269  279  284 #> [13058,]  269  279  284 #> [13059,]  268  278  283 #> [13060,]  269  279  284 #> [13061,]  269  279  284 #> [13062,]  269  279  284 #> [13063,]  268  278  283 #> [13064,]  269  279  284 #> [13065,]  268  278  283 #> [13066,]  268  278  283 #> [13067,]  269  279  284 #> [13068,]  269  279  284 #> [13069,]  269  279  284 #> [13070,]  268  278  283 #> [13071,]  268  278  283 #> [13072,]  268  278  283 #> [13073,]  269  279  284 #> [13074,]  269  279  284 #> [13075,]  269  279  284 #> [13076,]  268  278  283 #> [13077,]  268  278  283 #> [13078,]  268  278  283 #> [13079,]  268  278  283 #> [13080,]  269  279  284 #> [13081,]  268  278  283 #> [13082,]  269  279  284 #> [13083,]  268  278  283 #> [13084,]  268  278  283 #> [13085,]  269  279  284 #> [13086,]  268  278  283 #> [13087,]  269  279  284 #> [13088,]  269  279  284 #> [13089,]  268  278  283 #> [13090,]  268  278  283 #> [13091,]  269  279  284 #> [13092,]  269  279  284 #> [13093,]  269  279  284 #> [13094,]  268  278  283 #> [13095,]  269  279  284 #> [13096,]  269  279  284 #> [13097,]  269  279  284 #> [13098,]  268  278  283 #> [13099,]  269  279  284 #> [13100,]  268  278  283 #> [13101,]  271  280  285 #> [13102,]  271  280  285 #> [13103,]  270  282  286 #> [13104,]  270  282  286 #> [13105,]  270  282  286 #> [13106,]  271  280  285 #> [13107,]  271  280  285 #> [13108,]  270  282  286 #> [13109,]  270  282  286 #> [13110,]  270  282  286 #> [13111,]  271  280  285 #> [13112,]  270  282  286 #> [13113,]  271  280  285 #> [13114,]  271  280  285 #> [13115,]  271  280  285 #> [13116,]  271  280  285 #> [13117,]  271  280  285 #> [13118,]  270  282  286 #> [13119,]  271  280  285 #> [13120,]  270  282  286 #> [13121,]  271  280  285 #> [13122,]  271  280  285 #> [13123,]  270  282  286 #> [13124,]  270  282  286 #> [13125,]  270  282  286 #> [13126,]  271  280  285 #> [13127,]  271  280  285 #> [13128,]  270  282  286 #> [13129,]  271  280  285 #> [13130,]  270  281  286 #> [13131,]  270  282  286 #> [13132,]  270  282  286 #> [13133,]  271  280  285 #> [13134,]  270  282  286 #> [13135,]  271  280  285 #> [13136,]  270  282  286 #> [13137,]  271  280  285 #> [13138,]  270  282  286 #> [13139,]  270  281  286 #> [13140,]  271  280  285 #> [13141,]  271  280  285 #> [13142,]  270  282  286 #> [13143,]  270  282  286 #> [13144,]  271  280  285 #> [13145,]  270  282  286 #> [13146,]  271  280  285 #> [13147,]  271  280  285 #> [13148,]  270  282  286 #> [13149,]  270  281  286 #> [13150,]  271  280  285 #> [13151,]  270  282  286 #> [13152,]  271  280  285 #> [13153,]  270  282  286 #> [13154,]  270  282  286 #> [13155,]  271  280  285 #> [13156,]  270  282  286 #> [13157,]  270  282  286 #> [13158,]  271  280  285 #> [13159,]  271  280  285 #> [13160,]  270  282  286 #> [13161,]  271  280  285 #> [13162,]  270  281  286 #> [13163,]  271  280  285 #> [13164,]  270  282  286 #> [13165,]  270  282  286 #> [13166,]  270  282  286 #> [13167,]  270  282  286 #> [13168,]  271  280  285 #> [13169,]  271  280  285 #> [13170,]  271  280  285 #> [13171,]  271  280  285 #> [13172,]  270  282  286 #> [13173,]  271  280  285 #> [13174,]  271  280  285 #> [13175,]  271  280  285 #> [13176,]  271  280  285 #> [13177,]  271  280  285 #> [13178,]  270  282  286 #> [13179,]  271  280  285 #> [13180,]  270  281  286 #> [13181,]  271  280  285 #> [13182,]  271  280  285 #> [13183,]  271  280  285 #> [13184,]  271  280  285 #> [13185,]  270  282  286 #> [13186,]  271  280  285 #> [13187,]  271  280  285 #> [13188,]  270  282  286 #> [13189,]  270  282  286 #> [13190,]  271  280  285 #> [13191,]  270  282  286 #> [13192,]  271  280  285 #> [13193,]  271  280  285 #> [13194,]  271  280  285 #> [13195,]  270  281  286 #> [13196,]  271  280  285 #> [13197,]  271  280  285 #> [13198,]  271  280  285 #> [13199,]  271  280  285 #> [13200,]  271  280  285 #> [13201,]  273  284  287 #> [13202,]  272  283  288 #> [13203,]  273  284  287 #> [13204,]  273  284  287 #> [13205,]  273  284  287 #> [13206,]  272  283  288 #> [13207,]  273  284  287 #> [13208,]  273  284  287 #> [13209,]  273  284  287 #> [13210,]  273  284  287 #> [13211,]  272  283  288 #> [13212,]  272  283  288 #> [13213,]  273  284  287 #> [13214,]  273  284  287 #> [13215,]  272  283  288 #> [13216,]  273  284  287 #> [13217,]  272  283  288 #> [13218,]  272  283  288 #> [13219,]  272  283  288 #> [13220,]  273  284  287 #> [13221,]  272  283  288 #> [13222,]  273  284  287 #> [13223,]  272  283  288 #> [13224,]  273  284  287 #> [13225,]  273  284  287 #> [13226,]  272  283  288 #> [13227,]  273  284  287 #> [13228,]  273  284  287 #> [13229,]  272  283  288 #> [13230,]  272  283  288 #> [13231,]  272  283  288 #> [13232,]  272  283  288 #> [13233,]  273  284  287 #> [13234,]  272  283  288 #> [13235,]  272  283  288 #> [13236,]  273  284  287 #> [13237,]  272  283  288 #> [13238,]  272  283  288 #> [13239,]  273  284  287 #> [13240,]  273  284  287 #> [13241,]  273  284  287 #> [13242,]  272  283  288 #> [13243,]  272  283  288 #> [13244,]  272  283  288 #> [13245,]  273  284  287 #> [13246,]  272  283  288 #> [13247,]  272  283  288 #> [13248,]  272  283  288 #> [13249,]  273  284  287 #> [13250,]  273  284  287 #> [13251,]  272  283  288 #> [13252,]  273  284  287 #> [13253,]  273  284  287 #> [13254,]  273  284  287 #> [13255,]  273  284  287 #> [13256,]  272  283  288 #> [13257,]  273  284  287 #> [13258,]  273  284  287 #> [13259,]  273  284  287 #> [13260,]  272  283  288 #> [13261,]  272  283  288 #> [13262,]  272  283  288 #> [13263,]  272  283  288 #> [13264,]  272  283  288 #> [13265,]  272  283  288 #> [13266,]  272  283  288 #> [13267,]  273  284  287 #> [13268,]  272  283  288 #> [13269,]  272  283  288 #> [13270,]  272  283  288 #> [13271,]  273  284  287 #> [13272,]  273  284  287 #> [13273,]  273  284  287 #> [13274,]  273  284  287 #> [13275,]  272  283  288 #> [13276,]  273  284  287 #> [13277,]  273  284  287 #> [13278,]  272  283  288 #> [13279,]  272  283  288 #> [13280,]  273  284  287 #> [13281,]  272  283  288 #> [13282,]  272  283  288 #> [13283,]  272  283  288 #> [13284,]  273  284  287 #> [13285,]  273  284  287 #> [13286,]  273  284  287 #> [13287,]  273  284  287 #> [13288,]  273  284  287 #> [13289,]  272  283  288 #> [13290,]  273  284  287 #> [13291,]  273  284  287 #> [13292,]  272  283  288 #> [13293,]  272  283  288 #> [13294,]  272  283  288 #> [13295,]  272  283  288 #> [13296,]  272  283  288 #> [13297,]  272  283  288 #> [13298,]  272  283  288 #> [13299,]  273  284  287 #> [13300,]  272  283  288 #> [13301,]  275  286  290 #> [13302,]  274  285  289 #> [13303,]  274  285  289 #> [13304,]  274  285  289 #> [13305,]  274  285  289 #> [13306,]  275  286  290 #> [13307,]  274  285  289 #> [13308,]  274  285  289 #> [13309,]  274  285  289 #> [13310,]  274  285  289 #> [13311,]  274  285  289 #> [13312,]  274  285  289 #> [13313,]  275  286  290 #> [13314,]  275  286  290 #> [13315,]  275  286  290 #> [13316,]  275  286  290 #> [13317,]  275  286  290 #> [13318,]  274  285  289 #> [13319,]  274  285  289 #> [13320,]  274  285  289 #> [13321,]  275  286  290 #> [13322,]  274  285  289 #> [13323,]  274  285  289 #> [13324,]  274  285  289 #> [13325,]  274  285  289 #> [13326,]  274  285  289 #> [13327,]  274  285  289 #> [13328,]  274  285  289 #> [13329,]  275  286  290 #> [13330,]  274  285  289 #> [13331,]  274  285  289 #> [13332,]  274  285  289 #> [13333,]  275  286  290 #> [13334,]  274  285  289 #> [13335,]  274  285  289 #> [13336,]  274  285  289 #> [13337,]  274  285  289 #> [13338,]  274  285  289 #> [13339,]  274  285  289 #> [13340,]  274  285  289 #> [13341,]  275  286  290 #> [13342,]  274  285  289 #> [13343,]  274  285  289 #> [13344,]  275  286  290 #> [13345,]  274  285  289 #> [13346,]  274  285  289 #> [13347,]  274  285  289 #> [13348,]  274  285  289 #> [13349,]  274  285  289 #> [13350,]  275  286  290 #> [13351,]  274  285  289 #> [13352,]  274  285  289 #> [13353,]  274  285  289 #> [13354,]  274  285  289 #> [13355,]  274  285  289 #> [13356,]  274  285  289 #> [13357,]  274  285  289 #> [13358,]  274  285  289 #> [13359,]  275  286  290 #> [13360,]  274  285  289 #> [13361,]  275  286  290 #> [13362,]  274  285  289 #> [13363,]  274  285  289 #> [13364,]  274  285  289 #> [13365,]  274  285  289 #> [13366,]  274  285  289 #> [13367,]  274  285  289 #> [13368,]  275  286  290 #> [13369,]  274  285  289 #> [13370,]  275  286  290 #> [13371,]  274  285  289 #> [13372,]  274  285  289 #> [13373,]  275  286  290 #> [13374,]  274  285  289 #> [13375,]  274  285  289 #> [13376,]  275  286  290 #> [13377,]  274  285  289 #> [13378,]  274  285  289 #> [13379,]  274  285  289 #> [13380,]  274  285  289 #> [13381,]  275  286  290 #> [13382,]  274  285  289 #> [13383,]  275  286  290 #> [13384,]  274  285  289 #> [13385,]  274  285  289 #> [13386,]  275  286  290 #> [13387,]  274  285  289 #> [13388,]  274  285  289 #> [13389,]  274  285  289 #> [13390,]  274  285  289 #> [13391,]  274  285  289 #> [13392,]  274  285  289 #> [13393,]  274  285  289 #> [13394,]  274  285  289 #> [13395,]  274  285  289 #> [13396,]  275  286  290 #> [13397,]  274  285  289 #> [13398,]  274  285  289 #> [13399,]  275  286  290 #> [13400,]  274  285  289 #> [13401,]  277  288  291 #> [13402,]  276  287  292 #> [13403,]  276  287  292 #> [13404,]  277  288  291 #> [13405,]  277  288  291 #> [13406,]  277  288  291 #> [13407,]  276  287  292 #> [13408,]  277  288  291 #> [13409,]  277  288  291 #> [13410,]  276  287  292 #> [13411,]  277  288  291 #> [13412,]  277  288  291 #> [13413,]  276  287  292 #> [13414,]  277  288  291 #> [13415,]  277  288  291 #> [13416,]  276  287  292 #> [13417,]  276  287  292 #> [13418,]  276  287  292 #> [13419,]  276  287  292 #> [13420,]  277  288  291 #> [13421,]  276  287  292 #> [13422,]  276  287  292 #> [13423,]  276  287  292 #> [13424,]  276  287  292 #> [13425,]  276  287  292 #> [13426,]  277  288  291 #> [13427,]  276  287  292 #> [13428,]  277  288  291 #> [13429,]  276  287  292 #> [13430,]  276  287  292 #> [13431,]  276  287  292 #> [13432,]  276  287  292 #> [13433,]  277  288  291 #> [13434,]  276  287  292 #> [13435,]  276  287  292 #> [13436,]  276  287  292 #> [13437,]  276  287  292 #> [13438,]  277  288  291 #> [13439,]  276  287  292 #> [13440,]  276  287  292 #> [13441,]  277  288  291 #> [13442,]  277  288  291 #> [13443,]  277  288  291 #> [13444,]  276  287  292 #> [13445,]  277  288  291 #> [13446,]  277  288  291 #> [13447,]  276  287  292 #> [13448,]  276  287  292 #> [13449,]  276  287  292 #> [13450,]  277  288  291 #> [13451,]  277  288  291 #> [13452,]  277  288  291 #> [13453,]  277  288  291 #> [13454,]  276  287  292 #> [13455,]  277  288  291 #> [13456,]  277  288  291 #> [13457,]  277  288  291 #> [13458,]  277  288  291 #> [13459,]  276  287  292 #> [13460,]  277  288  291 #> [13461,]  277  288  291 #> [13462,]  276  287  292 #> [13463,]  277  288  291 #> [13464,]  277  288  291 #> [13465,]  277  288  291 #> [13466,]  277  288  291 #> [13467,]  277  288  291 #> [13468,]  277  288  291 #> [13469,]  277  288  291 #> [13470,]  276  287  292 #> [13471,]  277  288  291 #> [13472,]  277  288  291 #> [13473,]  277  288  291 #> [13474,]  277  288  291 #> [13475,]  277  288  291 #> [13476,]  277  288  291 #> [13477,]  276  287  292 #> [13478,]  277  288  291 #> [13479,]  276  287  292 #> [13480,]  276  287  292 #> [13481,]  277  288  291 #> [13482,]  277  288  291 #> [13483,]  276  287  292 #> [13484,]  277  288  291 #> [13485,]  276  287  292 #> [13486,]  276  287  292 #> [13487,]  277  288  291 #> [13488,]  277  288  291 #> [13489,]  277  288  291 #> [13490,]  277  288  291 #> [13491,]  277  288  291 #> [13492,]  277  288  291 #> [13493,]  276  287  292 #> [13494,]  277  288  291 #> [13495,]  276  287  292 #> [13496,]  277  288  291 #> [13497,]  277  288  291 #> [13498,]  276  287  292 #> [13499,]  277  288  291 #> [13500,]  276  287  292 #> [13501,]  279  290  294 #> [13502,]  279  290  294 #> [13503,]  278  289  293 #> [13504,]  279  290  294 #> [13505,]  279  290  294 #> [13506,]  279  290  294 #> [13507,]  278  289  293 #> [13508,]  279  290  294 #> [13509,]  279  290  294 #> [13510,]  279  290  294 #> [13511,]  279  290  294 #> [13512,]  279  290  294 #> [13513,]  279  290  294 #> [13514,]  279  290  294 #> [13515,]  279  290  294 #> [13516,]  279  290  294 #> [13517,]  279  290  294 #> [13518,]  279  290  294 #> [13519,]  279  290  294 #> [13520,]  279  290  294 #> [13521,]  279  290  294 #> [13522,]  279  290  294 #> [13523,]  279  290  294 #> [13524,]  279  290  294 #> [13525,]  279  290  294 #> [13526,]  279  290  294 #> [13527,]  279  290  294 #> [13528,]  279  290  294 #> [13529,]  279  290  294 #> [13530,]  279  290  294 #> [13531,]  279  290  294 #> [13532,]  279  290  294 #> [13533,]  279  290  294 #> [13534,]  279  290  294 #> [13535,]  279  290  294 #> [13536,]  279  290  294 #> [13537,]  279  290  294 #> [13538,]  279  290  294 #> [13539,]  279  290  294 #> [13540,]  279  290  294 #> [13541,]  279  290  294 #> [13542,]  279  290  294 #> [13543,]  279  290  294 #> [13544,]  279  290  294 #> [13545,]  279  290  294 #> [13546,]  279  290  294 #> [13547,]  279  290  294 #> [13548,]  279  290  294 #> [13549,]  278  289  293 #> [13550,]  279  290  294 #> [13551,]  279  290  294 #> [13552,]  279  290  294 #> [13553,]  278  289  293 #> [13554,]  279  290  294 #> [13555,]  278  289  293 #> [13556,]  278  289  293 #> [13557,]  279  290  294 #> [13558,]  279  290  294 #> [13559,]  279  290  294 #> [13560,]  279  290  294 #> [13561,]  279  290  294 #> [13562,]  279  290  294 #> [13563,]  279  290  294 #> [13564,]  279  290  294 #> [13565,]  279  290  294 #> [13566,]  278  289  293 #> [13567,]  279  290  294 #> [13568,]  279  290  294 #> [13569,]  279  290  294 #> [13570,]  279  290  294 #> [13571,]  279  290  294 #> [13572,]  279  290  294 #> [13573,]  279  290  294 #> [13574,]  279  290  294 #> [13575,]  279  290  294 #> [13576,]  279  290  294 #> [13577,]  279  290  294 #> [13578,]  279  290  294 #> [13579,]  279  290  294 #> [13580,]  279  290  294 #> [13581,]  279  290  294 #> [13582,]  279  290  294 #> [13583,]  279  290  294 #> [13584,]  279  290  294 #> [13585,]  279  290  294 #> [13586,]  279  290  294 #> [13587,]  279  290  294 #> [13588,]  279  290  294 #> [13589,]  279  290  294 #> [13590,]  279  290  294 #> [13591,]  279  290  294 #> [13592,]  279  290  294 #> [13593,]  279  290  294 #> [13594,]  279  290  294 #> [13595,]  279  290  294 #> [13596,]  279  290  294 #> [13597,]  279  290  294 #> [13598,]  279  290  294 #> [13599,]  279  290  294 #> [13600,]  279  290  294 #> [13601,]  281  293  297 #> [13602,]  281  292  297 #> [13603,]  280  291  295 #> [13604,]  280  291  295 #> [13605,]  280  291  295 #> [13606,]  281  292  297 #> [13607,]  280  291  295 #> [13608,]  280  291  295 #> [13609,]  280  291  295 #> [13610,]  280  291  295 #> [13611,]  280  291  295 #> [13612,]  280  291  295 #> [13613,]  281  293  296 #> [13614,]  281  292  297 #> [13615,]  281  292  297 #> [13616,]  281  292  297 #> [13617,]  281  293  296 #> [13618,]  280  291  295 #> [13619,]  280  291  295 #> [13620,]  280  291  295 #> [13621,]  281  292  297 #> [13622,]  281  292  296 #> [13623,]  280  291  295 #> [13624,]  280  291  295 #> [13625,]  280  291  295 #> [13626,]  281  292  297 #> [13627,]  281  293  296 #> [13628,]  280  291  295 #> [13629,]  281  293  297 #> [13630,]  280  291  295 #> [13631,]  280  291  295 #> [13632,]  280  291  295 #> [13633,]  281  293  297 #> [13634,]  280  291  295 #> [13635,]  281  292  296 #> [13636,]  280  291  295 #> [13637,]  281  292  297 #> [13638,]  280  291  295 #> [13639,]  280  291  295 #> [13640,]  280  291  295 #> [13641,]  281  293  297 #> [13642,]  280  291  295 #> [13643,]  280  291  295 #> [13644,]  281  292  296 #> [13645,]  280  291  295 #> [13646,]  280  291  295 #> [13647,]  280  291  295 #> [13648,]  280  291  295 #> [13649,]  280  291  295 #> [13650,]  281  292  297 #> [13651,]  280  291  295 #> [13652,]  281  292  296 #> [13653,]  280  291  295 #> [13654,]  280  291  295 #> [13655,]  280  291  295 #> [13656,]  280  291  295 #> [13657,]  280  291  295 #> [13658,]  281  293  296 #> [13659,]  281  292  297 #> [13660,]  280  291  295 #> [13661,]  281  292  297 #> [13662,]  280  291  295 #> [13663,]  280  291  295 #> [13664,]  280  291  295 #> [13665,]  280  291  295 #> [13666,]  280  291  295 #> [13667,]  280  291  295 #> [13668,]  281  292  297 #> [13669,]  280  291  295 #> [13670,]  281  293  297 #> [13671,]  281  292  297 #> [13672,]  280  291  295 #> [13673,]  281  292  297 #> [13674,]  280  291  295 #> [13675,]  280  291  295 #> [13676,]  281  292  297 #> [13677,]  281  293  297 #> [13678,]  280  291  295 #> [13679,]  281  293  297 #> [13680,]  280  291  295 #> [13681,]  281  292  296 #> [13682,]  280  291  295 #> [13683,]  281  293  296 #> [13684,]  280  291  295 #> [13685,]  280  291  295 #> [13686,]  281  292  297 #> [13687,]  280  291  295 #> [13688,]  280  291  295 #> [13689,]  280  291  295 #> [13690,]  281  293  296 #> [13691,]  280  291  295 #> [13692,]  280  291  295 #> [13693,]  281  293  297 #> [13694,]  281  293  297 #> [13695,]  280  291  295 #> [13696,]  281  292  297 #> [13697,]  280  291  295 #> [13698,]  280  291  295 #> [13699,]  281  292  296 #> [13700,]  281  292  297 #> [13701,]  283  295  299 #> [13702,]  283  295  299 #> [13703,]  283  295  299 #> [13704,]  282  294  298 #> [13705,]  283  295  299 #> [13706,]  283  295  299 #> [13707,]  283  295  299 #> [13708,]  282  294  298 #> [13709,]  282  294  298 #> [13710,]  282  294  298 #> [13711,]  283  295  299 #> [13712,]  283  295  299 #> [13713,]  283  295  299 #> [13714,]  283  295  299 #> [13715,]  283  295  299 #> [13716,]  283  295  299 #> [13717,]  283  295  299 #> [13718,]  283  295  299 #> [13719,]  283  295  299 #> [13720,]  282  294  298 #> [13721,]  283  295  299 #> [13722,]  283  295  299 #> [13723,]  283  295  299 #> [13724,]  283  295  299 #> [13725,]  283  295  299 #> [13726,]  283  295  299 #> [13727,]  283  295  299 #> [13728,]  283  295  299 #> [13729,]  283  295  299 #> [13730,]  282  294  298 #> [13731,]  283  295  299 #> [13732,]  283  295  299 #> [13733,]  283  295  299 #> [13734,]  283  295  299 #> [13735,]  283  295  299 #> [13736,]  283  295  299 #> [13737,]  283  295  299 #> [13738,]  283  295  299 #> [13739,]  282  294  298 #> [13740,]  283  295  299 #> [13741,]  283  295  299 #> [13742,]  283  295  299 #> [13743,]  282  294  298 #> [13744,]  283  295  299 #> [13745,]  283  295  299 #> [13746,]  283  295  299 #> [13747,]  283  295  299 #> [13748,]  283  295  299 #> [13749,]  283  295  299 #> [13750,]  283  295  299 #> [13751,]  282  294  298 #> [13752,]  283  295  299 #> [13753,]  282  294  298 #> [13754,]  283  295  299 #> [13755,]  283  295  299 #> [13756,]  282  294  298 #> [13757,]  283  295  299 #> [13758,]  283  295  299 #> [13759,]  283  295  299 #> [13760,]  282  294  298 #> [13761,]  283  295  299 #> [13762,]  283  295  299 #> [13763,]  283  295  299 #> [13764,]  282  294  298 #> [13765,]  283  295  299 #> [13766,]  282  294  298 #> [13767,]  282  294  298 #> [13768,]  283  295  299 #> [13769,]  283  295  299 #> [13770,]  283  295  299 #> [13771,]  283  295  299 #> [13772,]  283  295  299 #> [13773,]  283  295  299 #> [13774,]  283  295  299 #> [13775,]  283  295  299 #> [13776,]  283  295  299 #> [13777,]  283  295  299 #> [13778,]  282  294  298 #> [13779,]  283  295  299 #> [13780,]  283  295  299 #> [13781,]  283  295  299 #> [13782,]  283  295  299 #> [13783,]  283  295  299 #> [13784,]  283  295  299 #> [13785,]  282  294  298 #> [13786,]  283  295  299 #> [13787,]  283  295  299 #> [13788,]  283  295  299 #> [13789,]  282  294  298 #> [13790,]  283  295  299 #> [13791,]  282  294  298 #> [13792,]  283  295  299 #> [13793,]  283  295  299 #> [13794,]  283  295  299 #> [13795,]  282  294  298 #> [13796,]  283  295  299 #> [13797,]  283  295  299 #> [13798,]  283  295  299 #> [13799,]  283  295  299 #> [13800,]  283  295  299 #> [13801,]  284  296  300 #> [13802,]  284  296  300 #> [13803,]  284  296  300 #> [13804,]  285  297  301 #> [13805,]  284  296  300 #> [13806,]  284  296  300 #> [13807,]  284  296  300 #> [13808,]  284  296  300 #> [13809,]  284  296  300 #> [13810,]  285  297  301 #> [13811,]  284  296  300 #> [13812,]  284  296  300 #> [13813,]  284  296  300 #> [13814,]  284  296  300 #> [13815,]  285  297  301 #> [13816,]  285  297  301 #> [13817,]  284  296  300 #> [13818,]  285  297  301 #> [13819,]  284  296  300 #> [13820,]  284  296  300 #> [13821,]  285  297  301 #> [13822,]  284  296  300 #> [13823,]  285  297  301 #> [13824,]  284  296  300 #> [13825,]  285  297  301 #> [13826,]  284  296  300 #> [13827,]  285  297  301 #> [13828,]  284  296  300 #> [13829,]  284  296  300 #> [13830,]  284  296  300 #> [13831,]  284  296  300 #> [13832,]  284  296  300 #> [13833,]  284  296  300 #> [13834,]  284  296  300 #> [13835,]  284  296  300 #> [13836,]  284  296  300 #> [13837,]  284  296  300 #> [13838,]  284  296  300 #> [13839,]  285  297  301 #> [13840,]  284  296  300 #> [13841,]  284  296  300 #> [13842,]  284  296  300 #> [13843,]  285  297  301 #> [13844,]  284  296  300 #> [13845,]  285  297  301 #> [13846,]  284  296  300 #> [13847,]  284  296  300 #> [13848,]  284  296  300 #> [13849,]  284  296  300 #> [13850,]  284  296  300 #> [13851,]  284  296  300 #> [13852,]  284  296  300 #> [13853,]  285  297  301 #> [13854,]  284  296  300 #> [13855,]  284  296  300 #> [13856,]  284  296  300 #> [13857,]  284  296  300 #> [13858,]  284  296  300 #> [13859,]  284  296  300 #> [13860,]  284  296  300 #> [13861,]  285  297  301 #> [13862,]  284  296  300 #> [13863,]  284  296  300 #> [13864,]  284  296  300 #> [13865,]  284  296  300 #> [13866,]  284  296  300 #> [13867,]  284  296  300 #> [13868,]  284  296  300 #> [13869,]  284  296  300 #> [13870,]  284  296  300 #> [13871,]  284  296  300 #> [13872,]  285  297  301 #> [13873,]  285  297  301 #> [13874,]  285  297  301 #> [13875,]  285  297  301 #> [13876,]  285  297  301 #> [13877,]  285  297  301 #> [13878,]  284  296  300 #> [13879,]  284  296  300 #> [13880,]  284  296  300 #> [13881,]  284  296  300 #> [13882,]  284  296  300 #> [13883,]  284  296  300 #> [13884,]  285  297  301 #> [13885,]  284  296  300 #> [13886,]  284  296  300 #> [13887,]  284  296  300 #> [13888,]  284  296  300 #> [13889,]  284  296  300 #> [13890,]  284  296  300 #> [13891,]  284  296  300 #> [13892,]  284  296  300 #> [13893,]  284  296  300 #> [13894,]  285  297  301 #> [13895,]  285  297  301 #> [13896,]  284  296  300 #> [13897,]  284  296  300 #> [13898,]  284  296  300 #> [13899,]  284  296  300 #> [13900,]  285  297  301 #> [13901,]  287  298  302 #> [13902,]  286  299  303 #> [13903,]  287  298  302 #> [13904,]  287  298  302 #> [13905,]  287  298  302 #> [13906,]  286  299  303 #> [13907,]  287  298  302 #> [13908,]  287  298  302 #> [13909,]  287  298  302 #> [13910,]  287  298  302 #> [13911,]  286  299  304 #> [13912,]  286  299  303 #> [13913,]  287  298  302 #> [13914,]  287  298  302 #> [13915,]  286  300  303 #> [13916,]  287  298  302 #> [13917,]  286  299  304 #> [13918,]  287  298  302 #> [13919,]  287  298  302 #> [13920,]  287  298  302 #> [13921,]  287  298  302 #> [13922,]  287  298  302 #> [13923,]  286  299  303 #> [13924,]  287  298  302 #> [13925,]  287  298  302 #> [13926,]  287  298  302 #> [13927,]  287  298  302 #> [13928,]  287  298  302 #> [13929,]  286  300  304 #> [13930,]  286  299  303 #> [13931,]  286  299  303 #> [13932,]  287  298  302 #> [13933,]  287  298  302 #> [13934,]  286  299  303 #> [13935,]  286  299  303 #> [13936,]  287  298  302 #> [13937,]  286  299  303 #> [13938,]  287  298  302 #> [13939,]  287  298  302 #> [13940,]  287  298  302 #> [13941,]  287  298  302 #> [13942,]  286  299  304 #> [13943,]  286  299  303 #> [13944,]  286  299  303 #> [13945,]  287  298  302 #> [13946,]  287  298  302 #> [13947,]  286  299  303 #> [13948,]  286  299  303 #> [13949,]  287  298  302 #> [13950,]  287  298  302 #> [13951,]  287  298  302 #> [13952,]  287  298  302 #> [13953,]  287  298  302 #> [13954,]  287  298  302 #> [13955,]  287  298  302 #> [13956,]  286  299  304 #> [13957,]  287  298  302 #> [13958,]  287  298  302 #> [13959,]  287  298  302 #> [13960,]  286  299  303 #> [13961,]  286  299  304 #> [13962,]  287  298  302 #> [13963,]  286  299  303 #> [13964,]  286  300  304 #> [13965,]  286  299  304 #> [13966,]  286  300  304 #> [13967,]  287  298  302 #> [13968,]  287  298  302 #> [13969,]  287  298  302 #> [13970,]  286  299  304 #> [13971,]  287  298  302 #> [13972,]  287  298  302 #> [13973,]  287  298  302 #> [13974,]  287  298  302 #> [13975,]  286  299  303 #> [13976,]  287  298  302 #> [13977,]  287  298  302 #> [13978,]  286  299  303 #> [13979,]  286  299  304 #> [13980,]  287  298  302 #> [13981,]  286  300  304 #> [13982,]  287  298  302 #> [13983,]  287  298  302 #> [13984,]  287  298  302 #> [13985,]  287  298  302 #> [13986,]  287  298  302 #> [13987,]  287  298  302 #> [13988,]  287  298  302 #> [13989,]  287  298  302 #> [13990,]  287  298  302 #> [13991,]  287  298  302 #> [13992,]  286  299  303 #> [13993,]  287  298  302 #> [13994,]  286  299  304 #> [13995,]  286  299  303 #> [13996,]  287  298  302 #> [13997,]  287  298  302 #> [13998,]  287  298  302 #> [13999,]  287  298  302 #> [14000,]  286  300  304 #> [14001,]  288  301  306 #> [14002,]  289  302  305 #> [14003,]  288  301  305 #> [14004,]  288  301  305 #> [14005,]  289  302  306 #> [14006,]  288  301  305 #> [14007,]  288  301  305 #> [14008,]  288  301  305 #> [14009,]  289  302  306 #> [14010,]  289  302  305 #> [14011,]  288  301  306 #> [14012,]  289  302  305 #> [14013,]  289  302  306 #> [14014,]  288  301  305 #> [14015,]  288  301  305 #> [14016,]  288  301  305 #> [14017,]  289  302  306 #> [14018,]  289  302  306 #> [14019,]  288  301  306 #> [14020,]  289  302  306 #> [14021,]  289  302  306 #> [14022,]  289  302  306 #> [14023,]  289  302  305 #> [14024,]  289  302  306 #> [14025,]  288  301  305 #> [14026,]  288  301  305 #> [14027,]  289  302  306 #> [14028,]  288  301  306 #> [14029,]  289  302  306 #> [14030,]  288  301  305 #> [14031,]  289  302  305 #> [14032,]  289  302  305 #> [14033,]  289  302  306 #> [14034,]  288  301  305 #> [14035,]  288  301  305 #> [14036,]  289  302  306 #> [14037,]  288  301  305 #> [14038,]  288  301  306 #> [14039,]  288  301  306 #> [14040,]  289  302  305 #> [14041,]  288  301  306 #> [14042,]  288  301  306 #> [14043,]  288  301  305 #> [14044,]  289  302  305 #> [14045,]  288  301  305 #> [14046,]  288  301  305 #> [14047,]  288  301  305 #> [14048,]  288  301  305 #> [14049,]  288  301  305 #> [14050,]  289  302  306 #> [14051,]  288  301  306 #> [14052,]  288  301  305 #> [14053,]  289  302  306 #> [14054,]  288  301  306 #> [14055,]  288  301  305 #> [14056,]  288  301  306 #> [14057,]  288  301  305 #> [14058,]  288  301  306 #> [14059,]  288  301  305 #> [14060,]  289  302  305 #> [14061,]  289  302  306 #> [14062,]  288  301  306 #> [14063,]  289  302  305 #> [14064,]  288  301  306 #> [14065,]  288  301  306 #> [14066,]  288  301  306 #> [14067,]  288  301  305 #> [14068,]  288  301  305 #> [14069,]  288  301  305 #> [14070,]  289  302  306 #> [14071,]  288  301  305 #> [14072,]  288  301  305 #> [14073,]  288  301  306 #> [14074,]  288  301  305 #> [14075,]  289  302  305 #> [14076,]  288  301  305 #> [14077,]  288  301  306 #> [14078,]  288  301  305 #> [14079,]  288  301  306 #> [14080,]  289  302  305 #> [14081,]  289  302  306 #> [14082,]  288  301  306 #> [14083,]  289  302  306 #> [14084,]  289  302  306 #> [14085,]  288  301  306 #> [14086,]  289  302  305 #> [14087,]  288  301  306 #> [14088,]  289  302  305 #> [14089,]  288  301  306 #> [14090,]  288  301  306 #> [14091,]  288  301  306 #> [14092,]  289  302  305 #> [14093,]  289  302  306 #> [14094,]  288  301  306 #> [14095,]  288  301  305 #> [14096,]  288  301  305 #> [14097,]  288  301  305 #> [14098,]  288  301  305 #> [14099,]  288  301  306 #> [14100,]  288  301  306 #> [14101,]  290  303  307 #> [14102,]  290  303  307 #> [14103,]  290  303  307 #> [14104,]  290  303  307 #> [14105,]  290  303  307 #> [14106,]  291  304  308 #> [14107,]  290  303  307 #> [14108,]  291  304  308 #> [14109,]  291  304  308 #> [14110,]  290  303  307 #> [14111,]  290  303  307 #> [14112,]  291  304  308 #> [14113,]  290  303  307 #> [14114,]  290  303  307 #> [14115,]  291  304  308 #> [14116,]  290  303  307 #> [14117,]  290  303  307 #> [14118,]  290  303  307 #> [14119,]  290  303  307 #> [14120,]  290  303  307 #> [14121,]  290  303  307 #> [14122,]  290  303  307 #> [14123,]  290  303  307 #> [14124,]  290  303  307 #> [14125,]  290  303  307 #> [14126,]  291  304  308 #> [14127,]  290  303  307 #> [14128,]  290  303  307 #> [14129,]  290  303  307 #> [14130,]  290  303  307 #> [14131,]  290  303  307 #> [14132,]  290  303  307 #> [14133,]  291  304  308 #> [14134,]  290  303  307 #> [14135,]  290  303  307 #> [14136,]  290  303  307 #> [14137,]  290  303  307 #> [14138,]  290  303  307 #> [14139,]  290  303  307 #> [14140,]  290  303  307 #> [14141,]  290  303  307 #> [14142,]  290  303  307 #> [14143,]  291  304  308 #> [14144,]  290  303  307 #> [14145,]  291  304  308 #> [14146,]  291  304  308 #> [14147,]  290  303  307 #> [14148,]  290  303  307 #> [14149,]  290  303  307 #> [14150,]  290  303  307 #> [14151,]  291  304  308 #> [14152,]  290  303  307 #> [14153,]  290  303  307 #> [14154,]  290  303  307 #> [14155,]  290  303  307 #> [14156,]  291  304  308 #> [14157,]  291  304  308 #> [14158,]  290  303  307 #> [14159,]  290  303  307 #> [14160,]  290  303  307 #> [14161,]  291  304  308 #> [14162,]  290  303  307 #> [14163,]  290  303  307 #> [14164,]  291  304  308 #> [14165,]  291  304  308 #> [14166,]  291  304  308 #> [14167,]  290  303  307 #> [14168,]  291  304  308 #> [14169,]  290  303  307 #> [14170,]  290  303  307 #> [14171,]  290  303  307 #> [14172,]  291  304  308 #> [14173,]  290  303  307 #> [14174,]  290  303  307 #> [14175,]  290  303  307 #> [14176,]  291  304  308 #> [14177,]  290  303  307 #> [14178,]  290  303  307 #> [14179,]  290  303  307 #> [14180,]  290  303  307 #> [14181,]  291  304  308 #> [14182,]  290  303  307 #> [14183,]  290  303  307 #> [14184,]  290  303  307 #> [14185,]  290  303  307 #> [14186,]  290  303  307 #> [14187,]  290  303  307 #> [14188,]  290  303  307 #> [14189,]  290  303  307 #> [14190,]  290  303  307 #> [14191,]  290  303  307 #> [14192,]  291  304  308 #> [14193,]  290  303  307 #> [14194,]  291  304  308 #> [14195,]  290  303  307 #> [14196,]  291  304  308 #> [14197,]  291  304  308 #> [14198,]  290  303  307 #> [14199,]  290  303  307 #> [14200,]  290  303  307 #> [14201,]  292  305  309 #> [14202,]  292  305  309 #> [14203,]  293  306  309 #> [14204,]  292  305  309 #> [14205,]  292  305  309 #> [14206,]  292  305  309 #> [14207,]  294  306  309 #> [14208,]  292  305  310 #> [14209,]  292  305  309 #> [14210,]  292  305  309 #> [14211,]  292  305  309 #> [14212,]  292  305  309 #> [14213,]  292  305  310 #> [14214,]  292  305  309 #> [14215,]  292  305  310 #> [14216,]  292  305  309 #> [14217,]  292  305  309 #> [14218,]  292  305  309 #> [14219,]  292  305  310 #> [14220,]  294  306  310 #> [14221,]  292  305  309 #> [14222,]  292  305  310 #> [14223,]  292  305  309 #> [14224,]  292  305  309 #> [14225,]  294  306  309 #> [14226,]  292  305  310 #> [14227,]  292  305  310 #> [14228,]  292  305  309 #> [14229,]  292  305  310 #> [14230,]  292  305  309 #> [14231,]  292  305  309 #> [14232,]  292  305  309 #> [14233,]  292  305  309 #> [14234,]  292  305  309 #> [14235,]  292  305  309 #> [14236,]  292  305  310 #> [14237,]  292  305  310 #> [14238,]  292  305  310 #> [14239,]  294  306  309 #> [14240,]  292  305  309 #> [14241,]  292  305  310 #> [14242,]  292  305  309 #> [14243,]  292  305  310 #> [14244,]  294  306  310 #> [14245,]  292  305  309 #> [14246,]  292  305  310 #> [14247,]  292  305  309 #> [14248,]  292  305  309 #> [14249,]  293  306  309 #> [14250,]  292  305  310 #> [14251,]  292  305  310 #> [14252,]  292  305  309 #> [14253,]  294  306  310 #> [14254,]  292  305  309 #> [14255,]  293  306  310 #> [14256,]  293  306  310 #> [14257,]  292  305  309 #> [14258,]  292  305  310 #> [14259,]  293  306  310 #> [14260,]  292  305  310 #> [14261,]  292  305  309 #> [14262,]  292  305  309 #> [14263,]  292  305  309 #> [14264,]  292  305  310 #> [14265,]  293  306  309 #> [14266,]  294  306  310 #> [14267,]  292  305  309 #> [14268,]  292  305  309 #> [14269,]  292  305  310 #> [14270,]  292  305  309 #> [14271,]  292  305  310 #> [14272,]  292  305  309 #> [14273,]  292  305  309 #> [14274,]  292  305  309 #> [14275,]  292  305  309 #> [14276,]  292  305  309 #> [14277,]  292  305  310 #> [14278,]  292  305  309 #> [14279,]  292  305  309 #> [14280,]  292  305  310 #> [14281,]  292  305  310 #> [14282,]  292  305  309 #> [14283,]  292  305  310 #> [14284,]  292  305  310 #> [14285,]  292  305  310 #> [14286,]  292  305  309 #> [14287,]  292  305  310 #> [14288,]  292  305  309 #> [14289,]  292  305  309 #> [14290,]  294  306  310 #> [14291,]  292  305  309 #> [14292,]  292  305  309 #> [14293,]  292  305  309 #> [14294,]  292  305  309 #> [14295,]  292  305  310 #> [14296,]  292  305  310 #> [14297,]  292  305  310 #> [14298,]  293  306  309 #> [14299,]  292  305  309 #> [14300,]  293  306  310 #> [14301,]  296  308  311 #> [14302,]  296  307  312 #> [14303,]  295  307  312 #> [14304,]  295  308  311 #> [14305,]  295  308  311 #> [14306,]  295  308  311 #> [14307,]  296  307  312 #> [14308,]  296  308  311 #> [14309,]  295  308  311 #> [14310,]  295  308  311 #> [14311,]  295  308  311 #> [14312,]  296  308  311 #> [14313,]  296  307  312 #> [14314,]  295  308  311 #> [14315,]  296  308  311 #> [14316,]  296  307  312 #> [14317,]  296  308  311 #> [14318,]  296  307  313 #> [14319,]  296  307  313 #> [14320,]  296  308  311 #> [14321,]  295  307  313 #> [14322,]  296  307  312 #> [14323,]  296  307  313 #> [14324,]  295  307  312 #> [14325,]  295  308  311 #> [14326,]  296  308  311 #> [14327,]  296  308  311 #> [14328,]  295  308  311 #> [14329,]  296  308  311 #> [14330,]  296  307  313 #> [14331,]  295  307  313 #> [14332,]  295  308  311 #> [14333,]  296  308  311 #> [14334,]  295  307  313 #> [14335,]  295  307  312 #> [14336,]  296  307  313 #> [14337,]  296  307  312 #> [14338,]  296  308  311 #> [14339,]  295  307  312 #> [14340,]  295  307  312 #> [14341,]  296  308  311 #> [14342,]  295  308  311 #> [14343,]  296  308  311 #> [14344,]  296  307  312 #> [14345,]  296  308  311 #> [14346,]  296  308  311 #> [14347,]  295  307  312 #> [14348,]  295  308  311 #> [14349,]  296  307  312 #> [14350,]  296  308  311 #> [14351,]  296  308  311 #> [14352,]  295  308  311 #> [14353,]  296  308  311 #> [14354,]  295  307  312 #> [14355,]  296  308  311 #> [14356,]  296  308  311 #> [14357,]  295  308  311 #> [14358,]  296  308  311 #> [14359,]  296  307  312 #> [14360,]  296  308  311 #> [14361,]  296  308  311 #> [14362,]  295  307  313 #> [14363,]  296  308  311 #> [14364,]  296  308  311 #> [14365,]  295  308  311 #> [14366,]  296  308  311 #> [14367,]  296  308  311 #> [14368,]  296  308  311 #> [14369,]  296  308  311 #> [14370,]  295  307  312 #> [14371,]  296  308  311 #> [14372,]  295  308  311 #> [14373,]  296  308  311 #> [14374,]  295  308  311 #> [14375,]  296  308  311 #> [14376,]  295  308  311 #> [14377,]  296  307  312 #> [14378,]  296  308  311 #> [14379,]  296  307  312 #> [14380,]  296  307  313 #> [14381,]  296  308  311 #> [14382,]  295  308  311 #> [14383,]  296  307  312 #> [14384,]  296  308  311 #> [14385,]  296  308  311 #> [14386,]  296  307  312 #> [14387,]  296  308  311 #> [14388,]  296  308  311 #> [14389,]  296  308  311 #> [14390,]  296  308  311 #> [14391,]  295  308  311 #> [14392,]  296  308  311 #> [14393,]  296  307  313 #> [14394,]  296  308  311 #> [14395,]  296  307  312 #> [14396,]  296  308  311 #> [14397,]  296  308  311 #> [14398,]  295  307  312 #> [14399,]  296  308  311 #> [14400,]  296  307  312 #> [14401,]  298  310  315 #> [14402,]  297  309  314 #> [14403,]  297  309  314 #> [14404,]  298  310  315 #> [14405,]  298  310  315 #> [14406,]  298  310  315 #> [14407,]  297  309  314 #> [14408,]  298  310  315 #> [14409,]  298  310  315 #> [14410,]  297  309  314 #> [14411,]  298  310  315 #> [14412,]  298  310  315 #> [14413,]  297  309  314 #> [14414,]  298  310  315 #> [14415,]  298  310  315 #> [14416,]  297  309  314 #> [14417,]  297  309  314 #> [14418,]  297  309  314 #> [14419,]  297  309  314 #> [14420,]  298  310  315 #> [14421,]  297  309  314 #> [14422,]  297  309  314 #> [14423,]  297  309  314 #> [14424,]  297  309  314 #> [14425,]  297  309  314 #> [14426,]  298  310  315 #> [14427,]  297  309  314 #> [14428,]  298  310  315 #> [14429,]  297  309  314 #> [14430,]  297  309  314 #> [14431,]  297  309  314 #> [14432,]  297  309  314 #> [14433,]  298  310  315 #> [14434,]  297  309  314 #> [14435,]  297  309  314 #> [14436,]  297  309  314 #> [14437,]  297  309  314 #> [14438,]  298  310  315 #> [14439,]  297  309  314 #> [14440,]  297  309  314 #> [14441,]  298  310  315 #> [14442,]  298  310  315 #> [14443,]  298  310  315 #> [14444,]  297  309  314 #> [14445,]  298  310  315 #> [14446,]  298  310  315 #> [14447,]  297  309  314 #> [14448,]  297  309  314 #> [14449,]  297  309  314 #> [14450,]  298  310  315 #> [14451,]  298  310  315 #> [14452,]  298  310  315 #> [14453,]  298  310  315 #> [14454,]  297  309  314 #> [14455,]  298  310  315 #> [14456,]  298  310  315 #> [14457,]  298  310  315 #> [14458,]  298  310  315 #> [14459,]  297  309  314 #> [14460,]  298  310  315 #> [14461,]  298  310  315 #> [14462,]  297  309  314 #> [14463,]  298  310  315 #> [14464,]  298  310  315 #> [14465,]  298  310  315 #> [14466,]  298  310  315 #> [14467,]  298  310  315 #> [14468,]  298  310  315 #> [14469,]  298  310  315 #> [14470,]  297  309  314 #> [14471,]  298  310  315 #> [14472,]  298  310  315 #> [14473,]  298  310  315 #> [14474,]  298  310  315 #> [14475,]  298  310  315 #> [14476,]  298  310  315 #> [14477,]  297  309  314 #> [14478,]  298  310  315 #> [14479,]  297  309  314 #> [14480,]  297  309  314 #> [14481,]  298  310  315 #> [14482,]  298  310  315 #> [14483,]  297  309  314 #> [14484,]  298  310  315 #> [14485,]  297  309  314 #> [14486,]  297  309  314 #> [14487,]  298  310  315 #> [14488,]  298  310  315 #> [14489,]  298  310  315 #> [14490,]  298  310  315 #> [14491,]  298  310  315 #> [14492,]  298  310  315 #> [14493,]  297  309  314 #> [14494,]  298  310  315 #> [14495,]  297  309  314 #> [14496,]  298  310  315 #> [14497,]  298  310  315 #> [14498,]  297  309  314 #> [14499,]  298  310  315 #> [14500,]  297  309  314 #> [14501,]  300  312  317 #> [14502,]  300  312  317 #> [14503,]  299  311  316 #> [14504,]  300  312  316 #> [14505,]  300  312  316 #> [14506,]  299  311  316 #> [14507,]  300  312  317 #> [14508,]  300  312  317 #> [14509,]  300  312  316 #> [14510,]  300  312  316 #> [14511,]  299  311  316 #> [14512,]  300  312  317 #> [14513,]  300  312  317 #> [14514,]  300  312  316 #> [14515,]  300  312  317 #> [14516,]  299  311  317 #> [14517,]  300  312  317 #> [14518,]  300  312  317 #> [14519,]  299  311  317 #> [14520,]  300  312  317 #> [14521,]  300  312  316 #> [14522,]  300  312  317 #> [14523,]  300  312  317 #> [14524,]  300  312  316 #> [14525,]  300  312  316 #> [14526,]  300  312  317 #> [14527,]  300  312  317 #> [14528,]  300  312  316 #> [14529,]  300  312  317 #> [14530,]  300  312  317 #> [14531,]  300  312  316 #> [14532,]  300  312  316 #> [14533,]  300  312  317 #> [14534,]  299  311  316 #> [14535,]  299  311  316 #> [14536,]  300  312  317 #> [14537,]  299  311  317 #> [14538,]  299  311  317 #> [14539,]  300  312  316 #> [14540,]  300  312  316 #> [14541,]  300  312  317 #> [14542,]  300  312  316 #> [14543,]  300  312  317 #> [14544,]  300  312  317 #> [14545,]  299  311  317 #> [14546,]  300  312  317 #> [14547,]  300  312  316 #> [14548,]  300  312  316 #> [14549,]  299  311  317 #> [14550,]  300  312  317 #> [14551,]  300  312  317 #> [14552,]  299  311  316 #> [14553,]  300  312  317 #> [14554,]  300  312  316 #> [14555,]  300  312  317 #> [14556,]  300  312  317 #> [14557,]  300  312  316 #> [14558,]  300  312  317 #> [14559,]  300  312  317 #> [14560,]  300  312  317 #> [14561,]  300  312  317 #> [14562,]  300  312  316 #> [14563,]  300  312  317 #> [14564,]  299  311  317 #> [14565,]  300  312  316 #> [14566,]  300  312  317 #> [14567,]  300  312  316 #> [14568,]  299  311  317 #> [14569,]  300  312  317 #> [14570,]  300  312  316 #> [14571,]  300  312  317 #> [14572,]  299  311  316 #> [14573,]  300  312  316 #> [14574,]  300  312  316 #> [14575,]  300  312  317 #> [14576,]  300  312  316 #> [14577,]  300  312  317 #> [14578,]  300  312  317 #> [14579,]  300  312  316 #> [14580,]  300  312  317 #> [14581,]  300  312  317 #> [14582,]  300  312  316 #> [14583,]  300  312  317 #> [14584,]  300  312  317 #> [14585,]  300  312  317 #> [14586,]  300  312  316 #> [14587,]  300  312  317 #> [14588,]  300  312  316 #> [14589,]  300  312  316 #> [14590,]  300  312  317 #> [14591,]  300  312  316 #> [14592,]  300  312  316 #> [14593,]  300  312  317 #> [14594,]  300  312  316 #> [14595,]  300  312  317 #> [14596,]  299  311  317 #> [14597,]  299  311  317 #> [14598,]  300  312  316 #> [14599,]  300  312  316 #> [14600,]  300  312  317 #> [14601,]  302  314  318 #> [14602,]  301  313  319 #> [14603,]  301  313  319 #> [14604,]  302  314  318 #> [14605,]  302  314  318 #> [14606,]  302  314  318 #> [14607,]  301  313  319 #> [14608,]  302  314  318 #> [14609,]  302  314  318 #> [14610,]  301  313  319 #> [14611,]  302  314  318 #> [14612,]  302  314  318 #> [14613,]  301  313  319 #> [14614,]  302  314  318 #> [14615,]  302  314  318 #> [14616,]  301  313  319 #> [14617,]  302  314  318 #> [14618,]  301  313  319 #> [14619,]  301  313  319 #> [14620,]  302  314  318 #> [14621,]  301  313  319 #> [14622,]  301  313  319 #> [14623,]  301  313  319 #> [14624,]  301  313  319 #> [14625,]  302  314  318 #> [14626,]  302  314  318 #> [14627,]  302  314  318 #> [14628,]  302  314  318 #> [14629,]  301  313  319 #> [14630,]  301  313  319 #> [14631,]  301  313  319 #> [14632,]  301  313  319 #> [14633,]  302  314  318 #> [14634,]  301  313  319 #> [14635,]  301  313  319 #> [14636,]  301  313  319 #> [14637,]  301  313  319 #> [14638,]  302  314  318 #> [14639,]  301  313  319 #> [14640,]  301  313  319 #> [14641,]  302  314  318 #> [14642,]  302  314  318 #> [14643,]  302  314  318 #> [14644,]  301  313  319 #> [14645,]  302  314  318 #> [14646,]  302  314  318 #> [14647,]  301  313  319 #> [14648,]  301  313  319 #> [14649,]  301  313  319 #> [14650,]  302  314  318 #> [14651,]  302  314  318 #> [14652,]  302  314  318 #> [14653,]  302  314  318 #> [14654,]  301  313  319 #> [14655,]  302  314  318 #> [14656,]  302  314  318 #> [14657,]  302  314  318 #> [14658,]  302  314  318 #> [14659,]  301  313  319 #> [14660,]  302  314  318 #> [14661,]  302  314  318 #> [14662,]  301  313  319 #> [14663,]  302  314  318 #> [14664,]  302  314  318 #> [14665,]  302  314  318 #> [14666,]  302  314  318 #> [14667,]  302  314  318 #> [14668,]  302  314  318 #> [14669,]  302  314  318 #> [14670,]  301  313  319 #> [14671,]  302  314  318 #> [14672,]  302  314  318 #> [14673,]  302  314  318 #> [14674,]  302  314  318 #> [14675,]  302  314  318 #> [14676,]  302  314  318 #> [14677,]  301  313  319 #> [14678,]  302  314  318 #> [14679,]  301  313  319 #> [14680,]  301  313  319 #> [14681,]  302  314  318 #> [14682,]  302  314  318 #> [14683,]  301  313  319 #> [14684,]  302  314  318 #> [14685,]  301  313  319 #> [14686,]  301  313  319 #> [14687,]  302  314  318 #> [14688,]  302  314  318 #> [14689,]  302  314  318 #> [14690,]  302  314  318 #> [14691,]  302  314  318 #> [14692,]  302  314  318 #> [14693,]  301  313  319 #> [14694,]  302  314  318 #> [14695,]  301  313  319 #> [14696,]  302  314  318 #> [14697,]  302  314  318 #> [14698,]  301  313  319 #> [14699,]  302  314  318 #> [14700,]  301  313  319 #> [14701,]  304  316  321 #> [14702,]  303  315  320 #> [14703,]  303  315  320 #> [14704,]  303  315  320 #> [14705,]  303  315  320 #> [14706,]  303  315  320 #> [14707,]  303  315  320 #> [14708,]  303  315  320 #> [14709,]  304  316  321 #> [14710,]  303  315  320 #> [14711,]  303  315  320 #> [14712,]  303  315  320 #> [14713,]  304  316  321 #> [14714,]  303  315  320 #> [14715,]  303  315  320 #> [14716,]  303  315  320 #> [14717,]  304  316  321 #> [14718,]  304  316  321 #> [14719,]  303  315  320 #> [14720,]  303  315  320 #> [14721,]  303  315  320 #> [14722,]  303  315  320 #> [14723,]  303  315  320 #> [14724,]  303  315  320 #> [14725,]  303  315  320 #> [14726,]  303  315  320 #> [14727,]  304  316  321 #> [14728,]  303  315  320 #> [14729,]  303  315  320 #> [14730,]  303  315  320 #> [14731,]  303  315  320 #> [14732,]  303  315  320 #> [14733,]  303  315  320 #> [14734,]  303  315  320 #> [14735,]  303  315  320 #> [14736,]  304  316  321 #> [14737,]  303  315  320 #> [14738,]  303  315  320 #> [14739,]  303  315  320 #> [14740,]  303  315  320 #> [14741,]  303  315  320 #> [14742,]  304  316  321 #> [14743,]  303  315  320 #> [14744,]  303  315  320 #> [14745,]  303  315  320 #> [14746,]  303  315  320 #> [14747,]  303  315  320 #> [14748,]  303  315  320 #> [14749,]  303  315  320 #> [14750,]  303  315  320 #> [14751,]  304  316  321 #> [14752,]  303  315  320 #> [14753,]  304  316  321 #> [14754,]  303  315  320 #> [14755,]  303  315  320 #> [14756,]  304  316  321 #> [14757,]  303  315  320 #> [14758,]  303  315  320 #> [14759,]  303  315  320 #> [14760,]  303  315  320 #> [14761,]  303  315  320 #> [14762,]  303  315  320 #> [14763,]  303  315  320 #> [14764,]  303  315  320 #> [14765,]  304  316  321 #> [14766,]  304  316  321 #> [14767,]  303  315  320 #> [14768,]  303  315  320 #> [14769,]  303  315  320 #> [14770,]  303  315  320 #> [14771,]  303  315  320 #> [14772,]  303  315  320 #> [14773,]  303  315  320 #> [14774,]  303  315  320 #> [14775,]  303  315  320 #> [14776,]  303  315  320 #> [14777,]  303  315  320 #> [14778,]  303  315  320 #> [14779,]  304  316  321 #> [14780,]  303  315  320 #> [14781,]  303  315  320 #> [14782,]  304  316  321 #> [14783,]  304  316  321 #> [14784,]  304  316  321 #> [14785,]  303  315  320 #> [14786,]  303  315  320 #> [14787,]  304  316  321 #> [14788,]  303  315  320 #> [14789,]  303  315  320 #> [14790,]  303  315  320 #> [14791,]  304  316  321 #> [14792,]  303  315  320 #> [14793,]  304  316  321 #> [14794,]  304  316  321 #> [14795,]  303  315  320 #> [14796,]  303  315  320 #> [14797,]  303  315  320 #> [14798,]  303  315  320 #> [14799,]  303  315  320 #> [14800,]  303  315  320 #> [14801,]  306  318  323 #> [14802,]  305  317  322 #> [14803,]  306  318  323 #> [14804,]  306  318  323 #> [14805,]  306  318  323 #> [14806,]  305  317  322 #> [14807,]  306  318  323 #> [14808,]  306  318  323 #> [14809,]  306  318  323 #> [14810,]  306  318  323 #> [14811,]  305  317  322 #> [14812,]  305  317  322 #> [14813,]  306  318  323 #> [14814,]  306  318  323 #> [14815,]  305  317  322 #> [14816,]  306  318  323 #> [14817,]  305  317  322 #> [14818,]  306  318  323 #> [14819,]  305  317  322 #> [14820,]  306  318  323 #> [14821,]  306  318  323 #> [14822,]  306  318  323 #> [14823,]  305  317  322 #> [14824,]  306  318  323 #> [14825,]  306  318  323 #> [14826,]  305  317  322 #> [14827,]  306  318  323 #> [14828,]  306  318  323 #> [14829,]  305  317  322 #> [14830,]  305  317  322 #> [14831,]  305  317  322 #> [14832,]  306  318  323 #> [14833,]  306  318  323 #> [14834,]  305  317  322 #> [14835,]  305  317  322 #> [14836,]  306  318  323 #> [14837,]  305  317  322 #> [14838,]  306  318  323 #> [14839,]  306  318  323 #> [14840,]  306  318  323 #> [14841,]  306  318  323 #> [14842,]  305  317  322 #> [14843,]  305  317  322 #> [14844,]  305  317  322 #> [14845,]  306  318  323 #> [14846,]  306  318  323 #> [14847,]  305  317  322 #> [14848,]  305  317  322 #> [14849,]  306  318  323 #> [14850,]  306  318  323 #> [14851,]  306  318  323 #> [14852,]  306  318  323 #> [14853,]  306  318  323 #> [14854,]  306  318  323 #> [14855,]  306  318  323 #> [14856,]  305  317  322 #> [14857,]  306  318  323 #> [14858,]  306  318  323 #> [14859,]  306  318  323 #> [14860,]  305  317  322 #> [14861,]  305  317  322 #> [14862,]  306  318  323 #> [14863,]  305  317  322 #> [14864,]  305  317  322 #> [14865,]  305  317  322 #> [14866,]  305  317  322 #> [14867,]  306  318  323 #> [14868,]  305  317  322 #> [14869,]  306  318  323 #> [14870,]  305  317  322 #> [14871,]  306  318  323 #> [14872,]  306  318  323 #> [14873,]  306  318  323 #> [14874,]  306  318  323 #> [14875,]  305  317  322 #> [14876,]  306  318  323 #> [14877,]  306  318  323 #> [14878,]  305  317  322 #> [14879,]  305  317  322 #> [14880,]  306  318  323 #> [14881,]  305  317  322 #> [14882,]  306  318  323 #> [14883,]  306  318  323 #> [14884,]  306  318  323 #> [14885,]  306  318  323 #> [14886,]  306  318  323 #> [14887,]  306  318  323 #> [14888,]  306  318  323 #> [14889,]  306  318  323 #> [14890,]  306  318  323 #> [14891,]  306  318  323 #> [14892,]  305  317  322 #> [14893,]  306  318  323 #> [14894,]  305  317  322 #> [14895,]  305  317  322 #> [14896,]  305  317  322 #> [14897,]  306  318  323 #> [14898,]  306  318  323 #> [14899,]  306  318  323 #> [14900,]  305  317  322 #> [14901,]  308  320  325 #> [14902,]  308  320  325 #> [14903,]  308  320  325 #> [14904,]  307  319  324 #> [14905,]  308  320  325 #> [14906,]  308  320  325 #> [14907,]  308  320  325 #> [14908,]  307  319  324 #> [14909,]  307  319  324 #> [14910,]  308  320  325 #> [14911,]  308  320  325 #> [14912,]  308  320  325 #> [14913,]  308  320  325 #> [14914,]  308  320  325 #> [14915,]  308  320  325 #> [14916,]  308  320  325 #> [14917,]  307  319  324 #> [14918,]  308  320  325 #> [14919,]  308  320  325 #> [14920,]  308  320  325 #> [14921,]  308  320  325 #> [14922,]  308  320  325 #> [14923,]  308  320  325 #> [14924,]  308  320  325 #> [14925,]  308  320  325 #> [14926,]  308  320  325 #> [14927,]  307  319  324 #> [14928,]  308  320  325 #> [14929,]  308  320  325 #> [14930,]  308  320  325 #> [14931,]  308  320  325 #> [14932,]  308  320  325 #> [14933,]  308  320  325 #> [14934,]  308  320  325 #> [14935,]  308  320  325 #> [14936,]  308  320  325 #> [14937,]  308  320  325 #> [14938,]  308  320  325 #> [14939,]  308  320  325 #> [14940,]  308  320  325 #> [14941,]  308  320  325 #> [14942,]  308  320  325 #> [14943,]  308  320  325 #> [14944,]  307  319  324 #> [14945,]  308  320  325 #> [14946,]  308  320  325 #> [14947,]  308  320  325 #> [14948,]  308  320  325 #> [14949,]  308  320  325 #> [14950,]  308  320  325 #> [14951,]  308  320  325 #> [14952,]  307  319  324 #> [14953,]  308  320  325 #> [14954,]  308  320  325 #> [14955,]  308  320  325 #> [14956,]  308  320  325 #> [14957,]  308  320  325 #> [14958,]  308  320  325 #> [14959,]  308  320  325 #> [14960,]  308  320  325 #> [14961,]  308  320  325 #> [14962,]  308  320  325 #> [14963,]  308  320  325 #> [14964,]  308  320  325 #> [14965,]  308  320  325 #> [14966,]  308  320  325 #> [14967,]  308  320  325 #> [14968,]  308  320  325 #> [14969,]  308  320  325 #> [14970,]  308  320  325 #> [14971,]  308  320  325 #> [14972,]  308  320  325 #> [14973,]  308  320  325 #> [14974,]  308  320  325 #> [14975,]  308  320  325 #> [14976,]  308  320  325 #> [14977,]  308  320  325 #> [14978,]  308  320  325 #> [14979,]  308  320  325 #> [14980,]  308  320  325 #> [14981,]  307  319  324 #> [14982,]  307  319  324 #> [14983,]  308  320  325 #> [14984,]  308  320  325 #> [14985,]  308  320  325 #> [14986,]  308  320  325 #> [14987,]  308  320  325 #> [14988,]  308  320  325 #> [14989,]  308  320  325 #> [14990,]  307  319  324 #> [14991,]  308  320  325 #> [14992,]  308  320  325 #> [14993,]  308  320  325 #> [14994,]  308  320  325 #> [14995,]  307  319  324 #> [14996,]  308  320  325 #> [14997,]  308  320  325 #> [14998,]  308  320  325 #> [14999,]  307  319  324 #> [15000,]  308  320  325 #> [15001,]  310  322  326 #> [15002,]  309  321  327 #> [15003,]  309  321  327 #> [15004,]  310  322  326 #> [15005,]  309  321  327 #> [15006,]  309  321  327 #> [15007,]  310  322  327 #> [15008,]  311  322  326 #> [15009,]  311  322  326 #> [15010,]  310  322  327 #> [15011,]  309  321  326 #> [15012,]  309  321  327 #> [15013,]  310  322  326 #> [15014,]  309  321  326 #> [15015,]  311  322  326 #> [15016,]  310  322  326 #> [15017,]  310  322  326 #> [15018,]  310  322  327 #> [15019,]  309  321  327 #> [15020,]  309  321  327 #> [15021,]  310  322  326 #> [15022,]  309  321  326 #> [15023,]  310  322  327 #> [15024,]  309  321  327 #> [15025,]  310  322  327 #> [15026,]  309  321  327 #> [15027,]  310  322  326 #> [15028,]  310  322  327 #> [15029,]  309  321  327 #> [15030,]  309  321  326 #> [15031,]  309  321  327 #> [15032,]  309  321  327 #> [15033,]  309  321  327 #> [15034,]  309  321  327 #> [15035,]  309  321  326 #> [15036,]  309  321  327 #> [15037,]  310  322  326 #> [15038,]  310  322  327 #> [15039,]  310  322  327 #> [15040,]  309  321  327 #> [15041,]  309  321  326 #> [15042,]  309  321  327 #> [15043,]  311  322  326 #> [15044,]  310  322  326 #> [15045,]  311  322  326 #> [15046,]  311  322  326 #> [15047,]  310  322  327 #> [15048,]  309  321  327 #> [15049,]  309  321  326 #> [15050,]  309  321  327 #> [15051,]  309  321  327 #> [15052,]  309  321  326 #> [15053,]  310  322  327 #> [15054,]  309  321  326 #> [15055,]  309  321  326 #> [15056,]  311  322  327 #> [15057,]  309  321  327 #> [15058,]  309  321  326 #> [15059,]  309  321  327 #> [15060,]  309  321  327 #> [15061,]  311  322  327 #> [15062,]  309  321  326 #> [15063,]  309  321  327 #> [15064,]  311  322  327 #> [15065,]  309  321  327 #> [15066,]  309  321  326 #> [15067,]  309  321  326 #> [15068,]  309  321  326 #> [15069,]  309  321  326 #> [15070,]  310  322  327 #> [15071,]  310  322  327 #> [15072,]  311  322  327 #> [15073,]  310  322  327 #> [15074,]  310  322  326 #> [15075,]  310  322  327 #> [15076,]  311  322  327 #> [15077,]  310  322  327 #> [15078,]  309  321  327 #> [15079,]  310  322  326 #> [15080,]  309  321  326 #> [15081,]  309  321  326 #> [15082,]  310  322  326 #> [15083,]  309  321  326 #> [15084,]  310  322  327 #> [15085,]  309  321  326 #> [15086,]  309  321  327 #> [15087,]  310  322  326 #> [15088,]  310  322  326 #> [15089,]  309  321  326 #> [15090,]  310  322  326 #> [15091,]  309  321  326 #> [15092,]  309  321  326 #> [15093,]  309  321  327 #> [15094,]  311  322  327 #> [15095,]  310  322  326 #> [15096,]  311  322  326 #> [15097,]  309  321  327 #> [15098,]  309  321  327 #> [15099,]  309  321  326 #> [15100,]  310  322  327 #> [15101,]  312  324  329 #> [15102,]  312  324  329 #> [15103,]  312  323  328 #> [15104,]  312  324  328 #> [15105,]  312  324  329 #> [15106,]  312  324  329 #> [15107,]  312  323  328 #> [15108,]  312  323  328 #> [15109,]  312  324  329 #> [15110,]  312  324  329 #> [15111,]  312  324  329 #> [15112,]  312  324  328 #> [15113,]  312  324  329 #> [15114,]  312  324  329 #> [15115,]  312  324  329 #> [15116,]  312  324  329 #> [15117,]  312  324  329 #> [15118,]  312  324  329 #> [15119,]  312  324  329 #> [15120,]  312  323  329 #> [15121,]  312  324  329 #> [15122,]  312  324  329 #> [15123,]  312  324  328 #> [15124,]  312  324  329 #> [15125,]  312  323  328 #> [15126,]  312  324  329 #> [15127,]  312  324  329 #> [15128,]  312  324  329 #> [15129,]  312  324  329 #> [15130,]  312  324  329 #> [15131,]  312  324  328 #> [15132,]  312  324  329 #> [15133,]  312  324  329 #> [15134,]  312  324  329 #> [15135,]  312  324  329 #> [15136,]  312  324  329 #> [15137,]  312  324  328 #> [15138,]  312  324  329 #> [15139,]  312  323  329 #> [15140,]  312  324  328 #> [15141,]  312  324  329 #> [15142,]  312  324  329 #> [15143,]  312  324  329 #> [15144,]  312  323  329 #> [15145,]  312  324  329 #> [15146,]  312  324  329 #> [15147,]  312  324  328 #> [15148,]  312  324  329 #> [15149,]  312  323  329 #> [15150,]  312  323  329 #> [15151,]  312  324  329 #> [15152,]  312  324  328 #> [15153,]  312  323  329 #> [15154,]  312  324  329 #> [15155,]  312  323  329 #> [15156,]  312  323  329 #> [15157,]  312  324  328 #> [15158,]  312  324  329 #> [15159,]  312  323  328 #> [15160,]  312  324  328 #> [15161,]  312  324  329 #> [15162,]  312  324  329 #> [15163,]  312  324  329 #> [15164,]  312  324  329 #> [15165,]  312  323  329 #> [15166,]  312  323  329 #> [15167,]  312  324  329 #> [15168,]  312  324  328 #> [15169,]  312  324  329 #> [15170,]  312  323  329 #> [15171,]  312  324  329 #> [15172,]  312  324  329 #> [15173,]  312  324  329 #> [15174,]  312  324  328 #> [15175,]  312  324  329 #> [15176,]  312  324  329 #> [15177,]  312  324  329 #> [15178,]  312  324  329 #> [15179,]  312  324  329 #> [15180,]  312  324  328 #> [15181,]  312  324  329 #> [15182,]  312  324  329 #> [15183,]  312  324  329 #> [15184,]  312  323  329 #> [15185,]  312  324  329 #> [15186,]  312  323  328 #> [15187,]  312  324  329 #> [15188,]  312  324  329 #> [15189,]  312  324  329 #> [15190,]  312  323  329 #> [15191,]  312  324  329 #> [15192,]  312  324  329 #> [15193,]  312  324  329 #> [15194,]  312  324  329 #> [15195,]  312  324  329 #> [15196,]  312  324  328 #> [15197,]  312  324  328 #> [15198,]  312  323  328 #> [15199,]  312  324  329 #> [15200,]  312  323  329 #> [15201,]  313  326  331 #> [15202,]  313  325  330 #> [15203,]  313  326  331 #> [15204,]  313  326  331 #> [15205,]  313  326  331 #> [15206,]  313  325  330 #> [15207,]  313  326  331 #> [15208,]  313  326  331 #> [15209,]  313  326  331 #> [15210,]  313  326  331 #> [15211,]  313  325  330 #> [15212,]  313  325  330 #> [15213,]  313  326  331 #> [15214,]  313  326  331 #> [15215,]  313  325  330 #> [15216,]  313  326  331 #> [15217,]  313  325  330 #> [15218,]  313  326  331 #> [15219,]  313  325  330 #> [15220,]  313  326  331 #> [15221,]  313  326  331 #> [15222,]  313  326  331 #> [15223,]  313  325  330 #> [15224,]  313  326  331 #> [15225,]  313  326  331 #> [15226,]  313  325  330 #> [15227,]  313  326  331 #> [15228,]  313  326  331 #> [15229,]  313  325  330 #> [15230,]  313  325  330 #> [15231,]  313  325  330 #> [15232,]  313  326  331 #> [15233,]  313  326  331 #> [15234,]  313  325  330 #> [15235,]  313  325  330 #> [15236,]  313  326  331 #> [15237,]  313  325  330 #> [15238,]  313  326  331 #> [15239,]  313  326  331 #> [15240,]  313  326  331 #> [15241,]  313  326  331 #> [15242,]  313  325  330 #> [15243,]  313  325  330 #> [15244,]  313  325  330 #> [15245,]  313  326  331 #> [15246,]  313  326  331 #> [15247,]  313  325  330 #> [15248,]  313  325  330 #> [15249,]  313  326  331 #> [15250,]  313  326  331 #> [15251,]  313  326  331 #> [15252,]  313  326  331 #> [15253,]  313  326  331 #> [15254,]  313  326  331 #> [15255,]  313  326  331 #> [15256,]  313  325  330 #> [15257,]  313  326  331 #> [15258,]  313  326  331 #> [15259,]  313  326  331 #> [15260,]  313  325  330 #> [15261,]  313  325  330 #> [15262,]  313  326  331 #> [15263,]  313  325  330 #> [15264,]  313  325  330 #> [15265,]  313  325  330 #> [15266,]  313  325  330 #> [15267,]  313  326  331 #> [15268,]  313  325  330 #> [15269,]  313  326  331 #> [15270,]  313  325  330 #> [15271,]  313  326  331 #> [15272,]  313  326  331 #> [15273,]  313  326  331 #> [15274,]  313  326  331 #> [15275,]  313  325  330 #> [15276,]  313  326  331 #> [15277,]  313  326  331 #> [15278,]  313  325  330 #> [15279,]  313  325  330 #> [15280,]  313  326  331 #> [15281,]  313  325  330 #> [15282,]  313  326  331 #> [15283,]  313  326  331 #> [15284,]  313  326  331 #> [15285,]  313  326  331 #> [15286,]  313  326  331 #> [15287,]  313  326  331 #> [15288,]  313  326  331 #> [15289,]  313  326  331 #> [15290,]  313  326  331 #> [15291,]  313  326  331 #> [15292,]  313  325  330 #> [15293,]  313  326  331 #> [15294,]  313  325  330 #> [15295,]  313  325  330 #> [15296,]  313  325  330 #> [15297,]  313  326  331 #> [15298,]  313  326  331 #> [15299,]  313  326  331 #> [15300,]  313  325  330 #> [15301,]  314  327  332 #> [15302,]  315  328  333 #> [15303,]  314  327  332 #> [15304,]  314  327  332 #> [15305,]  314  327  332 #> [15306,]  314  327  332 #> [15307,]  314  327  332 #> [15308,]  314  327  332 #> [15309,]  315  329  333 #> [15310,]  315  329  333 #> [15311,]  314  327  332 #> [15312,]  315  328  333 #> [15313,]  315  329  333 #> [15314,]  314  327  332 #> [15315,]  314  327  332 #> [15316,]  314  327  332 #> [15317,]  315  329  333 #> [15318,]  315  329  333 #> [15319,]  314  327  332 #> [15320,]  315  328  333 #> [15321,]  315  329  333 #> [15322,]  314  327  332 #> [15323,]  315  329  333 #> [15324,]  315  328  333 #> [15325,]  314  327  332 #> [15326,]  314  327  332 #> [15327,]  314  327  332 #> [15328,]  314  327  332 #> [15329,]  315  328  333 #> [15330,]  314  327  332 #> [15331,]  315  328  333 #> [15332,]  315  328  333 #> [15333,]  315  328  333 #> [15334,]  314  327  332 #> [15335,]  314  327  332 #> [15336,]  315  328  333 #> [15337,]  314  327  332 #> [15338,]  314  327  332 #> [15339,]  314  327  332 #> [15340,]  315  328  333 #> [15341,]  314  327  332 #> [15342,]  314  327  332 #> [15343,]  314  327  332 #> [15344,]  314  327  332 #> [15345,]  314  327  332 #> [15346,]  314  327  332 #> [15347,]  314  327  332 #> [15348,]  314  327  332 #> [15349,]  314  327  332 #> [15350,]  314  327  332 #> [15351,]  314  327  332 #> [15352,]  314  327  332 #> [15353,]  315  329  333 #> [15354,]  314  327  332 #> [15355,]  314  327  332 #> [15356,]  314  327  332 #> [15357,]  314  327  332 #> [15358,]  314  327  332 #> [15359,]  314  327  332 #> [15360,]  315  328  333 #> [15361,]  315  329  333 #> [15362,]  314  327  332 #> [15363,]  315  328  333 #> [15364,]  314  327  332 #> [15365,]  314  327  332 #> [15366,]  314  327  332 #> [15367,]  314  327  332 #> [15368,]  314  327  332 #> [15369,]  314  327  332 #> [15370,]  315  329  333 #> [15371,]  314  327  332 #> [15372,]  314  327  332 #> [15373,]  314  327  332 #> [15374,]  314  327  332 #> [15375,]  315  329  333 #> [15376,]  314  327  332 #> [15377,]  314  327  332 #> [15378,]  314  327  332 #> [15379,]  314  327  332 #> [15380,]  315  328  333 #> [15381,]  315  328  333 #> [15382,]  314  327  332 #> [15383,]  315  328  333 #> [15384,]  315  329  333 #> [15385,]  314  327  332 #> [15386,]  315  328  333 #> [15387,]  314  327  332 #> [15388,]  315  329  333 #> [15389,]  314  327  332 #> [15390,]  314  327  332 #> [15391,]  314  327  332 #> [15392,]  314  327  332 #> [15393,]  314  327  332 #> [15394,]  314  327  332 #> [15395,]  314  327  332 #> [15396,]  314  327  332 #> [15397,]  314  327  332 #> [15398,]  314  327  332 #> [15399,]  314  327  332 #> [15400,]  314  327  332 #> [15401,]  317  331  335 #> [15402,]  317  331  335 #> [15403,]  316  330  334 #> [15404,]  317  331  335 #> [15405,]  317  331  335 #> [15406,]  317  331  335 #> [15407,]  316  330  334 #> [15408,]  316  330  334 #> [15409,]  317  331  335 #> [15410,]  317  331  335 #> [15411,]  317  331  335 #> [15412,]  317  331  335 #> [15413,]  316  330  334 #> [15414,]  317  331  335 #> [15415,]  317  331  335 #> [15416,]  316  330  334 #> [15417,]  316  330  334 #> [15418,]  317  331  335 #> [15419,]  317  331  335 #> [15420,]  316  330  334 #> [15421,]  317  331  335 #> [15422,]  316  330  334 #> [15423,]  317  331  335 #> [15424,]  316  330  334 #> [15425,]  316  330  334 #> [15426,]  317  331  335 #> [15427,]  317  331  335 #> [15428,]  317  331  335 #> [15429,]  317  331  335 #> [15430,]  317  331  335 #> [15431,]  317  331  335 #> [15432,]  317  331  335 #> [15433,]  317  331  335 #> [15434,]  317  331  335 #> [15435,]  317  331  335 #> [15436,]  317  331  335 #> [15437,]  317  331  335 #> [15438,]  317  331  335 #> [15439,]  316  330  334 #> [15440,]  316  330  334 #> [15441,]  317  331  335 #> [15442,]  317  331  335 #> [15443,]  316  330  334 #> [15444,]  316  330  334 #> [15445,]  316  330  334 #> [15446,]  316  330  334 #> [15447,]  316  330  334 #> [15448,]  317  331  335 #> [15449,]  316  330  334 #> [15450,]  316  330  334 #> [15451,]  316  330  334 #> [15452,]  317  331  335 #> [15453,]  316  330  334 #> [15454,]  316  330  334 #> [15455,]  316  330  334 #> [15456,]  316  330  334 #> [15457,]  317  331  335 #> [15458,]  317  331  335 #> [15459,]  316  330  334 #> [15460,]  317  331  335 #> [15461,]  317  331  335 #> [15462,]  317  331  335 #> [15463,]  316  330  334 #> [15464,]  317  331  335 #> [15465,]  316  330  334 #> [15466,]  316  330  334 #> [15467,]  317  331  335 #> [15468,]  317  331  335 #> [15469,]  317  331  335 #> [15470,]  316  330  334 #> [15471,]  317  331  335 #> [15472,]  316  330  334 #> [15473,]  317  331  335 #> [15474,]  317  331  335 #> [15475,]  317  331  335 #> [15476,]  316  330  334 #> [15477,]  316  330  334 #> [15478,]  316  330  334 #> [15479,]  316  330  334 #> [15480,]  317  331  335 #> [15481,]  317  331  335 #> [15482,]  317  331  335 #> [15483,]  316  330  334 #> [15484,]  316  330  334 #> [15485,]  317  331  335 #> [15486,]  316  330  334 #> [15487,]  317  331  335 #> [15488,]  317  331  335 #> [15489,]  316  330  334 #> [15490,]  316  330  334 #> [15491,]  317  331  335 #> [15492,]  317  331  335 #> [15493,]  317  331  335 #> [15494,]  316  330  334 #> [15495,]  317  331  335 #> [15496,]  317  331  335 #> [15497,]  317  331  335 #> [15498,]  316  330  334 #> [15499,]  317  331  335 #> [15500,]  316  330  334 #> [15501,]  318  333  337 #> [15502,]  318  334  337 #> [15503,]  318  334  337 #> [15504,]  319  332  336 #> [15505,]  318  333  337 #> [15506,]  319  332  336 #> [15507,]  318  334  337 #> [15508,]  318  333  337 #> [15509,]  319  332  336 #> [15510,]  319  332  336 #> [15511,]  319  332  336 #> [15512,]  319  332  336 #> [15513,]  318  333  337 #> [15514,]  319  332  336 #> [15515,]  319  332  336 #> [15516,]  318  333  337 #> [15517,]  318  333  337 #> [15518,]  319  332  336 #> [15519,]  319  332  336 #> [15520,]  318  334  337 #> [15521,]  319  332  336 #> [15522,]  318  333  337 #> [15523,]  318  334  337 #> [15524,]  318  333  337 #> [15525,]  318  334  337 #> [15526,]  319  332  336 #> [15527,]  319  332  336 #> [15528,]  318  334  337 #> [15529,]  318  333  337 #> [15530,]  319  332  336 #> [15531,]  319  332  336 #> [15532,]  319  332  336 #> [15533,]  319  332  336 #> [15534,]  319  332  336 #> [15535,]  318  333  337 #> [15536,]  319  332  336 #> [15537,]  318  333  337 #> [15538,]  319  332  336 #> [15539,]  318  333  337 #> [15540,]  318  334  337 #> [15541,]  319  332  336 #> [15542,]  319  332  336 #> [15543,]  318  333  337 #> [15544,]  318  333  337 #> [15545,]  318  333  337 #> [15546,]  318  333  337 #> [15547,]  318  333  337 #> [15548,]  319  332  336 #> [15549,]  318  333  337 #> [15550,]  318  333  337 #> [15551,]  318  333  337 #> [15552,]  319  332  336 #> [15553,]  318  333  337 #> [15554,]  318  333  337 #> [15555,]  318  333  337 #> [15556,]  318  334  337 #> [15557,]  318  333  337 #> [15558,]  319  332  336 #> [15559,]  318  333  337 #> [15560,]  319  332  336 #> [15561,]  319  332  336 #> [15562,]  319  332  336 #> [15563,]  318  333  337 #> [15564,]  319  332  336 #> [15565,]  318  334  337 #> [15566,]  318  333  337 #> [15567,]  319  332  336 #> [15568,]  319  332  336 #> [15569,]  319  332  336 #> [15570,]  318  334  337 #> [15571,]  318  334  337 #> [15572,]  318  333  337 #> [15573,]  319  332  336 #> [15574,]  319  332  336 #> [15575,]  319  332  336 #> [15576,]  318  333  337 #> [15577,]  318  333  337 #> [15578,]  318  334  337 #> [15579,]  318  333  337 #> [15580,]  319  332  336 #> [15581,]  318  333  337 #> [15582,]  319  332  336 #> [15583,]  318  333  337 #> [15584,]  318  334  337 #> [15585,]  319  332  336 #> [15586,]  318  333  337 #> [15587,]  318  333  337 #> [15588,]  318  333  337 #> [15589,]  318  333  337 #> [15590,]  318  333  337 #> [15591,]  318  333  337 #> [15592,]  319  332  336 #> [15593,]  319  332  336 #> [15594,]  318  333  337 #> [15595,]  318  333  337 #> [15596,]  319  332  336 #> [15597,]  319  332  336 #> [15598,]  318  334  337 #> [15599,]  319  332  336 #> [15600,]  318  334  337 #> [15601,]  321  336  340 #> [15602,]  321  336  340 #> [15603,]  320  335  338 #> [15604,]  321  336  339 #> [15605,]  321  336  340 #> [15606,]  321  336  340 #> [15607,]  321  336  340 #> [15608,]  321  336  339 #> [15609,]  321  336  339 #> [15610,]  320  335  338 #> [15611,]  320  335  338 #> [15612,]  321  336  340 #> [15613,]  321  336  340 #> [15614,]  320  335  338 #> [15615,]  321  336  340 #> [15616,]  321  336  340 #> [15617,]  321  336  340 #> [15618,]  321  336  339 #> [15619,]  321  336  340 #> [15620,]  321  336  339 #> [15621,]  320  335  338 #> [15622,]  321  336  340 #> [15623,]  321  336  340 #> [15624,]  321  336  339 #> [15625,]  321  336  340 #> [15626,]  321  336  340 #> [15627,]  321  336  340 #> [15628,]  321  336  340 #> [15629,]  321  336  340 #> [15630,]  321  336  339 #> [15631,]  320  335  338 #> [15632,]  320  335  338 #> [15633,]  321  336  340 #> [15634,]  320  335  338 #> [15635,]  321  336  340 #> [15636,]  321  336  340 #> [15637,]  321  336  340 #> [15638,]  321  336  340 #> [15639,]  321  336  339 #> [15640,]  320  335  338 #> [15641,]  321  336  340 #> [15642,]  321  336  340 #> [15643,]  321  336  339 #> [15644,]  321  336  340 #> [15645,]  321  336  339 #> [15646,]  321  336  340 #> [15647,]  321  336  340 #> [15648,]  320  335  338 #> [15649,]  321  336  339 #> [15650,]  321  336  340 #> [15651,]  321  336  339 #> [15652,]  321  336  340 #> [15653,]  321  336  339 #> [15654,]  321  336  340 #> [15655,]  321  336  340 #> [15656,]  321  336  339 #> [15657,]  321  336  340 #> [15658,]  321  336  340 #> [15659,]  321  336  340 #> [15660,]  321  336  339 #> [15661,]  321  336  340 #> [15662,]  321  336  340 #> [15663,]  321  336  340 #> [15664,]  321  336  339 #> [15665,]  321  336  339 #> [15666,]  321  336  339 #> [15667,]  321  336  339 #> [15668,]  321  336  340 #> [15669,]  321  336  340 #> [15670,]  320  335  338 #> [15671,]  321  336  340 #> [15672,]  321  336  340 #> [15673,]  321  336  340 #> [15674,]  320  335  338 #> [15675,]  321  336  340 #> [15676,]  321  336  340 #> [15677,]  321  336  340 #> [15678,]  321  336  339 #> [15679,]  321  336  340 #> [15680,]  321  336  340 #> [15681,]  321  336  340 #> [15682,]  320  335  338 #> [15683,]  321  336  340 #> [15684,]  321  336  340 #> [15685,]  321  336  339 #> [15686,]  321  336  340 #> [15687,]  321  336  340 #> [15688,]  321  336  340 #> [15689,]  321  336  339 #> [15690,]  321  336  340 #> [15691,]  321  336  339 #> [15692,]  321  336  340 #> [15693,]  321  336  340 #> [15694,]  321  336  340 #> [15695,]  321  336  339 #> [15696,]  321  336  340 #> [15697,]  321  336  340 #> [15698,]  320  335  338 #> [15699,]  321  336  340 #> [15700,]  321  336  340 #> [15701,]  324  338  342 #> [15702,]  324  338  342 #> [15703,]  322  337  341 #> [15704,]  322  337  342 #> [15705,]  324  338  342 #> [15706,]  324  338  342 #> [15707,]  322  337  341 #> [15708,]  322  337  341 #> [15709,]  324  338  342 #> [15710,]  324  338  342 #> [15711,]  324  338  342 #> [15712,]  322  337  342 #> [15713,]  324  338  343 #> [15714,]  324  338  342 #> [15715,]  324  338  343 #> [15716,]  324  338  342 #> [15717,]  324  338  342 #> [15718,]  324  338  342 #> [15719,]  324  338  343 #> [15720,]  323  338  341 #> [15721,]  323  338  342 #> [15722,]  324  338  343 #> [15723,]  322  337  342 #> [15724,]  324  338  342 #> [15725,]  322  337  341 #> [15726,]  324  338  342 #> [15727,]  324  338  343 #> [15728,]  324  338  342 #> [15729,]  324  338  343 #> [15730,]  324  338  342 #> [15731,]  322  337  342 #> [15732,]  324  338  342 #> [15733,]  324  338  342 #> [15734,]  324  338  342 #> [15735,]  324  338  342 #> [15736,]  324  338  343 #> [15737,]  322  337  343 #> [15738,]  324  338  343 #> [15739,]  324  338  341 #> [15740,]  322  337  342 #> [15741,]  324  338  343 #> [15742,]  324  338  342 #> [15743,]  324  338  343 #> [15744,]  324  338  341 #> [15745,]  324  338  342 #> [15746,]  322  337  341 #> [15747,]  322  337  342 #> [15748,]  324  338  342 #> [15749,]  324  338  341 #> [15750,]  324  338  341 #> [15751,]  324  338  343 #> [15752,]  322  337  342 #> [15753,]  324  338  341 #> [15754,]  324  338  342 #> [15755,]  322  337  341 #> [15756,]  323  338  341 #> [15757,]  322  337  342 #> [15758,]  324  338  343 #> [15759,]  322  337  341 #> [15760,]  322  337  343 #> [15761,]  324  338  342 #> [15762,]  324  338  342 #> [15763,]  324  338  342 #> [15764,]  324  338  343 #> [15765,]  323  338  341 #> [15766,]  324  338  341 #> [15767,]  324  338  342 #> [15768,]  322  337  342 #> [15769,]  324  338  343 #> [15770,]  324  338  341 #> [15771,]  324  338  343 #> [15772,]  324  338  341 #> [15773,]  324  338  342 #> [15774,]  322  337  342 #> [15775,]  324  338  342 #> [15776,]  324  338  342 #> [15777,]  324  338  343 #> [15778,]  324  338  342 #> [15779,]  324  338  342 #> [15780,]  322  337  343 #> [15781,]  324  338  343 #> [15782,]  324  338  342 #> [15783,]  324  338  343 #> [15784,]  324  338  341 #> [15785,]  323  338  343 #> [15786,]  322  337  341 #> [15787,]  324  338  343 #> [15788,]  324  338  342 #> [15789,]  323  338  342 #> [15790,]  324  338  341 #> [15791,]  324  338  342 #> [15792,]  324  338  342 #> [15793,]  324  338  342 #> [15794,]  324  338  342 #> [15795,]  324  338  343 #> [15796,]  322  337  343 #> [15797,]  322  337  343 #> [15798,]  322  337  341 #> [15799,]  324  338  342 #> [15800,]  324  338  341 #> [15801,]  325  339  344 #> [15802,]  326  339  344 #> [15803,]  325  339  344 #> [15804,]  325  339  344 #> [15805,]  326  339  344 #> [15806,]  325  339  344 #> [15807,]  326  340  344 #> [15808,]  325  339  344 #> [15809,]  326  339  344 #> [15810,]  326  340  344 #> [15811,]  325  339  344 #> [15812,]  326  339  344 #> [15813,]  326  339  344 #> [15814,]  325  339  344 #> [15815,]  325  339  344 #> [15816,]  325  340  344 #> [15817,]  326  339  344 #> [15818,]  326  339  344 #> [15819,]  325  339  344 #> [15820,]  326  340  344 #> [15821,]  326  339  344 #> [15822,]  326  339  344 #> [15823,]  326  339  344 #> [15824,]  326  340  344 #> [15825,]  326  339  344 #> [15826,]  325  339  344 #> [15827,]  326  339  344 #> [15828,]  325  340  344 #> [15829,]  326  339  344 #> [15830,]  326  339  344 #> [15831,]  326  339  344 #> [15832,]  326  339  344 #> [15833,]  326  339  344 #> [15834,]  325  339  344 #> [15835,]  325  339  344 #> [15836,]  326  339  344 #> [15837,]  325  339  344 #> [15838,]  325  339  344 #> [15839,]  326  339  344 #> [15840,]  326  339  344 #> [15841,]  326  339  344 #> [15842,]  325  339  344 #> [15843,]  326  339  344 #> [15844,]  326  339  344 #> [15845,]  325  339  344 #> [15846,]  325  339  344 #> [15847,]  326  339  344 #> [15848,]  326  339  344 #> [15849,]  325  339  344 #> [15850,]  326  340  344 #> [15851,]  326  339  344 #> [15852,]  325  340  344 #> [15853,]  326  339  344 #> [15854,]  326  340  344 #> [15855,]  325  339  344 #> [15856,]  325  339  344 #> [15857,]  325  339  344 #> [15858,]  326  339  344 #> [15859,]  325  339  344 #> [15860,]  326  339  344 #> [15861,]  326  339  344 #> [15862,]  325  339  344 #> [15863,]  326  339  344 #> [15864,]  325  339  344 #> [15865,]  325  339  344 #> [15866,]  326  339  344 #> [15867,]  326  339  344 #> [15868,]  325  339  344 #> [15869,]  325  339  344 #> [15870,]  326  339  344 #> [15871,]  326  339  344 #> [15872,]  325  339  344 #> [15873,]  325  339  344 #> [15874,]  326  339  344 #> [15875,]  326  339  344 #> [15876,]  326  340  344 #> [15877,]  325  339  344 #> [15878,]  326  339  344 #> [15879,]  325  339  344 #> [15880,]  326  339  344 #> [15881,]  326  339  344 #> [15882,]  325  339  344 #> [15883,]  326  339  344 #> [15884,]  326  339  344 #> [15885,]  325  339  344 #> [15886,]  326  340  344 #> [15887,]  326  339  344 #> [15888,]  326  339  344 #> [15889,]  325  339  344 #> [15890,]  326  339  344 #> [15891,]  325  340  344 #> [15892,]  326  339  344 #> [15893,]  326  339  344 #> [15894,]  325  339  344 #> [15895,]  326  339  344 #> [15896,]  325  339  344 #> [15897,]  325  339  344 #> [15898,]  325  339  344 #> [15899,]  326  339  344 #> [15900,]  325  339  344 #> [15901,]  328  342  345 #> [15902,]  328  344  345 #> [15903,]  327  341  346 #> [15904,]  327  341  346 #> [15905,]  327  341  346 #> [15906,]  328  344  345 #> [15907,]  328  343  345 #> [15908,]  327  341  346 #> [15909,]  327  341  346 #> [15910,]  327  341  346 #> [15911,]  328  342  345 #> [15912,]  327  341  346 #> [15913,]  328  342  345 #> [15914,]  328  342  345 #> [15915,]  328  342  345 #> [15916,]  328  342  345 #> [15917,]  328  342  345 #> [15918,]  327  341  346 #> [15919,]  328  343  345 #> [15920,]  327  341  346 #> [15921,]  328  342  345 #> [15922,]  328  342  345 #> [15923,]  327  341  346 #> [15924,]  327  341  346 #> [15925,]  327  341  346 #> [15926,]  328  342  345 #> [15927,]  328  342  345 #> [15928,]  327  341  346 #> [15929,]  328  342  345 #> [15930,]  327  341  346 #> [15931,]  327  341  346 #> [15932,]  327  341  346 #> [15933,]  328  344  345 #> [15934,]  327  341  346 #> [15935,]  328  342  345 #> [15936,]  327  341  346 #> [15937,]  328  342  345 #> [15938,]  327  341  346 #> [15939,]  327  341  346 #> [15940,]  328  342  345 #> [15941,]  328  342  345 #> [15942,]  327  341  346 #> [15943,]  327  341  346 #> [15944,]  328  342  345 #> [15945,]  327  341  346 #> [15946,]  328  342  345 #> [15947,]  328  342  345 #> [15948,]  327  341  346 #> [15949,]  327  341  346 #> [15950,]  328  342  345 #> [15951,]  327  341  346 #> [15952,]  328  342  345 #> [15953,]  327  341  346 #> [15954,]  327  341  346 #> [15955,]  328  342  345 #> [15956,]  327  341  346 #> [15957,]  327  341  346 #> [15958,]  328  342  345 #> [15959,]  328  342  345 #> [15960,]  327  341  346 #> [15961,]  328  342  345 #> [15962,]  327  341  346 #> [15963,]  327  341  346 #> [15964,]  327  341  346 #> [15965,]  327  341  346 #> [15966,]  327  341  346 #> [15967,]  327  341  346 #> [15968,]  328  342  345 #> [15969,]  328  342  345 #> [15970,]  328  344  345 #> [15971,]  328  344  345 #> [15972,]  327  341  346 #> [15973,]  328  344  345 #> [15974,]  328  342  345 #> [15975,]  328  342  345 #> [15976,]  328  342  345 #> [15977,]  328  342  345 #> [15978,]  327  341  346 #> [15979,]  328  342  345 #> [15980,]  327  341  346 #> [15981,]  328  342  345 #> [15982,]  328  342  345 #> [15983,]  328  342  345 #> [15984,]  328  343  345 #> [15985,]  327  341  346 #> [15986,]  328  342  345 #> [15987,]  328  342  345 #> [15988,]  327  341  346 #> [15989,]  327  341  346 #> [15990,]  328  342  345 #> [15991,]  327  341  346 #> [15992,]  328  342  345 #> [15993,]  328  344  345 #> [15994,]  328  342  345 #> [15995,]  327  341  346 #> [15996,]  328  342  345 #> [15997,]  328  343  345 #> [15998,]  328  343  345 #> [15999,]  328  342  345 #> [16000,]  328  343  345 #> [16001,]  330  346  347 #> [16002,]  330  346  347 #> [16003,]  330  346  347 #> [16004,]  330  346  347 #> [16005,]  330  346  347 #> [16006,]  329  345  349 #> [16007,]  330  346  347 #> [16008,]  330  346  347 #> [16009,]  330  346  347 #> [16010,]  330  346  347 #> [16011,]  330  346  347 #> [16012,]  330  346  347 #> [16013,]  330  346  347 #> [16014,]  330  346  347 #> [16015,]  330  346  347 #> [16016,]  330  346  347 #> [16017,]  330  346  347 #> [16018,]  330  346  347 #> [16019,]  330  346  347 #> [16020,]  329  345  349 #> [16021,]  329  345  348 #> [16022,]  330  346  347 #> [16023,]  330  346  347 #> [16024,]  330  346  347 #> [16025,]  329  345  349 #> [16026,]  330  346  347 #> [16027,]  330  346  347 #> [16028,]  330  346  347 #> [16029,]  330  346  347 #> [16030,]  330  346  347 #> [16031,]  330  346  347 #> [16032,]  330  346  347 #> [16033,]  330  346  347 #> [16034,]  330  346  347 #> [16035,]  329  345  348 #> [16036,]  330  346  347 #> [16037,]  330  346  347 #> [16038,]  330  346  347 #> [16039,]  330  346  347 #> [16040,]  330  346  347 #> [16041,]  330  346  347 #> [16042,]  329  345  349 #> [16043,]  330  346  347 #> [16044,]  329  345  348 #> [16045,]  330  346  347 #> [16046,]  330  346  347 #> [16047,]  330  346  347 #> [16048,]  330  346  347 #> [16049,]  330  346  347 #> [16050,]  330  346  347 #> [16051,]  330  346  347 #> [16052,]  330  346  347 #> [16053,]  329  345  349 #> [16054,]  330  346  347 #> [16055,]  330  346  347 #> [16056,]  329  345  349 #> [16057,]  330  346  347 #> [16058,]  330  346  347 #> [16059,]  330  346  347 #> [16060,]  330  346  347 #> [16061,]  330  346  347 #> [16062,]  330  346  347 #> [16063,]  330  346  347 #> [16064,]  330  346  347 #> [16065,]  329  345  349 #> [16066,]  330  346  347 #> [16067,]  330  346  347 #> [16068,]  330  346  347 #> [16069,]  330  346  347 #> [16070,]  330  346  347 #> [16071,]  330  346  347 #> [16072,]  330  346  347 #> [16073,]  329  345  349 #> [16074,]  329  345  349 #> [16075,]  330  346  347 #> [16076,]  330  346  347 #> [16077,]  330  346  347 #> [16078,]  330  346  347 #> [16079,]  330  346  347 #> [16080,]  329  345  348 #> [16081,]  330  346  347 #> [16082,]  329  345  349 #> [16083,]  330  346  347 #> [16084,]  329  345  349 #> [16085,]  329  345  348 #> [16086,]  329  345  348 #> [16087,]  330  346  347 #> [16088,]  330  346  347 #> [16089,]  329  345  349 #> [16090,]  330  346  347 #> [16091,]  330  346  347 #> [16092,]  330  346  347 #> [16093,]  330  346  347 #> [16094,]  329  345  349 #> [16095,]  330  346  347 #> [16096,]  330  346  347 #> [16097,]  330  346  347 #> [16098,]  330  346  347 #> [16099,]  329  345  349 #> [16100,]  330  346  347 #> [16101,]  331  349  351 #> [16102,]  331  349  351 #> [16103,]  331  349  351 #> [16104,]  331  349  351 #> [16105,]  331  349  351 #> [16106,]  331  349  351 #> [16107,]  331  349  351 #> [16108,]  332  347  350 #> [16109,]  332  347  350 #> [16110,]  331  349  351 #> [16111,]  331  349  351 #> [16112,]  331  349  351 #> [16113,]  331  349  351 #> [16114,]  331  349  351 #> [16115,]  331  349  351 #> [16116,]  331  349  351 #> [16117,]  331  349  351 #> [16118,]  331  349  351 #> [16119,]  331  349  351 #> [16120,]  331  349  351 #> [16121,]  331  349  351 #> [16122,]  331  349  351 #> [16123,]  331  349  351 #> [16124,]  331  349  351 #> [16125,]  331  348  351 #> [16126,]  332  347  350 #> [16127,]  331  349  351 #> [16128,]  331  349  351 #> [16129,]  331  349  351 #> [16130,]  331  349  351 #> [16131,]  331  349  351 #> [16132,]  331  349  351 #> [16133,]  331  349  351 #> [16134,]  331  349  351 #> [16135,]  331  349  351 #> [16136,]  331  349  351 #> [16137,]  331  349  351 #> [16138,]  331  349  351 #> [16139,]  331  349  351 #> [16140,]  331  349  351 #> [16141,]  331  349  351 #> [16142,]  331  349  351 #> [16143,]  332  347  350 #> [16144,]  331  349  351 #> [16145,]  331  349  351 #> [16146,]  332  347  350 #> [16147,]  331  349  351 #> [16148,]  331  349  351 #> [16149,]  331  349  351 #> [16150,]  331  349  351 #> [16151,]  331  349  351 #> [16152,]  331  349  351 #> [16153,]  331  349  351 #> [16154,]  331  349  351 #> [16155,]  331  349  351 #> [16156,]  332  347  350 #> [16157,]  331  349  351 #> [16158,]  331  349  351 #> [16159,]  331  349  351 #> [16160,]  331  349  351 #> [16161,]  332  347  350 #> [16162,]  331  349  351 #> [16163,]  331  349  351 #> [16164,]  332  347  350 #> [16165,]  331  348  351 #> [16166,]  331  349  351 #> [16167,]  331  349  351 #> [16168,]  331  349  351 #> [16169,]  331  349  351 #> [16170,]  331  349  351 #> [16171,]  331  349  351 #> [16172,]  331  349  351 #> [16173,]  331  349  351 #> [16174,]  331  349  351 #> [16175,]  331  349  351 #> [16176,]  332  347  350 #> [16177,]  331  349  351 #> [16178,]  331  349  351 #> [16179,]  331  349  351 #> [16180,]  331  348  351 #> [16181,]  331  349  351 #> [16182,]  331  349  351 #> [16183,]  331  349  351 #> [16184,]  331  349  351 #> [16185,]  331  348  351 #> [16186,]  331  349  351 #> [16187,]  331  349  351 #> [16188,]  331  349  351 #> [16189,]  331  348  351 #> [16190,]  331  349  351 #> [16191,]  331  349  351 #> [16192,]  331  349  351 #> [16193,]  331  349  351 #> [16194,]  332  347  350 #> [16195,]  331  349  351 #> [16196,]  331  349  351 #> [16197,]  331  349  351 #> [16198,]  331  349  351 #> [16199,]  331  349  351 #> [16200,]  331  349  351 #> [16201,]  333  350  352 #> [16202,]  335  352  352 #> [16203,]  333  350  352 #> [16204,]  334  352  352 #> [16205,]  334  352  352 #> [16206,]  333  350  352 #> [16207,]  334  351  352 #> [16208,]  334  352  352 #> [16209,]  334  352  352 #> [16210,]  334  352  352 #> [16211,]  333  350  352 #> [16212,]  334  352  352 #> [16213,]  335  352  352 #> [16214,]  335  352  352 #> [16215,]  335  352  352 #> [16216,]  333  350  352 #> [16217,]  335  352  352 #> [16218,]  334  352  352 #> [16219,]  333  350  352 #> [16220,]  334  352  352 #> [16221,]  335  352  352 #> [16222,]  334  352  352 #> [16223,]  334  352  352 #> [16224,]  334  352  352 #> [16225,]  334  352  352 #> [16226,]  335  352  352 #> [16227,]  334  352  352 #> [16228,]  333  350  352 #> [16229,]  335  352  352 #> [16230,]  334  352  352 #> [16231,]  334  352  352 #> [16232,]  334  352  352 #> [16233,]  335  352  352 #> [16234,]  333  350  352 #> [16235,]  333  350  352 #> [16236,]  334  352  352 #> [16237,]  333  350  352 #> [16238,]  333  350  352 #> [16239,]  334  352  352 #> [16240,]  334  352  352 #> [16241,]  335  352  352 #> [16242,]  334  352  352 #> [16243,]  334  352  352 #> [16244,]  335  352  352 #> [16245,]  333  350  352 #> [16246,]  334  352  352 #> [16247,]  334  352  352 #> [16248,]  334  352  352 #> [16249,]  333  350  352 #> [16250,]  335  352  352 #> [16251,]  334  352  352 #> [16252,]  333  350  352 #> [16253,]  334  351  352 #> [16254,]  334  352  352 #> [16255,]  334  351  352 #> [16256,]  334  351  352 #> [16257,]  334  352  352 #> [16258,]  334  352  352 #> [16259,]  335  352  352 #> [16260,]  334  352  352 #> [16261,]  335  352  352 #> [16262,]  334  352  352 #> [16263,]  334  352  352 #> [16264,]  333  350  352 #> [16265,]  334  352  352 #> [16266,]  334  351  352 #> [16267,]  334  352  352 #> [16268,]  333  350  352 #> [16269,]  334  352  352 #> [16270,]  335  352  352 #> [16271,]  335  352  352 #> [16272,]  333  350  352 #> [16273,]  333  350  352 #> [16274,]  334  352  352 #> [16275,]  334  352  352 #> [16276,]  335  352  352 #> [16277,]  333  350  352 #> [16278,]  334  352  352 #> [16279,]  335  352  352 #> [16280,]  334  352  352 #> [16281,]  335  352  352 #> [16282,]  334  352  352 #> [16283,]  335  352  352 #> [16284,]  334  352  352 #> [16285,]  334  352  352 #> [16286,]  335  352  352 #> [16287,]  334  352  352 #> [16288,]  334  352  352 #> [16289,]  334  352  352 #> [16290,]  334  352  352 #> [16291,]  334  352  352 #> [16292,]  334  352  352 #> [16293,]  335  352  352 #> [16294,]  333  350  352 #> [16295,]  334  352  352 #> [16296,]  333  350  352 #> [16297,]  333  350  352 #> [16298,]  334  352  352 #> [16299,]  335  352  352 #> [16300,]  333  350  352 #> [16301,]  336  354  354 #> [16302,]  336  353  353 #> [16303,]  336  353  353 #> [16304,]  336  353  353 #> [16305,]  336  353  353 #> [16306,]  336  353  353 #> [16307,]  336  353  353 #> [16308,]  336  353  353 #> [16309,]  336  353  353 #> [16310,]  336  353  353 #> [16311,]  336  353  353 #> [16312,]  336  353  353 #> [16313,]  336  353  353 #> [16314,]  336  354  354 #> [16315,]  336  354  354 #> [16316,]  336  354  354 #> [16317,]  336  353  353 #> [16318,]  336  353  353 #> [16319,]  336  353  353 #> [16320,]  336  353  353 #> [16321,]  336  353  353 #> [16322,]  336  353  353 #> [16323,]  336  353  353 #> [16324,]  336  353  353 #> [16325,]  336  353  353 #> [16326,]  336  353  353 #> [16327,]  336  353  353 #> [16328,]  336  353  353 #> [16329,]  336  353  353 #> [16330,]  336  353  353 #> [16331,]  336  353  353 #> [16332,]  336  353  353 #> [16333,]  336  353  353 #> [16334,]  336  353  353 #> [16335,]  336  353  353 #> [16336,]  336  353  353 #> [16337,]  336  353  353 #> [16338,]  336  353  353 #> [16339,]  336  353  353 #> [16340,]  336  353  353 #> [16341,]  336  354  354 #> [16342,]  336  353  353 #> [16343,]  336  353  353 #> [16344,]  336  354  354 #> [16345,]  336  353  353 #> [16346,]  336  353  353 #> [16347,]  336  353  353 #> [16348,]  336  353  353 #> [16349,]  336  353  353 #> [16350,]  336  354  354 #> [16351,]  336  353  353 #> [16352,]  336  353  353 #> [16353,]  336  353  353 #> [16354,]  336  353  353 #> [16355,]  336  353  353 #> [16356,]  336  353  353 #> [16357,]  336  353  353 #> [16358,]  336  353  353 #> [16359,]  336  354  354 #> [16360,]  336  353  353 #> [16361,]  336  353  353 #> [16362,]  336  353  353 #> [16363,]  336  353  353 #> [16364,]  336  353  353 #> [16365,]  336  353  353 #> [16366,]  336  353  353 #> [16367,]  336  353  353 #> [16368,]  336  353  353 #> [16369,]  336  353  353 #> [16370,]  336  354  354 #> [16371,]  336  353  353 #> [16372,]  336  353  353 #> [16373,]  336  354  354 #> [16374,]  336  353  353 #> [16375,]  336  353  353 #> [16376,]  336  353  353 #> [16377,]  336  353  353 #> [16378,]  336  353  353 #> [16379,]  336  353  353 #> [16380,]  336  353  353 #> [16381,]  336  353  353 #> [16382,]  336  353  353 #> [16383,]  336  353  353 #> [16384,]  336  353  353 #> [16385,]  336  353  353 #> [16386,]  336  353  353 #> [16387,]  336  353  353 #> [16388,]  336  353  353 #> [16389,]  336  353  353 #> [16390,]  336  353  353 #> [16391,]  336  353  353 #> [16392,]  336  353  353 #> [16393,]  336  353  353 #> [16394,]  336  353  353 #> [16395,]  336  353  353 #> [16396,]  336  354  354 #> [16397,]  336  353  353 #> [16398,]  336  353  353 #> [16399,]  336  354  354 #> [16400,]  336  353  353 #> [16401,]  337  355  356 #> [16402,]  339  356  356 #> [16403,]  337  355  355 #> [16404,]  337  355  356 #> [16405,]  339  356  356 #> [16406,]  337  355  356 #> [16407,]  338  356  355 #> [16408,]  337  355  356 #> [16409,]  339  356  356 #> [16410,]  339  356  356 #> [16411,]  337  355  356 #> [16412,]  338  356  356 #> [16413,]  339  356  355 #> [16414,]  337  355  356 #> [16415,]  339  356  356 #> [16416,]  337  355  355 #> [16417,]  339  356  356 #> [16418,]  339  356  356 #> [16419,]  337  355  355 #> [16420,]  339  356  356 #> [16421,]  339  356  355 #> [16422,]  339  356  356 #> [16423,]  338  356  355 #> [16424,]  339  356  356 #> [16425,]  338  356  356 #> [16426,]  337  355  356 #> [16427,]  339  356  356 #> [16428,]  337  355  356 #> [16429,]  339  356  356 #> [16430,]  339  356  355 #> [16431,]  338  356  355 #> [16432,]  338  356  356 #> [16433,]  339  356  356 #> [16434,]  337  355  355 #> [16435,]  337  355  355 #> [16436,]  339  356  355 #> [16437,]  337  355  355 #> [16438,]  337  355  356 #> [16439,]  339  356  355 #> [16440,]  338  356  355 #> [16441,]  339  356  356 #> [16442,]  337  355  356 #> [16443,]  339  356  356 #> [16444,]  339  356  356 #> [16445,]  337  355  356 #> [16446,]  338  356  356 #> [16447,]  338  356  355 #> [16448,]  339  356  356 #> [16449,]  337  355  355 #> [16450,]  339  356  356 #> [16451,]  339  356  356 #> [16452,]  337  355  356 #> [16453,]  339  356  356 #> [16454,]  339  356  355 #> [16455,]  337  355  356 #> [16456,]  337  355  356 #> [16457,]  338  356  356 #> [16458,]  339  356  356 #> [16459,]  337  355  356 #> [16460,]  338  356  356 #> [16461,]  339  356  356 #> [16462,]  337  355  355 #> [16463,]  339  356  356 #> [16464,]  337  355  356 #> [16465,]  337  355  356 #> [16466,]  339  356  356 #> [16467,]  339  356  356 #> [16468,]  337  355  356 #> [16469,]  337  355  356 #> [16470,]  339  356  355 #> [16471,]  339  356  356 #> [16472,]  337  355  356 #> [16473,]  337  355  356 #> [16474,]  338  356  356 #> [16475,]  339  356  356 #> [16476,]  338  356  356 #> [16477,]  337  355  355 #> [16478,]  338  356  356 #> [16479,]  337  355  355 #> [16480,]  338  356  355 #> [16481,]  339  356  356 #> [16482,]  339  356  356 #> [16483,]  339  356  355 #> [16484,]  339  356  356 #> [16485,]  339  356  356 #> [16486,]  338  356  356 #> [16487,]  339  356  356 #> [16488,]  339  356  356 #> [16489,]  337  355  356 #> [16490,]  339  356  356 #> [16491,]  337  355  356 #> [16492,]  338  356  356 #> [16493,]  339  356  355 #> [16494,]  337  355  356 #> [16495,]  339  356  355 #> [16496,]  337  355  356 #> [16497,]  337  355  356 #> [16498,]  338  356  355 #> [16499,]  339  356  356 #> [16500,]  337  355  356 #> [16501,]  341  359  357 #> [16502,]  340  357  358 #> [16503,]  340  357  359 #> [16504,]  341  358  357 #> [16505,]  340  357  358 #> [16506,]  340  357  359 #> [16507,]  341  358  357 #> [16508,]  341  358  357 #> [16509,]  341  359  357 #> [16510,]  341  359  357 #> [16511,]  340  357  358 #> [16512,]  340  357  358 #> [16513,]  341  359  357 #> [16514,]  340  357  358 #> [16515,]  341  359  357 #> [16516,]  341  359  357 #> [16517,]  341  359  357 #> [16518,]  341  359  357 #> [16519,]  340  357  358 #> [16520,]  340  357  360 #> [16521,]  341  359  357 #> [16522,]  340  357  358 #> [16523,]  341  358  357 #> [16524,]  340  357  358 #> [16525,]  341  358  357 #> [16526,]  340  357  358 #> [16527,]  341  359  357 #> [16528,]  341  359  357 #> [16529,]  340  357  358 #> [16530,]  340  357  358 #> [16531,]  340  357  358 #> [16532,]  340  357  358 #> [16533,]  340  357  358 #> [16534,]  340  357  359 #> [16535,]  340  357  359 #> [16536,]  340  357  358 #> [16537,]  341  358  357 #> [16538,]  341  359  357 #> [16539,]  341  359  357 #> [16540,]  340  357  358 #> [16541,]  340  357  358 #> [16542,]  340  357  359 #> [16543,]  341  359  357 #> [16544,]  341  359  357 #> [16545,]  341  359  357 #> [16546,]  341  358  357 #> [16547,]  341  358  357 #> [16548,]  340  357  358 #> [16549,]  340  357  358 #> [16550,]  340  357  360 #> [16551,]  340  357  358 #> [16552,]  340  357  358 #> [16553,]  341  359  357 #> [16554,]  340  357  360 #> [16555,]  340  357  360 #> [16556,]  341  359  357 #> [16557,]  340  357  360 #> [16558,]  340  357  358 #> [16559,]  340  357  358 #> [16560,]  340  357  358 #> [16561,]  341  359  357 #> [16562,]  340  357  358 #> [16563,]  340  357  358 #> [16564,]  341  359  357 #> [16565,]  340  357  359 #> [16566,]  340  357  358 #> [16567,]  340  357  358 #> [16568,]  340  357  358 #> [16569,]  340  357  358 #> [16570,]  341  359  357 #> [16571,]  341  359  357 #> [16572,]  341  358  357 #> [16573,]  341  359  357 #> [16574,]  341  358  357 #> [16575,]  341  359  357 #> [16576,]  341  358  357 #> [16577,]  341  359  357 #> [16578,]  340  357  358 #> [16579,]  341  359  357 #> [16580,]  340  357  360 #> [16581,]  340  357  358 #> [16582,]  341  359  357 #> [16583,]  340  357  358 #> [16584,]  341  359  357 #> [16585,]  340  357  360 #> [16586,]  341  358  357 #> [16587,]  341  359  357 #> [16588,]  341  359  357 #> [16589,]  340  357  359 #> [16590,]  341  359  357 #> [16591,]  340  357  358 #> [16592,]  340  357  358 #> [16593,]  340  357  358 #> [16594,]  341  359  357 #> [16595,]  341  359  357 #> [16596,]  341  358  357 #> [16597,]  340  357  358 #> [16598,]  340  357  360 #> [16599,]  340  357  360 #> [16600,]  341  359  357 #> [16601,]  342  361  362 #> [16602,]  342  361  362 #> [16603,]  342  360  361 #> [16604,]  342  361  363 #> [16605,]  342  361  362 #> [16606,]  342  361  362 #> [16607,]  342  361  362 #> [16608,]  342  361  362 #> [16609,]  342  361  363 #> [16610,]  342  360  361 #> [16611,]  342  360  361 #> [16612,]  342  361  363 #> [16613,]  342  361  362 #> [16614,]  342  360  361 #> [16615,]  342  361  364 #> [16616,]  342  361  362 #> [16617,]  342  361  362 #> [16618,]  342  361  363 #> [16619,]  342  361  363 #> [16620,]  342  361  362 #> [16621,]  342  361  364 #> [16622,]  342  361  362 #> [16623,]  342  361  362 #> [16624,]  342  361  362 #> [16625,]  342  361  362 #> [16626,]  342  361  362 #> [16627,]  342  361  364 #> [16628,]  342  361  362 #> [16629,]  342  361  362 #> [16630,]  342  361  362 #> [16631,]  342  361  363 #> [16632,]  342  360  361 #> [16633,]  342  361  364 #> [16634,]  342  361  362 #> [16635,]  342  361  362 #> [16636,]  342  361  363 #> [16637,]  342  361  362 #> [16638,]  342  361  363 #> [16639,]  342  361  362 #> [16640,]  342  360  361 #> [16641,]  342  361  364 #> [16642,]  342  361  363 #> [16643,]  342  361  362 #> [16644,]  342  361  362 #> [16645,]  342  361  362 #> [16646,]  342  361  362 #> [16647,]  342  361  362 #> [16648,]  342  360  361 #> [16649,]  342  361  362 #> [16650,]  342  361  362 #> [16651,]  342  361  362 #> [16652,]  342  361  362 #> [16653,]  342  361  362 #> [16654,]  342  361  362 #> [16655,]  342  361  362 #> [16656,]  342  361  362 #> [16657,]  342  361  362 #> [16658,]  342  361  364 #> [16659,]  342  361  362 #> [16660,]  342  361  362 #> [16661,]  342  361  364 #> [16662,]  342  361  362 #> [16663,]  342  361  362 #> [16664,]  342  361  362 #> [16665,]  342  361  362 #> [16666,]  342  361  362 #> [16667,]  342  361  362 #> [16668,]  342  361  364 #> [16669,]  342  361  363 #> [16670,]  342  360  361 #> [16671,]  342  361  362 #> [16672,]  342  361  362 #> [16673,]  342  361  362 #> [16674,]  342  361  363 #> [16675,]  342  361  363 #> [16676,]  342  361  362 #> [16677,]  342  361  362 #> [16678,]  342  361  362 #> [16679,]  342  361  362 #> [16680,]  342  361  362 #> [16681,]  342  361  362 #> [16682,]  342  361  363 #> [16683,]  342  361  362 #> [16684,]  342  361  362 #> [16685,]  342  361  363 #> [16686,]  342  361  362 #> [16687,]  342  361  362 #> [16688,]  342  361  362 #> [16689,]  342  361  362 #> [16690,]  342  361  362 #> [16691,]  342  361  362 #> [16692,]  342  361  363 #> [16693,]  342  361  364 #> [16694,]  342  361  362 #> [16695,]  342  361  362 #> [16696,]  342  361  364 #> [16697,]  342  361  363 #> [16698,]  342  361  362 #> [16699,]  342  361  362 #> [16700,]  342  361  362 #> [16701,]  343  362  365 #> [16702,]  344  363  365 #> [16703,]  344  363  365 #> [16704,]  343  362  366 #> [16705,]  344  363  365 #> [16706,]  344  363  365 #> [16707,]  344  363  365 #> [16708,]  343  362  365 #> [16709,]  343  362  365 #> [16710,]  344  363  366 #> [16711,]  343  362  365 #> [16712,]  344  363  365 #> [16713,]  343  362  365 #> [16714,]  343  362  365 #> [16715,]  343  362  365 #> [16716,]  343  362  365 #> [16717,]  343  362  365 #> [16718,]  344  363  366 #> [16719,]  344  363  365 #> [16720,]  344  363  365 #> [16721,]  343  362  366 #> [16722,]  343  362  365 #> [16723,]  344  363  365 #> [16724,]  344  363  365 #> [16725,]  344  363  366 #> [16726,]  344  363  365 #> [16727,]  343  362  365 #> [16728,]  344  363  365 #> [16729,]  344  363  365 #> [16730,]  343  362  365 #> [16731,]  344  363  365 #> [16732,]  344  363  365 #> [16733,]  344  363  365 #> [16734,]  344  363  365 #> [16735,]  343  362  365 #> [16736,]  344  363  365 #> [16737,]  343  362  365 #> [16738,]  344  363  365 #> [16739,]  344  363  366 #> [16740,]  344  363  365 #> [16741,]  343  362  365 #> [16742,]  344  363  365 #> [16743,]  343  362  366 #> [16744,]  343  362  365 #> [16745,]  343  362  366 #> [16746,]  343  362  365 #> [16747,]  344  363  365 #> [16748,]  344  363  365 #> [16749,]  343  362  365 #> [16750,]  344  363  365 #> [16751,]  344  363  365 #> [16752,]  343  362  365 #> [16753,]  344  363  366 #> [16754,]  343  362  365 #> [16755,]  343  362  365 #> [16756,]  344  363  365 #> [16757,]  344  363  365 #> [16758,]  343  362  365 #> [16759,]  344  363  365 #> [16760,]  344  363  365 #> [16761,]  344  363  365 #> [16762,]  343  362  365 #> [16763,]  344  363  365 #> [16764,]  344  363  365 #> [16765,]  344  363  365 #> [16766,]  343  362  365 #> [16767,]  343  362  365 #> [16768,]  343  362  365 #> [16769,]  343  362  365 #> [16770,]  344  363  365 #> [16771,]  344  363  365 #> [16772,]  344  363  366 #> [16773,]  344  363  366 #> [16774,]  343  362  366 #> [16775,]  344  363  366 #> [16776,]  344  363  366 #> [16777,]  344  363  366 #> [16778,]  344  363  365 #> [16779,]  343  362  365 #> [16780,]  343  362  365 #> [16781,]  343  362  365 #> [16782,]  343  362  365 #> [16783,]  343  362  365 #> [16784,]  344  363  366 #> [16785,]  343  362  365 #> [16786,]  344  363  365 #> [16787,]  343  362  365 #> [16788,]  343  362  365 #> [16789,]  343  362  365 #> [16790,]  343  362  365 #> [16791,]  343  362  365 #> [16792,]  343  362  365 #> [16793,]  344  363  365 #> [16794,]  344  363  366 #> [16795,]  343  362  366 #> [16796,]  343  362  365 #> [16797,]  344  363  365 #> [16798,]  344  363  365 #> [16799,]  343  362  365 #> [16800,]  344  363  365 #> [16801,]  347  365  367 #> [16802,]  347  365  367 #> [16803,]  347  365  367 #> [16804,]  345  364  367 #> [16805,]  347  365  367 #> [16806,]  347  365  367 #> [16807,]  347  365  367 #> [16808,]  345  364  368 #> [16809,]  345  364  368 #> [16810,]  345  364  367 #> [16811,]  347  365  367 #> [16812,]  347  365  367 #> [16813,]  347  365  367 #> [16814,]  347  365  367 #> [16815,]  346  365  367 #> [16816,]  347  365  367 #> [16817,]  347  365  367 #> [16818,]  345  364  367 #> [16819,]  347  365  367 #> [16820,]  345  364  367 #> [16821,]  347  365  367 #> [16822,]  347  365  367 #> [16823,]  347  365  367 #> [16824,]  347  365  367 #> [16825,]  347  365  367 #> [16826,]  347  365  368 #> [16827,]  347  365  367 #> [16828,]  347  365  367 #> [16829,]  347  365  367 #> [16830,]  345  364  367 #> [16831,]  346  365  367 #> [16832,]  347  365  367 #> [16833,]  347  365  367 #> [16834,]  346  365  367 #> [16835,]  347  365  367 #> [16836,]  347  365  367 #> [16837,]  347  365  367 #> [16838,]  347  365  367 #> [16839,]  345  364  367 #> [16840,]  347  365  367 #> [16841,]  347  365  367 #> [16842,]  346  365  367 #> [16843,]  345  364  367 #> [16844,]  346  365  367 #> [16845,]  345  364  367 #> [16846,]  347  365  367 #> [16847,]  347  365  367 #> [16848,]  347  365  367 #> [16849,]  345  364  367 #> [16850,]  347  365  367 #> [16851,]  345  364  367 #> [16852,]  347  365  367 #> [16853,]  345  364  367 #> [16854,]  347  365  367 #> [16855,]  347  365  367 #> [16856,]  345  364  368 #> [16857,]  347  365  367 #> [16858,]  347  365  367 #> [16859,]  347  365  367 #> [16860,]  345  364  367 #> [16861,]  347  365  368 #> [16862,]  347  365  367 #> [16863,]  346  365  367 #> [16864,]  345  364  367 #> [16865,]  345  364  367 #> [16866,]  345  364  367 #> [16867,]  345  364  367 #> [16868,]  347  365  367 #> [16869,]  347  365  367 #> [16870,]  347  365  367 #> [16871,]  347  365  367 #> [16872,]  347  365  367 #> [16873,]  347  365  367 #> [16874,]  347  365  367 #> [16875,]  346  365  367 #> [16876,]  347  365  368 #> [16877,]  347  365  367 #> [16878,]  345  364  367 #> [16879,]  347  365  367 #> [16880,]  347  365  367 #> [16881,]  347  365  367 #> [16882,]  347  365  367 #> [16883,]  347  365  367 #> [16884,]  347  365  367 #> [16885,]  345  364  367 #> [16886,]  347  365  367 #> [16887,]  347  365  367 #> [16888,]  347  365  367 #> [16889,]  345  364  367 #> [16890,]  347  365  367 #> [16891,]  345  364  367 #> [16892,]  347  365  367 #> [16893,]  347  365  367 #> [16894,]  347  365  367 #> [16895,]  345  364  367 #> [16896,]  347  365  367 #> [16897,]  347  365  367 #> [16898,]  347  365  367 #> [16899,]  347  365  367 #> [16900,]  347  365  367 #> [16901,]  349  367  370 #> [16902,]  348  366  369 #> [16903,]  348  366  369 #> [16904,]  349  367  370 #> [16905,]  349  367  371 #> [16906,]  348  366  369 #> [16907,]  348  366  369 #> [16908,]  348  366  369 #> [16909,]  348  366  369 #> [16910,]  349  367  371 #> [16911,]  349  367  370 #> [16912,]  349  367  371 #> [16913,]  349  367  370 #> [16914,]  349  367  371 #> [16915,]  349  367  371 #> [16916,]  349  367  371 #> [16917,]  349  367  370 #> [16918,]  349  367  371 #> [16919,]  349  367  371 #> [16920,]  348  366  369 #> [16921,]  348  366  369 #> [16922,]  349  367  370 #> [16923,]  348  366  369 #> [16924,]  349  367  371 #> [16925,]  348  366  369 #> [16926,]  349  367  371 #> [16927,]  349  367  370 #> [16928,]  349  367  371 #> [16929,]  348  366  369 #> [16930,]  348  366  369 #> [16931,]  349  367  371 #> [16932,]  349  367  371 #> [16933,]  349  367  371 #> [16934,]  348  366  369 #> [16935,]  348  366  369 #> [16936,]  348  366  369 #> [16937,]  348  366  369 #> [16938,]  349  367  371 #> [16939,]  349  367  371 #> [16940,]  348  366  369 #> [16941,]  348  366  369 #> [16942,]  348  366  369 #> [16943,]  349  367  370 #> [16944,]  348  366  369 #> [16945,]  348  366  369 #> [16946,]  349  367  370 #> [16947,]  349  367  371 #> [16948,]  349  367  371 #> [16949,]  348  366  369 #> [16950,]  348  366  369 #> [16951,]  349  367  371 #> [16952,]  349  367  370 #> [16953,]  348  366  369 #> [16954,]  348  366  369 #> [16955,]  348  366  369 #> [16956,]  348  366  369 #> [16957,]  348  366  369 #> [16958,]  349  367  370 #> [16959,]  349  367  371 #> [16960,]  348  366  369 #> [16961,]  349  367  371 #> [16962,]  348  366  369 #> [16963,]  349  367  371 #> [16964,]  348  366  369 #> [16965,]  348  366  369 #> [16966,]  349  367  370 #> [16967,]  348  366  369 #> [16968,]  349  367  371 #> [16969,]  349  367  370 #> [16970,]  349  367  371 #> [16971,]  349  367  371 #> [16972,]  348  366  369 #> [16973,]  348  366  369 #> [16974,]  348  366  369 #> [16975,]  349  367  371 #> [16976,]  348  366  369 #> [16977,]  349  367  371 #> [16978,]  349  367  371 #> [16979,]  349  367  370 #> [16980,]  348  366  369 #> [16981,]  348  366  369 #> [16982,]  348  366  369 #> [16983,]  349  367  370 #> [16984,]  348  366  369 #> [16985,]  348  366  369 #> [16986,]  348  366  369 #> [16987,]  349  367  370 #> [16988,]  348  366  369 #> [16989,]  348  366  369 #> [16990,]  349  367  370 #> [16991,]  349  367  371 #> [16992,]  349  367  370 #> [16993,]  349  367  371 #> [16994,]  348  366  369 #> [16995,]  349  367  370 #> [16996,]  349  367  370 #> [16997,]  348  366  369 #> [16998,]  348  366  369 #> [16999,]  348  366  369 #> [17000,]  349  367  371 #> [17001,]  351  368  372 #> [17002,]  351  368  372 #> [17003,]  350  369  373 #> [17004,]  350  369  373 #> [17005,]  350  369  373 #> [17006,]  351  368  372 #> [17007,]  350  369  373 #> [17008,]  350  369  373 #> [17009,]  350  369  373 #> [17010,]  350  369  373 #> [17011,]  350  369  373 #> [17012,]  350  369  373 #> [17013,]  351  368  372 #> [17014,]  351  368  372 #> [17015,]  351  368  372 #> [17016,]  351  368  372 #> [17017,]  351  368  372 #> [17018,]  350  369  373 #> [17019,]  350  369  373 #> [17020,]  350  369  373 #> [17021,]  351  368  372 #> [17022,]  350  369  373 #> [17023,]  350  369  373 #> [17024,]  350  369  373 #> [17025,]  350  369  373 #> [17026,]  351  368  372 #> [17027,]  351  368  372 #> [17028,]  350  369  373 #> [17029,]  351  368  372 #> [17030,]  350  369  373 #> [17031,]  350  369  373 #> [17032,]  350  369  373 #> [17033,]  351  368  372 #> [17034,]  350  369  373 #> [17035,]  351  368  372 #> [17036,]  350  369  373 #> [17037,]  350  369  373 #> [17038,]  350  369  373 #> [17039,]  350  369  373 #> [17040,]  350  369  373 #> [17041,]  351  368  372 #> [17042,]  350  369  373 #> [17043,]  350  369  373 #> [17044,]  351  368  372 #> [17045,]  350  369  373 #> [17046,]  350  369  373 #> [17047,]  350  369  373 #> [17048,]  350  369  373 #> [17049,]  350  369  373 #> [17050,]  351  368  372 #> [17051,]  350  369  373 #> [17052,]  350  369  373 #> [17053,]  350  369  373 #> [17054,]  350  369  373 #> [17055,]  350  369  373 #> [17056,]  350  369  373 #> [17057,]  350  369  373 #> [17058,]  350  369  373 #> [17059,]  351  368  372 #> [17060,]  350  369  373 #> [17061,]  351  368  372 #> [17062,]  350  369  373 #> [17063,]  350  369  373 #> [17064,]  350  369  373 #> [17065,]  350  369  373 #> [17066,]  350  369  373 #> [17067,]  350  369  373 #> [17068,]  351  368  372 #> [17069,]  350  369  373 #> [17070,]  351  368  372 #> [17071,]  351  368  372 #> [17072,]  350  369  373 #> [17073,]  351  368  372 #> [17074,]  350  369  373 #> [17075,]  350  369  373 #> [17076,]  351  368  372 #> [17077,]  351  368  372 #> [17078,]  350  369  373 #> [17079,]  351  368  372 #> [17080,]  350  369  373 #> [17081,]  351  368  372 #> [17082,]  350  369  373 #> [17083,]  351  368  372 #> [17084,]  350  369  373 #> [17085,]  350  369  373 #> [17086,]  351  368  372 #> [17087,]  350  369  373 #> [17088,]  350  369  373 #> [17089,]  350  369  373 #> [17090,]  350  369  373 #> [17091,]  350  369  373 #> [17092,]  350  369  373 #> [17093,]  351  368  372 #> [17094,]  351  368  372 #> [17095,]  350  369  373 #> [17096,]  351  368  372 #> [17097,]  350  369  373 #> [17098,]  350  369  373 #> [17099,]  351  368  372 #> [17100,]  350  369  373 #> [17101,]  352  371  375 #> [17102,]  352  371  375 #> [17103,]  352  370  374 #> [17104,]  352  371  375 #> [17105,]  352  371  375 #> [17106,]  352  371  375 #> [17107,]  352  371  375 #> [17108,]  352  371  375 #> [17109,]  352  371  375 #> [17110,]  352  371  375 #> [17111,]  352  370  374 #> [17112,]  352  370  374 #> [17113,]  352  371  375 #> [17114,]  352  370  374 #> [17115,]  352  371  375 #> [17116,]  352  371  375 #> [17117,]  352  371  375 #> [17118,]  352  371  375 #> [17119,]  352  371  375 #> [17120,]  352  370  374 #> [17121,]  352  371  375 #> [17122,]  352  370  374 #> [17123,]  352  371  375 #> [17124,]  352  371  375 #> [17125,]  352  371  375 #> [17126,]  352  370  374 #> [17127,]  352  371  375 #> [17128,]  352  371  375 #> [17129,]  352  370  374 #> [17130,]  352  371  375 #> [17131,]  352  371  375 #> [17132,]  352  370  374 #> [17133,]  352  371  375 #> [17134,]  352  371  375 #> [17135,]  352  371  375 #> [17136,]  352  370  374 #> [17137,]  352  371  375 #> [17138,]  352  371  375 #> [17139,]  352  371  375 #> [17140,]  352  370  374 #> [17141,]  352  370  374 #> [17142,]  352  370  374 #> [17143,]  352  371  375 #> [17144,]  352  371  375 #> [17145,]  352  371  375 #> [17146,]  352  371  375 #> [17147,]  352  371  375 #> [17148,]  352  370  374 #> [17149,]  352  371  375 #> [17150,]  352  371  375 #> [17151,]  352  370  374 #> [17152,]  352  371  375 #> [17153,]  352  371  375 #> [17154,]  352  370  374 #> [17155,]  352  371  375 #> [17156,]  352  371  375 #> [17157,]  352  371  375 #> [17158,]  352  371  375 #> [17159,]  352  371  375 #> [17160,]  352  370  374 #> [17161,]  352  371  375 #> [17162,]  352  370  374 #> [17163,]  352  371  375 #> [17164,]  352  371  375 #> [17165,]  352  371  375 #> [17166,]  352  370  374 #> [17167,]  352  371  375 #> [17168,]  352  370  374 #> [17169,]  352  370  374 #> [17170,]  352  371  375 #> [17171,]  352  371  375 #> [17172,]  352  371  375 #> [17173,]  352  371  375 #> [17174,]  352  371  375 #> [17175,]  352  371  375 #> [17176,]  352  371  375 #> [17177,]  352  371  375 #> [17178,]  352  371  375 #> [17179,]  352  371  375 #> [17180,]  352  370  374 #> [17181,]  352  370  374 #> [17182,]  352  371  375 #> [17183,]  352  370  374 #> [17184,]  352  371  375 #> [17185,]  352  371  375 #> [17186,]  352  371  375 #> [17187,]  352  371  375 #> [17188,]  352  371  375 #> [17189,]  352  370  374 #> [17190,]  352  371  375 #> [17191,]  352  370  374 #> [17192,]  352  371  375 #> [17193,]  352  371  375 #> [17194,]  352  371  375 #> [17195,]  352  371  375 #> [17196,]  352  371  375 #> [17197,]  352  371  375 #> [17198,]  352  371  375 #> [17199,]  352  371  375 #> [17200,]  352  371  375 #> [17201,]  353  372  376 #> [17202,]  353  372  376 #> [17203,]  353  372  376 #> [17204,]  353  373  377 #> [17205,]  353  372  376 #> [17206,]  353  372  376 #> [17207,]  353  372  376 #> [17208,]  353  372  376 #> [17209,]  353  372  376 #> [17210,]  353  372  376 #> [17211,]  353  372  376 #> [17212,]  353  373  377 #> [17213,]  353  372  376 #> [17214,]  353  373  377 #> [17215,]  353  372  376 #> [17216,]  353  372  376 #> [17217,]  353  372  376 #> [17218,]  353  372  376 #> [17219,]  353  373  377 #> [17220,]  353  372  376 #> [17221,]  353  372  376 #> [17222,]  353  372  376 #> [17223,]  353  372  376 #> [17224,]  353  372  376 #> [17225,]  353  372  376 #> [17226,]  353  372  376 #> [17227,]  353  373  377 #> [17228,]  353  372  376 #> [17229,]  353  372  376 #> [17230,]  353  372  376 #> [17231,]  353  372  376 #> [17232,]  353  372  376 #> [17233,]  353  372  376 #> [17234,]  353  372  376 #> [17235,]  353  372  376 #> [17236,]  353  372  376 #> [17237,]  353  372  376 #> [17238,]  353  372  376 #> [17239,]  353  372  376 #> [17240,]  353  372  376 #> [17241,]  353  373  377 #> [17242,]  353  372  376 #> [17243,]  353  372  376 #> [17244,]  353  372  376 #> [17245,]  353  372  376 #> [17246,]  353  372  376 #> [17247,]  353  372  376 #> [17248,]  353  373  377 #> [17249,]  353  372  376 #> [17250,]  353  372  376 #> [17251,]  353  372  376 #> [17252,]  353  372  376 #> [17253,]  353  372  376 #> [17254,]  353  372  376 #> [17255,]  353  372  376 #> [17256,]  353  372  376 #> [17257,]  353  372  376 #> [17258,]  353  372  376 #> [17259,]  353  372  376 #> [17260,]  353  372  376 #> [17261,]  353  373  377 #> [17262,]  353  372  376 #> [17263,]  353  372  376 #> [17264,]  353  372  376 #> [17265,]  353  372  376 #> [17266,]  353  372  376 #> [17267,]  353  372  376 #> [17268,]  353  372  376 #> [17269,]  353  373  377 #> [17270,]  353  372  376 #> [17271,]  353  372  376 #> [17272,]  353  372  376 #> [17273,]  353  372  376 #> [17274,]  353  372  376 #> [17275,]  353  372  376 #> [17276,]  353  372  376 #> [17277,]  353  372  376 #> [17278,]  353  372  376 #> [17279,]  353  372  376 #> [17280,]  353  372  376 #> [17281,]  353  372  376 #> [17282,]  353  373  377 #> [17283,]  353  372  376 #> [17284,]  353  372  376 #> [17285,]  353  372  376 #> [17286,]  353  372  376 #> [17287,]  353  372  376 #> [17288,]  353  372  376 #> [17289,]  353  372  376 #> [17290,]  353  372  376 #> [17291,]  353  372  376 #> [17292,]  353  373  377 #> [17293,]  353  373  377 #> [17294,]  353  372  376 #> [17295,]  353  372  376 #> [17296,]  353  373  377 #> [17297,]  353  373  377 #> [17298,]  353  372  376 #> [17299,]  353  372  376 #> [17300,]  353  372  376 #> [17301,]  354  374  378 #> [17302,]  355  375  379 #> [17303,]  355  375  379 #> [17304,]  354  374  378 #> [17305,]  355  375  379 #> [17306,]  355  375  379 #> [17307,]  355  375  379 #> [17308,]  354  374  378 #> [17309,]  354  374  378 #> [17310,]  355  375  379 #> [17311,]  354  374  378 #> [17312,]  355  375  379 #> [17313,]  354  374  378 #> [17314,]  355  375  379 #> [17315,]  355  375  379 #> [17316,]  355  375  379 #> [17317,]  354  374  378 #> [17318,]  355  375  379 #> [17319,]  355  375  379 #> [17320,]  355  375  379 #> [17321,]  355  375  379 #> [17322,]  354  374  378 #> [17323,]  355  375  379 #> [17324,]  355  375  379 #> [17325,]  355  375  379 #> [17326,]  355  375  379 #> [17327,]  354  374  378 #> [17328,]  355  375  379 #> [17329,]  355  375  379 #> [17330,]  354  374  378 #> [17331,]  355  375  379 #> [17332,]  355  375  379 #> [17333,]  355  375  379 #> [17334,]  355  375  379 #> [17335,]  354  374  378 #> [17336,]  355  375  379 #> [17337,]  355  375  379 #> [17338,]  355  375  379 #> [17339,]  355  375  379 #> [17340,]  355  375  379 #> [17341,]  355  375  379 #> [17342,]  355  375  379 #> [17343,]  354  374  378 #> [17344,]  354  374  378 #> [17345,]  355  375  379 #> [17346,]  355  375  379 #> [17347,]  355  375  379 #> [17348,]  355  375  379 #> [17349,]  354  374  378 #> [17350,]  355  375  379 #> [17351,]  355  375  379 #> [17352,]  354  374  378 #> [17353,]  355  375  379 #> [17354,]  354  374  378 #> [17355,]  354  374  378 #> [17356,]  355  375  379 #> [17357,]  355  375  379 #> [17358,]  354  374  378 #> [17359,]  355  375  379 #> [17360,]  355  375  379 #> [17361,]  355  375  379 #> [17362,]  355  375  379 #> [17363,]  355  375  379 #> [17364,]  355  375  379 #> [17365,]  355  375  379 #> [17366,]  354  374  378 #> [17367,]  355  375  379 #> [17368,]  355  375  379 #> [17369,]  354  374  378 #> [17370,]  355  375  379 #> [17371,]  355  375  379 #> [17372,]  355  375  379 #> [17373,]  355  375  379 #> [17374,]  355  375  379 #> [17375,]  355  375  379 #> [17376,]  355  375  379 #> [17377,]  355  375  379 #> [17378,]  355  375  379 #> [17379,]  354  374  378 #> [17380,]  354  374  378 #> [17381,]  354  374  378 #> [17382,]  354  374  378 #> [17383,]  354  374  378 #> [17384,]  355  375  379 #> [17385,]  355  375  379 #> [17386,]  355  375  379 #> [17387,]  354  374  378 #> [17388,]  354  374  378 #> [17389,]  354  374  378 #> [17390,]  354  374  378 #> [17391,]  355  375  379 #> [17392,]  354  374  378 #> [17393,]  355  375  379 #> [17394,]  355  375  379 #> [17395,]  354  374  378 #> [17396,]  354  374  378 #> [17397,]  355  375  379 #> [17398,]  355  375  379 #> [17399,]  354  374  378 #> [17400,]  355  375  379 #> [17401,]  357  377  381 #> [17402,]  357  377  381 #> [17403,]  356  376  380 #> [17404,]  357  377  381 #> [17405,]  357  377  381 #> [17406,]  356  376  380 #> [17407,]  356  376  380 #> [17408,]  357  377  381 #> [17409,]  357  377  381 #> [17410,]  357  377  381 #> [17411,]  357  377  381 #> [17412,]  357  377  381 #> [17413,]  357  377  381 #> [17414,]  357  377  381 #> [17415,]  357  377  381 #> [17416,]  357  377  381 #> [17417,]  357  377  381 #> [17418,]  357  377  381 #> [17419,]  357  377  381 #> [17420,]  356  376  380 #> [17421,]  356  376  380 #> [17422,]  357  377  381 #> [17423,]  356  376  380 #> [17424,]  357  377  381 #> [17425,]  356  376  380 #> [17426,]  357  377  381 #> [17427,]  357  377  381 #> [17428,]  357  377  381 #> [17429,]  356  376  380 #> [17430,]  357  377  381 #> [17431,]  357  377  381 #> [17432,]  357  377  381 #> [17433,]  357  377  381 #> [17434,]  356  376  380 #> [17435,]  356  376  380 #> [17436,]  357  377  381 #> [17437,]  356  376  380 #> [17438,]  357  377  381 #> [17439,]  357  377  381 #> [17440,]  357  377  381 #> [17441,]  357  377  381 #> [17442,]  356  376  380 #> [17443,]  357  377  381 #> [17444,]  356  376  380 #> [17445,]  356  376  380 #> [17446,]  357  377  381 #> [17447,]  357  377  381 #> [17448,]  357  377  381 #> [17449,]  357  377  381 #> [17450,]  356  376  380 #> [17451,]  357  377  381 #> [17452,]  357  377  381 #> [17453,]  356  376  380 #> [17454,]  356  376  380 #> [17455,]  356  376  380 #> [17456,]  356  376  380 #> [17457,]  356  376  380 #> [17458,]  357  377  381 #> [17459,]  357  377  381 #> [17460,]  356  376  380 #> [17461,]  357  377  381 #> [17462,]  357  377  381 #> [17463,]  357  377  381 #> [17464,]  356  376  380 #> [17465,]  356  376  380 #> [17466,]  357  377  381 #> [17467,]  357  377  381 #> [17468,]  357  377  381 #> [17469,]  357  377  381 #> [17470,]  357  377  381 #> [17471,]  357  377  381 #> [17472,]  357  377  381 #> [17473,]  356  376  380 #> [17474,]  356  376  380 #> [17475,]  357  377  381 #> [17476,]  357  377  381 #> [17477,]  357  377  381 #> [17478,]  357  377  381 #> [17479,]  357  377  381 #> [17480,]  356  376  380 #> [17481,]  356  376  380 #> [17482,]  356  376  380 #> [17483,]  357  377  381 #> [17484,]  356  376  380 #> [17485,]  356  376  380 #> [17486,]  356  376  380 #> [17487,]  357  377  381 #> [17488,]  356  376  380 #> [17489,]  356  376  380 #> [17490,]  357  377  381 #> [17491,]  357  377  381 #> [17492,]  357  377  381 #> [17493,]  357  377  381 #> [17494,]  356  376  380 #> [17495,]  357  377  381 #> [17496,]  357  377  381 #> [17497,]  356  376  380 #> [17498,]  356  376  380 #> [17499,]  356  376  380 #> [17500,]  357  377  381 #> [17501,]  358  378  382 #> [17502,]  358  378  382 #> [17503,]  358  378  382 #> [17504,]  359  379  383 #> [17505,]  358  378  382 #> [17506,]  358  378  382 #> [17507,]  358  378  382 #> [17508,]  358  378  382 #> [17509,]  358  378  382 #> [17510,]  358  378  382 #> [17511,]  358  378  382 #> [17512,]  358  378  382 #> [17513,]  358  378  382 #> [17514,]  359  379  383 #> [17515,]  358  378  382 #> [17516,]  358  378  382 #> [17517,]  358  378  382 #> [17518,]  358  378  382 #> [17519,]  358  378  382 #> [17520,]  358  378  382 #> [17521,]  358  378  382 #> [17522,]  358  378  382 #> [17523,]  358  378  382 #> [17524,]  358  378  382 #> [17525,]  358  378  382 #> [17526,]  358  378  382 #> [17527,]  358  378  382 #> [17528,]  358  378  382 #> [17529,]  358  378  382 #> [17530,]  358  378  382 #> [17531,]  358  378  382 #> [17532,]  358  378  382 #> [17533,]  358  378  382 #> [17534,]  358  378  382 #> [17535,]  358  378  382 #> [17536,]  358  378  382 #> [17537,]  358  378  382 #> [17538,]  358  378  382 #> [17539,]  358  378  382 #> [17540,]  358  378  382 #> [17541,]  358  378  382 #> [17542,]  358  378  382 #> [17543,]  358  378  382 #> [17544,]  358  378  382 #> [17545,]  358  378  382 #> [17546,]  358  378  382 #> [17547,]  358  378  382 #> [17548,]  358  378  382 #> [17549,]  358  378  382 #> [17550,]  358  378  382 #> [17551,]  358  378  382 #> [17552,]  358  378  382 #> [17553,]  358  378  382 #> [17554,]  358  378  382 #> [17555,]  358  378  382 #> [17556,]  358  378  382 #> [17557,]  358  378  382 #> [17558,]  358  378  382 #> [17559,]  358  378  382 #> [17560,]  358  378  382 #> [17561,]  359  379  383 #> [17562,]  358  378  382 #> [17563,]  358  378  382 #> [17564,]  358  378  382 #> [17565,]  358  378  382 #> [17566,]  358  378  382 #> [17567,]  358  378  382 #> [17568,]  358  378  382 #> [17569,]  358  378  382 #> [17570,]  358  378  382 #> [17571,]  358  378  382 #> [17572,]  358  378  382 #> [17573,]  358  378  382 #> [17574,]  358  378  382 #> [17575,]  358  378  382 #> [17576,]  358  378  382 #> [17577,]  358  378  382 #> [17578,]  358  378  382 #> [17579,]  358  378  382 #> [17580,]  358  378  382 #> [17581,]  358  378  382 #> [17582,]  358  378  382 #> [17583,]  358  378  382 #> [17584,]  358  378  382 #> [17585,]  358  378  382 #> [17586,]  358  378  382 #> [17587,]  358  378  382 #> [17588,]  358  378  382 #> [17589,]  358  378  382 #> [17590,]  358  378  382 #> [17591,]  358  378  382 #> [17592,]  359  379  383 #> [17593,]  359  379  383 #> [17594,]  358  378  382 #> [17595,]  358  378  382 #> [17596,]  359  379  383 #> [17597,]  358  378  382 #> [17598,]  358  378  382 #> [17599,]  358  378  382 #> [17600,]  358  378  382 #> [17601,]  360  380  385 #> [17602,]  360  380  385 #> [17603,]  360  380  385 #> [17604,]  360  380  385 #> [17605,]  360  380  385 #> [17606,]  360  380  385 #> [17607,]  360  380  385 #> [17608,]  360  380  385 #> [17609,]  360  380  385 #> [17610,]  361  381  384 #> [17611,]  360  380  385 #> [17612,]  360  380  385 #> [17613,]  360  380  385 #> [17614,]  360  380  385 #> [17615,]  360  380  385 #> [17616,]  360  380  385 #> [17617,]  360  380  385 #> [17618,]  361  381  384 #> [17619,]  360  380  385 #> [17620,]  360  380  385 #> [17621,]  360  380  385 #> [17622,]  360  380  385 #> [17623,]  360  380  385 #> [17624,]  360  380  385 #> [17625,]  361  381  384 #> [17626,]  360  380  385 #> [17627,]  360  380  385 #> [17628,]  360  380  385 #> [17629,]  360  380  385 #> [17630,]  360  380  385 #> [17631,]  360  380  385 #> [17632,]  360  380  385 #> [17633,]  360  380  385 #> [17634,]  360  380  385 #> [17635,]  360  380  385 #> [17636,]  360  380  385 #> [17637,]  360  380  385 #> [17638,]  360  380  385 #> [17639,]  361  381  384 #> [17640,]  360  380  385 #> [17641,]  360  380  385 #> [17642,]  360  380  385 #> [17643,]  361  381  384 #> [17644,]  360  380  385 #> [17645,]  361  381  384 #> [17646,]  360  380  385 #> [17647,]  360  380  385 #> [17648,]  360  380  385 #> [17649,]  360  380  385 #> [17650,]  360  380  385 #> [17651,]  360  380  385 #> [17652,]  360  380  385 #> [17653,]  360  380  385 #> [17654,]  360  380  385 #> [17655,]  360  380  385 #> [17656,]  360  380  385 #> [17657,]  360  380  385 #> [17658,]  360  380  385 #> [17659,]  360  380  385 #> [17660,]  360  380  385 #> [17661,]  360  380  385 #> [17662,]  360  380  385 #> [17663,]  360  380  385 #> [17664,]  360  380  385 #> [17665,]  360  380  385 #> [17666,]  360  380  385 #> [17667,]  360  380  385 #> [17668,]  360  380  385 #> [17669,]  360  380  385 #> [17670,]  360  380  385 #> [17671,]  360  380  385 #> [17672,]  360  380  385 #> [17673,]  361  381  384 #> [17674,]  360  380  385 #> [17675,]  361  381  384 #> [17676,]  360  380  385 #> [17677,]  361  381  384 #> [17678,]  360  380  385 #> [17679,]  360  380  385 #> [17680,]  360  380  385 #> [17681,]  360  380  385 #> [17682,]  360  380  385 #> [17683,]  360  380  385 #> [17684,]  360  380  385 #> [17685,]  360  380  385 #> [17686,]  360  380  385 #> [17687,]  360  380  385 #> [17688,]  360  380  385 #> [17689,]  360  380  385 #> [17690,]  360  380  385 #> [17691,]  360  380  385 #> [17692,]  360  380  385 #> [17693,]  360  380  385 #> [17694,]  360  380  385 #> [17695,]  360  380  385 #> [17696,]  360  380  385 #> [17697,]  360  380  385 #> [17698,]  360  380  385 #> [17699,]  360  380  385 #> [17700,]  360  380  385 #> [17701,]  363  383  386 #> [17702,]  362  382  387 #> [17703,]  362  382  387 #> [17704,]  362  382  387 #> [17705,]  362  382  387 #> [17706,]  362  382  387 #> [17707,]  362  382  387 #> [17708,]  362  382  387 #> [17709,]  363  383  386 #> [17710,]  362  382  387 #> [17711,]  363  383  386 #> [17712,]  362  382  387 #> [17713,]  363  383  386 #> [17714,]  362  382  387 #> [17715,]  362  382  387 #> [17716,]  362  382  387 #> [17717,]  363  383  386 #> [17718,]  363  383  386 #> [17719,]  362  382  387 #> [17720,]  363  383  386 #> [17721,]  362  382  387 #> [17722,]  362  382  387 #> [17723,]  362  382  387 #> [17724,]  362  382  387 #> [17725,]  362  382  387 #> [17726,]  362  382  387 #> [17727,]  363  383  386 #> [17728,]  363  383  386 #> [17729,]  363  383  386 #> [17730,]  362  382  387 #> [17731,]  362  382  387 #> [17732,]  362  382  387 #> [17733,]  363  383  386 #> [17734,]  362  382  387 #> [17735,]  362  382  387 #> [17736,]  363  383  386 #> [17737,]  362  382  387 #> [17738,]  363  383  386 #> [17739,]  363  383  386 #> [17740,]  362  382  387 #> [17741,]  362  382  387 #> [17742,]  363  383  386 #> [17743,]  362  382  387 #> [17744,]  362  382  387 #> [17745,]  362  382  387 #> [17746,]  362  382  387 #> [17747,]  362  382  387 #> [17748,]  362  382  387 #> [17749,]  362  382  387 #> [17750,]  362  382  387 #> [17751,]  363  383  386 #> [17752,]  362  382  387 #> [17753,]  363  383  386 #> [17754,]  363  383  386 #> [17755,]  362  382  387 #> [17756,]  363  383  386 #> [17757,]  362  382  387 #> [17758,]  363  383  386 #> [17759,]  362  382  387 #> [17760,]  362  382  387 #> [17761,]  362  382  387 #> [17762,]  363  383  386 #> [17763,]  362  382  387 #> [17764,]  362  382  387 #> [17765,]  363  383  386 #> [17766,]  363  383  386 #> [17767,]  362  382  387 #> [17768,]  362  382  387 #> [17769,]  362  382  387 #> [17770,]  362  382  387 #> [17771,]  362  382  387 #> [17772,]  362  382  387 #> [17773,]  362  382  387 #> [17774,]  362  382  387 #> [17775,]  362  382  387 #> [17776,]  362  382  387 #> [17777,]  363  383  386 #> [17778,]  362  382  387 #> [17779,]  363  383  386 #> [17780,]  362  382  387 #> [17781,]  362  382  387 #> [17782,]  363  383  386 #> [17783,]  363  383  386 #> [17784,]  363  383  386 #> [17785,]  363  383  386 #> [17786,]  362  382  387 #> [17787,]  363  383  386 #> [17788,]  362  382  387 #> [17789,]  363  383  386 #> [17790,]  362  382  387 #> [17791,]  363  383  386 #> [17792,]  362  382  387 #> [17793,]  363  383  386 #> [17794,]  363  383  386 #> [17795,]  362  382  387 #> [17796,]  362  382  387 #> [17797,]  362  382  387 #> [17798,]  362  382  387 #> [17799,]  362  382  387 #> [17800,]  362  382  387 #> [17801,]  365  385  388 #> [17802,]  365  385  388 #> [17803,]  364  384  389 #> [17804,]  365  385  388 #> [17805,]  365  385  388 #> [17806,]  365  385  388 #> [17807,]  364  384  389 #> [17808,]  364  384  389 #> [17809,]  365  385  388 #> [17810,]  365  385  388 #> [17811,]  365  385  388 #> [17812,]  365  385  388 #> [17813,]  365  385  388 #> [17814,]  365  385  388 #> [17815,]  365  385  388 #> [17816,]  365  385  388 #> [17817,]  365  385  388 #> [17818,]  365  385  388 #> [17819,]  365  385  388 #> [17820,]  364  384  389 #> [17821,]  365  385  388 #> [17822,]  365  385  388 #> [17823,]  365  385  388 #> [17824,]  365  385  388 #> [17825,]  364  384  389 #> [17826,]  365  385  388 #> [17827,]  365  385  388 #> [17828,]  365  385  388 #> [17829,]  365  385  388 #> [17830,]  365  385  388 #> [17831,]  365  385  388 #> [17832,]  365  385  388 #> [17833,]  365  385  388 #> [17834,]  365  385  388 #> [17835,]  365  385  388 #> [17836,]  365  385  388 #> [17837,]  365  385  388 #> [17838,]  365  385  388 #> [17839,]  364  384  389 #> [17840,]  365  385  388 #> [17841,]  365  385  388 #> [17842,]  365  385  388 #> [17843,]  365  385  388 #> [17844,]  364  384  389 #> [17845,]  365  385  388 #> [17846,]  365  385  388 #> [17847,]  365  385  388 #> [17848,]  365  385  388 #> [17849,]  364  384  389 #> [17850,]  364  384  389 #> [17851,]  365  385  388 #> [17852,]  365  385  388 #> [17853,]  364  384  389 #> [17854,]  365  385  388 #> [17855,]  364  384  389 #> [17856,]  364  384  389 #> [17857,]  365  385  388 #> [17858,]  365  385  388 #> [17859,]  364  384  389 #> [17860,]  365  385  388 #> [17861,]  365  385  388 #> [17862,]  365  385  388 #> [17863,]  365  385  388 #> [17864,]  365  385  388 #> [17865,]  364  384  389 #> [17866,]  364  384  389 #> [17867,]  365  385  388 #> [17868,]  365  385  388 #> [17869,]  365  385  388 #> [17870,]  365  385  388 #> [17871,]  365  385  388 #> [17872,]  365  385  388 #> [17873,]  365  385  388 #> [17874,]  365  385  388 #> [17875,]  365  385  388 #> [17876,]  365  385  388 #> [17877,]  365  385  388 #> [17878,]  365  385  388 #> [17879,]  365  385  388 #> [17880,]  365  385  388 #> [17881,]  365  385  388 #> [17882,]  365  385  388 #> [17883,]  365  385  388 #> [17884,]  364  384  389 #> [17885,]  365  385  388 #> [17886,]  364  384  389 #> [17887,]  365  385  388 #> [17888,]  365  385  388 #> [17889,]  365  385  388 #> [17890,]  364  384  389 #> [17891,]  365  385  388 #> [17892,]  365  385  388 #> [17893,]  365  385  388 #> [17894,]  365  385  388 #> [17895,]  365  385  388 #> [17896,]  365  385  388 #> [17897,]  365  385  388 #> [17898,]  364  384  389 #> [17899,]  365  385  388 #> [17900,]  364  384  389 #> [17901,]  368  387  392 #> [17902,]  368  387  390 #> [17903,]  366  386  390 #> [17904,]  368  387  390 #> [17905,]  368  387  390 #> [17906,]  366  386  390 #> [17907,]  367  387  390 #> [17908,]  368  387  390 #> [17909,]  368  387  392 #> [17910,]  368  387  390 #> [17911,]  368  387  391 #> [17912,]  368  387  390 #> [17913,]  368  387  392 #> [17914,]  368  387  390 #> [17915,]  368  387  390 #> [17916,]  368  387  390 #> [17917,]  368  387  392 #> [17918,]  368  387  392 #> [17919,]  366  386  390 #> [17920,]  367  387  391 #> [17921,]  367  387  390 #> [17922,]  368  387  390 #> [17923,]  367  387  390 #> [17924,]  368  387  390 #> [17925,]  366  386  390 #> [17926,]  368  387  390 #> [17927,]  368  387  392 #> [17928,]  368  387  392 #> [17929,]  368  387  391 #> [17930,]  368  387  390 #> [17931,]  368  387  390 #> [17932,]  368  387  390 #> [17933,]  366  386  392 #> [17934,]  366  386  390 #> [17935,]  367  387  390 #> [17936,]  368  387  391 #> [17937,]  367  387  390 #> [17938,]  368  387  392 #> [17939,]  368  387  392 #> [17940,]  368  387  390 #> [17941,]  368  387  390 #> [17942,]  367  387  391 #> [17943,]  368  387  390 #> [17944,]  367  387  390 #> [17945,]  368  387  390 #> [17946,]  368  387  390 #> [17947,]  368  387  390 #> [17948,]  368  387  390 #> [17949,]  368  387  390 #> [17950,]  368  387  390 #> [17951,]  368  387  391 #> [17952,]  368  387  390 #> [17953,]  367  387  392 #> [17954,]  367  387  391 #> [17955,]  367  387  390 #> [17956,]  367  387  392 #> [17957,]  367  387  390 #> [17958,]  368  387  392 #> [17959,]  368  387  390 #> [17960,]  366  386  390 #> [17961,]  368  387  390 #> [17962,]  368  387  391 #> [17963,]  368  387  390 #> [17964,]  367  387  390 #> [17965,]  366  386  392 #> [17966,]  368  387  391 #> [17967,]  368  387  390 #> [17968,]  368  387  390 #> [17969,]  368  387  390 #> [17970,]  366  386  390 #> [17971,]  368  387  390 #> [17972,]  368  387  390 #> [17973,]  366  386  390 #> [17974,]  367  387  390 #> [17975,]  368  387  390 #> [17976,]  368  387  390 #> [17977,]  368  387  392 #> [17978,]  368  387  390 #> [17979,]  368  387  392 #> [17980,]  367  387  390 #> [17981,]  368  387  390 #> [17982,]  367  387  392 #> [17983,]  368  387  391 #> [17984,]  367  387  392 #> [17985,]  367  387  392 #> [17986,]  367  387  390 #> [17987,]  368  387  392 #> [17988,]  367  387  390 #> [17989,]  367  387  391 #> [17990,]  368  387  390 #> [17991,]  368  387  391 #> [17992,]  368  387  390 #> [17993,]  366  386  392 #> [17994,]  367  387  392 #> [17995,]  368  387  390 #> [17996,]  368  387  390 #> [17997,]  368  387  390 #> [17998,]  366  386  390 #> [17999,]  367  387  390 #> [18000,]  368  387  390 #> [18001,]  370  389  394 #> [18002,]  371  390  394 #> [18003,]  369  388  393 #> [18004,]  371  390  394 #> [18005,]  371  390  394 #> [18006,]  369  388  393 #> [18007,]  369  388  393 #> [18008,]  369  388  393 #> [18009,]  371  390  394 #> [18010,]  371  390  394 #> [18011,]  370  389  394 #> [18012,]  371  390  394 #> [18013,]  371  390  394 #> [18014,]  371  390  394 #> [18015,]  371  390  394 #> [18016,]  370  389  394 #> [18017,]  371  390  394 #> [18018,]  371  390  394 #> [18019,]  370  389  394 #> [18020,]  369  388  393 #> [18021,]  369  388  393 #> [18022,]  371  390  394 #> [18023,]  369  388  393 #> [18024,]  371  390  394 #> [18025,]  369  388  393 #> [18026,]  371  390  394 #> [18027,]  371  390  394 #> [18028,]  370  389  394 #> [18029,]  369  388  393 #> [18030,]  371  390  394 #> [18031,]  371  390  394 #> [18032,]  371  390  394 #> [18033,]  371  390  394 #> [18034,]  369  388  393 #> [18035,]  369  388  393 #> [18036,]  369  388  393 #> [18037,]  369  388  393 #> [18038,]  370  389  394 #> [18039,]  371  390  394 #> [18040,]  371  390  394 #> [18041,]  369  388  393 #> [18042,]  369  388  393 #> [18043,]  371  390  394 #> [18044,]  369  388  393 #> [18045,]  369  388  393 #> [18046,]  371  390  394 #> [18047,]  371  390  394 #> [18048,]  371  390  394 #> [18049,]  370  389  394 #> [18050,]  369  388  393 #> [18051,]  371  390  394 #> [18052,]  370  389  394 #> [18053,]  369  388  393 #> [18054,]  369  388  393 #> [18055,]  369  388  393 #> [18056,]  369  388  393 #> [18057,]  369  388  393 #> [18058,]  371  390  394 #> [18059,]  371  390  394 #> [18060,]  369  388  393 #> [18061,]  371  390  394 #> [18062,]  371  390  394 #> [18063,]  371  390  394 #> [18064,]  369  388  393 #> [18065,]  369  388  393 #> [18066,]  371  390  394 #> [18067,]  369  388  393 #> [18068,]  370  389  394 #> [18069,]  371  390  394 #> [18070,]  371  390  394 #> [18071,]  371  390  394 #> [18072,]  370  389  394 #> [18073,]  369  388  393 #> [18074,]  369  388  393 #> [18075,]  371  390  394 #> [18076,]  369  388  393 #> [18077,]  370  389  394 #> [18078,]  371  390  394 #> [18079,]  371  390  394 #> [18080,]  369  388  393 #> [18081,]  369  388  393 #> [18082,]  369  388  393 #> [18083,]  371  390  394 #> [18084,]  369  388  393 #> [18085,]  369  388  393 #> [18086,]  369  388  393 #> [18087,]  371  390  394 #> [18088,]  369  388  393 #> [18089,]  369  388  393 #> [18090,]  371  390  394 #> [18091,]  371  390  394 #> [18092,]  371  390  394 #> [18093,]  371  390  394 #> [18094,]  369  388  393 #> [18095,]  371  390  394 #> [18096,]  370  389  394 #> [18097,]  369  388  393 #> [18098,]  369  388  393 #> [18099,]  369  388  393 #> [18100,]  370  389  394 #> [18101,]  373  392  395 #> [18102,]  373  392  395 #> [18103,]  373  392  395 #> [18104,]  372  391  395 #> [18105,]  373  392  395 #> [18106,]  373  392  395 #> [18107,]  373  392  395 #> [18108,]  372  391  395 #> [18109,]  372  391  395 #> [18110,]  372  391  395 #> [18111,]  373  392  395 #> [18112,]  373  392  395 #> [18113,]  373  392  395 #> [18114,]  373  392  395 #> [18115,]  373  392  395 #> [18116,]  373  392  395 #> [18117,]  373  392  395 #> [18118,]  373  392  396 #> [18119,]  373  392  395 #> [18120,]  373  392  395 #> [18121,]  373  392  395 #> [18122,]  373  392  395 #> [18123,]  373  392  395 #> [18124,]  373  392  395 #> [18125,]  373  392  395 #> [18126,]  373  392  395 #> [18127,]  373  392  395 #> [18128,]  373  392  395 #> [18129,]  373  392  395 #> [18130,]  373  392  395 #> [18131,]  373  392  395 #> [18132,]  373  392  395 #> [18133,]  373  392  395 #> [18134,]  373  392  395 #> [18135,]  373  392  395 #> [18136,]  373  392  395 #> [18137,]  373  392  395 #> [18138,]  373  392  395 #> [18139,]  373  392  395 #> [18140,]  373  392  395 #> [18141,]  373  392  395 #> [18142,]  373  392  396 #> [18143,]  372  391  395 #> [18144,]  373  392  395 #> [18145,]  373  392  395 #> [18146,]  373  392  395 #> [18147,]  373  392  395 #> [18148,]  373  392  395 #> [18149,]  373  392  395 #> [18150,]  373  392  395 #> [18151,]  372  391  396 #> [18152,]  373  392  395 #> [18153,]  373  392  396 #> [18154,]  373  392  395 #> [18155,]  373  392  395 #> [18156,]  373  392  395 #> [18157,]  373  392  395 #> [18158,]  373  392  395 #> [18159,]  373  392  395 #> [18160,]  372  391  395 #> [18161,]  373  392  395 #> [18162,]  373  392  395 #> [18163,]  373  392  395 #> [18164,]  373  392  395 #> [18165,]  373  392  395 #> [18166,]  373  392  395 #> [18167,]  372  391  395 #> [18168,]  373  392  395 #> [18169,]  373  392  395 #> [18170,]  373  392  395 #> [18171,]  373  392  395 #> [18172,]  373  392  395 #> [18173,]  373  392  395 #> [18174,]  373  392  395 #> [18175,]  373  392  395 #> [18176,]  373  392  395 #> [18177,]  373  392  395 #> [18178,]  373  392  395 #> [18179,]  373  392  395 #> [18180,]  373  392  395 #> [18181,]  373  392  395 #> [18182,]  373  392  395 #> [18183,]  373  392  395 #> [18184,]  373  392  396 #> [18185,]  372  391  395 #> [18186,]  373  392  395 #> [18187,]  373  392  395 #> [18188,]  373  392  395 #> [18189,]  373  392  395 #> [18190,]  373  392  395 #> [18191,]  372  391  395 #> [18192,]  373  392  395 #> [18193,]  373  392  395 #> [18194,]  373  392  396 #> [18195,]  372  391  395 #> [18196,]  373  392  395 #> [18197,]  373  392  395 #> [18198,]  373  392  395 #> [18199,]  373  392  395 #> [18200,]  373  392  395 #> [18201,]  374  393  397 #> [18202,]  375  394  398 #> [18203,]  374  393  397 #> [18204,]  374  393  397 #> [18205,]  375  394  398 #> [18206,]  374  393  397 #> [18207,]  375  394  398 #> [18208,]  374  393  397 #> [18209,]  375  394  398 #> [18210,]  375  394  398 #> [18211,]  374  393  397 #> [18212,]  375  394  398 #> [18213,]  375  394  398 #> [18214,]  374  393  397 #> [18215,]  374  393  397 #> [18216,]  374  393  397 #> [18217,]  375  394  398 #> [18218,]  375  394  398 #> [18219,]  374  393  397 #> [18220,]  375  394  398 #> [18221,]  375  394  398 #> [18222,]  375  394  398 #> [18223,]  375  394  398 #> [18224,]  375  394  398 #> [18225,]  375  394  398 #> [18226,]  374  393  397 #> [18227,]  375  394  398 #> [18228,]  374  393  397 #> [18229,]  375  394  398 #> [18230,]  375  394  398 #> [18231,]  375  394  398 #> [18232,]  375  394  398 #> [18233,]  375  394  398 #> [18234,]  374  393  397 #> [18235,]  374  393  397 #> [18236,]  375  394  398 #> [18237,]  374  393  397 #> [18238,]  374  393  397 #> [18239,]  375  394  398 #> [18240,]  375  394  398 #> [18241,]  375  394  398 #> [18242,]  374  393  397 #> [18243,]  375  394  398 #> [18244,]  375  394  398 #> [18245,]  374  393  397 #> [18246,]  374  393  397 #> [18247,]  375  394  398 #> [18248,]  375  394  398 #> [18249,]  374  393  397 #> [18250,]  375  394  398 #> [18251,]  375  394  398 #> [18252,]  374  393  397 #> [18253,]  375  394  398 #> [18254,]  375  394  398 #> [18255,]  374  393  397 #> [18256,]  374  393  397 #> [18257,]  374  393  397 #> [18258,]  375  394  398 #> [18259,]  374  393  397 #> [18260,]  375  394  398 #> [18261,]  375  394  398 #> [18262,]  374  393  397 #> [18263,]  375  394  398 #> [18264,]  374  393  397 #> [18265,]  374  393  397 #> [18266,]  375  394  398 #> [18267,]  375  394  398 #> [18268,]  374  393  397 #> [18269,]  374  393  397 #> [18270,]  375  394  398 #> [18271,]  375  394  398 #> [18272,]  374  393  397 #> [18273,]  374  393  397 #> [18274,]  375  394  398 #> [18275,]  375  394  398 #> [18276,]  375  394  398 #> [18277,]  374  393  397 #> [18278,]  375  394  398 #> [18279,]  374  393  397 #> [18280,]  375  394  398 #> [18281,]  375  394  398 #> [18282,]  374  393  397 #> [18283,]  375  394  398 #> [18284,]  375  394  398 #> [18285,]  374  393  397 #> [18286,]  375  394  398 #> [18287,]  375  394  398 #> [18288,]  375  394  398 #> [18289,]  374  393  397 #> [18290,]  375  394  398 #> [18291,]  374  393  397 #> [18292,]  375  394  398 #> [18293,]  375  394  398 #> [18294,]  374  393  397 #> [18295,]  375  394  398 #> [18296,]  374  393  397 #> [18297,]  374  393  397 #> [18298,]  374  393  397 #> [18299,]  375  394  398 #> [18300,]  374  393  397 #> [18301,]  378  396  400 #> [18302,]  378  396  400 #> [18303,]  377  396  400 #> [18304,]  376  395  399 #> [18305,]  378  396  400 #> [18306,]  378  396  400 #> [18307,]  376  395  399 #> [18308,]  378  396  400 #> [18309,]  376  395  399 #> [18310,]  376  395  399 #> [18311,]  378  396  400 #> [18312,]  377  396  400 #> [18313,]  376  395  399 #> [18314,]  376  395  399 #> [18315,]  378  396  400 #> [18316,]  376  395  399 #> [18317,]  378  396  400 #> [18318,]  378  396  400 #> [18319,]  378  396  400 #> [18320,]  376  395  399 #> [18321,]  378  396  400 #> [18322,]  376  395  399 #> [18323,]  378  396  400 #> [18324,]  376  395  399 #> [18325,]  376  395  399 #> [18326,]  378  396  400 #> [18327,]  378  396  400 #> [18328,]  376  395  399 #> [18329,]  378  396  400 #> [18330,]  378  396  400 #> [18331,]  377  396  400 #> [18332,]  378  396  400 #> [18333,]  378  396  400 #> [18334,]  378  396  400 #> [18335,]  378  396  400 #> [18336,]  376  395  399 #> [18337,]  378  396  400 #> [18338,]  378  396  400 #> [18339,]  376  395  399 #> [18340,]  378  396  400 #> [18341,]  378  396  400 #> [18342,]  378  396  400 #> [18343,]  378  396  400 #> [18344,]  378  396  400 #> [18345,]  378  396  400 #> [18346,]  378  396  400 #> [18347,]  378  396  400 #> [18348,]  378  396  400 #> [18349,]  378  396  400 #> [18350,]  376  395  399 #> [18351,]  378  396  400 #> [18352,]  376  395  399 #> [18353,]  378  396  400 #> [18354,]  376  395  399 #> [18355,]  376  395  399 #> [18356,]  378  396  400 #> [18357,]  376  395  399 #> [18358,]  376  395  399 #> [18359,]  376  395  399 #> [18360,]  377  396  400 #> [18361,]  378  396  400 #> [18362,]  378  396  400 #> [18363,]  378  396  400 #> [18364,]  378  396  400 #> [18365,]  378  396  400 #> [18366,]  378  396  400 #> [18367,]  376  395  399 #> [18368,]  378  396  400 #> [18369,]  378  396  400 #> [18370,]  378  396  400 #> [18371,]  378  396  400 #> [18372,]  378  396  400 #> [18373,]  376  395  399 #> [18374,]  378  396  400 #> [18375,]  378  396  400 #> [18376,]  376  395  399 #> [18377,]  378  396  400 #> [18378,]  378  396  400 #> [18379,]  378  396  400 #> [18380,]  378  396  400 #> [18381,]  378  396  400 #> [18382,]  378  396  400 #> [18383,]  378  396  400 #> [18384,]  378  396  400 #> [18385,]  378  396  400 #> [18386,]  376  395  399 #> [18387,]  378  396  400 #> [18388,]  378  396  400 #> [18389,]  378  396  400 #> [18390,]  376  395  399 #> [18391,]  376  395  399 #> [18392,]  378  396  400 #> [18393,]  378  396  400 #> [18394,]  378  396  400 #> [18395,]  378  396  400 #> [18396,]  377  396  400 #> [18397,]  377  396  400 #> [18398,]  378  396  400 #> [18399,]  378  396  400 #> [18400,]  378  396  400 #> [18401,]  380  398  402 #> [18402,]  380  398  402 #> [18403,]  379  397  402 #> [18404,]  380  398  401 #> [18405,]  380  398  402 #> [18406,]  380  398  402 #> [18407,]  379  397  402 #> [18408,]  380  398  401 #> [18409,]  380  398  401 #> [18410,]  380  398  402 #> [18411,]  380  398  401 #> [18412,]  379  397  402 #> [18413,]  380  398  401 #> [18414,]  380  398  402 #> [18415,]  380  398  402 #> [18416,]  380  398  402 #> [18417,]  380  398  401 #> [18418,]  380  398  402 #> [18419,]  380  398  402 #> [18420,]  380  398  402 #> [18421,]  380  398  402 #> [18422,]  380  398  401 #> [18423,]  380  398  402 #> [18424,]  380  398  402 #> [18425,]  380  398  402 #> [18426,]  380  398  402 #> [18427,]  380  398  401 #> [18428,]  380  398  402 #> [18429,]  380  398  402 #> [18430,]  380  398  402 #> [18431,]  379  397  402 #> [18432,]  380  398  402 #> [18433,]  380  398  402 #> [18434,]  380  398  402 #> [18435,]  380  398  401 #> [18436,]  380  398  402 #> [18437,]  380  398  402 #> [18438,]  380  398  402 #> [18439,]  380  398  402 #> [18440,]  380  398  402 #> [18441,]  380  398  402 #> [18442,]  380  398  402 #> [18443,]  380  398  401 #> [18444,]  380  398  401 #> [18445,]  380  398  402 #> [18446,]  380  398  402 #> [18447,]  380  398  402 #> [18448,]  380  398  402 #> [18449,]  380  398  401 #> [18450,]  380  398  402 #> [18451,]  380  398  402 #> [18452,]  379  397  401 #> [18453,]  380  398  402 #> [18454,]  380  398  402 #> [18455,]  380  398  401 #> [18456,]  380  398  402 #> [18457,]  380  398  402 #> [18458,]  380  398  401 #> [18459,]  379  397  402 #> [18460,]  379  397  402 #> [18461,]  380  398  402 #> [18462,]  380  398  402 #> [18463,]  380  398  402 #> [18464,]  380  398  402 #> [18465,]  380  398  402 #> [18466,]  380  398  401 #> [18467,]  380  398  402 #> [18468,]  380  398  402 #> [18469,]  380  398  401 #> [18470,]  380  398  402 #> [18471,]  380  398  402 #> [18472,]  380  398  402 #> [18473,]  380  398  402 #> [18474,]  380  398  402 #> [18475,]  380  398  402 #> [18476,]  380  398  402 #> [18477,]  380  398  402 #> [18478,]  380  398  402 #> [18479,]  380  398  401 #> [18480,]  380  398  401 #> [18481,]  380  398  401 #> [18482,]  380  398  401 #> [18483,]  380  398  401 #> [18484,]  380  398  402 #> [18485,]  380  398  402 #> [18486,]  380  398  402 #> [18487,]  380  398  401 #> [18488,]  380  398  401 #> [18489,]  380  398  401 #> [18490,]  380  398  401 #> [18491,]  380  398  402 #> [18492,]  380  398  401 #> [18493,]  380  398  402 #> [18494,]  380  398  402 #> [18495,]  380  398  401 #> [18496,]  380  398  402 #> [18497,]  379  397  402 #> [18498,]  380  398  402 #> [18499,]  380  398  401 #> [18500,]  380  398  402 #> [18501,]  382  400  403 #> [18502,]  381  399  404 #> [18503,]  381  399  404 #> [18504,]  381  399  404 #> [18505,]  382  400  403 #> [18506,]  381  399  404 #> [18507,]  381  399  404 #> [18508,]  381  399  404 #> [18509,]  381  399  404 #> [18510,]  381  399  404 #> [18511,]  382  400  403 #> [18512,]  381  399  404 #> [18513,]  381  399  404 #> [18514,]  382  400  403 #> [18515,]  382  400  403 #> [18516,]  381  399  404 #> [18517,]  382  400  403 #> [18518,]  382  400  403 #> [18519,]  381  399  404 #> [18520,]  381  399  404 #> [18521,]  381  399  404 #> [18522,]  382  400  403 #> [18523,]  381  399  404 #> [18524,]  381  399  404 #> [18525,]  381  399  404 #> [18526,]  382  400  403 #> [18527,]  382  400  403 #> [18528,]  381  399  404 #> [18529,]  381  399  404 #> [18530,]  381  399  404 #> [18531,]  382  400  403 #> [18532,]  382  400  403 #> [18533,]  381  399  404 #> [18534,]  381  399  404 #> [18535,]  381  399  404 #> [18536,]  381  399  404 #> [18537,]  381  399  404 #> [18538,]  381  399  404 #> [18539,]  381  399  404 #> [18540,]  381  399  404 #> [18541,]  381  399  404 #> [18542,]  381  399  404 #> [18543,]  382  400  403 #> [18544,]  381  399  404 #> [18545,]  381  399  404 #> [18546,]  381  399  404 #> [18547,]  382  400  403 #> [18548,]  381  399  404 #> [18549,]  381  399  404 #> [18550,]  381  399  404 #> [18551,]  381  399  404 #> [18552,]  381  399  404 #> [18553,]  381  399  404 #> [18554,]  381  399  404 #> [18555,]  381  399  404 #> [18556,]  381  399  404 #> [18557,]  381  399  404 #> [18558,]  382  400  403 #> [18559,]  382  400  403 #> [18560,]  381  399  404 #> [18561,]  382  400  403 #> [18562,]  381  399  404 #> [18563,]  381  399  404 #> [18564,]  381  399  404 #> [18565,]  381  399  404 #> [18566,]  382  400  403 #> [18567,]  381  399  404 #> [18568,]  381  399  404 #> [18569,]  381  399  404 #> [18570,]  382  400  403 #> [18571,]  382  400  403 #> [18572,]  381  399  404 #> [18573,]  381  399  404 #> [18574,]  381  399  404 #> [18575,]  382  400  403 #> [18576,]  381  399  404 #> [18577,]  382  400  403 #> [18578,]  381  399  404 #> [18579,]  382  400  403 #> [18580,]  381  399  404 #> [18581,]  381  399  404 #> [18582,]  381  399  404 #> [18583,]  381  399  404 #> [18584,]  381  399  404 #> [18585,]  381  399  404 #> [18586,]  381  399  404 #> [18587,]  382  400  403 #> [18588,]  381  399  404 #> [18589,]  381  399  404 #> [18590,]  381  399  404 #> [18591,]  382  400  403 #> [18592,]  381  399  404 #> [18593,]  381  399  404 #> [18594,]  381  399  404 #> [18595,]  382  400  403 #> [18596,]  381  399  404 #> [18597,]  381  399  404 #> [18598,]  381  399  404 #> [18599,]  381  399  404 #> [18600,]  382  400  403 #> [18601,]  384  402  406 #> [18602,]  383  401  405 #> [18603,]  383  401  405 #> [18604,]  383  401  405 #> [18605,]  384  402  406 #> [18606,]  383  401  405 #> [18607,]  383  401  405 #> [18608,]  383  401  405 #> [18609,]  383  401  405 #> [18610,]  384  402  406 #> [18611,]  384  402  406 #> [18612,]  384  402  406 #> [18613,]  383  401  405 #> [18614,]  384  402  406 #> [18615,]  384  402  406 #> [18616,]  383  401  405 #> [18617,]  384  402  406 #> [18618,]  384  402  406 #> [18619,]  384  402  406 #> [18620,]  383  401  405 #> [18621,]  383  401  405 #> [18622,]  384  402  406 #> [18623,]  383  401  405 #> [18624,]  383  401  405 #> [18625,]  383  401  405 #> [18626,]  384  402  406 #> [18627,]  384  402  406 #> [18628,]  383  401  405 #> [18629,]  383  401  405 #> [18630,]  383  401  405 #> [18631,]  384  402  406 #> [18632,]  384  402  406 #> [18633,]  383  401  405 #> [18634,]  383  401  405 #> [18635,]  383  401  405 #> [18636,]  383  401  405 #> [18637,]  383  401  405 #> [18638,]  384  402  406 #> [18639,]  384  402  406 #> [18640,]  383  401  405 #> [18641,]  383  401  405 #> [18642,]  383  401  405 #> [18643,]  384  402  406 #> [18644,]  383  401  405 #> [18645,]  383  401  405 #> [18646,]  383  401  405 #> [18647,]  384  402  406 #> [18648,]  383  401  405 #> [18649,]  383  401  405 #> [18650,]  383  401  405 #> [18651,]  384  402  406 #> [18652,]  384  402  406 #> [18653,]  383  401  405 #> [18654,]  383  401  405 #> [18655,]  383  401  405 #> [18656,]  383  401  405 #> [18657,]  383  401  405 #> [18658,]  384  402  406 #> [18659,]  384  402  406 #> [18660,]  383  401  405 #> [18661,]  384  402  406 #> [18662,]  383  401  405 #> [18663,]  383  401  405 #> [18664,]  383  401  405 #> [18665,]  383  401  405 #> [18666,]  384  402  406 #> [18667,]  383  401  405 #> [18668,]  384  402  406 #> [18669,]  383  401  405 #> [18670,]  384  402  406 #> [18671,]  384  402  406 #> [18672,]  383  401  405 #> [18673,]  383  401  405 #> [18674,]  383  401  405 #> [18675,]  384  402  406 #> [18676,]  383  401  405 #> [18677,]  384  402  406 #> [18678,]  383  401  405 #> [18679,]  384  402  406 #> [18680,]  383  401  405 #> [18681,]  383  401  405 #> [18682,]  383  401  405 #> [18683,]  384  402  406 #> [18684,]  383  401  405 #> [18685,]  383  401  405 #> [18686,]  383  401  405 #> [18687,]  384  402  406 #> [18688,]  383  401  405 #> [18689,]  383  401  405 #> [18690,]  384  402  406 #> [18691,]  384  402  406 #> [18692,]  384  402  406 #> [18693,]  383  401  405 #> [18694,]  383  401  405 #> [18695,]  384  402  406 #> [18696,]  384  402  406 #> [18697,]  383  401  405 #> [18698,]  383  401  405 #> [18699,]  383  401  405 #> [18700,]  384  402  406 #> [18701,]  385  404  408 #> [18702,]  385  404  408 #> [18703,]  385  404  408 #> [18704,]  385  403  407 #> [18705,]  385  404  408 #> [18706,]  385  404  408 #> [18707,]  385  404  408 #> [18708,]  385  403  407 #> [18709,]  385  403  407 #> [18710,]  385  403  407 #> [18711,]  385  404  408 #> [18712,]  385  404  408 #> [18713,]  385  404  408 #> [18714,]  385  404  408 #> [18715,]  385  404  408 #> [18716,]  385  404  408 #> [18717,]  385  404  408 #> [18718,]  385  404  408 #> [18719,]  385  404  408 #> [18720,]  385  403  407 #> [18721,]  385  404  408 #> [18722,]  385  404  408 #> [18723,]  385  404  408 #> [18724,]  385  404  408 #> [18725,]  385  404  408 #> [18726,]  385  404  408 #> [18727,]  385  404  408 #> [18728,]  385  404  408 #> [18729,]  385  404  408 #> [18730,]  385  403  407 #> [18731,]  385  404  408 #> [18732,]  385  404  408 #> [18733,]  385  404  408 #> [18734,]  385  404  408 #> [18735,]  385  404  408 #> [18736,]  385  404  408 #> [18737,]  385  404  408 #> [18738,]  385  404  408 #> [18739,]  385  404  408 #> [18740,]  385  404  408 #> [18741,]  385  404  408 #> [18742,]  385  404  408 #> [18743,]  385  403  407 #> [18744,]  385  404  408 #> [18745,]  385  404  408 #> [18746,]  385  404  408 #> [18747,]  385  404  408 #> [18748,]  385  404  408 #> [18749,]  385  404  408 #> [18750,]  385  404  408 #> [18751,]  385  403  407 #> [18752,]  385  404  408 #> [18753,]  385  404  408 #> [18754,]  385  404  408 #> [18755,]  385  404  408 #> [18756,]  385  403  407 #> [18757,]  385  404  408 #> [18758,]  385  404  408 #> [18759,]  385  404  408 #> [18760,]  385  403  407 #> [18761,]  385  404  408 #> [18762,]  385  404  408 #> [18763,]  385  404  408 #> [18764,]  385  403  407 #> [18765,]  385  404  408 #> [18766,]  385  404  408 #> [18767,]  385  403  407 #> [18768,]  385  404  408 #> [18769,]  385  404  408 #> [18770,]  385  404  408 #> [18771,]  385  404  408 #> [18772,]  385  404  408 #> [18773,]  385  404  408 #> [18774,]  385  404  408 #> [18775,]  385  404  408 #> [18776,]  385  404  408 #> [18777,]  385  404  408 #> [18778,]  385  403  407 #> [18779,]  385  404  408 #> [18780,]  385  404  408 #> [18781,]  385  404  408 #> [18782,]  385  404  408 #> [18783,]  385  404  408 #> [18784,]  385  404  408 #> [18785,]  385  403  407 #> [18786,]  385  404  408 #> [18787,]  385  404  408 #> [18788,]  385  404  408 #> [18789,]  385  403  407 #> [18790,]  385  404  408 #> [18791,]  385  403  407 #> [18792,]  385  404  408 #> [18793,]  385  404  408 #> [18794,]  385  404  408 #> [18795,]  385  403  407 #> [18796,]  385  404  408 #> [18797,]  385  404  408 #> [18798,]  385  404  408 #> [18799,]  385  404  408 #> [18800,]  385  404  408 #> [18801,]  386  405  409 #> [18802,]  386  405  409 #> [18803,]  387  406  410 #> [18804,]  386  405  409 #> [18805,]  386  405  409 #> [18806,]  386  405  409 #> [18807,]  388  407  410 #> [18808,]  386  405  409 #> [18809,]  386  405  409 #> [18810,]  386  405  409 #> [18811,]  386  405  409 #> [18812,]  386  405  409 #> [18813,]  386  405  409 #> [18814,]  386  405  409 #> [18815,]  386  405  409 #> [18816,]  386  405  409 #> [18817,]  386  405  409 #> [18818,]  386  405  409 #> [18819,]  386  405  409 #> [18820,]  388  407  410 #> [18821,]  386  405  409 #> [18822,]  386  405  409 #> [18823,]  386  405  409 #> [18824,]  386  405  409 #> [18825,]  387  406  410 #> [18826,]  386  405  409 #> [18827,]  386  405  409 #> [18828,]  386  405  409 #> [18829,]  386  405  409 #> [18830,]  386  405  409 #> [18831,]  386  405  409 #> [18832,]  386  405  409 #> [18833,]  386  405  409 #> [18834,]  386  405  409 #> [18835,]  386  405  409 #> [18836,]  386  405  409 #> [18837,]  386  405  409 #> [18838,]  386  405  409 #> [18839,]  387  406  410 #> [18840,]  386  405  409 #> [18841,]  386  405  409 #> [18842,]  386  405  409 #> [18843,]  386  405  409 #> [18844,]  388  407  410 #> [18845,]  386  405  409 #> [18846,]  386  405  409 #> [18847,]  386  405  409 #> [18848,]  386  405  409 #> [18849,]  387  406  410 #> [18850,]  388  407  410 #> [18851,]  386  405  409 #> [18852,]  386  405  409 #> [18853,]  388  407  410 #> [18854,]  386  405  409 #> [18855,]  387  406  410 #> [18856,]  387  406  410 #> [18857,]  386  405  409 #> [18858,]  386  405  409 #> [18859,]  387  406  410 #> [18860,]  386  405  409 #> [18861,]  386  405  409 #> [18862,]  386  405  409 #> [18863,]  386  405  409 #> [18864,]  386  405  409 #> [18865,]  387  406  410 #> [18866,]  387  406  410 #> [18867,]  386  405  409 #> [18868,]  386  405  409 #> [18869,]  386  405  409 #> [18870,]  386  405  409 #> [18871,]  386  405  409 #> [18872,]  386  405  409 #> [18873,]  386  405  409 #> [18874,]  386  405  409 #> [18875,]  386  405  409 #> [18876,]  386  405  409 #> [18877,]  386  405  409 #> [18878,]  386  405  409 #> [18879,]  386  405  409 #> [18880,]  386  405  409 #> [18881,]  386  405  409 #> [18882,]  386  405  409 #> [18883,]  386  405  409 #> [18884,]  386  405  409 #> [18885,]  386  405  409 #> [18886,]  386  405  409 #> [18887,]  386  405  409 #> [18888,]  386  405  409 #> [18889,]  386  405  409 #> [18890,]  387  406  410 #> [18891,]  386  405  409 #> [18892,]  386  405  409 #> [18893,]  386  405  409 #> [18894,]  386  405  409 #> [18895,]  386  405  409 #> [18896,]  386  405  409 #> [18897,]  386  405  409 #> [18898,]  387  406  410 #> [18899,]  386  405  409 #> [18900,]  387  406  410 #> [18901,]  390  409  411 #> [18902,]  390  409  411 #> [18903,]  389  408  412 #> [18904,]  389  408  412 #> [18905,]  389  408  412 #> [18906,]  389  408  412 #> [18907,]  390  409  411 #> [18908,]  390  409  411 #> [18909,]  389  408  412 #> [18910,]  389  408  412 #> [18911,]  389  408  412 #> [18912,]  390  409  411 #> [18913,]  390  409  411 #> [18914,]  389  408  412 #> [18915,]  390  409  411 #> [18916,]  390  409  411 #> [18917,]  389  408  412 #> [18918,]  390  409  411 #> [18919,]  390  409  411 #> [18920,]  390  409  411 #> [18921,]  389  408  412 #> [18922,]  390  409  411 #> [18923,]  390  409  411 #> [18924,]  389  408  412 #> [18925,]  389  408  412 #> [18926,]  390  409  411 #> [18927,]  390  409  411 #> [18928,]  389  408  412 #> [18929,]  390  409  411 #> [18930,]  390  409  411 #> [18931,]  389  408  412 #> [18932,]  389  408  412 #> [18933,]  390  409  411 #> [18934,]  389  408  412 #> [18935,]  389  408  412 #> [18936,]  390  409  411 #> [18937,]  390  409  411 #> [18938,]  390  409  411 #> [18939,]  389  408  412 #> [18940,]  389  408  412 #> [18941,]  390  409  411 #> [18942,]  389  408  412 #> [18943,]  390  409  411 #> [18944,]  390  409  411 #> [18945,]  390  409  411 #> [18946,]  390  409  411 #> [18947,]  389  408  412 #> [18948,]  389  408  412 #> [18949,]  390  409  411 #> [18950,]  390  409  411 #> [18951,]  390  409  411 #> [18952,]  389  408  412 #> [18953,]  390  409  411 #> [18954,]  389  408  412 #> [18955,]  390  409  411 #> [18956,]  390  409  411 #> [18957,]  389  408  412 #> [18958,]  390  409  411 #> [18959,]  390  409  411 #> [18960,]  390  409  411 #> [18961,]  390  409  411 #> [18962,]  389  408  412 #> [18963,]  390  409  411 #> [18964,]  390  409  411 #> [18965,]  389  408  412 #> [18966,]  390  409  411 #> [18967,]  389  408  412 #> [18968,]  390  409  411 #> [18969,]  390  409  411 #> [18970,]  389  408  412 #> [18971,]  390  409  411 #> [18972,]  389  408  412 #> [18973,]  389  408  412 #> [18974,]  389  408  412 #> [18975,]  390  409  411 #> [18976,]  389  408  412 #> [18977,]  390  409  411 #> [18978,]  390  409  411 #> [18979,]  389  408  412 #> [18980,]  390  409  411 #> [18981,]  390  409  411 #> [18982,]  389  408  412 #> [18983,]  390  409  411 #> [18984,]  390  409  411 #> [18985,]  390  409  411 #> [18986,]  389  408  412 #> [18987,]  390  409  411 #> [18988,]  389  408  412 #> [18989,]  389  408  412 #> [18990,]  390  409  411 #> [18991,]  389  408  412 #> [18992,]  389  408  412 #> [18993,]  390  409  411 #> [18994,]  389  408  412 #> [18995,]  390  409  411 #> [18996,]  390  409  411 #> [18997,]  390  409  411 #> [18998,]  389  408  412 #> [18999,]  389  408  412 #> [19000,]  390  409  411 #> [19001,]  392  411  414 #> [19002,]  392  411  414 #> [19003,]  391  410  413 #> [19004,]  392  411  414 #> [19005,]  392  411  414 #> [19006,]  391  410  413 #> [19007,]  391  410  413 #> [19008,]  392  411  414 #> [19009,]  392  411  414 #> [19010,]  392  411  414 #> [19011,]  392  411  414 #> [19012,]  392  411  414 #> [19013,]  392  411  414 #> [19014,]  392  411  414 #> [19015,]  392  411  414 #> [19016,]  392  411  414 #> [19017,]  392  411  414 #> [19018,]  392  411  414 #> [19019,]  392  411  414 #> [19020,]  391  410  413 #> [19021,]  391  410  413 #> [19022,]  392  411  414 #> [19023,]  391  410  413 #> [19024,]  392  411  414 #> [19025,]  391  410  413 #> [19026,]  392  411  414 #> [19027,]  392  411  414 #> [19028,]  392  411  414 #> [19029,]  392  411  414 #> [19030,]  392  411  414 #> [19031,]  392  411  414 #> [19032,]  392  411  414 #> [19033,]  392  411  414 #> [19034,]  391  410  413 #> [19035,]  391  410  413 #> [19036,]  392  411  414 #> [19037,]  391  410  413 #> [19038,]  392  411  414 #> [19039,]  392  411  414 #> [19040,]  392  411  414 #> [19041,]  392  411  414 #> [19042,]  391  410  413 #> [19043,]  392  411  414 #> [19044,]  391  410  413 #> [19045,]  392  411  414 #> [19046,]  392  411  414 #> [19047,]  392  411  414 #> [19048,]  392  411  414 #> [19049,]  392  411  414 #> [19050,]  391  410  413 #> [19051,]  392  411  414 #> [19052,]  392  411  414 #> [19053,]  391  410  413 #> [19054,]  391  410  413 #> [19055,]  391  410  413 #> [19056,]  391  410  413 #> [19057,]  391  410  413 #> [19058,]  392  411  414 #> [19059,]  392  411  414 #> [19060,]  392  411  414 #> [19061,]  392  411  414 #> [19062,]  392  411  414 #> [19063,]  392  411  414 #> [19064,]  391  410  413 #> [19065,]  391  410  413 #> [19066,]  392  411  414 #> [19067,]  392  411  414 #> [19068,]  392  411  414 #> [19069,]  392  411  414 #> [19070,]  392  411  414 #> [19071,]  392  411  414 #> [19072,]  392  411  414 #> [19073,]  391  410  413 #> [19074,]  391  410  413 #> [19075,]  392  411  414 #> [19076,]  392  411  414 #> [19077,]  392  411  414 #> [19078,]  392  411  414 #> [19079,]  392  411  414 #> [19080,]  391  410  413 #> [19081,]  392  411  414 #> [19082,]  391  410  413 #> [19083,]  392  411  414 #> [19084,]  391  410  413 #> [19085,]  391  410  413 #> [19086,]  391  410  413 #> [19087,]  392  411  414 #> [19088,]  391  410  413 #> [19089,]  391  410  413 #> [19090,]  392  411  414 #> [19091,]  392  411  414 #> [19092,]  392  411  414 #> [19093,]  392  411  414 #> [19094,]  391  410  413 #> [19095,]  392  411  414 #> [19096,]  392  411  414 #> [19097,]  391  410  413 #> [19098,]  391  410  413 #> [19099,]  391  410  413 #> [19100,]  392  411  414 #> [19101,]  393  412  415 #> [19102,]  394  413  416 #> [19103,]  394  413  416 #> [19104,]  393  412  415 #> [19105,]  393  412  415 #> [19106,]  394  413  416 #> [19107,]  393  412  415 #> [19108,]  393  412  415 #> [19109,]  393  412  415 #> [19110,]  393  412  415 #> [19111,]  393  412  415 #> [19112,]  394  413  416 #> [19113,]  393  412  415 #> [19114,]  393  412  415 #> [19115,]  393  412  415 #> [19116,]  393  412  415 #> [19117,]  393  412  415 #> [19118,]  394  413  416 #> [19119,]  394  413  416 #> [19120,]  394  413  416 #> [19121,]  393  412  415 #> [19122,]  393  412  415 #> [19123,]  393  412  415 #> [19124,]  393  412  415 #> [19125,]  394  413  416 #> [19126,]  393  412  415 #> [19127,]  393  412  415 #> [19128,]  394  413  416 #> [19129,]  393  412  415 #> [19130,]  393  412  415 #> [19131,]  393  412  415 #> [19132,]  393  412  415 #> [19133,]  394  413  416 #> [19134,]  394  413  416 #> [19135,]  393  412  415 #> [19136,]  393  412  415 #> [19137,]  393  412  415 #> [19138,]  393  412  415 #> [19139,]  393  412  415 #> [19140,]  393  412  415 #> [19141,]  393  412  415 #> [19142,]  393  412  415 #> [19143,]  393  412  415 #> [19144,]  393  412  415 #> [19145,]  393  412  415 #> [19146,]  393  412  415 #> [19147,]  393  412  415 #> [19148,]  393  412  415 #> [19149,]  393  412  415 #> [19150,]  393  412  415 #> [19151,]  393  412  415 #> [19152,]  393  412  415 #> [19153,]  393  412  415 #> [19154,]  393  412  415 #> [19155,]  393  412  415 #> [19156,]  393  412  415 #> [19157,]  393  412  415 #> [19158,]  393  412  415 #> [19159,]  393  412  415 #> [19160,]  394  413  416 #> [19161,]  393  412  415 #> [19162,]  393  412  415 #> [19163,]  393  412  415 #> [19164,]  393  412  415 #> [19165,]  394  413  416 #> [19166,]  393  412  415 #> [19167,]  393  412  415 #> [19168,]  393  412  415 #> [19169,]  393  412  415 #> [19170,]  394  413  416 #> [19171,]  394  413  416 #> [19172,]  393  412  415 #> [19173,]  394  413  416 #> [19174,]  393  412  415 #> [19175,]  393  412  415 #> [19176,]  393  412  415 #> [19177,]  393  412  415 #> [19178,]  393  412  415 #> [19179,]  393  412  415 #> [19180,]  393  412  415 #> [19181,]  393  412  415 #> [19182,]  393  412  415 #> [19183,]  393  412  415 #> [19184,]  394  413  416 #> [19185,]  393  412  415 #> [19186,]  393  412  415 #> [19187,]  393  412  415 #> [19188,]  393  412  415 #> [19189,]  393  412  415 #> [19190,]  393  412  415 #> [19191,]  393  412  415 #> [19192,]  393  412  415 #> [19193,]  394  413  416 #> [19194,]  393  412  415 #> [19195,]  393  412  415 #> [19196,]  393  412  415 #> [19197,]  394  413  416 #> [19198,]  394  413  416 #> [19199,]  393  412  415 #> [19200,]  393  412  415 #> [19201,]  396  415  418 #> [19202,]  396  415  418 #> [19203,]  395  415  418 #> [19204,]  395  415  418 #> [19205,]  395  415  418 #> [19206,]  396  415  418 #> [19207,]  395  415  418 #> [19208,]  395  415  418 #> [19209,]  395  415  418 #> [19210,]  395  414  417 #> [19211,]  396  414  417 #> [19212,]  395  415  418 #> [19213,]  396  415  418 #> [19214,]  396  414  417 #> [19215,]  396  415  418 #> [19216,]  396  415  418 #> [19217,]  396  415  418 #> [19218,]  395  415  418 #> [19219,]  396  415  418 #> [19220,]  395  415  418 #> [19221,]  396  415  418 #> [19222,]  396  415  418 #> [19223,]  395  415  418 #> [19224,]  395  415  418 #> [19225,]  395  415  418 #> [19226,]  396  415  418 #> [19227,]  396  415  418 #> [19228,]  395  415  418 #> [19229,]  396  415  418 #> [19230,]  395  415  418 #> [19231,]  395  415  418 #> [19232,]  395  415  418 #> [19233,]  396  415  418 #> [19234,]  395  415  418 #> [19235,]  396  415  418 #> [19236,]  395  415  418 #> [19237,]  396  415  418 #> [19238,]  395  415  418 #> [19239,]  395  415  418 #> [19240,]  395  415  418 #> [19241,]  396  415  418 #> [19242,]  395  415  418 #> [19243,]  395  415  418 #> [19244,]  396  415  418 #> [19245,]  395  415  418 #> [19246,]  395  415  418 #> [19247,]  396  415  418 #> [19248,]  395  414  417 #> [19249,]  395  415  418 #> [19250,]  396  415  418 #> [19251,]  395  415  418 #> [19252,]  396  415  418 #> [19253,]  395  415  418 #> [19254,]  395  415  418 #> [19255,]  396  415  418 #> [19256,]  395  415  418 #> [19257,]  395  415  418 #> [19258,]  396  415  418 #> [19259,]  396  415  418 #> [19260,]  395  415  418 #> [19261,]  396  415  418 #> [19262,]  395  415  418 #> [19263,]  395  415  418 #> [19264,]  395  415  418 #> [19265,]  395  415  418 #> [19266,]  395  415  418 #> [19267,]  395  415  418 #> [19268,]  396  415  418 #> [19269,]  396  415  418 #> [19270,]  396  414  417 #> [19271,]  396  415  418 #> [19272,]  395  415  418 #> [19273,]  396  415  418 #> [19274,]  396  415  418 #> [19275,]  396  415  418 #> [19276,]  396  415  418 #> [19277,]  396  415  418 #> [19278,]  395  415  418 #> [19279,]  396  415  418 #> [19280,]  395  415  418 #> [19281,]  396  415  418 #> [19282,]  395  415  418 #> [19283,]  396  415  418 #> [19284,]  396  415  418 #> [19285,]  395  415  418 #> [19286,]  396  415  418 #> [19287,]  396  415  418 #> [19288,]  395  415  418 #> [19289,]  395  415  418 #> [19290,]  396  415  418 #> [19291,]  395  415  418 #> [19292,]  396  415  418 #> [19293,]  396  415  418 #> [19294,]  396  415  418 #> [19295,]  395  415  418 #> [19296,]  396  415  418 #> [19297,]  396  415  418 #> [19298,]  396  415  418 #> [19299,]  396  415  418 #> [19300,]  396  415  418 #> [19301,]  397  416  420 #> [19302,]  397  416  420 #> [19303,]  397  416  420 #> [19304,]  398  417  419 #> [19305,]  397  416  420 #> [19306,]  398  417  419 #> [19307,]  397  416  420 #> [19308,]  397  416  420 #> [19309,]  398  417  419 #> [19310,]  398  417  419 #> [19311,]  398  417  419 #> [19312,]  398  417  419 #> [19313,]  397  416  420 #> [19314,]  398  417  419 #> [19315,]  398  417  419 #> [19316,]  397  416  420 #> [19317,]  397  416  420 #> [19318,]  398  417  419 #> [19319,]  398  417  419 #> [19320,]  397  416  420 #> [19321,]  398  417  419 #> [19322,]  397  416  420 #> [19323,]  398  417  419 #> [19324,]  397  416  420 #> [19325,]  397  416  420 #> [19326,]  398  417  419 #> [19327,]  398  417  419 #> [19328,]  397  416  420 #> [19329,]  397  416  420 #> [19330,]  398  417  419 #> [19331,]  398  417  419 #> [19332,]  398  417  419 #> [19333,]  398  417  419 #> [19334,]  398  417  419 #> [19335,]  397  416  420 #> [19336,]  398  417  419 #> [19337,]  397  416  420 #> [19338,]  398  417  419 #> [19339,]  397  416  420 #> [19340,]  397  416  420 #> [19341,]  398  417  419 #> [19342,]  398  417  419 #> [19343,]  397  416  420 #> [19344,]  397  416  420 #> [19345,]  397  416  420 #> [19346,]  397  416  420 #> [19347,]  397  416  420 #> [19348,]  398  417  419 #> [19349,]  397  416  420 #> [19350,]  397  416  420 #> [19351,]  397  416  420 #> [19352,]  398  417  419 #> [19353,]  397  416  420 #> [19354,]  397  416  420 #> [19355,]  397  416  420 #> [19356,]  397  416  420 #> [19357,]  397  416  420 #> [19358,]  398  417  419 #> [19359,]  397  416  420 #> [19360,]  398  417  419 #> [19361,]  398  417  419 #> [19362,]  398  417  419 #> [19363,]  397  416  420 #> [19364,]  398  417  419 #> [19365,]  397  416  420 #> [19366,]  397  416  420 #> [19367,]  398  417  419 #> [19368,]  398  417  419 #> [19369,]  398  417  419 #> [19370,]  397  416  420 #> [19371,]  397  416  420 #> [19372,]  397  416  420 #> [19373,]  398  417  419 #> [19374,]  398  417  419 #> [19375,]  398  417  419 #> [19376,]  397  416  420 #> [19377,]  397  416  420 #> [19378,]  397  416  420 #> [19379,]  397  416  420 #> [19380,]  398  417  419 #> [19381,]  397  416  420 #> [19382,]  398  417  419 #> [19383,]  397  416  420 #> [19384,]  397  416  420 #> [19385,]  398  417  419 #> [19386,]  397  416  420 #> [19387,]  397  416  420 #> [19388,]  397  416  420 #> [19389,]  397  416  420 #> [19390,]  397  416  420 #> [19391,]  398  417  419 #> [19392,]  398  417  419 #> [19393,]  398  417  419 #> [19394,]  397  416  420 #> [19395,]  398  417  419 #> [19396,]  398  417  419 #> [19397,]  398  417  419 #> [19398,]  397  416  420 #> [19399,]  398  417  419 #> [19400,]  397  416  420 #> [19401,]  399  418  421 #> [19402,]  399  418  421 #> [19403,]  399  418  421 #> [19404,]  400  419  422 #> [19405,]  399  418  421 #> [19406,]  399  418  421 #> [19407,]  400  419  422 #> [19408,]  399  418  421 #> [19409,]  399  418  421 #> [19410,]  400  419  422 #> [19411,]  399  418  421 #> [19412,]  399  418  421 #> [19413,]  399  418  421 #> [19414,]  399  418  421 #> [19415,]  400  419  422 #> [19416,]  400  419  422 #> [19417,]  400  419  423 #> [19418,]  400  419  423 #> [19419,]  399  418  421 #> [19420,]  399  418  421 #> [19421,]  400  419  422 #> [19422,]  399  418  421 #> [19423,]  400  419  422 #> [19424,]  399  418  421 #> [19425,]  400  419  422 #> [19426,]  399  418  421 #> [19427,]  400  419  423 #> [19428,]  400  419  423 #> [19429,]  399  418  421 #> [19430,]  399  418  421 #> [19431,]  399  418  421 #> [19432,]  399  418  421 #> [19433,]  399  418  421 #> [19434,]  399  418  421 #> [19435,]  399  418  421 #> [19436,]  399  418  421 #> [19437,]  399  418  421 #> [19438,]  399  418  421 #> [19439,]  400  419  423 #> [19440,]  399  418  421 #> [19441,]  399  418  421 #> [19442,]  399  418  421 #> [19443,]  400  419  422 #> [19444,]  399  418  421 #> [19445,]  400  419  422 #> [19446,]  400  419  422 #> [19447,]  400  419  422 #> [19448,]  399  418  421 #> [19449,]  399  418  421 #> [19450,]  399  418  421 #> [19451,]  399  418  421 #> [19452,]  399  418  421 #> [19453,]  400  419  423 #> [19454,]  399  418  421 #> [19455,]  399  418  421 #> [19456,]  400  419  423 #> [19457,]  399  418  421 #> [19458,]  399  418  421 #> [19459,]  399  418  421 #> [19460,]  399  418  421 #> [19461,]  400  419  422 #> [19462,]  399  418  421 #> [19463,]  399  418  421 #> [19464,]  400  419  422 #> [19465,]  399  418  421 #> [19466,]  399  418  421 #> [19467,]  399  418  421 #> [19468,]  399  418  421 #> [19469,]  399  418  421 #> [19470,]  399  418  421 #> [19471,]  400  419  422 #> [19472,]  400  419  422 #> [19473,]  400  419  422 #> [19474,]  400  419  422 #> [19475,]  400  419  422 #> [19476,]  400  419  422 #> [19477,]  400  419  423 #> [19478,]  399  418  421 #> [19479,]  399  418  421 #> [19480,]  399  418  421 #> [19481,]  399  418  421 #> [19482,]  399  418  421 #> [19483,]  399  418  421 #> [19484,]  400  419  423 #> [19485,]  399  418  421 #> [19486,]  399  418  421 #> [19487,]  399  418  421 #> [19488,]  400  419  422 #> [19489,]  399  418  421 #> [19490,]  399  418  421 #> [19491,]  399  418  421 #> [19492,]  399  418  421 #> [19493,]  399  418  421 #> [19494,]  400  419  423 #> [19495,]  400  419  422 #> [19496,]  399  418  421 #> [19497,]  399  418  421 #> [19498,]  399  418  421 #> [19499,]  399  418  421 #> [19500,]  400  419  422 #> [19501,]  401  420  424 #> [19502,]  401  420  424 #> [19503,]  401  420  424 #> [19504,]  401  420  424 #> [19505,]  401  420  424 #> [19506,]  401  420  424 #> [19507,]  402  421  425 #> [19508,]  401  420  424 #> [19509,]  401  420  424 #> [19510,]  402  421  425 #> [19511,]  401  420  424 #> [19512,]  401  420  424 #> [19513,]  401  420  424 #> [19514,]  401  420  424 #> [19515,]  401  420  424 #> [19516,]  402  421  425 #> [19517,]  401  420  424 #> [19518,]  401  420  424 #> [19519,]  401  420  424 #> [19520,]  402  421  425 #> [19521,]  401  420  424 #> [19522,]  401  420  424 #> [19523,]  401  420  424 #> [19524,]  402  421  425 #> [19525,]  401  420  424 #> [19526,]  401  420  424 #> [19527,]  401  420  424 #> [19528,]  402  421  425 #> [19529,]  401  420  424 #> [19530,]  401  420  424 #> [19531,]  401  420  424 #> [19532,]  401  420  424 #> [19533,]  401  420  424 #> [19534,]  401  420  424 #> [19535,]  401  420  424 #> [19536,]  401  420  424 #> [19537,]  401  420  424 #> [19538,]  401  420  424 #> [19539,]  401  420  424 #> [19540,]  401  420  424 #> [19541,]  401  420  424 #> [19542,]  401  420  424 #> [19543,]  401  420  424 #> [19544,]  401  420  424 #> [19545,]  401  420  424 #> [19546,]  401  420  424 #> [19547,]  401  420  424 #> [19548,]  401  420  424 #> [19549,]  401  420  424 #> [19550,]  402  421  425 #> [19551,]  401  420  424 #> [19552,]  402  421  425 #> [19553,]  401  420  424 #> [19554,]  402  421  425 #> [19555,]  401  420  424 #> [19556,]  401  420  424 #> [19557,]  401  420  424 #> [19558,]  401  420  424 #> [19559,]  401  420  424 #> [19560,]  401  420  424 #> [19561,]  401  420  424 #> [19562,]  401  420  424 #> [19563,]  401  420  424 #> [19564,]  401  420  424 #> [19565,]  401  420  424 #> [19566,]  401  420  424 #> [19567,]  401  420  424 #> [19568,]  401  420  424 #> [19569,]  401  420  424 #> [19570,]  401  420  424 #> [19571,]  401  420  424 #> [19572,]  401  420  424 #> [19573,]  401  420  424 #> [19574,]  401  420  424 #> [19575,]  401  420  424 #> [19576,]  402  421  425 #> [19577,]  401  420  424 #> [19578,]  401  420  424 #> [19579,]  401  420  424 #> [19580,]  401  420  424 #> [19581,]  401  420  424 #> [19582,]  401  420  424 #> [19583,]  401  420  424 #> [19584,]  401  420  424 #> [19585,]  401  420  424 #> [19586,]  402  421  425 #> [19587,]  401  420  424 #> [19588,]  401  420  424 #> [19589,]  401  420  424 #> [19590,]  401  420  424 #> [19591,]  402  421  425 #> [19592,]  401  420  424 #> [19593,]  401  420  424 #> [19594,]  401  420  424 #> [19595,]  401  420  424 #> [19596,]  401  420  424 #> [19597,]  401  420  424 #> [19598,]  401  420  424 #> [19599,]  401  420  424 #> [19600,]  401  420  424 #> [19601,]  404  423  427 #> [19602,]  403  422  426 #> [19603,]  403  422  426 #> [19604,]  404  423  427 #> [19605,]  404  423  427 #> [19606,]  403  422  426 #> [19607,]  403  422  426 #> [19608,]  403  422  426 #> [19609,]  403  422  426 #> [19610,]  404  423  427 #> [19611,]  404  423  427 #> [19612,]  404  423  427 #> [19613,]  404  423  427 #> [19614,]  404  423  427 #> [19615,]  404  423  427 #> [19616,]  404  423  427 #> [19617,]  404  423  427 #> [19618,]  404  423  427 #> [19619,]  404  423  427 #> [19620,]  403  422  426 #> [19621,]  403  422  426 #> [19622,]  404  423  427 #> [19623,]  403  422  426 #> [19624,]  404  423  427 #> [19625,]  403  422  426 #> [19626,]  404  423  427 #> [19627,]  404  423  427 #> [19628,]  404  423  427 #> [19629,]  403  422  426 #> [19630,]  404  423  427 #> [19631,]  404  423  427 #> [19632,]  404  423  427 #> [19633,]  404  423  427 #> [19634,]  403  422  426 #> [19635,]  403  422  426 #> [19636,]  403  422  426 #> [19637,]  403  422  426 #> [19638,]  404  423  427 #> [19639,]  404  423  427 #> [19640,]  403  422  426 #> [19641,]  403  422  426 #> [19642,]  403  422  426 #> [19643,]  404  423  427 #> [19644,]  403  422  426 #> [19645,]  403  422  426 #> [19646,]  404  423  427 #> [19647,]  404  423  427 #> [19648,]  404  423  427 #> [19649,]  403  422  426 #> [19650,]  403  422  426 #> [19651,]  404  423  427 #> [19652,]  404  423  427 #> [19653,]  403  422  426 #> [19654,]  403  422  426 #> [19655,]  403  422  426 #> [19656,]  403  422  426 #> [19657,]  403  422  426 #> [19658,]  404  423  427 #> [19659,]  404  423  427 #> [19660,]  403  422  426 #> [19661,]  404  423  427 #> [19662,]  403  422  426 #> [19663,]  404  423  427 #> [19664,]  403  422  426 #> [19665,]  403  422  426 #> [19666,]  404  423  427 #> [19667,]  403  422  426 #> [19668,]  404  423  427 #> [19669,]  404  423  427 #> [19670,]  404  423  427 #> [19671,]  404  423  427 #> [19672,]  403  422  426 #> [19673,]  403  422  426 #> [19674,]  403  422  426 #> [19675,]  404  423  427 #> [19676,]  403  422  426 #> [19677,]  404  423  427 #> [19678,]  404  423  427 #> [19679,]  404  423  427 #> [19680,]  403  422  426 #> [19681,]  403  422  426 #> [19682,]  403  422  426 #> [19683,]  404  423  427 #> [19684,]  403  422  426 #> [19685,]  403  422  426 #> [19686,]  403  422  426 #> [19687,]  404  423  427 #> [19688,]  403  422  426 #> [19689,]  403  422  426 #> [19690,]  404  423  427 #> [19691,]  404  423  427 #> [19692,]  404  423  427 #> [19693,]  404  423  427 #> [19694,]  403  422  426 #> [19695,]  404  423  427 #> [19696,]  404  423  427 #> [19697,]  403  422  426 #> [19698,]  403  422  426 #> [19699,]  403  422  426 #> [19700,]  404  423  427 #> [19701,]  406  425  429 #> [19702,]  406  425  429 #> [19703,]  406  425  429 #> [19704,]  406  425  430 #> [19705,]  406  425  429 #> [19706,]  406  425  429 #> [19707,]  406  425  430 #> [19708,]  406  425  429 #> [19709,]  406  425  430 #> [19710,]  406  425  430 #> [19711,]  406  425  429 #> [19712,]  406  425  429 #> [19713,]  406  425  429 #> [19714,]  406  425  430 #> [19715,]  405  424  428 #> [19716,]  406  425  430 #> [19717,]  406  425  429 #> [19718,]  406  425  429 #> [19719,]  406  425  429 #> [19720,]  406  425  430 #> [19721,]  406  425  429 #> [19722,]  406  425  429 #> [19723,]  406  425  429 #> [19724,]  406  425  430 #> [19725,]  406  425  430 #> [19726,]  406  425  429 #> [19727,]  406  425  429 #> [19728,]  406  425  430 #> [19729,]  406  425  429 #> [19730,]  406  425  429 #> [19731,]  405  424  428 #> [19732,]  406  425  429 #> [19733,]  406  425  429 #> [19734,]  405  424  428 #> [19735,]  406  425  429 #> [19736,]  406  425  430 #> [19737,]  406  425  429 #> [19738,]  406  425  429 #> [19739,]  406  425  430 #> [19740,]  406  425  429 #> [19741,]  406  425  429 #> [19742,]  405  424  428 #> [19743,]  405  424  428 #> [19744,]  405  424  428 #> [19745,]  406  425  429 #> [19746,]  406  425  429 #> [19747,]  406  425  429 #> [19748,]  406  425  429 #> [19749,]  406  425  429 #> [19750,]  406  425  430 #> [19751,]  406  425  429 #> [19752,]  406  425  430 #> [19753,]  406  425  429 #> [19754,]  406  425  430 #> [19755,]  406  425  429 #> [19756,]  406  425  429 #> [19757,]  406  425  430 #> [19758,]  406  425  429 #> [19759,]  406  425  430 #> [19760,]  406  425  429 #> [19761,]  406  425  429 #> [19762,]  406  425  429 #> [19763,]  405  424  428 #> [19764,]  406  425  429 #> [19765,]  406  425  429 #> [19766,]  406  425  429 #> [19767,]  406  425  430 #> [19768,]  406  425  429 #> [19769,]  406  425  429 #> [19770,]  406  425  429 #> [19771,]  406  425  429 #> [19772,]  406  425  429 #> [19773,]  406  425  430 #> [19774,]  406  425  429 #> [19775,]  405  424  428 #> [19776,]  406  425  430 #> [19777,]  406  425  429 #> [19778,]  405  424  428 #> [19779,]  406  425  429 #> [19780,]  406  425  429 #> [19781,]  406  425  429 #> [19782,]  406  425  429 #> [19783,]  406  425  429 #> [19784,]  406  425  429 #> [19785,]  406  425  429 #> [19786,]  406  425  430 #> [19787,]  406  425  429 #> [19788,]  406  425  429 #> [19789,]  406  425  429 #> [19790,]  406  425  430 #> [19791,]  406  425  430 #> [19792,]  406  425  429 #> [19793,]  406  425  429 #> [19794,]  406  425  429 #> [19795,]  405  424  428 #> [19796,]  406  425  429 #> [19797,]  406  425  429 #> [19798,]  406  425  429 #> [19799,]  406  425  429 #> [19800,]  406  425  429 #> [19801,]  409  427  432 #> [19802,]  407  426  431 #> [19803,]  407  426  431 #> [19804,]  407  426  431 #> [19805,]  407  426  431 #> [19806,]  408  427  432 #> [19807,]  407  426  431 #> [19808,]  407  426  431 #> [19809,]  407  426  431 #> [19810,]  407  426  431 #> [19811,]  407  426  431 #> [19812,]  407  426  431 #> [19813,]  409  427  432 #> [19814,]  408  427  432 #> [19815,]  408  427  432 #> [19816,]  408  427  432 #> [19817,]  407  426  431 #> [19818,]  407  426  431 #> [19819,]  407  426  431 #> [19820,]  407  426  431 #> [19821,]  409  427  432 #> [19822,]  407  426  431 #> [19823,]  407  426  431 #> [19824,]  407  426  431 #> [19825,]  407  426  431 #> [19826,]  407  426  431 #> [19827,]  407  426  431 #> [19828,]  407  426  431 #> [19829,]  409  427  432 #> [19830,]  407  426  431 #> [19831,]  407  426  431 #> [19832,]  407  426  431 #> [19833,]  409  427  432 #> [19834,]  407  426  431 #> [19835,]  407  426  431 #> [19836,]  407  426  431 #> [19837,]  407  426  431 #> [19838,]  407  426  431 #> [19839,]  407  426  431 #> [19840,]  407  426  431 #> [19841,]  409  427  432 #> [19842,]  407  426  431 #> [19843,]  407  426  431 #> [19844,]  408  427  432 #> [19845,]  407  426  431 #> [19846,]  407  426  431 #> [19847,]  407  426  431 #> [19848,]  407  426  431 #> [19849,]  407  426  431 #> [19850,]  409  427  432 #> [19851,]  407  426  431 #> [19852,]  407  426  431 #> [19853,]  407  426  431 #> [19854,]  407  426  431 #> [19855,]  407  426  431 #> [19856,]  407  426  431 #> [19857,]  407  426  431 #> [19858,]  407  426  431 #> [19859,]  408  427  432 #> [19860,]  407  426  431 #> [19861,]  409  427  432 #> [19862,]  407  426  431 #> [19863,]  407  426  431 #> [19864,]  407  426  431 #> [19865,]  407  426  431 #> [19866,]  407  426  431 #> [19867,]  407  426  431 #> [19868,]  408  427  432 #> [19869,]  407  426  431 #> [19870,]  409  427  432 #> [19871,]  407  426  431 #> [19872,]  407  426  431 #> [19873,]  409  427  432 #> [19874,]  407  426  431 #> [19875,]  407  426  431 #> [19876,]  408  427  432 #> [19877,]  407  426  431 #> [19878,]  407  426  431 #> [19879,]  407  426  431 #> [19880,]  407  426  431 #> [19881,]  409  427  432 #> [19882,]  407  426  431 #> [19883,]  409  427  432 #> [19884,]  407  426  431 #> [19885,]  407  426  431 #> [19886,]  408  427  432 #> [19887,]  407  426  431 #> [19888,]  407  426  431 #> [19889,]  407  426  431 #> [19890,]  407  426  431 #> [19891,]  407  426  431 #> [19892,]  407  426  431 #> [19893,]  407  426  431 #> [19894,]  407  426  431 #> [19895,]  407  426  431 #> [19896,]  408  427  432 #> [19897,]  407  426  431 #> [19898,]  407  426  431 #> [19899,]  409  427  432 #> [19900,]  407  426  431 #> [19901,]  410  428  433 #> [19902,]  411  429  434 #> [19903,]  410  428  433 #> [19904,]  410  428  433 #> [19905,]  410  428  433 #> [19906,]  410  428  433 #> [19907,]  410  428  433 #> [19908,]  411  429  434 #> [19909,]  410  428  433 #> [19910,]  410  428  433 #> [19911,]  410  428  433 #> [19912,]  410  428  433 #> [19913,]  411  429  434 #> [19914,]  410  428  433 #> [19915,]  411  429  434 #> [19916,]  411  429  434 #> [19917,]  410  428  433 #> [19918,]  410  428  433 #> [19919,]  411  429  434 #> [19920,]  411  429  434 #> [19921,]  410  428  433 #> [19922,]  411  429  434 #> [19923,]  410  428  433 #> [19924,]  410  428  433 #> [19925,]  410  428  433 #> [19926,]  411  429  434 #> [19927,]  411  429  434 #> [19928,]  410  428  433 #> [19929,]  411  429  434 #> [19930,]  411  429  434 #> [19931,]  410  428  433 #> [19932,]  410  428  433 #> [19933,]  411  429  434 #> [19934,]  410  428  433 #> [19935,]  410  428  433 #> [19936,]  411  429  434 #> [19937,]  411  429  434 #> [19938,]  411  429  434 #> [19939,]  410  428  433 #> [19940,]  410  428  433 #> [19941,]  411  429  434 #> [19942,]  410  428  433 #> [19943,]  411  429  434 #> [19944,]  411  429  434 #> [19945,]  410  428  433 #> [19946,]  411  429  434 #> [19947,]  410  428  433 #> [19948,]  410  428  433 #> [19949,]  410  428  433 #> [19950,]  411  429  434 #> [19951,]  411  429  434 #> [19952,]  410  428  433 #> [19953,]  411  429  434 #> [19954,]  410  428  433 #> [19955,]  411  429  434 #> [19956,]  411  429  434 #> [19957,]  410  428  433 #> [19958,]  411  429  434 #> [19959,]  411  429  434 #> [19960,]  411  429  434 #> [19961,]  411  429  434 #> [19962,]  410  428  433 #> [19963,]  411  429  434 #> [19964,]  411  429  434 #> [19965,]  410  428  433 #> [19966,]  411  429  434 #> [19967,]  410  428  433 #> [19968,]  411  429  434 #> [19969,]  411  429  434 #> [19970,]  410  428  433 #> [19971,]  411  429  434 #> [19972,]  410  428  433 #> [19973,]  410  428  433 #> [19974,]  410  428  433 #> [19975,]  411  429  434 #> [19976,]  410  428  433 #> [19977,]  411  429  434 #> [19978,]  411  429  434 #> [19979,]  410  428  433 #> [19980,]  411  429  434 #> [19981,]  411  429  434 #> [19982,]  410  428  433 #> [19983,]  411  429  434 #> [19984,]  411  429  434 #> [19985,]  411  429  434 #> [19986,]  410  428  433 #> [19987,]  411  429  434 #> [19988,]  410  428  433 #> [19989,]  410  428  433 #> [19990,]  411  429  434 #> [19991,]  410  428  433 #> [19992,]  410  428  433 #> [19993,]  411  429  434 #> [19994,]  410  428  433 #> [19995,]  411  429  434 #> [19996,]  411  429  434 #> [19997,]  411  429  434 #> [19998,]  410  428  433 #> [19999,]  410  428  433 #> [20000,]  411  429  434"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Return forest's leaf node scale parameters. leaf scale sampled forest question, throws error leaf model stochastic scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"computeForestLeafVariances(model_object, forest_type, forest_inds = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"model_object Object type bartmodel bcfmodel corresponding BART / BCF model least one forest sample forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Vector size length(forest_inds) leaf scale parameter requested forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafVariances(bart_model, \"mean\") #>  [1] 0.004152781 0.004398406 0.004125331 0.004932730 0.005432045 0.006304939 #>  [7] 0.006490617 0.007341160 0.006215063 0.004931852 computeForestLeafVariances(bart_model, \"mean\", 0) #> [1] 0.004152781 computeForestLeafVariances(bart_model, \"mean\", c(1,3,5)) #> [1] 0.004398406 0.004932730 0.006304939"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Compute return largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"computeForestMaxLeafIndex(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute max leaf indices. provided, function return max leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Vector containing largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestMaxLeafIndex(bart_model, X, \"mean\") #>  [1] 386 403 415 422 425 418 431 430 427 448 computeForestMaxLeafIndex(bart_model, X, \"mean\", 0) #> [1] 386 computeForestMaxLeafIndex(bart_model, X, \"mean\", c(1,3,9)) #> [1] 403 422 448"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"Convert persistent aspects covariate preprocessor (-memory) C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"convertPreprocessorToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"wrapper around -memory C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Convert list (-memory) JSON representations BART model single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"createBARTModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- list(saveBARTModelToJson(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BART models single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"createBARTModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string_list <- list(saveBARTModelToJsonString(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJsonString(bart_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Convert (-memory) JSON representation BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"createBARTModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"json_object Object type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model) bart_model_roundtrip <- createBARTModelFromJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Convert JSON file containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"createBARTModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) bart_model_roundtrip <- createBARTModelFromJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Convert JSON string containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"createBARTModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJsonString(bart_model) bart_model_roundtrip <- createBARTModelFromJsonString(bart_json) y_hat_mean_roundtrip <- rowMeans(predict(bart_model_roundtrip, X_train)$y_hat) plot(rowMeans(bart_model$y_hat_train), y_hat_mean_roundtrip,       xlab = \"original\", ylab = \"roundtrip\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"createBCFModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_list <- list(saveBCFModelToJson(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJson(bcf_json_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"createBCFModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_string_list <- list(saveBCFModelToJsonString(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJsonString(bcf_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Convert (-memory) JSON representation BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"createBCFModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"json_object Object type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) bcf_json <- saveBCFModelToJson(bcf_model) bcf_model_roundtrip <- createBCFModelFromJson(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Convert JSON file containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"createBCFModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\") # bcf_model_roundtrip <- createBCFModelFromJsonFile(\"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Convert JSON string containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"createBCFModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json <- saveBCFModelToJsonString(bcf_model) # bcf_model_roundtrip <- createBCFModelFromJsonString(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new (empty) C++ Json object — createCppJson","title":"Create a new (empty) C++ Json object — createCppJson","text":"Create new (empty) C++ Json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"createCppJson()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new (empty) C++ Json object — createCppJson","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json file — createCppJsonFile","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"Create C++ Json object Json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"createCppJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"json_filename Name file read. Must end .json.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) tmpjson <- tempfile(fileext = \".json\") example_json$save_file(file.path(tmpjson)) example_json_roundtrip <- createCppJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json string — createCppJsonString","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"Create C++ Json object Json string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"createCppJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) example_json_string <- example_json$return_json_string() example_json_roundtrip <- createCppJsonString(example_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R class that wraps a C++ random number generator — createCppRNG","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"Create R class wraps C++ random number generator","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"createCppRNG(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"CppRng object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"rng <- createCppRNG(1234) rng <- createCppRNG()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest — createForest","title":"Create a forest — createForest","text":"Create forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest — createForest","text":"","code":"createForest(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest — createForest","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest — createForest","text":"Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest — createForest","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest dataset object — createForestDataset","title":"Create a forest dataset object — createForestDataset","text":"Create forest dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest dataset object — createForestDataset","text":"","code":"createForestDataset(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest dataset object — createForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest dataset object — createForestDataset","text":"ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest dataset object — createForestDataset","text":"","code":"covariate_matrix <- matrix(runif(10*100), ncol = 10) basis_matrix <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) forest_dataset <- createForestDataset(covariate_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model object — createForestModel","title":"Create a forest model object — createForestModel","text":"Create forest model object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model object — createForestModel","text":"","code":"createForestModel(forest_dataset, forest_model_config, global_model_config)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model object — createForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures forest_model_config ForestModelConfig object containing forest model parameters settings global_model_config GlobalModelConfig object containing global model parameters settings","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model object — createForestModel","text":"ForestModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model object — createForestModel","text":"","code":"num_trees <- 100 n <- 100 p <- 10 alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) forest_model_config <- createForestModelConfig(feature_types=feature_types,                                                 num_trees=num_trees, num_features=p,                                                 num_observations=n, alpha=alpha, beta=beta,                                                 min_samples_leaf=min_samples_leaf,                                                 max_depth=max_depth, leaf_model_type=1) #> Warning: `variable_weights` not provided, will be assumed to be equal-weighted global_model_config <- createGlobalModelConfig(global_error_variance=1.0) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model config object — createForestModelConfig","title":"Create a forest model config object — createForestModelConfig","text":"Create forest model config object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model config object — createForestModelConfig","text":"","code":"createForestModelConfig(   feature_types = NULL,   num_trees = NULL,   num_features = NULL,   num_observations = NULL,   variable_weights = NULL,   leaf_dimension = 1,   alpha = 0.95,   beta = 2,   min_samples_leaf = 5,   max_depth = -1,   leaf_model_type = 1,   leaf_model_scale = NULL,   variance_forest_shape = 1,   variance_forest_scale = 1,   cutpoint_grid_size = 100 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model config object — createForestModelConfig","text":"feature_types Vector integer-coded feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled num_features Number features training dataset num_observations Number observations training dataset variable_weights Vector specifying sampling probability p covariates ForestDataset leaf_dimension Dimension leaf model (default: 1) alpha Root node split probability tree prior (default: 0.95) beta Depth prior penalty tree prior (default: 2.0) min_samples_leaf Minimum number samples tree leaf (default: 5) max_depth Maximum depth tree ensemble model. Setting -1 enforce depth limits trees. Default: -1. leaf_model_type Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression). Default: 0. leaf_model_scale Scale parameter used Gaussian leaf models (can either scalar q x q matrix, q dimensionality basis >1 leaf_model_int = 2). Calibrated internally 1/num_trees, propagated along diagonal needed multivariate leaf models. variance_forest_shape Shape parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. variance_forest_scale Scale parameter IG leaf models (applicable leaf_model_type = 3). Default: 1. cutpoint_grid_size Number unique cutpoints consider (default: 100)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model config object — createForestModelConfig","text":"ForestModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModelConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model config object — createForestModelConfig","text":"","code":"config <- createForestModelConfig(num_trees = 10, num_features = 5, num_observations = 100) #> Warning: `feature_types` not provided, will be assumed to be numeric #> Warning: `variable_weights` not provided, will be assumed to be equal-weighted"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a container of forest samples — createForestSamples","title":"Create a container of forest samples — createForestSamples","text":"Create container forest samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a container of forest samples — createForestSamples","text":"","code":"createForestSamples(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a container of forest samples — createForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a container of forest samples — createForestSamples","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a container of forest samples — createForestSamples","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a global model config object — createGlobalModelConfig","title":"Create a global model config object — createGlobalModelConfig","text":"Create global model config object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a global model config object — createGlobalModelConfig","text":"","code":"createGlobalModelConfig(global_error_variance = 1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a global model config object — createGlobalModelConfig","text":"global_error_variance Global error variance parameter (default: 1.0)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a global model config object — createGlobalModelConfig","text":"GlobalModelConfig object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createGlobalModelConfig.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a global model config object — createGlobalModelConfig","text":"","code":"config <- createGlobalModelConfig(global_error_variance = 100)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an outcome object — createOutcome","title":"Create an outcome object — createOutcome","text":"Create outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an outcome object — createOutcome","text":"","code":"createOutcome(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an outcome object — createOutcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an outcome object — createOutcome","text":"Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an outcome object — createOutcome","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) outcome <- createOutcome(y)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"createPreprocessorFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"json_object -memory wrapper around JSON C++ object containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJson(preprocessor_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"createPreprocessorFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"json_string -memory JSON string containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJsonString(preprocessor_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectSamples object — createRandomEffectSamples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"Create RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"createRandomEffectSamples(num_components, num_groups, random_effects_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random effects dataset object — createRandomEffectsDataset","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"Create random effects dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"createRandomEffectsDataset(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"rfx_group_ids <- sample(1:2, size = 100, replace = TRUE) rfx_basis <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsModel object — createRandomEffectsModel","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"Create RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsTracker object — createRandomEffectsTracker","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"Create RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"createRandomEffectsTracker(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"# S3 method for class 'bartmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"object Object type bartmodel containing draws BART model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) snr <- 3 group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) E_y <- f_XW + rfx_term y <- E_y + rnorm(n, 0, 1)*(sd(E_y)/snr) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- group_ids[test_inds] rfx_group_ids_train <- group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     rfx_group_ids_train = rfx_group_ids_train,                     rfx_group_ids_test = rfx_group_ids_test,                     rfx_basis_train = rfx_basis_train,                     rfx_basis_test = rfx_basis_test,                     num_gfr = 100, num_burnin = 0, num_mcmc = 100) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) rfx_samples <- getRandomEffectSamples(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"Generic function extracting random effect samples model object (BCF, BART, etc...)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"object Fitted model object extract random effects ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"List random effect samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"Combine multiple JSON model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"loadForestContainerCombinedJson(json_object_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"json_object_list List objects class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) mean_forest <- loadForestContainerCombinedJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"loadForestContainerCombinedJsonString(json_string_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"json_string_list List strings parse objects type CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) mean_forest <- loadForestContainerCombinedJsonString(bart_json_string, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of forest samples from json — loadForestContainerJson","title":"Load a container of forest samples from json — loadForestContainerJson","text":"Load container forest samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"loadForestContainerJson(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of forest samples from json — loadForestContainerJson","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of forest samples from json — loadForestContainerJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) mean_forest <- loadForestContainerJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"Combine multiple JSON model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"loadRandomEffectSamplesCombinedJson(json_object_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"json_object_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"loadRandomEffectSamplesCombinedJsonString(json_string_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"json_string_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJsonString(bart_json_string, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"Load container random effect samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"loadRandomEffectSamplesJson(json_object, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"json_object Object class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) rfx_samples <- loadRandomEffectSamplesJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a scalar from json — loadScalarJson","title":"Load a scalar from json — loadScalarJson","text":"Load scalar json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a scalar from json — loadScalarJson","text":"","code":"loadScalarJson(json_object, json_scalar_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a scalar from json — loadScalarJson","text":"json_object Object class CppJson json_scalar_label Label referring particular scalar / string value (.e. \"num_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a scalar from json — loadScalarJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a scalar from json — loadScalarJson","text":"","code":"example_scalar <- 5.4 example_json <- createCppJson() example_json$add_scalar(\"myscalar\", example_scalar) roundtrip_scalar <- loadScalarJson(example_json, \"myscalar\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a vector from json — loadVectorJson","title":"Load a vector from json — loadVectorJson","text":"Load vector json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a vector from json — loadVectorJson","text":"","code":"loadVectorJson(json_object, json_vector_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a vector from json — loadVectorJson","text":"json_object Object class CppJson json_vector_label Label referring particular vector (.e. \"sigma2_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a vector from json — loadVectorJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a vector from json — loadVectorJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) roundtrip_vec <- loadVectorJson(example_json, \"myvec\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BART model on new data — predict.bartmodel","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"Predict sampled BART model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"# S3 method for class 'bartmodel' predict(   object,   X,   leaf_basis = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"object Object type bart containing draws regression forest associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. leaf_basis (Optional) Bases used prediction (e.g. dot product leaf values). Default: NULL. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"List prediction matrices. model random effects, list one element – predictions forest. model random effects, list three elements – forest predictions, random effects predictions, sum (y_hat).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) y_hat_test <- predict(bart_model, X_test)$y_hat plot(rowMeans(y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BCF model on new data — predict.bcfmodel","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"Predict sampled BCF model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' predict(   object,   X,   Z,   propensity = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. Z Treatments used prediction. propensity (Optional) Propensities used prediction. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"List 3-5 nrow(X) object$num_samples matrices: prognostic function estimates, treatment effect estimates, (optionally) random effects predictions, (optionally) variance forest predictions, outcome predictions.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train) preds <- predict(bcf_model, X_test, Z_test, pi_test) plot(rowMeans(preds$mu_hat), mu_test, xlab = \"predicted\",      ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(preds$tau_hat), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"preprocessPredictionData(input_data, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"input_data Covariates, provided either dataframe matrix metadata List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocessed data categorical variables appropriately handled","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"cov_df <- data.frame(x1 = 1:5, x2 = 5:1, x3 = 6:10) metadata <- list(num_ordered_cat_vars = 0, num_unordered_cat_vars = 0,                   num_numeric_vars = 3, numeric_vars = c(\"x1\", \"x2\", \"x3\")) X_preprocessed <- preprocessPredictionData(cov_df, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"preprocessTrainData(input_data)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"input_data Covariates, provided either dataframe matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"List preprocessed (unmodified) data details number type variable, unique categories associated categorical variables, vector feature types needed calls BART BCF.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) X <- preprocess_list$X"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"Reset active forest, either specific forest ForestContainer ensemble single-node (.e. root) trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"resetActiveForest(active_forest, forest_samples = NULL, forest_num = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"active_forest Current active forest forest_samples (Optional) Container forest samples re-initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees. forest_num (Optional) Index forest samples initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples$add_forest_with_constant_leaves(0.0) forest_samples$add_numeric_split_tree(0, 0, 0, 0, 0.5, -1.0, 1.0) forest_samples$add_numeric_split_tree(0, 1, 0, 1, 0.75, 3.4, 0.75) active_forest$set_root_leaves(0.1) resetActiveForest(active_forest, forest_samples, 0) resetActiveForest(active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"Re-initialize forest model (tracking data structures) specific forest ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"resetForestModel(forest_model, forest, dataset, residual, is_mean_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"forest_model Forest model tracking data structures forest Forest re-initialize forest model dataset Training dataset object residual Residual also updated is_mean_model Whether model updated conditional mean model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"n <- 100 p <- 10 num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) leaf_model <- 0 sigma2 <- 1.0 leaf_scale <- as.matrix(1.0) variable_weights <- rep(1/p, p) a_forest <- 1 b_forest <- 1 cutpoint_grid_size <- 100 X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) y <- -5 + 10*(X[,1] > 0.5) + rnorm(n) outcome <- createOutcome(y) rng <- createCppRNG(1234) global_model_config <- createGlobalModelConfig(global_error_variance=sigma2) forest_model_config <- createForestModelConfig(feature_types=feature_types,                                                 num_trees=num_trees, num_observations=n,                                                 num_features=p, alpha=alpha, beta=beta,                                                 min_samples_leaf=min_samples_leaf,                                                 max_depth=max_depth,                                                 variable_weights=variable_weights,                                                 cutpoint_grid_size=cutpoint_grid_size,                                                 leaf_model_type=leaf_model,                                                 leaf_model_scale=leaf_scale) forest_model <- createForestModel(forest_dataset, forest_model_config, global_model_config) active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension,                                        is_leaf_constant, is_exponentiated) active_forest$prepare_for_sampler(forest_dataset, outcome, forest_model, 0, 0.) forest_model$sample_one_iteration(     forest_dataset, outcome, forest_samples, active_forest,      rng, forest_model_config, global_model_config,      keep_forest = TRUE, gfr = FALSE ) resetActiveForest(active_forest, forest_samples, 0) resetForestModel(forest_model, active_forest, forest_dataset, outcome, TRUE)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"Reset RandomEffectsModel object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"resetRandomEffectsModel(rfx_model, rfx_samples, sample_num, sigma_alpha_init)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"rfx_model Object type RandomEffectsModel. rfx_samples Object type RandomEffectSamples. sample_num Index sample stored rfx_samples reset state random effects model. Zero-indexed, resetting based first sample require setting sample_num = 0. sigma_alpha_init Initial value \"working parameter\" scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"Reset RandomEffectsTracker object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"resetRandomEffectsTracker(   rfx_tracker,   rfx_model,   rfx_dataset,   residual,   rfx_samples )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome. rfx_samples Object type RandomEffectSamples.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0) resetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome, rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object to its ","title":"Reset a RandomEffectsModel object to its ","text":"Reset RandomEffectsModel object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object to its ","text":"","code":"rootResetRandomEffectsModel(   rfx_model,   alpha_init,   xi_init,   sigma_alpha_init,   sigma_xi_init,   sigma_xi_shape,   sigma_xi_scale )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object to its ","text":"rfx_model Object type RandomEffectsModel. alpha_init Initial value \"working parameter\". xi_init Initial value \"group parameters\". sigma_alpha_init Initial value \"working parameter\" scale parameter. sigma_xi_init Initial value \"group parameters\" scale parameter. sigma_xi_shape Shape parameter inverse gamma variance model group parameters. sigma_xi_scale Scale parameter inverse gamma variance model group parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object to its ","title":"Reset a RandomEffectsTracker object to its ","text":"Reset RandomEffectsTracker object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object to its ","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale) rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"Sample one iteration (inverse gamma) global variance model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"sampleGlobalErrorVarianceOneIteration(residual, dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"residual Outcome class dataset ForestDataset class rng C++ random number generator Global variance shape parameter b Global variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) y_std <- (y-mean(y))/sd(y) forest_dataset <- createForestDataset(X) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 sigma2 <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"Sample one iteration leaf parameter variance model (univariate basis constant leaf!)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"sampleLeafVarianceOneIteration(forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"forest C++ forest rng C++ random number generator Leaf variance shape parameter b Leaf variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 tau <- sampleLeafVarianceOneIteration(active_forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Convert persistent aspects BART model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"saveBARTModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"Convert persistent aspects BART model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"saveBARTModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"object Object type bartmodel containing draws BART model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"Convert persistent aspects BART model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"saveBARTModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string <- saveBARTModelToJsonString(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Convert persistent aspects BCF model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"saveBCFModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # bcf_json <- saveBCFModelToJson(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"Convert persistent aspects BCF model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"saveBCFModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"Convert persistent aspects BCF model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"saveBCFModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train,                   rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test,                   rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonString(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"Convert persistent aspects covariate preprocessor (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"savePreprocessorToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference — stochtree-package","title":"stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference — stochtree-package","text":"Flexible stochastic tree ensemble software. Robust implementations Bayesian Additive Regression Trees (Chipman, George, McCulloch (2010) doi:10.1214/09-AOAS285 ) supervised learning (Bayesian Causal Forests (BCF) Hahn, Murray, Carvalho (2020) doi:10.1214/19-BA1195 ) causal inference. Enables model serialization parallel sampling provides low-level interface custom stochastic forest samplers.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stochtree: Stochastic tree Ensembles (XBART and BART) for Supervised Learning and Causal Inference — stochtree-package","text":"Maintainer: Drew Herren drewherrenopensource@gmail.com (ORCID) Authors: Richard Hahn Jared Murray Carlos Carvalho Jingyu contributors: stochtree contributors [copyright holder]","code":""},{"path":"https://stochastictree.github.io/stochtree-r/news/index.html","id":"stochtree-010","dir":"Changelog","previous_headings":"","what":"stochtree 0.1.0","title":"stochtree 0.1.0","text":"Initial release CRAN. Support sampling stochastic tree ensembles using two algorithms: MCMC Grow--Root (GFR) Supervised learning constant leaves user-specified leaf regression models Causal effect estimation binary continuous treatments Forest-based variance function estimation (heteroskedasticity) Additive (univariate multivariate) group random effects Multi-chain sampling support parallelism “Warm-start” initialization MCMC forest samplers via Grow--Root (GFR) algorithm Automated preprocessing / handling categorical variables Ability combine forest sampler (additive) model terms, without using C++ Combine sample arbitrary number forests random effects terms","code":""}]
