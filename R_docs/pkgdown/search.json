[{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Step Function","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple step function.","code":"# Generate the data n <- 500 p_x <- 10 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,     general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect BART samples burnin.","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model additive random effect structure.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) noise_sd <- sd(f_XW) / snr y <- f_XW + rfx_term + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, rfx_group_ids_train = rfx_group_ids_train,      rfx_basis_train = rfx_basis_train, X_test = X_test, leaf_basis_test = leaf_basis_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6|X3−1|τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 \\lvert X_3 - 1 \\rvert\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.93"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-2-linear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.78"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.63"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-3-linear-outcome-model-homogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=3g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 3\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau1(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.99"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.68"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-4-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)={−1.1 ifX1>X20.9 ifX1≤X2τ(X)=11+exp(−X3)+X210π(X)=Φ(μ(X))Z∼Bernoulli(π(X))X1,X2,X3∼N(0,1)X4∼N(X2,1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= \\begin{cases} -1.1 & \\text{ } X_1 > X_2\\\\ 0.9 & \\text{ } X_1 \\leq X_2 \\end{cases}\\\\ \\tau(X) &= \\frac{1}{1+\\exp(-X_3)} + \\frac{X_2}{10}\\\\ \\pi(X) &= \\Phi\\left(\\mu(X)\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right)\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim N\\left(X_2,1\\right)\\\\ \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 1000 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n,x2,1) X <- cbind(x1,x2,x3,x4) p <- ncol(X) mu <- function(x) {-1*(x[,1]>(x[,2])) + 1*(x[,1]<(x[,2])) - 0.1} tau <- function(x) {1/(1 + exp(-x[,3])) + x[,2]/10} mu_x <- mu(X) tau_x <- tau(X) pi_x <- pnorm(mu_x) Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x sigma <- diff(range(mu_x + tau_x*pi))/8 y <- E_XZ + sigma*rnorm(n) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.995"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-5-nonlinear-outcome-model-heterogeneous-treatment-effect-with-additive-random-effects","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","title":"Causal Machine Learning in StochTree","text":"augment simulated example Demo 1 additive random effect structure show bcf() function can estimate incorporate effects forest sampling procedure.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw augmented “demo 1” DGP","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"simulate “warm-start” model (running root-MCMC BART random effects simply matter modifying code snippet setting num_gfr <- 0 num_mcmc > 0). Inspect BART samples initialized XBART warm-start      Examine test set interval coverage clear causal inference much difficult presence strong covariate-dependent prognostic effects strong group-level random effects. sense, proper prior calibration three μ\\mu, τ\\tau random effects models crucial.","code":"num_gfr <- 100 num_burnin <- 0 num_mcmc <- 500 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$rfx_preds_test), rfx_term_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Random effects terms\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ-rfx_term) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-6-nonlinear-outcome-model-heterogeneous-treatment-effect-using-different-features-in-the-prognostic-and-treatment-forests","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","title":"Causal Machine Learning in StochTree","text":", consider case might prefer use subset covariates treatment effect forest. might want ? Well, many cases plausible covariates (example age, income, etc…) influence outcome interest causal problem, moderate treatment effect. case, ’d need include variables prognostic forest deconfounding don’t necessarily need include treatment effect forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-5","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw modified “demo 1” DGP","code":"mu <- function(x) {1+g(x)+x[,1]*x[,3]-x[,2]+3*x[,3]} tau <- function(x) {1 - 2*x[,1] + 2*x[,2] + 1*x[,1]*x[,2]} n <- 500 snr <- 4 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) x6 <- rnorm(n) x7 <- rnorm(n) x8 <- rnorm(n) x9 <- rnorm(n) x10 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) p <- ncol(X) mu_x <- mu(X) tau_x <- tau(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.5 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect burned-samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.892 test_tau_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_tau_mean - tau_test)^2)) #> [1] 1.731862 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.129517"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.948 test_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_mean - tau_test)^2)) #> [1] 1.352542 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 1.933541"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.619743 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.929845"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.964 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.318198 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.922044"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect-1","dir":"Articles","previous_headings":"Continuous Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+2X1−𝟙(X2<0)×4+𝟙(X2≥0)×4+3(|X3|−2π)τ(X)=1+2X4X1,X2,X3,X4,X5∼N(0,1)U∼Uniform(0,1)π(X)=μ(X)−12+4(U−12)Z∼𝒩(π(X),1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + 2 X_1 - \\mathbb{1}\\left(X_2 < 0\\right) \\times 4 + \\mathbb{1}\\left(X_2 \\geq 0\\right) \\times 4 + 3 \\left(\\lvert X_3 \\rvert - \\sqrt{\\frac{2}{\\pi}} \\right)\\\\ \\tau(X) &= 1 + 2 X_4\\\\ X_1,X_2,X_3,X_4,X_5 &\\sim N\\left(0,1\\right)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ \\pi(X) &= \\frac{\\mu(X) - 1}{2} + 4 \\left(U - \\frac{1}{2}\\right)\\\\ Z &\\sim \\mathcal{N}\\left(\\pi(X), 1\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-6","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- 1 + 2*x1 - 4*(x2 < 0) + 4*(x2 >= 0) + 3*(abs(x3) - sqrt(2/pi)) tau_x <- 1 + 2*x4 u <- runif(n) pi_x <- ((mu_x-1)/4) + 4*(u-0.5) Z <- pi_x + rnorm(n,0,1) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-5","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-4","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Custom Sampling Routines in StochTree","text":"functions bart() bcf() provide simple performant interfaces supervised learning / causal inference, stochtree also offers access many “low-level” data structures typically implemented C++. low-level interface designed performance even simplicity — rather intent provide “prototype” interface C++ code doesn’t require modifying C++. illustrate prototype interface might useful, consider classic BART algorithm:    INPUT: yy, XX, τ\\tau, ν\\nu, λ\\lambda, α\\alpha, β\\beta    OUTPUT: mm samples decision forest kk trees global variance parameter σ2\\sigma^2    Initialize σ2\\sigma^2 via default data-dependent calibration exercise    Initialize “forest 0” kk trees single root node, referring tree jj’s prediction vector f0,jf_{0,j}    Compute residual r=y−∑j=1kf0,jr = y - \\sum_{j=1}^k f_{0,j}    iiIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Initialize forest ii forest −1i-1       jjIN {1,…,k}\\left\\{1,\\dots,k\\right\\}:          Add predictions tree jj residual: r=r+fi,jr = r + f_{,j}          Update tree jj via Metropolis-Hastings rr XX data tree priors depending (τ\\tau, σ2\\sigma^2, α\\alpha, β\\beta)          Sample leaf node parameters tree jj via Gibbs (leaf node prior N(0,τ)N\\left(0,\\tau\\right))          Subtract (updated) predictions tree jj residual: r=r−fi,jr = r - f_{,j}       Sample σ2\\sigma^2 via Gibbs (prior IG(ν/2,νλ/2)IG(\\nu/2,\\nu\\lambda/2)) algorithm conceptually simple, much core computation carried low-level languages C C++ tree data structure. result, changes algorithm, supporting heteroskedasticity (Pratola et al. (2020)), categorical outcomes (Murray (2021)) causal effect estimation (Hahn, Murray, Carvalho (2020)) require modifying low-level code. prototype interface exposes core components loop R level, thus making possible interchange C++ computation steps like “update tree jj via Metropolis-Hastings” R computation custom variance model, user-specified additive mean model components, . begin, load stochtree package","code":"library(stochtree)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) y <- f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } # Forest predictions preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via “grow--root” (Hahn (2023))   Inspect BART samples obtained “warm-starting”","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-2-supervised-learning-with-additive-random-effects","dir":"Articles","previous_headings":"","what":"Demo 2: Supervised Learning with Additive Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example add simple “random effects” structure: every observation either group 1 group 2 random group intercept (simulated quite strong, underscoring need random effects modeling).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- c(-5, 5) rfx_basis <- rep(1, n) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rfx_coefs[group_ids] * rfx_basis y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1) xi_init <- matrix(c(1,1),1,2) sigma_alpha_init <- matrix(c(1),1,1) sigma_xi_init <- matrix(c(1),1,1) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-3-supervised-learning-with-additive-multi-component-random-effects","dir":"Articles","previous_headings":"","what":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example, case allowing random intercept regression coefficient (pre-specified basis) group (1 2).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1,0) xi_init <- matrix(c(1,0,1,0),2,2) sigma_alpha_init <- diag(1,2,2) sigma_xi_init <- diag(1,2,2) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-4-supervised-learning-with-additive-linear-model","dir":"Articles","previous_headings":"","what":"Demo 4: Supervised Learning with Additive Linear Model","title":"Custom Sampling Routines in StochTree","text":"Instead group random effects, show combine stochastic forest additive linear regression term. model corresponds broadly y=Wβ+f(X)+ϵf(X)∼BART(c,d)β∼𝒩(0,τ)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= W\\beta + f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}(c,d)\\\\ \\beta &\\sim \\mathcal{N}(0, \\tau)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}(,b) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) beta_W <- c(5) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) lm_term <- W %*% beta_W y <- lm_term + f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha_bart <- 0.9 beta_bart <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- F feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) beta_tau <- 20 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha_bart, beta_bart,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 20 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc beta_init <- 0 global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) beta_samples <- c(beta_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, sigma2, cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } for (i in (num_warmstart+1):num_samples) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } # Linear model predictions lm_preds <- (sapply(1:num_samples, function(x) W[,1]*beta_samples[x+1]))*y_std  # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Overall predictions preds <- forest_preds + lm_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std  # Regression parameter beta_samples <- beta_samples*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model    Inspect BART samples obtained “warm-starting” plus additive random effects model    Now inspect samples BART forest alone (without considering additive linear model predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(beta_samples[1:num_warmstart], ylab=\"beta\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(beta_samples[(num_warmstart+1):num_samples], ylab=\"beta\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-5-causal-inference","dir":"Articles","previous_headings":"","what":"Demo 5: Causal Inference","title":"Custom Sampling Routines in StochTree","text":"show implement Bayesian Causal Forest (BCF) model Hahn, Murray, Carvalho (2020) using stochtree’s prototype API, including demoing non-trivial sampling step done R level.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"background","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Background","title":"Custom Sampling Routines in StochTree","text":"supervised learning case previous demo conceptually simple, motivate causal effect estimation task additional notation. Let yy refer continuous outcome interest, ZZ refer binary treatment, XX set covariates may influence YY, ZZ, . XX exhaustive set covariates influence ZZ YY, can specific YY terms causal model (see example Pearl (2009)) Y=F(Z,X,ϵY)\\begin{equation*} \\begin{aligned} Y &= F(Z, X, \\epsilon_Y) \\end{aligned} \\end{equation*} ϵY\\epsilon_Y outcome specific random noise FF function generates YY (many cases, FF can thought inverse CDF conditional XX ZZ). “potential outcomes” (see Imbens Rubin (2015)) can recovered Y1=F(1,X,ϵY)Y^1 = F(1, X, \\epsilon_Y) Y0=F(0,X,ϵY)Y^0 = F(0, X, \\epsilon_Y). causal outcome model can decomposed “mean” “error” terms Y=μ(X)+Zτ(X)+[η(X)+Zδ(X)]μ(X)=𝔼ϵY[F(0,X,ϵY)]τ(X)=𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]η(X)=F(0,X,ϵY)−𝔼ϵY[F(0,X,ϵY)]δ(X)=F(1,X,ϵY)−F(0,X,ϵY)−𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]\\begin{equation*} \\begin{aligned} Y &= \\mu(X) + Z\\tau(X) + \\left[\\eta(X) + Z\\delta(X)\\right]\\\\ \\mu(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\tau(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right]\\\\ \\eta(X) &= F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\delta(X) &= F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right] \\end{aligned} \\end{equation*} τ(X)\\tau(X) precisely conditional average treatment effect (CATE) estimand. Unfortunately, functional form FF unavailable analysis, τ(X)\\tau(X) derived. flexible, regularized nonparametrics enter picture, aim estimate μ(X)\\mu(X) τ(X)\\tau(X) data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"Demo 5: Causal Inference > Background","what":"Bayesian Causal Forest (BCF)","title":"Custom Sampling Routines in StochTree","text":"BCF estimates μ(X)\\mu(X) τ(X)\\tau(X) using separate BART forests term. Furthermore, rather rely common implicit coding ZZ 0 control observations 1 treated observations, consider coding control observations parameter b0b_0 treated observations parameter b1b_1. Placing N(0,1/2)N(0,1/2) prior bzb_z, essentially redefines outcome model y=μ(X)+τ(X)f(Z)+ϵf(Z)=b0(1−Z)+b1Zϵ∼N(0,σ2)b0,b1∼N(0,1/2)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) f(Z) + \\epsilon\\\\ f(Z) &= b_0(1-Z) + b_1 Z\\\\ \\epsilon &\\sim N\\left(0, \\sigma^2\\right)\\\\ b_0, b_1 &\\sim N\\left(0, 1/2\\right) \\end{aligned} \\end{equation*} Updating bzb_z requires additional Gibbs step, derive . Conditioning sampled forests μ\\mu τ\\tau, essentially regressing y−μ(Z)y - \\mu(Z) [(1−Z)τ(X),Zτ(X)]\\left[(1-Z)\\tau(X), Z\\tau(X)\\right] closed form posterior b0∣y,X,μ,τ∼N(syτ,0sττ,0+2σ2,σ2sττ,0+2σ2)b1∣y,X,μ,τ∼N(syτ,1sττ,1+2σ2,σ2sττ,1+2σ2)\\begin{equation*} \\begin{aligned} b_0 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,0}}{s_{\\tau\\tau,0} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,0} + 2\\sigma^2}\\right)\\\\ b_1 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,1}}{s_{\\tau\\tau,1} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,1} + 2\\sigma^2}\\right) \\end{aligned} \\end{equation*} syτ,z=∑:Zi=z(yi−μ(Xi))τ(Xi)s_{y\\tau,z} = \\sum_{: Z_i = z} (y_i - \\mu(X_i))\\tau(X_i) sττ,z=∑:Zi=zτ(Xi)τ(Xi)s_{\\tau\\tau,z} = \\sum_{: Z_i = z} \\tau(X_i)\\tau(X_i).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"simulated causal DGP mirrors nonlinear, heterogeneous treatment effect DGP presented Hahn, Murray, Carvalho (2020).","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Prepare run sampler (now must specify initial values b0b_0 b1b_1, choose -1/2 1/2 instead 0 1). Initialize R-level access C++ classes needed sample model Run grow--root sampler “warm-start” BART, also updating adaptive coding parameter b0b_0 b1b_1 Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"# Mu forest alpha_mu <- 0.95 beta_mu <- 2.0 min_samples_leaf_mu <- 5 max_depth_mu <- 10 num_trees_mu <- 250 cutpoint_grid_size_mu = 100 tau_init_mu = 1/num_trees_mu leaf_prior_scale_mu = matrix(c(tau_init_mu), ncol = 1) a_leaf_mu <- 3. b_leaf_mu <- var(resid)/(num_trees_mu) leaf_regression_mu <- F sigma_leaf_mu <- var(resid)/(num_trees_mu) current_leaf_scale_mu <- as.matrix(sigma_leaf_mu)  # Tau forest alpha_tau <- 0.25 beta_tau <- 3.0 min_samples_leaf_tau <- 5 max_depth_tau <- 10 num_trees_tau <- 50 cutpoint_grid_size_tau = 100 a_leaf_tau <- 3. b_leaf_tau <- var(resid)/(2*num_trees_tau) leaf_regression_tau <- T sigma_leaf_tau <- var(resid)/(2*num_trees_tau) current_leaf_scale_tau <- as.matrix(sigma_leaf_tau)  # Common parameters nu <- 3 sigma2hat <- (sigma(lm(resid~X)))^2 quantile_cutoff <- 0.9 if (is.null(lambda)) {     lambda <- (sigma2hat*qgamma(1-quantile_cutoff,nu))/nu } sigma2 <- sigma2hat current_sigma2 <- sigma2 # Sampling composition num_gfr <- 20 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc  # Sigma^2 samples global_var_samples <- rep(0, num_samples)  # Adaptive coding parameter samples b_0_samples <- rep(0, num_samples) b_1_samples <- rep(0, num_samples) b_0 <- -0.5 b_1 <- 0.5 current_b_0 <- b_0 current_b_1 <- b_1 tau_basis <- (1-Z)*current_b_0 + Z*current_b_1 # Data X_mu <- cbind(X, pi_x) X_tau <- X feature_types <- c(0,0,0,1,1) feature_types_mu <- as.integer(c(feature_types,0)) feature_types_tau <- as.integer(feature_types) variable_weights_mu = rep(1/ncol(X_mu), ncol(X_mu)) variable_weights_tau = rep(1/ncol(X_tau), ncol(X_tau)) forest_dataset_mu <- createForestDataset(X_mu) forest_dataset_tau <- createForestDataset(X_tau, tau_basis) outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_mu <- createForestModel(     forest_dataset_mu, feature_types_mu, num_trees_mu, nrow(X_mu),      alpha_mu, beta_mu, min_samples_leaf_mu, max_depth_mu ) forest_model_tau <- createForestModel(     forest_dataset_tau, feature_types_tau, num_trees_tau, nrow(X_tau),      alpha_tau, beta_tau, min_samples_leaf_tau, max_depth_tau )  # Container of forest samples forest_samples_mu <- createForestSamples(num_trees_mu, 1, T) active_forest_mu <- createForest(num_trees_mu, 1, T) forest_samples_tau <- createForestSamples(num_trees_tau, 1, F) active_forest_tau <- createForest(num_trees_tau, 1, F)  # Initialize the leaves of each tree in the prognostic forest active_forest_mu$prepare_for_sampler(forest_dataset_mu, outcome, forest_model_mu, 0, mean(resid)) active_forest_mu$adjust_residual(forest_dataset_mu, outcome, forest_model_mu, F, F)  # Initialize the leaves of each tree in the treatment effect forest active_forest_tau$prepare_for_sampler(forest_dataset_tau, outcome, forest_model_tau, 1, 0.) active_forest_tau$adjust_residual(forest_dataset_tau, outcome, forest_model_tau, T, F) if (num_gfr > 0){     for (i in 1:num_gfr) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              feature_types_mu, 0, current_leaf_scale_mu, variable_weights_mu,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              feature_types_tau, 1, current_leaf_scale_tau, variable_weights_tau,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } if (num_burnin + num_mcmc > 0) {     for (i in (num_gfr+1):num_samples) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng, feature_types_mu,              0, current_leaf_scale_mu, variable_weights_mu, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_mu, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng, feature_types_tau,              1, current_leaf_scale_tau, variable_weights_tau, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1          # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } # Forest predictions mu_hat <- forest_samples_mu$predict(forest_dataset_mu)*y_std + y_bar tau_hat_raw <- forest_samples_tau$predict_raw(forest_dataset_tau) tau_hat <- t(t(tau_hat_raw) * (b_1_samples - b_0_samples))*y_std y_hat <- mu_hat + tau_hat * as.numeric(Z)  # Global error variance sigma2_samples <- global_var_samples*(y_std^2)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect XBART results    Inspect warm start BART results    Inspect “adaptive coding” parameters b0b_0 b1b_1.","code":"plot(sigma2_samples[1:num_gfr], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,1:num_gfr]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,1:num_gfr]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,1:num_gfr]) - tau_x)^2) #> [1] 0.2537947 plot(sigma2_samples[(num_gfr+1):num_samples], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,(num_gfr+1):num_samples]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,(num_gfr+1):num_samples]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,(num_gfr+1):num_samples]) - tau_x)^2) #> [1] 0.3079427 plot(b_0_samples, col = \"blue\", ylab = \"Coding parameter draws\",       ylim = c(min(min(b_0_samples), min(b_1_samples)), max(max(b_0_samples), max(b_1_samples)))) points(b_1_samples, col = \"orange\") legend(\"topleft\", legend = c(\"b_0\", \"b_1\"), col = c(\"blue\", \"orange\"), pch = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Kernel Methods from Tree Ensembles in StochTree","text":"trained tree ensemble strong --sample performance admits natural motivation “distance” two samples: shared leaf membership. number leaves ensemble 1 ss (, tree 1 3 leaves, reserves numbers 1 - 3, turn tree 2 5 leaves, reserves numbers 4 - 8 label leaves, ). dataset nn observations, construct matrix WW follows:    Initialize WW matrix zeroes nn rows many columns leaves ensemble    Let s = 0    jjIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Let num_leaves number leaves tree jj       iiIN {1,…,n}\\left\\{1,\\dots,n\\right\\}:          Let k leaf tree jj maps observation ii          Set element Wi,k+s=1W_{,k+s} = 1       Let s = s + num_leaves sparse matrix WW matrix representation basis predictions ensemble (.e. integrating leaf parameters just analyzing leaf indices). ensemble mm trees, can determine proportion trees map observation leaf computing WWT/mW W^T / m. can form basis kernel function used Gaussian process regression, demonstrate . begin, load stochtree package tgp package serve point reference.","code":"library(stochtree) library(tgp) library(MASS) library(Matrix) library(mvtnorm)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-1-univariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Univariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"begin simulated example tgp package (Gramacy Taddy (2010)). data generating process (DGP) non-stationary single numeric covariate. define training set test set evaluate various approaches modeling sample outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data X_train <- seq(0,20,length=100) X_test <- seq(0,20,length=99) y_train <- (sin(pi*X_train/5) + 0.2*cos(4*pi*X_train/5)) * (X_train <= 9.6) lin_train <- X_train>9.6;  y_train[lin_train] <- -1 + X_train[lin_train]/10 y_train <- y_train + rnorm(length(y_train), sd=0.1) y_test <- (sin(pi*X_test/5) + 0.2*cos(4*pi*X_test/5)) * (X_test <= 9.6) lin_test <- X_test>9.6;  y_test[lin_test] <- -1 + X_test[lin_test]/10  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 0.0466081"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) colnames(X_train) <- colnames(X_test) <- \"x1\" mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 0.08847726"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-2-multivariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 2: Multivariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"proceed simulated “Friedman” dataset, implemented tgp.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data, add many \"noise variables\" n <- 100 friedman.df <- friedman.1.data(n=n) train_inds <- sort(sample(1:n, floor(0.8*n), replace = FALSE)) test_inds <- (1:n)[!((1:n) %in% train_inds)] X <- as.matrix(friedman.df)[,1:10] X <- cbind(X, matrix(runif(n*10), ncol = 10)) y <- as.matrix(friedman.df)[,12] + rnorm(n,0,1)*(sd(as.matrix(friedman.df)[,11])/2) X_train <- X[train_inds,] X_test <- X[test_inds,] y_train <- y[train_inds] y_test <- y[test_inds]  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 5.023593"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE use case BART kernel classical kriging perhaps unclear without empirical investigation, see later vignette kernel approach can beneficial causal inference applications.","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 3.919107"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean relatively simple covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 20 a_0 <- 1.5 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean complex covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_trees <- 20 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data (relatively simple) covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X2≥0 X2<0.25−2X2≥0.25 X2<0.52X2≥0.5 X2<0.756X2≥0.75 X2<1σ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data complex covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X4X2≥0 X2<0.25−2X4X2≥0.25 X2<0.52X4X2≥0.5 X2<0.756X4X2≥0.75 X2<1σ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6X_4 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2X_4 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2X_4 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6X_4 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6*X[,4]) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2*X[,4]) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2*X[,4]) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6*X[,4]) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-1-bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"","what":"Demo 1: Bayesian Causal Forest (BCF)","title":"Model Serialization in StochTree","text":"BCF models initially sampled constructed using bcf() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw modified version data generating process defined Hahn, Murray, Carvalho (2020). Sample BCF model.","code":"# Generate synthetic data n <- 1000 snr <- 2 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      mu_forest_params = mu_forest_params, tau_forest_params = tau_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BCF model disk.","code":"saveBCFModelToJsonFile(bcf_model, \"bcf.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BCF model disk. Check predictions align original model.","code":"bcf_model_reload <- createBCFModelFromJsonFile(\"bcf.json\") bcf_preds_reload <- predict(bcf_model_reload, X_train, Z_train, pi_train, rfx_group_ids_train, rfx_basis_train) plot(rowMeans(bcf_model$mu_hat_train), rowMeans(bcf_preds_reload$mu_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Prognostic forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$tau_hat_train), rowMeans(bcf_preds_reload$tau_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Treatment forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$y_hat_train), rowMeans(bcf_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Overall outcome\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-2-bart","dir":"Articles","previous_headings":"","what":"Demo 2: BART","title":"Model Serialization in StochTree","text":"BART models initially sampled constructed using bart() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw relatively straightforward heteroskedastic supervised learning DGP. Sample BART model.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 100,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BART model disk.","code":"saveBARTModelToJsonFile(bart_model, \"bart.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BART model disk. Check predictions align original model.","code":"bart_model_reload <- createBARTModelFromJsonFile(\"bart.json\") bart_preds_reload <- predict(bart_model_reload, X_train) plot(rowMeans(bart_model$y_hat_train), rowMeans(bart_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Mean Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bart_model$sigma_x_hat_train), rowMeans(bart_preds_reload$variance_forest_predictions),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Variance Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Mixing MCMC sampler perennial concern complex Bayesian models, BART exception. common way address concerns run multiple independent “chains” MCMC sampler, chain gets stuck different region posterior, combined samples attain better coverage full posterior. idea works classic “-root” MCMC sampler Chipman, George, McCulloch (2010), key insight Hahn (2023) XBART algorithm may used warm-start initialize multiple chains BART MCMC sampler. Operationally, two approaches implementation (setting num_gfr > 0 warm-start initialization desired), vignette demonstrate run multi-chain sampler sequentially parallel. begin, load stochtree necessary packages","code":"library(stochtree) library(foreach) library(doParallel) #> Loading required package: iterators #> Loading required package: parallel"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"data-simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Data Simulation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-sequentially","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains Sequentially","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Define high-level parameters, including number chains run number samples per chain. run 4 independent chains 5 warm-start iterations 100 MCMC iterations . Run sampler, storing resulting BART objects list Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare original ŷ\\hat{y} values","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 bart_models <- list() general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) for (i in 1:num_chains) {     bart_models[[i]] <- stochtree::bart(         X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, X_test = X_test,          leaf_basis_test = leaf_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,          general_params = general_params, mean_forest_params = mean_forest_params     ) } json_string_list <- list() for (i in 1:num_chains) {     json_string_list[[i]] <- saveBARTModelToJsonString(bart_models[[i]]) } combined_bart <- createBARTModelFromCombinedJsonString(json_string_list) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(bart_models[[i]]$y_hat_test),           rowMeans(yhat_combined[,inds_start:inds_end]),          xlab = \"original\", ylab = \"deserialized\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"use high-level parameters sequential demo. order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params   )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } #> Warning: executing %dopar% sequentially: no parallel backend registered stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"warmstarting-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Warmstarting Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"example, ran multiple parallel chains MCMC sampler starting “root” forest. Consider instead “warmstart” approach Hahn (2023), forests sampled using fast “grow--root” (GFR) algorithm several MCMC chains run using different GFR forests. use high-level parameters parallel demo. First, sample model using grow--root algorithm main R session several iterations (use forests see independent parallel chains moment). order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) xbart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = 0, num_mcmc = 0,      general_params = general_params, mean_forest_params = mean_forest_params ) xbart_model_string <- stochtree::saveBARTModelToJsonString(xbart_model) ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   bart_params <- list(sample_sigma_global = T, sample_sigma_leaf = T,                        num_trees_mean = num_trees, random_seed = random_seed)   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(       X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,        X_test = X_test, leaf_basis_test = leaf_basis_test,        num_gfr = 0, num_burnin = num_burnin, num_mcmc = num_mcmc,        general_params = general_params, mean_forest_params = mean_forest_params,        previous_model_json = xbart_model_string, previous_model_warmstart_sample_num = num_gfr - i + 1,    )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"“classic” BART model Chipman, George, McCulloch (2010) y=f(X)+ϵf(X)∼BART(α,β)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}\\left(\\alpha, \\beta\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}\\left(,b\\right) \\end{aligned} \\end{equation*} semiparametric, nonparametric tree ensemble f(X)f(X) homoskedastic error variance parameter σ2\\sigma^2. Note Chipman, George, McCulloch (2010), aa bb parameterized =ν2a = \\frac{\\nu}{2} b=νλ2b = \\frac{\\nu\\lambda}{2}.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"setting-priors-on-variance-parameters-in-stochtree","dir":"Articles","previous_headings":"","what":"Setting Priors on Variance Parameters in stochtree","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"default, stochtree employs Jeffreys’ prior σ2\\sigma^2σ2∝1σ2\\begin{equation*} \\begin{aligned} \\sigma^2 &\\propto \\frac{1}{\\sigma^2} \\end{aligned} \\end{equation*} corresponds improper prior =0a = 0 b=0b = 0. provide convenience functions users wishing set σ2\\sigma^2 prior Chipman, George, McCulloch (2010). case, ν\\nu set default 3 λ\\lambda calibrated follows: “overestimate,” σ̂2\\hat{\\sigma}^2, σ2\\sigma^2 obtained via simple linear regression yy XX λ\\lambda chosen ensure p(σ2<σ̂2)=qp(\\sigma^2 < \\hat{\\sigma}^2) = q value qq, typically set default value 0.9. done stochtree via calibrateInverseGammaErrorVariance function. Now run BART model variance parameterization Inspect --sample predictions model  Inspect posterior samples σ2\\sigma^2","code":"# Load library library(stochtree)  # Generate data n <- 500 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd)  # Test/train split test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]  # Calibrate the scale parameter for the variance term as in Chipman et al (2010) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y_train, X_train, nu = nu) general_params <- list(sigma2_global_shape = nu/2, sigma2_global_scale = (nu*lambda)/2) bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     num_gfr = 0, num_burnin = 1000, num_mcmc = 100,                     general_params = general_params) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(bart_model$sigma2_global_samples, ylab = \"sigma^2\", xlab = \"iteration\") abline(h = noise_sd^2, col = \"red\", lty = 3, lwd = 3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"demo-1-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Supervised Learning","title":"Deeper Dive on Sampled Forests in StochTree","text":"Generate sample data feature 10 “important” feature.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,10]) & (0.25 > X[,10])) * (-7.5) +      ((0.25 <= X[,10]) & (0.5 > X[,10])) * (-2.5) +      ((0.5 <= X[,10]) & (0.75 > X[,10])) * (2.5) +      ((0.75 <= X[,10]) & (1 > X[,10])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"sampling-and-analysis","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling and Analysis","title":"Deeper Dive on Sampled Forests in StochTree","text":"Run BART. Inspect MCMC samples   Check variable split count last GFR sample split counts appear relatively uniform across features, let’s dig deeper look individual trees, starting first tree last “grow--root” sample. tree single split “important” feature. Now, let’s look second tree. tree also splits important feature. see “later” trees splitting features, also note trees fitting outcome already residualized many “relevant splits” made trees 1 2. Now, let’s inspect first tree last GFR sample depth, following scikit-learn vignette","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 general_params <- list(keep_gfr = T) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params ) plot(bart_model$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) bart_model$mean_forests$get_forest_split_counts(10, p_x) #>  [1] 14 33 25 26 28 23 29 17 26 37 bart_model$mean_forests$get_aggregate_split_counts(p_x) #>  [1] 2175 2599 2824 2952 2682 2566 2700 2285 2503 3880 splits = bart_model$mean_forests$get_granular_split_counts(p_x) splits[10,1,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,2,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,20,] #>  [1] 0 0 0 0 1 0 0 0 0 0 splits[10,30,] #>  [1] 0 0 0 0 1 0 0 0 0 0 forest_num <- 9 tree_num <- 0 nodes <- sort(bart_model$mean_forests$nodes(forest_num, tree_num)) for (nid in nodes) {     if (bart_model$mean_forests$is_leaf_node(forest_num, tree_num, nid)) {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         leaf_values <- bart_model$mean_forests$node_leaf_values(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a leaf node with value=\",              format(leaf_values, digits = 3), \"\\n\", sep = \"\")     } else {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         left <- bart_model$mean_forests$left_child_node(forest_num, tree_num, nid)         feature <- bart_model$mean_forests$node_split_index(forest_num, tree_num, nid)         threshold <- bart_model$mean_forests$node_split_threshold(forest_num, tree_num, nid)         right <- bart_model$mean_forests$right_child_node(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a split node, which tells us to go to node \",              left, \" if X[:, \", feature, \"] <= \", format(threshold, digits = 3),              \" else to node \", right, \"\\n\", sep = \"\")     } } #> node=0 is a split node, which tells us to go to node 1 if X[:, 9] <= 0.496 else to node 2 #>  node=1 is a leaf node with value=-0.341 #>  node=2 is a leaf node with value=0.369"},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Drew Herren. Author, maintainer. Richard Hahn. Author. Jared Murray. Author. Carlos Carvalho. Author. Jingyu . Author. stochtree contributors. Copyright holder.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herren D, Hahn R, Murray J, Carvalho C, J (2025). stochtree: Stochastic tree ensembles (XBART BART) supervised learning causal inference. R package version 0.1.0, https://stochtree.ai.","code":"@Manual{,   title = {stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference},   author = {Drew Herren and Richard Hahn and Jared Murray and Carlos Carvalho and Jingyu He},   year = {2025},   note = {R package version 0.1.0},   url = {https://stochtree.ai}, }"},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"stochtree-r-package","dir":"","previous_headings":"","what":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"Software building stochastic tree ensembles (.e. BART, XBART) supervised learning causal inference.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"stochtree can installed CRAN via development version stochtree can installed github via","code":"install.package(\"stochtree\") remotes::install_github(\"StochasticTree/stochtree\", ref=\"r-dev\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — CppJson","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_ptr External pointer C++ nlohmann::json object num_forests Number forests nlohmann::json object forest_labels Names forest objects overall nlohmann::json object num_rfx Number random effects terms nlohman::json object rfx_container_labels Names rfx container objects overall nlohmann::json object rfx_mapper_labels Names rfx label mapper objects overall nlohmann::json object rfx_groupid_labels Names rfx group id objects overall nlohmann::json object","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"CppJson$new() CppJson$add_forest() CppJson$add_random_effects() CppJson$add_scalar() CppJson$add_integer() CppJson$add_boolean() CppJson$add_string() CppJson$add_vector() CppJson$add_integer_vector() CppJson$add_string_vector() CppJson$add_list() CppJson$add_string_list() CppJson$get_scalar() CppJson$get_integer() CppJson$get_boolean() CppJson$get_string() CppJson$get_vector() CppJson$get_integer_vector() CppJson$get_string_vector() CppJson$get_numeric_list() CppJson$get_string_list() CppJson$return_json_string() CppJson$save_file() CppJson$load_from_file() CppJson$load_from_string()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Create new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-forest-","dir":"Reference","previous_headings":"","what":"Method add_forest()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert forest container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_forest(forest_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"forest_samples ForestSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-random-effects-","dir":"Reference","previous_headings":"","what":"Method add_random_effects()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert random effects container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_random_effects(rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"rfx_samples RandomEffectSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-scalar-","dir":"Reference","previous_headings":"","what":"Method add_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_scalar(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-","dir":"Reference","previous_headings":"","what":"Method add_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Integer value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-boolean-","dir":"Reference","previous_headings":"","what":"Method add_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_boolean(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-","dir":"Reference","previous_headings":"","what":"Method add_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-vector-","dir":"Reference","previous_headings":"","what":"Method add_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-vector-","dir":"Reference","previous_headings":"","what":"Method add_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add array json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Character vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-list-","dir":"Reference","previous_headings":"","what":"Method add_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-list-","dir":"Reference","previous_headings":"","what":"Method add_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-scalar-","dir":"Reference","previous_headings":"","what":"Method get_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve scalar value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_scalar(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-","dir":"Reference","previous_headings":"","what":"Method get_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-boolean-","dir":"Reference","previous_headings":"","what":"Method get_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_boolean(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-","dir":"Reference","previous_headings":"","what":"Method get_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-vector-","dir":"Reference","previous_headings":"","what":"Method get_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-vector-","dir":"Reference","previous_headings":"","what":"Method get_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-vector-","dir":"Reference","previous_headings":"","what":"Method get_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve character vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-numeric-list-","dir":"Reference","previous_headings":"","what":"Method get_numeric_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list numeric vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_numeric_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-list-","dir":"Reference","previous_headings":"","what":"Method get_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list string vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-return-json-string-","dir":"Reference","previous_headings":"","what":"Method return_json_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert JSON object -memory string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$return_json_string()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-save-file-","dir":"Reference","previous_headings":"","what":"Method save_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Save json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$save_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-file-","dir":"Reference","previous_headings":"","what":"Method load_from_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-string-","dir":"Reference","previous_headings":"","what":"Method load_from_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_string(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Persists C++ random number generator throughout R session ensure reproducibility given random seed. seed provided, C++ random number generator initialized using std::random_device.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"rng_ptr External pointer C++ std::mt19937 class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"CppRNG$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Create new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"","code":"CppRNG$new(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores a single ensemble of decision trees (often treated as the ","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Wrapper around C++ tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_ptr External pointer C++ TreeEnsemble class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Forest$new() Forest$predict() Forest$predict_raw() Forest$set_root_leaves() Forest$prepare_for_sampler() Forest$adjust_residual() Forest$num_trees() Forest$leaf_dimension() Forest$is_constant_leaf() Forest$is_exponentiated() Forest$add_numeric_split_tree() Forest$get_tree_leaves() Forest$get_tree_split_counts() Forest$get_forest_split_counts() Forest$tree_max_depth() Forest$average_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Create new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"vector predictions many rows forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict \"raw\" leaf values (without multiplied basis) every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array vector (length number observations). case multivariate leaf regression, array matrix (number observations leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$set_root_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$adjust_residual(dataset, outcome, forest_model, requires_basis, add)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return number trees ensemble Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return output dimension trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return constant leaf status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return exponentiation status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$add_numeric_split_tree(   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_leaves(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable given tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_split_counts(tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_forest_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method tree_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum depth specific tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$tree_max_depth(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Tree index within forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a forest — ForestDataset","title":"Dataset used to sample a forest — ForestDataset","text":"dataset consists three matrices / vectors: covariates, bases, variance weights. basis vector variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a forest — ForestDataset","text":"data_ptr External pointer C++ ForestDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a forest — ForestDataset","text":"ForestDataset$new() ForestDataset$update_basis() ForestDataset$num_observations() ForestDataset$num_covariates() ForestDataset$num_basis() ForestDataset$has_basis() ForestDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a forest — ForestDataset","text":"Create new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-update-basis-","dir":"Reference","previous_headings":"","what":"Method update_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Update basis matrix dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$update_basis(basis)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"basis Updated matrix bases used define leaf regression","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number observations ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-covariates-","dir":"Reference","previous_headings":"","what":"Method num_covariates()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number covariates ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_covariates()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Covariate count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-basis-","dir":"Reference","previous_headings":"","what":"Method num_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number bases ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Basis count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines and samples a forest model — ForestModel","title":"Class that defines and samples a forest model — ForestModel","text":"Hosts C++ data structures needed sample ensemble decision trees, exposes functionality run forest sampler (using either MCMC grow--root algorithm).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines and samples a forest model — ForestModel","text":"tracker_ptr External pointer C++ ForestTracker class tree_prior_ptr External pointer C++ TreePrior class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines and samples a forest model — ForestModel","text":"ForestModel$new() ForestModel$sample_one_iteration() ForestModel$propagate_basis_update() ForestModel$propagate_residual_update() ForestModel$update_alpha() ForestModel$update_beta() ForestModel$update_min_samples_leaf() ForestModel$update_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines and samples a forest model — ForestModel","text":"Create new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$new(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth = -1 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree can reach","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-sample-one-iteration-","dir":"Reference","previous_headings":"","what":"Method sample_one_iteration()","title":"Class that defines and samples a forest model — ForestModel","text":"Run single iteration forest sampling algorithm (MCMC GFR)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$sample_one_iteration(   forest_dataset,   residual,   forest_samples,   active_forest,   rng,   feature_types,   leaf_model_int,   leaf_model_scale,   variable_weights,   a_forest,   b_forest,   global_scale,   cutpoint_grid_size = 500,   keep_forest = T,   gfr = T,   pre_initialized = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset Dataset used sample forest residual Outcome used sample forest forest_samples Container forest samples active_forest \"Active\" forest updated sampler iteration rng Wrapper around C++ random number generator feature_types Vector specifying type p covariates forest_dataset (0 = numeric, 1 = ordered categorical, 2 = unordered categorical) leaf_model_int Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression) leaf_model_scale Scale parameter used leaf node model (q x q matrix q dimensionality basis >1 leaf_model_int = 2) variable_weights Vector specifying sampling probability p covariates forest_dataset a_forest Shape parameter variance forest model (applicable) b_forest Scale parameter variance forest model (applicable) global_scale Global variance parameter cutpoint_grid_size (Optional) Number unique cutpoints consider (default: 500, currently used GFR = TRUE) keep_forest (Optional) Whether updated forest sample saved forest_samples. Default: T. gfr (Optional) Whether forest sampled using \"grow--root\" (GFR) algorithm. Default: T. pre_initialized (Optional) Whether leaves pre-initialized outside sampling loop (samples drawn). multi-forest implementations like BCF, true, though single-forest supervised learning implementation, can let C++ initialization. Default: F.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-basis-update-","dir":"Reference","previous_headings":"","what":"Method propagate_basis_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Propagates basis update (full/partial) residual iteratively () adding back previous prediction tree, (b) recomputing predictions tree (caching C++ side), (c) subtracting new predictions residual. useful cases basis (e.g. leaf regression) updated outside tree sampler (e.g. adaptive coding binary treatment BCF). basis updated, overall \"function\" represented tree model changed reflected residual next sampling loop run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_basis_update(dataset, outcome, active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions active_forest \"Active\" forest updated sampler iteration","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-residual-update-","dir":"Reference","previous_headings":"","what":"Method propagate_residual_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Update current state outcome (.e. partial residual) data subtracting current predictions tree. function run Outcome class's update_data method, overwrites partial residual entirely new stream outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_residual_update(residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"residual Outcome used sample forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Class that defines and samples a forest model — ForestModel","text":"Update alpha tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"alpha New value alpha used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Class that defines and samples a forest model — ForestModel","text":"Update beta tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"beta New value beta used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Class that defines and samples a forest model — ForestModel","text":"Update min_samples_leaf tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"min_samples_leaf New value min_samples_leaf used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Class that defines and samples a forest model — ForestModel","text":"Update max_depth tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"max_depth New value max_depth used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — ForestSamples","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_container_ptr External pointer C++ ForestContainer class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ForestSamples$new() ForestSamples$load_from_json() ForestSamples$append_from_json() ForestSamples$load_from_json_string() ForestSamples$append_from_json_string() ForestSamples$predict() ForestSamples$predict_raw() ForestSamples$predict_raw_single_forest() ForestSamples$predict_raw_single_tree() ForestSamples$set_root_leaves() ForestSamples$prepare_for_sampler() ForestSamples$adjust_residual() ForestSamples$save_json() ForestSamples$load_json() ForestSamples$num_samples() ForestSamples$num_trees() ForestSamples$leaf_dimension() ForestSamples$is_constant_leaf() ForestSamples$is_exponentiated() ForestSamples$add_forest_with_constant_leaves() ForestSamples$add_numeric_split_tree() ForestSamples$get_tree_leaves() ForestSamples$get_tree_split_counts() ForestSamples$get_forest_split_counts() ForestSamples$get_aggregate_split_counts() ForestSamples$get_granular_split_counts() ForestSamples$ensemble_tree_max_depth() ForestSamples$average_ensemble_max_depth() ForestSamples$average_max_depth() ForestSamples$num_forest_leaves() ForestSamples$sum_leaves_squared() ForestSamples$is_leaf_node() ForestSamples$is_numeric_split_node() ForestSamples$is_categorical_split_node() ForestSamples$parent_node() ForestSamples$left_child_node() ForestSamples$right_child_node() ForestSamples$node_depth() ForestSamples$node_split_index() ForestSamples$node_split_threshold() ForestSamples$node_split_categories() ForestSamples$node_leaf_values() ForestSamples$num_nodes() ForestSamples$num_leaves() ForestSamples$num_leaf_parents() ForestSamples$num_split_nodes() ForestSamples$nodes() ForestSamples$leaves() ForestSamples$delete_sample()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns samples ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array two-dimensional (number observations, number forest samples). case multivariate leaf regression, array three-dimension (number observations, leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-forest-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_forest()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_forest(forest_dataset, forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-tree-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific tree specific forest every observation forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_tree(forest_dataset, forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$set_root_leaves(forest_num, leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest sample within container. leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$adjust_residual(   dataset,   outcome,   forest_model,   requires_basis,   forest_num,   add )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction forest_num Index forest used update residuals add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-save-json-","dir":"Reference","previous_headings":"","what":"Method save_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Store trees metadata ForestDataset class json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$save_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name output json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-json-","dir":"Reference","previous_headings":"","what":"Method load_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Load trees metadata ensemble json file. Note trees metadata already present ForestDataset class overwritten.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name model input json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-samples-","dir":"Reference","previous_headings":"","what":"Method num_samples()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number samples ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sample count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number trees ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return output dimension trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return constant leaf status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return exponentiation status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-forest-with-constant-leaves-","dir":"Reference","previous_headings":"","what":"Method add_forest_with_constant_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add new -root ensemble container, leaves set value / vector provided","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_forest_with_constant_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"leaf_value Value (vector values) initialize root nodes tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_numeric_split_tree(   forest_num,   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree split tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_split_counts(forest_num, tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_forest_split_counts(forest_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-aggregate-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_aggregate_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, aggregated across ensembles trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_aggregate_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-granular-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_granular_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, reported separately ensemble tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_granular_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-ensemble-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method ensemble_tree_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum depth specific tree specific ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$ensemble_tree_max_depth(ensemble_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number tree_num Tree index within ensemble ensemble_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-ensemble-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_ensemble_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_ensemble_max_depth(ensemble_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-forest-leaves-","dir":"Reference","previous_headings":"","what":"Method num_forest_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_forest_leaves(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count leaves ensemble stored forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-sum-leaves-squared-","dir":"Reference","previous_headings":"","what":"Method sum_leaves_squared()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sum squared (raw) leaf values given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$sum_leaves_squared(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-leaf-node-","dir":"Reference","previous_headings":"","what":"Method is_leaf_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_leaf_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node leaf, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-numeric-split-node-","dir":"Reference","previous_headings":"","what":"Method is_numeric_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples numeric split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_numeric_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node numeric split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-categorical-split-node-","dir":"Reference","previous_headings":"","what":"Method is_categorical_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples categorical split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_categorical_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node categorical split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-parent-node-","dir":"Reference","previous_headings":"","what":"Method parent_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Parent node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$parent_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID parent node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-left-child-node-","dir":"Reference","previous_headings":"","what":"Method left_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Left child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$left_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID left child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-right-child-node-","dir":"Reference","previous_headings":"","what":"Method right_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Right child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$right_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID right child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-depth-","dir":"Reference","previous_headings":"","what":"Method node_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Depth given node given tree given forest ForestSamples object, 0 depth root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_depth(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-index-","dir":"Reference","previous_headings":"","what":"Method node_split_index()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Split index given node given tree given forest ForestSamples object. Returns -1 node leaf.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_index(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-threshold-","dir":"Reference","previous_headings":"","what":"Method node_split_threshold()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defines numeric split given node given tree given forest ForestSamples object. Returns Inf node leaf categorical split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_threshold(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-categories-","dir":"Reference","previous_headings":"","what":"Method node_split_categories()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array category indices define categorical split given node given tree given forest ForestSamples object. Returns c(Inf) node leaf numeric split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_categories(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Categories defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-leaf-values-","dir":"Reference","previous_headings":"","what":"Method node_leaf_values()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node value(s) given node given tree given forest ForestSamples object. Values stale node split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_leaf_values(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Vector (often univariate) leaf values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-nodes-","dir":"Reference","previous_headings":"","what":"Method num_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaves-","dir":"Reference","previous_headings":"","what":"Method num_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaves","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaf-parents-","dir":"Reference","previous_headings":"","what":"Method num_leaf_parents()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaf parents (split nodes two leaves children) given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaf_parents(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaf parents","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-split-nodes-","dir":"Reference","previous_headings":"","what":"Method num_split_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number split nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_split_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree split nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-nodes-","dir":"Reference","previous_headings":"","what":"Method nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array node indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaves-","dir":"Reference","previous_headings":"","what":"Method leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array leaf indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices leaf nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Modify ForestSamples object removing forest sample indexed `forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$delete_sample(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome / partial residual used to sample an additive model. — Outcome","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome class wrapper around vector (mutable) outcomes ML tasks (supervised learning, causal inference). additive tree ensemble sampled, outcome used sample specific model term \"partial residual\" consisting outcome minus predictions every model term (trees, group random effects, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"data_ptr External pointer C++ Outcome class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Outcome$new() Outcome$get_data() Outcome$add_vector() Outcome$subtract_vector() Outcome$update_data()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Create new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$new(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Extract raw data R underlying C++ object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$get_data()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"R vector containing (copy ) values Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data adding values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$add_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector added outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-subtract-vector-","dir":"Reference","previous_headings":"","what":"Method subtract_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data subtracting values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$subtract_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector subtracted outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-update-data-","dir":"Reference","previous_headings":"","what":"Method update_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data replacing element elements new_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$update_data(new_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new_vector Vector overwrite current data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps the ","title":"Class that wraps the ","text":"Coordinates various C++ random effects classes persists needed prediction / serialization","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps the ","text":"rfx_container_ptr External pointer C++ StochTree::RandomEffectsContainer class label_mapper_ptr External pointer C++ StochTree::LabelMapper class training_group_ids Unique vector group IDs training dataset","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps the ","text":"RandomEffectSamples$new() RandomEffectSamples$load_in_session() RandomEffectSamples$load_from_json() RandomEffectSamples$append_from_json() RandomEffectSamples$load_from_json_string() RandomEffectSamples$append_from_json_string() RandomEffectSamples$predict() RandomEffectSamples$extract_parameter_samples() RandomEffectSamples$delete_sample() RandomEffectSamples$extract_label_mapping()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps the ","text":"Create new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-in-session-","dir":"Reference","previous_headings":"","what":"Method load_in_session()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object \"-session\" R objects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_in_session(   num_components,   num_groups,   random_effects_tracker )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that wraps the ","text":"Predict random effects observation implied rfx_group_ids rfx_basis. random effects model \"intercept-\" rfx_basis vector ones size length(rfx_group_ids).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$predict(rfx_group_ids, rfx_basis = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"rfx_group_ids Indices random effects groups prediction set rfx_basis (Optional ) Basis used random effects prediction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"Matrix many rows observations provided many columns samples drawn model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-parameter-samples-","dir":"Reference","previous_headings":"","what":"Method extract_parameter_samples()","title":"Class that wraps the ","text":"Extract random effects parameters sampled. \"redundant parameterization\" Gelman et al (2008), includes four parameters: alpha (\"working parameter\" shared across every group), xi (\"group parameter\" sampled separately group), beta (product alpha xi, corresponds overall group-level random effects), sigma (group-independent prior variance component xi).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_parameter_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that wraps the ","text":"Modify RandomEffectsSamples object removing parameter samples index sample_num.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$delete_sample(sample_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"sample_num Index RFX sample removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-label-mapping-","dir":"Reference","previous_headings":"","what":"Method extract_label_mapping()","title":"Class that wraps the ","text":"Convert mapping group IDs random effect components indices C++ R native format","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_label_mapping()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List mapping group ID random effect components.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a random effects model — RandomEffectsDataset","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"dataset consists three matrices / vectors: group labels, bases, variance weights. Variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"data_ptr External pointer C++ RandomEffectsDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"RandomEffectsDataset$new() RandomEffectsDataset$num_observations() RandomEffectsDataset$has_group_labels() RandomEffectsDataset$has_basis() RandomEffectsDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Create new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$new(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Return number observations RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-group-labels-","dir":"Reference","previous_headings":"","what":"Method has_group_labels()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset group label indices","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_group_labels()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True group label vector loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"The core ","title":"The core ","text":"Stores current model state, prior parameters, procedures sampling conditional posterior parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The core ","text":"rfx_model_ptr External pointer C++ StochTree::RandomEffectsModel class num_groups Number groups random effects model num_components Number components (.e. dimension basis) random effects model","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The core ","text":"RandomEffectsModel$new() RandomEffectsModel$sample_random_effect() RandomEffectsModel$predict() RandomEffectsModel$set_working_parameter() RandomEffectsModel$set_group_parameters() RandomEffectsModel$set_working_parameter_cov() RandomEffectsModel$set_group_parameter_cov() RandomEffectsModel$set_variance_prior_shape() RandomEffectsModel$set_variance_prior_scale()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The core ","text":"Create new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$new(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-sample-random-effect-","dir":"Reference","previous_headings":"","what":"Method sample_random_effect()","title":"The core ","text":"Sample random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$sample_random_effect(   rfx_dataset,   residual,   rfx_tracker,   rfx_samples,   keep_sample,   global_variance,   rng )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset residual Object type Outcome rfx_tracker Object type RandomEffectsTracker rfx_samples Object type RandomEffectSamples keep_sample Whether sample retained rfx_samples. FALSE, state rfx_tracker updated, parameter values added sample container. Samples commonly discarded due burn-thinning. global_variance Scalar global variance parameter rng Object type CppRNG","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"The core ","text":"Predict (single sample ) random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$predict(rfx_dataset, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset rfx_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"Vector predictions size matching number observations rfx_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter()","title":"The core ","text":"Set value \"working parameter.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameters-","dir":"Reference","previous_headings":"","what":"Method set_group_parameters()","title":"The core ","text":"Set value \"group parameters.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameters(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter_cov()","title":"The core ","text":"Set value working parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_group_parameter_cov()","title":"The core ","text":"Set value group parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-shape-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_shape()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_shape(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-scale-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_scale()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_scale(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines a ","title":"Class that defines a ","text":"Stores mapping every observation group index, mapping group indices training sample observations available group, predictions observation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines a ","text":"rfx_tracker_ptr External pointer C++ StochTree::RandomEffectsTracker class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines a ","text":"RandomEffectsTracker$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines a ","text":"Create new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines a ","text":"","code":"RandomEffectsTracker$new(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines a ","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines a ","text":"new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the BART algorithm for supervised learning. — bart","title":"Run the BART algorithm for supervised learning. — bart","text":"Run BART algorithm supervised learning.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"bart(   X_train,   y_train,   leaf_basis_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   leaf_basis_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mean_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the BART algorithm for supervised learning. — bart","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). y_train Outcome modeled ensemble. leaf_basis_train (Optional) Bases used define regression model y ~ W leaf regression tree. default, BART assumes constant leaf node parameters, implicitly regressing constant basis ones (.e. y ~ 1). rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. leaf_basis_test (Optional) Test set bases used define \"sample\" evaluation data. test set optional, structure provided test set must match training set (.e. X_train leaf_basis_train provided, test set must consist X_test leaf_basis_test number columns). rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BART model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BART sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var(y_train), y_train possibly standardized outcome, set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mean_forest_params (Optional) list mean forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional mean model. Default: 200. num_trees = 0, conditional mean modeled using forest, function proceed num_trees > 0 variance forest. alpha Prior probability splitting tree depth 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, mean model. Default: 5. max_depth Maximum depth tree ensemble mean model. Default: 10. Can overridden -1 enforce depth limits trees. sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(leaf_basis_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. var_forest_leaf_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var(y_train))/num_trees, y_train possibly standardized outcome, set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the BART algorithm for supervised learning. — bart","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"Run Bayesian Causal Forest (BCF) algorithm regularized causal effect estimation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"bcf(   X_train,   Z_train,   y_train,   propensity_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   Z_test = NULL,   propensity_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mu_forest_params = list(),   tau_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). Z_train Vector (continuous binary) treatment assignments. y_train Outcome modeled ensemble. propensity_train (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. Z_test (Optional) Test set (continuous binary) treatment assignments. propensity_test (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BCF model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BCF sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var((y_train-mean(y_train))/sd(y_train)) set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). workaround wish provide custom weight propensity score include column X_train set propensity_covariate 'none' adjust keep_vars accordingly mu tau forests. propensity_covariate Whether include propensity score covariate either forests. Enter \"none\" neither, \"mu\" prognostic forest, \"tau\" treatment forest, \"\" forests. \"none\" propensity score provided, estimated (X_train, Z_train) using stochtree::bart(). Default: \"mu\". adaptive_coding Whether use \"adaptive coding\" scheme binary treatment variable coded manually (0,1) (-1,1) learned via parameters b_0 b_1 attach outcome model [b_0 (1-Z) + b_1 Z] tau(X). ignored Z binary. Default: TRUE. control_coding_init Initial value \"control\" group coding parameter. ignored Z binary. Default: -0.5. treated_coding_init Initial value \"treatment\" group coding parameter. ignored Z binary. Default: 0.5. rfx_prior_var Prior (diagonals ) covariance additive group-level random regression coefficients. Must vector length ncol(rfx_basis_train). Default: rep(1, ncol(rfx_basis_train)) random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mu_forest_params (Optional) list prognostic forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble prognostic forest. Default: 250. Must positive integer. alpha Prior probability splitting tree depth 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, prognostic forest. Default: 5. max_depth Maximum depth tree ensemble prognostic forest. Default: 10. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable prognostic forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. tau_forest_params (Optional) list treatment effect forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble treatment effect forest. Default: 50. Must positive integer. alpha Prior probability splitting tree depth 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.25. beta Exponent decreases split probabilities nodes depth > 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 3. min_samples_leaf Minimum allowable size leaf, terms training samples, treatment effect forest. Default: 5. max_depth Maximum depth tree ensemble treatment effect forest. Default: 5. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable treatment effect forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(Z_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. variance_forest_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var((y_train-mean(y_train))/sd(y_train)))/num_trees set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, X_test = X_test, Z_test = Z_test,                   propensity_test = pi_test) plot(rowMeans(bcf_model$mu_hat_test), mu_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(bcf_model$tau_hat_test), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Chipman, H., George, E., Hahn, R., McCulloch, R., Pratola, M. Sparapani, R. (2022). Bayesian Additive Regression Trees, Computational Approaches. Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri J.L. Teugels). https://doi.org/10.1002/9781118445112.stat08288","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"calibrateInverseGammaErrorVariance(   y,   X,   W = NULL,   nu = 3,   quant = 0.9,   standardize = TRUE )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"y Outcome modeled using BART, BCF another nonparametric ensemble method. X Covariates used partition trees ensemble series ensemble. W (Optional) Basis used define \"leaf regression\" model decision tree. \"classic\" BART model assumes constant leaf parameter, equivalent \"leaf regression\" basis ones, though necessary pass vector ones, BART function. Default: NULL. nu shape parameter global error variance's IG prior. scale parameter Sparapani et al (2021) parameterization defined nu*lambda lambda output function. Default: 3. quant (Optional) Quantile inverse gamma prior distribution represented linear-regression-based overestimate sigma^2. Default: 0.9. standardize (Optional) Whether outcome standardized ((y-mean(y))/sd(y)) calibration lambda. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Value lambda determines scale parameter global error variance prior (sigma^2 ~ IG(nu,nu*lambda))","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) y <- 10*X[,1] - 20*X[,2] + rnorm(n) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y, X, nu = nu) sigma2hat <- mean(resid(lm(y~X))^2) mean(var(y)/rgamma(100000, nu, rate = nu*lambda) < sigma2hat) #> [1] 0.90021"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf indices — computeForestLeafIndices","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"Compute return vector representation forest's leaf predictions every observation dataset. vector \"row-major\" format can easily re-represented CSR sparse matrix: elements organized first n elements correspond leaf predictions n observations dataset first tree ensemble, next n elements correspond predictions second tree . \"data\" element corresponds uniquely mapped column index corresponds single leaf single tree (.e. tree 1 3 leaves, column indices range 0 2, tree 2's leaf indices begin 3, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"computeForestLeafIndices(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"List vectors. vector size num_obs * num_trees, num_obs = nrow(covariates) num_trees number trees relevant forest model_object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafIndices(bart_model, X, \"mean\") #>          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>     [1,]    1    1    1    1    1    1    1    1    0     0 #>     [2,]    1    1    1    1    1    1    1    1    0     0 #>     [3,]    0    0    0    0    0    0    0    0    2     2 #>     [4,]    0    0    0    0    0    0    0    0    2     2 #>     [5,]    0    0    0    0    0    0    0    0    2     2 #>     [6,]    1    1    1    1    1    1    1    1    0     0 #>     [7,]    0    0    0    0    0    0    0    0    2     2 #>     [8,]    0    0    0    0    0    0    0    0    2     2 #>     [9,]    0    0    0    0    0    0    0    0    2     2 #>    [10,]    0    0    0    0    0    0    0    0    2     2 #>    [11,]    1    1    1    1    1    1    1    1    0     0 #>    [12,]    0    0    0    0    0    0    0    0    2     2 #>    [13,]    1    1    1    1    1    1    1    1    0     0 #>    [14,]    1    1    1    1    1    1    1    1    0     0 #>    [15,]    1    1    1    1    1    1    1    1    0     0 #>    [16,]    1    1    1    1    1    1    1    1    0     0 #>    [17,]    1    1    1    1    1    1    1    1    0     0 #>    [18,]    0    0    0    0    0    0    0    0    2     2 #>    [19,]    0    0    0    0    0    0    0    0    2     2 #>    [20,]    0    0    0    0    0    0    0    0    2     2 #>    [21,]    1    1    1    1    1    1    1    1    0     0 #>    [22,]    1    1    1    1    1    1    1    1    0     0 #>    [23,]    0    0    0    0    0    0    0    0    2     2 #>    [24,]    0    0    0    0    0    0    0    0    2     2 #>    [25,]    0    0    0    0    0    0    0    0    1     1 #>    [26,]    1    1    1    1    1    1    1    1    0     0 #>    [27,]    1    1    1    1    1    1    1    1    0     0 #>    [28,]    0    0    0    0    0    0    0    0    2     2 #>    [29,]    1    1    1    1    1    1    1    1    0     0 #>    [30,]    0    0    0    0    0    0    0    0    2     2 #>    [31,]    0    0    0    0    0    0    0    0    2     2 #>    [32,]    0    0    0    0    0    0    0    0    2     2 #>    [33,]    1    1    1    1    1    1    1    1    0     0 #>    [34,]    0    0    0    0    0    0    0    0    2     2 #>    [35,]    1    1    1    1    1    1    1    1    0     0 #>    [36,]    0    0    0    0    0    0    0    0    2     2 #>    [37,]    1    1    1    1    1    1    1    1    0     0 #>    [38,]    0    0    0    0    0    0    0    0    2     2 #>    [39,]    0    0    0    0    0    0    0    0    2     2 #>    [40,]    0    0    0    0    0    0    0    0    2     2 #>    [41,]    1    1    1    1    1    1    1    1    0     0 #>    [42,]    0    0    0    0    0    0    0    0    2     2 #>    [43,]    0    0    0    0    0    0    0    0    2     2 #>    [44,]    1    1    1    1    1    1    1    1    0     0 #>    [45,]    0    0    0    0    0    0    0    0    2     2 #>    [46,]    0    0    0    0    0    0    0    0    2     2 #>    [47,]    1    1    1    1    1    1    1    1    0     0 #>    [48,]    0    0    0    0    0    0    0    0    2     2 #>    [49,]    0    0    0    0    0    0    0    0    2     2 #>    [50,]    1    1    1    1    1    1    1    1    0     0 #>    [51,]    0    0    0    0    0    0    0    0    2     2 #>    [52,]    1    1    1    1    1    1    1    1    0     0 #>    [53,]    0    0    0    0    0    0    0    0    2     2 #>    [54,]    0    0    0    0    0    0    0    0    2     2 #>    [55,]    0    0    0    0    0    0    0    0    2     2 #>    [56,]    0    0    0    0    0    0    0    0    1     1 #>    [57,]    0    0    0    0    0    0    0    0    2     2 #>    [58,]    1    1    1    1    1    1    1    1    0     0 #>    [59,]    1    1    1    1    1    1    1    1    0     0 #>    [60,]    0    0    0    0    0    0    0    0    2     2 #>    [61,]    1    1    1    1    1    1    1    1    0     0 #>    [62,]    0    0    0    0    0    0    0    0    2     2 #>    [63,]    0    0    0    0    0    0    0    0    2     2 #>    [64,]    0    0    0    0    0    0    0    0    2     2 #>    [65,]    0    0    0    0    0    0    0    0    1     1 #>    [66,]    0    0    0    0    0    0    0    0    2     2 #>    [67,]    0    0    0    0    0    0    0    0    2     2 #>    [68,]    1    1    1    1    1    1    1    1    0     0 #>    [69,]    0    0    0    0    0    0    0    0    2     2 #>    [70,]    1    1    1    1    1    1    1    1    0     0 #>    [71,]    1    1    1    1    1    1    1    1    0     0 #>    [72,]    0    0    0    0    0    0    0    0    2     2 #>    [73,]    1    1    1    1    1    1    1    1    0     0 #>    [74,]    0    0    0    0    0    0    0    0    2     2 #>    [75,]    1    1    1    1    1    1    1    1    0     0 #>    [76,]    1    1    1    1    1    1    1    1    0     0 #>    [77,]    1    1    1    1    1    1    1    1    0     0 #>    [78,]    0    0    0    0    0    0    0    0    2     2 #>    [79,]    1    1    1    1    1    1    1    1    0     0 #>    [80,]    0    0    0    0    0    0    0    0    1     1 #>    [81,]    1    1    1    1    1    1    1    1    0     0 #>    [82,]    0    0    0    0    0    0    0    0    2     2 #>    [83,]    1    1    1    1    1    1    1    1    0     0 #>    [84,]    1    1    1    1    1    1    1    1    0     0 #>    [85,]    0    0    0    0    0    0    0    0    1     1 #>    [86,]    1    1    1    1    1    1    1    1    0     0 #>    [87,]    1    1    1    1    1    1    1    1    0     0 #>    [88,]    0    0    0    0    0    0    0    0    2     2 #>    [89,]    0    0    0    0    0    0    0    0    2     2 #>    [90,]    1    1    1    1    1    1    1    1    0     0 #>    [91,]    0    0    0    0    0    0    0    0    2     2 #>    [92,]    0    0    0    0    0    0    0    0    2     2 #>    [93,]    1    1    1    1    1    1    1    1    0     0 #>    [94,]    1    1    1    1    1    1    1    1    0     0 #>    [95,]    0    0    0    0    0    0    0    0    2     2 #>    [96,]    1    1    1    1    1    1    1    1    0     0 #>    [97,]    1    1    1    1    1    1    1    1    0     0 #>    [98,]    0    0    0    0    0    0    0    0    2     2 #>    [99,]    1    1    1    1    1    1    1    1    0     0 #>   [100,]    1    1    1    1    1    1    1    1    0     0 #>   [101,]    2    2    2    2    2    2    2    3    4     3 #>   [102,]    2    2    2    2    2    2    2    2    3     5 #>   [103,]    2    2    2    2    2    2    2    2    3     5 #>   [104,]    2    2    2    2    2    2    2    2    3     4 #>   [105,]    2    2    2    2    2    2    2    2    3     5 #>   [106,]    2    2    2    2    2    2    2    2    3     5 #>   [107,]    3    3    3    3    3    3    2    2    3     5 #>   [108,]    2    2    2    2    2    2    2    2    3     4 #>   [109,]    2    2    2    2    2    2    2    3    4     3 #>   [110,]    3    3    3    3    3    3    2    2    3     5 #>   [111,]    2    2    2    2    2    2    2    2    3     4 #>   [112,]    2    2    2    2    2    2    2    2    3     5 #>   [113,]    2    2    2    2    2    2    2    3    4     3 #>   [114,]    2    2    2    2    2    2    2    2    3     4 #>   [115,]    2    2    2    2    2    2    2    2    3     4 #>   [116,]    3    3    3    3    3    3    2    2    3     5 #>   [117,]    2    2    2    2    2    2    2    3    4     3 #>   [118,]    2    2    2    2    2    2    2    3    4     3 #>   [119,]    2    2    2    2    2    2    2    2    3     5 #>   [120,]    3    3    3    3    3    3    2    2    3     5 #>   [121,]    2    2    2    2    2    2    2    2    3     4 #>   [122,]    2    2    2    2    2    2    2    2    3     4 #>   [123,]    2    2    2    2    2    2    2    2    3     5 #>   [124,]    3    3    3    3    3    3    2    2    3     5 #>   [125,]    2    2    2    2    2    2    2    2    3     5 #>   [126,]    2    2    2    2    2    2    2    2    3     5 #>   [127,]    2    2    2    2    2    2    2    3    4     3 #>   [128,]    3    3    3    3    3    3    2    2    3     5 #>   [129,]    2    2    2    2    2    2    2    2    3     5 #>   [130,]    2    2    2    2    2    2    2    2    3     4 #>   [131,]    2    2    2    2    2    2    2    2    3     5 #>   [132,]    2    2    2    2    2    2    2    2    3     5 #>   [133,]    2    2    2    2    2    2    2    2    3     5 #>   [134,]    2    2    2    2    2    2    2    2    3     5 #>   [135,]    2    2    2    2    2    2    2    2    3     4 #>   [136,]    2    2    2    2    2    2    2    3    4     3 #>   [137,]    2    2    2    2    2    2    2    2    3     5 #>   [138,]    2    2    2    2    2    2    2    2    3     5 #>   [139,]    2    2    2    2    2    2    2    2    3     5 #>   [140,]    2    2    2    2    2    2    2    2    3     5 #>   [141,]    2    2    2    2    2    2    2    2    3     5 #>   [142,]    2    2    2    2    2    2    2    3    4     3 #>   [143,]    2    2    2    2    2    2    2    2    3     4 #>   [144,]    2    2    2    2    2    2    2    2    3     4 #>   [145,]    2    2    2    2    2    2    2    2    3     4 #>   [146,]    2    2    2    2    2    2    2    2    3     4 #>   [147,]    2    2    2    2    2    2    2    2    3     5 #>   [148,]    2    2    2    2    2    2    2    2    3     5 #>   [149,]    2    2    2    2    2    2    2    2    3     4 #>   [150,]    3    3    3    3    3    3    2    2    3     5 #>   [151,]    2    2    2    2    2    2    2    3    4     3 #>   [152,]    3    3    3    3    3    3    2    2    3     4 #>   [153,]    2    2    2    2    2    2    2    3    4     3 #>   [154,]    3    3    3    3    3    3    2    2    3     4 #>   [155,]    2    2    2    2    2    2    2    2    3     4 #>   [156,]    2    2    2    2    2    2    2    3    4     3 #>   [157,]    2    2    2    2    2    2    2    2    3     5 #>   [158,]    2    2    2    2    2    2    2    2    3     4 #>   [159,]    2    2    2    2    2    2    2    2    3     5 #>   [160,]    2    2    2    2    2    2    2    2    3     5 #>   [161,]    2    2    2    2    2    2    2    2    3     5 #>   [162,]    2    2    2    2    2    2    2    2    3     4 #>   [163,]    2    2    2    2    2    2    2    2    3     5 #>   [164,]    2    2    2    2    2    2    2    2    3     5 #>   [165,]    2    2    2    2    2    2    2    3    4     3 #>   [166,]    2    2    2    2    2    2    2    3    4     3 #>   [167,]    2    2    2    2    2    2    2    2    3     4 #>   [168,]    2    2    2    2    2    2    2    2    3     4 #>   [169,]    2    2    2    2    2    2    2    2    3     4 #>   [170,]    2    2    2    2    2    2    2    2    3     5 #>   [171,]    2    2    2    2    2    2    2    2    3     5 #>   [172,]    2    2    2    2    2    2    2    2    3     5 #>   [173,]    2    2    2    2    2    2    2    2    3     5 #>   [174,]    2    2    2    2    2    2    2    2    3     4 #>   [175,]    2    2    2    2    2    2    2    2    3     5 #>   [176,]    3    3    3    3    3    3    2    2    3     5 #>   [177,]    2    2    2    2    2    2    2    2    3     5 #>   [178,]    2    2    2    2    2    2    2    2    3     5 #>   [179,]    2    2    2    2    2    2    2    3    4     3 #>   [180,]    2    2    2    2    2    2    2    2    3     4 #>   [181,]    2    2    2    2    2    2    2    2    3     4 #>   [182,]    2    2    2    2    2    2    2    3    4     3 #>   [183,]    2    2    2    2    2    2    2    3    4     3 #>   [184,]    2    2    2    2    2    2    2    3    4     3 #>   [185,]    2    2    2    2    2    2    2    2    3     4 #>   [186,]    3    3    3    3    3    3    2    2    3     5 #>   [187,]    2    2    2    2    2    2    2    3    4     3 #>   [188,]    2    2    2    2    2    2    2    2    3     4 #>   [189,]    2    2    2    2    2    2    2    2    3     4 #>   [190,]    2    2    2    2    2    2    2    2    3     4 #>   [191,]    3    3    3    3    3    3    2    3    4     3 #>   [192,]    2    2    2    2    2    2    2    2    3     4 #>   [193,]    2    2    2    2    2    2    2    3    4     3 #>   [194,]    2    2    2    2    2    2    2    3    4     3 #>   [195,]    2    2    2    2    2    2    2    2    3     4 #>   [196,]    2    2    2    2    2    2    2    2    3     4 #>   [197,]    2    2    2    2    2    2    2    2    3     5 #>   [198,]    2    2    2    2    2    2    2    2    3     5 #>   [199,]    2    2    2    2    2    2    2    2    3     4 #>   [200,]    2    2    2    2    2    2    2    2    3     5 #>   [201,]    4    4    4    4    4    4    3    4    5     6 #>   [202,]    4    4    4    4    4    4    3    4    5     6 #>   [203,]    4    4    4    4    4    4    3    4    5     6 #>   [204,]    5    5    5    5    5    5    4    5    6     7 #>   [205,]    4    4    4    4    4    4    3    4    5     6 #>   [206,]    5    5    5    5    5    5    4    5    6     7 #>   [207,]    4    4    4    4    4    4    3    4    5     6 #>   [208,]    4    4    4    4    4    4    3    4    5     6 #>   [209,]    5    5    5    5    5    6    4    5    6     7 #>   [210,]    5    5    5    5    5    6    4    5    6     7 #>   [211,]    5    5    5    5    5    5    4    5    6     7 #>   [212,]    5    5    5    5    5    6    4    5    6     7 #>   [213,]    4    4    4    4    4    4    3    4    5     6 #>   [214,]    5    5    5    5    5    5    4    5    6     7 #>   [215,]    5    5    5    5    5    5    4    5    6     7 #>   [216,]    4    4    4    4    4    4    3    4    5     6 #>   [217,]    4    4    4    4    4    4    3    4    5     6 #>   [218,]    5    5    5    5    5    5    4    5    6     7 #>   [219,]    5    5    5    5    5    5    4    5    6     7 #>   [220,]    4    4    4    4    4    4    3    4    5     6 #>   [221,]    5    5    5    5    5    6    4    5    6     7 #>   [222,]    4    4    4    4    4    4    3    4    5     6 #>   [223,]    5    5    5    5    5    5    4    5    6     7 #>   [224,]    4    4    4    4    4    4    3    4    5     6 #>   [225,]    4    4    4    4    4    4    3    4    5     6 #>   [226,]    5    5    5    5    5    5    4    5    6     7 #>   [227,]    5    5    5    5    5    5    4    5    6     7 #>   [228,]    4    4    4    4    4    4    3    4    5     6 #>   [229,]    4    4    4    4    4    4    3    4    5     6 #>   [230,]    5    5    5    5    5    5    4    5    6     7 #>   [231,]    5    5    5    5    5    5    4    5    6     7 #>   [232,]    5    5    5    5    5    5    4    5    6     7 #>   [233,]    5    5    5    5    5    6    4    5    6     7 #>   [234,]    5    5    5    5    5    5    4    5    6     7 #>   [235,]    4    4    4    4    4    4    3    4    5     6 #>   [236,]    5    5    5    5    5    5    4    5    6     7 #>   [237,]    4    4    4    4    4    4    3    4    5     6 #>   [238,]    5    5    5    5    5    5    4    5    6     7 #>   [239,]    4    4    4    4    4    4    3    4    5     6 #>   [240,]    4    4    4    4    4    4    3    4    5     6 #>   [241,]    5    5    5    5    5    5    4    5    6     7 #>   [242,]    5    5    5    5    5    5    4    5    6     7 #>   [243,]    4    4    4    4    4    4    3    4    5     6 #>   [244,]    4    4    4    4    4    4    3    4    5     6 #>   [245,]    4    4    4    4    4    4    3    4    5     6 #>   [246,]    4    4    4    4    4    4    3    4    5     6 #>   [247,]    4    4    4    4    4    4    3    4    5     6 #>   [248,]    5    5    5    5    5    5    4    5    6     7 #>   [249,]    4    4    4    4    4    4    3    4    5     6 #>   [250,]    4    4    4    4    4    4    3    4    5     6 #>   [251,]    4    4    4    4    4    4    3    4    5     6 #>   [252,]    5    5    5    5    5    5    4    5    6     7 #>   [253,]    4    4    4    4    4    4    3    4    5     6 #>   [254,]    4    4    4    4    4    4    3    4    5     6 #>   [255,]    4    4    4    4    4    4    3    4    5     6 #>   [256,]    4    4    4    4    4    4    3    4    5     6 #>   [257,]    4    4    4    4    4    4    3    4    5     6 #>   [258,]    5    5    5    5    5    5    4    5    6     7 #>   [259,]    4    4    4    4    4    4    3    4    5     6 #>   [260,]    5    5    5    5    5    6    4    5    6     7 #>   [261,]    5    5    5    5    5    5    4    5    6     7 #>   [262,]    5    5    5    5    5    5    4    5    6     7 #>   [263,]    4    4    4    4    4    4    3    4    5     6 #>   [264,]    5    5    5    5    5    5    4    5    6     7 #>   [265,]    4    4    4    4    4    4    3    4    5     6 #>   [266,]    4    4    4    4    4    4    3    4    5     6 #>   [267,]    5    5    5    5    5    5    4    5    6     7 #>   [268,]    5    5    5    5    5    5    4    5    6     7 #>   [269,]    5    5    5    5    5    5    4    5    6     7 #>   [270,]    4    4    4    4    4    4    3    4    5     6 #>   [271,]    4    4    4    4    4    4    3    4    5     6 #>   [272,]    4    4    4    4    4    4    3    4    5     6 #>   [273,]    5    5    5    5    5    5    4    5    6     7 #>   [274,]    5    5    5    5    5    5    4    5    6     7 #>   [275,]    5    5    5    5    5    5    4    5    6     7 #>   [276,]    4    4    4    4    4    4    3    4    5     6 #>   [277,]    4    4    4    4    4    4    3    4    5     6 #>   [278,]    4    4    4    4    4    4    3    4    5     6 #>   [279,]    4    4    4    4    4    4    3    4    5     6 #>   [280,]    5    5    5    5    5    5    4    5    6     7 #>   [281,]    4    4    4    4    4    4    3    4    5     6 #>   [282,]    5    5    5    5    5    5    4    5    6     7 #>   [283,]    4    4    4    4    4    4    3    4    5     6 #>   [284,]    4    4    4    4    4    4    3    4    5     6 #>   [285,]    5    5    5    5    5    5    4    5    6     7 #>   [286,]    4    4    4    4    4    4    3    4    5     6 #>   [287,]    4    4    4    4    4    4    3    4    5     6 #>   [288,]    4    4    4    4    4    4    3    4    5     6 #>   [289,]    4    4    4    4    4    4    3    4    5     6 #>   [290,]    4    4    4    4    4    4    3    4    5     6 #>   [291,]    5    5    5    5    5    5    4    5    6     7 #>   [292,]    5    5    5    5    5    5    4    5    6     7 #>   [293,]    5    5    5    5    5    5    4    5    6     7 #>   [294,]    4    4    4    4    4    4    3    4    5     6 #>   [295,]    4    4    4    4    4    4    3    4    5     6 #>   [296,]    5    5    5    5    5    5    4    5    6     7 #>   [297,]    5    5    5    5    5    5    4    5    6     7 #>   [298,]    4    4    4    4    4    4    3    4    5     6 #>   [299,]    5    5    5    5    5    5    4    5    6     7 #>   [300,]    4    4    4    4    4    4    3    4    5     6 #>   [301,]    7    7    7    7    7    7    5    6    7     8 #>   [302,]    7    7    7    7    7    7    5    6    7     8 #>   [303,]    6    6    6    6    6    8    6    7    8     9 #>   [304,]    7    7    7    7    7    7    5    6    7     8 #>   [305,]    6    6    6    6    6    8    6    7    8     9 #>   [306,]    6    6    6    6    6    8    6    7    8     9 #>   [307,]    7    7    7    7    7    7    5    6    7     8 #>   [308,]    7    7    7    7    7    7    5    6    7     8 #>   [309,]    7    7    7    7    7    7    5    6    7     8 #>   [310,]    7    7    7    7    7    7    5    6    7     8 #>   [311,]    6    6    6    6    6    9    6    7    8     9 #>   [312,]    6    6    6    6    6    9    6    7    8     9 #>   [313,]    7    7    7    7    7    7    5    6    7     8 #>   [314,]    6    6    6    6    6    9    6    7    8     9 #>   [315,]    7    7    7    7    7    7    5    6    7     8 #>   [316,]    7    7    7    7    7    7    5    6    7     8 #>   [317,]    7    7    7    7    7    7    5    6    7     8 #>   [318,]    7    7    7    7    7    7    5    6    7     8 #>   [319,]    6    6    6    6    6    9    6    7    8     9 #>   [320,]    6    6    6    6    6    8    6    7    8     9 #>   [321,]    7    7    7    7    7    7    5    6    7     8 #>   [322,]    6    6    6    6    6    8    6    7    8     9 #>   [323,]    7    7    7    7    7    7    5    6    7     8 #>   [324,]    6    6    6    6    6    8    6    7    8     9 #>   [325,]    7    7    7    7    7    7    5    6    7     8 #>   [326,]    6    6    6    6    6    8    6    7    8     9 #>   [327,]    7    7    7    7    7    7    5    6    7     8 #>   [328,]    7    7    7    7    7    7    5    6    7     8 #>   [329,]    6    6    6    6    6    8    6    7    8     9 #>   [330,]    6    6    6    6    6    8    6    7    8     9 #>   [331,]    7    7    7    7    7    7    5    6    7     8 #>   [332,]    6    6    6    6    6    8    6    7    8     9 #>   [333,]    7    7    7    7    7    7    5    6    7     8 #>   [334,]    6    6    6    6    6    8    6    7    8     9 #>   [335,]    6    6    6    6    6    8    6    7    8     9 #>   [336,]    6    6    6    6    6    9    6    7    8     9 #>   [337,]    7    7    7    7    7    7    5    6    7     8 #>   [338,]    7    7    7    7    7    7    5    6    7     8 #>   [339,]    7    7    7    7    7    7    5    6    7     8 #>   [340,]    6    6    6    6    6    8    6    7    8     9 #>   [341,]    6    6    6    6    6    9    6    7    8     9 #>   [342,]    6    6    6    6    6    9    6    7    8     9 #>   [343,]    7    7    7    7    7    7    5    6    7     8 #>   [344,]    7    7    7    7    7    7    5    6    7     8 #>   [345,]    7    7    7    7    7    7    5    6    7     8 #>   [346,]    7    7    7    7    7    7    5    6    7     8 #>   [347,]    7    7    7    7    7    7    5    6    7     8 #>   [348,]    6    6    6    6    6    9    6    7    8     9 #>   [349,]    7    7    7    7    7    7    5    6    7     8 #>   [350,]    7    7    7    7    7    7    5    6    7     8 #>   [351,]    6    6    6    6    6    8    6    7    8     9 #>   [352,]    6    6    6    6    6    8    6    7    8     9 #>   [353,]    7    7    7    7    7    7    5    6    7     8 #>   [354,]    6    6    6    6    6    8    6    7    8     9 #>   [355,]    6    6    6    6    6    8    6    7    8     9 #>   [356,]    7    7    7    7    7    7    5    6    7     8 #>   [357,]    6    6    6    6    6    8    6    7    8     9 #>   [358,]    7    7    7    7    7    7    5    6    7     8 #>   [359,]    7    7    7    7    7    7    5    6    7     8 #>   [360,]    6    6    6    6    6    8    6    7    8     9 #>   [361,]    7    7    7    7    7    7    5    6    7     8 #>   [362,]    6    6    6    6    6    8    6    7    8     9 #>   [363,]    6    6    6    6    6    8    6    7    8     9 #>   [364,]    7    7    7    7    7    7    5    6    7     8 #>   [365,]    7    7    7    7    7    7    5    6    7     8 #>   [366,]    6    6    6    6    6    8    6    7    8     9 #>   [367,]    6    6    6    6    6    8    6    7    8     9 #>   [368,]    6    6    6    6    6    9    6    7    8     9 #>   [369,]    6    6    6    6    6    9    6    7    8     9 #>   [370,]    7    7    7    7    7    7    5    6    7     8 #>   [371,]    7    7    7    7    7    7    5    6    7     8 #>   [372,]    7    7    7    7    7    7    5    6    7     8 #>   [373,]    7    7    7    7    7    7    5    6    7     8 #>   [374,]    7    7    7    7    7    7    5    6    7     8 #>   [375,]    7    7    7    7    7    7    5    6    7     8 #>   [376,]    7    7    7    7    7    7    5    6    7     8 #>   [377,]    7    7    7    7    7    7    5    6    7     8 #>   [378,]    6    6    6    6    6    8    6    7    8     9 #>   [379,]    7    7    7    7    7    7    5    6    7     8 #>   [380,]    6    6    6    6    6    8    6    7    8     9 #>   [381,]    6    6    6    6    6    8    6    7    8     9 #>   [382,]    7    7    7    7    7    7    5    6    7     8 #>   [383,]    6    6    6    6    6    8    6    7    8     9 #>   [384,]    7    7    7    7    7    7    5    6    7     8 #>   [385,]    7    7    7    7    7    7    5    6    7     8 #>   [386,]    7    7    7    7    7    7    5    6    7     8 #>   [387,]    7    7    7    7    7    7    5    6    7     8 #>   [388,]    7    7    7    7    7    7    5    6    7     8 #>   [389,]    6    6    6    6    6    8    6    7    8     9 #>   [390,]    7    7    7    7    7    7    5    6    7     8 #>   [391,]    6    6    6    6    6    8    6    7    8     9 #>   [392,]    7    7    7    7    7    7    5    6    7     8 #>   [393,]    6    6    6    6    6    9    6    7    8     9 #>   [394,]    7    7    7    7    7    7    5    6    7     8 #>   [395,]    7    7    7    7    7    7    5    6    7     8 #>   [396,]    7    7    7    7    7    7    5    6    7     8 #>   [397,]    7    7    7    7    7    7    5    6    7     8 #>   [398,]    6    6    6    6    6    8    6    7    8     9 #>   [399,]    6    6    6    6    6    8    6    7    8     9 #>   [400,]    7    7    7    7    7    7    5    6    7     8 #>   [401,]    8    8    8    8    8   10    7    8   11    12 #>   [402,]    8    8    8    8    8   10    7    8   11    12 #>   [403,]    8    8    8    8    8   10    7    8   10    11 #>   [404,]    8    8    8    8    8   10    7    8   11    12 #>   [405,]    8    8    8    8    8   10    7    8   10    11 #>   [406,]    8    8    8    8    8   10    7    8   11    12 #>   [407,]    8    8    8    8    8   10    7    8   11    12 #>   [408,]    8    8    8    8    8   10    7    8   11    12 #>   [409,]    8    8    8    8    8   10    7    8   10    11 #>   [410,]    8    8    8    8    8   10    7    8   10    11 #>   [411,]    8    8    8    8    8   10    7    8   10    11 #>   [412,]    8    8    8    8    8   10    7    8   11    12 #>   [413,]    9    9    9    9    9   11    8    9    9    10 #>   [414,]    8    8    8    8    8   10    7    8   10    11 #>   [415,]    9    9    9    9    9   11    8    9    9    10 #>   [416,]    8    8    8    8    8   10    7    8   11    12 #>   [417,]    8    8    8    8    8   10    7    8   11    12 #>   [418,]    8    8    8    8    8   10    7    8   11    12 #>   [419,]    9    9    9    9    9   11    8    9    9    10 #>   [420,]    9    9    9    9    9   11    8    9    9    10 #>   [421,]    8    8    8    8    8   10    7    8   10    11 #>   [422,]    9    9    9    9    9   11    8    9    9    10 #>   [423,]    8    8    8    8    8   10    7    8   11    12 #>   [424,]    8    8    8    8    8   10    7    8   10    11 #>   [425,]    8    8    8    8    8   10    7    8   10    11 #>   [426,]    8    8    8    8    8   10    7    8   11    12 #>   [427,]    9    9    9    9    9   11    8    9    9    10 #>   [428,]    8    8    8    8    8   10    7    8   10    11 #>   [429,]    9    9    9    9    9   11    8    9    9    10 #>   [430,]    8    8    8    8    8   10    7    8   11    12 #>   [431,]    8    8    8    8    8   10    7    8   10    11 #>   [432,]    8    8    8    8    8   10    7    8   10    11 #>   [433,]    8    8    8    8    8   10    7    8   11    12 #>   [434,]    8    8    8    8    8   10    7    8   10    11 #>   [435,]    8    8    8    8    8   10    7    8   10    11 #>   [436,]    9    9    9    9    9   11    8    9    9    10 #>   [437,]    9    9    9    9    9   11    8    9    9    10 #>   [438,]    9    9    9    9    9   11    8    9    9    10 #>   [439,]    8    8    8    8    8   10    7    8   10    11 #>   [440,]    8    8    8    8    8   10    7    8   10    11 #>   [441,]    8    8    8    8    8   10    7    8   11    12 #>   [442,]    8    8    8    8    8   10    7    8   11    12 #>   [443,]    8    8    8    8    8   10    7    8   11    12 #>   [444,]    8    8    8    8    8   10    7    8   11    12 #>   [445,]    8    8    8    8    8   10    7    8   11    12 #>   [446,]    9    9    9    9    9   11    8    9    9    10 #>   [447,]    8    8    8    8    8   10    7    8   10    11 #>   [448,]    8    8    8    8    8   10    7    8   10    11 #>   [449,]    8    8    8    8    8   10    7    8   11    12 #>   [450,]    8    8    8    8    8   10    7    8   11    12 #>   [451,]    9    9    9    9    9   11    8    9    9    10 #>   [452,]    8    8    8    8    8   10    7    8   10    11 #>   [453,]    9    9    9    9    9   11    8    9    9    10 #>   [454,]    8    8    8    8    8   10    7    8   10    11 #>   [455,]    9    9    9    9    9   11    8    9    9    10 #>   [456,]    8    8    8    8    8   10    7    8   11    12 #>   [457,]    8    8    8    8    8   10    7    8   11    12 #>   [458,]    9    9    9    9    9   11    8    9    9    10 #>   [459,]    8    8    8    8    8   10    7    8   11    12 #>   [460,]    8    8    8    8    8   10    7    8   11    12 #>   [461,]    8    8    8    8    8   10    7    8   11    12 #>   [462,]    8    8    8    8    8   10    7    8   10    11 #>   [463,]    8    8    8    8    8   10    7    8   11    12 #>   [464,]    9    9    9    9    9   11    8    9    9    10 #>   [465,]    8    8    8    8    8   10    7    8   10    11 #>   [466,]    9    9    9    9    9   11    8    9    9    10 #>   [467,]    8    8    8    8    8   10    7    8   11    12 #>   [468,]    8    8    8    8    8   10    7    8   11    12 #>   [469,]    9    9    9    9    9   11    8    9    9    10 #>   [470,]    8    8    8    8    8   10    7    8   10    11 #>   [471,]    9    9    9    9    9   11    8    9    9    10 #>   [472,]    8    8    8    8    8   10    7    8   10    11 #>   [473,]    8    8    8    8    8   10    7    8   11    12 #>   [474,]    8    8    8    8    8   10    7    8   10    11 #>   [475,]    8    8    8    8    8   10    7    8   11    12 #>   [476,]    8    8    8    8    8   10    7    8   10    11 #>   [477,]    9    9    9    9    9   11    8    9    9    10 #>   [478,]    8    8    8    8    8   10    7    8   11    12 #>   [479,]    8    8    8    8    8   10    7    8   11    12 #>   [480,]    9    9    9    9    9   11    8    9    9    10 #>   [481,]    9    9    9    9    9   11    8    9    9    10 #>   [482,]    8    8    8    8    8   10    7    8   10    11 #>   [483,]    9    9    9    9    9   11    8    9    9    10 #>   [484,]    8    8    8    8    8   10    7    8   11    12 #>   [485,]    8    8    8    8    8   10    7    8   11    12 #>   [486,]    8    8    8    8    8   10    7    8   11    12 #>   [487,]    9    9    9    9    9   11    8    9    9    10 #>   [488,]    8    8    8    8    8   10    7    8   11    12 #>   [489,]    8    8    8    8    8   10    7    8   11    12 #>   [490,]    9    9    9    9    9   11    8    9    9    10 #>   [491,]    8    8    8    8    8   10    7    8   10    11 #>   [492,]    8    8    8    8    8   10    7    8   11    12 #>   [493,]    8    8    8    8    8   10    7    8   11    12 #>   [494,]    8    8    8    8    8   10    7    8   11    12 #>   [495,]    8    8    8    8    8   10    7    8   11    12 #>   [496,]    9    9    9    9    9   11    8    9    9    10 #>   [497,]    9    9    9    9    9   11    8    9    9    10 #>   [498,]    8    8    8    8    8   10    7    8   10    11 #>   [499,]    8    8    8    8    8   10    7    8   11    12 #>   [500,]    9    9    9    9    9   11    8    9    9    10 #>   [501,]   11   11   12   12   12   13   10   11   14    14 #>   [502,]   11   11   12   12   12   13   10   11   13    14 #>   [503,]   11   11   11   11   11   13   10   11   14    14 #>   [504,]   11   11   12   12   12   13   10   11   14    14 #>   [505,]   11   11   12   12   12   13   10   11   13    14 #>   [506,]   11   11   12   12   12   13   10   11   13    14 #>   [507,]   10   10   10   10   10   12    9   10   12    13 #>   [508,]   11   11   12   12   12   13   10   11   13    14 #>   [509,]   11   11   12   12   12   13   10   11   14    14 #>   [510,]   11   11   11   11   11   13   10   11   14    14 #>   [511,]   11   11   11   11   11   13   10   11   13    14 #>   [512,]   11   11   12   12   12   13   10   11   13    14 #>   [513,]   11   11   12   12   12   13   10   11   14    14 #>   [514,]   11   11   11   11   11   13   10   11   14    14 #>   [515,]   11   11   12   12   12   13   10   11   13    14 #>   [516,]   11   11   12   12   12   13   10   11   14    14 #>   [517,]   11   11   12   12   12   13   10   11   13    14 #>   [518,]   11   11   12   12   12   13   10   11   13    14 #>   [519,]   11   11   12   12   12   13   10   11   13    14 #>   [520,]   11   11   12   12   12   13   10   11   14    14 #>   [521,]   10   10   10   10   10   12    9   10   12    13 #>   [522,]   11   11   12   12   12   13   10   11   14    14 #>   [523,]   11   11   12   12   12   13   10   11   13    14 #>   [524,]   11   11   12   12   12   13   10   11   14    14 #>   [525,]   11   11   12   12   12   13   10   11   14    14 #>   [526,]   11   11   12   12   12   13   10   11   13    14 #>   [527,]   11   11   12   12   12   13   10   11   14    14 #>   [528,]   11   11   12   12   12   13   10   11   14    14 #>   [529,]   11   11   12   12   12   13   10   11   13    14 #>   [530,]   10   10   10   10   10   12    9   10   12    13 #>   [531,]   11   11   12   12   12   13   10   11   13    14 #>   [532,]   11   11   11   11   11   13   10   11   13    14 #>   [533,]   11   11   12   12   12   13   10   11   13    14 #>   [534,]   11   11   12   12   12   13   10   11   13    14 #>   [535,]   11   11   12   12   12   13   10   11   13    14 #>   [536,]   11   11   12   12   12   13   10   11   14    14 #>   [537,]   11   11   12   12   12   13   10   11   13    14 #>   [538,]   11   11   12   12   12   13   10   11   13    14 #>   [539,]   10   10   10   10   10   12    9   10   12    13 #>   [540,]   11   11   11   11   11   13   10   11   13    14 #>   [541,]   11   11   12   12   12   13   10   11   14    14 #>   [542,]   11   11   12   12   12   13   10   11   13    14 #>   [543,]   11   11   12   12   12   13   10   11   13    14 #>   [544,]   11   11   12   12   12   13   10   11   13    14 #>   [545,]   11   11   12   12   12   13   10   11   14    14 #>   [546,]   11   11   12   12   12   13   10   11   13    14 #>   [547,]   11   11   12   12   12   13   10   11   13    14 #>   [548,]   11   11   11   11   11   13   10   11   13    14 #>   [549,]   10   10   10   10   10   12    9   10   12    13 #>   [550,]   11   11   12   12   12   13   10   11   14    14 #>   [551,]   11   11   12   12   12   13   10   11   13    14 #>   [552,]   11   11   12   12   12   13   10   11   14    14 #>   [553,]   11   11   12   12   12   13   10   11   14    14 #>   [554,]   10   10   10   10   10   12    9   10   12    13 #>   [555,]   11   11   12   12   12   13   10   11   14    14 #>   [556,]   11   11   12   12   12   13   10   11   13    14 #>   [557,]   11   11   12   12   12   13   10   11   14    14 #>   [558,]   11   11   12   12   12   13   10   11   14    14 #>   [559,]   11   11   12   12   12   13   10   11   14    14 #>   [560,]   11   11   12   12   12   13   10   11   13    14 #>   [561,]   11   11   12   12   12   13   10   11   13    14 #>   [562,]   10   10   10   10   10   12    9   10   12    13 #>   [563,]   11   11   12   12   12   13   10   11   13    14 #>   [564,]   11   11   12   12   12   13   10   11   13    14 #>   [565,]   11   11   12   12   12   13   10   11   13    14 #>   [566,]   11   11   12   12   12   13   10   11   13    14 #>   [567,]   11   11   12   12   12   13   10   11   14    14 #>   [568,]   11   11   12   12   12   13   10   11   13    14 #>   [569,]   11   11   12   12   12   13   10   11   13    14 #>   [570,]   10   10   10   10   10   12    9   10   12    13 #>   [571,]   11   11   12   12   12   13   10   11   14    14 #>   [572,]   11   11   12   12   12   13   10   11   14    14 #>   [573,]   11   11   12   12   12   13   10   11   14    14 #>   [574,]   11   11   12   12   12   13   10   11   14    14 #>   [575,]   11   11   12   12   12   13   10   11   13    14 #>   [576,]   11   11   12   12   12   13   10   11   14    14 #>   [577,]   11   11   12   12   12   13   10   11   13    14 #>   [578,]   11   11   12   12   12   13   10   11   13    14 #>   [579,]   11   11   12   12   12   13   10   11   13    14 #>   [580,]   10   10   10   10   10   12    9   10   12    13 #>   [581,]   11   11   12   12   12   13   10   11   13    14 #>   [582,]   11   11   12   12   12   13   10   11   13    14 #>   [583,]   11   11   12   12   12   13   10   11   13    14 #>   [584,]   11   11   12   12   12   13   10   11   13    14 #>   [585,]   11   11   12   12   12   13   10   11   14    14 #>   [586,]   11   11   12   12   12   13   10   11   14    14 #>   [587,]   11   11   12   12   12   13   10   11   14    14 #>   [588,]   11   11   12   12   12   13   10   11   14    14 #>   [589,]   11   11   12   12   12   13   10   11   13    14 #>   [590,]   11   11   12   12   12   13   10   11   14    14 #>   [591,]   11   11   12   12   12   13   10   11   14    14 #>   [592,]   11   11   12   12   12   13   10   11   13    14 #>   [593,]   11   11   12   12   12   13   10   11   13    14 #>   [594,]   11   11   12   12   12   13   10   11   13    14 #>   [595,]   10   10   10   10   10   12    9   10   12    13 #>   [596,]   11   11   12   12   12   13   10   11   13    14 #>   [597,]   11   11   12   12   12   13   10   11   13    14 #>   [598,]   10   10   10   10   10   12    9   10   12    13 #>   [599,]   11   11   12   12   12   13   10   11   13    14 #>   [600,]   11   11   12   12   12   13   10   11   13    14 #>   [601,]   12   12   13   13   14   15   12   13   16    15 #>   [602,]   12   12   13   13   14   15   12   13   16    15 #>   [603,]   12   12   13   13   14   15   12   13   16    15 #>   [604,]   12   12   13   13   15   15   12   13   16    15 #>   [605,]   12   12   13   13   14   15   12   13   16    15 #>   [606,]   12   12   13   13   15   15   12   13   16    15 #>   [607,]   13   13   14   14   13   14   11   12   15    16 #>   [608,]   12   12   13   13   14   15   12   13   16    15 #>   [609,]   12   12   13   13   15   15   12   13   16    15 #>   [610,]   12   12   13   13   15   15   12   13   16    15 #>   [611,]   12   12   13   13   15   15   12   13   16    15 #>   [612,]   12   12   13   13   15   15   12   13   16    15 #>   [613,]   12   12   13   13   14   15   12   13   16    15 #>   [614,]   12   12   13   13   15   15   12   13   16    15 #>   [615,]   12   12   13   13   15   15   12   13   16    15 #>   [616,]   13   13   14   14   13   14   11   12   15    17 #>   [617,]   12   12   13   13   14   15   12   13   16    15 #>   [618,]   12   12   13   13   15   15   12   13   16    15 #>   [619,]   12   12   13   13   15   15   12   13   16    15 #>   [620,]   13   13   14   14   13   14   11   12   15    16 #>   [621,]   12   12   13   13   15   15   12   13   16    15 #>   [622,]   12   12   13   13   14   15   12   13   16    15 #>   [623,]   12   12   13   13   14   15   12   13   16    15 #>   [624,]   13   13   14   14   13   14   11   12   15    16 #>   [625,]   12   12   13   13   14   15   12   13   16    15 #>   [626,]   12   12   13   13   15   15   12   13   16    15 #>   [627,]   12   12   13   13   15   15   12   13   16    15 #>   [628,]   13   13   14   14   13   14   11   12   15    16 #>   [629,]   12   12   13   13   14   15   12   13   16    15 #>   [630,]   12   12   13   13   15   15   12   13   16    15 #>   [631,]   12   12   13   13   15   15   12   13   16    15 #>   [632,]   12   12   13   13   15   15   12   13   16    15 #>   [633,]   12   12   13   13   15   15   12   13   16    15 #>   [634,]   12   12   13   13   14   15   12   13   16    15 #>   [635,]   12   12   13   13   14   15   12   13   16    15 #>   [636,]   12   12   13   13   15   15   12   13   16    15 #>   [637,]   12   12   13   13   14   15   12   13   16    15 #>   [638,]   12   12   13   13   15   15   12   13   16    15 #>   [639,]   12   12   13   13   14   15   12   13   16    15 #>   [640,]   12   12   13   13   14   15   12   13   16    15 #>   [641,]   12   12   13   13   15   15   12   13   16    15 #>   [642,]   12   12   13   13   15   15   12   13   16    15 #>   [643,]   12   12   13   13   14   15   12   13   16    15 #>   [644,]   12   12   13   13   14   15   12   13   16    15 #>   [645,]   12   12   13   13   14   15   12   13   16    15 #>   [646,]   12   12   13   13   14   15   12   13   16    15 #>   [647,]   12   12   13   13   14   15   12   13   16    15 #>   [648,]   12   12   13   13   15   15   12   13   16    15 #>   [649,]   12   12   13   13   14   15   12   13   16    15 #>   [650,]   13   13   14   14   13   14   11   12   15    17 #>   [651,]   12   12   13   13   14   15   12   13   16    15 #>   [652,]   13   13   14   14   13   14   11   12   15    17 #>   [653,]   12   12   13   13   14   15   12   13   16    15 #>   [654,]   12   12   13   13   14   15   12   13   16    15 #>   [655,]   12   12   13   13   14   15   12   13   16    15 #>   [656,]   12   12   13   13   14   15   12   13   16    15 #>   [657,]   12   12   13   13   14   15   12   13   16    15 #>   [658,]   12   12   13   13   15   15   12   13   16    15 #>   [659,]   12   12   13   13   14   15   12   13   16    15 #>   [660,]   12   12   13   13   15   15   12   13   16    15 #>   [661,]   12   12   13   13   15   15   12   13   16    15 #>   [662,]   12   12   13   13   15   15   12   13   16    15 #>   [663,]   12   12   13   13   14   15   12   13   16    15 #>   [664,]   12   12   13   13   15   15   12   13   16    15 #>   [665,]   12   12   13   13   14   15   12   13   16    15 #>   [666,]   12   12   13   13   14   15   12   13   16    15 #>   [667,]   12   12   13   13   14   15   12   13   16    15 #>   [668,]   12   12   13   13   15   15   12   13   16    15 #>   [669,]   12   12   13   13   15   15   12   13   16    15 #>   [670,]   12   12   13   13   14   15   12   13   16    15 #>   [671,]   12   12   13   13   14   15   12   13   16    15 #>   [672,]   12   12   13   13   14   15   12   13   16    15 #>   [673,]   12   12   13   13   14   15   12   13   16    15 #>   [674,]   12   12   13   13   15   15   12   13   16    15 #>   [675,]   12   12   13   13   15   15   12   13   16    15 #>   [676,]   13   13   14   14   13   14   11   12   15    17 #>   [677,]   12   12   13   13   14   15   12   13   16    15 #>   [678,]   12   12   13   13   14   15   12   13   16    15 #>   [679,]   12   12   13   13   14   15   12   13   16    15 #>   [680,]   12   12   13   13   14   15   12   13   16    15 #>   [681,]   12   12   13   13   14   15   12   13   16    15 #>   [682,]   12   12   13   13   15   15   12   13   16    15 #>   [683,]   12   12   13   13   14   15   12   13   16    15 #>   [684,]   12   12   13   13   14   15   12   13   16    15 #>   [685,]   12   12   13   13   15   15   12   13   16    15 #>   [686,]   13   13   14   14   13   14   11   12   15    17 #>   [687,]   12   12   13   13   14   15   12   13   16    15 #>   [688,]   12   12   13   13   14   15   12   13   16    15 #>   [689,]   12   12   13   13   14   15   12   13   16    15 #>   [690,]   12   12   13   13   14   15   12   13   16    15 #>   [691,]   13   13   14   14   13   14   11   12   15    16 #>   [692,]   12   12   13   13   15   15   12   13   16    15 #>   [693,]   12   12   13   13   15   15   12   13   16    15 #>   [694,]   12   12   13   13   14   15   12   13   16    15 #>   [695,]   12   12   13   13   14   15   12   13   16    15 #>   [696,]   12   12   13   13   15   15   12   13   16    15 #>   [697,]   12   12   13   13   15   15   12   13   16    15 #>   [698,]   12   12   13   13   14   15   12   13   16    15 #>   [699,]   12   12   13   13   15   15   12   13   16    15 #>   [700,]   12   12   13   13   14   15   12   13   16    15 #>   [701,]   14   16   16   16   17   17   14   14   17    18 #>   [702,]   15   14   15   15   16   16   13   14   17    19 #>   [703,]   14   15   16   16   17   17   14   14   17    18 #>   [704,]   14   16   16   16   17   17   14   14   17    18 #>   [705,]   15   14   15   15   16   16   13   14   17    18 #>   [706,]   14   15   16   16   17   17   14   14   17    18 #>   [707,]   15   14   15   15   16   16   13   14   17    18 #>   [708,]   14   16   16   16   17   17   14   14   17    18 #>   [709,]   15   14   15   15   16   16   13   14   17    19 #>   [710,]   15   14   15   15   16   16   13   14   17    19 #>   [711,]   14   16   16   16   17   17   14   14   17    18 #>   [712,]   15   14   15   15   16   16   13   14   17    19 #>   [713,]   15   14   15   15   16   16   13   14   17    19 #>   [714,]   14   16   16   16   17   17   14   14   17    18 #>   [715,]   14   16   16   16   17   17   14   14   17    18 #>   [716,]   14   16   16   16   17   17   14   14   17    18 #>   [717,]   15   14   15   15   16   16   13   14   17    19 #>   [718,]   15   14   15   15   16   16   13   14   17    18 #>   [719,]   14   16   16   16   17   17   14   14   17    18 #>   [720,]   15   14   15   15   16   16   13   14   17    18 #>   [721,]   15   14   15   15   16   16   13   14   17    19 #>   [722,]   15   14   15   15   16   16   13   14   17    18 #>   [723,]   15   14   15   15   16   16   13   14   17    18 #>   [724,]   15   14   15   15   16   16   13   14   17    18 #>   [725,]   14   15   16   16   17   17   14   14   17    18 #>   [726,]   14   16   16   16   17   17   14   14   17    18 #>   [727,]   15   14   15   15   16   16   13   14   17    18 #>   [728,]   14   16   16   16   17   17   14   14   17    18 #>   [729,]   15   14   15   15   16   16   13   14   17    19 #>   [730,]   15   14   15   15   16   16   13   14   17    18 #>   [731,]   15   14   15   15   16   16   13   14   17    18 #>   [732,]   15   14   15   15   16   16   13   14   17    18 #>   [733,]   15   14   15   15   16   16   13   14   17    19 #>   [734,]   14   15   16   16   17   17   14   14   17    18 #>   [735,]   14   15   16   16   17   17   14   14   17    18 #>   [736,]   15   14   15   15   16   16   13   14   17    18 #>   [737,]   14   15   16   16   17   17   14   14   17    18 #>   [738,]   14   16   16   16   17   17   14   14   17    18 #>   [739,]   14   16   16   16   17   17   14   14   17    18 #>   [740,]   15   14   15   15   16   16   13   14   17    18 #>   [741,]   15   14   15   15   16   16   13   14   17    18 #>   [742,]   14   15   16   16   17   17   14   14   17    18 #>   [743,]   14   16   16   16   17   17   14   14   17    18 #>   [744,]   15   14   15   15   16   16   13   14   17    18 #>   [745,]   14   16   16   16   17   17   14   14   17    18 #>   [746,]   14   16   16   16   17   17   14   14   17    18 #>   [747,]   15   14   15   15   16   16   13   14   17    18 #>   [748,]   15   14   15   15   16   16   13   14   17    18 #>   [749,]   14   16   16   16   17   17   14   14   17    18 #>   [750,]   15   14   15   15   16   16   13   14   17    18 #>   [751,]   14   16   16   16   17   17   14   14   17    18 #>   [752,]   14   16   16   16   17   17   14   14   17    18 #>   [753,]   15   14   15   15   16   16   13   14   17    19 #>   [754,]   15   14   15   15   16   16   13   14   17    18 #>   [755,]   14   15   16   16   17   17   14   14   17    18 #>   [756,]   14   15   16   16   17   17   14   14   17    18 #>   [757,]   14   15   16   16   17   17   14   14   17    18 #>   [758,]   15   14   15   15   16   16   13   14   17    18 #>   [759,]   14   16   16   16   17   17   14   14   17    18 #>   [760,]   15   14   15   15   16   16   13   14   17    19 #>   [761,]   15   14   15   15   16   16   13   14   17    18 #>   [762,]   14   16   16   16   17   17   14   14   17    18 #>   [763,]   15   14   15   15   16   16   13   14   17    19 #>   [764,]   14   15   16   16   17   17   14   14   17    18 #>   [765,]   14   15   16   16   17   17   14   14   17    18 #>   [766,]   14   16   16   16   17   17   14   14   17    18 #>   [767,]   14   16   16   16   17   17   14   14   17    18 #>   [768,]   14   16   16   16   17   17   14   14   17    18 #>   [769,]   14   16   16   16   17   17   14   14   17    18 #>   [770,]   15   14   15   15   16   16   13   14   17    19 #>   [771,]   14   16   16   16   17   17   14   14   17    18 #>   [772,]   14   16   16   16   17   17   14   14   17    18 #>   [773,]   14   15   16   16   17   17   14   14   17    18 #>   [774,]   14   15   16   16   17   17   14   14   17    18 #>   [775,]   15   14   15   15   16   16   13   14   17    18 #>   [776,]   14   16   16   16   17   17   14   14   17    18 #>   [777,]   14   16   16   16   17   17   14   14   17    18 #>   [778,]   15   14   15   15   16   16   13   14   17    18 #>   [779,]   14   16   16   16   17   17   14   14   17    18 #>   [780,]   15   14   15   15   16   16   13   14   17    19 #>   [781,]   15   14   15   15   16   16   13   14   17    19 #>   [782,]   14   15   16   16   17   17   14   14   17    18 #>   [783,]   15   14   15   15   16   16   13   14   17    18 #>   [784,]   15   14   15   15   16   16   13   14   17    18 #>   [785,]   14   15   16   16   17   17   14   14   17    18 #>   [786,]   15   14   15   15   16   16   13   14   17    19 #>   [787,]   15   14   15   15   16   16   13   14   17    18 #>   [788,]   15   14   15   15   16   16   13   14   17    18 #>   [789,]   14   15   16   16   17   17   14   14   17    18 #>   [790,]   14   16   16   16   17   17   14   14   17    18 #>   [791,]   14   16   16   16   17   17   14   14   17    18 #>   [792,]   15   14   15   15   16   16   13   14   17    18 #>   [793,]   15   14   15   15   16   16   13   14   17    18 #>   [794,]   14   15   16   16   17   17   14   14   17    18 #>   [795,]   15   14   15   15   16   16   13   14   17    18 #>   [796,]   14   16   16   16   17   17   14   14   17    18 #>   [797,]   14   16   16   16   17   17   14   14   17    18 #>   [798,]   14   15   16   16   17   17   14   14   17    18 #>   [799,]   14   15   16   16   17   17   14   14   17    18 #>   [800,]   14   16   16   16   17   17   14   14   17    18 #>   [801,]   17   18   18   18   19   19   16   16   19    21 #>   [802,]   17   18   18   18   19   19   16   16   19    21 #>   [803,]   17   18   18   18   19   19   16   16   19    21 #>   [804,]   17   18   18   18   19   19   16   16   19    21 #>   [805,]   17   18   18   18   19   19   16   16   19    21 #>   [806,]   17   18   18   18   19   19   17   16   19    21 #>   [807,]   16   17   17   17   18   18   15   15   18    20 #>   [808,]   17   18   18   18   19   19   17   16   19    21 #>   [809,]   17   18   18   18   19   19   17   16   19    22 #>   [810,]   17   18   18   18   19   19   16   16   19    21 #>   [811,]   17   18   18   18   19   19   16   16   19    21 #>   [812,]   17   18   18   18   19   19   17   16   19    21 #>   [813,]   17   18   18   18   19   19   16   16   19    22 #>   [814,]   17   18   18   18   19   19   16   16   19    21 #>   [815,]   17   18   18   18   19   19   17   16   19    21 #>   [816,]   17   18   18   18   19   19   16   16   19    21 #>   [817,]   17   18   18   18   19   19   16   16   19    22 #>   [818,]   17   18   18   18   19   19   16   16   19    22 #>   [819,]   17   18   18   18   19   19   16   16   19    21 #>   [820,]   17   18   18   18   19   19   17   16   19    21 #>   [821,]   16   17   17   17   18   18   15   15   18    20 #>   [822,]   17   18   18   18   19   19   16   16   19    21 #>   [823,]   17   18   18   18   19   19   16   16   19    21 #>   [824,]   17   18   18   18   19   19   16   16   19    21 #>   [825,]   17   18   18   18   19   19   16   16   19    21 #>   [826,]   17   18   18   18   19   19   17   16   19    21 #>   [827,]   17   18   18   18   19   19   16   16   19    21 #>   [828,]   17   18   18   18   19   19   16   16   19    21 #>   [829,]   17   18   18   18   19   19   16   16   19    21 #>   [830,]   17   18   18   18   19   19   16   16   19    21 #>   [831,]   17   18   18   18   19   19   16   16   19    21 #>   [832,]   17   18   18   18   19   19   16   16   19    21 #>   [833,]   17   18   18   18   19   19   17   16   19    21 #>   [834,]   17   18   18   18   19   19   16   16   19    21 #>   [835,]   17   18   18   18   19   19   16   16   19    21 #>   [836,]   17   18   18   18   19   19   16   16   19    21 #>   [837,]   17   18   18   18   19   19   16   16   19    21 #>   [838,]   17   18   18   18   19   19   16   16   19    21 #>   [839,]   16   17   17   17   18   18   15   15   18    20 #>   [840,]   17   18   18   18   19   19   16   16   19    21 #>   [841,]   17   18   18   18   19   19   16   16   19    21 #>   [842,]   17   18   18   18   19   19   16   16   19    22 #>   [843,]   17   18   18   18   19   19   17   16   19    21 #>   [844,]   17   18   18   18   19   19   16   16   19    21 #>   [845,]   17   18   18   18   19   19   17   16   19    21 #>   [846,]   17   18   18   18   19   19   17   16   19    21 #>   [847,]   17   18   18   18   19   19   16   16   19    21 #>   [848,]   17   18   18   18   19   19   16   16   19    21 #>   [849,]   16   17   17   17   18   18   15   15   18    20 #>   [850,]   17   18   18   18   19   19   17   16   19    21 #>   [851,]   17   18   18   18   19   19   17   16   19    22 #>   [852,]   17   18   18   18   19   19   16   16   19    21 #>   [853,]   17   18   18   18   19   19   17   16   19    22 #>   [854,]   17   18   18   18   19   19   16   16   19    21 #>   [855,]   17   18   18   18   19   19   16   16   19    21 #>   [856,]   17   18   18   18   19   19   17   16   19    21 #>   [857,]   17   18   18   18   19   19   17   16   19    21 #>   [858,]   17   18   18   18   19   19   17   16   19    21 #>   [859,]   17   18   18   18   19   19   16   16   19    21 #>   [860,]   17   18   18   18   19   19   16   16   19    21 #>   [861,]   17   18   18   18   19   19   17   16   19    21 #>   [862,]   16   17   17   17   18   18   15   15   18    20 #>   [863,]   17   18   18   18   19   19   16   16   19    21 #>   [864,]   17   18   18   18   19   19   17   16   19    21 #>   [865,]   17   18   18   18   19   19   17   16   19    22 #>   [866,]   17   18   18   18   19   19   17   16   19    21 #>   [867,]   17   18   18   18   19   19   16   16   19    21 #>   [868,]   17   18   18   18   19   19   17   16   19    21 #>   [869,]   17   18   18   18   19   19   16   16   19    21 #>   [870,]   16   17   17   17   18   18   15   15   18    20 #>   [871,]   17   18   18   18   19   19   16   16   19    21 #>   [872,]   17   18   18   18   19   19   17   16   19    21 #>   [873,]   17   18   18   18   19   19   16   16   19    21 #>   [874,]   17   18   18   18   19   19   16   16   19    21 #>   [875,]   17   18   18   18   19   19   16   16   19    21 #>   [876,]   17   18   18   18   19   19   17   16   19    21 #>   [877,]   17   18   18   18   19   19   16   16   19    21 #>   [878,]   17   18   18   18   19   19   17   16   19    21 #>   [879,]   17   18   18   18   19   19   16   16   19    22 #>   [880,]   16   17   17   17   18   18   15   15   18    20 #>   [881,]   17   18   18   18   19   19   17   16   19    21 #>   [882,]   17   18   18   18   19   19   16   16   19    22 #>   [883,]   17   18   18   18   19   19   16   16   19    21 #>   [884,]   17   18   18   18   19   19   16   16   19    22 #>   [885,]   17   18   18   18   19   19   16   16   19    21 #>   [886,]   17   18   18   18   19   19   16   16   19    21 #>   [887,]   17   18   18   18   19   19   16   16   19    21 #>   [888,]   17   18   18   18   19   19   16   16   19    21 #>   [889,]   17   18   18   18   19   19   16   16   19    21 #>   [890,]   17   18   18   18   19   19   16   16   19    21 #>   [891,]   17   18   18   18   19   19   16   16   19    22 #>   [892,]   17   18   18   18   19   19   17   16   19    21 #>   [893,]   17   18   18   18   19   19   16   16   19    22 #>   [894,]   17   18   18   18   19   19   17   16   19    22 #>   [895,]   16   17   17   17   18   18   15   15   18    20 #>   [896,]   17   18   18   18   19   19   17   16   19    21 #>   [897,]   17   18   18   18   19   19   17   16   19    21 #>   [898,]   17   18   18   18   19   19   16   16   19    21 #>   [899,]   17   18   18   18   19   19   16   16   19    21 #>   [900,]   17   18   18   18   19   19   16   16   19    21 #>   [901,]   19   20   20   19   20   20   18   17   20    23 #>   [902,]   18   19   19   20   21   21   19   18   21    24 #>   [903,]   18   19   19   20   21   21   19   18   21    24 #>   [904,]   18   19   19   20   21   21   19   18   21    24 #>   [905,]   19   20   20   19   20   20   18   17   20    23 #>   [906,]   18   19   19   20   21   21   19   18   21    24 #>   [907,]   18   19   19   20   21   21   19   18   21    24 #>   [908,]   18   19   19   20   21   21   19   18   21    24 #>   [909,]   18   19   19   21   22   22   20   19   21    24 #>   [910,]   18   19   19   20   21   21   19   18   21    24 #>   [911,]   18   19   19   20   21   21   19   18   21    24 #>   [912,]   18   19   19   20   21   21   19   18   21    24 #>   [913,]   18   19   19   21   22   22   20   19   21    24 #>   [914,]   19   20   20   19   20   20   18   17   20    23 #>   [915,]   19   20   20   19   20   20   18   17   20    23 #>   [916,]   18   19   19   20   21   21   19   18   21    24 #>   [917,]   18   19   19   20   21   21   19   18   21    24 #>   [918,]   19   20   20   19   20   20   18   17   20    23 #>   [919,]   18   19   19   20   21   21   19   18   21    24 #>   [920,]   18   19   19   20   21   21   19   18   21    24 #>   [921,]   18   19   19   20   21   21   19   18   21    24 #>   [922,]   18   19   19   20   21   21   19   18   21    24 #>   [923,]   18   19   19   20   21   21   19   18   21    24 #>   [924,]   18   19   19   20   21   21   19   18   21    24 #>   [925,]   18   19   19   20   21   21   19   18   21    24 #>   [926,]   18   19   19   20   21   21   19   18   21    24 #>   [927,]   19   20   20   19   20   20   18   17   20    23 #>   [928,]   18   19   19   20   21   21   19   18   21    24 #>   [929,]   18   19   19   20   21   21   19   18   21    24 #>   [930,]   18   19   19   20   21   21   19   18   21    24 #>   [931,]   18   19   19   20   21   21   19   18   21    24 #>   [932,]   19   20   20   19   20   20   18   17   20    23 #>   [933,]   18   19   19   20   21   21   19   18   21    24 #>   [934,]   18   19   19   20   21   21   19   18   21    24 #>   [935,]   18   19   19   20   21   21   19   18   21    24 #>   [936,]   18   19   19   20   21   21   19   18   21    24 #>   [937,]   18   19   19   20   21   21   19   18   21    24 #>   [938,]   18   19   19   20   21   21   19   18   21    24 #>   [939,]   18   19   19   20   21   21   19   18   21    24 #>   [940,]   18   19   19   20   21   21   19   18   21    24 #>   [941,]   18   19   19   20   21   21   19   18   21    24 #>   [942,]   18   19   19   21   22   22   20   19   21    24 #>   [943,]   19   20   20   19   20   20   18   17   20    23 #>   [944,]   18   19   19   20   21   21   19   18   21    24 #>   [945,]   18   19   19   20   21   21   19   18   21    24 #>   [946,]   18   19   19   20   21   21   19   18   21    24 #>   [947,]   18   19   19   20   21   21   19   18   21    24 #>   [948,]   18   19   19   20   21   21   19   18   21    24 #>   [949,]   18   19   19   20   21   21   19   18   21    24 #>   [950,]   18   19   19   20   21   21   19   18   21    24 #>   [951,]   18   19   19   21   22   22   20   19   21    24 #>   [952,]   18   19   19   20   21   21   19   18   21    24 #>   [953,]   18   19   19   21   22   22   20   19   21    24 #>   [954,]   18   19   19   20   21   21   19   18   21    24 #>   [955,]   18   19   19   20   21   21   19   18   21    24 #>   [956,]   18   19   19   20   21   21   19   18   21    24 #>   [957,]   18   19   19   20   21   21   19   18   21    24 #>   [958,]   19   20   20   19   20   20   18   17   20    23 #>   [959,]   19   20   20   19   20   20   18   17   20    23 #>   [960,]   18   19   19   20   21   21   19   18   21    24 #>   [961,]   19   20   20   19   20   20   18   17   20    23 #>   [962,]   18   19   19   20   21   21   19   18   21    24 #>   [963,]   18   19   19   20   21   21   19   18   21    24 #>   [964,]   18   19   19   20   21   21   19   18   21    24 #>   [965,]   18   19   19   21   22   22   20   19   21    24 #>   [966,]   18   19   19   20   21   21   19   18   21    24 #>   [967,]   18   19   19   20   21   21   19   18   21    24 #>   [968,]   18   19   19   20   21   21   19   18   21    24 #>   [969,]   18   19   19   20   21   21   19   18   21    24 #>   [970,]   19   20   20   19   20   20   18   17   20    23 #>   [971,]   19   20   20   19   20   20   18   17   20    23 #>   [972,]   18   19   19   20   21   21   19   18   21    24 #>   [973,]   18   19   19   20   21   21   19   18   21    24 #>   [974,]   18   19   19   20   21   21   19   18   21    24 #>   [975,]   19   20   20   19   20   20   18   17   20    23 #>   [976,]   18   19   19   20   21   21   19   18   21    24 #>   [977,]   18   19   19   20   21   21   19   18   21    24 #>   [978,]   18   19   19   20   21   21   19   18   21    24 #>   [979,]   19   20   20   19   20   20   18   17   20    23 #>   [980,]   18   19   19   20   21   21   19   18   21    24 #>   [981,]   18   19   19   20   21   21   19   18   21    24 #>   [982,]   18   19   19   21   22   22   20   19   21    24 #>   [983,]   18   19   19   20   21   21   19   18   21    24 #>   [984,]   18   19   19   21   22   22   20   19   21    24 #>   [985,]   18   19   19   20   21   21   19   18   21    24 #>   [986,]   18   19   19   20   21   21   19   18   21    24 #>   [987,]   19   20   20   19   20   20   18   17   20    23 #>   [988,]   18   19   19   20   21   21   19   18   21    24 #>   [989,]   18   19   19   20   21   21   19   18   21    24 #>   [990,]   18   19   19   20   21   21   19   18   21    24 #>   [991,]   19   20   20   19   20   20   18   17   20    23 #>   [992,]   18   19   19   20   21   21   19   18   21    24 #>   [993,]   18   19   19   21   22   22   20   19   21    24 #>   [994,]   18   19   19   21   22   22   20   19   21    24 #>   [995,]   19   20   20   19   20   20   18   17   20    23 #>   [996,]   18   19   19   20   21   21   19   18   21    24 #>   [997,]   18   19   19   20   21   21   19   18   21    24 #>   [998,]   18   19   19   20   21   21   19   18   21    24 #>   [999,]   18   19   19   20   21   21   19   18   21    24 #>  [1000,]   19   20   20   19   20   20   18   17   20    23 #>  [1001,]   20   22   22   23   24   24   22   20   22    25 #>  [1002,]   20   21   21   22   23   23   21   22   24    26 #>  [1003,]   20   22   22   23   24   24   22   20   22    25 #>  [1004,]   20   22   22   23   24   24   22   20   22    25 #>  [1005,]   20   22   22   23   24   24   22   20   22    25 #>  [1006,]   20   21   21   22   23   23   21   21   23    26 #>  [1007,]   20   22   22   23   24   24   22   20   22    25 #>  [1008,]   20   22   22   23   24   24   22   20   22    25 #>  [1009,]   20   22   22   23   24   24   22   20   22    25 #>  [1010,]   20   22   22   23   24   24   22   20   22    25 #>  [1011,]   20   21   21   22   23   23   21   21   23    26 #>  [1012,]   20   21   21   22   23   23   21   22   24    26 #>  [1013,]   20   22   22   23   24   24   22   20   22    25 #>  [1014,]   20   22   22   23   24   24   22   20   22    25 #>  [1015,]   20   21   21   22   23   23   21   22   24    26 #>  [1016,]   20   22   22   23   24   24   22   20   22    25 #>  [1017,]   20   21   21   22   23   23   21   22   24    26 #>  [1018,]   20   22   22   23   24   24   22   20   22    25 #>  [1019,]   20   21   21   22   23   23   21   22   24    26 #>  [1020,]   20   22   22   23   24   24   22   20   22    25 #>  [1021,]   20   22   22   23   24   24   22   20   22    25 #>  [1022,]   20   22   22   23   24   24   22   20   22    25 #>  [1023,]   20   21   21   22   23   23   21   22   24    26 #>  [1024,]   20   22   22   23   24   24   22   20   22    25 #>  [1025,]   20   22   22   23   24   24   22   20   22    25 #>  [1026,]   20   21   21   22   23   23   21   22   24    26 #>  [1027,]   20   22   22   23   24   24   22   20   22    25 #>  [1028,]   20   22   22   23   24   24   22   20   22    25 #>  [1029,]   20   21   21   22   23   23   21   22   24    26 #>  [1030,]   20   21   21   22   23   23   21   22   24    26 #>  [1031,]   20   21   21   22   23   23   21   21   23    26 #>  [1032,]   20   22   22   23   24   24   22   20   22    25 #>  [1033,]   20   22   22   23   24   24   22   20   22    25 #>  [1034,]   20   21   21   22   23   23   21   21   23    26 #>  [1035,]   20   21   21   22   23   23   21   21   23    26 #>  [1036,]   20   22   22   23   24   24   22   20   22    25 #>  [1037,]   20   21   21   22   23   23   21   22   24    26 #>  [1038,]   20   22   22   23   24   24   22   20   22    25 #>  [1039,]   20   22   22   23   24   24   22   20   22    25 #>  [1040,]   20   22   22   23   24   24   22   20   22    25 #>  [1041,]   20   22   22   23   24   24   22   20   22    25 #>  [1042,]   20   21   21   22   23   23   21   21   23    26 #>  [1043,]   20   21   21   22   23   23   21   22   24    26 #>  [1044,]   20   21   21   22   23   23   21   22   24    26 #>  [1045,]   20   22   22   23   24   24   22   20   22    25 #>  [1046,]   20   21   21   22   23   23   21   22   24    26 #>  [1047,]   20   21   21   22   23   23   21   21   23    26 #>  [1048,]   20   21   21   22   23   23   21   21   23    26 #>  [1049,]   20   22   22   23   24   24   22   20   22    25 #>  [1050,]   20   22   22   23   24   24   22   20   22    25 #>  [1051,]   20   22   22   23   24   24   22   20   22    25 #>  [1052,]   20   22   22   23   24   24   22   20   22    25 #>  [1053,]   20   22   22   23   24   24   22   20   22    25 #>  [1054,]   20   22   22   23   24   24   22   20   22    25 #>  [1055,]   20   22   22   23   24   24   22   20   22    25 #>  [1056,]   20   21   21   22   23   23   21   22   24    26 #>  [1057,]   20   22   22   23   24   24   22   20   22    25 #>  [1058,]   20   22   22   23   24   24   22   20   22    25 #>  [1059,]   20   22   22   23   24   24   22   20   22    25 #>  [1060,]   20   21   21   22   23   23   21   22   24    26 #>  [1061,]   20   21   21   22   23   23   21   22   24    26 #>  [1062,]   20   22   22   23   24   24   22   20   22    25 #>  [1063,]   20   21   21   22   23   23   21   22   24    26 #>  [1064,]   20   21   21   22   23   23   21   22   24    26 #>  [1065,]   20   21   21   22   23   23   21   21   23    26 #>  [1066,]   20   21   21   22   23   23   21   22   24    26 #>  [1067,]   20   22   22   23   24   24   22   20   22    25 #>  [1068,]   20   21   21   22   23   23   21   22   24    26 #>  [1069,]   20   22   22   23   24   24   22   20   22    25 #>  [1070,]   20   21   21   22   23   23   21   21   23    26 #>  [1071,]   20   22   22   23   24   24   22   20   22    25 #>  [1072,]   20   22   22   23   24   24   22   20   22    25 #>  [1073,]   20   22   22   23   24   24   22   20   22    25 #>  [1074,]   20   22   22   23   24   24   22   20   22    25 #>  [1075,]   20   21   21   22   23   23   21   22   24    26 #>  [1076,]   20   22   22   23   24   24   22   20   22    25 #>  [1077,]   20   22   22   23   24   24   22   20   22    25 #>  [1078,]   20   21   21   22   23   23   21   22   24    26 #>  [1079,]   20   21   21   22   23   23   21   21   23    26 #>  [1080,]   20   22   22   23   24   24   22   20   22    25 #>  [1081,]   20   21   21   22   23   23   21   22   24    26 #>  [1082,]   20   22   22   23   24   24   22   20   22    25 #>  [1083,]   20   22   22   23   24   24   22   20   22    25 #>  [1084,]   20   22   22   23   24   24   22   20   22    25 #>  [1085,]   20   22   22   23   24   24   22   20   22    25 #>  [1086,]   20   22   22   23   24   24   22   20   22    25 #>  [1087,]   20   22   22   23   24   24   22   20   22    25 #>  [1088,]   20   22   22   23   24   24   22   20   22    25 #>  [1089,]   20   22   22   23   24   24   22   20   22    25 #>  [1090,]   20   22   22   23   24   24   22   20   22    25 #>  [1091,]   20   22   22   23   24   24   22   20   22    25 #>  [1092,]   20   21   21   22   23   23   21   21   23    26 #>  [1093,]   20   21   21   22   23   23   21   22   24    26 #>  [1094,]   20   21   21   22   23   23   21   21   23    26 #>  [1095,]   20   21   21   22   23   23   21   22   24    26 #>  [1096,]   20   21   21   22   23   23   21   22   24    26 #>  [1097,]   20   22   22   23   24   24   22   20   22    25 #>  [1098,]   20   22   22   23   24   24   22   20   22    25 #>  [1099,]   20   22   22   23   24   24   22   20   22    25 #>  [1100,]   20   21   21   22   23   23   21   22   24    26 #>  [1101,]   22   24   23   24   25   25   23   23   25    27 #>  [1102,]   22   24   23   24   25   25   23   23   25    28 #>  [1103,]   22   24   23   24   25   25   23   23   25    28 #>  [1104,]   22   24   23   24   25   25   23   23   25    27 #>  [1105,]   22   24   23   25   26   26   24   24   25    27 #>  [1106,]   22   24   23   24   25   25   23   23   25    28 #>  [1107,]   22   24   23   24   25   25   23   23   25    27 #>  [1108,]   22   24   23   24   25   25   23   23   25    27 #>  [1109,]   22   24   23   24   25   25   23   23   25    27 #>  [1110,]   22   24   23   24   25   25   23   23   25    27 #>  [1111,]   22   24   23   24   25   25   23   23   25    27 #>  [1112,]   22   24   23   24   25   25   23   23   25    28 #>  [1113,]   22   24   23   24   25   25   23   23   25    27 #>  [1114,]   22   24   23   24   25   25   23   23   25    27 #>  [1115,]   22   24   23   25   26   26   24   24   25    27 #>  [1116,]   22   24   23   24   25   25   23   23   25    27 #>  [1117,]   22   24   23   24   25   25   23   23   25    27 #>  [1118,]   22   24   23   25   26   26   24   24   25    28 #>  [1119,]   22   24   23   24   25   25   23   23   25    28 #>  [1120,]   22   24   23   24   25   25   23   23   25    28 #>  [1121,]   22   24   23   24   25   25   23   23   25    27 #>  [1122,]   22   24   23   24   25   25   23   23   25    27 #>  [1123,]   22   24   23   24   25   25   23   23   25    27 #>  [1124,]   22   24   23   24   25   25   23   23   25    27 #>  [1125,]   21   23   23   24   25   25   23   23   25    28 #>  [1126,]   22   24   23   24   25   25   23   23   25    27 #>  [1127,]   22   24   23   25   26   26   24   24   25    27 #>  [1128,]   22   24   23   24   25   25   23   23   25    28 #>  [1129,]   22   24   23   24   25   25   23   23   25    27 #>  [1130,]   22   24   23   24   25   25   23   23   25    27 #>  [1131,]   22   24   23   24   25   25   23   23   25    28 #>  [1132,]   22   24   23   25   26   26   24   24   25    28 #>  [1133,]   22   24   23   24   25   25   23   23   25    28 #>  [1134,]   22   24   23   24   25   25   23   23   25    28 #>  [1135,]   22   24   23   24   25   25   23   23   25    27 #>  [1136,]   22   24   23   24   25   25   23   23   25    27 #>  [1137,]   22   24   23   24   25   25   23   23   25    27 #>  [1138,]   22   24   23   24   25   25   23   23   25    27 #>  [1139,]   22   24   23   24   25   25   23   23   25    27 #>  [1140,]   22   24   23   24   25   25   23   23   25    27 #>  [1141,]   22   24   23   24   25   25   23   23   25    27 #>  [1142,]   22   24   23   24   25   25   23   23   25    28 #>  [1143,]   22   24   23   24   25   25   23   23   25    27 #>  [1144,]   22   24   23   24   25   25   23   23   25    27 #>  [1145,]   22   24   23   24   25   25   23   23   25    27 #>  [1146,]   22   24   23   24   25   25   23   23   25    27 #>  [1147,]   22   24   23   24   25   25   23   23   25    27 #>  [1148,]   22   24   23   24   25   25   23   23   25    27 #>  [1149,]   22   24   23   24   25   25   23   23   25    27 #>  [1150,]   22   24   23   24   25   25   23   23   25    27 #>  [1151,]   22   24   23   24   25   25   23   23   25    27 #>  [1152,]   22   24   23   24   25   25   23   23   25    27 #>  [1153,]   22   24   23   24   25   25   23   23   25    27 #>  [1154,]   22   24   23   24   25   25   23   23   25    27 #>  [1155,]   22   24   23   24   25   25   23   23   25    27 #>  [1156,]   21   23   23   24   25   25   23   23   25    27 #>  [1157,]   22   24   23   24   25   25   23   23   25    27 #>  [1158,]   22   24   23   24   25   25   23   23   25    27 #>  [1159,]   22   24   23   24   25   25   23   23   25    27 #>  [1160,]   22   24   23   24   25   25   23   23   25    28 #>  [1161,]   22   24   23   24   25   25   23   23   25    27 #>  [1162,]   22   24   23   24   25   25   23   23   25    27 #>  [1163,]   22   24   23   24   25   25   23   23   25    27 #>  [1164,]   22   24   23   24   25   25   23   23   25    28 #>  [1165,]   21   23   23   24   25   25   23   23   25    28 #>  [1166,]   22   24   23   24   25   25   23   23   25    27 #>  [1167,]   22   24   23   24   25   25   23   23   25    27 #>  [1168,]   22   24   23   24   25   25   23   23   25    27 #>  [1169,]   22   24   23   24   25   25   23   23   25    27 #>  [1170,]   22   24   23   24   25   25   23   23   25    28 #>  [1171,]   22   24   23   25   26   26   24   24   25    28 #>  [1172,]   22   24   23   24   25   25   23   23   25    27 #>  [1173,]   22   24   23   24   25   25   23   23   25    28 #>  [1174,]   22   24   23   24   25   25   23   23   25    27 #>  [1175,]   22   24   23   25   26   26   24   24   25    27 #>  [1176,]   22   24   23   24   25   25   23   23   25    27 #>  [1177,]   22   24   23   24   25   25   23   23   25    27 #>  [1178,]   22   24   23   24   25   25   23   23   25    27 #>  [1179,]   22   24   23   24   25   25   23   23   25    27 #>  [1180,]   21   23   23   24   25   25   23   23   25    27 #>  [1181,]   22   24   23   24   25   25   23   23   25    27 #>  [1182,]   22   24   23   24   25   25   23   23   25    27 #>  [1183,]   22   24   23   24   25   25   23   23   25    27 #>  [1184,]   22   24   23   24   25   25   23   23   25    28 #>  [1185,]   21   23   23   24   25   25   23   23   25    27 #>  [1186,]   22   24   23   24   25   25   23   23   25    27 #>  [1187,]   22   24   23   24   25   25   23   23   25    27 #>  [1188,]   22   24   23   24   25   25   23   23   25    27 #>  [1189,]   22   24   23   24   25   25   23   23   25    27 #>  [1190,]   22   24   23   24   25   25   23   23   25    27 #>  [1191,]   22   24   23   25   26   26   24   24   25    27 #>  [1192,]   22   24   23   24   25   25   23   23   25    27 #>  [1193,]   22   24   23   24   25   25   23   23   25    28 #>  [1194,]   22   24   23   24   25   25   23   23   25    27 #>  [1195,]   22   24   23   25   26   26   24   24   25    27 #>  [1196,]   22   24   23   24   25   25   23   23   25    27 #>  [1197,]   22   24   23   24   25   25   23   23   25    28 #>  [1198,]   22   24   23   24   25   25   23   23   25    28 #>  [1199,]   22   24   23   24   25   25   23   23   25    27 #>  [1200,]   22   24   23   25   26   26   24   24   25    28 #>  [1201,]   24   26   25   27   28   28   26   26   27    30 #>  [1202,]   23   25   24   26   27   27   25   25   26    29 #>  [1203,]   24   26   25   27   28   28   26   26   27    30 #>  [1204,]   24   26   25   27   28   28   26   26   27    30 #>  [1205,]   24   26   25   27   28   28   26   26   27    30 #>  [1206,]   23   25   24   26   27   27   25   25   26    29 #>  [1207,]   24   26   25   27   28   28   26   26   27    30 #>  [1208,]   24   26   25   27   28   28   26   26   27    30 #>  [1209,]   24   26   25   27   28   28   26   26   27    30 #>  [1210,]   24   26   25   27   28   28   26   26   27    30 #>  [1211,]   23   25   24   26   27   27   25   25   26    29 #>  [1212,]   23   25   24   26   27   27   25   25   26    29 #>  [1213,]   24   26   25   27   28   28   26   26   27    30 #>  [1214,]   24   26   25   27   28   28   26   26   27    30 #>  [1215,]   23   25   24   26   27   27   25   25   26    29 #>  [1216,]   24   26   25   27   28   28   26   26   27    30 #>  [1217,]   23   25   24   26   27   27   25   25   26    29 #>  [1218,]   24   26   25   27   28   28   26   26   27    30 #>  [1219,]   24   26   25   27   28   28   26   26   27    30 #>  [1220,]   24   26   25   27   28   28   26   26   27    30 #>  [1221,]   24   26   25   27   28   28   26   26   27    30 #>  [1222,]   24   26   25   27   28   28   26   26   27    30 #>  [1223,]   23   25   24   26   27   27   25   25   26    29 #>  [1224,]   24   26   25   27   28   28   26   26   27    30 #>  [1225,]   24   26   25   27   28   28   26   26   27    30 #>  [1226,]   24   26   25   27   28   28   26   26   27    30 #>  [1227,]   24   26   25   27   28   28   26   26   27    30 #>  [1228,]   24   26   25   27   28   28   26   26   27    30 #>  [1229,]   23   25   24   26   27   27   25   25   26    29 #>  [1230,]   23   25   24   26   27   27   25   25   26    29 #>  [1231,]   23   25   24   26   27   27   25   25   26    29 #>  [1232,]   24   26   25   27   28   28   26   26   27    30 #>  [1233,]   24   26   25   27   28   28   26   26   27    30 #>  [1234,]   23   25   24   26   27   27   25   25   26    29 #>  [1235,]   24   26   25   27   28   28   26   26   27    30 #>  [1236,]   24   26   25   27   28   28   26   26   27    30 #>  [1237,]   23   25   24   26   27   27   25   25   26    29 #>  [1238,]   24   26   25   27   28   28   26   26   27    30 #>  [1239,]   24   26   25   27   28   28   26   26   27    30 #>  [1240,]   24   26   25   27   28   28   26   26   27    30 #>  [1241,]   24   26   25   27   28   28   26   26   27    30 #>  [1242,]   23   25   24   26   27   27   25   25   26    29 #>  [1243,]   23   25   24   26   27   27   25   25   26    29 #>  [1244,]   23   25   24   26   27   27   25   25   26    29 #>  [1245,]   24   26   25   27   28   28   26   26   27    30 #>  [1246,]   24   26   25   27   28   28   26   26   27    30 #>  [1247,]   23   25   24   26   27   27   25   25   26    29 #>  [1248,]   23   25   24   26   27   27   25   25   26    29 #>  [1249,]   24   26   25   27   28   28   26   26   27    30 #>  [1250,]   24   26   25   27   28   28   26   26   27    30 #>  [1251,]   24   26   25   27   28   28   26   26   27    30 #>  [1252,]   24   26   25   27   28   28   26   26   27    30 #>  [1253,]   24   26   25   27   28   28   26   26   27    30 #>  [1254,]   24   26   25   27   28   28   26   26   27    30 #>  [1255,]   24   26   25   27   28   28   26   26   27    30 #>  [1256,]   23   25   24   26   27   27   25   25   26    29 #>  [1257,]   24   26   25   27   28   28   26   26   27    30 #>  [1258,]   24   26   25   27   28   28   26   26   27    30 #>  [1259,]   24   26   25   27   28   28   26   26   27    30 #>  [1260,]   23   25   24   26   27   27   25   25   26    29 #>  [1261,]   23   25   24   26   27   27   25   25   26    29 #>  [1262,]   24   26   25   27   28   28   26   26   27    30 #>  [1263,]   23   25   24   26   27   27   25   25   26    29 #>  [1264,]   23   25   24   26   27   27   25   25   26    29 #>  [1265,]   23   25   24   26   27   27   25   25   26    29 #>  [1266,]   23   25   24   26   27   27   25   25   26    29 #>  [1267,]   24   26   25   27   28   28   26   26   27    30 #>  [1268,]   24   26   25   27   28   28   26   26   27    30 #>  [1269,]   24   26   25   27   28   28   26   26   27    30 #>  [1270,]   23   25   24   26   27   27   25   25   26    29 #>  [1271,]   24   26   25   27   28   28   26   26   27    30 #>  [1272,]   24   26   25   27   28   28   26   26   27    30 #>  [1273,]   24   26   25   27   28   28   26   26   27    30 #>  [1274,]   24   26   25   27   28   28   26   26   27    30 #>  [1275,]   23   25   24   26   27   27   25   25   26    29 #>  [1276,]   24   26   25   27   28   28   26   26   27    30 #>  [1277,]   24   26   25   27   28   28   26   26   27    30 #>  [1278,]   23   25   24   26   27   27   25   25   26    29 #>  [1279,]   23   25   24   26   27   27   25   25   26    29 #>  [1280,]   24   26   25   27   28   28   26   26   27    30 #>  [1281,]   23   25   24   26   27   27   25   25   26    29 #>  [1282,]   24   26   25   27   28   28   26   26   27    30 #>  [1283,]   24   26   25   27   28   28   26   26   27    30 #>  [1284,]   24   26   25   27   28   28   26   26   27    30 #>  [1285,]   24   26   25   27   28   28   26   26   27    30 #>  [1286,]   24   26   25   27   28   28   26   26   27    30 #>  [1287,]   24   26   25   27   28   28   26   26   27    30 #>  [1288,]   24   26   25   27   28   28   26   26   27    30 #>  [1289,]   24   26   25   27   28   28   26   26   27    30 #>  [1290,]   24   26   25   27   28   28   26   26   27    30 #>  [1291,]   24   26   25   27   28   28   26   26   27    30 #>  [1292,]   23   25   24   26   27   27   25   25   26    29 #>  [1293,]   24   26   25   27   28   28   26   26   27    30 #>  [1294,]   23   25   24   26   27   27   25   25   26    29 #>  [1295,]   23   25   24   26   27   27   25   25   26    29 #>  [1296,]   24   26   25   27   28   28   26   26   27    30 #>  [1297,]   24   26   25   27   28   28   26   26   27    30 #>  [1298,]   24   26   25   27   28   28   26   26   27    30 #>  [1299,]   24   26   25   27   28   28   26   26   27    30 #>  [1300,]   23   25   24   26   27   27   25   25   26    29 #>  [1301,]   26   28   27   29   30   30   28   28   29    32 #>  [1302,]   26   28   27   29   30   30   28   28   29    32 #>  [1303,]   25   27   26   28   29   29   27   27   28    31 #>  [1304,]   26   28   27   29   30   30   28   28   29    32 #>  [1305,]   26   28   27   29   30   30   28   28   29    32 #>  [1306,]   26   28   27   29   30   30   28   28   29    32 #>  [1307,]   25   27   26   28   29   29   27   27   28    31 #>  [1308,]   25   27   26   28   29   29   27   27   28    31 #>  [1309,]   26   28   27   29   30   30   28   28   29    32 #>  [1310,]   26   28   27   29   30   30   28   28   29    32 #>  [1311,]   26   28   27   29   30   30   28   28   29    32 #>  [1312,]   26   28   27   29   30   30   28   28   29    32 #>  [1313,]   25   27   26   28   29   29   27   27   28    31 #>  [1314,]   26   28   27   29   30   30   28   28   29    32 #>  [1315,]   26   28   27   29   30   30   28   28   29    32 #>  [1316,]   25   27   26   28   29   29   27   27   28    31 #>  [1317,]   25   27   26   28   29   29   27   27   28    31 #>  [1318,]   26   28   27   29   30   30   28   28   29    32 #>  [1319,]   26   28   27   29   30   30   28   28   29    32 #>  [1320,]   25   27   26   28   29   29   27   27   28    31 #>  [1321,]   26   28   27   29   30   30   28   28   29    32 #>  [1322,]   25   27   26   28   29   29   27   27   28    31 #>  [1323,]   26   28   27   29   30   30   28   28   29    32 #>  [1324,]   25   27   26   28   29   29   27   27   28    31 #>  [1325,]   25   27   26   28   29   29   27   27   28    31 #>  [1326,]   26   28   27   29   30   30   28   28   29    32 #>  [1327,]   26   28   27   29   30   30   28   28   29    32 #>  [1328,]   26   28   27   29   30   30   28   28   29    32 #>  [1329,]   26   28   27   29   30   30   28   28   29    32 #>  [1330,]   26   28   27   29   30   30   28   28   29    32 #>  [1331,]   26   28   27   29   30   30   28   28   29    32 #>  [1332,]   26   28   27   29   30   30   28   28   29    32 #>  [1333,]   26   28   27   29   30   30   28   28   29    32 #>  [1334,]   26   28   27   29   30   30   28   28   29    32 #>  [1335,]   26   28   27   29   30   30   28   28   29    32 #>  [1336,]   26   28   27   29   30   30   28   28   29    32 #>  [1337,]   26   28   27   29   30   30   28   28   29    32 #>  [1338,]   26   28   27   29   30   30   28   28   29    32 #>  [1339,]   25   27   26   28   29   29   27   27   28    31 #>  [1340,]   25   27   26   28   29   29   27   27   28    31 #>  [1341,]   26   28   27   29   30   30   28   28   29    32 #>  [1342,]   26   28   27   29   30   30   28   28   29    32 #>  [1343,]   25   27   26   28   29   29   27   27   28    31 #>  [1344,]   25   27   26   28   29   29   27   27   28    31 #>  [1345,]   25   27   26   28   29   29   27   27   28    31 #>  [1346,]   25   27   26   28   29   29   27   27   28    31 #>  [1347,]   25   27   26   28   29   29   27   27   28    31 #>  [1348,]   26   28   27   29   30   30   28   28   29    32 #>  [1349,]   25   27   26   28   29   29   27   27   28    31 #>  [1350,]   25   27   26   28   29   29   27   27   28    31 #>  [1351,]   26   28   27   29   30   30   28   28   29    32 #>  [1352,]   26   28   27   29   30   30   28   28   29    32 #>  [1353,]   25   27   26   28   29   29   27   27   28    31 #>  [1354,]   25   27   26   28   29   29   27   27   28    31 #>  [1355,]   25   27   26   28   29   29   27   27   28    31 #>  [1356,]   25   27   26   28   29   29   27   27   28    31 #>  [1357,]   26   28   27   29   30   30   28   28   29    32 #>  [1358,]   26   28   27   29   30   30   28   28   29    32 #>  [1359,]   25   27   26   28   29   29   27   27   28    31 #>  [1360,]   26   28   27   29   30   30   28   28   29    32 #>  [1361,]   26   28   27   29   30   30   28   28   29    32 #>  [1362,]   26   28   27   29   30   30   28   28   29    32 #>  [1363,]   25   27   26   28   29   29   27   27   28    31 #>  [1364,]   26   28   27   29   30   30   28   28   29    32 #>  [1365,]   25   27   26   28   29   29   27   27   28    31 #>  [1366,]   25   27   26   28   29   29   27   27   28    31 #>  [1367,]   26   28   27   29   30   30   28   28   29    32 #>  [1368,]   26   28   27   29   30   30   28   28   29    32 #>  [1369,]   26   28   27   29   30   30   28   28   29    32 #>  [1370,]   25   27   26   28   29   29   27   27   28    31 #>  [1371,]   26   28   27   29   30   30   28   28   29    32 #>  [1372,]   25   27   26   28   29   29   27   27   28    31 #>  [1373,]   26   28   27   29   30   30   28   28   29    32 #>  [1374,]   26   28   27   29   30   30   28   28   29    32 #>  [1375,]   26   28   27   29   30   30   28   28   29    32 #>  [1376,]   26   28   27   29   30   30   28   28   29    32 #>  [1377,]   25   27   26   28   29   29   27   27   28    31 #>  [1378,]   25   27   26   28   29   29   27   27   28    31 #>  [1379,]   25   27   26   28   29   29   27   27   28    31 #>  [1380,]   26   28   27   29   30   30   28   28   29    32 #>  [1381,]   26   28   27   29   30   30   28   28   29    32 #>  [1382,]   26   28   27   29   30   30   28   28   29    32 #>  [1383,]   26   28   27   29   30   30   28   28   29    32 #>  [1384,]   25   27   26   28   29   29   27   27   28    31 #>  [1385,]   26   28   27   29   30   30   28   28   29    32 #>  [1386,]   25   27   26   28   29   29   27   27   28    31 #>  [1387,]   26   28   27   29   30   30   28   28   29    32 #>  [1388,]   26   28   27   29   30   30   28   28   29    32 #>  [1389,]   25   27   26   28   29   29   27   27   28    31 #>  [1390,]   25   27   26   28   29   29   27   27   28    31 #>  [1391,]   26   28   27   29   30   30   28   28   29    32 #>  [1392,]   26   28   27   29   30   30   28   28   29    32 #>  [1393,]   26   28   27   29   30   30   28   28   29    32 #>  [1394,]   25   27   26   28   29   29   27   27   28    31 #>  [1395,]   26   28   27   29   30   30   28   28   29    32 #>  [1396,]   26   28   27   29   30   30   28   28   29    32 #>  [1397,]   26   28   27   29   30   30   28   28   29    32 #>  [1398,]   25   27   26   28   29   29   27   27   28    31 #>  [1399,]   26   28   27   29   30   30   28   28   29    32 #>  [1400,]   25   27   26   28   29   29   27   27   28    31 #>  [1401,]   28   30   29   31   32   32   30   31   31    34 #>  [1402,]   28   30   29   31   32   33   30   31   31    34 #>  [1403,]   28   30   29   31   32   33   30   31   31    34 #>  [1404,]   28   30   29   31   32   32   30   31   31    34 #>  [1405,]   28   30   29   31   32   32   30   31   31    34 #>  [1406,]   28   30   29   31   32   33   30   31   31    34 #>  [1407,]   28   30   29   31   32   33   30   31   31    34 #>  [1408,]   28   30   29   31   32   32   30   31   31    34 #>  [1409,]   28   30   29   31   32   32   30   31   31    34 #>  [1410,]   28   30   29   31   32   32   30   31   31    34 #>  [1411,]   28   30   29   31   32   32   30   31   31    34 #>  [1412,]   28   30   29   31   32   33   30   31   31    34 #>  [1413,]   28   30   29   31   32   32   30   31   31    34 #>  [1414,]   28   30   29   31   32   32   30   31   31    34 #>  [1415,]   28   30   29   31   32   32   30   30   31    34 #>  [1416,]   28   30   29   31   32   32   30   31   31    34 #>  [1417,]   28   30   29   31   32   32   30   30   31    34 #>  [1418,]   28   30   29   31   32   33   30   31   31    34 #>  [1419,]   28   30   29   31   32   33   30   31   31    34 #>  [1420,]   27   29   28   30   31   31   29   29   30    33 #>  [1421,]   27   29   28   30   31   31   29   29   30    33 #>  [1422,]   28   30   29   31   32   32   30   31   31    34 #>  [1423,]   28   30   29   31   32   33   30   31   31    34 #>  [1424,]   28   30   29   31   32   32   30   31   31    34 #>  [1425,]   27   29   28   30   31   31   29   29   30    33 #>  [1426,]   28   30   29   31   32   32   30   31   31    34 #>  [1427,]   28   30   29   31   32   32   30   31   31    34 #>  [1428,]   28   30   29   31   32   33   30   31   31    34 #>  [1429,]   28   30   29   31   32   32   30   31   31    34 #>  [1430,]   28   30   29   31   32   32   30   31   31    34 #>  [1431,]   28   30   29   31   32   33   30   30   31    34 #>  [1432,]   28   30   29   31   32   33   30   31   31    34 #>  [1433,]   28   30   29   31   32   33   30   31   31    34 #>  [1434,]   28   30   29   31   32   33   30   30   31    34 #>  [1435,]   28   30   29   31   32   32   30   31   31    34 #>  [1436,]   28   30   29   31   32   32   30   31   31    34 #>  [1437,]   28   30   29   31   32   32   30   30   31    34 #>  [1438,]   28   30   29   31   32   32   30   31   31    34 #>  [1439,]   28   30   29   31   32   32   30   31   31    34 #>  [1440,]   28   30   29   31   32   33   30   31   31    34 #>  [1441,]   28   30   29   31   32   32   30   31   31    34 #>  [1442,]   28   30   29   31   32   33   30   30   31    34 #>  [1443,]   28   30   29   31   32   32   30   30   31    34 #>  [1444,]   28   30   29   31   32   32   30   30   31    34 #>  [1445,]   28   30   29   31   32   32   30   31   31    34 #>  [1446,]   28   30   29   31   32   32   30   31   31    34 #>  [1447,]   28   30   29   31   32   32   30   31   31    34 #>  [1448,]   28   30   29   31   32   33   30   30   31    34 #>  [1449,]   28   30   29   31   32   32   30   31   31    34 #>  [1450,]   28   30   29   31   32   32   30   31   31    34 #>  [1451,]   28   30   29   31   32   32   30   31   31    34 #>  [1452,]   28   30   29   31   32   32   30   31   31    34 #>  [1453,]   28   30   29   31   32   32   30   31   31    34 #>  [1454,]   28   30   29   31   32   32   30   31   31    34 #>  [1455,]   28   30   29   31   32   32   30   31   31    34 #>  [1456,]   27   29   28   30   31   31   29   29   30    33 #>  [1457,]   28   30   29   31   32   32   30   31   31    34 #>  [1458,]   28   30   29   31   32   32   30   31   31    34 #>  [1459,]   28   30   29   31   32   32   30   31   31    34 #>  [1460,]   28   30   29   31   32   33   30   31   31    34 #>  [1461,]   28   30   29   31   32   32   30   31   31    34 #>  [1462,]   28   30   29   31   32   32   30   31   31    34 #>  [1463,]   28   30   29   31   32   32   30   30   31    34 #>  [1464,]   28   30   29   31   32   33   30   31   31    34 #>  [1465,]   27   29   28   30   31   31   29   29   30    33 #>  [1466,]   28   30   29   31   32   32   30   31   31    34 #>  [1467,]   28   30   29   31   32   32   30   31   31    34 #>  [1468,]   28   30   29   31   32   32   30   31   31    34 #>  [1469,]   28   30   29   31   32   32   30   31   31    34 #>  [1470,]   28   30   29   31   32   33   30   30   31    34 #>  [1471,]   28   30   29   31   32   33   30   31   31    34 #>  [1472,]   28   30   29   31   32   32   30   31   31    34 #>  [1473,]   28   30   29   31   32   33   30   31   31    34 #>  [1474,]   27   29   28   30   31   31   29   29   30    33 #>  [1475,]   28   30   29   31   32   32   30   30   31    34 #>  [1476,]   28   30   29   31   32   32   30   31   31    34 #>  [1477,]   28   30   29   31   32   32   30   31   31    34 #>  [1478,]   28   30   29   31   32   33   30   30   31    34 #>  [1479,]   28   30   29   31   32   32   30   30   31    34 #>  [1480,]   27   29   28   30   31   31   29   29   30    33 #>  [1481,]   28   30   29   31   32   32   30   31   31    34 #>  [1482,]   28   30   29   31   32   32   30   31   31    34 #>  [1483,]   28   30   29   31   32   32   30   31   31    34 #>  [1484,]   28   30   29   31   32   33   30   31   31    34 #>  [1485,]   27   29   28   30   31   31   29   29   30    33 #>  [1486,]   27   29   28   30   31   31   29   29   30    33 #>  [1487,]   28   30   29   31   32   32   30   31   31    34 #>  [1488,]   28   30   29   31   32   32   30   31   31    34 #>  [1489,]   27   29   28   30   31   31   29   29   30    33 #>  [1490,]   28   30   29   31   32   32   30   31   31    34 #>  [1491,]   28   30   29   31   32   32   30   31   31    34 #>  [1492,]   28   30   29   31   32   32   30   31   31    34 #>  [1493,]   28   30   29   31   32   33   30   31   31    34 #>  [1494,]   28   30   29   31   32   32   30   31   31    34 #>  [1495,]   28   30   29   31   32   32   30   30   31    34 #>  [1496,]   28   30   29   31   32   32   30   31   31    34 #>  [1497,]   28   30   29   31   32   33   30   31   31    34 #>  [1498,]   28   30   29   31   32   33   30   31   31    34 #>  [1499,]   28   30   29   31   32   32   30   31   31    34 #>  [1500,]   28   30   29   31   32   33   30   30   31    34 #>  [1501,]   30   32   31   33   34   35   31   33   33    36 #>  [1502,]   30   32   31   33   34   35   31   33   33    36 #>  [1503,]   30   32   31   33   34   35   31   32   32    35 #>  [1504,]   29   31   30   32   33   34   31   32   32    35 #>  [1505,]   30   32   31   33   34   35   31   32   32    35 #>  [1506,]   30   32   31   33   34   35   31   33   33    36 #>  [1507,]   30   32   31   33   34   35   31   32   32    35 #>  [1508,]   29   31   30   32   33   34   31   32   32    35 #>  [1509,]   29   31   30   32   33   34   31   32   32    35 #>  [1510,]   30   32   31   33   34   35   31   32   32    35 #>  [1511,]   29   31   30   32   33   34   31   32   32    35 #>  [1512,]   30   32   31   33   34   35   31   32   32    35 #>  [1513,]   30   32   31   33   34   35   31   33   33    36 #>  [1514,]   30   32   31   33   34   35   31   33   33    36 #>  [1515,]   30   32   31   33   34   35   31   33   33    36 #>  [1516,]   30   32   31   33   34   35   31   33   33    36 #>  [1517,]   29   31   30   32   33   34   31   33   33    36 #>  [1518,]   30   32   31   33   34   35   31   32   32    35 #>  [1519,]   30   32   31   33   34   35   31   32   32    35 #>  [1520,]   30   32   31   33   34   35   31   32   32    35 #>  [1521,]   30   32   31   33   34   35   31   33   33    36 #>  [1522,]   29   31   30   32   33   34   31   32   32    35 #>  [1523,]   30   32   31   33   34   35   31   32   32    35 #>  [1524,]   30   32   31   33   34   35   31   32   32    35 #>  [1525,]   30   32   31   33   34   35   31   32   32    35 #>  [1526,]   30   32   31   33   34   35   31   32   32    35 #>  [1527,]   29   31   30   32   33   34   31   32   32    35 #>  [1528,]   30   32   31   33   34   35   31   32   32    35 #>  [1529,]   30   32   31   33   34   35   31   33   33    36 #>  [1530,]   30   32   31   33   34   35   31   32   32    35 #>  [1531,]   30   32   31   33   34   35   31   32   32    35 #>  [1532,]   30   32   31   33   34   35   31   32   32    35 #>  [1533,]   30   32   31   33   34   35   31   33   33    36 #>  [1534,]   30   32   31   33   34   35   31   32   32    35 #>  [1535,]   29   31   30   32   33   34   31   32   32    35 #>  [1536,]   30   32   31   33   34   35   31   32   32    35 #>  [1537,]   30   32   31   33   34   35   31   32   32    35 #>  [1538,]   30   32   31   33   34   35   31   32   32    35 #>  [1539,]   30   32   31   33   34   35   31   32   32    35 #>  [1540,]   30   32   31   33   34   35   31   32   32    35 #>  [1541,]   30   32   31   33   34   35   31   33   33    36 #>  [1542,]   30   32   31   33   34   35   31   32   32    35 #>  [1543,]   30   32   31   33   34   35   31   32   32    35 #>  [1544,]   29   31   30   32   33   34   31   33   33    36 #>  [1545,]   30   32   31   33   34   35   31   32   32    35 #>  [1546,]   30   32   31   33   34   35   31   32   32    35 #>  [1547,]   30   32   31   33   34   35   31   32   32    35 #>  [1548,]   30   32   31   33   34   35   31   32   32    35 #>  [1549,]   30   32   31   33   34   35   31   32   32    35 #>  [1550,]   30   32   31   33   34   35   31   33   33    36 #>  [1551,]   30   32   31   33   34   35   31   32   32    35 #>  [1552,]   29   31   30   32   33   34   31   32   32    35 #>  [1553,]   30   32   31   33   34   35   31   32   32    35 #>  [1554,]   30   32   31   33   34   35   31   32   32    35 #>  [1555,]   30   32   31   33   34   35   31   32   32    35 #>  [1556,]   30   32   31   33   34   35   31   32   32    35 #>  [1557,]   30   32   31   33   34   35   31   32   32    35 #>  [1558,]   29   31   30   32   33   34   31   32   32    35 #>  [1559,]   30   32   31   33   34   35   31   33   33    36 #>  [1560,]   30   32   31   33   34   35   31   32   32    35 #>  [1561,]   30   32   31   33   34   35   31   33   33    36 #>  [1562,]   30   32   31   33   34   35   31   32   32    35 #>  [1563,]   30   32   31   33   34   35   31   32   32    35 #>  [1564,]   30   32   31   33   34   35   31   32   32    35 #>  [1565,]   30   32   31   33   34   35   31   32   32    35 #>  [1566,]   29   31   30   32   33   34   31   32   32    35 #>  [1567,]   30   32   31   33   34   35   31   32   32    35 #>  [1568,]   30   32   31   33   34   35   31   33   33    36 #>  [1569,]   30   32   31   33   34   35   31   32   32    35 #>  [1570,]   30   32   31   33   34   35   31   33   33    36 #>  [1571,]   30   32   31   33   34   35   31   32   32    35 #>  [1572,]   30   32   31   33   34   35   31   32   32    35 #>  [1573,]   30   32   31   33   34   35   31   33   33    36 #>  [1574,]   30   32   31   33   34   35   31   32   32    35 #>  [1575,]   30   32   31   33   34   35   31   32   32    35 #>  [1576,]   30   32   31   33   34   35   31   33   33    36 #>  [1577,]   30   32   31   33   34   35   31   32   32    35 #>  [1578,]   30   32   31   33   34   35   31   32   32    35 #>  [1579,]   30   32   31   33   34   35   31   32   32    35 #>  [1580,]   30   32   31   33   34   35   31   32   32    35 #>  [1581,]   29   31   30   32   33   34   31   33   33    36 #>  [1582,]   29   31   30   32   33   34   31   32   32    35 #>  [1583,]   30   32   31   33   34   35   31   33   33    36 #>  [1584,]   30   32   31   33   34   35   31   32   32    35 #>  [1585,]   30   32   31   33   34   35   31   32   32    35 #>  [1586,]   30   32   31   33   34   35   31   33   33    36 #>  [1587,]   29   31   30   32   33   34   31   32   32    35 #>  [1588,]   30   32   31   33   34   35   31   32   32    35 #>  [1589,]   30   32   31   33   34   35   31   32   32    35 #>  [1590,]   29   31   30   32   33   34   31   32   32    35 #>  [1591,]   30   32   31   33   34   35   31   32   32    35 #>  [1592,]   29   31   30   32   33   34   31   32   32    35 #>  [1593,]   30   32   31   33   34   35   31   33   33    36 #>  [1594,]   30   32   31   33   34   35   31   32   32    35 #>  [1595,]   29   31   30   32   33   34   31   32   32    35 #>  [1596,]   30   32   31   33   34   35   31   33   33    36 #>  [1597,]   30   32   31   33   34   35   31   32   32    35 #>  [1598,]   30   32   31   33   34   35   31   32   32    35 #>  [1599,]   29   31   30   32   33   34   31   33   33    36 #>  [1600,]   30   32   31   33   34   35   31   32   32    35 #>  [1601,]   32   34   33   34   35   36   32   34   34    37 #>  [1602,]   32   34   33   34   36   37   33   35   35    38 #>  [1603,]   31   33   32   34   36   37   33   35   35    38 #>  [1604,]   32   34   33   34   35   36   32   34   34    37 #>  [1605,]   32   34   33   34   35   36   32   34   34    37 #>  [1606,]   31   33   32   34   36   37   33   35   35    38 #>  [1607,]   31   33   32   34   36   37   33   35   35    38 #>  [1608,]   31   33   32   34   35   36   32   34   34    37 #>  [1609,]   32   34   33   34   35   36   32   34   34    37 #>  [1610,]   32   34   33   34   35   36   32   34   34    37 #>  [1611,]   32   34   33   34   35   36   32   34   34    37 #>  [1612,]   32   34   33   34   36   37   33   35   35    38 #>  [1613,]   32   34   33   34   35   36   32   34   34    37 #>  [1614,]   32   34   33   34   35   36   32   34   34    37 #>  [1615,]   32   34   33   34   35   36   32   34   34    37 #>  [1616,]   32   34   33   34   35   36   32   34   34    37 #>  [1617,]   32   34   33   34   35   36   32   34   34    37 #>  [1618,]   32   34   33   34   36   37   33   35   35    38 #>  [1619,]   32   34   33   34   36   37   33   35   35    38 #>  [1620,]   31   33   32   34   36   37   33   35   35    38 #>  [1621,]   31   33   32   34   35   36   32   34   34    37 #>  [1622,]   32   34   33   34   35   36   32   34   34    37 #>  [1623,]   31   33   32   34   36   37   33   35   35    38 #>  [1624,]   32   34   33   34   35   36   32   34   34    37 #>  [1625,]   31   33   32   34   36   37   33   35   35    38 #>  [1626,]   32   34   33   34   35   36   32   34   34    37 #>  [1627,]   32   34   33   34   35   36   32   34   34    37 #>  [1628,]   32   34   33   34   36   37   33   35   35    38 #>  [1629,]   31   33   32   34   35   36   32   34   34    37 #>  [1630,]   32   34   33   34   35   36   32   34   34    37 #>  [1631,]   32   34   33   34   36   37   33   35   35    38 #>  [1632,]   32   34   33   34   36   37   33   35   35    38 #>  [1633,]   32   34   33   34   36   37   33   35   35    38 #>  [1634,]   31   33   32   34   36   37   33   35   35    38 #>  [1635,]   31   33   32   34   35   36   32   34   34    37 #>  [1636,]   31   33   32   34   35   36   32   34   34    37 #>  [1637,]   31   33   32   34   35   36   32   34   34    37 #>  [1638,]   32   34   33   34   35   36   32   34   34    37 #>  [1639,]   32   34   33   34   35   36   32   34   34    37 #>  [1640,]   32   34   33   34   36   37   33   35   35    38 #>  [1641,]   31   33   32   34   35   36   32   34   34    37 #>  [1642,]   31   33   32   34   36   37   33   35   35    38 #>  [1643,]   32   34   33   34   35   36   32   34   34    37 #>  [1644,]   31   33   32   34   35   36   32   34   34    37 #>  [1645,]   31   33   32   34   35   36   32   34   34    37 #>  [1646,]   32   34   33   34   35   36   32   34   34    37 #>  [1647,]   32   34   33   34   35   36   32   34   34    37 #>  [1648,]   32   34   33   34   36   37   33   35   35    38 #>  [1649,]   32   34   33   34   35   36   32   34   34    37 #>  [1650,]   31   33   32   34   35   36   32   34   34    37 #>  [1651,]   32   34   33   34   35   36   32   34   34    37 #>  [1652,]   32   34   33   34   35   36   32   34   34    37 #>  [1653,]   31   33   32   34   35   36   32   34   34    37 #>  [1654,]   31   33   32   34   35   36   32   34   34    37 #>  [1655,]   31   33   32   34   35   36   32   34   34    37 #>  [1656,]   31   33   32   34   36   37   33   35   35    38 #>  [1657,]   31   33   32   34   35   36   32   34   34    37 #>  [1658,]   32   34   33   34   35   36   32   34   34    37 #>  [1659,]   32   34   33   34   35   36   32   34   34    37 #>  [1660,]   31   33   32   34   36   37   33   35   35    38 #>  [1661,]   32   34   33   34   36   37   33   35   35    38 #>  [1662,]   32   34   33   34   35   36   32   34   34    37 #>  [1663,]   32   34   33   34   35   36   32   34   34    37 #>  [1664,]   31   33   32   34   36   37   33   35   35    38 #>  [1665,]   31   33   32   34   36   37   33   35   35    38 #>  [1666,]   32   34   33   34   35   36   32   34   34    37 #>  [1667,]   31   33   32   34   35   36   32   34   34    37 #>  [1668,]   32   34   33   34   35   36   32   34   34    37 #>  [1669,]   32   34   33   34   35   36   32   34   34    37 #>  [1670,]   32   34   33   34   36   37   33   35   35    38 #>  [1671,]   32   34   33   34   36   37   33   35   35    38 #>  [1672,]   32   34   33   34   35   36   32   34   34    37 #>  [1673,]   31   33   32   34   36   37   33   35   35    38 #>  [1674,]   31   33   32   34   35   36   32   34   34    37 #>  [1675,]   32   34   33   34   35   36   32   34   34    37 #>  [1676,]   31   33   32   34   35   36   32   34   34    37 #>  [1677,]   32   34   33   34   35   36   32   34   34    37 #>  [1678,]   32   34   33   34   36   37   33   35   35    38 #>  [1679,]   32   34   33   34   35   36   32   34   34    37 #>  [1680,]   31   33   32   34   35   36   32   34   34    37 #>  [1681,]   31   33   32   34   35   36   32   34   34    37 #>  [1682,]   31   33   32   34   35   36   32   34   34    37 #>  [1683,]   32   34   33   34   35   36   32   34   34    37 #>  [1684,]   31   33   32   34   36   37   33   35   35    38 #>  [1685,]   31   33   32   34   35   36   32   34   34    37 #>  [1686,]   31   33   32   34   35   36   32   34   34    37 #>  [1687,]   32   34   33   34   35   36   32   34   34    37 #>  [1688,]   31   33   32   34   35   36   32   34   34    37 #>  [1689,]   31   33   32   34   35   36   32   34   34    37 #>  [1690,]   32   34   33   34   35   36   32   34   34    37 #>  [1691,]   32   34   33   34   35   36   32   34   34    37 #>  [1692,]   32   34   33   34   35   36   32   34   34    37 #>  [1693,]   32   34   33   34   36   37   33   35   35    38 #>  [1694,]   31   33   32   34   35   36   32   34   34    37 #>  [1695,]   32   34   33   34   35   36   32   34   34    37 #>  [1696,]   32   34   33   34   35   36   32   34   34    37 #>  [1697,]   31   33   32   34   36   37   33   35   35    38 #>  [1698,]   31   33   32   34   36   37   33   35   35    38 #>  [1699,]   31   33   32   34   35   36   32   34   34    37 #>  [1700,]   32   34   33   34   36   37   33   35   35    38 #>  [1701,]   34   36   35   36   38   39   35   37   37    40 #>  [1702,]   33   35   34   35   37   38   34   36   36    39 #>  [1703,]   33   35   34   35   37   38   34   36   36    39 #>  [1704,]   33   35   34   35   37   38   34   36   36    39 #>  [1705,]   33   35   34   35   37   38   34   36   36    39 #>  [1706,]   34   36   35   36   38   39   35   37   37    40 #>  [1707,]   33   35   34   35   37   38   34   36   36    39 #>  [1708,]   33   35   34   35   37   38   34   36   36    39 #>  [1709,]   33   35   34   35   37   38   34   36   36    39 #>  [1710,]   33   35   34   35   37   38   34   36   36    39 #>  [1711,]   33   35   34   35   37   38   34   36   36    39 #>  [1712,]   33   35   34   35   37   38   34   36   36    39 #>  [1713,]   34   36   35   36   38   39   35   37   37    40 #>  [1714,]   34   36   35   36   38   39   35   37   37    40 #>  [1715,]   34   36   35   36   38   39   35   37   37    40 #>  [1716,]   34   36   35   36   38   39   35   37   37    40 #>  [1717,]   33   35   34   35   37   38   34   36   36    39 #>  [1718,]   33   35   34   35   37   38   34   36   36    39 #>  [1719,]   33   35   34   35   37   38   34   36   36    39 #>  [1720,]   33   35   34   35   37   38   34   36   36    39 #>  [1721,]   34   36   35   36   38   39   35   37   37    40 #>  [1722,]   33   35   34   35   37   38   34   36   36    39 #>  [1723,]   33   35   34   35   37   38   34   36   36    39 #>  [1724,]   33   35   34   35   37   38   34   36   36    39 #>  [1725,]   33   35   34   35   37   38   34   36   36    39 #>  [1726,]   33   35   34   35   37   38   34   36   36    39 #>  [1727,]   33   35   34   35   37   38   34   36   36    39 #>  [1728,]   33   35   34   35   37   38   34   36   36    39 #>  [1729,]   34   36   35   36   38   39   35   37   37    40 #>  [1730,]   33   35   34   35   37   38   34   36   36    39 #>  [1731,]   33   35   34   35   37   38   34   36   36    39 #>  [1732,]   33   35   34   35   37   38   34   36   36    39 #>  [1733,]   34   36   35   36   38   39   35   37   37    40 #>  [1734,]   33   35   34   35   37   38   34   36   36    39 #>  [1735,]   33   35   34   35   37   38   34   36   36    39 #>  [1736,]   33   35   34   35   37   38   34   36   36    39 #>  [1737,]   33   35   34   35   37   38   34   36   36    39 #>  [1738,]   33   35   34   35   37   38   34   36   36    39 #>  [1739,]   33   35   34   35   37   38   34   36   36    39 #>  [1740,]   33   35   34   35   37   38   34   36   36    39 #>  [1741,]   34   36   35   36   38   39   35   37   37    40 #>  [1742,]   33   35   34   35   37   38   34   36   36    39 #>  [1743,]   33   35   34   35   37   38   34   36   36    39 #>  [1744,]   34   36   35   36   38   39   35   37   37    40 #>  [1745,]   33   35   34   35   37   38   34   36   36    39 #>  [1746,]   33   35   34   35   37   38   34   36   36    39 #>  [1747,]   33   35   34   35   37   38   34   36   36    39 #>  [1748,]   33   35   34   35   37   38   34   36   36    39 #>  [1749,]   33   35   34   35   37   38   34   36   36    39 #>  [1750,]   34   36   35   36   38   39   35   37   37    40 #>  [1751,]   33   35   34   35   37   38   34   36   36    39 #>  [1752,]   33   35   34   35   37   38   34   36   36    39 #>  [1753,]   33   35   34   35   37   38   34   36   36    39 #>  [1754,]   33   35   34   35   37   38   34   36   36    39 #>  [1755,]   33   35   34   35   37   38   34   36   36    39 #>  [1756,]   33   35   34   35   37   38   34   36   36    39 #>  [1757,]   33   35   34   35   37   38   34   36   36    39 #>  [1758,]   33   35   34   35   37   38   34   36   36    39 #>  [1759,]   34   36   35   36   38   39   35   37   37    40 #>  [1760,]   33   35   34   35   37   38   34   36   36    39 #>  [1761,]   34   36   35   36   38   39   35   37   37    40 #>  [1762,]   33   35   34   35   37   38   34   36   36    39 #>  [1763,]   33   35   34   35   37   38   34   36   36    39 #>  [1764,]   33   35   34   35   37   38   34   36   36    39 #>  [1765,]   33   35   34   35   37   38   34   36   36    39 #>  [1766,]   33   35   34   35   37   38   34   36   36    39 #>  [1767,]   33   35   34   35   37   38   34   36   36    39 #>  [1768,]   34   36   35   36   38   39   35   37   37    40 #>  [1769,]   33   35   34   35   37   38   34   36   36    39 #>  [1770,]   34   36   35   36   38   39   35   37   37    40 #>  [1771,]   33   35   34   35   37   38   34   36   36    39 #>  [1772,]   33   35   34   35   37   38   34   36   36    39 #>  [1773,]   34   36   35   36   38   39   35   37   37    40 #>  [1774,]   33   35   34   35   37   38   34   36   36    39 #>  [1775,]   33   35   34   35   37   38   34   36   36    39 #>  [1776,]   33   35   34   35   37   38   34   36   36    39 #>  [1777,]   33   35   34   35   37   38   34   36   36    39 #>  [1778,]   33   35   34   35   37   38   34   36   36    39 #>  [1779,]   33   35   34   35   37   38   34   36   36    39 #>  [1780,]   33   35   34   35   37   38   34   36   36    39 #>  [1781,]   33   35   34   35   37   38   34   36   36    39 #>  [1782,]   33   35   34   35   37   38   34   36   36    39 #>  [1783,]   34   36   35   36   38   39   35   37   37    40 #>  [1784,]   33   35   34   35   37   38   34   36   36    39 #>  [1785,]   33   35   34   35   37   38   34   36   36    39 #>  [1786,]   34   36   35   36   38   39   35   37   37    40 #>  [1787,]   33   35   34   35   37   38   34   36   36    39 #>  [1788,]   33   35   34   35   37   38   34   36   36    39 #>  [1789,]   33   35   34   35   37   38   34   36   36    39 #>  [1790,]   33   35   34   35   37   38   34   36   36    39 #>  [1791,]   33   35   34   35   37   38   34   36   36    39 #>  [1792,]   33   35   34   35   37   38   34   36   36    39 #>  [1793,]   33   35   34   35   37   38   34   36   36    39 #>  [1794,]   33   35   34   35   37   38   34   36   36    39 #>  [1795,]   33   35   34   35   37   38   34   36   36    39 #>  [1796,]   34   36   35   36   38   39   35   37   37    40 #>  [1797,]   33   35   34   35   37   38   34   36   36    39 #>  [1798,]   33   35   34   35   37   38   34   36   36    39 #>  [1799,]   34   36   35   36   38   39   35   37   37    40 #>  [1800,]   33   35   34   35   37   38   34   36   36    39 #>  [1801,]   36   38   37   38   40   41   36   38   38    41 #>  [1802,]   36   38   37   38   40   41   36   38   38    41 #>  [1803,]   35   37   36   37   39   40   38   39   39    42 #>  [1804,]   35   37   36   37   39   40   37   39   39    42 #>  [1805,]   35   37   36   37   39   40   37   39   39    42 #>  [1806,]   36   38   37   38   40   41   36   38   38    41 #>  [1807,]   36   38   37   38   40   41   36   38   38    41 #>  [1808,]   35   37   36   37   39   40   37   39   39    42 #>  [1809,]   35   37   36   37   39   40   37   39   39    42 #>  [1810,]   35   37   36   37   39   40   37   39   39    42 #>  [1811,]   36   38   37   38   40   41   36   38   38    41 #>  [1812,]   36   38   37   38   40   41   36   38   38    41 #>  [1813,]   36   38   37   38   40   41   36   38   38    41 #>  [1814,]   36   38   37   38   40   41   36   38   38    41 #>  [1815,]   36   38   37   38   40   41   36   38   38    41 #>  [1816,]   36   38   37   38   40   41   36   38   38    41 #>  [1817,]   36   38   37   38   40   41   36   38   38    41 #>  [1818,]   35   37   36   37   39   40   38   39   39    42 #>  [1819,]   36   38   37   38   40   41   36   38   38    41 #>  [1820,]   35   37   36   37   39   40   38   39   39    42 #>  [1821,]   36   38   37   38   40   41   36   38   38    41 #>  [1822,]   36   38   37   38   40   41   36   38   38    41 #>  [1823,]   36   38   37   38   40   41   36   38   38    41 #>  [1824,]   35   37   36   37   39   40   37   39   39    42 #>  [1825,]   36   38   37   38   40   41   36   38   38    41 #>  [1826,]   36   38   37   38   40   41   36   38   38    41 #>  [1827,]   36   38   37   38   40   41   36   38   38    41 #>  [1828,]   36   38   37   38   40   41   36   38   38    41 #>  [1829,]   36   38   37   38   40   41   36   38   38    41 #>  [1830,]   35   37   36   37   39   40   37   39   39    42 #>  [1831,]   36   38   37   38   40   41   36   38   38    41 #>  [1832,]   36   38   37   38   40   41   36   38   38    41 #>  [1833,]   36   38   37   38   40   41   36   38   38    41 #>  [1834,]   36   38   37   38   40   41   36   38   38    41 #>  [1835,]   36   38   37   38   40   41   36   38   38    41 #>  [1836,]   36   38   37   38   40   41   36   38   38    41 #>  [1837,]   36   38   37   38   40   41   36   38   38    41 #>  [1838,]   36   38   37   38   40   41   36   38   38    41 #>  [1839,]   35   37   36   37   39   40   37   39   39    42 #>  [1840,]   36   38   37   38   40   41   36   38   38    41 #>  [1841,]   36   38   37   38   40   41   36   38   38    41 #>  [1842,]   36   38   37   38   40   41   36   38   38    41 #>  [1843,]   35   37   36   37   39   40   37   39   39    42 #>  [1844,]   36   38   37   38   40   41   36   38   38    41 #>  [1845,]   35   37   36   37   39   40   37   39   39    42 #>  [1846,]   36   38   37   38   40   41   36   38   38    41 #>  [1847,]   36   38   37   38   40   41   36   38   38    41 #>  [1848,]   36   38   37   38   40   41   36   38   38    41 #>  [1849,]   35   37   36   37   39   40   37   39   39    42 #>  [1850,]   36   38   37   38   40   41   36   38   38    41 #>  [1851,]   35   37   36   37   39   40   37   39   39    42 #>  [1852,]   36   38   37   38   40   41   36   38   38    41 #>  [1853,]   35   37   36   37   39   40   37   39   39    42 #>  [1854,]   36   38   37   38   40   41   36   38   38    41 #>  [1855,]   36   38   37   38   40   41   36   38   38    41 #>  [1856,]   35   37   36   37   39   40   37   39   39    42 #>  [1857,]   36   38   37   38   40   41   36   38   38    41 #>  [1858,]   36   38   37   38   40   41   36   38   38    41 #>  [1859,]   36   38   37   38   40   41   36   38   38    41 #>  [1860,]   35   37   36   37   39   40   38   39   39    42 #>  [1861,]   36   38   37   38   40   41   36   38   38    41 #>  [1862,]   36   38   37   38   40   41   36   38   38    41 #>  [1863,]   36   38   37   38   40   41   36   38   38    41 #>  [1864,]   35   37   36   37   39   40   38   39   39    42 #>  [1865,]   35   37   36   37   39   40   38   39   39    42 #>  [1866,]   35   37   36   37   39   40   37   39   39    42 #>  [1867,]   35   37   36   37   39   40   37   39   39    42 #>  [1868,]   36   38   37   38   40   41   36   38   38    41 #>  [1869,]   36   38   37   38   40   41   36   38   38    41 #>  [1870,]   36   38   37   38   40   41   36   38   38    41 #>  [1871,]   36   38   37   38   40   41   36   38   38    41 #>  [1872,]   36   38   37   38   40   41   36   38   38    41 #>  [1873,]   36   38   37   38   40   41   36   38   38    41 #>  [1874,]   36   38   37   38   40   41   36   38   38    41 #>  [1875,]   36   38   37   38   40   41   36   38   38    41 #>  [1876,]   36   38   37   38   40   41   36   38   38    41 #>  [1877,]   36   38   37   38   40   41   36   38   38    41 #>  [1878,]   35   37   36   37   39   40   37   39   39    42 #>  [1879,]   36   38   37   38   40   41   36   38   38    41 #>  [1880,]   36   38   37   38   40   41   36   38   38    41 #>  [1881,]   36   38   37   38   40   41   36   38   38    41 #>  [1882,]   36   38   37   38   40   41   36   38   38    41 #>  [1883,]   36   38   37   38   40   41   36   38   38    41 #>  [1884,]   36   38   37   38   40   41   36   38   38    41 #>  [1885,]   35   37   36   37   39   40   37   39   39    42 #>  [1886,]   36   38   37   38   40   41   36   38   38    41 #>  [1887,]   36   38   37   38   40   41   36   38   38    41 #>  [1888,]   35   37   36   37   39   40   37   39   39    42 #>  [1889,]   35   37   36   37   39   40   37   39   39    42 #>  [1890,]   36   38   37   38   40   41   36   38   38    41 #>  [1891,]   35   37   36   37   39   40   37   39   39    42 #>  [1892,]   36   38   37   38   40   41   36   38   38    41 #>  [1893,]   36   38   37   38   40   41   36   38   38    41 #>  [1894,]   36   38   37   38   40   41   36   38   38    41 #>  [1895,]   35   37   36   37   39   40   37   39   39    42 #>  [1896,]   36   38   37   38   40   41   36   38   38    41 #>  [1897,]   36   38   37   38   40   41   36   38   38    41 #>  [1898,]   36   38   37   38   40   41   36   38   38    41 #>  [1899,]   36   38   37   38   40   41   36   38   38    41 #>  [1900,]   36   38   37   38   40   41   36   38   38    41 #>  [1901,]   38   40   38   40   42   43   40   41   41    44 #>  [1902,]   38   40   38   39   41   42   39   40   40    43 #>  [1903,]   37   39   38   39   41   42   39   40   40    43 #>  [1904,]   37   39   38   40   42   43   40   41   41    44 #>  [1905,]   38   40   38   40   42   43   40   41   41    44 #>  [1906,]   38   40   38   40   42   43   40   41   41    44 #>  [1907,]   37   39   38   39   41   42   39   40   40    43 #>  [1908,]   38   40   38   40   42   43   40   41   41    44 #>  [1909,]   38   40   38   40   42   43   40   41   41    44 #>  [1910,]   38   40   38   40   42   43   40   41   41    44 #>  [1911,]   38   40   38   40   42   43   40   41   41    44 #>  [1912,]   37   39   38   40   42   43   40   41   41    44 #>  [1913,]   38   40   38   39   41   42   39   40   40    43 #>  [1914,]   38   40   38   40   42   43   40   41   41    44 #>  [1915,]   38   40   38   40   42   43   40   41   41    44 #>  [1916,]   38   40   38   39   41   42   39   40   40    43 #>  [1917,]   38   40   38   40   42   43   40   41   41    44 #>  [1918,]   38   40   38   39   41   42   39   40   40    43 #>  [1919,]   38   40   38   39   41   42   39   40   40    43 #>  [1920,]   38   40   38   40   42   43   40   41   41    44 #>  [1921,]   38   40   38   39   41   42   39   40   40    43 #>  [1922,]   38   40   38   39   41   42   39   40   40    43 #>  [1923,]   38   40   38   39   41   42   39   40   40    43 #>  [1924,]   38   40   38   39   41   42   39   40   40    43 #>  [1925,]   37   39   38   40   42   43   40   41   41    44 #>  [1926,]   38   40   38   40   42   43   40   41   41    44 #>  [1927,]   38   40   38   40   42   43   40   41   41    44 #>  [1928,]   38   40   38   40   42   43   40   41   41    44 #>  [1929,]   38   40   38   39   41   42   39   40   40    43 #>  [1930,]   38   40   38   39   41   42   39   40   40    43 #>  [1931,]   37   39   38   39   41   42   39   40   40    43 #>  [1932,]   38   40   38   39   41   42   39   40   40    43 #>  [1933,]   38   40   38   40   42   43   40   41   41    44 #>  [1934,]   38   40   38   39   41   42   39   40   40    43 #>  [1935,]   38   40   38   39   41   42   39   40   40    43 #>  [1936,]   38   40   38   39   41   42   39   40   40    43 #>  [1937,]   38   40   38   39   41   42   39   40   40    43 #>  [1938,]   38   40   38   40   42   43   40   41   41    44 #>  [1939,]   38   40   38   39   41   42   39   40   40    43 #>  [1940,]   38   40   38   39   41   42   39   40   40    43 #>  [1941,]   38   40   38   40   42   43   40   41   41    44 #>  [1942,]   38   40   38   40   42   43   40   41   41    44 #>  [1943,]   38   40   38   40   42   43   40   41   41    44 #>  [1944,]   38   40   38   39   41   42   39   40   40    43 #>  [1945,]   38   40   38   40   42   43   40   41   41    44 #>  [1946,]   38   40   38   40   42   43   40   41   41    44 #>  [1947,]   38   40   38   39   41   42   39   40   40    43 #>  [1948,]   38   40   38   39   41   42   39   40   40    43 #>  [1949,]   38   40   38   39   41   42   39   40   40    43 #>  [1950,]   38   40   38   40   42   43   40   41   41    44 #>  [1951,]   38   40   38   40   42   43   40   41   41    44 #>  [1952,]   37   39   38   40   42   43   40   41   41    44 #>  [1953,]   38   40   38   40   42   43   40   41   41    44 #>  [1954,]   38   40   38   39   41   42   39   40   40    43 #>  [1955,]   38   40   38   40   42   43   40   41   41    44 #>  [1956,]   38   40   38   40   42   43   40   41   41    44 #>  [1957,]   38   40   38   40   42   43   40   41   41    44 #>  [1958,]   38   40   38   40   42   43   40   41   41    44 #>  [1959,]   37   39   38   39   41   42   39   40   40    43 #>  [1960,]   37   39   38   40   42   43   40   41   41    44 #>  [1961,]   38   40   38   40   42   43   40   41   41    44 #>  [1962,]   38   40   38   39   41   42   39   40   40    43 #>  [1963,]   38   40   38   40   42   43   40   41   41    44 #>  [1964,]   38   40   38   40   42   43   40   41   41    44 #>  [1965,]   38   40   38   40   42   43   40   41   41    44 #>  [1966,]   38   40   38   40   42   43   40   41   41    44 #>  [1967,]   38   40   38   40   42   43   40   41   41    44 #>  [1968,]   38   40   38   40   42   43   40   41   41    44 #>  [1969,]   38   40   38   40   42   43   40   41   41    44 #>  [1970,]   38   40   38   39   41   42   39   40   40    43 #>  [1971,]   38   40   38   40   42   43   40   41   41    44 #>  [1972,]   38   40   38   40   42   43   40   41   41    44 #>  [1973,]   38   40   38   40   42   43   40   41   41    44 #>  [1974,]   38   40   38   40   42   43   40   41   41    44 #>  [1975,]   38   40   38   40   42   43   40   41   41    44 #>  [1976,]   38   40   38   40   42   43   40   41   41    44 #>  [1977,]   38   40   38   39   41   42   39   40   40    43 #>  [1978,]   38   40   38   40   42   43   40   41   41    44 #>  [1979,]   38   40   38   39   41   42   39   40   40    43 #>  [1980,]   38   40   38   39   41   42   39   40   40    43 #>  [1981,]   38   40   38   40   42   43   40   41   41    44 #>  [1982,]   38   40   38   40   42   43   40   41   41    44 #>  [1983,]   38   40   38   39   41   42   39   40   40    43 #>  [1984,]   38   40   38   40   42   43   40   41   41    44 #>  [1985,]   38   40   38   39   41   42   39   40   40    43 #>  [1986,]   38   40   38   39   41   42   39   40   40    43 #>  [1987,]   38   40   38   40   42   43   40   41   41    44 #>  [1988,]   38   40   38   40   42   43   40   41   41    44 #>  [1989,]   38   40   38   40   42   43   40   41   41    44 #>  [1990,]   38   40   38   40   42   43   40   41   41    44 #>  [1991,]   38   40   38   40   42   43   40   41   41    44 #>  [1992,]   38   40   38   40   42   43   40   41   41    44 #>  [1993,]   38   40   38   39   41   42   39   40   40    43 #>  [1994,]   38   40   38   40   42   43   40   41   41    44 #>  [1995,]   38   40   38   39   41   42   39   40   40    43 #>  [1996,]   37   39   38   40   42   43   40   41   41    44 #>  [1997,]   37   39   38   40   42   43   40   41   41    44 #>  [1998,]   38   40   38   39   41   42   39   40   40    43 #>  [1999,]   38   40   38   40   42   43   40   41   41    44 #>  [2000,]   38   40   38   39   41   42   39   40   40    43 #>  [2001,]   39   41   39   41   43   44   41   42   42    45 #>  [2002,]   40   42   40   42   44   45   42   43   43    46 #>  [2003,]   39   41   39   41   43   44   41   42   42    45 #>  [2004,]   40   42   40   42   44   45   42   43   43    46 #>  [2005,]   40   42   40   42   44   45   42   43   43    46 #>  [2006,]   39   41   39   41   43   44   41   42   42    45 #>  [2007,]   40   42   40   42   44   45   42   43   43    46 #>  [2008,]   40   42   40   42   44   45   42   43   43    46 #>  [2009,]   40   42   40   42   44   45   42   43   43    46 #>  [2010,]   40   42   40   42   44   45   42   43   43    46 #>  [2011,]   39   41   39   41   43   44   41   42   42    45 #>  [2012,]   40   42   40   42   44   45   42   43   43    46 #>  [2013,]   40   42   40   42   44   45   42   43   43    46 #>  [2014,]   40   42   40   42   44   45   42   43   43    46 #>  [2015,]   40   42   40   42   44   45   42   43   43    46 #>  [2016,]   39   41   39   41   43   44   41   42   42    45 #>  [2017,]   40   42   40   42   44   45   42   43   43    46 #>  [2018,]   40   42   40   42   44   45   42   43   43    46 #>  [2019,]   39   41   39   41   43   44   41   42   42    45 #>  [2020,]   40   42   40   42   44   45   42   43   43    46 #>  [2021,]   40   42   40   42   44   45   42   43   43    46 #>  [2022,]   40   42   40   42   44   45   42   43   43    46 #>  [2023,]   40   42   40   42   44   45   42   43   43    46 #>  [2024,]   40   42   40   42   44   45   42   43   43    46 #>  [2025,]   40   42   40   42   44   45   42   43   43    46 #>  [2026,]   40   42   40   42   44   45   42   43   43    46 #>  [2027,]   40   42   40   42   44   45   42   43   43    46 #>  [2028,]   39   41   39   41   43   44   41   42   42    45 #>  [2029,]   40   42   40   42   44   45   42   43   43    46 #>  [2030,]   40   42   40   42   44   45   42   43   43    46 #>  [2031,]   40   42   40   42   44   45   42   43   43    46 #>  [2032,]   40   42   40   42   44   45   42   43   43    46 #>  [2033,]   40   42   40   42   44   45   42   43   43    46 #>  [2034,]   39   41   39   41   43   44   41   42   42    45 #>  [2035,]   39   41   39   41   43   44   41   42   42    45 #>  [2036,]   40   42   40   42   44   45   42   43   43    46 #>  [2037,]   39   41   39   41   43   44   41   42   42    45 #>  [2038,]   39   41   39   41   43   44   41   42   42    45 #>  [2039,]   40   42   40   42   44   45   42   43   43    46 #>  [2040,]   40   42   40   42   44   45   42   43   43    46 #>  [2041,]   40   42   40   42   44   45   42   43   43    46 #>  [2042,]   40   42   40   42   44   45   42   43   43    46 #>  [2043,]   40   42   40   42   44   45   42   43   43    46 #>  [2044,]   40   42   40   42   44   45   42   43   43    46 #>  [2045,]   39   41   39   41   43   44   41   42   42    45 #>  [2046,]   40   42   40   42   44   45   42   43   43    46 #>  [2047,]   40   42   40   42   44   45   42   43   43    46 #>  [2048,]   40   42   40   42   44   45   42   43   43    46 #>  [2049,]   39   41   39   41   43   44   41   42   42    45 #>  [2050,]   40   42   40   42   44   45   42   43   43    46 #>  [2051,]   40   42   40   42   44   45   42   43   43    46 #>  [2052,]   39   41   39   41   43   44   41   42   42    45 #>  [2053,]   40   42   40   42   44   45   42   43   43    46 #>  [2054,]   40   42   40   42   44   45   42   43   43    46 #>  [2055,]   40   42   40   42   44   45   42   43   43    46 #>  [2056,]   40   42   40   42   44   45   42   43   43    46 #>  [2057,]   40   42   40   42   44   45   42   43   43    46 #>  [2058,]   40   42   40   42   44   45   42   43   43    46 #>  [2059,]   40   42   40   42   44   45   42   43   43    46 #>  [2060,]   40   42   40   42   44   45   42   43   43    46 #>  [2061,]   40   42   40   42   44   45   42   43   43    46 #>  [2062,]   40   42   40   42   44   45   42   43   43    46 #>  [2063,]   40   42   40   42   44   45   42   43   43    46 #>  [2064,]   39   41   39   41   43   44   41   42   42    45 #>  [2065,]   40   42   40   42   44   45   42   43   43    46 #>  [2066,]   40   42   40   42   44   45   42   43   43    46 #>  [2067,]   40   42   40   42   44   45   42   43   43    46 #>  [2068,]   39   41   39   41   43   44   41   42   42    45 #>  [2069,]   40   42   40   42   44   45   42   43   43    46 #>  [2070,]   40   42   40   42   44   45   42   43   43    46 #>  [2071,]   40   42   40   42   44   45   42   43   43    46 #>  [2072,]   39   41   39   41   43   44   41   42   42    45 #>  [2073,]   39   41   39   41   43   44   41   42   42    45 #>  [2074,]   40   42   40   42   44   45   42   43   43    46 #>  [2075,]   40   42   40   42   44   45   42   43   43    46 #>  [2076,]   40   42   40   42   44   45   42   43   43    46 #>  [2077,]   39   41   39   41   43   44   41   42   42    45 #>  [2078,]   40   42   40   42   44   45   42   43   43    46 #>  [2079,]   40   42   40   42   44   45   42   43   43    46 #>  [2080,]   40   42   40   42   44   45   42   43   43    46 #>  [2081,]   40   42   40   42   44   45   42   43   43    46 #>  [2082,]   40   42   40   42   44   45   42   43   43    46 #>  [2083,]   40   42   40   42   44   45   42   43   43    46 #>  [2084,]   40   42   40   42   44   45   42   43   43    46 #>  [2085,]   40   42   40   42   44   45   42   43   43    46 #>  [2086,]   40   42   40   42   44   45   42   43   43    46 #>  [2087,]   40   42   40   42   44   45   42   43   43    46 #>  [2088,]   40   42   40   42   44   45   42   43   43    46 #>  [2089,]   40   42   40   42   44   45   42   43   43    46 #>  [2090,]   40   42   40   42   44   45   42   43   43    46 #>  [2091,]   40   42   40   42   44   45   42   43   43    46 #>  [2092,]   40   42   40   42   44   45   42   43   43    46 #>  [2093,]   40   42   40   42   44   45   42   43   43    46 #>  [2094,]   39   41   39   41   43   44   41   42   42    45 #>  [2095,]   40   42   40   42   44   45   42   43   43    46 #>  [2096,]   39   41   39   41   43   44   41   42   42    45 #>  [2097,]   39   41   39   41   43   44   41   42   42    45 #>  [2098,]   40   42   40   42   44   45   42   43   43    46 #>  [2099,]   40   42   40   42   44   45   42   43   43    46 #>  [2100,]   39   41   39   41   43   44   41   42   42    45 #>  [2101,]   41   44   42   44   46   47   44   45   44    47 #>  [2102,]   41   43   41   43   45   46   43   44   44    47 #>  [2103,]   41   43   41   43   45   46   43   44   44    48 #>  [2104,]   41   44   42   44   46   47   44   45   44    47 #>  [2105,]   41   44   42   44   46   47   44   45   44    47 #>  [2106,]   41   44   42   44   46   47   44   45   44    48 #>  [2107,]   41   43   41   43   45   46   43   44   44    47 #>  [2108,]   41   44   42   44   46   47   44   45   44    47 #>  [2109,]   41   44   42   44   46   47   44   45   44    47 #>  [2110,]   41   43   41   43   45   46   43   44   44    47 #>  [2111,]   41   44   42   44   46   47   44   45   44    47 #>  [2112,]   41   44   42   44   46   47   44   45   44    48 #>  [2113,]   41   43   41   43   45   46   43   44   44    47 #>  [2114,]   41   44   42   44   46   47   44   45   44    47 #>  [2115,]   41   44   42   44   46   47   44   45   44    47 #>  [2116,]   41   43   41   43   45   46   43   44   44    47 #>  [2117,]   41   43   41   43   45   46   43   44   44    47 #>  [2118,]   41   43   41   43   45   46   43   44   44    47 #>  [2119,]   41   43   41   43   45   46   43   44   44    48 #>  [2120,]   41   44   42   44   46   47   44   45   44    48 #>  [2121,]   41   43   41   43   45   46   43   44   44    47 #>  [2122,]   41   43   41   43   45   46   43   44   44    47 #>  [2123,]   41   43   41   43   45   46   43   44   44    47 #>  [2124,]   41   43   41   43   45   46   43   44   44    47 #>  [2125,]   41   43   41   43   45   46   43   44   44    48 #>  [2126,]   41   44   42   44   46   47   44   45   44    47 #>  [2127,]   41   43   41   43   45   46   43   44   44    47 #>  [2128,]   41   44   42   44   46   47   44   45   44    48 #>  [2129,]   41   43   41   43   45   46   43   44   44    47 #>  [2130,]   41   43   41   43   45   46   43   44   44    47 #>  [2131,]   41   43   41   43   45   46   43   44   44    47 #>  [2132,]   41   43   41   43   45   46   43   44   44    47 #>  [2133,]   41   44   42   44   46   47   44   45   44    48 #>  [2134,]   41   43   41   43   45   46   43   44   44    48 #>  [2135,]   41   43   41   43   45   46   43   44   44    47 #>  [2136,]   41   43   41   43   45   46   43   44   44    47 #>  [2137,]   41   43   41   43   45   46   43   44   44    47 #>  [2138,]   41   44   42   44   46   47   44   45   44    47 #>  [2139,]   41   43   41   43   45   46   43   44   44    47 #>  [2140,]   41   43   41   43   45   46   43   44   44    47 #>  [2141,]   41   44   42   44   46   47   44   45   44    47 #>  [2142,]   41   44   42   44   46   47   44   45   44    47 #>  [2143,]   41   44   42   44   46   47   44   45   44    47 #>  [2144,]   41   43   41   43   45   46   43   44   44    47 #>  [2145,]   41   44   42   44   46   47   44   45   44    47 #>  [2146,]   41   44   42   44   46   47   44   45   44    47 #>  [2147,]   41   43   41   43   45   46   43   44   44    47 #>  [2148,]   41   43   41   43   45   46   43   44   44    47 #>  [2149,]   41   43   41   43   45   46   43   44   44    47 #>  [2150,]   41   44   42   44   46   47   44   45   44    47 #>  [2151,]   41   44   42   44   46   47   44   45   44    47 #>  [2152,]   41   44   42   44   46   47   44   45   44    47 #>  [2153,]   41   44   42   44   46   47   44   45   44    47 #>  [2154,]   41   43   41   43   45   46   43   44   44    47 #>  [2155,]   41   44   42   44   46   47   44   45   44    47 #>  [2156,]   41   44   42   44   46   47   44   45   44    47 #>  [2157,]   41   44   42   44   46   47   44   45   44    47 #>  [2158,]   41   44   42   44   46   47   44   45   44    47 #>  [2159,]   41   43   41   43   45   46   43   44   44    47 #>  [2160,]   41   44   42   44   46   47   44   45   44    48 #>  [2161,]   41   44   42   44   46   47   44   45   44    47 #>  [2162,]   41   43   41   43   45   46   43   44   44    47 #>  [2163,]   41   44   42   44   46   47   44   45   44    47 #>  [2164,]   41   44   42   44   46   47   44   45   44    47 #>  [2165,]   41   44   42   44   46   47   44   45   44    48 #>  [2166,]   41   44   42   44   46   47   44   45   44    47 #>  [2167,]   41   44   42   44   46   47   44   45   44    47 #>  [2168,]   41   44   42   44   46   47   44   45   44    47 #>  [2169,]   41   43   41   43   45   46   43   44   44    47 #>  [2170,]   41   43   41   43   45   46   43   44   44    48 #>  [2171,]   41   44   42   44   46   47   44   45   44    47 #>  [2172,]   41   44   42   44   46   47   44   45   44    47 #>  [2173,]   41   44   42   44   46   47   44   45   44    48 #>  [2174,]   41   44   42   44   46   47   44   45   44    47 #>  [2175,]   41   44   42   44   46   47   44   45   44    47 #>  [2176,]   41   44   42   44   46   47   44   45   44    47 #>  [2177,]   41   43   41   43   45   46   43   44   44    47 #>  [2178,]   41   44   42   44   46   47   44   45   44    47 #>  [2179,]   41   43   41   43   45   46   43   44   44    47 #>  [2180,]   41   43   41   43   45   46   43   44   44    47 #>  [2181,]   41   44   42   44   46   47   44   45   44    47 #>  [2182,]   41   43   41   43   45   46   43   44   44    47 #>  [2183,]   41   43   41   43   45   46   43   44   44    47 #>  [2184,]   41   44   42   44   46   47   44   45   44    47 #>  [2185,]   41   43   41   43   45   46   43   44   44    47 #>  [2186,]   41   43   41   43   45   46   43   44   44    47 #>  [2187,]   41   44   42   44   46   47   44   45   44    47 #>  [2188,]   41   44   42   44   46   47   44   45   44    47 #>  [2189,]   41   44   42   44   46   47   44   45   44    47 #>  [2190,]   41   44   42   44   46   47   44   45   44    47 #>  [2191,]   41   44   42   44   46   47   44   45   44    47 #>  [2192,]   41   44   42   44   46   47   44   45   44    47 #>  [2193,]   41   43   41   43   45   46   43   44   44    48 #>  [2194,]   41   44   42   44   46   47   44   45   44    47 #>  [2195,]   41   43   41   43   45   46   43   44   44    47 #>  [2196,]   41   44   42   44   46   47   44   45   44    47 #>  [2197,]   41   44   42   44   46   47   44   45   44    48 #>  [2198,]   41   43   41   43   45   46   43   44   44    48 #>  [2199,]   41   43   41   43   45   46   43   44   44    47 #>  [2200,]   41   43   41   43   45   46   43   44   44    47 #>  [2201,]   42   46   43   45   48   49   46   47   46    50 #>  [2202,]   42   46   43   45   49   50   47   48   47    51 #>  [2203,]   42   45   43   45   48   49   46   47   46    50 #>  [2204,]   42   45   43   46   47   48   45   46   45    49 #>  [2205,]   42   46   43   45   48   49   46   47   46    50 #>  [2206,]   42   46   43   45   48   49   46   47   46    50 #>  [2207,]   42   45   43   46   47   48   45   46   45    49 #>  [2208,]   42   45   43   45   48   49   46   47   46    50 #>  [2209,]   42   46   43   46   47   48   45   46   45    49 #>  [2210,]   42   46   43   46   47   48   45   46   45    49 #>  [2211,]   42   46   43   45   48   49   46   47   46    50 #>  [2212,]   42   45   43   45   49   50   47   48   47    51 #>  [2213,]   42   46   43   45   49   50   47   48   47    51 #>  [2214,]   42   45   43   46   47   48   45   46   45    49 #>  [2215,]   42   46   43   45   48   49   46   47   46    50 #>  [2216,]   42   45   43   46   47   48   45   46   45    49 #>  [2217,]   42   46   43   45   49   50   47   48   47    51 #>  [2218,]   42   46   43   45   48   49   46   47   46    50 #>  [2219,]   42   46   43   45   48   49   46   47   46    50 #>  [2220,]   42   46   43   46   47   48   45   46   45    49 #>  [2221,]   42   46   43   45   49   50   47   48   47    51 #>  [2222,]   42   46   43   46   47   48   45   46   45    49 #>  [2223,]   42   45   43   45   48   49   46   47   46    50 #>  [2224,]   42   46   43   46   47   48   45   46   45    49 #>  [2225,]   42   45   43   46   47   48   45   46   45    49 #>  [2226,]   42   46   43   45   48   49   46   47   46    50 #>  [2227,]   42   46   43   45   48   49   46   47   46    50 #>  [2228,]   42   46   43   46   47   48   45   46   45    49 #>  [2229,]   42   46   43   45   49   50   47   48   47    51 #>  [2230,]   42   46   43   45   48   49   46   47   46    50 #>  [2231,]   42   45   43   45   48   49   46   47   46    50 #>  [2232,]   42   45   43   45   48   49   46   47   46    50 #>  [2233,]   42   46   43   45   49   50   47   48   47    51 #>  [2234,]   42   46   43   45   48   49   46   47   46    50 #>  [2235,]   42   46   43   45   48   49   46   47   46    50 #>  [2236,]   42   46   43   46   47   48   45   46   45    49 #>  [2237,]   42   45   43   45   48   49   46   47   46    50 #>  [2238,]   42   46   43   45   48   49   46   47   46    50 #>  [2239,]   42   46   43   46   47   48   45   46   45    49 #>  [2240,]   42   45   43   45   48   49   46   47   46    50 #>  [2241,]   42   46   43   45   48   49   46   47   46    50 #>  [2242,]   42   46   43   45   48   49   46   47   46    50 #>  [2243,]   42   46   43   45   48   49   46   47   46    50 #>  [2244,]   42   45   43   45   48   49   46   47   46    50 #>  [2245,]   42   46   43   45   48   49   46   47   46    50 #>  [2246,]   42   45   43   45   48   49   46   47   46    50 #>  [2247,]   42   45   43   45   48   49   46   47   46    50 #>  [2248,]   42   46   43   45   48   49   46   47   46    50 #>  [2249,]   42   46   43   45   48   49   46   47   46    50 #>  [2250,]   42   46   43   46   47   48   45   46   45    49 #>  [2251,]   42   46   43   45   48   49   46   47   46    50 #>  [2252,]   42   45   43   46   47   48   45   46   45    49 #>  [2253,]   42   46   43   45   49   50   47   48   47    51 #>  [2254,]   42   46   43   46   47   48   45   46   45    49 #>  [2255,]   42   45   43   46   47   48   45   46   45    49 #>  [2256,]   42   46   43   45   48   49   46   47   46    50 #>  [2257,]   42   45   43   46   47   48   45   46   45    49 #>  [2258,]   42   46   43   45   48   49   46   47   46    50 #>  [2259,]   42   45   43   46   47   48   45   46   45    49 #>  [2260,]   42   45   43   45   49   50   47   48   47    51 #>  [2261,]   42   46   43   45   48   49   46   47   46    50 #>  [2262,]   42   46   43   45   48   49   46   47   46    50 #>  [2263,]   42   46   43   45   49   50   47   48   47    51 #>  [2264,]   42   46   43   45   48   49   46   47   46    50 #>  [2265,]   42   46   43   45   48   49   46   47   46    50 #>  [2266,]   42   46   43   45   48   49   46   47   46    50 #>  [2267,]   42   45   43   46   47   48   45   46   45    49 #>  [2268,]   42   45   43   45   48   49   46   47   46    50 #>  [2269,]   42   46   43   45   48   49   46   47   46    50 #>  [2270,]   42   46   43   45   49   50   47   48   47    51 #>  [2271,]   42   46   43   45   48   49   46   47   46    50 #>  [2272,]   42   45   43   45   48   49   46   47   46    50 #>  [2273,]   42   46   43   46   47   48   45   46   45    49 #>  [2274,]   42   45   43   45   48   49   46   47   46    50 #>  [2275,]   42   45   43   45   49   50   47   48   47    51 #>  [2276,]   42   45   43   46   47   48   45   46   45    49 #>  [2277,]   42   46   43   45   48   49   46   47   46    50 #>  [2278,]   42   45   43   45   48   49   46   47   46    50 #>  [2279,]   42   46   43   45   48   49   46   47   46    50 #>  [2280,]   42   45   43   45   49   50   47   48   47    51 #>  [2281,]   42   46   43   45   49   50   47   48   47    51 #>  [2282,]   42   46   43   45   48   49   46   47   46    50 #>  [2283,]   42   46   43   45   48   49   46   47   46    50 #>  [2284,]   42   46   43   45   48   49   46   47   46    50 #>  [2285,]   42   46   43   45   48   49   46   47   46    50 #>  [2286,]   42   45   43   46   47   48   45   46   45    49 #>  [2287,]   42   46   43   45   48   49   46   47   46    50 #>  [2288,]   42   46   43   45   48   49   46   47   46    50 #>  [2289,]   42   46   43   45   48   49   46   47   46    50 #>  [2290,]   42   46   43   46   47   48   45   46   45    49 #>  [2291,]   42   46   43   46   47   48   45   46   45    49 #>  [2292,]   42   45   43   45   48   49   46   47   46    50 #>  [2293,]   42   46   43   45   48   49   46   47   46    50 #>  [2294,]   42   46   43   45   48   49   46   47   46    50 #>  [2295,]   42   45   43   45   48   49   46   47   46    50 #>  [2296,]   42   45   43   45   48   49   46   47   46    50 #>  [2297,]   42   45   43   45   48   49   46   47   46    50 #>  [2298,]   42   45   43   45   48   49   46   47   46    50 #>  [2299,]   42   46   43   45   48   49   46   47   46    50 #>  [2300,]   42   46   43   45   48   49   46   47   46    50 #>  [2301,]   44   48   45   48   50   51   48   49   48    52 #>  [2302,]   44   48   45   48   50   51   48   49   48    52 #>  [2303,]   43   47   44   47   50   51   48   49   48    52 #>  [2304,]   44   48   45   48   50   51   48   49   48    52 #>  [2305,]   44   48   45   48   50   51   48   49   48    52 #>  [2306,]   44   48   45   48   50   51   48   49   48    52 #>  [2307,]   44   48   45   48   50   51   48   49   48    52 #>  [2308,]   44   48   45   48   50   52   49   50   49    53 #>  [2309,]   44   48   45   48   50   51   48   49   48    52 #>  [2310,]   44   48   45   48   50   51   48   49   48    52 #>  [2311,]   44   48   45   48   50   51   48   49   48    52 #>  [2312,]   43   47   44   47   50   51   48   49   48    52 #>  [2313,]   44   48   45   48   50   52   49   50   49    53 #>  [2314,]   43   47   44   47   50   51   48   49   48    52 #>  [2315,]   44   48   45   48   50   52   49   50   49    53 #>  [2316,]   44   48   45   48   50   52   49   50   49    53 #>  [2317,]   44   48   45   48   50   51   48   49   48    52 #>  [2318,]   44   48   45   48   50   51   48   49   48    52 #>  [2319,]   44   48   45   48   50   52   49   50   49    53 #>  [2320,]   44   48   45   48   50   52   49   50   49    53 #>  [2321,]   44   48   45   48   50   51   48   49   48    52 #>  [2322,]   44   48   45   48   50   52   49   50   49    53 #>  [2323,]   44   48   45   48   50   51   48   49   48    52 #>  [2324,]   44   48   45   48   50   51   48   49   48    52 #>  [2325,]   44   48   45   48   50   51   48   49   48    52 #>  [2326,]   43   47   44   47   50   52   49   50   49    53 #>  [2327,]   44   48   45   48   50   52   49   50   49    53 #>  [2328,]   44   48   45   48   50   51   48   49   48    52 #>  [2329,]   44   48   45   48   50   52   49   50   49    53 #>  [2330,]   44   48   45   48   50   52   49   50   49    53 #>  [2331,]   44   48   45   48   50   51   48   49   48    52 #>  [2332,]   43   47   44   47   50   51   48   49   48    52 #>  [2333,]   44   48   45   48   50   51   48   49   48    52 #>  [2334,]   44   48   45   48   50   51   48   49   48    52 #>  [2335,]   44   48   45   48   50   51   48   49   48    52 #>  [2336,]   43   47   44   47   50   52   49   50   49    53 #>  [2337,]   44   48   45   48   50   52   49   50   49    53 #>  [2338,]   44   48   45   48   50   52   49   50   49    53 #>  [2339,]   44   48   45   48   50   51   48   49   48    52 #>  [2340,]   43   47   44   47   50   51   48   49   48    52 #>  [2341,]   44   48   45   48   50   52   49   50   49    53 #>  [2342,]   43   47   44   47   50   51   48   49   48    52 #>  [2343,]   44   48   45   48   50   52   49   50   49    53 #>  [2344,]   44   48   45   48   50   52   49   50   49    53 #>  [2345,]   44   48   45   48   50   51   48   49   48    52 #>  [2346,]   44   48   45   48   50   52   49   50   49    53 #>  [2347,]   44   48   45   48   50   51   48   49   48    52 #>  [2348,]   43   47   44   47   50   51   48   49   48    52 #>  [2349,]   44   48   45   48   50   51   48   49   48    52 #>  [2350,]   44   48   45   48   50   52   49   50   49    53 #>  [2351,]   43   47   44   47   50   52   49   50   49    53 #>  [2352,]   44   48   45   48   50   51   48   49   48    52 #>  [2353,]   44   48   45   48   50   52   49   50   49    53 #>  [2354,]   43   47   44   47   50   51   48   49   48    52 #>  [2355,]   44   48   45   48   50   52   49   50   49    53 #>  [2356,]   44   48   45   48   50   52   49   50   49    53 #>  [2357,]   44   48   45   48   50   51   48   49   48    52 #>  [2358,]   44   48   45   48   50   52   49   50   49    53 #>  [2359,]   44   48   45   48   50   52   49   50   49    53 #>  [2360,]   44   48   45   48   50   52   49   50   49    53 #>  [2361,]   44   48   45   48   50   51   48   49   48    52 #>  [2362,]   43   47   44   47   50   51   48   49   48    52 #>  [2363,]   44   48   45   48   50   51   48   49   48    52 #>  [2364,]   44   48   45   48   50   52   49   50   49    53 #>  [2365,]   44   48   45   48   50   51   48   49   48    52 #>  [2366,]   43   47   44   47   50   52   49   50   49    53 #>  [2367,]   44   48   45   48   50   51   48   49   48    52 #>  [2368,]   44   48   45   48   50   51   48   49   48    52 #>  [2369,]   43   47   44   47   50   52   49   50   49    53 #>  [2370,]   44   48   45   48   50   51   48   49   48    52 #>  [2371,]   44   48   45   48   50   52   49   50   49    53 #>  [2372,]   44   48   45   48   50   51   48   49   48    52 #>  [2373,]   44   48   45   48   50   51   48   49   48    52 #>  [2374,]   44   48   45   48   50   51   48   49   48    52 #>  [2375,]   44   48   45   48   50   51   48   49   48    52 #>  [2376,]   44   48   45   48   50   51   48   49   48    52 #>  [2377,]   44   48   45   48   50   52   49   50   49    53 #>  [2378,]   44   48   45   48   50   51   48   49   48    52 #>  [2379,]   44   48   45   48   50   51   48   49   48    52 #>  [2380,]   43   47   44   47   50   52   49   50   49    53 #>  [2381,]   43   47   44   47   50   52   49   50   49    53 #>  [2382,]   44   48   45   48   50   51   48   49   48    52 #>  [2383,]   43   47   44   47   50   52   49   50   49    53 #>  [2384,]   44   48   45   48   50   52   49   50   49    53 #>  [2385,]   44   48   45   48   50   52   49   50   49    53 #>  [2386,]   44   48   45   48   50   51   48   49   48    52 #>  [2387,]   44   48   45   48   50   52   49   50   49    53 #>  [2388,]   44   48   45   48   50   51   48   49   48    52 #>  [2389,]   43   47   44   47   50   51   48   49   48    52 #>  [2390,]   44   48   45   48   50   52   49   50   49    53 #>  [2391,]   44   48   45   48   50   51   48   49   48    52 #>  [2392,]   44   48   45   48   50   51   48   49   48    52 #>  [2393,]   44   48   45   48   50   51   48   49   48    52 #>  [2394,]   44   48   45   48   50   51   48   49   48    52 #>  [2395,]   44   48   45   48   50   52   49   50   49    53 #>  [2396,]   44   48   45   48   50   52   49   50   49    53 #>  [2397,]   44   48   45   48   50   52   49   50   49    53 #>  [2398,]   44   48   45   48   50   51   48   49   48    52 #>  [2399,]   44   48   45   48   50   51   48   49   48    52 #>  [2400,]   44   48   45   48   50   52   49   50   49    53 #>  [2401,]   45   49   48   51   53   54   51   52   51    55 #>  [2402,]   45   49   48   51   53   54   51   52   51    55 #>  [2403,]   45   49   48   51   53   54   51   52   51    55 #>  [2404,]   45   49   48   51   53   54   51   52   51    55 #>  [2405,]   46   50   46   49   51   53   50   51   50    54 #>  [2406,]   45   49   47   50   52   54   51   52   51    55 #>  [2407,]   45   49   47   50   52   54   51   52   51    55 #>  [2408,]   45   49   48   51   53   54   51   52   51    55 #>  [2409,]   45   49   48   51   53   54   51   52   51    55 #>  [2410,]   45   49   48   51   53   54   51   52   51    55 #>  [2411,]   45   49   48   51   53   54   51   52   51    55 #>  [2412,]   45   49   48   51   53   54   51   52   51    55 #>  [2413,]   45   49   48   51   53   54   51   52   51    55 #>  [2414,]   45   49   48   51   53   54   51   52   51    55 #>  [2415,]   45   49   48   51   53   54   51   52   51    55 #>  [2416,]   45   49   48   51   53   54   51   52   51    55 #>  [2417,]   45   49   48   51   53   54   51   52   51    55 #>  [2418,]   46   50   46   49   51   53   50   51   50    54 #>  [2419,]   45   49   48   51   53   54   51   52   51    55 #>  [2420,]   45   49   47   50   52   54   51   52   51    55 #>  [2421,]   45   49   47   50   52   54   51   52   51    55 #>  [2422,]   45   49   48   51   53   54   51   52   51    55 #>  [2423,]   45   49   48   51   53   54   51   52   51    55 #>  [2424,]   45   49   48   51   53   54   51   52   51    55 #>  [2425,]   45   49   47   50   52   54   51   52   51    55 #>  [2426,]   45   49   48   51   53   54   51   52   51    55 #>  [2427,]   45   49   48   51   53   54   51   52   51    55 #>  [2428,]   45   49   48   51   53   54   51   52   51    55 #>  [2429,]   45   49   48   51   53   54   51   52   51    55 #>  [2430,]   45   49   48   51   53   54   51   52   51    55 #>  [2431,]   45   49   48   51   53   54   51   52   51    55 #>  [2432,]   45   49   48   51   53   54   51   52   51    55 #>  [2433,]   45   49   48   51   53   54   51   52   51    55 #>  [2434,]   45   49   48   51   53   54   51   52   51    55 #>  [2435,]   45   49   47   50   52   54   51   52   51    55 #>  [2436,]   45   49   48   51   53   54   51   52   51    55 #>  [2437,]   45   49   47   50   52   54   51   52   51    55 #>  [2438,]   45   49   48   51   53   54   51   52   51    55 #>  [2439,]   45   49   48   51   53   54   51   52   51    55 #>  [2440,]   45   49   48   51   53   54   51   52   51    55 #>  [2441,]   45   49   48   51   53   54   51   52   51    55 #>  [2442,]   45   49   47   50   52   54   51   52   51    55 #>  [2443,]   45   49   48   51   53   54   51   52   51    55 #>  [2444,]   45   49   47   50   52   54   51   52   51    55 #>  [2445,]   45   49   48   51   53   54   51   52   51    55 #>  [2446,]   45   49   48   51   53   54   51   52   51    55 #>  [2447,]   45   49   48   51   53   54   51   52   51    55 #>  [2448,]   45   49   48   51   53   54   51   52   51    55 #>  [2449,]   45   49   48   51   53   54   51   52   51    55 #>  [2450,]   45   49   48   51   53   54   51   52   51    55 #>  [2451,]   45   49   48   51   53   54   51   52   51    55 #>  [2452,]   45   49   48   51   53   54   51   52   51    55 #>  [2453,]   45   49   47   50   52   54   51   52   51    55 #>  [2454,]   45   49   48   51   53   54   51   52   51    55 #>  [2455,]   45   49   48   51   53   54   51   52   51    55 #>  [2456,]   45   49   47   50   52   54   51   52   51    55 #>  [2457,]   45   49   47   50   52   54   51   52   51    55 #>  [2458,]   45   49   48   51   53   54   51   52   51    55 #>  [2459,]   45   49   48   51   53   54   51   52   51    55 #>  [2460,]   45   49   48   51   53   54   51   52   51    55 #>  [2461,]   45   49   48   51   53   54   51   52   51    55 #>  [2462,]   45   49   48   51   53   54   51   52   51    55 #>  [2463,]   45   49   48   51   53   54   51   52   51    55 #>  [2464,]   45   49   48   51   53   54   51   52   51    55 #>  [2465,]   45   49   47   50   52   54   51   52   51    55 #>  [2466,]   45   49   48   51   53   54   51   52   51    55 #>  [2467,]   45   49   48   51   53   54   51   52   51    55 #>  [2468,]   45   49   48   51   53   54   51   52   51    55 #>  [2469,]   45   49   48   51   53   54   51   52   51    55 #>  [2470,]   45   49   48   51   53   54   51   52   51    55 #>  [2471,]   46   50   46   49   51   53   50   51   50    54 #>  [2472,]   45   49   48   51   53   54   51   52   51    55 #>  [2473,]   45   49   47   50   52   54   51   52   51    55 #>  [2474,]   45   49   47   50   52   54   51   52   51    55 #>  [2475,]   46   50   46   49   51   53   50   51   50    54 #>  [2476,]   45   49   48   51   53   54   51   52   51    55 #>  [2477,]   45   49   48   51   53   54   51   52   51    55 #>  [2478,]   45   49   48   51   53   54   51   52   51    55 #>  [2479,]   45   49   48   51   53   54   51   52   51    55 #>  [2480,]   45   49   47   50   52   54   51   52   51    55 #>  [2481,]   45   49   48   51   53   54   51   52   51    55 #>  [2482,]   45   49   47   50   52   54   51   52   51    55 #>  [2483,]   45   49   48   51   53   54   51   52   51    55 #>  [2484,]   45   49   47   50   52   54   51   52   51    55 #>  [2485,]   45   49   47   50   52   54   51   52   51    55 #>  [2486,]   45   49   47   50   52   54   51   52   51    55 #>  [2487,]   45   49   48   51   53   54   51   52   51    55 #>  [2488,]   45   49   48   51   53   54   51   52   51    55 #>  [2489,]   45   49   47   50   52   54   51   52   51    55 #>  [2490,]   45   49   48   51   53   54   51   52   51    55 #>  [2491,]   45   49   48   51   53   54   51   52   51    55 #>  [2492,]   45   49   48   51   53   54   51   52   51    55 #>  [2493,]   45   49   48   51   53   54   51   52   51    55 #>  [2494,]   45   49   47   50   52   54   51   52   51    55 #>  [2495,]   45   49   48   51   53   54   51   52   51    55 #>  [2496,]   45   49   48   51   53   54   51   52   51    55 #>  [2497,]   45   49   48   51   53   54   51   52   51    55 #>  [2498,]   45   49   48   51   53   54   51   52   51    55 #>  [2499,]   45   49   47   50   52   54   51   52   51    55 #>  [2500,]   46   50   46   49   51   53   50   51   50    54 #>  [2501,]   47   51   49   52   54   55   52   53   52    56 #>  [2502,]   48   52   50   53   55   56   53   54   53    57 #>  [2503,]   47   51   49   52   54   55   52   53   52    56 #>  [2504,]   47   51   49   52   54   55   52   53   52    56 #>  [2505,]   48   52   50   53   55   56   53   54   53    57 #>  [2506,]   47   51   49   52   54   55   52   53   52    56 #>  [2507,]   47   51   49   52   54   55   52   53   52    56 #>  [2508,]   47   51   49   52   54   55   52   53   52    56 #>  [2509,]   48   52   50   53   55   56   53   54   53    57 #>  [2510,]   48   52   50   53   55   56   53   54   53    57 #>  [2511,]   47   51   49   52   54   55   52   53   52    56 #>  [2512,]   48   52   50   53   55   56   53   54   53    57 #>  [2513,]   48   52   50   53   55   56   53   54   53    57 #>  [2514,]   47   51   49   52   54   55   52   53   52    56 #>  [2515,]   47   51   49   52   54   55   52   53   52    56 #>  [2516,]   47   51   49   52   54   55   52   53   52    56 #>  [2517,]   48   52   50   53   55   56   53   54   53    57 #>  [2518,]   48   52   50   53   55   56   53   54   53    57 #>  [2519,]   47   51   49   52   54   55   52   53   52    56 #>  [2520,]   48   52   50   53   55   56   53   54   53    57 #>  [2521,]   48   52   50   53   55   56   53   54   53    57 #>  [2522,]   47   51   49   52   54   55   52   53   52    56 #>  [2523,]   48   52   50   53   55   56   53   54   53    57 #>  [2524,]   48   52   50   53   55   56   53   54   53    57 #>  [2525,]   47   51   49   52   54   55   52   53   52    56 #>  [2526,]   47   51   49   52   54   55   52   53   52    56 #>  [2527,]   48   52   50   53   55   56   53   54   53    57 #>  [2528,]   47   51   49   52   54   55   52   53   52    56 #>  [2529,]   48   52   50   53   55   56   53   54   53    57 #>  [2530,]   47   51   49   52   54   55   52   53   52    56 #>  [2531,]   48   52   50   53   55   56   53   54   53    57 #>  [2532,]   48   52   50   53   55   56   53   54   53    57 #>  [2533,]   48   52   50   53   55   56   53   54   53    57 #>  [2534,]   47   51   49   52   54   55   52   53   52    56 #>  [2535,]   47   51   49   52   54   55   52   53   52    56 #>  [2536,]   48   52   50   53   55   56   53   54   53    57 #>  [2537,]   47   51   49   52   54   55   52   53   52    56 #>  [2538,]   47   51   49   52   54   55   52   53   52    56 #>  [2539,]   47   51   49   52   54   55   52   53   52    56 #>  [2540,]   48   52   50   53   55   56   53   54   53    57 #>  [2541,]   47   51   49   52   54   55   52   53   52    56 #>  [2542,]   47   51   49   52   54   55   52   53   52    56 #>  [2543,]   47   51   49   52   54   55   52   53   52    56 #>  [2544,]   48   52   50   53   55   56   53   54   53    57 #>  [2545,]   47   51   49   52   54   55   52   53   52    56 #>  [2546,]   47   51   49   52   54   55   52   53   52    56 #>  [2547,]   47   51   49   52   54   55   52   53   52    56 #>  [2548,]   47   51   49   52   54   55   52   53   52    56 #>  [2549,]   47   51   49   52   54   55   52   53   52    56 #>  [2550,]   47   51   49   52   54   55   52   53   52    56 #>  [2551,]   47   51   49   52   54   55   52   53   52    56 #>  [2552,]   47   51   49   52   54   55   52   53   52    56 #>  [2553,]   48   52   50   53   55   56   53   54   53    57 #>  [2554,]   47   51   49   52   54   55   52   53   52    56 #>  [2555,]   47   51   49   52   54   55   52   53   52    56 #>  [2556,]   47   51   49   52   54   55   52   53   52    56 #>  [2557,]   47   51   49   52   54   55   52   53   52    56 #>  [2558,]   47   51   49   52   54   55   52   53   52    56 #>  [2559,]   47   51   49   52   54   55   52   53   52    56 #>  [2560,]   48   52   50   53   55   56   53   54   53    57 #>  [2561,]   48   52   50   53   55   56   53   54   53    57 #>  [2562,]   47   51   49   52   54   55   52   53   52    56 #>  [2563,]   48   52   50   53   55   56   53   54   53    57 #>  [2564,]   47   51   49   52   54   55   52   53   52    56 #>  [2565,]   47   51   49   52   54   55   52   53   52    56 #>  [2566,]   47   51   49   52   54   55   52   53   52    56 #>  [2567,]   47   51   49   52   54   55   52   53   52    56 #>  [2568,]   47   51   49   52   54   55   52   53   52    56 #>  [2569,]   47   51   49   52   54   55   52   53   52    56 #>  [2570,]   48   52   50   53   55   56   53   54   53    57 #>  [2571,]   47   51   49   52   54   55   52   53   52    56 #>  [2572,]   47   51   49   52   54   55   52   53   52    56 #>  [2573,]   47   51   49   52   54   55   52   53   52    56 #>  [2574,]   47   51   49   52   54   55   52   53   52    56 #>  [2575,]   48   52   50   53   55   56   53   54   53    57 #>  [2576,]   47   51   49   52   54   55   52   53   52    56 #>  [2577,]   47   51   49   52   54   55   52   53   52    56 #>  [2578,]   47   51   49   52   54   55   52   53   52    56 #>  [2579,]   47   51   49   52   54   55   52   53   52    56 #>  [2580,]   48   52   50   53   55   56   53   54   53    57 #>  [2581,]   48   52   50   53   55   56   53   54   53    57 #>  [2582,]   47   51   49   52   54   55   52   53   52    56 #>  [2583,]   48   52   50   53   55   56   53   54   53    57 #>  [2584,]   48   52   50   53   55   56   53   54   53    57 #>  [2585,]   47   51   49   52   54   55   52   53   52    56 #>  [2586,]   48   52   50   53   55   56   53   54   53    57 #>  [2587,]   47   51   49   52   54   55   52   53   52    56 #>  [2588,]   48   52   50   53   55   56   53   54   53    57 #>  [2589,]   47   51   49   52   54   55   52   53   52    56 #>  [2590,]   47   51   49   52   54   55   52   53   52    56 #>  [2591,]   47   51   49   52   54   55   52   53   52    56 #>  [2592,]   47   51   49   52   54   55   52   53   52    56 #>  [2593,]   47   51   49   52   54   55   52   53   52    56 #>  [2594,]   47   51   49   52   54   55   52   53   52    56 #>  [2595,]   47   51   49   52   54   55   52   53   52    56 #>  [2596,]   47   51   49   52   54   55   52   53   52    56 #>  [2597,]   47   51   49   52   54   55   52   53   52    56 #>  [2598,]   47   51   49   52   54   55   52   53   52    56 #>  [2599,]   47   51   49   52   54   55   52   53   52    56 #>  [2600,]   47   51   49   52   54   55   52   53   52    56 #>  [2601,]   49   54   52   55   57   58   55   56   55    60 #>  [2602,]   49   54   52   55   57   58   55   56   55    60 #>  [2603,]   49   54   52   55   57   58   55   56   55    60 #>  [2604,]   49   53   51   54   56   57   54   55   54    58 #>  [2605,]   49   54   52   55   57   58   55   56   55    60 #>  [2606,]   49   54   52   55   57   58   55   56   55    60 #>  [2607,]   49   54   52   55   57   58   55   56   55    60 #>  [2608,]   49   53   51   54   56   57   54   55   54    58 #>  [2609,]   49   53   51   54   56   57   54   55   54    58 #>  [2610,]   49   53   51   54   56   57   54   55   54    58 #>  [2611,]   49   54   52   55   57   58   55   56   55    60 #>  [2612,]   49   54   52   55   57   58   55   56   55    60 #>  [2613,]   49   54   52   55   57   58   55   56   55    60 #>  [2614,]   49   54   52   55   57   58   55   56   55    60 #>  [2615,]   49   54   52   55   57   58   55   56   55    60 #>  [2616,]   49   54   52   55   57   58   55   56   55    60 #>  [2617,]   49   54   52   55   57   58   55   56   55    59 #>  [2618,]   49   54   52   55   57   58   55   56   55    60 #>  [2619,]   49   54   52   55   57   58   55   56   55    60 #>  [2620,]   49   54   52   55   57   58   55   56   55    60 #>  [2621,]   49   54   52   55   57   58   55   56   55    60 #>  [2622,]   49   54   52   55   57   58   55   56   55    60 #>  [2623,]   49   54   52   55   57   58   55   56   55    60 #>  [2624,]   49   54   52   55   57   58   55   56   55    60 #>  [2625,]   49   54   52   55   57   58   55   56   55    60 #>  [2626,]   49   54   52   55   57   58   55   56   55    60 #>  [2627,]   49   54   52   55   57   58   55   56   55    59 #>  [2628,]   49   54   52   55   57   58   55   56   55    60 #>  [2629,]   49   54   52   55   57   58   55   56   55    60 #>  [2630,]   49   54   52   55   57   58   55   56   55    60 #>  [2631,]   49   54   52   55   57   58   55   56   55    60 #>  [2632,]   49   54   52   55   57   58   55   56   55    60 #>  [2633,]   49   54   52   55   57   58   55   56   55    60 #>  [2634,]   49   54   52   55   57   58   55   56   55    60 #>  [2635,]   49   54   52   55   57   58   55   56   55    60 #>  [2636,]   49   54   52   55   57   58   55   56   55    60 #>  [2637,]   49   54   52   55   57   58   55   56   55    60 #>  [2638,]   49   54   52   55   57   58   55   56   55    60 #>  [2639,]   49   54   52   55   57   58   55   56   55    60 #>  [2640,]   49   54   52   55   57   58   55   56   55    60 #>  [2641,]   49   54   52   55   57   58   55   56   55    60 #>  [2642,]   49   54   52   55   57   58   55   56   55    60 #>  [2643,]   49   53   51   54   56   57   54   55   54    58 #>  [2644,]   49   54   52   55   57   58   55   56   55    59 #>  [2645,]   49   54   52   55   57   58   55   56   55    60 #>  [2646,]   49   54   52   55   57   58   55   56   55    60 #>  [2647,]   49   54   52   55   57   58   55   56   55    60 #>  [2648,]   49   54   52   55   57   58   55   56   55    60 #>  [2649,]   49   54   52   55   57   58   55   56   55    60 #>  [2650,]   49   54   52   55   57   58   55   56   55    60 #>  [2651,]   49   53   51   54   56   57   54   55   54    58 #>  [2652,]   49   54   52   55   57   58   55   56   55    59 #>  [2653,]   49   54   52   55   57   58   55   56   55    60 #>  [2654,]   49   54   52   55   57   58   55   56   55    60 #>  [2655,]   49   54   52   55   57   58   55   56   55    60 #>  [2656,]   49   54   52   55   57   58   55   56   55    60 #>  [2657,]   49   54   52   55   57   58   55   56   55    60 #>  [2658,]   49   54   52   55   57   58   55   56   55    60 #>  [2659,]   49   54   52   55   57   58   55   56   55    60 #>  [2660,]   49   53   51   54   56   57   54   55   54    58 #>  [2661,]   49   54   52   55   57   58   55   56   55    60 #>  [2662,]   49   54   52   55   57   58   55   56   55    60 #>  [2663,]   49   54   52   55   57   58   55   56   55    60 #>  [2664,]   49   54   52   55   57   58   55   56   55    60 #>  [2665,]   49   54   52   55   57   58   55   56   55    60 #>  [2666,]   49   54   52   55   57   58   55   56   55    60 #>  [2667,]   49   53   51   54   56   57   54   55   54    58 #>  [2668,]   49   54   52   55   57   58   55   56   55    60 #>  [2669,]   49   54   52   55   57   58   55   56   55    60 #>  [2670,]   49   54   52   55   57   58   55   56   55    60 #>  [2671,]   49   54   52   55   57   58   55   56   55    60 #>  [2672,]   49   54   52   55   57   58   55   56   55    60 #>  [2673,]   49   54   52   55   57   58   55   56   55    60 #>  [2674,]   49   54   52   55   57   58   55   56   55    60 #>  [2675,]   49   54   52   55   57   58   55   56   55    60 #>  [2676,]   49   54   52   55   57   58   55   56   55    60 #>  [2677,]   49   54   52   55   57   58   55   56   55    60 #>  [2678,]   49   54   52   55   57   58   55   56   55    60 #>  [2679,]   49   54   52   55   57   58   55   56   55    60 #>  [2680,]   49   54   52   55   57   58   55   56   55    60 #>  [2681,]   49   54   52   55   57   58   55   56   55    59 #>  [2682,]   49   54   52   55   57   58   55   56   55    59 #>  [2683,]   49   54   52   55   57   58   55   56   55    60 #>  [2684,]   49   54   52   55   57   58   55   56   55    60 #>  [2685,]   49   53   51   54   56   57   54   55   54    58 #>  [2686,]   49   54   52   55   57   58   55   56   55    60 #>  [2687,]   49   54   52   55   57   58   55   56   55    60 #>  [2688,]   49   54   52   55   57   58   55   56   55    60 #>  [2689,]   49   54   52   55   57   58   55   56   55    60 #>  [2690,]   49   54   52   55   57   58   55   56   55    59 #>  [2691,]   49   53   51   54   56   57   54   55   54    58 #>  [2692,]   49   54   52   55   57   58   55   56   55    59 #>  [2693,]   49   54   52   55   57   58   55   56   55    60 #>  [2694,]   49   54   52   55   57   58   55   56   55    60 #>  [2695,]   49   53   51   54   56   57   54   55   54    58 #>  [2696,]   49   54   52   55   57   58   55   56   55    60 #>  [2697,]   49   54   52   55   57   58   55   56   55    60 #>  [2698,]   49   54   52   55   57   58   55   56   55    60 #>  [2699,]   49   54   52   55   57   58   55   56   55    59 #>  [2700,]   49   54   52   55   57   58   55   56   55    60 #>  [2701,]   51   56   54   57   59   60   57   58   57    62 #>  [2702,]   51   56   54   57   59   60   57   58   57    62 #>  [2703,]   51   56   54   57   59   60   57   58   57    62 #>  [2704,]   50   55   53   56   58   59   56   57   56    61 #>  [2705,]   51   56   54   57   59   60   57   58   57    62 #>  [2706,]   51   56   54   57   59   60   57   58   57    62 #>  [2707,]   51   56   54   57   59   60   57   58   57    62 #>  [2708,]   50   55   53   56   58   59   56   57   56    61 #>  [2709,]   50   55   53   56   58   59   56   57   56    61 #>  [2710,]   51   56   54   57   59   60   57   58   57    62 #>  [2711,]   51   56   54   57   59   60   57   58   57    62 #>  [2712,]   51   56   54   57   59   60   57   58   57    62 #>  [2713,]   51   56   54   57   59   60   57   58   57    62 #>  [2714,]   51   56   54   57   59   60   57   58   57    62 #>  [2715,]   51   56   54   57   59   60   57   58   57    62 #>  [2716,]   51   56   54   57   59   60   57   58   57    62 #>  [2717,]   50   55   53   56   58   59   56   57   56    61 #>  [2718,]   51   56   54   57   59   60   57   58   57    62 #>  [2719,]   51   56   54   57   59   60   57   58   57    62 #>  [2720,]   51   56   54   57   59   60   57   58   57    62 #>  [2721,]   51   56   54   57   59   60   57   58   57    62 #>  [2722,]   50   55   53   56   58   59   56   57   56    61 #>  [2723,]   51   56   54   57   59   60   57   58   57    62 #>  [2724,]   51   56   54   57   59   60   57   58   57    62 #>  [2725,]   51   56   54   57   59   60   57   58   57    62 #>  [2726,]   51   56   54   57   59   60   57   58   57    62 #>  [2727,]   50   55   53   56   58   59   56   57   56    61 #>  [2728,]   51   56   54   57   59   60   57   58   57    62 #>  [2729,]   51   56   54   57   59   60   57   58   57    62 #>  [2730,]   51   56   54   57   59   60   57   58   57    62 #>  [2731,]   51   56   54   57   59   60   57   58   57    62 #>  [2732,]   51   56   54   57   59   60   57   58   57    62 #>  [2733,]   51   56   54   57   59   60   57   58   57    62 #>  [2734,]   51   56   54   57   59   60   57   58   57    62 #>  [2735,]   50   55   53   56   58   59   56   57   56    61 #>  [2736,]   51   56   54   57   59   60   57   58   57    62 #>  [2737,]   51   56   54   57   59   60   57   58   57    62 #>  [2738,]   51   56   54   57   59   60   57   58   57    62 #>  [2739,]   51   56   54   57   59   60   57   58   57    62 #>  [2740,]   51   56   54   57   59   60   57   58   57    62 #>  [2741,]   51   56   54   57   59   60   57   58   57    62 #>  [2742,]   51   56   54   57   59   60   57   58   57    62 #>  [2743,]   51   56   54   57   59   60   57   58   57    62 #>  [2744,]   50   55   53   56   58   59   56   57   56    61 #>  [2745,]   51   56   54   57   59   60   57   58   57    62 #>  [2746,]   51   56   54   57   59   60   57   58   57    62 #>  [2747,]   51   56   54   57   59   60   57   58   57    62 #>  [2748,]   51   56   54   57   59   60   57   58   57    62 #>  [2749,]   51   56   54   57   59   60   57   58   57    62 #>  [2750,]   51   56   54   57   59   60   57   58   57    62 #>  [2751,]   51   56   54   57   59   60   57   58   57    62 #>  [2752,]   50   55   53   56   58   59   56   57   56    61 #>  [2753,]   51   56   54   57   59   60   57   58   57    62 #>  [2754,]   51   56   54   57   59   60   57   58   57    62 #>  [2755,]   51   56   54   57   59   60   57   58   57    62 #>  [2756,]   51   56   54   57   59   60   57   58   57    62 #>  [2757,]   51   56   54   57   59   60   57   58   57    62 #>  [2758,]   50   55   53   56   58   59   56   57   56    61 #>  [2759,]   51   56   54   57   59   60   57   58   57    62 #>  [2760,]   51   56   54   57   59   60   57   58   57    62 #>  [2761,]   51   56   54   57   59   60   57   58   57    62 #>  [2762,]   51   56   54   57   59   60   57   58   57    62 #>  [2763,]   51   56   54   57   59   60   57   58   57    62 #>  [2764,]   51   56   54   57   59   60   57   58   57    62 #>  [2765,]   51   56   54   57   59   60   57   58   57    62 #>  [2766,]   50   55   53   56   58   59   56   57   56    61 #>  [2767,]   51   56   54   57   59   60   57   58   57    62 #>  [2768,]   51   56   54   57   59   60   57   58   57    62 #>  [2769,]   51   56   54   57   59   60   57   58   57    62 #>  [2770,]   51   56   54   57   59   60   57   58   57    62 #>  [2771,]   51   56   54   57   59   60   57   58   57    62 #>  [2772,]   51   56   54   57   59   60   57   58   57    62 #>  [2773,]   51   56   54   57   59   60   57   58   57    62 #>  [2774,]   51   56   54   57   59   60   57   58   57    62 #>  [2775,]   51   56   54   57   59   60   57   58   57    62 #>  [2776,]   51   56   54   57   59   60   57   58   57    62 #>  [2777,]   51   56   54   57   59   60   57   58   57    62 #>  [2778,]   51   56   54   57   59   60   57   58   57    62 #>  [2779,]   51   56   54   57   59   60   57   58   57    62 #>  [2780,]   51   56   54   57   59   60   57   58   57    62 #>  [2781,]   50   55   53   56   58   59   56   57   56    61 #>  [2782,]   50   55   53   56   58   59   56   57   56    61 #>  [2783,]   51   56   54   57   59   60   57   58   57    62 #>  [2784,]   51   56   54   57   59   60   57   58   57    62 #>  [2785,]   51   56   54   57   59   60   57   58   57    62 #>  [2786,]   51   56   54   57   59   60   57   58   57    62 #>  [2787,]   50   55   53   56   58   59   56   57   56    61 #>  [2788,]   51   56   54   57   59   60   57   58   57    62 #>  [2789,]   51   56   54   57   59   60   57   58   57    62 #>  [2790,]   50   55   53   56   58   59   56   57   56    61 #>  [2791,]   51   56   54   57   59   60   57   58   57    62 #>  [2792,]   50   55   53   56   58   59   56   57   56    61 #>  [2793,]   51   56   54   57   59   60   57   58   57    62 #>  [2794,]   51   56   54   57   59   60   57   58   57    62 #>  [2795,]   50   55   53   56   58   59   56   57   56    61 #>  [2796,]   51   56   54   57   59   60   57   58   57    62 #>  [2797,]   51   56   54   57   59   60   57   58   57    62 #>  [2798,]   51   56   54   57   59   60   57   58   57    62 #>  [2799,]   50   55   53   56   58   59   56   57   56    61 #>  [2800,]   51   56   54   57   59   60   57   58   57    62 #>  [2801,]   53   58   56   59   61   62   59   60   59    64 #>  [2802,]   53   58   56   59   61   62   59   60   59    64 #>  [2803,]   52   57   55   58   60   61   58   59   58    63 #>  [2804,]   52   57   55   58   60   61   58   59   58    63 #>  [2805,]   53   58   56   59   61   62   59   60   59    64 #>  [2806,]   53   58   56   59   61   62   59   60   59    64 #>  [2807,]   52   57   55   58   60   61   58   59   58    63 #>  [2808,]   52   57   55   58   60   61   58   59   58    63 #>  [2809,]   53   58   57   60   62   63   59   60   59    64 #>  [2810,]   52   57   55   58   60   61   58   59   58    63 #>  [2811,]   53   58   57   60   62   63   59   60   59    64 #>  [2812,]   52   57   55   58   60   61   58   59   58    63 #>  [2813,]   53   58   56   59   61   62   59   60   59    64 #>  [2814,]   52   57   55   58   60   61   58   59   58    63 #>  [2815,]   53   58   57   60   62   63   59   60   59    64 #>  [2816,]   52   57   55   58   60   61   58   59   58    63 #>  [2817,]   53   58   56   59   61   62   59   60   59    64 #>  [2818,]   53   58   57   60   62   63   59   60   59    64 #>  [2819,]   53   58   57   60   62   63   59   60   59    64 #>  [2820,]   53   58   56   59   61   62   59   60   59    64 #>  [2821,]   53   58   57   60   62   63   59   60   59    64 #>  [2822,]   53   58   56   59   61   62   59   60   59    64 #>  [2823,]   52   57   55   58   60   61   58   59   58    63 #>  [2824,]   53   58   56   59   61   62   59   60   59    64 #>  [2825,]   52   57   55   58   60   61   58   59   58    63 #>  [2826,]   52   57   55   58   60   61   58   59   58    63 #>  [2827,]   53   58   57   60   62   63   59   60   59    64 #>  [2828,]   53   58   56   59   61   62   59   60   59    64 #>  [2829,]   53   58   56   59   61   62   59   60   59    64 #>  [2830,]   52   57   55   58   60   61   58   59   58    63 #>  [2831,]   52   57   55   58   60   61   58   59   58    63 #>  [2832,]   52   57   55   58   60   61   58   59   58    63 #>  [2833,]   53   58   57   60   62   63   59   60   59    64 #>  [2834,]   53   58   56   59   61   62   59   60   59    64 #>  [2835,]   52   57   55   58   60   61   58   59   58    63 #>  [2836,]   53   58   57   60   62   63   59   60   59    64 #>  [2837,]   52   57   55   58   60   61   58   59   58    63 #>  [2838,]   53   58   57   60   62   63   59   60   59    64 #>  [2839,]   53   58   56   59   61   62   59   60   59    64 #>  [2840,]   52   57   55   58   60   61   58   59   58    63 #>  [2841,]   53   58   57   60   62   63   59   60   59    64 #>  [2842,]   53   58   57   60   62   63   59   60   59    64 #>  [2843,]   53   58   56   59   61   62   59   60   59    64 #>  [2844,]   52   57   55   58   60   61   58   59   58    63 #>  [2845,]   52   57   55   58   60   61   58   59   58    63 #>  [2846,]   52   57   55   58   60   61   58   59   58    63 #>  [2847,]   52   57   55   58   60   61   58   59   58    63 #>  [2848,]   53   58   57   60   62   63   59   60   59    64 #>  [2849,]   52   57   55   58   60   61   58   59   58    63 #>  [2850,]   53   58   56   59   61   62   59   60   59    64 #>  [2851,]   53   58   56   59   61   62   59   60   59    64 #>  [2852,]   52   57   55   58   60   61   58   59   58    63 #>  [2853,]   53   58   56   59   61   62   59   60   59    64 #>  [2854,]   53   58   56   59   61   62   59   60   59    64 #>  [2855,]   52   57   55   58   60   61   58   59   58    63 #>  [2856,]   53   58   56   59   61   62   59   60   59    64 #>  [2857,]   52   57   55   58   60   61   58   59   58    63 #>  [2858,]   53   58   57   60   62   63   59   60   59    64 #>  [2859,]   52   57   55   58   60   61   58   59   58    63 #>  [2860,]   52   57   55   58   60   61   58   59   58    63 #>  [2861,]   53   58   57   60   62   63   59   60   59    64 #>  [2862,]   53   58   57   60   62   63   59   60   59    64 #>  [2863,]   53   58   56   59   61   62   59   60   59    64 #>  [2864,]   53   58   56   59   61   62   59   60   59    64 #>  [2865,]   53   58   56   59   61   62   59   60   59    64 #>  [2866,]   53   58   56   59   61   62   59   60   59    64 #>  [2867,]   52   57   55   58   60   61   58   59   58    63 #>  [2868,]   52   57   55   58   60   61   58   59   58    63 #>  [2869,]   53   58   57   60   62   63   59   60   59    64 #>  [2870,]   53   58   56   59   61   62   59   60   59    64 #>  [2871,]   53   58   56   59   61   62   59   60   59    64 #>  [2872,]   52   57   55   58   60   61   58   59   58    63 #>  [2873,]   53   58   56   59   61   62   59   60   59    64 #>  [2874,]   52   57   55   58   60   61   58   59   58    63 #>  [2875,]   52   57   55   58   60   61   58   59   58    63 #>  [2876,]   52   57   55   58   60   61   58   59   58    63 #>  [2877,]   53   58   56   59   61   62   59   60   59    64 #>  [2878,]   52   57   55   58   60   61   58   59   58    63 #>  [2879,]   53   58   56   59   61   62   59   60   59    64 #>  [2880,]   52   57   55   58   60   61   58   59   58    63 #>  [2881,]   53   58   56   59   61   62   59   60   59    64 #>  [2882,]   53   58   57   60   62   63   59   60   59    64 #>  [2883,]   53   58   56   59   61   62   59   60   59    64 #>  [2884,]   53   58   56   59   61   62   59   60   59    64 #>  [2885,]   53   58   57   60   62   63   59   60   59    64 #>  [2886,]   52   57   55   58   60   61   58   59   58    63 #>  [2887,]   53   58   56   59   61   62   59   60   59    64 #>  [2888,]   52   57   55   58   60   61   58   59   58    63 #>  [2889,]   53   58   56   59   61   62   59   60   59    64 #>  [2890,]   53   58   56   59   61   62   59   60   59    64 #>  [2891,]   53   58   56   59   61   62   59   60   59    64 #>  [2892,]   52   57   55   58   60   61   58   59   58    63 #>  [2893,]   53   58   57   60   62   63   59   60   59    64 #>  [2894,]   53   58   56   59   61   62   59   60   59    64 #>  [2895,]   52   57   55   58   60   61   58   59   58    63 #>  [2896,]   52   57   55   58   60   61   58   59   58    63 #>  [2897,]   52   57   55   58   60   61   58   59   58    63 #>  [2898,]   52   57   55   58   60   61   58   59   58    63 #>  [2899,]   53   58   57   60   62   63   59   60   59    64 #>  [2900,]   53   58   56   59   61   62   59   60   59    64 #>  [2901,]   55   60   59   62   64   65   61   62   61    65 #>  [2902,]   55   60   59   62   64   65   61   62   61    65 #>  [2903,]   54   59   58   61   63   64   60   61   60    67 #>  [2904,]   55   60   59   62   64   65   61   62   61    65 #>  [2905,]   54   59   58   61   63   64   60   61   60    66 #>  [2906,]   55   60   59   62   64   65   61   62   61    65 #>  [2907,]   54   59   58   61   63   64   60   61   60    66 #>  [2908,]   54   59   58   61   63   64   60   61   60    66 #>  [2909,]   55   60   59   62   64   65   61   62   61    65 #>  [2910,]   55   60   59   62   64   65   61   62   61    65 #>  [2911,]   55   60   59   62   64   65   61   62   61    65 #>  [2912,]   55   60   59   62   64   65   61   62   61    65 #>  [2913,]   54   59   58   61   63   64   60   61   60    66 #>  [2914,]   55   60   59   62   64   65   61   62   61    65 #>  [2915,]   55   60   59   62   64   65   61   62   61    65 #>  [2916,]   54   59   58   61   63   64   60   61   60    66 #>  [2917,]   54   59   58   61   63   64   60   61   60    66 #>  [2918,]   55   60   59   62   64   65   61   62   61    65 #>  [2919,]   55   60   59   62   64   65   61   62   61    65 #>  [2920,]   54   59   58   61   63   64   60   61   60    67 #>  [2921,]   55   60   59   62   64   65   61   62   61    65 #>  [2922,]   54   59   58   61   63   64   60   61   60    66 #>  [2923,]   55   60   59   62   64   65   61   62   61    65 #>  [2924,]   54   59   58   61   63   64   60   61   60    66 #>  [2925,]   54   59   58   61   63   64   60   61   60    67 #>  [2926,]   55   60   59   62   64   65   61   62   61    65 #>  [2927,]   55   60   59   62   64   65   61   62   61    65 #>  [2928,]   55   60   59   62   64   65   61   62   61    65 #>  [2929,]   54   59   58   61   63   64   60   61   60    66 #>  [2930,]   55   60   59   62   64   65   61   62   61    65 #>  [2931,]   55   60   59   62   64   65   61   62   61    65 #>  [2932,]   55   60   59   62   64   65   61   62   61    65 #>  [2933,]   55   60   59   62   64   65   61   62   61    65 #>  [2934,]   55   60   59   62   64   65   61   62   61    65 #>  [2935,]   55   60   59   62   64   65   61   62   61    65 #>  [2936,]   55   60   59   62   64   65   61   62   61    65 #>  [2937,]   55   60   59   62   64   65   61   62   61    65 #>  [2938,]   55   60   59   62   64   65   61   62   61    65 #>  [2939,]   54   59   58   61   63   64   60   61   60    66 #>  [2940,]   54   59   58   61   63   64   60   61   60    66 #>  [2941,]   55   60   59   62   64   65   61   62   61    65 #>  [2942,]   55   60   59   62   64   65   61   62   61    65 #>  [2943,]   54   59   58   61   63   64   60   61   60    66 #>  [2944,]   54   59   58   61   63   64   60   61   60    66 #>  [2945,]   54   59   58   61   63   64   60   61   60    66 #>  [2946,]   54   59   58   61   63   64   60   61   60    66 #>  [2947,]   54   59   58   61   63   64   60   61   60    66 #>  [2948,]   55   60   59   62   64   65   61   62   61    65 #>  [2949,]   54   59   58   61   63   64   60   61   60    66 #>  [2950,]   54   59   58   61   63   64   60   61   60    66 #>  [2951,]   54   59   58   61   63   64   60   61   60    66 #>  [2952,]   55   60   59   62   64   65   61   62   61    65 #>  [2953,]   54   59   58   61   63   64   60   61   60    66 #>  [2954,]   54   59   58   61   63   64   60   61   60    66 #>  [2955,]   54   59   58   61   63   64   60   61   60    66 #>  [2956,]   54   59   58   61   63   64   60   61   60    66 #>  [2957,]   55   60   59   62   64   65   61   62   61    65 #>  [2958,]   55   60   59   62   64   65   61   62   61    65 #>  [2959,]   54   59   58   61   63   64   60   61   60    66 #>  [2960,]   55   60   59   62   64   65   61   62   61    65 #>  [2961,]   55   60   59   62   64   65   61   62   61    65 #>  [2962,]   55   60   59   62   64   65   61   62   61    65 #>  [2963,]   54   59   58   61   63   64   60   61   60    66 #>  [2964,]   55   60   59   62   64   65   61   62   61    65 #>  [2965,]   54   59   58   61   63   64   60   61   60    67 #>  [2966,]   54   59   58   61   63   64   60   61   60    66 #>  [2967,]   55   60   59   62   64   65   61   62   61    65 #>  [2968,]   55   60   59   62   64   65   61   62   61    65 #>  [2969,]   55   60   59   62   64   65   61   62   61    65 #>  [2970,]   54   59   58   61   63   64   60   61   60    67 #>  [2971,]   54   59   58   61   63   64   60   61   60    66 #>  [2972,]   54   59   58   61   63   64   60   61   60    66 #>  [2973,]   55   60   59   62   64   65   61   62   61    65 #>  [2974,]   55   60   59   62   64   65   61   62   61    65 #>  [2975,]   55   60   59   62   64   65   61   62   61    65 #>  [2976,]   54   59   58   61   63   64   60   61   60    66 #>  [2977,]   54   59   58   61   63   64   60   61   60    66 #>  [2978,]   54   59   58   61   63   64   60   61   60    66 #>  [2979,]   54   59   58   61   63   64   60   61   60    66 #>  [2980,]   55   60   59   62   64   65   61   62   61    65 #>  [2981,]   54   59   58   61   63   64   60   61   60    66 #>  [2982,]   55   60   59   62   64   65   61   62   61    65 #>  [2983,]   54   59   58   61   63   64   60   61   60    66 #>  [2984,]   54   59   58   61   63   64   60   61   60    66 #>  [2985,]   55   60   59   62   64   65   61   62   61    65 #>  [2986,]   54   59   58   61   63   64   60   61   60    66 #>  [2987,]   55   60   59   62   64   65   61   62   61    65 #>  [2988,]   55   60   59   62   64   65   61   62   61    65 #>  [2989,]   54   59   58   61   63   64   60   61   60    66 #>  [2990,]   54   59   58   61   63   64   60   61   60    66 #>  [2991,]   55   60   59   62   64   65   61   62   61    65 #>  [2992,]   55   60   59   62   64   65   61   62   61    65 #>  [2993,]   55   60   59   62   64   65   61   62   61    65 #>  [2994,]   54   59   58   61   63   64   60   61   60    66 #>  [2995,]   55   60   59   62   64   65   61   62   61    65 #>  [2996,]   55   60   59   62   64   65   61   62   61    65 #>  [2997,]   55   60   59   62   64   65   61   62   61    65 #>  [2998,]   54   59   58   61   63   64   60   61   60    67 #>  [2999,]   55   60   59   62   64   65   61   62   61    65 #>  [3000,]   54   59   58   61   63   64   60   61   60    66 #>  [3001,]   57   62   61   64   66   66   63   64   62    68 #>  [3002,]   56   61   60   63   65   66   62   63   62    68 #>  [3003,]   56   61   60   63   65   66   62   63   62    68 #>  [3004,]   56   61   60   63   65   66   63   64   62    68 #>  [3005,]   57   62   61   64   66   66   63   64   62    69 #>  [3006,]   56   61   60   63   65   66   62   63   62    68 #>  [3007,]   56   61   60   63   65   66   62   63   62    68 #>  [3008,]   56   61   60   63   65   66   62   63   62    68 #>  [3009,]   56   61   60   63   65   66   62   63   62    68 #>  [3010,]   56   61   60   63   65   66   63   64   62    68 #>  [3011,]   56   61   60   63   65   66   63   64   62    68 #>  [3012,]   56   61   60   63   65   66   63   64   62    68 #>  [3013,]   56   61   60   63   65   66   63   64   62    68 #>  [3014,]   57   62   61   64   66   66   63   64   62    68 #>  [3015,]   57   62   61   64   66   66   63   64   62    68 #>  [3016,]   56   61   60   63   65   66   63   64   62    68 #>  [3017,]   56   61   60   63   65   66   63   64   62    68 #>  [3018,]   57   62   61   64   66   66   63   64   62    69 #>  [3019,]   56   61   60   63   65   66   63   64   62    68 #>  [3020,]   56   61   60   63   65   66   62   63   62    68 #>  [3021,]   56   61   60   63   65   66   62   63   62    68 #>  [3022,]   56   61   60   63   65   66   63   64   62    68 #>  [3023,]   56   61   60   63   65   66   62   63   62    68 #>  [3024,]   56   61   60   63   65   66   63   64   62    68 #>  [3025,]   56   61   60   63   65   66   62   63   62    68 #>  [3026,]   56   61   60   63   65   66   63   64   62    68 #>  [3027,]   57   62   61   64   66   66   63   64   62    69 #>  [3028,]   56   61   60   63   65   66   63   64   62    68 #>  [3029,]   56   61   60   63   65   66   62   63   62    68 #>  [3030,]   56   61   60   63   65   66   63   64   62    68 #>  [3031,]   56   61   60   63   65   66   63   64   62    68 #>  [3032,]   57   62   61   64   66   66   63   64   62    69 #>  [3033,]   56   61   60   63   65   66   63   64   62    68 #>  [3034,]   56   61   60   63   65   66   62   63   62    68 #>  [3035,]   56   61   60   63   65   66   62   63   62    68 #>  [3036,]   56   61   60   63   65   66   62   63   62    68 #>  [3037,]   56   61   60   63   65   66   62   63   62    68 #>  [3038,]   56   61   60   63   65   66   63   64   62    68 #>  [3039,]   56   61   60   63   65   66   63   64   62    68 #>  [3040,]   56   61   60   63   65   66   62   63   62    68 #>  [3041,]   56   61   60   63   65   66   62   63   62    68 #>  [3042,]   56   61   60   63   65   66   62   63   62    68 #>  [3043,]   57   62   61   64   66   66   63   64   62    68 #>  [3044,]   56   61   60   63   65   66   62   63   62    68 #>  [3045,]   56   61   60   63   65   66   62   63   62    68 #>  [3046,]   56   61   60   63   65   66   63   64   62    68 #>  [3047,]   56   61   60   63   65   66   63   64   62    68 #>  [3048,]   56   61   60   63   65   66   63   64   62    68 #>  [3049,]   56   61   60   63   65   66   62   63   62    68 #>  [3050,]   56   61   60   63   65   66   62   63   62    68 #>  [3051,]   56   61   60   63   65   66   63   64   62    68 #>  [3052,]   56   61   60   63   65   66   63   64   62    68 #>  [3053,]   56   61   60   63   65   66   62   63   62    68 #>  [3054,]   56   61   60   63   65   66   62   63   62    68 #>  [3055,]   56   61   60   63   65   66   62   63   62    68 #>  [3056,]   56   61   60   63   65   66   62   63   62    68 #>  [3057,]   56   61   60   63   65   66   62   63   62    68 #>  [3058,]   57   62   61   64   66   66   63   64   62    68 #>  [3059,]   57   62   61   64   66   66   63   64   62    68 #>  [3060,]   56   61   60   63   65   66   62   63   62    68 #>  [3061,]   57   62   61   64   66   66   63   64   62    68 #>  [3062,]   56   61   60   63   65   66   62   63   62    68 #>  [3063,]   56   61   60   63   65   66   63   64   62    68 #>  [3064,]   56   61   60   63   65   66   62   63   62    68 #>  [3065,]   56   61   60   63   65   66   62   63   62    68 #>  [3066,]   57   62   61   64   66   66   63   64   62    68 #>  [3067,]   56   61   60   63   65   66   62   63   62    68 #>  [3068,]   56   61   60   63   65   66   63   64   62    68 #>  [3069,]   56   61   60   63   65   66   63   64   62    68 #>  [3070,]   57   62   61   64   66   66   63   64   62    68 #>  [3071,]   57   62   61   64   66   66   63   64   62    69 #>  [3072,]   56   61   60   63   65   66   62   63   62    68 #>  [3073,]   56   61   60   63   65   66   62   63   62    68 #>  [3074,]   56   61   60   63   65   66   62   63   62    68 #>  [3075,]   57   62   61   64   66   66   63   64   62    69 #>  [3076,]   56   61   60   63   65   66   62   63   62    68 #>  [3077,]   56   61   60   63   65   66   63   64   62    68 #>  [3078,]   56   61   60   63   65   66   63   64   62    68 #>  [3079,]   57   62   61   64   66   66   63   64   62    68 #>  [3080,]   56   61   60   63   65   66   62   63   62    68 #>  [3081,]   56   61   60   63   65   66   62   63   62    68 #>  [3082,]   56   61   60   63   65   66   62   63   62    68 #>  [3083,]   56   61   60   63   65   66   63   64   62    68 #>  [3084,]   56   61   60   63   65   66   62   63   62    68 #>  [3085,]   56   61   60   63   65   66   62   63   62    68 #>  [3086,]   56   61   60   63   65   66   62   63   62    68 #>  [3087,]   57   62   61   64   66   66   63   64   62    68 #>  [3088,]   56   61   60   63   65   66   62   63   62    68 #>  [3089,]   56   61   60   63   65   66   62   63   62    68 #>  [3090,]   56   61   60   63   65   66   63   64   62    68 #>  [3091,]   57   62   61   64   66   66   63   64   62    69 #>  [3092,]   56   61   60   63   65   66   63   64   62    68 #>  [3093,]   56   61   60   63   65   66   63   64   62    68 #>  [3094,]   56   61   60   63   65   66   62   63   62    68 #>  [3095,]   57   62   61   64   66   66   63   64   62    69 #>  [3096,]   56   61   60   63   65   66   63   64   62    68 #>  [3097,]   56   61   60   63   65   66   62   63   62    68 #>  [3098,]   56   61   60   63   65   66   62   63   62    68 #>  [3099,]   56   61   60   63   65   66   62   63   62    68 #>  [3100,]   57   62   61   64   66   66   63   64   62    69 #>  [3101,]   58   63   62   65   67   67   64   65   63    70 #>  [3102,]   59   64   63   66   68   68   65   66   64    71 #>  [3103,]   58   63   62   65   67   67   64   65   63    70 #>  [3104,]   59   64   63   66   68   68   65   66   64    71 #>  [3105,]   59   64   63   66   68   68   65   66   64    71 #>  [3106,]   58   63   62   65   67   67   64   65   63    70 #>  [3107,]   59   64   63   66   68   68   65   66   64    71 #>  [3108,]   59   64   63   66   68   68   65   66   64    71 #>  [3109,]   59   64   63   66   68   68   65   66   64    71 #>  [3110,]   59   64   63   66   68   68   65   66   64    71 #>  [3111,]   58   63   62   65   67   67   64   65   63    70 #>  [3112,]   59   64   63   66   68   68   65   66   64    71 #>  [3113,]   59   64   63   66   68   68   65   66   64    71 #>  [3114,]   58   63   62   65   67   67   64   65   63    70 #>  [3115,]   59   64   63   66   68   68   65   66   64    71 #>  [3116,]   58   63   62   65   67   67   64   65   63    70 #>  [3117,]   59   64   63   66   68   68   65   66   64    71 #>  [3118,]   59   64   63   66   68   68   65   66   64    71 #>  [3119,]   58   63   62   65   67   67   64   65   63    70 #>  [3120,]   59   64   63   66   68   68   65   67   64    71 #>  [3121,]   59   64   63   66   68   68   65   66   64    71 #>  [3122,]   59   64   63   66   68   68   65   67   64    71 #>  [3123,]   59   64   63   66   68   68   65   66   64    71 #>  [3124,]   59   64   63   66   68   68   65   66   64    71 #>  [3125,]   59   64   63   66   68   68   65   66   64    71 #>  [3126,]   58   63   62   65   67   67   64   65   63    70 #>  [3127,]   59   64   63   66   68   68   65   66   64    71 #>  [3128,]   58   63   62   65   67   67   64   65   63    70 #>  [3129,]   59   64   63   66   68   68   65   67   64    71 #>  [3130,]   59   64   63   66   68   68   65   66   64    71 #>  [3131,]   59   64   63   66   68   68   65   66   64    71 #>  [3132,]   59   64   63   66   68   68   65   66   64    71 #>  [3133,]   59   64   63   66   68   68   65   66   64    71 #>  [3134,]   58   63   62   65   67   67   64   65   63    70 #>  [3135,]   58   63   62   65   67   67   64   65   63    70 #>  [3136,]   59   64   63   66   68   68   65   66   64    71 #>  [3137,]   58   63   62   65   67   67   64   65   63    70 #>  [3138,]   58   63   62   65   67   67   64   65   63    70 #>  [3139,]   59   64   63   66   68   68   65   66   64    71 #>  [3140,]   59   64   63   66   68   68   65   66   64    71 #>  [3141,]   59   64   63   66   68   68   65   66   64    71 #>  [3142,]   58   63   62   65   67   67   64   65   63    70 #>  [3143,]   59   64   63   66   68   68   65   66   64    71 #>  [3144,]   59   64   63   66   68   68   65   66   64    71 #>  [3145,]   58   63   62   65   67   67   64   65   63    70 #>  [3146,]   59   64   63   66   68   68   65   66   64    71 #>  [3147,]   59   64   63   66   68   68   65   66   64    71 #>  [3148,]   59   64   63   66   68   68   65   66   64    71 #>  [3149,]   58   63   62   65   67   67   64   65   63    70 #>  [3150,]   59   64   63   66   68   68   65   66   64    71 #>  [3151,]   59   64   63   66   68   68   65   66   64    71 #>  [3152,]   58   63   62   65   67   67   64   65   63    70 #>  [3153,]   59   64   63   66   68   68   65   66   64    71 #>  [3154,]   59   64   63   66   68   68   65   66   64    71 #>  [3155,]   59   64   63   66   68   68   65   66   64    71 #>  [3156,]   58   63   62   65   67   67   64   65   63    70 #>  [3157,]   59   64   63   66   68   68   65   66   64    71 #>  [3158,]   59   64   63   66   68   68   65   67   64    71 #>  [3159,]   58   63   62   65   67   67   64   65   63    70 #>  [3160,]   59   64   63   66   68   68   65   66   64    71 #>  [3161,]   59   64   63   66   68   68   65   66   64    71 #>  [3162,]   59   64   63   66   68   68   65   66   64    71 #>  [3163,]   59   64   63   66   68   68   65   66   64    71 #>  [3164,]   58   63   62   65   67   67   64   65   63    70 #>  [3165,]   58   63   62   65   67   67   64   65   63    70 #>  [3166,]   59   64   63   66   68   68   65   66   64    71 #>  [3167,]   59   64   63   66   68   68   65   66   64    71 #>  [3168,]   58   63   62   65   67   67   64   65   63    70 #>  [3169,]   58   63   62   65   67   67   64   65   63    70 #>  [3170,]   59   64   63   66   68   68   65   66   64    71 #>  [3171,]   59   64   63   66   68   68   65   66   64    71 #>  [3172,]   58   63   62   65   67   67   64   65   63    70 #>  [3173,]   58   63   62   65   67   67   64   65   63    70 #>  [3174,]   59   64   63   66   68   68   65   66   64    71 #>  [3175,]   59   64   63   66   68   68   65   66   64    71 #>  [3176,]   59   64   63   66   68   68   65   66   64    71 #>  [3177,]   58   63   62   65   67   67   64   65   63    70 #>  [3178,]   59   64   63   66   68   68   65   66   64    71 #>  [3179,]   58   63   62   65   67   67   64   65   63    70 #>  [3180,]   59   64   63   66   68   68   65   66   64    71 #>  [3181,]   59   64   63   66   68   68   65   67   64    71 #>  [3182,]   59   64   63   66   68   68   65   66   64    71 #>  [3183,]   59   64   63   66   68   68   65   66   64    71 #>  [3184,]   59   64   63   66   68   68   65   66   64    71 #>  [3185,]   59   64   63   66   68   68   65   66   64    71 #>  [3186,]   59   64   63   66   68   68   65   66   64    71 #>  [3187,]   59   64   63   66   68   68   65   67   64    71 #>  [3188,]   59   64   63   66   68   68   65   66   64    71 #>  [3189,]   58   63   62   65   67   67   64   65   63    70 #>  [3190,]   59   64   63   66   68   68   65   66   64    71 #>  [3191,]   59   64   63   66   68   68   65   66   64    71 #>  [3192,]   59   64   63   66   68   68   65   66   64    71 #>  [3193,]   59   64   63   66   68   68   65   66   64    71 #>  [3194,]   58   63   62   65   67   67   64   65   63    70 #>  [3195,]   59   64   63   66   68   68   65   66   64    71 #>  [3196,]   58   63   62   65   67   67   64   65   63    70 #>  [3197,]   58   63   62   65   67   67   64   65   63    70 #>  [3198,]   59   64   63   66   68   68   65   66   64    71 #>  [3199,]   59   64   63   66   68   68   65   66   64    71 #>  [3200,]   58   63   62   65   67   67   64   65   63    70 #>  [3201,]   61   67   65   68   71   69   66   68   65    72 #>  [3202,]   61   67   65   68   71   69   66   68   65    72 #>  [3203,]   60   65   66   69   69   70   67   69   66    73 #>  [3204,]   61   66   64   67   71   69   66   68   65    72 #>  [3205,]   61   66   64   67   71   69   66   68   65    72 #>  [3206,]   61   66   64   67   71   69   66   68   65    72 #>  [3207,]   61   67   65   68   71   69   66   68   65    72 #>  [3208,]   61   67   65   68   71   69   66   68   65    72 #>  [3209,]   61   66   64   67   71   69   66   68   65    72 #>  [3210,]   61   66   64   67   71   69   66   68   65    72 #>  [3211,]   60   65   66   69   69   70   67   69   66    73 #>  [3212,]   60   65   67   70   70   70   67   69   66    73 #>  [3213,]   61   67   65   68   71   69   66   68   65    72 #>  [3214,]   60   65   66   69   69   70   67   69   66    73 #>  [3215,]   61   67   65   68   71   69   66   68   65    72 #>  [3216,]   61   67   65   68   71   69   66   68   65    72 #>  [3217,]   61   67   65   68   71   69   66   68   65    72 #>  [3218,]   61   67   65   68   71   69   66   68   65    72 #>  [3219,]   60   65   66   69   69   70   67   69   66    73 #>  [3220,]   60   65   67   70   70   70   67   69   66    73 #>  [3221,]   61   66   64   67   71   69   66   68   65    72 #>  [3222,]   60   65   67   70   70   70   67   69   66    73 #>  [3223,]   61   67   65   68   71   69   66   68   65    72 #>  [3224,]   61   66   64   67   71   69   66   68   65    72 #>  [3225,]   61   66   64   67   71   69   66   68   65    72 #>  [3226,]   60   65   66   69   69   70   67   69   66    73 #>  [3227,]   61   67   65   68   71   69   66   68   65    72 #>  [3228,]   61   66   64   67   71   69   66   68   65    72 #>  [3229,]   60   65   67   70   70   70   67   69   66    73 #>  [3230,]   60   65   67   70   70   70   67   69   66    73 #>  [3231,]   61   66   64   67   71   69   66   68   65    72 #>  [3232,]   60   65   67   70   70   70   67   69   66    73 #>  [3233,]   61   67   65   68   71   69   66   68   65    72 #>  [3234,]   60   65   66   69   69   70   67   69   66    73 #>  [3235,]   61   66   64   67   71   69   66   68   65    72 #>  [3236,]   60   65   67   70   70   70   67   69   66    73 #>  [3237,]   61   67   65   68   71   69   66   68   65    72 #>  [3238,]   61   67   65   68   71   69   66   68   65    72 #>  [3239,]   61   66   64   67   71   69   66   68   65    72 #>  [3240,]   60   65   67   70   70   70   67   69   66    73 #>  [3241,]   60   65   67   70   70   70   67   69   66    73 #>  [3242,]   60   65   66   69   69   70   67   69   66    73 #>  [3243,]   61   67   65   68   71   69   66   68   65    72 #>  [3244,]   61   67   65   68   71   69   66   68   65    72 #>  [3245,]   61   67   65   68   71   69   66   68   65    72 #>  [3246,]   61   67   65   68   71   69   66   68   65    72 #>  [3247,]   61   66   64   67   71   69   66   68   65    72 #>  [3248,]   60   65   67   70   70   70   67   69   66    73 #>  [3249,]   61   67   65   68   71   69   66   68   65    72 #>  [3250,]   61   67   65   68   71   69   66   68   65    72 #>  [3251,]   60   65   67   70   70   70   67   69   66    73 #>  [3252,]   61   66   64   67   71   69   66   68   65    72 #>  [3253,]   61   67   65   68   71   69   66   68   65    72 #>  [3254,]   60   65   67   70   70   70   67   69   66    73 #>  [3255,]   61   67   65   68   71   69   66   68   65    72 #>  [3256,]   61   67   65   68   71   69   66   68   65    72 #>  [3257,]   61   66   64   67   71   69   66   68   65    72 #>  [3258,]   61   67   65   68   71   69   66   68   65    72 #>  [3259,]   61   67   65   68   71   69   66   68   65    72 #>  [3260,]   60   65   67   70   70   70   67   69   66    73 #>  [3261,]   61   67   65   68   71   69   66   68   65    72 #>  [3262,]   60   65   66   69   69   70   67   69   66    73 #>  [3263,]   60   65   67   70   70   70   67   69   66    73 #>  [3264,]   61   67   65   68   71   69   66   68   65    72 #>  [3265,]   61   66   64   67   71   69   66   68   65    72 #>  [3266,]   60   65   67   70   70   70   67   69   66    73 #>  [3267,]   61   67   65   68   71   69   66   68   65    72 #>  [3268,]   60   65   66   69   69   70   67   69   66    73 #>  [3269,]   60   65   66   69   69   70   67   69   66    73 #>  [3270,]   61   66   64   67   71   69   66   68   65    72 #>  [3271,]   61   67   65   68   71   69   66   68   65    72 #>  [3272,]   61   66   64   67   71   69   66   68   65    72 #>  [3273,]   61   66   64   67   71   69   66   68   65    72 #>  [3274,]   61   66   64   67   71   69   66   68   65    72 #>  [3275,]   61   67   65   68   71   69   66   68   65    72 #>  [3276,]   61   66   64   67   71   69   66   68   65    72 #>  [3277,]   61   67   65   68   71   69   66   68   65    72 #>  [3278,]   61   67   65   68   71   69   66   68   65    72 #>  [3279,]   61   66   64   67   71   69   66   68   65    72 #>  [3280,]   60   65   67   70   70   70   67   69   66    73 #>  [3281,]   60   65   67   70   70   70   67   69   66    73 #>  [3282,]   61   66   64   67   71   69   66   68   65    72 #>  [3283,]   60   65   67   70   70   70   67   69   66    73 #>  [3284,]   61   67   65   68   71   69   66   68   65    72 #>  [3285,]   61   67   65   68   71   69   66   68   65    72 #>  [3286,]   61   67   65   68   71   69   66   68   65    72 #>  [3287,]   61   67   65   68   71   69   66   68   65    72 #>  [3288,]   61   67   65   68   71   69   66   68   65    72 #>  [3289,]   60   65   66   69   69   70   67   69   66    73 #>  [3290,]   61   67   65   68   71   69   66   68   65    72 #>  [3291,]   60   65   66   69   69   70   67   69   66    73 #>  [3292,]   61   67   65   68   71   69   66   68   65    72 #>  [3293,]   61   67   65   68   71   69   66   68   65    72 #>  [3294,]   61   67   65   68   71   69   66   68   65    72 #>  [3295,]   61   67   65   68   71   69   66   68   65    72 #>  [3296,]   61   67   65   68   71   69   66   68   65    72 #>  [3297,]   61   67   65   68   71   69   66   68   65    72 #>  [3298,]   61   66   64   67   71   69   66   68   65    72 #>  [3299,]   61   67   65   68   71   69   66   68   65    72 #>  [3300,]   61   67   65   68   71   69   66   68   65    72 #>  [3301,]   62   69   69   72   73   72   69   71   68    75 #>  [3302,]   62   68   68   71   72   71   68   70   67    74 #>  [3303,]   62   68   68   71   72   71   68   70   67    74 #>  [3304,]   62   68   68   71   72   71   68   70   67    74 #>  [3305,]   62   68   68   71   72   71   68   70   67    74 #>  [3306,]   62   68   68   71   72   71   68   70   67    74 #>  [3307,]   62   68   68   71   72   71   68   70   67    74 #>  [3308,]   62   68   68   71   72   71   68   70   67    74 #>  [3309,]   62   69   69   72   73   72   69   71   68    75 #>  [3310,]   62   68   68   71   72   71   68   70   67    74 #>  [3311,]   62   68   68   71   72   71   68   70   67    74 #>  [3312,]   62   68   68   71   72   71   68   70   67    74 #>  [3313,]   62   69   69   72   73   72   69   71   68    75 #>  [3314,]   62   68   68   71   72   71   68   70   67    74 #>  [3315,]   62   68   68   71   72   71   68   70   67    74 #>  [3316,]   62   68   68   71   72   71   68   70   67    74 #>  [3317,]   62   69   69   72   73   72   69   71   68    75 #>  [3318,]   62   69   69   72   73   72   69   71   68    75 #>  [3319,]   62   68   68   71   72   71   68   70   67    74 #>  [3320,]   62   69   69   72   73   72   69   71   68    75 #>  [3321,]   62   68   68   71   72   71   68   70   67    74 #>  [3322,]   62   68   68   71   72   71   68   70   67    74 #>  [3323,]   62   68   68   71   72   71   68   70   67    74 #>  [3324,]   62   68   68   71   72   71   68   70   67    74 #>  [3325,]   62   68   68   71   72   71   68   70   67    74 #>  [3326,]   62   68   68   71   72   71   68   70   67    74 #>  [3327,]   62   69   69   72   73   72   69   71   68    75 #>  [3328,]   62   68   68   71   72   71   68   70   67    74 #>  [3329,]   62   68   68   71   72   71   68   70   67    74 #>  [3330,]   62   68   68   71   72   71   68   70   67    74 #>  [3331,]   62   68   68   71   72   71   68   70   67    74 #>  [3332,]   62   68   68   71   72   71   68   70   67    74 #>  [3333,]   62   69   69   72   73   72   69   71   68    75 #>  [3334,]   62   68   68   71   72   71   68   70   67    74 #>  [3335,]   62   68   68   71   72   71   68   70   67    74 #>  [3336,]   62   69   69   72   73   72   69   71   68    75 #>  [3337,]   62   68   68   71   72   71   68   70   67    74 #>  [3338,]   62   69   69   72   73   72   69   71   68    75 #>  [3339,]   62   68   68   71   72   71   68   70   67    74 #>  [3340,]   62   68   68   71   72   71   68   70   67    74 #>  [3341,]   62   68   68   71   72   71   68   70   67    74 #>  [3342,]   62   69   69   72   73   72   69   71   68    75 #>  [3343,]   62   68   68   71   72   71   68   70   67    74 #>  [3344,]   62   68   68   71   72   71   68   70   67    74 #>  [3345,]   62   68   68   71   72   71   68   70   67    74 #>  [3346,]   62   68   68   71   72   71   68   70   67    74 #>  [3347,]   62   68   68   71   72   71   68   70   67    74 #>  [3348,]   62   68   68   71   72   71   68   70   67    74 #>  [3349,]   62   68   68   71   72   71   68   70   67    74 #>  [3350,]   62   68   68   71   72   71   68   70   67    74 #>  [3351,]   62   69   69   72   73   72   69   71   68    75 #>  [3352,]   62   68   68   71   72   71   68   70   67    74 #>  [3353,]   62   69   69   72   73   72   69   71   68    75 #>  [3354,]   62   69   69   72   73   72   69   71   68    75 #>  [3355,]   62   68   68   71   72   71   68   70   67    74 #>  [3356,]   62   69   69   72   73   72   69   71   68    75 #>  [3357,]   62   68   68   71   72   71   68   70   67    74 #>  [3358,]   62   68   68   71   72   71   68   70   67    74 #>  [3359,]   62   68   68   71   72   71   68   70   67    74 #>  [3360,]   62   68   68   71   72   71   68   70   67    74 #>  [3361,]   62   68   68   71   72   71   68   70   67    74 #>  [3362,]   62   68   68   71   72   71   68   70   67    74 #>  [3363,]   62   68   68   71   72   71   68   70   67    74 #>  [3364,]   62   68   68   71   72   71   68   70   67    74 #>  [3365,]   62   69   69   72   73   72   69   71   68    75 #>  [3366,]   62   69   69   72   73   72   69   71   68    75 #>  [3367,]   62   68   68   71   72   71   68   70   67    74 #>  [3368,]   62   68   68   71   72   71   68   70   67    74 #>  [3369,]   62   68   68   71   72   71   68   70   67    74 #>  [3370,]   62   68   68   71   72   71   68   70   67    74 #>  [3371,]   62   68   68   71   72   71   68   70   67    74 #>  [3372,]   62   68   68   71   72   71   68   70   67    74 #>  [3373,]   62   68   68   71   72   71   68   70   67    74 #>  [3374,]   62   68   68   71   72   71   68   70   67    74 #>  [3375,]   62   68   68   71   72   71   68   70   67    74 #>  [3376,]   62   68   68   71   72   71   68   70   67    74 #>  [3377,]   62   69   69   72   73   72   69   71   68    75 #>  [3378,]   62   68   68   71   72   71   68   70   67    74 #>  [3379,]   62   69   69   72   73   72   69   71   68    75 #>  [3380,]   62   68   68   71   72   71   68   70   67    74 #>  [3381,]   62   68   68   71   72   71   68   70   67    74 #>  [3382,]   62   69   69   72   73   72   69   71   68    75 #>  [3383,]   62   69   69   72   73   72   69   71   68    75 #>  [3384,]   62   69   69   72   73   72   69   71   68    75 #>  [3385,]   62   68   68   71   72   71   68   70   67    74 #>  [3386,]   62   68   68   71   72   71   68   70   67    74 #>  [3387,]   62   69   69   72   73   72   69   71   68    75 #>  [3388,]   62   68   68   71   72   71   68   70   67    74 #>  [3389,]   62   68   68   71   72   71   68   70   67    74 #>  [3390,]   62   68   68   71   72   71   68   70   67    74 #>  [3391,]   62   69   69   72   73   72   69   71   68    75 #>  [3392,]   62   68   68   71   72   71   68   70   67    74 #>  [3393,]   62   69   69   72   73   72   69   71   68    75 #>  [3394,]   62   69   69   72   73   72   69   71   68    75 #>  [3395,]   62   68   68   71   72   71   68   70   67    74 #>  [3396,]   62   68   68   71   72   71   68   70   67    74 #>  [3397,]   62   68   68   71   72   71   68   70   67    74 #>  [3398,]   62   68   68   71   72   71   68   70   67    74 #>  [3399,]   62   68   68   71   72   71   68   70   67    74 #>  [3400,]   62   68   68   71   72   71   68   70   67    74 #>  [3401,]   63   70   70   73   74   73   70   72   69    76 #>  [3402,]   64   71   71   74   75   74   71   73   70    77 #>  [3403,]   63   70   70   73   74   73   70   72   69    76 #>  [3404,]   63   70   70   73   74   73   70   72   69    76 #>  [3405,]   64   71   71   74   75   74   71   73   70    77 #>  [3406,]   63   70   70   73   74   73   70   72   69    76 #>  [3407,]   63   70   70   73   74   73   70   72   69    76 #>  [3408,]   63   70   70   73   74   73   70   72   69    76 #>  [3409,]   64   71   71   74   75   74   71   73   70    77 #>  [3410,]   64   71   71   74   75   74   71   73   70    77 #>  [3411,]   63   70   70   73   74   73   70   72   69    76 #>  [3412,]   64   71   71   74   75   74   71   73   70    77 #>  [3413,]   64   71   71   74   75   74   71   73   70    77 #>  [3414,]   63   70   70   73   74   73   70   72   69    76 #>  [3415,]   63   70   70   73   74   73   70   72   69    76 #>  [3416,]   63   70   70   73   74   73   70   72   69    76 #>  [3417,]   64   71   71   74   75   74   71   73   70    77 #>  [3418,]   64   71   71   74   75   74   71   73   70    77 #>  [3419,]   63   70   70   73   74   73   70   72   69    76 #>  [3420,]   64   71   71   74   75   74   71   73   70    77 #>  [3421,]   64   71   71   74   75   74   71   73   70    77 #>  [3422,]   64   71   71   74   75   74   71   73   70    77 #>  [3423,]   64   71   71   74   75   74   71   73   70    77 #>  [3424,]   64   71   71   74   75   74   71   73   70    77 #>  [3425,]   63   70   70   73   74   73   70   72   69    76 #>  [3426,]   63   70   70   73   74   73   70   72   69    76 #>  [3427,]   64   71   71   74   75   74   71   73   70    77 #>  [3428,]   63   70   70   73   74   73   70   72   69    76 #>  [3429,]   64   71   71   74   75   74   71   73   70    77 #>  [3430,]   64   71   71   74   75   74   71   73   70    77 #>  [3431,]   64   71   71   74   75   74   71   73   70    77 #>  [3432,]   64   71   71   74   75   74   71   73   70    77 #>  [3433,]   64   71   71   74   75   74   71   73   70    77 #>  [3434,]   63   70   70   73   74   73   70   72   69    76 #>  [3435,]   63   70   70   73   74   73   70   72   69    76 #>  [3436,]   64   71   71   74   75   74   71   73   70    77 #>  [3437,]   63   70   70   73   74   73   70   72   69    76 #>  [3438,]   63   70   70   73   74   73   70   72   69    76 #>  [3439,]   63   70   70   73   74   73   70   72   69    76 #>  [3440,]   64   71   71   74   75   74   71   73   70    77 #>  [3441,]   63   70   70   73   74   73   70   72   69    76 #>  [3442,]   63   70   70   73   74   73   70   72   69    76 #>  [3443,]   63   70   70   73   74   73   70   72   69    76 #>  [3444,]   64   71   71   74   75   74   71   73   70    77 #>  [3445,]   63   70   70   73   74   73   70   72   69    76 #>  [3446,]   63   70   70   73   74   73   70   72   69    76 #>  [3447,]   63   70   70   73   74   73   70   72   69    76 #>  [3448,]   63   70   70   73   74   73   70   72   69    76 #>  [3449,]   63   70   70   73   74   73   70   72   69    76 #>  [3450,]   64   71   71   74   75   74   71   73   70    77 #>  [3451,]   63   70   70   73   74   73   70   72   69    76 #>  [3452,]   63   70   70   73   74   73   70   72   69    76 #>  [3453,]   64   71   71   74   75   74   71   73   70    77 #>  [3454,]   63   70   70   73   74   73   70   72   69    76 #>  [3455,]   63   70   70   73   74   73   70   72   69    76 #>  [3456,]   63   70   70   73   74   73   70   72   69    76 #>  [3457,]   63   70   70   73   74   73   70   72   69    76 #>  [3458,]   63   70   70   73   74   73   70   72   69    76 #>  [3459,]   63   70   70   73   74   73   70   72   69    76 #>  [3460,]   64   71   71   74   75   74   71   73   70    77 #>  [3461,]   64   71   71   74   75   74   71   73   70    77 #>  [3462,]   63   70   70   73   74   73   70   72   69    76 #>  [3463,]   64   71   71   74   75   74   71   73   70    77 #>  [3464,]   63   70   70   73   74   73   70   72   69    76 #>  [3465,]   63   70   70   73   74   73   70   72   69    76 #>  [3466,]   63   70   70   73   74   73   70   72   69    76 #>  [3467,]   63   70   70   73   74   73   70   72   69    76 #>  [3468,]   63   70   70   73   74   73   70   72   69    76 #>  [3469,]   63   70   70   73   74   73   70   72   69    76 #>  [3470,]   64   71   71   74   75   74   71   73   70    77 #>  [3471,]   63   70   70   73   74   73   70   72   69    76 #>  [3472,]   63   70   70   73   74   73   70   72   69    76 #>  [3473,]   63   70   70   73   74   73   70   72   69    76 #>  [3474,]   63   70   70   73   74   73   70   72   69    76 #>  [3475,]   64   71   71   74   75   74   71   73   70    77 #>  [3476,]   63   70   70   73   74   73   70   72   69    76 #>  [3477,]   63   70   70   73   74   73   70   72   69    76 #>  [3478,]   63   70   70   73   74   73   70   72   69    76 #>  [3479,]   63   70   70   73   74   73   70   72   69    76 #>  [3480,]   64   71   71   74   75   74   71   73   70    77 #>  [3481,]   64   71   71   74   75   74   71   73   70    77 #>  [3482,]   63   70   70   73   74   73   70   72   69    76 #>  [3483,]   64   71   71   74   75   74   71   73   70    77 #>  [3484,]   64   71   71   74   75   74   71   73   70    77 #>  [3485,]   63   70   70   73   74   73   70   72   69    76 #>  [3486,]   64   71   71   74   75   74   71   73   70    77 #>  [3487,]   64   71   71   74   75   74   71   73   70    77 #>  [3488,]   64   71   71   74   75   74   71   73   70    77 #>  [3489,]   63   70   70   73   74   73   70   72   69    76 #>  [3490,]   63   70   70   73   74   73   70   72   69    76 #>  [3491,]   63   70   70   73   74   73   70   72   69    76 #>  [3492,]   64   71   71   74   75   74   71   73   70    77 #>  [3493,]   64   71   71   74   75   74   71   73   70    77 #>  [3494,]   63   70   70   73   74   73   70   72   69    76 #>  [3495,]   63   70   70   73   74   73   70   72   69    76 #>  [3496,]   63   70   70   73   74   73   70   72   69    76 #>  [3497,]   63   70   70   73   74   73   70   72   69    76 #>  [3498,]   63   70   70   73   74   73   70   72   69    76 #>  [3499,]   63   70   70   73   74   73   70   72   69    76 #>  [3500,]   63   70   70   73   74   73   70   72   69    76 #>  [3501,]   66   73   73   76   77   76   72   74   71    78 #>  [3502,]   66   73   73   76   77   76   72   75   72    79 #>  [3503,]   66   73   73   76   77   76   72   75   72    79 #>  [3504,]   66   73   73   76   77   76   72   74   71    78 #>  [3505,]   66   73   73   76   77   76   72   75   72    79 #>  [3506,]   66   73   73   76   77   76   72   75   72    79 #>  [3507,]   66   73   73   76   77   76   72   75   72    79 #>  [3508,]   66   73   73   76   77   76   72   74   71    78 #>  [3509,]   66   73   73   76   77   76   72   74   71    78 #>  [3510,]   66   73   73   76   77   76   72   75   72    79 #>  [3511,]   66   73   73   76   77   76   72   74   71    78 #>  [3512,]   66   73   73   76   77   76   72   75   72    79 #>  [3513,]   66   73   73   76   77   76   72   74   71    78 #>  [3514,]   66   73   73   76   77   76   72   74   71    78 #>  [3515,]   66   73   73   76   77   76   72   75   72    79 #>  [3516,]   66   73   73   76   77   76   72   75   72    79 #>  [3517,]   66   73   73   76   77   76   72   74   71    78 #>  [3518,]   66   73   73   76   77   76   72   75   72    79 #>  [3519,]   66   73   73   76   77   76   72   75   72    79 #>  [3520,]   66   73   73   76   77   76   72   75   72    79 #>  [3521,]   66   73   73   76   77   76   72   74   71    78 #>  [3522,]   66   73   73   76   77   76   72   74   71    78 #>  [3523,]   66   73   73   76   77   76   72   75   72    79 #>  [3524,]   66   73   73   76   77   76   72   75   72    79 #>  [3525,]   65   72   72   75   76   75   72   75   72    79 #>  [3526,]   66   73   73   76   77   76   72   75   72    79 #>  [3527,]   66   73   73   76   77   76   72   74   71    78 #>  [3528,]   66   73   73   76   77   76   72   75   72    79 #>  [3529,]   66   73   73   76   77   76   72   75   72    79 #>  [3530,]   66   73   73   76   77   76   72   74   71    78 #>  [3531,]   66   73   73   76   77   76   72   75   72    79 #>  [3532,]   66   73   73   76   77   76   72   75   72    79 #>  [3533,]   66   73   73   76   77   76   72   75   72    79 #>  [3534,]   66   73   73   76   77   76   72   75   72    79 #>  [3535,]   66   73   73   76   77   76   72   74   71    78 #>  [3536,]   66   73   73   76   77   76   72   75   72    79 #>  [3537,]   66   73   73   76   77   76   72   75   72    79 #>  [3538,]   66   73   73   76   77   76   72   75   72    79 #>  [3539,]   66   73   73   76   77   76   72   75   72    79 #>  [3540,]   66   73   73   76   77   76   72   75   72    79 #>  [3541,]   66   73   73   76   77   76   72   75   72    79 #>  [3542,]   66   73   73   76   77   76   72   75   72    79 #>  [3543,]   66   73   73   76   77   76   72   74   71    78 #>  [3544,]   66   73   73   76   77   76   72   74   71    78 #>  [3545,]   66   73   73   76   77   76   72   74   71    78 #>  [3546,]   66   73   73   76   77   76   72   74   71    78 #>  [3547,]   66   73   73   76   77   76   72   75   72    79 #>  [3548,]   66   73   73   76   77   76   72   75   72    79 #>  [3549,]   66   73   73   76   77   76   72   74   71    78 #>  [3550,]   66   73   73   76   77   76   72   75   72    79 #>  [3551,]   66   73   73   76   77   76   72   75   72    79 #>  [3552,]   66   73   73   76   77   76   72   74   71    78 #>  [3553,]   66   73   73   76   77   76   72   75   72    79 #>  [3554,]   66   73   73   76   77   76   72   74   71    78 #>  [3555,]   66   73   73   76   77   76   72   74   71    78 #>  [3556,]   65   72   72   75   76   75   72   75   72    79 #>  [3557,]   66   73   73   76   77   76   72   75   72    79 #>  [3558,]   66   73   73   76   77   76   72   74   71    78 #>  [3559,]   66   73   73   76   77   76   72   75   72    79 #>  [3560,]   66   73   73   76   77   76   72   75   72    79 #>  [3561,]   66   73   73   76   77   76   72   75   72    79 #>  [3562,]   66   73   73   76   77   76   72   75   72    79 #>  [3563,]   66   73   73   76   77   76   72   75   72    79 #>  [3564,]   66   73   73   76   77   76   72   75   72    79 #>  [3565,]   65   72   72   75   76   75   72   75   72    79 #>  [3566,]   66   73   73   76   77   76   72   74   71    78 #>  [3567,]   66   73   73   76   77   76   72   75   72    79 #>  [3568,]   66   73   73   76   77   76   72   74   71    78 #>  [3569,]   66   73   73   76   77   76   72   74   71    78 #>  [3570,]   66   73   73   76   77   76   72   75   72    79 #>  [3571,]   66   73   73   76   77   76   72   75   72    79 #>  [3572,]   66   73   73   76   77   76   72   75   72    79 #>  [3573,]   66   73   73   76   77   76   72   75   72    79 #>  [3574,]   66   73   73   76   77   76   72   75   72    79 #>  [3575,]   66   73   73   76   77   76   72   75   72    79 #>  [3576,]   66   73   73   76   77   76   72   75   72    79 #>  [3577,]   66   73   73   76   77   76   72   75   72    79 #>  [3578,]   66   73   73   76   77   76   72   75   72    79 #>  [3579,]   66   73   73   76   77   76   72   74   71    78 #>  [3580,]   65   72   72   75   76   75   72   74   71    78 #>  [3581,]   66   73   73   76   77   76   72   74   71    78 #>  [3582,]   66   73   73   76   77   76   72   74   71    78 #>  [3583,]   66   73   73   76   77   76   72   74   71    78 #>  [3584,]   66   73   73   76   77   76   72   75   72    79 #>  [3585,]   65   72   72   75   76   75   72   75   72    79 #>  [3586,]   66   73   73   76   77   76   72   75   72    79 #>  [3587,]   66   73   73   76   77   76   72   74   71    78 #>  [3588,]   66   73   73   76   77   76   72   74   71    78 #>  [3589,]   66   73   73   76   77   76   72   74   71    78 #>  [3590,]   66   73   73   76   77   76   72   74   71    78 #>  [3591,]   66   73   73   76   77   76   72   74   71    78 #>  [3592,]   66   73   73   76   77   76   72   74   71    78 #>  [3593,]   66   73   73   76   77   76   72   75   72    79 #>  [3594,]   66   73   73   76   77   76   72   75   72    79 #>  [3595,]   66   73   73   76   77   76   72   74   71    78 #>  [3596,]   66   73   73   76   77   76   72   74   71    78 #>  [3597,]   66   73   73   76   77   76   72   75   72    79 #>  [3598,]   66   73   73   76   77   76   72   75   72    79 #>  [3599,]   66   73   73   76   77   76   72   74   71    78 #>  [3600,]   66   73   73   76   77   76   72   75   72    79 #>  [3601,]   67   74   74   77   78   77   73   76   73    80 #>  [3602,]   68   75   75   78   79   78   74   77   74    81 #>  [3603,]   67   74   74   77   78   77   73   76   73    80 #>  [3604,]   67   74   74   77   78   77   73   76   73    80 #>  [3605,]   68   75   75   78   79   78   74   77   74    81 #>  [3606,]   67   74   74   77   78   77   73   76   73    80 #>  [3607,]   67   74   74   77   78   77   73   76   73    80 #>  [3608,]   67   74   74   77   78   77   73   76   73    80 #>  [3609,]   68   75   75   78   79   78   74   77   74    81 #>  [3610,]   68   75   75   78   79   78   74   77   74    81 #>  [3611,]   67   74   74   77   78   77   73   76   73    80 #>  [3612,]   68   75   75   78   79   78   74   77   74    81 #>  [3613,]   68   75   75   78   79   78   74   77   74    81 #>  [3614,]   67   74   74   77   78   77   73   76   73    80 #>  [3615,]   67   74   74   77   78   77   73   76   73    80 #>  [3616,]   67   74   74   77   78   77   73   76   73    80 #>  [3617,]   68   75   75   78   79   78   74   77   74    81 #>  [3618,]   68   75   75   78   79   78   74   77   74    81 #>  [3619,]   67   74   74   77   78   77   73   76   73    80 #>  [3620,]   68   75   75   78   79   78   74   77   74    81 #>  [3621,]   68   75   75   78   79   78   74   77   74    81 #>  [3622,]   68   75   75   78   79   78   74   77   74    81 #>  [3623,]   68   75   75   78   79   78   74   77   74    81 #>  [3624,]   68   75   75   78   79   78   74   77   74    81 #>  [3625,]   67   74   74   77   78   77   73   76   73    80 #>  [3626,]   67   74   74   77   78   77   73   76   73    80 #>  [3627,]   68   75   75   78   79   78   74   77   74    81 #>  [3628,]   67   74   74   77   78   77   73   76   73    80 #>  [3629,]   68   75   75   78   79   78   74   77   74    81 #>  [3630,]   67   74   74   77   78   77   73   76   73    80 #>  [3631,]   68   75   75   78   79   78   74   77   74    81 #>  [3632,]   68   75   75   78   79   78   74   77   74    81 #>  [3633,]   68   75   75   78   79   78   74   77   74    81 #>  [3634,]   67   74   74   77   78   77   73   76   73    80 #>  [3635,]   67   74   74   77   78   77   73   76   73    80 #>  [3636,]   68   75   75   78   79   78   74   77   74    81 #>  [3637,]   67   74   74   77   78   77   73   76   73    80 #>  [3638,]   67   74   74   77   78   77   73   76   73    80 #>  [3639,]   67   74   74   77   78   77   73   76   73    80 #>  [3640,]   68   75   75   78   79   78   74   77   74    81 #>  [3641,]   67   74   74   77   78   77   73   76   73    80 #>  [3642,]   67   74   74   77   78   77   73   76   73    80 #>  [3643,]   67   74   74   77   78   77   73   76   73    80 #>  [3644,]   68   75   75   78   79   78   74   77   74    81 #>  [3645,]   67   74   74   77   78   77   73   76   73    80 #>  [3646,]   67   74   74   77   78   77   73   76   73    80 #>  [3647,]   67   74   74   77   78   77   73   76   73    80 #>  [3648,]   67   74   74   77   78   77   73   76   73    80 #>  [3649,]   67   74   74   77   78   77   73   76   73    80 #>  [3650,]   68   75   75   78   79   78   74   77   74    81 #>  [3651,]   67   74   74   77   78   77   73   76   73    80 #>  [3652,]   67   74   74   77   78   77   73   76   73    80 #>  [3653,]   68   75   75   78   79   78   74   77   74    81 #>  [3654,]   67   74   74   77   78   77   73   76   73    80 #>  [3655,]   67   74   74   77   78   77   73   76   73    80 #>  [3656,]   67   74   74   77   78   77   73   76   73    80 #>  [3657,]   67   74   74   77   78   77   73   76   73    80 #>  [3658,]   67   74   74   77   78   77   73   76   73    80 #>  [3659,]   67   74   74   77   78   77   73   76   73    80 #>  [3660,]   68   75   75   78   79   78   74   77   74    81 #>  [3661,]   68   75   75   78   79   78   74   77   74    81 #>  [3662,]   67   74   74   77   78   77   73   76   73    80 #>  [3663,]   68   75   75   78   79   78   74   77   74    81 #>  [3664,]   67   74   74   77   78   77   73   76   73    80 #>  [3665,]   67   74   74   77   78   77   73   76   73    80 #>  [3666,]   67   74   74   77   78   77   73   76   73    80 #>  [3667,]   67   74   74   77   78   77   73   76   73    80 #>  [3668,]   67   74   74   77   78   77   73   76   73    80 #>  [3669,]   67   74   74   77   78   77   73   76   73    80 #>  [3670,]   68   75   75   78   79   78   74   77   74    81 #>  [3671,]   67   74   74   77   78   77   73   76   73    80 #>  [3672,]   67   74   74   77   78   77   73   76   73    80 #>  [3673,]   67   74   74   77   78   77   73   76   73    80 #>  [3674,]   67   74   74   77   78   77   73   76   73    80 #>  [3675,]   68   75   75   78   79   78   74   77   74    81 #>  [3676,]   67   74   74   77   78   77   73   76   73    80 #>  [3677,]   67   74   74   77   78   77   73   76   73    80 #>  [3678,]   67   74   74   77   78   77   73   76   73    80 #>  [3679,]   67   74   74   77   78   77   73   76   73    80 #>  [3680,]   68   75   75   78   79   78   74   77   74    81 #>  [3681,]   68   75   75   78   79   78   74   77   74    81 #>  [3682,]   67   74   74   77   78   77   73   76   73    80 #>  [3683,]   68   75   75   78   79   78   74   77   74    81 #>  [3684,]   68   75   75   78   79   78   74   77   74    81 #>  [3685,]   67   74   74   77   78   77   73   76   73    80 #>  [3686,]   68   75   75   78   79   78   74   77   74    81 #>  [3687,]   68   75   75   78   79   78   74   77   74    81 #>  [3688,]   68   75   75   78   79   78   74   77   74    81 #>  [3689,]   67   74   74   77   78   77   73   76   73    80 #>  [3690,]   67   74   74   77   78   77   73   76   73    80 #>  [3691,]   67   74   74   77   78   77   73   76   73    80 #>  [3692,]   68   75   75   78   79   78   74   77   74    81 #>  [3693,]   68   75   75   78   79   78   74   77   74    81 #>  [3694,]   67   74   74   77   78   77   73   76   73    80 #>  [3695,]   67   74   74   77   78   77   73   76   73    80 #>  [3696,]   67   74   74   77   78   77   73   76   73    80 #>  [3697,]   67   74   74   77   78   77   73   76   73    80 #>  [3698,]   67   74   74   77   78   77   73   76   73    80 #>  [3699,]   67   74   74   77   78   77   73   76   73    80 #>  [3700,]   67   74   74   77   78   77   73   76   73    80 #>  [3701,]   70   77   77   80   80   79   75   78   75    82 #>  [3702,]   70   77   77   80   80   79   75   78   75    82 #>  [3703,]   69   76   76   79   81   80   76   79   76    83 #>  [3704,]   69   76   76   79   82   81   77   79   76    83 #>  [3705,]   69   76   76   79   82   81   77   79   76    83 #>  [3706,]   70   77   77   80   80   79   75   78   75    82 #>  [3707,]   69   76   76   79   82   81   77   79   76    83 #>  [3708,]   69   76   76   79   82   81   77   79   76    83 #>  [3709,]   69   76   76   79   82   81   77   79   76    83 #>  [3710,]   69   76   76   79   81   80   76   79   76    83 #>  [3711,]   70   77   77   80   80   79   75   78   75    82 #>  [3712,]   69   76   76   79   82   81   77   79   76    83 #>  [3713,]   70   77   77   80   80   79   75   78   75    82 #>  [3714,]   70   77   77   80   80   79   75   78   75    82 #>  [3715,]   70   77   77   80   80   79   75   78   75    82 #>  [3716,]   70   77   77   80   80   79   75   78   75    82 #>  [3717,]   70   77   77   80   80   79   75   78   75    82 #>  [3718,]   69   76   76   79   82   81   77   79   76    83 #>  [3719,]   69   76   76   79   82   81   77   79   76    83 #>  [3720,]   69   76   76   79   82   81   77   79   76    83 #>  [3721,]   70   77   77   80   80   79   75   78   75    82 #>  [3722,]   70   77   77   80   80   79   75   78   75    82 #>  [3723,]   69   76   76   79   82   81   77   79   76    83 #>  [3724,]   69   76   76   79   82   81   77   79   76    83 #>  [3725,]   69   76   76   79   82   81   77   79   76    83 #>  [3726,]   70   77   77   80   80   79   75   78   75    82 #>  [3727,]   70   77   77   80   80   79   75   78   75    82 #>  [3728,]   69   76   76   79   81   80   76   79   76    83 #>  [3729,]   70   77   77   80   80   79   75   78   75    82 #>  [3730,]   69   76   76   79   82   81   77   79   76    83 #>  [3731,]   69   76   76   79   81   80   76   79   76    83 #>  [3732,]   69   76   76   79   81   80   76   79   76    83 #>  [3733,]   70   77   77   80   80   79   75   78   75    82 #>  [3734,]   69   76   76   79   81   80   76   79   76    83 #>  [3735,]   70   77   77   80   80   79   75   78   75    82 #>  [3736,]   69   76   76   79   82   81   77   79   76    83 #>  [3737,]   70   77   77   80   80   79   75   78   75    82 #>  [3738,]   69   76   76   79   82   81   77   79   76    83 #>  [3739,]   69   76   76   79   82   81   77   79   76    83 #>  [3740,]   69   76   76   79   81   80   76   79   76    83 #>  [3741,]   70   77   77   80   80   79   75   78   75    82 #>  [3742,]   69   76   76   79   82   81   77   79   76    83 #>  [3743,]   69   76   76   79   82   81   77   79   76    83 #>  [3744,]   70   77   77   80   80   79   75   78   75    82 #>  [3745,]   69   76   76   79   82   81   77   79   76    83 #>  [3746,]   69   76   76   79   82   81   77   79   76    83 #>  [3747,]   70   77   77   80   80   79   75   78   75    82 #>  [3748,]   69   76   76   79   81   80   76   79   76    83 #>  [3749,]   69   76   76   79   82   81   77   79   76    83 #>  [3750,]   70   77   77   80   80   79   75   78   75    82 #>  [3751,]   69   76   76   79   82   81   77   79   76    83 #>  [3752,]   70   77   77   80   80   79   75   78   75    82 #>  [3753,]   69   76   76   79   82   81   77   79   76    83 #>  [3754,]   69   76   76   79   82   81   77   79   76    83 #>  [3755,]   69   76   76   79   82   81   77   79   76    83 #>  [3756,]   69   76   76   79   82   81   77   79   76    83 #>  [3757,]   69   76   76   79   82   81   77   79   76    83 #>  [3758,]   70   77   77   80   80   79   75   78   75    82 #>  [3759,]   70   77   77   80   80   79   75   78   75    82 #>  [3760,]   69   76   76   79   82   81   77   79   76    83 #>  [3761,]   70   77   77   80   80   79   75   78   75    82 #>  [3762,]   69   76   76   79   82   81   77   79   76    83 #>  [3763,]   69   76   76   79   82   81   77   79   76    83 #>  [3764,]   69   76   76   79   82   81   77   79   76    83 #>  [3765,]   69   76   76   79   81   80   76   79   76    83 #>  [3766,]   69   76   76   79   82   81   77   79   76    83 #>  [3767,]   69   76   76   79   82   81   77   79   76    83 #>  [3768,]   70   77   77   80   80   79   75   78   75    82 #>  [3769,]   69   76   76   79   82   81   77   79   76    83 #>  [3770,]   70   77   77   80   80   79   75   78   75    82 #>  [3771,]   70   77   77   80   80   79   75   78   75    82 #>  [3772,]   69   76   76   79   82   81   77   79   76    83 #>  [3773,]   70   77   77   80   80   79   75   78   75    82 #>  [3774,]   69   76   76   79   81   80   76   79   76    83 #>  [3775,]   69   76   76   79   82   81   77   79   76    83 #>  [3776,]   70   77   77   80   80   79   75   78   75    82 #>  [3777,]   70   77   77   80   80   79   75   78   75    82 #>  [3778,]   69   76   76   79   82   81   77   79   76    83 #>  [3779,]   70   77   77   80   80   79   75   78   75    82 #>  [3780,]   69   76   76   79   82   81   77   79   76    83 #>  [3781,]   70   77   77   80   80   79   75   78   75    82 #>  [3782,]   69   76   76   79   81   80   76   79   76    83 #>  [3783,]   70   77   77   80   80   79   75   78   75    82 #>  [3784,]   70   77   77   80   80   79   75   78   75    82 #>  [3785,]   69   76   76   79   82   81   77   79   76    83 #>  [3786,]   70   77   77   80   80   79   75   78   75    82 #>  [3787,]   69   76   76   79   82   81   77   79   76    83 #>  [3788,]   69   76   76   79   82   81   77   79   76    83 #>  [3789,]   69   76   76   79   82   81   77   79   76    83 #>  [3790,]   70   77   77   80   80   79   75   78   75    82 #>  [3791,]   69   76   76   79   82   81   77   79   76    83 #>  [3792,]   69   76   76   79   82   81   77   79   76    83 #>  [3793,]   70   77   77   80   80   79   75   78   75    82 #>  [3794,]   70   77   77   80   80   79   75   78   75    82 #>  [3795,]   69   76   76   79   82   81   77   79   76    83 #>  [3796,]   70   77   77   80   80   79   75   78   75    82 #>  [3797,]   69   76   76   79   82   81   77   79   76    83 #>  [3798,]   69   76   76   79   81   80   76   79   76    83 #>  [3799,]   70   77   77   80   80   79   75   78   75    82 #>  [3800,]   70   77   77   80   80   79   75   78   75    82 #>  [3801,]   72   78   78   81   83   82   78   80   77    84 #>  [3802,]   71   79   79   82   84   83   79   81   78    85 #>  [3803,]   71   79   79   82   84   83   79   81   78    85 #>  [3804,]   71   80   79   82   84   83   79   81   78    85 #>  [3805,]   71   79   79   82   84   83   79   81   78    85 #>  [3806,]   71   79   79   82   84   83   79   81   78    85 #>  [3807,]   71   80   79   82   84   83   79   81   78    85 #>  [3808,]   71   79   79   82   84   83   79   81   78    85 #>  [3809,]   72   78   78   81   83   82   78   80   77    84 #>  [3810,]   71   80   79   82   84   83   79   81   78    85 #>  [3811,]   72   78   78   81   83   82   78   80   77    84 #>  [3812,]   71   79   79   82   84   83   79   81   78    85 #>  [3813,]   72   78   78   81   83   82   78   80   77    84 #>  [3814,]   71   80   79   82   84   83   79   81   78    85 #>  [3815,]   71   79   79   82   84   83   79   81   78    85 #>  [3816,]   71   80   79   82   84   83   79   81   78    85 #>  [3817,]   72   78   78   81   83   82   78   80   77    84 #>  [3818,]   72   78   78   81   83   82   78   80   77    84 #>  [3819,]   71   79   79   82   84   83   79   81   78    85 #>  [3820,]   72   78   78   81   83   82   78   80   77    84 #>  [3821,]   71   79   79   82   84   83   79   81   78    85 #>  [3822,]   71   80   79   82   84   83   79   81   78    85 #>  [3823,]   71   79   79   82   84   83   79   81   78    85 #>  [3824,]   71   80   79   82   84   83   79   81   78    85 #>  [3825,]   71   80   79   82   84   83   79   81   78    85 #>  [3826,]   71   79   79   82   84   83   79   81   78    85 #>  [3827,]   72   78   78   81   83   82   78   80   77    84 #>  [3828,]   72   78   78   81   83   82   78   80   77    84 #>  [3829,]   72   78   78   81   83   82   78   80   77    84 #>  [3830,]   71   79   79   82   84   83   79   81   78    85 #>  [3831,]   71   79   79   82   84   83   79   81   78    85 #>  [3832,]   71   79   79   82   84   83   79   81   78    85 #>  [3833,]   72   78   78   81   83   82   78   80   77    84 #>  [3834,]   71   79   79   82   84   83   79   81   78    85 #>  [3835,]   71   79   79   82   84   83   79   81   78    85 #>  [3836,]   72   78   78   81   83   82   78   80   77    84 #>  [3837,]   71   79   79   82   84   83   79   81   78    85 #>  [3838,]   72   78   78   81   83   82   78   80   77    84 #>  [3839,]   72   78   78   81   83   82   78   80   77    84 #>  [3840,]   71   79   79   82   84   83   79   81   78    85 #>  [3841,]   72   78   78   81   83   82   78   80   77    84 #>  [3842,]   72   78   78   81   83   82   78   80   77    84 #>  [3843,]   71   79   79   82   84   83   79   81   78    85 #>  [3844,]   71   79   79   82   84   83   79   81   78    85 #>  [3845,]   71   80   79   82   84   83   79   81   78    85 #>  [3846,]   71   79   79   82   84   83   79   81   78    85 #>  [3847,]   71   79   79   82   84   83   79   81   78    85 #>  [3848,]   71   79   79   82   84   83   79   81   78    85 #>  [3849,]   71   80   79   82   84   83   79   81   78    85 #>  [3850,]   71   80   79   82   84   83   79   81   78    85 #>  [3851,]   72   78   78   81   83   82   78   80   77    84 #>  [3852,]   71   80   79   82   84   83   79   81   78    85 #>  [3853,]   72   78   78   81   83   82   78   80   77    84 #>  [3854,]   72   78   78   81   83   82   78   80   77    84 #>  [3855,]   71   80   79   82   84   83   79   81   78    85 #>  [3856,]   72   78   78   81   83   82   78   80   77    84 #>  [3857,]   71   80   79   82   84   83   79   81   78    85 #>  [3858,]   72   78   78   81   83   82   78   80   77    84 #>  [3859,]   71   80   79   82   84   83   79   81   78    85 #>  [3860,]   71   79   79   82   84   83   79   81   78    85 #>  [3861,]   71   79   79   82   84   83   79   81   78    85 #>  [3862,]   72   78   78   81   83   82   78   80   77    84 #>  [3863,]   71   79   79   82   84   83   79   81   78    85 #>  [3864,]   71   79   79   82   84   83   79   81   78    85 #>  [3865,]   72   78   78   81   83   82   78   80   77    84 #>  [3866,]   72   78   78   81   83   82   78   80   77    84 #>  [3867,]   71   80   79   82   84   83   79   81   78    85 #>  [3868,]   71   79   79   82   84   83   79   81   78    85 #>  [3869,]   71   79   79   82   84   83   79   81   78    85 #>  [3870,]   72   78   78   81   83   82   78   80   77    84 #>  [3871,]   71   80   79   82   84   83   79   81   78    85 #>  [3872,]   71   80   79   82   84   83   79   81   78    85 #>  [3873,]   71   80   79   82   84   83   79   81   78    85 #>  [3874,]   71   79   79   82   84   83   79   81   78    85 #>  [3875,]   71   79   79   82   84   83   79   81   78    85 #>  [3876,]   71   80   79   82   84   83   79   81   78    85 #>  [3877,]   72   78   78   81   83   82   78   80   77    84 #>  [3878,]   71   79   79   82   84   83   79   81   78    85 #>  [3879,]   72   78   78   81   83   82   78   80   77    84 #>  [3880,]   71   79   79   82   84   83   79   81   78    85 #>  [3881,]   71   79   79   82   84   83   79   81   78    85 #>  [3882,]   72   78   78   81   83   82   78   80   77    84 #>  [3883,]   72   78   78   81   83   82   78   80   77    84 #>  [3884,]   72   78   78   81   83   82   78   80   77    84 #>  [3885,]   72   78   78   81   83   82   78   80   77    84 #>  [3886,]   71   80   79   82   84   83   79   81   78    85 #>  [3887,]   72   78   78   81   83   82   78   80   77    84 #>  [3888,]   71   80   79   82   84   83   79   81   78    85 #>  [3889,]   72   78   78   81   83   82   78   80   77    84 #>  [3890,]   72   78   78   81   83   82   78   80   77    84 #>  [3891,]   72   78   78   81   83   82   78   80   77    84 #>  [3892,]   71   79   79   82   84   83   79   81   78    85 #>  [3893,]   72   78   78   81   83   82   78   80   77    84 #>  [3894,]   72   78   78   81   83   82   78   80   77    84 #>  [3895,]   71   79   79   82   84   83   79   81   78    85 #>  [3896,]   71   79   79   82   84   83   79   81   78    85 #>  [3897,]   71   79   79   82   84   83   79   81   78    85 #>  [3898,]   71   79   79   82   84   83   79   81   78    85 #>  [3899,]   71   79   79   82   84   83   79   81   78    85 #>  [3900,]   71   79   79   82   84   83   79   81   78    85 #>  [3901,]   74   82   81   84   86   84   81   82   80    86 #>  [3902,]   74   82   81   84   86   84   80   82   79    86 #>  [3903,]   73   81   80   83   85   84   80   82   79    86 #>  [3904,]   73   81   80   83   85   84   81   82   80    86 #>  [3905,]   74   82   81   84   86   84   81   82   79    86 #>  [3906,]   74   82   81   84   86   84   80   82   79    86 #>  [3907,]   73   81   80   83   85   84   80   82   80    86 #>  [3908,]   73   81   80   83   85   84   80   82   80    86 #>  [3909,]   74   82   81   84   86   84   80   82   80    86 #>  [3910,]   74   82   81   84   86   84   81   82   80    86 #>  [3911,]   74   82   81   84   86   84   81   82   79    86 #>  [3912,]   73   81   80   83   85   84   81   82   79    86 #>  [3913,]   74   82   81   84   86   84   81   82   80    86 #>  [3914,]   74   82   81   84   86   84   81   82   79    86 #>  [3915,]   74   82   81   84   86   84   81   82   80    86 #>  [3916,]   74   82   81   84   86   84   81   82   80    86 #>  [3917,]   74   82   81   84   86   84   81   82   80    86 #>  [3918,]   74   82   81   84   86   84   81   82   80    86 #>  [3919,]   74   82   81   84   86   84   81   82   79    86 #>  [3920,]   74   82   81   84   86   84   80   82   79    86 #>  [3921,]   74   82   81   84   86   84   80   82   80    86 #>  [3922,]   74   82   81   84   86   84   81   82   79    86 #>  [3923,]   74   82   81   84   86   84   80   82   80    86 #>  [3924,]   74   82   81   84   86   84   81   82   79    86 #>  [3925,]   73   81   80   83   85   84   80   82   80    86 #>  [3926,]   74   82   81   84   86   84   81   82   79    86 #>  [3927,]   74   82   81   84   86   84   81   82   80    86 #>  [3928,]   74   82   81   84   86   84   81   82   80    86 #>  [3929,]   74   82   81   84   86   84   80   82   79    86 #>  [3930,]   74   82   81   84   86   84   81   82   79    86 #>  [3931,]   73   81   80   83   85   84   81   82   79    86 #>  [3932,]   74   82   81   84   86   84   81   82   79    86 #>  [3933,]   74   82   81   84   86   84   81   82   79    86 #>  [3934,]   74   82   81   84   86   84   80   82   79    86 #>  [3935,]   74   82   81   84   86   84   80   82   79    86 #>  [3936,]   74   82   81   84   86   84   80   82   79    86 #>  [3937,]   74   82   81   84   86   84   80   82   80    86 #>  [3938,]   74   82   81   84   86   84   81   82   80    86 #>  [3939,]   74   82   81   84   86   84   81   82   80    86 #>  [3940,]   74   82   81   84   86   84   80   82   79    86 #>  [3941,]   74   82   81   84   86   84   80   82   79    86 #>  [3942,]   74   82   81   84   86   84   80   82   79    86 #>  [3943,]   74   82   81   84   86   84   81   82   80    86 #>  [3944,]   74   82   81   84   86   84   80   82   79    86 #>  [3945,]   74   82   81   84   86   84   80   82   80    86 #>  [3946,]   74   82   81   84   86   84   81   82   80    86 #>  [3947,]   73   81   80   83   85   84   81   82   80    86 #>  [3948,]   74   82   81   84   86   84   81   82   79    86 #>  [3949,]   74   82   81   84   86   84   80   82   79    86 #>  [3950,]   74   82   81   84   86   84   80   82   79    86 #>  [3951,]   74   82   81   84   86   84   81   82   79    86 #>  [3952,]   73   81   80   83   85   84   81   82   79    86 #>  [3953,]   74   82   81   84   86   84   80   82   80    86 #>  [3954,]   74   82   81   84   86   84   80   82   79    86 #>  [3955,]   74   82   81   84   86   84   80   82   79    86 #>  [3956,]   74   82   81   84   86   84   80   82   80    86 #>  [3957,]   73   81   80   83   85   84   80   82   79    86 #>  [3958,]   74   82   81   84   86   84   81   82   79    86 #>  [3959,]   73   81   80   83   85   84   81   82   79    86 #>  [3960,]   73   81   80   83   85   84   80   82   79    86 #>  [3961,]   74   82   81   84   86   84   81   82   80    86 #>  [3962,]   74   82   81   84   86   84   80   82   79    86 #>  [3963,]   74   82   81   84   86   84   81   82   79    86 #>  [3964,]   74   82   81   84   86   84   80   82   80    86 #>  [3965,]   74   82   81   84   86   84   80   82   79    86 #>  [3966,]   74   82   81   84   86   84   81   82   79    86 #>  [3967,]   74   82   81   84   86   84   80   82   79    86 #>  [3968,]   73   81   80   83   85   84   81   82   79    86 #>  [3969,]   74   82   81   84   86   84   81   82   79    86 #>  [3970,]   74   82   81   84   86   84   81   82   80    86 #>  [3971,]   74   82   81   84   86   84   81   82   80    86 #>  [3972,]   74   82   81   84   86   84   80   82   80    86 #>  [3973,]   74   82   81   84   86   84   80   82   80    86 #>  [3974,]   74   82   81   84   86   84   80   82   80    86 #>  [3975,]   74   82   81   84   86   84   81   82   80    86 #>  [3976,]   74   82   81   84   86   84   80   82   80    86 #>  [3977,]   74   82   81   84   86   84   81   82   80    86 #>  [3978,]   74   82   81   84   86   84   81   82   79    86 #>  [3979,]   74   82   81   84   86   84   81   82   80    86 #>  [3980,]   73   81   80   83   85   84   80   82   79    86 #>  [3981,]   74   82   81   84   86   84   80   82   79    86 #>  [3982,]   74   82   81   84   86   84   80   82   80    86 #>  [3983,]   74   82   81   84   86   84   81   82   79    86 #>  [3984,]   74   82   81   84   86   84   80   82   80    86 #>  [3985,]   74   82   81   84   86   84   80   82   79    86 #>  [3986,]   73   81   80   83   85   84   80   82   79    86 #>  [3987,]   74   82   81   84   86   84   81   82   80    86 #>  [3988,]   74   82   81   84   86   84   80   82   80    86 #>  [3989,]   74   82   81   84   86   84   80   82   79    86 #>  [3990,]   74   82   81   84   86   84   81   82   80    86 #>  [3991,]   74   82   81   84   86   84   81   82   79    86 #>  [3992,]   74   82   81   84   86   84   81   82   79    86 #>  [3993,]   74   82   81   84   86   84   81   82   79    86 #>  [3994,]   74   82   81   84   86   84   80   82   80    86 #>  [3995,]   74   82   81   84   86   84   81   82   80    86 #>  [3996,]   73   81   80   83   85   84   81   82   80    86 #>  [3997,]   73   81   80   83   85   84   80   82   79    86 #>  [3998,]   73   81   80   83   85   84   80   82   79    86 #>  [3999,]   74   82   81   84   86   84   80   82   79    86 #>  [4000,]   74   82   81   84   86   84   81   82   80    86 #>  [4001,]   75   83   82   87   88   85   82   83   81    87 #>  [4002,]   75   83   82   87   88   85   82   83   81    87 #>  [4003,]   76   84   83   85   87   86   83   84   82    88 #>  [4004,]   75   83   82   87   88   85   82   83   81    87 #>  [4005,]   75   83   82   87   88   85   82   83   81    87 #>  [4006,]   76   84   83   85   87   87   83   84   82    88 #>  [4007,]   75   83   82   86   88   85   82   83   81    87 #>  [4008,]   75   83   82   87   88   85   82   83   81    87 #>  [4009,]   75   83   82   87   88   85   82   83   81    87 #>  [4010,]   75   83   82   87   88   85   82   83   81    87 #>  [4011,]   75   83   82   87   88   85   82   83   81    87 #>  [4012,]   75   83   82   87   88   85   82   83   81    87 #>  [4013,]   75   83   82   87   88   85   82   83   81    87 #>  [4014,]   75   83   82   87   88   85   82   83   81    87 #>  [4015,]   75   83   82   87   88   85   82   83   81    87 #>  [4016,]   75   83   82   87   88   85   82   83   81    87 #>  [4017,]   75   83   82   87   88   85   82   83   81    87 #>  [4018,]   75   83   82   87   88   85   82   83   81    87 #>  [4019,]   76   84   83   85   87   86   83   84   82    88 #>  [4020,]   75   83   82   87   88   85   82   83   81    87 #>  [4021,]   75   83   82   86   88   85   82   83   81    87 #>  [4022,]   75   83   82   87   88   85   82   83   81    87 #>  [4023,]   75   83   82   86   88   85   82   83   81    87 #>  [4024,]   75   83   82   87   88   85   82   83   81    87 #>  [4025,]   76   84   83   85   87   86   83   84   82    88 #>  [4026,]   75   83   82   87   88   85   82   83   81    87 #>  [4027,]   75   83   82   87   88   85   82   83   81    87 #>  [4028,]   75   83   82   87   88   85   82   83   81    87 #>  [4029,]   75   83   82   87   88   85   82   83   81    87 #>  [4030,]   75   83   82   86   88   85   82   83   81    87 #>  [4031,]   75   83   82   87   88   85   82   83   81    87 #>  [4032,]   75   83   82   87   88   85   82   83   81    87 #>  [4033,]   76   84   83   85   87   87   83   84   82    88 #>  [4034,]   76   84   83   85   87   86   83   84   82    88 #>  [4035,]   75   83   82   87   88   85   82   83   81    87 #>  [4036,]   75   83   82   87   88   85   82   83   81    87 #>  [4037,]   75   83   82   87   88   85   82   83   81    87 #>  [4038,]   75   83   82   87   88   85   82   83   81    87 #>  [4039,]   75   83   82   86   88   85   82   83   81    87 #>  [4040,]   75   83   82   87   88   85   82   83   81    87 #>  [4041,]   75   83   82   87   88   85   82   83   81    87 #>  [4042,]   75   83   82   87   88   85   82   83   81    87 #>  [4043,]   75   83   82   87   88   85   82   83   81    87 #>  [4044,]   75   83   82   87   88   85   82   83   81    87 #>  [4045,]   75   83   82   87   88   85   82   83   81    87 #>  [4046,]   75   83   82   87   88   85   82   83   81    87 #>  [4047,]   75   83   82   87   88   85   82   83   81    87 #>  [4048,]   75   83   82   87   88   85   82   83   81    87 #>  [4049,]   75   83   82   86   88   85   82   83   81    87 #>  [4050,]   75   83   82   87   88   85   82   83   81    87 #>  [4051,]   75   83   82   87   88   85   82   83   81    87 #>  [4052,]   75   83   82   87   88   85   82   83   81    87 #>  [4053,]   75   83   82   87   88   85   82   83   81    87 #>  [4054,]   75   83   82   86   88   85   82   83   81    87 #>  [4055,]   75   83   82   87   88   85   82   83   81    87 #>  [4056,]   75   83   82   87   88   85   82   83   81    87 #>  [4057,]   75   83   82   87   88   85   82   83   81    87 #>  [4058,]   75   83   82   87   88   85   82   83   81    87 #>  [4059,]   75   83   82   87   88   85   82   83   81    87 #>  [4060,]   76   84   83   85   87   86   83   84   82    88 #>  [4061,]   75   83   82   87   88   85   82   83   81    87 #>  [4062,]   75   83   82   86   88   85   82   83   81    87 #>  [4063,]   75   83   82   87   88   85   82   83   81    87 #>  [4064,]   75   83   82   87   88   85   82   83   81    87 #>  [4065,]   76   84   83   85   87   86   83   84   82    88 #>  [4066,]   75   83   82   87   88   85   82   83   81    87 #>  [4067,]   75   83   82   87   88   85   82   83   81    87 #>  [4068,]   75   83   82   87   88   85   82   83   81    87 #>  [4069,]   75   83   82   87   88   85   82   83   81    87 #>  [4070,]   76   84   83   85   87   87   83   84   82    88 #>  [4071,]   75   83   82   87   88   85   82   83   81    87 #>  [4072,]   75   83   82   87   88   85   82   83   81    87 #>  [4073,]   76   84   83   85   87   87   83   84   82    88 #>  [4074,]   75   83   82   87   88   85   82   83   81    87 #>  [4075,]   75   83   82   87   88   85   82   83   81    87 #>  [4076,]   75   83   82   87   88   85   82   83   81    87 #>  [4077,]   75   83   82   87   88   85   82   83   81    87 #>  [4078,]   75   83   82   87   88   85   82   83   81    87 #>  [4079,]   75   83   82   86   88   85   82   83   81    87 #>  [4080,]   75   83   82   86   88   85   82   83   81    87 #>  [4081,]   75   83   82   87   88   85   82   83   81    87 #>  [4082,]   75   83   82   87   88   85   82   83   81    87 #>  [4083,]   75   83   82   86   88   85   82   83   81    87 #>  [4084,]   75   83   82   87   88   85   82   83   81    87 #>  [4085,]   75   83   82   87   88   85   82   83   81    87 #>  [4086,]   75   83   82   87   88   85   82   83   81    87 #>  [4087,]   75   83   82   87   88   85   82   83   81    87 #>  [4088,]   75   83   82   87   88   85   82   83   81    87 #>  [4089,]   75   83   82   87   88   85   82   83   81    87 #>  [4090,]   75   83   82   87   88   85   82   83   81    87 #>  [4091,]   75   83   82   87   88   85   82   83   81    87 #>  [4092,]   75   83   82   87   88   85   82   83   81    87 #>  [4093,]   76   84   83   85   87   87   83   84   82    88 #>  [4094,]   75   83   82   87   88   85   82   83   81    87 #>  [4095,]   75   83   82   86   88   85   82   83   81    87 #>  [4096,]   75   83   82   87   88   85   82   83   81    87 #>  [4097,]   75   83   82   87   88   85   82   83   81    87 #>  [4098,]   76   84   83   85   87   86   83   84   82    88 #>  [4099,]   75   83   82   87   88   85   82   83   81    87 #>  [4100,]   75   83   82   87   88   85   82   83   81    87 #>  [4101,]   78   86   85   89   90   89   85   85   83    89 #>  [4102,]   78   86   85   89   90   89   85   85   83    89 #>  [4103,]   78   86   85   89   90   89   85   85   83    89 #>  [4104,]   77   85   84   88   89   88   84   87   85    91 #>  [4105,]   78   86   85   89   90   89   85   85   83    89 #>  [4106,]   78   86   85   89   90   89   85   85   83    89 #>  [4107,]   78   86   85   89   90   89   85   85   83    89 #>  [4108,]   77   85   84   88   89   88   84   87   85    91 #>  [4109,]   77   85   84   88   89   88   84   87   85    91 #>  [4110,]   77   85   84   88   89   88   84   87   85    91 #>  [4111,]   78   86   85   89   90   89   85   85   83    89 #>  [4112,]   78   86   85   89   90   89   85   85   83    89 #>  [4113,]   78   86   85   89   90   89   85   85   83    89 #>  [4114,]   78   86   85   89   90   89   85   85   83    89 #>  [4115,]   78   86   85   89   90   89   85   85   83    89 #>  [4116,]   78   86   85   89   90   89   85   85   83    89 #>  [4117,]   78   86   85   89   90   89   85   85   83    89 #>  [4118,]   78   86   85   89   90   89   85   85   83    89 #>  [4119,]   78   86   85   89   90   89   85   85   83    89 #>  [4120,]   77   85   84   88   89   88   84   87   85    91 #>  [4121,]   78   86   85   89   90   89   85   85   83    89 #>  [4122,]   78   86   85   89   90   89   85   85   83    89 #>  [4123,]   78   86   85   89   90   89   85   85   83    89 #>  [4124,]   78   86   85   89   90   89   85   85   83    89 #>  [4125,]   78   86   85   89   90   89   85   85   83    89 #>  [4126,]   78   86   85   89   90   89   85   85   83    89 #>  [4127,]   78   86   85   89   90   89   85   85   83    89 #>  [4128,]   78   86   85   89   90   89   85   85   83    89 #>  [4129,]   78   86   85   89   90   89   85   85   83    89 #>  [4130,]   77   85   84   88   89   88   84   86   84    90 #>  [4131,]   78   86   85   89   90   89   85   85   83    89 #>  [4132,]   78   86   85   89   90   89   85   85   83    89 #>  [4133,]   78   86   85   89   90   89   85   85   83    89 #>  [4134,]   78   86   85   89   90   89   85   85   83    89 #>  [4135,]   78   86   85   89   90   89   85   85   83    89 #>  [4136,]   78   86   85   89   90   89   85   85   83    89 #>  [4137,]   78   86   85   89   90   89   85   85   83    89 #>  [4138,]   78   86   85   89   90   89   85   85   83    89 #>  [4139,]   78   86   85   89   90   89   85   85   83    89 #>  [4140,]   78   86   85   89   90   89   85   85   83    89 #>  [4141,]   78   86   85   89   90   89   85   85   83    89 #>  [4142,]   78   86   85   89   90   89   85   85   83    89 #>  [4143,]   77   85   84   88   89   88   84   86   84    90 #>  [4144,]   78   86   85   89   90   89   85   85   83    89 #>  [4145,]   78   86   85   89   90   89   85   85   83    89 #>  [4146,]   78   86   85   89   90   89   85   85   83    89 #>  [4147,]   78   86   85   89   90   89   85   85   83    89 #>  [4148,]   78   86   85   89   90   89   85   85   83    89 #>  [4149,]   78   86   85   89   90   89   85   85   83    89 #>  [4150,]   78   86   85   89   90   89   85   85   83    89 #>  [4151,]   77   85   84   88   89   88   84   86   84    90 #>  [4152,]   78   86   85   89   90   89   85   85   83    89 #>  [4153,]   78   86   85   89   90   89   85   85   83    89 #>  [4154,]   78   86   85   89   90   89   85   85   83    89 #>  [4155,]   78   86   85   89   90   89   85   85   83    89 #>  [4156,]   77   85   84   88   89   88   84   86   84    90 #>  [4157,]   78   86   85   89   90   89   85   85   83    89 #>  [4158,]   78   86   85   89   90   89   85   85   83    89 #>  [4159,]   78   86   85   89   90   89   85   85   83    89 #>  [4160,]   77   85   84   88   89   88   84   86   84    90 #>  [4161,]   78   86   85   89   90   89   85   85   83    89 #>  [4162,]   78   86   85   89   90   89   85   85   83    89 #>  [4163,]   78   86   85   89   90   89   85   85   83    89 #>  [4164,]   77   85   84   88   89   88   84   86   84    90 #>  [4165,]   78   86   85   89   90   89   85   85   83    89 #>  [4166,]   78   86   85   89   90   89   85   85   83    89 #>  [4167,]   77   85   84   88   89   88   84   87   85    91 #>  [4168,]   78   86   85   89   90   89   85   85   83    89 #>  [4169,]   78   86   85   89   90   89   85   85   83    89 #>  [4170,]   78   86   85   89   90   89   85   85   83    89 #>  [4171,]   78   86   85   89   90   89   85   85   83    89 #>  [4172,]   78   86   85   89   90   89   85   85   83    89 #>  [4173,]   78   86   85   89   90   89   85   85   83    89 #>  [4174,]   78   86   85   89   90   89   85   85   83    89 #>  [4175,]   78   86   85   89   90   89   85   85   83    89 #>  [4176,]   78   86   85   89   90   89   85   85   83    89 #>  [4177,]   78   86   85   89   90   89   85   85   83    89 #>  [4178,]   77   85   84   88   89   88   84   86   84    90 #>  [4179,]   78   86   85   89   90   89   85   85   83    89 #>  [4180,]   78   86   85   89   90   89   85   85   83    89 #>  [4181,]   78   86   85   89   90   89   85   85   83    89 #>  [4182,]   78   86   85   89   90   89   85   85   83    89 #>  [4183,]   78   86   85   89   90   89   85   85   83    89 #>  [4184,]   78   86   85   89   90   89   85   85   83    89 #>  [4185,]   77   85   84   88   89   88   84   87   85    91 #>  [4186,]   78   86   85   89   90   89   85   85   83    89 #>  [4187,]   78   86   85   89   90   89   85   85   83    89 #>  [4188,]   78   86   85   89   90   89   85   85   83    89 #>  [4189,]   77   85   84   88   89   88   84   86   84    90 #>  [4190,]   78   86   85   89   90   89   85   85   83    89 #>  [4191,]   77   85   84   88   89   88   84   87   85    91 #>  [4192,]   78   86   85   89   90   89   85   85   83    89 #>  [4193,]   78   86   85   89   90   89   85   85   83    89 #>  [4194,]   78   86   85   89   90   89   85   85   83    89 #>  [4195,]   77   85   84   88   89   88   84   86   84    90 #>  [4196,]   78   86   85   89   90   89   85   85   83    89 #>  [4197,]   78   86   85   89   90   89   85   85   83    89 #>  [4198,]   78   86   85   89   90   89   85   85   83    89 #>  [4199,]   78   86   85   89   90   89   85   85   83    89 #>  [4200,]   78   86   85   89   90   89   85   85   83    89 #>  [4201,]   79   87   86   90   91   90   86   88   86    92 #>  [4202,]   79   87   86   91   92   91   87   89   87    93 #>  [4203,]   79   87   86   90   91   90   86   88   86    92 #>  [4204,]   79   87   86   90   91   90   86   88   86    92 #>  [4205,]   79   87   86   90   91   90   86   88   86    92 #>  [4206,]   79   87   86   90   91   90   86   88   86    92 #>  [4207,]   79   87   86   90   91   90   86   88   86    92 #>  [4208,]   79   87   86   90   91   90   86   88   86    92 #>  [4209,]   79   87   86   91   92   91   87   89   88    94 #>  [4210,]   79   87   86   91   92   91   87   89   88    94 #>  [4211,]   79   87   86   90   91   90   86   88   86    92 #>  [4212,]   79   87   86   91   92   91   87   89   87    93 #>  [4213,]   79   87   86   91   92   91   87   89   88    94 #>  [4214,]   79   87   86   90   91   90   86   88   86    92 #>  [4215,]   79   87   86   90   91   90   86   88   86    92 #>  [4216,]   79   87   86   90   91   90   86   88   86    92 #>  [4217,]   79   87   86   91   92   91   87   89   87    93 #>  [4218,]   80   88   86   90   91   90   86   88   86    92 #>  [4219,]   79   87   86   90   91   90   86   88   86    92 #>  [4220,]   79   87   86   90   91   90   86   88   86    92 #>  [4221,]   79   87   86   91   92   91   87   89   87    93 #>  [4222,]   79   87   86   90   91   90   86   88   86    92 #>  [4223,]   79   87   86   90   91   90   86   88   86    92 #>  [4224,]   79   87   86   91   92   91   87   89   88    94 #>  [4225,]   79   87   86   90   91   90   86   88   86    92 #>  [4226,]   79   87   86   90   91   90   86   88   86    92 #>  [4227,]   79   87   86   90   91   90   86   88   86    92 #>  [4228,]   79   87   86   90   91   90   86   88   86    92 #>  [4229,]   79   87   86   91   92   91   87   89   87    93 #>  [4230,]   79   87   86   90   91   90   86   88   86    92 #>  [4231,]   79   87   86   90   91   90   86   88   86    92 #>  [4232,]   79   87   86   91   92   91   87   89   87    93 #>  [4233,]   79   87   86   91   92   91   87   89   87    93 #>  [4234,]   79   87   86   90   91   90   86   88   86    92 #>  [4235,]   79   87   86   90   91   90   86   88   86    92 #>  [4236,]   79   87   86   90   91   90   86   88   86    92 #>  [4237,]   79   87   86   90   91   90   86   88   86    92 #>  [4238,]   79   87   86   90   91   90   86   88   86    92 #>  [4239,]   79   87   86   90   91   90   86   88   86    92 #>  [4240,]   79   87   86   91   92   91   87   89   87    93 #>  [4241,]   79   87   86   90   91   90   86   88   86    92 #>  [4242,]   80   88   86   90   91   90   86   88   86    92 #>  [4243,]   79   87   86   90   91   90   86   88   86    92 #>  [4244,]   79   87   86   90   91   90   86   88   86    92 #>  [4245,]   79   87   86   90   91   90   86   88   86    92 #>  [4246,]   79   87   86   90   91   90   86   88   86    92 #>  [4247,]   79   87   86   90   91   90   86   88   86    92 #>  [4248,]   79   87   86   90   91   90   86   88   86    92 #>  [4249,]   79   87   86   90   91   90   86   88   86    92 #>  [4250,]   79   87   86   90   91   90   86   88   86    92 #>  [4251,]   80   88   86   90   91   90   86   88   86    92 #>  [4252,]   79   87   86   90   91   90   86   88   86    92 #>  [4253,]   80   88   86   91   92   91   87   89   88    94 #>  [4254,]   79   87   86   90   91   90   86   88   86    92 #>  [4255,]   79   87   86   90   91   90   86   88   86    92 #>  [4256,]   79   87   86   90   91   90   86   88   86    92 #>  [4257,]   79   87   86   90   91   90   86   88   86    92 #>  [4258,]   79   87   86   90   91   90   86   88   86    92 #>  [4259,]   79   87   86   90   91   90   86   88   86    92 #>  [4260,]   79   87   86   91   92   91   87   89   87    93 #>  [4261,]   79   87   86   90   91   90   86   88   86    92 #>  [4262,]   79   87   86   90   91   90   86   88   86    92 #>  [4263,]   79   87   86   91   92   91   87   89   87    93 #>  [4264,]   79   87   86   90   91   90   86   88   86    92 #>  [4265,]   79   87   86   90   91   90   86   88   86    92 #>  [4266,]   79   87   86   90   91   90   86   88   86    92 #>  [4267,]   79   87   86   90   91   90   86   88   86    92 #>  [4268,]   79   87   86   90   91   90   86   88   86    92 #>  [4269,]   79   87   86   90   91   90   86   88   86    92 #>  [4270,]   79   87   86   91   92   91   87   89   87    93 #>  [4271,]   79   87   86   90   91   90   86   88   86    92 #>  [4272,]   79   87   86   90   91   90   86   88   86    92 #>  [4273,]   79   87   86   90   91   90   86   88   86    92 #>  [4274,]   79   87   86   90   91   90   86   88   86    92 #>  [4275,]   79   87   86   91   92   91   87   89   87    93 #>  [4276,]   79   87   86   90   91   90   86   88   86    92 #>  [4277,]   79   87   86   90   91   90   86   88   86    92 #>  [4278,]   79   87   86   90   91   90   86   88   86    92 #>  [4279,]   80   88   86   90   91   90   86   88   86    92 #>  [4280,]   79   87   86   91   92   91   87   89   87    93 #>  [4281,]   79   87   86   91   92   91   87   89   87    93 #>  [4282,]   79   87   86   90   91   90   86   88   86    92 #>  [4283,]   79   87   86   91   92   91   87   89   87    93 #>  [4284,]   80   88   86   90   91   90   86   88   86    92 #>  [4285,]   79   87   86   90   91   90   86   88   86    92 #>  [4286,]   79   87   86   91   92   91   87   89   88    94 #>  [4287,]   79   87   86   90   91   90   86   88   86    92 #>  [4288,]   79   87   86   90   91   90   86   88   86    92 #>  [4289,]   79   87   86   90   91   90   86   88   86    92 #>  [4290,]   79   87   86   90   91   90   86   88   86    92 #>  [4291,]   79   87   86   90   91   90   86   88   86    92 #>  [4292,]   79   87   86   90   91   90   86   88   86    92 #>  [4293,]   79   87   86   90   91   90   86   88   86    92 #>  [4294,]   80   88   86   90   91   90   86   88   86    92 #>  [4295,]   79   87   86   90   91   90   86   88   86    92 #>  [4296,]   79   87   86   90   91   90   86   88   86    92 #>  [4297,]   79   87   86   90   91   90   86   88   86    92 #>  [4298,]   79   87   86   90   91   90   86   88   86    92 #>  [4299,]   79   87   86   90   91   90   86   88   86    92 #>  [4300,]   79   87   86   90   91   90   86   88   86    92 #>  [4301,]   81   89   87   92   93   92   88   90   89    95 #>  [4302,]   81   89   87   92   93   92   88   90   89    95 #>  [4303,]   81   89   87   92   93   92   88   90   89    95 #>  [4304,]   82   90   88   93   94   93   89   91   90    96 #>  [4305,]   81   89   87   92   93   92   88   90   89    95 #>  [4306,]   81   89   87   92   93   92   88   90   89    95 #>  [4307,]   81   89   87   92   93   92   88   90   89    95 #>  [4308,]   81   89   87   92   93   92   88   90   89    95 #>  [4309,]   81   89   87   92   93   92   88   90   89    95 #>  [4310,]   81   89   87   92   93   92   88   90   89    95 #>  [4311,]   81   89   87   92   93   92   88   90   89    95 #>  [4312,]   81   89   87   92   93   92   88   90   89    95 #>  [4313,]   81   89   87   92   93   92   88   90   89    95 #>  [4314,]   82   90   88   93   94   93   89   91   90    96 #>  [4315,]   81   89   87   92   93   92   88   90   89    95 #>  [4316,]   81   89   87   92   93   92   88   90   89    95 #>  [4317,]   81   89   87   92   93   92   88   90   89    95 #>  [4318,]   81   89   87   92   93   92   88   90   89    95 #>  [4319,]   81   89   87   92   93   92   88   90   89    95 #>  [4320,]   81   89   87   92   93   92   88   90   89    95 #>  [4321,]   81   89   87   92   93   92   88   90   89    95 #>  [4322,]   81   89   87   92   93   92   88   90   89    95 #>  [4323,]   81   89   87   92   93   92   88   90   89    95 #>  [4324,]   81   89   87   92   93   92   88   90   89    95 #>  [4325,]   81   89   87   92   93   92   88   90   89    95 #>  [4326,]   81   89   87   92   93   92   88   90   89    95 #>  [4327,]   82   90   88   93   94   93   89   91   90    96 #>  [4328,]   81   89   87   92   93   92   88   90   89    95 #>  [4329,]   81   89   87   92   93   92   88   90   89    95 #>  [4330,]   81   89   87   92   93   92   88   90   89    95 #>  [4331,]   81   89   87   92   93   92   88   90   89    95 #>  [4332,]   81   89   87   92   93   92   88   90   89    95 #>  [4333,]   81   89   87   92   93   92   88   90   89    95 #>  [4334,]   81   89   87   92   93   92   88   90   89    95 #>  [4335,]   81   89   87   92   93   92   88   90   89    95 #>  [4336,]   81   89   87   92   93   92   88   90   89    95 #>  [4337,]   81   89   87   92   93   92   88   90   89    95 #>  [4338,]   81   89   87   92   93   92   88   90   89    95 #>  [4339,]   81   89   87   92   93   92   88   90   89    95 #>  [4340,]   81   89   87   92   93   92   88   90   89    95 #>  [4341,]   81   89   87   92   93   92   88   90   89    95 #>  [4342,]   81   89   87   92   93   92   88   90   89    95 #>  [4343,]   81   89   87   92   93   92   88   90   89    95 #>  [4344,]   81   89   87   92   93   92   88   90   89    95 #>  [4345,]   81   89   87   92   93   92   88   90   89    95 #>  [4346,]   81   89   87   92   93   92   88   90   89    95 #>  [4347,]   81   89   87   92   93   92   88   90   89    95 #>  [4348,]   81   89   87   92   93   92   88   90   89    95 #>  [4349,]   81   89   87   92   93   92   88   90   89    95 #>  [4350,]   81   89   87   92   93   92   88   90   89    95 #>  [4351,]   81   89   87   92   93   92   88   90   89    95 #>  [4352,]   81   89   87   92   93   92   88   90   89    95 #>  [4353,]   81   89   87   92   93   92   88   90   89    95 #>  [4354,]   81   89   87   92   93   92   88   90   89    95 #>  [4355,]   81   89   87   92   93   92   88   90   89    95 #>  [4356,]   81   89   87   92   93   92   88   90   89    95 #>  [4357,]   81   89   87   92   93   92   88   90   89    95 #>  [4358,]   81   89   87   92   93   92   88   90   89    95 #>  [4359,]   81   89   87   92   93   92   88   90   89    95 #>  [4360,]   81   89   87   92   93   92   88   90   89    95 #>  [4361,]   82   90   88   93   94   93   89   91   90    96 #>  [4362,]   81   89   87   92   93   92   88   90   89    95 #>  [4363,]   81   89   87   92   93   92   88   90   89    95 #>  [4364,]   81   89   87   92   93   92   88   90   89    95 #>  [4365,]   81   89   87   92   93   92   88   90   89    95 #>  [4366,]   81   89   87   92   93   92   88   90   89    95 #>  [4367,]   81   89   87   92   93   92   88   90   89    95 #>  [4368,]   81   89   87   92   93   92   88   90   89    95 #>  [4369,]   82   90   88   93   94   93   89   91   90    96 #>  [4370,]   81   89   87   92   93   92   88   90   89    95 #>  [4371,]   81   89   87   92   93   92   88   90   89    95 #>  [4372,]   81   89   87   92   93   92   88   90   89    95 #>  [4373,]   81   89   87   92   93   92   88   90   89    95 #>  [4374,]   81   89   87   92   93   92   88   90   89    95 #>  [4375,]   81   89   87   92   93   92   88   90   89    95 #>  [4376,]   81   89   87   92   93   92   88   90   89    95 #>  [4377,]   81   89   87   92   93   92   88   90   89    95 #>  [4378,]   81   89   87   92   93   92   88   90   89    95 #>  [4379,]   81   89   87   92   93   92   88   90   89    95 #>  [4380,]   81   89   87   92   93   92   88   90   89    95 #>  [4381,]   81   89   87   92   93   92   88   90   89    95 #>  [4382,]   82   90   88   93   94   93   89   91   90    96 #>  [4383,]   81   89   87   92   93   92   88   90   89    95 #>  [4384,]   81   89   87   92   93   92   88   90   89    95 #>  [4385,]   81   89   87   92   93   92   88   90   89    95 #>  [4386,]   81   89   87   92   93   92   88   90   89    95 #>  [4387,]   81   89   87   92   93   92   88   90   89    95 #>  [4388,]   81   89   87   92   93   92   88   90   89    95 #>  [4389,]   81   89   87   92   93   92   88   90   89    95 #>  [4390,]   81   89   87   92   93   92   88   90   89    95 #>  [4391,]   81   89   87   92   93   92   88   90   89    95 #>  [4392,]   82   90   88   93   94   93   89   91   90    96 #>  [4393,]   82   90   88   93   94   93   89   91   90    96 #>  [4394,]   81   89   87   92   93   92   88   90   89    95 #>  [4395,]   81   89   87   92   93   92   88   90   89    95 #>  [4396,]   82   90   88   93   94   93   89   91   90    96 #>  [4397,]   82   90   88   93   94   93   89   91   90    96 #>  [4398,]   81   89   87   92   93   92   88   90   89    95 #>  [4399,]   81   89   87   92   93   92   88   90   89    95 #>  [4400,]   81   89   87   92   93   92   88   90   89    95 #>  [4401,]   83   91   89   94   95   94   90   92   91    97 #>  [4402,]   84   92   90   95   96   95   91   92   91    97 #>  [4403,]   83   91   89   94   95   94   90   92   91    97 #>  [4404,]   83   91   89   94   95   94   90   92   92    98 #>  [4405,]   84   92   90   95   96   95   91   92   91    97 #>  [4406,]   83   91   89   94   95   94   90   92   91    97 #>  [4407,]   84   92   90   95   96   95   91   92   91    97 #>  [4408,]   83   91   89   94   95   94   90   92   91    97 #>  [4409,]   84   93   91   96   97   96   91   92   91    97 #>  [4410,]   84   93   91   96   97   96   91   92   91    97 #>  [4411,]   83   91   89   94   95   94   90   92   91    97 #>  [4412,]   84   93   91   96   97   96   91   92   91    97 #>  [4413,]   84   92   90   95   96   95   91   92   91    97 #>  [4414,]   83   91   89   94   95   94   90   92   92    98 #>  [4415,]   83   91   89   94   95   94   90   92   91    97 #>  [4416,]   83   91   89   94   95   94   90   92   91    97 #>  [4417,]   84   92   90   95   96   95   91   92   91    97 #>  [4418,]   84   93   91   96   97   96   91   92   91    97 #>  [4419,]   83   91   89   94   95   94   90   92   91    97 #>  [4420,]   84   92   90   95   96   95   91   92   91    97 #>  [4421,]   84   93   91   96   97   96   91   92   91    97 #>  [4422,]   84   92   90   95   96   95   91   92   91    97 #>  [4423,]   84   92   90   95   96   95   91   92   91    97 #>  [4424,]   84   92   90   95   96   95   91   92   91    97 #>  [4425,]   83   91   89   94   95   94   90   92   91    97 #>  [4426,]   83   91   89   94   95   94   90   92   91    97 #>  [4427,]   84   93   91   96   97   96   91   92   92    98 #>  [4428,]   83   91   89   94   95   94   90   92   91    97 #>  [4429,]   84   92   90   95   96   95   91   92   91    97 #>  [4430,]   84   93   91   96   97   96   91   92   91    97 #>  [4431,]   84   93   91   96   97   96   91   92   91    97 #>  [4432,]   84   93   91   96   97   96   91   92   91    97 #>  [4433,]   84   93   91   96   97   96   91   92   91    97 #>  [4434,]   83   91   89   94   95   94   90   92   91    97 #>  [4435,]   83   91   89   94   95   94   90   92   91    97 #>  [4436,]   84   93   91   96   97   96   91   92   91    97 #>  [4437,]   83   91   89   94   95   94   90   92   91    97 #>  [4438,]   83   91   89   94   95   94   90   92   91    97 #>  [4439,]   84   92   90   95   96   95   91   92   91    97 #>  [4440,]   84   92   90   95   96   95   91   92   91    97 #>  [4441,]   84   93   91   96   97   96   91   92   91    97 #>  [4442,]   83   91   89   94   95   94   90   92   91    97 #>  [4443,]   83   91   89   94   95   94   90   92   91    97 #>  [4444,]   84   92   90   95   96   95   91   92   91    97 #>  [4445,]   83   91   89   94   95   94   90   92   91    97 #>  [4446,]   83   91   89   94   95   94   90   92   91    97 #>  [4447,]   84   92   90   95   96   95   91   92   91    97 #>  [4448,]   84   93   91   96   97   96   91   92   91    97 #>  [4449,]   83   91   89   94   95   94   90   92   91    97 #>  [4450,]   84   92   90   95   96   95   91   92   91    97 #>  [4451,]   84   92   90   95   96   95   91   92   91    97 #>  [4452,]   83   91   89   94   95   94   90   92   91    97 #>  [4453,]   84   92   90   95   96   95   91   92   91    97 #>  [4454,]   84   92   90   95   96   95   91   92   91    97 #>  [4455,]   83   91   89   94   95   94   90   92   91    97 #>  [4456,]   83   91   89   94   95   94   90   92   91    97 #>  [4457,]   83   91   89   94   95   94   90   92   91    97 #>  [4458,]   84   93   91   96   97   96   91   92   91    97 #>  [4459,]   83   91   89   94   95   94   90   92   91    97 #>  [4460,]   84   93   91   96   97   96   91   92   91    97 #>  [4461,]   84   93   91   96   97   96   91   92   92    98 #>  [4462,]   83   91   89   94   95   94   90   92   91    97 #>  [4463,]   84   92   90   95   96   95   91   92   91    97 #>  [4464,]   83   91   89   94   95   94   90   92   91    97 #>  [4465,]   83   91   89   94   95   94   90   92   91    97 #>  [4466,]   83   91   89   94   95   94   90   92   91    97 #>  [4467,]   83   91   89   94   95   94   90   92   91    97 #>  [4468,]   83   91   89   94   95   94   90   92   91    97 #>  [4469,]   83   91   89   94   95   94   90   92   91    97 #>  [4470,]   84   92   90   95   96   95   91   92   91    97 #>  [4471,]   84   92   90   95   96   95   91   92   91    97 #>  [4472,]   83   91   89   94   95   94   90   92   91    97 #>  [4473,]   83   91   89   94   95   94   90   92   91    97 #>  [4474,]   84   93   91   96   97   96   91   92   91    97 #>  [4475,]   84   93   91   96   97   96   91   92   91    97 #>  [4476,]   84   92   90   95   96   95   91   92   91    97 #>  [4477,]   83   91   89   94   95   94   90   92   91    97 #>  [4478,]   84   92   90   95   96   95   91   92   91    97 #>  [4479,]   83   91   89   94   95   94   90   92   91    97 #>  [4480,]   84   92   90   95   96   95   91   92   91    97 #>  [4481,]   84   92   90   95   96   95   91   92   91    97 #>  [4482,]   83   91   89   94   95   94   90   92   92    98 #>  [4483,]   84   92   90   95   96   95   91   92   91    97 #>  [4484,]   84   92   90   95   96   95   91   92   91    97 #>  [4485,]   83   91   89   94   95   94   90   92   91    97 #>  [4486,]   84   92   90   95   96   95   91   92   91    97 #>  [4487,]   84   92   90   95   96   95   91   92   91    97 #>  [4488,]   84   92   90   95   96   95   91   92   91    97 #>  [4489,]   83   91   89   94   95   94   90   92   91    97 #>  [4490,]   84   92   90   95   96   95   91   92   91    97 #>  [4491,]   83   91   89   94   95   94   90   92   91    97 #>  [4492,]   84   93   91   96   97   96   91   92   92    98 #>  [4493,]   84   93   91   96   97   96   91   92   92    98 #>  [4494,]   83   91   89   94   95   94   90   92   91    97 #>  [4495,]   84   92   90   95   96   95   91   92   91    97 #>  [4496,]   83   91   89   94   95   94   90   92   92    98 #>  [4497,]   83   91   89   94   95   94   90   92   91    97 #>  [4498,]   83   91   89   94   95   94   90   92   91    97 #>  [4499,]   84   93   91   96   97   96   91   92   91    97 #>  [4500,]   83   91   89   94   95   94   90   92   91    97 #>  [4501,]   85   94   92   97   98   98   93   94   94    99 #>  [4502,]   85   94   92   97   98   99   93   94   94    99 #>  [4503,]   85   94   92   97   98   98   93   94   94    99 #>  [4504,]   86   94   92   97   98   99   93   94   94    99 #>  [4505,]   85   94   92   97   98   99   93   94   94    99 #>  [4506,]   85   94   92   97   98   98   93   94   94    99 #>  [4507,]   86   94   92   97   98   99   93   94   94    99 #>  [4508,]   85   94   92   97   98   99   93   94   94    99 #>  [4509,]   85   94   92   97   98   99   93   94   94    99 #>  [4510,]   86   94   92   97   98   99   93   94   94    99 #>  [4511,]   85   94   92   97   98   98   93   94   94    99 #>  [4512,]   85   94   92   97   98   99   93   94   94    99 #>  [4513,]   85   94   92   97   98   99   93   94   94    99 #>  [4514,]   85   94   92   97   98   99   93   94   94    99 #>  [4515,]   85   94   93   98   99   97   92   93   93   101 #>  [4516,]   86   94   92   97   98   98   93   94   94    99 #>  [4517,]   85   94   92   97   98   99   93   94   94    99 #>  [4518,]   85   94   92   97   98   99   93   94   94    99 #>  [4519,]   85   94   93   98   99   97   92   93   93   100 #>  [4520,]   86   94   93   98   99   97   92   93   93   100 #>  [4521,]   85   94   92   97   98   99   93   94   94    99 #>  [4522,]   85   94   93   98   99   97   92   93   93   101 #>  [4523,]   85   94   92   97   98   99   93   94   94    99 #>  [4524,]   86   94   92   97   98   99   93   94   94    99 #>  [4525,]   85   94   92   97   98   99   93   94   94    99 #>  [4526,]   85   94   92   97   98   99   93   94   94    99 #>  [4527,]   85   94   93   98   99   97   92   93   93   101 #>  [4528,]   86   94   92   97   98   98   93   94   94    99 #>  [4529,]   85   94   93   98   99   97   92   93   93   100 #>  [4530,]   85   94   92   97   98   99   93   94   94    99 #>  [4531,]   85   94   92   97   98   99   93   94   94    99 #>  [4532,]   85   94   92   97   98   99   93   94   94    99 #>  [4533,]   85   94   92   97   98   99   93   94   94    99 #>  [4534,]   85   94   92   97   98   98   93   94   94    99 #>  [4535,]   85   94   92   97   98   98   93   94   94    99 #>  [4536,]   85   94   93   98   99   97   92   93   93   100 #>  [4537,]   85   94   93   98   99   97   92   93   93   100 #>  [4538,]   85   94   93   98   99   97   92   93   93   101 #>  [4539,]   85   94   92   97   98   99   93   94   94    99 #>  [4540,]   85   94   92   97   98   99   93   94   94    99 #>  [4541,]   85   94   92   97   98   99   93   94   94    99 #>  [4542,]   85   94   92   97   98   99   93   94   94    99 #>  [4543,]   85   94   92   97   98   99   93   94   94    99 #>  [4544,]   85   94   92   97   98   99   93   94   94    99 #>  [4545,]   85   94   92   97   98   98   93   94   94    99 #>  [4546,]   85   94   92   97   98   99   93   94   94    99 #>  [4547,]   85   94   92   97   98   99   93   94   94    99 #>  [4548,]   85   94   92   97   98   99   93   94   94    99 #>  [4549,]   85   94   92   97   98   98   93   94   94    99 #>  [4550,]   86   94   92   97   98   99   93   94   94    99 #>  [4551,]   85   94   92   97   98   99   93   94   94    99 #>  [4552,]   86   94   92   97   98   98   93   94   94    99 #>  [4553,]   85   94   92   97   98   99   93   94   94    99 #>  [4554,]   86   94   92   97   98   99   93   94   94    99 #>  [4555,]   85   94   93   98   99   97   92   93   93   100 #>  [4556,]   85   94   92   97   98   99   93   94   94    99 #>  [4557,]   85   94   92   97   98   99   93   94   94    99 #>  [4558,]   85   94   93   98   99   97   92   93   93   101 #>  [4559,]   85   94   92   97   98   99   93   94   94    99 #>  [4560,]   85   94   92   97   98   99   93   94   94    99 #>  [4561,]   85   94   92   97   98   99   93   94   94    99 #>  [4562,]   85   94   92   97   98   99   93   94   94    99 #>  [4563,]   85   94   92   97   98   99   93   94   94    99 #>  [4564,]   85   94   93   98   99   97   92   93   93   100 #>  [4565,]   85   94   92   97   98   99   93   94   94    99 #>  [4566,]   85   94   93   98   99   97   92   93   93   101 #>  [4567,]   85   94   92   97   98   99   93   94   94    99 #>  [4568,]   85   94   92   97   98   98   93   94   94    99 #>  [4569,]   85   94   93   98   99   97   92   93   93   100 #>  [4570,]   85   94   92   97   98   99   93   94   94    99 #>  [4571,]   85   94   92   97   98   99   93   94   94    99 #>  [4572,]   85   94   92   97   98   98   93   94   94    99 #>  [4573,]   86   94   92   97   98   98   93   94   94    99 #>  [4574,]   85   94   92   97   98   99   93   94   94    99 #>  [4575,]   85   94   92   97   98   99   93   94   94    99 #>  [4576,]   86   94   92   97   98   99   93   94   94    99 #>  [4577,]   85   94   93   98   99   97   92   93   93   101 #>  [4578,]   85   94   92   97   98   99   93   94   94    99 #>  [4579,]   85   94   92   97   98   99   93   94   94    99 #>  [4580,]   85   94   92   97   98   99   93   94   94    99 #>  [4581,]   85   94   93   98   99   97   92   93   93   100 #>  [4582,]   85   94   92   97   98   99   93   94   94    99 #>  [4583,]   85   94   93   98   99   97   92   93   93   101 #>  [4584,]   85   94   92   97   98   99   93   94   94    99 #>  [4585,]   85   94   92   97   98   99   93   94   94    99 #>  [4586,]   86   94   92   97   98   99   93   94   94    99 #>  [4587,]   85   94   93   98   99   97   92   93   93   101 #>  [4588,]   85   94   92   97   98   99   93   94   94    99 #>  [4589,]   85   94   92   97   98   99   93   94   94    99 #>  [4590,]   85   94   93   98   99   97   92   93   93   101 #>  [4591,]   86   94   92   97   98   99   93   94   94    99 #>  [4592,]   85   94   92   97   98   99   93   94   94    99 #>  [4593,]   85   94   92   97   98   99   93   94   94    99 #>  [4594,]   85   94   92   97   98   99   93   94   94    99 #>  [4595,]   85   94   92   97   98   99   93   94   94    99 #>  [4596,]   85   94   92   97   98   98   93   94   94    99 #>  [4597,]   85   94   93   98   99   97   92   93   93   100 #>  [4598,]   85   94   92   97   98   99   93   94   94    99 #>  [4599,]   85   94   92   97   98   99   93   94   94    99 #>  [4600,]   85   94   93   98   99   97   92   93   93   101 #>  [4601,]   88   96   95   99  100  100   94   95   95   102 #>  [4602,]   87   95   94  100  103  102   96   97   97   103 #>  [4603,]   88   96   95   99  100  100   94   95   95   102 #>  [4604,]   88   96   95   99  100  100   94   95   95   102 #>  [4605,]   88   96   95   99  100  100   94   95   95   102 #>  [4606,]   87   95   94  100  103  102   96   97   97   103 #>  [4607,]   88   96   95   99  100  100   94   95   95   102 #>  [4608,]   88   96   95   99  100  100   94   95   95   102 #>  [4609,]   88   96   95   99  100  100   94   95   95   102 #>  [4610,]   88   96   95   99  100  100   94   95   95   102 #>  [4611,]   87   95   94  100  103  102   96   97   97   103 #>  [4612,]   87   95   94  100  102  102   96   97   97   103 #>  [4613,]   88   96   95   99  100  100   94   95   95   102 #>  [4614,]   88   96   95   99  100  100   94   95   95   102 #>  [4615,]   87   95   94  100  102  102   96   97   97   103 #>  [4616,]   88   96   95   99  100  100   94   95   95   102 #>  [4617,]   87   95   94  101  101  101   95   96   96   103 #>  [4618,]   88   96   95   99  100  100   94   95   95   102 #>  [4619,]   88   96   95   99  100  100   94   95   95   102 #>  [4620,]   88   96   95   99  100  100   94   95   95   102 #>  [4621,]   88   96   95   99  100  100   94   95   95   102 #>  [4622,]   88   96   95   99  100  100   94   95   95   102 #>  [4623,]   87   95   94  100  102  102   96   97   97   103 #>  [4624,]   88   96   95   99  100  100   94   95   95   102 #>  [4625,]   88   96   95   99  100  100   94   95   95   102 #>  [4626,]   88   96   95   99  100  100   94   95   95   102 #>  [4627,]   88   96   95   99  100  100   94   95   95   102 #>  [4628,]   88   96   95   99  100  100   94   95   95   102 #>  [4629,]   87   95   94  100  102  102   96   97   97   103 #>  [4630,]   87   95   94  100  103  102   96   97   97   103 #>  [4631,]   87   95   94  100  102  102   96   97   97   103 #>  [4632,]   88   96   95   99  100  100   94   95   95   102 #>  [4633,]   88   96   95   99  100  100   94   95   95   102 #>  [4634,]   87   95   94  100  102  102   96   97   97   103 #>  [4635,]   88   96   95   99  100  100   94   95   95   102 #>  [4636,]   88   96   95   99  100  100   94   95   95   102 #>  [4637,]   87   95   94  100  102  102   96   97   97   103 #>  [4638,]   88   96   95   99  100  100   94   95   95   102 #>  [4639,]   88   96   95   99  100  100   94   95   95   102 #>  [4640,]   88   96   95   99  100  100   94   95   95   102 #>  [4641,]   88   96   95   99  100  100   94   95   95   102 #>  [4642,]   87   95   94  101  101  101   95   96   96   103 #>  [4643,]   87   95   94  100  102  102   96   97   97   103 #>  [4644,]   87   95   94  100  102  102   96   97   97   103 #>  [4645,]   88   96   95   99  100  100   94   95   95   102 #>  [4646,]   88   96   95   99  100  100   94   95   95   102 #>  [4647,]   87   95   94  100  103  102   96   97   97   103 #>  [4648,]   87   95   94  100  102  102   96   97   97   103 #>  [4649,]   88   96   95   99  100  100   94   95   95   102 #>  [4650,]   88   96   95   99  100  100   94   95   95   102 #>  [4651,]   88   96   95   99  100  100   94   95   95   102 #>  [4652,]   88   96   95   99  100  100   94   95   95   102 #>  [4653,]   88   96   95   99  100  100   94   95   95   102 #>  [4654,]   88   96   95   99  100  100   94   95   95   102 #>  [4655,]   88   96   95   99  100  100   94   95   95   102 #>  [4656,]   87   95   94  101  101  101   95   96   96   103 #>  [4657,]   88   96   95   99  100  100   94   95   95   102 #>  [4658,]   88   96   95   99  100  100   94   95   95   102 #>  [4659,]   88   96   95   99  100  100   94   95   95   102 #>  [4660,]   87   95   94  100  103  102   96   97   97   103 #>  [4661,]   87   95   94  100  103  102   96   97   97   103 #>  [4662,]   88   96   95   99  100  100   94   95   95   102 #>  [4663,]   87   95   94  100  102  102   96   97   97   103 #>  [4664,]   87   95   94  100  102  102   96   97   97   103 #>  [4665,]   87   95   94  101  101  101   95   96   96   103 #>  [4666,]   88   96   95   99  100  100   94   95   95   102 #>  [4667,]   88   96   95   99  100  100   94   95   95   102 #>  [4668,]   88   96   95   99  100  100   94   95   95   102 #>  [4669,]   88   96   95   99  100  100   94   95   95   102 #>  [4670,]   87   95   94  100  102  102   96   97   97   103 #>  [4671,]   88   96   95   99  100  100   94   95   95   102 #>  [4672,]   88   96   95   99  100  100   94   95   95   102 #>  [4673,]   88   96   95   99  100  100   94   95   95   102 #>  [4674,]   88   96   95   99  100  100   94   95   95   102 #>  [4675,]   87   95   94  100  102  102   96   97   97   103 #>  [4676,]   88   96   95   99  100  100   94   95   95   102 #>  [4677,]   88   96   95   99  100  100   94   95   95   102 #>  [4678,]   87   95   94  100  102  102   96   97   97   103 #>  [4679,]   87   95   94  101  101  101   95   96   96   103 #>  [4680,]   88   96   95   99  100  100   94   95   95   102 #>  [4681,]   87   95   94  100  102  102   96   97   97   103 #>  [4682,]   88   96   95   99  100  100   94   95   95   102 #>  [4683,]   88   96   95   99  100  100   94   95   95   102 #>  [4684,]   88   96   95   99  100  100   94   95   95   102 #>  [4685,]   88   96   95   99  100  100   94   95   95   102 #>  [4686,]   88   96   95   99  100  100   94   95   95   102 #>  [4687,]   88   96   95   99  100  100   94   95   95   102 #>  [4688,]   88   96   95   99  100  100   94   95   95   102 #>  [4689,]   88   96   95   99  100  100   94   95   95   102 #>  [4690,]   88   96   95   99  100  100   94   95   95   102 #>  [4691,]   88   96   95   99  100  100   94   95   95   102 #>  [4692,]   87   95   94  100  103  102   96   97   97   103 #>  [4693,]   88   96   95   99  100  100   94   95   95   102 #>  [4694,]   87   95   94  101  101  101   95   96   96   103 #>  [4695,]   87   95   94  100  102  102   96   97   97   103 #>  [4696,]   88   96   95   99  100  100   94   95   95   102 #>  [4697,]   88   96   95   99  100  100   94   95   95   102 #>  [4698,]   88   96   95   99  100  100   94   95   95   102 #>  [4699,]   88   96   95   99  100  100   94   95   95   102 #>  [4700,]   87   95   94  100  102  102   96   97   97   103 #>  [4701,]   89   97   96  104  106  104   98   99   98   105 #>  [4702,]   90   98   97  102  104  103   97   98   98   105 #>  [4703,]   90   98   97  102  104  103   97   98   98   105 #>  [4704,]   89   97   96  103  105  104   98   99   98   104 #>  [4705,]   90   98   97  102  104  103   97   98   98   105 #>  [4706,]   90   98   97  102  104  103   97   98   98   105 #>  [4707,]   90   98   97  102  104  103   97   98   98   105 #>  [4708,]   89   97   96  103  105  104   98   99   98   104 #>  [4709,]   89   97   96  103  105  104   98   99   98   104 #>  [4710,]   90   98   97  102  104  103   97   98   98   105 #>  [4711,]   89   97   96  103  105  104   98   99   98   104 #>  [4712,]   90   98   97  102  104  103   97   98   98   105 #>  [4713,]   89   97   96  103  105  104   98   99   98   104 #>  [4714,]   90   98   97  102  104  103   97   98   98   105 #>  [4715,]   90   98   97  102  104  103   97   98   98   105 #>  [4716,]   90   98   97  102  104  103   97   98   98   105 #>  [4717,]   89   97   96  103  105  104   98   99   98   104 #>  [4718,]   90   98   97  102  104  103   97   98   98   105 #>  [4719,]   90   98   97  102  104  103   97   98   98   105 #>  [4720,]   90   98   97  102  104  103   97   98   98   105 #>  [4721,]   90   98   97  102  104  103   97   98   98   105 #>  [4722,]   89   97   96  103  105  104   98   99   98   104 #>  [4723,]   90   98   97  102  104  103   97   98   98   105 #>  [4724,]   90   98   97  102  104  103   97   98   98   105 #>  [4725,]   90   98   97  102  104  103   97   98   98   105 #>  [4726,]   90   98   97  102  104  103   97   98   98   105 #>  [4727,]   89   97   96  103  105  104   98   99   98   104 #>  [4728,]   90   98   97  102  104  103   97   98   98   105 #>  [4729,]   90   98   97  102  104  103   97   98   98   105 #>  [4730,]   89   97   96  104  106  104   98   99   98   105 #>  [4731,]   90   98   97  102  104  103   97   98   98   105 #>  [4732,]   90   98   97  102  104  103   97   98   98   105 #>  [4733,]   90   98   97  102  104  103   97   98   98   105 #>  [4734,]   90   98   97  102  104  103   97   98   98   105 #>  [4735,]   89   97   96  103  105  104   98   99   98   104 #>  [4736,]   90   98   97  102  104  103   97   98   98   105 #>  [4737,]   90   98   97  102  104  103   97   98   98   105 #>  [4738,]   90   98   97  102  104  103   97   98   98   105 #>  [4739,]   90   98   97  102  104  103   97   98   98   105 #>  [4740,]   90   98   97  102  104  103   97   98   98   105 #>  [4741,]   90   98   97  102  104  103   97   98   98   105 #>  [4742,]   90   98   97  102  104  103   97   98   98   105 #>  [4743,]   89   97   96  104  106  104   98   99   98   104 #>  [4744,]   89   97   96  103  105  104   98   99   98   104 #>  [4745,]   90   98   97  102  104  103   97   98   98   105 #>  [4746,]   89   97   96  104  106  104   98   99   98   105 #>  [4747,]   90   98   97  102  104  103   97   98   98   105 #>  [4748,]   90   98   97  102  104  103   97   98   98   105 #>  [4749,]   89   97   96  103  105  104   98   99   98   104 #>  [4750,]   90   98   97  102  104  103   97   98   98   105 #>  [4751,]   90   98   97  102  104  103   97   98   98   105 #>  [4752,]   89   97   96  103  105  104   98   99   98   104 #>  [4753,]   90   98   97  102  104  103   97   98   98   105 #>  [4754,]   89   97   96  104  106  104   98   99   98   105 #>  [4755,]   89   97   96  103  105  104   98   99   98   104 #>  [4756,]   90   98   97  102  104  103   97   98   98   105 #>  [4757,]   90   98   97  102  104  103   97   98   98   105 #>  [4758,]   89   97   96  103  105  104   98   99   98   104 #>  [4759,]   90   98   97  102  104  103   97   98   98   105 #>  [4760,]   90   98   97  102  104  103   97   98   98   105 #>  [4761,]   90   98   97  102  104  103   97   98   98   105 #>  [4762,]   90   98   97  102  104  103   97   98   98   105 #>  [4763,]   90   98   97  102  104  103   97   98   98   105 #>  [4764,]   90   98   97  102  104  103   97   98   98   105 #>  [4765,]   90   98   97  102  104  103   97   98   98   105 #>  [4766,]   89   97   96  103  105  104   98   99   98   104 #>  [4767,]   90   98   97  102  104  103   97   98   98   105 #>  [4768,]   90   98   97  102  104  103   97   98   98   105 #>  [4769,]   89   97   96  104  106  104   98   99   98   104 #>  [4770,]   90   98   97  102  104  103   97   98   98   105 #>  [4771,]   90   98   97  102  104  103   97   98   98   105 #>  [4772,]   90   98   97  102  104  103   97   98   98   105 #>  [4773,]   90   98   97  102  104  103   97   98   98   105 #>  [4774,]   90   98   97  102  104  103   97   98   98   105 #>  [4775,]   90   98   97  102  104  103   97   98   98   105 #>  [4776,]   90   98   97  102  104  103   97   98   98   105 #>  [4777,]   90   98   97  102  104  103   97   98   98   105 #>  [4778,]   90   98   97  102  104  103   97   98   98   105 #>  [4779,]   89   97   96  104  106  104   98   99   98   104 #>  [4780,]   89   97   96  104  106  104   98   99   98   104 #>  [4781,]   89   97   96  103  105  104   98   99   98   104 #>  [4782,]   89   97   96  103  105  104   98   99   98   104 #>  [4783,]   89   97   96  103  105  104   98   99   98   104 #>  [4784,]   90   98   97  102  104  103   97   98   98   105 #>  [4785,]   90   98   97  102  104  103   97   98   98   105 #>  [4786,]   90   98   97  102  104  103   97   98   98   105 #>  [4787,]   89   97   96  103  105  104   98   99   98   104 #>  [4788,]   89   97   96  104  106  104   98   99   98   104 #>  [4789,]   89   97   96  104  106  104   98   99   98   104 #>  [4790,]   89   97   96  103  105  104   98   99   98   104 #>  [4791,]   89   97   96  104  106  104   98   99   98   105 #>  [4792,]   89   97   96  103  105  104   98   99   98   104 #>  [4793,]   90   98   97  102  104  103   97   98   98   105 #>  [4794,]   90   98   97  102  104  103   97   98   98   105 #>  [4795,]   89   97   96  103  105  104   98   99   98   104 #>  [4796,]   89   97   96  104  106  104   98   99   98   105 #>  [4797,]   90   98   97  102  104  103   97   98   98   105 #>  [4798,]   90   98   97  102  104  103   97   98   98   105 #>  [4799,]   89   97   96  103  105  104   98   99   98   104 #>  [4800,]   90   98   97  102  104  103   97   98   98   105 #>  [4801,]   92  100   98  105  107  105   99  100   99   106 #>  [4802,]   92  100   98  105  107  105   99  100   99   106 #>  [4803,]   92  100   98  105  107  105   99  100   99   106 #>  [4804,]   91   99   99  106  109  106  100  101  100   107 #>  [4805,]   92  100   98  105  107  105   99  100   99   106 #>  [4806,]   92  100   98  105  107  105   99  100   99   106 #>  [4807,]   92  100   98  105  107  105   99  100   99   106 #>  [4808,]   91   99   99  106  108  106  100  101  100   107 #>  [4809,]   91   99   99  106  109  106  100  101  100   107 #>  [4810,]   92  100   98  105  107  105   99  100   99   106 #>  [4811,]   91   99   99  106  109  106  100  101  100   107 #>  [4812,]   92  100   98  105  107  105   99  100   99   106 #>  [4813,]   91   99  100  106  108  106  100  101  100   107 #>  [4814,]   92  100   98  105  107  105   99  100   99   106 #>  [4815,]   92  100   98  105  107  105   99  100   99   106 #>  [4816,]   92  100   98  105  107  105   99  100   99   106 #>  [4817,]   91   99   99  106  108  106  100  101  100   107 #>  [4818,]   92  100   98  105  107  105   99  100   99   106 #>  [4819,]   92  100   98  105  107  105   99  100   99   106 #>  [4820,]   92  100   98  105  107  105   99  100   99   106 #>  [4821,]   92  100   98  105  107  105   99  100   99   106 #>  [4822,]   91   99  100  106  108  106  100  101  100   107 #>  [4823,]   92  100   98  105  107  105   99  100   99   106 #>  [4824,]   92  100   98  105  107  105   99  100   99   106 #>  [4825,]   92  100   98  105  107  105   99  100   99   106 #>  [4826,]   92  100   98  105  107  105   99  100   99   106 #>  [4827,]   91   99  100  106  109  106  100  101  100   107 #>  [4828,]   92  100   98  105  107  105   99  100   99   106 #>  [4829,]   92  100   98  105  107  105   99  100   99   106 #>  [4830,]   92  100   98  105  107  105   99  100   99   106 #>  [4831,]   92  100   98  105  107  105   99  100   99   106 #>  [4832,]   92  100   98  105  107  105   99  100   99   106 #>  [4833,]   92  100   98  105  107  105   99  100   99   106 #>  [4834,]   92  100   98  105  107  105   99  100   99   106 #>  [4835,]   91   99   99  106  109  106  100  101  100   107 #>  [4836,]   92  100   98  105  107  105   99  100   99   106 #>  [4837,]   92  100   98  105  107  105   99  100   99   106 #>  [4838,]   92  100   98  105  107  105   99  100   99   106 #>  [4839,]   92  100   98  105  107  105   99  100   99   106 #>  [4840,]   92  100   98  105  107  105   99  100   99   106 #>  [4841,]   92  100   98  105  107  105   99  100   99   106 #>  [4842,]   92  100   98  105  107  105   99  100   99   106 #>  [4843,]   92  100   98  105  107  105   99  100   99   106 #>  [4844,]   91   99   99  106  108  106  100  101  100   107 #>  [4845,]   92  100   98  105  107  105   99  100   99   106 #>  [4846,]   92  100   98  105  107  105   99  100   99   106 #>  [4847,]   92  100   98  105  107  105   99  100   99   106 #>  [4848,]   92  100   98  105  107  105   99  100   99   106 #>  [4849,]   92  100   98  105  107  105   99  100   99   106 #>  [4850,]   92  100   98  105  107  105   99  100   99   106 #>  [4851,]   92  100   98  105  107  105   99  100   99   106 #>  [4852,]   91   99   99  106  109  106  100  101  100   107 #>  [4853,]   92  100   98  105  107  105   99  100   99   106 #>  [4854,]   92  100   98  105  107  105   99  100   99   106 #>  [4855,]   92  100   98  105  107  105   99  100   99   106 #>  [4856,]   92  100   98  105  107  105   99  100   99   106 #>  [4857,]   92  100   98  105  107  105   99  100   99   106 #>  [4858,]   91   99  100  106  109  106  100  101  100   107 #>  [4859,]   92  100   98  105  107  105   99  100   99   106 #>  [4860,]   92  100   98  105  107  105   99  100   99   106 #>  [4861,]   92  100   98  105  107  105   99  100   99   106 #>  [4862,]   92  100   98  105  107  105   99  100   99   106 #>  [4863,]   92  100   98  105  107  105   99  100   99   106 #>  [4864,]   92  100   98  105  107  105   99  100   99   106 #>  [4865,]   92  100   98  105  107  105   99  100   99   106 #>  [4866,]   91   99  100  106  108  106  100  101  100   107 #>  [4867,]   92  100   98  105  107  105   99  100   99   106 #>  [4868,]   92  100   98  105  107  105   99  100   99   106 #>  [4869,]   92  100   98  105  107  105   99  100   99   106 #>  [4870,]   92  100   98  105  107  105   99  100   99   106 #>  [4871,]   92  100   98  105  107  105   99  100   99   106 #>  [4872,]   92  100   98  105  107  105   99  100   99   106 #>  [4873,]   92  100   98  105  107  105   99  100   99   106 #>  [4874,]   92  100   98  105  107  105   99  100   99   106 #>  [4875,]   92  100   98  105  107  105   99  100   99   106 #>  [4876,]   92  100   98  105  107  105   99  100   99   106 #>  [4877,]   92  100   98  105  107  105   99  100   99   106 #>  [4878,]   92  100   98  105  107  105   99  100   99   106 #>  [4879,]   92  100   98  105  107  105   99  100   99   106 #>  [4880,]   92  100   98  105  107  105   99  100   99   106 #>  [4881,]   91   99  100  106  108  106  100  101  100   107 #>  [4882,]   91   99   99  106  109  106  100  101  100   107 #>  [4883,]   92  100   98  105  107  105   99  100   99   106 #>  [4884,]   92  100   98  105  107  105   99  100   99   106 #>  [4885,]   92  100   98  105  107  105   99  100   99   106 #>  [4886,]   92  100   98  105  107  105   99  100   99   106 #>  [4887,]   91   99  100  106  109  106  100  101  100   107 #>  [4888,]   92  100   98  105  107  105   99  100   99   106 #>  [4889,]   92  100   98  105  107  105   99  100   99   106 #>  [4890,]   91   99  100  106  108  106  100  101  100   107 #>  [4891,]   92  100   98  105  107  105   99  100   99   106 #>  [4892,]   91   99   99  106  109  106  100  101  100   107 #>  [4893,]   92  100   98  105  107  105   99  100   99   106 #>  [4894,]   92  100   98  105  107  105   99  100   99   106 #>  [4895,]   91   99   99  106  109  106  100  101  100   107 #>  [4896,]   92  100   98  105  107  105   99  100   99   106 #>  [4897,]   92  100   98  105  107  105   99  100   99   106 #>  [4898,]   92  100   98  105  107  105   99  100   99   106 #>  [4899,]   91   99   99  106  109  106  100  101  100   107 #>  [4900,]   92  100   98  105  107  105   99  100   99   106 #>  [4901,]   93  101  101  107  110  107  101  102  101   108 #>  [4902,]   93  101  101  107  110  107  101  102  101   108 #>  [4903,]   93  101  101  107  110  107  101  102  101   108 #>  [4904,]   93  101  101  107  110  107  101  102  101   108 #>  [4905,]   94  102  102  108  111  108  102  103  102   109 #>  [4906,]   93  101  101  107  110  107  101  102  101   108 #>  [4907,]   93  101  101  107  110  107  101  102  101   108 #>  [4908,]   93  101  101  107  110  107  101  102  101   108 #>  [4909,]   93  101  101  107  110  107  101  102  101   108 #>  [4910,]   93  101  101  107  110  107  101  102  101   108 #>  [4911,]   93  101  101  107  110  107  101  102  101   108 #>  [4912,]   93  101  101  107  110  107  101  102  101   108 #>  [4913,]   93  101  101  107  110  107  101  102  101   108 #>  [4914,]   93  101  101  107  110  107  101  102  101   108 #>  [4915,]   93  101  101  107  110  107  101  102  101   108 #>  [4916,]   93  101  101  107  110  107  101  102  101   108 #>  [4917,]   93  101  101  107  110  107  101  102  101   108 #>  [4918,]   94  102  102  108  111  108  102  103  102   109 #>  [4919,]   93  101  101  107  110  107  101  102  101   108 #>  [4920,]   93  101  101  107  110  107  101  102  101   108 #>  [4921,]   93  101  101  107  110  107  101  102  101   108 #>  [4922,]   93  101  101  107  110  107  101  102  101   108 #>  [4923,]   93  101  101  107  110  107  101  102  101   108 #>  [4924,]   93  101  101  107  110  107  101  102  101   108 #>  [4925,]   93  101  101  107  110  107  101  102  101   108 #>  [4926,]   93  101  101  107  110  107  101  102  101   108 #>  [4927,]   93  101  101  107  110  107  101  102  101   108 #>  [4928,]   93  101  101  107  110  107  101  102  101   108 #>  [4929,]   93  101  101  107  110  107  101  102  101   108 #>  [4930,]   93  101  101  107  110  107  101  102  101   108 #>  [4931,]   93  101  101  107  110  107  101  102  101   108 #>  [4932,]   94  102  102  108  111  108  102  103  102   109 #>  [4933,]   93  101  101  107  110  107  101  102  101   108 #>  [4934,]   93  101  101  107  110  107  101  102  101   108 #>  [4935,]   93  101  101  107  110  107  101  102  101   108 #>  [4936,]   93  101  101  107  110  107  101  102  101   108 #>  [4937,]   93  101  101  107  110  107  101  102  101   108 #>  [4938,]   93  101  101  107  110  107  101  102  101   108 #>  [4939,]   93  101  101  107  110  107  101  102  101   108 #>  [4940,]   93  101  101  107  110  107  101  102  101   108 #>  [4941,]   93  101  101  107  110  107  101  102  101   108 #>  [4942,]   93  101  101  107  110  107  101  102  101   108 #>  [4943,]   93  101  101  107  110  107  101  102  101   108 #>  [4944,]   93  101  101  107  110  107  101  102  101   108 #>  [4945,]   93  101  101  107  110  107  101  102  101   108 #>  [4946,]   93  101  101  107  110  107  101  102  101   108 #>  [4947,]   93  101  101  107  110  107  101  102  101   108 #>  [4948,]   93  101  101  107  110  107  101  102  101   108 #>  [4949,]   93  101  101  107  110  107  101  102  101   108 #>  [4950,]   93  101  101  107  110  107  101  102  101   108 #>  [4951,]   93  101  101  107  110  107  101  102  101   108 #>  [4952,]   93  101  101  107  110  107  101  102  101   108 #>  [4953,]   93  101  101  107  110  107  101  102  101   108 #>  [4954,]   93  101  101  107  110  107  101  102  101   108 #>  [4955,]   93  101  101  107  110  107  101  102  101   108 #>  [4956,]   93  101  101  107  110  107  101  102  101   108 #>  [4957,]   93  101  101  107  110  107  101  102  101   108 #>  [4958,]   93  101  101  107  110  107  101  102  101   108 #>  [4959,]   93  101  101  107  110  107  101  102  101   108 #>  [4960,]   93  101  101  107  110  107  101  102  101   108 #>  [4961,]   93  101  101  107  110  107  101  102  101   108 #>  [4962,]   93  101  101  107  110  107  101  102  101   108 #>  [4963,]   93  101  101  107  110  107  101  102  101   108 #>  [4964,]   93  101  101  107  110  107  101  102  101   108 #>  [4965,]   93  101  101  107  110  107  101  102  101   108 #>  [4966,]   93  101  101  107  110  107  101  102  101   108 #>  [4967,]   93  101  101  107  110  107  101  102  101   108 #>  [4968,]   93  101  101  107  110  107  101  102  101   108 #>  [4969,]   93  101  101  107  110  107  101  102  101   108 #>  [4970,]   93  101  101  107  110  107  101  102  101   108 #>  [4971,]   94  102  102  108  111  108  102  103  102   109 #>  [4972,]   93  101  101  107  110  107  101  102  101   108 #>  [4973,]   93  101  101  107  110  107  101  102  101   108 #>  [4974,]   93  101  101  107  110  107  101  102  101   108 #>  [4975,]   94  102  102  108  111  108  102  103  102   109 #>  [4976,]   93  101  101  107  110  107  101  102  101   108 #>  [4977,]   93  101  101  107  110  107  101  102  101   108 #>  [4978,]   93  101  101  107  110  107  101  102  101   108 #>  [4979,]   93  101  101  107  110  107  101  102  101   108 #>  [4980,]   93  101  101  107  110  107  101  102  101   108 #>  [4981,]   93  101  101  107  110  107  101  102  101   108 #>  [4982,]   93  101  101  107  110  107  101  102  101   108 #>  [4983,]   93  101  101  107  110  107  101  102  101   108 #>  [4984,]   93  101  101  107  110  107  101  102  101   108 #>  [4985,]   93  101  101  107  110  107  101  102  101   108 #>  [4986,]   93  101  101  107  110  107  101  102  101   108 #>  [4987,]   93  101  101  107  110  107  101  102  101   108 #>  [4988,]   93  101  101  107  110  107  101  102  101   108 #>  [4989,]   93  101  101  107  110  107  101  102  101   108 #>  [4990,]   93  101  101  107  110  107  101  102  101   108 #>  [4991,]   94  102  102  108  111  108  102  103  102   109 #>  [4992,]   93  101  101  107  110  107  101  102  101   108 #>  [4993,]   93  101  101  107  110  107  101  102  101   108 #>  [4994,]   93  101  101  107  110  107  101  102  101   108 #>  [4995,]   94  102  102  108  111  108  102  103  102   109 #>  [4996,]   93  101  101  107  110  107  101  102  101   108 #>  [4997,]   93  101  101  107  110  107  101  102  101   108 #>  [4998,]   93  101  101  107  110  107  101  102  101   108 #>  [4999,]   93  101  101  107  110  107  101  102  101   108 #>  [5000,]   94  102  102  108  111  108  102  103  102   109 #>  [5001,]   95  103  103  109  112  109  103  105  104   111 #>  [5002,]   95  103  103  109  112  109  103  104  103   110 #>  [5003,]   95  104  104  110  113  110  103  104  103   110 #>  [5004,]   95  103  103  109  112  109  103  105  104   111 #>  [5005,]   95  103  103  109  112  109  103  105  104   111 #>  [5006,]   95  104  104  110  113  110  103  104  103   110 #>  [5007,]   95  103  103  109  112  109  103  104  103   110 #>  [5008,]   95  103  103  109  112  109  103  104  103   110 #>  [5009,]   95  103  103  109  112  109  103  104  103   110 #>  [5010,]   95  103  103  109  112  109  103  105  104   111 #>  [5011,]   95  103  103  109  112  109  103  105  104   111 #>  [5012,]   95  104  104  110  113  110  103  105  104   111 #>  [5013,]   95  103  103  109  112  109  103  105  104   111 #>  [5014,]   95  103  103  109  112  109  103  105  104   111 #>  [5015,]   95  103  103  109  112  109  103  105  104   111 #>  [5016,]   95  103  103  109  112  109  103  105  104   111 #>  [5017,]   95  103  103  109  112  109  103  105  104   111 #>  [5018,]   95  103  103  109  112  109  103  105  104   111 #>  [5019,]   95  104  104  110  113  110  103  105  104   111 #>  [5020,]   95  104  104  110  113  110  103  104  103   110 #>  [5021,]   95  103  103  109  112  109  103  104  103   110 #>  [5022,]   95  103  103  109  112  109  103  105  104   111 #>  [5023,]   95  103  103  109  112  109  103  104  103   110 #>  [5024,]   95  103  103  109  112  109  103  105  104   111 #>  [5025,]   95  104  104  110  113  110  103  104  103   110 #>  [5026,]   95  103  103  109  112  109  103  105  104   111 #>  [5027,]   95  103  103  109  112  109  103  105  104   111 #>  [5028,]   95  104  104  110  113  110  103  105  104   111 #>  [5029,]   95  103  103  109  112  109  103  104  103   110 #>  [5030,]   95  103  103  109  112  109  103  104  103   110 #>  [5031,]   95  103  103  109  112  109  103  105  104   111 #>  [5032,]   95  103  103  109  112  109  103  105  104   111 #>  [5033,]   95  104  104  110  113  110  103  105  104   111 #>  [5034,]   95  104  104  110  113  110  103  104  103   110 #>  [5035,]   95  103  103  109  112  109  103  104  103   110 #>  [5036,]   95  103  103  109  112  109  103  104  103   110 #>  [5037,]   95  103  103  109  112  109  103  104  103   110 #>  [5038,]   95  103  103  109  112  109  103  105  104   111 #>  [5039,]   95  103  103  109  112  109  103  105  104   111 #>  [5040,]   95  103  103  109  112  109  103  104  103   110 #>  [5041,]   95  103  103  109  112  109  103  104  103   110 #>  [5042,]   95  103  103  109  112  109  103  104  103   110 #>  [5043,]   95  103  103  109  112  109  103  105  104   111 #>  [5044,]   95  103  103  109  112  109  103  104  103   110 #>  [5045,]   95  103  103  109  112  109  103  104  103   110 #>  [5046,]   95  103  103  109  112  109  103  105  104   111 #>  [5047,]   95  103  103  109  112  109  103  105  104   111 #>  [5048,]   95  103  103  109  112  109  103  105  104   111 #>  [5049,]   95  103  103  109  112  109  103  104  103   110 #>  [5050,]   95  103  103  109  112  109  103  104  103   110 #>  [5051,]   95  103  103  109  112  109  103  105  104   111 #>  [5052,]   95  103  103  109  112  109  103  105  104   111 #>  [5053,]   95  103  103  109  112  109  103  104  103   110 #>  [5054,]   95  103  103  109  112  109  103  104  103   110 #>  [5055,]   95  103  103  109  112  109  103  104  103   110 #>  [5056,]   95  103  103  109  112  109  103  104  103   110 #>  [5057,]   95  103  103  109  112  109  103  104  103   110 #>  [5058,]   95  103  103  109  112  109  103  105  104   111 #>  [5059,]   95  103  103  109  112  109  103  105  104   111 #>  [5060,]   95  104  104  110  113  110  103  104  103   110 #>  [5061,]   95  103  103  109  112  109  103  105  104   111 #>  [5062,]   95  103  103  109  112  109  103  104  103   110 #>  [5063,]   95  103  103  109  112  109  103  105  104   111 #>  [5064,]   95  103  103  109  112  109  103  104  103   110 #>  [5065,]   95  104  104  110  113  110  103  104  103   110 #>  [5066,]   95  103  103  109  112  109  103  105  104   111 #>  [5067,]   95  103  103  109  112  109  103  104  103   110 #>  [5068,]   95  103  103  109  112  109  103  105  104   111 #>  [5069,]   95  103  103  109  112  109  103  105  104   111 #>  [5070,]   95  104  104  110  113  110  103  105  104   111 #>  [5071,]   95  103  103  109  112  109  103  105  104   111 #>  [5072,]   95  103  103  109  112  109  103  104  103   110 #>  [5073,]   95  104  104  110  113  110  103  104  103   110 #>  [5074,]   95  103  103  109  112  109  103  104  103   110 #>  [5075,]   95  103  103  109  112  109  103  105  104   111 #>  [5076,]   95  103  103  109  112  109  103  104  103   110 #>  [5077,]   95  103  103  109  112  109  103  105  104   111 #>  [5078,]   95  103  103  109  112  109  103  104  103   110 #>  [5079,]   95  103  103  109  112  109  103  105  104   111 #>  [5080,]   95  103  103  109  112  109  103  104  103   110 #>  [5081,]   95  103  103  109  112  109  103  104  103   110 #>  [5082,]   95  103  103  109  112  109  103  104  103   110 #>  [5083,]   95  103  103  109  112  109  103  105  104   111 #>  [5084,]   95  103  103  109  112  109  103  104  103   110 #>  [5085,]   95  103  103  109  112  109  103  104  103   110 #>  [5086,]   95  103  103  109  112  109  103  104  103   110 #>  [5087,]   95  103  103  109  112  109  103  105  104   111 #>  [5088,]   95  103  103  109  112  109  103  104  103   110 #>  [5089,]   95  103  103  109  112  109  103  104  103   110 #>  [5090,]   95  103  103  109  112  109  103  105  104   111 #>  [5091,]   95  103  103  109  112  109  103  105  104   111 #>  [5092,]   95  103  103  109  112  109  103  105  104   111 #>  [5093,]   95  104  104  110  113  110  103  104  103   110 #>  [5094,]   95  103  103  109  112  109  103  104  103   110 #>  [5095,]   95  103  103  109  112  109  103  105  104   111 #>  [5096,]   95  103  103  109  112  109  103  105  104   111 #>  [5097,]   95  104  104  110  113  110  103  104  103   110 #>  [5098,]   95  104  104  110  113  110  103  104  103   110 #>  [5099,]   95  103  103  109  112  109  103  104  103   110 #>  [5100,]   95  103  103  109  112  109  103  105  104   111 #>  [5101,]   96  105  105  111  114  111  106  108  107   113 #>  [5102,]   96  105  105  111  114  111  106  108  107   113 #>  [5103,]   96  105  105  111  114  111  106  108  107   113 #>  [5104,]   96  105  105  111  114  111  106  108  107   113 #>  [5105,]   97  106  106  112  115  112  104  106  105   112 #>  [5106,]   96  105  105  111  114  111  106  108  107   113 #>  [5107,]   96  105  105  111  114  111  105  107  106   113 #>  [5108,]   96  105  105  111  114  111  106  108  107   113 #>  [5109,]   96  105  105  111  114  111  106  108  107   113 #>  [5110,]   96  105  105  111  114  111  106  108  107   113 #>  [5111,]   96  105  105  111  114  111  106  108  107   113 #>  [5112,]   96  105  105  111  114  111  106  108  107   113 #>  [5113,]   96  105  105  111  114  111  106  108  107   113 #>  [5114,]   96  105  105  111  114  111  106  108  107   113 #>  [5115,]   96  105  105  111  114  111  106  108  107   113 #>  [5116,]   96  105  105  111  114  111  106  108  107   113 #>  [5117,]   96  105  105  111  114  111  106  108  107   113 #>  [5118,]   97  106  106  112  115  112  104  106  105   112 #>  [5119,]   96  105  105  111  114  111  106  108  107   113 #>  [5120,]   96  105  105  111  114  111  106  108  107   113 #>  [5121,]   96  105  105  111  114  111  105  107  106   113 #>  [5122,]   96  105  105  111  114  111  106  108  107   113 #>  [5123,]   96  105  105  111  114  111  106  108  107   113 #>  [5124,]   96  105  105  111  114  111  106  108  107   113 #>  [5125,]   96  105  105  111  114  111  106  108  107   113 #>  [5126,]   96  105  105  111  114  111  106  108  107   113 #>  [5127,]   96  105  105  111  114  111  106  108  107   113 #>  [5128,]   96  105  105  111  114  111  106  108  107   113 #>  [5129,]   96  105  105  111  114  111  106  108  107   113 #>  [5130,]   96  105  105  111  114  111  106  108  107   113 #>  [5131,]   96  105  105  111  114  111  106  108  107   113 #>  [5132,]   97  106  106  112  115  112  104  106  105   112 #>  [5133,]   96  105  105  111  114  111  106  108  107   113 #>  [5134,]   96  105  105  111  114  111  106  108  107   113 #>  [5135,]   96  105  105  111  114  111  106  108  107   113 #>  [5136,]   96  105  105  111  114  111  106  108  107   113 #>  [5137,]   96  105  105  111  114  111  106  108  107   113 #>  [5138,]   96  105  105  111  114  111  106  108  107   113 #>  [5139,]   96  105  105  111  114  111  105  107  106   113 #>  [5140,]   96  105  105  111  114  111  106  108  107   113 #>  [5141,]   96  105  105  111  114  111  106  108  107   113 #>  [5142,]   96  105  105  111  114  111  106  108  107   113 #>  [5143,]   96  105  105  111  114  111  106  108  107   113 #>  [5144,]   96  105  105  111  114  111  106  108  107   113 #>  [5145,]   96  105  105  111  114  111  106  108  107   113 #>  [5146,]   96  105  105  111  114  111  106  108  107   113 #>  [5147,]   96  105  105  111  114  111  106  108  107   113 #>  [5148,]   96  105  105  111  114  111  106  108  107   113 #>  [5149,]   96  105  105  111  114  111  105  107  106   113 #>  [5150,]   96  105  105  111  114  111  106  108  107   113 #>  [5151,]   96  105  105  111  114  111  106  108  107   113 #>  [5152,]   96  105  105  111  114  111  106  108  107   113 #>  [5153,]   96  105  105  111  114  111  106  108  107   113 #>  [5154,]   96  105  105  111  114  111  106  108  107   113 #>  [5155,]   96  105  105  111  114  111  106  108  107   113 #>  [5156,]   96  105  105  111  114  111  106  108  107   113 #>  [5157,]   96  105  105  111  114  111  106  108  107   113 #>  [5158,]   96  105  105  111  114  111  106  108  107   113 #>  [5159,]   96  105  105  111  114  111  106  108  107   113 #>  [5160,]   96  105  105  111  114  111  106  108  107   113 #>  [5161,]   96  105  105  111  114  111  106  108  107   113 #>  [5162,]   96  105  105  111  114  111  105  107  106   113 #>  [5163,]   96  105  105  111  114  111  106  108  107   113 #>  [5164,]   96  105  105  111  114  111  106  108  107   113 #>  [5165,]   96  105  105  111  114  111  106  108  107   113 #>  [5166,]   96  105  105  111  114  111  106  108  107   113 #>  [5167,]   96  105  105  111  114  111  106  108  107   113 #>  [5168,]   96  105  105  111  114  111  106  108  107   113 #>  [5169,]   96  105  105  111  114  111  106  108  107   113 #>  [5170,]   96  105  105  111  114  111  105  107  106   113 #>  [5171,]   97  106  106  112  115  112  104  106  105   112 #>  [5172,]   96  105  105  111  114  111  106  108  107   113 #>  [5173,]   96  105  105  111  114  111  106  108  107   113 #>  [5174,]   96  105  105  111  114  111  106  108  107   113 #>  [5175,]   97  106  106  112  115  112  104  106  105   112 #>  [5176,]   96  105  105  111  114  111  106  108  107   113 #>  [5177,]   96  105  105  111  114  111  106  108  107   113 #>  [5178,]   96  105  105  111  114  111  106  108  107   113 #>  [5179,]   96  105  105  111  114  111  106  108  107   113 #>  [5180,]   96  105  105  111  114  111  105  107  106   113 #>  [5181,]   96  105  105  111  114  111  106  108  107   113 #>  [5182,]   96  105  105  111  114  111  106  108  107   113 #>  [5183,]   96  105  105  111  114  111  106  108  107   113 #>  [5184,]   96  105  105  111  114  111  106  108  107   113 #>  [5185,]   96  105  105  111  114  111  106  108  107   113 #>  [5186,]   96  105  105  111  114  111  106  108  107   113 #>  [5187,]   96  105  105  111  114  111  106  108  107   113 #>  [5188,]   96  105  105  111  114  111  106  108  107   113 #>  [5189,]   96  105  105  111  114  111  106  108  107   113 #>  [5190,]   96  105  105  111  114  111  106  108  107   113 #>  [5191,]   97  106  106  112  115  112  104  106  105   112 #>  [5192,]   96  105  105  111  114  111  106  108  107   113 #>  [5193,]   96  105  105  111  114  111  106  108  107   113 #>  [5194,]   96  105  105  111  114  111  106  108  107   113 #>  [5195,]   97  106  106  112  115  112  104  106  105   112 #>  [5196,]   96  105  105  111  114  111  106  108  107   113 #>  [5197,]   96  105  105  111  114  111  106  108  107   113 #>  [5198,]   96  105  105  111  114  111  106  108  107   113 #>  [5199,]   96  105  105  111  114  111  106  108  107   113 #>  [5200,]   97  106  106  112  115  112  104  106  105   112 #>  [5201,]   99  108  108  114  117  114  108  110  109   115 #>  [5202,]   99  108  108  114  117  114  108  110  109   115 #>  [5203,]   98  107  107  113  116  113  107  109  108   114 #>  [5204,]   99  108  108  114  117  114  108  110  109   115 #>  [5205,]   99  108  108  114  117  114  108  110  109   115 #>  [5206,]   99  108  108  114  117  114  108  110  109   115 #>  [5207,]   98  107  107  113  116  113  107  109  108   114 #>  [5208,]   98  107  107  113  116  113  107  109  108   114 #>  [5209,]   99  108  108  114  117  114  108  110  109   115 #>  [5210,]   99  108  108  114  117  114  108  110  109   115 #>  [5211,]   99  108  108  114  117  114  108  110  109   115 #>  [5212,]   99  108  108  114  117  114  108  110  109   115 #>  [5213,]   99  108  108  114  117  114  108  110  109   115 #>  [5214,]   99  108  108  114  117  114  108  110  109   115 #>  [5215,]   99  108  108  114  117  114  108  110  109   115 #>  [5216,]   99  108  108  114  117  114  108  110  109   115 #>  [5217,]   99  108  108  114  117  114  108  110  109   115 #>  [5218,]   99  108  108  114  117  114  108  110  109   115 #>  [5219,]   99  108  108  114  117  114  108  110  109   115 #>  [5220,]   98  107  107  113  116  113  107  109  108   114 #>  [5221,]   99  108  108  114  117  114  108  110  109   115 #>  [5222,]   99  108  108  114  117  114  108  110  109   115 #>  [5223,]   99  108  108  114  117  114  108  110  109   115 #>  [5224,]   99  108  108  114  117  114  108  110  109   115 #>  [5225,]   98  107  107  113  116  113  107  109  108   114 #>  [5226,]   99  108  108  114  117  114  108  110  109   115 #>  [5227,]   99  108  108  114  117  114  108  110  109   115 #>  [5228,]   99  108  108  114  117  114  108  110  109   115 #>  [5229,]   99  108  108  114  117  114  108  110  109   115 #>  [5230,]   99  108  108  114  117  114  108  110  109   115 #>  [5231,]   99  108  108  114  117  114  108  110  109   115 #>  [5232,]   99  108  108  114  117  114  108  110  109   115 #>  [5233,]   99  108  108  114  117  114  108  110  109   115 #>  [5234,]   99  108  108  114  117  114  108  110  109   115 #>  [5235,]   99  108  108  114  117  114  108  110  109   115 #>  [5236,]   99  108  108  114  117  114  108  110  109   115 #>  [5237,]   99  108  108  114  117  114  108  110  109   115 #>  [5238,]   99  108  108  114  117  114  108  110  109   115 #>  [5239,]   98  107  107  113  116  113  107  109  108   114 #>  [5240,]   99  108  108  114  117  114  108  110  109   115 #>  [5241,]   99  108  108  114  117  114  108  110  109   115 #>  [5242,]   99  108  108  114  117  114  108  110  109   115 #>  [5243,]   99  108  108  114  117  114  108  110  109   115 #>  [5244,]   98  107  107  113  116  113  107  109  108   114 #>  [5245,]   99  108  108  114  117  114  108  110  109   115 #>  [5246,]   98  107  107  113  116  113  107  109  108   114 #>  [5247,]   99  108  108  114  117  114  108  110  109   115 #>  [5248,]   99  108  108  114  117  114  108  110  109   115 #>  [5249,]   98  107  107  113  116  113  107  109  108   114 #>  [5250,]   98  107  107  113  116  113  107  109  108   114 #>  [5251,]   99  108  108  114  117  114  108  110  109   115 #>  [5252,]   99  108  108  114  117  114  108  110  109   115 #>  [5253,]   98  107  107  113  116  113  107  109  108   114 #>  [5254,]   99  108  108  114  117  114  108  110  109   115 #>  [5255,]   98  107  107  113  116  113  107  109  108   114 #>  [5256,]   98  107  107  113  116  113  107  109  108   114 #>  [5257,]   99  108  108  114  117  114  108  110  109   115 #>  [5258,]   99  108  108  114  117  114  108  110  109   115 #>  [5259,]   98  107  107  113  116  113  107  109  108   114 #>  [5260,]   99  108  108  114  117  114  108  110  109   115 #>  [5261,]   99  108  108  114  117  114  108  110  109   115 #>  [5262,]   99  108  108  114  117  114  108  110  109   115 #>  [5263,]   99  108  108  114  117  114  108  110  109   115 #>  [5264,]   99  108  108  114  117  114  108  110  109   115 #>  [5265,]   98  107  107  113  116  113  107  109  108   114 #>  [5266,]   98  107  107  113  116  113  107  109  108   114 #>  [5267,]   99  108  108  114  117  114  108  110  109   115 #>  [5268,]   99  108  108  114  117  114  108  110  109   115 #>  [5269,]   99  108  108  114  117  114  108  110  109   115 #>  [5270,]   98  107  107  113  116  113  107  109  108   114 #>  [5271,]   99  108  108  114  117  114  108  110  109   115 #>  [5272,]   99  108  108  114  117  114  108  110  109   115 #>  [5273,]   99  108  108  114  117  114  108  110  109   115 #>  [5274,]   99  108  108  114  117  114  108  110  109   115 #>  [5275,]   99  108  108  114  117  114  108  110  109   115 #>  [5276,]   99  108  108  114  117  114  108  110  109   115 #>  [5277,]   99  108  108  114  117  114  108  110  109   115 #>  [5278,]   99  108  108  114  117  114  108  110  109   115 #>  [5279,]   99  108  108  114  117  114  108  110  109   115 #>  [5280,]   99  108  108  114  117  114  108  110  109   115 #>  [5281,]   99  108  108  114  117  114  108  110  109   115 #>  [5282,]   99  108  108  114  117  114  108  110  109   115 #>  [5283,]   99  108  108  114  117  114  108  110  109   115 #>  [5284,]   98  107  107  113  116  113  107  109  108   114 #>  [5285,]   99  108  108  114  117  114  108  110  109   115 #>  [5286,]   98  107  107  113  116  113  107  109  108   114 #>  [5287,]   99  108  108  114  117  114  108  110  109   115 #>  [5288,]   99  108  108  114  117  114  108  110  109   115 #>  [5289,]   99  108  108  114  117  114  108  110  109   115 #>  [5290,]   98  107  107  113  116  113  107  109  108   114 #>  [5291,]   99  108  108  114  117  114  108  110  109   115 #>  [5292,]   99  108  108  114  117  114  108  110  109   115 #>  [5293,]   99  108  108  114  117  114  108  110  109   115 #>  [5294,]   99  108  108  114  117  114  108  110  109   115 #>  [5295,]   99  108  108  114  117  114  108  110  109   115 #>  [5296,]   99  108  108  114  117  114  108  110  109   115 #>  [5297,]   99  108  108  114  117  114  108  110  109   115 #>  [5298,]   98  107  107  113  116  113  107  109  108   114 #>  [5299,]   99  108  108  114  117  114  108  110  109   115 #>  [5300,]   98  107  107  113  116  113  107  109  108   114 #>  [5301,]  101  110  109  115  118  115  109  111  110   116 #>  [5302,]  100  109  109  115  118  115  109  111  110   116 #>  [5303,]  101  110  109  115  118  115  109  111  110   116 #>  [5304,]  101  110  109  115  118  115  109  111  110   116 #>  [5305,]  100  109  109  115  118  115  109  111  110   116 #>  [5306,]  100  109  109  115  118  115  109  111  110   116 #>  [5307,]  101  110  109  115  118  115  109  111  110   116 #>  [5308,]  100  109  109  115  118  115  109  111  110   116 #>  [5309,]  101  110  109  115  118  115  109  111  110   116 #>  [5310,]  101  110  109  115  118  115  109  111  110   116 #>  [5311,]  100  109  109  115  118  115  109  111  110   116 #>  [5312,]  100  109  109  115  118  115  109  111  110   116 #>  [5313,]  101  110  109  115  118  115  109  111  110   116 #>  [5314,]  101  110  109  115  118  115  109  111  110   116 #>  [5315,]  100  109  109  115  118  115  109  111  110   116 #>  [5316,]  101  110  109  115  118  115  109  111  110   116 #>  [5317,]  100  109  109  115  118  115  109  111  110   116 #>  [5318,]  100  109  109  116  119  116  110  112  111   117 #>  [5319,]  100  109  109  115  118  115  109  111  110   116 #>  [5320,]  101  110  109  115  118  115  109  111  110   116 #>  [5321,]  100  109  109  115  118  115  109  111  110   116 #>  [5322,]  101  110  109  115  118  115  109  111  110   116 #>  [5323,]  100  109  109  115  118  115  109  111  110   116 #>  [5324,]  101  110  109  115  118  115  109  111  110   116 #>  [5325,]  101  110  109  115  118  115  109  111  110   116 #>  [5326,]  100  109  109  115  118  115  109  111  110   116 #>  [5327,]  100  109  109  115  118  115  109  111  110   116 #>  [5328,]  101  110  109  115  118  115  109  111  110   116 #>  [5329,]  100  109  109  115  118  115  109  111  110   116 #>  [5330,]  100  109  109  115  118  115  109  111  110   116 #>  [5331,]  100  109  109  115  118  115  109  111  110   116 #>  [5332,]  100  109  109  115  118  115  109  111  110   116 #>  [5333,]  100  109  109  115  118  115  109  111  110   116 #>  [5334,]  100  109  109  115  118  115  109  111  110   116 #>  [5335,]  100  109  109  115  118  115  109  111  110   116 #>  [5336,]  101  110  109  115  118  115  109  111  110   116 #>  [5337,]  100  109  109  115  118  115  109  111  110   116 #>  [5338,]  100  109  109  115  118  115  109  111  110   116 #>  [5339,]  101  110  109  115  118  115  109  111  110   116 #>  [5340,]  100  109  109  115  118  115  109  111  110   116 #>  [5341,]  101  110  109  115  118  115  109  111  110   116 #>  [5342,]  100  109  109  116  119  116  110  112  111   117 #>  [5343,]  100  109  109  115  118  115  109  111  110   116 #>  [5344,]  100  109  109  115  118  115  109  111  110   116 #>  [5345,]  101  110  109  115  118  115  109  111  110   116 #>  [5346,]  100  109  109  115  118  115  109  111  110   116 #>  [5347,]  100  109  109  115  118  115  109  111  110   116 #>  [5348,]  100  109  109  115  118  115  109  111  110   116 #>  [5349,]  101  110  109  115  118  115  109  111  110   116 #>  [5350,]  101  110  109  115  118  115  109  111  110   116 #>  [5351,]  100  109  109  116  119  116  110  112  111   117 #>  [5352,]  101  110  109  115  118  115  109  111  110   116 #>  [5353,]  101  110  109  116  119  116  110  112  111   117 #>  [5354,]  101  110  109  115  118  115  109  111  110   116 #>  [5355,]  101  110  109  115  118  115  109  111  110   116 #>  [5356,]  100  109  109  115  118  115  109  111  110   116 #>  [5357,]  101  110  109  115  118  115  109  111  110   116 #>  [5358,]  101  110  109  115  118  115  109  111  110   116 #>  [5359,]  101  110  109  115  118  115  109  111  110   116 #>  [5360,]  100  109  109  115  118  115  109  111  110   116 #>  [5361,]  100  109  109  115  118  115  109  111  110   116 #>  [5362,]  100  109  109  115  118  115  109  111  110   116 #>  [5363,]  100  109  109  115  118  115  109  111  110   116 #>  [5364,]  100  109  109  115  118  115  109  111  110   116 #>  [5365,]  100  109  109  115  118  115  109  111  110   116 #>  [5366,]  100  109  109  115  118  115  109  111  110   116 #>  [5367,]  101  110  109  115  118  115  109  111  110   116 #>  [5368,]  100  109  109  115  118  115  109  111  110   116 #>  [5369,]  100  109  109  115  118  115  109  111  110   116 #>  [5370,]  100  109  109  115  118  115  109  111  110   116 #>  [5371,]  101  110  109  115  118  115  109  111  110   116 #>  [5372,]  101  110  109  115  118  115  109  111  110   116 #>  [5373,]  101  110  109  115  118  115  109  111  110   116 #>  [5374,]  100  109  109  115  118  115  109  111  110   116 #>  [5375,]  100  109  109  115  118  115  109  111  110   116 #>  [5376,]  101  110  109  115  118  115  109  111  110   116 #>  [5377,]  100  109  109  115  118  115  109  111  110   116 #>  [5378,]  100  109  109  115  118  115  109  111  110   116 #>  [5379,]  100  109  109  116  119  116  110  112  111   117 #>  [5380,]  100  109  109  115  118  115  109  111  110   116 #>  [5381,]  100  109  109  115  118  115  109  111  110   116 #>  [5382,]  100  109  109  115  118  115  109  111  110   116 #>  [5383,]  100  109  109  115  118  115  109  111  110   116 #>  [5384,]  100  109  109  116  119  116  110  112  111   117 #>  [5385,]  101  110  109  115  118  115  109  111  110   116 #>  [5386,]  101  110  109  115  118  115  109  111  110   116 #>  [5387,]  101  110  109  115  118  115  109  111  110   116 #>  [5388,]  101  110  109  115  118  115  109  111  110   116 #>  [5389,]  100  109  109  115  118  115  109  111  110   116 #>  [5390,]  101  110  109  115  118  115  109  111  110   116 #>  [5391,]  101  110  109  115  118  115  109  111  110   116 #>  [5392,]  100  109  109  115  118  115  109  111  110   116 #>  [5393,]  100  109  109  115  118  115  109  111  110   116 #>  [5394,]  100  109  109  116  119  116  110  112  111   117 #>  [5395,]  100  109  109  115  118  115  109  111  110   116 #>  [5396,]  100  109  109  115  118  115  109  111  110   116 #>  [5397,]  100  109  109  115  118  115  109  111  110   116 #>  [5398,]  100  109  109  115  118  115  109  111  110   116 #>  [5399,]  100  109  109  115  118  115  109  111  110   116 #>  [5400,]  100  109  109  115  118  115  109  111  110   116 #>  [5401,]  103  112  112  119  121  118  112  114  113   119 #>  [5402,]  103  112  112  119  121  118  112  115  113   119 #>  [5403,]  102  111  110  117  120  117  111  113  112   118 #>  [5404,]  103  112  112  119  121  118  112  115  113   119 #>  [5405,]  103  112  112  119  121  118  112  115  113   119 #>  [5406,]  103  112  111  118  121  118  112  114  113   119 #>  [5407,]  102  111  110  117  120  117  111  113  112   118 #>  [5408,]  103  112  112  119  121  118  112  115  113   119 #>  [5409,]  103  112  112  119  121  118  112  115  113   119 #>  [5410,]  103  112  112  119  121  118  112  115  113   119 #>  [5411,]  103  112  112  119  121  118  112  114  113   119 #>  [5412,]  103  112  112  119  121  118  112  115  113   119 #>  [5413,]  103  112  112  119  121  118  112  115  113   119 #>  [5414,]  103  112  112  119  121  118  112  114  113   119 #>  [5415,]  103  112  112  119  121  118  112  115  113   119 #>  [5416,]  103  112  112  119  121  118  112  114  113   119 #>  [5417,]  103  112  112  119  121  118  112  115  113   119 #>  [5418,]  103  112  112  119  121  118  112  115  113   119 #>  [5419,]  103  112  112  119  121  118  112  114  113   119 #>  [5420,]  103  112  111  118  121  118  112  115  113   119 #>  [5421,]  102  111  110  117  120  117  111  113  112   118 #>  [5422,]  103  112  112  119  121  118  112  115  113   119 #>  [5423,]  102  111  110  117  120  117  111  113  112   118 #>  [5424,]  103  112  112  119  121  118  112  115  113   119 #>  [5425,]  103  112  111  118  121  118  112  115  113   119 #>  [5426,]  103  112  112  119  121  118  112  114  113   119 #>  [5427,]  103  112  112  119  121  118  112  115  113   119 #>  [5428,]  103  112  112  119  121  118  112  114  113   119 #>  [5429,]  103  112  112  119  121  118  112  115  113   119 #>  [5430,]  102  111  110  117  120  117  111  113  112   118 #>  [5431,]  102  111  110  117  120  117  111  113  112   118 #>  [5432,]  103  112  112  119  121  118  112  115  113   119 #>  [5433,]  103  112  112  119  121  118  112  115  113   119 #>  [5434,]  103  112  111  118  121  118  112  114  113   119 #>  [5435,]  103  112  111  118  121  118  112  114  113   119 #>  [5436,]  103  112  112  119  121  118  112  115  113   119 #>  [5437,]  103  112  111  118  121  118  112  114  113   119 #>  [5438,]  103  112  112  119  121  118  112  114  113   119 #>  [5439,]  102  111  110  117  120  117  111  113  112   118 #>  [5440,]  103  112  112  119  121  118  112  115  113   119 #>  [5441,]  103  112  112  119  121  118  112  115  113   119 #>  [5442,]  103  112  111  118  121  118  112  114  113   119 #>  [5443,]  103  112  112  119  121  118  112  115  113   119 #>  [5444,]  103  112  111  118  121  118  112  115  113   119 #>  [5445,]  103  112  112  119  121  118  112  114  113   119 #>  [5446,]  103  112  112  119  121  118  112  115  113   119 #>  [5447,]  102  111  110  117  120  117  111  113  112   118 #>  [5448,]  103  112  112  119  121  118  112  115  113   119 #>  [5449,]  102  111  110  117  120  117  111  113  112   118 #>  [5450,]  103  112  112  119  121  118  112  115  113   119 #>  [5451,]  103  112  112  119  121  118  112  115  113   119 #>  [5452,]  103  112  112  119  121  118  112  114  113   119 #>  [5453,]  103  112  111  118  121  118  112  115  113   119 #>  [5454,]  102  111  110  117  120  117  111  113  112   118 #>  [5455,]  103  112  111  118  121  118  112  115  113   119 #>  [5456,]  103  112  111  118  121  118  112  115  113   119 #>  [5457,]  103  112  111  118  121  118  112  115  113   119 #>  [5458,]  103  112  112  119  121  118  112  115  113   119 #>  [5459,]  103  112  112  119  121  118  112  115  113   119 #>  [5460,]  103  112  112  119  121  118  112  115  113   119 #>  [5461,]  103  112  112  119  121  118  112  115  113   119 #>  [5462,]  102  111  110  117  120  117  111  113  112   118 #>  [5463,]  103  112  112  119  121  118  112  115  113   119 #>  [5464,]  103  112  111  118  121  118  112  114  113   119 #>  [5465,]  103  112  111  118  121  118  112  115  113   119 #>  [5466,]  103  112  112  119  121  118  112  115  113   119 #>  [5467,]  103  112  112  119  121  118  112  115  113   119 #>  [5468,]  103  112  112  119  121  118  112  114  113   119 #>  [5469,]  103  112  112  119  121  118  112  115  113   119 #>  [5470,]  102  111  110  117  120  117  111  113  112   118 #>  [5471,]  103  112  112  119  121  118  112  115  113   119 #>  [5472,]  103  112  112  119  121  118  112  114  113   119 #>  [5473,]  103  112  111  118  121  118  112  114  113   119 #>  [5474,]  103  112  111  118  121  118  112  115  113   119 #>  [5475,]  103  112  112  119  121  118  112  115  113   119 #>  [5476,]  103  112  112  119  121  118  112  115  113   119 #>  [5477,]  102  111  110  117  120  117  111  113  112   118 #>  [5478,]  103  112  112  119  121  118  112  115  113   119 #>  [5479,]  102  111  110  117  120  117  111  113  112   118 #>  [5480,]  102  111  110  117  120  117  111  113  112   118 #>  [5481,]  103  112  112  119  121  118  112  115  113   119 #>  [5482,]  103  112  111  118  121  118  112  115  113   119 #>  [5483,]  102  111  110  117  120  117  111  113  112   118 #>  [5484,]  103  112  111  118  121  118  112  115  113   119 #>  [5485,]  103  112  111  118  121  118  112  115  113   119 #>  [5486,]  103  112  111  118  121  118  112  115  113   119 #>  [5487,]  103  112  112  119  121  118  112  115  113   119 #>  [5488,]  103  112  111  118  121  118  112  115  113   119 #>  [5489,]  103  112  111  118  121  118  112  114  113   119 #>  [5490,]  103  112  112  119  121  118  112  115  113   119 #>  [5491,]  103  112  112  119  121  118  112  115  113   119 #>  [5492,]  103  112  112  119  121  118  112  115  113   119 #>  [5493,]  103  112  112  119  121  118  112  115  113   119 #>  [5494,]  103  112  111  118  121  118  112  114  113   119 #>  [5495,]  102  111  110  117  120  117  111  113  112   118 #>  [5496,]  103  112  112  119  121  118  112  114  113   119 #>  [5497,]  103  112  112  119  121  118  112  114  113   119 #>  [5498,]  102  111  110  117  120  117  111  113  112   118 #>  [5499,]  103  112  111  118  121  118  112  115  113   119 #>  [5500,]  103  112  112  119  121  118  112  114  113   119 #>  [5501,]  105  114  114  121  123  120  114  117  115   121 #>  [5502,]  105  114  114  121  123  120  114  117  115   121 #>  [5503,]  104  113  113  120  122  119  113  116  114   120 #>  [5504,]  105  114  114  121  123  120  114  117  115   121 #>  [5505,]  105  114  114  121  123  120  114  117  115   121 #>  [5506,]  105  114  114  121  123  120  114  117  115   121 #>  [5507,]  104  113  113  120  122  119  113  116  114   120 #>  [5508,]  104  113  113  120  122  119  113  116  114   120 #>  [5509,]  105  114  114  121  123  120  114  117  115   121 #>  [5510,]  105  114  114  121  123  120  114  117  115   121 #>  [5511,]  105  114  114  121  123  120  114  117  115   121 #>  [5512,]  105  114  114  121  123  120  114  117  115   121 #>  [5513,]  104  113  113  120  122  119  113  116  114   120 #>  [5514,]  105  114  114  121  123  120  114  117  115   121 #>  [5515,]  105  114  114  121  123  120  114  117  115   121 #>  [5516,]  104  113  113  120  122  119  113  116  114   120 #>  [5517,]  104  113  113  120  122  119  113  116  114   120 #>  [5518,]  105  114  114  121  123  120  114  117  115   121 #>  [5519,]  105  114  114  121  123  120  114  117  115   121 #>  [5520,]  104  113  113  120  122  119  113  116  114   120 #>  [5521,]  105  114  114  121  123  120  114  117  115   121 #>  [5522,]  104  113  113  120  122  119  113  116  114   120 #>  [5523,]  105  114  114  121  123  120  114  117  115   121 #>  [5524,]  104  113  113  120  122  119  113  116  114   120 #>  [5525,]  104  113  113  120  122  119  113  116  114   120 #>  [5526,]  105  114  114  121  123  120  114  117  115   121 #>  [5527,]  105  114  114  121  123  120  114  117  115   121 #>  [5528,]  105  114  114  121  123  120  114  117  115   121 #>  [5529,]  105  114  114  121  123  120  114  117  115   121 #>  [5530,]  105  114  114  121  123  120  114  117  115   121 #>  [5531,]  105  114  114  121  123  120  114  117  115   121 #>  [5532,]  105  114  114  121  123  120  114  117  115   121 #>  [5533,]  105  114  114  121  123  120  114  117  115   121 #>  [5534,]  105  114  114  121  123  120  114  117  115   121 #>  [5535,]  105  114  114  121  123  120  114  117  115   121 #>  [5536,]  105  114  114  121  123  120  114  117  115   121 #>  [5537,]  105  114  114  121  123  120  114  117  115   121 #>  [5538,]  105  114  114  121  123  120  114  117  115   121 #>  [5539,]  104  113  113  120  122  119  113  116  114   120 #>  [5540,]  104  113  113  120  122  119  113  116  114   120 #>  [5541,]  105  114  114  121  123  120  114  117  115   121 #>  [5542,]  105  114  114  121  123  120  114  117  115   121 #>  [5543,]  104  113  113  120  122  119  113  116  114   120 #>  [5544,]  104  113  113  120  122  119  113  116  114   120 #>  [5545,]  104  113  113  120  122  119  113  116  114   120 #>  [5546,]  104  113  113  120  122  119  113  116  114   120 #>  [5547,]  104  113  113  120  122  119  113  116  114   120 #>  [5548,]  105  114  114  121  123  120  114  117  115   121 #>  [5549,]  104  113  113  120  122  119  113  116  114   120 #>  [5550,]  104  113  113  120  122  119  113  116  114   120 #>  [5551,]  104  113  113  120  122  119  113  116  114   120 #>  [5552,]  105  114  114  121  123  120  114  117  115   121 #>  [5553,]  104  113  113  120  122  119  113  116  114   120 #>  [5554,]  104  113  113  120  122  119  113  116  114   120 #>  [5555,]  104  113  113  120  122  119  113  116  114   120 #>  [5556,]  104  113  113  120  122  119  113  116  114   120 #>  [5557,]  105  114  114  121  123  120  114  117  115   121 #>  [5558,]  105  114  114  121  123  120  114  117  115   121 #>  [5559,]  104  113  113  120  122  119  113  116  114   120 #>  [5560,]  105  114  114  121  123  120  114  117  115   121 #>  [5561,]  105  114  114  121  123  120  114  117  115   121 #>  [5562,]  105  114  114  121  123  120  114  117  115   121 #>  [5563,]  104  113  113  120  122  119  113  116  114   120 #>  [5564,]  105  114  114  121  123  120  114  117  115   121 #>  [5565,]  104  113  113  120  122  119  113  116  114   120 #>  [5566,]  104  113  113  120  122  119  113  116  114   120 #>  [5567,]  105  114  114  121  123  120  114  117  115   121 #>  [5568,]  105  114  114  121  123  120  114  117  115   121 #>  [5569,]  105  114  114  121  123  120  114  117  115   121 #>  [5570,]  104  113  113  120  122  119  113  116  114   120 #>  [5571,]  105  114  114  121  123  120  114  117  115   121 #>  [5572,]  104  113  113  120  122  119  113  116  114   120 #>  [5573,]  105  114  114  121  123  120  114  117  115   121 #>  [5574,]  105  114  114  121  123  120  114  117  115   121 #>  [5575,]  105  114  114  121  123  120  114  117  115   121 #>  [5576,]  104  113  113  120  122  119  113  116  114   120 #>  [5577,]  104  113  113  120  122  119  113  116  114   120 #>  [5578,]  104  113  113  120  122  119  113  116  114   120 #>  [5579,]  104  113  113  120  122  119  113  116  114   120 #>  [5580,]  105  114  114  121  123  120  114  117  115   121 #>  [5581,]  105  114  114  121  123  120  114  117  115   121 #>  [5582,]  105  114  114  121  123  120  114  117  115   121 #>  [5583,]  104  113  113  120  122  119  113  116  114   120 #>  [5584,]  104  113  113  120  122  119  113  116  114   120 #>  [5585,]  105  114  114  121  123  120  114  117  115   121 #>  [5586,]  104  113  113  120  122  119  113  116  114   120 #>  [5587,]  105  114  114  121  123  120  114  117  115   121 #>  [5588,]  105  114  114  121  123  120  114  117  115   121 #>  [5589,]  104  113  113  120  122  119  113  116  114   120 #>  [5590,]  104  113  113  120  122  119  113  116  114   120 #>  [5591,]  105  114  114  121  123  120  114  117  115   121 #>  [5592,]  105  114  114  121  123  120  114  117  115   121 #>  [5593,]  105  114  114  121  123  120  114  117  115   121 #>  [5594,]  104  113  113  120  122  119  113  116  114   120 #>  [5595,]  105  114  114  121  123  120  114  117  115   121 #>  [5596,]  105  114  114  121  123  120  114  117  115   121 #>  [5597,]  105  114  114  121  123  120  114  117  115   121 #>  [5598,]  104  113  113  120  122  119  113  116  114   120 #>  [5599,]  105  114  114  121  123  120  114  117  115   121 #>  [5600,]  104  113  113  120  122  119  113  116  114   120 #>  [5601,]  106  115  115  122  124  121  115  118  116   122 #>  [5602,]  106  115  115  122  124  121  115  118  116   122 #>  [5603,]  107  116  116  123  125  122  116  119  117   123 #>  [5604,]  106  115  115  122  124  121  115  118  116   122 #>  [5605,]  106  115  115  122  124  121  115  118  116   122 #>  [5606,]  107  116  116  123  125  122  116  119  117   123 #>  [5607,]  106  115  115  122  124  121  115  118  116   122 #>  [5608,]  106  115  115  122  124  121  115  118  116   122 #>  [5609,]  106  115  115  122  124  121  115  118  116   122 #>  [5610,]  106  115  115  122  124  121  115  118  116   122 #>  [5611,]  106  115  115  122  124  121  115  118  116   122 #>  [5612,]  106  115  115  122  124  121  115  118  116   122 #>  [5613,]  106  115  115  122  124  121  115  118  116   122 #>  [5614,]  106  115  115  122  124  121  115  118  116   122 #>  [5615,]  106  115  115  122  124  121  115  118  116   122 #>  [5616,]  106  115  115  122  124  121  115  118  116   122 #>  [5617,]  106  115  115  122  124  121  115  118  116   122 #>  [5618,]  106  115  115  122  124  121  115  118  116   122 #>  [5619,]  107  116  116  123  125  122  116  119  117   123 #>  [5620,]  106  115  115  122  124  121  115  118  116   122 #>  [5621,]  106  115  115  122  124  121  115  118  116   122 #>  [5622,]  106  115  115  122  124  121  115  118  116   122 #>  [5623,]  106  115  115  122  124  121  115  118  116   122 #>  [5624,]  106  115  115  122  124  121  115  118  116   122 #>  [5625,]  107  116  116  123  125  122  116  119  117   123 #>  [5626,]  106  115  115  122  124  121  115  118  116   122 #>  [5627,]  106  115  115  122  124  121  115  118  116   122 #>  [5628,]  106  115  115  122  124  121  115  118  116   122 #>  [5629,]  106  115  115  122  124  121  115  118  116   122 #>  [5630,]  106  115  115  122  124  121  115  118  116   122 #>  [5631,]  106  115  115  122  124  121  115  118  116   122 #>  [5632,]  106  115  115  122  124  121  115  118  116   122 #>  [5633,]  107  116  116  123  125  122  116  119  117   123 #>  [5634,]  107  116  116  123  125  122  116  119  117   123 #>  [5635,]  106  115  115  122  124  121  115  118  116   122 #>  [5636,]  106  115  115  122  124  121  115  118  116   122 #>  [5637,]  106  115  115  122  124  121  115  118  116   122 #>  [5638,]  106  115  115  122  124  121  115  118  116   122 #>  [5639,]  106  115  115  122  124  121  115  118  116   122 #>  [5640,]  106  115  115  122  124  121  115  118  116   122 #>  [5641,]  106  115  115  122  124  121  115  118  116   122 #>  [5642,]  106  115  115  122  124  121  115  118  116   122 #>  [5643,]  106  115  115  122  124  121  115  118  116   122 #>  [5644,]  106  115  115  122  124  121  115  118  116   122 #>  [5645,]  106  115  115  122  124  121  115  118  116   122 #>  [5646,]  106  115  115  122  124  121  115  118  116   122 #>  [5647,]  106  115  115  122  124  121  115  118  116   122 #>  [5648,]  106  115  115  122  124  121  115  118  116   122 #>  [5649,]  106  115  115  122  124  121  115  118  116   122 #>  [5650,]  106  115  115  122  124  121  115  118  116   122 #>  [5651,]  106  115  115  122  124  121  115  118  116   122 #>  [5652,]  106  115  115  122  124  121  115  118  116   122 #>  [5653,]  106  115  115  122  124  121  115  118  116   122 #>  [5654,]  106  115  115  122  124  121  115  118  116   122 #>  [5655,]  106  115  115  122  124  121  115  118  116   122 #>  [5656,]  106  115  115  122  124  121  115  118  116   122 #>  [5657,]  106  115  115  122  124  121  115  118  116   122 #>  [5658,]  106  115  115  122  124  121  115  118  116   122 #>  [5659,]  106  115  115  122  124  121  115  118  116   122 #>  [5660,]  107  116  116  123  125  122  116  119  117   123 #>  [5661,]  106  115  115  122  124  121  115  118  116   122 #>  [5662,]  106  115  115  122  124  121  115  118  116   122 #>  [5663,]  106  115  115  122  124  121  115  118  116   122 #>  [5664,]  106  115  115  122  124  121  115  118  116   122 #>  [5665,]  107  116  116  123  125  122  116  119  117   123 #>  [5666,]  106  115  115  122  124  121  115  118  116   122 #>  [5667,]  106  115  115  122  124  121  115  118  116   122 #>  [5668,]  106  115  115  122  124  121  115  118  116   122 #>  [5669,]  106  115  115  122  124  121  115  118  116   122 #>  [5670,]  107  116  116  123  125  122  116  119  117   123 #>  [5671,]  106  115  115  122  124  121  115  118  116   122 #>  [5672,]  106  115  115  122  124  121  115  118  116   122 #>  [5673,]  107  116  116  123  125  122  116  119  117   123 #>  [5674,]  106  115  115  122  124  121  115  118  116   122 #>  [5675,]  106  115  115  122  124  121  115  118  116   122 #>  [5676,]  106  115  115  122  124  121  115  118  116   122 #>  [5677,]  106  115  115  122  124  121  115  118  116   122 #>  [5678,]  106  115  115  122  124  121  115  118  116   122 #>  [5679,]  106  115  115  122  124  121  115  118  116   122 #>  [5680,]  106  115  115  122  124  121  115  118  116   122 #>  [5681,]  106  115  115  122  124  121  115  118  116   122 #>  [5682,]  106  115  115  122  124  121  115  118  116   122 #>  [5683,]  106  115  115  122  124  121  115  118  116   122 #>  [5684,]  106  115  115  122  124  121  115  118  116   122 #>  [5685,]  106  115  115  122  124  121  115  118  116   122 #>  [5686,]  106  115  115  122  124  121  115  118  116   122 #>  [5687,]  106  115  115  122  124  121  115  118  116   122 #>  [5688,]  106  115  115  122  124  121  115  118  116   122 #>  [5689,]  106  115  115  122  124  121  115  118  116   122 #>  [5690,]  106  115  115  122  124  121  115  118  116   122 #>  [5691,]  106  115  115  122  124  121  115  118  116   122 #>  [5692,]  106  115  115  122  124  121  115  118  116   122 #>  [5693,]  107  116  116  123  125  122  116  119  117   123 #>  [5694,]  106  115  115  122  124  121  115  118  116   122 #>  [5695,]  106  115  115  122  124  121  115  118  116   122 #>  [5696,]  106  115  115  122  124  121  115  118  116   122 #>  [5697,]  106  115  115  122  124  121  115  118  116   122 #>  [5698,]  107  116  116  123  125  122  116  119  117   123 #>  [5699,]  106  115  115  122  124  121  115  118  116   122 #>  [5700,]  106  115  115  122  124  121  115  118  116   122 #>  [5701,]  109  117  118  125  127  124  118  121  119   125 #>  [5702,]  109  117  118  125  127  124  118  121  119   125 #>  [5703,]  108  117  117  124  126  123  117  120  118   124 #>  [5704,]  108  117  118  125  127  124  118  121  119   125 #>  [5705,]  108  117  118  125  127  124  118  121  119   125 #>  [5706,]  109  117  118  125  127  124  118  121  119   125 #>  [5707,]  108  117  117  124  126  123  117  120  118   124 #>  [5708,]  108  117  118  125  127  124  118  121  119   125 #>  [5709,]  108  117  118  125  127  124  118  121  119   125 #>  [5710,]  108  117  118  125  127  124  118  121  119   125 #>  [5711,]  108  117  118  125  127  124  118  121  119   125 #>  [5712,]  108  117  118  125  127  124  118  121  119   125 #>  [5713,]  109  117  117  124  126  123  117  120  118   124 #>  [5714,]  109  117  118  125  127  124  118  121  119   125 #>  [5715,]  109  117  118  125  127  124  118  121  119   125 #>  [5716,]  109  117  117  124  126  123  117  120  118   124 #>  [5717,]  109  117  118  125  127  124  118  121  119   125 #>  [5718,]  108  117  118  125  127  124  118  121  119   125 #>  [5719,]  108  117  118  125  127  124  118  121  119   125 #>  [5720,]  108  117  118  125  127  124  118  121  119   125 #>  [5721,]  109  117  117  124  126  123  117  120  118   124 #>  [5722,]  109  117  118  125  127  124  118  121  119   125 #>  [5723,]  108  117  117  124  126  123  117  120  118   124 #>  [5724,]  108  117  118  125  127  124  118  121  119   125 #>  [5725,]  108  117  118  125  127  124  118  121  119   125 #>  [5726,]  109  117  118  125  127  124  118  121  119   125 #>  [5727,]  109  117  118  125  127  124  118  121  119   125 #>  [5728,]  108  117  118  125  127  124  118  121  119   125 #>  [5729,]  109  117  118  125  127  124  118  121  119   125 #>  [5730,]  108  117  117  124  126  123  117  120  118   124 #>  [5731,]  108  117  117  124  126  123  117  120  118   124 #>  [5732,]  108  117  118  125  127  124  118  121  119   125 #>  [5733,]  109  117  118  125  127  124  118  121  119   125 #>  [5734,]  108  117  118  125  127  124  118  121  119   125 #>  [5735,]  109  117  118  125  127  124  118  121  119   125 #>  [5736,]  108  117  118  125  127  124  118  121  119   125 #>  [5737,]  109  117  118  125  127  124  118  121  119   125 #>  [5738,]  108  117  118  125  127  124  118  121  119   125 #>  [5739,]  108  117  117  124  126  123  117  120  118   124 #>  [5740,]  108  117  117  124  126  123  117  120  118   124 #>  [5741,]  109  117  118  125  127  124  118  121  119   125 #>  [5742,]  108  117  118  125  127  124  118  121  119   125 #>  [5743,]  108  117  118  125  127  124  118  121  119   125 #>  [5744,]  109  117  118  125  127  124  118  121  119   125 #>  [5745,]  108  117  118  125  127  124  118  121  119   125 #>  [5746,]  108  117  118  125  127  124  118  121  119   125 #>  [5747,]  108  117  117  124  126  123  117  120  118   124 #>  [5748,]  108  117  118  125  127  124  118  121  119   125 #>  [5749,]  108  117  117  124  126  123  117  120  118   124 #>  [5750,]  109  117  118  125  127  124  118  121  119   125 #>  [5751,]  108  117  118  125  127  124  118  121  119   125 #>  [5752,]  109  117  118  125  127  124  118  121  119   125 #>  [5753,]  108  117  118  125  127  124  118  121  119   125 #>  [5754,]  108  117  117  124  126  123  117  120  118   124 #>  [5755,]  108  117  118  125  127  124  118  121  119   125 #>  [5756,]  108  117  118  125  127  124  118  121  119   125 #>  [5757,]  108  117  118  125  127  124  118  121  119   125 #>  [5758,]  109  117  118  125  127  124  118  121  119   125 #>  [5759,]  109  117  118  125  127  124  118  121  119   125 #>  [5760,]  108  117  118  125  127  124  118  121  119   125 #>  [5761,]  109  117  118  125  127  124  118  121  119   125 #>  [5762,]  108  117  117  124  126  123  117  120  118   124 #>  [5763,]  108  117  118  125  127  124  118  121  119   125 #>  [5764,]  108  117  118  125  127  124  118  121  119   125 #>  [5765,]  108  117  118  125  127  124  118  121  119   125 #>  [5766,]  108  117  118  125  127  124  118  121  119   125 #>  [5767,]  108  117  118  125  127  124  118  121  119   125 #>  [5768,]  109  117  118  125  127  124  118  121  119   125 #>  [5769,]  108  117  118  125  127  124  118  121  119   125 #>  [5770,]  109  117  117  124  126  123  117  120  118   124 #>  [5771,]  109  117  118  125  127  124  118  121  119   125 #>  [5772,]  108  117  118  125  127  124  118  121  119   125 #>  [5773,]  109  117  118  125  127  124  118  121  119   125 #>  [5774,]  108  117  118  125  127  124  118  121  119   125 #>  [5775,]  108  117  118  125  127  124  118  121  119   125 #>  [5776,]  109  117  118  125  127  124  118  121  119   125 #>  [5777,]  109  117  117  124  126  123  117  120  118   124 #>  [5778,]  108  117  118  125  127  124  118  121  119   125 #>  [5779,]  109  117  117  124  126  123  117  120  118   124 #>  [5780,]  108  117  117  124  126  123  117  120  118   124 #>  [5781,]  109  117  118  125  127  124  118  121  119   125 #>  [5782,]  108  117  118  125  127  124  118  121  119   125 #>  [5783,]  109  117  117  124  126  123  117  120  118   124 #>  [5784,]  108  117  118  125  127  124  118  121  119   125 #>  [5785,]  108  117  118  125  127  124  118  121  119   125 #>  [5786,]  109  117  118  125  127  124  118  121  119   125 #>  [5787,]  108  117  118  125  127  124  118  121  119   125 #>  [5788,]  108  117  118  125  127  124  118  121  119   125 #>  [5789,]  108  117  118  125  127  124  118  121  119   125 #>  [5790,]  109  117  118  125  127  124  118  121  119   125 #>  [5791,]  108  117  118  125  127  124  118  121  119   125 #>  [5792,]  108  117  118  125  127  124  118  121  119   125 #>  [5793,]  109  117  118  125  127  124  118  121  119   125 #>  [5794,]  109  117  118  125  127  124  118  121  119   125 #>  [5795,]  108  117  117  124  126  123  117  120  118   124 #>  [5796,]  109  117  118  125  127  124  118  121  119   125 #>  [5797,]  108  117  118  125  127  124  118  121  119   125 #>  [5798,]  108  117  117  124  126  123  117  120  118   124 #>  [5799,]  109  117  118  125  127  124  118  121  119   125 #>  [5800,]  109  117  118  125  127  124  118  121  119   125 #>  [5801,]  110  119  120  127  129  126  120  123  122   127 #>  [5802,]  110  119  120  127  129  126  120  123  121   129 #>  [5803,]  110  118  119  126  128  125  119  122  120   126 #>  [5804,]  110  119  120  127  129  126  120  123  122   127 #>  [5805,]  110  119  120  127  129  126  120  123  121   128 #>  [5806,]  110  119  120  127  129  126  120  123  121   129 #>  [5807,]  110  118  119  126  128  125  119  122  120   126 #>  [5808,]  110  118  119  126  128  125  119  122  120   126 #>  [5809,]  110  119  120  127  129  126  120  123  122   127 #>  [5810,]  110  119  120  127  129  126  120  123  122   127 #>  [5811,]  110  119  120  127  129  126  120  123  121   129 #>  [5812,]  110  119  120  127  129  126  120  123  121   129 #>  [5813,]  110  118  119  126  128  125  119  122  120   126 #>  [5814,]  110  119  120  127  129  126  120  123  121   129 #>  [5815,]  110  119  120  127  129  126  120  123  122   127 #>  [5816,]  110  118  119  126  128  125  119  122  120   126 #>  [5817,]  110  118  119  126  128  125  119  122  120   126 #>  [5818,]  110  119  120  127  129  126  120  123  122   127 #>  [5819,]  110  119  120  127  129  126  120  123  121   129 #>  [5820,]  110  118  119  126  128  125  119  122  120   126 #>  [5821,]  110  119  120  127  129  126  120  123  122   127 #>  [5822,]  110  118  119  126  128  125  119  122  120   126 #>  [5823,]  110  119  120  127  129  126  120  123  122   127 #>  [5824,]  110  118  119  126  128  125  119  122  120   126 #>  [5825,]  110  118  119  126  128  125  119  122  120   126 #>  [5826,]  110  119  120  127  129  126  120  123  121   129 #>  [5827,]  110  119  120  127  129  126  120  123  122   127 #>  [5828,]  110  119  120  127  129  126  120  123  122   127 #>  [5829,]  110  119  120  127  129  126  120  123  121   129 #>  [5830,]  110  119  120  127  129  126  120  123  121   128 #>  [5831,]  110  119  120  127  129  126  120  123  121   128 #>  [5832,]  110  119  120  127  129  126  120  123  121   128 #>  [5833,]  110  119  120  127  129  126  120  123  121   129 #>  [5834,]  110  119  120  127  129  126  120  123  121   128 #>  [5835,]  110  119  120  127  129  126  120  123  121   129 #>  [5836,]  110  119  120  127  129  126  120  123  121   129 #>  [5837,]  110  119  120  127  129  126  120  123  122   127 #>  [5838,]  110  119  120  127  129  126  120  123  121   129 #>  [5839,]  110  118  119  126  128  125  119  122  120   126 #>  [5840,]  110  118  119  126  128  125  119  122  120   126 #>  [5841,]  110  119  120  127  129  126  120  123  121   129 #>  [5842,]  110  119  120  127  129  126  120  123  121   128 #>  [5843,]  110  118  119  126  128  125  119  122  120   126 #>  [5844,]  110  118  119  126  128  125  119  122  120   126 #>  [5845,]  110  118  119  126  128  125  119  122  120   126 #>  [5846,]  110  118  119  126  128  125  119  122  120   126 #>  [5847,]  110  118  119  126  128  125  119  122  120   126 #>  [5848,]  110  119  120  127  129  126  120  123  121   128 #>  [5849,]  110  118  119  126  128  125  119  122  120   126 #>  [5850,]  110  118  119  126  128  125  119  122  120   126 #>  [5851,]  110  119  120  127  129  126  120  123  121   128 #>  [5852,]  110  119  120  127  129  126  120  123  121   129 #>  [5853,]  110  118  119  126  128  125  119  122  120   126 #>  [5854,]  110  118  119  126  128  125  119  122  120   126 #>  [5855,]  110  118  119  126  128  125  119  122  120   126 #>  [5856,]  110  118  119  126  128  125  119  122  120   126 #>  [5857,]  110  119  120  127  129  126  120  123  121   129 #>  [5858,]  110  119  120  127  129  126  120  123  121   129 #>  [5859,]  110  118  119  126  128  125  119  122  120   126 #>  [5860,]  110  119  120  127  129  126  120  123  121   128 #>  [5861,]  110  119  120  127  129  126  120  123  122   127 #>  [5862,]  110  119  120  127  129  126  120  123  121   128 #>  [5863,]  110  118  119  126  128  125  119  122  120   126 #>  [5864,]  110  119  120  127  129  126  120  123  122   127 #>  [5865,]  110  118  119  126  128  125  119  122  120   126 #>  [5866,]  110  118  119  126  128  125  119  122  120   126 #>  [5867,]  110  119  120  127  129  126  120  123  121   128 #>  [5868,]  110  119  120  127  129  126  120  123  121   129 #>  [5869,]  110  119  120  127  129  126  120  123  121   129 #>  [5870,]  110  118  119  126  128  125  119  122  120   126 #>  [5871,]  110  119  120  127  129  126  120  123  122   127 #>  [5872,]  110  118  119  126  128  125  119  122  120   126 #>  [5873,]  110  119  120  127  129  126  120  123  122   127 #>  [5874,]  110  119  120  127  129  126  120  123  122   127 #>  [5875,]  110  119  120  127  129  126  120  123  122   127 #>  [5876,]  110  119  120  127  129  126  120  123  122   127 #>  [5877,]  110  118  119  126  128  125  119  122  120   126 #>  [5878,]  110  118  119  126  128  125  119  122  120   126 #>  [5879,]  110  118  119  126  128  125  119  122  120   126 #>  [5880,]  110  119  120  127  129  126  120  123  121   129 #>  [5881,]  110  119  120  127  129  126  120  123  121   129 #>  [5882,]  110  119  120  127  129  126  120  123  122   127 #>  [5883,]  110  119  120  127  129  126  120  123  121   129 #>  [5884,]  110  118  119  126  128  125  119  122  120   126 #>  [5885,]  110  119  120  127  129  126  120  123  121   128 #>  [5886,]  110  118  119  126  128  125  119  122  120   126 #>  [5887,]  110  119  120  127  129  126  120  123  122   127 #>  [5888,]  110  119  120  127  129  126  120  123  122   127 #>  [5889,]  110  118  119  126  128  125  119  122  120   126 #>  [5890,]  110  118  119  126  128  125  119  122  120   126 #>  [5891,]  110  119  120  127  129  126  120  123  121   128 #>  [5892,]  110  119  120  127  129  126  120  123  121   129 #>  [5893,]  110  119  120  127  129  126  120  123  121   129 #>  [5894,]  110  118  119  126  128  125  119  122  120   126 #>  [5895,]  110  119  120  127  129  126  120  123  122   127 #>  [5896,]  110  119  120  127  129  126  120  123  122   127 #>  [5897,]  110  119  120  127  129  126  120  123  121   129 #>  [5898,]  110  118  119  126  128  125  119  122  120   126 #>  [5899,]  110  119  120  127  129  126  120  123  121   129 #>  [5900,]  110  118  119  126  128  125  119  122  120   126 #>  [5901,]  111  120  121  128  130  127  121  124  123   130 #>  [5902,]  111  120  121  128  130  127  121  124  123   130 #>  [5903,]  111  120  121  128  130  127  121  124  123   130 #>  [5904,]  111  120  121  128  130  127  121  124  123   130 #>  [5905,]  111  120  121  128  130  127  121  124  123   130 #>  [5906,]  111  120  121  128  130  127  121  124  123   130 #>  [5907,]  111  120  121  128  130  127  121  124  123   130 #>  [5908,]  111  120  121  128  130  127  121  124  123   130 #>  [5909,]  111  120  121  128  130  127  121  124  123   130 #>  [5910,]  111  120  121  128  130  127  121  124  123   130 #>  [5911,]  111  120  121  128  130  127  121  124  123   130 #>  [5912,]  111  120  121  128  130  127  121  124  123   130 #>  [5913,]  111  120  121  128  130  127  121  124  123   130 #>  [5914,]  111  120  121  128  130  127  121  124  123   130 #>  [5915,]  111  120  121  128  130  127  121  124  123   130 #>  [5916,]  111  120  121  128  130  127  121  124  123   130 #>  [5917,]  111  120  121  128  130  127  121  124  123   130 #>  [5918,]  111  120  121  128  130  127  121  124  123   130 #>  [5919,]  112  121  122  129  131  128  122  125  124   131 #>  [5920,]  112  121  122  129  131  128  122  125  124   131 #>  [5921,]  111  120  121  128  130  127  121  124  123   130 #>  [5922,]  112  121  122  129  131  128  122  125  124   131 #>  [5923,]  111  120  121  128  130  127  121  124  123   130 #>  [5924,]  111  120  121  128  130  127  121  124  123   130 #>  [5925,]  111  120  121  128  130  127  121  124  123   130 #>  [5926,]  111  120  121  128  130  127  121  124  123   130 #>  [5927,]  112  121  122  129  131  128  122  125  124   131 #>  [5928,]  111  120  121  128  130  127  121  124  123   130 #>  [5929,]  112  121  122  129  131  128  122  125  124   131 #>  [5930,]  111  120  121  128  130  127  121  124  123   130 #>  [5931,]  111  120  121  128  130  127  121  124  123   130 #>  [5932,]  111  120  121  128  130  127  121  124  123   130 #>  [5933,]  111  120  121  128  130  127  121  124  123   130 #>  [5934,]  111  120  121  128  130  127  121  124  123   130 #>  [5935,]  111  120  121  128  130  127  121  124  123   130 #>  [5936,]  112  121  122  129  131  128  122  125  124   131 #>  [5937,]  111  120  121  128  130  127  121  124  123   130 #>  [5938,]  111  120  121  128  130  127  121  124  123   130 #>  [5939,]  111  120  121  128  130  127  121  124  123   130 #>  [5940,]  111  120  121  128  130  127  121  124  123   130 #>  [5941,]  111  120  121  128  130  127  121  124  123   130 #>  [5942,]  111  120  121  128  130  127  121  124  123   130 #>  [5943,]  111  120  121  128  130  127  121  124  123   130 #>  [5944,]  111  120  121  128  130  127  121  124  123   130 #>  [5945,]  111  120  121  128  130  127  121  124  123   130 #>  [5946,]  111  120  121  128  130  127  121  124  123   130 #>  [5947,]  111  120  121  128  130  127  121  124  123   130 #>  [5948,]  111  120  121  128  130  127  121  124  123   130 #>  [5949,]  111  120  121  128  130  127  121  124  123   130 #>  [5950,]  111  120  121  128  130  127  121  124  123   130 #>  [5951,]  111  120  121  128  130  127  121  124  123   130 #>  [5952,]  111  120  121  128  130  127  121  124  123   130 #>  [5953,]  111  120  121  128  130  127  121  124  123   130 #>  [5954,]  111  120  121  128  130  127  121  124  123   130 #>  [5955,]  112  121  122  129  131  128  122  125  124   131 #>  [5956,]  111  120  121  128  130  127  121  124  123   130 #>  [5957,]  111  120  121  128  130  127  121  124  123   130 #>  [5958,]  112  121  122  129  131  128  122  125  124   131 #>  [5959,]  111  120  121  128  130  127  121  124  123   130 #>  [5960,]  111  120  121  128  130  127  121  124  123   130 #>  [5961,]  111  120  121  128  130  127  121  124  123   130 #>  [5962,]  111  120  121  128  130  127  121  124  123   130 #>  [5963,]  111  120  121  128  130  127  121  124  123   130 #>  [5964,]  112  121  122  129  131  128  122  125  124   131 #>  [5965,]  111  120  121  128  130  127  121  124  123   130 #>  [5966,]  112  121  122  129  131  128  122  125  124   131 #>  [5967,]  111  120  121  128  130  127  121  124  123   130 #>  [5968,]  111  120  121  128  130  127  121  124  123   130 #>  [5969,]  111  120  121  128  130  127  121  124  123   130 #>  [5970,]  111  120  121  128  130  127  121  124  123   130 #>  [5971,]  111  120  121  128  130  127  121  124  123   130 #>  [5972,]  111  120  121  128  130  127  121  124  123   130 #>  [5973,]  111  120  121  128  130  127  121  124  123   130 #>  [5974,]  111  120  121  128  130  127  121  124  123   130 #>  [5975,]  111  120  121  128  130  127  121  124  123   130 #>  [5976,]  111  120  121  128  130  127  121  124  123   130 #>  [5977,]  112  121  122  129  131  128  122  125  124   131 #>  [5978,]  111  120  121  128  130  127  121  124  123   130 #>  [5979,]  111  120  121  128  130  127  121  124  123   130 #>  [5980,]  111  120  121  128  130  127  121  124  123   130 #>  [5981,]  112  121  122  129  131  128  122  125  124   131 #>  [5982,]  111  120  121  128  130  127  121  124  123   130 #>  [5983,]  112  121  122  129  131  128  122  125  124   131 #>  [5984,]  111  120  121  128  130  127  121  124  123   130 #>  [5985,]  111  120  121  128  130  127  121  124  123   130 #>  [5986,]  111  120  121  128  130  127  121  124  123   130 #>  [5987,]  112  121  122  129  131  128  122  125  124   131 #>  [5988,]  111  120  121  128  130  127  121  124  123   130 #>  [5989,]  111  120  121  128  130  127  121  124  123   130 #>  [5990,]  111  120  121  128  130  127  121  124  123   130 #>  [5991,]  111  120  121  128  130  127  121  124  123   130 #>  [5992,]  111  120  121  128  130  127  121  124  123   130 #>  [5993,]  111  120  121  128  130  127  121  124  123   130 #>  [5994,]  111  120  121  128  130  127  121  124  123   130 #>  [5995,]  111  120  121  128  130  127  121  124  123   130 #>  [5996,]  111  120  121  128  130  127  121  124  123   130 #>  [5997,]  112  121  122  129  131  128  122  125  124   131 #>  [5998,]  111  120  121  128  130  127  121  124  123   130 #>  [5999,]  111  120  121  128  130  127  121  124  123   130 #>  [6000,]  112  121  122  129  131  128  122  125  124   131 #>  [6001,]  114  123  124  131  133  130  124  127  126   133 #>  [6002,]  114  123  124  131  133  130  124  127  126   133 #>  [6003,]  113  122  123  130  132  129  123  126  125   132 #>  [6004,]  113  122  123  130  132  129  123  126  125   132 #>  [6005,]  114  123  124  131  133  130  124  127  126   133 #>  [6006,]  114  123  124  131  133  130  124  127  126   133 #>  [6007,]  113  122  123  130  132  129  123  126  125   132 #>  [6008,]  113  122  123  130  132  129  123  126  125   132 #>  [6009,]  114  123  124  131  133  130  124  127  126   133 #>  [6010,]  113  122  123  130  132  129  123  126  125   132 #>  [6011,]  114  123  124  131  133  130  124  127  126   133 #>  [6012,]  113  122  123  130  132  129  123  126  125   132 #>  [6013,]  114  123  124  131  133  130  124  127  126   133 #>  [6014,]  113  122  123  130  132  129  123  126  125   132 #>  [6015,]  114  123  124  131  133  130  124  127  126   133 #>  [6016,]  113  122  123  130  132  129  123  126  125   132 #>  [6017,]  114  123  124  131  133  130  124  127  126   133 #>  [6018,]  114  123  124  131  133  130  124  127  126   133 #>  [6019,]  114  123  124  131  133  130  124  127  126   133 #>  [6020,]  114  123  124  131  133  130  124  127  126   133 #>  [6021,]  114  123  124  131  133  130  124  127  126   133 #>  [6022,]  114  123  124  131  133  130  124  127  126   133 #>  [6023,]  113  122  123  130  132  129  123  126  125   132 #>  [6024,]  114  123  124  131  133  130  124  127  126   133 #>  [6025,]  113  122  123  130  132  129  123  126  125   132 #>  [6026,]  113  122  123  130  132  129  123  126  125   132 #>  [6027,]  114  123  124  131  133  130  124  127  126   133 #>  [6028,]  114  123  124  131  133  130  124  127  126   133 #>  [6029,]  114  123  124  131  133  130  124  127  126   133 #>  [6030,]  114  123  124  131  133  130  124  127  126   133 #>  [6031,]  113  122  123  130  132  129  123  126  125   132 #>  [6032,]  113  122  123  130  132  129  123  126  125   132 #>  [6033,]  114  123  124  131  133  130  124  127  126   133 #>  [6034,]  114  123  124  131  133  130  124  127  126   133 #>  [6035,]  113  122  123  130  132  129  123  126  125   132 #>  [6036,]  114  123  124  131  133  130  124  127  126   133 #>  [6037,]  113  122  123  130  132  129  123  126  125   132 #>  [6038,]  114  123  124  131  133  130  124  127  126   133 #>  [6039,]  114  123  124  131  133  130  124  127  126   133 #>  [6040,]  113  122  123  130  132  129  123  126  125   132 #>  [6041,]  114  123  124  131  133  130  124  127  126   133 #>  [6042,]  114  123  124  131  133  130  124  127  126   133 #>  [6043,]  114  123  124  131  133  130  124  127  126   133 #>  [6044,]  113  122  123  130  132  129  123  126  125   132 #>  [6045,]  113  122  123  130  132  129  123  126  125   132 #>  [6046,]  113  122  123  130  132  129  123  126  125   132 #>  [6047,]  113  122  123  130  132  129  123  126  125   132 #>  [6048,]  114  123  124  131  133  130  124  127  126   133 #>  [6049,]  114  123  124  131  133  130  124  127  126   133 #>  [6050,]  114  123  124  131  133  130  124  127  126   133 #>  [6051,]  114  123  124  131  133  130  124  127  126   133 #>  [6052,]  113  122  123  130  132  129  123  126  125   132 #>  [6053,]  114  123  124  131  133  130  124  127  126   133 #>  [6054,]  114  123  124  131  133  130  124  127  126   133 #>  [6055,]  113  122  123  130  132  129  123  126  125   132 #>  [6056,]  114  123  124  131  133  130  124  127  126   133 #>  [6057,]  113  122  123  130  132  129  123  126  125   132 #>  [6058,]  114  123  124  131  133  130  124  127  126   133 #>  [6059,]  113  122  123  130  132  129  123  126  125   132 #>  [6060,]  113  122  123  130  132  129  123  126  125   132 #>  [6061,]  114  123  124  131  133  130  124  127  126   133 #>  [6062,]  114  123  124  131  133  130  124  127  126   133 #>  [6063,]  114  123  124  131  133  130  124  127  126   133 #>  [6064,]  114  123  124  131  133  130  124  127  126   133 #>  [6065,]  114  123  124  131  133  130  124  127  126   133 #>  [6066,]  114  123  124  131  133  130  124  127  126   133 #>  [6067,]  113  122  123  130  132  129  123  126  125   132 #>  [6068,]  113  122  123  130  132  129  123  126  125   132 #>  [6069,]  114  123  124  131  133  130  124  127  126   133 #>  [6070,]  114  123  124  131  133  130  124  127  126   133 #>  [6071,]  114  123  124  131  133  130  124  127  126   133 #>  [6072,]  113  122  123  130  132  129  123  126  125   132 #>  [6073,]  114  123  124  131  133  130  124  127  126   133 #>  [6074,]  113  122  123  130  132  129  123  126  125   132 #>  [6075,]  113  122  123  130  132  129  123  126  125   132 #>  [6076,]  113  122  123  130  132  129  123  126  125   132 #>  [6077,]  114  123  124  131  133  130  124  127  126   133 #>  [6078,]  113  122  123  130  132  129  123  126  125   132 #>  [6079,]  114  123  124  131  133  130  124  127  126   133 #>  [6080,]  113  122  123  130  132  129  123  126  125   132 #>  [6081,]  114  123  124  131  133  130  124  127  126   133 #>  [6082,]  114  123  124  131  133  130  124  127  126   133 #>  [6083,]  114  123  124  131  133  130  124  127  126   133 #>  [6084,]  114  123  124  131  133  130  124  127  126   133 #>  [6085,]  114  123  124  131  133  130  124  127  126   133 #>  [6086,]  113  122  123  130  132  129  123  126  125   132 #>  [6087,]  114  123  124  131  133  130  124  127  126   133 #>  [6088,]  113  122  123  130  132  129  123  126  125   132 #>  [6089,]  114  123  124  131  133  130  124  127  126   133 #>  [6090,]  114  123  124  131  133  130  124  127  126   133 #>  [6091,]  114  123  124  131  133  130  124  127  126   133 #>  [6092,]  113  122  123  130  132  129  123  126  125   132 #>  [6093,]  114  123  124  131  133  130  124  127  126   133 #>  [6094,]  114  123  124  131  133  130  124  127  126   133 #>  [6095,]  113  122  123  130  132  129  123  126  125   132 #>  [6096,]  113  122  123  130  132  129  123  126  125   132 #>  [6097,]  113  122  123  130  132  129  123  126  125   132 #>  [6098,]  113  122  123  130  132  129  123  126  125   132 #>  [6099,]  114  123  124  131  133  130  124  127  126   133 #>  [6100,]  114  123  124  131  133  130  124  127  126   133 #>  [6101,]  115  124  125  132  134  131  125  128  127   134 #>  [6102,]  115  124  125  132  134  131  125  128  127   134 #>  [6103,]  115  124  125  132  134  131  125  128  127   134 #>  [6104,]  115  124  125  132  134  131  125  128  127   134 #>  [6105,]  115  124  125  132  134  131  125  128  127   134 #>  [6106,]  115  124  125  132  134  131  125  128  127   134 #>  [6107,]  115  124  125  132  134  131  125  128  127   134 #>  [6108,]  116  125  126  133  135  132  126  129  128   135 #>  [6109,]  116  125  126  133  135  132  126  129  128   135 #>  [6110,]  115  124  125  132  134  131  125  128  127   134 #>  [6111,]  115  124  125  132  134  131  125  128  127   134 #>  [6112,]  115  124  125  132  134  131  125  128  127   134 #>  [6113,]  115  124  125  132  134  131  125  128  127   134 #>  [6114,]  115  124  125  132  134  131  125  128  127   134 #>  [6115,]  115  124  125  132  134  131  125  128  127   134 #>  [6116,]  115  124  125  132  134  131  125  128  127   134 #>  [6117,]  115  124  125  132  134  131  125  128  127   134 #>  [6118,]  115  124  125  132  134  131  125  128  127   134 #>  [6119,]  115  124  125  132  134  131  125  128  127   134 #>  [6120,]  115  124  125  132  134  131  125  128  127   134 #>  [6121,]  115  124  125  132  134  131  125  128  127   134 #>  [6122,]  115  124  125  132  134  131  125  128  127   134 #>  [6123,]  115  124  125  132  134  131  125  128  127   134 #>  [6124,]  115  124  125  132  134  131  125  128  127   134 #>  [6125,]  115  124  125  132  134  131  125  128  127   134 #>  [6126,]  116  125  126  133  135  132  126  129  128   135 #>  [6127,]  115  124  125  132  134  131  125  128  127   134 #>  [6128,]  115  124  125  132  134  131  125  128  127   134 #>  [6129,]  115  124  125  132  134  131  125  128  127   134 #>  [6130,]  115  124  125  132  134  131  125  128  127   134 #>  [6131,]  115  124  125  132  134  131  125  128  127   134 #>  [6132,]  115  124  125  132  134  131  125  128  127   134 #>  [6133,]  115  124  125  132  134  131  125  128  127   134 #>  [6134,]  115  124  125  132  134  131  125  128  127   134 #>  [6135,]  115  124  125  132  134  131  125  128  127   134 #>  [6136,]  115  124  125  132  134  131  125  128  127   134 #>  [6137,]  115  124  125  132  134  131  125  128  127   134 #>  [6138,]  115  124  125  132  134  131  125  128  127   134 #>  [6139,]  115  124  125  132  134  131  125  128  127   134 #>  [6140,]  115  124  125  132  134  131  125  128  127   134 #>  [6141,]  115  124  125  132  134  131  125  128  127   134 #>  [6142,]  115  124  125  132  134  131  125  128  127   134 #>  [6143,]  115  124  125  132  134  131  125  128  127   134 #>  [6144,]  115  124  125  132  134  131  125  128  127   134 #>  [6145,]  115  124  125  132  134  131  125  128  127   134 #>  [6146,]  115  124  125  132  134  131  125  128  127   134 #>  [6147,]  115  124  125  132  134  131  125  128  127   134 #>  [6148,]  115  124  125  132  134  131  125  128  127   134 #>  [6149,]  115  124  125  132  134  131  125  128  127   134 #>  [6150,]  115  124  125  132  134  131  125  128  127   134 #>  [6151,]  115  124  125  132  134  131  125  128  127   134 #>  [6152,]  115  124  125  132  134  131  125  128  127   134 #>  [6153,]  115  124  125  132  134  131  125  128  127   134 #>  [6154,]  115  124  125  132  134  131  125  128  127   134 #>  [6155,]  115  124  125  132  134  131  125  128  127   134 #>  [6156,]  116  125  126  133  135  132  126  129  128   135 #>  [6157,]  115  124  125  132  134  131  125  128  127   134 #>  [6158,]  115  124  125  132  134  131  125  128  127   134 #>  [6159,]  115  124  125  132  134  131  125  128  127   134 #>  [6160,]  115  124  125  132  134  131  125  128  127   134 #>  [6161,]  116  125  126  133  135  132  126  129  128   135 #>  [6162,]  115  124  125  132  134  131  125  128  127   134 #>  [6163,]  115  124  125  132  134  131  125  128  127   134 #>  [6164,]  115  124  125  132  134  131  125  128  127   134 #>  [6165,]  115  124  125  132  134  131  125  128  127   134 #>  [6166,]  115  124  125  132  134  131  125  128  127   134 #>  [6167,]  115  124  125  132  134  131  125  128  127   134 #>  [6168,]  115  124  125  132  134  131  125  128  127   134 #>  [6169,]  115  124  125  132  134  131  125  128  127   134 #>  [6170,]  115  124  125  132  134  131  125  128  127   134 #>  [6171,]  115  124  125  132  134  131  125  128  127   134 #>  [6172,]  115  124  125  132  134  131  125  128  127   134 #>  [6173,]  115  124  125  132  134  131  125  128  127   134 #>  [6174,]  115  124  125  132  134  131  125  128  127   134 #>  [6175,]  115  124  125  132  134  131  125  128  127   134 #>  [6176,]  116  125  126  133  135  132  126  129  128   135 #>  [6177,]  115  124  125  132  134  131  125  128  127   134 #>  [6178,]  115  124  125  132  134  131  125  128  127   134 #>  [6179,]  115  124  125  132  134  131  125  128  127   134 #>  [6180,]  115  124  125  132  134  131  125  128  127   134 #>  [6181,]  115  124  125  132  134  131  125  128  127   134 #>  [6182,]  115  124  125  132  134  131  125  128  127   134 #>  [6183,]  115  124  125  132  134  131  125  128  127   134 #>  [6184,]  115  124  125  132  134  131  125  128  127   134 #>  [6185,]  115  124  125  132  134  131  125  128  127   134 #>  [6186,]  115  124  125  132  134  131  125  128  127   134 #>  [6187,]  115  124  125  132  134  131  125  128  127   134 #>  [6188,]  115  124  125  132  134  131  125  128  127   134 #>  [6189,]  115  124  125  132  134  131  125  128  127   134 #>  [6190,]  115  124  125  132  134  131  125  128  127   134 #>  [6191,]  115  124  125  132  134  131  125  128  127   134 #>  [6192,]  115  124  125  132  134  131  125  128  127   134 #>  [6193,]  115  124  125  132  134  131  125  128  127   134 #>  [6194,]  115  124  125  132  134  131  125  128  127   134 #>  [6195,]  115  124  125  132  134  131  125  128  127   134 #>  [6196,]  115  124  125  132  134  131  125  128  127   134 #>  [6197,]  115  124  125  132  134  131  125  128  127   134 #>  [6198,]  115  124  125  132  134  131  125  128  127   134 #>  [6199,]  115  124  125  132  134  131  125  128  127   134 #>  [6200,]  115  124  125  132  134  131  125  128  127   134 #>  [6201,]  118  127  128  135  136  133  127  130  129   136 #>  [6202,]  117  126  127  134  136  133  127  130  129   136 #>  [6203,]  117  126  127  134  136  133  127  130  129   136 #>  [6204,]  117  126  127  134  136  133  127  130  129   136 #>  [6205,]  117  126  127  134  136  133  127  130  129   136 #>  [6206,]  117  126  127  134  136  133  127  130  129   136 #>  [6207,]  117  126  127  134  136  133  127  130  129   136 #>  [6208,]  117  126  127  134  136  134  128  131  130   137 #>  [6209,]  118  127  128  135  136  134  128  131  130   137 #>  [6210,]  117  126  127  134  136  133  127  130  129   136 #>  [6211,]  118  127  128  135  136  133  127  130  129   136 #>  [6212,]  117  126  127  134  136  133  127  130  129   136 #>  [6213,]  118  127  128  135  136  133  127  130  129   136 #>  [6214,]  117  126  127  134  136  133  127  130  129   136 #>  [6215,]  117  126  127  134  136  133  127  130  129   136 #>  [6216,]  117  126  127  134  136  133  127  130  129   136 #>  [6217,]  118  127  128  135  136  133  127  130  129   136 #>  [6218,]  118  127  128  135  136  133  127  130  129   136 #>  [6219,]  117  126  127  134  136  133  127  130  129   136 #>  [6220,]  118  127  128  135  136  133  127  130  129   136 #>  [6221,]  117  126  127  134  136  133  127  130  129   136 #>  [6222,]  117  126  127  134  136  133  127  130  129   136 #>  [6223,]  117  126  127  134  136  133  127  130  129   136 #>  [6224,]  117  126  127  134  136  133  127  130  129   136 #>  [6225,]  117  126  127  134  136  133  127  130  129   136 #>  [6226,]  117  126  127  134  136  134  128  131  130   137 #>  [6227,]  118  127  128  135  136  133  127  130  129   136 #>  [6228,]  118  127  128  135  136  133  127  130  129   136 #>  [6229,]  118  127  128  135  136  133  127  130  129   136 #>  [6230,]  117  126  127  134  136  133  127  130  129   136 #>  [6231,]  117  126  127  134  136  133  127  130  129   136 #>  [6232,]  117  126  127  134  136  133  127  130  129   136 #>  [6233,]  118  127  128  135  136  133  127  130  129   136 #>  [6234,]  117  126  127  134  136  133  127  130  129   136 #>  [6235,]  117  126  127  134  136  133  127  130  129   136 #>  [6236,]  118  127  128  135  136  133  127  130  129   136 #>  [6237,]  117  126  127  134  136  133  127  130  129   136 #>  [6238,]  118  127  128  135  136  133  127  130  129   136 #>  [6239,]  118  127  128  135  136  133  127  130  129   136 #>  [6240,]  117  126  127  134  136  133  127  130  129   136 #>  [6241,]  117  126  127  134  136  133  127  130  129   136 #>  [6242,]  118  127  128  135  136  133  127  130  129   136 #>  [6243,]  117  126  127  134  136  134  128  131  130   137 #>  [6244,]  117  126  127  134  136  133  127  130  129   136 #>  [6245,]  117  126  127  134  136  133  127  130  129   136 #>  [6246,]  117  126  127  134  136  134  128  131  130   137 #>  [6247,]  117  126  127  134  136  133  127  130  129   136 #>  [6248,]  117  126  127  134  136  133  127  130  129   136 #>  [6249,]  117  126  127  134  136  133  127  130  129   136 #>  [6250,]  117  126  127  134  136  133  127  130  129   136 #>  [6251,]  118  127  128  135  136  133  127  130  129   136 #>  [6252,]  117  126  127  134  136  133  127  130  129   136 #>  [6253,]  118  127  128  135  136  133  127  130  129   136 #>  [6254,]  118  127  128  135  136  133  127  130  129   136 #>  [6255,]  117  126  127  134  136  133  127  130  129   136 #>  [6256,]  118  127  128  135  136  134  128  131  130   137 #>  [6257,]  117  126  127  134  136  133  127  130  129   136 #>  [6258,]  118  127  128  135  136  133  127  130  129   136 #>  [6259,]  117  126  127  134  136  133  127  130  129   136 #>  [6260,]  117  126  127  134  136  133  127  130  129   136 #>  [6261,]  117  126  127  134  136  134  128  131  130   137 #>  [6262,]  118  127  128  135  136  133  127  130  129   136 #>  [6263,]  117  126  127  134  136  133  127  130  129   136 #>  [6264,]  117  126  127  134  136  134  128  131  130   137 #>  [6265,]  118  127  128  135  136  133  127  130  129   136 #>  [6266,]  118  127  128  135  136  133  127  130  129   136 #>  [6267,]  117  126  127  134  136  133  127  130  129   136 #>  [6268,]  117  126  127  134  136  133  127  130  129   136 #>  [6269,]  117  126  127  134  136  133  127  130  129   136 #>  [6270,]  117  126  127  134  136  133  127  130  129   136 #>  [6271,]  117  126  127  134  136  133  127  130  129   136 #>  [6272,]  117  126  127  134  136  133  127  130  129   136 #>  [6273,]  117  126  127  134  136  133  127  130  129   136 #>  [6274,]  117  126  127  134  136  133  127  130  129   136 #>  [6275,]  117  126  127  134  136  133  127  130  129   136 #>  [6276,]  117  126  127  134  136  134  128  131  130   137 #>  [6277,]  118  127  128  135  136  133  127  130  129   136 #>  [6278,]  117  126  127  134  136  133  127  130  129   136 #>  [6279,]  118  127  128  135  136  133  127  130  129   136 #>  [6280,]  117  126  127  134  136  133  127  130  129   136 #>  [6281,]  117  126  127  134  136  133  127  130  129   136 #>  [6282,]  118  127  128  135  136  133  127  130  129   136 #>  [6283,]  118  127  128  135  136  133  127  130  129   136 #>  [6284,]  118  127  128  135  136  133  127  130  129   136 #>  [6285,]  118  127  128  135  136  133  127  130  129   136 #>  [6286,]  117  126  127  134  136  133  127  130  129   136 #>  [6287,]  118  127  128  135  136  133  127  130  129   136 #>  [6288,]  117  126  127  134  136  133  127  130  129   136 #>  [6289,]  118  127  128  135  136  133  127  130  129   136 #>  [6290,]  117  126  127  134  136  133  127  130  129   136 #>  [6291,]  118  127  128  135  136  133  127  130  129   136 #>  [6292,]  117  126  127  134  136  133  127  130  129   136 #>  [6293,]  118  127  128  135  136  133  127  130  129   136 #>  [6294,]  118  127  128  135  136  134  128  131  130   137 #>  [6295,]  117  126  127  134  136  133  127  130  129   136 #>  [6296,]  117  126  127  134  136  133  127  130  129   136 #>  [6297,]  117  126  127  134  136  133  127  130  129   136 #>  [6298,]  117  126  127  134  136  133  127  130  129   136 #>  [6299,]  117  126  127  134  136  133  127  130  129   136 #>  [6300,]  117  126  127  134  136  133  127  130  129   136 #>  [6301,]  120  129  130  137  137  136  130  133  132   139 #>  [6302,]  120  129  130  137  137  135  129  132  131   138 #>  [6303,]  120  129  130  137  137  135  129  132  131   138 #>  [6304,]  120  129  130  137  137  136  130  133  132   139 #>  [6305,]  120  129  130  137  137  136  130  133  132   139 #>  [6306,]  120  129  130  137  137  136  130  133  132   139 #>  [6307,]  119  128  129  136  137  135  129  132  131   138 #>  [6308,]  120  129  130  137  137  136  130  133  132   139 #>  [6309,]  120  129  130  137  137  136  130  133  132   139 #>  [6310,]  120  129  130  137  137  136  130  133  132   139 #>  [6311,]  120  129  130  137  137  136  130  133  132   139 #>  [6312,]  120  129  130  137  137  136  130  133  132   139 #>  [6313,]  120  129  130  137  137  135  129  132  131   138 #>  [6314,]  120  129  130  137  137  136  130  133  132   139 #>  [6315,]  120  129  130  137  137  136  130  133  132   139 #>  [6316,]  120  129  130  137  137  135  129  132  131   138 #>  [6317,]  120  129  130  137  137  136  130  133  132   139 #>  [6318,]  120  129  130  137  137  135  129  132  131   138 #>  [6319,]  120  129  130  137  137  135  129  132  131   138 #>  [6320,]  120  129  130  137  137  136  130  133  132   139 #>  [6321,]  119  128  129  136  137  135  129  132  131   138 #>  [6322,]  120  129  130  137  137  135  129  132  131   138 #>  [6323,]  119  128  129  136  137  135  129  132  131   138 #>  [6324,]  120  129  130  137  137  135  129  132  131   138 #>  [6325,]  120  129  130  137  137  136  130  133  132   139 #>  [6326,]  120  129  130  137  137  136  130  133  132   139 #>  [6327,]  120  129  130  137  137  136  130  133  132   139 #>  [6328,]  120  129  130  137  137  136  130  133  132   139 #>  [6329,]  120  129  130  137  137  136  130  133  132   139 #>  [6330,]  119  128  129  136  137  135  129  132  131   138 #>  [6331,]  120  129  130  137  137  135  129  132  131   138 #>  [6332,]  120  129  130  137  137  136  130  133  132   139 #>  [6333,]  120  129  130  137  137  136  130  133  132   139 #>  [6334,]  120  129  130  137  137  135  129  132  131   138 #>  [6335,]  120  129  130  137  137  135  129  132  131   138 #>  [6336,]  120  129  130  137  137  135  129  132  131   138 #>  [6337,]  120  129  130  137  137  135  129  132  131   138 #>  [6338,]  120  129  130  137  137  136  130  133  132   139 #>  [6339,]  119  128  129  136  137  135  129  132  131   138 #>  [6340,]  120  129  130  137  137  135  129  132  131   138 #>  [6341,]  120  129  130  137  137  136  130  133  132   139 #>  [6342,]  120  129  130  137  137  136  130  133  132   139 #>  [6343,]  120  129  130  137  137  136  130  133  132   139 #>  [6344,]  120  129  130  137  137  135  129  132  131   138 #>  [6345,]  120  129  130  137  137  136  130  133  132   139 #>  [6346,]  120  129  130  137  137  136  130  133  132   139 #>  [6347,]  120  129  130  137  137  135  129  132  131   138 #>  [6348,]  120  129  130  137  137  136  130  133  132   139 #>  [6349,]  119  128  129  136  137  135  129  132  131   138 #>  [6350,]  120  129  130  137  137  136  130  133  132   139 #>  [6351,]  120  129  130  137  137  136  130  133  132   139 #>  [6352,]  120  129  130  137  137  136  130  133  132   139 #>  [6353,]  120  129  130  137  137  136  130  133  132   139 #>  [6354,]  119  128  129  136  137  135  129  132  131   138 #>  [6355,]  120  129  130  137  137  136  130  133  132   139 #>  [6356,]  120  129  130  137  137  136  130  133  132   139 #>  [6357,]  120  129  130  137  137  136  130  133  132   139 #>  [6358,]  120  129  130  137  137  136  130  133  132   139 #>  [6359,]  120  129  130  137  137  136  130  133  132   139 #>  [6360,]  120  129  130  137  137  136  130  133  132   139 #>  [6361,]  120  129  130  137  137  136  130  133  132   139 #>  [6362,]  119  128  129  136  137  135  129  132  131   138 #>  [6363,]  120  129  130  137  137  136  130  133  132   139 #>  [6364,]  120  129  130  137  137  136  130  133  132   139 #>  [6365,]  120  129  130  137  137  136  130  133  132   139 #>  [6366,]  120  129  130  137  137  136  130  133  132   139 #>  [6367,]  120  129  130  137  137  136  130  133  132   139 #>  [6368,]  120  129  130  137  137  136  130  133  132   139 #>  [6369,]  120  129  130  137  137  136  130  133  132   139 #>  [6370,]  119  128  129  136  137  135  129  132  131   138 #>  [6371,]  120  129  130  137  137  136  130  133  132   139 #>  [6372,]  120  129  130  137  137  136  130  133  132   139 #>  [6373,]  120  129  130  137  137  136  130  133  132   139 #>  [6374,]  120  129  130  137  137  136  130  133  132   139 #>  [6375,]  120  129  130  137  137  136  130  133  132   139 #>  [6376,]  120  129  130  137  137  136  130  133  132   139 #>  [6377,]  120  129  130  137  137  135  129  132  131   138 #>  [6378,]  120  129  130  137  137  136  130  133  132   139 #>  [6379,]  120  129  130  137  137  135  129  132  131   138 #>  [6380,]  119  128  129  136  137  135  129  132  131   138 #>  [6381,]  120  129  130  137  137  136  130  133  132   139 #>  [6382,]  120  129  130  137  137  136  130  133  132   139 #>  [6383,]  119  128  129  136  137  135  129  132  131   138 #>  [6384,]  120  129  130  137  137  136  130  133  132   139 #>  [6385,]  120  129  130  137  137  136  130  133  132   139 #>  [6386,]  120  129  130  137  137  136  130  133  132   139 #>  [6387,]  120  129  130  137  137  136  130  133  132   139 #>  [6388,]  120  129  130  137  137  136  130  133  132   139 #>  [6389,]  120  129  130  137  137  136  130  133  132   139 #>  [6390,]  120  129  130  137  137  136  130  133  132   139 #>  [6391,]  120  129  130  137  137  136  130  133  132   139 #>  [6392,]  120  129  130  137  137  136  130  133  132   139 #>  [6393,]  120  129  130  137  137  135  129  132  131   138 #>  [6394,]  120  129  130  137  137  136  130  133  132   139 #>  [6395,]  119  128  129  136  137  135  129  132  131   138 #>  [6396,]  120  129  130  137  137  136  130  133  132   139 #>  [6397,]  120  129  130  137  137  136  130  133  132   139 #>  [6398,]  119  128  129  136  137  135  129  132  131   138 #>  [6399,]  120  129  130  137  137  136  130  133  132   139 #>  [6400,]  120  129  130  137  137  135  129  132  131   138 #>  [6401,]  121  131  132  139  139  138  132  136  135   142 #>  [6402,]  121  130  131  138  138  137  131  134  133   140 #>  [6403,]  121  131  132  139  139  138  132  135  134   141 #>  [6404,]  121  131  132  139  139  138  132  136  135   142 #>  [6405,]  121  131  132  139  139  138  132  136  135   142 #>  [6406,]  121  130  131  138  138  137  131  134  133   140 #>  [6407,]  121  131  132  139  139  138  132  135  134   141 #>  [6408,]  121  131  132  139  139  138  132  135  134   141 #>  [6409,]  121  131  132  139  139  138  132  136  135   142 #>  [6410,]  121  131  132  139  139  138  132  136  135   142 #>  [6411,]  121  130  131  138  138  137  131  134  133   140 #>  [6412,]  121  130  131  138  138  137  131  134  133   140 #>  [6413,]  121  131  132  139  139  138  132  135  134   141 #>  [6414,]  121  131  132  139  139  138  132  136  135   142 #>  [6415,]  121  130  131  138  138  137  131  134  133   140 #>  [6416,]  121  131  132  139  139  138  132  135  134   141 #>  [6417,]  121  130  131  138  138  137  131  134  133   140 #>  [6418,]  121  131  132  139  139  138  132  136  135   142 #>  [6419,]  121  130  131  138  138  137  131  134  133   140 #>  [6420,]  121  131  132  139  139  138  132  135  134   141 #>  [6421,]  121  131  132  139  139  138  132  136  135   142 #>  [6422,]  121  131  132  139  139  138  132  135  134   141 #>  [6423,]  121  130  131  138  138  137  131  134  133   140 #>  [6424,]  121  131  132  139  139  138  132  135  134   141 #>  [6425,]  121  131  132  139  139  138  132  135  134   141 #>  [6426,]  121  130  131  138  138  137  131  134  133   140 #>  [6427,]  121  131  132  139  139  138  132  136  135   142 #>  [6428,]  121  131  132  139  139  138  132  136  135   142 #>  [6429,]  121  130  131  138  138  137  131  134  133   140 #>  [6430,]  121  130  131  138  138  137  131  134  133   140 #>  [6431,]  121  130  131  138  138  137  131  134  133   140 #>  [6432,]  121  131  132  139  139  138  132  136  135   142 #>  [6433,]  121  131  132  139  139  138  132  136  135   142 #>  [6434,]  121  130  131  138  138  137  131  134  133   140 #>  [6435,]  121  130  131  138  138  137  131  134  133   140 #>  [6436,]  121  131  132  139  139  138  132  136  135   142 #>  [6437,]  121  130  131  138  138  137  131  134  133   140 #>  [6438,]  121  131  132  139  139  138  132  136  135   142 #>  [6439,]  121  131  132  139  139  138  132  135  134   141 #>  [6440,]  121  131  132  139  139  138  132  135  134   141 #>  [6441,]  121  131  132  139  139  138  132  136  135   142 #>  [6442,]  121  130  131  138  138  137  131  134  133   140 #>  [6443,]  121  130  131  138  138  137  131  134  133   140 #>  [6444,]  121  130  131  138  138  137  131  134  133   140 #>  [6445,]  121  131  132  139  139  138  132  136  135   142 #>  [6446,]  121  130  131  138  138  137  131  134  133   140 #>  [6447,]  121  130  131  138  138  137  131  134  133   140 #>  [6448,]  121  130  131  138  138  137  131  134  133   140 #>  [6449,]  121  131  132  139  139  138  132  135  134   141 #>  [6450,]  121  131  132  139  139  138  132  135  134   141 #>  [6451,]  121  131  132  139  139  138  132  136  135   142 #>  [6452,]  121  131  132  139  139  138  132  136  135   142 #>  [6453,]  121  131  132  139  139  138  132  135  134   141 #>  [6454,]  121  131  132  139  139  138  132  135  134   141 #>  [6455,]  121  131  132  139  139  138  132  135  134   141 #>  [6456,]  121  130  131  138  138  137  131  134  133   140 #>  [6457,]  121  131  132  139  139  138  132  136  135   142 #>  [6458,]  121  131  132  139  139  138  132  136  135   142 #>  [6459,]  121  131  132  139  139  138  132  135  134   141 #>  [6460,]  121  130  131  138  138  137  131  134  133   140 #>  [6461,]  121  130  131  138  138  137  131  134  133   140 #>  [6462,]  121  131  132  139  139  138  132  136  135   142 #>  [6463,]  121  130  131  138  138  137  131  134  133   140 #>  [6464,]  121  130  131  138  138  137  131  134  133   140 #>  [6465,]  121  130  131  138  138  137  131  134  133   140 #>  [6466,]  121  130  131  138  138  137  131  134  133   140 #>  [6467,]  121  131  132  139  139  138  132  136  135   142 #>  [6468,]  121  130  131  138  138  137  131  134  133   140 #>  [6469,]  121  131  132  139  139  138  132  136  135   142 #>  [6470,]  121  130  131  138  138  137  131  134  133   140 #>  [6471,]  121  131  132  139  139  138  132  136  135   142 #>  [6472,]  121  131  132  139  139  138  132  135  134   141 #>  [6473,]  121  131  132  139  139  138  132  136  135   142 #>  [6474,]  121  131  132  139  139  138  132  136  135   142 #>  [6475,]  121  130  131  138  138  137  131  134  133   140 #>  [6476,]  121  131  132  139  139  138  132  136  135   142 #>  [6477,]  121  131  132  139  139  138  132  136  135   142 #>  [6478,]  121  130  131  138  138  137  131  134  133   140 #>  [6479,]  121  130  131  138  138  137  131  134  133   140 #>  [6480,]  121  131  132  139  139  138  132  136  135   142 #>  [6481,]  121  130  131  138  138  137  131  134  133   140 #>  [6482,]  121  131  132  139  139  138  132  136  135   142 #>  [6483,]  121  131  132  139  139  138  132  136  135   142 #>  [6484,]  121  131  132  139  139  138  132  135  134   141 #>  [6485,]  121  131  132  139  139  138  132  136  135   142 #>  [6486,]  121  131  132  139  139  138  132  135  134   141 #>  [6487,]  121  131  132  139  139  138  132  136  135   142 #>  [6488,]  121  131  132  139  139  138  132  136  135   142 #>  [6489,]  121  131  132  139  139  138  132  135  134   141 #>  [6490,]  121  131  132  139  139  138  132  135  134   141 #>  [6491,]  121  131  132  139  139  138  132  136  135   142 #>  [6492,]  121  130  131  138  138  137  131  134  133   140 #>  [6493,]  121  130  131  138  138  137  131  134  133   140 #>  [6494,]  121  130  131  138  138  137  131  134  133   140 #>  [6495,]  121  130  131  138  138  137  131  134  133   140 #>  [6496,]  121  130  131  138  138  137  131  134  133   140 #>  [6497,]  121  131  132  139  139  138  132  136  135   142 #>  [6498,]  121  131  132  139  139  138  132  135  134   141 #>  [6499,]  121  131  132  139  139  138  132  136  135   142 #>  [6500,]  121  130  131  138  138  137  131  134  133   140 #>  [6501,]  122  134  135  142  142  140  134  138  137   144 #>  [6502,]  122  134  135  142  142  140  134  138  137   144 #>  [6503,]  122  133  134  141  141  140  134  138  137   144 #>  [6504,]  122  133  134  141  141  140  134  138  137   144 #>  [6505,]  123  132  133  140  140  139  133  137  136   143 #>  [6506,]  122  134  135  142  142  140  134  138  137   144 #>  [6507,]  122  133  134  141  141  140  134  138  137   144 #>  [6508,]  122  133  134  141  141  140  134  138  137   144 #>  [6509,]  122  133  134  141  141  140  134  138  137   144 #>  [6510,]  122  133  134  141  141  140  134  138  137   144 #>  [6511,]  122  134  135  142  142  140  134  138  137   144 #>  [6512,]  122  133  134  141  141  140  134  138  137   144 #>  [6513,]  122  134  135  142  142  140  134  138  137   144 #>  [6514,]  122  134  135  142  142  140  134  138  137   144 #>  [6515,]  122  134  135  142  142  140  134  138  137   144 #>  [6516,]  122  134  135  142  142  140  134  138  137   144 #>  [6517,]  122  134  135  142  142  140  134  138  137   144 #>  [6518,]  123  132  133  140  140  139  133  137  136   143 #>  [6519,]  122  134  135  142  142  140  134  138  137   144 #>  [6520,]  122  133  134  141  141  140  134  138  137   144 #>  [6521,]  122  134  135  142  142  140  134  138  137   144 #>  [6522,]  122  134  135  142  142  140  134  138  137   144 #>  [6523,]  122  133  134  141  141  140  134  138  137   144 #>  [6524,]  122  133  134  141  141  140  134  138  137   144 #>  [6525,]  122  133  134  141  141  140  134  138  137   144 #>  [6526,]  122  134  135  142  142  140  134  138  137   144 #>  [6527,]  122  134  135  142  142  140  134  138  137   144 #>  [6528,]  122  133  134  141  141  140  134  138  137   144 #>  [6529,]  122  134  135  142  142  140  134  138  137   144 #>  [6530,]  122  133  134  141  141  140  134  138  137   144 #>  [6531,]  122  133  134  141  141  140  134  138  137   144 #>  [6532,]  122  133  134  141  141  140  134  138  137   144 #>  [6533,]  122  134  135  142  142  140  134  138  137   144 #>  [6534,]  122  133  134  141  141  140  134  138  137   144 #>  [6535,]  122  134  135  142  142  140  134  138  137   144 #>  [6536,]  122  133  134  141  141  140  134  138  137   144 #>  [6537,]  122  134  135  142  142  140  134  138  137   144 #>  [6538,]  122  133  134  141  141  140  134  138  137   144 #>  [6539,]  122  133  134  141  141  140  134  138  137   144 #>  [6540,]  122  133  134  141  141  140  134  138  137   144 #>  [6541,]  122  134  135  142  142  140  134  138  137   144 #>  [6542,]  122  133  134  141  141  140  134  138  137   144 #>  [6543,]  122  133  134  141  141  140  134  138  137   144 #>  [6544,]  122  134  135  142  142  140  134  138  137   144 #>  [6545,]  122  133  134  141  141  140  134  138  137   144 #>  [6546,]  122  133  134  141  141  140  134  138  137   144 #>  [6547,]  122  134  135  142  142  140  134  138  137   144 #>  [6548,]  122  133  134  141  141  140  134  138  137   144 #>  [6549,]  122  133  134  141  141  140  134  138  137   144 #>  [6550,]  122  134  135  142  142  140  134  138  137   144 #>  [6551,]  122  133  134  141  141  140  134  138  137   144 #>  [6552,]  122  134  135  142  142  140  134  138  137   144 #>  [6553,]  122  133  134  141  141  140  134  138  137   144 #>  [6554,]  122  133  134  141  141  140  134  138  137   144 #>  [6555,]  122  134  135  142  142  140  134  138  137   144 #>  [6556,]  122  133  134  141  141  140  134  138  137   144 #>  [6557,]  122  133  134  141  141  140  134  138  137   144 #>  [6558,]  122  134  135  142  142  140  134  138  137   144 #>  [6559,]  122  134  135  142  142  140  134  138  137   144 #>  [6560,]  122  133  134  141  141  140  134  138  137   144 #>  [6561,]  122  134  135  142  142  140  134  138  137   144 #>  [6562,]  122  133  134  141  141  140  134  138  137   144 #>  [6563,]  122  133  134  141  141  140  134  138  137   144 #>  [6564,]  122  133  134  141  141  140  134  138  137   144 #>  [6565,]  122  133  134  141  141  140  134  138  137   144 #>  [6566,]  122  133  134  141  141  140  134  138  137   144 #>  [6567,]  122  133  134  141  141  140  134  138  137   144 #>  [6568,]  122  134  135  142  142  140  134  138  137   144 #>  [6569,]  122  133  134  141  141  140  134  138  137   144 #>  [6570,]  122  134  135  142  142  140  134  138  137   144 #>  [6571,]  123  132  133  140  140  139  133  137  136   143 #>  [6572,]  122  133  134  141  141  140  134  138  137   144 #>  [6573,]  122  134  135  142  142  140  134  138  137   144 #>  [6574,]  122  133  134  141  141  140  134  138  137   144 #>  [6575,]  123  132  133  140  140  139  133  137  136   143 #>  [6576,]  122  134  135  142  142  140  134  138  137   144 #>  [6577,]  122  134  135  142  142  140  134  138  137   144 #>  [6578,]  122  133  134  141  141  140  134  138  137   144 #>  [6579,]  122  134  135  142  142  140  134  138  137   144 #>  [6580,]  122  133  134  141  141  140  134  138  137   144 #>  [6581,]  122  134  135  142  142  140  134  138  137   144 #>  [6582,]  122  133  134  141  141  140  134  138  137   144 #>  [6583,]  122  134  135  142  142  140  134  138  137   144 #>  [6584,]  122  134  135  142  142  140  134  138  137   144 #>  [6585,]  122  133  134  141  141  140  134  138  137   144 #>  [6586,]  122  134  135  142  142  140  134  138  137   144 #>  [6587,]  122  134  135  142  142  140  134  138  137   144 #>  [6588,]  122  133  134  141  141  140  134  138  137   144 #>  [6589,]  122  133  134  141  141  140  134  138  137   144 #>  [6590,]  122  134  135  142  142  140  134  138  137   144 #>  [6591,]  122  133  134  141  141  140  134  138  137   144 #>  [6592,]  122  134  135  142  142  140  134  138  137   144 #>  [6593,]  122  134  135  142  142  140  134  138  137   144 #>  [6594,]  122  134  135  142  142  140  134  138  137   144 #>  [6595,]  122  133  134  141  141  140  134  138  137   144 #>  [6596,]  122  134  135  142  142  140  134  138  137   144 #>  [6597,]  122  134  135  142  142  140  134  138  137   144 #>  [6598,]  122  134  135  142  142  140  134  138  137   144 #>  [6599,]  122  134  135  142  142  140  134  138  137   144 #>  [6600,]  123  132  133  140  140  139  133  137  136   143 #>  [6601,]  124  136  137  144  144  142  137  141  140   146 #>  [6602,]  124  135  136  143  143  141  135  139  138   145 #>  [6603,]  124  135  136  143  143  141  135  139  138   145 #>  [6604,]  124  135  136  143  143  141  135  139  138   145 #>  [6605,]  124  135  136  143  143  141  135  139  138   145 #>  [6606,]  124  136  137  144  144  142  137  141  140   146 #>  [6607,]  124  135  136  143  143  141  135  139  138   145 #>  [6608,]  124  135  136  143  143  141  135  139  138   145 #>  [6609,]  124  135  136  143  143  141  135  139  138   145 #>  [6610,]  124  135  136  143  143  141  135  139  138   145 #>  [6611,]  124  135  136  143  143  141  135  139  138   145 #>  [6612,]  124  135  136  143  143  141  135  139  138   145 #>  [6613,]  124  136  137  144  144  142  136  140  139   146 #>  [6614,]  124  136  137  144  144  142  137  141  140   146 #>  [6615,]  124  136  137  144  144  142  137  141  140   146 #>  [6616,]  124  136  137  144  144  142  136  140  139   146 #>  [6617,]  124  135  136  143  143  141  135  139  138   145 #>  [6618,]  124  135  136  143  143  141  135  139  138   145 #>  [6619,]  124  135  136  143  143  141  135  139  138   145 #>  [6620,]  124  135  136  143  143  141  135  139  138   145 #>  [6621,]  124  136  137  144  144  142  136  140  139   146 #>  [6622,]  124  135  136  143  143  141  135  139  138   145 #>  [6623,]  124  135  136  143  143  141  135  139  138   145 #>  [6624,]  124  135  136  143  143  141  135  139  138   145 #>  [6625,]  124  135  136  143  143  141  135  139  138   145 #>  [6626,]  124  135  136  143  143  141  135  139  138   145 #>  [6627,]  124  135  136  143  143  141  135  139  138   145 #>  [6628,]  124  135  136  143  143  141  135  139  138   145 #>  [6629,]  124  136  137  144  144  142  136  140  139   146 #>  [6630,]  124  135  136  143  143  141  135  139  138   145 #>  [6631,]  124  135  136  143  143  141  135  139  138   145 #>  [6632,]  124  135  136  143  143  141  135  139  138   145 #>  [6633,]  124  136  137  144  144  142  137  141  140   146 #>  [6634,]  124  135  136  143  143  141  135  139  138   145 #>  [6635,]  124  135  136  143  143  141  135  139  138   145 #>  [6636,]  124  135  136  143  143  141  135  139  138   145 #>  [6637,]  124  135  136  143  143  141  135  139  138   145 #>  [6638,]  124  135  136  143  143  141  135  139  138   145 #>  [6639,]  124  135  136  143  143  141  135  139  138   145 #>  [6640,]  124  135  136  143  143  141  135  139  138   145 #>  [6641,]  124  136  137  144  144  142  137  141  140   146 #>  [6642,]  124  135  136  143  143  141  135  139  138   145 #>  [6643,]  124  135  136  143  143  141  135  139  138   145 #>  [6644,]  124  136  137  144  144  142  136  140  139   146 #>  [6645,]  124  135  136  143  143  141  135  139  138   145 #>  [6646,]  124  135  136  143  143  141  135  139  138   145 #>  [6647,]  124  135  136  143  143  141  135  139  138   145 #>  [6648,]  124  135  136  143  143  141  135  139  138   145 #>  [6649,]  124  135  136  143  143  141  135  139  138   145 #>  [6650,]  124  136  137  144  144  142  137  141  140   146 #>  [6651,]  124  135  136  143  143  141  135  139  138   145 #>  [6652,]  124  135  136  143  143  141  135  139  138   145 #>  [6653,]  124  135  136  143  143  141  135  139  138   145 #>  [6654,]  124  135  136  143  143  141  135  139  138   145 #>  [6655,]  124  135  136  143  143  141  135  139  138   145 #>  [6656,]  124  135  136  143  143  141  135  139  138   145 #>  [6657,]  124  135  136  143  143  141  135  139  138   145 #>  [6658,]  124  135  136  143  143  141  135  139  138   145 #>  [6659,]  124  136  137  144  144  142  136  140  139   146 #>  [6660,]  124  135  136  143  143  141  135  139  138   145 #>  [6661,]  124  136  137  144  144  142  137  141  140   146 #>  [6662,]  124  135  136  143  143  141  135  139  138   145 #>  [6663,]  124  135  136  143  143  141  135  139  138   145 #>  [6664,]  124  135  136  143  143  141  135  139  138   145 #>  [6665,]  124  135  136  143  143  141  135  139  138   145 #>  [6666,]  124  135  136  143  143  141  135  139  138   145 #>  [6667,]  124  135  136  143  143  141  135  139  138   145 #>  [6668,]  124  136  137  144  144  142  137  141  140   146 #>  [6669,]  124  135  136  143  143  141  135  139  138   145 #>  [6670,]  124  136  137  144  144  142  136  140  139   146 #>  [6671,]  124  135  136  143  143  141  135  139  138   145 #>  [6672,]  124  135  136  143  143  141  135  139  138   145 #>  [6673,]  124  136  137  144  144  142  137  141  140   146 #>  [6674,]  124  135  136  143  143  141  135  139  138   145 #>  [6675,]  124  135  136  143  143  141  135  139  138   145 #>  [6676,]  124  135  136  143  143  141  135  139  138   145 #>  [6677,]  124  135  136  143  143  141  135  139  138   145 #>  [6678,]  124  135  136  143  143  141  135  139  138   145 #>  [6679,]  124  135  136  143  143  141  135  139  138   145 #>  [6680,]  124  135  136  143  143  141  135  139  138   145 #>  [6681,]  124  135  136  143  143  141  135  139  138   145 #>  [6682,]  124  135  136  143  143  141  135  139  138   145 #>  [6683,]  124  136  137  144  144  142  136  140  139   146 #>  [6684,]  124  135  136  143  143  141  135  139  138   145 #>  [6685,]  124  135  136  143  143  141  135  139  138   145 #>  [6686,]  124  136  137  144  144  142  136  140  139   146 #>  [6687,]  124  135  136  143  143  141  135  139  138   145 #>  [6688,]  124  135  136  143  143  141  135  139  138   145 #>  [6689,]  124  135  136  143  143  141  135  139  138   145 #>  [6690,]  124  135  136  143  143  141  135  139  138   145 #>  [6691,]  124  135  136  143  143  141  135  139  138   145 #>  [6692,]  124  135  136  143  143  141  135  139  138   145 #>  [6693,]  124  135  136  143  143  141  135  139  138   145 #>  [6694,]  124  135  136  143  143  141  135  139  138   145 #>  [6695,]  124  135  136  143  143  141  135  139  138   145 #>  [6696,]  124  136  137  144  144  142  137  141  140   146 #>  [6697,]  124  135  136  143  143  141  135  139  138   145 #>  [6698,]  124  135  136  143  143  141  135  139  138   145 #>  [6699,]  124  136  137  144  144  142  137  141  140   146 #>  [6700,]  124  135  136  143  143  141  135  139  138   145 #>  [6701,]  125  139  140  146  145  143  139  143  142   148 #>  [6702,]  126  137  138  145  145  143  138  142  141   147 #>  [6703,]  125  138  139  146  145  143  139  143  142   148 #>  [6704,]  125  139  140  146  145  143  139  143  142   148 #>  [6705,]  125  139  140  146  145  143  139  143  142   148 #>  [6706,]  125  139  140  146  145  143  138  142  141   147 #>  [6707,]  125  138  139  146  145  143  139  143  142   148 #>  [6708,]  125  138  139  146  145  143  139  143  142   148 #>  [6709,]  126  137  138  145  145  143  139  143  142   148 #>  [6710,]  126  137  138  145  145  143  139  143  142   148 #>  [6711,]  125  139  140  146  145  143  138  142  141   147 #>  [6712,]  126  137  138  145  145  143  138  142  141   147 #>  [6713,]  126  137  138  145  145  143  139  143  142   148 #>  [6714,]  125  139  140  146  145  143  139  143  142   148 #>  [6715,]  125  139  140  146  145  143  138  142  141   147 #>  [6716,]  125  138  139  146  145  143  139  143  142   148 #>  [6717,]  126  137  138  145  145  143  138  142  141   147 #>  [6718,]  126  137  138  145  145  143  139  143  142   148 #>  [6719,]  125  139  140  146  145  143  138  142  141   147 #>  [6720,]  126  137  138  145  145  143  139  143  142   148 #>  [6721,]  126  137  138  145  145  143  139  143  142   148 #>  [6722,]  125  138  139  146  145  143  139  143  142   148 #>  [6723,]  126  137  138  145  145  143  138  142  141   147 #>  [6724,]  126  137  138  145  145  143  139  143  142   148 #>  [6725,]  125  138  139  146  145  143  139  143  142   148 #>  [6726,]  125  139  140  146  145  143  138  142  141   147 #>  [6727,]  126  137  138  145  145  143  139  143  142   148 #>  [6728,]  125  139  140  146  145  143  139  143  142   148 #>  [6729,]  126  137  138  145  145  143  138  142  141   147 #>  [6730,]  125  139  140  146  145  143  138  142  141   147 #>  [6731,]  126  137  138  145  145  143  138  142  141   147 #>  [6732,]  126  137  138  145  145  143  139  143  142   148 #>  [6733,]  126  137  138  145  145  143  139  143  142   148 #>  [6734,]  125  139  140  146  145  143  138  142  141   147 #>  [6735,]  125  139  140  146  145  143  138  142  141   147 #>  [6736,]  126  137  138  145  145  143  139  143  142   148 #>  [6737,]  125  139  140  146  145  143  138  142  141   147 #>  [6738,]  125  139  140  146  145  143  139  143  142   148 #>  [6739,]  125  138  139  146  145  143  139  143  142   148 #>  [6740,]  126  137  138  145  145  143  139  143  142   148 #>  [6741,]  125  139  140  146  145  143  139  143  142   148 #>  [6742,]  125  139  140  146  145  143  138  142  141   147 #>  [6743,]  125  138  139  146  145  143  138  142  141   147 #>  [6744,]  125  138  139  146  145  143  138  142  141   147 #>  [6745,]  125  138  139  146  145  143  139  143  142   148 #>  [6746,]  125  138  139  146  145  143  139  143  142   148 #>  [6747,]  125  138  139  146  145  143  138  142  141   147 #>  [6748,]  125  139  140  146  145  143  138  142  141   147 #>  [6749,]  125  138  139  146  145  143  139  143  142   148 #>  [6750,]  125  138  139  146  145  143  139  143  142   148 #>  [6751,]  125  139  140  146  145  143  139  143  142   148 #>  [6752,]  125  139  140  146  145  143  139  143  142   148 #>  [6753,]  126  137  138  145  145  143  139  143  142   148 #>  [6754,]  125  138  139  146  145  143  139  143  142   148 #>  [6755,]  125  138  139  146  145  143  139  143  142   148 #>  [6756,]  125  138  139  146  145  143  138  142  141   147 #>  [6757,]  125  139  140  146  145  143  139  143  142   148 #>  [6758,]  125  139  140  146  145  143  139  143  142   148 #>  [6759,]  125  138  139  146  145  143  139  143  142   148 #>  [6760,]  126  137  138  145  145  143  138  142  141   147 #>  [6761,]  126  137  138  145  145  143  138  142  141   147 #>  [6762,]  125  139  140  146  145  143  139  143  142   148 #>  [6763,]  126  137  138  145  145  143  138  142  141   147 #>  [6764,]  125  139  140  146  145  143  138  142  141   147 #>  [6765,]  125  138  139  146  145  143  138  142  141   147 #>  [6766,]  125  138  139  146  145  143  138  142  141   147 #>  [6767,]  125  139  140  146  145  143  139  143  142   148 #>  [6768,]  125  139  140  146  145  143  138  142  141   147 #>  [6769,]  125  139  140  146  145  143  139  143  142   148 #>  [6770,]  126  137  138  145  145  143  138  142  141   147 #>  [6771,]  125  139  140  146  145  143  139  143  142   148 #>  [6772,]  125  138  139  146  145  143  139  143  142   148 #>  [6773,]  125  139  140  146  145  143  139  143  142   148 #>  [6774,]  125  139  140  146  145  143  139  143  142   148 #>  [6775,]  126  137  138  145  145  143  138  142  141   147 #>  [6776,]  125  139  140  146  145  143  139  143  142   148 #>  [6777,]  125  138  139  146  145  143  139  143  142   148 #>  [6778,]  125  138  139  146  145  143  138  142  141   147 #>  [6779,]  125  138  139  146  145  143  138  142  141   147 #>  [6780,]  126  137  138  145  145  143  139  143  142   148 #>  [6781,]  126  137  138  145  145  143  138  142  141   147 #>  [6782,]  125  139  140  146  145  143  139  143  142   148 #>  [6783,]  126  137  138  145  145  143  139  143  142   148 #>  [6784,]  126  137  138  145  145  143  139  143  142   148 #>  [6785,]  125  139  140  146  145  143  139  143  142   148 #>  [6786,]  126  137  138  145  145  143  139  143  142   148 #>  [6787,]  125  139  140  146  145  143  139  143  142   148 #>  [6788,]  126  137  138  145  145  143  139  143  142   148 #>  [6789,]  125  138  139  146  145  143  139  143  142   148 #>  [6790,]  125  138  139  146  145  143  139  143  142   148 #>  [6791,]  125  139  140  146  145  143  139  143  142   148 #>  [6792,]  125  139  140  146  145  143  138  142  141   147 #>  [6793,]  125  139  140  146  145  143  139  143  142   148 #>  [6794,]  125  138  139  146  145  143  138  142  141   147 #>  [6795,]  125  139  140  146  145  143  138  142  141   147 #>  [6796,]  125  139  140  146  145  143  138  142  141   147 #>  [6797,]  125  139  140  146  145  143  139  143  142   148 #>  [6798,]  125  138  139  146  145  143  139  143  142   148 #>  [6799,]  125  139  140  146  145  143  139  143  142   148 #>  [6800,]  125  138  139  146  145  143  138  142  141   147 #>  [6801,]  128  141  142  148  147  145  141  145  144   150 #>  [6802,]  128  141  142  148  147  145  141  145  144   150 #>  [6803,]  127  140  141  147  146  144  140  144  143   149 #>  [6804,]  128  141  142  148  147  145  141  145  144   150 #>  [6805,]  127  140  141  147  146  144  140  144  143   149 #>  [6806,]  128  141  142  148  147  145  141  145  144   150 #>  [6807,]  127  140  141  147  146  144  140  144  143   149 #>  [6808,]  127  140  141  147  146  144  140  144  143   149 #>  [6809,]  128  141  142  148  147  145  141  145  144   150 #>  [6810,]  128  141  142  148  147  145  141  145  144   150 #>  [6811,]  128  141  142  148  147  145  141  145  144   150 #>  [6812,]  128  141  142  148  147  145  141  145  144   150 #>  [6813,]  127  140  141  147  146  144  140  144  143   149 #>  [6814,]  128  141  142  148  147  145  141  145  144   150 #>  [6815,]  128  141  142  148  147  145  141  145  144   150 #>  [6816,]  127  140  141  147  146  144  140  144  143   149 #>  [6817,]  127  140  141  147  146  144  140  144  143   149 #>  [6818,]  128  141  142  148  147  145  141  145  144   150 #>  [6819,]  128  141  142  148  147  145  141  145  144   150 #>  [6820,]  127  140  141  147  146  144  140  144  143   149 #>  [6821,]  128  141  142  148  147  145  141  145  144   150 #>  [6822,]  127  140  141  147  146  144  140  144  143   149 #>  [6823,]  128  141  142  148  147  145  141  145  144   150 #>  [6824,]  127  140  141  147  146  144  140  144  143   149 #>  [6825,]  127  140  141  147  146  144  140  144  143   149 #>  [6826,]  128  141  142  148  147  145  141  145  144   150 #>  [6827,]  128  141  142  148  147  145  141  145  144   150 #>  [6828,]  128  141  142  148  147  145  141  145  144   150 #>  [6829,]  127  140  141  147  146  144  140  144  143   149 #>  [6830,]  128  141  142  148  147  145  141  145  144   150 #>  [6831,]  128  141  142  148  147  145  141  145  144   150 #>  [6832,]  128  141  142  148  147  145  141  145  144   150 #>  [6833,]  128  141  142  148  147  145  141  145  144   150 #>  [6834,]  128  141  142  148  147  145  141  145  144   150 #>  [6835,]  128  141  142  148  147  145  141  145  144   150 #>  [6836,]  128  141  142  148  147  145  141  145  144   150 #>  [6837,]  128  141  142  148  147  145  141  145  144   150 #>  [6838,]  128  141  142  148  147  145  141  145  144   150 #>  [6839,]  127  140  141  147  146  144  140  144  143   149 #>  [6840,]  127  140  141  147  146  144  140  144  143   149 #>  [6841,]  128  141  142  148  147  145  141  145  144   150 #>  [6842,]  128  141  142  148  147  145  141  145  144   150 #>  [6843,]  127  140  141  147  146  144  140  144  143   149 #>  [6844,]  127  140  141  147  146  144  140  144  143   149 #>  [6845,]  127  140  141  147  146  144  140  144  143   149 #>  [6846,]  127  140  141  147  146  144  140  144  143   149 #>  [6847,]  127  140  141  147  146  144  140  144  143   149 #>  [6848,]  128  141  142  148  147  145  141  145  144   150 #>  [6849,]  127  140  141  147  146  144  140  144  143   149 #>  [6850,]  127  140  141  147  146  144  140  144  143   149 #>  [6851,]  127  140  141  147  146  144  140  144  143   149 #>  [6852,]  128  141  142  148  147  145  141  145  144   150 #>  [6853,]  127  140  141  147  146  144  140  144  143   149 #>  [6854,]  127  140  141  147  146  144  140  144  143   149 #>  [6855,]  127  140  141  147  146  144  140  144  143   149 #>  [6856,]  127  140  141  147  146  144  140  144  143   149 #>  [6857,]  128  141  142  148  147  145  141  145  144   150 #>  [6858,]  128  141  142  148  147  145  141  145  144   150 #>  [6859,]  127  140  141  147  146  144  140  144  143   149 #>  [6860,]  128  141  142  148  147  145  141  145  144   150 #>  [6861,]  128  141  142  148  147  145  141  145  144   150 #>  [6862,]  128  141  142  148  147  145  141  145  144   150 #>  [6863,]  127  140  141  147  146  144  140  144  143   149 #>  [6864,]  128  141  142  148  147  145  141  145  144   150 #>  [6865,]  127  140  141  147  146  144  140  144  143   149 #>  [6866,]  127  140  141  147  146  144  140  144  143   149 #>  [6867,]  128  141  142  148  147  145  141  145  144   150 #>  [6868,]  128  141  142  148  147  145  141  145  144   150 #>  [6869,]  128  141  142  148  147  145  141  145  144   150 #>  [6870,]  127  140  141  147  146  144  140  144  143   149 #>  [6871,]  127  140  141  147  146  144  140  144  143   149 #>  [6872,]  127  140  141  147  146  144  140  144  143   149 #>  [6873,]  128  141  142  148  147  145  141  145  144   150 #>  [6874,]  128  141  142  148  147  145  141  145  144   150 #>  [6875,]  128  141  142  148  147  145  141  145  144   150 #>  [6876,]  127  140  141  147  146  144  140  144  143   149 #>  [6877,]  127  140  141  147  146  144  140  144  143   149 #>  [6878,]  127  140  141  147  146  144  140  144  143   149 #>  [6879,]  127  140  141  147  146  144  140  144  143   149 #>  [6880,]  128  141  142  148  147  145  141  145  144   150 #>  [6881,]  128  141  142  148  147  145  141  145  144   150 #>  [6882,]  128  141  142  148  147  145  141  145  144   150 #>  [6883,]  127  140  141  147  146  144  140  144  143   149 #>  [6884,]  127  140  141  147  146  144  140  144  143   149 #>  [6885,]  128  141  142  148  147  145  141  145  144   150 #>  [6886,]  127  140  141  147  146  144  140  144  143   149 #>  [6887,]  128  141  142  148  147  145  141  145  144   150 #>  [6888,]  128  141  142  148  147  145  141  145  144   150 #>  [6889,]  127  140  141  147  146  144  140  144  143   149 #>  [6890,]  127  140  141  147  146  144  140  144  143   149 #>  [6891,]  128  141  142  148  147  145  141  145  144   150 #>  [6892,]  128  141  142  148  147  145  141  145  144   150 #>  [6893,]  128  141  142  148  147  145  141  145  144   150 #>  [6894,]  127  140  141  147  146  144  140  144  143   149 #>  [6895,]  128  141  142  148  147  145  141  145  144   150 #>  [6896,]  128  141  142  148  147  145  141  145  144   150 #>  [6897,]  128  141  142  148  147  145  141  145  144   150 #>  [6898,]  127  140  141  147  146  144  140  144  143   149 #>  [6899,]  128  141  142  148  147  145  141  145  144   150 #>  [6900,]  127  140  141  147  146  144  140  144  143   149 #>  [6901,]  130  143  143  149  148  146  142  146  145   151 #>  [6902,]  129  142  145  151  150  147  143  147  146   152 #>  [6903,]  129  142  145  151  150  147  143  147  146   152 #>  [6904,]  129  142  145  151  150  147  143  147  146   152 #>  [6905,]  129  142  145  151  150  147  143  147  146   152 #>  [6906,]  130  143  143  149  148  146  142  146  145   151 #>  [6907,]  129  142  145  151  150  147  143  147  146   152 #>  [6908,]  130  143  143  149  148  146  142  146  145   151 #>  [6909,]  130  143  143  149  148  146  142  146  145   151 #>  [6910,]  129  142  145  151  150  147  143  147  146   152 #>  [6911,]  129  142  145  151  150  147  143  147  146   152 #>  [6912,]  130  143  143  149  148  146  142  146  145   151 #>  [6913,]  129  142  145  151  150  147  143  147  146   152 #>  [6914,]  129  142  145  151  150  147  143  147  146   152 #>  [6915,]  130  143  143  149  148  146  142  146  145   151 #>  [6916,]  129  142  145  151  150  147  143  147  146   152 #>  [6917,]  129  142  145  151  150  147  143  147  146   152 #>  [6918,]  129  142  145  151  150  147  143  147  146   152 #>  [6919,]  129  142  145  151  150  147  143  147  146   152 #>  [6920,]  130  143  143  149  148  146  142  146  145   151 #>  [6921,]  129  142  144  150  149  147  143  147  146   152 #>  [6922,]  129  142  145  151  150  147  143  147  146   152 #>  [6923,]  129  142  145  151  150  147  143  147  146   152 #>  [6924,]  129  142  145  151  150  147  143  147  146   152 #>  [6925,]  129  142  144  150  149  147  143  147  146   152 #>  [6926,]  130  143  143  149  148  146  142  146  145   151 #>  [6927,]  129  142  145  151  150  147  143  147  146   152 #>  [6928,]  129  142  145  151  150  147  143  147  146   152 #>  [6929,]  129  142  145  151  150  147  143  147  146   152 #>  [6930,]  129  142  145  151  150  147  143  147  146   152 #>  [6931,]  129  142  145  151  150  147  143  147  146   152 #>  [6932,]  129  142  145  151  150  147  143  147  146   152 #>  [6933,]  130  143  143  149  148  146  142  146  145   151 #>  [6934,]  129  142  145  151  150  147  143  147  146   152 #>  [6935,]  129  142  144  150  149  147  143  147  146   152 #>  [6936,]  129  142  145  151  150  147  143  147  146   152 #>  [6937,]  129  142  145  151  150  147  143  147  146   152 #>  [6938,]  129  142  145  151  150  147  143  147  146   152 #>  [6939,]  129  142  145  151  150  147  143  147  146   152 #>  [6940,]  129  142  145  151  150  147  143  147  146   152 #>  [6941,]  129  142  145  151  150  147  143  147  146   152 #>  [6942,]  129  142  144  150  149  147  143  147  146   152 #>  [6943,]  130  143  143  149  148  146  142  146  145   151 #>  [6944,]  129  142  144  150  149  147  143  147  146   152 #>  [6945,]  130  143  143  149  148  146  142  146  145   151 #>  [6946,]  130  143  143  149  148  146  142  146  145   151 #>  [6947,]  129  142  145  151  150  147  143  147  146   152 #>  [6948,]  129  142  145  151  150  147  143  147  146   152 #>  [6949,]  129  142  145  151  150  147  143  147  146   152 #>  [6950,]  130  143  143  149  148  146  142  146  145   151 #>  [6951,]  130  143  143  149  148  146  142  146  145   151 #>  [6952,]  129  142  145  151  150  147  143  147  146   152 #>  [6953,]  130  143  143  149  148  146  142  146  145   151 #>  [6954,]  129  142  145  151  150  147  143  147  146   152 #>  [6955,]  130  143  143  149  148  146  142  146  145   151 #>  [6956,]  130  143  143  149  148  146  142  146  145   151 #>  [6957,]  130  143  143  149  148  146  142  146  145   151 #>  [6958,]  130  143  143  149  148  146  142  146  145   151 #>  [6959,]  129  142  145  151  150  147  143  147  146   152 #>  [6960,]  130  143  143  149  148  146  142  146  145   151 #>  [6961,]  130  143  143  149  148  146  142  146  145   151 #>  [6962,]  129  142  145  151  150  147  143  147  146   152 #>  [6963,]  129  142  145  151  150  147  143  147  146   152 #>  [6964,]  130  143  143  149  148  146  142  146  145   151 #>  [6965,]  130  143  143  149  148  146  142  146  145   151 #>  [6966,]  130  143  143  149  148  146  142  146  145   151 #>  [6967,]  129  142  145  151  150  147  143  147  146   152 #>  [6968,]  130  143  143  149  148  146  142  146  145   151 #>  [6969,]  129  142  145  151  150  147  143  147  146   152 #>  [6970,]  129  142  145  151  150  147  143  147  146   152 #>  [6971,]  130  143  143  149  148  146  142  146  145   151 #>  [6972,]  130  143  143  149  148  146  142  146  145   151 #>  [6973,]  130  143  143  149  148  146  142  146  145   151 #>  [6974,]  130  143  143  149  148  146  142  146  145   151 #>  [6975,]  129  142  145  151  150  147  143  147  146   152 #>  [6976,]  130  143  143  149  148  146  142  146  145   151 #>  [6977,]  129  142  145  151  150  147  143  147  146   152 #>  [6978,]  130  143  143  149  148  146  142  146  145   151 #>  [6979,]  129  142  145  151  150  147  143  147  146   152 #>  [6980,]  129  142  144  150  149  147  143  147  146   152 #>  [6981,]  130  143  143  149  148  146  142  146  145   151 #>  [6982,]  129  142  144  150  149  147  143  147  146   152 #>  [6983,]  129  142  145  151  150  147  143  147  146   152 #>  [6984,]  129  142  144  150  149  147  143  147  146   152 #>  [6985,]  129  142  144  150  149  147  143  147  146   152 #>  [6986,]  129  142  144  150  149  147  143  147  146   152 #>  [6987,]  129  142  145  151  150  147  143  147  146   152 #>  [6988,]  129  142  145  151  150  147  143  147  146   152 #>  [6989,]  129  142  144  150  149  147  143  147  146   152 #>  [6990,]  129  142  145  151  150  147  143  147  146   152 #>  [6991,]  129  142  145  151  150  147  143  147  146   152 #>  [6992,]  130  143  143  149  148  146  142  146  145   151 #>  [6993,]  129  142  145  151  150  147  143  147  146   152 #>  [6994,]  130  143  143  149  148  146  142  146  145   151 #>  [6995,]  129  142  145  151  150  147  143  147  146   152 #>  [6996,]  130  143  143  149  148  146  142  146  145   151 #>  [6997,]  130  143  143  149  148  146  142  146  145   151 #>  [6998,]  129  142  145  151  150  147  143  147  146   152 #>  [6999,]  129  142  144  150  149  147  143  147  146   152 #>  [7000,]  129  142  145  151  150  147  143  147  146   152 #>  [7001,]  132  145  147  153  151  148  144  150  148   154 #>  [7002,]  132  145  147  153  151  148  144  150  148   154 #>  [7003,]  132  145  147  153  151  148  144  149  148   154 #>  [7004,]  131  144  146  152  152  149  145  148  147   153 #>  [7005,]  132  145  147  153  151  148  144  150  148   154 #>  [7006,]  132  145  147  153  151  148  144  149  148   154 #>  [7007,]  132  145  147  153  151  148  144  149  148   154 #>  [7008,]  131  144  146  152  152  149  145  148  147   153 #>  [7009,]  131  144  146  152  153  149  145  148  147   153 #>  [7010,]  132  145  147  153  151  148  144  150  148   154 #>  [7011,]  131  144  146  152  153  149  145  148  147   153 #>  [7012,]  132  145  147  153  151  148  144  150  148   154 #>  [7013,]  131  144  146  152  153  149  145  148  147   153 #>  [7014,]  132  145  147  153  151  148  144  150  148   154 #>  [7015,]  132  145  147  153  151  148  144  150  148   154 #>  [7016,]  132  145  147  153  151  148  144  150  148   154 #>  [7017,]  131  144  146  152  153  149  145  148  147   153 #>  [7018,]  132  145  147  153  151  148  144  150  148   154 #>  [7019,]  132  145  147  153  151  148  144  150  148   154 #>  [7020,]  132  145  147  153  151  148  144  149  148   154 #>  [7021,]  132  145  147  153  151  148  144  149  148   154 #>  [7022,]  131  144  146  152  153  149  145  148  147   153 #>  [7023,]  132  145  147  153  151  148  144  149  148   154 #>  [7024,]  132  145  147  153  151  148  144  150  148   154 #>  [7025,]  132  145  147  153  151  148  144  149  148   154 #>  [7026,]  132  145  147  153  151  148  144  150  148   154 #>  [7027,]  131  144  146  152  153  149  145  148  147   153 #>  [7028,]  132  145  147  153  151  148  144  150  148   154 #>  [7029,]  132  145  147  153  151  148  144  149  148   154 #>  [7030,]  132  145  147  153  151  148  144  150  148   154 #>  [7031,]  132  145  147  153  151  148  144  150  148   154 #>  [7032,]  132  145  147  153  151  148  144  150  148   154 #>  [7033,]  132  145  147  153  151  148  144  150  148   154 #>  [7034,]  132  145  147  153  151  148  144  149  148   154 #>  [7035,]  131  144  146  152  152  149  145  148  147   153 #>  [7036,]  132  145  147  153  151  148  144  149  148   154 #>  [7037,]  132  145  147  153  151  148  144  149  148   154 #>  [7038,]  132  145  147  153  151  148  144  150  148   154 #>  [7039,]  132  145  147  153  151  148  144  150  148   154 #>  [7040,]  132  145  147  153  151  148  144  150  148   154 #>  [7041,]  132  145  147  153  151  148  144  149  148   154 #>  [7042,]  132  145  147  153  151  148  144  149  148   154 #>  [7043,]  131  144  146  152  153  149  145  148  147   153 #>  [7044,]  131  144  146  152  152  149  145  148  147   153 #>  [7045,]  132  145  147  153  151  148  144  149  148   154 #>  [7046,]  132  145  147  153  151  148  144  150  148   154 #>  [7047,]  132  145  147  153  151  148  144  150  148   154 #>  [7048,]  132  145  147  153  151  148  144  150  148   154 #>  [7049,]  131  144  146  152  152  149  145  148  147   153 #>  [7050,]  132  145  147  153  151  148  144  149  148   154 #>  [7051,]  132  145  147  153  151  148  144  150  148   154 #>  [7052,]  131  144  146  152  152  149  145  148  147   153 #>  [7053,]  132  145  147  153  151  148  144  149  148   154 #>  [7054,]  132  145  147  153  151  148  144  149  148   154 #>  [7055,]  131  144  146  152  152  149  145  148  147   153 #>  [7056,]  132  145  147  153  151  148  144  149  148   154 #>  [7057,]  132  145  147  153  151  148  144  149  148   154 #>  [7058,]  131  144  146  152  153  149  145  148  147   153 #>  [7059,]  132  145  147  153  151  148  144  150  148   154 #>  [7060,]  132  145  147  153  151  148  144  149  148   154 #>  [7061,]  132  145  147  153  151  148  144  150  148   154 #>  [7062,]  132  145  147  153  151  148  144  150  148   154 #>  [7063,]  132  145  147  153  151  148  144  150  148   154 #>  [7064,]  132  145  147  153  151  148  144  149  148   154 #>  [7065,]  132  145  147  153  151  148  144  149  148   154 #>  [7066,]  131  144  146  152  153  149  145  148  147   153 #>  [7067,]  132  145  147  153  151  148  144  149  148   154 #>  [7068,]  132  145  147  153  151  148  144  150  148   154 #>  [7069,]  131  144  146  152  152  149  145  148  147   153 #>  [7070,]  132  145  147  153  151  148  144  150  148   154 #>  [7071,]  132  145  147  153  151  148  144  150  148   154 #>  [7072,]  132  145  147  153  151  148  144  150  148   154 #>  [7073,]  132  145  147  153  151  148  144  149  148   154 #>  [7074,]  132  145  147  153  151  148  144  149  148   154 #>  [7075,]  132  145  147  153  151  148  144  150  148   154 #>  [7076,]  132  145  147  153  151  148  144  149  148   154 #>  [7077,]  132  145  147  153  151  148  144  150  148   154 #>  [7078,]  132  145  147  153  151  148  144  150  148   154 #>  [7079,]  131  144  146  152  153  149  145  148  147   153 #>  [7080,]  131  144  146  152  152  149  145  148  147   153 #>  [7081,]  131  144  146  152  153  149  145  148  147   153 #>  [7082,]  131  144  146  152  153  149  145  148  147   153 #>  [7083,]  131  144  146  152  153  149  145  148  147   153 #>  [7084,]  132  145  147  153  151  148  144  149  148   154 #>  [7085,]  132  145  147  153  151  148  144  149  148   154 #>  [7086,]  132  145  147  153  151  148  144  149  148   154 #>  [7087,]  131  144  146  152  153  149  145  148  147   153 #>  [7088,]  131  144  146  152  152  149  145  148  147   153 #>  [7089,]  131  144  146  152  153  149  145  148  147   153 #>  [7090,]  131  144  146  152  153  149  145  148  147   153 #>  [7091,]  132  145  147  153  151  148  144  150  148   154 #>  [7092,]  131  144  146  152  152  149  145  148  147   153 #>  [7093,]  132  145  147  153  151  148  144  150  148   154 #>  [7094,]  132  145  147  153  151  148  144  149  148   154 #>  [7095,]  131  144  146  152  152  149  145  148  147   153 #>  [7096,]  132  145  147  153  151  148  144  150  148   154 #>  [7097,]  132  145  147  153  151  148  144  149  148   154 #>  [7098,]  132  145  147  153  151  148  144  149  148   154 #>  [7099,]  131  144  146  152  153  149  145  148  147   153 #>  [7100,]  132  145  147  153  151  148  144  150  148   154 #>  [7101,]  134  147  149  155  155  150  146  151  150   156 #>  [7102,]  134  147  149  155  155  150  146  151  150   156 #>  [7103,]  134  147  149  155  155  150  146  151  150   156 #>  [7104,]  134  147  149  155  155  150  146  151  150   156 #>  [7105,]  134  148  150  156  155  150  146  151  150   156 #>  [7106,]  134  147  149  155  155  150  146  151  150   156 #>  [7107,]  134  147  149  155  155  150  146  151  151   156 #>  [7108,]  134  147  149  155  155  150  146  151  150   156 #>  [7109,]  134  147  149  155  155  150  146  151  150   156 #>  [7110,]  134  147  149  155  155  150  146  151  150   156 #>  [7111,]  134  147  149  155  155  150  146  151  150   156 #>  [7112,]  134  147  149  155  155  150  146  151  150   156 #>  [7113,]  134  147  149  155  155  150  146  151  150   156 #>  [7114,]  134  147  149  155  155  150  146  151  150   156 #>  [7115,]  133  146  148  154  154  152  147  152  149   155 #>  [7116,]  134  147  149  155  155  150  146  151  150   156 #>  [7117,]  133  146  148  154  154  152  147  152  149   155 #>  [7118,]  134  148  150  156  155  150  146  151  150   156 #>  [7119,]  134  147  149  155  155  150  146  151  150   156 #>  [7120,]  134  147  149  155  155  150  146  151  151   156 #>  [7121,]  134  147  149  155  155  150  146  151  150   156 #>  [7122,]  134  147  149  155  155  150  146  151  150   156 #>  [7123,]  134  147  149  155  155  150  146  151  150   156 #>  [7124,]  134  147  149  155  155  150  146  151  151   156 #>  [7125,]  134  147  149  155  155  150  146  151  150   156 #>  [7126,]  134  147  149  155  155  150  146  151  150   156 #>  [7127,]  134  148  150  156  155  150  146  151  150   156 #>  [7128,]  134  147  149  155  155  150  146  151  151   156 #>  [7129,]  134  147  149  155  155  150  146  151  150   156 #>  [7130,]  134  147  149  155  155  150  146  151  150   156 #>  [7131,]  133  146  148  154  154  152  147  152  149   155 #>  [7132,]  134  148  150  156  155  150  146  151  150   156 #>  [7133,]  134  147  149  155  155  150  146  151  150   156 #>  [7134,]  133  146  148  154  154  151  147  152  149   155 #>  [7135,]  134  147  149  155  155  150  146  151  150   156 #>  [7136,]  134  147  149  155  155  150  146  151  150   156 #>  [7137,]  133  146  148  154  154  151  147  152  149   155 #>  [7138,]  134  147  149  155  155  150  146  151  150   156 #>  [7139,]  134  147  149  155  155  150  146  151  150   156 #>  [7140,]  134  147  149  155  155  150  146  151  150   156 #>  [7141,]  134  147  149  155  155  150  146  151  150   156 #>  [7142,]  133  146  148  154  154  151  147  152  149   155 #>  [7143,]  133  146  148  154  154  152  147  152  149   155 #>  [7144,]  133  146  148  154  154  151  147  152  149   155 #>  [7145,]  134  147  149  155  155  150  146  151  150   156 #>  [7146,]  134  147  149  155  155  150  146  151  150   156 #>  [7147,]  134  147  149  155  155  150  146  151  150   156 #>  [7148,]  134  147  149  155  155  150  146  151  150   156 #>  [7149,]  134  147  149  155  155  150  146  151  150   156 #>  [7150,]  134  147  149  155  155  150  146  151  151   156 #>  [7151,]  134  147  149  155  155  150  146  151  150   156 #>  [7152,]  134  147  149  155  155  150  146  151  151   156 #>  [7153,]  134  147  149  155  155  150  146  151  150   156 #>  [7154,]  134  147  149  155  155  150  146  151  150   156 #>  [7155,]  134  147  149  155  155  150  146  151  150   156 #>  [7156,]  134  147  149  155  155  150  146  151  150   156 #>  [7157,]  134  147  149  155  155  150  146  151  150   156 #>  [7158,]  134  147  149  155  155  150  146  151  150   156 #>  [7159,]  134  147  149  155  155  150  146  151  150   156 #>  [7160,]  134  147  149  155  155  150  146  151  150   156 #>  [7161,]  134  147  149  155  155  150  146  151  150   156 #>  [7162,]  134  147  149  155  155  150  146  151  150   156 #>  [7163,]  133  146  148  154  154  151  147  152  149   155 #>  [7164,]  134  147  149  155  155  150  146  151  150   156 #>  [7165,]  134  147  149  155  155  150  146  151  150   156 #>  [7166,]  134  147  149  155  155  150  146  151  150   156 #>  [7167,]  134  147  149  155  155  150  146  151  150   156 #>  [7168,]  134  147  149  155  155  150  146  151  150   156 #>  [7169,]  134  147  149  155  155  150  146  151  150   156 #>  [7170,]  134  147  149  155  155  150  146  151  150   156 #>  [7171,]  134  148  150  156  155  150  146  151  150   156 #>  [7172,]  134  147  149  155  155  150  146  151  150   156 #>  [7173,]  134  147  149  155  155  150  146  151  150   156 #>  [7174,]  134  147  149  155  155  150  146  151  150   156 #>  [7175,]  133  146  148  154  154  152  147  152  149   155 #>  [7176,]  134  147  149  155  155  150  146  151  151   156 #>  [7177,]  134  147  149  155  155  150  146  151  150   156 #>  [7178,]  133  146  148  154  154  151  147  152  149   155 #>  [7179,]  133  146  148  154  154  152  147  152  149   155 #>  [7180,]  134  147  149  155  155  150  146  151  150   156 #>  [7181,]  134  147  149  155  155  150  146  151  150   156 #>  [7182,]  134  147  149  155  155  150  146  151  150   156 #>  [7183,]  134  147  149  155  155  150  146  151  150   156 #>  [7184,]  134  147  149  155  155  150  146  151  150   156 #>  [7185,]  134  147  149  155  155  150  146  151  150   156 #>  [7186,]  134  147  149  155  155  150  146  151  151   156 #>  [7187,]  134  147  149  155  155  150  146  151  150   156 #>  [7188,]  134  147  149  155  155  150  146  151  150   156 #>  [7189,]  134  147  149  155  155  150  146  151  150   156 #>  [7190,]  134  147  149  155  155  150  146  151  150   156 #>  [7191,]  134  148  150  156  155  150  146  151  150   156 #>  [7192,]  134  147  149  155  155  150  146  151  150   156 #>  [7193,]  134  147  149  155  155  150  146  151  150   156 #>  [7194,]  134  147  149  155  155  150  146  151  150   156 #>  [7195,]  133  146  148  154  154  152  147  152  149   155 #>  [7196,]  134  147  149  155  155  150  146  151  150   156 #>  [7197,]  134  147  149  155  155  150  146  151  150   156 #>  [7198,]  134  147  149  155  155  150  146  151  150   156 #>  [7199,]  134  147  149  155  155  150  146  151  150   156 #>  [7200,]  133  146  148  154  154  152  147  152  149   155 #>  [7201,]  136  150  152  158  157  154  149  154  153   158 #>  [7202,]  136  150  152  158  157  154  149  154  153   158 #>  [7203,]  135  149  151  157  156  153  148  153  152   157 #>  [7204,]  136  150  152  158  157  154  149  154  153   158 #>  [7205,]  135  149  151  157  156  153  148  153  152   157 #>  [7206,]  136  150  152  158  157  154  149  154  153   158 #>  [7207,]  135  149  151  157  156  153  148  153  152   157 #>  [7208,]  135  149  151  157  156  153  148  153  152   157 #>  [7209,]  136  150  152  158  157  154  149  154  153   158 #>  [7210,]  136  150  152  158  157  154  149  154  153   158 #>  [7211,]  136  150  152  158  157  154  149  154  153   158 #>  [7212,]  136  150  152  158  157  154  149  154  153   158 #>  [7213,]  135  149  151  157  156  153  148  153  152   157 #>  [7214,]  136  150  152  158  157  154  149  154  153   158 #>  [7215,]  136  150  152  158  157  154  149  154  153   158 #>  [7216,]  135  149  151  157  156  153  148  153  152   157 #>  [7217,]  135  149  151  157  156  153  148  153  152   157 #>  [7218,]  136  150  152  158  157  154  149  154  153   158 #>  [7219,]  136  150  152  158  157  154  149  154  153   158 #>  [7220,]  135  149  151  157  156  153  148  153  152   157 #>  [7221,]  136  150  152  158  157  154  149  154  153   158 #>  [7222,]  135  149  151  157  156  153  148  153  152   157 #>  [7223,]  136  150  152  158  157  154  149  154  153   158 #>  [7224,]  135  149  151  157  156  153  148  153  152   157 #>  [7225,]  135  149  151  157  156  153  148  153  152   157 #>  [7226,]  136  150  152  158  157  154  149  154  153   158 #>  [7227,]  136  150  152  158  157  154  149  154  153   158 #>  [7228,]  135  149  151  157  156  153  148  153  152   157 #>  [7229,]  135  149  151  157  156  153  148  153  152   157 #>  [7230,]  136  150  152  158  157  154  149  154  153   158 #>  [7231,]  136  150  152  158  157  154  149  154  153   158 #>  [7232,]  136  150  152  158  157  154  149  154  153   158 #>  [7233,]  136  150  152  158  157  154  149  154  153   158 #>  [7234,]  136  150  152  158  157  154  149  154  153   158 #>  [7235,]  136  150  152  158  157  154  149  154  153   158 #>  [7236,]  136  150  152  158  157  154  149  154  153   158 #>  [7237,]  136  150  152  158  157  154  149  154  153   158 #>  [7238,]  136  150  152  158  157  154  149  154  153   158 #>  [7239,]  135  149  151  157  156  153  148  153  152   157 #>  [7240,]  135  149  151  157  156  153  148  153  152   157 #>  [7241,]  136  150  152  158  157  154  149  154  153   158 #>  [7242,]  136  150  152  158  157  154  149  154  153   158 #>  [7243,]  135  149  151  157  156  153  148  153  152   157 #>  [7244,]  135  149  151  157  156  153  148  153  152   157 #>  [7245,]  135  149  151  157  156  153  148  153  152   157 #>  [7246,]  135  149  151  157  156  153  148  153  152   157 #>  [7247,]  135  149  151  157  156  153  148  153  152   157 #>  [7248,]  136  150  152  158  157  154  149  154  153   158 #>  [7249,]  135  149  151  157  156  153  148  153  152   157 #>  [7250,]  135  149  151  157  156  153  148  153  152   157 #>  [7251,]  135  149  151  157  156  153  148  153  152   157 #>  [7252,]  136  150  152  158  157  154  149  154  153   158 #>  [7253,]  135  149  151  157  156  153  148  153  152   157 #>  [7254,]  135  149  151  157  156  153  148  153  152   157 #>  [7255,]  135  149  151  157  156  153  148  153  152   157 #>  [7256,]  135  149  151  157  156  153  148  153  152   157 #>  [7257,]  136  150  152  158  157  154  149  154  153   158 #>  [7258,]  136  150  152  158  157  154  149  154  153   158 #>  [7259,]  135  149  151  157  156  153  148  153  152   157 #>  [7260,]  136  150  152  158  157  154  149  154  153   158 #>  [7261,]  136  150  152  158  157  154  149  154  153   158 #>  [7262,]  136  150  152  158  157  154  149  154  153   158 #>  [7263,]  135  149  151  157  156  153  148  153  152   157 #>  [7264,]  136  150  152  158  157  154  149  154  153   158 #>  [7265,]  135  149  151  157  156  153  148  153  152   157 #>  [7266,]  135  149  151  157  156  153  148  153  152   157 #>  [7267,]  136  150  152  158  157  154  149  154  153   158 #>  [7268,]  136  150  152  158  157  154  149  154  153   158 #>  [7269,]  136  150  152  158  157  154  149  154  153   158 #>  [7270,]  135  149  151  157  156  153  148  153  152   157 #>  [7271,]  135  149  151  157  156  153  148  153  152   157 #>  [7272,]  135  149  151  157  156  153  148  153  152   157 #>  [7273,]  136  150  152  158  157  154  149  154  153   158 #>  [7274,]  136  150  152  158  157  154  149  154  153   158 #>  [7275,]  136  150  152  158  157  154  149  154  153   158 #>  [7276,]  135  149  151  157  156  153  148  153  152   157 #>  [7277,]  135  149  151  157  156  153  148  153  152   157 #>  [7278,]  135  149  151  157  156  153  148  153  152   157 #>  [7279,]  135  149  151  157  156  153  148  153  152   157 #>  [7280,]  136  150  152  158  157  154  149  154  153   158 #>  [7281,]  135  149  151  157  156  153  148  153  152   157 #>  [7282,]  136  150  152  158  157  154  149  154  153   158 #>  [7283,]  135  149  151  157  156  153  148  153  152   157 #>  [7284,]  135  149  151  157  156  153  148  153  152   157 #>  [7285,]  136  150  152  158  157  154  149  154  153   158 #>  [7286,]  135  149  151  157  156  153  148  153  152   157 #>  [7287,]  136  150  152  158  157  154  149  154  153   158 #>  [7288,]  136  150  152  158  157  154  149  154  153   158 #>  [7289,]  135  149  151  157  156  153  148  153  152   157 #>  [7290,]  135  149  151  157  156  153  148  153  152   157 #>  [7291,]  136  150  152  158  157  154  149  154  153   158 #>  [7292,]  136  150  152  158  157  154  149  154  153   158 #>  [7293,]  136  150  152  158  157  154  149  154  153   158 #>  [7294,]  135  149  151  157  156  153  148  153  152   157 #>  [7295,]  136  150  152  158  157  154  149  154  153   158 #>  [7296,]  136  150  152  158  157  154  149  154  153   158 #>  [7297,]  136  150  152  158  157  154  149  154  153   158 #>  [7298,]  135  149  151  157  156  153  148  153  152   157 #>  [7299,]  136  150  152  158  157  154  149  154  153   158 #>  [7300,]  135  149  151  157  156  153  148  153  152   157 #>  [7301,]  138  152  154  160  159  156  151  156  155   160 #>  [7302,]  137  151  153  159  158  155  150  155  154   159 #>  [7303,]  138  152  154  160  159  156  151  156  155   160 #>  [7304,]  138  152  154  160  159  156  151  156  155   160 #>  [7305,]  138  152  154  160  159  156  151  156  155   160 #>  [7306,]  137  151  153  159  158  155  150  155  154   159 #>  [7307,]  138  152  154  160  159  156  151  156  155   160 #>  [7308,]  138  152  154  160  159  156  151  156  155   160 #>  [7309,]  138  152  154  160  159  156  151  156  155   160 #>  [7310,]  138  152  154  160  159  156  151  156  155   160 #>  [7311,]  137  151  153  159  158  155  150  155  154   159 #>  [7312,]  137  151  153  159  158  155  150  155  154   159 #>  [7313,]  138  152  154  160  159  156  151  156  155   160 #>  [7314,]  138  152  154  160  159  156  151  156  155   160 #>  [7315,]  137  151  153  159  158  155  150  155  154   159 #>  [7316,]  138  152  154  160  159  156  151  156  155   160 #>  [7317,]  137  151  153  159  158  155  150  155  154   159 #>  [7318,]  138  152  154  160  159  156  151  156  155   160 #>  [7319,]  138  152  154  160  159  156  151  156  155   160 #>  [7320,]  138  152  154  160  159  156  151  156  155   160 #>  [7321,]  138  152  154  160  159  156  151  156  155   160 #>  [7322,]  138  152  154  160  159  156  151  156  155   160 #>  [7323,]  137  151  153  159  158  155  150  155  154   159 #>  [7324,]  138  152  154  160  159  156  151  156  155   160 #>  [7325,]  138  152  154  160  159  156  151  156  155   160 #>  [7326,]  138  152  154  160  159  156  151  156  155   160 #>  [7327,]  138  152  154  160  159  156  151  156  155   160 #>  [7328,]  138  152  154  160  159  156  151  156  155   160 #>  [7329,]  137  151  153  159  158  155  150  155  154   159 #>  [7330,]  137  151  153  159  158  155  150  155  154   159 #>  [7331,]  137  151  153  159  158  155  150  155  154   159 #>  [7332,]  138  152  154  160  159  156  151  156  155   160 #>  [7333,]  138  152  154  160  159  156  151  156  155   160 #>  [7334,]  137  151  153  159  158  155  150  155  154   159 #>  [7335,]  137  151  153  159  158  155  150  155  154   159 #>  [7336,]  138  152  154  160  159  156  151  156  155   160 #>  [7337,]  137  151  153  159  158  155  150  155  154   159 #>  [7338,]  138  152  154  160  159  156  151  156  155   160 #>  [7339,]  138  152  154  160  159  156  151  156  155   160 #>  [7340,]  138  152  154  160  159  156  151  156  155   160 #>  [7341,]  138  152  154  160  159  156  151  156  155   160 #>  [7342,]  137  151  153  159  158  155  150  155  154   159 #>  [7343,]  137  151  153  159  158  155  150  155  154   159 #>  [7344,]  137  151  153  159  158  155  150  155  154   159 #>  [7345,]  138  152  154  160  159  156  151  156  155   160 #>  [7346,]  138  152  154  160  159  156  151  156  155   160 #>  [7347,]  137  151  153  159  158  155  150  155  154   159 #>  [7348,]  137  151  153  159  158  155  150  155  154   159 #>  [7349,]  138  152  154  160  159  156  151  156  155   160 #>  [7350,]  138  152  154  160  159  156  151  156  155   160 #>  [7351,]  138  152  154  160  159  156  151  156  155   160 #>  [7352,]  138  152  154  160  159  156  151  156  155   160 #>  [7353,]  138  152  154  160  159  156  151  156  155   160 #>  [7354,]  138  152  154  160  159  156  151  156  155   160 #>  [7355,]  138  152  154  160  159  156  151  156  155   160 #>  [7356,]  137  151  153  159  158  155  150  155  154   159 #>  [7357,]  138  152  154  160  159  156  151  156  155   160 #>  [7358,]  138  152  154  160  159  156  151  156  155   160 #>  [7359,]  138  152  154  160  159  156  151  156  155   160 #>  [7360,]  137  151  153  159  158  155  150  155  154   159 #>  [7361,]  137  151  153  159  158  155  150  155  154   159 #>  [7362,]  138  152  154  160  159  156  151  156  155   160 #>  [7363,]  137  151  153  159  158  155  150  155  154   159 #>  [7364,]  137  151  153  159  158  155  150  155  154   159 #>  [7365,]  137  151  153  159  158  155  150  155  154   159 #>  [7366,]  137  151  153  159  158  155  150  155  154   159 #>  [7367,]  138  152  154  160  159  156  151  156  155   160 #>  [7368,]  138  152  154  160  159  156  151  156  155   160 #>  [7369,]  138  152  154  160  159  156  151  156  155   160 #>  [7370,]  137  151  153  159  158  155  150  155  154   159 #>  [7371,]  138  152  154  160  159  156  151  156  155   160 #>  [7372,]  138  152  154  160  159  156  151  156  155   160 #>  [7373,]  138  152  154  160  159  156  151  156  155   160 #>  [7374,]  138  152  154  160  159  156  151  156  155   160 #>  [7375,]  137  151  153  159  158  155  150  155  154   159 #>  [7376,]  138  152  154  160  159  156  151  156  155   160 #>  [7377,]  138  152  154  160  159  156  151  156  155   160 #>  [7378,]  137  151  153  159  158  155  150  155  154   159 #>  [7379,]  137  151  153  159  158  155  150  155  154   159 #>  [7380,]  138  152  154  160  159  156  151  156  155   160 #>  [7381,]  137  151  153  159  158  155  150  155  154   159 #>  [7382,]  138  152  154  160  159  156  151  156  155   160 #>  [7383,]  138  152  154  160  159  156  151  156  155   160 #>  [7384,]  138  152  154  160  159  156  151  156  155   160 #>  [7385,]  138  152  154  160  159  156  151  156  155   160 #>  [7386,]  138  152  154  160  159  156  151  156  155   160 #>  [7387,]  138  152  154  160  159  156  151  156  155   160 #>  [7388,]  138  152  154  160  159  156  151  156  155   160 #>  [7389,]  138  152  154  160  159  156  151  156  155   160 #>  [7390,]  138  152  154  160  159  156  151  156  155   160 #>  [7391,]  138  152  154  160  159  156  151  156  155   160 #>  [7392,]  137  151  153  159  158  155  150  155  154   159 #>  [7393,]  138  152  154  160  159  156  151  156  155   160 #>  [7394,]  137  151  153  159  158  155  150  155  154   159 #>  [7395,]  137  151  153  159  158  155  150  155  154   159 #>  [7396,]  137  151  153  159  158  155  150  155  154   159 #>  [7397,]  138  152  154  160  159  156  151  156  155   160 #>  [7398,]  138  152  154  160  159  156  151  156  155   160 #>  [7399,]  138  152  154  160  159  156  151  156  155   160 #>  [7400,]  137  151  153  159  158  155  150  155  154   159 #>  [7401,]  139  153  155  161  160  157  152  157  156   162 #>  [7402,]  140  154  156  162  161  158  153  158  157   161 #>  [7403,]  139  153  155  161  160  157  152  157  156   162 #>  [7404,]  139  153  155  161  160  157  152  157  156   162 #>  [7405,]  140  154  156  162  161  158  153  158  157   161 #>  [7406,]  139  153  155  161  160  157  152  157  156   162 #>  [7407,]  140  154  156  162  161  158  153  158  157   161 #>  [7408,]  139  153  155  161  160  157  152  157  156   163 #>  [7409,]  140  154  156  162  161  158  153  158  157   161 #>  [7410,]  140  154  156  162  161  158  153  158  157   161 #>  [7411,]  139  153  155  161  160  157  152  157  156   162 #>  [7412,]  140  154  156  162  161  158  153  158  157   161 #>  [7413,]  140  154  156  162  161  158  153  158  157   161 #>  [7414,]  139  153  155  161  160  157  152  157  156   162 #>  [7415,]  140  154  156  162  161  158  153  158  157   161 #>  [7416,]  139  153  155  161  160  157  152  157  156   163 #>  [7417,]  140  154  156  162  161  158  153  158  157   161 #>  [7418,]  140  154  156  162  161  158  153  158  157   161 #>  [7419,]  139  153  155  161  160  157  152  157  156   163 #>  [7420,]  140  154  156  162  161  158  153  158  157   161 #>  [7421,]  140  154  156  162  161  158  153  158  157   161 #>  [7422,]  140  154  156  162  161  158  153  158  157   161 #>  [7423,]  140  154  156  162  161  158  153  158  157   161 #>  [7424,]  140  154  156  162  161  158  153  158  157   161 #>  [7425,]  140  154  156  162  161  158  153  158  157   161 #>  [7426,]  139  153  155  161  160  157  152  157  156   163 #>  [7427,]  140  154  156  162  161  158  153  158  157   161 #>  [7428,]  139  153  155  161  160  157  152  157  156   162 #>  [7429,]  140  154  156  162  161  158  153  158  157   161 #>  [7430,]  140  154  156  162  161  158  153  158  157   161 #>  [7431,]  140  154  156  162  161  158  153  158  157   161 #>  [7432,]  140  154  156  162  161  158  153  158  157   161 #>  [7433,]  140  154  156  162  161  158  153  158  157   161 #>  [7434,]  139  153  155  161  160  157  152  157  156   162 #>  [7435,]  139  153  155  161  160  157  152  157  156   162 #>  [7436,]  140  154  156  162  161  158  153  158  157   161 #>  [7437,]  139  153  155  161  160  157  152  157  156   163 #>  [7438,]  139  153  155  161  160  157  152  157  156   163 #>  [7439,]  140  154  156  162  161  158  153  158  157   161 #>  [7440,]  140  154  156  162  161  158  153  158  157   161 #>  [7441,]  140  154  156  162  161  158  153  158  157   161 #>  [7442,]  139  153  155  161  160  157  152  157  156   162 #>  [7443,]  140  154  156  162  161  158  153  158  157   161 #>  [7444,]  140  154  156  162  161  158  153  158  157   161 #>  [7445,]  139  153  155  161  160  157  152  157  156   162 #>  [7446,]  140  154  156  162  161  158  153  158  157   161 #>  [7447,]  140  154  156  162  161  158  153  158  157   161 #>  [7448,]  140  154  156  162  161  158  153  158  157   161 #>  [7449,]  139  153  155  161  160  157  152  157  156   162 #>  [7450,]  140  154  156  162  161  158  153  158  157   161 #>  [7451,]  140  154  156  162  161  158  153  158  157   161 #>  [7452,]  139  153  155  161  160  157  152  157  156   162 #>  [7453,]  140  154  156  162  161  158  153  158  157   161 #>  [7454,]  140  154  156  162  161  158  153  158  157   161 #>  [7455,]  139  153  155  161  160  157  152  157  156   163 #>  [7456,]  139  153  155  161  160  157  152  157  156   163 #>  [7457,]  140  154  156  162  161  158  153  158  157   161 #>  [7458,]  140  154  156  162  161  158  153  158  157   161 #>  [7459,]  139  153  155  161  160  157  152  157  156   163 #>  [7460,]  140  154  156  162  161  158  153  158  157   161 #>  [7461,]  140  154  156  162  161  158  153  158  157   161 #>  [7462,]  139  153  155  161  160  157  152  157  156   162 #>  [7463,]  140  154  156  162  161  158  153  158  157   161 #>  [7464,]  139  153  155  161  160  157  152  157  156   163 #>  [7465,]  139  153  155  161  160  157  152  157  156   162 #>  [7466,]  140  154  156  162  161  158  153  158  157   161 #>  [7467,]  140  154  156  162  161  158  153  158  157   161 #>  [7468,]  139  153  155  161  160  157  152  157  156   162 #>  [7469,]  139  153  155  161  160  157  152  157  156   163 #>  [7470,]  140  154  156  162  161  158  153  158  157   161 #>  [7471,]  140  154  156  162  161  158  153  158  157   161 #>  [7472,]  139  153  155  161  160  157  152  157  156   162 #>  [7473,]  139  153  155  161  160  157  152  157  156   162 #>  [7474,]  140  154  156  162  161  158  153  158  157   161 #>  [7475,]  140  154  156  162  161  158  153  158  157   161 #>  [7476,]  140  154  156  162  161  158  153  158  157   161 #>  [7477,]  139  153  155  161  160  157  152  157  156   163 #>  [7478,]  140  154  156  162  161  158  153  158  157   161 #>  [7479,]  139  153  155  161  160  157  152  157  156   162 #>  [7480,]  140  154  156  162  161  158  153  158  157   161 #>  [7481,]  140  154  156  162  161  158  153  158  157   161 #>  [7482,]  140  154  156  162  161  158  153  158  157   161 #>  [7483,]  140  154  156  162  161  158  153  158  157   161 #>  [7484,]  140  154  156  162  161  158  153  158  157   161 #>  [7485,]  140  154  156  162  161  158  153  158  157   161 #>  [7486,]  140  154  156  162  161  158  153  158  157   161 #>  [7487,]  140  154  156  162  161  158  153  158  157   161 #>  [7488,]  140  154  156  162  161  158  153  158  157   161 #>  [7489,]  139  153  155  161  160  157  152  157  156   162 #>  [7490,]  140  154  156  162  161  158  153  158  157   161 #>  [7491,]  139  153  155  161  160  157  152  157  156   162 #>  [7492,]  140  154  156  162  161  158  153  158  157   161 #>  [7493,]  140  154  156  162  161  158  153  158  157   161 #>  [7494,]  139  153  155  161  160  157  152  157  156   162 #>  [7495,]  140  154  156  162  161  158  153  158  157   161 #>  [7496,]  139  153  155  161  160  157  152  157  156   163 #>  [7497,]  139  153  155  161  160  157  152  157  156   163 #>  [7498,]  140  154  156  162  161  158  153  158  157   161 #>  [7499,]  140  154  156  162  161  158  153  158  157   161 #>  [7500,]  139  153  155  161  160  157  152  157  156   163 #>  [7501,]  141  155  157  163  162  159  154  159  158   164 #>  [7502,]  142  156  159  165  163  160  155  160  159   165 #>  [7503,]  142  156  158  164  163  160  155  160  159   165 #>  [7504,]  141  155  157  163  162  159  154  159  158   164 #>  [7505,]  141  155  157  163  162  159  154  159  158   164 #>  [7506,]  142  156  159  165  163  160  155  160  159   165 #>  [7507,]  141  155  157  163  162  159  154  159  158   164 #>  [7508,]  141  155  157  163  162  159  154  159  158   164 #>  [7509,]  141  155  157  163  162  159  154  159  158   164 #>  [7510,]  141  155  157  163  162  159  154  159  158   164 #>  [7511,]  141  155  157  163  162  159  154  159  158   164 #>  [7512,]  142  156  158  164  163  160  155  160  159   165 #>  [7513,]  141  155  157  163  162  159  154  159  158   164 #>  [7514,]  141  155  157  163  162  159  154  159  158   164 #>  [7515,]  141  155  157  163  162  159  154  159  158   164 #>  [7516,]  141  155  157  163  162  159  154  159  158   164 #>  [7517,]  141  155  157  163  162  159  154  159  158   164 #>  [7518,]  142  156  159  165  163  160  155  160  159   165 #>  [7519,]  142  156  159  165  163  160  155  160  159   165 #>  [7520,]  142  156  159  165  163  160  155  160  159   165 #>  [7521,]  141  155  157  163  162  159  154  159  158   164 #>  [7522,]  141  155  157  163  162  159  154  159  158   164 #>  [7523,]  141  155  157  163  162  159  154  159  158   164 #>  [7524,]  141  155  157  163  162  159  154  159  158   164 #>  [7525,]  142  156  158  164  163  160  155  160  159   165 #>  [7526,]  141  155  157  163  162  159  154  159  158   164 #>  [7527,]  141  155  157  163  162  159  154  159  158   164 #>  [7528,]  142  156  159  165  163  160  155  160  159   165 #>  [7529,]  141  155  157  163  162  159  154  159  158   164 #>  [7530,]  141  155  157  163  162  159  154  159  158   164 #>  [7531,]  142  156  158  164  163  160  155  160  159   165 #>  [7532,]  141  155  157  163  162  159  154  159  158   164 #>  [7533,]  142  156  159  165  163  160  155  160  159   165 #>  [7534,]  142  156  159  165  163  160  155  160  159   165 #>  [7535,]  141  155  157  163  162  159  154  159  158   164 #>  [7536,]  141  155  157  163  162  159  154  159  158   164 #>  [7537,]  141  155  157  163  162  159  154  159  158   164 #>  [7538,]  141  155  157  163  162  159  154  159  158   164 #>  [7539,]  141  155  157  163  162  159  154  159  158   164 #>  [7540,]  141  155  157  163  162  159  154  159  158   164 #>  [7541,]  141  155  157  163  162  159  154  159  158   164 #>  [7542,]  141  155  157  163  162  159  154  159  158   164 #>  [7543,]  141  155  157  163  162  159  154  159  158   164 #>  [7544,]  141  155  157  163  162  159  154  159  158   164 #>  [7545,]  141  155  157  163  162  159  154  159  158   164 #>  [7546,]  141  155  157  163  162  159  154  159  158   164 #>  [7547,]  141  155  157  163  162  159  154  159  158   164 #>  [7548,]  141  155  157  163  162  159  154  159  158   164 #>  [7549,]  141  155  157  163  162  159  154  159  158   164 #>  [7550,]  141  155  157  163  162  159  154  159  158   164 #>  [7551,]  141  155  157  163  162  159  154  159  158   164 #>  [7552,]  141  155  157  163  162  159  154  159  158   164 #>  [7553,]  141  155  157  163  162  159  154  159  158   164 #>  [7554,]  141  155  157  163  162  159  154  159  158   164 #>  [7555,]  141  155  157  163  162  159  154  159  158   164 #>  [7556,]  141  155  157  163  162  159  154  159  158   164 #>  [7557,]  141  155  157  163  162  159  154  159  158   164 #>  [7558,]  141  155  157  163  162  159  154  159  158   164 #>  [7559,]  141  155  157  163  162  159  154  159  158   164 #>  [7560,]  142  156  158  164  163  160  155  160  159   165 #>  [7561,]  141  155  157  163  162  159  154  159  158   164 #>  [7562,]  141  155  157  163  162  159  154  159  158   164 #>  [7563,]  141  155  157  163  162  159  154  159  158   164 #>  [7564,]  141  155  157  163  162  159  154  159  158   164 #>  [7565,]  142  156  159  165  163  160  155  160  159   165 #>  [7566,]  141  155  157  163  162  159  154  159  158   164 #>  [7567,]  141  155  157  163  162  159  154  159  158   164 #>  [7568,]  141  155  157  163  162  159  154  159  158   164 #>  [7569,]  141  155  157  163  162  159  154  159  158   164 #>  [7570,]  142  156  159  165  163  160  155  160  159   165 #>  [7571,]  142  156  159  165  163  160  155  160  159   165 #>  [7572,]  141  155  157  163  162  159  154  159  158   164 #>  [7573,]  142  156  159  165  163  160  155  160  159   165 #>  [7574,]  141  155  157  163  162  159  154  159  158   164 #>  [7575,]  141  155  157  163  162  159  154  159  158   164 #>  [7576,]  141  155  157  163  162  159  154  159  158   164 #>  [7577,]  141  155  157  163  162  159  154  159  158   164 #>  [7578,]  141  155  157  163  162  159  154  159  158   164 #>  [7579,]  141  155  157  163  162  159  154  159  158   164 #>  [7580,]  141  155  157  163  162  159  154  159  158   164 #>  [7581,]  141  155  157  163  162  159  154  159  158   164 #>  [7582,]  141  155  157  163  162  159  154  159  158   164 #>  [7583,]  141  155  157  163  162  159  154  159  158   164 #>  [7584,]  142  156  159  165  163  160  155  160  159   165 #>  [7585,]  141  155  157  163  162  159  154  159  158   164 #>  [7586,]  141  155  157  163  162  159  154  159  158   164 #>  [7587,]  141  155  157  163  162  159  154  159  158   164 #>  [7588,]  141  155  157  163  162  159  154  159  158   164 #>  [7589,]  141  155  157  163  162  159  154  159  158   164 #>  [7590,]  141  155  157  163  162  159  154  159  158   164 #>  [7591,]  141  155  157  163  162  159  154  159  158   164 #>  [7592,]  141  155  157  163  162  159  154  159  158   164 #>  [7593,]  142  156  159  165  163  160  155  160  159   165 #>  [7594,]  141  155  157  163  162  159  154  159  158   164 #>  [7595,]  141  155  157  163  162  159  154  159  158   164 #>  [7596,]  141  155  157  163  162  159  154  159  158   164 #>  [7597,]  142  156  158  164  163  160  155  160  159   165 #>  [7598,]  142  156  158  164  163  160  155  160  159   165 #>  [7599,]  141  155  157  163  162  159  154  159  158   164 #>  [7600,]  142  156  159  165  163  160  155  160  159   165 #>  [7601,]  144  158  161  168  166  162  157  161  160   166 #>  [7602,]  144  158  161  168  166  162  157  161  160   166 #>  [7603,]  143  157  160  166  164  161  156  162  161   167 #>  [7604,]  143  157  160  166  164  161  156  163  161   167 #>  [7605,]  143  157  160  166  164  161  156  163  161   167 #>  [7606,]  144  158  161  167  165  162  157  161  160   166 #>  [7607,]  143  157  160  166  164  161  156  163  161   167 #>  [7608,]  143  157  160  166  164  161  156  163  161   167 #>  [7609,]  143  157  160  166  164  161  156  163  161   167 #>  [7610,]  143  157  160  166  164  161  156  163  161   167 #>  [7611,]  143  157  160  166  164  161  156  163  161   167 #>  [7612,]  143  157  160  166  164  161  156  162  161   167 #>  [7613,]  144  158  161  168  166  162  157  161  160   166 #>  [7614,]  144  158  161  168  166  162  157  161  160   166 #>  [7615,]  144  158  161  168  166  162  157  161  160   166 #>  [7616,]  144  158  161  168  166  162  157  161  160   166 #>  [7617,]  144  158  161  168  166  162  157  161  160   166 #>  [7618,]  143  157  160  166  164  161  156  163  161   167 #>  [7619,]  143  157  160  166  164  161  156  163  161   167 #>  [7620,]  143  157  160  166  164  161  156  163  161   167 #>  [7621,]  144  158  161  167  165  162  157  161  160   166 #>  [7622,]  143  157  160  166  164  161  156  163  161   167 #>  [7623,]  143  157  160  166  164  161  156  163  161   167 #>  [7624,]  143  157  160  166  164  161  156  163  161   167 #>  [7625,]  143  157  160  166  164  161  156  163  161   167 #>  [7626,]  143  157  160  166  164  161  156  162  161   167 #>  [7627,]  143  157  160  166  164  161  156  163  161   167 #>  [7628,]  143  157  160  166  164  161  156  163  161   167 #>  [7629,]  144  158  161  168  166  162  157  161  160   166 #>  [7630,]  143  157  160  166  164  161  156  163  161   167 #>  [7631,]  143  157  160  166  164  161  156  163  161   167 #>  [7632,]  143  157  160  166  164  161  156  162  161   167 #>  [7633,]  144  158  161  168  166  162  157  161  160   166 #>  [7634,]  143  157  160  166  164  161  156  163  161   167 #>  [7635,]  144  158  161  167  165  162  157  161  160   166 #>  [7636,]  143  157  160  166  164  161  156  163  161   167 #>  [7637,]  143  157  160  166  164  161  156  163  161   167 #>  [7638,]  143  157  160  166  164  161  156  163  161   167 #>  [7639,]  143  157  160  166  164  161  156  163  161   167 #>  [7640,]  143  157  160  166  164  161  156  163  161   167 #>  [7641,]  144  158  161  168  166  162  157  161  160   166 #>  [7642,]  143  157  160  166  164  161  156  162  161   167 #>  [7643,]  143  157  160  166  164  161  156  163  161   167 #>  [7644,]  144  158  161  167  165  162  157  161  160   166 #>  [7645,]  143  157  160  166  164  161  156  163  161   167 #>  [7646,]  143  157  160  166  164  161  156  163  161   167 #>  [7647,]  143  157  160  166  164  161  156  163  161   167 #>  [7648,]  143  157  160  166  164  161  156  162  161   167 #>  [7649,]  143  157  160  166  164  161  156  163  161   167 #>  [7650,]  144  158  161  168  166  162  157  161  160   166 #>  [7651,]  143  157  160  166  164  161  156  162  161   167 #>  [7652,]  143  157  160  166  164  161  156  163  161   167 #>  [7653,]  143  157  160  166  164  161  156  163  161   167 #>  [7654,]  143  157  160  166  164  161  156  162  161   167 #>  [7655,]  143  157  160  166  164  161  156  163  161   167 #>  [7656,]  143  157  160  166  164  161  156  163  161   167 #>  [7657,]  143  157  160  166  164  161  156  163  161   167 #>  [7658,]  143  157  160  166  164  161  156  163  161   167 #>  [7659,]  144  158  161  168  166  162  157  161  160   166 #>  [7660,]  143  157  160  166  164  161  156  163  161   167 #>  [7661,]  144  158  161  168  166  162  157  161  160   166 #>  [7662,]  143  157  160  166  164  161  156  162  161   167 #>  [7663,]  143  157  160  166  164  161  156  163  161   167 #>  [7664,]  143  157  160  166  164  161  156  163  161   167 #>  [7665,]  143  157  160  166  164  161  156  163  161   167 #>  [7666,]  143  157  160  166  164  161  156  162  161   167 #>  [7667,]  143  157  160  166  164  161  156  163  161   167 #>  [7668,]  144  158  161  168  166  162  157  161  160   166 #>  [7669,]  143  157  160  166  164  161  156  162  161   167 #>  [7670,]  144  158  161  168  166  162  157  161  160   166 #>  [7671,]  143  157  160  166  164  161  156  163  161   167 #>  [7672,]  143  157  160  166  164  161  156  163  161   167 #>  [7673,]  144  158  161  167  165  162  157  161  160   166 #>  [7674,]  143  157  160  166  164  161  156  163  161   167 #>  [7675,]  143  157  160  166  164  161  156  163  161   167 #>  [7676,]  144  158  161  168  166  162  157  161  160   166 #>  [7677,]  144  158  161  168  166  162  157  161  160   166 #>  [7678,]  143  157  160  166  164  161  156  163  161   167 #>  [7679,]  144  158  161  168  166  162  157  161  160   166 #>  [7680,]  143  157  160  166  164  161  156  162  161   167 #>  [7681,]  144  158  161  168  166  162  157  161  160   166 #>  [7682,]  143  157  160  166  164  161  156  163  161   167 #>  [7683,]  144  158  161  168  166  162  157  161  160   166 #>  [7684,]  143  157  160  166  164  161  156  163  161   167 #>  [7685,]  143  157  160  166  164  161  156  163  161   167 #>  [7686,]  144  158  161  167  165  162  157  161  160   166 #>  [7687,]  143  157  160  166  164  161  156  163  161   167 #>  [7688,]  143  157  160  166  164  161  156  163  161   167 #>  [7689,]  143  157  160  166  164  161  156  162  161   167 #>  [7690,]  143  157  160  166  164  161  156  163  161   167 #>  [7691,]  143  157  160  166  164  161  156  163  161   167 #>  [7692,]  143  157  160  166  164  161  156  163  161   167 #>  [7693,]  144  158  161  168  166  162  157  161  160   166 #>  [7694,]  143  157  160  166  164  161  156  163  161   167 #>  [7695,]  143  157  160  166  164  161  156  163  161   167 #>  [7696,]  144  158  161  168  166  162  157  161  160   166 #>  [7697,]  143  157  160  166  164  161  156  163  161   167 #>  [7698,]  143  157  160  166  164  161  156  163  161   167 #>  [7699,]  144  158  161  167  165  162  157  161  160   166 #>  [7700,]  143  157  160  166  164  161  156  163  161   167 #>  [7701,]  146  160  163  170  168  164  159  165  162   169 #>  [7702,]  145  159  162  169  167  163  158  164  162   169 #>  [7703,]  145  159  162  169  167  163  158  164  162   168 #>  [7704,]  145  159  162  169  167  163  158  164  162   169 #>  [7705,]  146  160  163  170  168  164  159  165  162   169 #>  [7706,]  145  159  162  169  167  163  158  164  162   169 #>  [7707,]  145  159  162  169  167  163  158  164  162   168 #>  [7708,]  145  159  162  169  167  163  158  164  162   169 #>  [7709,]  145  159  162  169  167  163  158  164  162   169 #>  [7710,]  146  160  163  170  168  164  159  165  162   169 #>  [7711,]  146  160  163  170  168  164  159  165  162   169 #>  [7712,]  146  160  163  170  168  164  159  165  162   169 #>  [7713,]  145  159  162  169  167  163  158  164  162   169 #>  [7714,]  146  160  163  170  168  164  159  165  162   169 #>  [7715,]  146  160  163  170  168  164  159  165  162   169 #>  [7716,]  145  159  162  169  167  163  158  164  162   169 #>  [7717,]  146  160  163  170  168  164  159  165  162   169 #>  [7718,]  146  160  163  170  168  164  159  165  162   169 #>  [7719,]  145  159  162  169  167  163  158  164  162   169 #>  [7720,]  145  159  162  169  167  163  158  164  162   169 #>  [7721,]  145  159  162  169  167  163  158  164  162   169 #>  [7722,]  146  160  163  170  168  164  159  165  162   169 #>  [7723,]  145  159  162  169  167  163  158  164  162   169 #>  [7724,]  145  159  162  169  167  163  158  164  162   169 #>  [7725,]  145  159  162  169  167  163  158  164  162   169 #>  [7726,]  146  160  163  170  168  164  159  165  162   169 #>  [7727,]  146  160  163  170  168  164  159  165  162   169 #>  [7728,]  145  159  162  169  167  163  158  164  162   169 #>  [7729,]  145  159  162  169  167  163  158  164  162   169 #>  [7730,]  145  159  162  169  167  163  158  164  162   169 #>  [7731,]  146  160  163  170  168  164  159  165  162   169 #>  [7732,]  146  160  163  170  168  164  159  165  162   169 #>  [7733,]  145  159  162  169  167  163  158  164  162   169 #>  [7734,]  145  159  162  169  167  163  158  164  162   169 #>  [7735,]  145  159  162  169  167  163  158  164  162   169 #>  [7736,]  145  159  162  169  167  163  158  164  162   169 #>  [7737,]  145  159  162  169  167  163  158  164  162   169 #>  [7738,]  146  160  163  170  168  164  159  165  162   169 #>  [7739,]  145  159  162  169  167  163  158  164  162   169 #>  [7740,]  145  159  162  169  167  163  158  164  162   169 #>  [7741,]  145  159  162  169  167  163  158  164  162   169 #>  [7742,]  145  159  162  169  167  163  158  164  162   169 #>  [7743,]  146  160  163  170  168  164  159  165  162   169 #>  [7744,]  145  159  162  169  167  163  158  164  162   169 #>  [7745,]  145  159  162  169  167  163  158  164  162   169 #>  [7746,]  145  159  162  169  167  163  158  164  162   169 #>  [7747,]  146  160  163  170  168  164  159  165  162   169 #>  [7748,]  145  159  162  169  167  163  158  164  162   169 #>  [7749,]  145  159  162  169  167  163  158  164  162   168 #>  [7750,]  145  159  162  169  167  163  158  164  162   169 #>  [7751,]  145  159  162  169  167  163  158  164  162   169 #>  [7752,]  146  160  163  170  168  164  159  165  162   169 #>  [7753,]  145  159  162  169  167  163  158  164  162   168 #>  [7754,]  145  159  162  169  167  163  158  164  162   169 #>  [7755,]  145  159  162  169  167  163  158  164  162   169 #>  [7756,]  145  159  162  169  167  163  158  164  162   168 #>  [7757,]  145  159  162  169  167  163  158  164  162   169 #>  [7758,]  146  160  163  170  168  164  159  165  162   169 #>  [7759,]  146  160  163  170  168  164  159  165  162   169 #>  [7760,]  145  159  162  169  167  163  158  164  162   169 #>  [7761,]  146  160  163  170  168  164  159  165  162   169 #>  [7762,]  145  159  162  169  167  163  158  164  162   169 #>  [7763,]  145  159  162  169  167  163  158  164  162   169 #>  [7764,]  145  159  162  169  167  163  158  164  162   169 #>  [7765,]  145  159  162  169  167  163  158  164  162   169 #>  [7766,]  146  160  163  170  168  164  159  165  162   168 #>  [7767,]  145  159  162  169  167  163  158  164  162   169 #>  [7768,]  145  159  162  169  167  163  158  164  162   169 #>  [7769,]  145  159  162  169  167  163  158  164  162   169 #>  [7770,]  146  160  163  170  168  164  159  165  162   169 #>  [7771,]  146  160  163  170  168  164  159  165  162   169 #>  [7772,]  145  159  162  169  167  163  158  164  162   169 #>  [7773,]  145  159  162  169  167  163  158  164  162   169 #>  [7774,]  145  159  162  169  167  163  158  164  162   169 #>  [7775,]  146  160  163  170  168  164  159  165  162   169 #>  [7776,]  145  159  162  169  167  163  158  164  162   169 #>  [7777,]  146  160  163  170  168  164  159  165  162   169 #>  [7778,]  145  159  162  169  167  163  158  164  162   169 #>  [7779,]  146  160  163  170  168  164  159  165  162   169 #>  [7780,]  145  159  162  169  167  163  158  164  162   169 #>  [7781,]  145  159  162  169  167  163  158  164  162   169 #>  [7782,]  145  159  162  169  167  163  158  164  162   169 #>  [7783,]  145  159  162  169  167  163  158  164  162   169 #>  [7784,]  145  159  162  169  167  163  158  164  162   169 #>  [7785,]  145  159  162  169  167  163  158  164  162   169 #>  [7786,]  145  159  162  169  167  163  158  164  162   169 #>  [7787,]  146  160  163  170  168  164  159  165  162   169 #>  [7788,]  145  159  162  169  167  163  158  164  162   169 #>  [7789,]  145  159  162  169  167  163  158  164  162   169 #>  [7790,]  146  160  163  170  168  164  159  165  162   169 #>  [7791,]  146  160  163  170  168  164  159  165  162   169 #>  [7792,]  146  160  163  170  168  164  159  165  162   169 #>  [7793,]  145  159  162  169  167  163  158  164  162   169 #>  [7794,]  145  159  162  169  167  163  158  164  162   169 #>  [7795,]  146  160  163  170  168  164  159  165  162   169 #>  [7796,]  145  159  162  169  167  163  158  164  162   169 #>  [7797,]  145  159  162  169  167  163  158  164  162   169 #>  [7798,]  145  159  162  169  167  163  158  164  162   169 #>  [7799,]  145  159  162  169  167  163  158  164  162   169 #>  [7800,]  146  160  163  170  168  164  159  165  162   169 #>  [7801,]  148  162  165  172  170  166  161  167  164   171 #>  [7802,]  148  162  165  172  170  166  161  167  164   171 #>  [7803,]  147  161  164  171  169  165  160  166  163   170 #>  [7804,]  148  162  165  172  170  166  161  167  164   171 #>  [7805,]  148  162  165  172  170  166  161  167  164   171 #>  [7806,]  147  161  164  171  169  165  160  166  163   170 #>  [7807,]  147  161  164  171  169  165  160  166  163   170 #>  [7808,]  147  161  164  171  169  165  160  166  163   170 #>  [7809,]  148  162  165  172  170  166  161  167  164   171 #>  [7810,]  148  162  165  172  170  166  161  167  164   171 #>  [7811,]  148  162  165  172  170  166  161  167  164   171 #>  [7812,]  148  162  165  172  170  166  161  167  164   171 #>  [7813,]  148  162  165  172  170  166  161  167  164   171 #>  [7814,]  148  162  165  172  170  166  161  167  164   171 #>  [7815,]  148  162  165  172  170  166  161  167  164   171 #>  [7816,]  148  162  165  172  170  166  161  167  164   171 #>  [7817,]  148  162  165  172  170  166  161  167  164   171 #>  [7818,]  148  162  165  172  170  166  161  167  164   171 #>  [7819,]  148  162  165  172  170  166  161  167  164   171 #>  [7820,]  147  161  164  171  169  165  160  166  163   170 #>  [7821,]  147  161  164  171  169  165  160  166  163   170 #>  [7822,]  148  162  165  172  170  166  161  167  164   171 #>  [7823,]  147  161  164  171  169  165  160  166  163   170 #>  [7824,]  148  162  165  172  170  166  161  167  164   171 #>  [7825,]  147  161  164  171  169  165  160  166  163   170 #>  [7826,]  148  162  165  172  170  166  161  167  164   171 #>  [7827,]  148  162  165  172  170  166  161  167  164   171 #>  [7828,]  148  162  165  172  170  166  161  167  164   171 #>  [7829,]  147  161  164  171  169  165  160  166  163   170 #>  [7830,]  148  162  165  172  170  166  161  167  164   171 #>  [7831,]  148  162  165  172  170  166  161  167  164   171 #>  [7832,]  148  162  165  172  170  166  161  167  164   171 #>  [7833,]  148  162  165  172  170  166  161  167  164   171 #>  [7834,]  147  161  164  171  169  165  160  166  163   170 #>  [7835,]  147  161  164  171  169  165  160  166  163   170 #>  [7836,]  147  161  164  171  169  165  160  166  163   170 #>  [7837,]  147  161  164  171  169  165  160  166  163   170 #>  [7838,]  148  162  165  172  170  166  161  167  164   171 #>  [7839,]  148  162  165  172  170  166  161  167  164   171 #>  [7840,]  148  162  165  172  170  166  161  167  164   171 #>  [7841,]  147  161  164  171  169  165  160  166  163   170 #>  [7842,]  147  161  164  171  169  165  160  166  163   170 #>  [7843,]  148  162  165  172  170  166  161  167  164   171 #>  [7844,]  147  161  164  171  169  165  160  166  163   170 #>  [7845,]  147  161  164  171  169  165  160  166  163   170 #>  [7846,]  148  162  165  172  170  166  161  167  164   171 #>  [7847,]  148  162  165  172  170  166  161  167  164   171 #>  [7848,]  148  162  165  172  170  166  161  167  164   171 #>  [7849,]  148  162  165  172  170  166  161  167  164   171 #>  [7850,]  147  161  164  171  169  165  160  166  163   170 #>  [7851,]  148  162  165  172  170  166  161  167  164   171 #>  [7852,]  148  162  165  172  170  166  161  167  164   171 #>  [7853,]  147  161  164  171  169  165  160  166  163   170 #>  [7854,]  147  161  164  171  169  165  160  166  163   170 #>  [7855,]  147  161  164  171  169  165  160  166  163   170 #>  [7856,]  147  161  164  171  169  165  160  166  163   170 #>  [7857,]  147  161  164  171  169  165  160  166  163   170 #>  [7858,]  148  162  165  172  170  166  161  167  164   171 #>  [7859,]  148  162  165  172  170  166  161  167  164   171 #>  [7860,]  147  161  164  171  169  165  160  166  163   170 #>  [7861,]  148  162  165  172  170  166  161  167  164   171 #>  [7862,]  148  162  165  172  170  166  161  167  164   171 #>  [7863,]  148  162  165  172  170  166  161  167  164   171 #>  [7864,]  147  161  164  171  169  165  160  166  163   170 #>  [7865,]  147  161  164  171  169  165  160  166  163   170 #>  [7866,]  148  162  165  172  170  166  161  167  164   171 #>  [7867,]  147  161  164  171  169  165  160  166  163   170 #>  [7868,]  148  162  165  172  170  166  161  167  164   171 #>  [7869,]  148  162  165  172  170  166  161  167  164   171 #>  [7870,]  148  162  165  172  170  166  161  167  164   171 #>  [7871,]  148  162  165  172  170  166  161  167  164   171 #>  [7872,]  148  162  165  172  170  166  161  167  164   171 #>  [7873,]  147  161  164  171  169  165  160  166  163   170 #>  [7874,]  147  161  164  171  169  165  160  166  163   170 #>  [7875,]  148  162  165  172  170  166  161  167  164   171 #>  [7876,]  147  161  164  171  169  165  160  166  163   170 #>  [7877,]  148  162  165  172  170  166  161  167  164   171 #>  [7878,]  148  162  165  172  170  166  161  167  164   171 #>  [7879,]  148  162  165  172  170  166  161  167  164   171 #>  [7880,]  147  161  164  171  169  165  160  166  163   170 #>  [7881,]  147  161  164  171  169  165  160  166  163   170 #>  [7882,]  147  161  164  171  169  165  160  166  163   170 #>  [7883,]  148  162  165  172  170  166  161  167  164   171 #>  [7884,]  147  161  164  171  169  165  160  166  163   170 #>  [7885,]  147  161  164  171  169  165  160  166  163   170 #>  [7886,]  147  161  164  171  169  165  160  166  163   170 #>  [7887,]  148  162  165  172  170  166  161  167  164   171 #>  [7888,]  147  161  164  171  169  165  160  166  163   170 #>  [7889,]  147  161  164  171  169  165  160  166  163   170 #>  [7890,]  148  162  165  172  170  166  161  167  164   171 #>  [7891,]  148  162  165  172  170  166  161  167  164   171 #>  [7892,]  148  162  165  172  170  166  161  167  164   171 #>  [7893,]  148  162  165  172  170  166  161  167  164   171 #>  [7894,]  147  161  164  171  169  165  160  166  163   170 #>  [7895,]  148  162  165  172  170  166  161  167  164   171 #>  [7896,]  148  162  165  172  170  166  161  167  164   171 #>  [7897,]  147  161  164  171  169  165  160  166  163   170 #>  [7898,]  147  161  164  171  169  165  160  166  163   170 #>  [7899,]  147  161  164  171  169  165  160  166  163   170 #>  [7900,]  148  162  165  172  170  166  161  167  164   171 #>  [7901,]  150  163  166  173  171  167  162  170  166   173 #>  [7902,]  150  163  166  173  171  167  162  170  166   173 #>  [7903,]  150  163  166  173  171  167  162  169  166   173 #>  [7904,]  149  164  167  174  172  168  163  168  165   172 #>  [7905,]  150  163  166  173  171  167  162  170  166   173 #>  [7906,]  150  163  166  173  171  167  162  170  166   173 #>  [7907,]  150  163  166  173  171  167  162  170  166   173 #>  [7908,]  149  164  167  174  172  168  163  168  165   172 #>  [7909,]  149  164  167  174  172  168  163  168  165   172 #>  [7910,]  150  163  166  173  171  167  162  170  166   173 #>  [7911,]  149  164  167  174  172  168  163  168  165   172 #>  [7912,]  150  163  166  173  171  167  162  169  166   173 #>  [7913,]  149  165  167  174  172  168  163  168  165   172 #>  [7914,]  150  163  166  173  171  167  162  169  166   173 #>  [7915,]  150  163  166  173  171  167  162  170  166   173 #>  [7916,]  150  163  166  173  171  167  162  170  166   173 #>  [7917,]  149  164  167  174  172  168  163  168  165   172 #>  [7918,]  150  163  166  173  171  167  162  170  166   173 #>  [7919,]  150  163  166  173  171  167  162  169  166   173 #>  [7920,]  150  163  166  173  171  167  162  169  166   173 #>  [7921,]  150  163  166  173  171  167  162  170  166   173 #>  [7922,]  149  164  167  174  172  168  163  168  165   172 #>  [7923,]  150  163  166  173  171  167  162  170  166   173 #>  [7924,]  150  163  166  173  171  167  162  169  166   173 #>  [7925,]  150  163  166  173  171  167  162  170  166   173 #>  [7926,]  150  163  166  173  171  167  162  169  166   173 #>  [7927,]  149  164  167  174  172  168  163  168  165   172 #>  [7928,]  150  163  166  173  171  167  162  170  166   173 #>  [7929,]  150  163  166  173  171  167  162  169  166   173 #>  [7930,]  150  163  166  173  171  167  162  169  166   173 #>  [7931,]  150  163  166  173  171  167  162  170  166   173 #>  [7932,]  150  163  166  173  171  167  162  169  166   173 #>  [7933,]  150  163  166  173  171  167  162  170  166   173 #>  [7934,]  150  163  166  173  171  167  162  169  166   173 #>  [7935,]  149  164  167  174  172  168  163  168  165   172 #>  [7936,]  150  163  166  173  171  167  162  169  166   173 #>  [7937,]  150  163  166  173  171  167  162  170  166   173 #>  [7938,]  150  163  166  173  171  167  162  170  166   173 #>  [7939,]  150  163  166  173  171  167  162  170  166   173 #>  [7940,]  150  163  166  173  171  167  162  169  166   173 #>  [7941,]  150  163  166  173  171  167  162  169  166   173 #>  [7942,]  150  163  166  173  171  167  162  169  166   173 #>  [7943,]  149  165  167  174  172  168  163  168  165   172 #>  [7944,]  149  164  167  174  172  168  163  168  165   172 #>  [7945,]  150  163  166  173  171  167  162  170  166   173 #>  [7946,]  150  163  166  173  171  167  162  170  166   173 #>  [7947,]  150  163  166  173  171  167  162  170  166   173 #>  [7948,]  150  163  166  173  171  167  162  169  166   173 #>  [7949,]  149  165  167  174  172  168  163  168  165   172 #>  [7950,]  150  163  166  173  171  167  162  170  166   173 #>  [7951,]  150  163  166  173  171  167  162  169  166   173 #>  [7952,]  149  164  167  174  172  168  163  168  165   172 #>  [7953,]  150  163  166  173  171  167  162  170  166   173 #>  [7954,]  150  163  166  173  171  167  162  169  166   173 #>  [7955,]  149  165  167  174  172  168  163  168  165   172 #>  [7956,]  150  163  166  173  171  167  162  170  166   173 #>  [7957,]  150  163  166  173  171  167  162  170  166   173 #>  [7958,]  149  164  167  174  172  168  163  168  165   172 #>  [7959,]  150  163  166  173  171  167  162  170  166   173 #>  [7960,]  150  163  166  173  171  167  162  169  166   173 #>  [7961,]  150  163  166  173  171  167  162  170  166   173 #>  [7962,]  150  163  166  173  171  167  162  169  166   173 #>  [7963,]  150  163  166  173  171  167  162  169  166   173 #>  [7964,]  150  163  166  173  171  167  162  170  166   173 #>  [7965,]  150  163  166  173  171  167  162  170  166   173 #>  [7966,]  149  164  167  174  172  168  163  168  165   172 #>  [7967,]  150  163  166  173  171  167  162  169  166   173 #>  [7968,]  150  163  166  173  171  167  162  169  166   173 #>  [7969,]  150  163  166  173  171  167  162  169  166   173 #>  [7970,]  150  163  166  173  171  167  162  170  166   173 #>  [7971,]  150  163  166  173  171  167  162  170  166   173 #>  [7972,]  150  163  166  173  171  167  162  170  166   173 #>  [7973,]  150  163  166  173  171  167  162  170  166   173 #>  [7974,]  150  163  166  173  171  167  162  170  166   173 #>  [7975,]  150  163  166  173  171  167  162  170  166   173 #>  [7976,]  150  163  166  173  171  167  162  170  166   173 #>  [7977,]  150  163  166  173  171  167  162  170  166   173 #>  [7978,]  150  163  166  173  171  167  162  169  166   173 #>  [7979,]  149  165  167  174  172  168  163  168  165   172 #>  [7980,]  149  165  167  174  172  168  163  168  165   172 #>  [7981,]  149  164  167  174  172  168  163  168  165   172 #>  [7982,]  149  164  167  174  172  168  163  168  165   172 #>  [7983,]  149  165  167  174  172  168  163  168  165   172 #>  [7984,]  150  163  166  173  171  167  162  170  166   173 #>  [7985,]  150  163  166  173  171  167  162  170  166   173 #>  [7986,]  150  163  166  173  171  167  162  170  166   173 #>  [7987,]  149  164  167  174  172  168  163  168  165   172 #>  [7988,]  149  165  167  174  172  168  163  168  165   172 #>  [7989,]  149  165  167  174  172  168  163  168  165   172 #>  [7990,]  149  164  167  174  172  168  163  168  165   172 #>  [7991,]  150  163  166  173  171  167  162  169  166   173 #>  [7992,]  149  164  167  174  172  168  163  168  165   172 #>  [7993,]  150  163  166  173  171  167  162  169  166   173 #>  [7994,]  150  163  166  173  171  167  162  170  166   173 #>  [7995,]  149  164  167  174  172  168  163  168  165   172 #>  [7996,]  150  163  166  173  171  167  162  170  166   173 #>  [7997,]  150  163  166  173  171  167  162  170  166   173 #>  [7998,]  150  163  166  173  171  167  162  170  166   173 #>  [7999,]  149  164  167  174  172  168  163  168  165   172 #>  [8000,]  150  163  166  173  171  167  162  170  166   173 #>  [8001,]  151  166  168  175  173  169  164  171  167   174 #>  [8002,]  152  167  169  176  174  170  164  171  167   174 #>  [8003,]  151  166  168  175  173  169  164  171  167   174 #>  [8004,]  151  166  168  175  173  169  164  171  167   174 #>  [8005,]  152  167  169  176  174  170  164  171  167   174 #>  [8006,]  151  166  168  175  173  169  164  171  167   174 #>  [8007,]  152  167  169  176  174  170  164  171  167   174 #>  [8008,]  151  166  168  175  173  169  164  171  167   174 #>  [8009,]  152  167  169  176  174  170  164  171  167   174 #>  [8010,]  152  167  169  176  174  170  164  171  167   174 #>  [8011,]  151  166  168  175  173  169  164  171  167   174 #>  [8012,]  152  167  169  176  174  170  164  171  167   174 #>  [8013,]  152  167  169  176  174  170  164  171  167   174 #>  [8014,]  151  166  168  175  173  169  164  171  167   174 #>  [8015,]  151  166  168  175  173  169  164  171  167   174 #>  [8016,]  151  166  168  175  173  169  164  171  167   174 #>  [8017,]  152  167  169  176  174  170  164  171  167   174 #>  [8018,]  152  167  169  176  174  170  164  171  167   174 #>  [8019,]  151  166  168  175  173  169  164  172  168   175 #>  [8020,]  152  167  169  176  174  170  164  172  168   175 #>  [8021,]  152  167  169  176  174  170  164  171  167   174 #>  [8022,]  152  167  169  176  174  170  164  172  168   175 #>  [8023,]  152  167  169  176  174  170  164  171  167   174 #>  [8024,]  152  167  169  176  174  170  164  171  167   174 #>  [8025,]  151  166  168  175  173  169  164  171  167   174 #>  [8026,]  151  166  168  175  173  169  164  171  167   174 #>  [8027,]  152  167  169  176  174  170  164  172  168   175 #>  [8028,]  151  166  168  175  173  169  164  171  167   174 #>  [8029,]  152  167  169  176  174  170  164  172  168   175 #>  [8030,]  152  167  169  176  174  170  164  171  167   174 #>  [8031,]  152  167  169  176  174  170  164  171  167   174 #>  [8032,]  152  167  169  176  174  170  164  171  167   174 #>  [8033,]  152  167  169  176  174  170  164  171  167   174 #>  [8034,]  151  166  168  175  173  169  164  171  167   174 #>  [8035,]  151  166  168  175  173  169  164  171  167   174 #>  [8036,]  152  167  169  176  174  170  164  172  168   175 #>  [8037,]  151  166  168  175  173  169  164  171  167   174 #>  [8038,]  151  166  168  175  173  169  164  171  167   174 #>  [8039,]  151  166  168  175  173  169  164  171  167   174 #>  [8040,]  152  167  169  176  174  170  164  171  167   174 #>  [8041,]  152  167  169  176  174  170  164  171  167   174 #>  [8042,]  151  166  168  175  173  169  164  171  167   174 #>  [8043,]  151  166  168  175  173  169  164  171  167   174 #>  [8044,]  152  167  169  176  174  170  164  171  167   174 #>  [8045,]  151  166  168  175  173  169  164  171  167   174 #>  [8046,]  151  166  168  175  173  169  164  171  167   174 #>  [8047,]  152  167  169  176  174  170  164  171  167   174 #>  [8048,]  152  167  169  176  174  170  164  171  167   174 #>  [8049,]  151  166  168  175  173  169  164  171  167   174 #>  [8050,]  152  167  169  176  174  170  164  171  167   174 #>  [8051,]  151  166  168  175  173  169  164  171  167   174 #>  [8052,]  151  166  168  175  173  169  164  171  167   174 #>  [8053,]  152  167  169  176  174  170  164  171  167   174 #>  [8054,]  152  167  169  176  174  170  164  171  167   174 #>  [8055,]  151  166  168  175  173  169  164  171  167   174 #>  [8056,]  151  166  168  175  173  169  164  171  167   174 #>  [8057,]  151  166  168  175  173  169  164  171  167   174 #>  [8058,]  152  167  169  176  174  170  164  172  168   175 #>  [8059,]  151  166  168  175  173  169  164  171  167   174 #>  [8060,]  152  167  169  176  174  170  164  171  167   174 #>  [8061,]  152  167  169  176  174  170  164  171  167   174 #>  [8062,]  151  166  168  175  173  169  164  171  167   174 #>  [8063,]  152  167  169  176  174  170  164  171  167   174 #>  [8064,]  151  166  168  175  173  169  164  172  168   175 #>  [8065,]  151  166  168  175  173  169  164  171  167   174 #>  [8066,]  151  166  168  175  173  169  164  172  168   175 #>  [8067,]  151  166  168  175  173  169  164  171  167   174 #>  [8068,]  151  166  168  175  173  169  164  171  167   174 #>  [8069,]  151  166  168  175  173  169  164  171  167   174 #>  [8070,]  152  167  169  176  174  170  164  171  167   174 #>  [8071,]  151  166  168  175  173  169  164  171  167   174 #>  [8072,]  151  166  168  175  173  169  164  171  167   174 #>  [8073,]  151  166  168  175  173  169  164  171  167   174 #>  [8074,]  151  166  168  175  173  169  164  171  167   174 #>  [8075,]  152  167  169  176  174  170  164  171  167   174 #>  [8076,]  151  166  168  175  173  169  164  171  167   174 #>  [8077,]  151  166  168  175  173  169  164  172  168   175 #>  [8078,]  152  167  169  176  174  170  164  171  167   174 #>  [8079,]  151  166  168  175  173  169  164  171  167   174 #>  [8080,]  152  167  169  176  174  170  164  171  167   174 #>  [8081,]  152  167  169  176  174  170  164  172  168   175 #>  [8082,]  151  166  168  175  173  169  164  171  167   174 #>  [8083,]  152  167  169  176  174  170  164  171  167   174 #>  [8084,]  152  167  169  176  174  170  164  171  167   174 #>  [8085,]  151  166  168  175  173  169  164  171  167   174 #>  [8086,]  152  167  169  176  174  170  164  171  167   174 #>  [8087,]  152  167  169  176  174  170  164  172  168   175 #>  [8088,]  152  167  169  176  174  170  164  171  167   174 #>  [8089,]  151  166  168  175  173  169  164  171  167   174 #>  [8090,]  151  166  168  175  173  169  164  171  167   174 #>  [8091,]  151  166  168  175  173  169  164  171  167   174 #>  [8092,]  152  167  169  176  174  170  164  171  167   174 #>  [8093,]  152  167  169  176  174  170  164  171  167   174 #>  [8094,]  151  166  168  175  173  169  164  171  167   174 #>  [8095,]  152  167  169  176  174  170  164  171  167   174 #>  [8096,]  151  166  168  175  173  169  164  171  167   174 #>  [8097,]  151  166  168  175  173  169  164  171  167   174 #>  [8098,]  151  166  168  175  173  169  164  171  167   174 #>  [8099,]  151  166  168  175  173  169  164  171  167   174 #>  [8100,]  151  166  168  175  173  169  164  172  168   175 #>  [8101,]  153  168  171  178  176  172  166  174  170   177 #>  [8102,]  153  168  170  177  175  171  165  173  169   176 #>  [8103,]  153  168  170  177  175  171  165  173  169   176 #>  [8104,]  153  168  170  177  175  171  165  173  169   176 #>  [8105,]  153  168  170  177  175  171  165  173  169   176 #>  [8106,]  153  168  171  178  176  172  166  174  170   177 #>  [8107,]  153  168  170  177  175  171  165  173  169   176 #>  [8108,]  153  168  170  177  175  171  165  173  169   176 #>  [8109,]  153  168  170  177  175  171  165  173  169   176 #>  [8110,]  153  168  170  177  175  171  165  173  169   176 #>  [8111,]  153  168  170  177  175  171  165  173  169   176 #>  [8112,]  153  168  170  177  175  171  165  173  169   176 #>  [8113,]  153  168  171  178  176  172  166  174  170   177 #>  [8114,]  153  168  171  178  176  172  166  174  170   177 #>  [8115,]  153  168  171  178  176  172  166  174  170   177 #>  [8116,]  153  168  171  178  176  172  166  174  170   177 #>  [8117,]  153  168  171  178  176  172  166  174  170   177 #>  [8118,]  153  168  170  177  175  171  165  173  169   176 #>  [8119,]  153  168  170  177  175  171  165  173  169   176 #>  [8120,]  153  168  170  177  175  171  165  173  169   176 #>  [8121,]  153  168  171  178  176  172  166  174  170   177 #>  [8122,]  153  168  170  177  175  171  165  173  169   176 #>  [8123,]  153  168  170  177  175  171  165  173  169   176 #>  [8124,]  153  168  170  177  175  171  165  173  169   176 #>  [8125,]  153  168  170  177  175  171  165  173  169   176 #>  [8126,]  153  168  170  177  175  171  165  173  169   176 #>  [8127,]  153  168  170  177  175  171  165  173  169   176 #>  [8128,]  153  168  170  177  175  171  165  173  169   176 #>  [8129,]  153  168  171  178  176  172  166  174  170   177 #>  [8130,]  153  168  170  177  175  171  165  173  169   176 #>  [8131,]  153  168  170  177  175  171  165  173  169   176 #>  [8132,]  153  168  170  177  175  171  165  173  169   176 #>  [8133,]  153  168  171  178  176  172  166  174  170   177 #>  [8134,]  153  168  170  177  175  171  165  173  169   176 #>  [8135,]  153  168  170  177  175  171  165  173  169   176 #>  [8136,]  153  168  170  177  175  171  165  173  169   176 #>  [8137,]  153  168  170  177  175  171  165  173  169   176 #>  [8138,]  153  168  170  177  175  171  165  173  169   176 #>  [8139,]  153  168  170  177  175  171  165  173  169   176 #>  [8140,]  153  168  170  177  175  171  165  173  169   176 #>  [8141,]  153  168  171  178  176  172  166  174  170   177 #>  [8142,]  153  168  170  177  175  171  165  173  169   176 #>  [8143,]  153  168  170  177  175  171  165  173  169   176 #>  [8144,]  153  168  171  178  176  172  166  174  170   177 #>  [8145,]  153  168  170  177  175  171  165  173  169   176 #>  [8146,]  153  168  170  177  175  171  165  173  169   176 #>  [8147,]  153  168  170  177  175  171  165  173  169   176 #>  [8148,]  153  168  170  177  175  171  165  173  169   176 #>  [8149,]  153  168  170  177  175  171  165  173  169   176 #>  [8150,]  153  168  171  178  176  172  166  174  170   177 #>  [8151,]  153  168  170  177  175  171  165  173  169   176 #>  [8152,]  153  168  170  177  175  171  165  173  169   176 #>  [8153,]  153  168  170  177  175  171  165  173  169   176 #>  [8154,]  153  168  170  177  175  171  165  173  169   176 #>  [8155,]  153  168  170  177  175  171  165  173  169   176 #>  [8156,]  153  168  170  177  175  171  165  173  169   176 #>  [8157,]  153  168  170  177  175  171  165  173  169   176 #>  [8158,]  153  168  170  177  175  171  165  173  169   176 #>  [8159,]  153  168  171  178  176  172  166  174  170   177 #>  [8160,]  153  168  170  177  175  171  165  173  169   176 #>  [8161,]  153  168  171  178  176  172  166  174  170   177 #>  [8162,]  153  168  170  177  175  171  165  173  169   176 #>  [8163,]  153  168  170  177  175  171  165  173  169   176 #>  [8164,]  153  168  170  177  175  171  165  173  169   176 #>  [8165,]  153  168  170  177  175  171  165  173  169   176 #>  [8166,]  153  168  170  177  175  171  165  173  169   176 #>  [8167,]  153  168  170  177  175  171  165  173  169   176 #>  [8168,]  153  168  171  178  176  172  166  174  170   177 #>  [8169,]  153  168  170  177  175  171  165  173  169   176 #>  [8170,]  153  168  171  178  176  172  166  174  170   177 #>  [8171,]  153  168  170  177  175  171  165  173  169   176 #>  [8172,]  153  168  170  177  175  171  165  173  169   176 #>  [8173,]  153  168  171  178  176  172  166  174  170   177 #>  [8174,]  153  168  170  177  175  171  165  173  169   176 #>  [8175,]  153  168  170  177  175  171  165  173  169   176 #>  [8176,]  153  168  171  178  176  172  166  174  170   177 #>  [8177,]  153  168  170  177  175  171  165  173  169   176 #>  [8178,]  153  168  170  177  175  171  165  173  169   176 #>  [8179,]  153  168  170  177  175  171  165  173  169   176 #>  [8180,]  153  168  170  177  175  171  165  173  169   176 #>  [8181,]  153  168  171  178  176  172  166  174  170   177 #>  [8182,]  153  168  170  177  175  171  165  173  169   176 #>  [8183,]  153  168  171  178  176  172  166  174  170   177 #>  [8184,]  153  168  170  177  175  171  165  173  169   176 #>  [8185,]  153  168  170  177  175  171  165  173  169   176 #>  [8186,]  153  168  171  178  176  172  166  174  170   177 #>  [8187,]  153  168  170  177  175  171  165  173  169   176 #>  [8188,]  153  168  170  177  175  171  165  173  169   176 #>  [8189,]  153  168  170  177  175  171  165  173  169   176 #>  [8190,]  153  168  170  177  175  171  165  173  169   176 #>  [8191,]  153  168  170  177  175  171  165  173  169   176 #>  [8192,]  153  168  170  177  175  171  165  173  169   176 #>  [8193,]  153  168  170  177  175  171  165  173  169   176 #>  [8194,]  153  168  170  177  175  171  165  173  169   176 #>  [8195,]  153  168  170  177  175  171  165  173  169   176 #>  [8196,]  153  168  171  178  176  172  166  174  170   177 #>  [8197,]  153  168  170  177  175  171  165  173  169   176 #>  [8198,]  153  168  170  177  175  171  165  173  169   176 #>  [8199,]  153  168  171  178  176  172  166  174  170   177 #>  [8200,]  153  168  170  177  175  171  165  173  169   176 #>  [8201,]  155  169  172  179  177  173  167  175  172   179 #>  [8202,]  155  169  172  179  177  173  167  175  172   179 #>  [8203,]  154  170  173  180  178  174  168  175  172   179 #>  [8204,]  155  169  172  179  177  173  167  175  171   178 #>  [8205,]  154  171  174  180  178  174  168  175  172   179 #>  [8206,]  155  169  172  179  177  173  167  175  172   179 #>  [8207,]  155  169  172  179  177  173  167  175  172   179 #>  [8208,]  155  169  172  179  177  173  167  175  171   178 #>  [8209,]  154  171  174  180  178  174  168  175  171   178 #>  [8210,]  154  171  174  180  178  174  168  175  172   179 #>  [8211,]  154  171  174  180  178  174  168  175  171   178 #>  [8212,]  155  169  172  179  177  173  167  175  172   179 #>  [8213,]  155  169  172  179  177  173  167  175  171   178 #>  [8214,]  154  171  174  180  178  174  168  175  172   179 #>  [8215,]  155  169  172  179  177  173  167  175  172   179 #>  [8216,]  155  169  172  179  177  173  167  175  172   179 #>  [8217,]  155  169  172  179  177  173  167  175  171   178 #>  [8218,]  155  169  172  179  177  173  167  175  172   179 #>  [8219,]  155  169  172  179  177  173  167  175  172   179 #>  [8220,]  155  169  172  179  177  173  167  175  172   179 #>  [8221,]  154  171  174  180  178  174  168  175  172   179 #>  [8222,]  155  169  172  179  177  173  167  175  171   178 #>  [8223,]  155  169  172  179  177  173  167  175  172   179 #>  [8224,]  154  171  174  180  178  174  168  175  172   179 #>  [8225,]  154  170  173  180  178  174  168  175  172   179 #>  [8226,]  155  169  172  179  177  173  167  175  172   179 #>  [8227,]  155  169  172  179  177  173  167  175  171   178 #>  [8228,]  154  171  174  180  178  174  168  175  172   179 #>  [8229,]  155  169  172  179  177  173  167  175  172   179 #>  [8230,]  155  169  172  179  177  173  167  175  171   178 #>  [8231,]  154  171  174  180  178  174  168  175  172   179 #>  [8232,]  154  171  174  180  178  174  168  175  172   179 #>  [8233,]  155  169  172  179  177  173  167  175  172   179 #>  [8234,]  154  171  174  180  178  174  168  175  172   179 #>  [8235,]  154  171  174  180  178  174  168  175  171   178 #>  [8236,]  155  169  172  179  177  173  167  175  172   179 #>  [8237,]  155  169  172  179  177  173  167  175  172   179 #>  [8238,]  155  169  172  179  177  173  167  175  172   179 #>  [8239,]  154  170  173  180  178  174  168  175  172   179 #>  [8240,]  154  171  174  180  178  174  168  175  172   179 #>  [8241,]  155  169  172  179  177  173  167  175  172   179 #>  [8242,]  154  171  174  180  178  174  168  175  172   179 #>  [8243,]  155  169  172  179  177  173  167  175  171   178 #>  [8244,]  155  169  172  179  177  173  167  175  171   178 #>  [8245,]  155  169  172  179  177  173  167  175  172   179 #>  [8246,]  155  169  172  179  177  173  167  175  172   179 #>  [8247,]  154  171  174  180  178  174  168  175  172   179 #>  [8248,]  154  171  174  180  178  174  168  175  172   179 #>  [8249,]  155  169  172  179  177  173  167  175  171   178 #>  [8250,]  155  169  172  179  177  173  167  175  172   179 #>  [8251,]  155  169  172  179  177  173  167  175  172   179 #>  [8252,]  154  171  174  180  178  174  168  175  171   178 #>  [8253,]  155  169  172  179  177  173  167  175  172   179 #>  [8254,]  154  171  174  180  178  174  168  175  171   178 #>  [8255,]  155  169  172  179  177  173  167  175  171   178 #>  [8256,]  155  169  172  179  177  173  167  175  172   179 #>  [8257,]  155  169  172  179  177  173  167  175  172   179 #>  [8258,]  155  169  172  179  177  173  167  175  171   178 #>  [8259,]  155  169  172  179  177  173  167  175  172   179 #>  [8260,]  155  169  172  179  177  173  167  175  172   179 #>  [8261,]  155  169  172  179  177  173  167  175  172   179 #>  [8262,]  154  171  174  180  178  174  168  175  172   179 #>  [8263,]  155  169  172  179  177  173  167  175  172   179 #>  [8264,]  155  169  172  179  177  173  167  175  172   179 #>  [8265,]  154  170  173  180  178  174  168  175  172   179 #>  [8266,]  155  169  172  179  177  173  167  175  171   178 #>  [8267,]  155  169  172  179  177  173  167  175  172   179 #>  [8268,]  155  169  172  179  177  173  167  175  172   179 #>  [8269,]  155  169  172  179  177  173  167  175  171   178 #>  [8270,]  154  170  173  180  178  174  168  175  172   179 #>  [8271,]  155  169  172  179  177  173  167  175  172   179 #>  [8272,]  154  171  174  180  178  174  168  175  172   179 #>  [8273,]  155  169  172  179  177  173  167  175  172   179 #>  [8274,]  154  171  174  180  178  174  168  175  172   179 #>  [8275,]  155  169  172  179  177  173  167  175  172   179 #>  [8276,]  154  171  174  180  178  174  168  175  172   179 #>  [8277,]  155  169  172  179  177  173  167  175  172   179 #>  [8278,]  155  169  172  179  177  173  167  175  172   179 #>  [8279,]  155  169  172  179  177  173  167  175  171   178 #>  [8280,]  155  169  172  179  177  173  167  175  171   178 #>  [8281,]  155  169  172  179  177  173  167  175  171   178 #>  [8282,]  154  171  174  180  178  174  168  175  171   178 #>  [8283,]  155  169  172  179  177  173  167  175  171   178 #>  [8284,]  155  169  172  179  177  173  167  175  172   179 #>  [8285,]  155  169  172  179  177  173  167  175  172   179 #>  [8286,]  155  169  172  179  177  173  167  175  172   179 #>  [8287,]  155  169  172  179  177  173  167  175  171   178 #>  [8288,]  155  169  172  179  177  173  167  175  171   178 #>  [8289,]  155  169  172  179  177  173  167  175  171   178 #>  [8290,]  155  169  172  179  177  173  167  175  171   178 #>  [8291,]  154  171  174  180  178  174  168  175  172   179 #>  [8292,]  155  169  172  179  177  173  167  175  171   178 #>  [8293,]  155  169  172  179  177  173  167  175  172   179 #>  [8294,]  155  169  172  179  177  173  167  175  172   179 #>  [8295,]  155  169  172  179  177  173  167  175  171   178 #>  [8296,]  155  169  172  179  177  173  167  175  172   179 #>  [8297,]  155  169  172  179  177  173  167  175  172   179 #>  [8298,]  154  170  173  180  178  174  168  175  172   179 #>  [8299,]  155  169  172  179  177  173  167  175  171   178 #>  [8300,]  155  169  172  179  177  173  167  175  172   179 #>  [8301,]  157  173  175  182  180  176  170  177  174   181 #>  [8302,]  156  172  175  182  180  176  170  177  174   181 #>  [8303,]  156  172  175  181  179  175  169  176  173   180 #>  [8304,]  156  172  175  182  180  176  170  177  174   181 #>  [8305,]  157  173  175  182  180  176  170  177  174   181 #>  [8306,]  156  172  175  181  179  175  169  176  173   180 #>  [8307,]  156  172  175  182  180  176  170  177  174   181 #>  [8308,]  156  172  175  182  180  176  170  177  174   181 #>  [8309,]  156  172  175  182  180  176  170  177  174   181 #>  [8310,]  157  173  175  182  180  176  170  177  174   181 #>  [8311,]  157  173  175  182  180  176  170  177  174   181 #>  [8312,]  156  172  175  182  180  176  170  177  174   181 #>  [8313,]  156  172  175  182  180  176  170  177  174   181 #>  [8314,]  157  173  175  182  180  176  170  177  174   181 #>  [8315,]  157  173  175  182  180  176  170  177  174   181 #>  [8316,]  156  172  175  182  180  176  170  177  174   181 #>  [8317,]  157  173  175  182  180  176  170  177  174   181 #>  [8318,]  157  173  175  182  180  176  170  177  174   181 #>  [8319,]  156  172  175  181  179  175  169  176  173   180 #>  [8320,]  156  172  175  182  180  176  170  177  174   181 #>  [8321,]  156  172  175  182  180  176  170  177  174   181 #>  [8322,]  157  173  175  182  180  176  170  177  174   181 #>  [8323,]  156  172  175  182  180  176  170  177  174   181 #>  [8324,]  156  172  175  182  180  176  170  177  174   181 #>  [8325,]  156  172  175  182  180  176  170  177  174   181 #>  [8326,]  157  173  175  182  180  176  170  177  174   181 #>  [8327,]  157  173  175  182  180  176  170  177  174   181 #>  [8328,]  156  172  175  182  180  176  170  177  174   181 #>  [8329,]  156  172  175  182  180  176  170  177  174   181 #>  [8330,]  156  172  175  182  180  176  170  177  174   181 #>  [8331,]  157  173  175  182  180  176  170  177  174   181 #>  [8332,]  157  173  175  182  180  176  170  177  174   181 #>  [8333,]  156  172  175  182  180  176  170  177  174   181 #>  [8334,]  156  172  175  181  179  175  169  176  173   180 #>  [8335,]  156  172  175  182  180  176  170  177  174   181 #>  [8336,]  156  172  175  182  180  176  170  177  174   181 #>  [8337,]  156  172  175  181  179  175  169  176  173   180 #>  [8338,]  156  172  175  181  179  175  169  176  173   180 #>  [8339,]  156  172  175  182  180  176  170  177  174   181 #>  [8340,]  156  172  175  182  180  176  170  177  174   181 #>  [8341,]  156  172  175  182  180  176  170  177  174   181 #>  [8342,]  156  172  175  182  180  176  170  177  174   181 #>  [8343,]  157  173  175  182  180  176  170  177  174   181 #>  [8344,]  156  172  175  182  180  176  170  177  174   181 #>  [8345,]  156  172  175  181  179  175  169  176  173   180 #>  [8346,]  156  172  175  182  180  176  170  177  174   181 #>  [8347,]  157  173  175  182  180  176  170  177  174   181 #>  [8348,]  156  172  175  182  180  176  170  177  174   181 #>  [8349,]  156  172  175  181  179  175  169  176  173   180 #>  [8350,]  156  172  175  182  180  176  170  177  174   181 #>  [8351,]  156  172  175  182  180  176  170  177  174   181 #>  [8352,]  156  172  175  181  179  175  169  176  173   180 #>  [8353,]  156  172  175  182  180  176  170  177  174   181 #>  [8354,]  156  172  175  182  180  176  170  177  174   181 #>  [8355,]  156  172  175  182  180  176  170  177  174   181 #>  [8356,]  156  172  175  182  180  176  170  177  174   181 #>  [8357,]  156  172  175  182  180  176  170  177  174   181 #>  [8358,]  157  173  175  182  180  176  170  177  174   181 #>  [8359,]  157  173  175  182  180  176  170  177  174   181 #>  [8360,]  156  172  175  182  180  176  170  177  174   181 #>  [8361,]  157  173  175  182  180  176  170  177  174   181 #>  [8362,]  156  172  175  182  180  176  170  177  174   181 #>  [8363,]  156  172  175  182  180  176  170  177  174   181 #>  [8364,]  156  172  175  182  180  176  170  177  174   181 #>  [8365,]  156  172  175  182  180  176  170  177  174   181 #>  [8366,]  157  173  175  182  180  176  170  177  174   181 #>  [8367,]  156  172  175  182  180  176  170  177  174   181 #>  [8368,]  156  172  175  181  179  175  169  176  173   180 #>  [8369,]  156  172  175  182  180  176  170  177  174   181 #>  [8370,]  157  173  175  182  180  176  170  177  174   181 #>  [8371,]  157  173  175  182  180  176  170  177  174   181 #>  [8372,]  156  172  175  181  179  175  169  176  173   180 #>  [8373,]  156  172  175  182  180  176  170  177  174   181 #>  [8374,]  156  172  175  182  180  176  170  177  174   181 #>  [8375,]  157  173  175  182  180  176  170  177  174   181 #>  [8376,]  156  172  175  182  180  176  170  177  174   181 #>  [8377,]  157  173  175  182  180  176  170  177  174   181 #>  [8378,]  156  172  175  182  180  176  170  177  174   181 #>  [8379,]  157  173  175  182  180  176  170  177  174   181 #>  [8380,]  156  172  175  182  180  176  170  177  174   181 #>  [8381,]  156  172  175  182  180  176  170  177  174   181 #>  [8382,]  156  172  175  182  180  176  170  177  174   181 #>  [8383,]  156  172  175  182  180  176  170  177  174   181 #>  [8384,]  156  172  175  182  180  176  170  177  174   181 #>  [8385,]  156  172  175  182  180  176  170  177  174   181 #>  [8386,]  156  172  175  182  180  176  170  177  174   181 #>  [8387,]  157  173  175  182  180  176  170  177  174   181 #>  [8388,]  156  172  175  182  180  176  170  177  174   181 #>  [8389,]  156  172  175  182  180  176  170  177  174   181 #>  [8390,]  157  173  175  182  180  176  170  177  174   181 #>  [8391,]  157  173  175  182  180  176  170  177  174   181 #>  [8392,]  156  172  175  182  180  176  170  177  174   181 #>  [8393,]  156  172  175  182  180  176  170  177  174   181 #>  [8394,]  156  172  175  182  180  176  170  177  174   181 #>  [8395,]  157  173  175  182  180  176  170  177  174   181 #>  [8396,]  156  172  175  181  179  175  169  176  173   180 #>  [8397,]  156  172  175  182  180  176  170  177  174   181 #>  [8398,]  156  172  175  182  180  176  170  177  174   181 #>  [8399,]  156  172  175  182  180  176  170  177  174   181 #>  [8400,]  157  173  175  182  180  176  170  177  174   181 #>  [8401,]  159  175  177  184  182  178  172  179  176   182 #>  [8402,]  158  174  176  183  181  177  171  178  175   182 #>  [8403,]  158  174  176  183  181  177  171  178  175   182 #>  [8404,]  158  174  176  183  181  177  171  178  175   182 #>  [8405,]  158  174  176  183  181  177  171  178  175   182 #>  [8406,]  158  174  176  183  181  177  171  178  175   182 #>  [8407,]  158  174  176  183  181  177  171  178  175   182 #>  [8408,]  158  174  176  183  181  177  171  178  175   182 #>  [8409,]  159  175  177  184  182  178  172  179  176   182 #>  [8410,]  158  174  176  183  181  177  171  178  175   182 #>  [8411,]  158  174  176  183  181  177  171  178  175   182 #>  [8412,]  158  174  176  183  181  177  171  178  175   182 #>  [8413,]  159  175  177  184  182  178  172  179  176   182 #>  [8414,]  158  174  176  183  181  177  171  178  175   182 #>  [8415,]  158  174  176  183  181  177  171  178  175   182 #>  [8416,]  158  174  176  183  181  177  171  178  175   182 #>  [8417,]  159  175  177  184  182  178  172  179  176   182 #>  [8418,]  159  175  177  184  182  178  172  179  176   182 #>  [8419,]  158  174  176  183  181  177  171  178  175   182 #>  [8420,]  159  175  177  184  182  178  172  179  176   182 #>  [8421,]  158  174  176  183  181  177  171  178  175   182 #>  [8422,]  158  174  176  183  181  177  171  178  175   182 #>  [8423,]  158  174  176  183  181  177  171  178  175   182 #>  [8424,]  158  174  176  183  181  177  171  178  175   182 #>  [8425,]  158  174  176  183  181  177  171  178  175   182 #>  [8426,]  158  174  176  183  181  177  171  178  175   182 #>  [8427,]  159  175  177  184  182  178  172  179  176   182 #>  [8428,]  158  174  176  183  181  177  171  178  175   182 #>  [8429,]  158  174  176  183  181  177  171  178  175   182 #>  [8430,]  158  174  176  183  181  177  171  178  175   182 #>  [8431,]  158  174  176  183  181  177  171  178  175   182 #>  [8432,]  158  174  176  183  181  177  171  178  175   182 #>  [8433,]  159  175  177  184  182  178  172  179  176   182 #>  [8434,]  158  174  176  183  181  177  171  178  175   182 #>  [8435,]  158  174  176  183  181  177  171  178  175   182 #>  [8436,]  159  175  177  184  182  178  172  179  176   182 #>  [8437,]  158  174  176  183  181  177  171  178  175   182 #>  [8438,]  159  175  177  184  182  178  172  179  176   182 #>  [8439,]  158  174  176  183  181  177  171  178  175   182 #>  [8440,]  158  174  176  183  181  177  171  178  175   182 #>  [8441,]  158  174  176  183  181  177  171  178  175   182 #>  [8442,]  159  175  177  184  182  178  172  179  176   182 #>  [8443,]  158  174  176  183  181  177  171  178  175   182 #>  [8444,]  158  174  176  183  181  177  171  178  175   182 #>  [8445,]  158  174  176  183  181  177  171  178  175   182 #>  [8446,]  158  174  176  183  181  177  171  178  175   182 #>  [8447,]  158  174  176  183  181  177  171  178  175   182 #>  [8448,]  158  174  176  183  181  177  171  178  175   182 #>  [8449,]  158  174  176  183  181  177  171  178  175   182 #>  [8450,]  158  174  176  183  181  177  171  178  175   182 #>  [8451,]  159  175  177  184  182  178  172  179  176   182 #>  [8452,]  158  174  176  183  181  177  171  178  175   182 #>  [8453,]  159  175  177  184  182  178  172  179  176   182 #>  [8454,]  159  175  177  184  182  178  172  179  176   182 #>  [8455,]  158  174  176  183  181  177  171  178  175   182 #>  [8456,]  159  175  177  184  182  178  172  179  176   182 #>  [8457,]  158  174  176  183  181  177  171  178  175   182 #>  [8458,]  158  174  176  183  181  177  171  178  175   182 #>  [8459,]  158  174  176  183  181  177  171  178  175   182 #>  [8460,]  158  174  176  183  181  177  171  178  175   182 #>  [8461,]  158  174  176  183  181  177  171  178  175   182 #>  [8462,]  158  174  176  183  181  177  171  178  175   182 #>  [8463,]  158  174  176  183  181  177  171  178  175   182 #>  [8464,]  158  174  176  183  181  177  171  178  175   182 #>  [8465,]  159  175  177  184  182  178  172  179  176   182 #>  [8466,]  159  175  177  184  182  178  172  179  176   182 #>  [8467,]  158  174  176  183  181  177  171  178  175   182 #>  [8468,]  158  174  176  183  181  177  171  178  175   182 #>  [8469,]  158  174  176  183  181  177  171  178  175   182 #>  [8470,]  158  174  176  183  181  177  171  178  175   182 #>  [8471,]  158  174  176  183  181  177  171  178  175   182 #>  [8472,]  158  174  176  183  181  177  171  178  175   182 #>  [8473,]  158  174  176  183  181  177  171  178  175   182 #>  [8474,]  158  174  176  183  181  177  171  178  175   182 #>  [8475,]  158  174  176  183  181  177  171  178  175   182 #>  [8476,]  158  174  176  183  181  177  171  178  175   182 #>  [8477,]  159  175  177  184  182  178  172  179  176   182 #>  [8478,]  158  174  176  183  181  177  171  178  175   182 #>  [8479,]  159  175  177  184  182  178  172  179  176   182 #>  [8480,]  158  174  176  183  181  177  171  178  175   182 #>  [8481,]  158  174  176  183  181  177  171  178  175   182 #>  [8482,]  159  175  177  184  182  178  172  179  176   182 #>  [8483,]  159  175  177  184  182  178  172  179  176   182 #>  [8484,]  159  175  177  184  182  178  172  179  176   182 #>  [8485,]  159  175  177  184  182  178  172  179  176   182 #>  [8486,]  158  174  176  183  181  177  171  178  175   182 #>  [8487,]  159  175  177  184  182  178  172  179  176   182 #>  [8488,]  158  174  176  183  181  177  171  178  175   182 #>  [8489,]  158  174  176  183  181  177  171  178  175   182 #>  [8490,]  158  174  176  183  181  177  171  178  175   182 #>  [8491,]  159  175  177  184  182  178  172  179  176   182 #>  [8492,]  158  174  176  183  181  177  171  178  175   182 #>  [8493,]  159  175  177  184  182  178  172  179  176   182 #>  [8494,]  159  175  177  184  182  178  172  179  176   182 #>  [8495,]  158  174  176  183  181  177  171  178  175   182 #>  [8496,]  158  174  176  183  181  177  171  178  175   182 #>  [8497,]  158  174  176  183  181  177  171  178  175   182 #>  [8498,]  158  174  176  183  181  177  171  178  175   182 #>  [8499,]  158  174  176  183  181  177  171  178  175   182 #>  [8500,]  158  174  176  183  181  177  171  178  175   182 #>  [8501,]  161  177  178  185  183  179  173  180  177   183 #>  [8502,]  161  177  178  185  183  179  173  180  177   183 #>  [8503,]  160  176  180  187  185  181  175  182  178   184 #>  [8504,]  160  176  179  186  184  180  174  181  178   184 #>  [8505,]  160  176  179  186  184  180  174  181  178   184 #>  [8506,]  160  176  180  187  185  181  175  182  178   184 #>  [8507,]  161  177  178  185  183  179  173  180  177   183 #>  [8508,]  161  177  178  185  183  179  173  180  177   183 #>  [8509,]  160  176  179  186  184  180  174  181  178   184 #>  [8510,]  160  176  179  186  184  180  174  181  178   184 #>  [8511,]  160  176  179  186  184  180  174  181  178   184 #>  [8512,]  161  177  178  185  183  179  173  180  177   183 #>  [8513,]  161  177  178  185  183  179  173  180  177   183 #>  [8514,]  160  176  179  186  184  180  174  181  178   184 #>  [8515,]  161  177  178  185  183  179  173  180  177   183 #>  [8516,]  161  177  178  185  183  179  173  180  177   183 #>  [8517,]  161  177  178  185  183  179  173  180  177   183 #>  [8518,]  161  177  178  185  183  179  173  180  177   183 #>  [8519,]  161  177  178  185  183  179  173  180  177   183 #>  [8520,]  161  177  178  185  183  179  173  180  177   183 #>  [8521,]  160  176  179  186  184  180  174  181  178   184 #>  [8522,]  161  177  178  185  183  179  173  180  177   183 #>  [8523,]  161  177  178  185  183  179  173  180  177   183 #>  [8524,]  160  176  179  186  184  180  174  181  178   184 #>  [8525,]  160  176  180  187  185  181  175  182  178   184 #>  [8526,]  161  177  178  185  183  179  173  180  177   183 #>  [8527,]  161  177  178  185  183  179  173  180  177   183 #>  [8528,]  160  176  180  187  185  181  175  182  178   184 #>  [8529,]  161  177  178  185  183  179  173  180  177   183 #>  [8530,]  161  177  178  185  183  179  173  180  177   183 #>  [8531,]  160  176  179  186  184  180  174  181  178   184 #>  [8532,]  160  176  179  186  184  180  174  181  178   184 #>  [8533,]  161  177  178  185  183  179  173  180  177   183 #>  [8534,]  160  176  180  187  185  181  175  182  178   184 #>  [8535,]  160  176  179  186  184  180  174  181  178   184 #>  [8536,]  161  177  178  185  183  179  173  180  177   183 #>  [8537,]  161  177  178  185  183  179  173  180  177   183 #>  [8538,]  161  177  178  185  183  179  173  180  177   183 #>  [8539,]  160  176  179  186  184  180  174  181  178   184 #>  [8540,]  160  176  179  186  184  180  174  181  178   184 #>  [8541,]  161  177  178  185  183  179  173  180  177   183 #>  [8542,]  160  176  179  186  184  180  174  181  178   184 #>  [8543,]  161  177  178  185  183  179  173  180  177   183 #>  [8544,]  161  177  178  185  183  179  173  180  177   183 #>  [8545,]  161  177  178  185  183  179  173  180  177   183 #>  [8546,]  161  177  178  185  183  179  173  180  177   183 #>  [8547,]  160  176  179  186  184  180  174  181  178   184 #>  [8548,]  160  176  179  186  184  180  174  181  178   184 #>  [8549,]  161  177  178  185  183  179  173  180  177   183 #>  [8550,]  161  177  178  185  183  179  173  180  177   183 #>  [8551,]  161  177  178  185  183  179  173  180  177   183 #>  [8552,]  160  176  179  186  184  180  174  181  178   184 #>  [8553,]  161  177  178  185  183  179  173  180  177   183 #>  [8554,]  160  176  179  186  184  180  174  181  178   184 #>  [8555,]  161  177  178  185  183  179  173  180  177   183 #>  [8556,]  161  177  178  185  183  179  173  180  177   183 #>  [8557,]  160  176  179  186  184  180  174  181  178   184 #>  [8558,]  161  177  178  185  183  179  173  180  177   183 #>  [8559,]  161  177  178  185  183  179  173  180  177   183 #>  [8560,]  161  177  178  185  183  179  173  180  177   183 #>  [8561,]  161  177  178  185  183  179  173  180  177   183 #>  [8562,]  160  176  179  186  184  180  174  181  178   184 #>  [8563,]  161  177  178  185  183  179  173  180  177   183 #>  [8564,]  161  177  178  185  183  179  173  180  177   183 #>  [8565,]  160  176  180  187  185  181  175  182  178   184 #>  [8566,]  161  177  178  185  183  179  173  180  177   183 #>  [8567,]  160  176  179  186  184  180  174  181  178   184 #>  [8568,]  161  177  178  185  183  179  173  180  177   183 #>  [8569,]  161  177  178  185  183  179  173  180  177   183 #>  [8570,]  160  176  180  187  185  181  175  182  178   184 #>  [8571,]  161  177  178  185  183  179  173  180  177   183 #>  [8572,]  160  176  179  186  184  180  174  181  178   184 #>  [8573,]  160  176  180  187  185  181  175  182  178   184 #>  [8574,]  160  176  179  186  184  180  174  181  178   184 #>  [8575,]  161  177  178  185  183  179  173  180  177   183 #>  [8576,]  160  176  179  186  184  180  174  181  178   184 #>  [8577,]  161  177  178  185  183  179  173  180  177   183 #>  [8578,]  161  177  178  185  183  179  173  180  177   183 #>  [8579,]  160  176  179  186  184  180  174  181  178   184 #>  [8580,]  161  177  178  185  183  179  173  180  177   183 #>  [8581,]  161  177  178  185  183  179  173  180  177   183 #>  [8582,]  160  176  179  186  184  180  174  181  178   184 #>  [8583,]  161  177  178  185  183  179  173  180  177   183 #>  [8584,]  161  177  178  185  183  179  173  180  177   183 #>  [8585,]  161  177  178  185  183  179  173  180  177   183 #>  [8586,]  160  176  179  186  184  180  174  181  178   184 #>  [8587,]  161  177  178  185  183  179  173  180  177   183 #>  [8588,]  160  176  179  186  184  180  174  181  178   184 #>  [8589,]  160  176  179  186  184  180  174  181  178   184 #>  [8590,]  161  177  178  185  183  179  173  180  177   183 #>  [8591,]  160  176  179  186  184  180  174  181  178   184 #>  [8592,]  160  176  179  186  184  180  174  181  178   184 #>  [8593,]  161  177  178  185  183  179  173  180  177   183 #>  [8594,]  160  176  179  186  184  180  174  181  178   184 #>  [8595,]  161  177  178  185  183  179  173  180  177   183 #>  [8596,]  161  177  178  185  183  179  173  180  177   183 #>  [8597,]  161  177  178  185  183  179  173  180  177   183 #>  [8598,]  160  176  180  187  185  181  175  182  178   184 #>  [8599,]  160  176  179  186  184  180  174  181  178   184 #>  [8600,]  161  177  178  185  183  179  173  180  177   183 #>  [8601,]  163  178  181  188  186  182  176  183  179   185 #>  [8602,]  163  178  181  188  186  182  176  183  179   185 #>  [8603,]  162  179  182  189  187  183  177  184  180   186 #>  [8604,]  163  178  181  188  186  182  176  183  179   185 #>  [8605,]  163  178  181  188  186  182  176  183  179   185 #>  [8606,]  163  178  181  188  186  182  176  183  179   185 #>  [8607,]  162  179  182  189  187  183  177  184  180   186 #>  [8608,]  162  179  182  189  187  184  177  184  180   186 #>  [8609,]  163  178  181  188  186  182  176  183  179   185 #>  [8610,]  163  178  181  188  186  182  176  183  179   185 #>  [8611,]  163  178  181  188  186  182  176  183  179   185 #>  [8612,]  163  178  181  188  186  182  176  183  179   185 #>  [8613,]  162  180  182  189  187  184  177  184  180   186 #>  [8614,]  163  178  181  188  186  182  176  183  179   185 #>  [8615,]  163  178  181  188  186  182  176  183  179   185 #>  [8616,]  162  179  182  189  187  184  177  184  180   186 #>  [8617,]  163  178  181  188  186  182  176  183  179   185 #>  [8618,]  163  178  181  188  186  182  176  183  179   185 #>  [8619,]  163  178  181  188  186  182  176  183  179   185 #>  [8620,]  162  180  182  189  187  183  177  184  180   186 #>  [8621,]  163  178  181  188  186  182  176  183  179   185 #>  [8622,]  162  180  182  189  187  184  177  184  180   186 #>  [8623,]  163  178  181  188  186  182  176  183  179   185 #>  [8624,]  162  180  182  189  187  184  177  184  180   186 #>  [8625,]  162  179  182  189  187  183  177  184  180   186 #>  [8626,]  163  178  181  188  186  182  176  183  179   185 #>  [8627,]  163  178  181  188  186  182  176  183  179   185 #>  [8628,]  163  178  181  188  186  182  176  183  179   185 #>  [8629,]  163  178  181  188  186  182  176  183  179   185 #>  [8630,]  163  178  181  188  186  182  176  183  179   185 #>  [8631,]  163  178  181  188  186  182  176  183  179   185 #>  [8632,]  163  178  181  188  186  182  176  183  179   185 #>  [8633,]  163  178  181  188  186  182  176  183  179   185 #>  [8634,]  163  178  181  188  186  182  176  183  179   185 #>  [8635,]  163  178  181  188  186  182  176  183  179   185 #>  [8636,]  163  178  181  188  186  182  176  183  179   185 #>  [8637,]  163  178  181  188  186  182  176  183  179   185 #>  [8638,]  163  178  181  188  186  182  176  183  179   185 #>  [8639,]  162  180  182  189  187  183  177  184  180   186 #>  [8640,]  162  179  182  189  187  184  177  184  180   186 #>  [8641,]  163  178  181  188  186  182  176  183  179   185 #>  [8642,]  163  178  181  188  186  182  176  183  179   185 #>  [8643,]  163  178  181  188  186  182  176  183  179   185 #>  [8644,]  162  179  182  189  187  183  177  184  180   186 #>  [8645,]  163  178  181  188  186  182  176  183  179   185 #>  [8646,]  162  179  182  189  187  184  177  184  180   186 #>  [8647,]  163  178  181  188  186  182  176  183  179   185 #>  [8648,]  163  178  181  188  186  182  176  183  179   185 #>  [8649,]  162  179  182  189  187  183  177  184  180   186 #>  [8650,]  162  180  182  189  187  184  177  184  180   186 #>  [8651,]  163  178  181  188  186  182  176  183  179   185 #>  [8652,]  163  178  181  188  186  182  176  183  179   185 #>  [8653,]  162  180  182  189  187  183  177  184  180   186 #>  [8654,]  162  180  182  189  187  184  177  184  180   186 #>  [8655,]  162  179  182  189  187  183  177  184  180   186 #>  [8656,]  162  180  182  189  187  183  177  184  180   186 #>  [8657,]  163  178  181  188  186  182  176  183  179   185 #>  [8658,]  163  178  181  188  186  182  176  183  179   185 #>  [8659,]  162  179  182  189  187  183  177  184  180   186 #>  [8660,]  163  178  181  188  186  182  176  183  179   185 #>  [8661,]  163  178  181  188  186  182  176  183  179   185 #>  [8662,]  163  178  181  188  186  182  176  183  179   185 #>  [8663,]  162  180  182  189  187  184  177  184  180   186 #>  [8664,]  163  178  181  188  186  182  176  183  179   185 #>  [8665,]  162  180  182  189  187  183  177  184  180   186 #>  [8666,]  162  180  182  189  187  183  177  184  180   186 #>  [8667,]  163  178  181  188  186  182  176  183  179   185 #>  [8668,]  163  178  181  188  186  182  176  183  179   185 #>  [8669,]  163  178  181  188  186  182  176  183  179   185 #>  [8670,]  162  180  182  189  187  184  177  184  180   186 #>  [8671,]  163  178  181  188  186  182  176  183  179   185 #>  [8672,]  162  179  182  189  187  184  177  184  180   186 #>  [8673,]  163  178  181  188  186  182  176  183  179   185 #>  [8674,]  163  178  181  188  186  182  176  183  179   185 #>  [8675,]  163  178  181  188  186  182  176  183  179   185 #>  [8676,]  163  178  181  188  186  182  176  183  179   185 #>  [8677,]  163  178  181  188  186  182  176  183  179   185 #>  [8678,]  162  179  182  189  187  184  177  184  180   186 #>  [8679,]  163  178  181  188  186  182  176  183  179   185 #>  [8680,]  163  178  181  188  186  182  176  183  179   185 #>  [8681,]  163  178  181  188  186  182  176  183  179   185 #>  [8682,]  163  178  181  188  186  182  176  183  179   185 #>  [8683,]  163  178  181  188  186  182  176  183  179   185 #>  [8684,]  162  180  182  189  187  184  177  184  180   186 #>  [8685,]  163  178  181  188  186  182  176  183  179   185 #>  [8686,]  162  179  182  189  187  184  177  184  180   186 #>  [8687,]  163  178  181  188  186  182  176  183  179   185 #>  [8688,]  163  178  181  188  186  182  176  183  179   185 #>  [8689,]  162  180  182  189  187  184  177  184  180   186 #>  [8690,]  162  180  182  189  187  183  177  184  180   186 #>  [8691,]  163  178  181  188  186  182  176  183  179   185 #>  [8692,]  163  178  181  188  186  182  176  183  179   185 #>  [8693,]  163  178  181  188  186  182  176  183  179   185 #>  [8694,]  163  178  181  188  186  182  176  183  179   185 #>  [8695,]  163  178  181  188  186  182  176  183  179   185 #>  [8696,]  163  178  181  188  186  182  176  183  179   185 #>  [8697,]  163  178  181  188  186  182  176  183  179   185 #>  [8698,]  162  179  182  189  187  184  177  184  180   186 #>  [8699,]  163  178  181  188  186  182  176  183  179   185 #>  [8700,]  162  180  182  189  187  183  177  184  180   186 #>  [8701,]  164  181  183  190  188  185  178  185  181   187 #>  [8702,]  164  181  183  190  188  185  178  185  181   187 #>  [8703,]  164  181  183  190  188  185  178  185  181   187 #>  [8704,]  165  182  184  191  189  186  179  186  182   188 #>  [8705,]  164  181  183  190  188  185  178  185  181   187 #>  [8706,]  164  181  183  190  188  185  178  185  181   187 #>  [8707,]  165  182  184  191  189  186  179  186  182   188 #>  [8708,]  164  181  183  190  188  185  178  185  181   187 #>  [8709,]  164  181  183  190  188  185  178  185  181   187 #>  [8710,]  165  182  184  191  189  186  179  186  182   188 #>  [8711,]  164  181  183  190  188  185  178  185  181   187 #>  [8712,]  164  181  183  190  188  185  178  185  181   187 #>  [8713,]  164  181  183  190  188  185  178  185  181   187 #>  [8714,]  164  181  183  190  188  185  178  185  181   187 #>  [8715,]  164  181  183  190  188  185  178  185  181   187 #>  [8716,]  165  182  184  191  189  186  179  186  182   188 #>  [8717,]  164  181  183  190  188  185  178  185  181   187 #>  [8718,]  164  181  183  190  188  185  178  185  181   187 #>  [8719,]  164  181  183  190  188  185  178  185  181   187 #>  [8720,]  165  182  184  191  189  186  179  186  182   188 #>  [8721,]  164  181  183  190  188  185  178  185  181   187 #>  [8722,]  164  181  183  190  188  185  178  185  181   187 #>  [8723,]  164  181  183  190  188  185  178  185  181   187 #>  [8724,]  165  182  184  191  189  186  179  186  182   188 #>  [8725,]  164  181  183  190  188  185  178  185  181   187 #>  [8726,]  164  181  183  190  188  185  178  185  181   187 #>  [8727,]  164  181  183  190  188  185  178  185  181   187 #>  [8728,]  165  182  184  191  189  186  179  186  182   188 #>  [8729,]  164  181  183  190  188  185  178  185  181   187 #>  [8730,]  164  181  183  190  188  185  178  185  181   187 #>  [8731,]  164  181  183  190  188  185  178  185  181   187 #>  [8732,]  164  181  183  190  188  185  178  185  181   187 #>  [8733,]  164  181  183  190  188  185  178  185  181   187 #>  [8734,]  164  181  183  190  188  185  178  185  181   187 #>  [8735,]  164  181  183  190  188  185  178  185  181   187 #>  [8736,]  164  181  183  190  188  185  178  185  181   187 #>  [8737,]  164  181  183  190  188  185  178  185  181   187 #>  [8738,]  164  181  183  190  188  185  178  185  181   187 #>  [8739,]  164  181  183  190  188  185  178  185  181   187 #>  [8740,]  164  181  183  190  188  185  178  185  181   187 #>  [8741,]  164  181  183  190  188  185  178  185  181   187 #>  [8742,]  164  181  183  190  188  185  178  185  181   187 #>  [8743,]  164  181  183  190  188  185  178  185  181   187 #>  [8744,]  164  181  183  190  188  185  178  185  181   187 #>  [8745,]  164  181  183  190  188  185  178  185  181   187 #>  [8746,]  164  181  183  190  188  185  178  185  181   187 #>  [8747,]  164  181  183  190  188  185  178  185  181   187 #>  [8748,]  164  181  183  190  188  185  178  185  181   187 #>  [8749,]  164  181  183  190  188  185  178  185  181   187 #>  [8750,]  165  182  184  191  189  186  179  186  182   188 #>  [8751,]  164  181  183  190  188  185  178  185  181   187 #>  [8752,]  165  182  184  191  189  186  179  186  182   188 #>  [8753,]  164  181  183  190  188  185  178  185  181   187 #>  [8754,]  165  182  184  191  189  186  179  186  182   188 #>  [8755,]  164  181  183  190  188  185  178  185  181   187 #>  [8756,]  164  181  183  190  188  185  178  185  181   187 #>  [8757,]  164  181  183  190  188  185  178  185  181   187 #>  [8758,]  164  181  183  190  188  185  178  185  181   187 #>  [8759,]  164  181  183  190  188  185  178  185  181   187 #>  [8760,]  164  181  183  190  188  185  178  185  181   187 #>  [8761,]  164  181  183  190  188  185  178  185  181   187 #>  [8762,]  164  181  183  190  188  185  178  185  181   187 #>  [8763,]  164  181  183  190  188  185  178  185  181   187 #>  [8764,]  164  181  183  190  188  185  178  185  181   187 #>  [8765,]  164  181  183  190  188  185  178  185  181   187 #>  [8766,]  164  181  183  190  188  185  178  185  181   187 #>  [8767,]  164  181  183  190  188  185  178  185  181   187 #>  [8768,]  164  181  183  190  188  185  178  185  181   187 #>  [8769,]  164  181  183  190  188  185  178  185  181   187 #>  [8770,]  164  181  183  190  188  185  178  185  181   187 #>  [8771,]  164  181  183  190  188  185  178  185  181   187 #>  [8772,]  164  181  183  190  188  185  178  185  181   187 #>  [8773,]  165  182  184  191  189  186  179  186  182   188 #>  [8774,]  164  181  183  190  188  185  178  185  181   187 #>  [8775,]  164  181  183  190  188  185  178  185  181   187 #>  [8776,]  165  182  184  191  189  186  179  186  182   188 #>  [8777,]  164  181  183  190  188  185  178  185  181   187 #>  [8778,]  164  181  183  190  188  185  178  185  181   187 #>  [8779,]  164  181  183  190  188  185  178  185  181   187 #>  [8780,]  164  181  183  190  188  185  178  185  181   187 #>  [8781,]  164  181  183  190  188  185  178  185  181   187 #>  [8782,]  164  181  183  190  188  185  178  185  181   187 #>  [8783,]  164  181  183  190  188  185  178  185  181   187 #>  [8784,]  164  181  183  190  188  185  178  185  181   187 #>  [8785,]  164  181  183  190  188  185  178  185  181   187 #>  [8786,]  165  182  184  191  189  186  179  186  182   188 #>  [8787,]  164  181  183  190  188  185  178  185  181   187 #>  [8788,]  164  181  183  190  188  185  178  185  181   187 #>  [8789,]  164  181  183  190  188  185  178  185  181   187 #>  [8790,]  164  181  183  190  188  185  178  185  181   187 #>  [8791,]  165  182  184  191  189  186  179  186  182   188 #>  [8792,]  164  181  183  190  188  185  178  185  181   187 #>  [8793,]  164  181  183  190  188  185  178  185  181   187 #>  [8794,]  164  181  183  190  188  185  178  185  181   187 #>  [8795,]  164  181  183  190  188  185  178  185  181   187 #>  [8796,]  164  181  183  190  188  185  178  185  181   187 #>  [8797,]  164  181  183  190  188  185  178  185  181   187 #>  [8798,]  164  181  183  190  188  185  178  185  181   187 #>  [8799,]  164  181  183  190  188  185  178  185  181   187 #>  [8800,]  164  181  183  190  188  185  178  185  181   187 #>  [8801,]  167  184  186  193  191  188  181  188  184   189 #>  [8802,]  167  184  186  193  191  188  181  188  184   189 #>  [8803,]  167  184  186  193  191  188  181  188  184   189 #>  [8804,]  167  184  186  193  191  188  181  188  184   189 #>  [8805,]  167  184  186  193  191  188  181  188  184   189 #>  [8806,]  167  184  186  193  191  188  181  188  184   189 #>  [8807,]  167  184  186  193  191  188  181  188  184   189 #>  [8808,]  167  184  186  193  191  188  181  188  184   189 #>  [8809,]  167  184  186  193  191  188  181  188  184   189 #>  [8810,]  167  184  186  193  191  188  181  188  184   189 #>  [8811,]  167  184  186  193  191  188  181  188  184   189 #>  [8812,]  167  184  186  193  191  188  181  188  184   189 #>  [8813,]  167  184  186  193  191  188  181  188  184   189 #>  [8814,]  167  184  186  193  191  188  181  188  184   189 #>  [8815,]  167  184  186  193  191  188  181  188  184   189 #>  [8816,]  167  184  186  193  191  188  181  188  184   189 #>  [8817,]  167  184  186  193  191  188  181  188  184   189 #>  [8818,]  167  184  186  193  191  188  181  188  184   189 #>  [8819,]  167  184  186  193  191  188  181  188  184   189 #>  [8820,]  167  184  186  193  191  188  181  188  184   189 #>  [8821,]  167  184  186  193  191  188  181  188  184   189 #>  [8822,]  167  184  186  193  191  188  181  188  184   189 #>  [8823,]  167  184  186  193  191  188  181  188  184   189 #>  [8824,]  167  184  186  193  191  188  181  188  184   189 #>  [8825,]  166  183  185  192  190  187  180  187  183   189 #>  [8826,]  167  184  186  193  191  188  181  188  184   189 #>  [8827,]  167  184  186  193  191  188  181  188  184   189 #>  [8828,]  167  184  186  193  191  188  181  188  184   189 #>  [8829,]  167  184  186  193  191  188  181  188  184   189 #>  [8830,]  167  184  186  193  191  188  181  188  184   189 #>  [8831,]  167  184  186  193  191  188  181  188  184   189 #>  [8832,]  167  184  186  193  191  188  181  188  184   189 #>  [8833,]  167  184  186  193  191  188  181  188  184   189 #>  [8834,]  167  184  186  193  191  188  181  188  184   189 #>  [8835,]  167  184  186  193  191  188  181  188  184   189 #>  [8836,]  167  184  186  193  191  188  181  188  184   189 #>  [8837,]  167  184  186  193  191  188  181  188  184   189 #>  [8838,]  167  184  186  193  191  188  181  188  184   189 #>  [8839,]  167  184  186  193  191  188  181  188  184   189 #>  [8840,]  167  184  186  193  191  188  181  188  184   189 #>  [8841,]  167  184  186  193  191  188  181  188  184   189 #>  [8842,]  167  184  186  193  191  188  181  188  184   189 #>  [8843,]  167  184  186  193  191  188  181  188  184   189 #>  [8844,]  167  184  186  193  191  188  181  188  184   189 #>  [8845,]  167  184  186  193  191  188  181  188  184   189 #>  [8846,]  167  184  186  193  191  188  181  188  184   189 #>  [8847,]  167  184  186  193  191  188  181  188  184   189 #>  [8848,]  167  184  186  193  191  188  181  188  184   189 #>  [8849,]  167  184  186  193  191  188  181  188  184   189 #>  [8850,]  167  184  186  193  191  188  181  188  184   189 #>  [8851,]  167  184  186  193  191  188  181  188  184   189 #>  [8852,]  167  184  186  193  191  188  181  188  184   189 #>  [8853,]  167  184  186  193  191  188  181  188  184   189 #>  [8854,]  167  184  186  193  191  188  181  188  184   189 #>  [8855,]  167  184  186  193  191  188  181  188  184   189 #>  [8856,]  166  183  185  192  190  187  180  187  183   189 #>  [8857,]  167  184  186  193  191  188  181  188  184   189 #>  [8858,]  167  184  186  193  191  188  181  188  184   189 #>  [8859,]  167  184  186  193  191  188  181  188  184   189 #>  [8860,]  167  184  186  193  191  188  181  188  184   189 #>  [8861,]  167  184  186  193  191  188  181  188  184   189 #>  [8862,]  167  184  186  193  191  188  181  188  184   189 #>  [8863,]  167  184  186  193  191  188  181  188  184   189 #>  [8864,]  167  184  186  193  191  188  181  188  184   189 #>  [8865,]  166  183  185  192  190  187  180  187  183   189 #>  [8866,]  167  184  186  193  191  188  181  188  184   189 #>  [8867,]  167  184  186  193  191  188  181  188  184   189 #>  [8868,]  167  184  186  193  191  188  181  188  184   189 #>  [8869,]  167  184  186  193  191  188  181  188  184   189 #>  [8870,]  167  184  186  193  191  188  181  188  184   189 #>  [8871,]  167  184  186  193  191  188  181  188  184   189 #>  [8872,]  167  184  186  193  191  188  181  188  184   189 #>  [8873,]  167  184  186  193  191  188  181  188  184   189 #>  [8874,]  166  183  185  192  190  187  180  187  183   189 #>  [8875,]  167  184  186  193  191  188  181  188  184   189 #>  [8876,]  167  184  186  193  191  188  181  188  184   189 #>  [8877,]  167  184  186  193  191  188  181  188  184   189 #>  [8878,]  167  184  186  193  191  188  181  188  184   189 #>  [8879,]  167  184  186  193  191  188  181  188  184   189 #>  [8880,]  166  183  185  192  190  187  180  187  183   189 #>  [8881,]  167  184  186  193  191  188  181  188  184   189 #>  [8882,]  167  184  186  193  191  188  181  188  184   189 #>  [8883,]  167  184  186  193  191  188  181  188  184   189 #>  [8884,]  167  184  186  193  191  188  181  188  184   189 #>  [8885,]  166  183  185  192  190  187  180  187  183   189 #>  [8886,]  167  184  186  193  191  188  181  188  184   189 #>  [8887,]  167  184  186  193  191  188  181  188  184   189 #>  [8888,]  167  184  186  193  191  188  181  188  184   189 #>  [8889,]  166  183  185  192  190  187  180  187  183   189 #>  [8890,]  167  184  186  193  191  188  181  188  184   189 #>  [8891,]  167  184  186  193  191  188  181  188  184   189 #>  [8892,]  167  184  186  193  191  188  181  188  184   189 #>  [8893,]  167  184  186  193  191  188  181  188  184   189 #>  [8894,]  167  184  186  193  191  188  181  188  184   189 #>  [8895,]  167  184  186  193  191  188  181  188  184   189 #>  [8896,]  167  184  186  193  191  188  181  188  184   189 #>  [8897,]  167  184  186  193  191  188  181  188  184   189 #>  [8898,]  167  184  186  193  191  188  181  188  184   189 #>  [8899,]  167  184  186  193  191  188  181  188  184   189 #>  [8900,]  167  184  186  193  191  188  181  188  184   189 #>  [8901,]  169  186  188  194  192  189  182  189  185   190 #>  [8902,]  169  186  188  194  192  189  182  189  185   190 #>  [8903,]  168  185  187  195  193  190  183  190  186   191 #>  [8904,]  168  185  187  195  193  190  183  190  186   191 #>  [8905,]  169  186  188  194  192  189  182  189  185   190 #>  [8906,]  169  186  188  194  192  189  182  189  185   190 #>  [8907,]  168  185  187  195  193  190  183  190  186   191 #>  [8908,]  168  185  187  195  193  190  183  190  186   191 #>  [8909,]  169  186  188  194  192  189  182  189  185   190 #>  [8910,]  169  186  188  194  192  189  182  189  185   190 #>  [8911,]  169  186  188  194  192  189  182  189  185   190 #>  [8912,]  168  185  187  195  193  190  183  190  186   191 #>  [8913,]  169  186  188  194  192  189  182  189  185   190 #>  [8914,]  169  186  188  194  192  189  182  189  185   190 #>  [8915,]  169  186  188  194  192  189  182  189  185   190 #>  [8916,]  169  186  188  194  192  189  182  189  185   190 #>  [8917,]  169  186  188  194  192  189  182  189  185   190 #>  [8918,]  169  186  188  194  192  189  182  189  185   190 #>  [8919,]  169  186  188  194  192  189  182  189  185   190 #>  [8920,]  169  186  188  194  192  189  182  189  185   190 #>  [8921,]  169  186  188  194  192  189  182  189  185   190 #>  [8922,]  169  186  188  194  192  189  182  189  185   190 #>  [8923,]  168  185  187  195  193  190  183  190  186   191 #>  [8924,]  169  186  188  194  192  189  182  189  185   190 #>  [8925,]  168  185  187  195  193  190  183  190  186   191 #>  [8926,]  169  186  188  194  192  189  182  189  185   190 #>  [8927,]  169  186  188  194  192  189  182  189  185   190 #>  [8928,]  169  186  188  194  192  189  182  189  185   190 #>  [8929,]  169  186  188  194  192  189  182  189  185   190 #>  [8930,]  169  186  188  194  192  189  182  189  185   190 #>  [8931,]  168  185  187  195  193  190  183  190  186   191 #>  [8932,]  168  185  187  196  194  191  183  190  186   191 #>  [8933,]  169  186  188  194  192  189  182  189  185   190 #>  [8934,]  169  186  188  194  192  189  182  189  185   190 #>  [8935,]  169  186  188  194  192  189  182  189  185   190 #>  [8936,]  169  186  188  194  192  189  182  189  185   190 #>  [8937,]  168  185  187  195  193  190  183  190  186   191 #>  [8938,]  169  186  188  194  192  189  182  189  185   190 #>  [8939,]  169  186  188  194  192  189  182  189  185   190 #>  [8940,]  168  185  187  195  193  190  183  190  186   191 #>  [8941,]  169  186  188  194  192  189  182  189  185   190 #>  [8942,]  169  186  188  194  192  189  182  189  185   190 #>  [8943,]  169  186  188  194  192  189  182  189  185   190 #>  [8944,]  169  186  188  194  192  189  182  189  185   190 #>  [8945,]  169  186  188  194  192  189  182  189  185   190 #>  [8946,]  168  185  187  195  193  190  183  190  186   191 #>  [8947,]  168  185  187  195  193  190  183  190  186   191 #>  [8948,]  169  186  188  194  192  189  182  189  185   190 #>  [8949,]  169  186  188  194  192  189  182  189  185   190 #>  [8950,]  169  186  188  194  192  189  182  189  185   190 #>  [8951,]  169  186  188  194  192  189  182  189  185   190 #>  [8952,]  168  185  187  195  193  190  183  190  186   191 #>  [8953,]  169  186  188  194  192  189  182  189  185   190 #>  [8954,]  169  186  188  194  192  189  182  189  185   190 #>  [8955,]  168  185  187  195  193  190  183  190  186   191 #>  [8956,]  169  186  188  194  192  189  182  189  185   190 #>  [8957,]  168  185  187  195  193  190  183  190  186   191 #>  [8958,]  169  186  188  194  192  189  182  189  185   190 #>  [8959,]  168  185  187  195  193  190  183  190  186   191 #>  [8960,]  168  185  187  195  193  190  183  190  186   191 #>  [8961,]  169  186  188  194  192  189  182  189  185   190 #>  [8962,]  169  186  188  194  192  189  182  189  185   190 #>  [8963,]  169  186  188  194  192  189  182  189  185   190 #>  [8964,]  169  186  188  194  192  189  182  189  185   190 #>  [8965,]  169  186  188  194  192  189  182  189  185   190 #>  [8966,]  169  186  188  194  192  189  182  189  185   190 #>  [8967,]  168  185  187  196  194  191  183  190  186   191 #>  [8968,]  168  185  187  195  193  190  183  190  186   191 #>  [8969,]  169  186  188  194  192  189  182  189  185   190 #>  [8970,]  169  186  188  194  192  189  182  189  185   190 #>  [8971,]  169  186  188  194  192  189  182  189  185   190 #>  [8972,]  168  185  187  196  194  191  183  190  186   191 #>  [8973,]  169  186  188  194  192  189  182  189  185   190 #>  [8974,]  168  185  187  195  193  190  183  190  186   191 #>  [8975,]  169  186  188  194  192  189  182  189  185   190 #>  [8976,]  168  185  187  196  194  191  183  190  186   191 #>  [8977,]  169  186  188  194  192  189  182  189  185   190 #>  [8978,]  168  185  187  196  194  191  183  190  186   191 #>  [8979,]  169  186  188  194  192  189  182  189  185   190 #>  [8980,]  168  185  187  195  193  190  183  190  186   191 #>  [8981,]  169  186  188  194  192  189  182  189  185   190 #>  [8982,]  169  186  188  194  192  189  182  189  185   190 #>  [8983,]  169  186  188  194  192  189  182  189  185   190 #>  [8984,]  169  186  188  194  192  189  182  189  185   190 #>  [8985,]  169  186  188  194  192  189  182  189  185   190 #>  [8986,]  168  185  187  195  193  190  183  190  186   191 #>  [8987,]  169  186  188  194  192  189  182  189  185   190 #>  [8988,]  169  186  188  194  192  189  182  189  185   190 #>  [8989,]  169  186  188  194  192  189  182  189  185   190 #>  [8990,]  169  186  188  194  192  189  182  189  185   190 #>  [8991,]  169  186  188  194  192  189  182  189  185   190 #>  [8992,]  168  185  187  195  193  190  183  190  186   191 #>  [8993,]  169  186  188  194  192  189  182  189  185   190 #>  [8994,]  169  186  188  194  192  189  182  189  185   190 #>  [8995,]  169  186  188  194  192  189  182  189  185   190 #>  [8996,]  168  185  187  195  193  190  183  190  186   191 #>  [8997,]  168  185  187  195  193  190  183  190  186   191 #>  [8998,]  168  185  187  195  193  190  183  190  186   191 #>  [8999,]  169  186  188  194  192  189  182  189  185   190 #>  [9000,]  169  186  188  194  192  189  182  189  185   190 #>  [9001,]  170  187  190  198  195  193  185  192  188   193 #>  [9002,]  170  187  189  197  195  192  184  191  187   192 #>  [9003,]  170  187  189  197  195  192  184  191  187   192 #>  [9004,]  170  187  189  197  195  192  184  191  187   192 #>  [9005,]  170  187  190  198  195  192  184  191  187   192 #>  [9006,]  170  187  189  197  195  192  184  191  187   192 #>  [9007,]  170  187  189  197  195  192  184  191  187   192 #>  [9008,]  170  187  189  197  195  192  184  191  187   192 #>  [9009,]  170  187  189  197  195  192  184  191  187   192 #>  [9010,]  170  187  189  197  195  192  184  191  187   192 #>  [9011,]  170  187  189  197  195  192  184  191  187   192 #>  [9012,]  170  187  189  197  195  192  184  191  187   192 #>  [9013,]  170  187  189  197  195  192  184  191  187   192 #>  [9014,]  170  187  190  198  195  193  185  192  188   193 #>  [9015,]  170  187  190  198  195  193  185  192  188   193 #>  [9016,]  170  187  189  197  195  193  185  192  188   193 #>  [9017,]  170  187  189  197  195  192  184  191  187   192 #>  [9018,]  170  187  190  198  195  192  184  191  187   192 #>  [9019,]  170  187  189  197  195  192  184  191  187   192 #>  [9020,]  170  187  189  197  195  192  184  191  187   192 #>  [9021,]  170  187  189  197  195  192  184  191  187   192 #>  [9022,]  170  187  189  197  195  192  184  191  187   192 #>  [9023,]  170  187  189  197  195  192  184  191  187   192 #>  [9024,]  170  187  189  197  195  192  184  191  187   192 #>  [9025,]  170  187  189  197  195  192  184  191  187   192 #>  [9026,]  170  187  189  197  195  192  184  191  187   192 #>  [9027,]  170  187  190  198  195  192  184  191  187   192 #>  [9028,]  170  187  189  197  195  192  184  191  187   192 #>  [9029,]  170  187  189  197  195  192  184  191  187   192 #>  [9030,]  170  187  189  197  195  192  184  191  187   192 #>  [9031,]  170  187  189  197  195  192  184  191  187   192 #>  [9032,]  170  187  190  198  195  192  184  191  187   192 #>  [9033,]  170  187  189  197  195  192  184  191  187   192 #>  [9034,]  170  187  189  197  195  192  184  191  187   192 #>  [9035,]  170  187  189  197  195  192  184  191  187   192 #>  [9036,]  170  187  189  197  195  192  184  191  187   192 #>  [9037,]  170  187  189  197  195  192  184  191  187   192 #>  [9038,]  170  187  189  197  195  192  184  191  187   192 #>  [9039,]  170  187  189  197  195  192  184  191  187   192 #>  [9040,]  170  187  189  197  195  192  184  191  187   192 #>  [9041,]  170  187  189  197  195  193  185  192  188   193 #>  [9042,]  170  187  189  197  195  192  184  191  187   192 #>  [9043,]  170  187  190  198  195  192  184  191  187   192 #>  [9044,]  170  187  189  197  195  193  185  192  188   193 #>  [9045,]  170  187  189  197  195  192  184  191  187   192 #>  [9046,]  170  187  189  197  195  192  184  191  187   192 #>  [9047,]  170  187  189  197  195  192  184  191  187   192 #>  [9048,]  170  187  189  197  195  192  184  191  187   192 #>  [9049,]  170  187  189  197  195  192  184  191  187   192 #>  [9050,]  170  187  189  197  195  193  185  192  188   193 #>  [9051,]  170  187  189  197  195  192  184  191  187   192 #>  [9052,]  170  187  189  197  195  192  184  191  187   192 #>  [9053,]  170  187  189  197  195  192  184  191  187   192 #>  [9054,]  170  187  189  197  195  192  184  191  187   192 #>  [9055,]  170  187  189  197  195  192  184  191  187   192 #>  [9056,]  170  187  189  197  195  192  184  191  187   192 #>  [9057,]  170  187  189  197  195  192  184  191  187   192 #>  [9058,]  170  187  190  198  195  192  184  191  187   192 #>  [9059,]  170  187  189  197  195  193  185  192  188   193 #>  [9060,]  170  187  189  197  195  192  184  191  187   192 #>  [9061,]  170  187  189  197  195  192  184  191  187   192 #>  [9062,]  170  187  189  197  195  192  184  191  187   192 #>  [9063,]  170  187  189  197  195  192  184  191  187   192 #>  [9064,]  170  187  189  197  195  192  184  191  187   192 #>  [9065,]  170  187  189  197  195  192  184  191  187   192 #>  [9066,]  170  187  189  197  195  192  184  191  187   192 #>  [9067,]  170  187  189  197  195  192  184  191  187   192 #>  [9068,]  170  187  189  197  195  192  184  191  187   192 #>  [9069,]  170  187  189  197  195  192  184  191  187   192 #>  [9070,]  170  187  189  197  195  193  185  192  188   193 #>  [9071,]  170  187  190  198  195  192  184  191  187   192 #>  [9072,]  170  187  189  197  195  192  184  191  187   192 #>  [9073,]  170  187  189  197  195  193  185  192  188   193 #>  [9074,]  170  187  189  197  195  192  184  191  187   192 #>  [9075,]  170  187  190  198  195  192  184  191  187   192 #>  [9076,]  170  187  189  197  195  192  184  191  187   192 #>  [9077,]  170  187  189  197  195  192  184  191  187   192 #>  [9078,]  170  187  189  197  195  192  184  191  187   192 #>  [9079,]  170  187  189  197  195  192  184  191  187   192 #>  [9080,]  170  187  189  197  195  192  184  191  187   192 #>  [9081,]  170  187  189  197  195  192  184  191  187   192 #>  [9082,]  170  187  189  197  195  192  184  191  187   192 #>  [9083,]  170  187  189  197  195  192  184  191  187   192 #>  [9084,]  170  187  189  197  195  192  184  191  187   192 #>  [9085,]  170  187  189  197  195  192  184  191  187   192 #>  [9086,]  170  187  189  197  195  192  184  191  187   192 #>  [9087,]  170  187  189  197  195  192  184  191  187   192 #>  [9088,]  170  187  189  197  195  192  184  191  187   192 #>  [9089,]  170  187  189  197  195  192  184  191  187   192 #>  [9090,]  170  187  189  197  195  192  184  191  187   192 #>  [9091,]  170  187  190  198  195  192  184  191  187   192 #>  [9092,]  170  187  189  197  195  192  184  191  187   192 #>  [9093,]  170  187  189  197  195  192  184  191  187   192 #>  [9094,]  170  187  189  197  195  192  184  191  187   192 #>  [9095,]  170  187  190  198  195  192  184  191  187   192 #>  [9096,]  170  187  189  197  195  193  185  192  188   193 #>  [9097,]  170  187  189  197  195  192  184  191  187   192 #>  [9098,]  170  187  189  197  195  192  184  191  187   192 #>  [9099,]  170  187  189  197  195  193  185  192  188   193 #>  [9100,]  170  187  190  198  195  192  184  191  187   192 #>  [9101,]  171  188  191  199  196  195  187  194  190   195 #>  [9102,]  171  188  191  199  196  196  188  194  190   195 #>  [9103,]  171  188  191  199  196  196  188  194  190   195 #>  [9104,]  172  189  192  200  197  194  186  193  189   194 #>  [9105,]  171  188  191  199  196  196  188  194  190   195 #>  [9106,]  171  188  191  199  196  196  188  194  190   195 #>  [9107,]  171  188  191  199  196  196  188  194  190   195 #>  [9108,]  171  188  191  199  196  195  187  194  190   195 #>  [9109,]  172  189  192  200  197  194  186  193  189   194 #>  [9110,]  171  188  191  199  196  196  188  194  190   195 #>  [9111,]  172  190  192  200  197  194  186  193  189   194 #>  [9112,]  172  190  192  200  197  194  186  193  189   194 #>  [9113,]  171  188  191  199  196  195  187  194  190   195 #>  [9114,]  172  190  192  200  197  194  186  193  189   194 #>  [9115,]  172  190  192  200  197  194  186  193  189   194 #>  [9116,]  171  188  191  199  196  196  188  194  190   195 #>  [9117,]  171  188  191  199  196  195  187  194  190   195 #>  [9118,]  172  190  192  200  197  194  186  193  189   194 #>  [9119,]  172  189  192  200  197  194  186  193  189   194 #>  [9120,]  171  188  191  199  196  196  188  194  190   195 #>  [9121,]  172  189  192  200  197  194  186  193  189   194 #>  [9122,]  171  188  191  199  196  195  187  194  190   195 #>  [9123,]  171  188  191  199  196  196  188  194  190   195 #>  [9124,]  171  188  191  199  196  196  188  194  190   195 #>  [9125,]  171  188  191  199  196  196  188  194  190   195 #>  [9126,]  172  190  192  200  197  194  186  193  189   194 #>  [9127,]  172  190  192  200  197  194  186  193  189   194 #>  [9128,]  171  188  191  199  196  196  188  194  190   195 #>  [9129,]  171  188  191  199  196  196  188  194  190   195 #>  [9130,]  172  189  192  200  197  194  186  193  189   194 #>  [9131,]  172  190  192  200  197  194  186  193  189   194 #>  [9132,]  171  188  191  199  196  196  188  194  190   195 #>  [9133,]  172  189  192  200  197  194  186  193  189   194 #>  [9134,]  171  188  191  199  196  196  188  194  190   195 #>  [9135,]  171  188  191  199  196  195  187  194  190   195 #>  [9136,]  172  189  192  200  197  194  186  193  189   194 #>  [9137,]  171  188  191  199  196  196  188  194  190   195 #>  [9138,]  172  190  192  200  197  194  186  193  189   194 #>  [9139,]  171  188  191  199  196  196  188  194  190   195 #>  [9140,]  171  188  191  199  196  196  188  194  190   195 #>  [9141,]  172  189  192  200  197  194  186  193  189   194 #>  [9142,]  172  189  192  200  197  194  186  193  189   194 #>  [9143,]  171  188  191  199  196  195  187  194  190   195 #>  [9144,]  171  188  191  199  196  195  187  194  190   195 #>  [9145,]  171  188  191  199  196  195  187  194  190   195 #>  [9146,]  171  188  191  199  196  195  187  194  190   195 #>  [9147,]  171  188  191  199  196  196  188  194  190   195 #>  [9148,]  172  189  192  200  197  194  186  193  189   194 #>  [9149,]  171  188  191  199  196  195  187  194  190   195 #>  [9150,]  171  188  191  199  196  196  188  194  190   195 #>  [9151,]  171  188  191  199  196  196  188  194  190   195 #>  [9152,]  171  188  191  199  196  195  187  194  190   195 #>  [9153,]  171  188  191  199  196  196  188  194  190   195 #>  [9154,]  171  188  191  199  196  195  187  194  190   195 #>  [9155,]  171  188  191  199  196  195  187  194  190   195 #>  [9156,]  171  188  191  199  196  196  188  194  190   195 #>  [9157,]  171  188  191  199  196  196  188  194  190   195 #>  [9158,]  172  190  192  200  197  194  186  193  189   194 #>  [9159,]  171  188  191  199  196  196  188  194  190   195 #>  [9160,]  172  189  192  200  197  194  186  193  189   194 #>  [9161,]  172  190  192  200  197  194  186  193  189   194 #>  [9162,]  172  189  192  200  197  194  186  193  189   194 #>  [9163,]  171  188  191  199  196  196  188  194  190   195 #>  [9164,]  171  188  191  199  196  196  188  194  190   195 #>  [9165,]  171  188  191  199  196  196  188  194  190   195 #>  [9166,]  171  188  191  199  196  195  187  194  190   195 #>  [9167,]  171  188  191  199  196  195  187  194  190   195 #>  [9168,]  172  189  192  200  197  194  186  193  189   194 #>  [9169,]  172  189  192  200  197  194  186  193  189   194 #>  [9170,]  171  188  191  199  196  196  188  194  190   195 #>  [9171,]  171  188  191  199  196  196  188  194  190   195 #>  [9172,]  171  188  191  199  196  196  188  194  190   195 #>  [9173,]  171  188  191  199  196  196  188  194  190   195 #>  [9174,]  172  189  192  200  197  194  186  193  189   194 #>  [9175,]  172  190  192  200  197  194  186  193  189   194 #>  [9176,]  171  188  191  199  196  196  188  194  190   195 #>  [9177,]  171  188  191  199  196  196  188  194  190   195 #>  [9178,]  171  188  191  199  196  196  188  194  190   195 #>  [9179,]  171  188  191  199  196  195  187  194  190   195 #>  [9180,]  171  188  191  199  196  195  187  194  190   195 #>  [9181,]  171  188  191  199  196  195  187  194  190   195 #>  [9182,]  172  189  192  200  197  194  186  193  189   194 #>  [9183,]  171  188  191  199  196  195  187  194  190   195 #>  [9184,]  171  188  191  199  196  196  188  194  190   195 #>  [9185,]  172  189  192  200  197  194  186  193  189   194 #>  [9186,]  171  188  191  199  196  196  188  194  190   195 #>  [9187,]  171  188  191  199  196  195  187  194  190   195 #>  [9188,]  171  188  191  199  196  195  187  194  190   195 #>  [9189,]  171  188  191  199  196  195  187  194  190   195 #>  [9190,]  171  188  191  199  196  195  187  194  190   195 #>  [9191,]  171  188  191  199  196  195  187  194  190   195 #>  [9192,]  172  190  192  200  197  194  186  193  189   194 #>  [9193,]  172  189  192  200  197  194  186  193  189   194 #>  [9194,]  171  188  191  199  196  196  188  194  190   195 #>  [9195,]  171  188  191  199  196  195  187  194  190   195 #>  [9196,]  172  189  192  200  197  194  186  193  189   194 #>  [9197,]  172  189  192  200  197  194  186  193  189   194 #>  [9198,]  171  188  191  199  196  196  188  194  190   195 #>  [9199,]  171  188  191  199  196  195  187  194  190   195 #>  [9200,]  171  188  191  199  196  196  188  194  190   195 #>  [9201,]  174  192  194  202  200  198  190  196  192   197 #>  [9202,]  174  192  194  202  200  198  190  196  192   197 #>  [9203,]  173  191  193  201  198  197  189  195  191   196 #>  [9204,]  174  192  195  202  199  198  190  196  192   197 #>  [9205,]  174  192  194  202  200  198  190  196  192   197 #>  [9206,]  174  192  194  202  200  198  190  196  192   197 #>  [9207,]  174  192  194  202  200  198  190  196  192   197 #>  [9208,]  174  192  194  202  199  198  190  196  192   197 #>  [9209,]  174  192  194  202  199  198  190  196  192   197 #>  [9210,]  174  192  194  202  199  198  190  196  192   197 #>  [9211,]  173  191  193  201  198  197  189  195  191   196 #>  [9212,]  173  191  193  201  198  197  189  195  191   196 #>  [9213,]  174  192  194  202  200  198  190  196  192   197 #>  [9214,]  173  191  193  201  198  197  189  195  191   196 #>  [9215,]  174  192  195  202  200  198  190  196  192   197 #>  [9216,]  174  192  194  202  200  198  190  196  192   197 #>  [9217,]  174  192  194  202  200  198  190  196  192   197 #>  [9218,]  174  192  194  202  200  198  190  196  192   197 #>  [9219,]  173  191  193  201  198  197  189  195  191   196 #>  [9220,]  173  191  193  201  198  197  189  195  191   196 #>  [9221,]  174  192  195  202  200  198  190  196  192   197 #>  [9222,]  173  191  193  201  198  197  189  195  191   196 #>  [9223,]  174  192  194  202  200  198  190  196  192   197 #>  [9224,]  174  192  194  202  200  198  190  196  192   197 #>  [9225,]  174  192  194  202  200  198  190  196  192   197 #>  [9226,]  173  191  193  201  198  197  189  195  191   196 #>  [9227,]  174  192  195  202  200  198  190  196  192   197 #>  [9228,]  174  192  194  202  200  198  190  196  192   197 #>  [9229,]  173  191  193  201  198  197  189  195  191   196 #>  [9230,]  174  192  194  202  200  198  190  196  192   197 #>  [9231,]  174  192  194  202  200  198  190  196  192   197 #>  [9232,]  173  191  193  201  198  197  189  195  191   196 #>  [9233,]  174  192  194  202  200  198  190  196  192   197 #>  [9234,]  174  192  194  202  200  198  190  196  192   197 #>  [9235,]  174  192  194  202  200  198  190  196  192   197 #>  [9236,]  173  191  193  201  198  197  189  195  191   196 #>  [9237,]  174  192  194  202  200  198  190  196  192   197 #>  [9238,]  174  192  195  202  200  198  190  196  192   197 #>  [9239,]  174  192  194  202  200  198  190  196  192   197 #>  [9240,]  173  191  193  201  198  197  189  195  191   196 #>  [9241,]  173  191  193  201  198  197  189  195  191   196 #>  [9242,]  173  191  193  201  198  197  189  195  191   196 #>  [9243,]  174  192  194  202  200  198  190  196  192   197 #>  [9244,]  174  192  194  202  200  198  190  196  192   197 #>  [9245,]  174  192  194  202  200  198  190  196  192   197 #>  [9246,]  174  192  194  202  200  198  190  196  192   197 #>  [9247,]  174  192  194  202  200  198  190  196  192   197 #>  [9248,]  173  191  193  201  198  197  189  195  191   196 #>  [9249,]  174  192  194  202  200  198  190  196  192   197 #>  [9250,]  174  192  194  202  200  198  190  196  192   197 #>  [9251,]  173  191  193  201  198  197  189  195  191   196 #>  [9252,]  174  192  194  202  200  198  190  196  192   197 #>  [9253,]  174  192  194  202  200  198  190  196  192   197 #>  [9254,]  173  191  193  201  198  197  189  195  191   196 #>  [9255,]  174  192  194  202  200  198  190  196  192   197 #>  [9256,]  174  192  194  202  200  198  190  196  192   197 #>  [9257,]  174  192  194  202  200  198  190  196  192   197 #>  [9258,]  174  192  194  202  200  198  190  196  192   197 #>  [9259,]  174  192  194  202  200  198  190  196  192   197 #>  [9260,]  173  191  193  201  198  197  189  195  191   196 #>  [9261,]  174  192  195  202  200  198  190  196  192   197 #>  [9262,]  173  191  193  201  198  197  189  195  191   196 #>  [9263,]  173  191  193  201  198  197  189  195  191   196 #>  [9264,]  174  192  194  202  200  198  190  196  192   197 #>  [9265,]  174  192  194  202  200  198  190  196  192   197 #>  [9266,]  173  191  193  201  198  197  189  195  191   196 #>  [9267,]  174  192  194  202  200  198  190  196  192   197 #>  [9268,]  173  191  193  201  198  197  189  195  191   196 #>  [9269,]  173  191  193  201  198  197  189  195  191   196 #>  [9270,]  174  192  194  202  200  198  190  196  192   197 #>  [9271,]  174  192  194  202  200  198  190  196  192   197 #>  [9272,]  174  192  194  202  200  198  190  196  192   197 #>  [9273,]  174  192  194  202  200  198  190  196  192   197 #>  [9274,]  174  192  195  202  200  198  190  196  192   197 #>  [9275,]  174  192  195  202  200  198  190  196  192   197 #>  [9276,]  174  192  194  202  200  198  190  196  192   197 #>  [9277,]  174  192  194  202  200  198  190  196  192   197 #>  [9278,]  174  192  194  202  200  198  190  196  192   197 #>  [9279,]  174  192  194  202  200  198  190  196  192   197 #>  [9280,]  173  191  193  201  198  197  189  195  191   196 #>  [9281,]  173  191  193  201  198  197  189  195  191   196 #>  [9282,]  174  192  195  202  200  198  190  196  192   197 #>  [9283,]  173  191  193  201  198  197  189  195  191   196 #>  [9284,]  174  192  194  202  200  198  190  196  192   197 #>  [9285,]  174  192  194  202  199  198  190  196  192   197 #>  [9286,]  174  192  194  202  200  198  190  196  192   197 #>  [9287,]  174  192  194  202  200  198  190  196  192   197 #>  [9288,]  174  192  194  202  200  198  190  196  192   197 #>  [9289,]  173  191  193  201  198  197  189  195  191   196 #>  [9290,]  174  192  194  202  200  198  190  196  192   197 #>  [9291,]  173  191  193  201  198  197  189  195  191   196 #>  [9292,]  174  192  195  202  200  198  190  196  192   197 #>  [9293,]  174  192  195  202  200  198  190  196  192   197 #>  [9294,]  174  192  194  202  200  198  190  196  192   197 #>  [9295,]  174  192  194  202  199  198  190  196  192   197 #>  [9296,]  174  192  195  202  200  198  190  196  192   197 #>  [9297,]  174  192  195  202  200  198  190  196  192   197 #>  [9298,]  174  192  194  202  200  198  190  196  192   197 #>  [9299,]  174  192  194  202  200  198  190  196  192   197 #>  [9300,]  174  192  194  202  200  198  190  196  192   197 #>  [9301,]  175  193  196  205  202  200  192  198  194   199 #>  [9302,]  175  193  196  204  202  200  192  198  194   199 #>  [9303,]  175  193  196  204  202  200  192  198  194   199 #>  [9304,]  175  193  196  204  202  200  192  198  194   199 #>  [9305,]  175  193  196  204  202  200  192  198  194   199 #>  [9306,]  175  193  196  204  202  200  192  198  194   199 #>  [9307,]  175  193  196  204  202  200  192  198  194   199 #>  [9308,]  175  193  196  204  202  200  192  198  194   199 #>  [9309,]  175  193  196  205  202  200  192  198  194   199 #>  [9310,]  175  193  196  204  202  200  192  198  194   199 #>  [9311,]  175  193  196  205  202  200  192  198  194   199 #>  [9312,]  175  193  196  204  202  200  192  198  194   199 #>  [9313,]  175  193  196  205  202  200  192  198  194   199 #>  [9314,]  175  193  196  204  202  200  192  198  194   199 #>  [9315,]  175  193  196  204  202  200  192  198  194   199 #>  [9316,]  175  193  196  204  202  200  192  198  194   199 #>  [9317,]  175  193  196  205  202  200  192  198  194   199 #>  [9318,]  176  194  197  203  201  199  191  197  193   198 #>  [9319,]  175  193  196  204  202  200  192  198  194   199 #>  [9320,]  175  193  196  205  202  200  192  198  194   199 #>  [9321,]  175  193  196  204  202  200  192  198  194   199 #>  [9322,]  175  193  196  204  202  200  192  198  194   199 #>  [9323,]  175  193  196  204  202  200  192  198  194   199 #>  [9324,]  175  193  196  204  202  200  192  198  194   199 #>  [9325,]  175  193  196  204  202  200  192  198  194   199 #>  [9326,]  175  193  196  204  202  200  192  198  194   199 #>  [9327,]  175  193  196  205  202  200  192  198  194   199 #>  [9328,]  175  193  196  205  202  200  192  198  194   199 #>  [9329,]  175  193  196  205  202  200  192  198  194   199 #>  [9330,]  175  193  196  204  202  200  192  198  194   199 #>  [9331,]  175  193  196  204  202  200  192  198  194   199 #>  [9332,]  175  193  196  204  202  200  192  198  194   199 #>  [9333,]  175  193  196  205  202  200  192  198  194   199 #>  [9334,]  175  193  196  204  202  200  192  198  194   199 #>  [9335,]  175  193  196  204  202  200  192  198  194   199 #>  [9336,]  175  193  196  205  202  200  192  198  194   199 #>  [9337,]  175  193  196  204  202  200  192  198  194   199 #>  [9338,]  175  193  196  205  202  200  192  198  194   199 #>  [9339,]  175  193  196  205  202  200  192  198  194   199 #>  [9340,]  175  193  196  204  202  200  192  198  194   199 #>  [9341,]  175  193  196  205  202  200  192  198  194   199 #>  [9342,]  175  193  196  205  202  200  192  198  194   199 #>  [9343,]  175  193  196  204  202  200  192  198  194   199 #>  [9344,]  175  193  196  204  202  200  192  198  194   199 #>  [9345,]  175  193  196  204  202  200  192  198  194   199 #>  [9346,]  175  193  196  204  202  200  192  198  194   199 #>  [9347,]  175  193  196  204  202  200  192  198  194   199 #>  [9348,]  175  193  196  204  202  200  192  198  194   199 #>  [9349,]  175  193  196  204  202  200  192  198  194   199 #>  [9350,]  175  193  196  204  202  200  192  198  194   199 #>  [9351,]  176  194  197  203  201  199  191  197  193   198 #>  [9352,]  175  193  196  204  202  200  192  198  194   199 #>  [9353,]  176  194  197  203  201  199  191  197  193   198 #>  [9354,]  175  193  196  205  202  200  192  198  194   199 #>  [9355,]  175  193  196  204  202  200  192  198  194   199 #>  [9356,]  175  193  196  205  202  200  192  198  194   199 #>  [9357,]  175  193  196  204  202  200  192  198  194   199 #>  [9358,]  175  193  196  205  202  200  192  198  194   199 #>  [9359,]  175  193  196  204  202  200  192  198  194   199 #>  [9360,]  175  193  196  204  202  200  192  198  194   199 #>  [9361,]  175  193  196  204  202  200  192  198  194   199 #>  [9362,]  175  193  196  205  202  200  192  198  194   199 #>  [9363,]  175  193  196  204  202  200  192  198  194   199 #>  [9364,]  175  193  196  204  202  200  192  198  194   199 #>  [9365,]  175  193  196  205  202  200  192  198  194   199 #>  [9366,]  175  193  196  205  202  200  192  198  194   199 #>  [9367,]  175  193  196  204  202  200  192  198  194   199 #>  [9368,]  175  193  196  204  202  200  192  198  194   199 #>  [9369,]  175  193  196  204  202  200  192  198  194   199 #>  [9370,]  175  193  196  205  202  200  192  198  194   199 #>  [9371,]  175  193  196  204  202  200  192  198  194   199 #>  [9372,]  175  193  196  204  202  200  192  198  194   199 #>  [9373,]  175  193  196  204  202  200  192  198  194   199 #>  [9374,]  175  193  196  204  202  200  192  198  194   199 #>  [9375,]  175  193  196  204  202  200  192  198  194   199 #>  [9376,]  175  193  196  204  202  200  192  198  194   199 #>  [9377,]  175  193  196  205  202  200  192  198  194   199 #>  [9378,]  175  193  196  204  202  200  192  198  194   199 #>  [9379,]  175  193  196  205  202  200  192  198  194   199 #>  [9380,]  175  193  196  204  202  200  192  198  194   199 #>  [9381,]  175  193  196  204  202  200  192  198  194   199 #>  [9382,]  175  193  196  205  202  200  192  198  194   199 #>  [9383,]  175  193  196  205  202  200  192  198  194   199 #>  [9384,]  176  194  197  203  201  199  191  197  193   198 #>  [9385,]  175  193  196  205  202  200  192  198  194   199 #>  [9386,]  175  193  196  204  202  200  192  198  194   199 #>  [9387,]  175  193  196  205  202  200  192  198  194   199 #>  [9388,]  175  193  196  204  202  200  192  198  194   199 #>  [9389,]  175  193  196  205  202  200  192  198  194   199 #>  [9390,]  175  193  196  205  202  200  192  198  194   199 #>  [9391,]  175  193  196  205  202  200  192  198  194   199 #>  [9392,]  175  193  196  204  202  200  192  198  194   199 #>  [9393,]  175  193  196  205  202  200  192  198  194   199 #>  [9394,]  176  194  197  203  201  199  191  197  193   198 #>  [9395,]  175  193  196  204  202  200  192  198  194   199 #>  [9396,]  175  193  196  204  202  200  192  198  194   199 #>  [9397,]  175  193  196  204  202  200  192  198  194   199 #>  [9398,]  175  193  196  204  202  200  192  198  194   199 #>  [9399,]  175  193  196  204  202  200  192  198  194   199 #>  [9400,]  175  193  196  204  202  200  192  198  194   199 #>  [9401,]  178  196  199  207  204  202  194  200  196   201 #>  [9402,]  178  196  199  207  204  202  194  200  196   201 #>  [9403,]  178  196  199  207  204  202  194  200  196   201 #>  [9404,]  177  195  198  206  203  201  193  199  195   200 #>  [9405,]  178  196  199  207  204  202  194  200  196   201 #>  [9406,]  178  196  199  207  204  203  195  201  197   201 #>  [9407,]  178  196  199  207  204  202  194  200  196   201 #>  [9408,]  177  195  198  206  203  201  193  199  195   200 #>  [9409,]  177  195  198  206  203  201  193  199  195   200 #>  [9410,]  177  195  198  206  203  201  193  199  195   200 #>  [9411,]  178  196  199  207  204  202  194  200  196   201 #>  [9412,]  178  196  199  207  204  203  195  201  197   201 #>  [9413,]  178  196  199  207  204  202  194  200  196   201 #>  [9414,]  178  196  199  207  204  202  194  200  196   201 #>  [9415,]  178  196  199  207  204  203  195  201  197   201 #>  [9416,]  178  196  199  207  204  202  194  200  196   201 #>  [9417,]  178  196  199  207  204  202  194  200  196   201 #>  [9418,]  178  196  199  207  204  202  194  200  196   201 #>  [9419,]  178  196  199  207  204  202  194  200  196   201 #>  [9420,]  178  196  199  207  204  202  194  200  196   201 #>  [9421,]  178  196  199  207  204  202  194  200  196   201 #>  [9422,]  178  196  199  207  204  202  194  200  196   201 #>  [9423,]  178  196  199  207  204  202  194  200  196   201 #>  [9424,]  178  196  199  207  204  202  194  200  196   201 #>  [9425,]  178  196  199  207  204  202  194  200  196   201 #>  [9426,]  178  196  199  207  204  203  195  201  197   201 #>  [9427,]  178  196  199  207  204  202  194  200  196   201 #>  [9428,]  178  196  199  207  204  202  194  200  196   201 #>  [9429,]  178  196  199  207  204  202  194  200  196   201 #>  [9430,]  178  196  199  207  204  202  194  200  196   201 #>  [9431,]  178  196  199  207  204  202  194  200  196   201 #>  [9432,]  178  196  199  207  204  202  194  200  196   201 #>  [9433,]  178  196  199  207  204  202  194  200  196   201 #>  [9434,]  178  196  199  207  204  202  194  200  196   201 #>  [9435,]  178  196  199  207  204  202  194  200  196   201 #>  [9436,]  178  196  199  207  204  202  194  200  196   201 #>  [9437,]  178  196  199  207  204  202  194  200  196   201 #>  [9438,]  178  196  199  207  204  202  194  200  196   201 #>  [9439,]  178  196  199  207  204  202  194  200  196   201 #>  [9440,]  178  196  199  207  204  202  194  200  196   201 #>  [9441,]  178  196  199  207  204  202  194  200  196   201 #>  [9442,]  178  196  199  207  204  202  194  200  196   201 #>  [9443,]  177  195  198  206  203  201  193  199  195   200 #>  [9444,]  178  196  199  207  204  202  194  200  196   201 #>  [9445,]  178  196  199  207  204  202  194  200  196   201 #>  [9446,]  178  196  199  207  204  203  195  201  197   201 #>  [9447,]  178  196  199  207  204  202  194  200  196   201 #>  [9448,]  178  196  199  207  204  202  194  200  196   201 #>  [9449,]  178  196  199  207  204  202  194  200  196   201 #>  [9450,]  178  196  199  207  204  202  194  200  196   201 #>  [9451,]  177  195  198  206  203  201  193  199  195   200 #>  [9452,]  178  196  199  207  204  202  194  200  196   201 #>  [9453,]  178  196  199  207  204  202  194  200  196   201 #>  [9454,]  178  196  199  207  204  202  194  200  196   201 #>  [9455,]  178  196  199  207  204  202  194  200  196   201 #>  [9456,]  178  196  199  207  204  203  195  201  197   201 #>  [9457,]  178  196  199  207  204  202  194  200  196   201 #>  [9458,]  178  196  199  207  204  202  194  200  196   201 #>  [9459,]  178  196  199  207  204  202  194  200  196   201 #>  [9460,]  177  195  198  206  203  201  193  199  195   200 #>  [9461,]  178  196  199  207  204  203  195  201  197   201 #>  [9462,]  178  196  199  207  204  202  194  200  196   201 #>  [9463,]  178  196  199  207  204  202  194  200  196   201 #>  [9464,]  177  195  198  206  203  201  193  199  195   200 #>  [9465,]  178  196  199  207  204  202  194  200  196   201 #>  [9466,]  178  196  199  207  204  203  195  201  197   201 #>  [9467,]  177  195  198  206  203  201  193  199  195   200 #>  [9468,]  178  196  199  207  204  202  194  200  196   201 #>  [9469,]  178  196  199  207  204  202  194  200  196   201 #>  [9470,]  178  196  199  207  204  202  194  200  196   201 #>  [9471,]  178  196  199  207  204  202  194  200  196   201 #>  [9472,]  178  196  199  207  204  202  194  200  196   201 #>  [9473,]  178  196  199  207  204  202  194  200  196   201 #>  [9474,]  178  196  199  207  204  202  194  200  196   201 #>  [9475,]  178  196  199  207  204  202  194  200  196   201 #>  [9476,]  178  196  199  207  204  203  195  201  197   201 #>  [9477,]  178  196  199  207  204  202  194  200  196   201 #>  [9478,]  178  196  199  207  204  202  194  200  196   201 #>  [9479,]  178  196  199  207  204  202  194  200  196   201 #>  [9480,]  178  196  199  207  204  202  194  200  196   201 #>  [9481,]  178  196  199  207  204  202  194  200  196   201 #>  [9482,]  178  196  199  207  204  202  194  200  196   201 #>  [9483,]  178  196  199  207  204  202  194  200  196   201 #>  [9484,]  178  196  199  207  204  202  194  200  196   201 #>  [9485,]  177  195  198  206  203  201  193  199  195   200 #>  [9486,]  178  196  199  207  204  202  194  200  196   201 #>  [9487,]  178  196  199  207  204  202  194  200  196   201 #>  [9488,]  178  196  199  207  204  202  194  200  196   201 #>  [9489,]  178  196  199  207  204  202  194  200  196   201 #>  [9490,]  178  196  199  207  204  202  194  200  196   201 #>  [9491,]  177  195  198  206  203  201  193  199  195   200 #>  [9492,]  178  196  199  207  204  202  194  200  196   201 #>  [9493,]  178  196  199  207  204  202  194  200  196   201 #>  [9494,]  178  196  199  207  204  203  195  201  197   201 #>  [9495,]  177  195  198  206  203  201  193  199  195   200 #>  [9496,]  178  196  199  207  204  202  194  200  196   201 #>  [9497,]  178  196  199  207  204  202  194  200  196   201 #>  [9498,]  178  196  199  207  204  202  194  200  196   201 #>  [9499,]  178  196  199  207  204  202  194  200  196   201 #>  [9500,]  178  196  199  207  204  202  194  200  196   201 #>  [9501,]  179  197  200  208  205  204  196  202  198   202 #>  [9502,]  179  197  200  208  205  204  196  202  198   202 #>  [9503,]  179  197  200  208  205  204  196  202  198   202 #>  [9504,]  180  198  201  209  206  205  197  203  199   202 #>  [9505,]  179  197  200  208  205  204  196  202  198   202 #>  [9506,]  180  198  201  209  206  205  197  203  199   202 #>  [9507,]  179  197  200  208  205  204  196  202  198   202 #>  [9508,]  179  197  200  208  205  204  196  202  198   202 #>  [9509,]  180  198  201  209  206  205  197  203  199   202 #>  [9510,]  180  198  201  209  206  205  197  203  199   202 #>  [9511,]  180  198  201  209  206  205  197  203  199   202 #>  [9512,]  180  198  201  209  206  205  197  203  199   202 #>  [9513,]  179  197  200  208  205  204  196  202  198   202 #>  [9514,]  180  198  201  209  206  205  197  203  199   202 #>  [9515,]  180  198  201  209  206  205  197  203  199   202 #>  [9516,]  179  197  200  208  205  204  196  202  198   202 #>  [9517,]  179  197  200  208  205  204  196  202  198   202 #>  [9518,]  180  198  201  209  206  205  197  203  199   202 #>  [9519,]  180  198  201  209  206  205  197  203  199   202 #>  [9520,]  179  197  200  208  205  204  196  202  198   202 #>  [9521,]  180  198  201  209  206  205  197  203  199   202 #>  [9522,]  179  197  200  208  205  204  196  202  198   202 #>  [9523,]  179  197  200  208  205  204  196  202  198   202 #>  [9524,]  179  197  200  208  205  204  196  202  198   202 #>  [9525,]  179  197  200  208  205  204  196  202  198   202 #>  [9526,]  180  198  201  209  206  205  197  203  199   202 #>  [9527,]  180  198  201  209  206  205  197  203  199   202 #>  [9528,]  179  197  200  208  205  204  196  202  198   202 #>  [9529,]  179  197  200  208  205  204  196  202  198   202 #>  [9530,]  180  198  201  209  206  205  197  203  199   202 #>  [9531,]  180  198  201  209  206  205  197  203  199   202 #>  [9532,]  179  197  200  208  205  204  196  202  198   202 #>  [9533,]  180  198  201  209  206  205  197  203  199   202 #>  [9534,]  179  197  200  208  205  204  196  202  198   202 #>  [9535,]  179  197  200  208  205  204  196  202  198   202 #>  [9536,]  180  198  201  209  206  205  197  203  199   202 #>  [9537,]  179  197  200  208  205  204  196  202  198   202 #>  [9538,]  180  198  201  209  206  205  197  203  199   202 #>  [9539,]  179  197  200  208  205  204  196  202  198   202 #>  [9540,]  179  197  200  208  205  204  196  202  198   202 #>  [9541,]  180  198  201  209  206  205  197  203  199   202 #>  [9542,]  180  198  201  209  206  205  197  203  199   202 #>  [9543,]  179  197  200  208  205  204  196  202  198   202 #>  [9544,]  179  197  200  208  205  204  196  202  198   202 #>  [9545,]  179  197  200  208  205  204  196  202  198   202 #>  [9546,]  179  197  200  208  205  204  196  202  198   202 #>  [9547,]  179  197  200  208  205  204  196  202  198   202 #>  [9548,]  180  198  201  209  206  205  197  203  199   202 #>  [9549,]  179  197  200  208  205  204  196  202  198   202 #>  [9550,]  179  197  200  208  205  204  196  202  198   202 #>  [9551,]  179  197  200  208  205  204  196  202  198   202 #>  [9552,]  179  197  200  208  205  204  196  202  198   202 #>  [9553,]  179  197  200  208  205  204  196  202  198   202 #>  [9554,]  179  197  200  208  205  204  196  202  198   202 #>  [9555,]  179  197  200  208  205  204  196  202  198   202 #>  [9556,]  179  197  200  208  205  204  196  202  198   202 #>  [9557,]  179  197  200  208  205  204  196  202  198   202 #>  [9558,]  180  198  201  209  206  205  197  203  199   202 #>  [9559,]  179  197  200  208  205  204  196  202  198   202 #>  [9560,]  180  198  201  209  206  205  197  203  199   202 #>  [9561,]  180  198  201  209  206  205  197  203  199   202 #>  [9562,]  180  198  201  209  206  205  197  203  199   202 #>  [9563,]  179  197  200  208  205  204  196  202  198   202 #>  [9564,]  179  197  200  208  205  204  196  202  198   202 #>  [9565,]  179  197  200  208  205  204  196  202  198   202 #>  [9566,]  179  197  200  208  205  204  196  202  198   202 #>  [9567,]  179  197  200  208  205  204  196  202  198   202 #>  [9568,]  180  198  201  209  206  205  197  203  199   202 #>  [9569,]  180  198  201  209  206  205  197  203  199   202 #>  [9570,]  179  197  200  208  205  204  196  202  198   202 #>  [9571,]  179  197  200  208  205  204  196  202  198   202 #>  [9572,]  179  197  200  208  205  204  196  202  198   202 #>  [9573,]  179  197  200  208  205  204  196  202  198   202 #>  [9574,]  180  198  201  209  206  205  197  203  199   202 #>  [9575,]  180  198  201  209  206  205  197  203  199   202 #>  [9576,]  179  197  200  208  205  204  196  202  198   202 #>  [9577,]  179  197  200  208  205  204  196  202  198   202 #>  [9578,]  179  197  200  208  205  204  196  202  198   202 #>  [9579,]  179  197  200  208  205  204  196  202  198   202 #>  [9580,]  179  197  200  208  205  204  196  202  198   202 #>  [9581,]  179  197  200  208  205  204  196  202  198   202 #>  [9582,]  180  198  201  209  206  205  197  203  199   202 #>  [9583,]  179  197  200  208  205  204  196  202  198   202 #>  [9584,]  179  197  200  208  205  204  196  202  198   202 #>  [9585,]  180  198  201  209  206  205  197  203  199   202 #>  [9586,]  179  197  200  208  205  204  196  202  198   202 #>  [9587,]  179  197  200  208  205  204  196  202  198   202 #>  [9588,]  179  197  200  208  205  204  196  202  198   202 #>  [9589,]  179  197  200  208  205  204  196  202  198   202 #>  [9590,]  179  197  200  208  205  204  196  202  198   202 #>  [9591,]  179  197  200  208  205  204  196  202  198   202 #>  [9592,]  180  198  201  209  206  205  197  203  199   202 #>  [9593,]  180  198  201  209  206  205  197  203  199   202 #>  [9594,]  179  197  200  208  205  204  196  202  198   202 #>  [9595,]  179  197  200  208  205  204  196  202  198   202 #>  [9596,]  180  198  201  209  206  205  197  203  199   202 #>  [9597,]  180  198  201  209  206  205  197  203  199   202 #>  [9598,]  179  197  200  208  205  204  196  202  198   202 #>  [9599,]  180  198  201  209  206  205  197  203  199   202 #>  [9600,]  179  197  200  208  205  204  196  202  198   202 #>  [9601,]  181  199  202  210  207  206  198  204  200   203 #>  [9602,]  181  199  202  210  207  206  198  204  200   203 #>  [9603,]  181  199  202  210  207  206  198  204  200   203 #>  [9604,]  181  199  202  210  207  206  198  204  200   203 #>  [9605,]  181  199  202  210  207  206  198  204  200   203 #>  [9606,]  181  199  202  210  207  206  198  204  200   203 #>  [9607,]  181  199  202  210  207  206  198  204  200   203 #>  [9608,]  181  199  202  210  207  206  198  204  200   203 #>  [9609,]  181  199  202  210  207  206  198  204  200   203 #>  [9610,]  181  199  202  210  207  206  198  204  200   203 #>  [9611,]  181  199  202  210  207  206  198  204  200   203 #>  [9612,]  181  199  202  210  207  206  198  204  200   203 #>  [9613,]  181  199  202  210  207  206  198  204  200   203 #>  [9614,]  181  199  202  210  207  206  198  204  200   203 #>  [9615,]  181  199  202  210  207  206  198  204  200   203 #>  [9616,]  181  199  202  210  207  206  198  204  200   203 #>  [9617,]  181  199  202  210  207  206  198  204  200   203 #>  [9618,]  181  199  202  210  207  206  198  204  200   203 #>  [9619,]  181  199  202  210  207  206  198  204  200   203 #>  [9620,]  182  200  203  211  208  207  199  205  201   204 #>  [9621,]  181  199  202  210  207  206  198  204  200   203 #>  [9622,]  182  200  203  211  208  207  199  205  201   204 #>  [9623,]  181  199  202  210  207  206  198  204  200   203 #>  [9624,]  181  199  202  210  207  206  198  204  200   203 #>  [9625,]  181  199  202  210  207  206  198  204  200   203 #>  [9626,]  181  199  202  210  207  206  198  204  200   203 #>  [9627,]  182  200  203  211  208  207  199  205  201   204 #>  [9628,]  181  199  202  210  207  206  198  204  200   203 #>  [9629,]  182  200  203  211  208  207  199  205  201   204 #>  [9630,]  181  199  202  210  207  206  198  204  200   203 #>  [9631,]  181  199  202  210  207  206  198  204  200   203 #>  [9632,]  181  199  202  210  207  206  198  204  200   203 #>  [9633,]  181  199  202  210  207  206  198  204  200   203 #>  [9634,]  181  199  202  210  207  206  198  204  200   203 #>  [9635,]  181  199  202  210  207  206  198  204  200   203 #>  [9636,]  181  199  202  210  207  206  198  204  200   203 #>  [9637,]  181  199  202  210  207  206  198  204  200   203 #>  [9638,]  181  199  202  210  207  206  198  204  200   203 #>  [9639,]  181  199  202  210  207  206  198  204  200   203 #>  [9640,]  181  199  202  210  207  206  198  204  200   203 #>  [9641,]  181  199  202  210  207  206  198  204  200   203 #>  [9642,]  181  199  202  210  207  206  198  204  200   203 #>  [9643,]  181  199  202  210  207  206  198  204  200   203 #>  [9644,]  181  199  202  210  207  206  198  204  200   203 #>  [9645,]  181  199  202  210  207  206  198  204  200   203 #>  [9646,]  181  199  202  210  207  206  198  204  200   203 #>  [9647,]  181  199  202  210  207  206  198  204  200   203 #>  [9648,]  181  199  202  210  207  206  198  204  200   203 #>  [9649,]  181  199  202  210  207  206  198  204  200   203 #>  [9650,]  181  199  202  210  207  206  198  204  200   203 #>  [9651,]  181  199  202  210  207  206  198  204  200   203 #>  [9652,]  181  199  202  210  207  206  198  204  200   203 #>  [9653,]  181  199  202  210  207  206  198  204  200   203 #>  [9654,]  181  199  202  210  207  206  198  204  200   203 #>  [9655,]  181  199  202  210  207  206  198  204  200   203 #>  [9656,]  181  199  202  210  207  206  198  204  200   203 #>  [9657,]  181  199  202  210  207  206  198  204  200   203 #>  [9658,]  182  200  203  211  208  207  199  205  201   204 #>  [9659,]  181  199  202  210  207  206  198  204  200   203 #>  [9660,]  181  199  202  210  207  206  198  204  200   203 #>  [9661,]  181  199  202  210  207  206  198  204  200   203 #>  [9662,]  181  199  202  210  207  206  198  204  200   203 #>  [9663,]  181  199  202  210  207  206  198  204  200   203 #>  [9664,]  182  200  203  211  208  207  199  205  201   204 #>  [9665,]  181  199  202  210  207  206  198  204  200   203 #>  [9666,]  181  199  202  210  207  206  198  204  200   203 #>  [9667,]  181  199  202  210  207  206  198  204  200   203 #>  [9668,]  181  199  202  210  207  206  198  204  200   203 #>  [9669,]  181  199  202  210  207  206  198  204  200   203 #>  [9670,]  181  199  202  210  207  206  198  204  200   203 #>  [9671,]  181  199  202  210  207  206  198  204  200   203 #>  [9672,]  181  199  202  210  207  206  198  204  200   203 #>  [9673,]  181  199  202  210  207  206  198  204  200   203 #>  [9674,]  181  199  202  210  207  206  198  204  200   203 #>  [9675,]  181  199  202  210  207  206  198  204  200   203 #>  [9676,]  181  199  202  210  207  206  198  204  200   203 #>  [9677,]  182  200  203  211  208  207  199  205  201   204 #>  [9678,]  181  199  202  210  207  206  198  204  200   203 #>  [9679,]  181  199  202  210  207  206  198  204  200   203 #>  [9680,]  181  199  202  210  207  206  198  204  200   203 #>  [9681,]  182  200  203  211  208  207  199  205  201   204 #>  [9682,]  181  199  202  210  207  206  198  204  200   203 #>  [9683,]  181  199  202  210  207  206  198  204  200   203 #>  [9684,]  181  199  202  210  207  206  198  204  200   203 #>  [9685,]  181  199  202  210  207  206  198  204  200   203 #>  [9686,]  181  199  202  210  207  206  198  204  200   203 #>  [9687,]  182  200  203  211  208  207  199  205  201   204 #>  [9688,]  181  199  202  210  207  206  198  204  200   203 #>  [9689,]  181  199  202  210  207  206  198  204  200   203 #>  [9690,]  181  199  202  210  207  206  198  204  200   203 #>  [9691,]  181  199  202  210  207  206  198  204  200   203 #>  [9692,]  181  199  202  210  207  206  198  204  200   203 #>  [9693,]  181  199  202  210  207  206  198  204  200   203 #>  [9694,]  181  199  202  210  207  206  198  204  200   203 #>  [9695,]  181  199  202  210  207  206  198  204  200   203 #>  [9696,]  181  199  202  210  207  206  198  204  200   203 #>  [9697,]  181  199  202  210  207  206  198  204  200   203 #>  [9698,]  181  199  202  210  207  206  198  204  200   203 #>  [9699,]  181  199  202  210  207  206  198  204  200   203 #>  [9700,]  182  200  203  211  208  207  199  205  201   204 #>  [9701,]  184  201  205  213  210  208  200  206  202   205 #>  [9702,]  184  201  205  213  210  208  201  207  203   206 #>  [9703,]  184  201  205  213  210  208  201  207  203   206 #>  [9704,]  184  201  204  212  209  208  200  206  202   205 #>  [9705,]  184  201  205  213  210  208  200  206  202   205 #>  [9706,]  184  201  205  213  210  208  201  207  203   206 #>  [9707,]  184  201  205  213  210  208  201  207  203   206 #>  [9708,]  184  201  204  212  209  208  200  206  202   205 #>  [9709,]  184  201  204  212  209  208  200  206  202   205 #>  [9710,]  184  201  205  213  210  208  200  206  202   205 #>  [9711,]  184  201  204  212  209  208  200  206  202   205 #>  [9712,]  183  201  205  213  210  208  201  207  203   206 #>  [9713,]  184  201  204  212  209  208  200  206  202   205 #>  [9714,]  183  201  205  213  210  208  200  206  202   205 #>  [9715,]  184  201  205  213  210  208  200  206  202   205 #>  [9716,]  184  201  205  213  210  208  200  206  202   205 #>  [9717,]  184  201  204  212  209  208  200  206  202   205 #>  [9718,]  184  201  205  213  210  208  201  207  203   206 #>  [9719,]  184  201  205  213  210  208  201  207  203   206 #>  [9720,]  184  201  205  213  210  208  201  207  203   206 #>  [9721,]  184  201  205  213  210  208  200  206  202   205 #>  [9722,]  184  201  204  212  209  208  200  206  202   205 #>  [9723,]  184  201  205  213  210  208  201  207  203   206 #>  [9724,]  184  201  205  213  210  208  200  206  202   205 #>  [9725,]  184  201  205  213  210  208  201  207  203   206 #>  [9726,]  183  201  205  213  210  208  200  206  202   205 #>  [9727,]  184  201  204  212  209  208  200  206  202   205 #>  [9728,]  184  201  205  213  210  208  201  207  203   206 #>  [9729,]  184  201  205  213  210  208  200  206  202   205 #>  [9730,]  184  201  205  213  210  208  200  206  202   205 #>  [9731,]  184  201  205  213  210  208  201  207  203   206 #>  [9732,]  183  201  205  213  210  208  201  207  203   206 #>  [9733,]  184  201  205  213  210  208  201  207  203   206 #>  [9734,]  184  201  205  213  210  208  201  207  203   206 #>  [9735,]  184  201  204  212  209  208  200  206  202   205 #>  [9736,]  184  201  205  213  210  208  200  206  202   205 #>  [9737,]  184  201  205  213  210  208  200  206  202   205 #>  [9738,]  184  201  205  213  210  208  200  206  202   205 #>  [9739,]  184  201  205  213  210  208  200  206  202   205 #>  [9740,]  184  201  205  213  210  208  201  207  203   206 #>  [9741,]  184  201  205  213  210  208  200  206  202   205 #>  [9742,]  184  201  205  213  210  208  201  207  203   206 #>  [9743,]  184  201  204  212  209  208  200  206  202   205 #>  [9744,]  184  201  204  212  209  208  200  206  202   205 #>  [9745,]  184  201  205  213  210  208  200  206  202   205 #>  [9746,]  184  201  205  213  210  208  200  206  202   205 #>  [9747,]  184  201  205  213  210  208  200  206  202   205 #>  [9748,]  184  201  205  213  210  208  201  207  203   206 #>  [9749,]  184  201  204  212  209  208  200  206  202   205 #>  [9750,]  184  201  205  213  210  208  200  206  202   205 #>  [9751,]  184  201  205  213  210  208  200  206  202   205 #>  [9752,]  184  201  204  212  209  208  200  206  202   205 #>  [9753,]  184  201  205  213  210  208  200  206  202   205 #>  [9754,]  184  201  205  213  210  208  200  206  202   205 #>  [9755,]  184  201  204  212  209  208  200  206  202   205 #>  [9756,]  184  201  205  213  210  208  201  207  203   206 #>  [9757,]  184  201  205  213  210  208  200  206  202   205 #>  [9758,]  184  201  204  212  209  208  200  206  202   205 #>  [9759,]  184  201  205  213  210  208  200  206  202   205 #>  [9760,]  184  201  205  213  210  208  201  207  203   206 #>  [9761,]  184  201  205  213  210  208  200  206  202   205 #>  [9762,]  184  201  205  213  210  208  200  206  202   205 #>  [9763,]  184  201  205  213  210  208  200  206  202   205 #>  [9764,]  184  201  205  213  210  208  201  207  203   206 #>  [9765,]  184  201  205  213  210  208  201  207  203   206 #>  [9766,]  184  201  204  212  209  208  200  206  202   205 #>  [9767,]  184  201  205  213  210  208  200  206  202   205 #>  [9768,]  184  201  205  213  210  208  200  206  202   205 #>  [9769,]  183  201  204  212  209  208  200  206  202   205 #>  [9770,]  184  201  205  213  210  208  201  207  203   206 #>  [9771,]  184  201  205  213  210  208  201  207  203   206 #>  [9772,]  184  201  205  213  210  208  200  206  202   205 #>  [9773,]  184  201  205  213  210  208  201  207  203   206 #>  [9774,]  184  201  205  213  210  208  200  206  202   205 #>  [9775,]  184  201  205  213  210  208  200  206  202   205 #>  [9776,]  184  201  205  213  210  208  200  206  202   205 #>  [9777,]  184  201  205  213  210  208  200  206  202   205 #>  [9778,]  184  201  205  213  210  208  201  207  203   206 #>  [9779,]  184  201  204  212  209  208  200  206  202   205 #>  [9780,]  183  201  204  212  209  208  200  206  202   205 #>  [9781,]  184  201  204  212  209  208  200  206  202   205 #>  [9782,]  184  201  204  212  209  208  200  206  202   205 #>  [9783,]  184  201  204  212  209  208  200  206  202   205 #>  [9784,]  184  201  205  213  210  208  201  207  203   206 #>  [9785,]  184  201  205  213  210  208  200  206  202   205 #>  [9786,]  184  201  205  213  210  208  200  206  202   205 #>  [9787,]  184  201  204  212  209  208  200  206  202   205 #>  [9788,]  184  201  204  212  209  208  200  206  202   205 #>  [9789,]  184  201  204  212  209  208  200  206  202   205 #>  [9790,]  184  201  204  212  209  208  200  206  202   205 #>  [9791,]  184  201  205  213  210  208  200  206  202   205 #>  [9792,]  184  201  204  212  209  208  200  206  202   205 #>  [9793,]  184  201  205  213  210  208  201  207  203   206 #>  [9794,]  184  201  205  213  210  208  200  206  202   205 #>  [9795,]  184  201  204  212  209  208  200  206  202   205 #>  [9796,]  184  201  205  213  210  208  200  206  202   205 #>  [9797,]  184  201  205  213  210  208  201  207  203   206 #>  [9798,]  184  201  205  213  210  208  201  207  203   206 #>  [9799,]  184  201  204  212  209  208  200  206  202   205 #>  [9800,]  184  201  205  213  210  208  201  207  203   206 #>  [9801,]  186  203  206  215  212  210  203  209  205   208 #>  [9802,]  186  203  206  215  212  210  203  209  205   208 #>  [9803,]  185  202  206  215  212  210  203  209  205   208 #>  [9804,]  185  202  206  215  212  210  203  209  205   208 #>  [9805,]  185  202  206  215  212  210  203  209  205   208 #>  [9806,]  186  203  206  215  212  210  203  209  205   208 #>  [9807,]  185  202  206  215  212  210  203  209  205   208 #>  [9808,]  185  202  206  215  212  210  203  209  205   208 #>  [9809,]  185  202  206  215  212  210  203  209  205   208 #>  [9810,]  185  202  206  215  212  210  203  209  205   208 #>  [9811,]  185  202  206  215  212  210  203  209  205   208 #>  [9812,]  185  202  206  214  211  209  202  208  204   207 #>  [9813,]  186  203  206  215  212  210  203  209  205   208 #>  [9814,]  186  203  206  215  212  210  203  209  205   208 #>  [9815,]  186  203  206  214  211  209  202  208  204   207 #>  [9816,]  186  203  206  215  212  210  203  209  205   208 #>  [9817,]  186  203  206  214  211  209  202  208  204   207 #>  [9818,]  185  202  206  215  212  210  203  209  205   208 #>  [9819,]  185  202  206  215  212  210  203  209  205   208 #>  [9820,]  185  202  206  215  212  210  203  209  205   208 #>  [9821,]  186  203  206  215  212  210  203  209  205   208 #>  [9822,]  186  203  206  215  212  210  203  209  205   208 #>  [9823,]  185  202  206  214  211  209  202  208  204   207 #>  [9824,]  185  202  206  215  212  210  203  209  205   208 #>  [9825,]  185  202  206  215  212  210  203  209  205   208 #>  [9826,]  186  203  206  215  212  210  203  209  205   208 #>  [9827,]  186  203  206  215  212  210  203  209  205   208 #>  [9828,]  185  202  206  215  212  210  203  209  205   208 #>  [9829,]  186  203  206  214  211  209  202  208  204   207 #>  [9830,]  185  202  206  215  212  210  203  209  205   208 #>  [9831,]  185  202  206  214  211  209  202  208  204   207 #>  [9832,]  185  202  206  215  212  210  203  209  205   208 #>  [9833,]  186  203  206  215  212  210  203  209  205   208 #>  [9834,]  185  202  206  214  211  209  202  208  204   207 #>  [9835,]  186  203  206  215  212  210  203  209  205   208 #>  [9836,]  185  202  206  215  212  210  203  209  205   208 #>  [9837,]  186  203  206  214  211  209  202  208  204   207 #>  [9838,]  185  202  206  215  212  210  203  209  205   208 #>  [9839,]  185  202  206  215  212  210  203  209  205   208 #>  [9840,]  185  202  206  215  212  210  203  209  205   208 #>  [9841,]  186  203  206  215  212  210  203  209  205   208 #>  [9842,]  185  202  206  214  211  209  202  208  204   207 #>  [9843,]  185  202  206  214  211  209  202  208  204   207 #>  [9844,]  186  203  206  214  211  209  202  208  204   207 #>  [9845,]  185  202  206  215  212  210  203  209  205   208 #>  [9846,]  185  202  206  215  212  210  203  209  205   208 #>  [9847,]  185  202  206  215  212  210  203  209  205   208 #>  [9848,]  185  202  206  214  211  209  202  208  204   207 #>  [9849,]  185  202  206  215  212  210  203  209  205   208 #>  [9850,]  186  203  206  215  212  210  203  209  205   208 #>  [9851,]  185  202  206  215  212  210  203  209  205   208 #>  [9852,]  186  203  206  215  212  210  203  209  205   208 #>  [9853,]  185  202  206  215  212  210  203  209  205   208 #>  [9854,]  185  202  206  215  212  210  203  209  205   208 #>  [9855,]  185  202  206  215  212  210  203  209  205   208 #>  [9856,]  185  202  206  215  212  210  203  209  205   208 #>  [9857,]  185  202  206  215  212  210  203  209  205   208 #>  [9858,]  186  203  206  215  212  210  203  209  205   208 #>  [9859,]  186  203  206  215  212  210  203  209  205   208 #>  [9860,]  185  202  206  215  212  210  203  209  205   208 #>  [9861,]  186  203  206  215  212  210  203  209  205   208 #>  [9862,]  185  202  206  215  212  210  203  209  205   208 #>  [9863,]  185  202  206  214  211  209  202  208  204   207 #>  [9864,]  185  202  206  214  211  209  202  208  204   207 #>  [9865,]  185  202  206  215  212  210  203  209  205   208 #>  [9866,]  185  202  206  215  212  210  203  209  205   208 #>  [9867,]  185  202  206  215  212  210  203  209  205   208 #>  [9868,]  186  203  206  215  212  210  203  209  205   208 #>  [9869,]  185  202  206  215  212  210  203  209  205   208 #>  [9870,]  186  203  206  214  211  209  202  208  204   207 #>  [9871,]  186  203  206  215  212  210  203  209  205   208 #>  [9872,]  185  202  206  215  212  210  203  209  205   208 #>  [9873,]  186  203  206  215  212  210  203  209  205   208 #>  [9874,]  185  202  206  215  212  210  203  209  205   208 #>  [9875,]  185  202  206  214  211  209  202  208  204   207 #>  [9876,]  186  203  206  215  212  210  203  209  205   208 #>  [9877,]  186  203  206  215  212  210  203  209  205   208 #>  [9878,]  185  202  206  214  211  209  202  208  204   207 #>  [9879,]  186  203  206  214  211  209  202  208  204   207 #>  [9880,]  185  202  206  215  212  210  203  209  205   208 #>  [9881,]  186  203  206  214  211  209  202  208  204   207 #>  [9882,]  185  202  206  215  212  210  203  209  205   208 #>  [9883,]  186  203  206  215  212  210  203  209  205   208 #>  [9884,]  185  202  206  215  212  210  203  209  205   208 #>  [9885,]  185  202  206  215  212  210  203  209  205   208 #>  [9886,]  186  203  206  215  212  210  203  209  205   208 #>  [9887,]  185  202  206  215  212  210  203  209  205   208 #>  [9888,]  185  202  206  215  212  210  203  209  205   208 #>  [9889,]  185  202  206  215  212  210  203  209  205   208 #>  [9890,]  186  203  206  215  212  210  203  209  205   208 #>  [9891,]  185  202  206  215  212  210  203  209  205   208 #>  [9892,]  185  202  206  214  211  209  202  208  204   207 #>  [9893,]  186  203  206  215  212  210  203  209  205   208 #>  [9894,]  186  203  206  214  211  209  202  208  204   207 #>  [9895,]  185  202  206  214  211  209  202  208  204   207 #>  [9896,]  186  203  206  215  212  210  203  209  205   208 #>  [9897,]  185  202  206  215  212  210  203  209  205   208 #>  [9898,]  185  202  206  215  212  210  203  209  205   208 #>  [9899,]  186  203  206  215  212  210  203  209  205   208 #>  [9900,]  186  203  206  214  211  209  202  208  204   207 #>  [9901,]  188  204  207  216  213  211  204  210  206   209 #>  [9902,]  188  204  207  216  213  211  204  210  206   209 #>  [9903,]  187  206  209  218  215  212  205  211  207   210 #>  [9904,]  187  205  208  217  214  212  205  211  207   210 #>  [9905,]  187  206  209  218  215  212  205  211  207   210 #>  [9906,]  188  204  207  216  213  211  204  210  206   209 #>  [9907,]  187  206  209  218  215  212  205  211  207   210 #>  [9908,]  187  205  208  217  214  212  205  211  207   210 #>  [9909,]  187  205  208  217  214  212  205  211  207   210 #>  [9910,]  187  206  209  218  215  212  205  211  207   210 #>  [9911,]  187  205  208  217  214  212  205  211  207   210 #>  [9912,]  187  206  209  218  215  212  205  211  207   210 #>  [9913,]  188  204  207  216  213  211  204  210  206   209 #>  [9914,]  188  204  207  216  213  211  204  210  206   209 #>  [9915,]  188  204  207  216  213  211  204  210  206   209 #>  [9916,]  188  204  207  216  213  211  204  210  206   209 #>  [9917,]  188  204  207  216  213  211  204  210  206   209 #>  [9918,]  187  206  209  218  215  212  205  211  207   210 #>  [9919,]  187  206  209  218  215  212  205  211  207   210 #>  [9920,]  187  206  209  218  215  212  205  211  207   210 #>  [9921,]  188  204  207  216  213  211  204  210  206   209 #>  [9922,]  187  205  208  217  214  212  205  211  207   210 #>  [9923,]  187  206  209  218  215  212  205  211  207   210 #>  [9924,]  187  206  209  218  215  212  205  211  207   210 #>  [9925,]  187  206  209  218  215  212  205  211  207   210 #>  [9926,]  187  206  209  218  215  212  205  211  207   210 #>  [9927,]  187  205  208  217  214  212  205  211  207   210 #>  [9928,]  187  206  209  218  215  212  205  211  207   210 #>  [9929,]  188  204  207  216  213  211  204  210  206   209 #>  [9930,]  187  205  208  217  214  212  205  211  207   210 #>  [9931,]  187  206  209  218  215  212  205  211  207   210 #>  [9932,]  187  206  209  218  215  212  205  211  207   210 #>  [9933,]  188  204  207  216  213  211  204  210  206   209 #>  [9934,]  187  206  209  218  215  212  205  211  207   210 #>  [9935,]  188  204  207  216  213  211  204  210  206   209 #>  [9936,]  187  206  209  218  215  212  205  211  207   210 #>  [9937,]  187  206  209  218  215  212  205  211  207   210 #>  [9938,]  187  206  209  218  215  212  205  211  207   210 #>  [9939,]  187  206  209  218  215  212  205  211  207   210 #>  [9940,]  187  206  209  218  215  212  205  211  207   210 #>  [9941,]  188  204  207  216  213  211  204  210  206   209 #>  [9942,]  187  206  209  218  215  212  205  211  207   210 #>  [9943,]  187  205  208  217  214  212  205  211  207   210 #>  [9944,]  188  204  207  216  213  211  204  210  206   209 #>  [9945,]  187  205  208  217  214  212  205  211  207   210 #>  [9946,]  187  205  208  217  214  212  205  211  207   210 #>  [9947,]  187  206  209  218  215  212  205  211  207   210 #>  [9948,]  187  206  209  218  215  212  205  211  207   210 #>  [9949,]  187  205  208  217  214  212  205  211  207   210 #>  [9950,]  188  204  207  216  213  211  204  210  206   209 #>  [9951,]  187  206  209  218  215  212  205  211  207   210 #>  [9952,]  187  205  208  217  214  212  205  211  207   210 #>  [9953,]  187  206  209  218  215  212  205  211  207   210 #>  [9954,]  187  205  208  217  214  212  205  211  207   210 #>  [9955,]  187  205  208  217  214  212  205  211  207   210 #>  [9956,]  187  206  209  218  215  212  205  211  207   210 #>  [9957,]  187  206  209  218  215  212  205  211  207   210 #>  [9958,]  187  205  208  217  214  212  205  211  207   210 #>  [9959,]  188  204  207  216  213  211  204  210  206   209 #>  [9960,]  187  206  209  218  215  212  205  211  207   210 #>  [9961,]  188  204  207  216  213  211  204  210  206   209 #>  [9962,]  187  206  209  218  215  212  205  211  207   210 #>  [9963,]  187  206  209  218  215  212  205  211  207   210 #>  [9964,]  187  206  209  218  215  212  205  211  207   210 #>  [9965,]  187  206  209  218  215  212  205  211  207   210 #>  [9966,]  187  205  208  217  214  212  205  211  207   210 #>  [9967,]  187  206  209  218  215  212  205  211  207   210 #>  [9968,]  188  204  207  216  213  211  204  210  206   209 #>  [9969,]  187  205  208  217  214  212  205  211  207   210 #>  [9970,]  188  204  207  216  213  211  204  210  206   209 #>  [9971,]  187  206  209  218  215  212  205  211  207   210 #>  [9972,]  187  206  209  218  215  212  205  211  207   210 #>  [9973,]  188  204  207  216  213  211  204  210  206   209 #>  [9974,]  187  205  208  217  214  212  205  211  207   210 #>  [9975,]  187  206  209  218  215  212  205  211  207   210 #>  [9976,]  188  204  207  216  213  211  204  210  206   209 #>  [9977,]  188  204  207  216  213  211  204  210  206   209 #>  [9978,]  187  206  209  218  215  212  205  211  207   210 #>  [9979,]  188  204  207  216  213  211  204  210  206   209 #>  [9980,]  187  205  208  217  214  212  205  211  207   210 #>  [9981,]  188  204  207  216  213  211  204  210  206   209 #>  [9982,]  187  205  208  217  214  212  205  211  207   210 #>  [9983,]  188  204  207  216  213  211  204  210  206   209 #>  [9984,]  187  206  209  218  215  212  205  211  207   210 #>  [9985,]  187  205  208  217  214  212  205  211  207   210 #>  [9986,]  188  204  207  216  213  211  204  210  206   209 #>  [9987,]  187  205  208  217  214  212  205  211  207   210 #>  [9988,]  187  205  208  217  214  212  205  211  207   210 #>  [9989,]  187  205  208  217  214  212  205  211  207   210 #>  [9990,]  187  205  208  217  214  212  205  211  207   210 #>  [9991,]  187  205  208  217  214  212  205  211  207   210 #>  [9992,]  187  205  208  217  214  212  205  211  207   210 #>  [9993,]  188  204  207  216  213  211  204  210  206   209 #>  [9994,]  187  206  209  218  215  212  205  211  207   210 #>  [9995,]  187  205  208  217  214  212  205  211  207   210 #>  [9996,]  188  204  207  216  213  211  204  210  206   209 #>  [9997,]  187  206  209  218  215  212  205  211  207   210 #>  [9998,]  187  206  209  218  215  212  205  211  207   210 #>  [9999,]  188  204  207  216  213  211  204  210  206   209 #>  [ reached getOption(\"max.print\") -- omitted 10001 rows ] computeForestLeafIndices(bart_model, X, \"mean\", 0) #>          [,1] #>     [1,]    1 #>     [2,]    1 #>     [3,]    0 #>     [4,]    0 #>     [5,]    0 #>     [6,]    1 #>     [7,]    0 #>     [8,]    0 #>     [9,]    0 #>    [10,]    0 #>    [11,]    1 #>    [12,]    0 #>    [13,]    1 #>    [14,]    1 #>    [15,]    1 #>    [16,]    1 #>    [17,]    1 #>    [18,]    0 #>    [19,]    0 #>    [20,]    0 #>    [21,]    1 #>    [22,]    1 #>    [23,]    0 #>    [24,]    0 #>    [25,]    0 #>    [26,]    1 #>    [27,]    1 #>    [28,]    0 #>    [29,]    1 #>    [30,]    0 #>    [31,]    0 #>    [32,]    0 #>    [33,]    1 #>    [34,]    0 #>    [35,]    1 #>    [36,]    0 #>    [37,]    1 #>    [38,]    0 #>    [39,]    0 #>    [40,]    0 #>    [41,]    1 #>    [42,]    0 #>    [43,]    0 #>    [44,]    1 #>    [45,]    0 #>    [46,]    0 #>    [47,]    1 #>    [48,]    0 #>    [49,]    0 #>    [50,]    1 #>    [51,]    0 #>    [52,]    1 #>    [53,]    0 #>    [54,]    0 #>    [55,]    0 #>    [56,]    0 #>    [57,]    0 #>    [58,]    1 #>    [59,]    1 #>    [60,]    0 #>    [61,]    1 #>    [62,]    0 #>    [63,]    0 #>    [64,]    0 #>    [65,]    0 #>    [66,]    0 #>    [67,]    0 #>    [68,]    1 #>    [69,]    0 #>    [70,]    1 #>    [71,]    1 #>    [72,]    0 #>    [73,]    1 #>    [74,]    0 #>    [75,]    1 #>    [76,]    1 #>    [77,]    1 #>    [78,]    0 #>    [79,]    1 #>    [80,]    0 #>    [81,]    1 #>    [82,]    0 #>    [83,]    1 #>    [84,]    1 #>    [85,]    0 #>    [86,]    1 #>    [87,]    1 #>    [88,]    0 #>    [89,]    0 #>    [90,]    1 #>    [91,]    0 #>    [92,]    0 #>    [93,]    1 #>    [94,]    1 #>    [95,]    0 #>    [96,]    1 #>    [97,]    1 #>    [98,]    0 #>    [99,]    1 #>   [100,]    1 #>   [101,]    2 #>   [102,]    2 #>   [103,]    2 #>   [104,]    2 #>   [105,]    2 #>   [106,]    2 #>   [107,]    3 #>   [108,]    2 #>   [109,]    2 #>   [110,]    3 #>   [111,]    2 #>   [112,]    2 #>   [113,]    2 #>   [114,]    2 #>   [115,]    2 #>   [116,]    3 #>   [117,]    2 #>   [118,]    2 #>   [119,]    2 #>   [120,]    3 #>   [121,]    2 #>   [122,]    2 #>   [123,]    2 #>   [124,]    3 #>   [125,]    2 #>   [126,]    2 #>   [127,]    2 #>   [128,]    3 #>   [129,]    2 #>   [130,]    2 #>   [131,]    2 #>   [132,]    2 #>   [133,]    2 #>   [134,]    2 #>   [135,]    2 #>   [136,]    2 #>   [137,]    2 #>   [138,]    2 #>   [139,]    2 #>   [140,]    2 #>   [141,]    2 #>   [142,]    2 #>   [143,]    2 #>   [144,]    2 #>   [145,]    2 #>   [146,]    2 #>   [147,]    2 #>   [148,]    2 #>   [149,]    2 #>   [150,]    3 #>   [151,]    2 #>   [152,]    3 #>   [153,]    2 #>   [154,]    3 #>   [155,]    2 #>   [156,]    2 #>   [157,]    2 #>   [158,]    2 #>   [159,]    2 #>   [160,]    2 #>   [161,]    2 #>   [162,]    2 #>   [163,]    2 #>   [164,]    2 #>   [165,]    2 #>   [166,]    2 #>   [167,]    2 #>   [168,]    2 #>   [169,]    2 #>   [170,]    2 #>   [171,]    2 #>   [172,]    2 #>   [173,]    2 #>   [174,]    2 #>   [175,]    2 #>   [176,]    3 #>   [177,]    2 #>   [178,]    2 #>   [179,]    2 #>   [180,]    2 #>   [181,]    2 #>   [182,]    2 #>   [183,]    2 #>   [184,]    2 #>   [185,]    2 #>   [186,]    3 #>   [187,]    2 #>   [188,]    2 #>   [189,]    2 #>   [190,]    2 #>   [191,]    3 #>   [192,]    2 #>   [193,]    2 #>   [194,]    2 #>   [195,]    2 #>   [196,]    2 #>   [197,]    2 #>   [198,]    2 #>   [199,]    2 #>   [200,]    2 #>   [201,]    4 #>   [202,]    4 #>   [203,]    4 #>   [204,]    5 #>   [205,]    4 #>   [206,]    5 #>   [207,]    4 #>   [208,]    4 #>   [209,]    5 #>   [210,]    5 #>   [211,]    5 #>   [212,]    5 #>   [213,]    4 #>   [214,]    5 #>   [215,]    5 #>   [216,]    4 #>   [217,]    4 #>   [218,]    5 #>   [219,]    5 #>   [220,]    4 #>   [221,]    5 #>   [222,]    4 #>   [223,]    5 #>   [224,]    4 #>   [225,]    4 #>   [226,]    5 #>   [227,]    5 #>   [228,]    4 #>   [229,]    4 #>   [230,]    5 #>   [231,]    5 #>   [232,]    5 #>   [233,]    5 #>   [234,]    5 #>   [235,]    4 #>   [236,]    5 #>   [237,]    4 #>   [238,]    5 #>   [239,]    4 #>   [240,]    4 #>   [241,]    5 #>   [242,]    5 #>   [243,]    4 #>   [244,]    4 #>   [245,]    4 #>   [246,]    4 #>   [247,]    4 #>   [248,]    5 #>   [249,]    4 #>   [250,]    4 #>   [251,]    4 #>   [252,]    5 #>   [253,]    4 #>   [254,]    4 #>   [255,]    4 #>   [256,]    4 #>   [257,]    4 #>   [258,]    5 #>   [259,]    4 #>   [260,]    5 #>   [261,]    5 #>   [262,]    5 #>   [263,]    4 #>   [264,]    5 #>   [265,]    4 #>   [266,]    4 #>   [267,]    5 #>   [268,]    5 #>   [269,]    5 #>   [270,]    4 #>   [271,]    4 #>   [272,]    4 #>   [273,]    5 #>   [274,]    5 #>   [275,]    5 #>   [276,]    4 #>   [277,]    4 #>   [278,]    4 #>   [279,]    4 #>   [280,]    5 #>   [281,]    4 #>   [282,]    5 #>   [283,]    4 #>   [284,]    4 #>   [285,]    5 #>   [286,]    4 #>   [287,]    4 #>   [288,]    4 #>   [289,]    4 #>   [290,]    4 #>   [291,]    5 #>   [292,]    5 #>   [293,]    5 #>   [294,]    4 #>   [295,]    4 #>   [296,]    5 #>   [297,]    5 #>   [298,]    4 #>   [299,]    5 #>   [300,]    4 #>   [301,]    7 #>   [302,]    7 #>   [303,]    6 #>   [304,]    7 #>   [305,]    6 #>   [306,]    6 #>   [307,]    7 #>   [308,]    7 #>   [309,]    7 #>   [310,]    7 #>   [311,]    6 #>   [312,]    6 #>   [313,]    7 #>   [314,]    6 #>   [315,]    7 #>   [316,]    7 #>   [317,]    7 #>   [318,]    7 #>   [319,]    6 #>   [320,]    6 #>   [321,]    7 #>   [322,]    6 #>   [323,]    7 #>   [324,]    6 #>   [325,]    7 #>   [326,]    6 #>   [327,]    7 #>   [328,]    7 #>   [329,]    6 #>   [330,]    6 #>   [331,]    7 #>   [332,]    6 #>   [333,]    7 #>   [334,]    6 #>   [335,]    6 #>   [336,]    6 #>   [337,]    7 #>   [338,]    7 #>   [339,]    7 #>   [340,]    6 #>   [341,]    6 #>   [342,]    6 #>   [343,]    7 #>   [344,]    7 #>   [345,]    7 #>   [346,]    7 #>   [347,]    7 #>   [348,]    6 #>   [349,]    7 #>   [350,]    7 #>   [351,]    6 #>   [352,]    6 #>   [353,]    7 #>   [354,]    6 #>   [355,]    6 #>   [356,]    7 #>   [357,]    6 #>   [358,]    7 #>   [359,]    7 #>   [360,]    6 #>   [361,]    7 #>   [362,]    6 #>   [363,]    6 #>   [364,]    7 #>   [365,]    7 #>   [366,]    6 #>   [367,]    6 #>   [368,]    6 #>   [369,]    6 #>   [370,]    7 #>   [371,]    7 #>   [372,]    7 #>   [373,]    7 #>   [374,]    7 #>   [375,]    7 #>   [376,]    7 #>   [377,]    7 #>   [378,]    6 #>   [379,]    7 #>   [380,]    6 #>   [381,]    6 #>   [382,]    7 #>   [383,]    6 #>   [384,]    7 #>   [385,]    7 #>   [386,]    7 #>   [387,]    7 #>   [388,]    7 #>   [389,]    6 #>   [390,]    7 #>   [391,]    6 #>   [392,]    7 #>   [393,]    6 #>   [394,]    7 #>   [395,]    7 #>   [396,]    7 #>   [397,]    7 #>   [398,]    6 #>   [399,]    6 #>   [400,]    7 #>   [401,]    8 #>   [402,]    8 #>   [403,]    8 #>   [404,]    8 #>   [405,]    8 #>   [406,]    8 #>   [407,]    8 #>   [408,]    8 #>   [409,]    8 #>   [410,]    8 #>   [411,]    8 #>   [412,]    8 #>   [413,]    9 #>   [414,]    8 #>   [415,]    9 #>   [416,]    8 #>   [417,]    8 #>   [418,]    8 #>   [419,]    9 #>   [420,]    9 #>   [421,]    8 #>   [422,]    9 #>   [423,]    8 #>   [424,]    8 #>   [425,]    8 #>   [426,]    8 #>   [427,]    9 #>   [428,]    8 #>   [429,]    9 #>   [430,]    8 #>   [431,]    8 #>   [432,]    8 #>   [433,]    8 #>   [434,]    8 #>   [435,]    8 #>   [436,]    9 #>   [437,]    9 #>   [438,]    9 #>   [439,]    8 #>   [440,]    8 #>   [441,]    8 #>   [442,]    8 #>   [443,]    8 #>   [444,]    8 #>   [445,]    8 #>   [446,]    9 #>   [447,]    8 #>   [448,]    8 #>   [449,]    8 #>   [450,]    8 #>   [451,]    9 #>   [452,]    8 #>   [453,]    9 #>   [454,]    8 #>   [455,]    9 #>   [456,]    8 #>   [457,]    8 #>   [458,]    9 #>   [459,]    8 #>   [460,]    8 #>   [461,]    8 #>   [462,]    8 #>   [463,]    8 #>   [464,]    9 #>   [465,]    8 #>   [466,]    9 #>   [467,]    8 #>   [468,]    8 #>   [469,]    9 #>   [470,]    8 #>   [471,]    9 #>   [472,]    8 #>   [473,]    8 #>   [474,]    8 #>   [475,]    8 #>   [476,]    8 #>   [477,]    9 #>   [478,]    8 #>   [479,]    8 #>   [480,]    9 #>   [481,]    9 #>   [482,]    8 #>   [483,]    9 #>   [484,]    8 #>   [485,]    8 #>   [486,]    8 #>   [487,]    9 #>   [488,]    8 #>   [489,]    8 #>   [490,]    9 #>   [491,]    8 #>   [492,]    8 #>   [493,]    8 #>   [494,]    8 #>   [495,]    8 #>   [496,]    9 #>   [497,]    9 #>   [498,]    8 #>   [499,]    8 #>   [500,]    9 #>   [501,]   11 #>   [502,]   11 #>   [503,]   11 #>   [504,]   11 #>   [505,]   11 #>   [506,]   11 #>   [507,]   10 #>   [508,]   11 #>   [509,]   11 #>   [510,]   11 #>   [511,]   11 #>   [512,]   11 #>   [513,]   11 #>   [514,]   11 #>   [515,]   11 #>   [516,]   11 #>   [517,]   11 #>   [518,]   11 #>   [519,]   11 #>   [520,]   11 #>   [521,]   10 #>   [522,]   11 #>   [523,]   11 #>   [524,]   11 #>   [525,]   11 #>   [526,]   11 #>   [527,]   11 #>   [528,]   11 #>   [529,]   11 #>   [530,]   10 #>   [531,]   11 #>   [532,]   11 #>   [533,]   11 #>   [534,]   11 #>   [535,]   11 #>   [536,]   11 #>   [537,]   11 #>   [538,]   11 #>   [539,]   10 #>   [540,]   11 #>   [541,]   11 #>   [542,]   11 #>   [543,]   11 #>   [544,]   11 #>   [545,]   11 #>   [546,]   11 #>   [547,]   11 #>   [548,]   11 #>   [549,]   10 #>   [550,]   11 #>   [551,]   11 #>   [552,]   11 #>   [553,]   11 #>   [554,]   10 #>   [555,]   11 #>   [556,]   11 #>   [557,]   11 #>   [558,]   11 #>   [559,]   11 #>   [560,]   11 #>   [561,]   11 #>   [562,]   10 #>   [563,]   11 #>   [564,]   11 #>   [565,]   11 #>   [566,]   11 #>   [567,]   11 #>   [568,]   11 #>   [569,]   11 #>   [570,]   10 #>   [571,]   11 #>   [572,]   11 #>   [573,]   11 #>   [574,]   11 #>   [575,]   11 #>   [576,]   11 #>   [577,]   11 #>   [578,]   11 #>   [579,]   11 #>   [580,]   10 #>   [581,]   11 #>   [582,]   11 #>   [583,]   11 #>   [584,]   11 #>   [585,]   11 #>   [586,]   11 #>   [587,]   11 #>   [588,]   11 #>   [589,]   11 #>   [590,]   11 #>   [591,]   11 #>   [592,]   11 #>   [593,]   11 #>   [594,]   11 #>   [595,]   10 #>   [596,]   11 #>   [597,]   11 #>   [598,]   10 #>   [599,]   11 #>   [600,]   11 #>   [601,]   12 #>   [602,]   12 #>   [603,]   12 #>   [604,]   12 #>   [605,]   12 #>   [606,]   12 #>   [607,]   13 #>   [608,]   12 #>   [609,]   12 #>   [610,]   12 #>   [611,]   12 #>   [612,]   12 #>   [613,]   12 #>   [614,]   12 #>   [615,]   12 #>   [616,]   13 #>   [617,]   12 #>   [618,]   12 #>   [619,]   12 #>   [620,]   13 #>   [621,]   12 #>   [622,]   12 #>   [623,]   12 #>   [624,]   13 #>   [625,]   12 #>   [626,]   12 #>   [627,]   12 #>   [628,]   13 #>   [629,]   12 #>   [630,]   12 #>   [631,]   12 #>   [632,]   12 #>   [633,]   12 #>   [634,]   12 #>   [635,]   12 #>   [636,]   12 #>   [637,]   12 #>   [638,]   12 #>   [639,]   12 #>   [640,]   12 #>   [641,]   12 #>   [642,]   12 #>   [643,]   12 #>   [644,]   12 #>   [645,]   12 #>   [646,]   12 #>   [647,]   12 #>   [648,]   12 #>   [649,]   12 #>   [650,]   13 #>   [651,]   12 #>   [652,]   13 #>   [653,]   12 #>   [654,]   12 #>   [655,]   12 #>   [656,]   12 #>   [657,]   12 #>   [658,]   12 #>   [659,]   12 #>   [660,]   12 #>   [661,]   12 #>   [662,]   12 #>   [663,]   12 #>   [664,]   12 #>   [665,]   12 #>   [666,]   12 #>   [667,]   12 #>   [668,]   12 #>   [669,]   12 #>   [670,]   12 #>   [671,]   12 #>   [672,]   12 #>   [673,]   12 #>   [674,]   12 #>   [675,]   12 #>   [676,]   13 #>   [677,]   12 #>   [678,]   12 #>   [679,]   12 #>   [680,]   12 #>   [681,]   12 #>   [682,]   12 #>   [683,]   12 #>   [684,]   12 #>   [685,]   12 #>   [686,]   13 #>   [687,]   12 #>   [688,]   12 #>   [689,]   12 #>   [690,]   12 #>   [691,]   13 #>   [692,]   12 #>   [693,]   12 #>   [694,]   12 #>   [695,]   12 #>   [696,]   12 #>   [697,]   12 #>   [698,]   12 #>   [699,]   12 #>   [700,]   12 #>   [701,]   14 #>   [702,]   15 #>   [703,]   14 #>   [704,]   14 #>   [705,]   15 #>   [706,]   14 #>   [707,]   15 #>   [708,]   14 #>   [709,]   15 #>   [710,]   15 #>   [711,]   14 #>   [712,]   15 #>   [713,]   15 #>   [714,]   14 #>   [715,]   14 #>   [716,]   14 #>   [717,]   15 #>   [718,]   15 #>   [719,]   14 #>   [720,]   15 #>   [721,]   15 #>   [722,]   15 #>   [723,]   15 #>   [724,]   15 #>   [725,]   14 #>   [726,]   14 #>   [727,]   15 #>   [728,]   14 #>   [729,]   15 #>   [730,]   15 #>   [731,]   15 #>   [732,]   15 #>   [733,]   15 #>   [734,]   14 #>   [735,]   14 #>   [736,]   15 #>   [737,]   14 #>   [738,]   14 #>   [739,]   14 #>   [740,]   15 #>   [741,]   15 #>   [742,]   14 #>   [743,]   14 #>   [744,]   15 #>   [745,]   14 #>   [746,]   14 #>   [747,]   15 #>   [748,]   15 #>   [749,]   14 #>   [750,]   15 #>   [751,]   14 #>   [752,]   14 #>   [753,]   15 #>   [754,]   15 #>   [755,]   14 #>   [756,]   14 #>   [757,]   14 #>   [758,]   15 #>   [759,]   14 #>   [760,]   15 #>   [761,]   15 #>   [762,]   14 #>   [763,]   15 #>   [764,]   14 #>   [765,]   14 #>   [766,]   14 #>   [767,]   14 #>   [768,]   14 #>   [769,]   14 #>   [770,]   15 #>   [771,]   14 #>   [772,]   14 #>   [773,]   14 #>   [774,]   14 #>   [775,]   15 #>   [776,]   14 #>   [777,]   14 #>   [778,]   15 #>   [779,]   14 #>   [780,]   15 #>   [781,]   15 #>   [782,]   14 #>   [783,]   15 #>   [784,]   15 #>   [785,]   14 #>   [786,]   15 #>   [787,]   15 #>   [788,]   15 #>   [789,]   14 #>   [790,]   14 #>   [791,]   14 #>   [792,]   15 #>   [793,]   15 #>   [794,]   14 #>   [795,]   15 #>   [796,]   14 #>   [797,]   14 #>   [798,]   14 #>   [799,]   14 #>   [800,]   14 #>   [801,]   17 #>   [802,]   17 #>   [803,]   17 #>   [804,]   17 #>   [805,]   17 #>   [806,]   17 #>   [807,]   16 #>   [808,]   17 #>   [809,]   17 #>   [810,]   17 #>   [811,]   17 #>   [812,]   17 #>   [813,]   17 #>   [814,]   17 #>   [815,]   17 #>   [816,]   17 #>   [817,]   17 #>   [818,]   17 #>   [819,]   17 #>   [820,]   17 #>   [821,]   16 #>   [822,]   17 #>   [823,]   17 #>   [824,]   17 #>   [825,]   17 #>   [826,]   17 #>   [827,]   17 #>   [828,]   17 #>   [829,]   17 #>   [830,]   17 #>   [831,]   17 #>   [832,]   17 #>   [833,]   17 #>   [834,]   17 #>   [835,]   17 #>   [836,]   17 #>   [837,]   17 #>   [838,]   17 #>   [839,]   16 #>   [840,]   17 #>   [841,]   17 #>   [842,]   17 #>   [843,]   17 #>   [844,]   17 #>   [845,]   17 #>   [846,]   17 #>   [847,]   17 #>   [848,]   17 #>   [849,]   16 #>   [850,]   17 #>   [851,]   17 #>   [852,]   17 #>   [853,]   17 #>   [854,]   17 #>   [855,]   17 #>   [856,]   17 #>   [857,]   17 #>   [858,]   17 #>   [859,]   17 #>   [860,]   17 #>   [861,]   17 #>   [862,]   16 #>   [863,]   17 #>   [864,]   17 #>   [865,]   17 #>   [866,]   17 #>   [867,]   17 #>   [868,]   17 #>   [869,]   17 #>   [870,]   16 #>   [871,]   17 #>   [872,]   17 #>   [873,]   17 #>   [874,]   17 #>   [875,]   17 #>   [876,]   17 #>   [877,]   17 #>   [878,]   17 #>   [879,]   17 #>   [880,]   16 #>   [881,]   17 #>   [882,]   17 #>   [883,]   17 #>   [884,]   17 #>   [885,]   17 #>   [886,]   17 #>   [887,]   17 #>   [888,]   17 #>   [889,]   17 #>   [890,]   17 #>   [891,]   17 #>   [892,]   17 #>   [893,]   17 #>   [894,]   17 #>   [895,]   16 #>   [896,]   17 #>   [897,]   17 #>   [898,]   17 #>   [899,]   17 #>   [900,]   17 #>   [901,]   19 #>   [902,]   18 #>   [903,]   18 #>   [904,]   18 #>   [905,]   19 #>   [906,]   18 #>   [907,]   18 #>   [908,]   18 #>   [909,]   18 #>   [910,]   18 #>   [911,]   18 #>   [912,]   18 #>   [913,]   18 #>   [914,]   19 #>   [915,]   19 #>   [916,]   18 #>   [917,]   18 #>   [918,]   19 #>   [919,]   18 #>   [920,]   18 #>   [921,]   18 #>   [922,]   18 #>   [923,]   18 #>   [924,]   18 #>   [925,]   18 #>   [926,]   18 #>   [927,]   19 #>   [928,]   18 #>   [929,]   18 #>   [930,]   18 #>   [931,]   18 #>   [932,]   19 #>   [933,]   18 #>   [934,]   18 #>   [935,]   18 #>   [936,]   18 #>   [937,]   18 #>   [938,]   18 #>   [939,]   18 #>   [940,]   18 #>   [941,]   18 #>   [942,]   18 #>   [943,]   19 #>   [944,]   18 #>   [945,]   18 #>   [946,]   18 #>   [947,]   18 #>   [948,]   18 #>   [949,]   18 #>   [950,]   18 #>   [951,]   18 #>   [952,]   18 #>   [953,]   18 #>   [954,]   18 #>   [955,]   18 #>   [956,]   18 #>   [957,]   18 #>   [958,]   19 #>   [959,]   19 #>   [960,]   18 #>   [961,]   19 #>   [962,]   18 #>   [963,]   18 #>   [964,]   18 #>   [965,]   18 #>   [966,]   18 #>   [967,]   18 #>   [968,]   18 #>   [969,]   18 #>   [970,]   19 #>   [971,]   19 #>   [972,]   18 #>   [973,]   18 #>   [974,]   18 #>   [975,]   19 #>   [976,]   18 #>   [977,]   18 #>   [978,]   18 #>   [979,]   19 #>   [980,]   18 #>   [981,]   18 #>   [982,]   18 #>   [983,]   18 #>   [984,]   18 #>   [985,]   18 #>   [986,]   18 #>   [987,]   19 #>   [988,]   18 #>   [989,]   18 #>   [990,]   18 #>   [991,]   19 #>   [992,]   18 #>   [993,]   18 #>   [994,]   18 #>   [995,]   19 #>   [996,]   18 #>   [997,]   18 #>   [998,]   18 #>   [999,]   18 #>  [1000,]   19 #>  [1001,]   20 #>  [1002,]   20 #>  [1003,]   20 #>  [1004,]   20 #>  [1005,]   20 #>  [1006,]   20 #>  [1007,]   20 #>  [1008,]   20 #>  [1009,]   20 #>  [1010,]   20 #>  [1011,]   20 #>  [1012,]   20 #>  [1013,]   20 #>  [1014,]   20 #>  [1015,]   20 #>  [1016,]   20 #>  [1017,]   20 #>  [1018,]   20 #>  [1019,]   20 #>  [1020,]   20 #>  [1021,]   20 #>  [1022,]   20 #>  [1023,]   20 #>  [1024,]   20 #>  [1025,]   20 #>  [1026,]   20 #>  [1027,]   20 #>  [1028,]   20 #>  [1029,]   20 #>  [1030,]   20 #>  [1031,]   20 #>  [1032,]   20 #>  [1033,]   20 #>  [1034,]   20 #>  [1035,]   20 #>  [1036,]   20 #>  [1037,]   20 #>  [1038,]   20 #>  [1039,]   20 #>  [1040,]   20 #>  [1041,]   20 #>  [1042,]   20 #>  [1043,]   20 #>  [1044,]   20 #>  [1045,]   20 #>  [1046,]   20 #>  [1047,]   20 #>  [1048,]   20 #>  [1049,]   20 #>  [1050,]   20 #>  [1051,]   20 #>  [1052,]   20 #>  [1053,]   20 #>  [1054,]   20 #>  [1055,]   20 #>  [1056,]   20 #>  [1057,]   20 #>  [1058,]   20 #>  [1059,]   20 #>  [1060,]   20 #>  [1061,]   20 #>  [1062,]   20 #>  [1063,]   20 #>  [1064,]   20 #>  [1065,]   20 #>  [1066,]   20 #>  [1067,]   20 #>  [1068,]   20 #>  [1069,]   20 #>  [1070,]   20 #>  [1071,]   20 #>  [1072,]   20 #>  [1073,]   20 #>  [1074,]   20 #>  [1075,]   20 #>  [1076,]   20 #>  [1077,]   20 #>  [1078,]   20 #>  [1079,]   20 #>  [1080,]   20 #>  [1081,]   20 #>  [1082,]   20 #>  [1083,]   20 #>  [1084,]   20 #>  [1085,]   20 #>  [1086,]   20 #>  [1087,]   20 #>  [1088,]   20 #>  [1089,]   20 #>  [1090,]   20 #>  [1091,]   20 #>  [1092,]   20 #>  [1093,]   20 #>  [1094,]   20 #>  [1095,]   20 #>  [1096,]   20 #>  [1097,]   20 #>  [1098,]   20 #>  [1099,]   20 #>  [1100,]   20 #>  [1101,]   22 #>  [1102,]   22 #>  [1103,]   22 #>  [1104,]   22 #>  [1105,]   22 #>  [1106,]   22 #>  [1107,]   22 #>  [1108,]   22 #>  [1109,]   22 #>  [1110,]   22 #>  [1111,]   22 #>  [1112,]   22 #>  [1113,]   22 #>  [1114,]   22 #>  [1115,]   22 #>  [1116,]   22 #>  [1117,]   22 #>  [1118,]   22 #>  [1119,]   22 #>  [1120,]   22 #>  [1121,]   22 #>  [1122,]   22 #>  [1123,]   22 #>  [1124,]   22 #>  [1125,]   21 #>  [1126,]   22 #>  [1127,]   22 #>  [1128,]   22 #>  [1129,]   22 #>  [1130,]   22 #>  [1131,]   22 #>  [1132,]   22 #>  [1133,]   22 #>  [1134,]   22 #>  [1135,]   22 #>  [1136,]   22 #>  [1137,]   22 #>  [1138,]   22 #>  [1139,]   22 #>  [1140,]   22 #>  [1141,]   22 #>  [1142,]   22 #>  [1143,]   22 #>  [1144,]   22 #>  [1145,]   22 #>  [1146,]   22 #>  [1147,]   22 #>  [1148,]   22 #>  [1149,]   22 #>  [1150,]   22 #>  [1151,]   22 #>  [1152,]   22 #>  [1153,]   22 #>  [1154,]   22 #>  [1155,]   22 #>  [1156,]   21 #>  [1157,]   22 #>  [1158,]   22 #>  [1159,]   22 #>  [1160,]   22 #>  [1161,]   22 #>  [1162,]   22 #>  [1163,]   22 #>  [1164,]   22 #>  [1165,]   21 #>  [1166,]   22 #>  [1167,]   22 #>  [1168,]   22 #>  [1169,]   22 #>  [1170,]   22 #>  [1171,]   22 #>  [1172,]   22 #>  [1173,]   22 #>  [1174,]   22 #>  [1175,]   22 #>  [1176,]   22 #>  [1177,]   22 #>  [1178,]   22 #>  [1179,]   22 #>  [1180,]   21 #>  [1181,]   22 #>  [1182,]   22 #>  [1183,]   22 #>  [1184,]   22 #>  [1185,]   21 #>  [1186,]   22 #>  [1187,]   22 #>  [1188,]   22 #>  [1189,]   22 #>  [1190,]   22 #>  [1191,]   22 #>  [1192,]   22 #>  [1193,]   22 #>  [1194,]   22 #>  [1195,]   22 #>  [1196,]   22 #>  [1197,]   22 #>  [1198,]   22 #>  [1199,]   22 #>  [1200,]   22 #>  [1201,]   24 #>  [1202,]   23 #>  [1203,]   24 #>  [1204,]   24 #>  [1205,]   24 #>  [1206,]   23 #>  [1207,]   24 #>  [1208,]   24 #>  [1209,]   24 #>  [1210,]   24 #>  [1211,]   23 #>  [1212,]   23 #>  [1213,]   24 #>  [1214,]   24 #>  [1215,]   23 #>  [1216,]   24 #>  [1217,]   23 #>  [1218,]   24 #>  [1219,]   24 #>  [1220,]   24 #>  [1221,]   24 #>  [1222,]   24 #>  [1223,]   23 #>  [1224,]   24 #>  [1225,]   24 #>  [1226,]   24 #>  [1227,]   24 #>  [1228,]   24 #>  [1229,]   23 #>  [1230,]   23 #>  [1231,]   23 #>  [1232,]   24 #>  [1233,]   24 #>  [1234,]   23 #>  [1235,]   24 #>  [1236,]   24 #>  [1237,]   23 #>  [1238,]   24 #>  [1239,]   24 #>  [1240,]   24 #>  [1241,]   24 #>  [1242,]   23 #>  [1243,]   23 #>  [1244,]   23 #>  [1245,]   24 #>  [1246,]   24 #>  [1247,]   23 #>  [1248,]   23 #>  [1249,]   24 #>  [1250,]   24 #>  [1251,]   24 #>  [1252,]   24 #>  [1253,]   24 #>  [1254,]   24 #>  [1255,]   24 #>  [1256,]   23 #>  [1257,]   24 #>  [1258,]   24 #>  [1259,]   24 #>  [1260,]   23 #>  [1261,]   23 #>  [1262,]   24 #>  [1263,]   23 #>  [1264,]   23 #>  [1265,]   23 #>  [1266,]   23 #>  [1267,]   24 #>  [1268,]   24 #>  [1269,]   24 #>  [1270,]   23 #>  [1271,]   24 #>  [1272,]   24 #>  [1273,]   24 #>  [1274,]   24 #>  [1275,]   23 #>  [1276,]   24 #>  [1277,]   24 #>  [1278,]   23 #>  [1279,]   23 #>  [1280,]   24 #>  [1281,]   23 #>  [1282,]   24 #>  [1283,]   24 #>  [1284,]   24 #>  [1285,]   24 #>  [1286,]   24 #>  [1287,]   24 #>  [1288,]   24 #>  [1289,]   24 #>  [1290,]   24 #>  [1291,]   24 #>  [1292,]   23 #>  [1293,]   24 #>  [1294,]   23 #>  [1295,]   23 #>  [1296,]   24 #>  [1297,]   24 #>  [1298,]   24 #>  [1299,]   24 #>  [1300,]   23 #>  [1301,]   26 #>  [1302,]   26 #>  [1303,]   25 #>  [1304,]   26 #>  [1305,]   26 #>  [1306,]   26 #>  [1307,]   25 #>  [1308,]   25 #>  [1309,]   26 #>  [1310,]   26 #>  [1311,]   26 #>  [1312,]   26 #>  [1313,]   25 #>  [1314,]   26 #>  [1315,]   26 #>  [1316,]   25 #>  [1317,]   25 #>  [1318,]   26 #>  [1319,]   26 #>  [1320,]   25 #>  [1321,]   26 #>  [1322,]   25 #>  [1323,]   26 #>  [1324,]   25 #>  [1325,]   25 #>  [1326,]   26 #>  [1327,]   26 #>  [1328,]   26 #>  [1329,]   26 #>  [1330,]   26 #>  [1331,]   26 #>  [1332,]   26 #>  [1333,]   26 #>  [1334,]   26 #>  [1335,]   26 #>  [1336,]   26 #>  [1337,]   26 #>  [1338,]   26 #>  [1339,]   25 #>  [1340,]   25 #>  [1341,]   26 #>  [1342,]   26 #>  [1343,]   25 #>  [1344,]   25 #>  [1345,]   25 #>  [1346,]   25 #>  [1347,]   25 #>  [1348,]   26 #>  [1349,]   25 #>  [1350,]   25 #>  [1351,]   26 #>  [1352,]   26 #>  [1353,]   25 #>  [1354,]   25 #>  [1355,]   25 #>  [1356,]   25 #>  [1357,]   26 #>  [1358,]   26 #>  [1359,]   25 #>  [1360,]   26 #>  [1361,]   26 #>  [1362,]   26 #>  [1363,]   25 #>  [1364,]   26 #>  [1365,]   25 #>  [1366,]   25 #>  [1367,]   26 #>  [1368,]   26 #>  [1369,]   26 #>  [1370,]   25 #>  [1371,]   26 #>  [1372,]   25 #>  [1373,]   26 #>  [1374,]   26 #>  [1375,]   26 #>  [1376,]   26 #>  [1377,]   25 #>  [1378,]   25 #>  [1379,]   25 #>  [1380,]   26 #>  [1381,]   26 #>  [1382,]   26 #>  [1383,]   26 #>  [1384,]   25 #>  [1385,]   26 #>  [1386,]   25 #>  [1387,]   26 #>  [1388,]   26 #>  [1389,]   25 #>  [1390,]   25 #>  [1391,]   26 #>  [1392,]   26 #>  [1393,]   26 #>  [1394,]   25 #>  [1395,]   26 #>  [1396,]   26 #>  [1397,]   26 #>  [1398,]   25 #>  [1399,]   26 #>  [1400,]   25 #>  [1401,]   28 #>  [1402,]   28 #>  [1403,]   28 #>  [1404,]   28 #>  [1405,]   28 #>  [1406,]   28 #>  [1407,]   28 #>  [1408,]   28 #>  [1409,]   28 #>  [1410,]   28 #>  [1411,]   28 #>  [1412,]   28 #>  [1413,]   28 #>  [1414,]   28 #>  [1415,]   28 #>  [1416,]   28 #>  [1417,]   28 #>  [1418,]   28 #>  [1419,]   28 #>  [1420,]   27 #>  [1421,]   27 #>  [1422,]   28 #>  [1423,]   28 #>  [1424,]   28 #>  [1425,]   27 #>  [1426,]   28 #>  [1427,]   28 #>  [1428,]   28 #>  [1429,]   28 #>  [1430,]   28 #>  [1431,]   28 #>  [1432,]   28 #>  [1433,]   28 #>  [1434,]   28 #>  [1435,]   28 #>  [1436,]   28 #>  [1437,]   28 #>  [1438,]   28 #>  [1439,]   28 #>  [1440,]   28 #>  [1441,]   28 #>  [1442,]   28 #>  [1443,]   28 #>  [1444,]   28 #>  [1445,]   28 #>  [1446,]   28 #>  [1447,]   28 #>  [1448,]   28 #>  [1449,]   28 #>  [1450,]   28 #>  [1451,]   28 #>  [1452,]   28 #>  [1453,]   28 #>  [1454,]   28 #>  [1455,]   28 #>  [1456,]   27 #>  [1457,]   28 #>  [1458,]   28 #>  [1459,]   28 #>  [1460,]   28 #>  [1461,]   28 #>  [1462,]   28 #>  [1463,]   28 #>  [1464,]   28 #>  [1465,]   27 #>  [1466,]   28 #>  [1467,]   28 #>  [1468,]   28 #>  [1469,]   28 #>  [1470,]   28 #>  [1471,]   28 #>  [1472,]   28 #>  [1473,]   28 #>  [1474,]   27 #>  [1475,]   28 #>  [1476,]   28 #>  [1477,]   28 #>  [1478,]   28 #>  [1479,]   28 #>  [1480,]   27 #>  [1481,]   28 #>  [1482,]   28 #>  [1483,]   28 #>  [1484,]   28 #>  [1485,]   27 #>  [1486,]   27 #>  [1487,]   28 #>  [1488,]   28 #>  [1489,]   27 #>  [1490,]   28 #>  [1491,]   28 #>  [1492,]   28 #>  [1493,]   28 #>  [1494,]   28 #>  [1495,]   28 #>  [1496,]   28 #>  [1497,]   28 #>  [1498,]   28 #>  [1499,]   28 #>  [1500,]   28 #>  [1501,]   30 #>  [1502,]   30 #>  [1503,]   30 #>  [1504,]   29 #>  [1505,]   30 #>  [1506,]   30 #>  [1507,]   30 #>  [1508,]   29 #>  [1509,]   29 #>  [1510,]   30 #>  [1511,]   29 #>  [1512,]   30 #>  [1513,]   30 #>  [1514,]   30 #>  [1515,]   30 #>  [1516,]   30 #>  [1517,]   29 #>  [1518,]   30 #>  [1519,]   30 #>  [1520,]   30 #>  [1521,]   30 #>  [1522,]   29 #>  [1523,]   30 #>  [1524,]   30 #>  [1525,]   30 #>  [1526,]   30 #>  [1527,]   29 #>  [1528,]   30 #>  [1529,]   30 #>  [1530,]   30 #>  [1531,]   30 #>  [1532,]   30 #>  [1533,]   30 #>  [1534,]   30 #>  [1535,]   29 #>  [1536,]   30 #>  [1537,]   30 #>  [1538,]   30 #>  [1539,]   30 #>  [1540,]   30 #>  [1541,]   30 #>  [1542,]   30 #>  [1543,]   30 #>  [1544,]   29 #>  [1545,]   30 #>  [1546,]   30 #>  [1547,]   30 #>  [1548,]   30 #>  [1549,]   30 #>  [1550,]   30 #>  [1551,]   30 #>  [1552,]   29 #>  [1553,]   30 #>  [1554,]   30 #>  [1555,]   30 #>  [1556,]   30 #>  [1557,]   30 #>  [1558,]   29 #>  [1559,]   30 #>  [1560,]   30 #>  [1561,]   30 #>  [1562,]   30 #>  [1563,]   30 #>  [1564,]   30 #>  [1565,]   30 #>  [1566,]   29 #>  [1567,]   30 #>  [1568,]   30 #>  [1569,]   30 #>  [1570,]   30 #>  [1571,]   30 #>  [1572,]   30 #>  [1573,]   30 #>  [1574,]   30 #>  [1575,]   30 #>  [1576,]   30 #>  [1577,]   30 #>  [1578,]   30 #>  [1579,]   30 #>  [1580,]   30 #>  [1581,]   29 #>  [1582,]   29 #>  [1583,]   30 #>  [1584,]   30 #>  [1585,]   30 #>  [1586,]   30 #>  [1587,]   29 #>  [1588,]   30 #>  [1589,]   30 #>  [1590,]   29 #>  [1591,]   30 #>  [1592,]   29 #>  [1593,]   30 #>  [1594,]   30 #>  [1595,]   29 #>  [1596,]   30 #>  [1597,]   30 #>  [1598,]   30 #>  [1599,]   29 #>  [1600,]   30 #>  [1601,]   32 #>  [1602,]   32 #>  [1603,]   31 #>  [1604,]   32 #>  [1605,]   32 #>  [1606,]   31 #>  [1607,]   31 #>  [1608,]   31 #>  [1609,]   32 #>  [1610,]   32 #>  [1611,]   32 #>  [1612,]   32 #>  [1613,]   32 #>  [1614,]   32 #>  [1615,]   32 #>  [1616,]   32 #>  [1617,]   32 #>  [1618,]   32 #>  [1619,]   32 #>  [1620,]   31 #>  [1621,]   31 #>  [1622,]   32 #>  [1623,]   31 #>  [1624,]   32 #>  [1625,]   31 #>  [1626,]   32 #>  [1627,]   32 #>  [1628,]   32 #>  [1629,]   31 #>  [1630,]   32 #>  [1631,]   32 #>  [1632,]   32 #>  [1633,]   32 #>  [1634,]   31 #>  [1635,]   31 #>  [1636,]   31 #>  [1637,]   31 #>  [1638,]   32 #>  [1639,]   32 #>  [1640,]   32 #>  [1641,]   31 #>  [1642,]   31 #>  [1643,]   32 #>  [1644,]   31 #>  [1645,]   31 #>  [1646,]   32 #>  [1647,]   32 #>  [1648,]   32 #>  [1649,]   32 #>  [1650,]   31 #>  [1651,]   32 #>  [1652,]   32 #>  [1653,]   31 #>  [1654,]   31 #>  [1655,]   31 #>  [1656,]   31 #>  [1657,]   31 #>  [1658,]   32 #>  [1659,]   32 #>  [1660,]   31 #>  [1661,]   32 #>  [1662,]   32 #>  [1663,]   32 #>  [1664,]   31 #>  [1665,]   31 #>  [1666,]   32 #>  [1667,]   31 #>  [1668,]   32 #>  [1669,]   32 #>  [1670,]   32 #>  [1671,]   32 #>  [1672,]   32 #>  [1673,]   31 #>  [1674,]   31 #>  [1675,]   32 #>  [1676,]   31 #>  [1677,]   32 #>  [1678,]   32 #>  [1679,]   32 #>  [1680,]   31 #>  [1681,]   31 #>  [1682,]   31 #>  [1683,]   32 #>  [1684,]   31 #>  [1685,]   31 #>  [1686,]   31 #>  [1687,]   32 #>  [1688,]   31 #>  [1689,]   31 #>  [1690,]   32 #>  [1691,]   32 #>  [1692,]   32 #>  [1693,]   32 #>  [1694,]   31 #>  [1695,]   32 #>  [1696,]   32 #>  [1697,]   31 #>  [1698,]   31 #>  [1699,]   31 #>  [1700,]   32 #>  [1701,]   34 #>  [1702,]   33 #>  [1703,]   33 #>  [1704,]   33 #>  [1705,]   33 #>  [1706,]   34 #>  [1707,]   33 #>  [1708,]   33 #>  [1709,]   33 #>  [1710,]   33 #>  [1711,]   33 #>  [1712,]   33 #>  [1713,]   34 #>  [1714,]   34 #>  [1715,]   34 #>  [1716,]   34 #>  [1717,]   33 #>  [1718,]   33 #>  [1719,]   33 #>  [1720,]   33 #>  [1721,]   34 #>  [1722,]   33 #>  [1723,]   33 #>  [1724,]   33 #>  [1725,]   33 #>  [1726,]   33 #>  [1727,]   33 #>  [1728,]   33 #>  [1729,]   34 #>  [1730,]   33 #>  [1731,]   33 #>  [1732,]   33 #>  [1733,]   34 #>  [1734,]   33 #>  [1735,]   33 #>  [1736,]   33 #>  [1737,]   33 #>  [1738,]   33 #>  [1739,]   33 #>  [1740,]   33 #>  [1741,]   34 #>  [1742,]   33 #>  [1743,]   33 #>  [1744,]   34 #>  [1745,]   33 #>  [1746,]   33 #>  [1747,]   33 #>  [1748,]   33 #>  [1749,]   33 #>  [1750,]   34 #>  [1751,]   33 #>  [1752,]   33 #>  [1753,]   33 #>  [1754,]   33 #>  [1755,]   33 #>  [1756,]   33 #>  [1757,]   33 #>  [1758,]   33 #>  [1759,]   34 #>  [1760,]   33 #>  [1761,]   34 #>  [1762,]   33 #>  [1763,]   33 #>  [1764,]   33 #>  [1765,]   33 #>  [1766,]   33 #>  [1767,]   33 #>  [1768,]   34 #>  [1769,]   33 #>  [1770,]   34 #>  [1771,]   33 #>  [1772,]   33 #>  [1773,]   34 #>  [1774,]   33 #>  [1775,]   33 #>  [1776,]   33 #>  [1777,]   33 #>  [1778,]   33 #>  [1779,]   33 #>  [1780,]   33 #>  [1781,]   33 #>  [1782,]   33 #>  [1783,]   34 #>  [1784,]   33 #>  [1785,]   33 #>  [1786,]   34 #>  [1787,]   33 #>  [1788,]   33 #>  [1789,]   33 #>  [1790,]   33 #>  [1791,]   33 #>  [1792,]   33 #>  [1793,]   33 #>  [1794,]   33 #>  [1795,]   33 #>  [1796,]   34 #>  [1797,]   33 #>  [1798,]   33 #>  [1799,]   34 #>  [1800,]   33 #>  [1801,]   36 #>  [1802,]   36 #>  [1803,]   35 #>  [1804,]   35 #>  [1805,]   35 #>  [1806,]   36 #>  [1807,]   36 #>  [1808,]   35 #>  [1809,]   35 #>  [1810,]   35 #>  [1811,]   36 #>  [1812,]   36 #>  [1813,]   36 #>  [1814,]   36 #>  [1815,]   36 #>  [1816,]   36 #>  [1817,]   36 #>  [1818,]   35 #>  [1819,]   36 #>  [1820,]   35 #>  [1821,]   36 #>  [1822,]   36 #>  [1823,]   36 #>  [1824,]   35 #>  [1825,]   36 #>  [1826,]   36 #>  [1827,]   36 #>  [1828,]   36 #>  [1829,]   36 #>  [1830,]   35 #>  [1831,]   36 #>  [1832,]   36 #>  [1833,]   36 #>  [1834,]   36 #>  [1835,]   36 #>  [1836,]   36 #>  [1837,]   36 #>  [1838,]   36 #>  [1839,]   35 #>  [1840,]   36 #>  [1841,]   36 #>  [1842,]   36 #>  [1843,]   35 #>  [1844,]   36 #>  [1845,]   35 #>  [1846,]   36 #>  [1847,]   36 #>  [1848,]   36 #>  [1849,]   35 #>  [1850,]   36 #>  [1851,]   35 #>  [1852,]   36 #>  [1853,]   35 #>  [1854,]   36 #>  [1855,]   36 #>  [1856,]   35 #>  [1857,]   36 #>  [1858,]   36 #>  [1859,]   36 #>  [1860,]   35 #>  [1861,]   36 #>  [1862,]   36 #>  [1863,]   36 #>  [1864,]   35 #>  [1865,]   35 #>  [1866,]   35 #>  [1867,]   35 #>  [1868,]   36 #>  [1869,]   36 #>  [1870,]   36 #>  [1871,]   36 #>  [1872,]   36 #>  [1873,]   36 #>  [1874,]   36 #>  [1875,]   36 #>  [1876,]   36 #>  [1877,]   36 #>  [1878,]   35 #>  [1879,]   36 #>  [1880,]   36 #>  [1881,]   36 #>  [1882,]   36 #>  [1883,]   36 #>  [1884,]   36 #>  [1885,]   35 #>  [1886,]   36 #>  [1887,]   36 #>  [1888,]   35 #>  [1889,]   35 #>  [1890,]   36 #>  [1891,]   35 #>  [1892,]   36 #>  [1893,]   36 #>  [1894,]   36 #>  [1895,]   35 #>  [1896,]   36 #>  [1897,]   36 #>  [1898,]   36 #>  [1899,]   36 #>  [1900,]   36 #>  [1901,]   38 #>  [1902,]   38 #>  [1903,]   37 #>  [1904,]   37 #>  [1905,]   38 #>  [1906,]   38 #>  [1907,]   37 #>  [1908,]   38 #>  [1909,]   38 #>  [1910,]   38 #>  [1911,]   38 #>  [1912,]   37 #>  [1913,]   38 #>  [1914,]   38 #>  [1915,]   38 #>  [1916,]   38 #>  [1917,]   38 #>  [1918,]   38 #>  [1919,]   38 #>  [1920,]   38 #>  [1921,]   38 #>  [1922,]   38 #>  [1923,]   38 #>  [1924,]   38 #>  [1925,]   37 #>  [1926,]   38 #>  [1927,]   38 #>  [1928,]   38 #>  [1929,]   38 #>  [1930,]   38 #>  [1931,]   37 #>  [1932,]   38 #>  [1933,]   38 #>  [1934,]   38 #>  [1935,]   38 #>  [1936,]   38 #>  [1937,]   38 #>  [1938,]   38 #>  [1939,]   38 #>  [1940,]   38 #>  [1941,]   38 #>  [1942,]   38 #>  [1943,]   38 #>  [1944,]   38 #>  [1945,]   38 #>  [1946,]   38 #>  [1947,]   38 #>  [1948,]   38 #>  [1949,]   38 #>  [1950,]   38 #>  [1951,]   38 #>  [1952,]   37 #>  [1953,]   38 #>  [1954,]   38 #>  [1955,]   38 #>  [1956,]   38 #>  [1957,]   38 #>  [1958,]   38 #>  [1959,]   37 #>  [1960,]   37 #>  [1961,]   38 #>  [1962,]   38 #>  [1963,]   38 #>  [1964,]   38 #>  [1965,]   38 #>  [1966,]   38 #>  [1967,]   38 #>  [1968,]   38 #>  [1969,]   38 #>  [1970,]   38 #>  [1971,]   38 #>  [1972,]   38 #>  [1973,]   38 #>  [1974,]   38 #>  [1975,]   38 #>  [1976,]   38 #>  [1977,]   38 #>  [1978,]   38 #>  [1979,]   38 #>  [1980,]   38 #>  [1981,]   38 #>  [1982,]   38 #>  [1983,]   38 #>  [1984,]   38 #>  [1985,]   38 #>  [1986,]   38 #>  [1987,]   38 #>  [1988,]   38 #>  [1989,]   38 #>  [1990,]   38 #>  [1991,]   38 #>  [1992,]   38 #>  [1993,]   38 #>  [1994,]   38 #>  [1995,]   38 #>  [1996,]   37 #>  [1997,]   37 #>  [1998,]   38 #>  [1999,]   38 #>  [2000,]   38 #>  [2001,]   39 #>  [2002,]   40 #>  [2003,]   39 #>  [2004,]   40 #>  [2005,]   40 #>  [2006,]   39 #>  [2007,]   40 #>  [2008,]   40 #>  [2009,]   40 #>  [2010,]   40 #>  [2011,]   39 #>  [2012,]   40 #>  [2013,]   40 #>  [2014,]   40 #>  [2015,]   40 #>  [2016,]   39 #>  [2017,]   40 #>  [2018,]   40 #>  [2019,]   39 #>  [2020,]   40 #>  [2021,]   40 #>  [2022,]   40 #>  [2023,]   40 #>  [2024,]   40 #>  [2025,]   40 #>  [2026,]   40 #>  [2027,]   40 #>  [2028,]   39 #>  [2029,]   40 #>  [2030,]   40 #>  [2031,]   40 #>  [2032,]   40 #>  [2033,]   40 #>  [2034,]   39 #>  [2035,]   39 #>  [2036,]   40 #>  [2037,]   39 #>  [2038,]   39 #>  [2039,]   40 #>  [2040,]   40 #>  [2041,]   40 #>  [2042,]   40 #>  [2043,]   40 #>  [2044,]   40 #>  [2045,]   39 #>  [2046,]   40 #>  [2047,]   40 #>  [2048,]   40 #>  [2049,]   39 #>  [2050,]   40 #>  [2051,]   40 #>  [2052,]   39 #>  [2053,]   40 #>  [2054,]   40 #>  [2055,]   40 #>  [2056,]   40 #>  [2057,]   40 #>  [2058,]   40 #>  [2059,]   40 #>  [2060,]   40 #>  [2061,]   40 #>  [2062,]   40 #>  [2063,]   40 #>  [2064,]   39 #>  [2065,]   40 #>  [2066,]   40 #>  [2067,]   40 #>  [2068,]   39 #>  [2069,]   40 #>  [2070,]   40 #>  [2071,]   40 #>  [2072,]   39 #>  [2073,]   39 #>  [2074,]   40 #>  [2075,]   40 #>  [2076,]   40 #>  [2077,]   39 #>  [2078,]   40 #>  [2079,]   40 #>  [2080,]   40 #>  [2081,]   40 #>  [2082,]   40 #>  [2083,]   40 #>  [2084,]   40 #>  [2085,]   40 #>  [2086,]   40 #>  [2087,]   40 #>  [2088,]   40 #>  [2089,]   40 #>  [2090,]   40 #>  [2091,]   40 #>  [2092,]   40 #>  [2093,]   40 #>  [2094,]   39 #>  [2095,]   40 #>  [2096,]   39 #>  [2097,]   39 #>  [2098,]   40 #>  [2099,]   40 #>  [2100,]   39 #>  [2101,]   41 #>  [2102,]   41 #>  [2103,]   41 #>  [2104,]   41 #>  [2105,]   41 #>  [2106,]   41 #>  [2107,]   41 #>  [2108,]   41 #>  [2109,]   41 #>  [2110,]   41 #>  [2111,]   41 #>  [2112,]   41 #>  [2113,]   41 #>  [2114,]   41 #>  [2115,]   41 #>  [2116,]   41 #>  [2117,]   41 #>  [2118,]   41 #>  [2119,]   41 #>  [2120,]   41 #>  [2121,]   41 #>  [2122,]   41 #>  [2123,]   41 #>  [2124,]   41 #>  [2125,]   41 #>  [2126,]   41 #>  [2127,]   41 #>  [2128,]   41 #>  [2129,]   41 #>  [2130,]   41 #>  [2131,]   41 #>  [2132,]   41 #>  [2133,]   41 #>  [2134,]   41 #>  [2135,]   41 #>  [2136,]   41 #>  [2137,]   41 #>  [2138,]   41 #>  [2139,]   41 #>  [2140,]   41 #>  [2141,]   41 #>  [2142,]   41 #>  [2143,]   41 #>  [2144,]   41 #>  [2145,]   41 #>  [2146,]   41 #>  [2147,]   41 #>  [2148,]   41 #>  [2149,]   41 #>  [2150,]   41 #>  [2151,]   41 #>  [2152,]   41 #>  [2153,]   41 #>  [2154,]   41 #>  [2155,]   41 #>  [2156,]   41 #>  [2157,]   41 #>  [2158,]   41 #>  [2159,]   41 #>  [2160,]   41 #>  [2161,]   41 #>  [2162,]   41 #>  [2163,]   41 #>  [2164,]   41 #>  [2165,]   41 #>  [2166,]   41 #>  [2167,]   41 #>  [2168,]   41 #>  [2169,]   41 #>  [2170,]   41 #>  [2171,]   41 #>  [2172,]   41 #>  [2173,]   41 #>  [2174,]   41 #>  [2175,]   41 #>  [2176,]   41 #>  [2177,]   41 #>  [2178,]   41 #>  [2179,]   41 #>  [2180,]   41 #>  [2181,]   41 #>  [2182,]   41 #>  [2183,]   41 #>  [2184,]   41 #>  [2185,]   41 #>  [2186,]   41 #>  [2187,]   41 #>  [2188,]   41 #>  [2189,]   41 #>  [2190,]   41 #>  [2191,]   41 #>  [2192,]   41 #>  [2193,]   41 #>  [2194,]   41 #>  [2195,]   41 #>  [2196,]   41 #>  [2197,]   41 #>  [2198,]   41 #>  [2199,]   41 #>  [2200,]   41 #>  [2201,]   42 #>  [2202,]   42 #>  [2203,]   42 #>  [2204,]   42 #>  [2205,]   42 #>  [2206,]   42 #>  [2207,]   42 #>  [2208,]   42 #>  [2209,]   42 #>  [2210,]   42 #>  [2211,]   42 #>  [2212,]   42 #>  [2213,]   42 #>  [2214,]   42 #>  [2215,]   42 #>  [2216,]   42 #>  [2217,]   42 #>  [2218,]   42 #>  [2219,]   42 #>  [2220,]   42 #>  [2221,]   42 #>  [2222,]   42 #>  [2223,]   42 #>  [2224,]   42 #>  [2225,]   42 #>  [2226,]   42 #>  [2227,]   42 #>  [2228,]   42 #>  [2229,]   42 #>  [2230,]   42 #>  [2231,]   42 #>  [2232,]   42 #>  [2233,]   42 #>  [2234,]   42 #>  [2235,]   42 #>  [2236,]   42 #>  [2237,]   42 #>  [2238,]   42 #>  [2239,]   42 #>  [2240,]   42 #>  [2241,]   42 #>  [2242,]   42 #>  [2243,]   42 #>  [2244,]   42 #>  [2245,]   42 #>  [2246,]   42 #>  [2247,]   42 #>  [2248,]   42 #>  [2249,]   42 #>  [2250,]   42 #>  [2251,]   42 #>  [2252,]   42 #>  [2253,]   42 #>  [2254,]   42 #>  [2255,]   42 #>  [2256,]   42 #>  [2257,]   42 #>  [2258,]   42 #>  [2259,]   42 #>  [2260,]   42 #>  [2261,]   42 #>  [2262,]   42 #>  [2263,]   42 #>  [2264,]   42 #>  [2265,]   42 #>  [2266,]   42 #>  [2267,]   42 #>  [2268,]   42 #>  [2269,]   42 #>  [2270,]   42 #>  [2271,]   42 #>  [2272,]   42 #>  [2273,]   42 #>  [2274,]   42 #>  [2275,]   42 #>  [2276,]   42 #>  [2277,]   42 #>  [2278,]   42 #>  [2279,]   42 #>  [2280,]   42 #>  [2281,]   42 #>  [2282,]   42 #>  [2283,]   42 #>  [2284,]   42 #>  [2285,]   42 #>  [2286,]   42 #>  [2287,]   42 #>  [2288,]   42 #>  [2289,]   42 #>  [2290,]   42 #>  [2291,]   42 #>  [2292,]   42 #>  [2293,]   42 #>  [2294,]   42 #>  [2295,]   42 #>  [2296,]   42 #>  [2297,]   42 #>  [2298,]   42 #>  [2299,]   42 #>  [2300,]   42 #>  [2301,]   44 #>  [2302,]   44 #>  [2303,]   43 #>  [2304,]   44 #>  [2305,]   44 #>  [2306,]   44 #>  [2307,]   44 #>  [2308,]   44 #>  [2309,]   44 #>  [2310,]   44 #>  [2311,]   44 #>  [2312,]   43 #>  [2313,]   44 #>  [2314,]   43 #>  [2315,]   44 #>  [2316,]   44 #>  [2317,]   44 #>  [2318,]   44 #>  [2319,]   44 #>  [2320,]   44 #>  [2321,]   44 #>  [2322,]   44 #>  [2323,]   44 #>  [2324,]   44 #>  [2325,]   44 #>  [2326,]   43 #>  [2327,]   44 #>  [2328,]   44 #>  [2329,]   44 #>  [2330,]   44 #>  [2331,]   44 #>  [2332,]   43 #>  [2333,]   44 #>  [2334,]   44 #>  [2335,]   44 #>  [2336,]   43 #>  [2337,]   44 #>  [2338,]   44 #>  [2339,]   44 #>  [2340,]   43 #>  [2341,]   44 #>  [2342,]   43 #>  [2343,]   44 #>  [2344,]   44 #>  [2345,]   44 #>  [2346,]   44 #>  [2347,]   44 #>  [2348,]   43 #>  [2349,]   44 #>  [2350,]   44 #>  [2351,]   43 #>  [2352,]   44 #>  [2353,]   44 #>  [2354,]   43 #>  [2355,]   44 #>  [2356,]   44 #>  [2357,]   44 #>  [2358,]   44 #>  [2359,]   44 #>  [2360,]   44 #>  [2361,]   44 #>  [2362,]   43 #>  [2363,]   44 #>  [2364,]   44 #>  [2365,]   44 #>  [2366,]   43 #>  [2367,]   44 #>  [2368,]   44 #>  [2369,]   43 #>  [2370,]   44 #>  [2371,]   44 #>  [2372,]   44 #>  [2373,]   44 #>  [2374,]   44 #>  [2375,]   44 #>  [2376,]   44 #>  [2377,]   44 #>  [2378,]   44 #>  [2379,]   44 #>  [2380,]   43 #>  [2381,]   43 #>  [2382,]   44 #>  [2383,]   43 #>  [2384,]   44 #>  [2385,]   44 #>  [2386,]   44 #>  [2387,]   44 #>  [2388,]   44 #>  [2389,]   43 #>  [2390,]   44 #>  [2391,]   44 #>  [2392,]   44 #>  [2393,]   44 #>  [2394,]   44 #>  [2395,]   44 #>  [2396,]   44 #>  [2397,]   44 #>  [2398,]   44 #>  [2399,]   44 #>  [2400,]   44 #>  [2401,]   45 #>  [2402,]   45 #>  [2403,]   45 #>  [2404,]   45 #>  [2405,]   46 #>  [2406,]   45 #>  [2407,]   45 #>  [2408,]   45 #>  [2409,]   45 #>  [2410,]   45 #>  [2411,]   45 #>  [2412,]   45 #>  [2413,]   45 #>  [2414,]   45 #>  [2415,]   45 #>  [2416,]   45 #>  [2417,]   45 #>  [2418,]   46 #>  [2419,]   45 #>  [2420,]   45 #>  [2421,]   45 #>  [2422,]   45 #>  [2423,]   45 #>  [2424,]   45 #>  [2425,]   45 #>  [2426,]   45 #>  [2427,]   45 #>  [2428,]   45 #>  [2429,]   45 #>  [2430,]   45 #>  [2431,]   45 #>  [2432,]   45 #>  [2433,]   45 #>  [2434,]   45 #>  [2435,]   45 #>  [2436,]   45 #>  [2437,]   45 #>  [2438,]   45 #>  [2439,]   45 #>  [2440,]   45 #>  [2441,]   45 #>  [2442,]   45 #>  [2443,]   45 #>  [2444,]   45 #>  [2445,]   45 #>  [2446,]   45 #>  [2447,]   45 #>  [2448,]   45 #>  [2449,]   45 #>  [2450,]   45 #>  [2451,]   45 #>  [2452,]   45 #>  [2453,]   45 #>  [2454,]   45 #>  [2455,]   45 #>  [2456,]   45 #>  [2457,]   45 #>  [2458,]   45 #>  [2459,]   45 #>  [2460,]   45 #>  [2461,]   45 #>  [2462,]   45 #>  [2463,]   45 #>  [2464,]   45 #>  [2465,]   45 #>  [2466,]   45 #>  [2467,]   45 #>  [2468,]   45 #>  [2469,]   45 #>  [2470,]   45 #>  [2471,]   46 #>  [2472,]   45 #>  [2473,]   45 #>  [2474,]   45 #>  [2475,]   46 #>  [2476,]   45 #>  [2477,]   45 #>  [2478,]   45 #>  [2479,]   45 #>  [2480,]   45 #>  [2481,]   45 #>  [2482,]   45 #>  [2483,]   45 #>  [2484,]   45 #>  [2485,]   45 #>  [2486,]   45 #>  [2487,]   45 #>  [2488,]   45 #>  [2489,]   45 #>  [2490,]   45 #>  [2491,]   45 #>  [2492,]   45 #>  [2493,]   45 #>  [2494,]   45 #>  [2495,]   45 #>  [2496,]   45 #>  [2497,]   45 #>  [2498,]   45 #>  [2499,]   45 #>  [2500,]   46 #>  [2501,]   47 #>  [2502,]   48 #>  [2503,]   47 #>  [2504,]   47 #>  [2505,]   48 #>  [2506,]   47 #>  [2507,]   47 #>  [2508,]   47 #>  [2509,]   48 #>  [2510,]   48 #>  [2511,]   47 #>  [2512,]   48 #>  [2513,]   48 #>  [2514,]   47 #>  [2515,]   47 #>  [2516,]   47 #>  [2517,]   48 #>  [2518,]   48 #>  [2519,]   47 #>  [2520,]   48 #>  [2521,]   48 #>  [2522,]   47 #>  [2523,]   48 #>  [2524,]   48 #>  [2525,]   47 #>  [2526,]   47 #>  [2527,]   48 #>  [2528,]   47 #>  [2529,]   48 #>  [2530,]   47 #>  [2531,]   48 #>  [2532,]   48 #>  [2533,]   48 #>  [2534,]   47 #>  [2535,]   47 #>  [2536,]   48 #>  [2537,]   47 #>  [2538,]   47 #>  [2539,]   47 #>  [2540,]   48 #>  [2541,]   47 #>  [2542,]   47 #>  [2543,]   47 #>  [2544,]   48 #>  [2545,]   47 #>  [2546,]   47 #>  [2547,]   47 #>  [2548,]   47 #>  [2549,]   47 #>  [2550,]   47 #>  [2551,]   47 #>  [2552,]   47 #>  [2553,]   48 #>  [2554,]   47 #>  [2555,]   47 #>  [2556,]   47 #>  [2557,]   47 #>  [2558,]   47 #>  [2559,]   47 #>  [2560,]   48 #>  [2561,]   48 #>  [2562,]   47 #>  [2563,]   48 #>  [2564,]   47 #>  [2565,]   47 #>  [2566,]   47 #>  [2567,]   47 #>  [2568,]   47 #>  [2569,]   47 #>  [2570,]   48 #>  [2571,]   47 #>  [2572,]   47 #>  [2573,]   47 #>  [2574,]   47 #>  [2575,]   48 #>  [2576,]   47 #>  [2577,]   47 #>  [2578,]   47 #>  [2579,]   47 #>  [2580,]   48 #>  [2581,]   48 #>  [2582,]   47 #>  [2583,]   48 #>  [2584,]   48 #>  [2585,]   47 #>  [2586,]   48 #>  [2587,]   47 #>  [2588,]   48 #>  [2589,]   47 #>  [2590,]   47 #>  [2591,]   47 #>  [2592,]   47 #>  [2593,]   47 #>  [2594,]   47 #>  [2595,]   47 #>  [2596,]   47 #>  [2597,]   47 #>  [2598,]   47 #>  [2599,]   47 #>  [2600,]   47 #>  [2601,]   49 #>  [2602,]   49 #>  [2603,]   49 #>  [2604,]   49 #>  [2605,]   49 #>  [2606,]   49 #>  [2607,]   49 #>  [2608,]   49 #>  [2609,]   49 #>  [2610,]   49 #>  [2611,]   49 #>  [2612,]   49 #>  [2613,]   49 #>  [2614,]   49 #>  [2615,]   49 #>  [2616,]   49 #>  [2617,]   49 #>  [2618,]   49 #>  [2619,]   49 #>  [2620,]   49 #>  [2621,]   49 #>  [2622,]   49 #>  [2623,]   49 #>  [2624,]   49 #>  [2625,]   49 #>  [2626,]   49 #>  [2627,]   49 #>  [2628,]   49 #>  [2629,]   49 #>  [2630,]   49 #>  [2631,]   49 #>  [2632,]   49 #>  [2633,]   49 #>  [2634,]   49 #>  [2635,]   49 #>  [2636,]   49 #>  [2637,]   49 #>  [2638,]   49 #>  [2639,]   49 #>  [2640,]   49 #>  [2641,]   49 #>  [2642,]   49 #>  [2643,]   49 #>  [2644,]   49 #>  [2645,]   49 #>  [2646,]   49 #>  [2647,]   49 #>  [2648,]   49 #>  [2649,]   49 #>  [2650,]   49 #>  [2651,]   49 #>  [2652,]   49 #>  [2653,]   49 #>  [2654,]   49 #>  [2655,]   49 #>  [2656,]   49 #>  [2657,]   49 #>  [2658,]   49 #>  [2659,]   49 #>  [2660,]   49 #>  [2661,]   49 #>  [2662,]   49 #>  [2663,]   49 #>  [2664,]   49 #>  [2665,]   49 #>  [2666,]   49 #>  [2667,]   49 #>  [2668,]   49 #>  [2669,]   49 #>  [2670,]   49 #>  [2671,]   49 #>  [2672,]   49 #>  [2673,]   49 #>  [2674,]   49 #>  [2675,]   49 #>  [2676,]   49 #>  [2677,]   49 #>  [2678,]   49 #>  [2679,]   49 #>  [2680,]   49 #>  [2681,]   49 #>  [2682,]   49 #>  [2683,]   49 #>  [2684,]   49 #>  [2685,]   49 #>  [2686,]   49 #>  [2687,]   49 #>  [2688,]   49 #>  [2689,]   49 #>  [2690,]   49 #>  [2691,]   49 #>  [2692,]   49 #>  [2693,]   49 #>  [2694,]   49 #>  [2695,]   49 #>  [2696,]   49 #>  [2697,]   49 #>  [2698,]   49 #>  [2699,]   49 #>  [2700,]   49 #>  [2701,]   51 #>  [2702,]   51 #>  [2703,]   51 #>  [2704,]   50 #>  [2705,]   51 #>  [2706,]   51 #>  [2707,]   51 #>  [2708,]   50 #>  [2709,]   50 #>  [2710,]   51 #>  [2711,]   51 #>  [2712,]   51 #>  [2713,]   51 #>  [2714,]   51 #>  [2715,]   51 #>  [2716,]   51 #>  [2717,]   50 #>  [2718,]   51 #>  [2719,]   51 #>  [2720,]   51 #>  [2721,]   51 #>  [2722,]   50 #>  [2723,]   51 #>  [2724,]   51 #>  [2725,]   51 #>  [2726,]   51 #>  [2727,]   50 #>  [2728,]   51 #>  [2729,]   51 #>  [2730,]   51 #>  [2731,]   51 #>  [2732,]   51 #>  [2733,]   51 #>  [2734,]   51 #>  [2735,]   50 #>  [2736,]   51 #>  [2737,]   51 #>  [2738,]   51 #>  [2739,]   51 #>  [2740,]   51 #>  [2741,]   51 #>  [2742,]   51 #>  [2743,]   51 #>  [2744,]   50 #>  [2745,]   51 #>  [2746,]   51 #>  [2747,]   51 #>  [2748,]   51 #>  [2749,]   51 #>  [2750,]   51 #>  [2751,]   51 #>  [2752,]   50 #>  [2753,]   51 #>  [2754,]   51 #>  [2755,]   51 #>  [2756,]   51 #>  [2757,]   51 #>  [2758,]   50 #>  [2759,]   51 #>  [2760,]   51 #>  [2761,]   51 #>  [2762,]   51 #>  [2763,]   51 #>  [2764,]   51 #>  [2765,]   51 #>  [2766,]   50 #>  [2767,]   51 #>  [2768,]   51 #>  [2769,]   51 #>  [2770,]   51 #>  [2771,]   51 #>  [2772,]   51 #>  [2773,]   51 #>  [2774,]   51 #>  [2775,]   51 #>  [2776,]   51 #>  [2777,]   51 #>  [2778,]   51 #>  [2779,]   51 #>  [2780,]   51 #>  [2781,]   50 #>  [2782,]   50 #>  [2783,]   51 #>  [2784,]   51 #>  [2785,]   51 #>  [2786,]   51 #>  [2787,]   50 #>  [2788,]   51 #>  [2789,]   51 #>  [2790,]   50 #>  [2791,]   51 #>  [2792,]   50 #>  [2793,]   51 #>  [2794,]   51 #>  [2795,]   50 #>  [2796,]   51 #>  [2797,]   51 #>  [2798,]   51 #>  [2799,]   50 #>  [2800,]   51 #>  [2801,]   53 #>  [2802,]   53 #>  [2803,]   52 #>  [2804,]   52 #>  [2805,]   53 #>  [2806,]   53 #>  [2807,]   52 #>  [2808,]   52 #>  [2809,]   53 #>  [2810,]   52 #>  [2811,]   53 #>  [2812,]   52 #>  [2813,]   53 #>  [2814,]   52 #>  [2815,]   53 #>  [2816,]   52 #>  [2817,]   53 #>  [2818,]   53 #>  [2819,]   53 #>  [2820,]   53 #>  [2821,]   53 #>  [2822,]   53 #>  [2823,]   52 #>  [2824,]   53 #>  [2825,]   52 #>  [2826,]   52 #>  [2827,]   53 #>  [2828,]   53 #>  [2829,]   53 #>  [2830,]   52 #>  [2831,]   52 #>  [2832,]   52 #>  [2833,]   53 #>  [2834,]   53 #>  [2835,]   52 #>  [2836,]   53 #>  [2837,]   52 #>  [2838,]   53 #>  [2839,]   53 #>  [2840,]   52 #>  [2841,]   53 #>  [2842,]   53 #>  [2843,]   53 #>  [2844,]   52 #>  [2845,]   52 #>  [2846,]   52 #>  [2847,]   52 #>  [2848,]   53 #>  [2849,]   52 #>  [2850,]   53 #>  [2851,]   53 #>  [2852,]   52 #>  [2853,]   53 #>  [2854,]   53 #>  [2855,]   52 #>  [2856,]   53 #>  [2857,]   52 #>  [2858,]   53 #>  [2859,]   52 #>  [2860,]   52 #>  [2861,]   53 #>  [2862,]   53 #>  [2863,]   53 #>  [2864,]   53 #>  [2865,]   53 #>  [2866,]   53 #>  [2867,]   52 #>  [2868,]   52 #>  [2869,]   53 #>  [2870,]   53 #>  [2871,]   53 #>  [2872,]   52 #>  [2873,]   53 #>  [2874,]   52 #>  [2875,]   52 #>  [2876,]   52 #>  [2877,]   53 #>  [2878,]   52 #>  [2879,]   53 #>  [2880,]   52 #>  [2881,]   53 #>  [2882,]   53 #>  [2883,]   53 #>  [2884,]   53 #>  [2885,]   53 #>  [2886,]   52 #>  [2887,]   53 #>  [2888,]   52 #>  [2889,]   53 #>  [2890,]   53 #>  [2891,]   53 #>  [2892,]   52 #>  [2893,]   53 #>  [2894,]   53 #>  [2895,]   52 #>  [2896,]   52 #>  [2897,]   52 #>  [2898,]   52 #>  [2899,]   53 #>  [2900,]   53 #>  [2901,]   55 #>  [2902,]   55 #>  [2903,]   54 #>  [2904,]   55 #>  [2905,]   54 #>  [2906,]   55 #>  [2907,]   54 #>  [2908,]   54 #>  [2909,]   55 #>  [2910,]   55 #>  [2911,]   55 #>  [2912,]   55 #>  [2913,]   54 #>  [2914,]   55 #>  [2915,]   55 #>  [2916,]   54 #>  [2917,]   54 #>  [2918,]   55 #>  [2919,]   55 #>  [2920,]   54 #>  [2921,]   55 #>  [2922,]   54 #>  [2923,]   55 #>  [2924,]   54 #>  [2925,]   54 #>  [2926,]   55 #>  [2927,]   55 #>  [2928,]   55 #>  [2929,]   54 #>  [2930,]   55 #>  [2931,]   55 #>  [2932,]   55 #>  [2933,]   55 #>  [2934,]   55 #>  [2935,]   55 #>  [2936,]   55 #>  [2937,]   55 #>  [2938,]   55 #>  [2939,]   54 #>  [2940,]   54 #>  [2941,]   55 #>  [2942,]   55 #>  [2943,]   54 #>  [2944,]   54 #>  [2945,]   54 #>  [2946,]   54 #>  [2947,]   54 #>  [2948,]   55 #>  [2949,]   54 #>  [2950,]   54 #>  [2951,]   54 #>  [2952,]   55 #>  [2953,]   54 #>  [2954,]   54 #>  [2955,]   54 #>  [2956,]   54 #>  [2957,]   55 #>  [2958,]   55 #>  [2959,]   54 #>  [2960,]   55 #>  [2961,]   55 #>  [2962,]   55 #>  [2963,]   54 #>  [2964,]   55 #>  [2965,]   54 #>  [2966,]   54 #>  [2967,]   55 #>  [2968,]   55 #>  [2969,]   55 #>  [2970,]   54 #>  [2971,]   54 #>  [2972,]   54 #>  [2973,]   55 #>  [2974,]   55 #>  [2975,]   55 #>  [2976,]   54 #>  [2977,]   54 #>  [2978,]   54 #>  [2979,]   54 #>  [2980,]   55 #>  [2981,]   54 #>  [2982,]   55 #>  [2983,]   54 #>  [2984,]   54 #>  [2985,]   55 #>  [2986,]   54 #>  [2987,]   55 #>  [2988,]   55 #>  [2989,]   54 #>  [2990,]   54 #>  [2991,]   55 #>  [2992,]   55 #>  [2993,]   55 #>  [2994,]   54 #>  [2995,]   55 #>  [2996,]   55 #>  [2997,]   55 #>  [2998,]   54 #>  [2999,]   55 #>  [3000,]   54 #>  [3001,]   57 #>  [3002,]   56 #>  [3003,]   56 #>  [3004,]   56 #>  [3005,]   57 #>  [3006,]   56 #>  [3007,]   56 #>  [3008,]   56 #>  [3009,]   56 #>  [3010,]   56 #>  [3011,]   56 #>  [3012,]   56 #>  [3013,]   56 #>  [3014,]   57 #>  [3015,]   57 #>  [3016,]   56 #>  [3017,]   56 #>  [3018,]   57 #>  [3019,]   56 #>  [3020,]   56 #>  [3021,]   56 #>  [3022,]   56 #>  [3023,]   56 #>  [3024,]   56 #>  [3025,]   56 #>  [3026,]   56 #>  [3027,]   57 #>  [3028,]   56 #>  [3029,]   56 #>  [3030,]   56 #>  [3031,]   56 #>  [3032,]   57 #>  [3033,]   56 #>  [3034,]   56 #>  [3035,]   56 #>  [3036,]   56 #>  [3037,]   56 #>  [3038,]   56 #>  [3039,]   56 #>  [3040,]   56 #>  [3041,]   56 #>  [3042,]   56 #>  [3043,]   57 #>  [3044,]   56 #>  [3045,]   56 #>  [3046,]   56 #>  [3047,]   56 #>  [3048,]   56 #>  [3049,]   56 #>  [3050,]   56 #>  [3051,]   56 #>  [3052,]   56 #>  [3053,]   56 #>  [3054,]   56 #>  [3055,]   56 #>  [3056,]   56 #>  [3057,]   56 #>  [3058,]   57 #>  [3059,]   57 #>  [3060,]   56 #>  [3061,]   57 #>  [3062,]   56 #>  [3063,]   56 #>  [3064,]   56 #>  [3065,]   56 #>  [3066,]   57 #>  [3067,]   56 #>  [3068,]   56 #>  [3069,]   56 #>  [3070,]   57 #>  [3071,]   57 #>  [3072,]   56 #>  [3073,]   56 #>  [3074,]   56 #>  [3075,]   57 #>  [3076,]   56 #>  [3077,]   56 #>  [3078,]   56 #>  [3079,]   57 #>  [3080,]   56 #>  [3081,]   56 #>  [3082,]   56 #>  [3083,]   56 #>  [3084,]   56 #>  [3085,]   56 #>  [3086,]   56 #>  [3087,]   57 #>  [3088,]   56 #>  [3089,]   56 #>  [3090,]   56 #>  [3091,]   57 #>  [3092,]   56 #>  [3093,]   56 #>  [3094,]   56 #>  [3095,]   57 #>  [3096,]   56 #>  [3097,]   56 #>  [3098,]   56 #>  [3099,]   56 #>  [3100,]   57 #>  [3101,]   58 #>  [3102,]   59 #>  [3103,]   58 #>  [3104,]   59 #>  [3105,]   59 #>  [3106,]   58 #>  [3107,]   59 #>  [3108,]   59 #>  [3109,]   59 #>  [3110,]   59 #>  [3111,]   58 #>  [3112,]   59 #>  [3113,]   59 #>  [3114,]   58 #>  [3115,]   59 #>  [3116,]   58 #>  [3117,]   59 #>  [3118,]   59 #>  [3119,]   58 #>  [3120,]   59 #>  [3121,]   59 #>  [3122,]   59 #>  [3123,]   59 #>  [3124,]   59 #>  [3125,]   59 #>  [3126,]   58 #>  [3127,]   59 #>  [3128,]   58 #>  [3129,]   59 #>  [3130,]   59 #>  [3131,]   59 #>  [3132,]   59 #>  [3133,]   59 #>  [3134,]   58 #>  [3135,]   58 #>  [3136,]   59 #>  [3137,]   58 #>  [3138,]   58 #>  [3139,]   59 #>  [3140,]   59 #>  [3141,]   59 #>  [3142,]   58 #>  [3143,]   59 #>  [3144,]   59 #>  [3145,]   58 #>  [3146,]   59 #>  [3147,]   59 #>  [3148,]   59 #>  [3149,]   58 #>  [3150,]   59 #>  [3151,]   59 #>  [3152,]   58 #>  [3153,]   59 #>  [3154,]   59 #>  [3155,]   59 #>  [3156,]   58 #>  [3157,]   59 #>  [3158,]   59 #>  [3159,]   58 #>  [3160,]   59 #>  [3161,]   59 #>  [3162,]   59 #>  [3163,]   59 #>  [3164,]   58 #>  [3165,]   58 #>  [3166,]   59 #>  [3167,]   59 #>  [3168,]   58 #>  [3169,]   58 #>  [3170,]   59 #>  [3171,]   59 #>  [3172,]   58 #>  [3173,]   58 #>  [3174,]   59 #>  [3175,]   59 #>  [3176,]   59 #>  [3177,]   58 #>  [3178,]   59 #>  [3179,]   58 #>  [3180,]   59 #>  [3181,]   59 #>  [3182,]   59 #>  [3183,]   59 #>  [3184,]   59 #>  [3185,]   59 #>  [3186,]   59 #>  [3187,]   59 #>  [3188,]   59 #>  [3189,]   58 #>  [3190,]   59 #>  [3191,]   59 #>  [3192,]   59 #>  [3193,]   59 #>  [3194,]   58 #>  [3195,]   59 #>  [3196,]   58 #>  [3197,]   58 #>  [3198,]   59 #>  [3199,]   59 #>  [3200,]   58 #>  [3201,]   61 #>  [3202,]   61 #>  [3203,]   60 #>  [3204,]   61 #>  [3205,]   61 #>  [3206,]   61 #>  [3207,]   61 #>  [3208,]   61 #>  [3209,]   61 #>  [3210,]   61 #>  [3211,]   60 #>  [3212,]   60 #>  [3213,]   61 #>  [3214,]   60 #>  [3215,]   61 #>  [3216,]   61 #>  [3217,]   61 #>  [3218,]   61 #>  [3219,]   60 #>  [3220,]   60 #>  [3221,]   61 #>  [3222,]   60 #>  [3223,]   61 #>  [3224,]   61 #>  [3225,]   61 #>  [3226,]   60 #>  [3227,]   61 #>  [3228,]   61 #>  [3229,]   60 #>  [3230,]   60 #>  [3231,]   61 #>  [3232,]   60 #>  [3233,]   61 #>  [3234,]   60 #>  [3235,]   61 #>  [3236,]   60 #>  [3237,]   61 #>  [3238,]   61 #>  [3239,]   61 #>  [3240,]   60 #>  [3241,]   60 #>  [3242,]   60 #>  [3243,]   61 #>  [3244,]   61 #>  [3245,]   61 #>  [3246,]   61 #>  [3247,]   61 #>  [3248,]   60 #>  [3249,]   61 #>  [3250,]   61 #>  [3251,]   60 #>  [3252,]   61 #>  [3253,]   61 #>  [3254,]   60 #>  [3255,]   61 #>  [3256,]   61 #>  [3257,]   61 #>  [3258,]   61 #>  [3259,]   61 #>  [3260,]   60 #>  [3261,]   61 #>  [3262,]   60 #>  [3263,]   60 #>  [3264,]   61 #>  [3265,]   61 #>  [3266,]   60 #>  [3267,]   61 #>  [3268,]   60 #>  [3269,]   60 #>  [3270,]   61 #>  [3271,]   61 #>  [3272,]   61 #>  [3273,]   61 #>  [3274,]   61 #>  [3275,]   61 #>  [3276,]   61 #>  [3277,]   61 #>  [3278,]   61 #>  [3279,]   61 #>  [3280,]   60 #>  [3281,]   60 #>  [3282,]   61 #>  [3283,]   60 #>  [3284,]   61 #>  [3285,]   61 #>  [3286,]   61 #>  [3287,]   61 #>  [3288,]   61 #>  [3289,]   60 #>  [3290,]   61 #>  [3291,]   60 #>  [3292,]   61 #>  [3293,]   61 #>  [3294,]   61 #>  [3295,]   61 #>  [3296,]   61 #>  [3297,]   61 #>  [3298,]   61 #>  [3299,]   61 #>  [3300,]   61 #>  [3301,]   62 #>  [3302,]   62 #>  [3303,]   62 #>  [3304,]   62 #>  [3305,]   62 #>  [3306,]   62 #>  [3307,]   62 #>  [3308,]   62 #>  [3309,]   62 #>  [3310,]   62 #>  [3311,]   62 #>  [3312,]   62 #>  [3313,]   62 #>  [3314,]   62 #>  [3315,]   62 #>  [3316,]   62 #>  [3317,]   62 #>  [3318,]   62 #>  [3319,]   62 #>  [3320,]   62 #>  [3321,]   62 #>  [3322,]   62 #>  [3323,]   62 #>  [3324,]   62 #>  [3325,]   62 #>  [3326,]   62 #>  [3327,]   62 #>  [3328,]   62 #>  [3329,]   62 #>  [3330,]   62 #>  [3331,]   62 #>  [3332,]   62 #>  [3333,]   62 #>  [3334,]   62 #>  [3335,]   62 #>  [3336,]   62 #>  [3337,]   62 #>  [3338,]   62 #>  [3339,]   62 #>  [3340,]   62 #>  [3341,]   62 #>  [3342,]   62 #>  [3343,]   62 #>  [3344,]   62 #>  [3345,]   62 #>  [3346,]   62 #>  [3347,]   62 #>  [3348,]   62 #>  [3349,]   62 #>  [3350,]   62 #>  [3351,]   62 #>  [3352,]   62 #>  [3353,]   62 #>  [3354,]   62 #>  [3355,]   62 #>  [3356,]   62 #>  [3357,]   62 #>  [3358,]   62 #>  [3359,]   62 #>  [3360,]   62 #>  [3361,]   62 #>  [3362,]   62 #>  [3363,]   62 #>  [3364,]   62 #>  [3365,]   62 #>  [3366,]   62 #>  [3367,]   62 #>  [3368,]   62 #>  [3369,]   62 #>  [3370,]   62 #>  [3371,]   62 #>  [3372,]   62 #>  [3373,]   62 #>  [3374,]   62 #>  [3375,]   62 #>  [3376,]   62 #>  [3377,]   62 #>  [3378,]   62 #>  [3379,]   62 #>  [3380,]   62 #>  [3381,]   62 #>  [3382,]   62 #>  [3383,]   62 #>  [3384,]   62 #>  [3385,]   62 #>  [3386,]   62 #>  [3387,]   62 #>  [3388,]   62 #>  [3389,]   62 #>  [3390,]   62 #>  [3391,]   62 #>  [3392,]   62 #>  [3393,]   62 #>  [3394,]   62 #>  [3395,]   62 #>  [3396,]   62 #>  [3397,]   62 #>  [3398,]   62 #>  [3399,]   62 #>  [3400,]   62 #>  [3401,]   63 #>  [3402,]   64 #>  [3403,]   63 #>  [3404,]   63 #>  [3405,]   64 #>  [3406,]   63 #>  [3407,]   63 #>  [3408,]   63 #>  [3409,]   64 #>  [3410,]   64 #>  [3411,]   63 #>  [3412,]   64 #>  [3413,]   64 #>  [3414,]   63 #>  [3415,]   63 #>  [3416,]   63 #>  [3417,]   64 #>  [3418,]   64 #>  [3419,]   63 #>  [3420,]   64 #>  [3421,]   64 #>  [3422,]   64 #>  [3423,]   64 #>  [3424,]   64 #>  [3425,]   63 #>  [3426,]   63 #>  [3427,]   64 #>  [3428,]   63 #>  [3429,]   64 #>  [3430,]   64 #>  [3431,]   64 #>  [3432,]   64 #>  [3433,]   64 #>  [3434,]   63 #>  [3435,]   63 #>  [3436,]   64 #>  [3437,]   63 #>  [3438,]   63 #>  [3439,]   63 #>  [3440,]   64 #>  [3441,]   63 #>  [3442,]   63 #>  [3443,]   63 #>  [3444,]   64 #>  [3445,]   63 #>  [3446,]   63 #>  [3447,]   63 #>  [3448,]   63 #>  [3449,]   63 #>  [3450,]   64 #>  [3451,]   63 #>  [3452,]   63 #>  [3453,]   64 #>  [3454,]   63 #>  [3455,]   63 #>  [3456,]   63 #>  [3457,]   63 #>  [3458,]   63 #>  [3459,]   63 #>  [3460,]   64 #>  [3461,]   64 #>  [3462,]   63 #>  [3463,]   64 #>  [3464,]   63 #>  [3465,]   63 #>  [3466,]   63 #>  [3467,]   63 #>  [3468,]   63 #>  [3469,]   63 #>  [3470,]   64 #>  [3471,]   63 #>  [3472,]   63 #>  [3473,]   63 #>  [3474,]   63 #>  [3475,]   64 #>  [3476,]   63 #>  [3477,]   63 #>  [3478,]   63 #>  [3479,]   63 #>  [3480,]   64 #>  [3481,]   64 #>  [3482,]   63 #>  [3483,]   64 #>  [3484,]   64 #>  [3485,]   63 #>  [3486,]   64 #>  [3487,]   64 #>  [3488,]   64 #>  [3489,]   63 #>  [3490,]   63 #>  [3491,]   63 #>  [3492,]   64 #>  [3493,]   64 #>  [3494,]   63 #>  [3495,]   63 #>  [3496,]   63 #>  [3497,]   63 #>  [3498,]   63 #>  [3499,]   63 #>  [3500,]   63 #>  [3501,]   66 #>  [3502,]   66 #>  [3503,]   66 #>  [3504,]   66 #>  [3505,]   66 #>  [3506,]   66 #>  [3507,]   66 #>  [3508,]   66 #>  [3509,]   66 #>  [3510,]   66 #>  [3511,]   66 #>  [3512,]   66 #>  [3513,]   66 #>  [3514,]   66 #>  [3515,]   66 #>  [3516,]   66 #>  [3517,]   66 #>  [3518,]   66 #>  [3519,]   66 #>  [3520,]   66 #>  [3521,]   66 #>  [3522,]   66 #>  [3523,]   66 #>  [3524,]   66 #>  [3525,]   65 #>  [3526,]   66 #>  [3527,]   66 #>  [3528,]   66 #>  [3529,]   66 #>  [3530,]   66 #>  [3531,]   66 #>  [3532,]   66 #>  [3533,]   66 #>  [3534,]   66 #>  [3535,]   66 #>  [3536,]   66 #>  [3537,]   66 #>  [3538,]   66 #>  [3539,]   66 #>  [3540,]   66 #>  [3541,]   66 #>  [3542,]   66 #>  [3543,]   66 #>  [3544,]   66 #>  [3545,]   66 #>  [3546,]   66 #>  [3547,]   66 #>  [3548,]   66 #>  [3549,]   66 #>  [3550,]   66 #>  [3551,]   66 #>  [3552,]   66 #>  [3553,]   66 #>  [3554,]   66 #>  [3555,]   66 #>  [3556,]   65 #>  [3557,]   66 #>  [3558,]   66 #>  [3559,]   66 #>  [3560,]   66 #>  [3561,]   66 #>  [3562,]   66 #>  [3563,]   66 #>  [3564,]   66 #>  [3565,]   65 #>  [3566,]   66 #>  [3567,]   66 #>  [3568,]   66 #>  [3569,]   66 #>  [3570,]   66 #>  [3571,]   66 #>  [3572,]   66 #>  [3573,]   66 #>  [3574,]   66 #>  [3575,]   66 #>  [3576,]   66 #>  [3577,]   66 #>  [3578,]   66 #>  [3579,]   66 #>  [3580,]   65 #>  [3581,]   66 #>  [3582,]   66 #>  [3583,]   66 #>  [3584,]   66 #>  [3585,]   65 #>  [3586,]   66 #>  [3587,]   66 #>  [3588,]   66 #>  [3589,]   66 #>  [3590,]   66 #>  [3591,]   66 #>  [3592,]   66 #>  [3593,]   66 #>  [3594,]   66 #>  [3595,]   66 #>  [3596,]   66 #>  [3597,]   66 #>  [3598,]   66 #>  [3599,]   66 #>  [3600,]   66 #>  [3601,]   67 #>  [3602,]   68 #>  [3603,]   67 #>  [3604,]   67 #>  [3605,]   68 #>  [3606,]   67 #>  [3607,]   67 #>  [3608,]   67 #>  [3609,]   68 #>  [3610,]   68 #>  [3611,]   67 #>  [3612,]   68 #>  [3613,]   68 #>  [3614,]   67 #>  [3615,]   67 #>  [3616,]   67 #>  [3617,]   68 #>  [3618,]   68 #>  [3619,]   67 #>  [3620,]   68 #>  [3621,]   68 #>  [3622,]   68 #>  [3623,]   68 #>  [3624,]   68 #>  [3625,]   67 #>  [3626,]   67 #>  [3627,]   68 #>  [3628,]   67 #>  [3629,]   68 #>  [3630,]   67 #>  [3631,]   68 #>  [3632,]   68 #>  [3633,]   68 #>  [3634,]   67 #>  [3635,]   67 #>  [3636,]   68 #>  [3637,]   67 #>  [3638,]   67 #>  [3639,]   67 #>  [3640,]   68 #>  [3641,]   67 #>  [3642,]   67 #>  [3643,]   67 #>  [3644,]   68 #>  [3645,]   67 #>  [3646,]   67 #>  [3647,]   67 #>  [3648,]   67 #>  [3649,]   67 #>  [3650,]   68 #>  [3651,]   67 #>  [3652,]   67 #>  [3653,]   68 #>  [3654,]   67 #>  [3655,]   67 #>  [3656,]   67 #>  [3657,]   67 #>  [3658,]   67 #>  [3659,]   67 #>  [3660,]   68 #>  [3661,]   68 #>  [3662,]   67 #>  [3663,]   68 #>  [3664,]   67 #>  [3665,]   67 #>  [3666,]   67 #>  [3667,]   67 #>  [3668,]   67 #>  [3669,]   67 #>  [3670,]   68 #>  [3671,]   67 #>  [3672,]   67 #>  [3673,]   67 #>  [3674,]   67 #>  [3675,]   68 #>  [3676,]   67 #>  [3677,]   67 #>  [3678,]   67 #>  [3679,]   67 #>  [3680,]   68 #>  [3681,]   68 #>  [3682,]   67 #>  [3683,]   68 #>  [3684,]   68 #>  [3685,]   67 #>  [3686,]   68 #>  [3687,]   68 #>  [3688,]   68 #>  [3689,]   67 #>  [3690,]   67 #>  [3691,]   67 #>  [3692,]   68 #>  [3693,]   68 #>  [3694,]   67 #>  [3695,]   67 #>  [3696,]   67 #>  [3697,]   67 #>  [3698,]   67 #>  [3699,]   67 #>  [3700,]   67 #>  [3701,]   70 #>  [3702,]   70 #>  [3703,]   69 #>  [3704,]   69 #>  [3705,]   69 #>  [3706,]   70 #>  [3707,]   69 #>  [3708,]   69 #>  [3709,]   69 #>  [3710,]   69 #>  [3711,]   70 #>  [3712,]   69 #>  [3713,]   70 #>  [3714,]   70 #>  [3715,]   70 #>  [3716,]   70 #>  [3717,]   70 #>  [3718,]   69 #>  [3719,]   69 #>  [3720,]   69 #>  [3721,]   70 #>  [3722,]   70 #>  [3723,]   69 #>  [3724,]   69 #>  [3725,]   69 #>  [3726,]   70 #>  [3727,]   70 #>  [3728,]   69 #>  [3729,]   70 #>  [3730,]   69 #>  [3731,]   69 #>  [3732,]   69 #>  [3733,]   70 #>  [3734,]   69 #>  [3735,]   70 #>  [3736,]   69 #>  [3737,]   70 #>  [3738,]   69 #>  [3739,]   69 #>  [3740,]   69 #>  [3741,]   70 #>  [3742,]   69 #>  [3743,]   69 #>  [3744,]   70 #>  [3745,]   69 #>  [3746,]   69 #>  [3747,]   70 #>  [3748,]   69 #>  [3749,]   69 #>  [3750,]   70 #>  [3751,]   69 #>  [3752,]   70 #>  [3753,]   69 #>  [3754,]   69 #>  [3755,]   69 #>  [3756,]   69 #>  [3757,]   69 #>  [3758,]   70 #>  [3759,]   70 #>  [3760,]   69 #>  [3761,]   70 #>  [3762,]   69 #>  [3763,]   69 #>  [3764,]   69 #>  [3765,]   69 #>  [3766,]   69 #>  [3767,]   69 #>  [3768,]   70 #>  [3769,]   69 #>  [3770,]   70 #>  [3771,]   70 #>  [3772,]   69 #>  [3773,]   70 #>  [3774,]   69 #>  [3775,]   69 #>  [3776,]   70 #>  [3777,]   70 #>  [3778,]   69 #>  [3779,]   70 #>  [3780,]   69 #>  [3781,]   70 #>  [3782,]   69 #>  [3783,]   70 #>  [3784,]   70 #>  [3785,]   69 #>  [3786,]   70 #>  [3787,]   69 #>  [3788,]   69 #>  [3789,]   69 #>  [3790,]   70 #>  [3791,]   69 #>  [3792,]   69 #>  [3793,]   70 #>  [3794,]   70 #>  [3795,]   69 #>  [3796,]   70 #>  [3797,]   69 #>  [3798,]   69 #>  [3799,]   70 #>  [3800,]   70 #>  [3801,]   72 #>  [3802,]   71 #>  [3803,]   71 #>  [3804,]   71 #>  [3805,]   71 #>  [3806,]   71 #>  [3807,]   71 #>  [3808,]   71 #>  [3809,]   72 #>  [3810,]   71 #>  [3811,]   72 #>  [3812,]   71 #>  [3813,]   72 #>  [3814,]   71 #>  [3815,]   71 #>  [3816,]   71 #>  [3817,]   72 #>  [3818,]   72 #>  [3819,]   71 #>  [3820,]   72 #>  [3821,]   71 #>  [3822,]   71 #>  [3823,]   71 #>  [3824,]   71 #>  [3825,]   71 #>  [3826,]   71 #>  [3827,]   72 #>  [3828,]   72 #>  [3829,]   72 #>  [3830,]   71 #>  [3831,]   71 #>  [3832,]   71 #>  [3833,]   72 #>  [3834,]   71 #>  [3835,]   71 #>  [3836,]   72 #>  [3837,]   71 #>  [3838,]   72 #>  [3839,]   72 #>  [3840,]   71 #>  [3841,]   72 #>  [3842,]   72 #>  [3843,]   71 #>  [3844,]   71 #>  [3845,]   71 #>  [3846,]   71 #>  [3847,]   71 #>  [3848,]   71 #>  [3849,]   71 #>  [3850,]   71 #>  [3851,]   72 #>  [3852,]   71 #>  [3853,]   72 #>  [3854,]   72 #>  [3855,]   71 #>  [3856,]   72 #>  [3857,]   71 #>  [3858,]   72 #>  [3859,]   71 #>  [3860,]   71 #>  [3861,]   71 #>  [3862,]   72 #>  [3863,]   71 #>  [3864,]   71 #>  [3865,]   72 #>  [3866,]   72 #>  [3867,]   71 #>  [3868,]   71 #>  [3869,]   71 #>  [3870,]   72 #>  [3871,]   71 #>  [3872,]   71 #>  [3873,]   71 #>  [3874,]   71 #>  [3875,]   71 #>  [3876,]   71 #>  [3877,]   72 #>  [3878,]   71 #>  [3879,]   72 #>  [3880,]   71 #>  [3881,]   71 #>  [3882,]   72 #>  [3883,]   72 #>  [3884,]   72 #>  [3885,]   72 #>  [3886,]   71 #>  [3887,]   72 #>  [3888,]   71 #>  [3889,]   72 #>  [3890,]   72 #>  [3891,]   72 #>  [3892,]   71 #>  [3893,]   72 #>  [3894,]   72 #>  [3895,]   71 #>  [3896,]   71 #>  [3897,]   71 #>  [3898,]   71 #>  [3899,]   71 #>  [3900,]   71 #>  [3901,]   74 #>  [3902,]   74 #>  [3903,]   73 #>  [3904,]   73 #>  [3905,]   74 #>  [3906,]   74 #>  [3907,]   73 #>  [3908,]   73 #>  [3909,]   74 #>  [3910,]   74 #>  [3911,]   74 #>  [3912,]   73 #>  [3913,]   74 #>  [3914,]   74 #>  [3915,]   74 #>  [3916,]   74 #>  [3917,]   74 #>  [3918,]   74 #>  [3919,]   74 #>  [3920,]   74 #>  [3921,]   74 #>  [3922,]   74 #>  [3923,]   74 #>  [3924,]   74 #>  [3925,]   73 #>  [3926,]   74 #>  [3927,]   74 #>  [3928,]   74 #>  [3929,]   74 #>  [3930,]   74 #>  [3931,]   73 #>  [3932,]   74 #>  [3933,]   74 #>  [3934,]   74 #>  [3935,]   74 #>  [3936,]   74 #>  [3937,]   74 #>  [3938,]   74 #>  [3939,]   74 #>  [3940,]   74 #>  [3941,]   74 #>  [3942,]   74 #>  [3943,]   74 #>  [3944,]   74 #>  [3945,]   74 #>  [3946,]   74 #>  [3947,]   73 #>  [3948,]   74 #>  [3949,]   74 #>  [3950,]   74 #>  [3951,]   74 #>  [3952,]   73 #>  [3953,]   74 #>  [3954,]   74 #>  [3955,]   74 #>  [3956,]   74 #>  [3957,]   73 #>  [3958,]   74 #>  [3959,]   73 #>  [3960,]   73 #>  [3961,]   74 #>  [3962,]   74 #>  [3963,]   74 #>  [3964,]   74 #>  [3965,]   74 #>  [3966,]   74 #>  [3967,]   74 #>  [3968,]   73 #>  [3969,]   74 #>  [3970,]   74 #>  [3971,]   74 #>  [3972,]   74 #>  [3973,]   74 #>  [3974,]   74 #>  [3975,]   74 #>  [3976,]   74 #>  [3977,]   74 #>  [3978,]   74 #>  [3979,]   74 #>  [3980,]   73 #>  [3981,]   74 #>  [3982,]   74 #>  [3983,]   74 #>  [3984,]   74 #>  [3985,]   74 #>  [3986,]   73 #>  [3987,]   74 #>  [3988,]   74 #>  [3989,]   74 #>  [3990,]   74 #>  [3991,]   74 #>  [3992,]   74 #>  [3993,]   74 #>  [3994,]   74 #>  [3995,]   74 #>  [3996,]   73 #>  [3997,]   73 #>  [3998,]   73 #>  [3999,]   74 #>  [4000,]   74 #>  [4001,]   75 #>  [4002,]   75 #>  [4003,]   76 #>  [4004,]   75 #>  [4005,]   75 #>  [4006,]   76 #>  [4007,]   75 #>  [4008,]   75 #>  [4009,]   75 #>  [4010,]   75 #>  [4011,]   75 #>  [4012,]   75 #>  [4013,]   75 #>  [4014,]   75 #>  [4015,]   75 #>  [4016,]   75 #>  [4017,]   75 #>  [4018,]   75 #>  [4019,]   76 #>  [4020,]   75 #>  [4021,]   75 #>  [4022,]   75 #>  [4023,]   75 #>  [4024,]   75 #>  [4025,]   76 #>  [4026,]   75 #>  [4027,]   75 #>  [4028,]   75 #>  [4029,]   75 #>  [4030,]   75 #>  [4031,]   75 #>  [4032,]   75 #>  [4033,]   76 #>  [4034,]   76 #>  [4035,]   75 #>  [4036,]   75 #>  [4037,]   75 #>  [4038,]   75 #>  [4039,]   75 #>  [4040,]   75 #>  [4041,]   75 #>  [4042,]   75 #>  [4043,]   75 #>  [4044,]   75 #>  [4045,]   75 #>  [4046,]   75 #>  [4047,]   75 #>  [4048,]   75 #>  [4049,]   75 #>  [4050,]   75 #>  [4051,]   75 #>  [4052,]   75 #>  [4053,]   75 #>  [4054,]   75 #>  [4055,]   75 #>  [4056,]   75 #>  [4057,]   75 #>  [4058,]   75 #>  [4059,]   75 #>  [4060,]   76 #>  [4061,]   75 #>  [4062,]   75 #>  [4063,]   75 #>  [4064,]   75 #>  [4065,]   76 #>  [4066,]   75 #>  [4067,]   75 #>  [4068,]   75 #>  [4069,]   75 #>  [4070,]   76 #>  [4071,]   75 #>  [4072,]   75 #>  [4073,]   76 #>  [4074,]   75 #>  [4075,]   75 #>  [4076,]   75 #>  [4077,]   75 #>  [4078,]   75 #>  [4079,]   75 #>  [4080,]   75 #>  [4081,]   75 #>  [4082,]   75 #>  [4083,]   75 #>  [4084,]   75 #>  [4085,]   75 #>  [4086,]   75 #>  [4087,]   75 #>  [4088,]   75 #>  [4089,]   75 #>  [4090,]   75 #>  [4091,]   75 #>  [4092,]   75 #>  [4093,]   76 #>  [4094,]   75 #>  [4095,]   75 #>  [4096,]   75 #>  [4097,]   75 #>  [4098,]   76 #>  [4099,]   75 #>  [4100,]   75 #>  [4101,]   78 #>  [4102,]   78 #>  [4103,]   78 #>  [4104,]   77 #>  [4105,]   78 #>  [4106,]   78 #>  [4107,]   78 #>  [4108,]   77 #>  [4109,]   77 #>  [4110,]   77 #>  [4111,]   78 #>  [4112,]   78 #>  [4113,]   78 #>  [4114,]   78 #>  [4115,]   78 #>  [4116,]   78 #>  [4117,]   78 #>  [4118,]   78 #>  [4119,]   78 #>  [4120,]   77 #>  [4121,]   78 #>  [4122,]   78 #>  [4123,]   78 #>  [4124,]   78 #>  [4125,]   78 #>  [4126,]   78 #>  [4127,]   78 #>  [4128,]   78 #>  [4129,]   78 #>  [4130,]   77 #>  [4131,]   78 #>  [4132,]   78 #>  [4133,]   78 #>  [4134,]   78 #>  [4135,]   78 #>  [4136,]   78 #>  [4137,]   78 #>  [4138,]   78 #>  [4139,]   78 #>  [4140,]   78 #>  [4141,]   78 #>  [4142,]   78 #>  [4143,]   77 #>  [4144,]   78 #>  [4145,]   78 #>  [4146,]   78 #>  [4147,]   78 #>  [4148,]   78 #>  [4149,]   78 #>  [4150,]   78 #>  [4151,]   77 #>  [4152,]   78 #>  [4153,]   78 #>  [4154,]   78 #>  [4155,]   78 #>  [4156,]   77 #>  [4157,]   78 #>  [4158,]   78 #>  [4159,]   78 #>  [4160,]   77 #>  [4161,]   78 #>  [4162,]   78 #>  [4163,]   78 #>  [4164,]   77 #>  [4165,]   78 #>  [4166,]   78 #>  [4167,]   77 #>  [4168,]   78 #>  [4169,]   78 #>  [4170,]   78 #>  [4171,]   78 #>  [4172,]   78 #>  [4173,]   78 #>  [4174,]   78 #>  [4175,]   78 #>  [4176,]   78 #>  [4177,]   78 #>  [4178,]   77 #>  [4179,]   78 #>  [4180,]   78 #>  [4181,]   78 #>  [4182,]   78 #>  [4183,]   78 #>  [4184,]   78 #>  [4185,]   77 #>  [4186,]   78 #>  [4187,]   78 #>  [4188,]   78 #>  [4189,]   77 #>  [4190,]   78 #>  [4191,]   77 #>  [4192,]   78 #>  [4193,]   78 #>  [4194,]   78 #>  [4195,]   77 #>  [4196,]   78 #>  [4197,]   78 #>  [4198,]   78 #>  [4199,]   78 #>  [4200,]   78 #>  [4201,]   79 #>  [4202,]   79 #>  [4203,]   79 #>  [4204,]   79 #>  [4205,]   79 #>  [4206,]   79 #>  [4207,]   79 #>  [4208,]   79 #>  [4209,]   79 #>  [4210,]   79 #>  [4211,]   79 #>  [4212,]   79 #>  [4213,]   79 #>  [4214,]   79 #>  [4215,]   79 #>  [4216,]   79 #>  [4217,]   79 #>  [4218,]   80 #>  [4219,]   79 #>  [4220,]   79 #>  [4221,]   79 #>  [4222,]   79 #>  [4223,]   79 #>  [4224,]   79 #>  [4225,]   79 #>  [4226,]   79 #>  [4227,]   79 #>  [4228,]   79 #>  [4229,]   79 #>  [4230,]   79 #>  [4231,]   79 #>  [4232,]   79 #>  [4233,]   79 #>  [4234,]   79 #>  [4235,]   79 #>  [4236,]   79 #>  [4237,]   79 #>  [4238,]   79 #>  [4239,]   79 #>  [4240,]   79 #>  [4241,]   79 #>  [4242,]   80 #>  [4243,]   79 #>  [4244,]   79 #>  [4245,]   79 #>  [4246,]   79 #>  [4247,]   79 #>  [4248,]   79 #>  [4249,]   79 #>  [4250,]   79 #>  [4251,]   80 #>  [4252,]   79 #>  [4253,]   80 #>  [4254,]   79 #>  [4255,]   79 #>  [4256,]   79 #>  [4257,]   79 #>  [4258,]   79 #>  [4259,]   79 #>  [4260,]   79 #>  [4261,]   79 #>  [4262,]   79 #>  [4263,]   79 #>  [4264,]   79 #>  [4265,]   79 #>  [4266,]   79 #>  [4267,]   79 #>  [4268,]   79 #>  [4269,]   79 #>  [4270,]   79 #>  [4271,]   79 #>  [4272,]   79 #>  [4273,]   79 #>  [4274,]   79 #>  [4275,]   79 #>  [4276,]   79 #>  [4277,]   79 #>  [4278,]   79 #>  [4279,]   80 #>  [4280,]   79 #>  [4281,]   79 #>  [4282,]   79 #>  [4283,]   79 #>  [4284,]   80 #>  [4285,]   79 #>  [4286,]   79 #>  [4287,]   79 #>  [4288,]   79 #>  [4289,]   79 #>  [4290,]   79 #>  [4291,]   79 #>  [4292,]   79 #>  [4293,]   79 #>  [4294,]   80 #>  [4295,]   79 #>  [4296,]   79 #>  [4297,]   79 #>  [4298,]   79 #>  [4299,]   79 #>  [4300,]   79 #>  [4301,]   81 #>  [4302,]   81 #>  [4303,]   81 #>  [4304,]   82 #>  [4305,]   81 #>  [4306,]   81 #>  [4307,]   81 #>  [4308,]   81 #>  [4309,]   81 #>  [4310,]   81 #>  [4311,]   81 #>  [4312,]   81 #>  [4313,]   81 #>  [4314,]   82 #>  [4315,]   81 #>  [4316,]   81 #>  [4317,]   81 #>  [4318,]   81 #>  [4319,]   81 #>  [4320,]   81 #>  [4321,]   81 #>  [4322,]   81 #>  [4323,]   81 #>  [4324,]   81 #>  [4325,]   81 #>  [4326,]   81 #>  [4327,]   82 #>  [4328,]   81 #>  [4329,]   81 #>  [4330,]   81 #>  [4331,]   81 #>  [4332,]   81 #>  [4333,]   81 #>  [4334,]   81 #>  [4335,]   81 #>  [4336,]   81 #>  [4337,]   81 #>  [4338,]   81 #>  [4339,]   81 #>  [4340,]   81 #>  [4341,]   81 #>  [4342,]   81 #>  [4343,]   81 #>  [4344,]   81 #>  [4345,]   81 #>  [4346,]   81 #>  [4347,]   81 #>  [4348,]   81 #>  [4349,]   81 #>  [4350,]   81 #>  [4351,]   81 #>  [4352,]   81 #>  [4353,]   81 #>  [4354,]   81 #>  [4355,]   81 #>  [4356,]   81 #>  [4357,]   81 #>  [4358,]   81 #>  [4359,]   81 #>  [4360,]   81 #>  [4361,]   82 #>  [4362,]   81 #>  [4363,]   81 #>  [4364,]   81 #>  [4365,]   81 #>  [4366,]   81 #>  [4367,]   81 #>  [4368,]   81 #>  [4369,]   82 #>  [4370,]   81 #>  [4371,]   81 #>  [4372,]   81 #>  [4373,]   81 #>  [4374,]   81 #>  [4375,]   81 #>  [4376,]   81 #>  [4377,]   81 #>  [4378,]   81 #>  [4379,]   81 #>  [4380,]   81 #>  [4381,]   81 #>  [4382,]   82 #>  [4383,]   81 #>  [4384,]   81 #>  [4385,]   81 #>  [4386,]   81 #>  [4387,]   81 #>  [4388,]   81 #>  [4389,]   81 #>  [4390,]   81 #>  [4391,]   81 #>  [4392,]   82 #>  [4393,]   82 #>  [4394,]   81 #>  [4395,]   81 #>  [4396,]   82 #>  [4397,]   82 #>  [4398,]   81 #>  [4399,]   81 #>  [4400,]   81 #>  [4401,]   83 #>  [4402,]   84 #>  [4403,]   83 #>  [4404,]   83 #>  [4405,]   84 #>  [4406,]   83 #>  [4407,]   84 #>  [4408,]   83 #>  [4409,]   84 #>  [4410,]   84 #>  [4411,]   83 #>  [4412,]   84 #>  [4413,]   84 #>  [4414,]   83 #>  [4415,]   83 #>  [4416,]   83 #>  [4417,]   84 #>  [4418,]   84 #>  [4419,]   83 #>  [4420,]   84 #>  [4421,]   84 #>  [4422,]   84 #>  [4423,]   84 #>  [4424,]   84 #>  [4425,]   83 #>  [4426,]   83 #>  [4427,]   84 #>  [4428,]   83 #>  [4429,]   84 #>  [4430,]   84 #>  [4431,]   84 #>  [4432,]   84 #>  [4433,]   84 #>  [4434,]   83 #>  [4435,]   83 #>  [4436,]   84 #>  [4437,]   83 #>  [4438,]   83 #>  [4439,]   84 #>  [4440,]   84 #>  [4441,]   84 #>  [4442,]   83 #>  [4443,]   83 #>  [4444,]   84 #>  [4445,]   83 #>  [4446,]   83 #>  [4447,]   84 #>  [4448,]   84 #>  [4449,]   83 #>  [4450,]   84 #>  [4451,]   84 #>  [4452,]   83 #>  [4453,]   84 #>  [4454,]   84 #>  [4455,]   83 #>  [4456,]   83 #>  [4457,]   83 #>  [4458,]   84 #>  [4459,]   83 #>  [4460,]   84 #>  [4461,]   84 #>  [4462,]   83 #>  [4463,]   84 #>  [4464,]   83 #>  [4465,]   83 #>  [4466,]   83 #>  [4467,]   83 #>  [4468,]   83 #>  [4469,]   83 #>  [4470,]   84 #>  [4471,]   84 #>  [4472,]   83 #>  [4473,]   83 #>  [4474,]   84 #>  [4475,]   84 #>  [4476,]   84 #>  [4477,]   83 #>  [4478,]   84 #>  [4479,]   83 #>  [4480,]   84 #>  [4481,]   84 #>  [4482,]   83 #>  [4483,]   84 #>  [4484,]   84 #>  [4485,]   83 #>  [4486,]   84 #>  [4487,]   84 #>  [4488,]   84 #>  [4489,]   83 #>  [4490,]   84 #>  [4491,]   83 #>  [4492,]   84 #>  [4493,]   84 #>  [4494,]   83 #>  [4495,]   84 #>  [4496,]   83 #>  [4497,]   83 #>  [4498,]   83 #>  [4499,]   84 #>  [4500,]   83 #>  [4501,]   85 #>  [4502,]   85 #>  [4503,]   85 #>  [4504,]   86 #>  [4505,]   85 #>  [4506,]   85 #>  [4507,]   86 #>  [4508,]   85 #>  [4509,]   85 #>  [4510,]   86 #>  [4511,]   85 #>  [4512,]   85 #>  [4513,]   85 #>  [4514,]   85 #>  [4515,]   85 #>  [4516,]   86 #>  [4517,]   85 #>  [4518,]   85 #>  [4519,]   85 #>  [4520,]   86 #>  [4521,]   85 #>  [4522,]   85 #>  [4523,]   85 #>  [4524,]   86 #>  [4525,]   85 #>  [4526,]   85 #>  [4527,]   85 #>  [4528,]   86 #>  [4529,]   85 #>  [4530,]   85 #>  [4531,]   85 #>  [4532,]   85 #>  [4533,]   85 #>  [4534,]   85 #>  [4535,]   85 #>  [4536,]   85 #>  [4537,]   85 #>  [4538,]   85 #>  [4539,]   85 #>  [4540,]   85 #>  [4541,]   85 #>  [4542,]   85 #>  [4543,]   85 #>  [4544,]   85 #>  [4545,]   85 #>  [4546,]   85 #>  [4547,]   85 #>  [4548,]   85 #>  [4549,]   85 #>  [4550,]   86 #>  [4551,]   85 #>  [4552,]   86 #>  [4553,]   85 #>  [4554,]   86 #>  [4555,]   85 #>  [4556,]   85 #>  [4557,]   85 #>  [4558,]   85 #>  [4559,]   85 #>  [4560,]   85 #>  [4561,]   85 #>  [4562,]   85 #>  [4563,]   85 #>  [4564,]   85 #>  [4565,]   85 #>  [4566,]   85 #>  [4567,]   85 #>  [4568,]   85 #>  [4569,]   85 #>  [4570,]   85 #>  [4571,]   85 #>  [4572,]   85 #>  [4573,]   86 #>  [4574,]   85 #>  [4575,]   85 #>  [4576,]   86 #>  [4577,]   85 #>  [4578,]   85 #>  [4579,]   85 #>  [4580,]   85 #>  [4581,]   85 #>  [4582,]   85 #>  [4583,]   85 #>  [4584,]   85 #>  [4585,]   85 #>  [4586,]   86 #>  [4587,]   85 #>  [4588,]   85 #>  [4589,]   85 #>  [4590,]   85 #>  [4591,]   86 #>  [4592,]   85 #>  [4593,]   85 #>  [4594,]   85 #>  [4595,]   85 #>  [4596,]   85 #>  [4597,]   85 #>  [4598,]   85 #>  [4599,]   85 #>  [4600,]   85 #>  [4601,]   88 #>  [4602,]   87 #>  [4603,]   88 #>  [4604,]   88 #>  [4605,]   88 #>  [4606,]   87 #>  [4607,]   88 #>  [4608,]   88 #>  [4609,]   88 #>  [4610,]   88 #>  [4611,]   87 #>  [4612,]   87 #>  [4613,]   88 #>  [4614,]   88 #>  [4615,]   87 #>  [4616,]   88 #>  [4617,]   87 #>  [4618,]   88 #>  [4619,]   88 #>  [4620,]   88 #>  [4621,]   88 #>  [4622,]   88 #>  [4623,]   87 #>  [4624,]   88 #>  [4625,]   88 #>  [4626,]   88 #>  [4627,]   88 #>  [4628,]   88 #>  [4629,]   87 #>  [4630,]   87 #>  [4631,]   87 #>  [4632,]   88 #>  [4633,]   88 #>  [4634,]   87 #>  [4635,]   88 #>  [4636,]   88 #>  [4637,]   87 #>  [4638,]   88 #>  [4639,]   88 #>  [4640,]   88 #>  [4641,]   88 #>  [4642,]   87 #>  [4643,]   87 #>  [4644,]   87 #>  [4645,]   88 #>  [4646,]   88 #>  [4647,]   87 #>  [4648,]   87 #>  [4649,]   88 #>  [4650,]   88 #>  [4651,]   88 #>  [4652,]   88 #>  [4653,]   88 #>  [4654,]   88 #>  [4655,]   88 #>  [4656,]   87 #>  [4657,]   88 #>  [4658,]   88 #>  [4659,]   88 #>  [4660,]   87 #>  [4661,]   87 #>  [4662,]   88 #>  [4663,]   87 #>  [4664,]   87 #>  [4665,]   87 #>  [4666,]   88 #>  [4667,]   88 #>  [4668,]   88 #>  [4669,]   88 #>  [4670,]   87 #>  [4671,]   88 #>  [4672,]   88 #>  [4673,]   88 #>  [4674,]   88 #>  [4675,]   87 #>  [4676,]   88 #>  [4677,]   88 #>  [4678,]   87 #>  [4679,]   87 #>  [4680,]   88 #>  [4681,]   87 #>  [4682,]   88 #>  [4683,]   88 #>  [4684,]   88 #>  [4685,]   88 #>  [4686,]   88 #>  [4687,]   88 #>  [4688,]   88 #>  [4689,]   88 #>  [4690,]   88 #>  [4691,]   88 #>  [4692,]   87 #>  [4693,]   88 #>  [4694,]   87 #>  [4695,]   87 #>  [4696,]   88 #>  [4697,]   88 #>  [4698,]   88 #>  [4699,]   88 #>  [4700,]   87 #>  [4701,]   89 #>  [4702,]   90 #>  [4703,]   90 #>  [4704,]   89 #>  [4705,]   90 #>  [4706,]   90 #>  [4707,]   90 #>  [4708,]   89 #>  [4709,]   89 #>  [4710,]   90 #>  [4711,]   89 #>  [4712,]   90 #>  [4713,]   89 #>  [4714,]   90 #>  [4715,]   90 #>  [4716,]   90 #>  [4717,]   89 #>  [4718,]   90 #>  [4719,]   90 #>  [4720,]   90 #>  [4721,]   90 #>  [4722,]   89 #>  [4723,]   90 #>  [4724,]   90 #>  [4725,]   90 #>  [4726,]   90 #>  [4727,]   89 #>  [4728,]   90 #>  [4729,]   90 #>  [4730,]   89 #>  [4731,]   90 #>  [4732,]   90 #>  [4733,]   90 #>  [4734,]   90 #>  [4735,]   89 #>  [4736,]   90 #>  [4737,]   90 #>  [4738,]   90 #>  [4739,]   90 #>  [4740,]   90 #>  [4741,]   90 #>  [4742,]   90 #>  [4743,]   89 #>  [4744,]   89 #>  [4745,]   90 #>  [4746,]   89 #>  [4747,]   90 #>  [4748,]   90 #>  [4749,]   89 #>  [4750,]   90 #>  [4751,]   90 #>  [4752,]   89 #>  [4753,]   90 #>  [4754,]   89 #>  [4755,]   89 #>  [4756,]   90 #>  [4757,]   90 #>  [4758,]   89 #>  [4759,]   90 #>  [4760,]   90 #>  [4761,]   90 #>  [4762,]   90 #>  [4763,]   90 #>  [4764,]   90 #>  [4765,]   90 #>  [4766,]   89 #>  [4767,]   90 #>  [4768,]   90 #>  [4769,]   89 #>  [4770,]   90 #>  [4771,]   90 #>  [4772,]   90 #>  [4773,]   90 #>  [4774,]   90 #>  [4775,]   90 #>  [4776,]   90 #>  [4777,]   90 #>  [4778,]   90 #>  [4779,]   89 #>  [4780,]   89 #>  [4781,]   89 #>  [4782,]   89 #>  [4783,]   89 #>  [4784,]   90 #>  [4785,]   90 #>  [4786,]   90 #>  [4787,]   89 #>  [4788,]   89 #>  [4789,]   89 #>  [4790,]   89 #>  [4791,]   89 #>  [4792,]   89 #>  [4793,]   90 #>  [4794,]   90 #>  [4795,]   89 #>  [4796,]   89 #>  [4797,]   90 #>  [4798,]   90 #>  [4799,]   89 #>  [4800,]   90 #>  [4801,]   92 #>  [4802,]   92 #>  [4803,]   92 #>  [4804,]   91 #>  [4805,]   92 #>  [4806,]   92 #>  [4807,]   92 #>  [4808,]   91 #>  [4809,]   91 #>  [4810,]   92 #>  [4811,]   91 #>  [4812,]   92 #>  [4813,]   91 #>  [4814,]   92 #>  [4815,]   92 #>  [4816,]   92 #>  [4817,]   91 #>  [4818,]   92 #>  [4819,]   92 #>  [4820,]   92 #>  [4821,]   92 #>  [4822,]   91 #>  [4823,]   92 #>  [4824,]   92 #>  [4825,]   92 #>  [4826,]   92 #>  [4827,]   91 #>  [4828,]   92 #>  [4829,]   92 #>  [4830,]   92 #>  [4831,]   92 #>  [4832,]   92 #>  [4833,]   92 #>  [4834,]   92 #>  [4835,]   91 #>  [4836,]   92 #>  [4837,]   92 #>  [4838,]   92 #>  [4839,]   92 #>  [4840,]   92 #>  [4841,]   92 #>  [4842,]   92 #>  [4843,]   92 #>  [4844,]   91 #>  [4845,]   92 #>  [4846,]   92 #>  [4847,]   92 #>  [4848,]   92 #>  [4849,]   92 #>  [4850,]   92 #>  [4851,]   92 #>  [4852,]   91 #>  [4853,]   92 #>  [4854,]   92 #>  [4855,]   92 #>  [4856,]   92 #>  [4857,]   92 #>  [4858,]   91 #>  [4859,]   92 #>  [4860,]   92 #>  [4861,]   92 #>  [4862,]   92 #>  [4863,]   92 #>  [4864,]   92 #>  [4865,]   92 #>  [4866,]   91 #>  [4867,]   92 #>  [4868,]   92 #>  [4869,]   92 #>  [4870,]   92 #>  [4871,]   92 #>  [4872,]   92 #>  [4873,]   92 #>  [4874,]   92 #>  [4875,]   92 #>  [4876,]   92 #>  [4877,]   92 #>  [4878,]   92 #>  [4879,]   92 #>  [4880,]   92 #>  [4881,]   91 #>  [4882,]   91 #>  [4883,]   92 #>  [4884,]   92 #>  [4885,]   92 #>  [4886,]   92 #>  [4887,]   91 #>  [4888,]   92 #>  [4889,]   92 #>  [4890,]   91 #>  [4891,]   92 #>  [4892,]   91 #>  [4893,]   92 #>  [4894,]   92 #>  [4895,]   91 #>  [4896,]   92 #>  [4897,]   92 #>  [4898,]   92 #>  [4899,]   91 #>  [4900,]   92 #>  [4901,]   93 #>  [4902,]   93 #>  [4903,]   93 #>  [4904,]   93 #>  [4905,]   94 #>  [4906,]   93 #>  [4907,]   93 #>  [4908,]   93 #>  [4909,]   93 #>  [4910,]   93 #>  [4911,]   93 #>  [4912,]   93 #>  [4913,]   93 #>  [4914,]   93 #>  [4915,]   93 #>  [4916,]   93 #>  [4917,]   93 #>  [4918,]   94 #>  [4919,]   93 #>  [4920,]   93 #>  [4921,]   93 #>  [4922,]   93 #>  [4923,]   93 #>  [4924,]   93 #>  [4925,]   93 #>  [4926,]   93 #>  [4927,]   93 #>  [4928,]   93 #>  [4929,]   93 #>  [4930,]   93 #>  [4931,]   93 #>  [4932,]   94 #>  [4933,]   93 #>  [4934,]   93 #>  [4935,]   93 #>  [4936,]   93 #>  [4937,]   93 #>  [4938,]   93 #>  [4939,]   93 #>  [4940,]   93 #>  [4941,]   93 #>  [4942,]   93 #>  [4943,]   93 #>  [4944,]   93 #>  [4945,]   93 #>  [4946,]   93 #>  [4947,]   93 #>  [4948,]   93 #>  [4949,]   93 #>  [4950,]   93 #>  [4951,]   93 #>  [4952,]   93 #>  [4953,]   93 #>  [4954,]   93 #>  [4955,]   93 #>  [4956,]   93 #>  [4957,]   93 #>  [4958,]   93 #>  [4959,]   93 #>  [4960,]   93 #>  [4961,]   93 #>  [4962,]   93 #>  [4963,]   93 #>  [4964,]   93 #>  [4965,]   93 #>  [4966,]   93 #>  [4967,]   93 #>  [4968,]   93 #>  [4969,]   93 #>  [4970,]   93 #>  [4971,]   94 #>  [4972,]   93 #>  [4973,]   93 #>  [4974,]   93 #>  [4975,]   94 #>  [4976,]   93 #>  [4977,]   93 #>  [4978,]   93 #>  [4979,]   93 #>  [4980,]   93 #>  [4981,]   93 #>  [4982,]   93 #>  [4983,]   93 #>  [4984,]   93 #>  [4985,]   93 #>  [4986,]   93 #>  [4987,]   93 #>  [4988,]   93 #>  [4989,]   93 #>  [4990,]   93 #>  [4991,]   94 #>  [4992,]   93 #>  [4993,]   93 #>  [4994,]   93 #>  [4995,]   94 #>  [4996,]   93 #>  [4997,]   93 #>  [4998,]   93 #>  [4999,]   93 #>  [5000,]   94 #>  [5001,]   95 #>  [5002,]   95 #>  [5003,]   95 #>  [5004,]   95 #>  [5005,]   95 #>  [5006,]   95 #>  [5007,]   95 #>  [5008,]   95 #>  [5009,]   95 #>  [5010,]   95 #>  [5011,]   95 #>  [5012,]   95 #>  [5013,]   95 #>  [5014,]   95 #>  [5015,]   95 #>  [5016,]   95 #>  [5017,]   95 #>  [5018,]   95 #>  [5019,]   95 #>  [5020,]   95 #>  [5021,]   95 #>  [5022,]   95 #>  [5023,]   95 #>  [5024,]   95 #>  [5025,]   95 #>  [5026,]   95 #>  [5027,]   95 #>  [5028,]   95 #>  [5029,]   95 #>  [5030,]   95 #>  [5031,]   95 #>  [5032,]   95 #>  [5033,]   95 #>  [5034,]   95 #>  [5035,]   95 #>  [5036,]   95 #>  [5037,]   95 #>  [5038,]   95 #>  [5039,]   95 #>  [5040,]   95 #>  [5041,]   95 #>  [5042,]   95 #>  [5043,]   95 #>  [5044,]   95 #>  [5045,]   95 #>  [5046,]   95 #>  [5047,]   95 #>  [5048,]   95 #>  [5049,]   95 #>  [5050,]   95 #>  [5051,]   95 #>  [5052,]   95 #>  [5053,]   95 #>  [5054,]   95 #>  [5055,]   95 #>  [5056,]   95 #>  [5057,]   95 #>  [5058,]   95 #>  [5059,]   95 #>  [5060,]   95 #>  [5061,]   95 #>  [5062,]   95 #>  [5063,]   95 #>  [5064,]   95 #>  [5065,]   95 #>  [5066,]   95 #>  [5067,]   95 #>  [5068,]   95 #>  [5069,]   95 #>  [5070,]   95 #>  [5071,]   95 #>  [5072,]   95 #>  [5073,]   95 #>  [5074,]   95 #>  [5075,]   95 #>  [5076,]   95 #>  [5077,]   95 #>  [5078,]   95 #>  [5079,]   95 #>  [5080,]   95 #>  [5081,]   95 #>  [5082,]   95 #>  [5083,]   95 #>  [5084,]   95 #>  [5085,]   95 #>  [5086,]   95 #>  [5087,]   95 #>  [5088,]   95 #>  [5089,]   95 #>  [5090,]   95 #>  [5091,]   95 #>  [5092,]   95 #>  [5093,]   95 #>  [5094,]   95 #>  [5095,]   95 #>  [5096,]   95 #>  [5097,]   95 #>  [5098,]   95 #>  [5099,]   95 #>  [5100,]   95 #>  [5101,]   96 #>  [5102,]   96 #>  [5103,]   96 #>  [5104,]   96 #>  [5105,]   97 #>  [5106,]   96 #>  [5107,]   96 #>  [5108,]   96 #>  [5109,]   96 #>  [5110,]   96 #>  [5111,]   96 #>  [5112,]   96 #>  [5113,]   96 #>  [5114,]   96 #>  [5115,]   96 #>  [5116,]   96 #>  [5117,]   96 #>  [5118,]   97 #>  [5119,]   96 #>  [5120,]   96 #>  [5121,]   96 #>  [5122,]   96 #>  [5123,]   96 #>  [5124,]   96 #>  [5125,]   96 #>  [5126,]   96 #>  [5127,]   96 #>  [5128,]   96 #>  [5129,]   96 #>  [5130,]   96 #>  [5131,]   96 #>  [5132,]   97 #>  [5133,]   96 #>  [5134,]   96 #>  [5135,]   96 #>  [5136,]   96 #>  [5137,]   96 #>  [5138,]   96 #>  [5139,]   96 #>  [5140,]   96 #>  [5141,]   96 #>  [5142,]   96 #>  [5143,]   96 #>  [5144,]   96 #>  [5145,]   96 #>  [5146,]   96 #>  [5147,]   96 #>  [5148,]   96 #>  [5149,]   96 #>  [5150,]   96 #>  [5151,]   96 #>  [5152,]   96 #>  [5153,]   96 #>  [5154,]   96 #>  [5155,]   96 #>  [5156,]   96 #>  [5157,]   96 #>  [5158,]   96 #>  [5159,]   96 #>  [5160,]   96 #>  [5161,]   96 #>  [5162,]   96 #>  [5163,]   96 #>  [5164,]   96 #>  [5165,]   96 #>  [5166,]   96 #>  [5167,]   96 #>  [5168,]   96 #>  [5169,]   96 #>  [5170,]   96 #>  [5171,]   97 #>  [5172,]   96 #>  [5173,]   96 #>  [5174,]   96 #>  [5175,]   97 #>  [5176,]   96 #>  [5177,]   96 #>  [5178,]   96 #>  [5179,]   96 #>  [5180,]   96 #>  [5181,]   96 #>  [5182,]   96 #>  [5183,]   96 #>  [5184,]   96 #>  [5185,]   96 #>  [5186,]   96 #>  [5187,]   96 #>  [5188,]   96 #>  [5189,]   96 #>  [5190,]   96 #>  [5191,]   97 #>  [5192,]   96 #>  [5193,]   96 #>  [5194,]   96 #>  [5195,]   97 #>  [5196,]   96 #>  [5197,]   96 #>  [5198,]   96 #>  [5199,]   96 #>  [5200,]   97 #>  [5201,]   99 #>  [5202,]   99 #>  [5203,]   98 #>  [5204,]   99 #>  [5205,]   99 #>  [5206,]   99 #>  [5207,]   98 #>  [5208,]   98 #>  [5209,]   99 #>  [5210,]   99 #>  [5211,]   99 #>  [5212,]   99 #>  [5213,]   99 #>  [5214,]   99 #>  [5215,]   99 #>  [5216,]   99 #>  [5217,]   99 #>  [5218,]   99 #>  [5219,]   99 #>  [5220,]   98 #>  [5221,]   99 #>  [5222,]   99 #>  [5223,]   99 #>  [5224,]   99 #>  [5225,]   98 #>  [5226,]   99 #>  [5227,]   99 #>  [5228,]   99 #>  [5229,]   99 #>  [5230,]   99 #>  [5231,]   99 #>  [5232,]   99 #>  [5233,]   99 #>  [5234,]   99 #>  [5235,]   99 #>  [5236,]   99 #>  [5237,]   99 #>  [5238,]   99 #>  [5239,]   98 #>  [5240,]   99 #>  [5241,]   99 #>  [5242,]   99 #>  [5243,]   99 #>  [5244,]   98 #>  [5245,]   99 #>  [5246,]   98 #>  [5247,]   99 #>  [5248,]   99 #>  [5249,]   98 #>  [5250,]   98 #>  [5251,]   99 #>  [5252,]   99 #>  [5253,]   98 #>  [5254,]   99 #>  [5255,]   98 #>  [5256,]   98 #>  [5257,]   99 #>  [5258,]   99 #>  [5259,]   98 #>  [5260,]   99 #>  [5261,]   99 #>  [5262,]   99 #>  [5263,]   99 #>  [5264,]   99 #>  [5265,]   98 #>  [5266,]   98 #>  [5267,]   99 #>  [5268,]   99 #>  [5269,]   99 #>  [5270,]   98 #>  [5271,]   99 #>  [5272,]   99 #>  [5273,]   99 #>  [5274,]   99 #>  [5275,]   99 #>  [5276,]   99 #>  [5277,]   99 #>  [5278,]   99 #>  [5279,]   99 #>  [5280,]   99 #>  [5281,]   99 #>  [5282,]   99 #>  [5283,]   99 #>  [5284,]   98 #>  [5285,]   99 #>  [5286,]   98 #>  [5287,]   99 #>  [5288,]   99 #>  [5289,]   99 #>  [5290,]   98 #>  [5291,]   99 #>  [5292,]   99 #>  [5293,]   99 #>  [5294,]   99 #>  [5295,]   99 #>  [5296,]   99 #>  [5297,]   99 #>  [5298,]   98 #>  [5299,]   99 #>  [5300,]   98 #>  [5301,]  101 #>  [5302,]  100 #>  [5303,]  101 #>  [5304,]  101 #>  [5305,]  100 #>  [5306,]  100 #>  [5307,]  101 #>  [5308,]  100 #>  [5309,]  101 #>  [5310,]  101 #>  [5311,]  100 #>  [5312,]  100 #>  [5313,]  101 #>  [5314,]  101 #>  [5315,]  100 #>  [5316,]  101 #>  [5317,]  100 #>  [5318,]  100 #>  [5319,]  100 #>  [5320,]  101 #>  [5321,]  100 #>  [5322,]  101 #>  [5323,]  100 #>  [5324,]  101 #>  [5325,]  101 #>  [5326,]  100 #>  [5327,]  100 #>  [5328,]  101 #>  [5329,]  100 #>  [5330,]  100 #>  [5331,]  100 #>  [5332,]  100 #>  [5333,]  100 #>  [5334,]  100 #>  [5335,]  100 #>  [5336,]  101 #>  [5337,]  100 #>  [5338,]  100 #>  [5339,]  101 #>  [5340,]  100 #>  [5341,]  101 #>  [5342,]  100 #>  [5343,]  100 #>  [5344,]  100 #>  [5345,]  101 #>  [5346,]  100 #>  [5347,]  100 #>  [5348,]  100 #>  [5349,]  101 #>  [5350,]  101 #>  [5351,]  100 #>  [5352,]  101 #>  [5353,]  101 #>  [5354,]  101 #>  [5355,]  101 #>  [5356,]  100 #>  [5357,]  101 #>  [5358,]  101 #>  [5359,]  101 #>  [5360,]  100 #>  [5361,]  100 #>  [5362,]  100 #>  [5363,]  100 #>  [5364,]  100 #>  [5365,]  100 #>  [5366,]  100 #>  [5367,]  101 #>  [5368,]  100 #>  [5369,]  100 #>  [5370,]  100 #>  [5371,]  101 #>  [5372,]  101 #>  [5373,]  101 #>  [5374,]  100 #>  [5375,]  100 #>  [5376,]  101 #>  [5377,]  100 #>  [5378,]  100 #>  [5379,]  100 #>  [5380,]  100 #>  [5381,]  100 #>  [5382,]  100 #>  [5383,]  100 #>  [5384,]  100 #>  [5385,]  101 #>  [5386,]  101 #>  [5387,]  101 #>  [5388,]  101 #>  [5389,]  100 #>  [5390,]  101 #>  [5391,]  101 #>  [5392,]  100 #>  [5393,]  100 #>  [5394,]  100 #>  [5395,]  100 #>  [5396,]  100 #>  [5397,]  100 #>  [5398,]  100 #>  [5399,]  100 #>  [5400,]  100 #>  [5401,]  103 #>  [5402,]  103 #>  [5403,]  102 #>  [5404,]  103 #>  [5405,]  103 #>  [5406,]  103 #>  [5407,]  102 #>  [5408,]  103 #>  [5409,]  103 #>  [5410,]  103 #>  [5411,]  103 #>  [5412,]  103 #>  [5413,]  103 #>  [5414,]  103 #>  [5415,]  103 #>  [5416,]  103 #>  [5417,]  103 #>  [5418,]  103 #>  [5419,]  103 #>  [5420,]  103 #>  [5421,]  102 #>  [5422,]  103 #>  [5423,]  102 #>  [5424,]  103 #>  [5425,]  103 #>  [5426,]  103 #>  [5427,]  103 #>  [5428,]  103 #>  [5429,]  103 #>  [5430,]  102 #>  [5431,]  102 #>  [5432,]  103 #>  [5433,]  103 #>  [5434,]  103 #>  [5435,]  103 #>  [5436,]  103 #>  [5437,]  103 #>  [5438,]  103 #>  [5439,]  102 #>  [5440,]  103 #>  [5441,]  103 #>  [5442,]  103 #>  [5443,]  103 #>  [5444,]  103 #>  [5445,]  103 #>  [5446,]  103 #>  [5447,]  102 #>  [5448,]  103 #>  [5449,]  102 #>  [5450,]  103 #>  [5451,]  103 #>  [5452,]  103 #>  [5453,]  103 #>  [5454,]  102 #>  [5455,]  103 #>  [5456,]  103 #>  [5457,]  103 #>  [5458,]  103 #>  [5459,]  103 #>  [5460,]  103 #>  [5461,]  103 #>  [5462,]  102 #>  [5463,]  103 #>  [5464,]  103 #>  [5465,]  103 #>  [5466,]  103 #>  [5467,]  103 #>  [5468,]  103 #>  [5469,]  103 #>  [5470,]  102 #>  [5471,]  103 #>  [5472,]  103 #>  [5473,]  103 #>  [5474,]  103 #>  [5475,]  103 #>  [5476,]  103 #>  [5477,]  102 #>  [5478,]  103 #>  [5479,]  102 #>  [5480,]  102 #>  [5481,]  103 #>  [5482,]  103 #>  [5483,]  102 #>  [5484,]  103 #>  [5485,]  103 #>  [5486,]  103 #>  [5487,]  103 #>  [5488,]  103 #>  [5489,]  103 #>  [5490,]  103 #>  [5491,]  103 #>  [5492,]  103 #>  [5493,]  103 #>  [5494,]  103 #>  [5495,]  102 #>  [5496,]  103 #>  [5497,]  103 #>  [5498,]  102 #>  [5499,]  103 #>  [5500,]  103 #>  [5501,]  105 #>  [5502,]  105 #>  [5503,]  104 #>  [5504,]  105 #>  [5505,]  105 #>  [5506,]  105 #>  [5507,]  104 #>  [5508,]  104 #>  [5509,]  105 #>  [5510,]  105 #>  [5511,]  105 #>  [5512,]  105 #>  [5513,]  104 #>  [5514,]  105 #>  [5515,]  105 #>  [5516,]  104 #>  [5517,]  104 #>  [5518,]  105 #>  [5519,]  105 #>  [5520,]  104 #>  [5521,]  105 #>  [5522,]  104 #>  [5523,]  105 #>  [5524,]  104 #>  [5525,]  104 #>  [5526,]  105 #>  [5527,]  105 #>  [5528,]  105 #>  [5529,]  105 #>  [5530,]  105 #>  [5531,]  105 #>  [5532,]  105 #>  [5533,]  105 #>  [5534,]  105 #>  [5535,]  105 #>  [5536,]  105 #>  [5537,]  105 #>  [5538,]  105 #>  [5539,]  104 #>  [5540,]  104 #>  [5541,]  105 #>  [5542,]  105 #>  [5543,]  104 #>  [5544,]  104 #>  [5545,]  104 #>  [5546,]  104 #>  [5547,]  104 #>  [5548,]  105 #>  [5549,]  104 #>  [5550,]  104 #>  [5551,]  104 #>  [5552,]  105 #>  [5553,]  104 #>  [5554,]  104 #>  [5555,]  104 #>  [5556,]  104 #>  [5557,]  105 #>  [5558,]  105 #>  [5559,]  104 #>  [5560,]  105 #>  [5561,]  105 #>  [5562,]  105 #>  [5563,]  104 #>  [5564,]  105 #>  [5565,]  104 #>  [5566,]  104 #>  [5567,]  105 #>  [5568,]  105 #>  [5569,]  105 #>  [5570,]  104 #>  [5571,]  105 #>  [5572,]  104 #>  [5573,]  105 #>  [5574,]  105 #>  [5575,]  105 #>  [5576,]  104 #>  [5577,]  104 #>  [5578,]  104 #>  [5579,]  104 #>  [5580,]  105 #>  [5581,]  105 #>  [5582,]  105 #>  [5583,]  104 #>  [5584,]  104 #>  [5585,]  105 #>  [5586,]  104 #>  [5587,]  105 #>  [5588,]  105 #>  [5589,]  104 #>  [5590,]  104 #>  [5591,]  105 #>  [5592,]  105 #>  [5593,]  105 #>  [5594,]  104 #>  [5595,]  105 #>  [5596,]  105 #>  [5597,]  105 #>  [5598,]  104 #>  [5599,]  105 #>  [5600,]  104 #>  [5601,]  106 #>  [5602,]  106 #>  [5603,]  107 #>  [5604,]  106 #>  [5605,]  106 #>  [5606,]  107 #>  [5607,]  106 #>  [5608,]  106 #>  [5609,]  106 #>  [5610,]  106 #>  [5611,]  106 #>  [5612,]  106 #>  [5613,]  106 #>  [5614,]  106 #>  [5615,]  106 #>  [5616,]  106 #>  [5617,]  106 #>  [5618,]  106 #>  [5619,]  107 #>  [5620,]  106 #>  [5621,]  106 #>  [5622,]  106 #>  [5623,]  106 #>  [5624,]  106 #>  [5625,]  107 #>  [5626,]  106 #>  [5627,]  106 #>  [5628,]  106 #>  [5629,]  106 #>  [5630,]  106 #>  [5631,]  106 #>  [5632,]  106 #>  [5633,]  107 #>  [5634,]  107 #>  [5635,]  106 #>  [5636,]  106 #>  [5637,]  106 #>  [5638,]  106 #>  [5639,]  106 #>  [5640,]  106 #>  [5641,]  106 #>  [5642,]  106 #>  [5643,]  106 #>  [5644,]  106 #>  [5645,]  106 #>  [5646,]  106 #>  [5647,]  106 #>  [5648,]  106 #>  [5649,]  106 #>  [5650,]  106 #>  [5651,]  106 #>  [5652,]  106 #>  [5653,]  106 #>  [5654,]  106 #>  [5655,]  106 #>  [5656,]  106 #>  [5657,]  106 #>  [5658,]  106 #>  [5659,]  106 #>  [5660,]  107 #>  [5661,]  106 #>  [5662,]  106 #>  [5663,]  106 #>  [5664,]  106 #>  [5665,]  107 #>  [5666,]  106 #>  [5667,]  106 #>  [5668,]  106 #>  [5669,]  106 #>  [5670,]  107 #>  [5671,]  106 #>  [5672,]  106 #>  [5673,]  107 #>  [5674,]  106 #>  [5675,]  106 #>  [5676,]  106 #>  [5677,]  106 #>  [5678,]  106 #>  [5679,]  106 #>  [5680,]  106 #>  [5681,]  106 #>  [5682,]  106 #>  [5683,]  106 #>  [5684,]  106 #>  [5685,]  106 #>  [5686,]  106 #>  [5687,]  106 #>  [5688,]  106 #>  [5689,]  106 #>  [5690,]  106 #>  [5691,]  106 #>  [5692,]  106 #>  [5693,]  107 #>  [5694,]  106 #>  [5695,]  106 #>  [5696,]  106 #>  [5697,]  106 #>  [5698,]  107 #>  [5699,]  106 #>  [5700,]  106 #>  [5701,]  109 #>  [5702,]  109 #>  [5703,]  108 #>  [5704,]  108 #>  [5705,]  108 #>  [5706,]  109 #>  [5707,]  108 #>  [5708,]  108 #>  [5709,]  108 #>  [5710,]  108 #>  [5711,]  108 #>  [5712,]  108 #>  [5713,]  109 #>  [5714,]  109 #>  [5715,]  109 #>  [5716,]  109 #>  [5717,]  109 #>  [5718,]  108 #>  [5719,]  108 #>  [5720,]  108 #>  [5721,]  109 #>  [5722,]  109 #>  [5723,]  108 #>  [5724,]  108 #>  [5725,]  108 #>  [5726,]  109 #>  [5727,]  109 #>  [5728,]  108 #>  [5729,]  109 #>  [5730,]  108 #>  [5731,]  108 #>  [5732,]  108 #>  [5733,]  109 #>  [5734,]  108 #>  [5735,]  109 #>  [5736,]  108 #>  [5737,]  109 #>  [5738,]  108 #>  [5739,]  108 #>  [5740,]  108 #>  [5741,]  109 #>  [5742,]  108 #>  [5743,]  108 #>  [5744,]  109 #>  [5745,]  108 #>  [5746,]  108 #>  [5747,]  108 #>  [5748,]  108 #>  [5749,]  108 #>  [5750,]  109 #>  [5751,]  108 #>  [5752,]  109 #>  [5753,]  108 #>  [5754,]  108 #>  [5755,]  108 #>  [5756,]  108 #>  [5757,]  108 #>  [5758,]  109 #>  [5759,]  109 #>  [5760,]  108 #>  [5761,]  109 #>  [5762,]  108 #>  [5763,]  108 #>  [5764,]  108 #>  [5765,]  108 #>  [5766,]  108 #>  [5767,]  108 #>  [5768,]  109 #>  [5769,]  108 #>  [5770,]  109 #>  [5771,]  109 #>  [5772,]  108 #>  [5773,]  109 #>  [5774,]  108 #>  [5775,]  108 #>  [5776,]  109 #>  [5777,]  109 #>  [5778,]  108 #>  [5779,]  109 #>  [5780,]  108 #>  [5781,]  109 #>  [5782,]  108 #>  [5783,]  109 #>  [5784,]  108 #>  [5785,]  108 #>  [5786,]  109 #>  [5787,]  108 #>  [5788,]  108 #>  [5789,]  108 #>  [5790,]  109 #>  [5791,]  108 #>  [5792,]  108 #>  [5793,]  109 #>  [5794,]  109 #>  [5795,]  108 #>  [5796,]  109 #>  [5797,]  108 #>  [5798,]  108 #>  [5799,]  109 #>  [5800,]  109 #>  [5801,]  110 #>  [5802,]  110 #>  [5803,]  110 #>  [5804,]  110 #>  [5805,]  110 #>  [5806,]  110 #>  [5807,]  110 #>  [5808,]  110 #>  [5809,]  110 #>  [5810,]  110 #>  [5811,]  110 #>  [5812,]  110 #>  [5813,]  110 #>  [5814,]  110 #>  [5815,]  110 #>  [5816,]  110 #>  [5817,]  110 #>  [5818,]  110 #>  [5819,]  110 #>  [5820,]  110 #>  [5821,]  110 #>  [5822,]  110 #>  [5823,]  110 #>  [5824,]  110 #>  [5825,]  110 #>  [5826,]  110 #>  [5827,]  110 #>  [5828,]  110 #>  [5829,]  110 #>  [5830,]  110 #>  [5831,]  110 #>  [5832,]  110 #>  [5833,]  110 #>  [5834,]  110 #>  [5835,]  110 #>  [5836,]  110 #>  [5837,]  110 #>  [5838,]  110 #>  [5839,]  110 #>  [5840,]  110 #>  [5841,]  110 #>  [5842,]  110 #>  [5843,]  110 #>  [5844,]  110 #>  [5845,]  110 #>  [5846,]  110 #>  [5847,]  110 #>  [5848,]  110 #>  [5849,]  110 #>  [5850,]  110 #>  [5851,]  110 #>  [5852,]  110 #>  [5853,]  110 #>  [5854,]  110 #>  [5855,]  110 #>  [5856,]  110 #>  [5857,]  110 #>  [5858,]  110 #>  [5859,]  110 #>  [5860,]  110 #>  [5861,]  110 #>  [5862,]  110 #>  [5863,]  110 #>  [5864,]  110 #>  [5865,]  110 #>  [5866,]  110 #>  [5867,]  110 #>  [5868,]  110 #>  [5869,]  110 #>  [5870,]  110 #>  [5871,]  110 #>  [5872,]  110 #>  [5873,]  110 #>  [5874,]  110 #>  [5875,]  110 #>  [5876,]  110 #>  [5877,]  110 #>  [5878,]  110 #>  [5879,]  110 #>  [5880,]  110 #>  [5881,]  110 #>  [5882,]  110 #>  [5883,]  110 #>  [5884,]  110 #>  [5885,]  110 #>  [5886,]  110 #>  [5887,]  110 #>  [5888,]  110 #>  [5889,]  110 #>  [5890,]  110 #>  [5891,]  110 #>  [5892,]  110 #>  [5893,]  110 #>  [5894,]  110 #>  [5895,]  110 #>  [5896,]  110 #>  [5897,]  110 #>  [5898,]  110 #>  [5899,]  110 #>  [5900,]  110 #>  [5901,]  111 #>  [5902,]  111 #>  [5903,]  111 #>  [5904,]  111 #>  [5905,]  111 #>  [5906,]  111 #>  [5907,]  111 #>  [5908,]  111 #>  [5909,]  111 #>  [5910,]  111 #>  [5911,]  111 #>  [5912,]  111 #>  [5913,]  111 #>  [5914,]  111 #>  [5915,]  111 #>  [5916,]  111 #>  [5917,]  111 #>  [5918,]  111 #>  [5919,]  112 #>  [5920,]  112 #>  [5921,]  111 #>  [5922,]  112 #>  [5923,]  111 #>  [5924,]  111 #>  [5925,]  111 #>  [5926,]  111 #>  [5927,]  112 #>  [5928,]  111 #>  [5929,]  112 #>  [5930,]  111 #>  [5931,]  111 #>  [5932,]  111 #>  [5933,]  111 #>  [5934,]  111 #>  [5935,]  111 #>  [5936,]  112 #>  [5937,]  111 #>  [5938,]  111 #>  [5939,]  111 #>  [5940,]  111 #>  [5941,]  111 #>  [5942,]  111 #>  [5943,]  111 #>  [5944,]  111 #>  [5945,]  111 #>  [5946,]  111 #>  [5947,]  111 #>  [5948,]  111 #>  [5949,]  111 #>  [5950,]  111 #>  [5951,]  111 #>  [5952,]  111 #>  [5953,]  111 #>  [5954,]  111 #>  [5955,]  112 #>  [5956,]  111 #>  [5957,]  111 #>  [5958,]  112 #>  [5959,]  111 #>  [5960,]  111 #>  [5961,]  111 #>  [5962,]  111 #>  [5963,]  111 #>  [5964,]  112 #>  [5965,]  111 #>  [5966,]  112 #>  [5967,]  111 #>  [5968,]  111 #>  [5969,]  111 #>  [5970,]  111 #>  [5971,]  111 #>  [5972,]  111 #>  [5973,]  111 #>  [5974,]  111 #>  [5975,]  111 #>  [5976,]  111 #>  [5977,]  112 #>  [5978,]  111 #>  [5979,]  111 #>  [5980,]  111 #>  [5981,]  112 #>  [5982,]  111 #>  [5983,]  112 #>  [5984,]  111 #>  [5985,]  111 #>  [5986,]  111 #>  [5987,]  112 #>  [5988,]  111 #>  [5989,]  111 #>  [5990,]  111 #>  [5991,]  111 #>  [5992,]  111 #>  [5993,]  111 #>  [5994,]  111 #>  [5995,]  111 #>  [5996,]  111 #>  [5997,]  112 #>  [5998,]  111 #>  [5999,]  111 #>  [6000,]  112 #>  [6001,]  114 #>  [6002,]  114 #>  [6003,]  113 #>  [6004,]  113 #>  [6005,]  114 #>  [6006,]  114 #>  [6007,]  113 #>  [6008,]  113 #>  [6009,]  114 #>  [6010,]  113 #>  [6011,]  114 #>  [6012,]  113 #>  [6013,]  114 #>  [6014,]  113 #>  [6015,]  114 #>  [6016,]  113 #>  [6017,]  114 #>  [6018,]  114 #>  [6019,]  114 #>  [6020,]  114 #>  [6021,]  114 #>  [6022,]  114 #>  [6023,]  113 #>  [6024,]  114 #>  [6025,]  113 #>  [6026,]  113 #>  [6027,]  114 #>  [6028,]  114 #>  [6029,]  114 #>  [6030,]  114 #>  [6031,]  113 #>  [6032,]  113 #>  [6033,]  114 #>  [6034,]  114 #>  [6035,]  113 #>  [6036,]  114 #>  [6037,]  113 #>  [6038,]  114 #>  [6039,]  114 #>  [6040,]  113 #>  [6041,]  114 #>  [6042,]  114 #>  [6043,]  114 #>  [6044,]  113 #>  [6045,]  113 #>  [6046,]  113 #>  [6047,]  113 #>  [6048,]  114 #>  [6049,]  114 #>  [6050,]  114 #>  [6051,]  114 #>  [6052,]  113 #>  [6053,]  114 #>  [6054,]  114 #>  [6055,]  113 #>  [6056,]  114 #>  [6057,]  113 #>  [6058,]  114 #>  [6059,]  113 #>  [6060,]  113 #>  [6061,]  114 #>  [6062,]  114 #>  [6063,]  114 #>  [6064,]  114 #>  [6065,]  114 #>  [6066,]  114 #>  [6067,]  113 #>  [6068,]  113 #>  [6069,]  114 #>  [6070,]  114 #>  [6071,]  114 #>  [6072,]  113 #>  [6073,]  114 #>  [6074,]  113 #>  [6075,]  113 #>  [6076,]  113 #>  [6077,]  114 #>  [6078,]  113 #>  [6079,]  114 #>  [6080,]  113 #>  [6081,]  114 #>  [6082,]  114 #>  [6083,]  114 #>  [6084,]  114 #>  [6085,]  114 #>  [6086,]  113 #>  [6087,]  114 #>  [6088,]  113 #>  [6089,]  114 #>  [6090,]  114 #>  [6091,]  114 #>  [6092,]  113 #>  [6093,]  114 #>  [6094,]  114 #>  [6095,]  113 #>  [6096,]  113 #>  [6097,]  113 #>  [6098,]  113 #>  [6099,]  114 #>  [6100,]  114 #>  [6101,]  115 #>  [6102,]  115 #>  [6103,]  115 #>  [6104,]  115 #>  [6105,]  115 #>  [6106,]  115 #>  [6107,]  115 #>  [6108,]  116 #>  [6109,]  116 #>  [6110,]  115 #>  [6111,]  115 #>  [6112,]  115 #>  [6113,]  115 #>  [6114,]  115 #>  [6115,]  115 #>  [6116,]  115 #>  [6117,]  115 #>  [6118,]  115 #>  [6119,]  115 #>  [6120,]  115 #>  [6121,]  115 #>  [6122,]  115 #>  [6123,]  115 #>  [6124,]  115 #>  [6125,]  115 #>  [6126,]  116 #>  [6127,]  115 #>  [6128,]  115 #>  [6129,]  115 #>  [6130,]  115 #>  [6131,]  115 #>  [6132,]  115 #>  [6133,]  115 #>  [6134,]  115 #>  [6135,]  115 #>  [6136,]  115 #>  [6137,]  115 #>  [6138,]  115 #>  [6139,]  115 #>  [6140,]  115 #>  [6141,]  115 #>  [6142,]  115 #>  [6143,]  115 #>  [6144,]  115 #>  [6145,]  115 #>  [6146,]  115 #>  [6147,]  115 #>  [6148,]  115 #>  [6149,]  115 #>  [6150,]  115 #>  [6151,]  115 #>  [6152,]  115 #>  [6153,]  115 #>  [6154,]  115 #>  [6155,]  115 #>  [6156,]  116 #>  [6157,]  115 #>  [6158,]  115 #>  [6159,]  115 #>  [6160,]  115 #>  [6161,]  116 #>  [6162,]  115 #>  [6163,]  115 #>  [6164,]  115 #>  [6165,]  115 #>  [6166,]  115 #>  [6167,]  115 #>  [6168,]  115 #>  [6169,]  115 #>  [6170,]  115 #>  [6171,]  115 #>  [6172,]  115 #>  [6173,]  115 #>  [6174,]  115 #>  [6175,]  115 #>  [6176,]  116 #>  [6177,]  115 #>  [6178,]  115 #>  [6179,]  115 #>  [6180,]  115 #>  [6181,]  115 #>  [6182,]  115 #>  [6183,]  115 #>  [6184,]  115 #>  [6185,]  115 #>  [6186,]  115 #>  [6187,]  115 #>  [6188,]  115 #>  [6189,]  115 #>  [6190,]  115 #>  [6191,]  115 #>  [6192,]  115 #>  [6193,]  115 #>  [6194,]  115 #>  [6195,]  115 #>  [6196,]  115 #>  [6197,]  115 #>  [6198,]  115 #>  [6199,]  115 #>  [6200,]  115 #>  [6201,]  118 #>  [6202,]  117 #>  [6203,]  117 #>  [6204,]  117 #>  [6205,]  117 #>  [6206,]  117 #>  [6207,]  117 #>  [6208,]  117 #>  [6209,]  118 #>  [6210,]  117 #>  [6211,]  118 #>  [6212,]  117 #>  [6213,]  118 #>  [6214,]  117 #>  [6215,]  117 #>  [6216,]  117 #>  [6217,]  118 #>  [6218,]  118 #>  [6219,]  117 #>  [6220,]  118 #>  [6221,]  117 #>  [6222,]  117 #>  [6223,]  117 #>  [6224,]  117 #>  [6225,]  117 #>  [6226,]  117 #>  [6227,]  118 #>  [6228,]  118 #>  [6229,]  118 #>  [6230,]  117 #>  [6231,]  117 #>  [6232,]  117 #>  [6233,]  118 #>  [6234,]  117 #>  [6235,]  117 #>  [6236,]  118 #>  [6237,]  117 #>  [6238,]  118 #>  [6239,]  118 #>  [6240,]  117 #>  [6241,]  117 #>  [6242,]  118 #>  [6243,]  117 #>  [6244,]  117 #>  [6245,]  117 #>  [6246,]  117 #>  [6247,]  117 #>  [6248,]  117 #>  [6249,]  117 #>  [6250,]  117 #>  [6251,]  118 #>  [6252,]  117 #>  [6253,]  118 #>  [6254,]  118 #>  [6255,]  117 #>  [6256,]  118 #>  [6257,]  117 #>  [6258,]  118 #>  [6259,]  117 #>  [6260,]  117 #>  [6261,]  117 #>  [6262,]  118 #>  [6263,]  117 #>  [6264,]  117 #>  [6265,]  118 #>  [6266,]  118 #>  [6267,]  117 #>  [6268,]  117 #>  [6269,]  117 #>  [6270,]  117 #>  [6271,]  117 #>  [6272,]  117 #>  [6273,]  117 #>  [6274,]  117 #>  [6275,]  117 #>  [6276,]  117 #>  [6277,]  118 #>  [6278,]  117 #>  [6279,]  118 #>  [6280,]  117 #>  [6281,]  117 #>  [6282,]  118 #>  [6283,]  118 #>  [6284,]  118 #>  [6285,]  118 #>  [6286,]  117 #>  [6287,]  118 #>  [6288,]  117 #>  [6289,]  118 #>  [6290,]  117 #>  [6291,]  118 #>  [6292,]  117 #>  [6293,]  118 #>  [6294,]  118 #>  [6295,]  117 #>  [6296,]  117 #>  [6297,]  117 #>  [6298,]  117 #>  [6299,]  117 #>  [6300,]  117 #>  [6301,]  120 #>  [6302,]  120 #>  [6303,]  120 #>  [6304,]  120 #>  [6305,]  120 #>  [6306,]  120 #>  [6307,]  119 #>  [6308,]  120 #>  [6309,]  120 #>  [6310,]  120 #>  [6311,]  120 #>  [6312,]  120 #>  [6313,]  120 #>  [6314,]  120 #>  [6315,]  120 #>  [6316,]  120 #>  [6317,]  120 #>  [6318,]  120 #>  [6319,]  120 #>  [6320,]  120 #>  [6321,]  119 #>  [6322,]  120 #>  [6323,]  119 #>  [6324,]  120 #>  [6325,]  120 #>  [6326,]  120 #>  [6327,]  120 #>  [6328,]  120 #>  [6329,]  120 #>  [6330,]  119 #>  [6331,]  120 #>  [6332,]  120 #>  [6333,]  120 #>  [6334,]  120 #>  [6335,]  120 #>  [6336,]  120 #>  [6337,]  120 #>  [6338,]  120 #>  [6339,]  119 #>  [6340,]  120 #>  [6341,]  120 #>  [6342,]  120 #>  [6343,]  120 #>  [6344,]  120 #>  [6345,]  120 #>  [6346,]  120 #>  [6347,]  120 #>  [6348,]  120 #>  [6349,]  119 #>  [6350,]  120 #>  [6351,]  120 #>  [6352,]  120 #>  [6353,]  120 #>  [6354,]  119 #>  [6355,]  120 #>  [6356,]  120 #>  [6357,]  120 #>  [6358,]  120 #>  [6359,]  120 #>  [6360,]  120 #>  [6361,]  120 #>  [6362,]  119 #>  [6363,]  120 #>  [6364,]  120 #>  [6365,]  120 #>  [6366,]  120 #>  [6367,]  120 #>  [6368,]  120 #>  [6369,]  120 #>  [6370,]  119 #>  [6371,]  120 #>  [6372,]  120 #>  [6373,]  120 #>  [6374,]  120 #>  [6375,]  120 #>  [6376,]  120 #>  [6377,]  120 #>  [6378,]  120 #>  [6379,]  120 #>  [6380,]  119 #>  [6381,]  120 #>  [6382,]  120 #>  [6383,]  119 #>  [6384,]  120 #>  [6385,]  120 #>  [6386,]  120 #>  [6387,]  120 #>  [6388,]  120 #>  [6389,]  120 #>  [6390,]  120 #>  [6391,]  120 #>  [6392,]  120 #>  [6393,]  120 #>  [6394,]  120 #>  [6395,]  119 #>  [6396,]  120 #>  [6397,]  120 #>  [6398,]  119 #>  [6399,]  120 #>  [6400,]  120 #>  [6401,]  121 #>  [6402,]  121 #>  [6403,]  121 #>  [6404,]  121 #>  [6405,]  121 #>  [6406,]  121 #>  [6407,]  121 #>  [6408,]  121 #>  [6409,]  121 #>  [6410,]  121 #>  [6411,]  121 #>  [6412,]  121 #>  [6413,]  121 #>  [6414,]  121 #>  [6415,]  121 #>  [6416,]  121 #>  [6417,]  121 #>  [6418,]  121 #>  [6419,]  121 #>  [6420,]  121 #>  [6421,]  121 #>  [6422,]  121 #>  [6423,]  121 #>  [6424,]  121 #>  [6425,]  121 #>  [6426,]  121 #>  [6427,]  121 #>  [6428,]  121 #>  [6429,]  121 #>  [6430,]  121 #>  [6431,]  121 #>  [6432,]  121 #>  [6433,]  121 #>  [6434,]  121 #>  [6435,]  121 #>  [6436,]  121 #>  [6437,]  121 #>  [6438,]  121 #>  [6439,]  121 #>  [6440,]  121 #>  [6441,]  121 #>  [6442,]  121 #>  [6443,]  121 #>  [6444,]  121 #>  [6445,]  121 #>  [6446,]  121 #>  [6447,]  121 #>  [6448,]  121 #>  [6449,]  121 #>  [6450,]  121 #>  [6451,]  121 #>  [6452,]  121 #>  [6453,]  121 #>  [6454,]  121 #>  [6455,]  121 #>  [6456,]  121 #>  [6457,]  121 #>  [6458,]  121 #>  [6459,]  121 #>  [6460,]  121 #>  [6461,]  121 #>  [6462,]  121 #>  [6463,]  121 #>  [6464,]  121 #>  [6465,]  121 #>  [6466,]  121 #>  [6467,]  121 #>  [6468,]  121 #>  [6469,]  121 #>  [6470,]  121 #>  [6471,]  121 #>  [6472,]  121 #>  [6473,]  121 #>  [6474,]  121 #>  [6475,]  121 #>  [6476,]  121 #>  [6477,]  121 #>  [6478,]  121 #>  [6479,]  121 #>  [6480,]  121 #>  [6481,]  121 #>  [6482,]  121 #>  [6483,]  121 #>  [6484,]  121 #>  [6485,]  121 #>  [6486,]  121 #>  [6487,]  121 #>  [6488,]  121 #>  [6489,]  121 #>  [6490,]  121 #>  [6491,]  121 #>  [6492,]  121 #>  [6493,]  121 #>  [6494,]  121 #>  [6495,]  121 #>  [6496,]  121 #>  [6497,]  121 #>  [6498,]  121 #>  [6499,]  121 #>  [6500,]  121 #>  [6501,]  122 #>  [6502,]  122 #>  [6503,]  122 #>  [6504,]  122 #>  [6505,]  123 #>  [6506,]  122 #>  [6507,]  122 #>  [6508,]  122 #>  [6509,]  122 #>  [6510,]  122 #>  [6511,]  122 #>  [6512,]  122 #>  [6513,]  122 #>  [6514,]  122 #>  [6515,]  122 #>  [6516,]  122 #>  [6517,]  122 #>  [6518,]  123 #>  [6519,]  122 #>  [6520,]  122 #>  [6521,]  122 #>  [6522,]  122 #>  [6523,]  122 #>  [6524,]  122 #>  [6525,]  122 #>  [6526,]  122 #>  [6527,]  122 #>  [6528,]  122 #>  [6529,]  122 #>  [6530,]  122 #>  [6531,]  122 #>  [6532,]  122 #>  [6533,]  122 #>  [6534,]  122 #>  [6535,]  122 #>  [6536,]  122 #>  [6537,]  122 #>  [6538,]  122 #>  [6539,]  122 #>  [6540,]  122 #>  [6541,]  122 #>  [6542,]  122 #>  [6543,]  122 #>  [6544,]  122 #>  [6545,]  122 #>  [6546,]  122 #>  [6547,]  122 #>  [6548,]  122 #>  [6549,]  122 #>  [6550,]  122 #>  [6551,]  122 #>  [6552,]  122 #>  [6553,]  122 #>  [6554,]  122 #>  [6555,]  122 #>  [6556,]  122 #>  [6557,]  122 #>  [6558,]  122 #>  [6559,]  122 #>  [6560,]  122 #>  [6561,]  122 #>  [6562,]  122 #>  [6563,]  122 #>  [6564,]  122 #>  [6565,]  122 #>  [6566,]  122 #>  [6567,]  122 #>  [6568,]  122 #>  [6569,]  122 #>  [6570,]  122 #>  [6571,]  123 #>  [6572,]  122 #>  [6573,]  122 #>  [6574,]  122 #>  [6575,]  123 #>  [6576,]  122 #>  [6577,]  122 #>  [6578,]  122 #>  [6579,]  122 #>  [6580,]  122 #>  [6581,]  122 #>  [6582,]  122 #>  [6583,]  122 #>  [6584,]  122 #>  [6585,]  122 #>  [6586,]  122 #>  [6587,]  122 #>  [6588,]  122 #>  [6589,]  122 #>  [6590,]  122 #>  [6591,]  122 #>  [6592,]  122 #>  [6593,]  122 #>  [6594,]  122 #>  [6595,]  122 #>  [6596,]  122 #>  [6597,]  122 #>  [6598,]  122 #>  [6599,]  122 #>  [6600,]  123 #>  [6601,]  124 #>  [6602,]  124 #>  [6603,]  124 #>  [6604,]  124 #>  [6605,]  124 #>  [6606,]  124 #>  [6607,]  124 #>  [6608,]  124 #>  [6609,]  124 #>  [6610,]  124 #>  [6611,]  124 #>  [6612,]  124 #>  [6613,]  124 #>  [6614,]  124 #>  [6615,]  124 #>  [6616,]  124 #>  [6617,]  124 #>  [6618,]  124 #>  [6619,]  124 #>  [6620,]  124 #>  [6621,]  124 #>  [6622,]  124 #>  [6623,]  124 #>  [6624,]  124 #>  [6625,]  124 #>  [6626,]  124 #>  [6627,]  124 #>  [6628,]  124 #>  [6629,]  124 #>  [6630,]  124 #>  [6631,]  124 #>  [6632,]  124 #>  [6633,]  124 #>  [6634,]  124 #>  [6635,]  124 #>  [6636,]  124 #>  [6637,]  124 #>  [6638,]  124 #>  [6639,]  124 #>  [6640,]  124 #>  [6641,]  124 #>  [6642,]  124 #>  [6643,]  124 #>  [6644,]  124 #>  [6645,]  124 #>  [6646,]  124 #>  [6647,]  124 #>  [6648,]  124 #>  [6649,]  124 #>  [6650,]  124 #>  [6651,]  124 #>  [6652,]  124 #>  [6653,]  124 #>  [6654,]  124 #>  [6655,]  124 #>  [6656,]  124 #>  [6657,]  124 #>  [6658,]  124 #>  [6659,]  124 #>  [6660,]  124 #>  [6661,]  124 #>  [6662,]  124 #>  [6663,]  124 #>  [6664,]  124 #>  [6665,]  124 #>  [6666,]  124 #>  [6667,]  124 #>  [6668,]  124 #>  [6669,]  124 #>  [6670,]  124 #>  [6671,]  124 #>  [6672,]  124 #>  [6673,]  124 #>  [6674,]  124 #>  [6675,]  124 #>  [6676,]  124 #>  [6677,]  124 #>  [6678,]  124 #>  [6679,]  124 #>  [6680,]  124 #>  [6681,]  124 #>  [6682,]  124 #>  [6683,]  124 #>  [6684,]  124 #>  [6685,]  124 #>  [6686,]  124 #>  [6687,]  124 #>  [6688,]  124 #>  [6689,]  124 #>  [6690,]  124 #>  [6691,]  124 #>  [6692,]  124 #>  [6693,]  124 #>  [6694,]  124 #>  [6695,]  124 #>  [6696,]  124 #>  [6697,]  124 #>  [6698,]  124 #>  [6699,]  124 #>  [6700,]  124 #>  [6701,]  125 #>  [6702,]  126 #>  [6703,]  125 #>  [6704,]  125 #>  [6705,]  125 #>  [6706,]  125 #>  [6707,]  125 #>  [6708,]  125 #>  [6709,]  126 #>  [6710,]  126 #>  [6711,]  125 #>  [6712,]  126 #>  [6713,]  126 #>  [6714,]  125 #>  [6715,]  125 #>  [6716,]  125 #>  [6717,]  126 #>  [6718,]  126 #>  [6719,]  125 #>  [6720,]  126 #>  [6721,]  126 #>  [6722,]  125 #>  [6723,]  126 #>  [6724,]  126 #>  [6725,]  125 #>  [6726,]  125 #>  [6727,]  126 #>  [6728,]  125 #>  [6729,]  126 #>  [6730,]  125 #>  [6731,]  126 #>  [6732,]  126 #>  [6733,]  126 #>  [6734,]  125 #>  [6735,]  125 #>  [6736,]  126 #>  [6737,]  125 #>  [6738,]  125 #>  [6739,]  125 #>  [6740,]  126 #>  [6741,]  125 #>  [6742,]  125 #>  [6743,]  125 #>  [6744,]  125 #>  [6745,]  125 #>  [6746,]  125 #>  [6747,]  125 #>  [6748,]  125 #>  [6749,]  125 #>  [6750,]  125 #>  [6751,]  125 #>  [6752,]  125 #>  [6753,]  126 #>  [6754,]  125 #>  [6755,]  125 #>  [6756,]  125 #>  [6757,]  125 #>  [6758,]  125 #>  [6759,]  125 #>  [6760,]  126 #>  [6761,]  126 #>  [6762,]  125 #>  [6763,]  126 #>  [6764,]  125 #>  [6765,]  125 #>  [6766,]  125 #>  [6767,]  125 #>  [6768,]  125 #>  [6769,]  125 #>  [6770,]  126 #>  [6771,]  125 #>  [6772,]  125 #>  [6773,]  125 #>  [6774,]  125 #>  [6775,]  126 #>  [6776,]  125 #>  [6777,]  125 #>  [6778,]  125 #>  [6779,]  125 #>  [6780,]  126 #>  [6781,]  126 #>  [6782,]  125 #>  [6783,]  126 #>  [6784,]  126 #>  [6785,]  125 #>  [6786,]  126 #>  [6787,]  125 #>  [6788,]  126 #>  [6789,]  125 #>  [6790,]  125 #>  [6791,]  125 #>  [6792,]  125 #>  [6793,]  125 #>  [6794,]  125 #>  [6795,]  125 #>  [6796,]  125 #>  [6797,]  125 #>  [6798,]  125 #>  [6799,]  125 #>  [6800,]  125 #>  [6801,]  128 #>  [6802,]  128 #>  [6803,]  127 #>  [6804,]  128 #>  [6805,]  127 #>  [6806,]  128 #>  [6807,]  127 #>  [6808,]  127 #>  [6809,]  128 #>  [6810,]  128 #>  [6811,]  128 #>  [6812,]  128 #>  [6813,]  127 #>  [6814,]  128 #>  [6815,]  128 #>  [6816,]  127 #>  [6817,]  127 #>  [6818,]  128 #>  [6819,]  128 #>  [6820,]  127 #>  [6821,]  128 #>  [6822,]  127 #>  [6823,]  128 #>  [6824,]  127 #>  [6825,]  127 #>  [6826,]  128 #>  [6827,]  128 #>  [6828,]  128 #>  [6829,]  127 #>  [6830,]  128 #>  [6831,]  128 #>  [6832,]  128 #>  [6833,]  128 #>  [6834,]  128 #>  [6835,]  128 #>  [6836,]  128 #>  [6837,]  128 #>  [6838,]  128 #>  [6839,]  127 #>  [6840,]  127 #>  [6841,]  128 #>  [6842,]  128 #>  [6843,]  127 #>  [6844,]  127 #>  [6845,]  127 #>  [6846,]  127 #>  [6847,]  127 #>  [6848,]  128 #>  [6849,]  127 #>  [6850,]  127 #>  [6851,]  127 #>  [6852,]  128 #>  [6853,]  127 #>  [6854,]  127 #>  [6855,]  127 #>  [6856,]  127 #>  [6857,]  128 #>  [6858,]  128 #>  [6859,]  127 #>  [6860,]  128 #>  [6861,]  128 #>  [6862,]  128 #>  [6863,]  127 #>  [6864,]  128 #>  [6865,]  127 #>  [6866,]  127 #>  [6867,]  128 #>  [6868,]  128 #>  [6869,]  128 #>  [6870,]  127 #>  [6871,]  127 #>  [6872,]  127 #>  [6873,]  128 #>  [6874,]  128 #>  [6875,]  128 #>  [6876,]  127 #>  [6877,]  127 #>  [6878,]  127 #>  [6879,]  127 #>  [6880,]  128 #>  [6881,]  128 #>  [6882,]  128 #>  [6883,]  127 #>  [6884,]  127 #>  [6885,]  128 #>  [6886,]  127 #>  [6887,]  128 #>  [6888,]  128 #>  [6889,]  127 #>  [6890,]  127 #>  [6891,]  128 #>  [6892,]  128 #>  [6893,]  128 #>  [6894,]  127 #>  [6895,]  128 #>  [6896,]  128 #>  [6897,]  128 #>  [6898,]  127 #>  [6899,]  128 #>  [6900,]  127 #>  [6901,]  130 #>  [6902,]  129 #>  [6903,]  129 #>  [6904,]  129 #>  [6905,]  129 #>  [6906,]  130 #>  [6907,]  129 #>  [6908,]  130 #>  [6909,]  130 #>  [6910,]  129 #>  [6911,]  129 #>  [6912,]  130 #>  [6913,]  129 #>  [6914,]  129 #>  [6915,]  130 #>  [6916,]  129 #>  [6917,]  129 #>  [6918,]  129 #>  [6919,]  129 #>  [6920,]  130 #>  [6921,]  129 #>  [6922,]  129 #>  [6923,]  129 #>  [6924,]  129 #>  [6925,]  129 #>  [6926,]  130 #>  [6927,]  129 #>  [6928,]  129 #>  [6929,]  129 #>  [6930,]  129 #>  [6931,]  129 #>  [6932,]  129 #>  [6933,]  130 #>  [6934,]  129 #>  [6935,]  129 #>  [6936,]  129 #>  [6937,]  129 #>  [6938,]  129 #>  [6939,]  129 #>  [6940,]  129 #>  [6941,]  129 #>  [6942,]  129 #>  [6943,]  130 #>  [6944,]  129 #>  [6945,]  130 #>  [6946,]  130 #>  [6947,]  129 #>  [6948,]  129 #>  [6949,]  129 #>  [6950,]  130 #>  [6951,]  130 #>  [6952,]  129 #>  [6953,]  130 #>  [6954,]  129 #>  [6955,]  130 #>  [6956,]  130 #>  [6957,]  130 #>  [6958,]  130 #>  [6959,]  129 #>  [6960,]  130 #>  [6961,]  130 #>  [6962,]  129 #>  [6963,]  129 #>  [6964,]  130 #>  [6965,]  130 #>  [6966,]  130 #>  [6967,]  129 #>  [6968,]  130 #>  [6969,]  129 #>  [6970,]  129 #>  [6971,]  130 #>  [6972,]  130 #>  [6973,]  130 #>  [6974,]  130 #>  [6975,]  129 #>  [6976,]  130 #>  [6977,]  129 #>  [6978,]  130 #>  [6979,]  129 #>  [6980,]  129 #>  [6981,]  130 #>  [6982,]  129 #>  [6983,]  129 #>  [6984,]  129 #>  [6985,]  129 #>  [6986,]  129 #>  [6987,]  129 #>  [6988,]  129 #>  [6989,]  129 #>  [6990,]  129 #>  [6991,]  129 #>  [6992,]  130 #>  [6993,]  129 #>  [6994,]  130 #>  [6995,]  129 #>  [6996,]  130 #>  [6997,]  130 #>  [6998,]  129 #>  [6999,]  129 #>  [7000,]  129 #>  [7001,]  132 #>  [7002,]  132 #>  [7003,]  132 #>  [7004,]  131 #>  [7005,]  132 #>  [7006,]  132 #>  [7007,]  132 #>  [7008,]  131 #>  [7009,]  131 #>  [7010,]  132 #>  [7011,]  131 #>  [7012,]  132 #>  [7013,]  131 #>  [7014,]  132 #>  [7015,]  132 #>  [7016,]  132 #>  [7017,]  131 #>  [7018,]  132 #>  [7019,]  132 #>  [7020,]  132 #>  [7021,]  132 #>  [7022,]  131 #>  [7023,]  132 #>  [7024,]  132 #>  [7025,]  132 #>  [7026,]  132 #>  [7027,]  131 #>  [7028,]  132 #>  [7029,]  132 #>  [7030,]  132 #>  [7031,]  132 #>  [7032,]  132 #>  [7033,]  132 #>  [7034,]  132 #>  [7035,]  131 #>  [7036,]  132 #>  [7037,]  132 #>  [7038,]  132 #>  [7039,]  132 #>  [7040,]  132 #>  [7041,]  132 #>  [7042,]  132 #>  [7043,]  131 #>  [7044,]  131 #>  [7045,]  132 #>  [7046,]  132 #>  [7047,]  132 #>  [7048,]  132 #>  [7049,]  131 #>  [7050,]  132 #>  [7051,]  132 #>  [7052,]  131 #>  [7053,]  132 #>  [7054,]  132 #>  [7055,]  131 #>  [7056,]  132 #>  [7057,]  132 #>  [7058,]  131 #>  [7059,]  132 #>  [7060,]  132 #>  [7061,]  132 #>  [7062,]  132 #>  [7063,]  132 #>  [7064,]  132 #>  [7065,]  132 #>  [7066,]  131 #>  [7067,]  132 #>  [7068,]  132 #>  [7069,]  131 #>  [7070,]  132 #>  [7071,]  132 #>  [7072,]  132 #>  [7073,]  132 #>  [7074,]  132 #>  [7075,]  132 #>  [7076,]  132 #>  [7077,]  132 #>  [7078,]  132 #>  [7079,]  131 #>  [7080,]  131 #>  [7081,]  131 #>  [7082,]  131 #>  [7083,]  131 #>  [7084,]  132 #>  [7085,]  132 #>  [7086,]  132 #>  [7087,]  131 #>  [7088,]  131 #>  [7089,]  131 #>  [7090,]  131 #>  [7091,]  132 #>  [7092,]  131 #>  [7093,]  132 #>  [7094,]  132 #>  [7095,]  131 #>  [7096,]  132 #>  [7097,]  132 #>  [7098,]  132 #>  [7099,]  131 #>  [7100,]  132 #>  [7101,]  134 #>  [7102,]  134 #>  [7103,]  134 #>  [7104,]  134 #>  [7105,]  134 #>  [7106,]  134 #>  [7107,]  134 #>  [7108,]  134 #>  [7109,]  134 #>  [7110,]  134 #>  [7111,]  134 #>  [7112,]  134 #>  [7113,]  134 #>  [7114,]  134 #>  [7115,]  133 #>  [7116,]  134 #>  [7117,]  133 #>  [7118,]  134 #>  [7119,]  134 #>  [7120,]  134 #>  [7121,]  134 #>  [7122,]  134 #>  [7123,]  134 #>  [7124,]  134 #>  [7125,]  134 #>  [7126,]  134 #>  [7127,]  134 #>  [7128,]  134 #>  [7129,]  134 #>  [7130,]  134 #>  [7131,]  133 #>  [7132,]  134 #>  [7133,]  134 #>  [7134,]  133 #>  [7135,]  134 #>  [7136,]  134 #>  [7137,]  133 #>  [7138,]  134 #>  [7139,]  134 #>  [7140,]  134 #>  [7141,]  134 #>  [7142,]  133 #>  [7143,]  133 #>  [7144,]  133 #>  [7145,]  134 #>  [7146,]  134 #>  [7147,]  134 #>  [7148,]  134 #>  [7149,]  134 #>  [7150,]  134 #>  [7151,]  134 #>  [7152,]  134 #>  [7153,]  134 #>  [7154,]  134 #>  [7155,]  134 #>  [7156,]  134 #>  [7157,]  134 #>  [7158,]  134 #>  [7159,]  134 #>  [7160,]  134 #>  [7161,]  134 #>  [7162,]  134 #>  [7163,]  133 #>  [7164,]  134 #>  [7165,]  134 #>  [7166,]  134 #>  [7167,]  134 #>  [7168,]  134 #>  [7169,]  134 #>  [7170,]  134 #>  [7171,]  134 #>  [7172,]  134 #>  [7173,]  134 #>  [7174,]  134 #>  [7175,]  133 #>  [7176,]  134 #>  [7177,]  134 #>  [7178,]  133 #>  [7179,]  133 #>  [7180,]  134 #>  [7181,]  134 #>  [7182,]  134 #>  [7183,]  134 #>  [7184,]  134 #>  [7185,]  134 #>  [7186,]  134 #>  [7187,]  134 #>  [7188,]  134 #>  [7189,]  134 #>  [7190,]  134 #>  [7191,]  134 #>  [7192,]  134 #>  [7193,]  134 #>  [7194,]  134 #>  [7195,]  133 #>  [7196,]  134 #>  [7197,]  134 #>  [7198,]  134 #>  [7199,]  134 #>  [7200,]  133 #>  [7201,]  136 #>  [7202,]  136 #>  [7203,]  135 #>  [7204,]  136 #>  [7205,]  135 #>  [7206,]  136 #>  [7207,]  135 #>  [7208,]  135 #>  [7209,]  136 #>  [7210,]  136 #>  [7211,]  136 #>  [7212,]  136 #>  [7213,]  135 #>  [7214,]  136 #>  [7215,]  136 #>  [7216,]  135 #>  [7217,]  135 #>  [7218,]  136 #>  [7219,]  136 #>  [7220,]  135 #>  [7221,]  136 #>  [7222,]  135 #>  [7223,]  136 #>  [7224,]  135 #>  [7225,]  135 #>  [7226,]  136 #>  [7227,]  136 #>  [7228,]  135 #>  [7229,]  135 #>  [7230,]  136 #>  [7231,]  136 #>  [7232,]  136 #>  [7233,]  136 #>  [7234,]  136 #>  [7235,]  136 #>  [7236,]  136 #>  [7237,]  136 #>  [7238,]  136 #>  [7239,]  135 #>  [7240,]  135 #>  [7241,]  136 #>  [7242,]  136 #>  [7243,]  135 #>  [7244,]  135 #>  [7245,]  135 #>  [7246,]  135 #>  [7247,]  135 #>  [7248,]  136 #>  [7249,]  135 #>  [7250,]  135 #>  [7251,]  135 #>  [7252,]  136 #>  [7253,]  135 #>  [7254,]  135 #>  [7255,]  135 #>  [7256,]  135 #>  [7257,]  136 #>  [7258,]  136 #>  [7259,]  135 #>  [7260,]  136 #>  [7261,]  136 #>  [7262,]  136 #>  [7263,]  135 #>  [7264,]  136 #>  [7265,]  135 #>  [7266,]  135 #>  [7267,]  136 #>  [7268,]  136 #>  [7269,]  136 #>  [7270,]  135 #>  [7271,]  135 #>  [7272,]  135 #>  [7273,]  136 #>  [7274,]  136 #>  [7275,]  136 #>  [7276,]  135 #>  [7277,]  135 #>  [7278,]  135 #>  [7279,]  135 #>  [7280,]  136 #>  [7281,]  135 #>  [7282,]  136 #>  [7283,]  135 #>  [7284,]  135 #>  [7285,]  136 #>  [7286,]  135 #>  [7287,]  136 #>  [7288,]  136 #>  [7289,]  135 #>  [7290,]  135 #>  [7291,]  136 #>  [7292,]  136 #>  [7293,]  136 #>  [7294,]  135 #>  [7295,]  136 #>  [7296,]  136 #>  [7297,]  136 #>  [7298,]  135 #>  [7299,]  136 #>  [7300,]  135 #>  [7301,]  138 #>  [7302,]  137 #>  [7303,]  138 #>  [7304,]  138 #>  [7305,]  138 #>  [7306,]  137 #>  [7307,]  138 #>  [7308,]  138 #>  [7309,]  138 #>  [7310,]  138 #>  [7311,]  137 #>  [7312,]  137 #>  [7313,]  138 #>  [7314,]  138 #>  [7315,]  137 #>  [7316,]  138 #>  [7317,]  137 #>  [7318,]  138 #>  [7319,]  138 #>  [7320,]  138 #>  [7321,]  138 #>  [7322,]  138 #>  [7323,]  137 #>  [7324,]  138 #>  [7325,]  138 #>  [7326,]  138 #>  [7327,]  138 #>  [7328,]  138 #>  [7329,]  137 #>  [7330,]  137 #>  [7331,]  137 #>  [7332,]  138 #>  [7333,]  138 #>  [7334,]  137 #>  [7335,]  137 #>  [7336,]  138 #>  [7337,]  137 #>  [7338,]  138 #>  [7339,]  138 #>  [7340,]  138 #>  [7341,]  138 #>  [7342,]  137 #>  [7343,]  137 #>  [7344,]  137 #>  [7345,]  138 #>  [7346,]  138 #>  [7347,]  137 #>  [7348,]  137 #>  [7349,]  138 #>  [7350,]  138 #>  [7351,]  138 #>  [7352,]  138 #>  [7353,]  138 #>  [7354,]  138 #>  [7355,]  138 #>  [7356,]  137 #>  [7357,]  138 #>  [7358,]  138 #>  [7359,]  138 #>  [7360,]  137 #>  [7361,]  137 #>  [7362,]  138 #>  [7363,]  137 #>  [7364,]  137 #>  [7365,]  137 #>  [7366,]  137 #>  [7367,]  138 #>  [7368,]  138 #>  [7369,]  138 #>  [7370,]  137 #>  [7371,]  138 #>  [7372,]  138 #>  [7373,]  138 #>  [7374,]  138 #>  [7375,]  137 #>  [7376,]  138 #>  [7377,]  138 #>  [7378,]  137 #>  [7379,]  137 #>  [7380,]  138 #>  [7381,]  137 #>  [7382,]  138 #>  [7383,]  138 #>  [7384,]  138 #>  [7385,]  138 #>  [7386,]  138 #>  [7387,]  138 #>  [7388,]  138 #>  [7389,]  138 #>  [7390,]  138 #>  [7391,]  138 #>  [7392,]  137 #>  [7393,]  138 #>  [7394,]  137 #>  [7395,]  137 #>  [7396,]  137 #>  [7397,]  138 #>  [7398,]  138 #>  [7399,]  138 #>  [7400,]  137 #>  [7401,]  139 #>  [7402,]  140 #>  [7403,]  139 #>  [7404,]  139 #>  [7405,]  140 #>  [7406,]  139 #>  [7407,]  140 #>  [7408,]  139 #>  [7409,]  140 #>  [7410,]  140 #>  [7411,]  139 #>  [7412,]  140 #>  [7413,]  140 #>  [7414,]  139 #>  [7415,]  140 #>  [7416,]  139 #>  [7417,]  140 #>  [7418,]  140 #>  [7419,]  139 #>  [7420,]  140 #>  [7421,]  140 #>  [7422,]  140 #>  [7423,]  140 #>  [7424,]  140 #>  [7425,]  140 #>  [7426,]  139 #>  [7427,]  140 #>  [7428,]  139 #>  [7429,]  140 #>  [7430,]  140 #>  [7431,]  140 #>  [7432,]  140 #>  [7433,]  140 #>  [7434,]  139 #>  [7435,]  139 #>  [7436,]  140 #>  [7437,]  139 #>  [7438,]  139 #>  [7439,]  140 #>  [7440,]  140 #>  [7441,]  140 #>  [7442,]  139 #>  [7443,]  140 #>  [7444,]  140 #>  [7445,]  139 #>  [7446,]  140 #>  [7447,]  140 #>  [7448,]  140 #>  [7449,]  139 #>  [7450,]  140 #>  [7451,]  140 #>  [7452,]  139 #>  [7453,]  140 #>  [7454,]  140 #>  [7455,]  139 #>  [7456,]  139 #>  [7457,]  140 #>  [7458,]  140 #>  [7459,]  139 #>  [7460,]  140 #>  [7461,]  140 #>  [7462,]  139 #>  [7463,]  140 #>  [7464,]  139 #>  [7465,]  139 #>  [7466,]  140 #>  [7467,]  140 #>  [7468,]  139 #>  [7469,]  139 #>  [7470,]  140 #>  [7471,]  140 #>  [7472,]  139 #>  [7473,]  139 #>  [7474,]  140 #>  [7475,]  140 #>  [7476,]  140 #>  [7477,]  139 #>  [7478,]  140 #>  [7479,]  139 #>  [7480,]  140 #>  [7481,]  140 #>  [7482,]  140 #>  [7483,]  140 #>  [7484,]  140 #>  [7485,]  140 #>  [7486,]  140 #>  [7487,]  140 #>  [7488,]  140 #>  [7489,]  139 #>  [7490,]  140 #>  [7491,]  139 #>  [7492,]  140 #>  [7493,]  140 #>  [7494,]  139 #>  [7495,]  140 #>  [7496,]  139 #>  [7497,]  139 #>  [7498,]  140 #>  [7499,]  140 #>  [7500,]  139 #>  [7501,]  141 #>  [7502,]  142 #>  [7503,]  142 #>  [7504,]  141 #>  [7505,]  141 #>  [7506,]  142 #>  [7507,]  141 #>  [7508,]  141 #>  [7509,]  141 #>  [7510,]  141 #>  [7511,]  141 #>  [7512,]  142 #>  [7513,]  141 #>  [7514,]  141 #>  [7515,]  141 #>  [7516,]  141 #>  [7517,]  141 #>  [7518,]  142 #>  [7519,]  142 #>  [7520,]  142 #>  [7521,]  141 #>  [7522,]  141 #>  [7523,]  141 #>  [7524,]  141 #>  [7525,]  142 #>  [7526,]  141 #>  [7527,]  141 #>  [7528,]  142 #>  [7529,]  141 #>  [7530,]  141 #>  [7531,]  142 #>  [7532,]  141 #>  [7533,]  142 #>  [7534,]  142 #>  [7535,]  141 #>  [7536,]  141 #>  [7537,]  141 #>  [7538,]  141 #>  [7539,]  141 #>  [7540,]  141 #>  [7541,]  141 #>  [7542,]  141 #>  [7543,]  141 #>  [7544,]  141 #>  [7545,]  141 #>  [7546,]  141 #>  [7547,]  141 #>  [7548,]  141 #>  [7549,]  141 #>  [7550,]  141 #>  [7551,]  141 #>  [7552,]  141 #>  [7553,]  141 #>  [7554,]  141 #>  [7555,]  141 #>  [7556,]  141 #>  [7557,]  141 #>  [7558,]  141 #>  [7559,]  141 #>  [7560,]  142 #>  [7561,]  141 #>  [7562,]  141 #>  [7563,]  141 #>  [7564,]  141 #>  [7565,]  142 #>  [7566,]  141 #>  [7567,]  141 #>  [7568,]  141 #>  [7569,]  141 #>  [7570,]  142 #>  [7571,]  142 #>  [7572,]  141 #>  [7573,]  142 #>  [7574,]  141 #>  [7575,]  141 #>  [7576,]  141 #>  [7577,]  141 #>  [7578,]  141 #>  [7579,]  141 #>  [7580,]  141 #>  [7581,]  141 #>  [7582,]  141 #>  [7583,]  141 #>  [7584,]  142 #>  [7585,]  141 #>  [7586,]  141 #>  [7587,]  141 #>  [7588,]  141 #>  [7589,]  141 #>  [7590,]  141 #>  [7591,]  141 #>  [7592,]  141 #>  [7593,]  142 #>  [7594,]  141 #>  [7595,]  141 #>  [7596,]  141 #>  [7597,]  142 #>  [7598,]  142 #>  [7599,]  141 #>  [7600,]  142 #>  [7601,]  144 #>  [7602,]  144 #>  [7603,]  143 #>  [7604,]  143 #>  [7605,]  143 #>  [7606,]  144 #>  [7607,]  143 #>  [7608,]  143 #>  [7609,]  143 #>  [7610,]  143 #>  [7611,]  143 #>  [7612,]  143 #>  [7613,]  144 #>  [7614,]  144 #>  [7615,]  144 #>  [7616,]  144 #>  [7617,]  144 #>  [7618,]  143 #>  [7619,]  143 #>  [7620,]  143 #>  [7621,]  144 #>  [7622,]  143 #>  [7623,]  143 #>  [7624,]  143 #>  [7625,]  143 #>  [7626,]  143 #>  [7627,]  143 #>  [7628,]  143 #>  [7629,]  144 #>  [7630,]  143 #>  [7631,]  143 #>  [7632,]  143 #>  [7633,]  144 #>  [7634,]  143 #>  [7635,]  144 #>  [7636,]  143 #>  [7637,]  143 #>  [7638,]  143 #>  [7639,]  143 #>  [7640,]  143 #>  [7641,]  144 #>  [7642,]  143 #>  [7643,]  143 #>  [7644,]  144 #>  [7645,]  143 #>  [7646,]  143 #>  [7647,]  143 #>  [7648,]  143 #>  [7649,]  143 #>  [7650,]  144 #>  [7651,]  143 #>  [7652,]  143 #>  [7653,]  143 #>  [7654,]  143 #>  [7655,]  143 #>  [7656,]  143 #>  [7657,]  143 #>  [7658,]  143 #>  [7659,]  144 #>  [7660,]  143 #>  [7661,]  144 #>  [7662,]  143 #>  [7663,]  143 #>  [7664,]  143 #>  [7665,]  143 #>  [7666,]  143 #>  [7667,]  143 #>  [7668,]  144 #>  [7669,]  143 #>  [7670,]  144 #>  [7671,]  143 #>  [7672,]  143 #>  [7673,]  144 #>  [7674,]  143 #>  [7675,]  143 #>  [7676,]  144 #>  [7677,]  144 #>  [7678,]  143 #>  [7679,]  144 #>  [7680,]  143 #>  [7681,]  144 #>  [7682,]  143 #>  [7683,]  144 #>  [7684,]  143 #>  [7685,]  143 #>  [7686,]  144 #>  [7687,]  143 #>  [7688,]  143 #>  [7689,]  143 #>  [7690,]  143 #>  [7691,]  143 #>  [7692,]  143 #>  [7693,]  144 #>  [7694,]  143 #>  [7695,]  143 #>  [7696,]  144 #>  [7697,]  143 #>  [7698,]  143 #>  [7699,]  144 #>  [7700,]  143 #>  [7701,]  146 #>  [7702,]  145 #>  [7703,]  145 #>  [7704,]  145 #>  [7705,]  146 #>  [7706,]  145 #>  [7707,]  145 #>  [7708,]  145 #>  [7709,]  145 #>  [7710,]  146 #>  [7711,]  146 #>  [7712,]  146 #>  [7713,]  145 #>  [7714,]  146 #>  [7715,]  146 #>  [7716,]  145 #>  [7717,]  146 #>  [7718,]  146 #>  [7719,]  145 #>  [7720,]  145 #>  [7721,]  145 #>  [7722,]  146 #>  [7723,]  145 #>  [7724,]  145 #>  [7725,]  145 #>  [7726,]  146 #>  [7727,]  146 #>  [7728,]  145 #>  [7729,]  145 #>  [7730,]  145 #>  [7731,]  146 #>  [7732,]  146 #>  [7733,]  145 #>  [7734,]  145 #>  [7735,]  145 #>  [7736,]  145 #>  [7737,]  145 #>  [7738,]  146 #>  [7739,]  145 #>  [7740,]  145 #>  [7741,]  145 #>  [7742,]  145 #>  [7743,]  146 #>  [7744,]  145 #>  [7745,]  145 #>  [7746,]  145 #>  [7747,]  146 #>  [7748,]  145 #>  [7749,]  145 #>  [7750,]  145 #>  [7751,]  145 #>  [7752,]  146 #>  [7753,]  145 #>  [7754,]  145 #>  [7755,]  145 #>  [7756,]  145 #>  [7757,]  145 #>  [7758,]  146 #>  [7759,]  146 #>  [7760,]  145 #>  [7761,]  146 #>  [7762,]  145 #>  [7763,]  145 #>  [7764,]  145 #>  [7765,]  145 #>  [7766,]  146 #>  [7767,]  145 #>  [7768,]  145 #>  [7769,]  145 #>  [7770,]  146 #>  [7771,]  146 #>  [7772,]  145 #>  [7773,]  145 #>  [7774,]  145 #>  [7775,]  146 #>  [7776,]  145 #>  [7777,]  146 #>  [7778,]  145 #>  [7779,]  146 #>  [7780,]  145 #>  [7781,]  145 #>  [7782,]  145 #>  [7783,]  145 #>  [7784,]  145 #>  [7785,]  145 #>  [7786,]  145 #>  [7787,]  146 #>  [7788,]  145 #>  [7789,]  145 #>  [7790,]  146 #>  [7791,]  146 #>  [7792,]  146 #>  [7793,]  145 #>  [7794,]  145 #>  [7795,]  146 #>  [7796,]  145 #>  [7797,]  145 #>  [7798,]  145 #>  [7799,]  145 #>  [7800,]  146 #>  [7801,]  148 #>  [7802,]  148 #>  [7803,]  147 #>  [7804,]  148 #>  [7805,]  148 #>  [7806,]  147 #>  [7807,]  147 #>  [7808,]  147 #>  [7809,]  148 #>  [7810,]  148 #>  [7811,]  148 #>  [7812,]  148 #>  [7813,]  148 #>  [7814,]  148 #>  [7815,]  148 #>  [7816,]  148 #>  [7817,]  148 #>  [7818,]  148 #>  [7819,]  148 #>  [7820,]  147 #>  [7821,]  147 #>  [7822,]  148 #>  [7823,]  147 #>  [7824,]  148 #>  [7825,]  147 #>  [7826,]  148 #>  [7827,]  148 #>  [7828,]  148 #>  [7829,]  147 #>  [7830,]  148 #>  [7831,]  148 #>  [7832,]  148 #>  [7833,]  148 #>  [7834,]  147 #>  [7835,]  147 #>  [7836,]  147 #>  [7837,]  147 #>  [7838,]  148 #>  [7839,]  148 #>  [7840,]  148 #>  [7841,]  147 #>  [7842,]  147 #>  [7843,]  148 #>  [7844,]  147 #>  [7845,]  147 #>  [7846,]  148 #>  [7847,]  148 #>  [7848,]  148 #>  [7849,]  148 #>  [7850,]  147 #>  [7851,]  148 #>  [7852,]  148 #>  [7853,]  147 #>  [7854,]  147 #>  [7855,]  147 #>  [7856,]  147 #>  [7857,]  147 #>  [7858,]  148 #>  [7859,]  148 #>  [7860,]  147 #>  [7861,]  148 #>  [7862,]  148 #>  [7863,]  148 #>  [7864,]  147 #>  [7865,]  147 #>  [7866,]  148 #>  [7867,]  147 #>  [7868,]  148 #>  [7869,]  148 #>  [7870,]  148 #>  [7871,]  148 #>  [7872,]  148 #>  [7873,]  147 #>  [7874,]  147 #>  [7875,]  148 #>  [7876,]  147 #>  [7877,]  148 #>  [7878,]  148 #>  [7879,]  148 #>  [7880,]  147 #>  [7881,]  147 #>  [7882,]  147 #>  [7883,]  148 #>  [7884,]  147 #>  [7885,]  147 #>  [7886,]  147 #>  [7887,]  148 #>  [7888,]  147 #>  [7889,]  147 #>  [7890,]  148 #>  [7891,]  148 #>  [7892,]  148 #>  [7893,]  148 #>  [7894,]  147 #>  [7895,]  148 #>  [7896,]  148 #>  [7897,]  147 #>  [7898,]  147 #>  [7899,]  147 #>  [7900,]  148 #>  [7901,]  150 #>  [7902,]  150 #>  [7903,]  150 #>  [7904,]  149 #>  [7905,]  150 #>  [7906,]  150 #>  [7907,]  150 #>  [7908,]  149 #>  [7909,]  149 #>  [7910,]  150 #>  [7911,]  149 #>  [7912,]  150 #>  [7913,]  149 #>  [7914,]  150 #>  [7915,]  150 #>  [7916,]  150 #>  [7917,]  149 #>  [7918,]  150 #>  [7919,]  150 #>  [7920,]  150 #>  [7921,]  150 #>  [7922,]  149 #>  [7923,]  150 #>  [7924,]  150 #>  [7925,]  150 #>  [7926,]  150 #>  [7927,]  149 #>  [7928,]  150 #>  [7929,]  150 #>  [7930,]  150 #>  [7931,]  150 #>  [7932,]  150 #>  [7933,]  150 #>  [7934,]  150 #>  [7935,]  149 #>  [7936,]  150 #>  [7937,]  150 #>  [7938,]  150 #>  [7939,]  150 #>  [7940,]  150 #>  [7941,]  150 #>  [7942,]  150 #>  [7943,]  149 #>  [7944,]  149 #>  [7945,]  150 #>  [7946,]  150 #>  [7947,]  150 #>  [7948,]  150 #>  [7949,]  149 #>  [7950,]  150 #>  [7951,]  150 #>  [7952,]  149 #>  [7953,]  150 #>  [7954,]  150 #>  [7955,]  149 #>  [7956,]  150 #>  [7957,]  150 #>  [7958,]  149 #>  [7959,]  150 #>  [7960,]  150 #>  [7961,]  150 #>  [7962,]  150 #>  [7963,]  150 #>  [7964,]  150 #>  [7965,]  150 #>  [7966,]  149 #>  [7967,]  150 #>  [7968,]  150 #>  [7969,]  150 #>  [7970,]  150 #>  [7971,]  150 #>  [7972,]  150 #>  [7973,]  150 #>  [7974,]  150 #>  [7975,]  150 #>  [7976,]  150 #>  [7977,]  150 #>  [7978,]  150 #>  [7979,]  149 #>  [7980,]  149 #>  [7981,]  149 #>  [7982,]  149 #>  [7983,]  149 #>  [7984,]  150 #>  [7985,]  150 #>  [7986,]  150 #>  [7987,]  149 #>  [7988,]  149 #>  [7989,]  149 #>  [7990,]  149 #>  [7991,]  150 #>  [7992,]  149 #>  [7993,]  150 #>  [7994,]  150 #>  [7995,]  149 #>  [7996,]  150 #>  [7997,]  150 #>  [7998,]  150 #>  [7999,]  149 #>  [8000,]  150 #>  [8001,]  151 #>  [8002,]  152 #>  [8003,]  151 #>  [8004,]  151 #>  [8005,]  152 #>  [8006,]  151 #>  [8007,]  152 #>  [8008,]  151 #>  [8009,]  152 #>  [8010,]  152 #>  [8011,]  151 #>  [8012,]  152 #>  [8013,]  152 #>  [8014,]  151 #>  [8015,]  151 #>  [8016,]  151 #>  [8017,]  152 #>  [8018,]  152 #>  [8019,]  151 #>  [8020,]  152 #>  [8021,]  152 #>  [8022,]  152 #>  [8023,]  152 #>  [8024,]  152 #>  [8025,]  151 #>  [8026,]  151 #>  [8027,]  152 #>  [8028,]  151 #>  [8029,]  152 #>  [8030,]  152 #>  [8031,]  152 #>  [8032,]  152 #>  [8033,]  152 #>  [8034,]  151 #>  [8035,]  151 #>  [8036,]  152 #>  [8037,]  151 #>  [8038,]  151 #>  [8039,]  151 #>  [8040,]  152 #>  [8041,]  152 #>  [8042,]  151 #>  [8043,]  151 #>  [8044,]  152 #>  [8045,]  151 #>  [8046,]  151 #>  [8047,]  152 #>  [8048,]  152 #>  [8049,]  151 #>  [8050,]  152 #>  [8051,]  151 #>  [8052,]  151 #>  [8053,]  152 #>  [8054,]  152 #>  [8055,]  151 #>  [8056,]  151 #>  [8057,]  151 #>  [8058,]  152 #>  [8059,]  151 #>  [8060,]  152 #>  [8061,]  152 #>  [8062,]  151 #>  [8063,]  152 #>  [8064,]  151 #>  [8065,]  151 #>  [8066,]  151 #>  [8067,]  151 #>  [8068,]  151 #>  [8069,]  151 #>  [8070,]  152 #>  [8071,]  151 #>  [8072,]  151 #>  [8073,]  151 #>  [8074,]  151 #>  [8075,]  152 #>  [8076,]  151 #>  [8077,]  151 #>  [8078,]  152 #>  [8079,]  151 #>  [8080,]  152 #>  [8081,]  152 #>  [8082,]  151 #>  [8083,]  152 #>  [8084,]  152 #>  [8085,]  151 #>  [8086,]  152 #>  [8087,]  152 #>  [8088,]  152 #>  [8089,]  151 #>  [8090,]  151 #>  [8091,]  151 #>  [8092,]  152 #>  [8093,]  152 #>  [8094,]  151 #>  [8095,]  152 #>  [8096,]  151 #>  [8097,]  151 #>  [8098,]  151 #>  [8099,]  151 #>  [8100,]  151 #>  [8101,]  153 #>  [8102,]  153 #>  [8103,]  153 #>  [8104,]  153 #>  [8105,]  153 #>  [8106,]  153 #>  [8107,]  153 #>  [8108,]  153 #>  [8109,]  153 #>  [8110,]  153 #>  [8111,]  153 #>  [8112,]  153 #>  [8113,]  153 #>  [8114,]  153 #>  [8115,]  153 #>  [8116,]  153 #>  [8117,]  153 #>  [8118,]  153 #>  [8119,]  153 #>  [8120,]  153 #>  [8121,]  153 #>  [8122,]  153 #>  [8123,]  153 #>  [8124,]  153 #>  [8125,]  153 #>  [8126,]  153 #>  [8127,]  153 #>  [8128,]  153 #>  [8129,]  153 #>  [8130,]  153 #>  [8131,]  153 #>  [8132,]  153 #>  [8133,]  153 #>  [8134,]  153 #>  [8135,]  153 #>  [8136,]  153 #>  [8137,]  153 #>  [8138,]  153 #>  [8139,]  153 #>  [8140,]  153 #>  [8141,]  153 #>  [8142,]  153 #>  [8143,]  153 #>  [8144,]  153 #>  [8145,]  153 #>  [8146,]  153 #>  [8147,]  153 #>  [8148,]  153 #>  [8149,]  153 #>  [8150,]  153 #>  [8151,]  153 #>  [8152,]  153 #>  [8153,]  153 #>  [8154,]  153 #>  [8155,]  153 #>  [8156,]  153 #>  [8157,]  153 #>  [8158,]  153 #>  [8159,]  153 #>  [8160,]  153 #>  [8161,]  153 #>  [8162,]  153 #>  [8163,]  153 #>  [8164,]  153 #>  [8165,]  153 #>  [8166,]  153 #>  [8167,]  153 #>  [8168,]  153 #>  [8169,]  153 #>  [8170,]  153 #>  [8171,]  153 #>  [8172,]  153 #>  [8173,]  153 #>  [8174,]  153 #>  [8175,]  153 #>  [8176,]  153 #>  [8177,]  153 #>  [8178,]  153 #>  [8179,]  153 #>  [8180,]  153 #>  [8181,]  153 #>  [8182,]  153 #>  [8183,]  153 #>  [8184,]  153 #>  [8185,]  153 #>  [8186,]  153 #>  [8187,]  153 #>  [8188,]  153 #>  [8189,]  153 #>  [8190,]  153 #>  [8191,]  153 #>  [8192,]  153 #>  [8193,]  153 #>  [8194,]  153 #>  [8195,]  153 #>  [8196,]  153 #>  [8197,]  153 #>  [8198,]  153 #>  [8199,]  153 #>  [8200,]  153 #>  [8201,]  155 #>  [8202,]  155 #>  [8203,]  154 #>  [8204,]  155 #>  [8205,]  154 #>  [8206,]  155 #>  [8207,]  155 #>  [8208,]  155 #>  [8209,]  154 #>  [8210,]  154 #>  [8211,]  154 #>  [8212,]  155 #>  [8213,]  155 #>  [8214,]  154 #>  [8215,]  155 #>  [8216,]  155 #>  [8217,]  155 #>  [8218,]  155 #>  [8219,]  155 #>  [8220,]  155 #>  [8221,]  154 #>  [8222,]  155 #>  [8223,]  155 #>  [8224,]  154 #>  [8225,]  154 #>  [8226,]  155 #>  [8227,]  155 #>  [8228,]  154 #>  [8229,]  155 #>  [8230,]  155 #>  [8231,]  154 #>  [8232,]  154 #>  [8233,]  155 #>  [8234,]  154 #>  [8235,]  154 #>  [8236,]  155 #>  [8237,]  155 #>  [8238,]  155 #>  [8239,]  154 #>  [8240,]  154 #>  [8241,]  155 #>  [8242,]  154 #>  [8243,]  155 #>  [8244,]  155 #>  [8245,]  155 #>  [8246,]  155 #>  [8247,]  154 #>  [8248,]  154 #>  [8249,]  155 #>  [8250,]  155 #>  [8251,]  155 #>  [8252,]  154 #>  [8253,]  155 #>  [8254,]  154 #>  [8255,]  155 #>  [8256,]  155 #>  [8257,]  155 #>  [8258,]  155 #>  [8259,]  155 #>  [8260,]  155 #>  [8261,]  155 #>  [8262,]  154 #>  [8263,]  155 #>  [8264,]  155 #>  [8265,]  154 #>  [8266,]  155 #>  [8267,]  155 #>  [8268,]  155 #>  [8269,]  155 #>  [8270,]  154 #>  [8271,]  155 #>  [8272,]  154 #>  [8273,]  155 #>  [8274,]  154 #>  [8275,]  155 #>  [8276,]  154 #>  [8277,]  155 #>  [8278,]  155 #>  [8279,]  155 #>  [8280,]  155 #>  [8281,]  155 #>  [8282,]  154 #>  [8283,]  155 #>  [8284,]  155 #>  [8285,]  155 #>  [8286,]  155 #>  [8287,]  155 #>  [8288,]  155 #>  [8289,]  155 #>  [8290,]  155 #>  [8291,]  154 #>  [8292,]  155 #>  [8293,]  155 #>  [8294,]  155 #>  [8295,]  155 #>  [8296,]  155 #>  [8297,]  155 #>  [8298,]  154 #>  [8299,]  155 #>  [8300,]  155 #>  [8301,]  157 #>  [8302,]  156 #>  [8303,]  156 #>  [8304,]  156 #>  [8305,]  157 #>  [8306,]  156 #>  [8307,]  156 #>  [8308,]  156 #>  [8309,]  156 #>  [8310,]  157 #>  [8311,]  157 #>  [8312,]  156 #>  [8313,]  156 #>  [8314,]  157 #>  [8315,]  157 #>  [8316,]  156 #>  [8317,]  157 #>  [8318,]  157 #>  [8319,]  156 #>  [8320,]  156 #>  [8321,]  156 #>  [8322,]  157 #>  [8323,]  156 #>  [8324,]  156 #>  [8325,]  156 #>  [8326,]  157 #>  [8327,]  157 #>  [8328,]  156 #>  [8329,]  156 #>  [8330,]  156 #>  [8331,]  157 #>  [8332,]  157 #>  [8333,]  156 #>  [8334,]  156 #>  [8335,]  156 #>  [8336,]  156 #>  [8337,]  156 #>  [8338,]  156 #>  [8339,]  156 #>  [8340,]  156 #>  [8341,]  156 #>  [8342,]  156 #>  [8343,]  157 #>  [8344,]  156 #>  [8345,]  156 #>  [8346,]  156 #>  [8347,]  157 #>  [8348,]  156 #>  [8349,]  156 #>  [8350,]  156 #>  [8351,]  156 #>  [8352,]  156 #>  [8353,]  156 #>  [8354,]  156 #>  [8355,]  156 #>  [8356,]  156 #>  [8357,]  156 #>  [8358,]  157 #>  [8359,]  157 #>  [8360,]  156 #>  [8361,]  157 #>  [8362,]  156 #>  [8363,]  156 #>  [8364,]  156 #>  [8365,]  156 #>  [8366,]  157 #>  [8367,]  156 #>  [8368,]  156 #>  [8369,]  156 #>  [8370,]  157 #>  [8371,]  157 #>  [8372,]  156 #>  [8373,]  156 #>  [8374,]  156 #>  [8375,]  157 #>  [8376,]  156 #>  [8377,]  157 #>  [8378,]  156 #>  [8379,]  157 #>  [8380,]  156 #>  [8381,]  156 #>  [8382,]  156 #>  [8383,]  156 #>  [8384,]  156 #>  [8385,]  156 #>  [8386,]  156 #>  [8387,]  157 #>  [8388,]  156 #>  [8389,]  156 #>  [8390,]  157 #>  [8391,]  157 #>  [8392,]  156 #>  [8393,]  156 #>  [8394,]  156 #>  [8395,]  157 #>  [8396,]  156 #>  [8397,]  156 #>  [8398,]  156 #>  [8399,]  156 #>  [8400,]  157 #>  [8401,]  159 #>  [8402,]  158 #>  [8403,]  158 #>  [8404,]  158 #>  [8405,]  158 #>  [8406,]  158 #>  [8407,]  158 #>  [8408,]  158 #>  [8409,]  159 #>  [8410,]  158 #>  [8411,]  158 #>  [8412,]  158 #>  [8413,]  159 #>  [8414,]  158 #>  [8415,]  158 #>  [8416,]  158 #>  [8417,]  159 #>  [8418,]  159 #>  [8419,]  158 #>  [8420,]  159 #>  [8421,]  158 #>  [8422,]  158 #>  [8423,]  158 #>  [8424,]  158 #>  [8425,]  158 #>  [8426,]  158 #>  [8427,]  159 #>  [8428,]  158 #>  [8429,]  158 #>  [8430,]  158 #>  [8431,]  158 #>  [8432,]  158 #>  [8433,]  159 #>  [8434,]  158 #>  [8435,]  158 #>  [8436,]  159 #>  [8437,]  158 #>  [8438,]  159 #>  [8439,]  158 #>  [8440,]  158 #>  [8441,]  158 #>  [8442,]  159 #>  [8443,]  158 #>  [8444,]  158 #>  [8445,]  158 #>  [8446,]  158 #>  [8447,]  158 #>  [8448,]  158 #>  [8449,]  158 #>  [8450,]  158 #>  [8451,]  159 #>  [8452,]  158 #>  [8453,]  159 #>  [8454,]  159 #>  [8455,]  158 #>  [8456,]  159 #>  [8457,]  158 #>  [8458,]  158 #>  [8459,]  158 #>  [8460,]  158 #>  [8461,]  158 #>  [8462,]  158 #>  [8463,]  158 #>  [8464,]  158 #>  [8465,]  159 #>  [8466,]  159 #>  [8467,]  158 #>  [8468,]  158 #>  [8469,]  158 #>  [8470,]  158 #>  [8471,]  158 #>  [8472,]  158 #>  [8473,]  158 #>  [8474,]  158 #>  [8475,]  158 #>  [8476,]  158 #>  [8477,]  159 #>  [8478,]  158 #>  [8479,]  159 #>  [8480,]  158 #>  [8481,]  158 #>  [8482,]  159 #>  [8483,]  159 #>  [8484,]  159 #>  [8485,]  159 #>  [8486,]  158 #>  [8487,]  159 #>  [8488,]  158 #>  [8489,]  158 #>  [8490,]  158 #>  [8491,]  159 #>  [8492,]  158 #>  [8493,]  159 #>  [8494,]  159 #>  [8495,]  158 #>  [8496,]  158 #>  [8497,]  158 #>  [8498,]  158 #>  [8499,]  158 #>  [8500,]  158 #>  [8501,]  161 #>  [8502,]  161 #>  [8503,]  160 #>  [8504,]  160 #>  [8505,]  160 #>  [8506,]  160 #>  [8507,]  161 #>  [8508,]  161 #>  [8509,]  160 #>  [8510,]  160 #>  [8511,]  160 #>  [8512,]  161 #>  [8513,]  161 #>  [8514,]  160 #>  [8515,]  161 #>  [8516,]  161 #>  [8517,]  161 #>  [8518,]  161 #>  [8519,]  161 #>  [8520,]  161 #>  [8521,]  160 #>  [8522,]  161 #>  [8523,]  161 #>  [8524,]  160 #>  [8525,]  160 #>  [8526,]  161 #>  [8527,]  161 #>  [8528,]  160 #>  [8529,]  161 #>  [8530,]  161 #>  [8531,]  160 #>  [8532,]  160 #>  [8533,]  161 #>  [8534,]  160 #>  [8535,]  160 #>  [8536,]  161 #>  [8537,]  161 #>  [8538,]  161 #>  [8539,]  160 #>  [8540,]  160 #>  [8541,]  161 #>  [8542,]  160 #>  [8543,]  161 #>  [8544,]  161 #>  [8545,]  161 #>  [8546,]  161 #>  [8547,]  160 #>  [8548,]  160 #>  [8549,]  161 #>  [8550,]  161 #>  [8551,]  161 #>  [8552,]  160 #>  [8553,]  161 #>  [8554,]  160 #>  [8555,]  161 #>  [8556,]  161 #>  [8557,]  160 #>  [8558,]  161 #>  [8559,]  161 #>  [8560,]  161 #>  [8561,]  161 #>  [8562,]  160 #>  [8563,]  161 #>  [8564,]  161 #>  [8565,]  160 #>  [8566,]  161 #>  [8567,]  160 #>  [8568,]  161 #>  [8569,]  161 #>  [8570,]  160 #>  [8571,]  161 #>  [8572,]  160 #>  [8573,]  160 #>  [8574,]  160 #>  [8575,]  161 #>  [8576,]  160 #>  [8577,]  161 #>  [8578,]  161 #>  [8579,]  160 #>  [8580,]  161 #>  [8581,]  161 #>  [8582,]  160 #>  [8583,]  161 #>  [8584,]  161 #>  [8585,]  161 #>  [8586,]  160 #>  [8587,]  161 #>  [8588,]  160 #>  [8589,]  160 #>  [8590,]  161 #>  [8591,]  160 #>  [8592,]  160 #>  [8593,]  161 #>  [8594,]  160 #>  [8595,]  161 #>  [8596,]  161 #>  [8597,]  161 #>  [8598,]  160 #>  [8599,]  160 #>  [8600,]  161 #>  [8601,]  163 #>  [8602,]  163 #>  [8603,]  162 #>  [8604,]  163 #>  [8605,]  163 #>  [8606,]  163 #>  [8607,]  162 #>  [8608,]  162 #>  [8609,]  163 #>  [8610,]  163 #>  [8611,]  163 #>  [8612,]  163 #>  [8613,]  162 #>  [8614,]  163 #>  [8615,]  163 #>  [8616,]  162 #>  [8617,]  163 #>  [8618,]  163 #>  [8619,]  163 #>  [8620,]  162 #>  [8621,]  163 #>  [8622,]  162 #>  [8623,]  163 #>  [8624,]  162 #>  [8625,]  162 #>  [8626,]  163 #>  [8627,]  163 #>  [8628,]  163 #>  [8629,]  163 #>  [8630,]  163 #>  [8631,]  163 #>  [8632,]  163 #>  [8633,]  163 #>  [8634,]  163 #>  [8635,]  163 #>  [8636,]  163 #>  [8637,]  163 #>  [8638,]  163 #>  [8639,]  162 #>  [8640,]  162 #>  [8641,]  163 #>  [8642,]  163 #>  [8643,]  163 #>  [8644,]  162 #>  [8645,]  163 #>  [8646,]  162 #>  [8647,]  163 #>  [8648,]  163 #>  [8649,]  162 #>  [8650,]  162 #>  [8651,]  163 #>  [8652,]  163 #>  [8653,]  162 #>  [8654,]  162 #>  [8655,]  162 #>  [8656,]  162 #>  [8657,]  163 #>  [8658,]  163 #>  [8659,]  162 #>  [8660,]  163 #>  [8661,]  163 #>  [8662,]  163 #>  [8663,]  162 #>  [8664,]  163 #>  [8665,]  162 #>  [8666,]  162 #>  [8667,]  163 #>  [8668,]  163 #>  [8669,]  163 #>  [8670,]  162 #>  [8671,]  163 #>  [8672,]  162 #>  [8673,]  163 #>  [8674,]  163 #>  [8675,]  163 #>  [8676,]  163 #>  [8677,]  163 #>  [8678,]  162 #>  [8679,]  163 #>  [8680,]  163 #>  [8681,]  163 #>  [8682,]  163 #>  [8683,]  163 #>  [8684,]  162 #>  [8685,]  163 #>  [8686,]  162 #>  [8687,]  163 #>  [8688,]  163 #>  [8689,]  162 #>  [8690,]  162 #>  [8691,]  163 #>  [8692,]  163 #>  [8693,]  163 #>  [8694,]  163 #>  [8695,]  163 #>  [8696,]  163 #>  [8697,]  163 #>  [8698,]  162 #>  [8699,]  163 #>  [8700,]  162 #>  [8701,]  164 #>  [8702,]  164 #>  [8703,]  164 #>  [8704,]  165 #>  [8705,]  164 #>  [8706,]  164 #>  [8707,]  165 #>  [8708,]  164 #>  [8709,]  164 #>  [8710,]  165 #>  [8711,]  164 #>  [8712,]  164 #>  [8713,]  164 #>  [8714,]  164 #>  [8715,]  164 #>  [8716,]  165 #>  [8717,]  164 #>  [8718,]  164 #>  [8719,]  164 #>  [8720,]  165 #>  [8721,]  164 #>  [8722,]  164 #>  [8723,]  164 #>  [8724,]  165 #>  [8725,]  164 #>  [8726,]  164 #>  [8727,]  164 #>  [8728,]  165 #>  [8729,]  164 #>  [8730,]  164 #>  [8731,]  164 #>  [8732,]  164 #>  [8733,]  164 #>  [8734,]  164 #>  [8735,]  164 #>  [8736,]  164 #>  [8737,]  164 #>  [8738,]  164 #>  [8739,]  164 #>  [8740,]  164 #>  [8741,]  164 #>  [8742,]  164 #>  [8743,]  164 #>  [8744,]  164 #>  [8745,]  164 #>  [8746,]  164 #>  [8747,]  164 #>  [8748,]  164 #>  [8749,]  164 #>  [8750,]  165 #>  [8751,]  164 #>  [8752,]  165 #>  [8753,]  164 #>  [8754,]  165 #>  [8755,]  164 #>  [8756,]  164 #>  [8757,]  164 #>  [8758,]  164 #>  [8759,]  164 #>  [8760,]  164 #>  [8761,]  164 #>  [8762,]  164 #>  [8763,]  164 #>  [8764,]  164 #>  [8765,]  164 #>  [8766,]  164 #>  [8767,]  164 #>  [8768,]  164 #>  [8769,]  164 #>  [8770,]  164 #>  [8771,]  164 #>  [8772,]  164 #>  [8773,]  165 #>  [8774,]  164 #>  [8775,]  164 #>  [8776,]  165 #>  [8777,]  164 #>  [8778,]  164 #>  [8779,]  164 #>  [8780,]  164 #>  [8781,]  164 #>  [8782,]  164 #>  [8783,]  164 #>  [8784,]  164 #>  [8785,]  164 #>  [8786,]  165 #>  [8787,]  164 #>  [8788,]  164 #>  [8789,]  164 #>  [8790,]  164 #>  [8791,]  165 #>  [8792,]  164 #>  [8793,]  164 #>  [8794,]  164 #>  [8795,]  164 #>  [8796,]  164 #>  [8797,]  164 #>  [8798,]  164 #>  [8799,]  164 #>  [8800,]  164 #>  [8801,]  167 #>  [8802,]  167 #>  [8803,]  167 #>  [8804,]  167 #>  [8805,]  167 #>  [8806,]  167 #>  [8807,]  167 #>  [8808,]  167 #>  [8809,]  167 #>  [8810,]  167 #>  [8811,]  167 #>  [8812,]  167 #>  [8813,]  167 #>  [8814,]  167 #>  [8815,]  167 #>  [8816,]  167 #>  [8817,]  167 #>  [8818,]  167 #>  [8819,]  167 #>  [8820,]  167 #>  [8821,]  167 #>  [8822,]  167 #>  [8823,]  167 #>  [8824,]  167 #>  [8825,]  166 #>  [8826,]  167 #>  [8827,]  167 #>  [8828,]  167 #>  [8829,]  167 #>  [8830,]  167 #>  [8831,]  167 #>  [8832,]  167 #>  [8833,]  167 #>  [8834,]  167 #>  [8835,]  167 #>  [8836,]  167 #>  [8837,]  167 #>  [8838,]  167 #>  [8839,]  167 #>  [8840,]  167 #>  [8841,]  167 #>  [8842,]  167 #>  [8843,]  167 #>  [8844,]  167 #>  [8845,]  167 #>  [8846,]  167 #>  [8847,]  167 #>  [8848,]  167 #>  [8849,]  167 #>  [8850,]  167 #>  [8851,]  167 #>  [8852,]  167 #>  [8853,]  167 #>  [8854,]  167 #>  [8855,]  167 #>  [8856,]  166 #>  [8857,]  167 #>  [8858,]  167 #>  [8859,]  167 #>  [8860,]  167 #>  [8861,]  167 #>  [8862,]  167 #>  [8863,]  167 #>  [8864,]  167 #>  [8865,]  166 #>  [8866,]  167 #>  [8867,]  167 #>  [8868,]  167 #>  [8869,]  167 #>  [8870,]  167 #>  [8871,]  167 #>  [8872,]  167 #>  [8873,]  167 #>  [8874,]  166 #>  [8875,]  167 #>  [8876,]  167 #>  [8877,]  167 #>  [8878,]  167 #>  [8879,]  167 #>  [8880,]  166 #>  [8881,]  167 #>  [8882,]  167 #>  [8883,]  167 #>  [8884,]  167 #>  [8885,]  166 #>  [8886,]  167 #>  [8887,]  167 #>  [8888,]  167 #>  [8889,]  166 #>  [8890,]  167 #>  [8891,]  167 #>  [8892,]  167 #>  [8893,]  167 #>  [8894,]  167 #>  [8895,]  167 #>  [8896,]  167 #>  [8897,]  167 #>  [8898,]  167 #>  [8899,]  167 #>  [8900,]  167 #>  [8901,]  169 #>  [8902,]  169 #>  [8903,]  168 #>  [8904,]  168 #>  [8905,]  169 #>  [8906,]  169 #>  [8907,]  168 #>  [8908,]  168 #>  [8909,]  169 #>  [8910,]  169 #>  [8911,]  169 #>  [8912,]  168 #>  [8913,]  169 #>  [8914,]  169 #>  [8915,]  169 #>  [8916,]  169 #>  [8917,]  169 #>  [8918,]  169 #>  [8919,]  169 #>  [8920,]  169 #>  [8921,]  169 #>  [8922,]  169 #>  [8923,]  168 #>  [8924,]  169 #>  [8925,]  168 #>  [8926,]  169 #>  [8927,]  169 #>  [8928,]  169 #>  [8929,]  169 #>  [8930,]  169 #>  [8931,]  168 #>  [8932,]  168 #>  [8933,]  169 #>  [8934,]  169 #>  [8935,]  169 #>  [8936,]  169 #>  [8937,]  168 #>  [8938,]  169 #>  [8939,]  169 #>  [8940,]  168 #>  [8941,]  169 #>  [8942,]  169 #>  [8943,]  169 #>  [8944,]  169 #>  [8945,]  169 #>  [8946,]  168 #>  [8947,]  168 #>  [8948,]  169 #>  [8949,]  169 #>  [8950,]  169 #>  [8951,]  169 #>  [8952,]  168 #>  [8953,]  169 #>  [8954,]  169 #>  [8955,]  168 #>  [8956,]  169 #>  [8957,]  168 #>  [8958,]  169 #>  [8959,]  168 #>  [8960,]  168 #>  [8961,]  169 #>  [8962,]  169 #>  [8963,]  169 #>  [8964,]  169 #>  [8965,]  169 #>  [8966,]  169 #>  [8967,]  168 #>  [8968,]  168 #>  [8969,]  169 #>  [8970,]  169 #>  [8971,]  169 #>  [8972,]  168 #>  [8973,]  169 #>  [8974,]  168 #>  [8975,]  169 #>  [8976,]  168 #>  [8977,]  169 #>  [8978,]  168 #>  [8979,]  169 #>  [8980,]  168 #>  [8981,]  169 #>  [8982,]  169 #>  [8983,]  169 #>  [8984,]  169 #>  [8985,]  169 #>  [8986,]  168 #>  [8987,]  169 #>  [8988,]  169 #>  [8989,]  169 #>  [8990,]  169 #>  [8991,]  169 #>  [8992,]  168 #>  [8993,]  169 #>  [8994,]  169 #>  [8995,]  169 #>  [8996,]  168 #>  [8997,]  168 #>  [8998,]  168 #>  [8999,]  169 #>  [9000,]  169 #>  [9001,]  170 #>  [9002,]  170 #>  [9003,]  170 #>  [9004,]  170 #>  [9005,]  170 #>  [9006,]  170 #>  [9007,]  170 #>  [9008,]  170 #>  [9009,]  170 #>  [9010,]  170 #>  [9011,]  170 #>  [9012,]  170 #>  [9013,]  170 #>  [9014,]  170 #>  [9015,]  170 #>  [9016,]  170 #>  [9017,]  170 #>  [9018,]  170 #>  [9019,]  170 #>  [9020,]  170 #>  [9021,]  170 #>  [9022,]  170 #>  [9023,]  170 #>  [9024,]  170 #>  [9025,]  170 #>  [9026,]  170 #>  [9027,]  170 #>  [9028,]  170 #>  [9029,]  170 #>  [9030,]  170 #>  [9031,]  170 #>  [9032,]  170 #>  [9033,]  170 #>  [9034,]  170 #>  [9035,]  170 #>  [9036,]  170 #>  [9037,]  170 #>  [9038,]  170 #>  [9039,]  170 #>  [9040,]  170 #>  [9041,]  170 #>  [9042,]  170 #>  [9043,]  170 #>  [9044,]  170 #>  [9045,]  170 #>  [9046,]  170 #>  [9047,]  170 #>  [9048,]  170 #>  [9049,]  170 #>  [9050,]  170 #>  [9051,]  170 #>  [9052,]  170 #>  [9053,]  170 #>  [9054,]  170 #>  [9055,]  170 #>  [9056,]  170 #>  [9057,]  170 #>  [9058,]  170 #>  [9059,]  170 #>  [9060,]  170 #>  [9061,]  170 #>  [9062,]  170 #>  [9063,]  170 #>  [9064,]  170 #>  [9065,]  170 #>  [9066,]  170 #>  [9067,]  170 #>  [9068,]  170 #>  [9069,]  170 #>  [9070,]  170 #>  [9071,]  170 #>  [9072,]  170 #>  [9073,]  170 #>  [9074,]  170 #>  [9075,]  170 #>  [9076,]  170 #>  [9077,]  170 #>  [9078,]  170 #>  [9079,]  170 #>  [9080,]  170 #>  [9081,]  170 #>  [9082,]  170 #>  [9083,]  170 #>  [9084,]  170 #>  [9085,]  170 #>  [9086,]  170 #>  [9087,]  170 #>  [9088,]  170 #>  [9089,]  170 #>  [9090,]  170 #>  [9091,]  170 #>  [9092,]  170 #>  [9093,]  170 #>  [9094,]  170 #>  [9095,]  170 #>  [9096,]  170 #>  [9097,]  170 #>  [9098,]  170 #>  [9099,]  170 #>  [9100,]  170 #>  [9101,]  171 #>  [9102,]  171 #>  [9103,]  171 #>  [9104,]  172 #>  [9105,]  171 #>  [9106,]  171 #>  [9107,]  171 #>  [9108,]  171 #>  [9109,]  172 #>  [9110,]  171 #>  [9111,]  172 #>  [9112,]  172 #>  [9113,]  171 #>  [9114,]  172 #>  [9115,]  172 #>  [9116,]  171 #>  [9117,]  171 #>  [9118,]  172 #>  [9119,]  172 #>  [9120,]  171 #>  [9121,]  172 #>  [9122,]  171 #>  [9123,]  171 #>  [9124,]  171 #>  [9125,]  171 #>  [9126,]  172 #>  [9127,]  172 #>  [9128,]  171 #>  [9129,]  171 #>  [9130,]  172 #>  [9131,]  172 #>  [9132,]  171 #>  [9133,]  172 #>  [9134,]  171 #>  [9135,]  171 #>  [9136,]  172 #>  [9137,]  171 #>  [9138,]  172 #>  [9139,]  171 #>  [9140,]  171 #>  [9141,]  172 #>  [9142,]  172 #>  [9143,]  171 #>  [9144,]  171 #>  [9145,]  171 #>  [9146,]  171 #>  [9147,]  171 #>  [9148,]  172 #>  [9149,]  171 #>  [9150,]  171 #>  [9151,]  171 #>  [9152,]  171 #>  [9153,]  171 #>  [9154,]  171 #>  [9155,]  171 #>  [9156,]  171 #>  [9157,]  171 #>  [9158,]  172 #>  [9159,]  171 #>  [9160,]  172 #>  [9161,]  172 #>  [9162,]  172 #>  [9163,]  171 #>  [9164,]  171 #>  [9165,]  171 #>  [9166,]  171 #>  [9167,]  171 #>  [9168,]  172 #>  [9169,]  172 #>  [9170,]  171 #>  [9171,]  171 #>  [9172,]  171 #>  [9173,]  171 #>  [9174,]  172 #>  [9175,]  172 #>  [9176,]  171 #>  [9177,]  171 #>  [9178,]  171 #>  [9179,]  171 #>  [9180,]  171 #>  [9181,]  171 #>  [9182,]  172 #>  [9183,]  171 #>  [9184,]  171 #>  [9185,]  172 #>  [9186,]  171 #>  [9187,]  171 #>  [9188,]  171 #>  [9189,]  171 #>  [9190,]  171 #>  [9191,]  171 #>  [9192,]  172 #>  [9193,]  172 #>  [9194,]  171 #>  [9195,]  171 #>  [9196,]  172 #>  [9197,]  172 #>  [9198,]  171 #>  [9199,]  171 #>  [9200,]  171 #>  [9201,]  174 #>  [9202,]  174 #>  [9203,]  173 #>  [9204,]  174 #>  [9205,]  174 #>  [9206,]  174 #>  [9207,]  174 #>  [9208,]  174 #>  [9209,]  174 #>  [9210,]  174 #>  [9211,]  173 #>  [9212,]  173 #>  [9213,]  174 #>  [9214,]  173 #>  [9215,]  174 #>  [9216,]  174 #>  [9217,]  174 #>  [9218,]  174 #>  [9219,]  173 #>  [9220,]  173 #>  [9221,]  174 #>  [9222,]  173 #>  [9223,]  174 #>  [9224,]  174 #>  [9225,]  174 #>  [9226,]  173 #>  [9227,]  174 #>  [9228,]  174 #>  [9229,]  173 #>  [9230,]  174 #>  [9231,]  174 #>  [9232,]  173 #>  [9233,]  174 #>  [9234,]  174 #>  [9235,]  174 #>  [9236,]  173 #>  [9237,]  174 #>  [9238,]  174 #>  [9239,]  174 #>  [9240,]  173 #>  [9241,]  173 #>  [9242,]  173 #>  [9243,]  174 #>  [9244,]  174 #>  [9245,]  174 #>  [9246,]  174 #>  [9247,]  174 #>  [9248,]  173 #>  [9249,]  174 #>  [9250,]  174 #>  [9251,]  173 #>  [9252,]  174 #>  [9253,]  174 #>  [9254,]  173 #>  [9255,]  174 #>  [9256,]  174 #>  [9257,]  174 #>  [9258,]  174 #>  [9259,]  174 #>  [9260,]  173 #>  [9261,]  174 #>  [9262,]  173 #>  [9263,]  173 #>  [9264,]  174 #>  [9265,]  174 #>  [9266,]  173 #>  [9267,]  174 #>  [9268,]  173 #>  [9269,]  173 #>  [9270,]  174 #>  [9271,]  174 #>  [9272,]  174 #>  [9273,]  174 #>  [9274,]  174 #>  [9275,]  174 #>  [9276,]  174 #>  [9277,]  174 #>  [9278,]  174 #>  [9279,]  174 #>  [9280,]  173 #>  [9281,]  173 #>  [9282,]  174 #>  [9283,]  173 #>  [9284,]  174 #>  [9285,]  174 #>  [9286,]  174 #>  [9287,]  174 #>  [9288,]  174 #>  [9289,]  173 #>  [9290,]  174 #>  [9291,]  173 #>  [9292,]  174 #>  [9293,]  174 #>  [9294,]  174 #>  [9295,]  174 #>  [9296,]  174 #>  [9297,]  174 #>  [9298,]  174 #>  [9299,]  174 #>  [9300,]  174 #>  [9301,]  175 #>  [9302,]  175 #>  [9303,]  175 #>  [9304,]  175 #>  [9305,]  175 #>  [9306,]  175 #>  [9307,]  175 #>  [9308,]  175 #>  [9309,]  175 #>  [9310,]  175 #>  [9311,]  175 #>  [9312,]  175 #>  [9313,]  175 #>  [9314,]  175 #>  [9315,]  175 #>  [9316,]  175 #>  [9317,]  175 #>  [9318,]  176 #>  [9319,]  175 #>  [9320,]  175 #>  [9321,]  175 #>  [9322,]  175 #>  [9323,]  175 #>  [9324,]  175 #>  [9325,]  175 #>  [9326,]  175 #>  [9327,]  175 #>  [9328,]  175 #>  [9329,]  175 #>  [9330,]  175 #>  [9331,]  175 #>  [9332,]  175 #>  [9333,]  175 #>  [9334,]  175 #>  [9335,]  175 #>  [9336,]  175 #>  [9337,]  175 #>  [9338,]  175 #>  [9339,]  175 #>  [9340,]  175 #>  [9341,]  175 #>  [9342,]  175 #>  [9343,]  175 #>  [9344,]  175 #>  [9345,]  175 #>  [9346,]  175 #>  [9347,]  175 #>  [9348,]  175 #>  [9349,]  175 #>  [9350,]  175 #>  [9351,]  176 #>  [9352,]  175 #>  [9353,]  176 #>  [9354,]  175 #>  [9355,]  175 #>  [9356,]  175 #>  [9357,]  175 #>  [9358,]  175 #>  [9359,]  175 #>  [9360,]  175 #>  [9361,]  175 #>  [9362,]  175 #>  [9363,]  175 #>  [9364,]  175 #>  [9365,]  175 #>  [9366,]  175 #>  [9367,]  175 #>  [9368,]  175 #>  [9369,]  175 #>  [9370,]  175 #>  [9371,]  175 #>  [9372,]  175 #>  [9373,]  175 #>  [9374,]  175 #>  [9375,]  175 #>  [9376,]  175 #>  [9377,]  175 #>  [9378,]  175 #>  [9379,]  175 #>  [9380,]  175 #>  [9381,]  175 #>  [9382,]  175 #>  [9383,]  175 #>  [9384,]  176 #>  [9385,]  175 #>  [9386,]  175 #>  [9387,]  175 #>  [9388,]  175 #>  [9389,]  175 #>  [9390,]  175 #>  [9391,]  175 #>  [9392,]  175 #>  [9393,]  175 #>  [9394,]  176 #>  [9395,]  175 #>  [9396,]  175 #>  [9397,]  175 #>  [9398,]  175 #>  [9399,]  175 #>  [9400,]  175 #>  [9401,]  178 #>  [9402,]  178 #>  [9403,]  178 #>  [9404,]  177 #>  [9405,]  178 #>  [9406,]  178 #>  [9407,]  178 #>  [9408,]  177 #>  [9409,]  177 #>  [9410,]  177 #>  [9411,]  178 #>  [9412,]  178 #>  [9413,]  178 #>  [9414,]  178 #>  [9415,]  178 #>  [9416,]  178 #>  [9417,]  178 #>  [9418,]  178 #>  [9419,]  178 #>  [9420,]  178 #>  [9421,]  178 #>  [9422,]  178 #>  [9423,]  178 #>  [9424,]  178 #>  [9425,]  178 #>  [9426,]  178 #>  [9427,]  178 #>  [9428,]  178 #>  [9429,]  178 #>  [9430,]  178 #>  [9431,]  178 #>  [9432,]  178 #>  [9433,]  178 #>  [9434,]  178 #>  [9435,]  178 #>  [9436,]  178 #>  [9437,]  178 #>  [9438,]  178 #>  [9439,]  178 #>  [9440,]  178 #>  [9441,]  178 #>  [9442,]  178 #>  [9443,]  177 #>  [9444,]  178 #>  [9445,]  178 #>  [9446,]  178 #>  [9447,]  178 #>  [9448,]  178 #>  [9449,]  178 #>  [9450,]  178 #>  [9451,]  177 #>  [9452,]  178 #>  [9453,]  178 #>  [9454,]  178 #>  [9455,]  178 #>  [9456,]  178 #>  [9457,]  178 #>  [9458,]  178 #>  [9459,]  178 #>  [9460,]  177 #>  [9461,]  178 #>  [9462,]  178 #>  [9463,]  178 #>  [9464,]  177 #>  [9465,]  178 #>  [9466,]  178 #>  [9467,]  177 #>  [9468,]  178 #>  [9469,]  178 #>  [9470,]  178 #>  [9471,]  178 #>  [9472,]  178 #>  [9473,]  178 #>  [9474,]  178 #>  [9475,]  178 #>  [9476,]  178 #>  [9477,]  178 #>  [9478,]  178 #>  [9479,]  178 #>  [9480,]  178 #>  [9481,]  178 #>  [9482,]  178 #>  [9483,]  178 #>  [9484,]  178 #>  [9485,]  177 #>  [9486,]  178 #>  [9487,]  178 #>  [9488,]  178 #>  [9489,]  178 #>  [9490,]  178 #>  [9491,]  177 #>  [9492,]  178 #>  [9493,]  178 #>  [9494,]  178 #>  [9495,]  177 #>  [9496,]  178 #>  [9497,]  178 #>  [9498,]  178 #>  [9499,]  178 #>  [9500,]  178 #>  [9501,]  179 #>  [9502,]  179 #>  [9503,]  179 #>  [9504,]  180 #>  [9505,]  179 #>  [9506,]  180 #>  [9507,]  179 #>  [9508,]  179 #>  [9509,]  180 #>  [9510,]  180 #>  [9511,]  180 #>  [9512,]  180 #>  [9513,]  179 #>  [9514,]  180 #>  [9515,]  180 #>  [9516,]  179 #>  [9517,]  179 #>  [9518,]  180 #>  [9519,]  180 #>  [9520,]  179 #>  [9521,]  180 #>  [9522,]  179 #>  [9523,]  179 #>  [9524,]  179 #>  [9525,]  179 #>  [9526,]  180 #>  [9527,]  180 #>  [9528,]  179 #>  [9529,]  179 #>  [9530,]  180 #>  [9531,]  180 #>  [9532,]  179 #>  [9533,]  180 #>  [9534,]  179 #>  [9535,]  179 #>  [9536,]  180 #>  [9537,]  179 #>  [9538,]  180 #>  [9539,]  179 #>  [9540,]  179 #>  [9541,]  180 #>  [9542,]  180 #>  [9543,]  179 #>  [9544,]  179 #>  [9545,]  179 #>  [9546,]  179 #>  [9547,]  179 #>  [9548,]  180 #>  [9549,]  179 #>  [9550,]  179 #>  [9551,]  179 #>  [9552,]  179 #>  [9553,]  179 #>  [9554,]  179 #>  [9555,]  179 #>  [9556,]  179 #>  [9557,]  179 #>  [9558,]  180 #>  [9559,]  179 #>  [9560,]  180 #>  [9561,]  180 #>  [9562,]  180 #>  [9563,]  179 #>  [9564,]  179 #>  [9565,]  179 #>  [9566,]  179 #>  [9567,]  179 #>  [9568,]  180 #>  [9569,]  180 #>  [9570,]  179 #>  [9571,]  179 #>  [9572,]  179 #>  [9573,]  179 #>  [9574,]  180 #>  [9575,]  180 #>  [9576,]  179 #>  [9577,]  179 #>  [9578,]  179 #>  [9579,]  179 #>  [9580,]  179 #>  [9581,]  179 #>  [9582,]  180 #>  [9583,]  179 #>  [9584,]  179 #>  [9585,]  180 #>  [9586,]  179 #>  [9587,]  179 #>  [9588,]  179 #>  [9589,]  179 #>  [9590,]  179 #>  [9591,]  179 #>  [9592,]  180 #>  [9593,]  180 #>  [9594,]  179 #>  [9595,]  179 #>  [9596,]  180 #>  [9597,]  180 #>  [9598,]  179 #>  [9599,]  180 #>  [9600,]  179 #>  [9601,]  181 #>  [9602,]  181 #>  [9603,]  181 #>  [9604,]  181 #>  [9605,]  181 #>  [9606,]  181 #>  [9607,]  181 #>  [9608,]  181 #>  [9609,]  181 #>  [9610,]  181 #>  [9611,]  181 #>  [9612,]  181 #>  [9613,]  181 #>  [9614,]  181 #>  [9615,]  181 #>  [9616,]  181 #>  [9617,]  181 #>  [9618,]  181 #>  [9619,]  181 #>  [9620,]  182 #>  [9621,]  181 #>  [9622,]  182 #>  [9623,]  181 #>  [9624,]  181 #>  [9625,]  181 #>  [9626,]  181 #>  [9627,]  182 #>  [9628,]  181 #>  [9629,]  182 #>  [9630,]  181 #>  [9631,]  181 #>  [9632,]  181 #>  [9633,]  181 #>  [9634,]  181 #>  [9635,]  181 #>  [9636,]  181 #>  [9637,]  181 #>  [9638,]  181 #>  [9639,]  181 #>  [9640,]  181 #>  [9641,]  181 #>  [9642,]  181 #>  [9643,]  181 #>  [9644,]  181 #>  [9645,]  181 #>  [9646,]  181 #>  [9647,]  181 #>  [9648,]  181 #>  [9649,]  181 #>  [9650,]  181 #>  [9651,]  181 #>  [9652,]  181 #>  [9653,]  181 #>  [9654,]  181 #>  [9655,]  181 #>  [9656,]  181 #>  [9657,]  181 #>  [9658,]  182 #>  [9659,]  181 #>  [9660,]  181 #>  [9661,]  181 #>  [9662,]  181 #>  [9663,]  181 #>  [9664,]  182 #>  [9665,]  181 #>  [9666,]  181 #>  [9667,]  181 #>  [9668,]  181 #>  [9669,]  181 #>  [9670,]  181 #>  [9671,]  181 #>  [9672,]  181 #>  [9673,]  181 #>  [9674,]  181 #>  [9675,]  181 #>  [9676,]  181 #>  [9677,]  182 #>  [9678,]  181 #>  [9679,]  181 #>  [9680,]  181 #>  [9681,]  182 #>  [9682,]  181 #>  [9683,]  181 #>  [9684,]  181 #>  [9685,]  181 #>  [9686,]  181 #>  [9687,]  182 #>  [9688,]  181 #>  [9689,]  181 #>  [9690,]  181 #>  [9691,]  181 #>  [9692,]  181 #>  [9693,]  181 #>  [9694,]  181 #>  [9695,]  181 #>  [9696,]  181 #>  [9697,]  181 #>  [9698,]  181 #>  [9699,]  181 #>  [9700,]  182 #>  [9701,]  184 #>  [9702,]  184 #>  [9703,]  184 #>  [9704,]  184 #>  [9705,]  184 #>  [9706,]  184 #>  [9707,]  184 #>  [9708,]  184 #>  [9709,]  184 #>  [9710,]  184 #>  [9711,]  184 #>  [9712,]  183 #>  [9713,]  184 #>  [9714,]  183 #>  [9715,]  184 #>  [9716,]  184 #>  [9717,]  184 #>  [9718,]  184 #>  [9719,]  184 #>  [9720,]  184 #>  [9721,]  184 #>  [9722,]  184 #>  [9723,]  184 #>  [9724,]  184 #>  [9725,]  184 #>  [9726,]  183 #>  [9727,]  184 #>  [9728,]  184 #>  [9729,]  184 #>  [9730,]  184 #>  [9731,]  184 #>  [9732,]  183 #>  [9733,]  184 #>  [9734,]  184 #>  [9735,]  184 #>  [9736,]  184 #>  [9737,]  184 #>  [9738,]  184 #>  [9739,]  184 #>  [9740,]  184 #>  [9741,]  184 #>  [9742,]  184 #>  [9743,]  184 #>  [9744,]  184 #>  [9745,]  184 #>  [9746,]  184 #>  [9747,]  184 #>  [9748,]  184 #>  [9749,]  184 #>  [9750,]  184 #>  [9751,]  184 #>  [9752,]  184 #>  [9753,]  184 #>  [9754,]  184 #>  [9755,]  184 #>  [9756,]  184 #>  [9757,]  184 #>  [9758,]  184 #>  [9759,]  184 #>  [9760,]  184 #>  [9761,]  184 #>  [9762,]  184 #>  [9763,]  184 #>  [9764,]  184 #>  [9765,]  184 #>  [9766,]  184 #>  [9767,]  184 #>  [9768,]  184 #>  [9769,]  183 #>  [9770,]  184 #>  [9771,]  184 #>  [9772,]  184 #>  [9773,]  184 #>  [9774,]  184 #>  [9775,]  184 #>  [9776,]  184 #>  [9777,]  184 #>  [9778,]  184 #>  [9779,]  184 #>  [9780,]  183 #>  [9781,]  184 #>  [9782,]  184 #>  [9783,]  184 #>  [9784,]  184 #>  [9785,]  184 #>  [9786,]  184 #>  [9787,]  184 #>  [9788,]  184 #>  [9789,]  184 #>  [9790,]  184 #>  [9791,]  184 #>  [9792,]  184 #>  [9793,]  184 #>  [9794,]  184 #>  [9795,]  184 #>  [9796,]  184 #>  [9797,]  184 #>  [9798,]  184 #>  [9799,]  184 #>  [9800,]  184 #>  [9801,]  186 #>  [9802,]  186 #>  [9803,]  185 #>  [9804,]  185 #>  [9805,]  185 #>  [9806,]  186 #>  [9807,]  185 #>  [9808,]  185 #>  [9809,]  185 #>  [9810,]  185 #>  [9811,]  185 #>  [9812,]  185 #>  [9813,]  186 #>  [9814,]  186 #>  [9815,]  186 #>  [9816,]  186 #>  [9817,]  186 #>  [9818,]  185 #>  [9819,]  185 #>  [9820,]  185 #>  [9821,]  186 #>  [9822,]  186 #>  [9823,]  185 #>  [9824,]  185 #>  [9825,]  185 #>  [9826,]  186 #>  [9827,]  186 #>  [9828,]  185 #>  [9829,]  186 #>  [9830,]  185 #>  [9831,]  185 #>  [9832,]  185 #>  [9833,]  186 #>  [9834,]  185 #>  [9835,]  186 #>  [9836,]  185 #>  [9837,]  186 #>  [9838,]  185 #>  [9839,]  185 #>  [9840,]  185 #>  [9841,]  186 #>  [9842,]  185 #>  [9843,]  185 #>  [9844,]  186 #>  [9845,]  185 #>  [9846,]  185 #>  [9847,]  185 #>  [9848,]  185 #>  [9849,]  185 #>  [9850,]  186 #>  [9851,]  185 #>  [9852,]  186 #>  [9853,]  185 #>  [9854,]  185 #>  [9855,]  185 #>  [9856,]  185 #>  [9857,]  185 #>  [9858,]  186 #>  [9859,]  186 #>  [9860,]  185 #>  [9861,]  186 #>  [9862,]  185 #>  [9863,]  185 #>  [9864,]  185 #>  [9865,]  185 #>  [9866,]  185 #>  [9867,]  185 #>  [9868,]  186 #>  [9869,]  185 #>  [9870,]  186 #>  [9871,]  186 #>  [9872,]  185 #>  [9873,]  186 #>  [9874,]  185 #>  [9875,]  185 #>  [9876,]  186 #>  [9877,]  186 #>  [9878,]  185 #>  [9879,]  186 #>  [9880,]  185 #>  [9881,]  186 #>  [9882,]  185 #>  [9883,]  186 #>  [9884,]  185 #>  [9885,]  185 #>  [9886,]  186 #>  [9887,]  185 #>  [9888,]  185 #>  [9889,]  185 #>  [9890,]  186 #>  [9891,]  185 #>  [9892,]  185 #>  [9893,]  186 #>  [9894,]  186 #>  [9895,]  185 #>  [9896,]  186 #>  [9897,]  185 #>  [9898,]  185 #>  [9899,]  186 #>  [9900,]  186 #>  [9901,]  188 #>  [9902,]  188 #>  [9903,]  187 #>  [9904,]  187 #>  [9905,]  187 #>  [9906,]  188 #>  [9907,]  187 #>  [9908,]  187 #>  [9909,]  187 #>  [9910,]  187 #>  [9911,]  187 #>  [9912,]  187 #>  [9913,]  188 #>  [9914,]  188 #>  [9915,]  188 #>  [9916,]  188 #>  [9917,]  188 #>  [9918,]  187 #>  [9919,]  187 #>  [9920,]  187 #>  [9921,]  188 #>  [9922,]  187 #>  [9923,]  187 #>  [9924,]  187 #>  [9925,]  187 #>  [9926,]  187 #>  [9927,]  187 #>  [9928,]  187 #>  [9929,]  188 #>  [9930,]  187 #>  [9931,]  187 #>  [9932,]  187 #>  [9933,]  188 #>  [9934,]  187 #>  [9935,]  188 #>  [9936,]  187 #>  [9937,]  187 #>  [9938,]  187 #>  [9939,]  187 #>  [9940,]  187 #>  [9941,]  188 #>  [9942,]  187 #>  [9943,]  187 #>  [9944,]  188 #>  [9945,]  187 #>  [9946,]  187 #>  [9947,]  187 #>  [9948,]  187 #>  [9949,]  187 #>  [9950,]  188 #>  [9951,]  187 #>  [9952,]  187 #>  [9953,]  187 #>  [9954,]  187 #>  [9955,]  187 #>  [9956,]  187 #>  [9957,]  187 #>  [9958,]  187 #>  [9959,]  188 #>  [9960,]  187 #>  [9961,]  188 #>  [9962,]  187 #>  [9963,]  187 #>  [9964,]  187 #>  [9965,]  187 #>  [9966,]  187 #>  [9967,]  187 #>  [9968,]  188 #>  [9969,]  187 #>  [9970,]  188 #>  [9971,]  187 #>  [9972,]  187 #>  [9973,]  188 #>  [9974,]  187 #>  [9975,]  187 #>  [9976,]  188 #>  [9977,]  188 #>  [9978,]  187 #>  [9979,]  188 #>  [9980,]  187 #>  [9981,]  188 #>  [9982,]  187 #>  [9983,]  188 #>  [9984,]  187 #>  [9985,]  187 #>  [9986,]  188 #>  [9987,]  187 #>  [9988,]  187 #>  [9989,]  187 #>  [9990,]  187 #>  [9991,]  187 #>  [9992,]  187 #>  [9993,]  188 #>  [9994,]  187 #>  [9995,]  187 #>  [9996,]  188 #>  [9997,]  187 #>  [9998,]  187 #>  [9999,]  188 #> [10000,]  187 #> [10001,]  189 #> [10002,]  189 #> [10003,]  189 #> [10004,]  189 #> [10005,]  189 #> [10006,]  189 #> [10007,]  189 #> [10008,]  190 #> [10009,]  190 #> [10010,]  189 #> [10011,]  189 #> [10012,]  189 #> [10013,]  189 #> [10014,]  189 #> [10015,]  189 #> [10016,]  189 #> [10017,]  189 #> [10018,]  189 #> [10019,]  189 #> [10020,]  189 #> [10021,]  189 #> [10022,]  189 #> [10023,]  189 #> [10024,]  189 #> [10025,]  189 #> [10026,]  190 #> [10027,]  189 #> [10028,]  189 #> [10029,]  189 #> [10030,]  189 #> [10031,]  189 #> [10032,]  189 #> [10033,]  189 #> [10034,]  189 #> [10035,]  189 #> [10036,]  189 #> [10037,]  189 #> [10038,]  189 #> [10039,]  189 #> [10040,]  189 #> [10041,]  189 #> [10042,]  189 #> [10043,]  189 #> [10044,]  189 #> [10045,]  189 #> [10046,]  189 #> [10047,]  189 #> [10048,]  189 #> [10049,]  189 #> [10050,]  189 #> [10051,]  189 #> [10052,]  189 #> [10053,]  189 #> [10054,]  189 #> [10055,]  189 #> [10056,]  190 #> [10057,]  189 #> [10058,]  189 #> [10059,]  189 #> [10060,]  189 #> [10061,]  190 #> [10062,]  189 #> [10063,]  189 #> [10064,]  189 #> [10065,]  189 #> [10066,]  189 #> [10067,]  189 #> [10068,]  189 #> [10069,]  189 #> [10070,]  189 #> [10071,]  189 #> [10072,]  189 #> [10073,]  189 #> [10074,]  189 #> [10075,]  189 #> [10076,]  190 #> [10077,]  189 #> [10078,]  189 #> [10079,]  189 #> [10080,]  189 #> [10081,]  189 #> [10082,]  189 #> [10083,]  189 #> [10084,]  189 #> [10085,]  189 #> [10086,]  189 #> [10087,]  189 #> [10088,]  189 #> [10089,]  189 #> [10090,]  189 #> [10091,]  189 #> [10092,]  189 #> [10093,]  189 #> [10094,]  189 #> [10095,]  189 #> [10096,]  189 #> [10097,]  189 #> [10098,]  189 #> [10099,]  189 #> [10100,]  189 #> [10101,]  192 #> [10102,]  192 #> [10103,]  191 #> [10104,]  191 #> [10105,]  191 #> [10106,]  192 #> [10107,]  191 #> [10108,]  191 #> [10109,]  191 #> [10110,]  191 #> [10111,]  191 #> [10112,]  191 #> [10113,]  192 #> [10114,]  192 #> [10115,]  192 #> [10116,]  192 #> [10117,]  192 #> [10118,]  191 #> [10119,]  191 #> [10120,]  191 #> [10121,]  192 #> [10122,]  191 #> [10123,]  191 #> [10124,]  191 #> [10125,]  191 #> [10126,]  192 #> [10127,]  191 #> [10128,]  191 #> [10129,]  192 #> [10130,]  191 #> [10131,]  191 #> [10132,]  191 #> [10133,]  192 #> [10134,]  191 #> [10135,]  192 #> [10136,]  191 #> [10137,]  191 #> [10138,]  191 #> [10139,]  191 #> [10140,]  191 #> [10141,]  192 #> [10142,]  191 #> [10143,]  191 #> [10144,]  192 #> [10145,]  191 #> [10146,]  191 #> [10147,]  191 #> [10148,]  191 #> [10149,]  191 #> [10150,]  192 #> [10151,]  191 #> [10152,]  191 #> [10153,]  191 #> [10154,]  191 #> [10155,]  191 #> [10156,]  191 #> [10157,]  191 #> [10158,]  191 #> [10159,]  192 #> [10160,]  191 #> [10161,]  192 #> [10162,]  191 #> [10163,]  191 #> [10164,]  191 #> [10165,]  191 #> [10166,]  191 #> [10167,]  191 #> [10168,]  192 #> [10169,]  191 #> [10170,]  192 #> [10171,]  192 #> [10172,]  191 #> [10173,]  192 #> [10174,]  191 #> [10175,]  191 #> [10176,]  192 #> [10177,]  192 #> [10178,]  191 #> [10179,]  192 #> [10180,]  191 #> [10181,]  192 #> [10182,]  191 #> [10183,]  192 #> [10184,]  191 #> [10185,]  191 #> [10186,]  192 #> [10187,]  191 #> [10188,]  191 #> [10189,]  191 #> [10190,]  191 #> [10191,]  191 #> [10192,]  191 #> [10193,]  192 #> [10194,]  192 #> [10195,]  191 #> [10196,]  192 #> [10197,]  191 #> [10198,]  191 #> [10199,]  192 #> [10200,]  191 #> [10201,]  194 #> [10202,]  194 #> [10203,]  194 #> [10204,]  194 #> [10205,]  194 #> [10206,]  194 #> [10207,]  194 #> [10208,]  194 #> [10209,]  194 #> [10210,]  194 #> [10211,]  194 #> [10212,]  194 #> [10213,]  194 #> [10214,]  194 #> [10215,]  194 #> [10216,]  194 #> [10217,]  194 #> [10218,]  194 #> [10219,]  194 #> [10220,]  193 #> [10221,]  193 #> [10222,]  194 #> [10223,]  194 #> [10224,]  194 #> [10225,]  193 #> [10226,]  194 #> [10227,]  194 #> [10228,]  194 #> [10229,]  194 #> [10230,]  194 #> [10231,]  194 #> [10232,]  194 #> [10233,]  194 #> [10234,]  194 #> [10235,]  194 #> [10236,]  194 #> [10237,]  194 #> [10238,]  194 #> [10239,]  194 #> [10240,]  194 #> [10241,]  194 #> [10242,]  194 #> [10243,]  194 #> [10244,]  194 #> [10245,]  194 #> [10246,]  194 #> [10247,]  194 #> [10248,]  194 #> [10249,]  194 #> [10250,]  194 #> [10251,]  194 #> [10252,]  194 #> [10253,]  194 #> [10254,]  194 #> [10255,]  194 #> [10256,]  193 #> [10257,]  194 #> [10258,]  194 #> [10259,]  194 #> [10260,]  194 #> [10261,]  194 #> [10262,]  194 #> [10263,]  194 #> [10264,]  194 #> [10265,]  193 #> [10266,]  194 #> [10267,]  194 #> [10268,]  194 #> [10269,]  194 #> [10270,]  194 #> [10271,]  194 #> [10272,]  194 #> [10273,]  194 #> [10274,]  193 #> [10275,]  194 #> [10276,]  194 #> [10277,]  194 #> [10278,]  194 #> [10279,]  194 #> [10280,]  193 #> [10281,]  194 #> [10282,]  194 #> [10283,]  194 #> [10284,]  194 #> [10285,]  193 #> [10286,]  193 #> [10287,]  194 #> [10288,]  194 #> [10289,]  193 #> [10290,]  194 #> [10291,]  194 #> [10292,]  194 #> [10293,]  194 #> [10294,]  194 #> [10295,]  194 #> [10296,]  194 #> [10297,]  194 #> [10298,]  194 #> [10299,]  194 #> [10300,]  194 #> [10301,]  195 #> [10302,]  195 #> [10303,]  195 #> [10304,]  195 #> [10305,]  195 #> [10306,]  195 #> [10307,]  195 #> [10308,]  195 #> [10309,]  195 #> [10310,]  195 #> [10311,]  195 #> [10312,]  195 #> [10313,]  195 #> [10314,]  195 #> [10315,]  195 #> [10316,]  195 #> [10317,]  195 #> [10318,]  195 #> [10319,]  195 #> [10320,]  195 #> [10321,]  195 #> [10322,]  195 #> [10323,]  195 #> [10324,]  195 #> [10325,]  195 #> [10326,]  195 #> [10327,]  195 #> [10328,]  195 #> [10329,]  195 #> [10330,]  195 #> [10331,]  195 #> [10332,]  195 #> [10333,]  195 #> [10334,]  195 #> [10335,]  195 #> [10336,]  195 #> [10337,]  195 #> [10338,]  195 #> [10339,]  195 #> [10340,]  195 #> [10341,]  195 #> [10342,]  195 #> [10343,]  195 #> [10344,]  195 #> [10345,]  195 #> [10346,]  195 #> [10347,]  195 #> [10348,]  195 #> [10349,]  195 #> [10350,]  195 #> [10351,]  195 #> [10352,]  195 #> [10353,]  195 #> [10354,]  195 #> [10355,]  195 #> [10356,]  195 #> [10357,]  195 #> [10358,]  195 #> [10359,]  195 #> [10360,]  195 #> [10361,]  195 #> [10362,]  195 #> [10363,]  195 #> [10364,]  195 #> [10365,]  195 #> [10366,]  195 #> [10367,]  195 #> [10368,]  195 #> [10369,]  195 #> [10370,]  195 #> [10371,]  195 #> [10372,]  195 #> [10373,]  195 #> [10374,]  195 #> [10375,]  195 #> [10376,]  195 #> [10377,]  195 #> [10378,]  195 #> [10379,]  195 #> [10380,]  195 #> [10381,]  195 #> [10382,]  195 #> [10383,]  195 #> [10384,]  195 #> [10385,]  195 #> [10386,]  195 #> [10387,]  195 #> [10388,]  195 #> [10389,]  195 #> [10390,]  195 #> [10391,]  195 #> [10392,]  195 #> [10393,]  195 #> [10394,]  195 #> [10395,]  195 #> [10396,]  195 #> [10397,]  195 #> [10398,]  195 #> [10399,]  195 #> [10400,]  195 #> [10401,]  197 #> [10402,]  196 #> [10403,]  196 #> [10404,]  197 #> [10405,]  197 #> [10406,]  197 #> [10407,]  196 #> [10408,]  197 #> [10409,]  197 #> [10410,]  197 #> [10411,]  197 #> [10412,]  197 #> [10413,]  196 #> [10414,]  197 #> [10415,]  197 #> [10416,]  196 #> [10417,]  197 #> [10418,]  196 #> [10419,]  196 #> [10420,]  197 #> [10421,]  196 #> [10422,]  196 #> [10423,]  196 #> [10424,]  196 #> [10425,]  197 #> [10426,]  197 #> [10427,]  197 #> [10428,]  197 #> [10429,]  197 #> [10430,]  196 #> [10431,]  196 #> [10432,]  196 #> [10433,]  197 #> [10434,]  196 #> [10435,]  196 #> [10436,]  196 #> [10437,]  196 #> [10438,]  197 #> [10439,]  196 #> [10440,]  196 #> [10441,]  197 #> [10442,]  197 #> [10443,]  197 #> [10444,]  196 #> [10445,]  197 #> [10446,]  197 #> [10447,]  196 #> [10448,]  197 #> [10449,]  196 #> [10450,]  197 #> [10451,]  197 #> [10452,]  197 #> [10453,]  197 #> [10454,]  196 #> [10455,]  197 #> [10456,]  197 #> [10457,]  197 #> [10458,]  197 #> [10459,]  196 #> [10460,]  197 #> [10461,]  197 #> [10462,]  196 #> [10463,]  197 #> [10464,]  197 #> [10465,]  197 #> [10466,]  197 #> [10467,]  197 #> [10468,]  197 #> [10469,]  197 #> [10470,]  196 #> [10471,]  197 #> [10472,]  197 #> [10473,]  197 #> [10474,]  197 #> [10475,]  197 #> [10476,]  197 #> [10477,]  196 #> [10478,]  197 #> [10479,]  196 #> [10480,]  196 #> [10481,]  197 #> [10482,]  197 #> [10483,]  196 #> [10484,]  197 #> [10485,]  197 #> [10486,]  196 #> [10487,]  197 #> [10488,]  197 #> [10489,]  197 #> [10490,]  197 #> [10491,]  197 #> [10492,]  197 #> [10493,]  196 #> [10494,]  197 #> [10495,]  196 #> [10496,]  197 #> [10497,]  197 #> [10498,]  196 #> [10499,]  197 #> [10500,]  196 #> [10501,]  198 #> [10502,]  199 #> [10503,]  198 #> [10504,]  198 #> [10505,]  198 #> [10506,]  198 #> [10507,]  198 #> [10508,]  198 #> [10509,]  199 #> [10510,]  199 #> [10511,]  198 #> [10512,]  199 #> [10513,]  198 #> [10514,]  198 #> [10515,]  198 #> [10516,]  198 #> [10517,]  199 #> [10518,]  198 #> [10519,]  198 #> [10520,]  198 #> [10521,]  199 #> [10522,]  198 #> [10523,]  198 #> [10524,]  198 #> [10525,]  198 #> [10526,]  198 #> [10527,]  198 #> [10528,]  198 #> [10529,]  199 #> [10530,]  198 #> [10531,]  198 #> [10532,]  198 #> [10533,]  199 #> [10534,]  198 #> [10535,]  198 #> [10536,]  198 #> [10537,]  198 #> [10538,]  198 #> [10539,]  198 #> [10540,]  198 #> [10541,]  198 #> [10542,]  198 #> [10543,]  198 #> [10544,]  198 #> [10545,]  198 #> [10546,]  198 #> [10547,]  198 #> [10548,]  198 #> [10549,]  198 #> [10550,]  198 #> [10551,]  198 #> [10552,]  198 #> [10553,]  199 #> [10554,]  198 #> [10555,]  198 #> [10556,]  198 #> [10557,]  198 #> [10558,]  198 #> [10559,]  198 #> [10560,]  199 #> [10561,]  198 #> [10562,]  198 #> [10563,]  199 #> [10564,]  198 #> [10565,]  198 #> [10566,]  198 #> [10567,]  198 #> [10568,]  198 #> [10569,]  198 #> [10570,]  199 #> [10571,]  198 #> [10572,]  198 #> [10573,]  198 #> [10574,]  198 #> [10575,]  198 #> [10576,]  198 #> [10577,]  198 #> [10578,]  198 #> [10579,]  198 #> [10580,]  199 #> [10581,]  199 #> [10582,]  198 #> [10583,]  198 #> [10584,]  198 #> [10585,]  198 #> [10586,]  199 #> [10587,]  198 #> [10588,]  198 #> [10589,]  198 #> [10590,]  198 #> [10591,]  198 #> [10592,]  198 #> [10593,]  198 #> [10594,]  198 #> [10595,]  198 #> [10596,]  198 #> [10597,]  198 #> [10598,]  198 #> [10599,]  198 #> [10600,]  198 #> [10601,]  201 #> [10602,]  201 #> [10603,]  200 #> [10604,]  200 #> [10605,]  201 #> [10606,]  201 #> [10607,]  200 #> [10608,]  200 #> [10609,]  201 #> [10610,]  201 #> [10611,]  201 #> [10612,]  200 #> [10613,]  201 #> [10614,]  201 #> [10615,]  201 #> [10616,]  201 #> [10617,]  201 #> [10618,]  201 #> [10619,]  201 #> [10620,]  201 #> [10621,]  201 #> [10622,]  201 #> [10623,]  200 #> [10624,]  201 #> [10625,]  200 #> [10626,]  201 #> [10627,]  201 #> [10628,]  201 #> [10629,]  201 #> [10630,]  201 #> [10631,]  200 #> [10632,]  201 #> [10633,]  201 #> [10634,]  201 #> [10635,]  201 #> [10636,]  201 #> [10637,]  200 #> [10638,]  201 #> [10639,]  201 #> [10640,]  200 #> [10641,]  201 #> [10642,]  201 #> [10643,]  201 #> [10644,]  201 #> [10645,]  201 #> [10646,]  200 #> [10647,]  200 #> [10648,]  201 #> [10649,]  201 #> [10650,]  201 #> [10651,]  201 #> [10652,]  200 #> [10653,]  201 #> [10654,]  201 #> [10655,]  200 #> [10656,]  201 #> [10657,]  200 #> [10658,]  201 #> [10659,]  200 #> [10660,]  200 #> [10661,]  201 #> [10662,]  201 #> [10663,]  201 #> [10664,]  201 #> [10665,]  201 #> [10666,]  201 #> [10667,]  201 #> [10668,]  200 #> [10669,]  201 #> [10670,]  201 #> [10671,]  201 #> [10672,]  201 #> [10673,]  201 #> [10674,]  200 #> [10675,]  201 #> [10676,]  201 #> [10677,]  201 #> [10678,]  201 #> [10679,]  201 #> [10680,]  200 #> [10681,]  201 #> [10682,]  201 #> [10683,]  201 #> [10684,]  201 #> [10685,]  201 #> [10686,]  200 #> [10687,]  201 #> [10688,]  201 #> [10689,]  201 #> [10690,]  201 #> [10691,]  201 #> [10692,]  201 #> [10693,]  201 #> [10694,]  201 #> [10695,]  201 #> [10696,]  200 #> [10697,]  200 #> [10698,]  200 #> [10699,]  201 #> [10700,]  201 #> [10701,]  203 #> [10702,]  203 #> [10703,]  202 #> [10704,]  202 #> [10705,]  202 #> [10706,]  202 #> [10707,]  203 #> [10708,]  203 #> [10709,]  202 #> [10710,]  202 #> [10711,]  202 #> [10712,]  203 #> [10713,]  203 #> [10714,]  202 #> [10715,]  203 #> [10716,]  203 #> [10717,]  203 #> [10718,]  203 #> [10719,]  203 #> [10720,]  203 #> [10721,]  202 #> [10722,]  203 #> [10723,]  203 #> [10724,]  202 #> [10725,]  202 #> [10726,]  203 #> [10727,]  203 #> [10728,]  202 #> [10729,]  203 #> [10730,]  203 #> [10731,]  202 #> [10732,]  202 #> [10733,]  203 #> [10734,]  202 #> [10735,]  202 #> [10736,]  203 #> [10737,]  203 #> [10738,]  203 #> [10739,]  202 #> [10740,]  202 #> [10741,]  203 #> [10742,]  202 #> [10743,]  203 #> [10744,]  203 #> [10745,]  203 #> [10746,]  203 #> [10747,]  202 #> [10748,]  202 #> [10749,]  203 #> [10750,]  203 #> [10751,]  203 #> [10752,]  202 #> [10753,]  203 #> [10754,]  202 #> [10755,]  203 #> [10756,]  203 #> [10757,]  202 #> [10758,]  203 #> [10759,]  203 #> [10760,]  203 #> [10761,]  203 #> [10762,]  202 #> [10763,]  203 #> [10764,]  203 #> [10765,]  202 #> [10766,]  203 #> [10767,]  202 #> [10768,]  203 #> [10769,]  203 #> [10770,]  202 #> [10771,]  203 #> [10772,]  202 #> [10773,]  202 #> [10774,]  202 #> [10775,]  203 #> [10776,]  202 #> [10777,]  203 #> [10778,]  203 #> [10779,]  202 #> [10780,]  203 #> [10781,]  203 #> [10782,]  202 #> [10783,]  203 #> [10784,]  203 #> [10785,]  203 #> [10786,]  202 #> [10787,]  203 #> [10788,]  202 #> [10789,]  202 #> [10790,]  203 #> [10791,]  202 #> [10792,]  202 #> [10793,]  203 #> [10794,]  202 #> [10795,]  203 #> [10796,]  203 #> [10797,]  203 #> [10798,]  202 #> [10799,]  202 #> [10800,]  203 #> [10801,]  205 #> [10802,]  205 #> [10803,]  204 #> [10804,]  205 #> [10805,]  205 #> [10806,]  205 #> [10807,]  204 #> [10808,]  204 #> [10809,]  205 #> [10810,]  205 #> [10811,]  205 #> [10812,]  205 #> [10813,]  204 #> [10814,]  205 #> [10815,]  205 #> [10816,]  204 #> [10817,]  205 #> [10818,]  205 #> [10819,]  205 #> [10820,]  204 #> [10821,]  205 #> [10822,]  204 #> [10823,]  205 #> [10824,]  204 #> [10825,]  204 #> [10826,]  205 #> [10827,]  205 #> [10828,]  205 #> [10829,]  205 #> [10830,]  205 #> [10831,]  205 #> [10832,]  205 #> [10833,]  205 #> [10834,]  205 #> [10835,]  205 #> [10836,]  205 #> [10837,]  205 #> [10838,]  205 #> [10839,]  204 #> [10840,]  204 #> [10841,]  205 #> [10842,]  205 #> [10843,]  205 #> [10844,]  204 #> [10845,]  204 #> [10846,]  204 #> [10847,]  205 #> [10848,]  205 #> [10849,]  204 #> [10850,]  204 #> [10851,]  205 #> [10852,]  205 #> [10853,]  204 #> [10854,]  204 #> [10855,]  204 #> [10856,]  204 #> [10857,]  205 #> [10858,]  205 #> [10859,]  204 #> [10860,]  205 #> [10861,]  205 #> [10862,]  205 #> [10863,]  204 #> [10864,]  205 #> [10865,]  204 #> [10866,]  204 #> [10867,]  205 #> [10868,]  205 #> [10869,]  205 #> [10870,]  204 #> [10871,]  205 #> [10872,]  204 #> [10873,]  205 #> [10874,]  205 #> [10875,]  205 #> [10876,]  205 #> [10877,]  205 #> [10878,]  204 #> [10879,]  205 #> [10880,]  205 #> [10881,]  205 #> [10882,]  205 #> [10883,]  205 #> [10884,]  204 #> [10885,]  205 #> [10886,]  204 #> [10887,]  205 #> [10888,]  205 #> [10889,]  204 #> [10890,]  204 #> [10891,]  205 #> [10892,]  205 #> [10893,]  205 #> [10894,]  204 #> [10895,]  205 #> [10896,]  205 #> [10897,]  205 #> [10898,]  204 #> [10899,]  205 #> [10900,]  204 #> [10901,]  207 #> [10902,]  207 #> [10903,]  206 #> [10904,]  207 #> [10905,]  206 #> [10906,]  206 #> [10907,]  207 #> [10908,]  207 #> [10909,]  207 #> [10910,]  207 #> [10911,]  206 #> [10912,]  206 #> [10913,]  207 #> [10914,]  206 #> [10915,]  207 #> [10916,]  207 #> [10917,]  207 #> [10918,]  207 #> [10919,]  206 #> [10920,]  206 #> [10921,]  207 #> [10922,]  206 #> [10923,]  207 #> [10924,]  206 #> [10925,]  207 #> [10926,]  206 #> [10927,]  207 #> [10928,]  207 #> [10929,]  206 #> [10930,]  206 #> [10931,]  207 #> [10932,]  206 #> [10933,]  207 #> [10934,]  206 #> [10935,]  206 #> [10936,]  206 #> [10937,]  207 #> [10938,]  207 #> [10939,]  207 #> [10940,]  206 #> [10941,]  206 #> [10942,]  206 #> [10943,]  207 #> [10944,]  207 #> [10945,]  207 #> [10946,]  207 #> [10947,]  207 #> [10948,]  206 #> [10949,]  207 #> [10950,]  207 #> [10951,]  206 #> [10952,]  206 #> [10953,]  207 #> [10954,]  206 #> [10955,]  206 #> [10956,]  207 #> [10957,]  206 #> [10958,]  206 #> [10959,]  207 #> [10960,]  206 #> [10961,]  207 #> [10962,]  206 #> [10963,]  206 #> [10964,]  207 #> [10965,]  207 #> [10966,]  206 #> [10967,]  206 #> [10968,]  206 #> [10969,]  206 #> [10970,]  207 #> [10971,]  207 #> [10972,]  207 #> [10973,]  207 #> [10974,]  207 #> [10975,]  207 #> [10976,]  207 #> [10977,]  207 #> [10978,]  206 #> [10979,]  207 #> [10980,]  206 #> [10981,]  206 #> [10982,]  207 #> [10983,]  206 #> [10984,]  207 #> [10985,]  207 #> [10986,]  207 #> [10987,]  207 #> [10988,]  207 #> [10989,]  206 #> [10990,]  207 #> [10991,]  206 #> [10992,]  207 #> [10993,]  206 #> [10994,]  207 #> [10995,]  207 #> [10996,]  207 #> [10997,]  207 #> [10998,]  206 #> [10999,]  206 #> [11000,]  207 #> [11001,]  209 #> [11002,]  209 #> [11003,]  208 #> [11004,]  209 #> [11005,]  209 #> [11006,]  209 #> [11007,]  208 #> [11008,]  209 #> [11009,]  209 #> [11010,]  209 #> [11011,]  209 #> [11012,]  209 #> [11013,]  208 #> [11014,]  209 #> [11015,]  209 #> [11016,]  208 #> [11017,]  209 #> [11018,]  209 #> [11019,]  208 #> [11020,]  209 #> [11021,]  208 #> [11022,]  209 #> [11023,]  208 #> [11024,]  209 #> [11025,]  209 #> [11026,]  209 #> [11027,]  209 #> [11028,]  209 #> [11029,]  209 #> [11030,]  208 #> [11031,]  208 #> [11032,]  209 #> [11033,]  209 #> [11034,]  208 #> [11035,]  208 #> [11036,]  208 #> [11037,]  208 #> [11038,]  209 #> [11039,]  208 #> [11040,]  208 #> [11041,]  209 #> [11042,]  209 #> [11043,]  209 #> [11044,]  209 #> [11045,]  209 #> [11046,]  209 #> [11047,]  208 #> [11048,]  209 #> [11049,]  208 #> [11050,]  209 #> [11051,]  209 #> [11052,]  209 #> [11053,]  209 #> [11054,]  208 #> [11055,]  209 #> [11056,]  209 #> [11057,]  209 #> [11058,]  209 #> [11059,]  209 #> [11060,]  209 #> [11061,]  209 #> [11062,]  208 #> [11063,]  209 #> [11064,]  209 #> [11065,]  209 #> [11066,]  209 #> [11067,]  209 #> [11068,]  209 #> [11069,]  209 #> [11070,]  208 #> [11071,]  209 #> [11072,]  209 #> [11073,]  209 #> [11074,]  209 #> [11075,]  209 #> [11076,]  209 #> [11077,]  208 #> [11078,]  209 #> [11079,]  208 #> [11080,]  208 #> [11081,]  209 #> [11082,]  209 #> [11083,]  208 #> [11084,]  209 #> [11085,]  209 #> [11086,]  209 #> [11087,]  209 #> [11088,]  209 #> [11089,]  209 #> [11090,]  209 #> [11091,]  209 #> [11092,]  209 #> [11093,]  208 #> [11094,]  209 #> [11095,]  208 #> [11096,]  209 #> [11097,]  209 #> [11098,]  208 #> [11099,]  209 #> [11100,]  208 #> [11101,]  211 #> [11102,]  211 #> [11103,]  211 #> [11104,]  211 #> [11105,]  211 #> [11106,]  211 #> [11107,]  210 #> [11108,]  211 #> [11109,]  211 #> [11110,]  211 #> [11111,]  211 #> [11112,]  211 #> [11113,]  211 #> [11114,]  211 #> [11115,]  211 #> [11116,]  211 #> [11117,]  211 #> [11118,]  211 #> [11119,]  211 #> [11120,]  211 #> [11121,]  210 #> [11122,]  211 #> [11123,]  210 #> [11124,]  211 #> [11125,]  211 #> [11126,]  211 #> [11127,]  211 #> [11128,]  211 #> [11129,]  211 #> [11130,]  210 #> [11131,]  211 #> [11132,]  211 #> [11133,]  211 #> [11134,]  211 #> [11135,]  211 #> [11136,]  211 #> [11137,]  211 #> [11138,]  211 #> [11139,]  210 #> [11140,]  211 #> [11141,]  211 #> [11142,]  211 #> [11143,]  211 #> [11144,]  211 #> [11145,]  211 #> [11146,]  211 #> [11147,]  210 #> [11148,]  211 #> [11149,]  210 #> [11150,]  211 #> [11151,]  211 #> [11152,]  211 #> [11153,]  211 #> [11154,]  210 #> [11155,]  211 #> [11156,]  211 #> [11157,]  211 #> [11158,]  211 #> [11159,]  211 #> [11160,]  211 #> [11161,]  211 #> [11162,]  210 #> [11163,]  211 #> [11164,]  211 #> [11165,]  211 #> [11166,]  211 #> [11167,]  211 #> [11168,]  211 #> [11169,]  211 #> [11170,]  210 #> [11171,]  211 #> [11172,]  211 #> [11173,]  211 #> [11174,]  211 #> [11175,]  211 #> [11176,]  211 #> [11177,]  211 #> [11178,]  211 #> [11179,]  210 #> [11180,]  210 #> [11181,]  211 #> [11182,]  211 #> [11183,]  210 #> [11184,]  211 #> [11185,]  211 #> [11186,]  211 #> [11187,]  211 #> [11188,]  211 #> [11189,]  211 #> [11190,]  211 #> [11191,]  211 #> [11192,]  211 #> [11193,]  211 #> [11194,]  211 #> [11195,]  210 #> [11196,]  211 #> [11197,]  211 #> [11198,]  210 #> [11199,]  211 #> [11200,]  211 #> [11201,]  213 #> [11202,]  213 #> [11203,]  212 #> [11204,]  213 #> [11205,]  213 #> [11206,]  213 #> [11207,]  213 #> [11208,]  213 #> [11209,]  213 #> [11210,]  213 #> [11211,]  212 #> [11212,]  212 #> [11213,]  213 #> [11214,]  212 #> [11215,]  213 #> [11216,]  213 #> [11217,]  213 #> [11218,]  213 #> [11219,]  212 #> [11220,]  212 #> [11221,]  213 #> [11222,]  212 #> [11223,]  213 #> [11224,]  212 #> [11225,]  213 #> [11226,]  212 #> [11227,]  213 #> [11228,]  213 #> [11229,]  212 #> [11230,]  212 #> [11231,]  213 #> [11232,]  212 #> [11233,]  213 #> [11234,]  212 #> [11235,]  213 #> [11236,]  212 #> [11237,]  213 #> [11238,]  213 #> [11239,]  213 #> [11240,]  212 #> [11241,]  212 #> [11242,]  212 #> [11243,]  213 #> [11244,]  213 #> [11245,]  213 #> [11246,]  213 #> [11247,]  213 #> [11248,]  212 #> [11249,]  213 #> [11250,]  213 #> [11251,]  212 #> [11252,]  213 #> [11253,]  213 #> [11254,]  212 #> [11255,]  213 #> [11256,]  213 #> [11257,]  213 #> [11258,]  213 #> [11259,]  213 #> [11260,]  212 #> [11261,]  213 #> [11262,]  212 #> [11263,]  212 #> [11264,]  213 #> [11265,]  213 #> [11266,]  212 #> [11267,]  212 #> [11268,]  212 #> [11269,]  212 #> [11270,]  213 #> [11271,]  213 #> [11272,]  213 #> [11273,]  213 #> [11274,]  213 #> [11275,]  213 #> [11276,]  213 #> [11277,]  213 #> [11278,]  212 #> [11279,]  213 #> [11280,]  212 #> [11281,]  212 #> [11282,]  213 #> [11283,]  212 #> [11284,]  213 #> [11285,]  213 #> [11286,]  213 #> [11287,]  213 #> [11288,]  213 #> [11289,]  212 #> [11290,]  213 #> [11291,]  212 #> [11292,]  213 #> [11293,]  213 #> [11294,]  213 #> [11295,]  213 #> [11296,]  213 #> [11297,]  213 #> [11298,]  213 #> [11299,]  213 #> [11300,]  213 #> [11301,]  215 #> [11302,]  215 #> [11303,]  214 #> [11304,]  215 #> [11305,]  215 #> [11306,]  215 #> [11307,]  214 #> [11308,]  214 #> [11309,]  215 #> [11310,]  215 #> [11311,]  215 #> [11312,]  215 #> [11313,]  214 #> [11314,]  215 #> [11315,]  215 #> [11316,]  214 #> [11317,]  215 #> [11318,]  215 #> [11319,]  215 #> [11320,]  214 #> [11321,]  215 #> [11322,]  214 #> [11323,]  215 #> [11324,]  214 #> [11325,]  214 #> [11326,]  215 #> [11327,]  215 #> [11328,]  215 #> [11329,]  215 #> [11330,]  215 #> [11331,]  215 #> [11332,]  215 #> [11333,]  215 #> [11334,]  215 #> [11335,]  215 #> [11336,]  215 #> [11337,]  215 #> [11338,]  215 #> [11339,]  214 #> [11340,]  214 #> [11341,]  215 #> [11342,]  215 #> [11343,]  215 #> [11344,]  214 #> [11345,]  215 #> [11346,]  214 #> [11347,]  215 #> [11348,]  215 #> [11349,]  214 #> [11350,]  214 #> [11351,]  215 #> [11352,]  215 #> [11353,]  214 #> [11354,]  215 #> [11355,]  214 #> [11356,]  214 #> [11357,]  215 #> [11358,]  215 #> [11359,]  214 #> [11360,]  215 #> [11361,]  215 #> [11362,]  215 #> [11363,]  215 #> [11364,]  215 #> [11365,]  214 #> [11366,]  214 #> [11367,]  215 #> [11368,]  215 #> [11369,]  215 #> [11370,]  214 #> [11371,]  215 #> [11372,]  214 #> [11373,]  215 #> [11374,]  215 #> [11375,]  215 #> [11376,]  215 #> [11377,]  215 #> [11378,]  215 #> [11379,]  215 #> [11380,]  215 #> [11381,]  215 #> [11382,]  215 #> [11383,]  215 #> [11384,]  214 #> [11385,]  215 #> [11386,]  214 #> [11387,]  215 #> [11388,]  215 #> [11389,]  214 #> [11390,]  214 #> [11391,]  215 #> [11392,]  215 #> [11393,]  215 #> [11394,]  215 #> [11395,]  215 #> [11396,]  215 #> [11397,]  215 #> [11398,]  214 #> [11399,]  215 #> [11400,]  214 #> [11401,]  217 #> [11402,]  216 #> [11403,]  216 #> [11404,]  217 #> [11405,]  217 #> [11406,]  216 #> [11407,]  216 #> [11408,]  216 #> [11409,]  216 #> [11410,]  217 #> [11411,]  217 #> [11412,]  217 #> [11413,]  217 #> [11414,]  217 #> [11415,]  217 #> [11416,]  217 #> [11417,]  217 #> [11418,]  217 #> [11419,]  217 #> [11420,]  216 #> [11421,]  216 #> [11422,]  217 #> [11423,]  216 #> [11424,]  217 #> [11425,]  216 #> [11426,]  217 #> [11427,]  217 #> [11428,]  217 #> [11429,]  216 #> [11430,]  217 #> [11431,]  217 #> [11432,]  217 #> [11433,]  217 #> [11434,]  216 #> [11435,]  216 #> [11436,]  216 #> [11437,]  216 #> [11438,]  217 #> [11439,]  217 #> [11440,]  216 #> [11441,]  216 #> [11442,]  216 #> [11443,]  217 #> [11444,]  216 #> [11445,]  216 #> [11446,]  217 #> [11447,]  217 #> [11448,]  217 #> [11449,]  216 #> [11450,]  216 #> [11451,]  217 #> [11452,]  217 #> [11453,]  216 #> [11454,]  216 #> [11455,]  216 #> [11456,]  216 #> [11457,]  216 #> [11458,]  217 #> [11459,]  217 #> [11460,]  216 #> [11461,]  217 #> [11462,]  216 #> [11463,]  217 #> [11464,]  216 #> [11465,]  216 #> [11466,]  217 #> [11467,]  216 #> [11468,]  217 #> [11469,]  217 #> [11470,]  217 #> [11471,]  217 #> [11472,]  216 #> [11473,]  216 #> [11474,]  216 #> [11475,]  217 #> [11476,]  216 #> [11477,]  217 #> [11478,]  217 #> [11479,]  217 #> [11480,]  216 #> [11481,]  216 #> [11482,]  216 #> [11483,]  217 #> [11484,]  216 #> [11485,]  216 #> [11486,]  216 #> [11487,]  217 #> [11488,]  216 #> [11489,]  216 #> [11490,]  217 #> [11491,]  217 #> [11492,]  217 #> [11493,]  217 #> [11494,]  216 #> [11495,]  217 #> [11496,]  217 #> [11497,]  216 #> [11498,]  216 #> [11499,]  216 #> [11500,]  217 #> [11501,]  219 #> [11502,]  218 #> [11503,]  219 #> [11504,]  219 #> [11505,]  219 #> [11506,]  218 #> [11507,]  219 #> [11508,]  219 #> [11509,]  219 #> [11510,]  219 #> [11511,]  218 #> [11512,]  218 #> [11513,]  219 #> [11514,]  219 #> [11515,]  218 #> [11516,]  219 #> [11517,]  218 #> [11518,]  219 #> [11519,]  218 #> [11520,]  219 #> [11521,]  219 #> [11522,]  219 #> [11523,]  218 #> [11524,]  219 #> [11525,]  219 #> [11526,]  218 #> [11527,]  219 #> [11528,]  219 #> [11529,]  218 #> [11530,]  218 #> [11531,]  218 #> [11532,]  219 #> [11533,]  219 #> [11534,]  218 #> [11535,]  218 #> [11536,]  219 #> [11537,]  218 #> [11538,]  219 #> [11539,]  219 #> [11540,]  219 #> [11541,]  219 #> [11542,]  218 #> [11543,]  218 #> [11544,]  218 #> [11545,]  219 #> [11546,]  218 #> [11547,]  218 #> [11548,]  218 #> [11549,]  219 #> [11550,]  219 #> [11551,]  219 #> [11552,]  219 #> [11553,]  219 #> [11554,]  219 #> [11555,]  219 #> [11556,]  218 #> [11557,]  219 #> [11558,]  219 #> [11559,]  219 #> [11560,]  218 #> [11561,]  218 #> [11562,]  219 #> [11563,]  218 #> [11564,]  218 #> [11565,]  218 #> [11566,]  218 #> [11567,]  219 #> [11568,]  218 #> [11569,]  219 #> [11570,]  218 #> [11571,]  219 #> [11572,]  219 #> [11573,]  219 #> [11574,]  219 #> [11575,]  218 #> [11576,]  219 #> [11577,]  219 #> [11578,]  218 #> [11579,]  218 #> [11580,]  219 #> [11581,]  218 #> [11582,]  219 #> [11583,]  219 #> [11584,]  219 #> [11585,]  219 #> [11586,]  219 #> [11587,]  219 #> [11588,]  219 #> [11589,]  219 #> [11590,]  219 #> [11591,]  219 #> [11592,]  218 #> [11593,]  218 #> [11594,]  218 #> [11595,]  218 #> [11596,]  218 #> [11597,]  219 #> [11598,]  219 #> [11599,]  219 #> [11600,]  218 #> [11601,]  221 #> [11602,]  221 #> [11603,]  220 #> [11604,]  221 #> [11605,]  220 #> [11606,]  220 #> [11607,]  221 #> [11608,]  221 #> [11609,]  221 #> [11610,]  221 #> [11611,]  220 #> [11612,]  220 #> [11613,]  221 #> [11614,]  220 #> [11615,]  221 #> [11616,]  221 #> [11617,]  221 #> [11618,]  221 #> [11619,]  220 #> [11620,]  220 #> [11621,]  221 #> [11622,]  220 #> [11623,]  221 #> [11624,]  220 #> [11625,]  221 #> [11626,]  220 #> [11627,]  221 #> [11628,]  221 #> [11629,]  220 #> [11630,]  220 #> [11631,]  221 #> [11632,]  220 #> [11633,]  220 #> [11634,]  220 #> [11635,]  220 #> [11636,]  220 #> [11637,]  221 #> [11638,]  221 #> [11639,]  221 #> [11640,]  220 #> [11641,]  220 #> [11642,]  220 #> [11643,]  221 #> [11644,]  221 #> [11645,]  221 #> [11646,]  221 #> [11647,]  221 #> [11648,]  220 #> [11649,]  221 #> [11650,]  221 #> [11651,]  220 #> [11652,]  220 #> [11653,]  221 #> [11654,]  220 #> [11655,]  220 #> [11656,]  221 #> [11657,]  220 #> [11658,]  220 #> [11659,]  221 #> [11660,]  220 #> [11661,]  221 #> [11662,]  220 #> [11663,]  220 #> [11664,]  221 #> [11665,]  221 #> [11666,]  220 #> [11667,]  220 #> [11668,]  220 #> [11669,]  220 #> [11670,]  221 #> [11671,]  221 #> [11672,]  221 #> [11673,]  221 #> [11674,]  221 #> [11675,]  221 #> [11676,]  221 #> [11677,]  221 #> [11678,]  220 #> [11679,]  221 #> [11680,]  220 #> [11681,]  220 #> [11682,]  221 #> [11683,]  220 #> [11684,]  221 #> [11685,]  220 #> [11686,]  221 #> [11687,]  221 #> [11688,]  221 #> [11689,]  220 #> [11690,]  221 #> [11691,]  220 #> [11692,]  221 #> [11693,]  220 #> [11694,]  221 #> [11695,]  221 #> [11696,]  221 #> [11697,]  220 #> [11698,]  220 #> [11699,]  220 #> [11700,]  221 #> [11701,]  223 #> [11702,]  223 #> [11703,]  222 #> [11704,]  223 #> [11705,]  223 #> [11706,]  223 #> [11707,]  222 #> [11708,]  222 #> [11709,]  223 #> [11710,]  223 #> [11711,]  223 #> [11712,]  223 #> [11713,]  223 #> [11714,]  223 #> [11715,]  223 #> [11716,]  223 #> [11717,]  223 #> [11718,]  223 #> [11719,]  223 #> [11720,]  222 #> [11721,]  223 #> [11722,]  223 #> [11723,]  223 #> [11724,]  223 #> [11725,]  222 #> [11726,]  223 #> [11727,]  223 #> [11728,]  223 #> [11729,]  223 #> [11730,]  223 #> [11731,]  223 #> [11732,]  223 #> [11733,]  223 #> [11734,]  223 #> [11735,]  223 #> [11736,]  223 #> [11737,]  223 #> [11738,]  223 #> [11739,]  222 #> [11740,]  223 #> [11741,]  223 #> [11742,]  223 #> [11743,]  223 #> [11744,]  222 #> [11745,]  223 #> [11746,]  223 #> [11747,]  223 #> [11748,]  223 #> [11749,]  222 #> [11750,]  222 #> [11751,]  223 #> [11752,]  223 #> [11753,]  222 #> [11754,]  223 #> [11755,]  222 #> [11756,]  222 #> [11757,]  223 #> [11758,]  223 #> [11759,]  222 #> [11760,]  223 #> [11761,]  223 #> [11762,]  223 #> [11763,]  223 #> [11764,]  223 #> [11765,]  222 #> [11766,]  222 #> [11767,]  223 #> [11768,]  223 #> [11769,]  223 #> [11770,]  223 #> [11771,]  223 #> [11772,]  223 #> [11773,]  223 #> [11774,]  223 #> [11775,]  223 #> [11776,]  223 #> [11777,]  223 #> [11778,]  223 #> [11779,]  223 #> [11780,]  223 #> [11781,]  223 #> [11782,]  223 #> [11783,]  223 #> [11784,]  222 #> [11785,]  223 #> [11786,]  222 #> [11787,]  223 #> [11788,]  223 #> [11789,]  223 #> [11790,]  222 #> [11791,]  223 #> [11792,]  223 #> [11793,]  223 #> [11794,]  223 #> [11795,]  223 #> [11796,]  223 #> [11797,]  223 #> [11798,]  222 #> [11799,]  223 #> [11800,]  222 #> [11801,]  224 #> [11802,]  224 #> [11803,]  224 #> [11804,]  225 #> [11805,]  224 #> [11806,]  224 #> [11807,]  224 #> [11808,]  224 #> [11809,]  224 #> [11810,]  225 #> [11811,]  224 #> [11812,]  224 #> [11813,]  224 #> [11814,]  224 #> [11815,]  225 #> [11816,]  224 #> [11817,]  224 #> [11818,]  225 #> [11819,]  224 #> [11820,]  224 #> [11821,]  225 #> [11822,]  224 #> [11823,]  225 #> [11824,]  224 #> [11825,]  225 #> [11826,]  224 #> [11827,]  224 #> [11828,]  224 #> [11829,]  224 #> [11830,]  224 #> [11831,]  224 #> [11832,]  224 #> [11833,]  224 #> [11834,]  224 #> [11835,]  224 #> [11836,]  224 #> [11837,]  224 #> [11838,]  224 #> [11839,]  225 #> [11840,]  224 #> [11841,]  224 #> [11842,]  224 #> [11843,]  225 #> [11844,]  224 #> [11845,]  225 #> [11846,]  224 #> [11847,]  224 #> [11848,]  224 #> [11849,]  224 #> [11850,]  224 #> [11851,]  224 #> [11852,]  224 #> [11853,]  225 #> [11854,]  224 #> [11855,]  224 #> [11856,]  224 #> [11857,]  224 #> [11858,]  224 #> [11859,]  224 #> [11860,]  224 #> [11861,]  225 #> [11862,]  224 #> [11863,]  224 #> [11864,]  224 #> [11865,]  224 #> [11866,]  224 #> [11867,]  224 #> [11868,]  224 #> [11869,]  224 #> [11870,]  224 #> [11871,]  224 #> [11872,]  225 #> [11873,]  225 #> [11874,]  225 #> [11875,]  225 #> [11876,]  225 #> [11877,]  225 #> [11878,]  224 #> [11879,]  224 #> [11880,]  224 #> [11881,]  224 #> [11882,]  224 #> [11883,]  224 #> [11884,]  225 #> [11885,]  224 #> [11886,]  224 #> [11887,]  224 #> [11888,]  224 #> [11889,]  224 #> [11890,]  224 #> [11891,]  224 #> [11892,]  224 #> [11893,]  224 #> [11894,]  225 #> [11895,]  225 #> [11896,]  224 #> [11897,]  224 #> [11898,]  224 #> [11899,]  224 #> [11900,]  225 #> [11901,]  226 #> [11902,]  226 #> [11903,]  226 #> [11904,]  226 #> [11905,]  226 #> [11906,]  226 #> [11907,]  226 #> [11908,]  227 #> [11909,]  226 #> [11910,]  226 #> [11911,]  226 #> [11912,]  226 #> [11913,]  227 #> [11914,]  226 #> [11915,]  227 #> [11916,]  227 #> [11917,]  226 #> [11918,]  226 #> [11919,]  227 #> [11920,]  227 #> [11921,]  226 #> [11922,]  227 #> [11923,]  226 #> [11924,]  226 #> [11925,]  226 #> [11926,]  227 #> [11927,]  227 #> [11928,]  226 #> [11929,]  227 #> [11930,]  227 #> [11931,]  226 #> [11932,]  226 #> [11933,]  226 #> [11934,]  226 #> [11935,]  226 #> [11936,]  227 #> [11937,]  227 #> [11938,]  227 #> [11939,]  226 #> [11940,]  226 #> [11941,]  227 #> [11942,]  226 #> [11943,]  227 #> [11944,]  227 #> [11945,]  226 #> [11946,]  227 #> [11947,]  226 #> [11948,]  226 #> [11949,]  226 #> [11950,]  227 #> [11951,]  227 #> [11952,]  226 #> [11953,]  227 #> [11954,]  226 #> [11955,]  227 #> [11956,]  227 #> [11957,]  226 #> [11958,]  227 #> [11959,]  227 #> [11960,]  227 #> [11961,]  226 #> [11962,]  226 #> [11963,]  226 #> [11964,]  227 #> [11965,]  226 #> [11966,]  227 #> [11967,]  226 #> [11968,]  226 #> [11969,]  227 #> [11970,]  226 #> [11971,]  227 #> [11972,]  226 #> [11973,]  226 #> [11974,]  226 #> [11975,]  226 #> [11976,]  226 #> [11977,]  227 #> [11978,]  226 #> [11979,]  226 #> [11980,]  227 #> [11981,]  227 #> [11982,]  226 #> [11983,]  227 #> [11984,]  227 #> [11985,]  227 #> [11986,]  226 #> [11987,]  227 #> [11988,]  226 #> [11989,]  226 #> [11990,]  227 #> [11991,]  226 #> [11992,]  226 #> [11993,]  226 #> [11994,]  226 #> [11995,]  227 #> [11996,]  227 #> [11997,]  227 #> [11998,]  226 #> [11999,]  226 #> [12000,]  227 #> [12001,]  229 #> [12002,]  228 #> [12003,]  228 #> [12004,]  229 #> [12005,]  228 #> [12006,]  228 #> [12007,]  229 #> [12008,]  228 #> [12009,]  229 #> [12010,]  229 #> [12011,]  228 #> [12012,]  228 #> [12013,]  229 #> [12014,]  229 #> [12015,]  228 #> [12016,]  229 #> [12017,]  228 #> [12018,]  228 #> [12019,]  228 #> [12020,]  229 #> [12021,]  228 #> [12022,]  229 #> [12023,]  228 #> [12024,]  229 #> [12025,]  229 #> [12026,]  228 #> [12027,]  228 #> [12028,]  229 #> [12029,]  228 #> [12030,]  228 #> [12031,]  228 #> [12032,]  228 #> [12033,]  228 #> [12034,]  228 #> [12035,]  228 #> [12036,]  229 #> [12037,]  228 #> [12038,]  228 #> [12039,]  229 #> [12040,]  228 #> [12041,]  228 #> [12042,]  228 #> [12043,]  228 #> [12044,]  228 #> [12045,]  229 #> [12046,]  228 #> [12047,]  228 #> [12048,]  228 #> [12049,]  229 #> [12050,]  229 #> [12051,]  228 #> [12052,]  229 #> [12053,]  229 #> [12054,]  229 #> [12055,]  229 #> [12056,]  228 #> [12057,]  229 #> [12058,]  229 #> [12059,]  229 #> [12060,]  228 #> [12061,]  228 #> [12062,]  228 #> [12063,]  228 #> [12064,]  228 #> [12065,]  228 #> [12066,]  228 #> [12067,]  229 #> [12068,]  228 #> [12069,]  228 #> [12070,]  228 #> [12071,]  228 #> [12072,]  229 #> [12073,]  229 #> [12074,]  228 #> [12075,]  228 #> [12076,]  229 #> [12077,]  228 #> [12078,]  228 #> [12079,]  228 #> [12080,]  228 #> [12081,]  228 #> [12082,]  228 #> [12083,]  228 #> [12084,]  228 #> [12085,]  229 #> [12086,]  229 #> [12087,]  229 #> [12088,]  228 #> [12089,]  228 #> [12090,]  229 #> [12091,]  229 #> [12092,]  228 #> [12093,]  228 #> [12094,]  228 #> [12095,]  228 #> [12096,]  228 #> [12097,]  228 #> [12098,]  228 #> [12099,]  228 #> [12100,]  228 #> [12101,]  230 #> [12102,]  230 #> [12103,]  230 #> [12104,]  231 #> [12105,]  230 #> [12106,]  230 #> [12107,]  231 #> [12108,]  230 #> [12109,]  231 #> [12110,]  231 #> [12111,]  230 #> [12112,]  230 #> [12113,]  231 #> [12114,]  231 #> [12115,]  230 #> [12116,]  231 #> [12117,]  230 #> [12118,]  230 #> [12119,]  230 #> [12120,]  231 #> [12121,]  230 #> [12122,]  231 #> [12123,]  230 #> [12124,]  231 #> [12125,]  231 #> [12126,]  230 #> [12127,]  230 #> [12128,]  231 #> [12129,]  230 #> [12130,]  230 #> [12131,]  230 #> [12132,]  230 #> [12133,]  230 #> [12134,]  230 #> [12135,]  230 #> [12136,]  231 #> [12137,]  230 #> [12138,]  230 #> [12139,]  231 #> [12140,]  230 #> [12141,]  230 #> [12142,]  230 #> [12143,]  230 #> [12144,]  230 #> [12145,]  230 #> [12146,]  230 #> [12147,]  230 #> [12148,]  230 #> [12149,]  230 #> [12150,]  231 #> [12151,]  230 #> [12152,]  231 #> [12153,]  230 #> [12154,]  231 #> [12155,]  231 #> [12156,]  230 #> [12157,]  231 #> [12158,]  230 #> [12159,]  231 #> [12160,]  230 #> [12161,]  230 #> [12162,]  230 #> [12163,]  230 #> [12164,]  230 #> [12165,]  230 #> [12166,]  230 #> [12167,]  231 #> [12168,]  230 #> [12169,]  230 #> [12170,]  230 #> [12171,]  230 #> [12172,]  230 #> [12173,]  231 #> [12174,]  230 #> [12175,]  230 #> [12176,]  231 #> [12177,]  230 #> [12178,]  230 #> [12179,]  230 #> [12180,]  230 #> [12181,]  230 #> [12182,]  230 #> [12183,]  230 #> [12184,]  230 #> [12185,]  230 #> [12186,]  231 #> [12187,]  230 #> [12188,]  230 #> [12189,]  230 #> [12190,]  231 #> [12191,]  231 #> [12192,]  230 #> [12193,]  230 #> [12194,]  230 #> [12195,]  230 #> [12196,]  230 #> [12197,]  230 #> [12198,]  230 #> [12199,]  230 #> [12200,]  230 #> [12201,]  233 #> [12202,]  233 #> [12203,]  232 #> [12204,]  233 #> [12205,]  233 #> [12206,]  233 #> [12207,]  233 #> [12208,]  233 #> [12209,]  232 #> [12210,]  232 #> [12211,]  232 #> [12212,]  233 #> [12213,]  233 #> [12214,]  232 #> [12215,]  233 #> [12216,]  233 #> [12217,]  233 #> [12218,]  233 #> [12219,]  233 #> [12220,]  233 #> [12221,]  232 #> [12222,]  233 #> [12223,]  233 #> [12224,]  233 #> [12225,]  233 #> [12226,]  233 #> [12227,]  233 #> [12228,]  232 #> [12229,]  233 #> [12230,]  233 #> [12231,]  232 #> [12232,]  232 #> [12233,]  233 #> [12234,]  232 #> [12235,]  232 #> [12236,]  233 #> [12237,]  233 #> [12238,]  233 #> [12239,]  232 #> [12240,]  232 #> [12241,]  233 #> [12242,]  233 #> [12243,]  233 #> [12244,]  233 #> [12245,]  233 #> [12246,]  233 #> [12247,]  233 #> [12248,]  232 #> [12249,]  233 #> [12250,]  233 #> [12251,]  233 #> [12252,]  233 #> [12253,]  233 #> [12254,]  233 #> [12255,]  233 #> [12256,]  233 #> [12257,]  233 #> [12258,]  233 #> [12259,]  233 #> [12260,]  233 #> [12261,]  233 #> [12262,]  233 #> [12263,]  233 #> [12264,]  233 #> [12265,]  232 #> [12266,]  233 #> [12267,]  233 #> [12268,]  233 #> [12269,]  233 #> [12270,]  232 #> [12271,]  233 #> [12272,]  233 #> [12273,]  233 #> [12274,]  232 #> [12275,]  233 #> [12276,]  233 #> [12277,]  233 #> [12278,]  233 #> [12279,]  233 #> [12280,]  233 #> [12281,]  233 #> [12282,]  232 #> [12283,]  233 #> [12284,]  233 #> [12285,]  233 #> [12286,]  233 #> [12287,]  233 #> [12288,]  233 #> [12289,]  233 #> [12290,]  233 #> [12291,]  233 #> [12292,]  233 #> [12293,]  233 #> [12294,]  233 #> [12295,]  233 #> [12296,]  233 #> [12297,]  233 #> [12298,]  232 #> [12299,]  233 #> [12300,]  233 #> [12301,]  234 #> [12302,]  235 #> [12303,]  234 #> [12304,]  235 #> [12305,]  235 #> [12306,]  234 #> [12307,]  235 #> [12308,]  235 #> [12309,]  235 #> [12310,]  235 #> [12311,]  234 #> [12312,]  235 #> [12313,]  235 #> [12314,]  234 #> [12315,]  235 #> [12316,]  234 #> [12317,]  235 #> [12318,]  235 #> [12319,]  234 #> [12320,]  235 #> [12321,]  235 #> [12322,]  235 #> [12323,]  235 #> [12324,]  235 #> [12325,]  235 #> [12326,]  234 #> [12327,]  235 #> [12328,]  234 #> [12329,]  235 #> [12330,]  235 #> [12331,]  235 #> [12332,]  235 #> [12333,]  235 #> [12334,]  234 #> [12335,]  234 #> [12336,]  235 #> [12337,]  234 #> [12338,]  234 #> [12339,]  235 #> [12340,]  235 #> [12341,]  235 #> [12342,]  234 #> [12343,]  235 #> [12344,]  235 #> [12345,]  234 #> [12346,]  235 #> [12347,]  235 #> [12348,]  235 #> [12349,]  234 #> [12350,]  235 #> [12351,]  235 #> [12352,]  234 #> [12353,]  235 #> [12354,]  235 #> [12355,]  235 #> [12356,]  235 #> [12357,]  235 #> [12358,]  235 #> [12359,]  234 #> [12360,]  235 #> [12361,]  235 #> [12362,]  235 #> [12363,]  235 #> [12364,]  234 #> [12365,]  235 #> [12366,]  235 #> [12367,]  235 #> [12368,]  234 #> [12369,]  235 #> [12370,]  235 #> [12371,]  235 #> [12372,]  234 #> [12373,]  234 #> [12374,]  235 #> [12375,]  235 #> [12376,]  235 #> [12377,]  234 #> [12378,]  235 #> [12379,]  234 #> [12380,]  235 #> [12381,]  235 #> [12382,]  235 #> [12383,]  235 #> [12384,]  235 #> [12385,]  235 #> [12386,]  235 #> [12387,]  235 #> [12388,]  235 #> [12389,]  234 #> [12390,]  235 #> [12391,]  235 #> [12392,]  235 #> [12393,]  235 #> [12394,]  234 #> [12395,]  235 #> [12396,]  234 #> [12397,]  234 #> [12398,]  235 #> [12399,]  235 #> [12400,]  234 #> [12401,]  237 #> [12402,]  236 #> [12403,]  237 #> [12404,]  237 #> [12405,]  237 #> [12406,]  237 #> [12407,]  237 #> [12408,]  237 #> [12409,]  237 #> [12410,]  237 #> [12411,]  237 #> [12412,]  236 #> [12413,]  237 #> [12414,]  237 #> [12415,]  236 #> [12416,]  237 #> [12417,]  236 #> [12418,]  237 #> [12419,]  237 #> [12420,]  237 #> [12421,]  237 #> [12422,]  237 #> [12423,]  236 #> [12424,]  237 #> [12425,]  237 #> [12426,]  237 #> [12427,]  237 #> [12428,]  237 #> [12429,]  236 #> [12430,]  237 #> [12431,]  236 #> [12432,]  237 #> [12433,]  237 #> [12434,]  236 #> [12435,]  237 #> [12436,]  237 #> [12437,]  236 #> [12438,]  237 #> [12439,]  237 #> [12440,]  237 #> [12441,]  237 #> [12442,]  236 #> [12443,]  236 #> [12444,]  236 #> [12445,]  237 #> [12446,]  237 #> [12447,]  237 #> [12448,]  236 #> [12449,]  237 #> [12450,]  237 #> [12451,]  237 #> [12452,]  237 #> [12453,]  237 #> [12454,]  237 #> [12455,]  237 #> [12456,]  237 #> [12457,]  237 #> [12458,]  237 #> [12459,]  237 #> [12460,]  237 #> [12461,]  237 #> [12462,]  237 #> [12463,]  236 #> [12464,]  236 #> [12465,]  237 #> [12466,]  237 #> [12467,]  237 #> [12468,]  237 #> [12469,]  237 #> [12470,]  236 #> [12471,]  237 #> [12472,]  237 #> [12473,]  237 #> [12474,]  237 #> [12475,]  236 #> [12476,]  237 #> [12477,]  237 #> [12478,]  236 #> [12479,]  236 #> [12480,]  237 #> [12481,]  236 #> [12482,]  237 #> [12483,]  237 #> [12484,]  237 #> [12485,]  237 #> [12486,]  237 #> [12487,]  237 #> [12488,]  237 #> [12489,]  237 #> [12490,]  237 #> [12491,]  237 #> [12492,]  236 #> [12493,]  237 #> [12494,]  236 #> [12495,]  236 #> [12496,]  237 #> [12497,]  237 #> [12498,]  237 #> [12499,]  237 #> [12500,]  236 #> [12501,]  239 #> [12502,]  239 #> [12503,]  239 #> [12504,]  239 #> [12505,]  239 #> [12506,]  238 #> [12507,]  239 #> [12508,]  239 #> [12509,]  239 #> [12510,]  239 #> [12511,]  239 #> [12512,]  239 #> [12513,]  239 #> [12514,]  239 #> [12515,]  239 #> [12516,]  239 #> [12517,]  239 #> [12518,]  239 #> [12519,]  239 #> [12520,]  238 #> [12521,]  238 #> [12522,]  239 #> [12523,]  239 #> [12524,]  239 #> [12525,]  238 #> [12526,]  239 #> [12527,]  239 #> [12528,]  239 #> [12529,]  239 #> [12530,]  239 #> [12531,]  239 #> [12532,]  239 #> [12533,]  239 #> [12534,]  239 #> [12535,]  238 #> [12536,]  239 #> [12537,]  239 #> [12538,]  239 #> [12539,]  239 #> [12540,]  239 #> [12541,]  239 #> [12542,]  238 #> [12543,]  239 #> [12544,]  238 #> [12545,]  239 #> [12546,]  239 #> [12547,]  239 #> [12548,]  239 #> [12549,]  239 #> [12550,]  239 #> [12551,]  239 #> [12552,]  239 #> [12553,]  238 #> [12554,]  239 #> [12555,]  239 #> [12556,]  238 #> [12557,]  239 #> [12558,]  239 #> [12559,]  239 #> [12560,]  239 #> [12561,]  239 #> [12562,]  239 #> [12563,]  239 #> [12564,]  239 #> [12565,]  238 #> [12566,]  239 #> [12567,]  239 #> [12568,]  239 #> [12569,]  239 #> [12570,]  239 #> [12571,]  239 #> [12572,]  239 #> [12573,]  238 #> [12574,]  238 #> [12575,]  239 #> [12576,]  239 #> [12577,]  239 #> [12578,]  239 #> [12579,]  239 #> [12580,]  238 #> [12581,]  239 #> [12582,]  238 #> [12583,]  239 #> [12584,]  238 #> [12585,]  238 #> [12586,]  238 #> [12587,]  239 #> [12588,]  239 #> [12589,]  238 #> [12590,]  239 #> [12591,]  239 #> [12592,]  239 #> [12593,]  239 #> [12594,]  238 #> [12595,]  239 #> [12596,]  239 #> [12597,]  239 #> [12598,]  239 #> [12599,]  238 #> [12600,]  239 #> [12601,]  240 #> [12602,]  240 #> [12603,]  240 #> [12604,]  240 #> [12605,]  240 #> [12606,]  240 #> [12607,]  240 #> [12608,]  240 #> [12609,]  240 #> [12610,]  240 #> [12611,]  240 #> [12612,]  240 #> [12613,]  240 #> [12614,]  240 #> [12615,]  240 #> [12616,]  240 #> [12617,]  240 #> [12618,]  240 #> [12619,]  240 #> [12620,]  240 #> [12621,]  240 #> [12622,]  240 #> [12623,]  240 #> [12624,]  240 #> [12625,]  240 #> [12626,]  240 #> [12627,]  240 #> [12628,]  240 #> [12629,]  240 #> [12630,]  240 #> [12631,]  240 #> [12632,]  240 #> [12633,]  240 #> [12634,]  240 #> [12635,]  240 #> [12636,]  240 #> [12637,]  240 #> [12638,]  240 #> [12639,]  240 #> [12640,]  240 #> [12641,]  240 #> [12642,]  240 #> [12643,]  240 #> [12644,]  240 #> [12645,]  240 #> [12646,]  240 #> [12647,]  240 #> [12648,]  240 #> [12649,]  240 #> [12650,]  240 #> [12651,]  240 #> [12652,]  240 #> [12653,]  240 #> [12654,]  240 #> [12655,]  240 #> [12656,]  240 #> [12657,]  240 #> [12658,]  240 #> [12659,]  240 #> [12660,]  240 #> [12661,]  240 #> [12662,]  240 #> [12663,]  240 #> [12664,]  240 #> [12665,]  240 #> [12666,]  240 #> [12667,]  240 #> [12668,]  240 #> [12669,]  240 #> [12670,]  240 #> [12671,]  240 #> [12672,]  240 #> [12673,]  240 #> [12674,]  240 #> [12675,]  240 #> [12676,]  240 #> [12677,]  240 #> [12678,]  240 #> [12679,]  240 #> [12680,]  240 #> [12681,]  240 #> [12682,]  240 #> [12683,]  240 #> [12684,]  240 #> [12685,]  240 #> [12686,]  240 #> [12687,]  240 #> [12688,]  240 #> [12689,]  240 #> [12690,]  240 #> [12691,]  240 #> [12692,]  240 #> [12693,]  240 #> [12694,]  240 #> [12695,]  240 #> [12696,]  240 #> [12697,]  240 #> [12698,]  240 #> [12699,]  240 #> [12700,]  240 #> [12701,]  241 #> [12702,]  242 #> [12703,]  242 #> [12704,]  241 #> [12705,]  241 #> [12706,]  242 #> [12707,]  242 #> [12708,]  241 #> [12709,]  241 #> [12710,]  242 #> [12711,]  241 #> [12712,]  242 #> [12713,]  241 #> [12714,]  241 #> [12715,]  241 #> [12716,]  241 #> [12717,]  241 #> [12718,]  242 #> [12719,]  242 #> [12720,]  242 #> [12721,]  241 #> [12722,]  241 #> [12723,]  242 #> [12724,]  241 #> [12725,]  242 #> [12726,]  241 #> [12727,]  241 #> [12728,]  242 #> [12729,]  242 #> [12730,]  241 #> [12731,]  242 #> [12732,]  242 #> [12733,]  242 #> [12734,]  242 #> [12735,]  241 #> [12736,]  241 #> [12737,]  241 #> [12738,]  241 #> [12739,]  242 #> [12740,]  242 #> [12741,]  241 #> [12742,]  242 #> [12743,]  241 #> [12744,]  241 #> [12745,]  241 #> [12746,]  241 #> [12747,]  242 #> [12748,]  242 #> [12749,]  241 #> [12750,]  242 #> [12751,]  241 #> [12752,]  241 #> [12753,]  242 #> [12754,]  241 #> [12755,]  241 #> [12756,]  242 #> [12757,]  242 #> [12758,]  241 #> [12759,]  241 #> [12760,]  242 #> [12761,]  242 #> [12762,]  241 #> [12763,]  241 #> [12764,]  242 #> [12765,]  242 #> [12766,]  241 #> [12767,]  241 #> [12768,]  241 #> [12769,]  241 #> [12770,]  242 #> [12771,]  242 #> [12772,]  241 #> [12773,]  242 #> [12774,]  241 #> [12775,]  242 #> [12776,]  241 #> [12777,]  242 #> [12778,]  242 #> [12779,]  241 #> [12780,]  241 #> [12781,]  241 #> [12782,]  241 #> [12783,]  241 #> [12784,]  242 #> [12785,]  241 #> [12786,]  242 #> [12787,]  241 #> [12788,]  241 #> [12789,]  241 #> [12790,]  241 #> [12791,]  241 #> [12792,]  241 #> [12793,]  242 #> [12794,]  242 #> [12795,]  241 #> [12796,]  241 #> [12797,]  242 #> [12798,]  242 #> [12799,]  241 #> [12800,]  242 #> [12801,]  244 #> [12802,]  243 #> [12803,]  243 #> [12804,]  243 #> [12805,]  244 #> [12806,]  243 #> [12807,]  243 #> [12808,]  243 #> [12809,]  243 #> [12810,]  244 #> [12811,]  244 #> [12812,]  244 #> [12813,]  243 #> [12814,]  244 #> [12815,]  244 #> [12816,]  243 #> [12817,]  244 #> [12818,]  244 #> [12819,]  243 #> [12820,]  243 #> [12821,]  243 #> [12822,]  244 #> [12823,]  243 #> [12824,]  243 #> [12825,]  243 #> [12826,]  244 #> [12827,]  244 #> [12828,]  243 #> [12829,]  243 #> [12830,]  243 #> [12831,]  244 #> [12832,]  244 #> [12833,]  243 #> [12834,]  243 #> [12835,]  243 #> [12836,]  243 #> [12837,]  243 #> [12838,]  244 #> [12839,]  243 #> [12840,]  243 #> [12841,]  243 #> [12842,]  243 #> [12843,]  244 #> [12844,]  243 #> [12845,]  243 #> [12846,]  243 #> [12847,]  244 #> [12848,]  243 #> [12849,]  243 #> [12850,]  243 #> [12851,]  243 #> [12852,]  244 #> [12853,]  243 #> [12854,]  243 #> [12855,]  243 #> [12856,]  243 #> [12857,]  243 #> [12858,]  244 #> [12859,]  244 #> [12860,]  243 #> [12861,]  244 #> [12862,]  243 #> [12863,]  243 #> [12864,]  243 #> [12865,]  243 #> [12866,]  244 #> [12867,]  243 #> [12868,]  243 #> [12869,]  243 #> [12870,]  244 #> [12871,]  244 #> [12872,]  243 #> [12873,]  243 #> [12874,]  243 #> [12875,]  244 #> [12876,]  243 #> [12877,]  244 #> [12878,]  243 #> [12879,]  244 #> [12880,]  243 #> [12881,]  243 #> [12882,]  243 #> [12883,]  243 #> [12884,]  243 #> [12885,]  243 #> [12886,]  243 #> [12887,]  244 #> [12888,]  243 #> [12889,]  243 #> [12890,]  244 #> [12891,]  244 #> [12892,]  244 #> [12893,]  243 #> [12894,]  243 #> [12895,]  244 #> [12896,]  243 #> [12897,]  243 #> [12898,]  243 #> [12899,]  243 #> [12900,]  244 #> [12901,]  246 #> [12902,]  245 #> [12903,]  246 #> [12904,]  246 #> [12905,]  246 #> [12906,]  245 #> [12907,]  246 #> [12908,]  246 #> [12909,]  246 #> [12910,]  246 #> [12911,]  245 #> [12912,]  245 #> [12913,]  246 #> [12914,]  246 #> [12915,]  245 #> [12916,]  246 #> [12917,]  245 #> [12918,]  245 #> [12919,]  245 #> [12920,]  246 #> [12921,]  245 #> [12922,]  246 #> [12923,]  245 #> [12924,]  246 #> [12925,]  246 #> [12926,]  245 #> [12927,]  246 #> [12928,]  246 #> [12929,]  245 #> [12930,]  245 #> [12931,]  245 #> [12932,]  245 #> [12933,]  246 #> [12934,]  245 #> [12935,]  245 #> [12936,]  246 #> [12937,]  245 #> [12938,]  245 #> [12939,]  246 #> [12940,]  246 #> [12941,]  246 #> [12942,]  245 #> [12943,]  245 #> [12944,]  245 #> [12945,]  246 #> [12946,]  245 #> [12947,]  245 #> [12948,]  245 #> [12949,]  246 #> [12950,]  246 #> [12951,]  245 #> [12952,]  246 #> [12953,]  246 #> [12954,]  246 #> [12955,]  246 #> [12956,]  245 #> [12957,]  246 #> [12958,]  246 #> [12959,]  246 #> [12960,]  245 #> [12961,]  245 #> [12962,]  245 #> [12963,]  245 #> [12964,]  245 #> [12965,]  245 #> [12966,]  245 #> [12967,]  246 #> [12968,]  245 #> [12969,]  245 #> [12970,]  245 #> [12971,]  246 #> [12972,]  246 #> [12973,]  246 #> [12974,]  246 #> [12975,]  245 #> [12976,]  246 #> [12977,]  246 #> [12978,]  245 #> [12979,]  245 #> [12980,]  246 #> [12981,]  245 #> [12982,]  245 #> [12983,]  246 #> [12984,]  246 #> [12985,]  246 #> [12986,]  246 #> [12987,]  246 #> [12988,]  246 #> [12989,]  245 #> [12990,]  246 #> [12991,]  246 #> [12992,]  245 #> [12993,]  245 #> [12994,]  245 #> [12995,]  245 #> [12996,]  245 #> [12997,]  245 #> [12998,]  245 #> [12999,]  246 #> [13000,]  245 #> [13001,]  248 #> [13002,]  247 #> [13003,]  247 #> [13004,]  247 #> [13005,]  247 #> [13006,]  247 #> [13007,]  247 #> [13008,]  247 #> [13009,]  247 #> [13010,]  247 #> [13011,]  247 #> [13012,]  247 #> [13013,]  247 #> [13014,]  248 #> [13015,]  247 #> [13016,]  248 #> [13017,]  247 #> [13018,]  247 #> [13019,]  247 #> [13020,]  247 #> [13021,]  247 #> [13022,]  247 #> [13023,]  247 #> [13024,]  247 #> [13025,]  247 #> [13026,]  247 #> [13027,]  247 #> [13028,]  247 #> [13029,]  247 #> [13030,]  247 #> [13031,]  247 #> [13032,]  247 #> [13033,]  247 #> [13034,]  247 #> [13035,]  247 #> [13036,]  247 #> [13037,]  247 #> [13038,]  247 #> [13039,]  247 #> [13040,]  247 #> [13041,]  248 #> [13042,]  247 #> [13043,]  247 #> [13044,]  247 #> [13045,]  247 #> [13046,]  247 #> [13047,]  247 #> [13048,]  247 #> [13049,]  247 #> [13050,]  247 #> [13051,]  247 #> [13052,]  247 #> [13053,]  247 #> [13054,]  247 #> [13055,]  247 #> [13056,]  247 #> [13057,]  247 #> [13058,]  247 #> [13059,]  247 #> [13060,]  247 #> [13061,]  247 #> [13062,]  247 #> [13063,]  247 #> [13064,]  247 #> [13065,]  247 #> [13066,]  247 #> [13067,]  247 #> [13068,]  247 #> [13069,]  247 #> [13070,]  247 #> [13071,]  247 #> [13072,]  247 #> [13073,]  247 #> [13074,]  247 #> [13075,]  247 #> [13076,]  247 #> [13077,]  247 #> [13078,]  247 #> [13079,]  247 #> [13080,]  247 #> [13081,]  247 #> [13082,]  247 #> [13083,]  247 #> [13084,]  247 #> [13085,]  247 #> [13086,]  247 #> [13087,]  247 #> [13088,]  247 #> [13089,]  247 #> [13090,]  247 #> [13091,]  247 #> [13092,]  247 #> [13093,]  247 #> [13094,]  247 #> [13095,]  247 #> [13096,]  247 #> [13097,]  247 #> [13098,]  247 #> [13099,]  248 #> [13100,]  247 #> [13101,]  250 #> [13102,]  250 #> [13103,]  249 #> [13104,]  250 #> [13105,]  250 #> [13106,]  250 #> [13107,]  249 #> [13108,]  249 #> [13109,]  250 #> [13110,]  250 #> [13111,]  250 #> [13112,]  250 #> [13113,]  249 #> [13114,]  250 #> [13115,]  250 #> [13116,]  249 #> [13117,]  250 #> [13118,]  250 #> [13119,]  250 #> [13120,]  249 #> [13121,]  250 #> [13122,]  249 #> [13123,]  250 #> [13124,]  249 #> [13125,]  249 #> [13126,]  250 #> [13127,]  250 #> [13128,]  250 #> [13129,]  250 #> [13130,]  250 #> [13131,]  250 #> [13132,]  250 #> [13133,]  250 #> [13134,]  250 #> [13135,]  250 #> [13136,]  250 #> [13137,]  250 #> [13138,]  250 #> [13139,]  249 #> [13140,]  249 #> [13141,]  250 #> [13142,]  250 #> [13143,]  250 #> [13144,]  249 #> [13145,]  250 #> [13146,]  249 #> [13147,]  250 #> [13148,]  250 #> [13149,]  249 #> [13150,]  249 #> [13151,]  250 #> [13152,]  250 #> [13153,]  249 #> [13154,]  249 #> [13155,]  249 #> [13156,]  249 #> [13157,]  250 #> [13158,]  250 #> [13159,]  249 #> [13160,]  250 #> [13161,]  250 #> [13162,]  250 #> [13163,]  249 #> [13164,]  250 #> [13165,]  249 #> [13166,]  249 #> [13167,]  250 #> [13168,]  250 #> [13169,]  250 #> [13170,]  249 #> [13171,]  250 #> [13172,]  249 #> [13173,]  250 #> [13174,]  250 #> [13175,]  250 #> [13176,]  250 #> [13177,]  250 #> [13178,]  249 #> [13179,]  250 #> [13180,]  250 #> [13181,]  250 #> [13182,]  250 #> [13183,]  250 #> [13184,]  249 #> [13185,]  250 #> [13186,]  249 #> [13187,]  250 #> [13188,]  250 #> [13189,]  249 #> [13190,]  249 #> [13191,]  250 #> [13192,]  250 #> [13193,]  250 #> [13194,]  250 #> [13195,]  250 #> [13196,]  250 #> [13197,]  250 #> [13198,]  249 #> [13199,]  250 #> [13200,]  249 #> [13201,]  252 #> [13202,]  251 #> [13203,]  252 #> [13204,]  252 #> [13205,]  252 #> [13206,]  251 #> [13207,]  252 #> [13208,]  252 #> [13209,]  252 #> [13210,]  252 #> [13211,]  251 #> [13212,]  251 #> [13213,]  252 #> [13214,]  252 #> [13215,]  251 #> [13216,]  252 #> [13217,]  251 #> [13218,]  251 #> [13219,]  251 #> [13220,]  252 #> [13221,]  251 #> [13222,]  252 #> [13223,]  251 #> [13224,]  252 #> [13225,]  252 #> [13226,]  251 #> [13227,]  252 #> [13228,]  252 #> [13229,]  251 #> [13230,]  251 #> [13231,]  251 #> [13232,]  251 #> [13233,]  252 #> [13234,]  251 #> [13235,]  251 #> [13236,]  252 #> [13237,]  251 #> [13238,]  251 #> [13239,]  252 #> [13240,]  252 #> [13241,]  252 #> [13242,]  251 #> [13243,]  251 #> [13244,]  251 #> [13245,]  252 #> [13246,]  251 #> [13247,]  251 #> [13248,]  251 #> [13249,]  252 #> [13250,]  252 #> [13251,]  251 #> [13252,]  252 #> [13253,]  252 #> [13254,]  252 #> [13255,]  252 #> [13256,]  251 #> [13257,]  252 #> [13258,]  252 #> [13259,]  252 #> [13260,]  251 #> [13261,]  251 #> [13262,]  251 #> [13263,]  251 #> [13264,]  251 #> [13265,]  251 #> [13266,]  251 #> [13267,]  252 #> [13268,]  251 #> [13269,]  251 #> [13270,]  251 #> [13271,]  252 #> [13272,]  252 #> [13273,]  252 #> [13274,]  252 #> [13275,]  251 #> [13276,]  252 #> [13277,]  252 #> [13278,]  251 #> [13279,]  251 #> [13280,]  252 #> [13281,]  251 #> [13282,]  251 #> [13283,]  251 #> [13284,]  252 #> [13285,]  252 #> [13286,]  252 #> [13287,]  252 #> [13288,]  252 #> [13289,]  251 #> [13290,]  252 #> [13291,]  252 #> [13292,]  251 #> [13293,]  251 #> [13294,]  251 #> [13295,]  251 #> [13296,]  251 #> [13297,]  251 #> [13298,]  251 #> [13299,]  252 #> [13300,]  251 #> [13301,]  254 #> [13302,]  254 #> [13303,]  254 #> [13304,]  253 #> [13305,]  254 #> [13306,]  254 #> [13307,]  254 #> [13308,]  253 #> [13309,]  253 #> [13310,]  254 #> [13311,]  254 #> [13312,]  254 #> [13313,]  254 #> [13314,]  254 #> [13315,]  254 #> [13316,]  254 #> [13317,]  253 #> [13318,]  254 #> [13319,]  254 #> [13320,]  254 #> [13321,]  254 #> [13322,]  254 #> [13323,]  254 #> [13324,]  254 #> [13325,]  254 #> [13326,]  254 #> [13327,]  253 #> [13328,]  254 #> [13329,]  254 #> [13330,]  254 #> [13331,]  254 #> [13332,]  254 #> [13333,]  254 #> [13334,]  254 #> [13335,]  254 #> [13336,]  254 #> [13337,]  254 #> [13338,]  254 #> [13339,]  254 #> [13340,]  254 #> [13341,]  254 #> [13342,]  254 #> [13343,]  254 #> [13344,]  253 #> [13345,]  254 #> [13346,]  254 #> [13347,]  254 #> [13348,]  254 #> [13349,]  254 #> [13350,]  254 #> [13351,]  254 #> [13352,]  253 #> [13353,]  254 #> [13354,]  254 #> [13355,]  254 #> [13356,]  254 #> [13357,]  254 #> [13358,]  254 #> [13359,]  254 #> [13360,]  254 #> [13361,]  254 #> [13362,]  254 #> [13363,]  254 #> [13364,]  254 #> [13365,]  254 #> [13366,]  253 #> [13367,]  254 #> [13368,]  254 #> [13369,]  254 #> [13370,]  254 #> [13371,]  254 #> [13372,]  254 #> [13373,]  254 #> [13374,]  254 #> [13375,]  254 #> [13376,]  254 #> [13377,]  254 #> [13378,]  254 #> [13379,]  254 #> [13380,]  254 #> [13381,]  253 #> [13382,]  253 #> [13383,]  254 #> [13384,]  254 #> [13385,]  254 #> [13386,]  254 #> [13387,]  253 #> [13388,]  254 #> [13389,]  254 #> [13390,]  253 #> [13391,]  254 #> [13392,]  253 #> [13393,]  254 #> [13394,]  254 #> [13395,]  253 #> [13396,]  254 #> [13397,]  254 #> [13398,]  254 #> [13399,]  253 #> [13400,]  254 #> [13401,]  256 #> [13402,]  255 #> [13403,]  255 #> [13404,]  255 #> [13405,]  256 #> [13406,]  255 #> [13407,]  255 #> [13408,]  255 #> [13409,]  255 #> [13410,]  256 #> [13411,]  256 #> [13412,]  256 #> [13413,]  255 #> [13414,]  256 #> [13415,]  256 #> [13416,]  255 #> [13417,]  256 #> [13418,]  256 #> [13419,]  255 #> [13420,]  255 #> [13421,]  255 #> [13422,]  256 #> [13423,]  255 #> [13424,]  255 #> [13425,]  255 #> [13426,]  256 #> [13427,]  256 #> [13428,]  255 #> [13429,]  255 #> [13430,]  255 #> [13431,]  256 #> [13432,]  256 #> [13433,]  255 #> [13434,]  255 #> [13435,]  255 #> [13436,]  255 #> [13437,]  255 #> [13438,]  256 #> [13439,]  255 #> [13440,]  255 #> [13441,]  255 #> [13442,]  255 #> [13443,]  256 #> [13444,]  255 #> [13445,]  255 #> [13446,]  255 #> [13447,]  256 #> [13448,]  255 #> [13449,]  255 #> [13450,]  255 #> [13451,]  255 #> [13452,]  256 #> [13453,]  255 #> [13454,]  255 #> [13455,]  255 #> [13456,]  255 #> [13457,]  255 #> [13458,]  256 #> [13459,]  256 #> [13460,]  255 #> [13461,]  256 #> [13462,]  255 #> [13463,]  255 #> [13464,]  255 #> [13465,]  255 #> [13466,]  256 #> [13467,]  255 #> [13468,]  255 #> [13469,]  255 #> [13470,]  256 #> [13471,]  256 #> [13472,]  255 #> [13473,]  255 #> [13474,]  255 #> [13475,]  256 #> [13476,]  255 #> [13477,]  256 #> [13478,]  255 #> [13479,]  256 #> [13480,]  255 #> [13481,]  255 #> [13482,]  255 #> [13483,]  255 #> [13484,]  255 #> [13485,]  255 #> [13486,]  255 #> [13487,]  256 #> [13488,]  255 #> [13489,]  255 #> [13490,]  256 #> [13491,]  256 #> [13492,]  256 #> [13493,]  255 #> [13494,]  255 #> [13495,]  256 #> [13496,]  255 #> [13497,]  255 #> [13498,]  255 #> [13499,]  255 #> [13500,]  256 #> [13501,]  257 #> [13502,]  257 #> [13503,]  257 #> [13504,]  258 #> [13505,]  257 #> [13506,]  257 #> [13507,]  258 #> [13508,]  257 #> [13509,]  257 #> [13510,]  258 #> [13511,]  257 #> [13512,]  257 #> [13513,]  258 #> [13514,]  257 #> [13515,]  258 #> [13516,]  258 #> [13517,]  258 #> [13518,]  258 #> [13519,]  257 #> [13520,]  257 #> [13521,]  258 #> [13522,]  257 #> [13523,]  258 #> [13524,]  257 #> [13525,]  258 #> [13526,]  257 #> [13527,]  258 #> [13528,]  258 #> [13529,]  257 #> [13530,]  257 #> [13531,]  257 #> [13532,]  257 #> [13533,]  257 #> [13534,]  257 #> [13535,]  257 #> [13536,]  257 #> [13537,]  257 #> [13538,]  257 #> [13539,]  258 #> [13540,]  257 #> [13541,]  257 #> [13542,]  257 #> [13543,]  258 #> [13544,]  257 #> [13545,]  258 #> [13546,]  258 #> [13547,]  258 #> [13548,]  257 #> [13549,]  257 #> [13550,]  257 #> [13551,]  257 #> [13552,]  257 #> [13553,]  258 #> [13554,]  257 #> [13555,]  257 #> [13556,]  258 #> [13557,]  257 #> [13558,]  257 #> [13559,]  257 #> [13560,]  257 #> [13561,]  258 #> [13562,]  257 #> [13563,]  257 #> [13564,]  258 #> [13565,]  257 #> [13566,]  257 #> [13567,]  257 #> [13568,]  257 #> [13569,]  257 #> [13570,]  257 #> [13571,]  258 #> [13572,]  258 #> [13573,]  258 #> [13574,]  258 #> [13575,]  258 #> [13576,]  258 #> [13577,]  258 #> [13578,]  257 #> [13579,]  257 #> [13580,]  257 #> [13581,]  257 #> [13582,]  258 #> [13583,]  257 #> [13584,]  258 #> [13585,]  257 #> [13586,]  257 #> [13587,]  257 #> [13588,]  258 #> [13589,]  257 #> [13590,]  257 #> [13591,]  257 #> [13592,]  257 #> [13593,]  257 #> [13594,]  258 #> [13595,]  258 #> [13596,]  257 #> [13597,]  257 #> [13598,]  257 #> [13599,]  257 #> [13600,]  258 #> [13601,]  259 #> [13602,]  259 #> [13603,]  259 #> [13604,]  259 #> [13605,]  259 #> [13606,]  259 #> [13607,]  259 #> [13608,]  259 #> [13609,]  259 #> [13610,]  259 #> [13611,]  259 #> [13612,]  259 #> [13613,]  259 #> [13614,]  259 #> [13615,]  259 #> [13616,]  259 #> [13617,]  259 #> [13618,]  259 #> [13619,]  259 #> [13620,]  260 #> [13621,]  259 #> [13622,]  259 #> [13623,]  259 #> [13624,]  260 #> [13625,]  259 #> [13626,]  259 #> [13627,]  259 #> [13628,]  260 #> [13629,]  259 #> [13630,]  259 #> [13631,]  259 #> [13632,]  259 #> [13633,]  259 #> [13634,]  259 #> [13635,]  259 #> [13636,]  259 #> [13637,]  259 #> [13638,]  259 #> [13639,]  259 #> [13640,]  259 #> [13641,]  259 #> [13642,]  259 #> [13643,]  259 #> [13644,]  259 #> [13645,]  259 #> [13646,]  259 #> [13647,]  259 #> [13648,]  259 #> [13649,]  259 #> [13650,]  259 #> [13651,]  259 #> [13652,]  260 #> [13653,]  259 #> [13654,]  259 #> [13655,]  259 #> [13656,]  259 #> [13657,]  259 #> [13658,]  259 #> [13659,]  259 #> [13660,]  259 #> [13661,]  259 #> [13662,]  259 #> [13663,]  259 #> [13664,]  259 #> [13665,]  259 #> [13666,]  259 #> [13667,]  259 #> [13668,]  259 #> [13669,]  259 #> [13670,]  259 #> [13671,]  259 #> [13672,]  259 #> [13673,]  259 #> [13674,]  259 #> [13675,]  259 #> [13676,]  260 #> [13677,]  259 #> [13678,]  259 #> [13679,]  259 #> [13680,]  259 #> [13681,]  259 #> [13682,]  259 #> [13683,]  259 #> [13684,]  259 #> [13685,]  259 #> [13686,]  260 #> [13687,]  259 #> [13688,]  259 #> [13689,]  259 #> [13690,]  259 #> [13691,]  259 #> [13692,]  259 #> [13693,]  259 #> [13694,]  259 #> [13695,]  259 #> [13696,]  259 #> [13697,]  259 #> [13698,]  259 #> [13699,]  259 #> [13700,]  259 #> [13701,]  261 #> [13702,]  262 #> [13703,]  262 #> [13704,]  261 #> [13705,]  262 #> [13706,]  262 #> [13707,]  262 #> [13708,]  261 #> [13709,]  261 #> [13710,]  262 #> [13711,]  261 #> [13712,]  262 #> [13713,]  261 #> [13714,]  261 #> [13715,]  261 #> [13716,]  262 #> [13717,]  261 #> [13718,]  262 #> [13719,]  262 #> [13720,]  262 #> [13721,]  261 #> [13722,]  261 #> [13723,]  262 #> [13724,]  262 #> [13725,]  262 #> [13726,]  262 #> [13727,]  261 #> [13728,]  262 #> [13729,]  262 #> [13730,]  261 #> [13731,]  262 #> [13732,]  262 #> [13733,]  262 #> [13734,]  262 #> [13735,]  261 #> [13736,]  262 #> [13737,]  262 #> [13738,]  262 #> [13739,]  262 #> [13740,]  262 #> [13741,]  262 #> [13742,]  262 #> [13743,]  261 #> [13744,]  261 #> [13745,]  261 #> [13746,]  261 #> [13747,]  262 #> [13748,]  262 #> [13749,]  261 #> [13750,]  262 #> [13751,]  262 #> [13752,]  261 #> [13753,]  262 #> [13754,]  261 #> [13755,]  261 #> [13756,]  262 #> [13757,]  262 #> [13758,]  261 #> [13759,]  262 #> [13760,]  262 #> [13761,]  262 #> [13762,]  261 #> [13763,]  262 #> [13764,]  262 #> [13765,]  262 #> [13766,]  261 #> [13767,]  261 #> [13768,]  261 #> [13769,]  261 #> [13770,]  262 #> [13771,]  262 #> [13772,]  262 #> [13773,]  262 #> [13774,]  261 #> [13775,]  262 #> [13776,]  262 #> [13777,]  262 #> [13778,]  262 #> [13779,]  261 #> [13780,]  261 #> [13781,]  261 #> [13782,]  261 #> [13783,]  261 #> [13784,]  262 #> [13785,]  261 #> [13786,]  262 #> [13787,]  261 #> [13788,]  261 #> [13789,]  261 #> [13790,]  261 #> [13791,]  261 #> [13792,]  261 #> [13793,]  262 #> [13794,]  262 #> [13795,]  261 #> [13796,]  261 #> [13797,]  262 #> [13798,]  262 #> [13799,]  261 #> [13800,]  262 #> [13801,]  263 #> [13802,]  264 #> [13803,]  263 #> [13804,]  263 #> [13805,]  264 #> [13806,]  263 #> [13807,]  264 #> [13808,]  263 #> [13809,]  264 #> [13810,]  264 #> [13811,]  263 #> [13812,]  264 #> [13813,]  264 #> [13814,]  263 #> [13815,]  263 #> [13816,]  263 #> [13817,]  264 #> [13818,]  264 #> [13819,]  263 #> [13820,]  264 #> [13821,]  264 #> [13822,]  264 #> [13823,]  264 #> [13824,]  264 #> [13825,]  263 #> [13826,]  263 #> [13827,]  264 #> [13828,]  263 #> [13829,]  264 #> [13830,]  264 #> [13831,]  264 #> [13832,]  264 #> [13833,]  264 #> [13834,]  263 #> [13835,]  263 #> [13836,]  264 #> [13837,]  263 #> [13838,]  263 #> [13839,]  263 #> [13840,]  264 #> [13841,]  264 #> [13842,]  263 #> [13843,]  263 #> [13844,]  264 #> [13845,]  263 #> [13846,]  263 #> [13847,]  264 #> [13848,]  264 #> [13849,]  263 #> [13850,]  264 #> [13851,]  263 #> [13852,]  263 #> [13853,]  264 #> [13854,]  264 #> [13855,]  263 #> [13856,]  263 #> [13857,]  263 #> [13858,]  264 #> [13859,]  263 #> [13860,]  264 #> [13861,]  264 #> [13862,]  263 #> [13863,]  264 #> [13864,]  263 #> [13865,]  263 #> [13866,]  263 #> [13867,]  263 #> [13868,]  263 #> [13869,]  263 #> [13870,]  264 #> [13871,]  264 #> [13872,]  263 #> [13873,]  263 #> [13874,]  264 #> [13875,]  264 #> [13876,]  264 #> [13877,]  263 #> [13878,]  264 #> [13879,]  263 #> [13880,]  264 #> [13881,]  264 #> [13882,]  263 #> [13883,]  264 #> [13884,]  264 #> [13885,]  263 #> [13886,]  264 #> [13887,]  264 #> [13888,]  264 #> [13889,]  263 #> [13890,]  264 #> [13891,]  263 #> [13892,]  264 #> [13893,]  264 #> [13894,]  263 #> [13895,]  264 #> [13896,]  263 #> [13897,]  263 #> [13898,]  263 #> [13899,]  263 #> [13900,]  263 #> [13901,]  266 #> [13902,]  265 #> [13903,]  266 #> [13904,]  266 #> [13905,]  266 #> [13906,]  265 #> [13907,]  266 #> [13908,]  266 #> [13909,]  266 #> [13910,]  266 #> [13911,]  265 #> [13912,]  265 #> [13913,]  266 #> [13914,]  266 #> [13915,]  265 #> [13916,]  266 #> [13917,]  265 #> [13918,]  266 #> [13919,]  266 #> [13920,]  266 #> [13921,]  266 #> [13922,]  266 #> [13923,]  265 #> [13924,]  266 #> [13925,]  266 #> [13926,]  266 #> [13927,]  266 #> [13928,]  266 #> [13929,]  265 #> [13930,]  266 #> [13931,]  265 #> [13932,]  266 #> [13933,]  266 #> [13934,]  265 #> [13935,]  266 #> [13936,]  266 #> [13937,]  265 #> [13938,]  266 #> [13939,]  266 #> [13940,]  266 #> [13941,]  266 #> [13942,]  265 #> [13943,]  265 #> [13944,]  265 #> [13945,]  266 #> [13946,]  266 #> [13947,]  265 #> [13948,]  265 #> [13949,]  266 #> [13950,]  266 #> [13951,]  266 #> [13952,]  266 #> [13953,]  266 #> [13954,]  266 #> [13955,]  266 #> [13956,]  266 #> [13957,]  266 #> [13958,]  266 #> [13959,]  266 #> [13960,]  266 #> [13961,]  265 #> [13962,]  266 #> [13963,]  265 #> [13964,]  265 #> [13965,]  266 #> [13966,]  266 #> [13967,]  266 #> [13968,]  266 #> [13969,]  266 #> [13970,]  265 #> [13971,]  266 #> [13972,]  266 #> [13973,]  266 #> [13974,]  266 #> [13975,]  265 #> [13976,]  266 #> [13977,]  266 #> [13978,]  265 #> [13979,]  265 #> [13980,]  266 #> [13981,]  265 #> [13982,]  266 #> [13983,]  266 #> [13984,]  266 #> [13985,]  266 #> [13986,]  266 #> [13987,]  266 #> [13988,]  266 #> [13989,]  266 #> [13990,]  266 #> [13991,]  266 #> [13992,]  265 #> [13993,]  266 #> [13994,]  265 #> [13995,]  265 #> [13996,]  266 #> [13997,]  266 #> [13998,]  266 #> [13999,]  266 #> [14000,]  265 #> [14001,]  267 #> [14002,]  267 #> [14003,]  267 #> [14004,]  268 #> [14005,]  267 #> [14006,]  267 #> [14007,]  267 #> [14008,]  267 #> [14009,]  268 #> [14010,]  267 #> [14011,]  268 #> [14012,]  268 #> [14013,]  267 #> [14014,]  268 #> [14015,]  268 #> [14016,]  267 #> [14017,]  267 #> [14018,]  268 #> [14019,]  268 #> [14020,]  267 #> [14021,]  268 #> [14022,]  267 #> [14023,]  267 #> [14024,]  267 #> [14025,]  267 #> [14026,]  268 #> [14027,]  268 #> [14028,]  267 #> [14029,]  267 #> [14030,]  267 #> [14031,]  268 #> [14032,]  267 #> [14033,]  268 #> [14034,]  267 #> [14035,]  267 #> [14036,]  268 #> [14037,]  267 #> [14038,]  268 #> [14039,]  267 #> [14040,]  267 #> [14041,]  268 #> [14042,]  268 #> [14043,]  267 #> [14044,]  267 #> [14045,]  267 #> [14046,]  267 #> [14047,]  267 #> [14048,]  268 #> [14049,]  267 #> [14050,]  267 #> [14051,]  267 #> [14052,]  267 #> [14053,]  267 #> [14054,]  267 #> [14055,]  267 #> [14056,]  267 #> [14057,]  267 #> [14058,]  268 #> [14059,]  267 #> [14060,]  267 #> [14061,]  268 #> [14062,]  267 #> [14063,]  267 #> [14064,]  267 #> [14065,]  267 #> [14066,]  267 #> [14067,]  267 #> [14068,]  268 #> [14069,]  268 #> [14070,]  267 #> [14071,]  267 #> [14072,]  267 #> [14073,]  267 #> [14074,]  268 #> [14075,]  268 #> [14076,]  267 #> [14077,]  267 #> [14078,]  267 #> [14079,]  267 #> [14080,]  267 #> [14081,]  267 #> [14082,]  268 #> [14083,]  267 #> [14084,]  267 #> [14085,]  268 #> [14086,]  267 #> [14087,]  267 #> [14088,]  267 #> [14089,]  267 #> [14090,]  267 #> [14091,]  267 #> [14092,]  268 #> [14093,]  268 #> [14094,]  267 #> [14095,]  267 #> [14096,]  268 #> [14097,]  268 #> [14098,]  267 #> [14099,]  267 #> [14100,]  267 #> [14101,]  270 #> [14102,]  269 #> [14103,]  269 #> [14104,]  269 #> [14105,]  269 #> [14106,]  269 #> [14107,]  269 #> [14108,]  269 #> [14109,]  269 #> [14110,]  269 #> [14111,]  269 #> [14112,]  269 #> [14113,]  269 #> [14114,]  270 #> [14115,]  269 #> [14116,]  270 #> [14117,]  269 #> [14118,]  269 #> [14119,]  269 #> [14120,]  269 #> [14121,]  269 #> [14122,]  269 #> [14123,]  269 #> [14124,]  269 #> [14125,]  269 #> [14126,]  269 #> [14127,]  269 #> [14128,]  269 #> [14129,]  269 #> [14130,]  269 #> [14131,]  269 #> [14132,]  269 #> [14133,]  269 #> [14134,]  269 #> [14135,]  269 #> [14136,]  269 #> [14137,]  269 #> [14138,]  269 #> [14139,]  269 #> [14140,]  269 #> [14141,]  270 #> [14142,]  269 #> [14143,]  269 #> [14144,]  269 #> [14145,]  269 #> [14146,]  269 #> [14147,]  269 #> [14148,]  269 #> [14149,]  269 #> [14150,]  269 #> [14151,]  269 #> [14152,]  269 #> [14153,]  269 #> [14154,]  269 #> [14155,]  269 #> [14156,]  269 #> [14157,]  269 #> [14158,]  269 #> [14159,]  269 #> [14160,]  269 #> [14161,]  269 #> [14162,]  269 #> [14163,]  269 #> [14164,]  269 #> [14165,]  269 #> [14166,]  269 #> [14167,]  269 #> [14168,]  269 #> [14169,]  269 #> [14170,]  269 #> [14171,]  269 #> [14172,]  269 #> [14173,]  269 #> [14174,]  269 #> [14175,]  269 #> [14176,]  269 #> [14177,]  269 #> [14178,]  269 #> [14179,]  269 #> [14180,]  269 #> [14181,]  269 #> [14182,]  269 #> [14183,]  269 #> [14184,]  269 #> [14185,]  269 #> [14186,]  269 #> [14187,]  269 #> [14188,]  269 #> [14189,]  269 #> [14190,]  269 #> [14191,]  269 #> [14192,]  269 #> [14193,]  269 #> [14194,]  269 #> [14195,]  269 #> [14196,]  269 #> [14197,]  269 #> [14198,]  269 #> [14199,]  270 #> [14200,]  269 #> [14201,]  272 #> [14202,]  271 #> [14203,]  271 #> [14204,]  271 #> [14205,]  271 #> [14206,]  271 #> [14207,]  271 #> [14208,]  271 #> [14209,]  271 #> [14210,]  271 #> [14211,]  271 #> [14212,]  271 #> [14213,]  272 #> [14214,]  272 #> [14215,]  272 #> [14216,]  272 #> [14217,]  271 #> [14218,]  271 #> [14219,]  271 #> [14220,]  271 #> [14221,]  272 #> [14222,]  271 #> [14223,]  271 #> [14224,]  271 #> [14225,]  271 #> [14226,]  271 #> [14227,]  271 #> [14228,]  271 #> [14229,]  272 #> [14230,]  271 #> [14231,]  271 #> [14232,]  271 #> [14233,]  272 #> [14234,]  271 #> [14235,]  271 #> [14236,]  271 #> [14237,]  271 #> [14238,]  271 #> [14239,]  271 #> [14240,]  271 #> [14241,]  272 #> [14242,]  271 #> [14243,]  271 #> [14244,]  272 #> [14245,]  271 #> [14246,]  271 #> [14247,]  271 #> [14248,]  271 #> [14249,]  271 #> [14250,]  272 #> [14251,]  271 #> [14252,]  271 #> [14253,]  271 #> [14254,]  271 #> [14255,]  271 #> [14256,]  271 #> [14257,]  271 #> [14258,]  271 #> [14259,]  272 #> [14260,]  271 #> [14261,]  271 #> [14262,]  271 #> [14263,]  271 #> [14264,]  271 #> [14265,]  271 #> [14266,]  271 #> [14267,]  271 #> [14268,]  272 #> [14269,]  271 #> [14270,]  272 #> [14271,]  271 #> [14272,]  271 #> [14273,]  272 #> [14274,]  271 #> [14275,]  271 #> [14276,]  271 #> [14277,]  271 #> [14278,]  271 #> [14279,]  271 #> [14280,]  271 #> [14281,]  271 #> [14282,]  271 #> [14283,]  271 #> [14284,]  271 #> [14285,]  271 #> [14286,]  271 #> [14287,]  271 #> [14288,]  271 #> [14289,]  271 #> [14290,]  271 #> [14291,]  271 #> [14292,]  271 #> [14293,]  271 #> [14294,]  271 #> [14295,]  271 #> [14296,]  272 #> [14297,]  271 #> [14298,]  271 #> [14299,]  272 #> [14300,]  271 #> [14301,]  273 #> [14302,]  273 #> [14303,]  273 #> [14304,]  274 #> [14305,]  273 #> [14306,]  273 #> [14307,]  273 #> [14308,]  273 #> [14309,]  273 #> [14310,]  274 #> [14311,]  273 #> [14312,]  273 #> [14313,]  273 #> [14314,]  273 #> [14315,]  273 #> [14316,]  273 #> [14317,]  273 #> [14318,]  274 #> [14319,]  273 #> [14320,]  273 #> [14321,]  274 #> [14322,]  273 #> [14323,]  273 #> [14324,]  273 #> [14325,]  274 #> [14326,]  273 #> [14327,]  273 #> [14328,]  273 #> [14329,]  273 #> [14330,]  273 #> [14331,]  273 #> [14332,]  273 #> [14333,]  273 #> [14334,]  273 #> [14335,]  273 #> [14336,]  273 #> [14337,]  273 #> [14338,]  273 #> [14339,]  274 #> [14340,]  273 #> [14341,]  273 #> [14342,]  273 #> [14343,]  274 #> [14344,]  273 #> [14345,]  274 #> [14346,]  273 #> [14347,]  273 #> [14348,]  273 #> [14349,]  273 #> [14350,]  273 #> [14351,]  273 #> [14352,]  273 #> [14353,]  274 #> [14354,]  273 #> [14355,]  273 #> [14356,]  273 #> [14357,]  273 #> [14358,]  273 #> [14359,]  273 #> [14360,]  273 #> [14361,]  273 #> [14362,]  273 #> [14363,]  273 #> [14364,]  273 #> [14365,]  273 #> [14366,]  273 #> [14367,]  273 #> [14368,]  273 #> [14369,]  273 #> [14370,]  273 #> [14371,]  273 #> [14372,]  274 #> [14373,]  274 #> [14374,]  274 #> [14375,]  274 #> [14376,]  274 #> [14377,]  274 #> [14378,]  273 #> [14379,]  273 #> [14380,]  273 #> [14381,]  273 #> [14382,]  273 #> [14383,]  273 #> [14384,]  273 #> [14385,]  273 #> [14386,]  273 #> [14387,]  273 #> [14388,]  273 #> [14389,]  273 #> [14390,]  273 #> [14391,]  273 #> [14392,]  273 #> [14393,]  273 #> [14394,]  274 #> [14395,]  274 #> [14396,]  273 #> [14397,]  273 #> [14398,]  273 #> [14399,]  273 #> [14400,]  273 #> [14401,]  275 #> [14402,]  275 #> [14403,]  275 #> [14404,]  275 #> [14405,]  275 #> [14406,]  276 #> [14407,]  275 #> [14408,]  276 #> [14409,]  276 #> [14410,]  275 #> [14411,]  275 #> [14412,]  276 #> [14413,]  275 #> [14414,]  275 #> [14415,]  276 #> [14416,]  275 #> [14417,]  275 #> [14418,]  275 #> [14419,]  275 #> [14420,]  275 #> [14421,]  275 #> [14422,]  275 #> [14423,]  275 #> [14424,]  275 #> [14425,]  275 #> [14426,]  276 #> [14427,]  275 #> [14428,]  275 #> [14429,]  275 #> [14430,]  275 #> [14431,]  275 #> [14432,]  275 #> [14433,]  276 #> [14434,]  275 #> [14435,]  275 #> [14436,]  275 #> [14437,]  275 #> [14438,]  275 #> [14439,]  275 #> [14440,]  275 #> [14441,]  275 #> [14442,]  275 #> [14443,]  276 #> [14444,]  275 #> [14445,]  276 #> [14446,]  276 #> [14447,]  275 #> [14448,]  275 #> [14449,]  275 #> [14450,]  275 #> [14451,]  276 #> [14452,]  275 #> [14453,]  275 #> [14454,]  275 #> [14455,]  275 #> [14456,]  276 #> [14457,]  276 #> [14458,]  275 #> [14459,]  275 #> [14460,]  275 #> [14461,]  276 #> [14462,]  275 #> [14463,]  275 #> [14464,]  276 #> [14465,]  275 #> [14466,]  276 #> [14467,]  275 #> [14468,]  276 #> [14469,]  275 #> [14470,]  275 #> [14471,]  275 #> [14472,]  276 #> [14473,]  275 #> [14474,]  275 #> [14475,]  275 #> [14476,]  276 #> [14477,]  275 #> [14478,]  275 #> [14479,]  275 #> [14480,]  275 #> [14481,]  275 #> [14482,]  275 #> [14483,]  275 #> [14484,]  275 #> [14485,]  275 #> [14486,]  275 #> [14487,]  275 #> [14488,]  275 #> [14489,]  275 #> [14490,]  275 #> [14491,]  275 #> [14492,]  275 #> [14493,]  275 #> [14494,]  276 #> [14495,]  275 #> [14496,]  276 #> [14497,]  275 #> [14498,]  275 #> [14499,]  275 #> [14500,]  275 #> [14501,]  277 #> [14502,]  277 #> [14503,]  277 #> [14504,]  278 #> [14505,]  277 #> [14506,]  277 #> [14507,]  277 #> [14508,]  277 #> [14509,]  277 #> [14510,]  278 #> [14511,]  277 #> [14512,]  277 #> [14513,]  277 #> [14514,]  277 #> [14515,]  277 #> [14516,]  277 #> [14517,]  277 #> [14518,]  278 #> [14519,]  277 #> [14520,]  277 #> [14521,]  277 #> [14522,]  277 #> [14523,]  277 #> [14524,]  277 #> [14525,]  278 #> [14526,]  277 #> [14527,]  277 #> [14528,]  277 #> [14529,]  277 #> [14530,]  277 #> [14531,]  277 #> [14532,]  277 #> [14533,]  277 #> [14534,]  277 #> [14535,]  277 #> [14536,]  277 #> [14537,]  277 #> [14538,]  277 #> [14539,]  278 #> [14540,]  277 #> [14541,]  277 #> [14542,]  277 #> [14543,]  278 #> [14544,]  277 #> [14545,]  278 #> [14546,]  277 #> [14547,]  277 #> [14548,]  277 #> [14549,]  277 #> [14550,]  277 #> [14551,]  277 #> [14552,]  277 #> [14553,]  278 #> [14554,]  277 #> [14555,]  277 #> [14556,]  277 #> [14557,]  277 #> [14558,]  277 #> [14559,]  277 #> [14560,]  277 #> [14561,]  277 #> [14562,]  277 #> [14563,]  277 #> [14564,]  277 #> [14565,]  277 #> [14566,]  277 #> [14567,]  277 #> [14568,]  277 #> [14569,]  277 #> [14570,]  277 #> [14571,]  277 #> [14572,]  278 #> [14573,]  278 #> [14574,]  278 #> [14575,]  278 #> [14576,]  278 #> [14577,]  278 #> [14578,]  277 #> [14579,]  277 #> [14580,]  277 #> [14581,]  277 #> [14582,]  277 #> [14583,]  277 #> [14584,]  277 #> [14585,]  277 #> [14586,]  277 #> [14587,]  277 #> [14588,]  277 #> [14589,]  277 #> [14590,]  277 #> [14591,]  277 #> [14592,]  277 #> [14593,]  277 #> [14594,]  278 #> [14595,]  278 #> [14596,]  277 #> [14597,]  277 #> [14598,]  277 #> [14599,]  277 #> [14600,]  277 #> [14601,]  280 #> [14602,]  279 #> [14603,]  279 #> [14604,]  280 #> [14605,]  280 #> [14606,]  279 #> [14607,]  279 #> [14608,]  279 #> [14609,]  279 #> [14610,]  280 #> [14611,]  280 #> [14612,]  280 #> [14613,]  280 #> [14614,]  280 #> [14615,]  280 #> [14616,]  280 #> [14617,]  280 #> [14618,]  280 #> [14619,]  280 #> [14620,]  279 #> [14621,]  279 #> [14622,]  280 #> [14623,]  279 #> [14624,]  280 #> [14625,]  279 #> [14626,]  280 #> [14627,]  280 #> [14628,]  280 #> [14629,]  279 #> [14630,]  279 #> [14631,]  280 #> [14632,]  280 #> [14633,]  280 #> [14634,]  279 #> [14635,]  279 #> [14636,]  279 #> [14637,]  279 #> [14638,]  280 #> [14639,]  280 #> [14640,]  279 #> [14641,]  279 #> [14642,]  279 #> [14643,]  280 #> [14644,]  279 #> [14645,]  279 #> [14646,]  280 #> [14647,]  280 #> [14648,]  280 #> [14649,]  279 #> [14650,]  279 #> [14651,]  280 #> [14652,]  280 #> [14653,]  279 #> [14654,]  279 #> [14655,]  279 #> [14656,]  279 #> [14657,]  279 #> [14658,]  280 #> [14659,]  280 #> [14660,]  279 #> [14661,]  280 #> [14662,]  279 #> [14663,]  280 #> [14664,]  279 #> [14665,]  279 #> [14666,]  280 #> [14667,]  279 #> [14668,]  280 #> [14669,]  280 #> [14670,]  280 #> [14671,]  280 #> [14672,]  279 #> [14673,]  279 #> [14674,]  279 #> [14675,]  280 #> [14676,]  279 #> [14677,]  280 #> [14678,]  280 #> [14679,]  280 #> [14680,]  279 #> [14681,]  279 #> [14682,]  279 #> [14683,]  280 #> [14684,]  279 #> [14685,]  279 #> [14686,]  279 #> [14687,]  280 #> [14688,]  279 #> [14689,]  279 #> [14690,]  280 #> [14691,]  280 #> [14692,]  280 #> [14693,]  280 #> [14694,]  279 #> [14695,]  280 #> [14696,]  280 #> [14697,]  279 #> [14698,]  279 #> [14699,]  279 #> [14700,]  280 #> [14701,]  282 #> [14702,]  282 #> [14703,]  282 #> [14704,]  281 #> [14705,]  282 #> [14706,]  282 #> [14707,]  282 #> [14708,]  281 #> [14709,]  281 #> [14710,]  281 #> [14711,]  282 #> [14712,]  282 #> [14713,]  282 #> [14714,]  282 #> [14715,]  282 #> [14716,]  282 #> [14717,]  282 #> [14718,]  281 #> [14719,]  282 #> [14720,]  281 #> [14721,]  282 #> [14722,]  282 #> [14723,]  282 #> [14724,]  282 #> [14725,]  282 #> [14726,]  282 #> [14727,]  282 #> [14728,]  282 #> [14729,]  282 #> [14730,]  281 #> [14731,]  282 #> [14732,]  282 #> [14733,]  282 #> [14734,]  282 #> [14735,]  282 #> [14736,]  282 #> [14737,]  282 #> [14738,]  282 #> [14739,]  281 #> [14740,]  282 #> [14741,]  282 #> [14742,]  282 #> [14743,]  281 #> [14744,]  282 #> [14745,]  281 #> [14746,]  282 #> [14747,]  282 #> [14748,]  282 #> [14749,]  281 #> [14750,]  282 #> [14751,]  281 #> [14752,]  282 #> [14753,]  281 #> [14754,]  282 #> [14755,]  282 #> [14756,]  281 #> [14757,]  282 #> [14758,]  282 #> [14759,]  282 #> [14760,]  281 #> [14761,]  282 #> [14762,]  282 #> [14763,]  282 #> [14764,]  281 #> [14765,]  281 #> [14766,]  281 #> [14767,]  281 #> [14768,]  282 #> [14769,]  282 #> [14770,]  282 #> [14771,]  282 #> [14772,]  282 #> [14773,]  282 #> [14774,]  282 #> [14775,]  282 #> [14776,]  282 #> [14777,]  282 #> [14778,]  281 #> [14779,]  282 #> [14780,]  282 #> [14781,]  282 #> [14782,]  282 #> [14783,]  282 #> [14784,]  282 #> [14785,]  281 #> [14786,]  282 #> [14787,]  282 #> [14788,]  282 #> [14789,]  281 #> [14790,]  282 #> [14791,]  281 #> [14792,]  282 #> [14793,]  282 #> [14794,]  282 #> [14795,]  281 #> [14796,]  282 #> [14797,]  282 #> [14798,]  282 #> [14799,]  282 #> [14800,]  282 #> [14801,]  283 #> [14802,]  283 #> [14803,]  283 #> [14804,]  283 #> [14805,]  283 #> [14806,]  283 #> [14807,]  283 #> [14808,]  283 #> [14809,]  283 #> [14810,]  283 #> [14811,]  283 #> [14812,]  283 #> [14813,]  283 #> [14814,]  283 #> [14815,]  283 #> [14816,]  283 #> [14817,]  283 #> [14818,]  283 #> [14819,]  283 #> [14820,]  283 #> [14821,]  283 #> [14822,]  283 #> [14823,]  283 #> [14824,]  283 #> [14825,]  283 #> [14826,]  283 #> [14827,]  283 #> [14828,]  283 #> [14829,]  283 #> [14830,]  283 #> [14831,]  283 #> [14832,]  283 #> [14833,]  283 #> [14834,]  283 #> [14835,]  283 #> [14836,]  283 #> [14837,]  283 #> [14838,]  283 #> [14839,]  283 #> [14840,]  283 #> [14841,]  283 #> [14842,]  283 #> [14843,]  283 #> [14844,]  283 #> [14845,]  283 #> [14846,]  283 #> [14847,]  283 #> [14848,]  283 #> [14849,]  283 #> [14850,]  283 #> [14851,]  283 #> [14852,]  283 #> [14853,]  283 #> [14854,]  283 #> [14855,]  283 #> [14856,]  283 #> [14857,]  283 #> [14858,]  283 #> [14859,]  283 #> [14860,]  283 #> [14861,]  283 #> [14862,]  283 #> [14863,]  283 #> [14864,]  283 #> [14865,]  283 #> [14866,]  283 #> [14867,]  283 #> [14868,]  283 #> [14869,]  283 #> [14870,]  283 #> [14871,]  283 #> [14872,]  283 #> [14873,]  283 #> [14874,]  283 #> [14875,]  283 #> [14876,]  283 #> [14877,]  283 #> [14878,]  283 #> [14879,]  283 #> [14880,]  283 #> [14881,]  283 #> [14882,]  283 #> [14883,]  283 #> [14884,]  283 #> [14885,]  283 #> [14886,]  283 #> [14887,]  283 #> [14888,]  283 #> [14889,]  283 #> [14890,]  283 #> [14891,]  283 #> [14892,]  283 #> [14893,]  283 #> [14894,]  283 #> [14895,]  283 #> [14896,]  283 #> [14897,]  283 #> [14898,]  283 #> [14899,]  283 #> [14900,]  283 #> [14901,]  285 #> [14902,]  285 #> [14903,]  284 #> [14904,]  285 #> [14905,]  285 #> [14906,]  285 #> [14907,]  284 #> [14908,]  285 #> [14909,]  285 #> [14910,]  285 #> [14911,]  285 #> [14912,]  285 #> [14913,]  284 #> [14914,]  285 #> [14915,]  285 #> [14916,]  284 #> [14917,]  285 #> [14918,]  285 #> [14919,]  285 #> [14920,]  285 #> [14921,]  284 #> [14922,]  285 #> [14923,]  284 #> [14924,]  285 #> [14925,]  285 #> [14926,]  285 #> [14927,]  285 #> [14928,]  285 #> [14929,]  285 #> [14930,]  284 #> [14931,]  284 #> [14932,]  285 #> [14933,]  285 #> [14934,]  285 #> [14935,]  284 #> [14936,]  284 #> [14937,]  284 #> [14938,]  285 #> [14939,]  284 #> [14940,]  284 #> [14941,]  285 #> [14942,]  285 #> [14943,]  285 #> [14944,]  285 #> [14945,]  285 #> [14946,]  285 #> [14947,]  284 #> [14948,]  285 #> [14949,]  284 #> [14950,]  285 #> [14951,]  285 #> [14952,]  285 #> [14953,]  285 #> [14954,]  284 #> [14955,]  285 #> [14956,]  285 #> [14957,]  285 #> [14958,]  285 #> [14959,]  285 #> [14960,]  285 #> [14961,]  285 #> [14962,]  284 #> [14963,]  285 #> [14964,]  285 #> [14965,]  285 #> [14966,]  285 #> [14967,]  285 #> [14968,]  285 #> [14969,]  285 #> [14970,]  284 #> [14971,]  285 #> [14972,]  285 #> [14973,]  285 #> [14974,]  285 #> [14975,]  285 #> [14976,]  285 #> [14977,]  284 #> [14978,]  285 #> [14979,]  284 #> [14980,]  284 #> [14981,]  285 #> [14982,]  285 #> [14983,]  284 #> [14984,]  285 #> [14985,]  285 #> [14986,]  285 #> [14987,]  285 #> [14988,]  285 #> [14989,]  285 #> [14990,]  285 #> [14991,]  285 #> [14992,]  285 #> [14993,]  284 #> [14994,]  285 #> [14995,]  284 #> [14996,]  285 #> [14997,]  285 #> [14998,]  284 #> [14999,]  285 #> [15000,]  285 #> [15001,]  287 #> [15002,]  286 #> [15003,]  286 #> [15004,]  287 #> [15005,]  287 #> [15006,]  287 #> [15007,]  286 #> [15008,]  287 #> [15009,]  287 #> [15010,]  286 #> [15011,]  287 #> [15012,]  287 #> [15013,]  286 #> [15014,]  287 #> [15015,]  287 #> [15016,]  286 #> [15017,]  287 #> [15018,]  286 #> [15019,]  286 #> [15020,]  287 #> [15021,]  286 #> [15022,]  286 #> [15023,]  286 #> [15024,]  286 #> [15025,]  287 #> [15026,]  287 #> [15027,]  287 #> [15028,]  287 #> [15029,]  286 #> [15030,]  286 #> [15031,]  286 #> [15032,]  286 #> [15033,]  287 #> [15034,]  286 #> [15035,]  286 #> [15036,]  286 #> [15037,]  286 #> [15038,]  287 #> [15039,]  286 #> [15040,]  286 #> [15041,]  287 #> [15042,]  287 #> [15043,]  287 #> [15044,]  286 #> [15045,]  287 #> [15046,]  287 #> [15047,]  286 #> [15048,]  286 #> [15049,]  286 #> [15050,]  287 #> [15051,]  287 #> [15052,]  287 #> [15053,]  287 #> [15054,]  286 #> [15055,]  287 #> [15056,]  287 #> [15057,]  287 #> [15058,]  287 #> [15059,]  286 #> [15060,]  287 #> [15061,]  287 #> [15062,]  286 #> [15063,]  287 #> [15064,]  287 #> [15065,]  287 #> [15066,]  287 #> [15067,]  287 #> [15068,]  287 #> [15069,]  287 #> [15070,]  286 #> [15071,]  287 #> [15072,]  287 #> [15073,]  287 #> [15074,]  287 #> [15075,]  287 #> [15076,]  287 #> [15077,]  286 #> [15078,]  287 #> [15079,]  286 #> [15080,]  286 #> [15081,]  287 #> [15082,]  287 #> [15083,]  286 #> [15084,]  287 #> [15085,]  286 #> [15086,]  286 #> [15087,]  287 #> [15088,]  287 #> [15089,]  287 #> [15090,]  287 #> [15091,]  287 #> [15092,]  287 #> [15093,]  286 #> [15094,]  287 #> [15095,]  286 #> [15096,]  287 #> [15097,]  287 #> [15098,]  286 #> [15099,]  287 #> [15100,]  286 #> [15101,]  289 #> [15102,]  288 #> [15103,]  289 #> [15104,]  289 #> [15105,]  289 #> [15106,]  288 #> [15107,]  289 #> [15108,]  289 #> [15109,]  289 #> [15110,]  289 #> [15111,]  288 #> [15112,]  288 #> [15113,]  289 #> [15114,]  289 #> [15115,]  288 #> [15116,]  289 #> [15117,]  288 #> [15118,]  289 #> [15119,]  289 #> [15120,]  289 #> [15121,]  289 #> [15122,]  289 #> [15123,]  288 #> [15124,]  289 #> [15125,]  289 #> [15126,]  289 #> [15127,]  289 #> [15128,]  289 #> [15129,]  288 #> [15130,]  288 #> [15131,]  288 #> [15132,]  289 #> [15133,]  289 #> [15134,]  288 #> [15135,]  289 #> [15136,]  289 #> [15137,]  288 #> [15138,]  289 #> [15139,]  289 #> [15140,]  289 #> [15141,]  289 #> [15142,]  288 #> [15143,]  288 #> [15144,]  288 #> [15145,]  289 #> [15146,]  289 #> [15147,]  288 #> [15148,]  288 #> [15149,]  289 #> [15150,]  289 #> [15151,]  289 #> [15152,]  289 #> [15153,]  289 #> [15154,]  289 #> [15155,]  289 #> [15156,]  288 #> [15157,]  289 #> [15158,]  289 #> [15159,]  289 #> [15160,]  288 #> [15161,]  288 #> [15162,]  289 #> [15163,]  288 #> [15164,]  288 #> [15165,]  288 #> [15166,]  289 #> [15167,]  289 #> [15168,]  289 #> [15169,]  289 #> [15170,]  288 #> [15171,]  289 #> [15172,]  289 #> [15173,]  289 #> [15174,]  289 #> [15175,]  288 #> [15176,]  289 #> [15177,]  289 #> [15178,]  288 #> [15179,]  288 #> [15180,]  289 #> [15181,]  288 #> [15182,]  289 #> [15183,]  289 #> [15184,]  289 #> [15185,]  289 #> [15186,]  289 #> [15187,]  289 #> [15188,]  289 #> [15189,]  289 #> [15190,]  289 #> [15191,]  289 #> [15192,]  288 #> [15193,]  289 #> [15194,]  288 #> [15195,]  288 #> [15196,]  289 #> [15197,]  289 #> [15198,]  289 #> [15199,]  289 #> [15200,]  288 #> [15201,]  291 #> [15202,]  291 #> [15203,]  290 #> [15204,]  290 #> [15205,]  290 #> [15206,]  290 #> [15207,]  290 #> [15208,]  291 #> [15209,]  290 #> [15210,]  290 #> [15211,]  290 #> [15212,]  290 #> [15213,]  291 #> [15214,]  290 #> [15215,]  291 #> [15216,]  291 #> [15217,]  290 #> [15218,]  290 #> [15219,]  291 #> [15220,]  291 #> [15221,]  290 #> [15222,]  291 #> [15223,]  291 #> [15224,]  290 #> [15225,]  290 #> [15226,]  291 #> [15227,]  291 #> [15228,]  290 #> [15229,]  291 #> [15230,]  291 #> [15231,]  290 #> [15232,]  290 #> [15233,]  291 #> [15234,]  290 #> [15235,]  290 #> [15236,]  291 #> [15237,]  291 #> [15238,]  291 #> [15239,]  290 #> [15240,]  290 #> [15241,]  291 #> [15242,]  290 #> [15243,]  291 #> [15244,]  291 #> [15245,]  290 #> [15246,]  291 #> [15247,]  290 #> [15248,]  290 #> [15249,]  290 #> [15250,]  291 #> [15251,]  291 #> [15252,]  290 #> [15253,]  291 #> [15254,]  290 #> [15255,]  291 #> [15256,]  291 #> [15257,]  290 #> [15258,]  291 #> [15259,]  291 #> [15260,]  291 #> [15261,]  291 #> [15262,]  290 #> [15263,]  291 #> [15264,]  291 #> [15265,]  290 #> [15266,]  291 #> [15267,]  290 #> [15268,]  291 #> [15269,]  291 #> [15270,]  290 #> [15271,]  291 #> [15272,]  290 #> [15273,]  290 #> [15274,]  290 #> [15275,]  291 #> [15276,]  290 #> [15277,]  291 #> [15278,]  291 #> [15279,]  290 #> [15280,]  291 #> [15281,]  291 #> [15282,]  290 #> [15283,]  291 #> [15284,]  291 #> [15285,]  291 #> [15286,]  290 #> [15287,]  291 #> [15288,]  290 #> [15289,]  290 #> [15290,]  291 #> [15291,]  290 #> [15292,]  290 #> [15293,]  291 #> [15294,]  290 #> [15295,]  291 #> [15296,]  291 #> [15297,]  291 #> [15298,]  290 #> [15299,]  290 #> [15300,]  291 #> [15301,]  292 #> [15302,]  293 #> [15303,]  293 #> [15304,]  292 #> [15305,]  293 #> [15306,]  293 #> [15307,]  293 #> [15308,]  292 #> [15309,]  292 #> [15310,]  293 #> [15311,]  292 #> [15312,]  293 #> [15313,]  292 #> [15314,]  292 #> [15315,]  293 #> [15316,]  293 #> [15317,]  292 #> [15318,]  293 #> [15319,]  293 #> [15320,]  293 #> [15321,]  292 #> [15322,]  292 #> [15323,]  293 #> [15324,]  293 #> [15325,]  293 #> [15326,]  293 #> [15327,]  292 #> [15328,]  293 #> [15329,]  293 #> [15330,]  292 #> [15331,]  293 #> [15332,]  293 #> [15333,]  293 #> [15334,]  293 #> [15335,]  292 #> [15336,]  293 #> [15337,]  293 #> [15338,]  293 #> [15339,]  293 #> [15340,]  293 #> [15341,]  293 #> [15342,]  293 #> [15343,]  292 #> [15344,]  292 #> [15345,]  292 #> [15346,]  292 #> [15347,]  293 #> [15348,]  293 #> [15349,]  292 #> [15350,]  293 #> [15351,]  293 #> [15352,]  292 #> [15353,]  293 #> [15354,]  292 #> [15355,]  292 #> [15356,]  293 #> [15357,]  293 #> [15358,]  292 #> [15359,]  293 #> [15360,]  293 #> [15361,]  293 #> [15362,]  293 #> [15363,]  293 #> [15364,]  293 #> [15365,]  293 #> [15366,]  292 #> [15367,]  293 #> [15368,]  292 #> [15369,]  292 #> [15370,]  293 #> [15371,]  293 #> [15372,]  293 #> [15373,]  293 #> [15374,]  293 #> [15375,]  293 #> [15376,]  293 #> [15377,]  293 #> [15378,]  293 #> [15379,]  292 #> [15380,]  292 #> [15381,]  292 #> [15382,]  292 #> [15383,]  292 #> [15384,]  293 #> [15385,]  293 #> [15386,]  293 #> [15387,]  292 #> [15388,]  292 #> [15389,]  292 #> [15390,]  292 #> [15391,]  292 #> [15392,]  292 #> [15393,]  293 #> [15394,]  293 #> [15395,]  292 #> [15396,]  292 #> [15397,]  293 #> [15398,]  293 #> [15399,]  292 #> [15400,]  293 #> [15401,]  294 #> [15402,]  294 #> [15403,]  294 #> [15404,]  295 #> [15405,]  294 #> [15406,]  294 #> [15407,]  294 #> [15408,]  294 #> [15409,]  294 #> [15410,]  294 #> [15411,]  294 #> [15412,]  294 #> [15413,]  294 #> [15414,]  295 #> [15415,]  294 #> [15416,]  294 #> [15417,]  294 #> [15418,]  294 #> [15419,]  294 #> [15420,]  294 #> [15421,]  294 #> [15422,]  294 #> [15423,]  294 #> [15424,]  294 #> [15425,]  294 #> [15426,]  294 #> [15427,]  295 #> [15428,]  294 #> [15429,]  294 #> [15430,]  294 #> [15431,]  294 #> [15432,]  294 #> [15433,]  294 #> [15434,]  294 #> [15435,]  294 #> [15436,]  294 #> [15437,]  294 #> [15438,]  294 #> [15439,]  294 #> [15440,]  294 #> [15441,]  294 #> [15442,]  294 #> [15443,]  294 #> [15444,]  294 #> [15445,]  294 #> [15446,]  294 #> [15447,]  294 #> [15448,]  294 #> [15449,]  294 #> [15450,]  294 #> [15451,]  294 #> [15452,]  294 #> [15453,]  294 #> [15454,]  294 #> [15455,]  294 #> [15456,]  294 #> [15457,]  294 #> [15458,]  294 #> [15459,]  294 #> [15460,]  294 #> [15461,]  295 #> [15462,]  294 #> [15463,]  294 #> [15464,]  294 #> [15465,]  294 #> [15466,]  294 #> [15467,]  294 #> [15468,]  294 #> [15469,]  294 #> [15470,]  294 #> [15471,]  294 #> [15472,]  294 #> [15473,]  294 #> [15474,]  294 #> [15475,]  294 #> [15476,]  294 #> [15477,]  294 #> [15478,]  294 #> [15479,]  294 #> [15480,]  294 #> [15481,]  294 #> [15482,]  295 #> [15483,]  294 #> [15484,]  294 #> [15485,]  294 #> [15486,]  294 #> [15487,]  294 #> [15488,]  294 #> [15489,]  294 #> [15490,]  294 #> [15491,]  294 #> [15492,]  295 #> [15493,]  295 #> [15494,]  294 #> [15495,]  294 #> [15496,]  295 #> [15497,]  295 #> [15498,]  294 #> [15499,]  294 #> [15500,]  294 #> [15501,]  297 #> [15502,]  297 #> [15503,]  296 #> [15504,]  296 #> [15505,]  297 #> [15506,]  297 #> [15507,]  296 #> [15508,]  296 #> [15509,]  297 #> [15510,]  296 #> [15511,]  297 #> [15512,]  296 #> [15513,]  297 #> [15514,]  296 #> [15515,]  296 #> [15516,]  296 #> [15517,]  297 #> [15518,]  297 #> [15519,]  297 #> [15520,]  297 #> [15521,]  297 #> [15522,]  297 #> [15523,]  296 #> [15524,]  297 #> [15525,]  296 #> [15526,]  296 #> [15527,]  297 #> [15528,]  297 #> [15529,]  297 #> [15530,]  296 #> [15531,]  296 #> [15532,]  296 #> [15533,]  297 #> [15534,]  296 #> [15535,]  296 #> [15536,]  297 #> [15537,]  296 #> [15538,]  297 #> [15539,]  297 #> [15540,]  296 #> [15541,]  297 #> [15542,]  297 #> [15543,]  297 #> [15544,]  296 #> [15545,]  296 #> [15546,]  296 #> [15547,]  296 #> [15548,]  297 #> [15549,]  296 #> [15550,]  297 #> [15551,]  297 #> [15552,]  296 #> [15553,]  297 #> [15554,]  297 #> [15555,]  296 #> [15556,]  297 #> [15557,]  296 #> [15558,]  297 #> [15559,]  296 #> [15560,]  296 #> [15561,]  297 #> [15562,]  297 #> [15563,]  297 #> [15564,]  297 #> [15565,]  297 #> [15566,]  297 #> [15567,]  296 #> [15568,]  296 #> [15569,]  296 #> [15570,]  297 #> [15571,]  296 #> [15572,]  296 #> [15573,]  297 #> [15574,]  296 #> [15575,]  296 #> [15576,]  296 #> [15577,]  297 #> [15578,]  296 #> [15579,]  297 #> [15580,]  296 #> [15581,]  297 #> [15582,]  297 #> [15583,]  297 #> [15584,]  297 #> [15585,]  297 #> [15586,]  296 #> [15587,]  297 #> [15588,]  296 #> [15589,]  297 #> [15590,]  297 #> [15591,]  297 #> [15592,]  296 #> [15593,]  297 #> [15594,]  297 #> [15595,]  296 #> [15596,]  296 #> [15597,]  296 #> [15598,]  296 #> [15599,]  297 #> [15600,]  297 #> [15601,]  299 #> [15602,]  298 #> [15603,]  298 #> [15604,]  299 #> [15605,]  298 #> [15606,]  298 #> [15607,]  299 #> [15608,]  298 #> [15609,]  299 #> [15610,]  299 #> [15611,]  298 #> [15612,]  298 #> [15613,]  299 #> [15614,]  299 #> [15615,]  298 #> [15616,]  299 #> [15617,]  298 #> [15618,]  298 #> [15619,]  298 #> [15620,]  299 #> [15621,]  298 #> [15622,]  299 #> [15623,]  298 #> [15624,]  299 #> [15625,]  299 #> [15626,]  298 #> [15627,]  298 #> [15628,]  299 #> [15629,]  298 #> [15630,]  298 #> [15631,]  298 #> [15632,]  298 #> [15633,]  298 #> [15634,]  298 #> [15635,]  298 #> [15636,]  299 #> [15637,]  298 #> [15638,]  298 #> [15639,]  299 #> [15640,]  298 #> [15641,]  298 #> [15642,]  298 #> [15643,]  298 #> [15644,]  298 #> [15645,]  299 #> [15646,]  298 #> [15647,]  298 #> [15648,]  298 #> [15649,]  299 #> [15650,]  299 #> [15651,]  298 #> [15652,]  299 #> [15653,]  299 #> [15654,]  299 #> [15655,]  299 #> [15656,]  298 #> [15657,]  299 #> [15658,]  299 #> [15659,]  299 #> [15660,]  298 #> [15661,]  298 #> [15662,]  298 #> [15663,]  298 #> [15664,]  298 #> [15665,]  298 #> [15666,]  298 #> [15667,]  299 #> [15668,]  298 #> [15669,]  298 #> [15670,]  298 #> [15671,]  298 #> [15672,]  299 #> [15673,]  299 #> [15674,]  298 #> [15675,]  298 #> [15676,]  299 #> [15677,]  298 #> [15678,]  298 #> [15679,]  298 #> [15680,]  298 #> [15681,]  298 #> [15682,]  298 #> [15683,]  298 #> [15684,]  298 #> [15685,]  299 #> [15686,]  299 #> [15687,]  299 #> [15688,]  298 #> [15689,]  298 #> [15690,]  299 #> [15691,]  299 #> [15692,]  298 #> [15693,]  298 #> [15694,]  298 #> [15695,]  298 #> [15696,]  298 #> [15697,]  298 #> [15698,]  298 #> [15699,]  298 #> [15700,]  298 #> [15701,]  301 #> [15702,]  301 #> [15703,]  301 #> [15704,]  300 #> [15705,]  301 #> [15706,]  301 #> [15707,]  301 #> [15708,]  300 #> [15709,]  300 #> [15710,]  301 #> [15711,]  300 #> [15712,]  301 #> [15713,]  300 #> [15714,]  301 #> [15715,]  301 #> [15716,]  301 #> [15717,]  300 #> [15718,]  301 #> [15719,]  301 #> [15720,]  301 #> [15721,]  301 #> [15722,]  300 #> [15723,]  301 #> [15724,]  301 #> [15725,]  301 #> [15726,]  301 #> [15727,]  300 #> [15728,]  301 #> [15729,]  301 #> [15730,]  301 #> [15731,]  301 #> [15732,]  301 #> [15733,]  301 #> [15734,]  301 #> [15735,]  300 #> [15736,]  301 #> [15737,]  301 #> [15738,]  301 #> [15739,]  301 #> [15740,]  301 #> [15741,]  301 #> [15742,]  301 #> [15743,]  300 #> [15744,]  300 #> [15745,]  301 #> [15746,]  301 #> [15747,]  301 #> [15748,]  301 #> [15749,]  300 #> [15750,]  301 #> [15751,]  301 #> [15752,]  300 #> [15753,]  301 #> [15754,]  301 #> [15755,]  300 #> [15756,]  301 #> [15757,]  301 #> [15758,]  300 #> [15759,]  301 #> [15760,]  301 #> [15761,]  301 #> [15762,]  301 #> [15763,]  301 #> [15764,]  301 #> [15765,]  301 #> [15766,]  300 #> [15767,]  301 #> [15768,]  301 #> [15769,]  300 #> [15770,]  301 #> [15771,]  301 #> [15772,]  301 #> [15773,]  301 #> [15774,]  301 #> [15775,]  301 #> [15776,]  301 #> [15777,]  301 #> [15778,]  301 #> [15779,]  300 #> [15780,]  300 #> [15781,]  300 #> [15782,]  300 #> [15783,]  300 #> [15784,]  301 #> [15785,]  301 #> [15786,]  301 #> [15787,]  300 #> [15788,]  300 #> [15789,]  300 #> [15790,]  300 #> [15791,]  301 #> [15792,]  300 #> [15793,]  301 #> [15794,]  301 #> [15795,]  300 #> [15796,]  301 #> [15797,]  301 #> [15798,]  301 #> [15799,]  300 #> [15800,]  301 #> [15801,]  303 #> [15802,]  302 #> [15803,]  302 #> [15804,]  302 #> [15805,]  302 #> [15806,]  302 #> [15807,]  302 #> [15808,]  302 #> [15809,]  303 #> [15810,]  302 #> [15811,]  302 #> [15812,]  302 #> [15813,]  303 #> [15814,]  302 #> [15815,]  302 #> [15816,]  302 #> [15817,]  303 #> [15818,]  303 #> [15819,]  302 #> [15820,]  303 #> [15821,]  302 #> [15822,]  302 #> [15823,]  302 #> [15824,]  302 #> [15825,]  302 #> [15826,]  302 #> [15827,]  303 #> [15828,]  302 #> [15829,]  302 #> [15830,]  302 #> [15831,]  302 #> [15832,]  302 #> [15833,]  303 #> [15834,]  302 #> [15835,]  302 #> [15836,]  303 #> [15837,]  302 #> [15838,]  303 #> [15839,]  302 #> [15840,]  302 #> [15841,]  302 #> [15842,]  303 #> [15843,]  302 #> [15844,]  302 #> [15845,]  302 #> [15846,]  302 #> [15847,]  302 #> [15848,]  302 #> [15849,]  302 #> [15850,]  302 #> [15851,]  303 #> [15852,]  302 #> [15853,]  303 #> [15854,]  303 #> [15855,]  302 #> [15856,]  303 #> [15857,]  302 #> [15858,]  302 #> [15859,]  302 #> [15860,]  302 #> [15861,]  302 #> [15862,]  302 #> [15863,]  302 #> [15864,]  302 #> [15865,]  303 #> [15866,]  303 #> [15867,]  302 #> [15868,]  302 #> [15869,]  302 #> [15870,]  302 #> [15871,]  302 #> [15872,]  302 #> [15873,]  302 #> [15874,]  302 #> [15875,]  302 #> [15876,]  302 #> [15877,]  303 #> [15878,]  302 #> [15879,]  303 #> [15880,]  302 #> [15881,]  302 #> [15882,]  303 #> [15883,]  303 #> [15884,]  303 #> [15885,]  303 #> [15886,]  302 #> [15887,]  303 #> [15888,]  302 #> [15889,]  302 #> [15890,]  302 #> [15891,]  303 #> [15892,]  302 #> [15893,]  303 #> [15894,]  303 #> [15895,]  302 #> [15896,]  302 #> [15897,]  302 #> [15898,]  302 #> [15899,]  302 #> [15900,]  302 #> [15901,]  305 #> [15902,]  305 #> [15903,]  305 #> [15904,]  305 #> [15905,]  305 #> [15906,]  305 #> [15907,]  305 #> [15908,]  305 #> [15909,]  305 #> [15910,]  305 #> [15911,]  305 #> [15912,]  305 #> [15913,]  305 #> [15914,]  305 #> [15915,]  305 #> [15916,]  305 #> [15917,]  305 #> [15918,]  305 #> [15919,]  305 #> [15920,]  305 #> [15921,]  305 #> [15922,]  305 #> [15923,]  305 #> [15924,]  305 #> [15925,]  304 #> [15926,]  305 #> [15927,]  305 #> [15928,]  305 #> [15929,]  305 #> [15930,]  305 #> [15931,]  305 #> [15932,]  305 #> [15933,]  305 #> [15934,]  305 #> [15935,]  305 #> [15936,]  305 #> [15937,]  305 #> [15938,]  305 #> [15939,]  305 #> [15940,]  305 #> [15941,]  305 #> [15942,]  305 #> [15943,]  305 #> [15944,]  305 #> [15945,]  305 #> [15946,]  305 #> [15947,]  305 #> [15948,]  305 #> [15949,]  305 #> [15950,]  305 #> [15951,]  305 #> [15952,]  305 #> [15953,]  305 #> [15954,]  305 #> [15955,]  305 #> [15956,]  304 #> [15957,]  305 #> [15958,]  305 #> [15959,]  305 #> [15960,]  305 #> [15961,]  305 #> [15962,]  305 #> [15963,]  305 #> [15964,]  305 #> [15965,]  304 #> [15966,]  305 #> [15967,]  305 #> [15968,]  305 #> [15969,]  305 #> [15970,]  305 #> [15971,]  305 #> [15972,]  305 #> [15973,]  305 #> [15974,]  305 #> [15975,]  305 #> [15976,]  305 #> [15977,]  305 #> [15978,]  305 #> [15979,]  305 #> [15980,]  304 #> [15981,]  305 #> [15982,]  305 #> [15983,]  305 #> [15984,]  305 #> [15985,]  304 #> [15986,]  305 #> [15987,]  305 #> [15988,]  305 #> [15989,]  304 #> [15990,]  305 #> [15991,]  305 #> [15992,]  305 #> [15993,]  305 #> [15994,]  305 #> [15995,]  305 #> [15996,]  305 #> [15997,]  305 #> [15998,]  305 #> [15999,]  305 #> [16000,]  305 #> [16001,]  306 #> [16002,]  306 #> [16003,]  306 #> [16004,]  306 #> [16005,]  306 #> [16006,]  307 #> [16007,]  306 #> [16008,]  307 #> [16009,]  307 #> [16010,]  306 #> [16011,]  306 #> [16012,]  307 #> [16013,]  306 #> [16014,]  306 #> [16015,]  307 #> [16016,]  306 #> [16017,]  306 #> [16018,]  306 #> [16019,]  306 #> [16020,]  306 #> [16021,]  306 #> [16022,]  306 #> [16023,]  306 #> [16024,]  306 #> [16025,]  306 #> [16026,]  307 #> [16027,]  306 #> [16028,]  306 #> [16029,]  306 #> [16030,]  306 #> [16031,]  306 #> [16032,]  306 #> [16033,]  306 #> [16034,]  306 #> [16035,]  306 #> [16036,]  306 #> [16037,]  306 #> [16038,]  306 #> [16039,]  306 #> [16040,]  306 #> [16041,]  306 #> [16042,]  306 #> [16043,]  307 #> [16044,]  306 #> [16045,]  306 #> [16046,]  307 #> [16047,]  306 #> [16048,]  306 #> [16049,]  306 #> [16050,]  306 #> [16051,]  307 #> [16052,]  306 #> [16053,]  306 #> [16054,]  306 #> [16055,]  306 #> [16056,]  307 #> [16057,]  306 #> [16058,]  306 #> [16059,]  306 #> [16060,]  306 #> [16061,]  307 #> [16062,]  306 #> [16063,]  306 #> [16064,]  307 #> [16065,]  306 #> [16066,]  307 #> [16067,]  306 #> [16068,]  306 #> [16069,]  306 #> [16070,]  306 #> [16071,]  306 #> [16072,]  306 #> [16073,]  306 #> [16074,]  306 #> [16075,]  306 #> [16076,]  307 #> [16077,]  306 #> [16078,]  306 #> [16079,]  306 #> [16080,]  306 #> [16081,]  306 #> [16082,]  306 #> [16083,]  306 #> [16084,]  306 #> [16085,]  306 #> [16086,]  306 #> [16087,]  306 #> [16088,]  306 #> [16089,]  306 #> [16090,]  306 #> [16091,]  306 #> [16092,]  306 #> [16093,]  306 #> [16094,]  307 #> [16095,]  306 #> [16096,]  306 #> [16097,]  306 #> [16098,]  306 #> [16099,]  306 #> [16100,]  306 #> [16101,]  309 #> [16102,]  308 #> [16103,]  308 #> [16104,]  308 #> [16105,]  309 #> [16106,]  308 #> [16107,]  308 #> [16108,]  308 #> [16109,]  308 #> [16110,]  309 #> [16111,]  309 #> [16112,]  309 #> [16113,]  308 #> [16114,]  309 #> [16115,]  309 #> [16116,]  308 #> [16117,]  309 #> [16118,]  309 #> [16119,]  308 #> [16120,]  308 #> [16121,]  308 #> [16122,]  309 #> [16123,]  308 #> [16124,]  308 #> [16125,]  308 #> [16126,]  309 #> [16127,]  309 #> [16128,]  308 #> [16129,]  308 #> [16130,]  308 #> [16131,]  309 #> [16132,]  309 #> [16133,]  308 #> [16134,]  308 #> [16135,]  308 #> [16136,]  308 #> [16137,]  308 #> [16138,]  309 #> [16139,]  308 #> [16140,]  308 #> [16141,]  308 #> [16142,]  308 #> [16143,]  309 #> [16144,]  308 #> [16145,]  308 #> [16146,]  308 #> [16147,]  309 #> [16148,]  308 #> [16149,]  308 #> [16150,]  308 #> [16151,]  308 #> [16152,]  309 #> [16153,]  308 #> [16154,]  308 #> [16155,]  308 #> [16156,]  308 #> [16157,]  308 #> [16158,]  309 #> [16159,]  309 #> [16160,]  308 #> [16161,]  309 #> [16162,]  308 #> [16163,]  308 #> [16164,]  308 #> [16165,]  308 #> [16166,]  309 #> [16167,]  308 #> [16168,]  308 #> [16169,]  308 #> [16170,]  309 #> [16171,]  309 #> [16172,]  308 #> [16173,]  308 #> [16174,]  308 #> [16175,]  309 #> [16176,]  308 #> [16177,]  309 #> [16178,]  308 #> [16179,]  309 #> [16180,]  308 #> [16181,]  308 #> [16182,]  308 #> [16183,]  308 #> [16184,]  308 #> [16185,]  308 #> [16186,]  308 #> [16187,]  309 #> [16188,]  308 #> [16189,]  308 #> [16190,]  309 #> [16191,]  309 #> [16192,]  309 #> [16193,]  308 #> [16194,]  308 #> [16195,]  309 #> [16196,]  308 #> [16197,]  308 #> [16198,]  308 #> [16199,]  308 #> [16200,]  309 #> [16201,]  311 #> [16202,]  310 #> [16203,]  310 #> [16204,]  311 #> [16205,]  310 #> [16206,]  310 #> [16207,]  311 #> [16208,]  310 #> [16209,]  311 #> [16210,]  311 #> [16211,]  310 #> [16212,]  310 #> [16213,]  311 #> [16214,]  311 #> [16215,]  310 #> [16216,]  311 #> [16217,]  310 #> [16218,]  310 #> [16219,]  310 #> [16220,]  311 #> [16221,]  310 #> [16222,]  311 #> [16223,]  310 #> [16224,]  311 #> [16225,]  311 #> [16226,]  310 #> [16227,]  310 #> [16228,]  311 #> [16229,]  310 #> [16230,]  310 #> [16231,]  310 #> [16232,]  310 #> [16233,]  310 #> [16234,]  310 #> [16235,]  310 #> [16236,]  311 #> [16237,]  310 #> [16238,]  310 #> [16239,]  311 #> [16240,]  310 #> [16241,]  311 #> [16242,]  310 #> [16243,]  310 #> [16244,]  310 #> [16245,]  311 #> [16246,]  310 #> [16247,]  310 #> [16248,]  310 #> [16249,]  311 #> [16250,]  311 #> [16251,]  310 #> [16252,]  311 #> [16253,]  311 #> [16254,]  311 #> [16255,]  311 #> [16256,]  310 #> [16257,]  311 #> [16258,]  311 #> [16259,]  311 #> [16260,]  310 #> [16261,]  310 #> [16262,]  310 #> [16263,]  310 #> [16264,]  310 #> [16265,]  310 #> [16266,]  310 #> [16267,]  311 #> [16268,]  310 #> [16269,]  310 #> [16270,]  310 #> [16271,]  311 #> [16272,]  311 #> [16273,]  311 #> [16274,]  310 #> [16275,]  310 #> [16276,]  311 #> [16277,]  310 #> [16278,]  310 #> [16279,]  310 #> [16280,]  310 #> [16281,]  310 #> [16282,]  310 #> [16283,]  310 #> [16284,]  310 #> [16285,]  311 #> [16286,]  311 #> [16287,]  311 #> [16288,]  311 #> [16289,]  310 #> [16290,]  311 #> [16291,]  311 #> [16292,]  310 #> [16293,]  310 #> [16294,]  310 #> [16295,]  310 #> [16296,]  310 #> [16297,]  310 #> [16298,]  310 #> [16299,]  310 #> [16300,]  310 #> [16301,]  313 #> [16302,]  313 #> [16303,]  313 #> [16304,]  313 #> [16305,]  313 #> [16306,]  313 #> [16307,]  312 #> [16308,]  313 #> [16309,]  313 #> [16310,]  313 #> [16311,]  313 #> [16312,]  313 #> [16313,]  313 #> [16314,]  313 #> [16315,]  313 #> [16316,]  313 #> [16317,]  313 #> [16318,]  313 #> [16319,]  313 #> [16320,]  313 #> [16321,]  312 #> [16322,]  313 #> [16323,]  313 #> [16324,]  313 #> [16325,]  313 #> [16326,]  313 #> [16327,]  313 #> [16328,]  313 #> [16329,]  313 #> [16330,]  313 #> [16331,]  313 #> [16332,]  313 #> [16333,]  313 #> [16334,]  313 #> [16335,]  313 #> [16336,]  313 #> [16337,]  313 #> [16338,]  313 #> [16339,]  312 #> [16340,]  313 #> [16341,]  313 #> [16342,]  313 #> [16343,]  313 #> [16344,]  313 #> [16345,]  313 #> [16346,]  313 #> [16347,]  313 #> [16348,]  313 #> [16349,]  312 #> [16350,]  313 #> [16351,]  313 #> [16352,]  313 #> [16353,]  313 #> [16354,]  313 #> [16355,]  313 #> [16356,]  313 #> [16357,]  313 #> [16358,]  313 #> [16359,]  313 #> [16360,]  313 #> [16361,]  313 #> [16362,]  312 #> [16363,]  313 #> [16364,]  313 #> [16365,]  313 #> [16366,]  313 #> [16367,]  313 #> [16368,]  313 #> [16369,]  313 #> [16370,]  312 #> [16371,]  313 #> [16372,]  313 #> [16373,]  313 #> [16374,]  313 #> [16375,]  313 #> [16376,]  313 #> [16377,]  313 #> [16378,]  313 #> [16379,]  313 #> [16380,]  312 #> [16381,]  313 #> [16382,]  313 #> [16383,]  313 #> [16384,]  313 #> [16385,]  313 #> [16386,]  313 #> [16387,]  313 #> [16388,]  313 #> [16389,]  313 #> [16390,]  313 #> [16391,]  313 #> [16392,]  313 #> [16393,]  313 #> [16394,]  313 #> [16395,]  312 #> [16396,]  313 #> [16397,]  313 #> [16398,]  313 #> [16399,]  313 #> [16400,]  313 #> [16401,]  315 #> [16402,]  314 #> [16403,]  314 #> [16404,]  314 #> [16405,]  314 #> [16406,]  314 #> [16407,]  314 #> [16408,]  314 #> [16409,]  315 #> [16410,]  314 #> [16411,]  314 #> [16412,]  314 #> [16413,]  315 #> [16414,]  314 #> [16415,]  314 #> [16416,]  314 #> [16417,]  315 #> [16418,]  315 #> [16419,]  314 #> [16420,]  315 #> [16421,]  314 #> [16422,]  314 #> [16423,]  314 #> [16424,]  314 #> [16425,]  314 #> [16426,]  314 #> [16427,]  315 #> [16428,]  314 #> [16429,]  314 #> [16430,]  314 #> [16431,]  314 #> [16432,]  314 #> [16433,]  315 #> [16434,]  314 #> [16435,]  314 #> [16436,]  315 #> [16437,]  314 #> [16438,]  315 #> [16439,]  314 #> [16440,]  314 #> [16441,]  314 #> [16442,]  315 #> [16443,]  314 #> [16444,]  314 #> [16445,]  314 #> [16446,]  314 #> [16447,]  314 #> [16448,]  314 #> [16449,]  314 #> [16450,]  314 #> [16451,]  315 #> [16452,]  314 #> [16453,]  315 #> [16454,]  315 #> [16455,]  314 #> [16456,]  315 #> [16457,]  314 #> [16458,]  314 #> [16459,]  314 #> [16460,]  314 #> [16461,]  314 #> [16462,]  314 #> [16463,]  314 #> [16464,]  314 #> [16465,]  315 #> [16466,]  315 #> [16467,]  314 #> [16468,]  314 #> [16469,]  314 #> [16470,]  314 #> [16471,]  314 #> [16472,]  314 #> [16473,]  314 #> [16474,]  314 #> [16475,]  314 #> [16476,]  314 #> [16477,]  315 #> [16478,]  314 #> [16479,]  315 #> [16480,]  314 #> [16481,]  314 #> [16482,]  315 #> [16483,]  315 #> [16484,]  315 #> [16485,]  315 #> [16486,]  314 #> [16487,]  315 #> [16488,]  314 #> [16489,]  314 #> [16490,]  314 #> [16491,]  315 #> [16492,]  314 #> [16493,]  315 #> [16494,]  315 #> [16495,]  314 #> [16496,]  314 #> [16497,]  314 #> [16498,]  314 #> [16499,]  314 #> [16500,]  314 #> [16501,]  317 #> [16502,]  317 #> [16503,]  316 #> [16504,]  316 #> [16505,]  316 #> [16506,]  316 #> [16507,]  317 #> [16508,]  317 #> [16509,]  316 #> [16510,]  316 #> [16511,]  316 #> [16512,]  317 #> [16513,]  317 #> [16514,]  316 #> [16515,]  317 #> [16516,]  317 #> [16517,]  317 #> [16518,]  317 #> [16519,]  317 #> [16520,]  317 #> [16521,]  316 #> [16522,]  317 #> [16523,]  317 #> [16524,]  316 #> [16525,]  316 #> [16526,]  317 #> [16527,]  317 #> [16528,]  316 #> [16529,]  317 #> [16530,]  317 #> [16531,]  316 #> [16532,]  316 #> [16533,]  317 #> [16534,]  316 #> [16535,]  316 #> [16536,]  317 #> [16537,]  317 #> [16538,]  317 #> [16539,]  316 #> [16540,]  316 #> [16541,]  317 #> [16542,]  316 #> [16543,]  317 #> [16544,]  317 #> [16545,]  317 #> [16546,]  317 #> [16547,]  316 #> [16548,]  316 #> [16549,]  317 #> [16550,]  317 #> [16551,]  317 #> [16552,]  316 #> [16553,]  317 #> [16554,]  316 #> [16555,]  317 #> [16556,]  317 #> [16557,]  316 #> [16558,]  317 #> [16559,]  317 #> [16560,]  317 #> [16561,]  317 #> [16562,]  316 #> [16563,]  317 #> [16564,]  317 #> [16565,]  316 #> [16566,]  317 #> [16567,]  316 #> [16568,]  317 #> [16569,]  317 #> [16570,]  316 #> [16571,]  317 #> [16572,]  316 #> [16573,]  316 #> [16574,]  316 #> [16575,]  317 #> [16576,]  316 #> [16577,]  317 #> [16578,]  317 #> [16579,]  316 #> [16580,]  317 #> [16581,]  317 #> [16582,]  316 #> [16583,]  317 #> [16584,]  317 #> [16585,]  317 #> [16586,]  316 #> [16587,]  317 #> [16588,]  316 #> [16589,]  316 #> [16590,]  317 #> [16591,]  316 #> [16592,]  316 #> [16593,]  317 #> [16594,]  316 #> [16595,]  317 #> [16596,]  317 #> [16597,]  317 #> [16598,]  316 #> [16599,]  317 #> [16600,]  317 #> [16601,]  319 #> [16602,]  318 #> [16603,]  319 #> [16604,]  319 #> [16605,]  319 #> [16606,]  318 #> [16607,]  319 #> [16608,]  319 #> [16609,]  319 #> [16610,]  319 #> [16611,]  319 #> [16612,]  318 #> [16613,]  319 #> [16614,]  319 #> [16615,]  318 #> [16616,]  319 #> [16617,]  318 #> [16618,]  319 #> [16619,]  319 #> [16620,]  319 #> [16621,]  319 #> [16622,]  319 #> [16623,]  318 #> [16624,]  319 #> [16625,]  319 #> [16626,]  319 #> [16627,]  319 #> [16628,]  319 #> [16629,]  318 #> [16630,]  319 #> [16631,]  318 #> [16632,]  319 #> [16633,]  319 #> [16634,]  318 #> [16635,]  319 #> [16636,]  319 #> [16637,]  318 #> [16638,]  319 #> [16639,]  319 #> [16640,]  319 #> [16641,]  319 #> [16642,]  318 #> [16643,]  318 #> [16644,]  318 #> [16645,]  319 #> [16646,]  319 #> [16647,]  318 #> [16648,]  318 #> [16649,]  319 #> [16650,]  319 #> [16651,]  319 #> [16652,]  319 #> [16653,]  319 #> [16654,]  319 #> [16655,]  319 #> [16656,]  319 #> [16657,]  319 #> [16658,]  319 #> [16659,]  319 #> [16660,]  319 #> [16661,]  319 #> [16662,]  319 #> [16663,]  318 #> [16664,]  318 #> [16665,]  319 #> [16666,]  319 #> [16667,]  319 #> [16668,]  319 #> [16669,]  319 #> [16670,]  318 #> [16671,]  319 #> [16672,]  319 #> [16673,]  319 #> [16674,]  319 #> [16675,]  318 #> [16676,]  319 #> [16677,]  319 #> [16678,]  318 #> [16679,]  318 #> [16680,]  319 #> [16681,]  318 #> [16682,]  319 #> [16683,]  319 #> [16684,]  319 #> [16685,]  319 #> [16686,]  319 #> [16687,]  319 #> [16688,]  319 #> [16689,]  319 #> [16690,]  319 #> [16691,]  319 #> [16692,]  318 #> [16693,]  319 #> [16694,]  318 #> [16695,]  318 #> [16696,]  319 #> [16697,]  319 #> [16698,]  319 #> [16699,]  319 #> [16700,]  318 #> [16701,]  321 #> [16702,]  320 #> [16703,]  321 #> [16704,]  321 #> [16705,]  321 #> [16706,]  320 #> [16707,]  321 #> [16708,]  321 #> [16709,]  321 #> [16710,]  321 #> [16711,]  320 #> [16712,]  320 #> [16713,]  321 #> [16714,]  321 #> [16715,]  320 #> [16716,]  321 #> [16717,]  320 #> [16718,]  320 #> [16719,]  320 #> [16720,]  321 #> [16721,]  320 #> [16722,]  321 #> [16723,]  320 #> [16724,]  321 #> [16725,]  321 #> [16726,]  320 #> [16727,]  321 #> [16728,]  321 #> [16729,]  320 #> [16730,]  320 #> [16731,]  320 #> [16732,]  320 #> [16733,]  321 #> [16734,]  320 #> [16735,]  320 #> [16736,]  321 #> [16737,]  320 #> [16738,]  320 #> [16739,]  321 #> [16740,]  321 #> [16741,]  321 #> [16742,]  320 #> [16743,]  320 #> [16744,]  320 #> [16745,]  321 #> [16746,]  320 #> [16747,]  320 #> [16748,]  320 #> [16749,]  321 #> [16750,]  321 #> [16751,]  320 #> [16752,]  321 #> [16753,]  321 #> [16754,]  321 #> [16755,]  321 #> [16756,]  320 #> [16757,]  321 #> [16758,]  321 #> [16759,]  321 #> [16760,]  320 #> [16761,]  320 #> [16762,]  320 #> [16763,]  320 #> [16764,]  320 #> [16765,]  320 #> [16766,]  320 #> [16767,]  321 #> [16768,]  320 #> [16769,]  320 #> [16770,]  320 #> [16771,]  321 #> [16772,]  321 #> [16773,]  321 #> [16774,]  321 #> [16775,]  320 #> [16776,]  321 #> [16777,]  321 #> [16778,]  320 #> [16779,]  320 #> [16780,]  321 #> [16781,]  320 #> [16782,]  320 #> [16783,]  320 #> [16784,]  321 #> [16785,]  321 #> [16786,]  321 #> [16787,]  321 #> [16788,]  321 #> [16789,]  320 #> [16790,]  321 #> [16791,]  321 #> [16792,]  320 #> [16793,]  320 #> [16794,]  320 #> [16795,]  320 #> [16796,]  320 #> [16797,]  320 #> [16798,]  320 #> [16799,]  321 #> [16800,]  320 #> [16801,]  323 #> [16802,]  323 #> [16803,]  322 #> [16804,]  322 #> [16805,]  323 #> [16806,]  323 #> [16807,]  322 #> [16808,]  322 #> [16809,]  323 #> [16810,]  323 #> [16811,]  323 #> [16812,]  322 #> [16813,]  323 #> [16814,]  323 #> [16815,]  323 #> [16816,]  323 #> [16817,]  323 #> [16818,]  323 #> [16819,]  323 #> [16820,]  323 #> [16821,]  323 #> [16822,]  323 #> [16823,]  322 #> [16824,]  323 #> [16825,]  322 #> [16826,]  323 #> [16827,]  323 #> [16828,]  323 #> [16829,]  323 #> [16830,]  323 #> [16831,]  322 #> [16832,]  323 #> [16833,]  323 #> [16834,]  323 #> [16835,]  323 #> [16836,]  323 #> [16837,]  322 #> [16838,]  323 #> [16839,]  323 #> [16840,]  322 #> [16841,]  323 #> [16842,]  323 #> [16843,]  323 #> [16844,]  323 #> [16845,]  323 #> [16846,]  322 #> [16847,]  322 #> [16848,]  323 #> [16849,]  323 #> [16850,]  323 #> [16851,]  323 #> [16852,]  322 #> [16853,]  323 #> [16854,]  323 #> [16855,]  322 #> [16856,]  323 #> [16857,]  322 #> [16858,]  323 #> [16859,]  322 #> [16860,]  322 #> [16861,]  323 #> [16862,]  323 #> [16863,]  323 #> [16864,]  323 #> [16865,]  323 #> [16866,]  323 #> [16867,]  323 #> [16868,]  322 #> [16869,]  323 #> [16870,]  323 #> [16871,]  323 #> [16872,]  323 #> [16873,]  323 #> [16874,]  322 #> [16875,]  323 #> [16876,]  323 #> [16877,]  323 #> [16878,]  323 #> [16879,]  323 #> [16880,]  322 #> [16881,]  323 #> [16882,]  323 #> [16883,]  323 #> [16884,]  323 #> [16885,]  323 #> [16886,]  322 #> [16887,]  323 #> [16888,]  323 #> [16889,]  323 #> [16890,]  323 #> [16891,]  323 #> [16892,]  322 #> [16893,]  323 #> [16894,]  323 #> [16895,]  323 #> [16896,]  322 #> [16897,]  322 #> [16898,]  322 #> [16899,]  323 #> [16900,]  323 #> [16901,]  324 #> [16902,]  324 #> [16903,]  324 #> [16904,]  325 #> [16905,]  324 #> [16906,]  324 #> [16907,]  325 #> [16908,]  324 #> [16909,]  324 #> [16910,]  325 #> [16911,]  324 #> [16912,]  324 #> [16913,]  324 #> [16914,]  324 #> [16915,]  324 #> [16916,]  325 #> [16917,]  324 #> [16918,]  324 #> [16919,]  324 #> [16920,]  325 #> [16921,]  324 #> [16922,]  324 #> [16923,]  324 #> [16924,]  325 #> [16925,]  325 #> [16926,]  324 #> [16927,]  324 #> [16928,]  325 #> [16929,]  324 #> [16930,]  324 #> [16931,]  324 #> [16932,]  324 #> [16933,]  324 #> [16934,]  324 #> [16935,]  324 #> [16936,]  325 #> [16937,]  324 #> [16938,]  324 #> [16939,]  325 #> [16940,]  324 #> [16941,]  324 #> [16942,]  324 #> [16943,]  324 #> [16944,]  324 #> [16945,]  324 #> [16946,]  324 #> [16947,]  324 #> [16948,]  324 #> [16949,]  324 #> [16950,]  325 #> [16951,]  324 #> [16952,]  325 #> [16953,]  324 #> [16954,]  325 #> [16955,]  324 #> [16956,]  324 #> [16957,]  325 #> [16958,]  324 #> [16959,]  324 #> [16960,]  324 #> [16961,]  324 #> [16962,]  324 #> [16963,]  324 #> [16964,]  324 #> [16965,]  324 #> [16966,]  324 #> [16967,]  324 #> [16968,]  324 #> [16969,]  324 #> [16970,]  324 #> [16971,]  324 #> [16972,]  324 #> [16973,]  325 #> [16974,]  324 #> [16975,]  324 #> [16976,]  325 #> [16977,]  324 #> [16978,]  324 #> [16979,]  324 #> [16980,]  324 #> [16981,]  324 #> [16982,]  324 #> [16983,]  324 #> [16984,]  324 #> [16985,]  324 #> [16986,]  325 #> [16987,]  324 #> [16988,]  324 #> [16989,]  324 #> [16990,]  324 #> [16991,]  325 #> [16992,]  324 #> [16993,]  324 #> [16994,]  324 #> [16995,]  324 #> [16996,]  324 #> [16997,]  324 #> [16998,]  324 #> [16999,]  324 #> [17000,]  324 #> [17001,]  326 #> [17002,]  327 #> [17003,]  327 #> [17004,]  326 #> [17005,]  327 #> [17006,]  327 #> [17007,]  327 #> [17008,]  326 #> [17009,]  326 #> [17010,]  327 #> [17011,]  326 #> [17012,]  327 #> [17013,]  326 #> [17014,]  326 #> [17015,]  327 #> [17016,]  327 #> [17017,]  326 #> [17018,]  327 #> [17019,]  327 #> [17020,]  327 #> [17021,]  326 #> [17022,]  326 #> [17023,]  327 #> [17024,]  327 #> [17025,]  327 #> [17026,]  327 #> [17027,]  326 #> [17028,]  327 #> [17029,]  327 #> [17030,]  326 #> [17031,]  327 #> [17032,]  327 #> [17033,]  327 #> [17034,]  327 #> [17035,]  326 #> [17036,]  327 #> [17037,]  327 #> [17038,]  327 #> [17039,]  327 #> [17040,]  327 #> [17041,]  327 #> [17042,]  327 #> [17043,]  326 #> [17044,]  326 #> [17045,]  326 #> [17046,]  326 #> [17047,]  327 #> [17048,]  327 #> [17049,]  326 #> [17050,]  327 #> [17051,]  327 #> [17052,]  326 #> [17053,]  327 #> [17054,]  326 #> [17055,]  326 #> [17056,]  327 #> [17057,]  327 #> [17058,]  326 #> [17059,]  327 #> [17060,]  327 #> [17061,]  327 #> [17062,]  327 #> [17063,]  327 #> [17064,]  327 #> [17065,]  327 #> [17066,]  326 #> [17067,]  327 #> [17068,]  326 #> [17069,]  326 #> [17070,]  327 #> [17071,]  327 #> [17072,]  327 #> [17073,]  327 #> [17074,]  326 #> [17075,]  327 #> [17076,]  327 #> [17077,]  327 #> [17078,]  327 #> [17079,]  326 #> [17080,]  326 #> [17081,]  326 #> [17082,]  326 #> [17083,]  326 #> [17084,]  327 #> [17085,]  326 #> [17086,]  327 #> [17087,]  326 #> [17088,]  326 #> [17089,]  326 #> [17090,]  326 #> [17091,]  326 #> [17092,]  326 #> [17093,]  327 #> [17094,]  327 #> [17095,]  326 #> [17096,]  326 #> [17097,]  327 #> [17098,]  327 #> [17099,]  326 #> [17100,]  327 #> [17101,]  329 #> [17102,]  329 #> [17103,]  328 #> [17104,]  328 #> [17105,]  328 #> [17106,]  329 #> [17107,]  328 #> [17108,]  328 #> [17109,]  328 #> [17110,]  328 #> [17111,]  328 #> [17112,]  328 #> [17113,]  329 #> [17114,]  329 #> [17115,]  329 #> [17116,]  329 #> [17117,]  329 #> [17118,]  328 #> [17119,]  328 #> [17120,]  328 #> [17121,]  329 #> [17122,]  328 #> [17123,]  328 #> [17124,]  328 #> [17125,]  328 #> [17126,]  328 #> [17127,]  328 #> [17128,]  328 #> [17129,]  329 #> [17130,]  328 #> [17131,]  328 #> [17132,]  328 #> [17133,]  329 #> [17134,]  328 #> [17135,]  329 #> [17136,]  328 #> [17137,]  328 #> [17138,]  328 #> [17139,]  328 #> [17140,]  328 #> [17141,]  329 #> [17142,]  328 #> [17143,]  328 #> [17144,]  329 #> [17145,]  328 #> [17146,]  328 #> [17147,]  328 #> [17148,]  328 #> [17149,]  328 #> [17150,]  329 #> [17151,]  328 #> [17152,]  328 #> [17153,]  328 #> [17154,]  328 #> [17155,]  328 #> [17156,]  328 #> [17157,]  328 #> [17158,]  328 #> [17159,]  329 #> [17160,]  328 #> [17161,]  329 #> [17162,]  328 #> [17163,]  328 #> [17164,]  328 #> [17165,]  328 #> [17166,]  328 #> [17167,]  328 #> [17168,]  329 #> [17169,]  328 #> [17170,]  329 #> [17171,]  328 #> [17172,]  328 #> [17173,]  329 #> [17174,]  328 #> [17175,]  328 #> [17176,]  329 #> [17177,]  329 #> [17178,]  328 #> [17179,]  329 #> [17180,]  328 #> [17181,]  329 #> [17182,]  328 #> [17183,]  329 #> [17184,]  328 #> [17185,]  328 #> [17186,]  329 #> [17187,]  328 #> [17188,]  328 #> [17189,]  328 #> [17190,]  328 #> [17191,]  328 #> [17192,]  328 #> [17193,]  329 #> [17194,]  328 #> [17195,]  328 #> [17196,]  329 #> [17197,]  328 #> [17198,]  328 #> [17199,]  329 #> [17200,]  328 #> [17201,]  331 #> [17202,]  330 #> [17203,]  330 #> [17204,]  330 #> [17205,]  330 #> [17206,]  330 #> [17207,]  330 #> [17208,]  330 #> [17209,]  331 #> [17210,]  330 #> [17211,]  331 #> [17212,]  330 #> [17213,]  331 #> [17214,]  330 #> [17215,]  330 #> [17216,]  330 #> [17217,]  331 #> [17218,]  331 #> [17219,]  330 #> [17220,]  331 #> [17221,]  330 #> [17222,]  330 #> [17223,]  330 #> [17224,]  330 #> [17225,]  330 #> [17226,]  330 #> [17227,]  331 #> [17228,]  331 #> [17229,]  331 #> [17230,]  330 #> [17231,]  330 #> [17232,]  330 #> [17233,]  331 #> [17234,]  330 #> [17235,]  330 #> [17236,]  331 #> [17237,]  330 #> [17238,]  331 #> [17239,]  331 #> [17240,]  330 #> [17241,]  330 #> [17242,]  331 #> [17243,]  330 #> [17244,]  330 #> [17245,]  330 #> [17246,]  330 #> [17247,]  330 #> [17248,]  330 #> [17249,]  330 #> [17250,]  330 #> [17251,]  331 #> [17252,]  330 #> [17253,]  331 #> [17254,]  331 #> [17255,]  330 #> [17256,]  331 #> [17257,]  330 #> [17258,]  331 #> [17259,]  330 #> [17260,]  330 #> [17261,]  330 #> [17262,]  331 #> [17263,]  330 #> [17264,]  330 #> [17265,]  331 #> [17266,]  331 #> [17267,]  330 #> [17268,]  330 #> [17269,]  330 #> [17270,]  330 #> [17271,]  330 #> [17272,]  330 #> [17273,]  330 #> [17274,]  330 #> [17275,]  330 #> [17276,]  330 #> [17277,]  331 #> [17278,]  330 #> [17279,]  331 #> [17280,]  330 #> [17281,]  330 #> [17282,]  331 #> [17283,]  331 #> [17284,]  331 #> [17285,]  331 #> [17286,]  330 #> [17287,]  331 #> [17288,]  330 #> [17289,]  331 #> [17290,]  330 #> [17291,]  331 #> [17292,]  330 #> [17293,]  331 #> [17294,]  331 #> [17295,]  330 #> [17296,]  330 #> [17297,]  330 #> [17298,]  330 #> [17299,]  330 #> [17300,]  330 #> [17301,]  332 #> [17302,]  332 #> [17303,]  332 #> [17304,]  332 #> [17305,]  332 #> [17306,]  332 #> [17307,]  332 #> [17308,]  332 #> [17309,]  332 #> [17310,]  332 #> [17311,]  332 #> [17312,]  332 #> [17313,]  332 #> [17314,]  332 #> [17315,]  332 #> [17316,]  332 #> [17317,]  332 #> [17318,]  332 #> [17319,]  332 #> [17320,]  332 #> [17321,]  332 #> [17322,]  332 #> [17323,]  332 #> [17324,]  332 #> [17325,]  332 #> [17326,]  332 #> [17327,]  332 #> [17328,]  332 #> [17329,]  332 #> [17330,]  332 #> [17331,]  332 #> [17332,]  332 #> [17333,]  332 #> [17334,]  332 #> [17335,]  332 #> [17336,]  332 #> [17337,]  332 #> [17338,]  332 #> [17339,]  332 #> [17340,]  332 #> [17341,]  332 #> [17342,]  332 #> [17343,]  332 #> [17344,]  332 #> [17345,]  332 #> [17346,]  332 #> [17347,]  332 #> [17348,]  332 #> [17349,]  332 #> [17350,]  332 #> [17351,]  332 #> [17352,]  332 #> [17353,]  332 #> [17354,]  332 #> [17355,]  332 #> [17356,]  332 #> [17357,]  332 #> [17358,]  332 #> [17359,]  332 #> [17360,]  332 #> [17361,]  332 #> [17362,]  332 #> [17363,]  332 #> [17364,]  332 #> [17365,]  332 #> [17366,]  332 #> [17367,]  332 #> [17368,]  332 #> [17369,]  332 #> [17370,]  332 #> [17371,]  332 #> [17372,]  332 #> [17373,]  332 #> [17374,]  332 #> [17375,]  332 #> [17376,]  332 #> [17377,]  332 #> [17378,]  332 #> [17379,]  332 #> [17380,]  332 #> [17381,]  332 #> [17382,]  332 #> [17383,]  332 #> [17384,]  332 #> [17385,]  332 #> [17386,]  332 #> [17387,]  332 #> [17388,]  332 #> [17389,]  332 #> [17390,]  332 #> [17391,]  332 #> [17392,]  332 #> [17393,]  332 #> [17394,]  332 #> [17395,]  332 #> [17396,]  332 #> [17397,]  332 #> [17398,]  332 #> [17399,]  332 #> [17400,]  332 #> [17401,]  333 #> [17402,]  333 #> [17403,]  334 #> [17404,]  333 #> [17405,]  333 #> [17406,]  334 #> [17407,]  333 #> [17408,]  333 #> [17409,]  333 #> [17410,]  333 #> [17411,]  333 #> [17412,]  334 #> [17413,]  333 #> [17414,]  333 #> [17415,]  333 #> [17416,]  333 #> [17417,]  333 #> [17418,]  333 #> [17419,]  334 #> [17420,]  334 #> [17421,]  333 #> [17422,]  333 #> [17423,]  333 #> [17424,]  333 #> [17425,]  334 #> [17426,]  333 #> [17427,]  333 #> [17428,]  334 #> [17429,]  333 #> [17430,]  333 #> [17431,]  333 #> [17432,]  333 #> [17433,]  334 #> [17434,]  334 #> [17435,]  333 #> [17436,]  333 #> [17437,]  333 #> [17438,]  333 #> [17439,]  333 #> [17440,]  333 #> [17441,]  333 #> [17442,]  333 #> [17443,]  333 #> [17444,]  333 #> [17445,]  333 #> [17446,]  333 #> [17447,]  333 #> [17448,]  333 #> [17449,]  333 #> [17450,]  333 #> [17451,]  333 #> [17452,]  333 #> [17453,]  333 #> [17454,]  333 #> [17455,]  333 #> [17456,]  333 #> [17457,]  333 #> [17458,]  333 #> [17459,]  333 #> [17460,]  334 #> [17461,]  333 #> [17462,]  333 #> [17463,]  333 #> [17464,]  333 #> [17465,]  334 #> [17466,]  333 #> [17467,]  333 #> [17468,]  333 #> [17469,]  333 #> [17470,]  334 #> [17471,]  333 #> [17472,]  333 #> [17473,]  334 #> [17474,]  333 #> [17475,]  333 #> [17476,]  333 #> [17477,]  333 #> [17478,]  333 #> [17479,]  333 #> [17480,]  333 #> [17481,]  333 #> [17482,]  333 #> [17483,]  333 #> [17484,]  333 #> [17485,]  333 #> [17486,]  333 #> [17487,]  333 #> [17488,]  333 #> [17489,]  333 #> [17490,]  333 #> [17491,]  333 #> [17492,]  333 #> [17493,]  334 #> [17494,]  333 #> [17495,]  333 #> [17496,]  333 #> [17497,]  334 #> [17498,]  334 #> [17499,]  333 #> [17500,]  333 #> [17501,]  335 #> [17502,]  336 #> [17503,]  335 #> [17504,]  335 #> [17505,]  336 #> [17506,]  335 #> [17507,]  336 #> [17508,]  335 #> [17509,]  336 #> [17510,]  336 #> [17511,]  335 #> [17512,]  336 #> [17513,]  336 #> [17514,]  335 #> [17515,]  335 #> [17516,]  335 #> [17517,]  336 #> [17518,]  336 #> [17519,]  335 #> [17520,]  336 #> [17521,]  336 #> [17522,]  336 #> [17523,]  336 #> [17524,]  336 #> [17525,]  335 #> [17526,]  335 #> [17527,]  336 #> [17528,]  335 #> [17529,]  336 #> [17530,]  336 #> [17531,]  336 #> [17532,]  336 #> [17533,]  336 #> [17534,]  335 #> [17535,]  335 #> [17536,]  336 #> [17537,]  335 #> [17538,]  335 #> [17539,]  335 #> [17540,]  336 #> [17541,]  336 #> [17542,]  335 #> [17543,]  335 #> [17544,]  336 #> [17545,]  335 #> [17546,]  335 #> [17547,]  336 #> [17548,]  336 #> [17549,]  335 #> [17550,]  336 #> [17551,]  335 #> [17552,]  335 #> [17553,]  336 #> [17554,]  336 #> [17555,]  335 #> [17556,]  335 #> [17557,]  335 #> [17558,]  336 #> [17559,]  335 #> [17560,]  336 #> [17561,]  336 #> [17562,]  335 #> [17563,]  336 #> [17564,]  335 #> [17565,]  335 #> [17566,]  335 #> [17567,]  335 #> [17568,]  335 #> [17569,]  335 #> [17570,]  336 #> [17571,]  335 #> [17572,]  335 #> [17573,]  335 #> [17574,]  335 #> [17575,]  336 #> [17576,]  335 #> [17577,]  335 #> [17578,]  336 #> [17579,]  335 #> [17580,]  336 #> [17581,]  336 #> [17582,]  335 #> [17583,]  336 #> [17584,]  336 #> [17585,]  335 #> [17586,]  336 #> [17587,]  336 #> [17588,]  336 #> [17589,]  335 #> [17590,]  335 #> [17591,]  335 #> [17592,]  336 #> [17593,]  336 #> [17594,]  335 #> [17595,]  336 #> [17596,]  335 #> [17597,]  335 #> [17598,]  335 #> [17599,]  335 #> [17600,]  335 #> [17601,]  338 #> [17602,]  337 #> [17603,]  337 #> [17604,]  337 #> [17605,]  338 #> [17606,]  337 #> [17607,]  337 #> [17608,]  337 #> [17609,]  337 #> [17610,]  338 #> [17611,]  338 #> [17612,]  338 #> [17613,]  337 #> [17614,]  338 #> [17615,]  338 #> [17616,]  337 #> [17617,]  338 #> [17618,]  338 #> [17619,]  337 #> [17620,]  337 #> [17621,]  337 #> [17622,]  338 #> [17623,]  337 #> [17624,]  337 #> [17625,]  337 #> [17626,]  338 #> [17627,]  338 #> [17628,]  337 #> [17629,]  337 #> [17630,]  337 #> [17631,]  338 #> [17632,]  338 #> [17633,]  337 #> [17634,]  337 #> [17635,]  337 #> [17636,]  337 #> [17637,]  337 #> [17638,]  338 #> [17639,]  337 #> [17640,]  337 #> [17641,]  337 #> [17642,]  337 #> [17643,]  338 #> [17644,]  337 #> [17645,]  337 #> [17646,]  337 #> [17647,]  338 #> [17648,]  337 #> [17649,]  337 #> [17650,]  337 #> [17651,]  337 #> [17652,]  338 #> [17653,]  337 #> [17654,]  337 #> [17655,]  337 #> [17656,]  337 #> [17657,]  337 #> [17658,]  338 #> [17659,]  338 #> [17660,]  337 #> [17661,]  338 #> [17662,]  337 #> [17663,]  337 #> [17664,]  337 #> [17665,]  337 #> [17666,]  338 #> [17667,]  337 #> [17668,]  337 #> [17669,]  337 #> [17670,]  338 #> [17671,]  338 #> [17672,]  337 #> [17673,]  337 #> [17674,]  337 #> [17675,]  338 #> [17676,]  337 #> [17677,]  338 #> [17678,]  337 #> [17679,]  338 #> [17680,]  337 #> [17681,]  337 #> [17682,]  337 #> [17683,]  337 #> [17684,]  337 #> [17685,]  337 #> [17686,]  337 #> [17687,]  338 #> [17688,]  337 #> [17689,]  337 #> [17690,]  338 #> [17691,]  338 #> [17692,]  338 #> [17693,]  337 #> [17694,]  337 #> [17695,]  338 #> [17696,]  337 #> [17697,]  337 #> [17698,]  337 #> [17699,]  337 #> [17700,]  338 #> [17701,]  340 #> [17702,]  339 #> [17703,]  340 #> [17704,]  340 #> [17705,]  340 #> [17706,]  339 #> [17707,]  340 #> [17708,]  340 #> [17709,]  340 #> [17710,]  340 #> [17711,]  340 #> [17712,]  339 #> [17713,]  340 #> [17714,]  340 #> [17715,]  339 #> [17716,]  340 #> [17717,]  339 #> [17718,]  340 #> [17719,]  340 #> [17720,]  340 #> [17721,]  340 #> [17722,]  340 #> [17723,]  339 #> [17724,]  340 #> [17725,]  340 #> [17726,]  340 #> [17727,]  340 #> [17728,]  340 #> [17729,]  339 #> [17730,]  340 #> [17731,]  339 #> [17732,]  340 #> [17733,]  340 #> [17734,]  339 #> [17735,]  340 #> [17736,]  340 #> [17737,]  339 #> [17738,]  340 #> [17739,]  340 #> [17740,]  340 #> [17741,]  340 #> [17742,]  339 #> [17743,]  339 #> [17744,]  339 #> [17745,]  340 #> [17746,]  340 #> [17747,]  339 #> [17748,]  339 #> [17749,]  340 #> [17750,]  340 #> [17751,]  340 #> [17752,]  340 #> [17753,]  340 #> [17754,]  340 #> [17755,]  340 #> [17756,]  340 #> [17757,]  340 #> [17758,]  340 #> [17759,]  340 #> [17760,]  340 #> [17761,]  340 #> [17762,]  340 #> [17763,]  339 #> [17764,]  339 #> [17765,]  340 #> [17766,]  340 #> [17767,]  340 #> [17768,]  340 #> [17769,]  340 #> [17770,]  339 #> [17771,]  340 #> [17772,]  340 #> [17773,]  340 #> [17774,]  340 #> [17775,]  339 #> [17776,]  340 #> [17777,]  340 #> [17778,]  339 #> [17779,]  339 #> [17780,]  340 #> [17781,]  339 #> [17782,]  340 #> [17783,]  340 #> [17784,]  340 #> [17785,]  340 #> [17786,]  340 #> [17787,]  340 #> [17788,]  340 #> [17789,]  340 #> [17790,]  340 #> [17791,]  340 #> [17792,]  339 #> [17793,]  340 #> [17794,]  339 #> [17795,]  339 #> [17796,]  340 #> [17797,]  340 #> [17798,]  340 #> [17799,]  340 #> [17800,]  339 #> [17801,]  342 #> [17802,]  342 #> [17803,]  341 #> [17804,]  342 #> [17805,]  342 #> [17806,]  341 #> [17807,]  342 #> [17808,]  342 #> [17809,]  342 #> [17810,]  342 #> [17811,]  341 #> [17812,]  342 #> [17813,]  342 #> [17814,]  342 #> [17815,]  342 #> [17816,]  341 #> [17817,]  342 #> [17818,]  342 #> [17819,]  341 #> [17820,]  342 #> [17821,]  342 #> [17822,]  342 #> [17823,]  342 #> [17824,]  342 #> [17825,]  342 #> [17826,]  342 #> [17827,]  342 #> [17828,]  342 #> [17829,]  342 #> [17830,]  342 #> [17831,]  342 #> [17832,]  342 #> [17833,]  342 #> [17834,]  341 #> [17835,]  341 #> [17836,]  342 #> [17837,]  341 #> [17838,]  341 #> [17839,]  342 #> [17840,]  342 #> [17841,]  342 #> [17842,]  342 #> [17843,]  342 #> [17844,]  342 #> [17845,]  341 #> [17846,]  342 #> [17847,]  342 #> [17848,]  342 #> [17849,]  341 #> [17850,]  342 #> [17851,]  342 #> [17852,]  341 #> [17853,]  342 #> [17854,]  342 #> [17855,]  342 #> [17856,]  342 #> [17857,]  342 #> [17858,]  342 #> [17859,]  342 #> [17860,]  342 #> [17861,]  342 #> [17862,]  342 #> [17863,]  342 #> [17864,]  341 #> [17865,]  342 #> [17866,]  342 #> [17867,]  342 #> [17868,]  341 #> [17869,]  342 #> [17870,]  342 #> [17871,]  342 #> [17872,]  341 #> [17873,]  342 #> [17874,]  342 #> [17875,]  342 #> [17876,]  342 #> [17877,]  342 #> [17878,]  342 #> [17879,]  342 #> [17880,]  342 #> [17881,]  342 #> [17882,]  342 #> [17883,]  342 #> [17884,]  342 #> [17885,]  342 #> [17886,]  342 #> [17887,]  342 #> [17888,]  342 #> [17889,]  342 #> [17890,]  342 #> [17891,]  342 #> [17892,]  342 #> [17893,]  342 #> [17894,]  342 #> [17895,]  342 #> [17896,]  341 #> [17897,]  341 #> [17898,]  342 #> [17899,]  342 #> [17900,]  342 #> [17901,]  344 #> [17902,]  344 #> [17903,]  343 #> [17904,]  343 #> [17905,]  343 #> [17906,]  344 #> [17907,]  343 #> [17908,]  343 #> [17909,]  343 #> [17910,]  343 #> [17911,]  343 #> [17912,]  343 #> [17913,]  344 #> [17914,]  344 #> [17915,]  344 #> [17916,]  344 #> [17917,]  344 #> [17918,]  343 #> [17919,]  343 #> [17920,]  343 #> [17921,]  344 #> [17922,]  343 #> [17923,]  343 #> [17924,]  343 #> [17925,]  343 #> [17926,]  343 #> [17927,]  343 #> [17928,]  343 #> [17929,]  344 #> [17930,]  343 #> [17931,]  343 #> [17932,]  343 #> [17933,]  344 #> [17934,]  343 #> [17935,]  343 #> [17936,]  343 #> [17937,]  343 #> [17938,]  343 #> [17939,]  343 #> [17940,]  343 #> [17941,]  344 #> [17942,]  343 #> [17943,]  343 #> [17944,]  344 #> [17945,]  343 #> [17946,]  343 #> [17947,]  343 #> [17948,]  343 #> [17949,]  343 #> [17950,]  344 #> [17951,]  343 #> [17952,]  343 #> [17953,]  343 #> [17954,]  343 #> [17955,]  343 #> [17956,]  343 #> [17957,]  343 #> [17958,]  343 #> [17959,]  344 #> [17960,]  343 #> [17961,]  344 #> [17962,]  343 #> [17963,]  343 #> [17964,]  343 #> [17965,]  343 #> [17966,]  343 #> [17967,]  343 #> [17968,]  344 #> [17969,]  343 #> [17970,]  344 #> [17971,]  343 #> [17972,]  343 #> [17973,]  344 #> [17974,]  343 #> [17975,]  343 #> [17976,]  344 #> [17977,]  343 #> [17978,]  343 #> [17979,]  343 #> [17980,]  343 #> [17981,]  344 #> [17982,]  343 #> [17983,]  344 #> [17984,]  343 #> [17985,]  343 #> [17986,]  344 #> [17987,]  343 #> [17988,]  343 #> [17989,]  343 #> [17990,]  343 #> [17991,]  343 #> [17992,]  343 #> [17993,]  344 #> [17994,]  343 #> [17995,]  343 #> [17996,]  344 #> [17997,]  343 #> [17998,]  343 #> [17999,]  344 #> [18000,]  343 #> [18001,]  346 #> [18002,]  345 #> [18003,]  345 #> [18004,]  345 #> [18005,]  345 #> [18006,]  346 #> [18007,]  345 #> [18008,]  346 #> [18009,]  346 #> [18010,]  345 #> [18011,]  345 #> [18012,]  346 #> [18013,]  345 #> [18014,]  346 #> [18015,]  346 #> [18016,]  345 #> [18017,]  345 #> [18018,]  345 #> [18019,]  345 #> [18020,]  346 #> [18021,]  345 #> [18022,]  345 #> [18023,]  345 #> [18024,]  345 #> [18025,]  345 #> [18026,]  346 #> [18027,]  345 #> [18028,]  345 #> [18029,]  345 #> [18030,]  345 #> [18031,]  345 #> [18032,]  345 #> [18033,]  346 #> [18034,]  345 #> [18035,]  345 #> [18036,]  345 #> [18037,]  345 #> [18038,]  345 #> [18039,]  345 #> [18040,]  345 #> [18041,]  345 #> [18042,]  345 #> [18043,]  346 #> [18044,]  345 #> [18045,]  346 #> [18046,]  346 #> [18047,]  345 #> [18048,]  345 #> [18049,]  345 #> [18050,]  346 #> [18051,]  346 #> [18052,]  345 #> [18053,]  346 #> [18054,]  345 #> [18055,]  346 #> [18056,]  346 #> [18057,]  346 #> [18058,]  346 #> [18059,]  345 #> [18060,]  346 #> [18061,]  346 #> [18062,]  345 #> [18063,]  345 #> [18064,]  346 #> [18065,]  346 #> [18066,]  346 #> [18067,]  345 #> [18068,]  346 #> [18069,]  345 #> [18070,]  345 #> [18071,]  346 #> [18072,]  346 #> [18073,]  346 #> [18074,]  346 #> [18075,]  346 #> [18076,]  346 #> [18077,]  345 #> [18078,]  346 #> [18079,]  345 #> [18080,]  345 #> [18081,]  346 #> [18082,]  345 #> [18083,]  345 #> [18084,]  345 #> [18085,]  345 #> [18086,]  345 #> [18087,]  345 #> [18088,]  345 #> [18089,]  345 #> [18090,]  345 #> [18091,]  345 #> [18092,]  346 #> [18093,]  345 #> [18094,]  346 #> [18095,]  345 #> [18096,]  346 #> [18097,]  346 #> [18098,]  345 #> [18099,]  345 #> [18100,]  345 #> [18101,]  347 #> [18102,]  348 #> [18103,]  347 #> [18104,]  347 #> [18105,]  348 #> [18106,]  347 #> [18107,]  348 #> [18108,]  348 #> [18109,]  348 #> [18110,]  348 #> [18111,]  347 #> [18112,]  348 #> [18113,]  348 #> [18114,]  347 #> [18115,]  348 #> [18116,]  347 #> [18117,]  348 #> [18118,]  348 #> [18119,]  347 #> [18120,]  348 #> [18121,]  348 #> [18122,]  348 #> [18123,]  348 #> [18124,]  348 #> [18125,]  348 #> [18126,]  347 #> [18127,]  348 #> [18128,]  347 #> [18129,]  348 #> [18130,]  348 #> [18131,]  348 #> [18132,]  348 #> [18133,]  348 #> [18134,]  347 #> [18135,]  347 #> [18136,]  348 #> [18137,]  347 #> [18138,]  347 #> [18139,]  348 #> [18140,]  348 #> [18141,]  348 #> [18142,]  347 #> [18143,]  348 #> [18144,]  348 #> [18145,]  347 #> [18146,]  348 #> [18147,]  348 #> [18148,]  348 #> [18149,]  347 #> [18150,]  348 #> [18151,]  348 #> [18152,]  347 #> [18153,]  348 #> [18154,]  348 #> [18155,]  348 #> [18156,]  347 #> [18157,]  348 #> [18158,]  348 #> [18159,]  347 #> [18160,]  348 #> [18161,]  348 #> [18162,]  348 #> [18163,]  348 #> [18164,]  347 #> [18165,]  347 #> [18166,]  348 #> [18167,]  348 #> [18168,]  347 #> [18169,]  347 #> [18170,]  348 #> [18171,]  348 #> [18172,]  347 #> [18173,]  347 #> [18174,]  348 #> [18175,]  348 #> [18176,]  348 #> [18177,]  347 #> [18178,]  348 #> [18179,]  347 #> [18180,]  348 #> [18181,]  348 #> [18182,]  348 #> [18183,]  348 #> [18184,]  348 #> [18185,]  348 #> [18186,]  348 #> [18187,]  348 #> [18188,]  348 #> [18189,]  347 #> [18190,]  348 #> [18191,]  347 #> [18192,]  348 #> [18193,]  348 #> [18194,]  347 #> [18195,]  348 #> [18196,]  347 #> [18197,]  347 #> [18198,]  348 #> [18199,]  348 #> [18200,]  347 #> [18201,]  350 #> [18202,]  350 #> [18203,]  350 #> [18204,]  350 #> [18205,]  350 #> [18206,]  350 #> [18207,]  350 #> [18208,]  350 #> [18209,]  350 #> [18210,]  350 #> [18211,]  350 #> [18212,]  349 #> [18213,]  350 #> [18214,]  350 #> [18215,]  349 #> [18216,]  350 #> [18217,]  349 #> [18218,]  350 #> [18219,]  350 #> [18220,]  350 #> [18221,]  350 #> [18222,]  350 #> [18223,]  349 #> [18224,]  350 #> [18225,]  350 #> [18226,]  350 #> [18227,]  350 #> [18228,]  350 #> [18229,]  349 #> [18230,]  350 #> [18231,]  349 #> [18232,]  350 #> [18233,]  350 #> [18234,]  349 #> [18235,]  350 #> [18236,]  350 #> [18237,]  349 #> [18238,]  350 #> [18239,]  350 #> [18240,]  350 #> [18241,]  350 #> [18242,]  349 #> [18243,]  349 #> [18244,]  349 #> [18245,]  350 #> [18246,]  350 #> [18247,]  350 #> [18248,]  349 #> [18249,]  350 #> [18250,]  350 #> [18251,]  350 #> [18252,]  350 #> [18253,]  350 #> [18254,]  350 #> [18255,]  350 #> [18256,]  350 #> [18257,]  350 #> [18258,]  350 #> [18259,]  350 #> [18260,]  350 #> [18261,]  350 #> [18262,]  350 #> [18263,]  349 #> [18264,]  349 #> [18265,]  350 #> [18266,]  350 #> [18267,]  350 #> [18268,]  350 #> [18269,]  350 #> [18270,]  349 #> [18271,]  350 #> [18272,]  350 #> [18273,]  350 #> [18274,]  350 #> [18275,]  349 #> [18276,]  350 #> [18277,]  350 #> [18278,]  349 #> [18279,]  349 #> [18280,]  350 #> [18281,]  349 #> [18282,]  350 #> [18283,]  350 #> [18284,]  350 #> [18285,]  350 #> [18286,]  350 #> [18287,]  350 #> [18288,]  350 #> [18289,]  350 #> [18290,]  350 #> [18291,]  350 #> [18292,]  350 #> [18293,]  350 #> [18294,]  349 #> [18295,]  349 #> [18296,]  350 #> [18297,]  350 #> [18298,]  350 #> [18299,]  350 #> [18300,]  349 #> [18301,]  351 #> [18302,]  351 #> [18303,]  351 #> [18304,]  352 #> [18305,]  351 #> [18306,]  351 #> [18307,]  351 #> [18308,]  351 #> [18309,]  351 #> [18310,]  351 #> [18311,]  351 #> [18312,]  351 #> [18313,]  351 #> [18314,]  352 #> [18315,]  351 #> [18316,]  351 #> [18317,]  351 #> [18318,]  351 #> [18319,]  351 #> [18320,]  351 #> [18321,]  351 #> [18322,]  351 #> [18323,]  351 #> [18324,]  351 #> [18325,]  351 #> [18326,]  351 #> [18327,]  352 #> [18328,]  351 #> [18329,]  351 #> [18330,]  351 #> [18331,]  351 #> [18332,]  351 #> [18333,]  351 #> [18334,]  351 #> [18335,]  351 #> [18336,]  351 #> [18337,]  351 #> [18338,]  351 #> [18339,]  351 #> [18340,]  351 #> [18341,]  351 #> [18342,]  351 #> [18343,]  351 #> [18344,]  351 #> [18345,]  351 #> [18346,]  351 #> [18347,]  351 #> [18348,]  351 #> [18349,]  351 #> [18350,]  351 #> [18351,]  351 #> [18352,]  351 #> [18353,]  351 #> [18354,]  351 #> [18355,]  351 #> [18356,]  351 #> [18357,]  351 #> [18358,]  351 #> [18359,]  351 #> [18360,]  351 #> [18361,]  352 #> [18362,]  351 #> [18363,]  351 #> [18364,]  351 #> [18365,]  351 #> [18366,]  351 #> [18367,]  351 #> [18368,]  351 #> [18369,]  352 #> [18370,]  351 #> [18371,]  351 #> [18372,]  351 #> [18373,]  351 #> [18374,]  351 #> [18375,]  351 #> [18376,]  351 #> [18377,]  351 #> [18378,]  351 #> [18379,]  351 #> [18380,]  351 #> [18381,]  351 #> [18382,]  352 #> [18383,]  351 #> [18384,]  351 #> [18385,]  351 #> [18386,]  351 #> [18387,]  351 #> [18388,]  351 #> [18389,]  351 #> [18390,]  351 #> [18391,]  351 #> [18392,]  352 #> [18393,]  352 #> [18394,]  351 #> [18395,]  351 #> [18396,]  352 #> [18397,]  352 #> [18398,]  351 #> [18399,]  351 #> [18400,]  351 #> [18401,]  353 #> [18402,]  354 #> [18403,]  353 #> [18404,]  353 #> [18405,]  353 #> [18406,]  353 #> [18407,]  353 #> [18408,]  353 #> [18409,]  354 #> [18410,]  354 #> [18411,]  353 #> [18412,]  354 #> [18413,]  353 #> [18414,]  353 #> [18415,]  353 #> [18416,]  353 #> [18417,]  353 #> [18418,]  353 #> [18419,]  353 #> [18420,]  353 #> [18421,]  354 #> [18422,]  353 #> [18423,]  353 #> [18424,]  353 #> [18425,]  353 #> [18426,]  353 #> [18427,]  353 #> [18428,]  353 #> [18429,]  354 #> [18430,]  353 #> [18431,]  353 #> [18432,]  353 #> [18433,]  354 #> [18434,]  353 #> [18435,]  353 #> [18436,]  353 #> [18437,]  353 #> [18438,]  353 #> [18439,]  353 #> [18440,]  353 #> [18441,]  353 #> [18442,]  353 #> [18443,]  353 #> [18444,]  353 #> [18445,]  353 #> [18446,]  353 #> [18447,]  353 #> [18448,]  353 #> [18449,]  353 #> [18450,]  353 #> [18451,]  353 #> [18452,]  353 #> [18453,]  353 #> [18454,]  353 #> [18455,]  353 #> [18456,]  353 #> [18457,]  353 #> [18458,]  353 #> [18459,]  353 #> [18460,]  354 #> [18461,]  353 #> [18462,]  353 #> [18463,]  354 #> [18464,]  353 #> [18465,]  353 #> [18466,]  353 #> [18467,]  353 #> [18468,]  353 #> [18469,]  353 #> [18470,]  354 #> [18471,]  353 #> [18472,]  353 #> [18473,]  353 #> [18474,]  353 #> [18475,]  353 #> [18476,]  353 #> [18477,]  353 #> [18478,]  353 #> [18479,]  353 #> [18480,]  353 #> [18481,]  354 #> [18482,]  353 #> [18483,]  353 #> [18484,]  353 #> [18485,]  353 #> [18486,]  354 #> [18487,]  353 #> [18488,]  353 #> [18489,]  353 #> [18490,]  353 #> [18491,]  353 #> [18492,]  353 #> [18493,]  353 #> [18494,]  353 #> [18495,]  353 #> [18496,]  353 #> [18497,]  353 #> [18498,]  353 #> [18499,]  353 #> [18500,]  353 #> [18501,]  355 #> [18502,]  355 #> [18503,]  355 #> [18504,]  355 #> [18505,]  355 #> [18506,]  356 #> [18507,]  355 #> [18508,]  356 #> [18509,]  356 #> [18510,]  355 #> [18511,]  355 #> [18512,]  356 #> [18513,]  355 #> [18514,]  355 #> [18515,]  356 #> [18516,]  355 #> [18517,]  355 #> [18518,]  355 #> [18519,]  355 #> [18520,]  355 #> [18521,]  355 #> [18522,]  355 #> [18523,]  355 #> [18524,]  355 #> [18525,]  355 #> [18526,]  356 #> [18527,]  355 #> [18528,]  355 #> [18529,]  355 #> [18530,]  355 #> [18531,]  355 #> [18532,]  355 #> [18533,]  356 #> [18534,]  355 #> [18535,]  355 #> [18536,]  355 #> [18537,]  355 #> [18538,]  355 #> [18539,]  355 #> [18540,]  355 #> [18541,]  355 #> [18542,]  355 #> [18543,]  356 #> [18544,]  355 #> [18545,]  356 #> [18546,]  356 #> [18547,]  355 #> [18548,]  355 #> [18549,]  355 #> [18550,]  355 #> [18551,]  356 #> [18552,]  355 #> [18553,]  355 #> [18554,]  355 #> [18555,]  355 #> [18556,]  356 #> [18557,]  356 #> [18558,]  355 #> [18559,]  355 #> [18560,]  355 #> [18561,]  356 #> [18562,]  355 #> [18563,]  355 #> [18564,]  356 #> [18565,]  355 #> [18566,]  356 #> [18567,]  355 #> [18568,]  356 #> [18569,]  355 #> [18570,]  355 #> [18571,]  355 #> [18572,]  355 #> [18573,]  355 #> [18574,]  355 #> [18575,]  355 #> [18576,]  356 #> [18577,]  355 #> [18578,]  355 #> [18579,]  355 #> [18580,]  355 #> [18581,]  355 #> [18582,]  355 #> [18583,]  355 #> [18584,]  355 #> [18585,]  355 #> [18586,]  355 #> [18587,]  355 #> [18588,]  355 #> [18589,]  355 #> [18590,]  355 #> [18591,]  355 #> [18592,]  355 #> [18593,]  355 #> [18594,]  356 #> [18595,]  355 #> [18596,]  356 #> [18597,]  355 #> [18598,]  355 #> [18599,]  355 #> [18600,]  355 #> [18601,]  357 #> [18602,]  357 #> [18603,]  357 #> [18604,]  357 #> [18605,]  357 #> [18606,]  357 #> [18607,]  357 #> [18608,]  357 #> [18609,]  357 #> [18610,]  358 #> [18611,]  357 #> [18612,]  357 #> [18613,]  357 #> [18614,]  357 #> [18615,]  357 #> [18616,]  357 #> [18617,]  357 #> [18618,]  358 #> [18619,]  357 #> [18620,]  357 #> [18621,]  357 #> [18622,]  357 #> [18623,]  357 #> [18624,]  357 #> [18625,]  358 #> [18626,]  357 #> [18627,]  357 #> [18628,]  357 #> [18629,]  357 #> [18630,]  357 #> [18631,]  357 #> [18632,]  357 #> [18633,]  357 #> [18634,]  357 #> [18635,]  357 #> [18636,]  357 #> [18637,]  357 #> [18638,]  357 #> [18639,]  358 #> [18640,]  357 #> [18641,]  357 #> [18642,]  357 #> [18643,]  358 #> [18644,]  357 #> [18645,]  358 #> [18646,]  357 #> [18647,]  357 #> [18648,]  357 #> [18649,]  357 #> [18650,]  357 #> [18651,]  357 #> [18652,]  357 #> [18653,]  357 #> [18654,]  357 #> [18655,]  357 #> [18656,]  357 #> [18657,]  357 #> [18658,]  357 #> [18659,]  357 #> [18660,]  357 #> [18661,]  357 #> [18662,]  357 #> [18663,]  357 #> [18664,]  357 #> [18665,]  357 #> [18666,]  357 #> [18667,]  357 #> [18668,]  357 #> [18669,]  357 #> [18670,]  357 #> [18671,]  357 #> [18672,]  357 #> [18673,]  358 #> [18674,]  358 #> [18675,]  358 #> [18676,]  358 #> [18677,]  358 #> [18678,]  357 #> [18679,]  357 #> [18680,]  357 #> [18681,]  357 #> [18682,]  357 #> [18683,]  357 #> [18684,]  357 #> [18685,]  357 #> [18686,]  357 #> [18687,]  357 #> [18688,]  357 #> [18689,]  357 #> [18690,]  357 #> [18691,]  357 #> [18692,]  357 #> [18693,]  357 #> [18694,]  357 #> [18695,]  357 #> [18696,]  357 #> [18697,]  357 #> [18698,]  357 #> [18699,]  357 #> [18700,]  357 #> [18701,]  359 #> [18702,]  359 #> [18703,]  359 #> [18704,]  359 #> [18705,]  359 #> [18706,]  359 #> [18707,]  359 #> [18708,]  359 #> [18709,]  359 #> [18710,]  359 #> [18711,]  359 #> [18712,]  359 #> [18713,]  359 #> [18714,]  359 #> [18715,]  359 #> [18716,]  359 #> [18717,]  359 #> [18718,]  359 #> [18719,]  359 #> [18720,]  359 #> [18721,]  359 #> [18722,]  359 #> [18723,]  359 #> [18724,]  359 #> [18725,]  359 #> [18726,]  359 #> [18727,]  359 #> [18728,]  359 #> [18729,]  359 #> [18730,]  359 #> [18731,]  359 #> [18732,]  359 #> [18733,]  359 #> [18734,]  359 #> [18735,]  359 #> [18736,]  359 #> [18737,]  359 #> [18738,]  359 #> [18739,]  359 #> [18740,]  359 #> [18741,]  359 #> [18742,]  359 #> [18743,]  359 #> [18744,]  359 #> [18745,]  359 #> [18746,]  359 #> [18747,]  359 #> [18748,]  359 #> [18749,]  359 #> [18750,]  359 #> [18751,]  359 #> [18752,]  359 #> [18753,]  359 #> [18754,]  359 #> [18755,]  359 #> [18756,]  359 #> [18757,]  359 #> [18758,]  359 #> [18759,]  359 #> [18760,]  359 #> [18761,]  359 #> [18762,]  359 #> [18763,]  359 #> [18764,]  359 #> [18765,]  359 #> [18766,]  359 #> [18767,]  359 #> [18768,]  359 #> [18769,]  359 #> [18770,]  359 #> [18771,]  359 #> [18772,]  359 #> [18773,]  359 #> [18774,]  359 #> [18775,]  359 #> [18776,]  359 #> [18777,]  359 #> [18778,]  359 #> [18779,]  359 #> [18780,]  359 #> [18781,]  359 #> [18782,]  359 #> [18783,]  359 #> [18784,]  359 #> [18785,]  359 #> [18786,]  359 #> [18787,]  359 #> [18788,]  359 #> [18789,]  359 #> [18790,]  359 #> [18791,]  359 #> [18792,]  359 #> [18793,]  359 #> [18794,]  359 #> [18795,]  359 #> [18796,]  359 #> [18797,]  359 #> [18798,]  359 #> [18799,]  359 #> [18800,]  359 #> [18801,]  361 #> [18802,]  361 #> [18803,]  360 #> [18804,]  361 #> [18805,]  361 #> [18806,]  360 #> [18807,]  360 #> [18808,]  361 #> [18809,]  361 #> [18810,]  361 #> [18811,]  361 #> [18812,]  361 #> [18813,]  361 #> [18814,]  361 #> [18815,]  361 #> [18816,]  361 #> [18817,]  361 #> [18818,]  361 #> [18819,]  361 #> [18820,]  360 #> [18821,]  360 #> [18822,]  361 #> [18823,]  360 #> [18824,]  361 #> [18825,]  360 #> [18826,]  361 #> [18827,]  361 #> [18828,]  361 #> [18829,]  360 #> [18830,]  361 #> [18831,]  361 #> [18832,]  361 #> [18833,]  361 #> [18834,]  360 #> [18835,]  360 #> [18836,]  361 #> [18837,]  360 #> [18838,]  361 #> [18839,]  361 #> [18840,]  361 #> [18841,]  360 #> [18842,]  360 #> [18843,]  361 #> [18844,]  360 #> [18845,]  360 #> [18846,]  361 #> [18847,]  361 #> [18848,]  361 #> [18849,]  361 #> [18850,]  360 #> [18851,]  361 #> [18852,]  361 #> [18853,]  360 #> [18854,]  360 #> [18855,]  360 #> [18856,]  360 #> [18857,]  360 #> [18858,]  361 #> [18859,]  361 #> [18860,]  360 #> [18861,]  361 #> [18862,]  361 #> [18863,]  361 #> [18864,]  360 #> [18865,]  360 #> [18866,]  361 #> [18867,]  361 #> [18868,]  361 #> [18869,]  361 #> [18870,]  361 #> [18871,]  361 #> [18872,]  361 #> [18873,]  360 #> [18874,]  360 #> [18875,]  361 #> [18876,]  361 #> [18877,]  361 #> [18878,]  361 #> [18879,]  361 #> [18880,]  360 #> [18881,]  360 #> [18882,]  360 #> [18883,]  361 #> [18884,]  360 #> [18885,]  360 #> [18886,]  360 #> [18887,]  361 #> [18888,]  360 #> [18889,]  360 #> [18890,]  361 #> [18891,]  361 #> [18892,]  361 #> [18893,]  361 #> [18894,]  360 #> [18895,]  361 #> [18896,]  361 #> [18897,]  360 #> [18898,]  360 #> [18899,]  360 #> [18900,]  361 #> [18901,]  362 #> [18902,]  362 #> [18903,]  362 #> [18904,]  363 #> [18905,]  362 #> [18906,]  362 #> [18907,]  362 #> [18908,]  362 #> [18909,]  362 #> [18910,]  362 #> [18911,]  362 #> [18912,]  363 #> [18913,]  362 #> [18914,]  363 #> [18915,]  362 #> [18916,]  362 #> [18917,]  362 #> [18918,]  362 #> [18919,]  363 #> [18920,]  362 #> [18921,]  362 #> [18922,]  362 #> [18923,]  362 #> [18924,]  362 #> [18925,]  362 #> [18926,]  362 #> [18927,]  363 #> [18928,]  362 #> [18929,]  362 #> [18930,]  362 #> [18931,]  362 #> [18932,]  362 #> [18933,]  362 #> [18934,]  362 #> [18935,]  362 #> [18936,]  362 #> [18937,]  362 #> [18938,]  362 #> [18939,]  362 #> [18940,]  362 #> [18941,]  363 #> [18942,]  363 #> [18943,]  362 #> [18944,]  362 #> [18945,]  362 #> [18946,]  362 #> [18947,]  362 #> [18948,]  363 #> [18949,]  362 #> [18950,]  362 #> [18951,]  362 #> [18952,]  362 #> [18953,]  362 #> [18954,]  362 #> [18955,]  362 #> [18956,]  362 #> [18957,]  362 #> [18958,]  362 #> [18959,]  362 #> [18960,]  362 #> [18961,]  363 #> [18962,]  362 #> [18963,]  362 #> [18964,]  362 #> [18965,]  362 #> [18966,]  362 #> [18967,]  362 #> [18968,]  362 #> [18969,]  363 #> [18970,]  362 #> [18971,]  362 #> [18972,]  362 #> [18973,]  362 #> [18974,]  362 #> [18975,]  362 #> [18976,]  362 #> [18977,]  362 #> [18978,]  362 #> [18979,]  362 #> [18980,]  362 #> [18981,]  362 #> [18982,]  363 #> [18983,]  362 #> [18984,]  362 #> [18985,]  362 #> [18986,]  362 #> [18987,]  362 #> [18988,]  362 #> [18989,]  362 #> [18990,]  362 #> [18991,]  362 #> [18992,]  363 #> [18993,]  363 #> [18994,]  362 #> [18995,]  362 #> [18996,]  363 #> [18997,]  363 #> [18998,]  362 #> [18999,]  362 #> [19000,]  362 #> [19001,]  365 #> [19002,]  365 #> [19003,]  364 #> [19004,]  364 #> [19005,]  364 #> [19006,]  365 #> [19007,]  365 #> [19008,]  364 #> [19009,]  364 #> [19010,]  364 #> [19011,]  365 #> [19012,]  365 #> [19013,]  365 #> [19014,]  365 #> [19015,]  365 #> [19016,]  365 #> [19017,]  365 #> [19018,]  364 #> [19019,]  365 #> [19020,]  364 #> [19021,]  365 #> [19022,]  365 #> [19023,]  364 #> [19024,]  364 #> [19025,]  365 #> [19026,]  365 #> [19027,]  365 #> [19028,]  365 #> [19029,]  365 #> [19030,]  364 #> [19031,]  364 #> [19032,]  364 #> [19033,]  365 #> [19034,]  364 #> [19035,]  365 #> [19036,]  364 #> [19037,]  365 #> [19038,]  364 #> [19039,]  364 #> [19040,]  365 #> [19041,]  365 #> [19042,]  364 #> [19043,]  364 #> [19044,]  365 #> [19045,]  364 #> [19046,]  365 #> [19047,]  365 #> [19048,]  364 #> [19049,]  364 #> [19050,]  365 #> [19051,]  364 #> [19052,]  365 #> [19053,]  364 #> [19054,]  365 #> [19055,]  365 #> [19056,]  364 #> [19057,]  365 #> [19058,]  365 #> [19059,]  365 #> [19060,]  364 #> [19061,]  365 #> [19062,]  364 #> [19063,]  365 #> [19064,]  364 #> [19065,]  364 #> [19066,]  364 #> [19067,]  364 #> [19068,]  365 #> [19069,]  365 #> [19070,]  365 #> [19071,]  365 #> [19072,]  364 #> [19073,]  365 #> [19074,]  365 #> [19075,]  365 #> [19076,]  365 #> [19077,]  365 #> [19078,]  364 #> [19079,]  365 #> [19080,]  365 #> [19081,]  365 #> [19082,]  365 #> [19083,]  365 #> [19084,]  365 #> [19085,]  364 #> [19086,]  365 #> [19087,]  365 #> [19088,]  364 #> [19089,]  364 #> [19090,]  365 #> [19091,]  364 #> [19092,]  365 #> [19093,]  365 #> [19094,]  365 #> [19095,]  364 #> [19096,]  365 #> [19097,]  365 #> [19098,]  365 #> [19099,]  365 #> [19100,]  365 #> [19101,]  367 #> [19102,]  367 #> [19103,]  366 #> [19104,]  366 #> [19105,]  366 #> [19106,]  367 #> [19107,]  367 #> [19108,]  366 #> [19109,]  366 #> [19110,]  366 #> [19111,]  367 #> [19112,]  367 #> [19113,]  367 #> [19114,]  367 #> [19115,]  367 #> [19116,]  367 #> [19117,]  367 #> [19118,]  366 #> [19119,]  367 #> [19120,]  366 #> [19121,]  367 #> [19122,]  367 #> [19123,]  366 #> [19124,]  366 #> [19125,]  367 #> [19126,]  367 #> [19127,]  367 #> [19128,]  367 #> [19129,]  367 #> [19130,]  366 #> [19131,]  366 #> [19132,]  366 #> [19133,]  367 #> [19134,]  366 #> [19135,]  367 #> [19136,]  367 #> [19137,]  367 #> [19138,]  367 #> [19139,]  366 #> [19140,]  367 #> [19141,]  367 #> [19142,]  366 #> [19143,]  366 #> [19144,]  367 #> [19145,]  366 #> [19146,]  367 #> [19147,]  367 #> [19148,]  366 #> [19149,]  366 #> [19150,]  367 #> [19151,]  366 #> [19152,]  367 #> [19153,]  366 #> [19154,]  367 #> [19155,]  367 #> [19156,]  366 #> [19157,]  367 #> [19158,]  367 #> [19159,]  367 #> [19160,]  366 #> [19161,]  367 #> [19162,]  366 #> [19163,]  367 #> [19164,]  366 #> [19165,]  366 #> [19166,]  366 #> [19167,]  366 #> [19168,]  367 #> [19169,]  367 #> [19170,]  367 #> [19171,]  367 #> [19172,]  366 #> [19173,]  367 #> [19174,]  367 #> [19175,]  367 #> [19176,]  367 #> [19177,]  367 #> [19178,]  366 #> [19179,]  367 #> [19180,]  367 #> [19181,]  367 #> [19182,]  367 #> [19183,]  367 #> [19184,]  367 #> [19185,]  366 #> [19186,]  367 #> [19187,]  367 #> [19188,]  366 #> [19189,]  366 #> [19190,]  367 #> [19191,]  366 #> [19192,]  367 #> [19193,]  367 #> [19194,]  367 #> [19195,]  366 #> [19196,]  367 #> [19197,]  367 #> [19198,]  367 #> [19199,]  367 #> [19200,]  367 #> [19201,]  369 #> [19202,]  368 #> [19203,]  368 #> [19204,]  368 #> [19205,]  368 #> [19206,]  368 #> [19207,]  368 #> [19208,]  368 #> [19209,]  369 #> [19210,]  368 #> [19211,]  368 #> [19212,]  368 #> [19213,]  369 #> [19214,]  368 #> [19215,]  368 #> [19216,]  368 #> [19217,]  369 #> [19218,]  369 #> [19219,]  368 #> [19220,]  369 #> [19221,]  368 #> [19222,]  368 #> [19223,]  368 #> [19224,]  368 #> [19225,]  368 #> [19226,]  368 #> [19227,]  369 #> [19228,]  368 #> [19229,]  368 #> [19230,]  368 #> [19231,]  368 #> [19232,]  368 #> [19233,]  369 #> [19234,]  368 #> [19235,]  368 #> [19236,]  369 #> [19237,]  368 #> [19238,]  369 #> [19239,]  368 #> [19240,]  368 #> [19241,]  368 #> [19242,]  369 #> [19243,]  368 #> [19244,]  368 #> [19245,]  368 #> [19246,]  368 #> [19247,]  368 #> [19248,]  368 #> [19249,]  368 #> [19250,]  368 #> [19251,]  369 #> [19252,]  368 #> [19253,]  369 #> [19254,]  369 #> [19255,]  368 #> [19256,]  369 #> [19257,]  368 #> [19258,]  368 #> [19259,]  368 #> [19260,]  368 #> [19261,]  368 #> [19262,]  369 #> [19263,]  368 #> [19264,]  368 #> [19265,]  369 #> [19266,]  369 #> [19267,]  368 #> [19268,]  368 #> [19269,]  368 #> [19270,]  368 #> [19271,]  368 #> [19272,]  368 #> [19273,]  368 #> [19274,]  368 #> [19275,]  368 #> [19276,]  368 #> [19277,]  369 #> [19278,]  368 #> [19279,]  369 #> [19280,]  368 #> [19281,]  368 #> [19282,]  369 #> [19283,]  369 #> [19284,]  369 #> [19285,]  369 #> [19286,]  368 #> [19287,]  369 #> [19288,]  368 #> [19289,]  368 #> [19290,]  368 #> [19291,]  369 #> [19292,]  368 #> [19293,]  369 #> [19294,]  369 #> [19295,]  368 #> [19296,]  368 #> [19297,]  368 #> [19298,]  368 #> [19299,]  368 #> [19300,]  368 #> [19301,]  371 #> [19302,]  371 #> [19303,]  370 #> [19304,]  371 #> [19305,]  370 #> [19306,]  371 #> [19307,]  371 #> [19308,]  371 #> [19309,]  370 #> [19310,]  370 #> [19311,]  370 #> [19312,]  371 #> [19313,]  371 #> [19314,]  370 #> [19315,]  371 #> [19316,]  371 #> [19317,]  371 #> [19318,]  371 #> [19319,]  371 #> [19320,]  371 #> [19321,]  370 #> [19322,]  371 #> [19323,]  371 #> [19324,]  370 #> [19325,]  370 #> [19326,]  371 #> [19327,]  371 #> [19328,]  370 #> [19329,]  371 #> [19330,]  371 #> [19331,]  370 #> [19332,]  370 #> [19333,]  371 #> [19334,]  370 #> [19335,]  370 #> [19336,]  371 #> [19337,]  371 #> [19338,]  371 #> [19339,]  370 #> [19340,]  370 #> [19341,]  371 #> [19342,]  371 #> [19343,]  371 #> [19344,]  371 #> [19345,]  371 #> [19346,]  371 #> [19347,]  370 #> [19348,]  370 #> [19349,]  371 #> [19350,]  371 #> [19351,]  371 #> [19352,]  370 #> [19353,]  371 #> [19354,]  370 #> [19355,]  371 #> [19356,]  371 #> [19357,]  371 #> [19358,]  371 #> [19359,]  371 #> [19360,]  371 #> [19361,]  371 #> [19362,]  370 #> [19363,]  371 #> [19364,]  371 #> [19365,]  370 #> [19366,]  371 #> [19367,]  371 #> [19368,]  371 #> [19369,]  371 #> [19370,]  370 #> [19371,]  371 #> [19372,]  370 #> [19373,]  371 #> [19374,]  370 #> [19375,]  371 #> [19376,]  370 #> [19377,]  371 #> [19378,]  371 #> [19379,]  371 #> [19380,]  371 #> [19381,]  371 #> [19382,]  370 #> [19383,]  371 #> [19384,]  371 #> [19385,]  371 #> [19386,]  371 #> [19387,]  371 #> [19388,]  371 #> [19389,]  371 #> [19390,]  371 #> [19391,]  370 #> [19392,]  371 #> [19393,]  371 #> [19394,]  371 #> [19395,]  371 #> [19396,]  371 #> [19397,]  371 #> [19398,]  370 #> [19399,]  371 #> [19400,]  371 #> [19401,]  373 #> [19402,]  373 #> [19403,]  373 #> [19404,]  373 #> [19405,]  373 #> [19406,]  372 #> [19407,]  373 #> [19408,]  373 #> [19409,]  373 #> [19410,]  373 #> [19411,]  373 #> [19412,]  373 #> [19413,]  373 #> [19414,]  373 #> [19415,]  373 #> [19416,]  373 #> [19417,]  373 #> [19418,]  373 #> [19419,]  372 #> [19420,]  373 #> [19421,]  373 #> [19422,]  373 #> [19423,]  373 #> [19424,]  373 #> [19425,]  373 #> [19426,]  373 #> [19427,]  373 #> [19428,]  373 #> [19429,]  373 #> [19430,]  373 #> [19431,]  373 #> [19432,]  373 #> [19433,]  373 #> [19434,]  372 #> [19435,]  373 #> [19436,]  373 #> [19437,]  373 #> [19438,]  372 #> [19439,]  373 #> [19440,]  373 #> [19441,]  373 #> [19442,]  373 #> [19443,]  373 #> [19444,]  373 #> [19445,]  373 #> [19446,]  373 #> [19447,]  373 #> [19448,]  373 #> [19449,]  372 #> [19450,]  373 #> [19451,]  373 #> [19452,]  373 #> [19453,]  373 #> [19454,]  373 #> [19455,]  373 #> [19456,]  373 #> [19457,]  373 #> [19458,]  373 #> [19459,]  373 #> [19460,]  373 #> [19461,]  373 #> [19462,]  373 #> [19463,]  373 #> [19464,]  373 #> [19465,]  373 #> [19466,]  373 #> [19467,]  373 #> [19468,]  373 #> [19469,]  373 #> [19470,]  373 #> [19471,]  373 #> [19472,]  372 #> [19473,]  373 #> [19474,]  373 #> [19475,]  373 #> [19476,]  373 #> [19477,]  373 #> [19478,]  373 #> [19479,]  373 #> [19480,]  373 #> [19481,]  373 #> [19482,]  373 #> [19483,]  373 #> [19484,]  373 #> [19485,]  373 #> [19486,]  373 #> [19487,]  373 #> [19488,]  373 #> [19489,]  373 #> [19490,]  373 #> [19491,]  373 #> [19492,]  373 #> [19493,]  373 #> [19494,]  373 #> [19495,]  373 #> [19496,]  373 #> [19497,]  373 #> [19498,]  373 #> [19499,]  373 #> [19500,]  373 #> [19501,]  375 #> [19502,]  374 #> [19503,]  374 #> [19504,]  374 #> [19505,]  375 #> [19506,]  374 #> [19507,]  374 #> [19508,]  374 #> [19509,]  375 #> [19510,]  374 #> [19511,]  375 #> [19512,]  374 #> [19513,]  375 #> [19514,]  374 #> [19515,]  374 #> [19516,]  374 #> [19517,]  375 #> [19518,]  375 #> [19519,]  374 #> [19520,]  375 #> [19521,]  375 #> [19522,]  374 #> [19523,]  374 #> [19524,]  375 #> [19525,]  374 #> [19526,]  374 #> [19527,]  375 #> [19528,]  375 #> [19529,]  375 #> [19530,]  374 #> [19531,]  374 #> [19532,]  374 #> [19533,]  375 #> [19534,]  374 #> [19535,]  374 #> [19536,]  375 #> [19537,]  374 #> [19538,]  375 #> [19539,]  375 #> [19540,]  374 #> [19541,]  375 #> [19542,]  375 #> [19543,]  374 #> [19544,]  374 #> [19545,]  374 #> [19546,]  374 #> [19547,]  374 #> [19548,]  374 #> [19549,]  374 #> [19550,]  374 #> [19551,]  375 #> [19552,]  374 #> [19553,]  375 #> [19554,]  375 #> [19555,]  374 #> [19556,]  375 #> [19557,]  374 #> [19558,]  375 #> [19559,]  374 #> [19560,]  374 #> [19561,]  375 #> [19562,]  375 #> [19563,]  374 #> [19564,]  375 #> [19565,]  375 #> [19566,]  375 #> [19567,]  374 #> [19568,]  374 #> [19569,]  374 #> [19570,]  375 #> [19571,]  374 #> [19572,]  374 #> [19573,]  374 #> [19574,]  374 #> [19575,]  374 #> [19576,]  374 #> [19577,]  375 #> [19578,]  374 #> [19579,]  375 #> [19580,]  374 #> [19581,]  374 #> [19582,]  375 #> [19583,]  375 #> [19584,]  375 #> [19585,]  375 #> [19586,]  374 #> [19587,]  375 #> [19588,]  374 #> [19589,]  375 #> [19590,]  375 #> [19591,]  375 #> [19592,]  374 #> [19593,]  375 #> [19594,]  375 #> [19595,]  374 #> [19596,]  374 #> [19597,]  374 #> [19598,]  374 #> [19599,]  375 #> [19600,]  375 #> [19601,]  376 #> [19602,]  377 #> [19603,]  376 #> [19604,]  377 #> [19605,]  377 #> [19606,]  376 #> [19607,]  377 #> [19608,]  377 #> [19609,]  377 #> [19610,]  377 #> [19611,]  376 #> [19612,]  377 #> [19613,]  377 #> [19614,]  376 #> [19615,]  377 #> [19616,]  376 #> [19617,]  377 #> [19618,]  377 #> [19619,]  376 #> [19620,]  377 #> [19621,]  377 #> [19622,]  377 #> [19623,]  377 #> [19624,]  377 #> [19625,]  377 #> [19626,]  376 #> [19627,]  377 #> [19628,]  376 #> [19629,]  377 #> [19630,]  377 #> [19631,]  377 #> [19632,]  377 #> [19633,]  377 #> [19634,]  376 #> [19635,]  376 #> [19636,]  377 #> [19637,]  376 #> [19638,]  376 #> [19639,]  377 #> [19640,]  377 #> [19641,]  377 #> [19642,]  376 #> [19643,]  377 #> [19644,]  377 #> [19645,]  376 #> [19646,]  377 #> [19647,]  377 #> [19648,]  377 #> [19649,]  376 #> [19650,]  377 #> [19651,]  377 #> [19652,]  376 #> [19653,]  377 #> [19654,]  377 #> [19655,]  377 #> [19656,]  377 #> [19657,]  377 #> [19658,]  377 #> [19659,]  377 #> [19660,]  377 #> [19661,]  377 #> [19662,]  377 #> [19663,]  377 #> [19664,]  376 #> [19665,]  377 #> [19666,]  377 #> [19667,]  377 #> [19668,]  376 #> [19669,]  377 #> [19670,]  377 #> [19671,]  377 #> [19672,]  376 #> [19673,]  376 #> [19674,]  377 #> [19675,]  377 #> [19676,]  377 #> [19677,]  376 #> [19678,]  377 #> [19679,]  377 #> [19680,]  377 #> [19681,]  377 #> [19682,]  377 #> [19683,]  377 #> [19684,]  377 #> [19685,]  377 #> [19686,]  377 #> [19687,]  377 #> [19688,]  377 #> [19689,]  376 #> [19690,]  377 #> [19691,]  377 #> [19692,]  377 #> [19693,]  377 #> [19694,]  376 #> [19695,]  377 #> [19696,]  376 #> [19697,]  376 #> [19698,]  377 #> [19699,]  377 #> [19700,]  376 #> [19701,]  378 #> [19702,]  378 #> [19703,]  378 #> [19704,]  379 #> [19705,]  378 #> [19706,]  378 #> [19707,]  378 #> [19708,]  378 #> [19709,]  378 #> [19710,]  378 #> [19711,]  378 #> [19712,]  379 #> [19713,]  378 #> [19714,]  379 #> [19715,]  378 #> [19716,]  378 #> [19717,]  378 #> [19718,]  378 #> [19719,]  379 #> [19720,]  378 #> [19721,]  378 #> [19722,]  378 #> [19723,]  378 #> [19724,]  378 #> [19725,]  378 #> [19726,]  378 #> [19727,]  379 #> [19728,]  378 #> [19729,]  378 #> [19730,]  378 #> [19731,]  378 #> [19732,]  378 #> [19733,]  378 #> [19734,]  378 #> [19735,]  378 #> [19736,]  378 #> [19737,]  378 #> [19738,]  379 #> [19739,]  378 #> [19740,]  378 #> [19741,]  379 #> [19742,]  379 #> [19743,]  378 #> [19744,]  378 #> [19745,]  378 #> [19746,]  378 #> [19747,]  378 #> [19748,]  379 #> [19749,]  378 #> [19750,]  378 #> [19751,]  378 #> [19752,]  378 #> [19753,]  378 #> [19754,]  378 #> [19755,]  378 #> [19756,]  378 #> [19757,]  378 #> [19758,]  378 #> [19759,]  378 #> [19760,]  378 #> [19761,]  379 #> [19762,]  378 #> [19763,]  378 #> [19764,]  378 #> [19765,]  378 #> [19766,]  378 #> [19767,]  378 #> [19768,]  378 #> [19769,]  379 #> [19770,]  378 #> [19771,]  378 #> [19772,]  378 #> [19773,]  378 #> [19774,]  378 #> [19775,]  378 #> [19776,]  378 #> [19777,]  378 #> [19778,]  378 #> [19779,]  378 #> [19780,]  378 #> [19781,]  378 #> [19782,]  379 #> [19783,]  378 #> [19784,]  378 #> [19785,]  378 #> [19786,]  378 #> [19787,]  378 #> [19788,]  378 #> [19789,]  378 #> [19790,]  378 #> [19791,]  378 #> [19792,]  379 #> [19793,]  379 #> [19794,]  378 #> [19795,]  378 #> [19796,]  379 #> [19797,]  379 #> [19798,]  378 #> [19799,]  378 #> [19800,]  378 #> [19801,]  380 #> [19802,]  381 #> [19803,]  380 #> [19804,]  380 #> [19805,]  380 #> [19806,]  380 #> [19807,]  380 #> [19808,]  380 #> [19809,]  381 #> [19810,]  381 #> [19811,]  380 #> [19812,]  381 #> [19813,]  380 #> [19814,]  380 #> [19815,]  380 #> [19816,]  380 #> [19817,]  380 #> [19818,]  380 #> [19819,]  380 #> [19820,]  380 #> [19821,]  381 #> [19822,]  380 #> [19823,]  380 #> [19824,]  380 #> [19825,]  380 #> [19826,]  380 #> [19827,]  380 #> [19828,]  380 #> [19829,]  381 #> [19830,]  380 #> [19831,]  380 #> [19832,]  380 #> [19833,]  381 #> [19834,]  380 #> [19835,]  380 #> [19836,]  380 #> [19837,]  380 #> [19838,]  380 #> [19839,]  380 #> [19840,]  380 #> [19841,]  380 #> [19842,]  380 #> [19843,]  380 #> [19844,]  380 #> [19845,]  380 #> [19846,]  380 #> [19847,]  380 #> [19848,]  380 #> [19849,]  380 #> [19850,]  380 #> [19851,]  380 #> [19852,]  380 #> [19853,]  380 #> [19854,]  380 #> [19855,]  380 #> [19856,]  380 #> [19857,]  380 #> [19858,]  380 #> [19859,]  380 #> [19860,]  381 #> [19861,]  380 #> [19862,]  380 #> [19863,]  381 #> [19864,]  380 #> [19865,]  380 #> [19866,]  380 #> [19867,]  380 #> [19868,]  380 #> [19869,]  380 #> [19870,]  381 #> [19871,]  380 #> [19872,]  380 #> [19873,]  380 #> [19874,]  380 #> [19875,]  380 #> [19876,]  380 #> [19877,]  380 #> [19878,]  380 #> [19879,]  380 #> [19880,]  380 #> [19881,]  381 #> [19882,]  380 #> [19883,]  380 #> [19884,]  380 #> [19885,]  380 #> [19886,]  381 #> [19887,]  380 #> [19888,]  380 #> [19889,]  380 #> [19890,]  380 #> [19891,]  380 #> [19892,]  380 #> [19893,]  380 #> [19894,]  380 #> [19895,]  380 #> [19896,]  380 #> [19897,]  380 #> [19898,]  380 #> [19899,]  380 #> [19900,]  380 #> [19901,]  382 #> [19902,]  383 #> [19903,]  383 #> [19904,]  382 #> [19905,]  382 #> [19906,]  383 #> [19907,]  383 #> [19908,]  382 #> [19909,]  382 #> [19910,]  382 #> [19911,]  382 #> [19912,]  383 #> [19913,]  382 #> [19914,]  382 #> [19915,]  382 #> [19916,]  382 #> [19917,]  382 #> [19918,]  383 #> [19919,]  383 #> [19920,]  383 #> [19921,]  382 #> [19922,]  382 #> [19923,]  383 #> [19924,]  382 #> [19925,]  383 #> [19926,]  382 #> [19927,]  382 #> [19928,]  383 #> [19929,]  382 #> [19930,]  382 #> [19931,]  383 #> [19932,]  383 #> [19933,]  383 #> [19934,]  383 #> [19935,]  382 #> [19936,]  382 #> [19937,]  382 #> [19938,]  382 #> [19939,]  382 #> [19940,]  383 #> [19941,]  382 #> [19942,]  383 #> [19943,]  382 #> [19944,]  382 #> [19945,]  382 #> [19946,]  382 #> [19947,]  382 #> [19948,]  383 #> [19949,]  382 #> [19950,]  382 #> [19951,]  382 #> [19952,]  382 #> [19953,]  382 #> [19954,]  382 #> [19955,]  382 #> [19956,]  383 #> [19957,]  382 #> [19958,]  382 #> [19959,]  382 #> [19960,]  383 #> [19961,]  382 #> [19962,]  382 #> [19963,]  382 #> [19964,]  383 #> [19965,]  383 #> [19966,]  382 #> [19967,]  382 #> [19968,]  382 #> [19969,]  382 #> [19970,]  383 #> [19971,]  383 #> [19972,]  382 #> [19973,]  383 #> [19974,]  382 #> [19975,]  382 #> [19976,]  382 #> [19977,]  382 #> [19978,]  383 #> [19979,]  382 #> [19980,]  382 #> [19981,]  382 #> [19982,]  382 #> [19983,]  382 #> [19984,]  383 #> [19985,]  382 #> [19986,]  382 #> [19987,]  382 #> [19988,]  382 #> [19989,]  382 #> [19990,]  382 #> [19991,]  382 #> [19992,]  382 #> [19993,]  383 #> [19994,]  382 #> [19995,]  382 #> [19996,]  382 #> [19997,]  383 #> [19998,]  383 #> [19999,]  382 #> [20000,]  383 computeForestLeafIndices(bart_model, X, \"mean\", c(1,3,9)) #>          [,1] [,2] [,3] #>     [1,]    1    1    0 #>     [2,]    1    1    0 #>     [3,]    0    0    2 #>     [4,]    0    0    2 #>     [5,]    0    0    2 #>     [6,]    1    1    0 #>     [7,]    0    0    2 #>     [8,]    0    0    2 #>     [9,]    0    0    2 #>    [10,]    0    0    2 #>    [11,]    1    1    0 #>    [12,]    0    0    2 #>    [13,]    1    1    0 #>    [14,]    1    1    0 #>    [15,]    1    1    0 #>    [16,]    1    1    0 #>    [17,]    1    1    0 #>    [18,]    0    0    2 #>    [19,]    0    0    2 #>    [20,]    0    0    2 #>    [21,]    1    1    0 #>    [22,]    1    1    0 #>    [23,]    0    0    2 #>    [24,]    0    0    2 #>    [25,]    0    0    1 #>    [26,]    1    1    0 #>    [27,]    1    1    0 #>    [28,]    0    0    2 #>    [29,]    1    1    0 #>    [30,]    0    0    2 #>    [31,]    0    0    2 #>    [32,]    0    0    2 #>    [33,]    1    1    0 #>    [34,]    0    0    2 #>    [35,]    1    1    0 #>    [36,]    0    0    2 #>    [37,]    1    1    0 #>    [38,]    0    0    2 #>    [39,]    0    0    2 #>    [40,]    0    0    2 #>    [41,]    1    1    0 #>    [42,]    0    0    2 #>    [43,]    0    0    2 #>    [44,]    1    1    0 #>    [45,]    0    0    2 #>    [46,]    0    0    2 #>    [47,]    1    1    0 #>    [48,]    0    0    2 #>    [49,]    0    0    2 #>    [50,]    1    1    0 #>    [51,]    0    0    2 #>    [52,]    1    1    0 #>    [53,]    0    0    2 #>    [54,]    0    0    2 #>    [55,]    0    0    2 #>    [56,]    0    0    1 #>    [57,]    0    0    2 #>    [58,]    1    1    0 #>    [59,]    1    1    0 #>    [60,]    0    0    2 #>    [61,]    1    1    0 #>    [62,]    0    0    2 #>    [63,]    0    0    2 #>    [64,]    0    0    2 #>    [65,]    0    0    1 #>    [66,]    0    0    2 #>    [67,]    0    0    2 #>    [68,]    1    1    0 #>    [69,]    0    0    2 #>    [70,]    1    1    0 #>    [71,]    1    1    0 #>    [72,]    0    0    2 #>    [73,]    1    1    0 #>    [74,]    0    0    2 #>    [75,]    1    1    0 #>    [76,]    1    1    0 #>    [77,]    1    1    0 #>    [78,]    0    0    2 #>    [79,]    1    1    0 #>    [80,]    0    0    1 #>    [81,]    1    1    0 #>    [82,]    0    0    2 #>    [83,]    1    1    0 #>    [84,]    1    1    0 #>    [85,]    0    0    1 #>    [86,]    1    1    0 #>    [87,]    1    1    0 #>    [88,]    0    0    2 #>    [89,]    0    0    2 #>    [90,]    1    1    0 #>    [91,]    0    0    2 #>    [92,]    0    0    2 #>    [93,]    1    1    0 #>    [94,]    1    1    0 #>    [95,]    0    0    2 #>    [96,]    1    1    0 #>    [97,]    1    1    0 #>    [98,]    0    0    2 #>    [99,]    1    1    0 #>   [100,]    1    1    0 #>   [101,]    2    2    3 #>   [102,]    2    2    5 #>   [103,]    2    2    5 #>   [104,]    2    2    4 #>   [105,]    2    2    5 #>   [106,]    2    2    5 #>   [107,]    3    3    5 #>   [108,]    2    2    4 #>   [109,]    2    2    3 #>   [110,]    3    3    5 #>   [111,]    2    2    4 #>   [112,]    2    2    5 #>   [113,]    2    2    3 #>   [114,]    2    2    4 #>   [115,]    2    2    4 #>   [116,]    3    3    5 #>   [117,]    2    2    3 #>   [118,]    2    2    3 #>   [119,]    2    2    5 #>   [120,]    3    3    5 #>   [121,]    2    2    4 #>   [122,]    2    2    4 #>   [123,]    2    2    5 #>   [124,]    3    3    5 #>   [125,]    2    2    5 #>   [126,]    2    2    5 #>   [127,]    2    2    3 #>   [128,]    3    3    5 #>   [129,]    2    2    5 #>   [130,]    2    2    4 #>   [131,]    2    2    5 #>   [132,]    2    2    5 #>   [133,]    2    2    5 #>   [134,]    2    2    5 #>   [135,]    2    2    4 #>   [136,]    2    2    3 #>   [137,]    2    2    5 #>   [138,]    2    2    5 #>   [139,]    2    2    5 #>   [140,]    2    2    5 #>   [141,]    2    2    5 #>   [142,]    2    2    3 #>   [143,]    2    2    4 #>   [144,]    2    2    4 #>   [145,]    2    2    4 #>   [146,]    2    2    4 #>   [147,]    2    2    5 #>   [148,]    2    2    5 #>   [149,]    2    2    4 #>   [150,]    3    3    5 #>   [151,]    2    2    3 #>   [152,]    3    3    4 #>   [153,]    2    2    3 #>   [154,]    3    3    4 #>   [155,]    2    2    4 #>   [156,]    2    2    3 #>   [157,]    2    2    5 #>   [158,]    2    2    4 #>   [159,]    2    2    5 #>   [160,]    2    2    5 #>   [161,]    2    2    5 #>   [162,]    2    2    4 #>   [163,]    2    2    5 #>   [164,]    2    2    5 #>   [165,]    2    2    3 #>   [166,]    2    2    3 #>   [167,]    2    2    4 #>   [168,]    2    2    4 #>   [169,]    2    2    4 #>   [170,]    2    2    5 #>   [171,]    2    2    5 #>   [172,]    2    2    5 #>   [173,]    2    2    5 #>   [174,]    2    2    4 #>   [175,]    2    2    5 #>   [176,]    3    3    5 #>   [177,]    2    2    5 #>   [178,]    2    2    5 #>   [179,]    2    2    3 #>   [180,]    2    2    4 #>   [181,]    2    2    4 #>   [182,]    2    2    3 #>   [183,]    2    2    3 #>   [184,]    2    2    3 #>   [185,]    2    2    4 #>   [186,]    3    3    5 #>   [187,]    2    2    3 #>   [188,]    2    2    4 #>   [189,]    2    2    4 #>   [190,]    2    2    4 #>   [191,]    3    3    3 #>   [192,]    2    2    4 #>   [193,]    2    2    3 #>   [194,]    2    2    3 #>   [195,]    2    2    4 #>   [196,]    2    2    4 #>   [197,]    2    2    5 #>   [198,]    2    2    5 #>   [199,]    2    2    4 #>   [200,]    2    2    5 #>   [201,]    4    4    6 #>   [202,]    4    4    6 #>   [203,]    4    4    6 #>   [204,]    5    5    7 #>   [205,]    4    4    6 #>   [206,]    5    5    7 #>   [207,]    4    4    6 #>   [208,]    4    4    6 #>   [209,]    5    5    7 #>   [210,]    5    5    7 #>   [211,]    5    5    7 #>   [212,]    5    5    7 #>   [213,]    4    4    6 #>   [214,]    5    5    7 #>   [215,]    5    5    7 #>   [216,]    4    4    6 #>   [217,]    4    4    6 #>   [218,]    5    5    7 #>   [219,]    5    5    7 #>   [220,]    4    4    6 #>   [221,]    5    5    7 #>   [222,]    4    4    6 #>   [223,]    5    5    7 #>   [224,]    4    4    6 #>   [225,]    4    4    6 #>   [226,]    5    5    7 #>   [227,]    5    5    7 #>   [228,]    4    4    6 #>   [229,]    4    4    6 #>   [230,]    5    5    7 #>   [231,]    5    5    7 #>   [232,]    5    5    7 #>   [233,]    5    5    7 #>   [234,]    5    5    7 #>   [235,]    4    4    6 #>   [236,]    5    5    7 #>   [237,]    4    4    6 #>   [238,]    5    5    7 #>   [239,]    4    4    6 #>   [240,]    4    4    6 #>   [241,]    5    5    7 #>   [242,]    5    5    7 #>   [243,]    4    4    6 #>   [244,]    4    4    6 #>   [245,]    4    4    6 #>   [246,]    4    4    6 #>   [247,]    4    4    6 #>   [248,]    5    5    7 #>   [249,]    4    4    6 #>   [250,]    4    4    6 #>   [251,]    4    4    6 #>   [252,]    5    5    7 #>   [253,]    4    4    6 #>   [254,]    4    4    6 #>   [255,]    4    4    6 #>   [256,]    4    4    6 #>   [257,]    4    4    6 #>   [258,]    5    5    7 #>   [259,]    4    4    6 #>   [260,]    5    5    7 #>   [261,]    5    5    7 #>   [262,]    5    5    7 #>   [263,]    4    4    6 #>   [264,]    5    5    7 #>   [265,]    4    4    6 #>   [266,]    4    4    6 #>   [267,]    5    5    7 #>   [268,]    5    5    7 #>   [269,]    5    5    7 #>   [270,]    4    4    6 #>   [271,]    4    4    6 #>   [272,]    4    4    6 #>   [273,]    5    5    7 #>   [274,]    5    5    7 #>   [275,]    5    5    7 #>   [276,]    4    4    6 #>   [277,]    4    4    6 #>   [278,]    4    4    6 #>   [279,]    4    4    6 #>   [280,]    5    5    7 #>   [281,]    4    4    6 #>   [282,]    5    5    7 #>   [283,]    4    4    6 #>   [284,]    4    4    6 #>   [285,]    5    5    7 #>   [286,]    4    4    6 #>   [287,]    4    4    6 #>   [288,]    4    4    6 #>   [289,]    4    4    6 #>   [290,]    4    4    6 #>   [291,]    5    5    7 #>   [292,]    5    5    7 #>   [293,]    5    5    7 #>   [294,]    4    4    6 #>   [295,]    4    4    6 #>   [296,]    5    5    7 #>   [297,]    5    5    7 #>   [298,]    4    4    6 #>   [299,]    5    5    7 #>   [300,]    4    4    6 #>   [301,]    7    7    8 #>   [302,]    7    7    8 #>   [303,]    6    6    9 #>   [304,]    7    7    8 #>   [305,]    6    6    9 #>   [306,]    6    6    9 #>   [307,]    7    7    8 #>   [308,]    7    7    8 #>   [309,]    7    7    8 #>   [310,]    7    7    8 #>   [311,]    6    6    9 #>   [312,]    6    6    9 #>   [313,]    7    7    8 #>   [314,]    6    6    9 #>   [315,]    7    7    8 #>   [316,]    7    7    8 #>   [317,]    7    7    8 #>   [318,]    7    7    8 #>   [319,]    6    6    9 #>   [320,]    6    6    9 #>   [321,]    7    7    8 #>   [322,]    6    6    9 #>   [323,]    7    7    8 #>   [324,]    6    6    9 #>   [325,]    7    7    8 #>   [326,]    6    6    9 #>   [327,]    7    7    8 #>   [328,]    7    7    8 #>   [329,]    6    6    9 #>   [330,]    6    6    9 #>   [331,]    7    7    8 #>   [332,]    6    6    9 #>   [333,]    7    7    8 #>   [334,]    6    6    9 #>   [335,]    6    6    9 #>   [336,]    6    6    9 #>   [337,]    7    7    8 #>   [338,]    7    7    8 #>   [339,]    7    7    8 #>   [340,]    6    6    9 #>   [341,]    6    6    9 #>   [342,]    6    6    9 #>   [343,]    7    7    8 #>   [344,]    7    7    8 #>   [345,]    7    7    8 #>   [346,]    7    7    8 #>   [347,]    7    7    8 #>   [348,]    6    6    9 #>   [349,]    7    7    8 #>   [350,]    7    7    8 #>   [351,]    6    6    9 #>   [352,]    6    6    9 #>   [353,]    7    7    8 #>   [354,]    6    6    9 #>   [355,]    6    6    9 #>   [356,]    7    7    8 #>   [357,]    6    6    9 #>   [358,]    7    7    8 #>   [359,]    7    7    8 #>   [360,]    6    6    9 #>   [361,]    7    7    8 #>   [362,]    6    6    9 #>   [363,]    6    6    9 #>   [364,]    7    7    8 #>   [365,]    7    7    8 #>   [366,]    6    6    9 #>   [367,]    6    6    9 #>   [368,]    6    6    9 #>   [369,]    6    6    9 #>   [370,]    7    7    8 #>   [371,]    7    7    8 #>   [372,]    7    7    8 #>   [373,]    7    7    8 #>   [374,]    7    7    8 #>   [375,]    7    7    8 #>   [376,]    7    7    8 #>   [377,]    7    7    8 #>   [378,]    6    6    9 #>   [379,]    7    7    8 #>   [380,]    6    6    9 #>   [381,]    6    6    9 #>   [382,]    7    7    8 #>   [383,]    6    6    9 #>   [384,]    7    7    8 #>   [385,]    7    7    8 #>   [386,]    7    7    8 #>   [387,]    7    7    8 #>   [388,]    7    7    8 #>   [389,]    6    6    9 #>   [390,]    7    7    8 #>   [391,]    6    6    9 #>   [392,]    7    7    8 #>   [393,]    6    6    9 #>   [394,]    7    7    8 #>   [395,]    7    7    8 #>   [396,]    7    7    8 #>   [397,]    7    7    8 #>   [398,]    6    6    9 #>   [399,]    6    6    9 #>   [400,]    7    7    8 #>   [401,]    8    8   12 #>   [402,]    8    8   12 #>   [403,]    8    8   11 #>   [404,]    8    8   12 #>   [405,]    8    8   11 #>   [406,]    8    8   12 #>   [407,]    8    8   12 #>   [408,]    8    8   12 #>   [409,]    8    8   11 #>   [410,]    8    8   11 #>   [411,]    8    8   11 #>   [412,]    8    8   12 #>   [413,]    9    9   10 #>   [414,]    8    8   11 #>   [415,]    9    9   10 #>   [416,]    8    8   12 #>   [417,]    8    8   12 #>   [418,]    8    8   12 #>   [419,]    9    9   10 #>   [420,]    9    9   10 #>   [421,]    8    8   11 #>   [422,]    9    9   10 #>   [423,]    8    8   12 #>   [424,]    8    8   11 #>   [425,]    8    8   11 #>   [426,]    8    8   12 #>   [427,]    9    9   10 #>   [428,]    8    8   11 #>   [429,]    9    9   10 #>   [430,]    8    8   12 #>   [431,]    8    8   11 #>   [432,]    8    8   11 #>   [433,]    8    8   12 #>   [434,]    8    8   11 #>   [435,]    8    8   11 #>   [436,]    9    9   10 #>   [437,]    9    9   10 #>   [438,]    9    9   10 #>   [439,]    8    8   11 #>   [440,]    8    8   11 #>   [441,]    8    8   12 #>   [442,]    8    8   12 #>   [443,]    8    8   12 #>   [444,]    8    8   12 #>   [445,]    8    8   12 #>   [446,]    9    9   10 #>   [447,]    8    8   11 #>   [448,]    8    8   11 #>   [449,]    8    8   12 #>   [450,]    8    8   12 #>   [451,]    9    9   10 #>   [452,]    8    8   11 #>   [453,]    9    9   10 #>   [454,]    8    8   11 #>   [455,]    9    9   10 #>   [456,]    8    8   12 #>   [457,]    8    8   12 #>   [458,]    9    9   10 #>   [459,]    8    8   12 #>   [460,]    8    8   12 #>   [461,]    8    8   12 #>   [462,]    8    8   11 #>   [463,]    8    8   12 #>   [464,]    9    9   10 #>   [465,]    8    8   11 #>   [466,]    9    9   10 #>   [467,]    8    8   12 #>   [468,]    8    8   12 #>   [469,]    9    9   10 #>   [470,]    8    8   11 #>   [471,]    9    9   10 #>   [472,]    8    8   11 #>   [473,]    8    8   12 #>   [474,]    8    8   11 #>   [475,]    8    8   12 #>   [476,]    8    8   11 #>   [477,]    9    9   10 #>   [478,]    8    8   12 #>   [479,]    8    8   12 #>   [480,]    9    9   10 #>   [481,]    9    9   10 #>   [482,]    8    8   11 #>   [483,]    9    9   10 #>   [484,]    8    8   12 #>   [485,]    8    8   12 #>   [486,]    8    8   12 #>   [487,]    9    9   10 #>   [488,]    8    8   12 #>   [489,]    8    8   12 #>   [490,]    9    9   10 #>   [491,]    8    8   11 #>   [492,]    8    8   12 #>   [493,]    8    8   12 #>   [494,]    8    8   12 #>   [495,]    8    8   12 #>   [496,]    9    9   10 #>   [497,]    9    9   10 #>   [498,]    8    8   11 #>   [499,]    8    8   12 #>   [500,]    9    9   10 #>   [501,]   11   12   14 #>   [502,]   11   12   14 #>   [503,]   11   11   14 #>   [504,]   11   12   14 #>   [505,]   11   12   14 #>   [506,]   11   12   14 #>   [507,]   10   10   13 #>   [508,]   11   12   14 #>   [509,]   11   12   14 #>   [510,]   11   11   14 #>   [511,]   11   11   14 #>   [512,]   11   12   14 #>   [513,]   11   12   14 #>   [514,]   11   11   14 #>   [515,]   11   12   14 #>   [516,]   11   12   14 #>   [517,]   11   12   14 #>   [518,]   11   12   14 #>   [519,]   11   12   14 #>   [520,]   11   12   14 #>   [521,]   10   10   13 #>   [522,]   11   12   14 #>   [523,]   11   12   14 #>   [524,]   11   12   14 #>   [525,]   11   12   14 #>   [526,]   11   12   14 #>   [527,]   11   12   14 #>   [528,]   11   12   14 #>   [529,]   11   12   14 #>   [530,]   10   10   13 #>   [531,]   11   12   14 #>   [532,]   11   11   14 #>   [533,]   11   12   14 #>   [534,]   11   12   14 #>   [535,]   11   12   14 #>   [536,]   11   12   14 #>   [537,]   11   12   14 #>   [538,]   11   12   14 #>   [539,]   10   10   13 #>   [540,]   11   11   14 #>   [541,]   11   12   14 #>   [542,]   11   12   14 #>   [543,]   11   12   14 #>   [544,]   11   12   14 #>   [545,]   11   12   14 #>   [546,]   11   12   14 #>   [547,]   11   12   14 #>   [548,]   11   11   14 #>   [549,]   10   10   13 #>   [550,]   11   12   14 #>   [551,]   11   12   14 #>   [552,]   11   12   14 #>   [553,]   11   12   14 #>   [554,]   10   10   13 #>   [555,]   11   12   14 #>   [556,]   11   12   14 #>   [557,]   11   12   14 #>   [558,]   11   12   14 #>   [559,]   11   12   14 #>   [560,]   11   12   14 #>   [561,]   11   12   14 #>   [562,]   10   10   13 #>   [563,]   11   12   14 #>   [564,]   11   12   14 #>   [565,]   11   12   14 #>   [566,]   11   12   14 #>   [567,]   11   12   14 #>   [568,]   11   12   14 #>   [569,]   11   12   14 #>   [570,]   10   10   13 #>   [571,]   11   12   14 #>   [572,]   11   12   14 #>   [573,]   11   12   14 #>   [574,]   11   12   14 #>   [575,]   11   12   14 #>   [576,]   11   12   14 #>   [577,]   11   12   14 #>   [578,]   11   12   14 #>   [579,]   11   12   14 #>   [580,]   10   10   13 #>   [581,]   11   12   14 #>   [582,]   11   12   14 #>   [583,]   11   12   14 #>   [584,]   11   12   14 #>   [585,]   11   12   14 #>   [586,]   11   12   14 #>   [587,]   11   12   14 #>   [588,]   11   12   14 #>   [589,]   11   12   14 #>   [590,]   11   12   14 #>   [591,]   11   12   14 #>   [592,]   11   12   14 #>   [593,]   11   12   14 #>   [594,]   11   12   14 #>   [595,]   10   10   13 #>   [596,]   11   12   14 #>   [597,]   11   12   14 #>   [598,]   10   10   13 #>   [599,]   11   12   14 #>   [600,]   11   12   14 #>   [601,]   12   13   15 #>   [602,]   12   13   15 #>   [603,]   12   13   15 #>   [604,]   12   13   15 #>   [605,]   12   13   15 #>   [606,]   12   13   15 #>   [607,]   13   14   16 #>   [608,]   12   13   15 #>   [609,]   12   13   15 #>   [610,]   12   13   15 #>   [611,]   12   13   15 #>   [612,]   12   13   15 #>   [613,]   12   13   15 #>   [614,]   12   13   15 #>   [615,]   12   13   15 #>   [616,]   13   14   17 #>   [617,]   12   13   15 #>   [618,]   12   13   15 #>   [619,]   12   13   15 #>   [620,]   13   14   16 #>   [621,]   12   13   15 #>   [622,]   12   13   15 #>   [623,]   12   13   15 #>   [624,]   13   14   16 #>   [625,]   12   13   15 #>   [626,]   12   13   15 #>   [627,]   12   13   15 #>   [628,]   13   14   16 #>   [629,]   12   13   15 #>   [630,]   12   13   15 #>   [631,]   12   13   15 #>   [632,]   12   13   15 #>   [633,]   12   13   15 #>   [634,]   12   13   15 #>   [635,]   12   13   15 #>   [636,]   12   13   15 #>   [637,]   12   13   15 #>   [638,]   12   13   15 #>   [639,]   12   13   15 #>   [640,]   12   13   15 #>   [641,]   12   13   15 #>   [642,]   12   13   15 #>   [643,]   12   13   15 #>   [644,]   12   13   15 #>   [645,]   12   13   15 #>   [646,]   12   13   15 #>   [647,]   12   13   15 #>   [648,]   12   13   15 #>   [649,]   12   13   15 #>   [650,]   13   14   17 #>   [651,]   12   13   15 #>   [652,]   13   14   17 #>   [653,]   12   13   15 #>   [654,]   12   13   15 #>   [655,]   12   13   15 #>   [656,]   12   13   15 #>   [657,]   12   13   15 #>   [658,]   12   13   15 #>   [659,]   12   13   15 #>   [660,]   12   13   15 #>   [661,]   12   13   15 #>   [662,]   12   13   15 #>   [663,]   12   13   15 #>   [664,]   12   13   15 #>   [665,]   12   13   15 #>   [666,]   12   13   15 #>   [667,]   12   13   15 #>   [668,]   12   13   15 #>   [669,]   12   13   15 #>   [670,]   12   13   15 #>   [671,]   12   13   15 #>   [672,]   12   13   15 #>   [673,]   12   13   15 #>   [674,]   12   13   15 #>   [675,]   12   13   15 #>   [676,]   13   14   17 #>   [677,]   12   13   15 #>   [678,]   12   13   15 #>   [679,]   12   13   15 #>   [680,]   12   13   15 #>   [681,]   12   13   15 #>   [682,]   12   13   15 #>   [683,]   12   13   15 #>   [684,]   12   13   15 #>   [685,]   12   13   15 #>   [686,]   13   14   17 #>   [687,]   12   13   15 #>   [688,]   12   13   15 #>   [689,]   12   13   15 #>   [690,]   12   13   15 #>   [691,]   13   14   16 #>   [692,]   12   13   15 #>   [693,]   12   13   15 #>   [694,]   12   13   15 #>   [695,]   12   13   15 #>   [696,]   12   13   15 #>   [697,]   12   13   15 #>   [698,]   12   13   15 #>   [699,]   12   13   15 #>   [700,]   12   13   15 #>   [701,]   16   16   18 #>   [702,]   14   15   19 #>   [703,]   15   16   18 #>   [704,]   16   16   18 #>   [705,]   14   15   18 #>   [706,]   15   16   18 #>   [707,]   14   15   18 #>   [708,]   16   16   18 #>   [709,]   14   15   19 #>   [710,]   14   15   19 #>   [711,]   16   16   18 #>   [712,]   14   15   19 #>   [713,]   14   15   19 #>   [714,]   16   16   18 #>   [715,]   16   16   18 #>   [716,]   16   16   18 #>   [717,]   14   15   19 #>   [718,]   14   15   18 #>   [719,]   16   16   18 #>   [720,]   14   15   18 #>   [721,]   14   15   19 #>   [722,]   14   15   18 #>   [723,]   14   15   18 #>   [724,]   14   15   18 #>   [725,]   15   16   18 #>   [726,]   16   16   18 #>   [727,]   14   15   18 #>   [728,]   16   16   18 #>   [729,]   14   15   19 #>   [730,]   14   15   18 #>   [731,]   14   15   18 #>   [732,]   14   15   18 #>   [733,]   14   15   19 #>   [734,]   15   16   18 #>   [735,]   15   16   18 #>   [736,]   14   15   18 #>   [737,]   15   16   18 #>   [738,]   16   16   18 #>   [739,]   16   16   18 #>   [740,]   14   15   18 #>   [741,]   14   15   18 #>   [742,]   15   16   18 #>   [743,]   16   16   18 #>   [744,]   14   15   18 #>   [745,]   16   16   18 #>   [746,]   16   16   18 #>   [747,]   14   15   18 #>   [748,]   14   15   18 #>   [749,]   16   16   18 #>   [750,]   14   15   18 #>   [751,]   16   16   18 #>   [752,]   16   16   18 #>   [753,]   14   15   19 #>   [754,]   14   15   18 #>   [755,]   15   16   18 #>   [756,]   15   16   18 #>   [757,]   15   16   18 #>   [758,]   14   15   18 #>   [759,]   16   16   18 #>   [760,]   14   15   19 #>   [761,]   14   15   18 #>   [762,]   16   16   18 #>   [763,]   14   15   19 #>   [764,]   15   16   18 #>   [765,]   15   16   18 #>   [766,]   16   16   18 #>   [767,]   16   16   18 #>   [768,]   16   16   18 #>   [769,]   16   16   18 #>   [770,]   14   15   19 #>   [771,]   16   16   18 #>   [772,]   16   16   18 #>   [773,]   15   16   18 #>   [774,]   15   16   18 #>   [775,]   14   15   18 #>   [776,]   16   16   18 #>   [777,]   16   16   18 #>   [778,]   14   15   18 #>   [779,]   16   16   18 #>   [780,]   14   15   19 #>   [781,]   14   15   19 #>   [782,]   15   16   18 #>   [783,]   14   15   18 #>   [784,]   14   15   18 #>   [785,]   15   16   18 #>   [786,]   14   15   19 #>   [787,]   14   15   18 #>   [788,]   14   15   18 #>   [789,]   15   16   18 #>   [790,]   16   16   18 #>   [791,]   16   16   18 #>   [792,]   14   15   18 #>   [793,]   14   15   18 #>   [794,]   15   16   18 #>   [795,]   14   15   18 #>   [796,]   16   16   18 #>   [797,]   16   16   18 #>   [798,]   15   16   18 #>   [799,]   15   16   18 #>   [800,]   16   16   18 #>   [801,]   18   18   21 #>   [802,]   18   18   21 #>   [803,]   18   18   21 #>   [804,]   18   18   21 #>   [805,]   18   18   21 #>   [806,]   18   18   21 #>   [807,]   17   17   20 #>   [808,]   18   18   21 #>   [809,]   18   18   22 #>   [810,]   18   18   21 #>   [811,]   18   18   21 #>   [812,]   18   18   21 #>   [813,]   18   18   22 #>   [814,]   18   18   21 #>   [815,]   18   18   21 #>   [816,]   18   18   21 #>   [817,]   18   18   22 #>   [818,]   18   18   22 #>   [819,]   18   18   21 #>   [820,]   18   18   21 #>   [821,]   17   17   20 #>   [822,]   18   18   21 #>   [823,]   18   18   21 #>   [824,]   18   18   21 #>   [825,]   18   18   21 #>   [826,]   18   18   21 #>   [827,]   18   18   21 #>   [828,]   18   18   21 #>   [829,]   18   18   21 #>   [830,]   18   18   21 #>   [831,]   18   18   21 #>   [832,]   18   18   21 #>   [833,]   18   18   21 #>   [834,]   18   18   21 #>   [835,]   18   18   21 #>   [836,]   18   18   21 #>   [837,]   18   18   21 #>   [838,]   18   18   21 #>   [839,]   17   17   20 #>   [840,]   18   18   21 #>   [841,]   18   18   21 #>   [842,]   18   18   22 #>   [843,]   18   18   21 #>   [844,]   18   18   21 #>   [845,]   18   18   21 #>   [846,]   18   18   21 #>   [847,]   18   18   21 #>   [848,]   18   18   21 #>   [849,]   17   17   20 #>   [850,]   18   18   21 #>   [851,]   18   18   22 #>   [852,]   18   18   21 #>   [853,]   18   18   22 #>   [854,]   18   18   21 #>   [855,]   18   18   21 #>   [856,]   18   18   21 #>   [857,]   18   18   21 #>   [858,]   18   18   21 #>   [859,]   18   18   21 #>   [860,]   18   18   21 #>   [861,]   18   18   21 #>   [862,]   17   17   20 #>   [863,]   18   18   21 #>   [864,]   18   18   21 #>   [865,]   18   18   22 #>   [866,]   18   18   21 #>   [867,]   18   18   21 #>   [868,]   18   18   21 #>   [869,]   18   18   21 #>   [870,]   17   17   20 #>   [871,]   18   18   21 #>   [872,]   18   18   21 #>   [873,]   18   18   21 #>   [874,]   18   18   21 #>   [875,]   18   18   21 #>   [876,]   18   18   21 #>   [877,]   18   18   21 #>   [878,]   18   18   21 #>   [879,]   18   18   22 #>   [880,]   17   17   20 #>   [881,]   18   18   21 #>   [882,]   18   18   22 #>   [883,]   18   18   21 #>   [884,]   18   18   22 #>   [885,]   18   18   21 #>   [886,]   18   18   21 #>   [887,]   18   18   21 #>   [888,]   18   18   21 #>   [889,]   18   18   21 #>   [890,]   18   18   21 #>   [891,]   18   18   22 #>   [892,]   18   18   21 #>   [893,]   18   18   22 #>   [894,]   18   18   22 #>   [895,]   17   17   20 #>   [896,]   18   18   21 #>   [897,]   18   18   21 #>   [898,]   18   18   21 #>   [899,]   18   18   21 #>   [900,]   18   18   21 #>   [901,]   20   19   23 #>   [902,]   19   20   24 #>   [903,]   19   20   24 #>   [904,]   19   20   24 #>   [905,]   20   19   23 #>   [906,]   19   20   24 #>   [907,]   19   20   24 #>   [908,]   19   20   24 #>   [909,]   19   21   24 #>   [910,]   19   20   24 #>   [911,]   19   20   24 #>   [912,]   19   20   24 #>   [913,]   19   21   24 #>   [914,]   20   19   23 #>   [915,]   20   19   23 #>   [916,]   19   20   24 #>   [917,]   19   20   24 #>   [918,]   20   19   23 #>   [919,]   19   20   24 #>   [920,]   19   20   24 #>   [921,]   19   20   24 #>   [922,]   19   20   24 #>   [923,]   19   20   24 #>   [924,]   19   20   24 #>   [925,]   19   20   24 #>   [926,]   19   20   24 #>   [927,]   20   19   23 #>   [928,]   19   20   24 #>   [929,]   19   20   24 #>   [930,]   19   20   24 #>   [931,]   19   20   24 #>   [932,]   20   19   23 #>   [933,]   19   20   24 #>   [934,]   19   20   24 #>   [935,]   19   20   24 #>   [936,]   19   20   24 #>   [937,]   19   20   24 #>   [938,]   19   20   24 #>   [939,]   19   20   24 #>   [940,]   19   20   24 #>   [941,]   19   20   24 #>   [942,]   19   21   24 #>   [943,]   20   19   23 #>   [944,]   19   20   24 #>   [945,]   19   20   24 #>   [946,]   19   20   24 #>   [947,]   19   20   24 #>   [948,]   19   20   24 #>   [949,]   19   20   24 #>   [950,]   19   20   24 #>   [951,]   19   21   24 #>   [952,]   19   20   24 #>   [953,]   19   21   24 #>   [954,]   19   20   24 #>   [955,]   19   20   24 #>   [956,]   19   20   24 #>   [957,]   19   20   24 #>   [958,]   20   19   23 #>   [959,]   20   19   23 #>   [960,]   19   20   24 #>   [961,]   20   19   23 #>   [962,]   19   20   24 #>   [963,]   19   20   24 #>   [964,]   19   20   24 #>   [965,]   19   21   24 #>   [966,]   19   20   24 #>   [967,]   19   20   24 #>   [968,]   19   20   24 #>   [969,]   19   20   24 #>   [970,]   20   19   23 #>   [971,]   20   19   23 #>   [972,]   19   20   24 #>   [973,]   19   20   24 #>   [974,]   19   20   24 #>   [975,]   20   19   23 #>   [976,]   19   20   24 #>   [977,]   19   20   24 #>   [978,]   19   20   24 #>   [979,]   20   19   23 #>   [980,]   19   20   24 #>   [981,]   19   20   24 #>   [982,]   19   21   24 #>   [983,]   19   20   24 #>   [984,]   19   21   24 #>   [985,]   19   20   24 #>   [986,]   19   20   24 #>   [987,]   20   19   23 #>   [988,]   19   20   24 #>   [989,]   19   20   24 #>   [990,]   19   20   24 #>   [991,]   20   19   23 #>   [992,]   19   20   24 #>   [993,]   19   21   24 #>   [994,]   19   21   24 #>   [995,]   20   19   23 #>   [996,]   19   20   24 #>   [997,]   19   20   24 #>   [998,]   19   20   24 #>   [999,]   19   20   24 #>  [1000,]   20   19   23 #>  [1001,]   22   23   25 #>  [1002,]   21   22   26 #>  [1003,]   22   23   25 #>  [1004,]   22   23   25 #>  [1005,]   22   23   25 #>  [1006,]   21   22   26 #>  [1007,]   22   23   25 #>  [1008,]   22   23   25 #>  [1009,]   22   23   25 #>  [1010,]   22   23   25 #>  [1011,]   21   22   26 #>  [1012,]   21   22   26 #>  [1013,]   22   23   25 #>  [1014,]   22   23   25 #>  [1015,]   21   22   26 #>  [1016,]   22   23   25 #>  [1017,]   21   22   26 #>  [1018,]   22   23   25 #>  [1019,]   21   22   26 #>  [1020,]   22   23   25 #>  [1021,]   22   23   25 #>  [1022,]   22   23   25 #>  [1023,]   21   22   26 #>  [1024,]   22   23   25 #>  [1025,]   22   23   25 #>  [1026,]   21   22   26 #>  [1027,]   22   23   25 #>  [1028,]   22   23   25 #>  [1029,]   21   22   26 #>  [1030,]   21   22   26 #>  [1031,]   21   22   26 #>  [1032,]   22   23   25 #>  [1033,]   22   23   25 #>  [1034,]   21   22   26 #>  [1035,]   21   22   26 #>  [1036,]   22   23   25 #>  [1037,]   21   22   26 #>  [1038,]   22   23   25 #>  [1039,]   22   23   25 #>  [1040,]   22   23   25 #>  [1041,]   22   23   25 #>  [1042,]   21   22   26 #>  [1043,]   21   22   26 #>  [1044,]   21   22   26 #>  [1045,]   22   23   25 #>  [1046,]   21   22   26 #>  [1047,]   21   22   26 #>  [1048,]   21   22   26 #>  [1049,]   22   23   25 #>  [1050,]   22   23   25 #>  [1051,]   22   23   25 #>  [1052,]   22   23   25 #>  [1053,]   22   23   25 #>  [1054,]   22   23   25 #>  [1055,]   22   23   25 #>  [1056,]   21   22   26 #>  [1057,]   22   23   25 #>  [1058,]   22   23   25 #>  [1059,]   22   23   25 #>  [1060,]   21   22   26 #>  [1061,]   21   22   26 #>  [1062,]   22   23   25 #>  [1063,]   21   22   26 #>  [1064,]   21   22   26 #>  [1065,]   21   22   26 #>  [1066,]   21   22   26 #>  [1067,]   22   23   25 #>  [1068,]   21   22   26 #>  [1069,]   22   23   25 #>  [1070,]   21   22   26 #>  [1071,]   22   23   25 #>  [1072,]   22   23   25 #>  [1073,]   22   23   25 #>  [1074,]   22   23   25 #>  [1075,]   21   22   26 #>  [1076,]   22   23   25 #>  [1077,]   22   23   25 #>  [1078,]   21   22   26 #>  [1079,]   21   22   26 #>  [1080,]   22   23   25 #>  [1081,]   21   22   26 #>  [1082,]   22   23   25 #>  [1083,]   22   23   25 #>  [1084,]   22   23   25 #>  [1085,]   22   23   25 #>  [1086,]   22   23   25 #>  [1087,]   22   23   25 #>  [1088,]   22   23   25 #>  [1089,]   22   23   25 #>  [1090,]   22   23   25 #>  [1091,]   22   23   25 #>  [1092,]   21   22   26 #>  [1093,]   21   22   26 #>  [1094,]   21   22   26 #>  [1095,]   21   22   26 #>  [1096,]   21   22   26 #>  [1097,]   22   23   25 #>  [1098,]   22   23   25 #>  [1099,]   22   23   25 #>  [1100,]   21   22   26 #>  [1101,]   24   24   27 #>  [1102,]   24   24   28 #>  [1103,]   24   24   28 #>  [1104,]   24   24   27 #>  [1105,]   24   25   27 #>  [1106,]   24   24   28 #>  [1107,]   24   24   27 #>  [1108,]   24   24   27 #>  [1109,]   24   24   27 #>  [1110,]   24   24   27 #>  [1111,]   24   24   27 #>  [1112,]   24   24   28 #>  [1113,]   24   24   27 #>  [1114,]   24   24   27 #>  [1115,]   24   25   27 #>  [1116,]   24   24   27 #>  [1117,]   24   24   27 #>  [1118,]   24   25   28 #>  [1119,]   24   24   28 #>  [1120,]   24   24   28 #>  [1121,]   24   24   27 #>  [1122,]   24   24   27 #>  [1123,]   24   24   27 #>  [1124,]   24   24   27 #>  [1125,]   23   24   28 #>  [1126,]   24   24   27 #>  [1127,]   24   25   27 #>  [1128,]   24   24   28 #>  [1129,]   24   24   27 #>  [1130,]   24   24   27 #>  [1131,]   24   24   28 #>  [1132,]   24   25   28 #>  [1133,]   24   24   28 #>  [1134,]   24   24   28 #>  [1135,]   24   24   27 #>  [1136,]   24   24   27 #>  [1137,]   24   24   27 #>  [1138,]   24   24   27 #>  [1139,]   24   24   27 #>  [1140,]   24   24   27 #>  [1141,]   24   24   27 #>  [1142,]   24   24   28 #>  [1143,]   24   24   27 #>  [1144,]   24   24   27 #>  [1145,]   24   24   27 #>  [1146,]   24   24   27 #>  [1147,]   24   24   27 #>  [1148,]   24   24   27 #>  [1149,]   24   24   27 #>  [1150,]   24   24   27 #>  [1151,]   24   24   27 #>  [1152,]   24   24   27 #>  [1153,]   24   24   27 #>  [1154,]   24   24   27 #>  [1155,]   24   24   27 #>  [1156,]   23   24   27 #>  [1157,]   24   24   27 #>  [1158,]   24   24   27 #>  [1159,]   24   24   27 #>  [1160,]   24   24   28 #>  [1161,]   24   24   27 #>  [1162,]   24   24   27 #>  [1163,]   24   24   27 #>  [1164,]   24   24   28 #>  [1165,]   23   24   28 #>  [1166,]   24   24   27 #>  [1167,]   24   24   27 #>  [1168,]   24   24   27 #>  [1169,]   24   24   27 #>  [1170,]   24   24   28 #>  [1171,]   24   25   28 #>  [1172,]   24   24   27 #>  [1173,]   24   24   28 #>  [1174,]   24   24   27 #>  [1175,]   24   25   27 #>  [1176,]   24   24   27 #>  [1177,]   24   24   27 #>  [1178,]   24   24   27 #>  [1179,]   24   24   27 #>  [1180,]   23   24   27 #>  [1181,]   24   24   27 #>  [1182,]   24   24   27 #>  [1183,]   24   24   27 #>  [1184,]   24   24   28 #>  [1185,]   23   24   27 #>  [1186,]   24   24   27 #>  [1187,]   24   24   27 #>  [1188,]   24   24   27 #>  [1189,]   24   24   27 #>  [1190,]   24   24   27 #>  [1191,]   24   25   27 #>  [1192,]   24   24   27 #>  [1193,]   24   24   28 #>  [1194,]   24   24   27 #>  [1195,]   24   25   27 #>  [1196,]   24   24   27 #>  [1197,]   24   24   28 #>  [1198,]   24   24   28 #>  [1199,]   24   24   27 #>  [1200,]   24   25   28 #>  [1201,]   26   27   30 #>  [1202,]   25   26   29 #>  [1203,]   26   27   30 #>  [1204,]   26   27   30 #>  [1205,]   26   27   30 #>  [1206,]   25   26   29 #>  [1207,]   26   27   30 #>  [1208,]   26   27   30 #>  [1209,]   26   27   30 #>  [1210,]   26   27   30 #>  [1211,]   25   26   29 #>  [1212,]   25   26   29 #>  [1213,]   26   27   30 #>  [1214,]   26   27   30 #>  [1215,]   25   26   29 #>  [1216,]   26   27   30 #>  [1217,]   25   26   29 #>  [1218,]   26   27   30 #>  [1219,]   26   27   30 #>  [1220,]   26   27   30 #>  [1221,]   26   27   30 #>  [1222,]   26   27   30 #>  [1223,]   25   26   29 #>  [1224,]   26   27   30 #>  [1225,]   26   27   30 #>  [1226,]   26   27   30 #>  [1227,]   26   27   30 #>  [1228,]   26   27   30 #>  [1229,]   25   26   29 #>  [1230,]   25   26   29 #>  [1231,]   25   26   29 #>  [1232,]   26   27   30 #>  [1233,]   26   27   30 #>  [1234,]   25   26   29 #>  [1235,]   26   27   30 #>  [1236,]   26   27   30 #>  [1237,]   25   26   29 #>  [1238,]   26   27   30 #>  [1239,]   26   27   30 #>  [1240,]   26   27   30 #>  [1241,]   26   27   30 #>  [1242,]   25   26   29 #>  [1243,]   25   26   29 #>  [1244,]   25   26   29 #>  [1245,]   26   27   30 #>  [1246,]   26   27   30 #>  [1247,]   25   26   29 #>  [1248,]   25   26   29 #>  [1249,]   26   27   30 #>  [1250,]   26   27   30 #>  [1251,]   26   27   30 #>  [1252,]   26   27   30 #>  [1253,]   26   27   30 #>  [1254,]   26   27   30 #>  [1255,]   26   27   30 #>  [1256,]   25   26   29 #>  [1257,]   26   27   30 #>  [1258,]   26   27   30 #>  [1259,]   26   27   30 #>  [1260,]   25   26   29 #>  [1261,]   25   26   29 #>  [1262,]   26   27   30 #>  [1263,]   25   26   29 #>  [1264,]   25   26   29 #>  [1265,]   25   26   29 #>  [1266,]   25   26   29 #>  [1267,]   26   27   30 #>  [1268,]   26   27   30 #>  [1269,]   26   27   30 #>  [1270,]   25   26   29 #>  [1271,]   26   27   30 #>  [1272,]   26   27   30 #>  [1273,]   26   27   30 #>  [1274,]   26   27   30 #>  [1275,]   25   26   29 #>  [1276,]   26   27   30 #>  [1277,]   26   27   30 #>  [1278,]   25   26   29 #>  [1279,]   25   26   29 #>  [1280,]   26   27   30 #>  [1281,]   25   26   29 #>  [1282,]   26   27   30 #>  [1283,]   26   27   30 #>  [1284,]   26   27   30 #>  [1285,]   26   27   30 #>  [1286,]   26   27   30 #>  [1287,]   26   27   30 #>  [1288,]   26   27   30 #>  [1289,]   26   27   30 #>  [1290,]   26   27   30 #>  [1291,]   26   27   30 #>  [1292,]   25   26   29 #>  [1293,]   26   27   30 #>  [1294,]   25   26   29 #>  [1295,]   25   26   29 #>  [1296,]   26   27   30 #>  [1297,]   26   27   30 #>  [1298,]   26   27   30 #>  [1299,]   26   27   30 #>  [1300,]   25   26   29 #>  [1301,]   28   29   32 #>  [1302,]   28   29   32 #>  [1303,]   27   28   31 #>  [1304,]   28   29   32 #>  [1305,]   28   29   32 #>  [1306,]   28   29   32 #>  [1307,]   27   28   31 #>  [1308,]   27   28   31 #>  [1309,]   28   29   32 #>  [1310,]   28   29   32 #>  [1311,]   28   29   32 #>  [1312,]   28   29   32 #>  [1313,]   27   28   31 #>  [1314,]   28   29   32 #>  [1315,]   28   29   32 #>  [1316,]   27   28   31 #>  [1317,]   27   28   31 #>  [1318,]   28   29   32 #>  [1319,]   28   29   32 #>  [1320,]   27   28   31 #>  [1321,]   28   29   32 #>  [1322,]   27   28   31 #>  [1323,]   28   29   32 #>  [1324,]   27   28   31 #>  [1325,]   27   28   31 #>  [1326,]   28   29   32 #>  [1327,]   28   29   32 #>  [1328,]   28   29   32 #>  [1329,]   28   29   32 #>  [1330,]   28   29   32 #>  [1331,]   28   29   32 #>  [1332,]   28   29   32 #>  [1333,]   28   29   32 #>  [1334,]   28   29   32 #>  [1335,]   28   29   32 #>  [1336,]   28   29   32 #>  [1337,]   28   29   32 #>  [1338,]   28   29   32 #>  [1339,]   27   28   31 #>  [1340,]   27   28   31 #>  [1341,]   28   29   32 #>  [1342,]   28   29   32 #>  [1343,]   27   28   31 #>  [1344,]   27   28   31 #>  [1345,]   27   28   31 #>  [1346,]   27   28   31 #>  [1347,]   27   28   31 #>  [1348,]   28   29   32 #>  [1349,]   27   28   31 #>  [1350,]   27   28   31 #>  [1351,]   28   29   32 #>  [1352,]   28   29   32 #>  [1353,]   27   28   31 #>  [1354,]   27   28   31 #>  [1355,]   27   28   31 #>  [1356,]   27   28   31 #>  [1357,]   28   29   32 #>  [1358,]   28   29   32 #>  [1359,]   27   28   31 #>  [1360,]   28   29   32 #>  [1361,]   28   29   32 #>  [1362,]   28   29   32 #>  [1363,]   27   28   31 #>  [1364,]   28   29   32 #>  [1365,]   27   28   31 #>  [1366,]   27   28   31 #>  [1367,]   28   29   32 #>  [1368,]   28   29   32 #>  [1369,]   28   29   32 #>  [1370,]   27   28   31 #>  [1371,]   28   29   32 #>  [1372,]   27   28   31 #>  [1373,]   28   29   32 #>  [1374,]   28   29   32 #>  [1375,]   28   29   32 #>  [1376,]   28   29   32 #>  [1377,]   27   28   31 #>  [1378,]   27   28   31 #>  [1379,]   27   28   31 #>  [1380,]   28   29   32 #>  [1381,]   28   29   32 #>  [1382,]   28   29   32 #>  [1383,]   28   29   32 #>  [1384,]   27   28   31 #>  [1385,]   28   29   32 #>  [1386,]   27   28   31 #>  [1387,]   28   29   32 #>  [1388,]   28   29   32 #>  [1389,]   27   28   31 #>  [1390,]   27   28   31 #>  [1391,]   28   29   32 #>  [1392,]   28   29   32 #>  [1393,]   28   29   32 #>  [1394,]   27   28   31 #>  [1395,]   28   29   32 #>  [1396,]   28   29   32 #>  [1397,]   28   29   32 #>  [1398,]   27   28   31 #>  [1399,]   28   29   32 #>  [1400,]   27   28   31 #>  [1401,]   30   31   34 #>  [1402,]   30   31   34 #>  [1403,]   30   31   34 #>  [1404,]   30   31   34 #>  [1405,]   30   31   34 #>  [1406,]   30   31   34 #>  [1407,]   30   31   34 #>  [1408,]   30   31   34 #>  [1409,]   30   31   34 #>  [1410,]   30   31   34 #>  [1411,]   30   31   34 #>  [1412,]   30   31   34 #>  [1413,]   30   31   34 #>  [1414,]   30   31   34 #>  [1415,]   30   31   34 #>  [1416,]   30   31   34 #>  [1417,]   30   31   34 #>  [1418,]   30   31   34 #>  [1419,]   30   31   34 #>  [1420,]   29   30   33 #>  [1421,]   29   30   33 #>  [1422,]   30   31   34 #>  [1423,]   30   31   34 #>  [1424,]   30   31   34 #>  [1425,]   29   30   33 #>  [1426,]   30   31   34 #>  [1427,]   30   31   34 #>  [1428,]   30   31   34 #>  [1429,]   30   31   34 #>  [1430,]   30   31   34 #>  [1431,]   30   31   34 #>  [1432,]   30   31   34 #>  [1433,]   30   31   34 #>  [1434,]   30   31   34 #>  [1435,]   30   31   34 #>  [1436,]   30   31   34 #>  [1437,]   30   31   34 #>  [1438,]   30   31   34 #>  [1439,]   30   31   34 #>  [1440,]   30   31   34 #>  [1441,]   30   31   34 #>  [1442,]   30   31   34 #>  [1443,]   30   31   34 #>  [1444,]   30   31   34 #>  [1445,]   30   31   34 #>  [1446,]   30   31   34 #>  [1447,]   30   31   34 #>  [1448,]   30   31   34 #>  [1449,]   30   31   34 #>  [1450,]   30   31   34 #>  [1451,]   30   31   34 #>  [1452,]   30   31   34 #>  [1453,]   30   31   34 #>  [1454,]   30   31   34 #>  [1455,]   30   31   34 #>  [1456,]   29   30   33 #>  [1457,]   30   31   34 #>  [1458,]   30   31   34 #>  [1459,]   30   31   34 #>  [1460,]   30   31   34 #>  [1461,]   30   31   34 #>  [1462,]   30   31   34 #>  [1463,]   30   31   34 #>  [1464,]   30   31   34 #>  [1465,]   29   30   33 #>  [1466,]   30   31   34 #>  [1467,]   30   31   34 #>  [1468,]   30   31   34 #>  [1469,]   30   31   34 #>  [1470,]   30   31   34 #>  [1471,]   30   31   34 #>  [1472,]   30   31   34 #>  [1473,]   30   31   34 #>  [1474,]   29   30   33 #>  [1475,]   30   31   34 #>  [1476,]   30   31   34 #>  [1477,]   30   31   34 #>  [1478,]   30   31   34 #>  [1479,]   30   31   34 #>  [1480,]   29   30   33 #>  [1481,]   30   31   34 #>  [1482,]   30   31   34 #>  [1483,]   30   31   34 #>  [1484,]   30   31   34 #>  [1485,]   29   30   33 #>  [1486,]   29   30   33 #>  [1487,]   30   31   34 #>  [1488,]   30   31   34 #>  [1489,]   29   30   33 #>  [1490,]   30   31   34 #>  [1491,]   30   31   34 #>  [1492,]   30   31   34 #>  [1493,]   30   31   34 #>  [1494,]   30   31   34 #>  [1495,]   30   31   34 #>  [1496,]   30   31   34 #>  [1497,]   30   31   34 #>  [1498,]   30   31   34 #>  [1499,]   30   31   34 #>  [1500,]   30   31   34 #>  [1501,]   32   33   36 #>  [1502,]   32   33   36 #>  [1503,]   32   33   35 #>  [1504,]   31   32   35 #>  [1505,]   32   33   35 #>  [1506,]   32   33   36 #>  [1507,]   32   33   35 #>  [1508,]   31   32   35 #>  [1509,]   31   32   35 #>  [1510,]   32   33   35 #>  [1511,]   31   32   35 #>  [1512,]   32   33   35 #>  [1513,]   32   33   36 #>  [1514,]   32   33   36 #>  [1515,]   32   33   36 #>  [1516,]   32   33   36 #>  [1517,]   31   32   36 #>  [1518,]   32   33   35 #>  [1519,]   32   33   35 #>  [1520,]   32   33   35 #>  [1521,]   32   33   36 #>  [1522,]   31   32   35 #>  [1523,]   32   33   35 #>  [1524,]   32   33   35 #>  [1525,]   32   33   35 #>  [1526,]   32   33   35 #>  [1527,]   31   32   35 #>  [1528,]   32   33   35 #>  [1529,]   32   33   36 #>  [1530,]   32   33   35 #>  [1531,]   32   33   35 #>  [1532,]   32   33   35 #>  [1533,]   32   33   36 #>  [1534,]   32   33   35 #>  [1535,]   31   32   35 #>  [1536,]   32   33   35 #>  [1537,]   32   33   35 #>  [1538,]   32   33   35 #>  [1539,]   32   33   35 #>  [1540,]   32   33   35 #>  [1541,]   32   33   36 #>  [1542,]   32   33   35 #>  [1543,]   32   33   35 #>  [1544,]   31   32   36 #>  [1545,]   32   33   35 #>  [1546,]   32   33   35 #>  [1547,]   32   33   35 #>  [1548,]   32   33   35 #>  [1549,]   32   33   35 #>  [1550,]   32   33   36 #>  [1551,]   32   33   35 #>  [1552,]   31   32   35 #>  [1553,]   32   33   35 #>  [1554,]   32   33   35 #>  [1555,]   32   33   35 #>  [1556,]   32   33   35 #>  [1557,]   32   33   35 #>  [1558,]   31   32   35 #>  [1559,]   32   33   36 #>  [1560,]   32   33   35 #>  [1561,]   32   33   36 #>  [1562,]   32   33   35 #>  [1563,]   32   33   35 #>  [1564,]   32   33   35 #>  [1565,]   32   33   35 #>  [1566,]   31   32   35 #>  [1567,]   32   33   35 #>  [1568,]   32   33   36 #>  [1569,]   32   33   35 #>  [1570,]   32   33   36 #>  [1571,]   32   33   35 #>  [1572,]   32   33   35 #>  [1573,]   32   33   36 #>  [1574,]   32   33   35 #>  [1575,]   32   33   35 #>  [1576,]   32   33   36 #>  [1577,]   32   33   35 #>  [1578,]   32   33   35 #>  [1579,]   32   33   35 #>  [1580,]   32   33   35 #>  [1581,]   31   32   36 #>  [1582,]   31   32   35 #>  [1583,]   32   33   36 #>  [1584,]   32   33   35 #>  [1585,]   32   33   35 #>  [1586,]   32   33   36 #>  [1587,]   31   32   35 #>  [1588,]   32   33   35 #>  [1589,]   32   33   35 #>  [1590,]   31   32   35 #>  [1591,]   32   33   35 #>  [1592,]   31   32   35 #>  [1593,]   32   33   36 #>  [1594,]   32   33   35 #>  [1595,]   31   32   35 #>  [1596,]   32   33   36 #>  [1597,]   32   33   35 #>  [1598,]   32   33   35 #>  [1599,]   31   32   36 #>  [1600,]   32   33   35 #>  [1601,]   34   34   37 #>  [1602,]   34   34   38 #>  [1603,]   33   34   38 #>  [1604,]   34   34   37 #>  [1605,]   34   34   37 #>  [1606,]   33   34   38 #>  [1607,]   33   34   38 #>  [1608,]   33   34   37 #>  [1609,]   34   34   37 #>  [1610,]   34   34   37 #>  [1611,]   34   34   37 #>  [1612,]   34   34   38 #>  [1613,]   34   34   37 #>  [1614,]   34   34   37 #>  [1615,]   34   34   37 #>  [1616,]   34   34   37 #>  [1617,]   34   34   37 #>  [1618,]   34   34   38 #>  [1619,]   34   34   38 #>  [1620,]   33   34   38 #>  [1621,]   33   34   37 #>  [1622,]   34   34   37 #>  [1623,]   33   34   38 #>  [1624,]   34   34   37 #>  [1625,]   33   34   38 #>  [1626,]   34   34   37 #>  [1627,]   34   34   37 #>  [1628,]   34   34   38 #>  [1629,]   33   34   37 #>  [1630,]   34   34   37 #>  [1631,]   34   34   38 #>  [1632,]   34   34   38 #>  [1633,]   34   34   38 #>  [1634,]   33   34   38 #>  [1635,]   33   34   37 #>  [1636,]   33   34   37 #>  [1637,]   33   34   37 #>  [1638,]   34   34   37 #>  [1639,]   34   34   37 #>  [1640,]   34   34   38 #>  [1641,]   33   34   37 #>  [1642,]   33   34   38 #>  [1643,]   34   34   37 #>  [1644,]   33   34   37 #>  [1645,]   33   34   37 #>  [1646,]   34   34   37 #>  [1647,]   34   34   37 #>  [1648,]   34   34   38 #>  [1649,]   34   34   37 #>  [1650,]   33   34   37 #>  [1651,]   34   34   37 #>  [1652,]   34   34   37 #>  [1653,]   33   34   37 #>  [1654,]   33   34   37 #>  [1655,]   33   34   37 #>  [1656,]   33   34   38 #>  [1657,]   33   34   37 #>  [1658,]   34   34   37 #>  [1659,]   34   34   37 #>  [1660,]   33   34   38 #>  [1661,]   34   34   38 #>  [1662,]   34   34   37 #>  [1663,]   34   34   37 #>  [1664,]   33   34   38 #>  [1665,]   33   34   38 #>  [1666,]   34   34   37 #>  [1667,]   33   34   37 #>  [1668,]   34   34   37 #>  [1669,]   34   34   37 #>  [1670,]   34   34   38 #>  [1671,]   34   34   38 #>  [1672,]   34   34   37 #>  [1673,]   33   34   38 #>  [1674,]   33   34   37 #>  [1675,]   34   34   37 #>  [1676,]   33   34   37 #>  [1677,]   34   34   37 #>  [1678,]   34   34   38 #>  [1679,]   34   34   37 #>  [1680,]   33   34   37 #>  [1681,]   33   34   37 #>  [1682,]   33   34   37 #>  [1683,]   34   34   37 #>  [1684,]   33   34   38 #>  [1685,]   33   34   37 #>  [1686,]   33   34   37 #>  [1687,]   34   34   37 #>  [1688,]   33   34   37 #>  [1689,]   33   34   37 #>  [1690,]   34   34   37 #>  [1691,]   34   34   37 #>  [1692,]   34   34   37 #>  [1693,]   34   34   38 #>  [1694,]   33   34   37 #>  [1695,]   34   34   37 #>  [1696,]   34   34   37 #>  [1697,]   33   34   38 #>  [1698,]   33   34   38 #>  [1699,]   33   34   37 #>  [1700,]   34   34   38 #>  [1701,]   36   36   40 #>  [1702,]   35   35   39 #>  [1703,]   35   35   39 #>  [1704,]   35   35   39 #>  [1705,]   35   35   39 #>  [1706,]   36   36   40 #>  [1707,]   35   35   39 #>  [1708,]   35   35   39 #>  [1709,]   35   35   39 #>  [1710,]   35   35   39 #>  [1711,]   35   35   39 #>  [1712,]   35   35   39 #>  [1713,]   36   36   40 #>  [1714,]   36   36   40 #>  [1715,]   36   36   40 #>  [1716,]   36   36   40 #>  [1717,]   35   35   39 #>  [1718,]   35   35   39 #>  [1719,]   35   35   39 #>  [1720,]   35   35   39 #>  [1721,]   36   36   40 #>  [1722,]   35   35   39 #>  [1723,]   35   35   39 #>  [1724,]   35   35   39 #>  [1725,]   35   35   39 #>  [1726,]   35   35   39 #>  [1727,]   35   35   39 #>  [1728,]   35   35   39 #>  [1729,]   36   36   40 #>  [1730,]   35   35   39 #>  [1731,]   35   35   39 #>  [1732,]   35   35   39 #>  [1733,]   36   36   40 #>  [1734,]   35   35   39 #>  [1735,]   35   35   39 #>  [1736,]   35   35   39 #>  [1737,]   35   35   39 #>  [1738,]   35   35   39 #>  [1739,]   35   35   39 #>  [1740,]   35   35   39 #>  [1741,]   36   36   40 #>  [1742,]   35   35   39 #>  [1743,]   35   35   39 #>  [1744,]   36   36   40 #>  [1745,]   35   35   39 #>  [1746,]   35   35   39 #>  [1747,]   35   35   39 #>  [1748,]   35   35   39 #>  [1749,]   35   35   39 #>  [1750,]   36   36   40 #>  [1751,]   35   35   39 #>  [1752,]   35   35   39 #>  [1753,]   35   35   39 #>  [1754,]   35   35   39 #>  [1755,]   35   35   39 #>  [1756,]   35   35   39 #>  [1757,]   35   35   39 #>  [1758,]   35   35   39 #>  [1759,]   36   36   40 #>  [1760,]   35   35   39 #>  [1761,]   36   36   40 #>  [1762,]   35   35   39 #>  [1763,]   35   35   39 #>  [1764,]   35   35   39 #>  [1765,]   35   35   39 #>  [1766,]   35   35   39 #>  [1767,]   35   35   39 #>  [1768,]   36   36   40 #>  [1769,]   35   35   39 #>  [1770,]   36   36   40 #>  [1771,]   35   35   39 #>  [1772,]   35   35   39 #>  [1773,]   36   36   40 #>  [1774,]   35   35   39 #>  [1775,]   35   35   39 #>  [1776,]   35   35   39 #>  [1777,]   35   35   39 #>  [1778,]   35   35   39 #>  [1779,]   35   35   39 #>  [1780,]   35   35   39 #>  [1781,]   35   35   39 #>  [1782,]   35   35   39 #>  [1783,]   36   36   40 #>  [1784,]   35   35   39 #>  [1785,]   35   35   39 #>  [1786,]   36   36   40 #>  [1787,]   35   35   39 #>  [1788,]   35   35   39 #>  [1789,]   35   35   39 #>  [1790,]   35   35   39 #>  [1791,]   35   35   39 #>  [1792,]   35   35   39 #>  [1793,]   35   35   39 #>  [1794,]   35   35   39 #>  [1795,]   35   35   39 #>  [1796,]   36   36   40 #>  [1797,]   35   35   39 #>  [1798,]   35   35   39 #>  [1799,]   36   36   40 #>  [1800,]   35   35   39 #>  [1801,]   38   38   41 #>  [1802,]   38   38   41 #>  [1803,]   37   37   42 #>  [1804,]   37   37   42 #>  [1805,]   37   37   42 #>  [1806,]   38   38   41 #>  [1807,]   38   38   41 #>  [1808,]   37   37   42 #>  [1809,]   37   37   42 #>  [1810,]   37   37   42 #>  [1811,]   38   38   41 #>  [1812,]   38   38   41 #>  [1813,]   38   38   41 #>  [1814,]   38   38   41 #>  [1815,]   38   38   41 #>  [1816,]   38   38   41 #>  [1817,]   38   38   41 #>  [1818,]   37   37   42 #>  [1819,]   38   38   41 #>  [1820,]   37   37   42 #>  [1821,]   38   38   41 #>  [1822,]   38   38   41 #>  [1823,]   38   38   41 #>  [1824,]   37   37   42 #>  [1825,]   38   38   41 #>  [1826,]   38   38   41 #>  [1827,]   38   38   41 #>  [1828,]   38   38   41 #>  [1829,]   38   38   41 #>  [1830,]   37   37   42 #>  [1831,]   38   38   41 #>  [1832,]   38   38   41 #>  [1833,]   38   38   41 #>  [1834,]   38   38   41 #>  [1835,]   38   38   41 #>  [1836,]   38   38   41 #>  [1837,]   38   38   41 #>  [1838,]   38   38   41 #>  [1839,]   37   37   42 #>  [1840,]   38   38   41 #>  [1841,]   38   38   41 #>  [1842,]   38   38   41 #>  [1843,]   37   37   42 #>  [1844,]   38   38   41 #>  [1845,]   37   37   42 #>  [1846,]   38   38   41 #>  [1847,]   38   38   41 #>  [1848,]   38   38   41 #>  [1849,]   37   37   42 #>  [1850,]   38   38   41 #>  [1851,]   37   37   42 #>  [1852,]   38   38   41 #>  [1853,]   37   37   42 #>  [1854,]   38   38   41 #>  [1855,]   38   38   41 #>  [1856,]   37   37   42 #>  [1857,]   38   38   41 #>  [1858,]   38   38   41 #>  [1859,]   38   38   41 #>  [1860,]   37   37   42 #>  [1861,]   38   38   41 #>  [1862,]   38   38   41 #>  [1863,]   38   38   41 #>  [1864,]   37   37   42 #>  [1865,]   37   37   42 #>  [1866,]   37   37   42 #>  [1867,]   37   37   42 #>  [1868,]   38   38   41 #>  [1869,]   38   38   41 #>  [1870,]   38   38   41 #>  [1871,]   38   38   41 #>  [1872,]   38   38   41 #>  [1873,]   38   38   41 #>  [1874,]   38   38   41 #>  [1875,]   38   38   41 #>  [1876,]   38   38   41 #>  [1877,]   38   38   41 #>  [1878,]   37   37   42 #>  [1879,]   38   38   41 #>  [1880,]   38   38   41 #>  [1881,]   38   38   41 #>  [1882,]   38   38   41 #>  [1883,]   38   38   41 #>  [1884,]   38   38   41 #>  [1885,]   37   37   42 #>  [1886,]   38   38   41 #>  [1887,]   38   38   41 #>  [1888,]   37   37   42 #>  [1889,]   37   37   42 #>  [1890,]   38   38   41 #>  [1891,]   37   37   42 #>  [1892,]   38   38   41 #>  [1893,]   38   38   41 #>  [1894,]   38   38   41 #>  [1895,]   37   37   42 #>  [1896,]   38   38   41 #>  [1897,]   38   38   41 #>  [1898,]   38   38   41 #>  [1899,]   38   38   41 #>  [1900,]   38   38   41 #>  [1901,]   40   40   44 #>  [1902,]   40   39   43 #>  [1903,]   39   39   43 #>  [1904,]   39   40   44 #>  [1905,]   40   40   44 #>  [1906,]   40   40   44 #>  [1907,]   39   39   43 #>  [1908,]   40   40   44 #>  [1909,]   40   40   44 #>  [1910,]   40   40   44 #>  [1911,]   40   40   44 #>  [1912,]   39   40   44 #>  [1913,]   40   39   43 #>  [1914,]   40   40   44 #>  [1915,]   40   40   44 #>  [1916,]   40   39   43 #>  [1917,]   40   40   44 #>  [1918,]   40   39   43 #>  [1919,]   40   39   43 #>  [1920,]   40   40   44 #>  [1921,]   40   39   43 #>  [1922,]   40   39   43 #>  [1923,]   40   39   43 #>  [1924,]   40   39   43 #>  [1925,]   39   40   44 #>  [1926,]   40   40   44 #>  [1927,]   40   40   44 #>  [1928,]   40   40   44 #>  [1929,]   40   39   43 #>  [1930,]   40   39   43 #>  [1931,]   39   39   43 #>  [1932,]   40   39   43 #>  [1933,]   40   40   44 #>  [1934,]   40   39   43 #>  [1935,]   40   39   43 #>  [1936,]   40   39   43 #>  [1937,]   40   39   43 #>  [1938,]   40   40   44 #>  [1939,]   40   39   43 #>  [1940,]   40   39   43 #>  [1941,]   40   40   44 #>  [1942,]   40   40   44 #>  [1943,]   40   40   44 #>  [1944,]   40   39   43 #>  [1945,]   40   40   44 #>  [1946,]   40   40   44 #>  [1947,]   40   39   43 #>  [1948,]   40   39   43 #>  [1949,]   40   39   43 #>  [1950,]   40   40   44 #>  [1951,]   40   40   44 #>  [1952,]   39   40   44 #>  [1953,]   40   40   44 #>  [1954,]   40   39   43 #>  [1955,]   40   40   44 #>  [1956,]   40   40   44 #>  [1957,]   40   40   44 #>  [1958,]   40   40   44 #>  [1959,]   39   39   43 #>  [1960,]   39   40   44 #>  [1961,]   40   40   44 #>  [1962,]   40   39   43 #>  [1963,]   40   40   44 #>  [1964,]   40   40   44 #>  [1965,]   40   40   44 #>  [1966,]   40   40   44 #>  [1967,]   40   40   44 #>  [1968,]   40   40   44 #>  [1969,]   40   40   44 #>  [1970,]   40   39   43 #>  [1971,]   40   40   44 #>  [1972,]   40   40   44 #>  [1973,]   40   40   44 #>  [1974,]   40   40   44 #>  [1975,]   40   40   44 #>  [1976,]   40   40   44 #>  [1977,]   40   39   43 #>  [1978,]   40   40   44 #>  [1979,]   40   39   43 #>  [1980,]   40   39   43 #>  [1981,]   40   40   44 #>  [1982,]   40   40   44 #>  [1983,]   40   39   43 #>  [1984,]   40   40   44 #>  [1985,]   40   39   43 #>  [1986,]   40   39   43 #>  [1987,]   40   40   44 #>  [1988,]   40   40   44 #>  [1989,]   40   40   44 #>  [1990,]   40   40   44 #>  [1991,]   40   40   44 #>  [1992,]   40   40   44 #>  [1993,]   40   39   43 #>  [1994,]   40   40   44 #>  [1995,]   40   39   43 #>  [1996,]   39   40   44 #>  [1997,]   39   40   44 #>  [1998,]   40   39   43 #>  [1999,]   40   40   44 #>  [2000,]   40   39   43 #>  [2001,]   41   41   45 #>  [2002,]   42   42   46 #>  [2003,]   41   41   45 #>  [2004,]   42   42   46 #>  [2005,]   42   42   46 #>  [2006,]   41   41   45 #>  [2007,]   42   42   46 #>  [2008,]   42   42   46 #>  [2009,]   42   42   46 #>  [2010,]   42   42   46 #>  [2011,]   41   41   45 #>  [2012,]   42   42   46 #>  [2013,]   42   42   46 #>  [2014,]   42   42   46 #>  [2015,]   42   42   46 #>  [2016,]   41   41   45 #>  [2017,]   42   42   46 #>  [2018,]   42   42   46 #>  [2019,]   41   41   45 #>  [2020,]   42   42   46 #>  [2021,]   42   42   46 #>  [2022,]   42   42   46 #>  [2023,]   42   42   46 #>  [2024,]   42   42   46 #>  [2025,]   42   42   46 #>  [2026,]   42   42   46 #>  [2027,]   42   42   46 #>  [2028,]   41   41   45 #>  [2029,]   42   42   46 #>  [2030,]   42   42   46 #>  [2031,]   42   42   46 #>  [2032,]   42   42   46 #>  [2033,]   42   42   46 #>  [2034,]   41   41   45 #>  [2035,]   41   41   45 #>  [2036,]   42   42   46 #>  [2037,]   41   41   45 #>  [2038,]   41   41   45 #>  [2039,]   42   42   46 #>  [2040,]   42   42   46 #>  [2041,]   42   42   46 #>  [2042,]   42   42   46 #>  [2043,]   42   42   46 #>  [2044,]   42   42   46 #>  [2045,]   41   41   45 #>  [2046,]   42   42   46 #>  [2047,]   42   42   46 #>  [2048,]   42   42   46 #>  [2049,]   41   41   45 #>  [2050,]   42   42   46 #>  [2051,]   42   42   46 #>  [2052,]   41   41   45 #>  [2053,]   42   42   46 #>  [2054,]   42   42   46 #>  [2055,]   42   42   46 #>  [2056,]   42   42   46 #>  [2057,]   42   42   46 #>  [2058,]   42   42   46 #>  [2059,]   42   42   46 #>  [2060,]   42   42   46 #>  [2061,]   42   42   46 #>  [2062,]   42   42   46 #>  [2063,]   42   42   46 #>  [2064,]   41   41   45 #>  [2065,]   42   42   46 #>  [2066,]   42   42   46 #>  [2067,]   42   42   46 #>  [2068,]   41   41   45 #>  [2069,]   42   42   46 #>  [2070,]   42   42   46 #>  [2071,]   42   42   46 #>  [2072,]   41   41   45 #>  [2073,]   41   41   45 #>  [2074,]   42   42   46 #>  [2075,]   42   42   46 #>  [2076,]   42   42   46 #>  [2077,]   41   41   45 #>  [2078,]   42   42   46 #>  [2079,]   42   42   46 #>  [2080,]   42   42   46 #>  [2081,]   42   42   46 #>  [2082,]   42   42   46 #>  [2083,]   42   42   46 #>  [2084,]   42   42   46 #>  [2085,]   42   42   46 #>  [2086,]   42   42   46 #>  [2087,]   42   42   46 #>  [2088,]   42   42   46 #>  [2089,]   42   42   46 #>  [2090,]   42   42   46 #>  [2091,]   42   42   46 #>  [2092,]   42   42   46 #>  [2093,]   42   42   46 #>  [2094,]   41   41   45 #>  [2095,]   42   42   46 #>  [2096,]   41   41   45 #>  [2097,]   41   41   45 #>  [2098,]   42   42   46 #>  [2099,]   42   42   46 #>  [2100,]   41   41   45 #>  [2101,]   44   44   47 #>  [2102,]   43   43   47 #>  [2103,]   43   43   48 #>  [2104,]   44   44   47 #>  [2105,]   44   44   47 #>  [2106,]   44   44   48 #>  [2107,]   43   43   47 #>  [2108,]   44   44   47 #>  [2109,]   44   44   47 #>  [2110,]   43   43   47 #>  [2111,]   44   44   47 #>  [2112,]   44   44   48 #>  [2113,]   43   43   47 #>  [2114,]   44   44   47 #>  [2115,]   44   44   47 #>  [2116,]   43   43   47 #>  [2117,]   43   43   47 #>  [2118,]   43   43   47 #>  [2119,]   43   43   48 #>  [2120,]   44   44   48 #>  [2121,]   43   43   47 #>  [2122,]   43   43   47 #>  [2123,]   43   43   47 #>  [2124,]   43   43   47 #>  [2125,]   43   43   48 #>  [2126,]   44   44   47 #>  [2127,]   43   43   47 #>  [2128,]   44   44   48 #>  [2129,]   43   43   47 #>  [2130,]   43   43   47 #>  [2131,]   43   43   47 #>  [2132,]   43   43   47 #>  [2133,]   44   44   48 #>  [2134,]   43   43   48 #>  [2135,]   43   43   47 #>  [2136,]   43   43   47 #>  [2137,]   43   43   47 #>  [2138,]   44   44   47 #>  [2139,]   43   43   47 #>  [2140,]   43   43   47 #>  [2141,]   44   44   47 #>  [2142,]   44   44   47 #>  [2143,]   44   44   47 #>  [2144,]   43   43   47 #>  [2145,]   44   44   47 #>  [2146,]   44   44   47 #>  [2147,]   43   43   47 #>  [2148,]   43   43   47 #>  [2149,]   43   43   47 #>  [2150,]   44   44   47 #>  [2151,]   44   44   47 #>  [2152,]   44   44   47 #>  [2153,]   44   44   47 #>  [2154,]   43   43   47 #>  [2155,]   44   44   47 #>  [2156,]   44   44   47 #>  [2157,]   44   44   47 #>  [2158,]   44   44   47 #>  [2159,]   43   43   47 #>  [2160,]   44   44   48 #>  [2161,]   44   44   47 #>  [2162,]   43   43   47 #>  [2163,]   44   44   47 #>  [2164,]   44   44   47 #>  [2165,]   44   44   48 #>  [2166,]   44   44   47 #>  [2167,]   44   44   47 #>  [2168,]   44   44   47 #>  [2169,]   43   43   47 #>  [2170,]   43   43   48 #>  [2171,]   44   44   47 #>  [2172,]   44   44   47 #>  [2173,]   44   44   48 #>  [2174,]   44   44   47 #>  [2175,]   44   44   47 #>  [2176,]   44   44   47 #>  [2177,]   43   43   47 #>  [2178,]   44   44   47 #>  [2179,]   43   43   47 #>  [2180,]   43   43   47 #>  [2181,]   44   44   47 #>  [2182,]   43   43   47 #>  [2183,]   43   43   47 #>  [2184,]   44   44   47 #>  [2185,]   43   43   47 #>  [2186,]   43   43   47 #>  [2187,]   44   44   47 #>  [2188,]   44   44   47 #>  [2189,]   44   44   47 #>  [2190,]   44   44   47 #>  [2191,]   44   44   47 #>  [2192,]   44   44   47 #>  [2193,]   43   43   48 #>  [2194,]   44   44   47 #>  [2195,]   43   43   47 #>  [2196,]   44   44   47 #>  [2197,]   44   44   48 #>  [2198,]   43   43   48 #>  [2199,]   43   43   47 #>  [2200,]   43   43   47 #>  [2201,]   46   45   50 #>  [2202,]   46   45   51 #>  [2203,]   45   45   50 #>  [2204,]   45   46   49 #>  [2205,]   46   45   50 #>  [2206,]   46   45   50 #>  [2207,]   45   46   49 #>  [2208,]   45   45   50 #>  [2209,]   46   46   49 #>  [2210,]   46   46   49 #>  [2211,]   46   45   50 #>  [2212,]   45   45   51 #>  [2213,]   46   45   51 #>  [2214,]   45   46   49 #>  [2215,]   46   45   50 #>  [2216,]   45   46   49 #>  [2217,]   46   45   51 #>  [2218,]   46   45   50 #>  [2219,]   46   45   50 #>  [2220,]   46   46   49 #>  [2221,]   46   45   51 #>  [2222,]   46   46   49 #>  [2223,]   45   45   50 #>  [2224,]   46   46   49 #>  [2225,]   45   46   49 #>  [2226,]   46   45   50 #>  [2227,]   46   45   50 #>  [2228,]   46   46   49 #>  [2229,]   46   45   51 #>  [2230,]   46   45   50 #>  [2231,]   45   45   50 #>  [2232,]   45   45   50 #>  [2233,]   46   45   51 #>  [2234,]   46   45   50 #>  [2235,]   46   45   50 #>  [2236,]   46   46   49 #>  [2237,]   45   45   50 #>  [2238,]   46   45   50 #>  [2239,]   46   46   49 #>  [2240,]   45   45   50 #>  [2241,]   46   45   50 #>  [2242,]   46   45   50 #>  [2243,]   46   45   50 #>  [2244,]   45   45   50 #>  [2245,]   46   45   50 #>  [2246,]   45   45   50 #>  [2247,]   45   45   50 #>  [2248,]   46   45   50 #>  [2249,]   46   45   50 #>  [2250,]   46   46   49 #>  [2251,]   46   45   50 #>  [2252,]   45   46   49 #>  [2253,]   46   45   51 #>  [2254,]   46   46   49 #>  [2255,]   45   46   49 #>  [2256,]   46   45   50 #>  [2257,]   45   46   49 #>  [2258,]   46   45   50 #>  [2259,]   45   46   49 #>  [2260,]   45   45   51 #>  [2261,]   46   45   50 #>  [2262,]   46   45   50 #>  [2263,]   46   45   51 #>  [2264,]   46   45   50 #>  [2265,]   46   45   50 #>  [2266,]   46   45   50 #>  [2267,]   45   46   49 #>  [2268,]   45   45   50 #>  [2269,]   46   45   50 #>  [2270,]   46   45   51 #>  [2271,]   46   45   50 #>  [2272,]   45   45   50 #>  [2273,]   46   46   49 #>  [2274,]   45   45   50 #>  [2275,]   45   45   51 #>  [2276,]   45   46   49 #>  [2277,]   46   45   50 #>  [2278,]   45   45   50 #>  [2279,]   46   45   50 #>  [2280,]   45   45   51 #>  [2281,]   46   45   51 #>  [2282,]   46   45   50 #>  [2283,]   46   45   50 #>  [2284,]   46   45   50 #>  [2285,]   46   45   50 #>  [2286,]   45   46   49 #>  [2287,]   46   45   50 #>  [2288,]   46   45   50 #>  [2289,]   46   45   50 #>  [2290,]   46   46   49 #>  [2291,]   46   46   49 #>  [2292,]   45   45   50 #>  [2293,]   46   45   50 #>  [2294,]   46   45   50 #>  [2295,]   45   45   50 #>  [2296,]   45   45   50 #>  [2297,]   45   45   50 #>  [2298,]   45   45   50 #>  [2299,]   46   45   50 #>  [2300,]   46   45   50 #>  [2301,]   48   48   52 #>  [2302,]   48   48   52 #>  [2303,]   47   47   52 #>  [2304,]   48   48   52 #>  [2305,]   48   48   52 #>  [2306,]   48   48   52 #>  [2307,]   48   48   52 #>  [2308,]   48   48   53 #>  [2309,]   48   48   52 #>  [2310,]   48   48   52 #>  [2311,]   48   48   52 #>  [2312,]   47   47   52 #>  [2313,]   48   48   53 #>  [2314,]   47   47   52 #>  [2315,]   48   48   53 #>  [2316,]   48   48   53 #>  [2317,]   48   48   52 #>  [2318,]   48   48   52 #>  [2319,]   48   48   53 #>  [2320,]   48   48   53 #>  [2321,]   48   48   52 #>  [2322,]   48   48   53 #>  [2323,]   48   48   52 #>  [2324,]   48   48   52 #>  [2325,]   48   48   52 #>  [2326,]   47   47   53 #>  [2327,]   48   48   53 #>  [2328,]   48   48   52 #>  [2329,]   48   48   53 #>  [2330,]   48   48   53 #>  [2331,]   48   48   52 #>  [2332,]   47   47   52 #>  [2333,]   48   48   52 #>  [2334,]   48   48   52 #>  [2335,]   48   48   52 #>  [2336,]   47   47   53 #>  [2337,]   48   48   53 #>  [2338,]   48   48   53 #>  [2339,]   48   48   52 #>  [2340,]   47   47   52 #>  [2341,]   48   48   53 #>  [2342,]   47   47   52 #>  [2343,]   48   48   53 #>  [2344,]   48   48   53 #>  [2345,]   48   48   52 #>  [2346,]   48   48   53 #>  [2347,]   48   48   52 #>  [2348,]   47   47   52 #>  [2349,]   48   48   52 #>  [2350,]   48   48   53 #>  [2351,]   47   47   53 #>  [2352,]   48   48   52 #>  [2353,]   48   48   53 #>  [2354,]   47   47   52 #>  [2355,]   48   48   53 #>  [2356,]   48   48   53 #>  [2357,]   48   48   52 #>  [2358,]   48   48   53 #>  [2359,]   48   48   53 #>  [2360,]   48   48   53 #>  [2361,]   48   48   52 #>  [2362,]   47   47   52 #>  [2363,]   48   48   52 #>  [2364,]   48   48   53 #>  [2365,]   48   48   52 #>  [2366,]   47   47   53 #>  [2367,]   48   48   52 #>  [2368,]   48   48   52 #>  [2369,]   47   47   53 #>  [2370,]   48   48   52 #>  [2371,]   48   48   53 #>  [2372,]   48   48   52 #>  [2373,]   48   48   52 #>  [2374,]   48   48   52 #>  [2375,]   48   48   52 #>  [2376,]   48   48   52 #>  [2377,]   48   48   53 #>  [2378,]   48   48   52 #>  [2379,]   48   48   52 #>  [2380,]   47   47   53 #>  [2381,]   47   47   53 #>  [2382,]   48   48   52 #>  [2383,]   47   47   53 #>  [2384,]   48   48   53 #>  [2385,]   48   48   53 #>  [2386,]   48   48   52 #>  [2387,]   48   48   53 #>  [2388,]   48   48   52 #>  [2389,]   47   47   52 #>  [2390,]   48   48   53 #>  [2391,]   48   48   52 #>  [2392,]   48   48   52 #>  [2393,]   48   48   52 #>  [2394,]   48   48   52 #>  [2395,]   48   48   53 #>  [2396,]   48   48   53 #>  [2397,]   48   48   53 #>  [2398,]   48   48   52 #>  [2399,]   48   48   52 #>  [2400,]   48   48   53 #>  [2401,]   49   51   55 #>  [2402,]   49   51   55 #>  [2403,]   49   51   55 #>  [2404,]   49   51   55 #>  [2405,]   50   49   54 #>  [2406,]   49   50   55 #>  [2407,]   49   50   55 #>  [2408,]   49   51   55 #>  [2409,]   49   51   55 #>  [2410,]   49   51   55 #>  [2411,]   49   51   55 #>  [2412,]   49   51   55 #>  [2413,]   49   51   55 #>  [2414,]   49   51   55 #>  [2415,]   49   51   55 #>  [2416,]   49   51   55 #>  [2417,]   49   51   55 #>  [2418,]   50   49   54 #>  [2419,]   49   51   55 #>  [2420,]   49   50   55 #>  [2421,]   49   50   55 #>  [2422,]   49   51   55 #>  [2423,]   49   51   55 #>  [2424,]   49   51   55 #>  [2425,]   49   50   55 #>  [2426,]   49   51   55 #>  [2427,]   49   51   55 #>  [2428,]   49   51   55 #>  [2429,]   49   51   55 #>  [2430,]   49   51   55 #>  [2431,]   49   51   55 #>  [2432,]   49   51   55 #>  [2433,]   49   51   55 #>  [2434,]   49   51   55 #>  [2435,]   49   50   55 #>  [2436,]   49   51   55 #>  [2437,]   49   50   55 #>  [2438,]   49   51   55 #>  [2439,]   49   51   55 #>  [2440,]   49   51   55 #>  [2441,]   49   51   55 #>  [2442,]   49   50   55 #>  [2443,]   49   51   55 #>  [2444,]   49   50   55 #>  [2445,]   49   51   55 #>  [2446,]   49   51   55 #>  [2447,]   49   51   55 #>  [2448,]   49   51   55 #>  [2449,]   49   51   55 #>  [2450,]   49   51   55 #>  [2451,]   49   51   55 #>  [2452,]   49   51   55 #>  [2453,]   49   50   55 #>  [2454,]   49   51   55 #>  [2455,]   49   51   55 #>  [2456,]   49   50   55 #>  [2457,]   49   50   55 #>  [2458,]   49   51   55 #>  [2459,]   49   51   55 #>  [2460,]   49   51   55 #>  [2461,]   49   51   55 #>  [2462,]   49   51   55 #>  [2463,]   49   51   55 #>  [2464,]   49   51   55 #>  [2465,]   49   50   55 #>  [2466,]   49   51   55 #>  [2467,]   49   51   55 #>  [2468,]   49   51   55 #>  [2469,]   49   51   55 #>  [2470,]   49   51   55 #>  [2471,]   50   49   54 #>  [2472,]   49   51   55 #>  [2473,]   49   50   55 #>  [2474,]   49   50   55 #>  [2475,]   50   49   54 #>  [2476,]   49   51   55 #>  [2477,]   49   51   55 #>  [2478,]   49   51   55 #>  [2479,]   49   51   55 #>  [2480,]   49   50   55 #>  [2481,]   49   51   55 #>  [2482,]   49   50   55 #>  [2483,]   49   51   55 #>  [2484,]   49   50   55 #>  [2485,]   49   50   55 #>  [2486,]   49   50   55 #>  [2487,]   49   51   55 #>  [2488,]   49   51   55 #>  [2489,]   49   50   55 #>  [2490,]   49   51   55 #>  [2491,]   49   51   55 #>  [2492,]   49   51   55 #>  [2493,]   49   51   55 #>  [2494,]   49   50   55 #>  [2495,]   49   51   55 #>  [2496,]   49   51   55 #>  [2497,]   49   51   55 #>  [2498,]   49   51   55 #>  [2499,]   49   50   55 #>  [2500,]   50   49   54 #>  [2501,]   51   52   56 #>  [2502,]   52   53   57 #>  [2503,]   51   52   56 #>  [2504,]   51   52   56 #>  [2505,]   52   53   57 #>  [2506,]   51   52   56 #>  [2507,]   51   52   56 #>  [2508,]   51   52   56 #>  [2509,]   52   53   57 #>  [2510,]   52   53   57 #>  [2511,]   51   52   56 #>  [2512,]   52   53   57 #>  [2513,]   52   53   57 #>  [2514,]   51   52   56 #>  [2515,]   51   52   56 #>  [2516,]   51   52   56 #>  [2517,]   52   53   57 #>  [2518,]   52   53   57 #>  [2519,]   51   52   56 #>  [2520,]   52   53   57 #>  [2521,]   52   53   57 #>  [2522,]   51   52   56 #>  [2523,]   52   53   57 #>  [2524,]   52   53   57 #>  [2525,]   51   52   56 #>  [2526,]   51   52   56 #>  [2527,]   52   53   57 #>  [2528,]   51   52   56 #>  [2529,]   52   53   57 #>  [2530,]   51   52   56 #>  [2531,]   52   53   57 #>  [2532,]   52   53   57 #>  [2533,]   52   53   57 #>  [2534,]   51   52   56 #>  [2535,]   51   52   56 #>  [2536,]   52   53   57 #>  [2537,]   51   52   56 #>  [2538,]   51   52   56 #>  [2539,]   51   52   56 #>  [2540,]   52   53   57 #>  [2541,]   51   52   56 #>  [2542,]   51   52   56 #>  [2543,]   51   52   56 #>  [2544,]   52   53   57 #>  [2545,]   51   52   56 #>  [2546,]   51   52   56 #>  [2547,]   51   52   56 #>  [2548,]   51   52   56 #>  [2549,]   51   52   56 #>  [2550,]   51   52   56 #>  [2551,]   51   52   56 #>  [2552,]   51   52   56 #>  [2553,]   52   53   57 #>  [2554,]   51   52   56 #>  [2555,]   51   52   56 #>  [2556,]   51   52   56 #>  [2557,]   51   52   56 #>  [2558,]   51   52   56 #>  [2559,]   51   52   56 #>  [2560,]   52   53   57 #>  [2561,]   52   53   57 #>  [2562,]   51   52   56 #>  [2563,]   52   53   57 #>  [2564,]   51   52   56 #>  [2565,]   51   52   56 #>  [2566,]   51   52   56 #>  [2567,]   51   52   56 #>  [2568,]   51   52   56 #>  [2569,]   51   52   56 #>  [2570,]   52   53   57 #>  [2571,]   51   52   56 #>  [2572,]   51   52   56 #>  [2573,]   51   52   56 #>  [2574,]   51   52   56 #>  [2575,]   52   53   57 #>  [2576,]   51   52   56 #>  [2577,]   51   52   56 #>  [2578,]   51   52   56 #>  [2579,]   51   52   56 #>  [2580,]   52   53   57 #>  [2581,]   52   53   57 #>  [2582,]   51   52   56 #>  [2583,]   52   53   57 #>  [2584,]   52   53   57 #>  [2585,]   51   52   56 #>  [2586,]   52   53   57 #>  [2587,]   51   52   56 #>  [2588,]   52   53   57 #>  [2589,]   51   52   56 #>  [2590,]   51   52   56 #>  [2591,]   51   52   56 #>  [2592,]   51   52   56 #>  [2593,]   51   52   56 #>  [2594,]   51   52   56 #>  [2595,]   51   52   56 #>  [2596,]   51   52   56 #>  [2597,]   51   52   56 #>  [2598,]   51   52   56 #>  [2599,]   51   52   56 #>  [2600,]   51   52   56 #>  [2601,]   54   55   60 #>  [2602,]   54   55   60 #>  [2603,]   54   55   60 #>  [2604,]   53   54   58 #>  [2605,]   54   55   60 #>  [2606,]   54   55   60 #>  [2607,]   54   55   60 #>  [2608,]   53   54   58 #>  [2609,]   53   54   58 #>  [2610,]   53   54   58 #>  [2611,]   54   55   60 #>  [2612,]   54   55   60 #>  [2613,]   54   55   60 #>  [2614,]   54   55   60 #>  [2615,]   54   55   60 #>  [2616,]   54   55   60 #>  [2617,]   54   55   59 #>  [2618,]   54   55   60 #>  [2619,]   54   55   60 #>  [2620,]   54   55   60 #>  [2621,]   54   55   60 #>  [2622,]   54   55   60 #>  [2623,]   54   55   60 #>  [2624,]   54   55   60 #>  [2625,]   54   55   60 #>  [2626,]   54   55   60 #>  [2627,]   54   55   59 #>  [2628,]   54   55   60 #>  [2629,]   54   55   60 #>  [2630,]   54   55   60 #>  [2631,]   54   55   60 #>  [2632,]   54   55   60 #>  [2633,]   54   55   60 #>  [2634,]   54   55   60 #>  [2635,]   54   55   60 #>  [2636,]   54   55   60 #>  [2637,]   54   55   60 #>  [2638,]   54   55   60 #>  [2639,]   54   55   60 #>  [2640,]   54   55   60 #>  [2641,]   54   55   60 #>  [2642,]   54   55   60 #>  [2643,]   53   54   58 #>  [2644,]   54   55   59 #>  [2645,]   54   55   60 #>  [2646,]   54   55   60 #>  [2647,]   54   55   60 #>  [2648,]   54   55   60 #>  [2649,]   54   55   60 #>  [2650,]   54   55   60 #>  [2651,]   53   54   58 #>  [2652,]   54   55   59 #>  [2653,]   54   55   60 #>  [2654,]   54   55   60 #>  [2655,]   54   55   60 #>  [2656,]   54   55   60 #>  [2657,]   54   55   60 #>  [2658,]   54   55   60 #>  [2659,]   54   55   60 #>  [2660,]   53   54   58 #>  [2661,]   54   55   60 #>  [2662,]   54   55   60 #>  [2663,]   54   55   60 #>  [2664,]   54   55   60 #>  [2665,]   54   55   60 #>  [2666,]   54   55   60 #>  [2667,]   53   54   58 #>  [2668,]   54   55   60 #>  [2669,]   54   55   60 #>  [2670,]   54   55   60 #>  [2671,]   54   55   60 #>  [2672,]   54   55   60 #>  [2673,]   54   55   60 #>  [2674,]   54   55   60 #>  [2675,]   54   55   60 #>  [2676,]   54   55   60 #>  [2677,]   54   55   60 #>  [2678,]   54   55   60 #>  [2679,]   54   55   60 #>  [2680,]   54   55   60 #>  [2681,]   54   55   59 #>  [2682,]   54   55   59 #>  [2683,]   54   55   60 #>  [2684,]   54   55   60 #>  [2685,]   53   54   58 #>  [2686,]   54   55   60 #>  [2687,]   54   55   60 #>  [2688,]   54   55   60 #>  [2689,]   54   55   60 #>  [2690,]   54   55   59 #>  [2691,]   53   54   58 #>  [2692,]   54   55   59 #>  [2693,]   54   55   60 #>  [2694,]   54   55   60 #>  [2695,]   53   54   58 #>  [2696,]   54   55   60 #>  [2697,]   54   55   60 #>  [2698,]   54   55   60 #>  [2699,]   54   55   59 #>  [2700,]   54   55   60 #>  [2701,]   56   57   62 #>  [2702,]   56   57   62 #>  [2703,]   56   57   62 #>  [2704,]   55   56   61 #>  [2705,]   56   57   62 #>  [2706,]   56   57   62 #>  [2707,]   56   57   62 #>  [2708,]   55   56   61 #>  [2709,]   55   56   61 #>  [2710,]   56   57   62 #>  [2711,]   56   57   62 #>  [2712,]   56   57   62 #>  [2713,]   56   57   62 #>  [2714,]   56   57   62 #>  [2715,]   56   57   62 #>  [2716,]   56   57   62 #>  [2717,]   55   56   61 #>  [2718,]   56   57   62 #>  [2719,]   56   57   62 #>  [2720,]   56   57   62 #>  [2721,]   56   57   62 #>  [2722,]   55   56   61 #>  [2723,]   56   57   62 #>  [2724,]   56   57   62 #>  [2725,]   56   57   62 #>  [2726,]   56   57   62 #>  [2727,]   55   56   61 #>  [2728,]   56   57   62 #>  [2729,]   56   57   62 #>  [2730,]   56   57   62 #>  [2731,]   56   57   62 #>  [2732,]   56   57   62 #>  [2733,]   56   57   62 #>  [2734,]   56   57   62 #>  [2735,]   55   56   61 #>  [2736,]   56   57   62 #>  [2737,]   56   57   62 #>  [2738,]   56   57   62 #>  [2739,]   56   57   62 #>  [2740,]   56   57   62 #>  [2741,]   56   57   62 #>  [2742,]   56   57   62 #>  [2743,]   56   57   62 #>  [2744,]   55   56   61 #>  [2745,]   56   57   62 #>  [2746,]   56   57   62 #>  [2747,]   56   57   62 #>  [2748,]   56   57   62 #>  [2749,]   56   57   62 #>  [2750,]   56   57   62 #>  [2751,]   56   57   62 #>  [2752,]   55   56   61 #>  [2753,]   56   57   62 #>  [2754,]   56   57   62 #>  [2755,]   56   57   62 #>  [2756,]   56   57   62 #>  [2757,]   56   57   62 #>  [2758,]   55   56   61 #>  [2759,]   56   57   62 #>  [2760,]   56   57   62 #>  [2761,]   56   57   62 #>  [2762,]   56   57   62 #>  [2763,]   56   57   62 #>  [2764,]   56   57   62 #>  [2765,]   56   57   62 #>  [2766,]   55   56   61 #>  [2767,]   56   57   62 #>  [2768,]   56   57   62 #>  [2769,]   56   57   62 #>  [2770,]   56   57   62 #>  [2771,]   56   57   62 #>  [2772,]   56   57   62 #>  [2773,]   56   57   62 #>  [2774,]   56   57   62 #>  [2775,]   56   57   62 #>  [2776,]   56   57   62 #>  [2777,]   56   57   62 #>  [2778,]   56   57   62 #>  [2779,]   56   57   62 #>  [2780,]   56   57   62 #>  [2781,]   55   56   61 #>  [2782,]   55   56   61 #>  [2783,]   56   57   62 #>  [2784,]   56   57   62 #>  [2785,]   56   57   62 #>  [2786,]   56   57   62 #>  [2787,]   55   56   61 #>  [2788,]   56   57   62 #>  [2789,]   56   57   62 #>  [2790,]   55   56   61 #>  [2791,]   56   57   62 #>  [2792,]   55   56   61 #>  [2793,]   56   57   62 #>  [2794,]   56   57   62 #>  [2795,]   55   56   61 #>  [2796,]   56   57   62 #>  [2797,]   56   57   62 #>  [2798,]   56   57   62 #>  [2799,]   55   56   61 #>  [2800,]   56   57   62 #>  [2801,]   58   59   64 #>  [2802,]   58   59   64 #>  [2803,]   57   58   63 #>  [2804,]   57   58   63 #>  [2805,]   58   59   64 #>  [2806,]   58   59   64 #>  [2807,]   57   58   63 #>  [2808,]   57   58   63 #>  [2809,]   58   60   64 #>  [2810,]   57   58   63 #>  [2811,]   58   60   64 #>  [2812,]   57   58   63 #>  [2813,]   58   59   64 #>  [2814,]   57   58   63 #>  [2815,]   58   60   64 #>  [2816,]   57   58   63 #>  [2817,]   58   59   64 #>  [2818,]   58   60   64 #>  [2819,]   58   60   64 #>  [2820,]   58   59   64 #>  [2821,]   58   60   64 #>  [2822,]   58   59   64 #>  [2823,]   57   58   63 #>  [2824,]   58   59   64 #>  [2825,]   57   58   63 #>  [2826,]   57   58   63 #>  [2827,]   58   60   64 #>  [2828,]   58   59   64 #>  [2829,]   58   59   64 #>  [2830,]   57   58   63 #>  [2831,]   57   58   63 #>  [2832,]   57   58   63 #>  [2833,]   58   60   64 #>  [2834,]   58   59   64 #>  [2835,]   57   58   63 #>  [2836,]   58   60   64 #>  [2837,]   57   58   63 #>  [2838,]   58   60   64 #>  [2839,]   58   59   64 #>  [2840,]   57   58   63 #>  [2841,]   58   60   64 #>  [2842,]   58   60   64 #>  [2843,]   58   59   64 #>  [2844,]   57   58   63 #>  [2845,]   57   58   63 #>  [2846,]   57   58   63 #>  [2847,]   57   58   63 #>  [2848,]   58   60   64 #>  [2849,]   57   58   63 #>  [2850,]   58   59   64 #>  [2851,]   58   59   64 #>  [2852,]   57   58   63 #>  [2853,]   58   59   64 #>  [2854,]   58   59   64 #>  [2855,]   57   58   63 #>  [2856,]   58   59   64 #>  [2857,]   57   58   63 #>  [2858,]   58   60   64 #>  [2859,]   57   58   63 #>  [2860,]   57   58   63 #>  [2861,]   58   60   64 #>  [2862,]   58   60   64 #>  [2863,]   58   59   64 #>  [2864,]   58   59   64 #>  [2865,]   58   59   64 #>  [2866,]   58   59   64 #>  [2867,]   57   58   63 #>  [2868,]   57   58   63 #>  [2869,]   58   60   64 #>  [2870,]   58   59   64 #>  [2871,]   58   59   64 #>  [2872,]   57   58   63 #>  [2873,]   58   59   64 #>  [2874,]   57   58   63 #>  [2875,]   57   58   63 #>  [2876,]   57   58   63 #>  [2877,]   58   59   64 #>  [2878,]   57   58   63 #>  [2879,]   58   59   64 #>  [2880,]   57   58   63 #>  [2881,]   58   59   64 #>  [2882,]   58   60   64 #>  [2883,]   58   59   64 #>  [2884,]   58   59   64 #>  [2885,]   58   60   64 #>  [2886,]   57   58   63 #>  [2887,]   58   59   64 #>  [2888,]   57   58   63 #>  [2889,]   58   59   64 #>  [2890,]   58   59   64 #>  [2891,]   58   59   64 #>  [2892,]   57   58   63 #>  [2893,]   58   60   64 #>  [2894,]   58   59   64 #>  [2895,]   57   58   63 #>  [2896,]   57   58   63 #>  [2897,]   57   58   63 #>  [2898,]   57   58   63 #>  [2899,]   58   60   64 #>  [2900,]   58   59   64 #>  [2901,]   60   62   65 #>  [2902,]   60   62   65 #>  [2903,]   59   61   67 #>  [2904,]   60   62   65 #>  [2905,]   59   61   66 #>  [2906,]   60   62   65 #>  [2907,]   59   61   66 #>  [2908,]   59   61   66 #>  [2909,]   60   62   65 #>  [2910,]   60   62   65 #>  [2911,]   60   62   65 #>  [2912,]   60   62   65 #>  [2913,]   59   61   66 #>  [2914,]   60   62   65 #>  [2915,]   60   62   65 #>  [2916,]   59   61   66 #>  [2917,]   59   61   66 #>  [2918,]   60   62   65 #>  [2919,]   60   62   65 #>  [2920,]   59   61   67 #>  [2921,]   60   62   65 #>  [2922,]   59   61   66 #>  [2923,]   60   62   65 #>  [2924,]   59   61   66 #>  [2925,]   59   61   67 #>  [2926,]   60   62   65 #>  [2927,]   60   62   65 #>  [2928,]   60   62   65 #>  [2929,]   59   61   66 #>  [2930,]   60   62   65 #>  [2931,]   60   62   65 #>  [2932,]   60   62   65 #>  [2933,]   60   62   65 #>  [2934,]   60   62   65 #>  [2935,]   60   62   65 #>  [2936,]   60   62   65 #>  [2937,]   60   62   65 #>  [2938,]   60   62   65 #>  [2939,]   59   61   66 #>  [2940,]   59   61   66 #>  [2941,]   60   62   65 #>  [2942,]   60   62   65 #>  [2943,]   59   61   66 #>  [2944,]   59   61   66 #>  [2945,]   59   61   66 #>  [2946,]   59   61   66 #>  [2947,]   59   61   66 #>  [2948,]   60   62   65 #>  [2949,]   59   61   66 #>  [2950,]   59   61   66 #>  [2951,]   59   61   66 #>  [2952,]   60   62   65 #>  [2953,]   59   61   66 #>  [2954,]   59   61   66 #>  [2955,]   59   61   66 #>  [2956,]   59   61   66 #>  [2957,]   60   62   65 #>  [2958,]   60   62   65 #>  [2959,]   59   61   66 #>  [2960,]   60   62   65 #>  [2961,]   60   62   65 #>  [2962,]   60   62   65 #>  [2963,]   59   61   66 #>  [2964,]   60   62   65 #>  [2965,]   59   61   67 #>  [2966,]   59   61   66 #>  [2967,]   60   62   65 #>  [2968,]   60   62   65 #>  [2969,]   60   62   65 #>  [2970,]   59   61   67 #>  [2971,]   59   61   66 #>  [2972,]   59   61   66 #>  [2973,]   60   62   65 #>  [2974,]   60   62   65 #>  [2975,]   60   62   65 #>  [2976,]   59   61   66 #>  [2977,]   59   61   66 #>  [2978,]   59   61   66 #>  [2979,]   59   61   66 #>  [2980,]   60   62   65 #>  [2981,]   59   61   66 #>  [2982,]   60   62   65 #>  [2983,]   59   61   66 #>  [2984,]   59   61   66 #>  [2985,]   60   62   65 #>  [2986,]   59   61   66 #>  [2987,]   60   62   65 #>  [2988,]   60   62   65 #>  [2989,]   59   61   66 #>  [2990,]   59   61   66 #>  [2991,]   60   62   65 #>  [2992,]   60   62   65 #>  [2993,]   60   62   65 #>  [2994,]   59   61   66 #>  [2995,]   60   62   65 #>  [2996,]   60   62   65 #>  [2997,]   60   62   65 #>  [2998,]   59   61   67 #>  [2999,]   60   62   65 #>  [3000,]   59   61   66 #>  [3001,]   62   64   68 #>  [3002,]   61   63   68 #>  [3003,]   61   63   68 #>  [3004,]   61   63   68 #>  [3005,]   62   64   69 #>  [3006,]   61   63   68 #>  [3007,]   61   63   68 #>  [3008,]   61   63   68 #>  [3009,]   61   63   68 #>  [3010,]   61   63   68 #>  [3011,]   61   63   68 #>  [3012,]   61   63   68 #>  [3013,]   61   63   68 #>  [3014,]   62   64   68 #>  [3015,]   62   64   68 #>  [3016,]   61   63   68 #>  [3017,]   61   63   68 #>  [3018,]   62   64   69 #>  [3019,]   61   63   68 #>  [3020,]   61   63   68 #>  [3021,]   61   63   68 #>  [3022,]   61   63   68 #>  [3023,]   61   63   68 #>  [3024,]   61   63   68 #>  [3025,]   61   63   68 #>  [3026,]   61   63   68 #>  [3027,]   62   64   69 #>  [3028,]   61   63   68 #>  [3029,]   61   63   68 #>  [3030,]   61   63   68 #>  [3031,]   61   63   68 #>  [3032,]   62   64   69 #>  [3033,]   61   63   68 #>  [3034,]   61   63   68 #>  [3035,]   61   63   68 #>  [3036,]   61   63   68 #>  [3037,]   61   63   68 #>  [3038,]   61   63   68 #>  [3039,]   61   63   68 #>  [3040,]   61   63   68 #>  [3041,]   61   63   68 #>  [3042,]   61   63   68 #>  [3043,]   62   64   68 #>  [3044,]   61   63   68 #>  [3045,]   61   63   68 #>  [3046,]   61   63   68 #>  [3047,]   61   63   68 #>  [3048,]   61   63   68 #>  [3049,]   61   63   68 #>  [3050,]   61   63   68 #>  [3051,]   61   63   68 #>  [3052,]   61   63   68 #>  [3053,]   61   63   68 #>  [3054,]   61   63   68 #>  [3055,]   61   63   68 #>  [3056,]   61   63   68 #>  [3057,]   61   63   68 #>  [3058,]   62   64   68 #>  [3059,]   62   64   68 #>  [3060,]   61   63   68 #>  [3061,]   62   64   68 #>  [3062,]   61   63   68 #>  [3063,]   61   63   68 #>  [3064,]   61   63   68 #>  [3065,]   61   63   68 #>  [3066,]   62   64   68 #>  [3067,]   61   63   68 #>  [3068,]   61   63   68 #>  [3069,]   61   63   68 #>  [3070,]   62   64   68 #>  [3071,]   62   64   69 #>  [3072,]   61   63   68 #>  [3073,]   61   63   68 #>  [3074,]   61   63   68 #>  [3075,]   62   64   69 #>  [3076,]   61   63   68 #>  [3077,]   61   63   68 #>  [3078,]   61   63   68 #>  [3079,]   62   64   68 #>  [3080,]   61   63   68 #>  [3081,]   61   63   68 #>  [3082,]   61   63   68 #>  [3083,]   61   63   68 #>  [3084,]   61   63   68 #>  [3085,]   61   63   68 #>  [3086,]   61   63   68 #>  [3087,]   62   64   68 #>  [3088,]   61   63   68 #>  [3089,]   61   63   68 #>  [3090,]   61   63   68 #>  [3091,]   62   64   69 #>  [3092,]   61   63   68 #>  [3093,]   61   63   68 #>  [3094,]   61   63   68 #>  [3095,]   62   64   69 #>  [3096,]   61   63   68 #>  [3097,]   61   63   68 #>  [3098,]   61   63   68 #>  [3099,]   61   63   68 #>  [3100,]   62   64   69 #>  [3101,]   63   65   70 #>  [3102,]   64   66   71 #>  [3103,]   63   65   70 #>  [3104,]   64   66   71 #>  [3105,]   64   66   71 #>  [3106,]   63   65   70 #>  [3107,]   64   66   71 #>  [3108,]   64   66   71 #>  [3109,]   64   66   71 #>  [3110,]   64   66   71 #>  [3111,]   63   65   70 #>  [3112,]   64   66   71 #>  [3113,]   64   66   71 #>  [3114,]   63   65   70 #>  [3115,]   64   66   71 #>  [3116,]   63   65   70 #>  [3117,]   64   66   71 #>  [3118,]   64   66   71 #>  [3119,]   63   65   70 #>  [3120,]   64   66   71 #>  [3121,]   64   66   71 #>  [3122,]   64   66   71 #>  [3123,]   64   66   71 #>  [3124,]   64   66   71 #>  [3125,]   64   66   71 #>  [3126,]   63   65   70 #>  [3127,]   64   66   71 #>  [3128,]   63   65   70 #>  [3129,]   64   66   71 #>  [3130,]   64   66   71 #>  [3131,]   64   66   71 #>  [3132,]   64   66   71 #>  [3133,]   64   66   71 #>  [3134,]   63   65   70 #>  [3135,]   63   65   70 #>  [3136,]   64   66   71 #>  [3137,]   63   65   70 #>  [3138,]   63   65   70 #>  [3139,]   64   66   71 #>  [3140,]   64   66   71 #>  [3141,]   64   66   71 #>  [3142,]   63   65   70 #>  [3143,]   64   66   71 #>  [3144,]   64   66   71 #>  [3145,]   63   65   70 #>  [3146,]   64   66   71 #>  [3147,]   64   66   71 #>  [3148,]   64   66   71 #>  [3149,]   63   65   70 #>  [3150,]   64   66   71 #>  [3151,]   64   66   71 #>  [3152,]   63   65   70 #>  [3153,]   64   66   71 #>  [3154,]   64   66   71 #>  [3155,]   64   66   71 #>  [3156,]   63   65   70 #>  [3157,]   64   66   71 #>  [3158,]   64   66   71 #>  [3159,]   63   65   70 #>  [3160,]   64   66   71 #>  [3161,]   64   66   71 #>  [3162,]   64   66   71 #>  [3163,]   64   66   71 #>  [3164,]   63   65   70 #>  [3165,]   63   65   70 #>  [3166,]   64   66   71 #>  [3167,]   64   66   71 #>  [3168,]   63   65   70 #>  [3169,]   63   65   70 #>  [3170,]   64   66   71 #>  [3171,]   64   66   71 #>  [3172,]   63   65   70 #>  [3173,]   63   65   70 #>  [3174,]   64   66   71 #>  [3175,]   64   66   71 #>  [3176,]   64   66   71 #>  [3177,]   63   65   70 #>  [3178,]   64   66   71 #>  [3179,]   63   65   70 #>  [3180,]   64   66   71 #>  [3181,]   64   66   71 #>  [3182,]   64   66   71 #>  [3183,]   64   66   71 #>  [3184,]   64   66   71 #>  [3185,]   64   66   71 #>  [3186,]   64   66   71 #>  [3187,]   64   66   71 #>  [3188,]   64   66   71 #>  [3189,]   63   65   70 #>  [3190,]   64   66   71 #>  [3191,]   64   66   71 #>  [3192,]   64   66   71 #>  [3193,]   64   66   71 #>  [3194,]   63   65   70 #>  [3195,]   64   66   71 #>  [3196,]   63   65   70 #>  [3197,]   63   65   70 #>  [3198,]   64   66   71 #>  [3199,]   64   66   71 #>  [3200,]   63   65   70 #>  [3201,]   67   68   72 #>  [3202,]   67   68   72 #>  [3203,]   65   69   73 #>  [3204,]   66   67   72 #>  [3205,]   66   67   72 #>  [3206,]   66   67   72 #>  [3207,]   67   68   72 #>  [3208,]   67   68   72 #>  [3209,]   66   67   72 #>  [3210,]   66   67   72 #>  [3211,]   65   69   73 #>  [3212,]   65   70   73 #>  [3213,]   67   68   72 #>  [3214,]   65   69   73 #>  [3215,]   67   68   72 #>  [3216,]   67   68   72 #>  [3217,]   67   68   72 #>  [3218,]   67   68   72 #>  [3219,]   65   69   73 #>  [3220,]   65   70   73 #>  [3221,]   66   67   72 #>  [3222,]   65   70   73 #>  [3223,]   67   68   72 #>  [3224,]   66   67   72 #>  [3225,]   66   67   72 #>  [3226,]   65   69   73 #>  [3227,]   67   68   72 #>  [3228,]   66   67   72 #>  [3229,]   65   70   73 #>  [3230,]   65   70   73 #>  [3231,]   66   67   72 #>  [3232,]   65   70   73 #>  [3233,]   67   68   72 #>  [3234,]   65   69   73 #>  [3235,]   66   67   72 #>  [3236,]   65   70   73 #>  [3237,]   67   68   72 #>  [3238,]   67   68   72 #>  [3239,]   66   67   72 #>  [3240,]   65   70   73 #>  [3241,]   65   70   73 #>  [3242,]   65   69   73 #>  [3243,]   67   68   72 #>  [3244,]   67   68   72 #>  [3245,]   67   68   72 #>  [3246,]   67   68   72 #>  [3247,]   66   67   72 #>  [3248,]   65   70   73 #>  [3249,]   67   68   72 #>  [3250,]   67   68   72 #>  [3251,]   65   70   73 #>  [3252,]   66   67   72 #>  [3253,]   67   68   72 #>  [3254,]   65   70   73 #>  [3255,]   67   68   72 #>  [3256,]   67   68   72 #>  [3257,]   66   67   72 #>  [3258,]   67   68   72 #>  [3259,]   67   68   72 #>  [3260,]   65   70   73 #>  [3261,]   67   68   72 #>  [3262,]   65   69   73 #>  [3263,]   65   70   73 #>  [3264,]   67   68   72 #>  [3265,]   66   67   72 #>  [3266,]   65   70   73 #>  [3267,]   67   68   72 #>  [3268,]   65   69   73 #>  [3269,]   65   69   73 #>  [3270,]   66   67   72 #>  [3271,]   67   68   72 #>  [3272,]   66   67   72 #>  [3273,]   66   67   72 #>  [3274,]   66   67   72 #>  [3275,]   67   68   72 #>  [3276,]   66   67   72 #>  [3277,]   67   68   72 #>  [3278,]   67   68   72 #>  [3279,]   66   67   72 #>  [3280,]   65   70   73 #>  [3281,]   65   70   73 #>  [3282,]   66   67   72 #>  [3283,]   65   70   73 #>  [3284,]   67   68   72 #>  [3285,]   67   68   72 #>  [3286,]   67   68   72 #>  [3287,]   67   68   72 #>  [3288,]   67   68   72 #>  [3289,]   65   69   73 #>  [3290,]   67   68   72 #>  [3291,]   65   69   73 #>  [3292,]   67   68   72 #>  [3293,]   67   68   72 #>  [3294,]   67   68   72 #>  [3295,]   67   68   72 #>  [3296,]   67   68   72 #>  [3297,]   67   68   72 #>  [3298,]   66   67   72 #>  [3299,]   67   68   72 #>  [3300,]   67   68   72 #>  [3301,]   69   72   75 #>  [3302,]   68   71   74 #>  [3303,]   68   71   74 #>  [3304,]   68   71   74 #>  [3305,]   68   71   74 #>  [3306,]   68   71   74 #>  [3307,]   68   71   74 #>  [3308,]   68   71   74 #>  [3309,]   69   72   75 #>  [3310,]   68   71   74 #>  [3311,]   68   71   74 #>  [3312,]   68   71   74 #>  [3313,]   69   72   75 #>  [3314,]   68   71   74 #>  [3315,]   68   71   74 #>  [3316,]   68   71   74 #>  [3317,]   69   72   75 #>  [3318,]   69   72   75 #>  [3319,]   68   71   74 #>  [3320,]   69   72   75 #>  [3321,]   68   71   74 #>  [3322,]   68   71   74 #>  [3323,]   68   71   74 #>  [3324,]   68   71   74 #>  [3325,]   68   71   74 #>  [3326,]   68   71   74 #>  [3327,]   69   72   75 #>  [3328,]   68   71   74 #>  [3329,]   68   71   74 #>  [3330,]   68   71   74 #>  [3331,]   68   71   74 #>  [3332,]   68   71   74 #>  [3333,]   69   72   75 #>  [3334,]   68   71   74 #>  [3335,]   68   71   74 #>  [3336,]   69   72   75 #>  [3337,]   68   71   74 #>  [3338,]   69   72   75 #>  [3339,]   68   71   74 #>  [3340,]   68   71   74 #>  [3341,]   68   71   74 #>  [3342,]   69   72   75 #>  [3343,]   68   71   74 #>  [3344,]   68   71   74 #>  [3345,]   68   71   74 #>  [3346,]   68   71   74 #>  [3347,]   68   71   74 #>  [3348,]   68   71   74 #>  [3349,]   68   71   74 #>  [3350,]   68   71   74 #>  [3351,]   69   72   75 #>  [3352,]   68   71   74 #>  [3353,]   69   72   75 #>  [3354,]   69   72   75 #>  [3355,]   68   71   74 #>  [3356,]   69   72   75 #>  [3357,]   68   71   74 #>  [3358,]   68   71   74 #>  [3359,]   68   71   74 #>  [3360,]   68   71   74 #>  [3361,]   68   71   74 #>  [3362,]   68   71   74 #>  [3363,]   68   71   74 #>  [3364,]   68   71   74 #>  [3365,]   69   72   75 #>  [3366,]   69   72   75 #>  [3367,]   68   71   74 #>  [3368,]   68   71   74 #>  [3369,]   68   71   74 #>  [3370,]   68   71   74 #>  [3371,]   68   71   74 #>  [3372,]   68   71   74 #>  [3373,]   68   71   74 #>  [3374,]   68   71   74 #>  [3375,]   68   71   74 #>  [3376,]   68   71   74 #>  [3377,]   69   72   75 #>  [3378,]   68   71   74 #>  [3379,]   69   72   75 #>  [3380,]   68   71   74 #>  [3381,]   68   71   74 #>  [3382,]   69   72   75 #>  [3383,]   69   72   75 #>  [3384,]   69   72   75 #>  [3385,]   68   71   74 #>  [3386,]   68   71   74 #>  [3387,]   69   72   75 #>  [3388,]   68   71   74 #>  [3389,]   68   71   74 #>  [3390,]   68   71   74 #>  [3391,]   69   72   75 #>  [3392,]   68   71   74 #>  [3393,]   69   72   75 #>  [3394,]   69   72   75 #>  [3395,]   68   71   74 #>  [3396,]   68   71   74 #>  [3397,]   68   71   74 #>  [3398,]   68   71   74 #>  [3399,]   68   71   74 #>  [3400,]   68   71   74 #>  [3401,]   70   73   76 #>  [3402,]   71   74   77 #>  [3403,]   70   73   76 #>  [3404,]   70   73   76 #>  [3405,]   71   74   77 #>  [3406,]   70   73   76 #>  [3407,]   70   73   76 #>  [3408,]   70   73   76 #>  [3409,]   71   74   77 #>  [3410,]   71   74   77 #>  [3411,]   70   73   76 #>  [3412,]   71   74   77 #>  [3413,]   71   74   77 #>  [3414,]   70   73   76 #>  [3415,]   70   73   76 #>  [3416,]   70   73   76 #>  [3417,]   71   74   77 #>  [3418,]   71   74   77 #>  [3419,]   70   73   76 #>  [3420,]   71   74   77 #>  [3421,]   71   74   77 #>  [3422,]   71   74   77 #>  [3423,]   71   74   77 #>  [3424,]   71   74   77 #>  [3425,]   70   73   76 #>  [3426,]   70   73   76 #>  [3427,]   71   74   77 #>  [3428,]   70   73   76 #>  [3429,]   71   74   77 #>  [3430,]   71   74   77 #>  [3431,]   71   74   77 #>  [3432,]   71   74   77 #>  [3433,]   71   74   77 #>  [3434,]   70   73   76 #>  [3435,]   70   73   76 #>  [3436,]   71   74   77 #>  [3437,]   70   73   76 #>  [3438,]   70   73   76 #>  [3439,]   70   73   76 #>  [3440,]   71   74   77 #>  [3441,]   70   73   76 #>  [3442,]   70   73   76 #>  [3443,]   70   73   76 #>  [3444,]   71   74   77 #>  [3445,]   70   73   76 #>  [3446,]   70   73   76 #>  [3447,]   70   73   76 #>  [3448,]   70   73   76 #>  [3449,]   70   73   76 #>  [3450,]   71   74   77 #>  [3451,]   70   73   76 #>  [3452,]   70   73   76 #>  [3453,]   71   74   77 #>  [3454,]   70   73   76 #>  [3455,]   70   73   76 #>  [3456,]   70   73   76 #>  [3457,]   70   73   76 #>  [3458,]   70   73   76 #>  [3459,]   70   73   76 #>  [3460,]   71   74   77 #>  [3461,]   71   74   77 #>  [3462,]   70   73   76 #>  [3463,]   71   74   77 #>  [3464,]   70   73   76 #>  [3465,]   70   73   76 #>  [3466,]   70   73   76 #>  [3467,]   70   73   76 #>  [3468,]   70   73   76 #>  [3469,]   70   73   76 #>  [3470,]   71   74   77 #>  [3471,]   70   73   76 #>  [3472,]   70   73   76 #>  [3473,]   70   73   76 #>  [3474,]   70   73   76 #>  [3475,]   71   74   77 #>  [3476,]   70   73   76 #>  [3477,]   70   73   76 #>  [3478,]   70   73   76 #>  [3479,]   70   73   76 #>  [3480,]   71   74   77 #>  [3481,]   71   74   77 #>  [3482,]   70   73   76 #>  [3483,]   71   74   77 #>  [3484,]   71   74   77 #>  [3485,]   70   73   76 #>  [3486,]   71   74   77 #>  [3487,]   71   74   77 #>  [3488,]   71   74   77 #>  [3489,]   70   73   76 #>  [3490,]   70   73   76 #>  [3491,]   70   73   76 #>  [3492,]   71   74   77 #>  [3493,]   71   74   77 #>  [3494,]   70   73   76 #>  [3495,]   70   73   76 #>  [3496,]   70   73   76 #>  [3497,]   70   73   76 #>  [3498,]   70   73   76 #>  [3499,]   70   73   76 #>  [3500,]   70   73   76 #>  [3501,]   73   76   78 #>  [3502,]   73   76   79 #>  [3503,]   73   76   79 #>  [3504,]   73   76   78 #>  [3505,]   73   76   79 #>  [3506,]   73   76   79 #>  [3507,]   73   76   79 #>  [3508,]   73   76   78 #>  [3509,]   73   76   78 #>  [3510,]   73   76   79 #>  [3511,]   73   76   78 #>  [3512,]   73   76   79 #>  [3513,]   73   76   78 #>  [3514,]   73   76   78 #>  [3515,]   73   76   79 #>  [3516,]   73   76   79 #>  [3517,]   73   76   78 #>  [3518,]   73   76   79 #>  [3519,]   73   76   79 #>  [3520,]   73   76   79 #>  [3521,]   73   76   78 #>  [3522,]   73   76   78 #>  [3523,]   73   76   79 #>  [3524,]   73   76   79 #>  [3525,]   72   75   79 #>  [3526,]   73   76   79 #>  [3527,]   73   76   78 #>  [3528,]   73   76   79 #>  [3529,]   73   76   79 #>  [3530,]   73   76   78 #>  [3531,]   73   76   79 #>  [3532,]   73   76   79 #>  [3533,]   73   76   79 #>  [3534,]   73   76   79 #>  [3535,]   73   76   78 #>  [3536,]   73   76   79 #>  [3537,]   73   76   79 #>  [3538,]   73   76   79 #>  [3539,]   73   76   79 #>  [3540,]   73   76   79 #>  [3541,]   73   76   79 #>  [3542,]   73   76   79 #>  [3543,]   73   76   78 #>  [3544,]   73   76   78 #>  [3545,]   73   76   78 #>  [3546,]   73   76   78 #>  [3547,]   73   76   79 #>  [3548,]   73   76   79 #>  [3549,]   73   76   78 #>  [3550,]   73   76   79 #>  [3551,]   73   76   79 #>  [3552,]   73   76   78 #>  [3553,]   73   76   79 #>  [3554,]   73   76   78 #>  [3555,]   73   76   78 #>  [3556,]   72   75   79 #>  [3557,]   73   76   79 #>  [3558,]   73   76   78 #>  [3559,]   73   76   79 #>  [3560,]   73   76   79 #>  [3561,]   73   76   79 #>  [3562,]   73   76   79 #>  [3563,]   73   76   79 #>  [3564,]   73   76   79 #>  [3565,]   72   75   79 #>  [3566,]   73   76   78 #>  [3567,]   73   76   79 #>  [3568,]   73   76   78 #>  [3569,]   73   76   78 #>  [3570,]   73   76   79 #>  [3571,]   73   76   79 #>  [3572,]   73   76   79 #>  [3573,]   73   76   79 #>  [3574,]   73   76   79 #>  [3575,]   73   76   79 #>  [3576,]   73   76   79 #>  [3577,]   73   76   79 #>  [3578,]   73   76   79 #>  [3579,]   73   76   78 #>  [3580,]   72   75   78 #>  [3581,]   73   76   78 #>  [3582,]   73   76   78 #>  [3583,]   73   76   78 #>  [3584,]   73   76   79 #>  [3585,]   72   75   79 #>  [3586,]   73   76   79 #>  [3587,]   73   76   78 #>  [3588,]   73   76   78 #>  [3589,]   73   76   78 #>  [3590,]   73   76   78 #>  [3591,]   73   76   78 #>  [3592,]   73   76   78 #>  [3593,]   73   76   79 #>  [3594,]   73   76   79 #>  [3595,]   73   76   78 #>  [3596,]   73   76   78 #>  [3597,]   73   76   79 #>  [3598,]   73   76   79 #>  [3599,]   73   76   78 #>  [3600,]   73   76   79 #>  [3601,]   74   77   80 #>  [3602,]   75   78   81 #>  [3603,]   74   77   80 #>  [3604,]   74   77   80 #>  [3605,]   75   78   81 #>  [3606,]   74   77   80 #>  [3607,]   74   77   80 #>  [3608,]   74   77   80 #>  [3609,]   75   78   81 #>  [3610,]   75   78   81 #>  [3611,]   74   77   80 #>  [3612,]   75   78   81 #>  [3613,]   75   78   81 #>  [3614,]   74   77   80 #>  [3615,]   74   77   80 #>  [3616,]   74   77   80 #>  [3617,]   75   78   81 #>  [3618,]   75   78   81 #>  [3619,]   74   77   80 #>  [3620,]   75   78   81 #>  [3621,]   75   78   81 #>  [3622,]   75   78   81 #>  [3623,]   75   78   81 #>  [3624,]   75   78   81 #>  [3625,]   74   77   80 #>  [3626,]   74   77   80 #>  [3627,]   75   78   81 #>  [3628,]   74   77   80 #>  [3629,]   75   78   81 #>  [3630,]   74   77   80 #>  [3631,]   75   78   81 #>  [3632,]   75   78   81 #>  [3633,]   75   78   81 #>  [3634,]   74   77   80 #>  [3635,]   74   77   80 #>  [3636,]   75   78   81 #>  [3637,]   74   77   80 #>  [3638,]   74   77   80 #>  [3639,]   74   77   80 #>  [3640,]   75   78   81 #>  [3641,]   74   77   80 #>  [3642,]   74   77   80 #>  [3643,]   74   77   80 #>  [3644,]   75   78   81 #>  [3645,]   74   77   80 #>  [3646,]   74   77   80 #>  [3647,]   74   77   80 #>  [3648,]   74   77   80 #>  [3649,]   74   77   80 #>  [3650,]   75   78   81 #>  [3651,]   74   77   80 #>  [3652,]   74   77   80 #>  [3653,]   75   78   81 #>  [3654,]   74   77   80 #>  [3655,]   74   77   80 #>  [3656,]   74   77   80 #>  [3657,]   74   77   80 #>  [3658,]   74   77   80 #>  [3659,]   74   77   80 #>  [3660,]   75   78   81 #>  [3661,]   75   78   81 #>  [3662,]   74   77   80 #>  [3663,]   75   78   81 #>  [3664,]   74   77   80 #>  [3665,]   74   77   80 #>  [3666,]   74   77   80 #>  [3667,]   74   77   80 #>  [3668,]   74   77   80 #>  [3669,]   74   77   80 #>  [3670,]   75   78   81 #>  [3671,]   74   77   80 #>  [3672,]   74   77   80 #>  [3673,]   74   77   80 #>  [3674,]   74   77   80 #>  [3675,]   75   78   81 #>  [3676,]   74   77   80 #>  [3677,]   74   77   80 #>  [3678,]   74   77   80 #>  [3679,]   74   77   80 #>  [3680,]   75   78   81 #>  [3681,]   75   78   81 #>  [3682,]   74   77   80 #>  [3683,]   75   78   81 #>  [3684,]   75   78   81 #>  [3685,]   74   77   80 #>  [3686,]   75   78   81 #>  [3687,]   75   78   81 #>  [3688,]   75   78   81 #>  [3689,]   74   77   80 #>  [3690,]   74   77   80 #>  [3691,]   74   77   80 #>  [3692,]   75   78   81 #>  [3693,]   75   78   81 #>  [3694,]   74   77   80 #>  [3695,]   74   77   80 #>  [3696,]   74   77   80 #>  [3697,]   74   77   80 #>  [3698,]   74   77   80 #>  [3699,]   74   77   80 #>  [3700,]   74   77   80 #>  [3701,]   77   80   82 #>  [3702,]   77   80   82 #>  [3703,]   76   79   83 #>  [3704,]   76   79   83 #>  [3705,]   76   79   83 #>  [3706,]   77   80   82 #>  [3707,]   76   79   83 #>  [3708,]   76   79   83 #>  [3709,]   76   79   83 #>  [3710,]   76   79   83 #>  [3711,]   77   80   82 #>  [3712,]   76   79   83 #>  [3713,]   77   80   82 #>  [3714,]   77   80   82 #>  [3715,]   77   80   82 #>  [3716,]   77   80   82 #>  [3717,]   77   80   82 #>  [3718,]   76   79   83 #>  [3719,]   76   79   83 #>  [3720,]   76   79   83 #>  [3721,]   77   80   82 #>  [3722,]   77   80   82 #>  [3723,]   76   79   83 #>  [3724,]   76   79   83 #>  [3725,]   76   79   83 #>  [3726,]   77   80   82 #>  [3727,]   77   80   82 #>  [3728,]   76   79   83 #>  [3729,]   77   80   82 #>  [3730,]   76   79   83 #>  [3731,]   76   79   83 #>  [3732,]   76   79   83 #>  [3733,]   77   80   82 #>  [3734,]   76   79   83 #>  [3735,]   77   80   82 #>  [3736,]   76   79   83 #>  [3737,]   77   80   82 #>  [3738,]   76   79   83 #>  [3739,]   76   79   83 #>  [3740,]   76   79   83 #>  [3741,]   77   80   82 #>  [3742,]   76   79   83 #>  [3743,]   76   79   83 #>  [3744,]   77   80   82 #>  [3745,]   76   79   83 #>  [3746,]   76   79   83 #>  [3747,]   77   80   82 #>  [3748,]   76   79   83 #>  [3749,]   76   79   83 #>  [3750,]   77   80   82 #>  [3751,]   76   79   83 #>  [3752,]   77   80   82 #>  [3753,]   76   79   83 #>  [3754,]   76   79   83 #>  [3755,]   76   79   83 #>  [3756,]   76   79   83 #>  [3757,]   76   79   83 #>  [3758,]   77   80   82 #>  [3759,]   77   80   82 #>  [3760,]   76   79   83 #>  [3761,]   77   80   82 #>  [3762,]   76   79   83 #>  [3763,]   76   79   83 #>  [3764,]   76   79   83 #>  [3765,]   76   79   83 #>  [3766,]   76   79   83 #>  [3767,]   76   79   83 #>  [3768,]   77   80   82 #>  [3769,]   76   79   83 #>  [3770,]   77   80   82 #>  [3771,]   77   80   82 #>  [3772,]   76   79   83 #>  [3773,]   77   80   82 #>  [3774,]   76   79   83 #>  [3775,]   76   79   83 #>  [3776,]   77   80   82 #>  [3777,]   77   80   82 #>  [3778,]   76   79   83 #>  [3779,]   77   80   82 #>  [3780,]   76   79   83 #>  [3781,]   77   80   82 #>  [3782,]   76   79   83 #>  [3783,]   77   80   82 #>  [3784,]   77   80   82 #>  [3785,]   76   79   83 #>  [3786,]   77   80   82 #>  [3787,]   76   79   83 #>  [3788,]   76   79   83 #>  [3789,]   76   79   83 #>  [3790,]   77   80   82 #>  [3791,]   76   79   83 #>  [3792,]   76   79   83 #>  [3793,]   77   80   82 #>  [3794,]   77   80   82 #>  [3795,]   76   79   83 #>  [3796,]   77   80   82 #>  [3797,]   76   79   83 #>  [3798,]   76   79   83 #>  [3799,]   77   80   82 #>  [3800,]   77   80   82 #>  [3801,]   78   81   84 #>  [3802,]   79   82   85 #>  [3803,]   79   82   85 #>  [3804,]   80   82   85 #>  [3805,]   79   82   85 #>  [3806,]   79   82   85 #>  [3807,]   80   82   85 #>  [3808,]   79   82   85 #>  [3809,]   78   81   84 #>  [3810,]   80   82   85 #>  [3811,]   78   81   84 #>  [3812,]   79   82   85 #>  [3813,]   78   81   84 #>  [3814,]   80   82   85 #>  [3815,]   79   82   85 #>  [3816,]   80   82   85 #>  [3817,]   78   81   84 #>  [3818,]   78   81   84 #>  [3819,]   79   82   85 #>  [3820,]   78   81   84 #>  [3821,]   79   82   85 #>  [3822,]   80   82   85 #>  [3823,]   79   82   85 #>  [3824,]   80   82   85 #>  [3825,]   80   82   85 #>  [3826,]   79   82   85 #>  [3827,]   78   81   84 #>  [3828,]   78   81   84 #>  [3829,]   78   81   84 #>  [3830,]   79   82   85 #>  [3831,]   79   82   85 #>  [3832,]   79   82   85 #>  [3833,]   78   81   84 #>  [3834,]   79   82   85 #>  [3835,]   79   82   85 #>  [3836,]   78   81   84 #>  [3837,]   79   82   85 #>  [3838,]   78   81   84 #>  [3839,]   78   81   84 #>  [3840,]   79   82   85 #>  [3841,]   78   81   84 #>  [3842,]   78   81   84 #>  [3843,]   79   82   85 #>  [3844,]   79   82   85 #>  [3845,]   80   82   85 #>  [3846,]   79   82   85 #>  [3847,]   79   82   85 #>  [3848,]   79   82   85 #>  [3849,]   80   82   85 #>  [3850,]   80   82   85 #>  [3851,]   78   81   84 #>  [3852,]   80   82   85 #>  [3853,]   78   81   84 #>  [3854,]   78   81   84 #>  [3855,]   80   82   85 #>  [3856,]   78   81   84 #>  [3857,]   80   82   85 #>  [3858,]   78   81   84 #>  [3859,]   80   82   85 #>  [3860,]   79   82   85 #>  [3861,]   79   82   85 #>  [3862,]   78   81   84 #>  [3863,]   79   82   85 #>  [3864,]   79   82   85 #>  [3865,]   78   81   84 #>  [3866,]   78   81   84 #>  [3867,]   80   82   85 #>  [3868,]   79   82   85 #>  [3869,]   79   82   85 #>  [3870,]   78   81   84 #>  [3871,]   80   82   85 #>  [3872,]   80   82   85 #>  [3873,]   80   82   85 #>  [3874,]   79   82   85 #>  [3875,]   79   82   85 #>  [3876,]   80   82   85 #>  [3877,]   78   81   84 #>  [3878,]   79   82   85 #>  [3879,]   78   81   84 #>  [3880,]   79   82   85 #>  [3881,]   79   82   85 #>  [3882,]   78   81   84 #>  [3883,]   78   81   84 #>  [3884,]   78   81   84 #>  [3885,]   78   81   84 #>  [3886,]   80   82   85 #>  [3887,]   78   81   84 #>  [3888,]   80   82   85 #>  [3889,]   78   81   84 #>  [3890,]   78   81   84 #>  [3891,]   78   81   84 #>  [3892,]   79   82   85 #>  [3893,]   78   81   84 #>  [3894,]   78   81   84 #>  [3895,]   79   82   85 #>  [3896,]   79   82   85 #>  [3897,]   79   82   85 #>  [3898,]   79   82   85 #>  [3899,]   79   82   85 #>  [3900,]   79   82   85 #>  [3901,]   82   84   86 #>  [3902,]   82   84   86 #>  [3903,]   81   83   86 #>  [3904,]   81   83   86 #>  [3905,]   82   84   86 #>  [3906,]   82   84   86 #>  [3907,]   81   83   86 #>  [3908,]   81   83   86 #>  [3909,]   82   84   86 #>  [3910,]   82   84   86 #>  [3911,]   82   84   86 #>  [3912,]   81   83   86 #>  [3913,]   82   84   86 #>  [3914,]   82   84   86 #>  [3915,]   82   84   86 #>  [3916,]   82   84   86 #>  [3917,]   82   84   86 #>  [3918,]   82   84   86 #>  [3919,]   82   84   86 #>  [3920,]   82   84   86 #>  [3921,]   82   84   86 #>  [3922,]   82   84   86 #>  [3923,]   82   84   86 #>  [3924,]   82   84   86 #>  [3925,]   81   83   86 #>  [3926,]   82   84   86 #>  [3927,]   82   84   86 #>  [3928,]   82   84   86 #>  [3929,]   82   84   86 #>  [3930,]   82   84   86 #>  [3931,]   81   83   86 #>  [3932,]   82   84   86 #>  [3933,]   82   84   86 #>  [3934,]   82   84   86 #>  [3935,]   82   84   86 #>  [3936,]   82   84   86 #>  [3937,]   82   84   86 #>  [3938,]   82   84   86 #>  [3939,]   82   84   86 #>  [3940,]   82   84   86 #>  [3941,]   82   84   86 #>  [3942,]   82   84   86 #>  [3943,]   82   84   86 #>  [3944,]   82   84   86 #>  [3945,]   82   84   86 #>  [3946,]   82   84   86 #>  [3947,]   81   83   86 #>  [3948,]   82   84   86 #>  [3949,]   82   84   86 #>  [3950,]   82   84   86 #>  [3951,]   82   84   86 #>  [3952,]   81   83   86 #>  [3953,]   82   84   86 #>  [3954,]   82   84   86 #>  [3955,]   82   84   86 #>  [3956,]   82   84   86 #>  [3957,]   81   83   86 #>  [3958,]   82   84   86 #>  [3959,]   81   83   86 #>  [3960,]   81   83   86 #>  [3961,]   82   84   86 #>  [3962,]   82   84   86 #>  [3963,]   82   84   86 #>  [3964,]   82   84   86 #>  [3965,]   82   84   86 #>  [3966,]   82   84   86 #>  [3967,]   82   84   86 #>  [3968,]   81   83   86 #>  [3969,]   82   84   86 #>  [3970,]   82   84   86 #>  [3971,]   82   84   86 #>  [3972,]   82   84   86 #>  [3973,]   82   84   86 #>  [3974,]   82   84   86 #>  [3975,]   82   84   86 #>  [3976,]   82   84   86 #>  [3977,]   82   84   86 #>  [3978,]   82   84   86 #>  [3979,]   82   84   86 #>  [3980,]   81   83   86 #>  [3981,]   82   84   86 #>  [3982,]   82   84   86 #>  [3983,]   82   84   86 #>  [3984,]   82   84   86 #>  [3985,]   82   84   86 #>  [3986,]   81   83   86 #>  [3987,]   82   84   86 #>  [3988,]   82   84   86 #>  [3989,]   82   84   86 #>  [3990,]   82   84   86 #>  [3991,]   82   84   86 #>  [3992,]   82   84   86 #>  [3993,]   82   84   86 #>  [3994,]   82   84   86 #>  [3995,]   82   84   86 #>  [3996,]   81   83   86 #>  [3997,]   81   83   86 #>  [3998,]   81   83   86 #>  [3999,]   82   84   86 #>  [4000,]   82   84   86 #>  [4001,]   83   87   87 #>  [4002,]   83   87   87 #>  [4003,]   84   85   88 #>  [4004,]   83   87   87 #>  [4005,]   83   87   87 #>  [4006,]   84   85   88 #>  [4007,]   83   86   87 #>  [4008,]   83   87   87 #>  [4009,]   83   87   87 #>  [4010,]   83   87   87 #>  [4011,]   83   87   87 #>  [4012,]   83   87   87 #>  [4013,]   83   87   87 #>  [4014,]   83   87   87 #>  [4015,]   83   87   87 #>  [4016,]   83   87   87 #>  [4017,]   83   87   87 #>  [4018,]   83   87   87 #>  [4019,]   84   85   88 #>  [4020,]   83   87   87 #>  [4021,]   83   86   87 #>  [4022,]   83   87   87 #>  [4023,]   83   86   87 #>  [4024,]   83   87   87 #>  [4025,]   84   85   88 #>  [4026,]   83   87   87 #>  [4027,]   83   87   87 #>  [4028,]   83   87   87 #>  [4029,]   83   87   87 #>  [4030,]   83   86   87 #>  [4031,]   83   87   87 #>  [4032,]   83   87   87 #>  [4033,]   84   85   88 #>  [4034,]   84   85   88 #>  [4035,]   83   87   87 #>  [4036,]   83   87   87 #>  [4037,]   83   87   87 #>  [4038,]   83   87   87 #>  [4039,]   83   86   87 #>  [4040,]   83   87   87 #>  [4041,]   83   87   87 #>  [4042,]   83   87   87 #>  [4043,]   83   87   87 #>  [4044,]   83   87   87 #>  [4045,]   83   87   87 #>  [4046,]   83   87   87 #>  [4047,]   83   87   87 #>  [4048,]   83   87   87 #>  [4049,]   83   86   87 #>  [4050,]   83   87   87 #>  [4051,]   83   87   87 #>  [4052,]   83   87   87 #>  [4053,]   83   87   87 #>  [4054,]   83   86   87 #>  [4055,]   83   87   87 #>  [4056,]   83   87   87 #>  [4057,]   83   87   87 #>  [4058,]   83   87   87 #>  [4059,]   83   87   87 #>  [4060,]   84   85   88 #>  [4061,]   83   87   87 #>  [4062,]   83   86   87 #>  [4063,]   83   87   87 #>  [4064,]   83   87   87 #>  [4065,]   84   85   88 #>  [4066,]   83   87   87 #>  [4067,]   83   87   87 #>  [4068,]   83   87   87 #>  [4069,]   83   87   87 #>  [4070,]   84   85   88 #>  [4071,]   83   87   87 #>  [4072,]   83   87   87 #>  [4073,]   84   85   88 #>  [4074,]   83   87   87 #>  [4075,]   83   87   87 #>  [4076,]   83   87   87 #>  [4077,]   83   87   87 #>  [4078,]   83   87   87 #>  [4079,]   83   86   87 #>  [4080,]   83   86   87 #>  [4081,]   83   87   87 #>  [4082,]   83   87   87 #>  [4083,]   83   86   87 #>  [4084,]   83   87   87 #>  [4085,]   83   87   87 #>  [4086,]   83   87   87 #>  [4087,]   83   87   87 #>  [4088,]   83   87   87 #>  [4089,]   83   87   87 #>  [4090,]   83   87   87 #>  [4091,]   83   87   87 #>  [4092,]   83   87   87 #>  [4093,]   84   85   88 #>  [4094,]   83   87   87 #>  [4095,]   83   86   87 #>  [4096,]   83   87   87 #>  [4097,]   83   87   87 #>  [4098,]   84   85   88 #>  [4099,]   83   87   87 #>  [4100,]   83   87   87 #>  [4101,]   86   89   89 #>  [4102,]   86   89   89 #>  [4103,]   86   89   89 #>  [4104,]   85   88   91 #>  [4105,]   86   89   89 #>  [4106,]   86   89   89 #>  [4107,]   86   89   89 #>  [4108,]   85   88   91 #>  [4109,]   85   88   91 #>  [4110,]   85   88   91 #>  [4111,]   86   89   89 #>  [4112,]   86   89   89 #>  [4113,]   86   89   89 #>  [4114,]   86   89   89 #>  [4115,]   86   89   89 #>  [4116,]   86   89   89 #>  [4117,]   86   89   89 #>  [4118,]   86   89   89 #>  [4119,]   86   89   89 #>  [4120,]   85   88   91 #>  [4121,]   86   89   89 #>  [4122,]   86   89   89 #>  [4123,]   86   89   89 #>  [4124,]   86   89   89 #>  [4125,]   86   89   89 #>  [4126,]   86   89   89 #>  [4127,]   86   89   89 #>  [4128,]   86   89   89 #>  [4129,]   86   89   89 #>  [4130,]   85   88   90 #>  [4131,]   86   89   89 #>  [4132,]   86   89   89 #>  [4133,]   86   89   89 #>  [4134,]   86   89   89 #>  [4135,]   86   89   89 #>  [4136,]   86   89   89 #>  [4137,]   86   89   89 #>  [4138,]   86   89   89 #>  [4139,]   86   89   89 #>  [4140,]   86   89   89 #>  [4141,]   86   89   89 #>  [4142,]   86   89   89 #>  [4143,]   85   88   90 #>  [4144,]   86   89   89 #>  [4145,]   86   89   89 #>  [4146,]   86   89   89 #>  [4147,]   86   89   89 #>  [4148,]   86   89   89 #>  [4149,]   86   89   89 #>  [4150,]   86   89   89 #>  [4151,]   85   88   90 #>  [4152,]   86   89   89 #>  [4153,]   86   89   89 #>  [4154,]   86   89   89 #>  [4155,]   86   89   89 #>  [4156,]   85   88   90 #>  [4157,]   86   89   89 #>  [4158,]   86   89   89 #>  [4159,]   86   89   89 #>  [4160,]   85   88   90 #>  [4161,]   86   89   89 #>  [4162,]   86   89   89 #>  [4163,]   86   89   89 #>  [4164,]   85   88   90 #>  [4165,]   86   89   89 #>  [4166,]   86   89   89 #>  [4167,]   85   88   91 #>  [4168,]   86   89   89 #>  [4169,]   86   89   89 #>  [4170,]   86   89   89 #>  [4171,]   86   89   89 #>  [4172,]   86   89   89 #>  [4173,]   86   89   89 #>  [4174,]   86   89   89 #>  [4175,]   86   89   89 #>  [4176,]   86   89   89 #>  [4177,]   86   89   89 #>  [4178,]   85   88   90 #>  [4179,]   86   89   89 #>  [4180,]   86   89   89 #>  [4181,]   86   89   89 #>  [4182,]   86   89   89 #>  [4183,]   86   89   89 #>  [4184,]   86   89   89 #>  [4185,]   85   88   91 #>  [4186,]   86   89   89 #>  [4187,]   86   89   89 #>  [4188,]   86   89   89 #>  [4189,]   85   88   90 #>  [4190,]   86   89   89 #>  [4191,]   85   88   91 #>  [4192,]   86   89   89 #>  [4193,]   86   89   89 #>  [4194,]   86   89   89 #>  [4195,]   85   88   90 #>  [4196,]   86   89   89 #>  [4197,]   86   89   89 #>  [4198,]   86   89   89 #>  [4199,]   86   89   89 #>  [4200,]   86   89   89 #>  [4201,]   87   90   92 #>  [4202,]   87   91   93 #>  [4203,]   87   90   92 #>  [4204,]   87   90   92 #>  [4205,]   87   90   92 #>  [4206,]   87   90   92 #>  [4207,]   87   90   92 #>  [4208,]   87   90   92 #>  [4209,]   87   91   94 #>  [4210,]   87   91   94 #>  [4211,]   87   90   92 #>  [4212,]   87   91   93 #>  [4213,]   87   91   94 #>  [4214,]   87   90   92 #>  [4215,]   87   90   92 #>  [4216,]   87   90   92 #>  [4217,]   87   91   93 #>  [4218,]   88   90   92 #>  [4219,]   87   90   92 #>  [4220,]   87   90   92 #>  [4221,]   87   91   93 #>  [4222,]   87   90   92 #>  [4223,]   87   90   92 #>  [4224,]   87   91   94 #>  [4225,]   87   90   92 #>  [4226,]   87   90   92 #>  [4227,]   87   90   92 #>  [4228,]   87   90   92 #>  [4229,]   87   91   93 #>  [4230,]   87   90   92 #>  [4231,]   87   90   92 #>  [4232,]   87   91   93 #>  [4233,]   87   91   93 #>  [4234,]   87   90   92 #>  [4235,]   87   90   92 #>  [4236,]   87   90   92 #>  [4237,]   87   90   92 #>  [4238,]   87   90   92 #>  [4239,]   87   90   92 #>  [4240,]   87   91   93 #>  [4241,]   87   90   92 #>  [4242,]   88   90   92 #>  [4243,]   87   90   92 #>  [4244,]   87   90   92 #>  [4245,]   87   90   92 #>  [4246,]   87   90   92 #>  [4247,]   87   90   92 #>  [4248,]   87   90   92 #>  [4249,]   87   90   92 #>  [4250,]   87   90   92 #>  [4251,]   88   90   92 #>  [4252,]   87   90   92 #>  [4253,]   88   91   94 #>  [4254,]   87   90   92 #>  [4255,]   87   90   92 #>  [4256,]   87   90   92 #>  [4257,]   87   90   92 #>  [4258,]   87   90   92 #>  [4259,]   87   90   92 #>  [4260,]   87   91   93 #>  [4261,]   87   90   92 #>  [4262,]   87   90   92 #>  [4263,]   87   91   93 #>  [4264,]   87   90   92 #>  [4265,]   87   90   92 #>  [4266,]   87   90   92 #>  [4267,]   87   90   92 #>  [4268,]   87   90   92 #>  [4269,]   87   90   92 #>  [4270,]   87   91   93 #>  [4271,]   87   90   92 #>  [4272,]   87   90   92 #>  [4273,]   87   90   92 #>  [4274,]   87   90   92 #>  [4275,]   87   91   93 #>  [4276,]   87   90   92 #>  [4277,]   87   90   92 #>  [4278,]   87   90   92 #>  [4279,]   88   90   92 #>  [4280,]   87   91   93 #>  [4281,]   87   91   93 #>  [4282,]   87   90   92 #>  [4283,]   87   91   93 #>  [4284,]   88   90   92 #>  [4285,]   87   90   92 #>  [4286,]   87   91   94 #>  [4287,]   87   90   92 #>  [4288,]   87   90   92 #>  [4289,]   87   90   92 #>  [4290,]   87   90   92 #>  [4291,]   87   90   92 #>  [4292,]   87   90   92 #>  [4293,]   87   90   92 #>  [4294,]   88   90   92 #>  [4295,]   87   90   92 #>  [4296,]   87   90   92 #>  [4297,]   87   90   92 #>  [4298,]   87   90   92 #>  [4299,]   87   90   92 #>  [4300,]   87   90   92 #>  [4301,]   89   92   95 #>  [4302,]   89   92   95 #>  [4303,]   89   92   95 #>  [4304,]   90   93   96 #>  [4305,]   89   92   95 #>  [4306,]   89   92   95 #>  [4307,]   89   92   95 #>  [4308,]   89   92   95 #>  [4309,]   89   92   95 #>  [4310,]   89   92   95 #>  [4311,]   89   92   95 #>  [4312,]   89   92   95 #>  [4313,]   89   92   95 #>  [4314,]   90   93   96 #>  [4315,]   89   92   95 #>  [4316,]   89   92   95 #>  [4317,]   89   92   95 #>  [4318,]   89   92   95 #>  [4319,]   89   92   95 #>  [4320,]   89   92   95 #>  [4321,]   89   92   95 #>  [4322,]   89   92   95 #>  [4323,]   89   92   95 #>  [4324,]   89   92   95 #>  [4325,]   89   92   95 #>  [4326,]   89   92   95 #>  [4327,]   90   93   96 #>  [4328,]   89   92   95 #>  [4329,]   89   92   95 #>  [4330,]   89   92   95 #>  [4331,]   89   92   95 #>  [4332,]   89   92   95 #>  [4333,]   89   92   95 #>  [4334,]   89   92   95 #>  [4335,]   89   92   95 #>  [4336,]   89   92   95 #>  [4337,]   89   92   95 #>  [4338,]   89   92   95 #>  [4339,]   89   92   95 #>  [4340,]   89   92   95 #>  [4341,]   89   92   95 #>  [4342,]   89   92   95 #>  [4343,]   89   92   95 #>  [4344,]   89   92   95 #>  [4345,]   89   92   95 #>  [4346,]   89   92   95 #>  [4347,]   89   92   95 #>  [4348,]   89   92   95 #>  [4349,]   89   92   95 #>  [4350,]   89   92   95 #>  [4351,]   89   92   95 #>  [4352,]   89   92   95 #>  [4353,]   89   92   95 #>  [4354,]   89   92   95 #>  [4355,]   89   92   95 #>  [4356,]   89   92   95 #>  [4357,]   89   92   95 #>  [4358,]   89   92   95 #>  [4359,]   89   92   95 #>  [4360,]   89   92   95 #>  [4361,]   90   93   96 #>  [4362,]   89   92   95 #>  [4363,]   89   92   95 #>  [4364,]   89   92   95 #>  [4365,]   89   92   95 #>  [4366,]   89   92   95 #>  [4367,]   89   92   95 #>  [4368,]   89   92   95 #>  [4369,]   90   93   96 #>  [4370,]   89   92   95 #>  [4371,]   89   92   95 #>  [4372,]   89   92   95 #>  [4373,]   89   92   95 #>  [4374,]   89   92   95 #>  [4375,]   89   92   95 #>  [4376,]   89   92   95 #>  [4377,]   89   92   95 #>  [4378,]   89   92   95 #>  [4379,]   89   92   95 #>  [4380,]   89   92   95 #>  [4381,]   89   92   95 #>  [4382,]   90   93   96 #>  [4383,]   89   92   95 #>  [4384,]   89   92   95 #>  [4385,]   89   92   95 #>  [4386,]   89   92   95 #>  [4387,]   89   92   95 #>  [4388,]   89   92   95 #>  [4389,]   89   92   95 #>  [4390,]   89   92   95 #>  [4391,]   89   92   95 #>  [4392,]   90   93   96 #>  [4393,]   90   93   96 #>  [4394,]   89   92   95 #>  [4395,]   89   92   95 #>  [4396,]   90   93   96 #>  [4397,]   90   93   96 #>  [4398,]   89   92   95 #>  [4399,]   89   92   95 #>  [4400,]   89   92   95 #>  [4401,]   91   94   97 #>  [4402,]   92   95   97 #>  [4403,]   91   94   97 #>  [4404,]   91   94   98 #>  [4405,]   92   95   97 #>  [4406,]   91   94   97 #>  [4407,]   92   95   97 #>  [4408,]   91   94   97 #>  [4409,]   93   96   97 #>  [4410,]   93   96   97 #>  [4411,]   91   94   97 #>  [4412,]   93   96   97 #>  [4413,]   92   95   97 #>  [4414,]   91   94   98 #>  [4415,]   91   94   97 #>  [4416,]   91   94   97 #>  [4417,]   92   95   97 #>  [4418,]   93   96   97 #>  [4419,]   91   94   97 #>  [4420,]   92   95   97 #>  [4421,]   93   96   97 #>  [4422,]   92   95   97 #>  [4423,]   92   95   97 #>  [4424,]   92   95   97 #>  [4425,]   91   94   97 #>  [4426,]   91   94   97 #>  [4427,]   93   96   98 #>  [4428,]   91   94   97 #>  [4429,]   92   95   97 #>  [4430,]   93   96   97 #>  [4431,]   93   96   97 #>  [4432,]   93   96   97 #>  [4433,]   93   96   97 #>  [4434,]   91   94   97 #>  [4435,]   91   94   97 #>  [4436,]   93   96   97 #>  [4437,]   91   94   97 #>  [4438,]   91   94   97 #>  [4439,]   92   95   97 #>  [4440,]   92   95   97 #>  [4441,]   93   96   97 #>  [4442,]   91   94   97 #>  [4443,]   91   94   97 #>  [4444,]   92   95   97 #>  [4445,]   91   94   97 #>  [4446,]   91   94   97 #>  [4447,]   92   95   97 #>  [4448,]   93   96   97 #>  [4449,]   91   94   97 #>  [4450,]   92   95   97 #>  [4451,]   92   95   97 #>  [4452,]   91   94   97 #>  [4453,]   92   95   97 #>  [4454,]   92   95   97 #>  [4455,]   91   94   97 #>  [4456,]   91   94   97 #>  [4457,]   91   94   97 #>  [4458,]   93   96   97 #>  [4459,]   91   94   97 #>  [4460,]   93   96   97 #>  [4461,]   93   96   98 #>  [4462,]   91   94   97 #>  [4463,]   92   95   97 #>  [4464,]   91   94   97 #>  [4465,]   91   94   97 #>  [4466,]   91   94   97 #>  [4467,]   91   94   97 #>  [4468,]   91   94   97 #>  [4469,]   91   94   97 #>  [4470,]   92   95   97 #>  [4471,]   92   95   97 #>  [4472,]   91   94   97 #>  [4473,]   91   94   97 #>  [4474,]   93   96   97 #>  [4475,]   93   96   97 #>  [4476,]   92   95   97 #>  [4477,]   91   94   97 #>  [4478,]   92   95   97 #>  [4479,]   91   94   97 #>  [4480,]   92   95   97 #>  [4481,]   92   95   97 #>  [4482,]   91   94   98 #>  [4483,]   92   95   97 #>  [4484,]   92   95   97 #>  [4485,]   91   94   97 #>  [4486,]   92   95   97 #>  [4487,]   92   95   97 #>  [4488,]   92   95   97 #>  [4489,]   91   94   97 #>  [4490,]   92   95   97 #>  [4491,]   91   94   97 #>  [4492,]   93   96   98 #>  [4493,]   93   96   98 #>  [4494,]   91   94   97 #>  [4495,]   92   95   97 #>  [4496,]   91   94   98 #>  [4497,]   91   94   97 #>  [4498,]   91   94   97 #>  [4499,]   93   96   97 #>  [4500,]   91   94   97 #>  [4501,]   94   97   99 #>  [4502,]   94   97   99 #>  [4503,]   94   97   99 #>  [4504,]   94   97   99 #>  [4505,]   94   97   99 #>  [4506,]   94   97   99 #>  [4507,]   94   97   99 #>  [4508,]   94   97   99 #>  [4509,]   94   97   99 #>  [4510,]   94   97   99 #>  [4511,]   94   97   99 #>  [4512,]   94   97   99 #>  [4513,]   94   97   99 #>  [4514,]   94   97   99 #>  [4515,]   94   98  101 #>  [4516,]   94   97   99 #>  [4517,]   94   97   99 #>  [4518,]   94   97   99 #>  [4519,]   94   98  100 #>  [4520,]   94   98  100 #>  [4521,]   94   97   99 #>  [4522,]   94   98  101 #>  [4523,]   94   97   99 #>  [4524,]   94   97   99 #>  [4525,]   94   97   99 #>  [4526,]   94   97   99 #>  [4527,]   94   98  101 #>  [4528,]   94   97   99 #>  [4529,]   94   98  100 #>  [4530,]   94   97   99 #>  [4531,]   94   97   99 #>  [4532,]   94   97   99 #>  [4533,]   94   97   99 #>  [4534,]   94   97   99 #>  [4535,]   94   97   99 #>  [4536,]   94   98  100 #>  [4537,]   94   98  100 #>  [4538,]   94   98  101 #>  [4539,]   94   97   99 #>  [4540,]   94   97   99 #>  [4541,]   94   97   99 #>  [4542,]   94   97   99 #>  [4543,]   94   97   99 #>  [4544,]   94   97   99 #>  [4545,]   94   97   99 #>  [4546,]   94   97   99 #>  [4547,]   94   97   99 #>  [4548,]   94   97   99 #>  [4549,]   94   97   99 #>  [4550,]   94   97   99 #>  [4551,]   94   97   99 #>  [4552,]   94   97   99 #>  [4553,]   94   97   99 #>  [4554,]   94   97   99 #>  [4555,]   94   98  100 #>  [4556,]   94   97   99 #>  [4557,]   94   97   99 #>  [4558,]   94   98  101 #>  [4559,]   94   97   99 #>  [4560,]   94   97   99 #>  [4561,]   94   97   99 #>  [4562,]   94   97   99 #>  [4563,]   94   97   99 #>  [4564,]   94   98  100 #>  [4565,]   94   97   99 #>  [4566,]   94   98  101 #>  [4567,]   94   97   99 #>  [4568,]   94   97   99 #>  [4569,]   94   98  100 #>  [4570,]   94   97   99 #>  [4571,]   94   97   99 #>  [4572,]   94   97   99 #>  [4573,]   94   97   99 #>  [4574,]   94   97   99 #>  [4575,]   94   97   99 #>  [4576,]   94   97   99 #>  [4577,]   94   98  101 #>  [4578,]   94   97   99 #>  [4579,]   94   97   99 #>  [4580,]   94   97   99 #>  [4581,]   94   98  100 #>  [4582,]   94   97   99 #>  [4583,]   94   98  101 #>  [4584,]   94   97   99 #>  [4585,]   94   97   99 #>  [4586,]   94   97   99 #>  [4587,]   94   98  101 #>  [4588,]   94   97   99 #>  [4589,]   94   97   99 #>  [4590,]   94   98  101 #>  [4591,]   94   97   99 #>  [4592,]   94   97   99 #>  [4593,]   94   97   99 #>  [4594,]   94   97   99 #>  [4595,]   94   97   99 #>  [4596,]   94   97   99 #>  [4597,]   94   98  100 #>  [4598,]   94   97   99 #>  [4599,]   94   97   99 #>  [4600,]   94   98  101 #>  [4601,]   96   99  102 #>  [4602,]   95  100  103 #>  [4603,]   96   99  102 #>  [4604,]   96   99  102 #>  [4605,]   96   99  102 #>  [4606,]   95  100  103 #>  [4607,]   96   99  102 #>  [4608,]   96   99  102 #>  [4609,]   96   99  102 #>  [4610,]   96   99  102 #>  [4611,]   95  100  103 #>  [4612,]   95  100  103 #>  [4613,]   96   99  102 #>  [4614,]   96   99  102 #>  [4615,]   95  100  103 #>  [4616,]   96   99  102 #>  [4617,]   95  101  103 #>  [4618,]   96   99  102 #>  [4619,]   96   99  102 #>  [4620,]   96   99  102 #>  [4621,]   96   99  102 #>  [4622,]   96   99  102 #>  [4623,]   95  100  103 #>  [4624,]   96   99  102 #>  [4625,]   96   99  102 #>  [4626,]   96   99  102 #>  [4627,]   96   99  102 #>  [4628,]   96   99  102 #>  [4629,]   95  100  103 #>  [4630,]   95  100  103 #>  [4631,]   95  100  103 #>  [4632,]   96   99  102 #>  [4633,]   96   99  102 #>  [4634,]   95  100  103 #>  [4635,]   96   99  102 #>  [4636,]   96   99  102 #>  [4637,]   95  100  103 #>  [4638,]   96   99  102 #>  [4639,]   96   99  102 #>  [4640,]   96   99  102 #>  [4641,]   96   99  102 #>  [4642,]   95  101  103 #>  [4643,]   95  100  103 #>  [4644,]   95  100  103 #>  [4645,]   96   99  102 #>  [4646,]   96   99  102 #>  [4647,]   95  100  103 #>  [4648,]   95  100  103 #>  [4649,]   96   99  102 #>  [4650,]   96   99  102 #>  [4651,]   96   99  102 #>  [4652,]   96   99  102 #>  [4653,]   96   99  102 #>  [4654,]   96   99  102 #>  [4655,]   96   99  102 #>  [4656,]   95  101  103 #>  [4657,]   96   99  102 #>  [4658,]   96   99  102 #>  [4659,]   96   99  102 #>  [4660,]   95  100  103 #>  [4661,]   95  100  103 #>  [4662,]   96   99  102 #>  [4663,]   95  100  103 #>  [4664,]   95  100  103 #>  [4665,]   95  101  103 #>  [4666,]   96   99  102 #>  [4667,]   96   99  102 #>  [4668,]   96   99  102 #>  [4669,]   96   99  102 #>  [4670,]   95  100  103 #>  [4671,]   96   99  102 #>  [4672,]   96   99  102 #>  [4673,]   96   99  102 #>  [4674,]   96   99  102 #>  [4675,]   95  100  103 #>  [4676,]   96   99  102 #>  [4677,]   96   99  102 #>  [4678,]   95  100  103 #>  [4679,]   95  101  103 #>  [4680,]   96   99  102 #>  [4681,]   95  100  103 #>  [4682,]   96   99  102 #>  [4683,]   96   99  102 #>  [4684,]   96   99  102 #>  [4685,]   96   99  102 #>  [4686,]   96   99  102 #>  [4687,]   96   99  102 #>  [4688,]   96   99  102 #>  [4689,]   96   99  102 #>  [4690,]   96   99  102 #>  [4691,]   96   99  102 #>  [4692,]   95  100  103 #>  [4693,]   96   99  102 #>  [4694,]   95  101  103 #>  [4695,]   95  100  103 #>  [4696,]   96   99  102 #>  [4697,]   96   99  102 #>  [4698,]   96   99  102 #>  [4699,]   96   99  102 #>  [4700,]   95  100  103 #>  [4701,]   97  104  105 #>  [4702,]   98  102  105 #>  [4703,]   98  102  105 #>  [4704,]   97  103  104 #>  [4705,]   98  102  105 #>  [4706,]   98  102  105 #>  [4707,]   98  102  105 #>  [4708,]   97  103  104 #>  [4709,]   97  103  104 #>  [4710,]   98  102  105 #>  [4711,]   97  103  104 #>  [4712,]   98  102  105 #>  [4713,]   97  103  104 #>  [4714,]   98  102  105 #>  [4715,]   98  102  105 #>  [4716,]   98  102  105 #>  [4717,]   97  103  104 #>  [4718,]   98  102  105 #>  [4719,]   98  102  105 #>  [4720,]   98  102  105 #>  [4721,]   98  102  105 #>  [4722,]   97  103  104 #>  [4723,]   98  102  105 #>  [4724,]   98  102  105 #>  [4725,]   98  102  105 #>  [4726,]   98  102  105 #>  [4727,]   97  103  104 #>  [4728,]   98  102  105 #>  [4729,]   98  102  105 #>  [4730,]   97  104  105 #>  [4731,]   98  102  105 #>  [4732,]   98  102  105 #>  [4733,]   98  102  105 #>  [4734,]   98  102  105 #>  [4735,]   97  103  104 #>  [4736,]   98  102  105 #>  [4737,]   98  102  105 #>  [4738,]   98  102  105 #>  [4739,]   98  102  105 #>  [4740,]   98  102  105 #>  [4741,]   98  102  105 #>  [4742,]   98  102  105 #>  [4743,]   97  104  104 #>  [4744,]   97  103  104 #>  [4745,]   98  102  105 #>  [4746,]   97  104  105 #>  [4747,]   98  102  105 #>  [4748,]   98  102  105 #>  [4749,]   97  103  104 #>  [4750,]   98  102  105 #>  [4751,]   98  102  105 #>  [4752,]   97  103  104 #>  [4753,]   98  102  105 #>  [4754,]   97  104  105 #>  [4755,]   97  103  104 #>  [4756,]   98  102  105 #>  [4757,]   98  102  105 #>  [4758,]   97  103  104 #>  [4759,]   98  102  105 #>  [4760,]   98  102  105 #>  [4761,]   98  102  105 #>  [4762,]   98  102  105 #>  [4763,]   98  102  105 #>  [4764,]   98  102  105 #>  [4765,]   98  102  105 #>  [4766,]   97  103  104 #>  [4767,]   98  102  105 #>  [4768,]   98  102  105 #>  [4769,]   97  104  104 #>  [4770,]   98  102  105 #>  [4771,]   98  102  105 #>  [4772,]   98  102  105 #>  [4773,]   98  102  105 #>  [4774,]   98  102  105 #>  [4775,]   98  102  105 #>  [4776,]   98  102  105 #>  [4777,]   98  102  105 #>  [4778,]   98  102  105 #>  [4779,]   97  104  104 #>  [4780,]   97  104  104 #>  [4781,]   97  103  104 #>  [4782,]   97  103  104 #>  [4783,]   97  103  104 #>  [4784,]   98  102  105 #>  [4785,]   98  102  105 #>  [4786,]   98  102  105 #>  [4787,]   97  103  104 #>  [4788,]   97  104  104 #>  [4789,]   97  104  104 #>  [4790,]   97  103  104 #>  [4791,]   97  104  105 #>  [4792,]   97  103  104 #>  [4793,]   98  102  105 #>  [4794,]   98  102  105 #>  [4795,]   97  103  104 #>  [4796,]   97  104  105 #>  [4797,]   98  102  105 #>  [4798,]   98  102  105 #>  [4799,]   97  103  104 #>  [4800,]   98  102  105 #>  [4801,]  100  105  106 #>  [4802,]  100  105  106 #>  [4803,]  100  105  106 #>  [4804,]   99  106  107 #>  [4805,]  100  105  106 #>  [4806,]  100  105  106 #>  [4807,]  100  105  106 #>  [4808,]   99  106  107 #>  [4809,]   99  106  107 #>  [4810,]  100  105  106 #>  [4811,]   99  106  107 #>  [4812,]  100  105  106 #>  [4813,]   99  106  107 #>  [4814,]  100  105  106 #>  [4815,]  100  105  106 #>  [4816,]  100  105  106 #>  [4817,]   99  106  107 #>  [4818,]  100  105  106 #>  [4819,]  100  105  106 #>  [4820,]  100  105  106 #>  [4821,]  100  105  106 #>  [4822,]   99  106  107 #>  [4823,]  100  105  106 #>  [4824,]  100  105  106 #>  [4825,]  100  105  106 #>  [4826,]  100  105  106 #>  [4827,]   99  106  107 #>  [4828,]  100  105  106 #>  [4829,]  100  105  106 #>  [4830,]  100  105  106 #>  [4831,]  100  105  106 #>  [4832,]  100  105  106 #>  [4833,]  100  105  106 #>  [4834,]  100  105  106 #>  [4835,]   99  106  107 #>  [4836,]  100  105  106 #>  [4837,]  100  105  106 #>  [4838,]  100  105  106 #>  [4839,]  100  105  106 #>  [4840,]  100  105  106 #>  [4841,]  100  105  106 #>  [4842,]  100  105  106 #>  [4843,]  100  105  106 #>  [4844,]   99  106  107 #>  [4845,]  100  105  106 #>  [4846,]  100  105  106 #>  [4847,]  100  105  106 #>  [4848,]  100  105  106 #>  [4849,]  100  105  106 #>  [4850,]  100  105  106 #>  [4851,]  100  105  106 #>  [4852,]   99  106  107 #>  [4853,]  100  105  106 #>  [4854,]  100  105  106 #>  [4855,]  100  105  106 #>  [4856,]  100  105  106 #>  [4857,]  100  105  106 #>  [4858,]   99  106  107 #>  [4859,]  100  105  106 #>  [4860,]  100  105  106 #>  [4861,]  100  105  106 #>  [4862,]  100  105  106 #>  [4863,]  100  105  106 #>  [4864,]  100  105  106 #>  [4865,]  100  105  106 #>  [4866,]   99  106  107 #>  [4867,]  100  105  106 #>  [4868,]  100  105  106 #>  [4869,]  100  105  106 #>  [4870,]  100  105  106 #>  [4871,]  100  105  106 #>  [4872,]  100  105  106 #>  [4873,]  100  105  106 #>  [4874,]  100  105  106 #>  [4875,]  100  105  106 #>  [4876,]  100  105  106 #>  [4877,]  100  105  106 #>  [4878,]  100  105  106 #>  [4879,]  100  105  106 #>  [4880,]  100  105  106 #>  [4881,]   99  106  107 #>  [4882,]   99  106  107 #>  [4883,]  100  105  106 #>  [4884,]  100  105  106 #>  [4885,]  100  105  106 #>  [4886,]  100  105  106 #>  [4887,]   99  106  107 #>  [4888,]  100  105  106 #>  [4889,]  100  105  106 #>  [4890,]   99  106  107 #>  [4891,]  100  105  106 #>  [4892,]   99  106  107 #>  [4893,]  100  105  106 #>  [4894,]  100  105  106 #>  [4895,]   99  106  107 #>  [4896,]  100  105  106 #>  [4897,]  100  105  106 #>  [4898,]  100  105  106 #>  [4899,]   99  106  107 #>  [4900,]  100  105  106 #>  [4901,]  101  107  108 #>  [4902,]  101  107  108 #>  [4903,]  101  107  108 #>  [4904,]  101  107  108 #>  [4905,]  102  108  109 #>  [4906,]  101  107  108 #>  [4907,]  101  107  108 #>  [4908,]  101  107  108 #>  [4909,]  101  107  108 #>  [4910,]  101  107  108 #>  [4911,]  101  107  108 #>  [4912,]  101  107  108 #>  [4913,]  101  107  108 #>  [4914,]  101  107  108 #>  [4915,]  101  107  108 #>  [4916,]  101  107  108 #>  [4917,]  101  107  108 #>  [4918,]  102  108  109 #>  [4919,]  101  107  108 #>  [4920,]  101  107  108 #>  [4921,]  101  107  108 #>  [4922,]  101  107  108 #>  [4923,]  101  107  108 #>  [4924,]  101  107  108 #>  [4925,]  101  107  108 #>  [4926,]  101  107  108 #>  [4927,]  101  107  108 #>  [4928,]  101  107  108 #>  [4929,]  101  107  108 #>  [4930,]  101  107  108 #>  [4931,]  101  107  108 #>  [4932,]  102  108  109 #>  [4933,]  101  107  108 #>  [4934,]  101  107  108 #>  [4935,]  101  107  108 #>  [4936,]  101  107  108 #>  [4937,]  101  107  108 #>  [4938,]  101  107  108 #>  [4939,]  101  107  108 #>  [4940,]  101  107  108 #>  [4941,]  101  107  108 #>  [4942,]  101  107  108 #>  [4943,]  101  107  108 #>  [4944,]  101  107  108 #>  [4945,]  101  107  108 #>  [4946,]  101  107  108 #>  [4947,]  101  107  108 #>  [4948,]  101  107  108 #>  [4949,]  101  107  108 #>  [4950,]  101  107  108 #>  [4951,]  101  107  108 #>  [4952,]  101  107  108 #>  [4953,]  101  107  108 #>  [4954,]  101  107  108 #>  [4955,]  101  107  108 #>  [4956,]  101  107  108 #>  [4957,]  101  107  108 #>  [4958,]  101  107  108 #>  [4959,]  101  107  108 #>  [4960,]  101  107  108 #>  [4961,]  101  107  108 #>  [4962,]  101  107  108 #>  [4963,]  101  107  108 #>  [4964,]  101  107  108 #>  [4965,]  101  107  108 #>  [4966,]  101  107  108 #>  [4967,]  101  107  108 #>  [4968,]  101  107  108 #>  [4969,]  101  107  108 #>  [4970,]  101  107  108 #>  [4971,]  102  108  109 #>  [4972,]  101  107  108 #>  [4973,]  101  107  108 #>  [4974,]  101  107  108 #>  [4975,]  102  108  109 #>  [4976,]  101  107  108 #>  [4977,]  101  107  108 #>  [4978,]  101  107  108 #>  [4979,]  101  107  108 #>  [4980,]  101  107  108 #>  [4981,]  101  107  108 #>  [4982,]  101  107  108 #>  [4983,]  101  107  108 #>  [4984,]  101  107  108 #>  [4985,]  101  107  108 #>  [4986,]  101  107  108 #>  [4987,]  101  107  108 #>  [4988,]  101  107  108 #>  [4989,]  101  107  108 #>  [4990,]  101  107  108 #>  [4991,]  102  108  109 #>  [4992,]  101  107  108 #>  [4993,]  101  107  108 #>  [4994,]  101  107  108 #>  [4995,]  102  108  109 #>  [4996,]  101  107  108 #>  [4997,]  101  107  108 #>  [4998,]  101  107  108 #>  [4999,]  101  107  108 #>  [5000,]  102  108  109 #>  [5001,]  103  109  111 #>  [5002,]  103  109  110 #>  [5003,]  104  110  110 #>  [5004,]  103  109  111 #>  [5005,]  103  109  111 #>  [5006,]  104  110  110 #>  [5007,]  103  109  110 #>  [5008,]  103  109  110 #>  [5009,]  103  109  110 #>  [5010,]  103  109  111 #>  [5011,]  103  109  111 #>  [5012,]  104  110  111 #>  [5013,]  103  109  111 #>  [5014,]  103  109  111 #>  [5015,]  103  109  111 #>  [5016,]  103  109  111 #>  [5017,]  103  109  111 #>  [5018,]  103  109  111 #>  [5019,]  104  110  111 #>  [5020,]  104  110  110 #>  [5021,]  103  109  110 #>  [5022,]  103  109  111 #>  [5023,]  103  109  110 #>  [5024,]  103  109  111 #>  [5025,]  104  110  110 #>  [5026,]  103  109  111 #>  [5027,]  103  109  111 #>  [5028,]  104  110  111 #>  [5029,]  103  109  110 #>  [5030,]  103  109  110 #>  [5031,]  103  109  111 #>  [5032,]  103  109  111 #>  [5033,]  104  110  111 #>  [5034,]  104  110  110 #>  [5035,]  103  109  110 #>  [5036,]  103  109  110 #>  [5037,]  103  109  110 #>  [5038,]  103  109  111 #>  [5039,]  103  109  111 #>  [5040,]  103  109  110 #>  [5041,]  103  109  110 #>  [5042,]  103  109  110 #>  [5043,]  103  109  111 #>  [5044,]  103  109  110 #>  [5045,]  103  109  110 #>  [5046,]  103  109  111 #>  [5047,]  103  109  111 #>  [5048,]  103  109  111 #>  [5049,]  103  109  110 #>  [5050,]  103  109  110 #>  [5051,]  103  109  111 #>  [5052,]  103  109  111 #>  [5053,]  103  109  110 #>  [5054,]  103  109  110 #>  [5055,]  103  109  110 #>  [5056,]  103  109  110 #>  [5057,]  103  109  110 #>  [5058,]  103  109  111 #>  [5059,]  103  109  111 #>  [5060,]  104  110  110 #>  [5061,]  103  109  111 #>  [5062,]  103  109  110 #>  [5063,]  103  109  111 #>  [5064,]  103  109  110 #>  [5065,]  104  110  110 #>  [5066,]  103  109  111 #>  [5067,]  103  109  110 #>  [5068,]  103  109  111 #>  [5069,]  103  109  111 #>  [5070,]  104  110  111 #>  [5071,]  103  109  111 #>  [5072,]  103  109  110 #>  [5073,]  104  110  110 #>  [5074,]  103  109  110 #>  [5075,]  103  109  111 #>  [5076,]  103  109  110 #>  [5077,]  103  109  111 #>  [5078,]  103  109  110 #>  [5079,]  103  109  111 #>  [5080,]  103  109  110 #>  [5081,]  103  109  110 #>  [5082,]  103  109  110 #>  [5083,]  103  109  111 #>  [5084,]  103  109  110 #>  [5085,]  103  109  110 #>  [5086,]  103  109  110 #>  [5087,]  103  109  111 #>  [5088,]  103  109  110 #>  [5089,]  103  109  110 #>  [5090,]  103  109  111 #>  [5091,]  103  109  111 #>  [5092,]  103  109  111 #>  [5093,]  104  110  110 #>  [5094,]  103  109  110 #>  [5095,]  103  109  111 #>  [5096,]  103  109  111 #>  [5097,]  104  110  110 #>  [5098,]  104  110  110 #>  [5099,]  103  109  110 #>  [5100,]  103  109  111 #>  [5101,]  105  111  113 #>  [5102,]  105  111  113 #>  [5103,]  105  111  113 #>  [5104,]  105  111  113 #>  [5105,]  106  112  112 #>  [5106,]  105  111  113 #>  [5107,]  105  111  113 #>  [5108,]  105  111  113 #>  [5109,]  105  111  113 #>  [5110,]  105  111  113 #>  [5111,]  105  111  113 #>  [5112,]  105  111  113 #>  [5113,]  105  111  113 #>  [5114,]  105  111  113 #>  [5115,]  105  111  113 #>  [5116,]  105  111  113 #>  [5117,]  105  111  113 #>  [5118,]  106  112  112 #>  [5119,]  105  111  113 #>  [5120,]  105  111  113 #>  [5121,]  105  111  113 #>  [5122,]  105  111  113 #>  [5123,]  105  111  113 #>  [5124,]  105  111  113 #>  [5125,]  105  111  113 #>  [5126,]  105  111  113 #>  [5127,]  105  111  113 #>  [5128,]  105  111  113 #>  [5129,]  105  111  113 #>  [5130,]  105  111  113 #>  [5131,]  105  111  113 #>  [5132,]  106  112  112 #>  [5133,]  105  111  113 #>  [5134,]  105  111  113 #>  [5135,]  105  111  113 #>  [5136,]  105  111  113 #>  [5137,]  105  111  113 #>  [5138,]  105  111  113 #>  [5139,]  105  111  113 #>  [5140,]  105  111  113 #>  [5141,]  105  111  113 #>  [5142,]  105  111  113 #>  [5143,]  105  111  113 #>  [5144,]  105  111  113 #>  [5145,]  105  111  113 #>  [5146,]  105  111  113 #>  [5147,]  105  111  113 #>  [5148,]  105  111  113 #>  [5149,]  105  111  113 #>  [5150,]  105  111  113 #>  [5151,]  105  111  113 #>  [5152,]  105  111  113 #>  [5153,]  105  111  113 #>  [5154,]  105  111  113 #>  [5155,]  105  111  113 #>  [5156,]  105  111  113 #>  [5157,]  105  111  113 #>  [5158,]  105  111  113 #>  [5159,]  105  111  113 #>  [5160,]  105  111  113 #>  [5161,]  105  111  113 #>  [5162,]  105  111  113 #>  [5163,]  105  111  113 #>  [5164,]  105  111  113 #>  [5165,]  105  111  113 #>  [5166,]  105  111  113 #>  [5167,]  105  111  113 #>  [5168,]  105  111  113 #>  [5169,]  105  111  113 #>  [5170,]  105  111  113 #>  [5171,]  106  112  112 #>  [5172,]  105  111  113 #>  [5173,]  105  111  113 #>  [5174,]  105  111  113 #>  [5175,]  106  112  112 #>  [5176,]  105  111  113 #>  [5177,]  105  111  113 #>  [5178,]  105  111  113 #>  [5179,]  105  111  113 #>  [5180,]  105  111  113 #>  [5181,]  105  111  113 #>  [5182,]  105  111  113 #>  [5183,]  105  111  113 #>  [5184,]  105  111  113 #>  [5185,]  105  111  113 #>  [5186,]  105  111  113 #>  [5187,]  105  111  113 #>  [5188,]  105  111  113 #>  [5189,]  105  111  113 #>  [5190,]  105  111  113 #>  [5191,]  106  112  112 #>  [5192,]  105  111  113 #>  [5193,]  105  111  113 #>  [5194,]  105  111  113 #>  [5195,]  106  112  112 #>  [5196,]  105  111  113 #>  [5197,]  105  111  113 #>  [5198,]  105  111  113 #>  [5199,]  105  111  113 #>  [5200,]  106  112  112 #>  [5201,]  108  114  115 #>  [5202,]  108  114  115 #>  [5203,]  107  113  114 #>  [5204,]  108  114  115 #>  [5205,]  108  114  115 #>  [5206,]  108  114  115 #>  [5207,]  107  113  114 #>  [5208,]  107  113  114 #>  [5209,]  108  114  115 #>  [5210,]  108  114  115 #>  [5211,]  108  114  115 #>  [5212,]  108  114  115 #>  [5213,]  108  114  115 #>  [5214,]  108  114  115 #>  [5215,]  108  114  115 #>  [5216,]  108  114  115 #>  [5217,]  108  114  115 #>  [5218,]  108  114  115 #>  [5219,]  108  114  115 #>  [5220,]  107  113  114 #>  [5221,]  108  114  115 #>  [5222,]  108  114  115 #>  [5223,]  108  114  115 #>  [5224,]  108  114  115 #>  [5225,]  107  113  114 #>  [5226,]  108  114  115 #>  [5227,]  108  114  115 #>  [5228,]  108  114  115 #>  [5229,]  108  114  115 #>  [5230,]  108  114  115 #>  [5231,]  108  114  115 #>  [5232,]  108  114  115 #>  [5233,]  108  114  115 #>  [5234,]  108  114  115 #>  [5235,]  108  114  115 #>  [5236,]  108  114  115 #>  [5237,]  108  114  115 #>  [5238,]  108  114  115 #>  [5239,]  107  113  114 #>  [5240,]  108  114  115 #>  [5241,]  108  114  115 #>  [5242,]  108  114  115 #>  [5243,]  108  114  115 #>  [5244,]  107  113  114 #>  [5245,]  108  114  115 #>  [5246,]  107  113  114 #>  [5247,]  108  114  115 #>  [5248,]  108  114  115 #>  [5249,]  107  113  114 #>  [5250,]  107  113  114 #>  [5251,]  108  114  115 #>  [5252,]  108  114  115 #>  [5253,]  107  113  114 #>  [5254,]  108  114  115 #>  [5255,]  107  113  114 #>  [5256,]  107  113  114 #>  [5257,]  108  114  115 #>  [5258,]  108  114  115 #>  [5259,]  107  113  114 #>  [5260,]  108  114  115 #>  [5261,]  108  114  115 #>  [5262,]  108  114  115 #>  [5263,]  108  114  115 #>  [5264,]  108  114  115 #>  [5265,]  107  113  114 #>  [5266,]  107  113  114 #>  [5267,]  108  114  115 #>  [5268,]  108  114  115 #>  [5269,]  108  114  115 #>  [5270,]  107  113  114 #>  [5271,]  108  114  115 #>  [5272,]  108  114  115 #>  [5273,]  108  114  115 #>  [5274,]  108  114  115 #>  [5275,]  108  114  115 #>  [5276,]  108  114  115 #>  [5277,]  108  114  115 #>  [5278,]  108  114  115 #>  [5279,]  108  114  115 #>  [5280,]  108  114  115 #>  [5281,]  108  114  115 #>  [5282,]  108  114  115 #>  [5283,]  108  114  115 #>  [5284,]  107  113  114 #>  [5285,]  108  114  115 #>  [5286,]  107  113  114 #>  [5287,]  108  114  115 #>  [5288,]  108  114  115 #>  [5289,]  108  114  115 #>  [5290,]  107  113  114 #>  [5291,]  108  114  115 #>  [5292,]  108  114  115 #>  [5293,]  108  114  115 #>  [5294,]  108  114  115 #>  [5295,]  108  114  115 #>  [5296,]  108  114  115 #>  [5297,]  108  114  115 #>  [5298,]  107  113  114 #>  [5299,]  108  114  115 #>  [5300,]  107  113  114 #>  [5301,]  110  115  116 #>  [5302,]  109  115  116 #>  [5303,]  110  115  116 #>  [5304,]  110  115  116 #>  [5305,]  109  115  116 #>  [5306,]  109  115  116 #>  [5307,]  110  115  116 #>  [5308,]  109  115  116 #>  [5309,]  110  115  116 #>  [5310,]  110  115  116 #>  [5311,]  109  115  116 #>  [5312,]  109  115  116 #>  [5313,]  110  115  116 #>  [5314,]  110  115  116 #>  [5315,]  109  115  116 #>  [5316,]  110  115  116 #>  [5317,]  109  115  116 #>  [5318,]  109  116  117 #>  [5319,]  109  115  116 #>  [5320,]  110  115  116 #>  [5321,]  109  115  116 #>  [5322,]  110  115  116 #>  [5323,]  109  115  116 #>  [5324,]  110  115  116 #>  [5325,]  110  115  116 #>  [5326,]  109  115  116 #>  [5327,]  109  115  116 #>  [5328,]  110  115  116 #>  [5329,]  109  115  116 #>  [5330,]  109  115  116 #>  [5331,]  109  115  116 #>  [5332,]  109  115  116 #>  [5333,]  109  115  116 #>  [5334,]  109  115  116 #>  [5335,]  109  115  116 #>  [5336,]  110  115  116 #>  [5337,]  109  115  116 #>  [5338,]  109  115  116 #>  [5339,]  110  115  116 #>  [5340,]  109  115  116 #>  [5341,]  110  115  116 #>  [5342,]  109  116  117 #>  [5343,]  109  115  116 #>  [5344,]  109  115  116 #>  [5345,]  110  115  116 #>  [5346,]  109  115  116 #>  [5347,]  109  115  116 #>  [5348,]  109  115  116 #>  [5349,]  110  115  116 #>  [5350,]  110  115  116 #>  [5351,]  109  116  117 #>  [5352,]  110  115  116 #>  [5353,]  110  116  117 #>  [5354,]  110  115  116 #>  [5355,]  110  115  116 #>  [5356,]  109  115  116 #>  [5357,]  110  115  116 #>  [5358,]  110  115  116 #>  [5359,]  110  115  116 #>  [5360,]  109  115  116 #>  [5361,]  109  115  116 #>  [5362,]  109  115  116 #>  [5363,]  109  115  116 #>  [5364,]  109  115  116 #>  [5365,]  109  115  116 #>  [5366,]  109  115  116 #>  [5367,]  110  115  116 #>  [5368,]  109  115  116 #>  [5369,]  109  115  116 #>  [5370,]  109  115  116 #>  [5371,]  110  115  116 #>  [5372,]  110  115  116 #>  [5373,]  110  115  116 #>  [5374,]  109  115  116 #>  [5375,]  109  115  116 #>  [5376,]  110  115  116 #>  [5377,]  109  115  116 #>  [5378,]  109  115  116 #>  [5379,]  109  116  117 #>  [5380,]  109  115  116 #>  [5381,]  109  115  116 #>  [5382,]  109  115  116 #>  [5383,]  109  115  116 #>  [5384,]  109  116  117 #>  [5385,]  110  115  116 #>  [5386,]  110  115  116 #>  [5387,]  110  115  116 #>  [5388,]  110  115  116 #>  [5389,]  109  115  116 #>  [5390,]  110  115  116 #>  [5391,]  110  115  116 #>  [5392,]  109  115  116 #>  [5393,]  109  115  116 #>  [5394,]  109  116  117 #>  [5395,]  109  115  116 #>  [5396,]  109  115  116 #>  [5397,]  109  115  116 #>  [5398,]  109  115  116 #>  [5399,]  109  115  116 #>  [5400,]  109  115  116 #>  [5401,]  112  119  119 #>  [5402,]  112  119  119 #>  [5403,]  111  117  118 #>  [5404,]  112  119  119 #>  [5405,]  112  119  119 #>  [5406,]  112  118  119 #>  [5407,]  111  117  118 #>  [5408,]  112  119  119 #>  [5409,]  112  119  119 #>  [5410,]  112  119  119 #>  [5411,]  112  119  119 #>  [5412,]  112  119  119 #>  [5413,]  112  119  119 #>  [5414,]  112  119  119 #>  [5415,]  112  119  119 #>  [5416,]  112  119  119 #>  [5417,]  112  119  119 #>  [5418,]  112  119  119 #>  [5419,]  112  119  119 #>  [5420,]  112  118  119 #>  [5421,]  111  117  118 #>  [5422,]  112  119  119 #>  [5423,]  111  117  118 #>  [5424,]  112  119  119 #>  [5425,]  112  118  119 #>  [5426,]  112  119  119 #>  [5427,]  112  119  119 #>  [5428,]  112  119  119 #>  [5429,]  112  119  119 #>  [5430,]  111  117  118 #>  [5431,]  111  117  118 #>  [5432,]  112  119  119 #>  [5433,]  112  119  119 #>  [5434,]  112  118  119 #>  [5435,]  112  118  119 #>  [5436,]  112  119  119 #>  [5437,]  112  118  119 #>  [5438,]  112  119  119 #>  [5439,]  111  117  118 #>  [5440,]  112  119  119 #>  [5441,]  112  119  119 #>  [5442,]  112  118  119 #>  [5443,]  112  119  119 #>  [5444,]  112  118  119 #>  [5445,]  112  119  119 #>  [5446,]  112  119  119 #>  [5447,]  111  117  118 #>  [5448,]  112  119  119 #>  [5449,]  111  117  118 #>  [5450,]  112  119  119 #>  [5451,]  112  119  119 #>  [5452,]  112  119  119 #>  [5453,]  112  118  119 #>  [5454,]  111  117  118 #>  [5455,]  112  118  119 #>  [5456,]  112  118  119 #>  [5457,]  112  118  119 #>  [5458,]  112  119  119 #>  [5459,]  112  119  119 #>  [5460,]  112  119  119 #>  [5461,]  112  119  119 #>  [5462,]  111  117  118 #>  [5463,]  112  119  119 #>  [5464,]  112  118  119 #>  [5465,]  112  118  119 #>  [5466,]  112  119  119 #>  [5467,]  112  119  119 #>  [5468,]  112  119  119 #>  [5469,]  112  119  119 #>  [5470,]  111  117  118 #>  [5471,]  112  119  119 #>  [5472,]  112  119  119 #>  [5473,]  112  118  119 #>  [5474,]  112  118  119 #>  [5475,]  112  119  119 #>  [5476,]  112  119  119 #>  [5477,]  111  117  118 #>  [5478,]  112  119  119 #>  [5479,]  111  117  118 #>  [5480,]  111  117  118 #>  [5481,]  112  119  119 #>  [5482,]  112  118  119 #>  [5483,]  111  117  118 #>  [5484,]  112  118  119 #>  [5485,]  112  118  119 #>  [5486,]  112  118  119 #>  [5487,]  112  119  119 #>  [5488,]  112  118  119 #>  [5489,]  112  118  119 #>  [5490,]  112  119  119 #>  [5491,]  112  119  119 #>  [5492,]  112  119  119 #>  [5493,]  112  119  119 #>  [5494,]  112  118  119 #>  [5495,]  111  117  118 #>  [5496,]  112  119  119 #>  [5497,]  112  119  119 #>  [5498,]  111  117  118 #>  [5499,]  112  118  119 #>  [5500,]  112  119  119 #>  [5501,]  114  121  121 #>  [5502,]  114  121  121 #>  [5503,]  113  120  120 #>  [5504,]  114  121  121 #>  [5505,]  114  121  121 #>  [5506,]  114  121  121 #>  [5507,]  113  120  120 #>  [5508,]  113  120  120 #>  [5509,]  114  121  121 #>  [5510,]  114  121  121 #>  [5511,]  114  121  121 #>  [5512,]  114  121  121 #>  [5513,]  113  120  120 #>  [5514,]  114  121  121 #>  [5515,]  114  121  121 #>  [5516,]  113  120  120 #>  [5517,]  113  120  120 #>  [5518,]  114  121  121 #>  [5519,]  114  121  121 #>  [5520,]  113  120  120 #>  [5521,]  114  121  121 #>  [5522,]  113  120  120 #>  [5523,]  114  121  121 #>  [5524,]  113  120  120 #>  [5525,]  113  120  120 #>  [5526,]  114  121  121 #>  [5527,]  114  121  121 #>  [5528,]  114  121  121 #>  [5529,]  114  121  121 #>  [5530,]  114  121  121 #>  [5531,]  114  121  121 #>  [5532,]  114  121  121 #>  [5533,]  114  121  121 #>  [5534,]  114  121  121 #>  [5535,]  114  121  121 #>  [5536,]  114  121  121 #>  [5537,]  114  121  121 #>  [5538,]  114  121  121 #>  [5539,]  113  120  120 #>  [5540,]  113  120  120 #>  [5541,]  114  121  121 #>  [5542,]  114  121  121 #>  [5543,]  113  120  120 #>  [5544,]  113  120  120 #>  [5545,]  113  120  120 #>  [5546,]  113  120  120 #>  [5547,]  113  120  120 #>  [5548,]  114  121  121 #>  [5549,]  113  120  120 #>  [5550,]  113  120  120 #>  [5551,]  113  120  120 #>  [5552,]  114  121  121 #>  [5553,]  113  120  120 #>  [5554,]  113  120  120 #>  [5555,]  113  120  120 #>  [5556,]  113  120  120 #>  [5557,]  114  121  121 #>  [5558,]  114  121  121 #>  [5559,]  113  120  120 #>  [5560,]  114  121  121 #>  [5561,]  114  121  121 #>  [5562,]  114  121  121 #>  [5563,]  113  120  120 #>  [5564,]  114  121  121 #>  [5565,]  113  120  120 #>  [5566,]  113  120  120 #>  [5567,]  114  121  121 #>  [5568,]  114  121  121 #>  [5569,]  114  121  121 #>  [5570,]  113  120  120 #>  [5571,]  114  121  121 #>  [5572,]  113  120  120 #>  [5573,]  114  121  121 #>  [5574,]  114  121  121 #>  [5575,]  114  121  121 #>  [5576,]  113  120  120 #>  [5577,]  113  120  120 #>  [5578,]  113  120  120 #>  [5579,]  113  120  120 #>  [5580,]  114  121  121 #>  [5581,]  114  121  121 #>  [5582,]  114  121  121 #>  [5583,]  113  120  120 #>  [5584,]  113  120  120 #>  [5585,]  114  121  121 #>  [5586,]  113  120  120 #>  [5587,]  114  121  121 #>  [5588,]  114  121  121 #>  [5589,]  113  120  120 #>  [5590,]  113  120  120 #>  [5591,]  114  121  121 #>  [5592,]  114  121  121 #>  [5593,]  114  121  121 #>  [5594,]  113  120  120 #>  [5595,]  114  121  121 #>  [5596,]  114  121  121 #>  [5597,]  114  121  121 #>  [5598,]  113  120  120 #>  [5599,]  114  121  121 #>  [5600,]  113  120  120 #>  [5601,]  115  122  122 #>  [5602,]  115  122  122 #>  [5603,]  116  123  123 #>  [5604,]  115  122  122 #>  [5605,]  115  122  122 #>  [5606,]  116  123  123 #>  [5607,]  115  122  122 #>  [5608,]  115  122  122 #>  [5609,]  115  122  122 #>  [5610,]  115  122  122 #>  [5611,]  115  122  122 #>  [5612,]  115  122  122 #>  [5613,]  115  122  122 #>  [5614,]  115  122  122 #>  [5615,]  115  122  122 #>  [5616,]  115  122  122 #>  [5617,]  115  122  122 #>  [5618,]  115  122  122 #>  [5619,]  116  123  123 #>  [5620,]  115  122  122 #>  [5621,]  115  122  122 #>  [5622,]  115  122  122 #>  [5623,]  115  122  122 #>  [5624,]  115  122  122 #>  [5625,]  116  123  123 #>  [5626,]  115  122  122 #>  [5627,]  115  122  122 #>  [5628,]  115  122  122 #>  [5629,]  115  122  122 #>  [5630,]  115  122  122 #>  [5631,]  115  122  122 #>  [5632,]  115  122  122 #>  [5633,]  116  123  123 #>  [5634,]  116  123  123 #>  [5635,]  115  122  122 #>  [5636,]  115  122  122 #>  [5637,]  115  122  122 #>  [5638,]  115  122  122 #>  [5639,]  115  122  122 #>  [5640,]  115  122  122 #>  [5641,]  115  122  122 #>  [5642,]  115  122  122 #>  [5643,]  115  122  122 #>  [5644,]  115  122  122 #>  [5645,]  115  122  122 #>  [5646,]  115  122  122 #>  [5647,]  115  122  122 #>  [5648,]  115  122  122 #>  [5649,]  115  122  122 #>  [5650,]  115  122  122 #>  [5651,]  115  122  122 #>  [5652,]  115  122  122 #>  [5653,]  115  122  122 #>  [5654,]  115  122  122 #>  [5655,]  115  122  122 #>  [5656,]  115  122  122 #>  [5657,]  115  122  122 #>  [5658,]  115  122  122 #>  [5659,]  115  122  122 #>  [5660,]  116  123  123 #>  [5661,]  115  122  122 #>  [5662,]  115  122  122 #>  [5663,]  115  122  122 #>  [5664,]  115  122  122 #>  [5665,]  116  123  123 #>  [5666,]  115  122  122 #>  [5667,]  115  122  122 #>  [5668,]  115  122  122 #>  [5669,]  115  122  122 #>  [5670,]  116  123  123 #>  [5671,]  115  122  122 #>  [5672,]  115  122  122 #>  [5673,]  116  123  123 #>  [5674,]  115  122  122 #>  [5675,]  115  122  122 #>  [5676,]  115  122  122 #>  [5677,]  115  122  122 #>  [5678,]  115  122  122 #>  [5679,]  115  122  122 #>  [5680,]  115  122  122 #>  [5681,]  115  122  122 #>  [5682,]  115  122  122 #>  [5683,]  115  122  122 #>  [5684,]  115  122  122 #>  [5685,]  115  122  122 #>  [5686,]  115  122  122 #>  [5687,]  115  122  122 #>  [5688,]  115  122  122 #>  [5689,]  115  122  122 #>  [5690,]  115  122  122 #>  [5691,]  115  122  122 #>  [5692,]  115  122  122 #>  [5693,]  116  123  123 #>  [5694,]  115  122  122 #>  [5695,]  115  122  122 #>  [5696,]  115  122  122 #>  [5697,]  115  122  122 #>  [5698,]  116  123  123 #>  [5699,]  115  122  122 #>  [5700,]  115  122  122 #>  [5701,]  117  125  125 #>  [5702,]  117  125  125 #>  [5703,]  117  124  124 #>  [5704,]  117  125  125 #>  [5705,]  117  125  125 #>  [5706,]  117  125  125 #>  [5707,]  117  124  124 #>  [5708,]  117  125  125 #>  [5709,]  117  125  125 #>  [5710,]  117  125  125 #>  [5711,]  117  125  125 #>  [5712,]  117  125  125 #>  [5713,]  117  124  124 #>  [5714,]  117  125  125 #>  [5715,]  117  125  125 #>  [5716,]  117  124  124 #>  [5717,]  117  125  125 #>  [5718,]  117  125  125 #>  [5719,]  117  125  125 #>  [5720,]  117  125  125 #>  [5721,]  117  124  124 #>  [5722,]  117  125  125 #>  [5723,]  117  124  124 #>  [5724,]  117  125  125 #>  [5725,]  117  125  125 #>  [5726,]  117  125  125 #>  [5727,]  117  125  125 #>  [5728,]  117  125  125 #>  [5729,]  117  125  125 #>  [5730,]  117  124  124 #>  [5731,]  117  124  124 #>  [5732,]  117  125  125 #>  [5733,]  117  125  125 #>  [5734,]  117  125  125 #>  [5735,]  117  125  125 #>  [5736,]  117  125  125 #>  [5737,]  117  125  125 #>  [5738,]  117  125  125 #>  [5739,]  117  124  124 #>  [5740,]  117  124  124 #>  [5741,]  117  125  125 #>  [5742,]  117  125  125 #>  [5743,]  117  125  125 #>  [5744,]  117  125  125 #>  [5745,]  117  125  125 #>  [5746,]  117  125  125 #>  [5747,]  117  124  124 #>  [5748,]  117  125  125 #>  [5749,]  117  124  124 #>  [5750,]  117  125  125 #>  [5751,]  117  125  125 #>  [5752,]  117  125  125 #>  [5753,]  117  125  125 #>  [5754,]  117  124  124 #>  [5755,]  117  125  125 #>  [5756,]  117  125  125 #>  [5757,]  117  125  125 #>  [5758,]  117  125  125 #>  [5759,]  117  125  125 #>  [5760,]  117  125  125 #>  [5761,]  117  125  125 #>  [5762,]  117  124  124 #>  [5763,]  117  125  125 #>  [5764,]  117  125  125 #>  [5765,]  117  125  125 #>  [5766,]  117  125  125 #>  [5767,]  117  125  125 #>  [5768,]  117  125  125 #>  [5769,]  117  125  125 #>  [5770,]  117  124  124 #>  [5771,]  117  125  125 #>  [5772,]  117  125  125 #>  [5773,]  117  125  125 #>  [5774,]  117  125  125 #>  [5775,]  117  125  125 #>  [5776,]  117  125  125 #>  [5777,]  117  124  124 #>  [5778,]  117  125  125 #>  [5779,]  117  124  124 #>  [5780,]  117  124  124 #>  [5781,]  117  125  125 #>  [5782,]  117  125  125 #>  [5783,]  117  124  124 #>  [5784,]  117  125  125 #>  [5785,]  117  125  125 #>  [5786,]  117  125  125 #>  [5787,]  117  125  125 #>  [5788,]  117  125  125 #>  [5789,]  117  125  125 #>  [5790,]  117  125  125 #>  [5791,]  117  125  125 #>  [5792,]  117  125  125 #>  [5793,]  117  125  125 #>  [5794,]  117  125  125 #>  [5795,]  117  124  124 #>  [5796,]  117  125  125 #>  [5797,]  117  125  125 #>  [5798,]  117  124  124 #>  [5799,]  117  125  125 #>  [5800,]  117  125  125 #>  [5801,]  119  127  127 #>  [5802,]  119  127  129 #>  [5803,]  118  126  126 #>  [5804,]  119  127  127 #>  [5805,]  119  127  128 #>  [5806,]  119  127  129 #>  [5807,]  118  126  126 #>  [5808,]  118  126  126 #>  [5809,]  119  127  127 #>  [5810,]  119  127  127 #>  [5811,]  119  127  129 #>  [5812,]  119  127  129 #>  [5813,]  118  126  126 #>  [5814,]  119  127  129 #>  [5815,]  119  127  127 #>  [5816,]  118  126  126 #>  [5817,]  118  126  126 #>  [5818,]  119  127  127 #>  [5819,]  119  127  129 #>  [5820,]  118  126  126 #>  [5821,]  119  127  127 #>  [5822,]  118  126  126 #>  [5823,]  119  127  127 #>  [5824,]  118  126  126 #>  [5825,]  118  126  126 #>  [5826,]  119  127  129 #>  [5827,]  119  127  127 #>  [5828,]  119  127  127 #>  [5829,]  119  127  129 #>  [5830,]  119  127  128 #>  [5831,]  119  127  128 #>  [5832,]  119  127  128 #>  [5833,]  119  127  129 #>  [5834,]  119  127  128 #>  [5835,]  119  127  129 #>  [5836,]  119  127  129 #>  [5837,]  119  127  127 #>  [5838,]  119  127  129 #>  [5839,]  118  126  126 #>  [5840,]  118  126  126 #>  [5841,]  119  127  129 #>  [5842,]  119  127  128 #>  [5843,]  118  126  126 #>  [5844,]  118  126  126 #>  [5845,]  118  126  126 #>  [5846,]  118  126  126 #>  [5847,]  118  126  126 #>  [5848,]  119  127  128 #>  [5849,]  118  126  126 #>  [5850,]  118  126  126 #>  [5851,]  119  127  128 #>  [5852,]  119  127  129 #>  [5853,]  118  126  126 #>  [5854,]  118  126  126 #>  [5855,]  118  126  126 #>  [5856,]  118  126  126 #>  [5857,]  119  127  129 #>  [5858,]  119  127  129 #>  [5859,]  118  126  126 #>  [5860,]  119  127  128 #>  [5861,]  119  127  127 #>  [5862,]  119  127  128 #>  [5863,]  118  126  126 #>  [5864,]  119  127  127 #>  [5865,]  118  126  126 #>  [5866,]  118  126  126 #>  [5867,]  119  127  128 #>  [5868,]  119  127  129 #>  [5869,]  119  127  129 #>  [5870,]  118  126  126 #>  [5871,]  119  127  127 #>  [5872,]  118  126  126 #>  [5873,]  119  127  127 #>  [5874,]  119  127  127 #>  [5875,]  119  127  127 #>  [5876,]  119  127  127 #>  [5877,]  118  126  126 #>  [5878,]  118  126  126 #>  [5879,]  118  126  126 #>  [5880,]  119  127  129 #>  [5881,]  119  127  129 #>  [5882,]  119  127  127 #>  [5883,]  119  127  129 #>  [5884,]  118  126  126 #>  [5885,]  119  127  128 #>  [5886,]  118  126  126 #>  [5887,]  119  127  127 #>  [5888,]  119  127  127 #>  [5889,]  118  126  126 #>  [5890,]  118  126  126 #>  [5891,]  119  127  128 #>  [5892,]  119  127  129 #>  [5893,]  119  127  129 #>  [5894,]  118  126  126 #>  [5895,]  119  127  127 #>  [5896,]  119  127  127 #>  [5897,]  119  127  129 #>  [5898,]  118  126  126 #>  [5899,]  119  127  129 #>  [5900,]  118  126  126 #>  [5901,]  120  128  130 #>  [5902,]  120  128  130 #>  [5903,]  120  128  130 #>  [5904,]  120  128  130 #>  [5905,]  120  128  130 #>  [5906,]  120  128  130 #>  [5907,]  120  128  130 #>  [5908,]  120  128  130 #>  [5909,]  120  128  130 #>  [5910,]  120  128  130 #>  [5911,]  120  128  130 #>  [5912,]  120  128  130 #>  [5913,]  120  128  130 #>  [5914,]  120  128  130 #>  [5915,]  120  128  130 #>  [5916,]  120  128  130 #>  [5917,]  120  128  130 #>  [5918,]  120  128  130 #>  [5919,]  121  129  131 #>  [5920,]  121  129  131 #>  [5921,]  120  128  130 #>  [5922,]  121  129  131 #>  [5923,]  120  128  130 #>  [5924,]  120  128  130 #>  [5925,]  120  128  130 #>  [5926,]  120  128  130 #>  [5927,]  121  129  131 #>  [5928,]  120  128  130 #>  [5929,]  121  129  131 #>  [5930,]  120  128  130 #>  [5931,]  120  128  130 #>  [5932,]  120  128  130 #>  [5933,]  120  128  130 #>  [5934,]  120  128  130 #>  [5935,]  120  128  130 #>  [5936,]  121  129  131 #>  [5937,]  120  128  130 #>  [5938,]  120  128  130 #>  [5939,]  120  128  130 #>  [5940,]  120  128  130 #>  [5941,]  120  128  130 #>  [5942,]  120  128  130 #>  [5943,]  120  128  130 #>  [5944,]  120  128  130 #>  [5945,]  120  128  130 #>  [5946,]  120  128  130 #>  [5947,]  120  128  130 #>  [5948,]  120  128  130 #>  [5949,]  120  128  130 #>  [5950,]  120  128  130 #>  [5951,]  120  128  130 #>  [5952,]  120  128  130 #>  [5953,]  120  128  130 #>  [5954,]  120  128  130 #>  [5955,]  121  129  131 #>  [5956,]  120  128  130 #>  [5957,]  120  128  130 #>  [5958,]  121  129  131 #>  [5959,]  120  128  130 #>  [5960,]  120  128  130 #>  [5961,]  120  128  130 #>  [5962,]  120  128  130 #>  [5963,]  120  128  130 #>  [5964,]  121  129  131 #>  [5965,]  120  128  130 #>  [5966,]  121  129  131 #>  [5967,]  120  128  130 #>  [5968,]  120  128  130 #>  [5969,]  120  128  130 #>  [5970,]  120  128  130 #>  [5971,]  120  128  130 #>  [5972,]  120  128  130 #>  [5973,]  120  128  130 #>  [5974,]  120  128  130 #>  [5975,]  120  128  130 #>  [5976,]  120  128  130 #>  [5977,]  121  129  131 #>  [5978,]  120  128  130 #>  [5979,]  120  128  130 #>  [5980,]  120  128  130 #>  [5981,]  121  129  131 #>  [5982,]  120  128  130 #>  [5983,]  121  129  131 #>  [5984,]  120  128  130 #>  [5985,]  120  128  130 #>  [5986,]  120  128  130 #>  [5987,]  121  129  131 #>  [5988,]  120  128  130 #>  [5989,]  120  128  130 #>  [5990,]  120  128  130 #>  [5991,]  120  128  130 #>  [5992,]  120  128  130 #>  [5993,]  120  128  130 #>  [5994,]  120  128  130 #>  [5995,]  120  128  130 #>  [5996,]  120  128  130 #>  [5997,]  121  129  131 #>  [5998,]  120  128  130 #>  [5999,]  120  128  130 #>  [6000,]  121  129  131 #>  [6001,]  123  131  133 #>  [6002,]  123  131  133 #>  [6003,]  122  130  132 #>  [6004,]  122  130  132 #>  [6005,]  123  131  133 #>  [6006,]  123  131  133 #>  [6007,]  122  130  132 #>  [6008,]  122  130  132 #>  [6009,]  123  131  133 #>  [6010,]  122  130  132 #>  [6011,]  123  131  133 #>  [6012,]  122  130  132 #>  [6013,]  123  131  133 #>  [6014,]  122  130  132 #>  [6015,]  123  131  133 #>  [6016,]  122  130  132 #>  [6017,]  123  131  133 #>  [6018,]  123  131  133 #>  [6019,]  123  131  133 #>  [6020,]  123  131  133 #>  [6021,]  123  131  133 #>  [6022,]  123  131  133 #>  [6023,]  122  130  132 #>  [6024,]  123  131  133 #>  [6025,]  122  130  132 #>  [6026,]  122  130  132 #>  [6027,]  123  131  133 #>  [6028,]  123  131  133 #>  [6029,]  123  131  133 #>  [6030,]  123  131  133 #>  [6031,]  122  130  132 #>  [6032,]  122  130  132 #>  [6033,]  123  131  133 #>  [6034,]  123  131  133 #>  [6035,]  122  130  132 #>  [6036,]  123  131  133 #>  [6037,]  122  130  132 #>  [6038,]  123  131  133 #>  [6039,]  123  131  133 #>  [6040,]  122  130  132 #>  [6041,]  123  131  133 #>  [6042,]  123  131  133 #>  [6043,]  123  131  133 #>  [6044,]  122  130  132 #>  [6045,]  122  130  132 #>  [6046,]  122  130  132 #>  [6047,]  122  130  132 #>  [6048,]  123  131  133 #>  [6049,]  123  131  133 #>  [6050,]  123  131  133 #>  [6051,]  123  131  133 #>  [6052,]  122  130  132 #>  [6053,]  123  131  133 #>  [6054,]  123  131  133 #>  [6055,]  122  130  132 #>  [6056,]  123  131  133 #>  [6057,]  122  130  132 #>  [6058,]  123  131  133 #>  [6059,]  122  130  132 #>  [6060,]  122  130  132 #>  [6061,]  123  131  133 #>  [6062,]  123  131  133 #>  [6063,]  123  131  133 #>  [6064,]  123  131  133 #>  [6065,]  123  131  133 #>  [6066,]  123  131  133 #>  [6067,]  122  130  132 #>  [6068,]  122  130  132 #>  [6069,]  123  131  133 #>  [6070,]  123  131  133 #>  [6071,]  123  131  133 #>  [6072,]  122  130  132 #>  [6073,]  123  131  133 #>  [6074,]  122  130  132 #>  [6075,]  122  130  132 #>  [6076,]  122  130  132 #>  [6077,]  123  131  133 #>  [6078,]  122  130  132 #>  [6079,]  123  131  133 #>  [6080,]  122  130  132 #>  [6081,]  123  131  133 #>  [6082,]  123  131  133 #>  [6083,]  123  131  133 #>  [6084,]  123  131  133 #>  [6085,]  123  131  133 #>  [6086,]  122  130  132 #>  [6087,]  123  131  133 #>  [6088,]  122  130  132 #>  [6089,]  123  131  133 #>  [6090,]  123  131  133 #>  [6091,]  123  131  133 #>  [6092,]  122  130  132 #>  [6093,]  123  131  133 #>  [6094,]  123  131  133 #>  [6095,]  122  130  132 #>  [6096,]  122  130  132 #>  [6097,]  122  130  132 #>  [6098,]  122  130  132 #>  [6099,]  123  131  133 #>  [6100,]  123  131  133 #>  [6101,]  124  132  134 #>  [6102,]  124  132  134 #>  [6103,]  124  132  134 #>  [6104,]  124  132  134 #>  [6105,]  124  132  134 #>  [6106,]  124  132  134 #>  [6107,]  124  132  134 #>  [6108,]  125  133  135 #>  [6109,]  125  133  135 #>  [6110,]  124  132  134 #>  [6111,]  124  132  134 #>  [6112,]  124  132  134 #>  [6113,]  124  132  134 #>  [6114,]  124  132  134 #>  [6115,]  124  132  134 #>  [6116,]  124  132  134 #>  [6117,]  124  132  134 #>  [6118,]  124  132  134 #>  [6119,]  124  132  134 #>  [6120,]  124  132  134 #>  [6121,]  124  132  134 #>  [6122,]  124  132  134 #>  [6123,]  124  132  134 #>  [6124,]  124  132  134 #>  [6125,]  124  132  134 #>  [6126,]  125  133  135 #>  [6127,]  124  132  134 #>  [6128,]  124  132  134 #>  [6129,]  124  132  134 #>  [6130,]  124  132  134 #>  [6131,]  124  132  134 #>  [6132,]  124  132  134 #>  [6133,]  124  132  134 #>  [6134,]  124  132  134 #>  [6135,]  124  132  134 #>  [6136,]  124  132  134 #>  [6137,]  124  132  134 #>  [6138,]  124  132  134 #>  [6139,]  124  132  134 #>  [6140,]  124  132  134 #>  [6141,]  124  132  134 #>  [6142,]  124  132  134 #>  [6143,]  124  132  134 #>  [6144,]  124  132  134 #>  [6145,]  124  132  134 #>  [6146,]  124  132  134 #>  [6147,]  124  132  134 #>  [6148,]  124  132  134 #>  [6149,]  124  132  134 #>  [6150,]  124  132  134 #>  [6151,]  124  132  134 #>  [6152,]  124  132  134 #>  [6153,]  124  132  134 #>  [6154,]  124  132  134 #>  [6155,]  124  132  134 #>  [6156,]  125  133  135 #>  [6157,]  124  132  134 #>  [6158,]  124  132  134 #>  [6159,]  124  132  134 #>  [6160,]  124  132  134 #>  [6161,]  125  133  135 #>  [6162,]  124  132  134 #>  [6163,]  124  132  134 #>  [6164,]  124  132  134 #>  [6165,]  124  132  134 #>  [6166,]  124  132  134 #>  [6167,]  124  132  134 #>  [6168,]  124  132  134 #>  [6169,]  124  132  134 #>  [6170,]  124  132  134 #>  [6171,]  124  132  134 #>  [6172,]  124  132  134 #>  [6173,]  124  132  134 #>  [6174,]  124  132  134 #>  [6175,]  124  132  134 #>  [6176,]  125  133  135 #>  [6177,]  124  132  134 #>  [6178,]  124  132  134 #>  [6179,]  124  132  134 #>  [6180,]  124  132  134 #>  [6181,]  124  132  134 #>  [6182,]  124  132  134 #>  [6183,]  124  132  134 #>  [6184,]  124  132  134 #>  [6185,]  124  132  134 #>  [6186,]  124  132  134 #>  [6187,]  124  132  134 #>  [6188,]  124  132  134 #>  [6189,]  124  132  134 #>  [6190,]  124  132  134 #>  [6191,]  124  132  134 #>  [6192,]  124  132  134 #>  [6193,]  124  132  134 #>  [6194,]  124  132  134 #>  [6195,]  124  132  134 #>  [6196,]  124  132  134 #>  [6197,]  124  132  134 #>  [6198,]  124  132  134 #>  [6199,]  124  132  134 #>  [6200,]  124  132  134 #>  [6201,]  127  135  136 #>  [6202,]  126  134  136 #>  [6203,]  126  134  136 #>  [6204,]  126  134  136 #>  [6205,]  126  134  136 #>  [6206,]  126  134  136 #>  [6207,]  126  134  136 #>  [6208,]  126  134  137 #>  [6209,]  127  135  137 #>  [6210,]  126  134  136 #>  [6211,]  127  135  136 #>  [6212,]  126  134  136 #>  [6213,]  127  135  136 #>  [6214,]  126  134  136 #>  [6215,]  126  134  136 #>  [6216,]  126  134  136 #>  [6217,]  127  135  136 #>  [6218,]  127  135  136 #>  [6219,]  126  134  136 #>  [6220,]  127  135  136 #>  [6221,]  126  134  136 #>  [6222,]  126  134  136 #>  [6223,]  126  134  136 #>  [6224,]  126  134  136 #>  [6225,]  126  134  136 #>  [6226,]  126  134  137 #>  [6227,]  127  135  136 #>  [6228,]  127  135  136 #>  [6229,]  127  135  136 #>  [6230,]  126  134  136 #>  [6231,]  126  134  136 #>  [6232,]  126  134  136 #>  [6233,]  127  135  136 #>  [6234,]  126  134  136 #>  [6235,]  126  134  136 #>  [6236,]  127  135  136 #>  [6237,]  126  134  136 #>  [6238,]  127  135  136 #>  [6239,]  127  135  136 #>  [6240,]  126  134  136 #>  [6241,]  126  134  136 #>  [6242,]  127  135  136 #>  [6243,]  126  134  137 #>  [6244,]  126  134  136 #>  [6245,]  126  134  136 #>  [6246,]  126  134  137 #>  [6247,]  126  134  136 #>  [6248,]  126  134  136 #>  [6249,]  126  134  136 #>  [6250,]  126  134  136 #>  [6251,]  127  135  136 #>  [6252,]  126  134  136 #>  [6253,]  127  135  136 #>  [6254,]  127  135  136 #>  [6255,]  126  134  136 #>  [6256,]  127  135  137 #>  [6257,]  126  134  136 #>  [6258,]  127  135  136 #>  [6259,]  126  134  136 #>  [6260,]  126  134  136 #>  [6261,]  126  134  137 #>  [6262,]  127  135  136 #>  [6263,]  126  134  136 #>  [6264,]  126  134  137 #>  [6265,]  127  135  136 #>  [6266,]  127  135  136 #>  [6267,]  126  134  136 #>  [6268,]  126  134  136 #>  [6269,]  126  134  136 #>  [6270,]  126  134  136 #>  [6271,]  126  134  136 #>  [6272,]  126  134  136 #>  [6273,]  126  134  136 #>  [6274,]  126  134  136 #>  [6275,]  126  134  136 #>  [6276,]  126  134  137 #>  [6277,]  127  135  136 #>  [6278,]  126  134  136 #>  [6279,]  127  135  136 #>  [6280,]  126  134  136 #>  [6281,]  126  134  136 #>  [6282,]  127  135  136 #>  [6283,]  127  135  136 #>  [6284,]  127  135  136 #>  [6285,]  127  135  136 #>  [6286,]  126  134  136 #>  [6287,]  127  135  136 #>  [6288,]  126  134  136 #>  [6289,]  127  135  136 #>  [6290,]  126  134  136 #>  [6291,]  127  135  136 #>  [6292,]  126  134  136 #>  [6293,]  127  135  136 #>  [6294,]  127  135  137 #>  [6295,]  126  134  136 #>  [6296,]  126  134  136 #>  [6297,]  126  134  136 #>  [6298,]  126  134  136 #>  [6299,]  126  134  136 #>  [6300,]  126  134  136 #>  [6301,]  129  137  139 #>  [6302,]  129  137  138 #>  [6303,]  129  137  138 #>  [6304,]  129  137  139 #>  [6305,]  129  137  139 #>  [6306,]  129  137  139 #>  [6307,]  128  136  138 #>  [6308,]  129  137  139 #>  [6309,]  129  137  139 #>  [6310,]  129  137  139 #>  [6311,]  129  137  139 #>  [6312,]  129  137  139 #>  [6313,]  129  137  138 #>  [6314,]  129  137  139 #>  [6315,]  129  137  139 #>  [6316,]  129  137  138 #>  [6317,]  129  137  139 #>  [6318,]  129  137  138 #>  [6319,]  129  137  138 #>  [6320,]  129  137  139 #>  [6321,]  128  136  138 #>  [6322,]  129  137  138 #>  [6323,]  128  136  138 #>  [6324,]  129  137  138 #>  [6325,]  129  137  139 #>  [6326,]  129  137  139 #>  [6327,]  129  137  139 #>  [6328,]  129  137  139 #>  [6329,]  129  137  139 #>  [6330,]  128  136  138 #>  [6331,]  129  137  138 #>  [6332,]  129  137  139 #>  [6333,]  129  137  139 #>  [6334,]  129  137  138 #>  [6335,]  129  137  138 #>  [6336,]  129  137  138 #>  [6337,]  129  137  138 #>  [6338,]  129  137  139 #>  [6339,]  128  136  138 #>  [6340,]  129  137  138 #>  [6341,]  129  137  139 #>  [6342,]  129  137  139 #>  [6343,]  129  137  139 #>  [6344,]  129  137  138 #>  [6345,]  129  137  139 #>  [6346,]  129  137  139 #>  [6347,]  129  137  138 #>  [6348,]  129  137  139 #>  [6349,]  128  136  138 #>  [6350,]  129  137  139 #>  [6351,]  129  137  139 #>  [6352,]  129  137  139 #>  [6353,]  129  137  139 #>  [6354,]  128  136  138 #>  [6355,]  129  137  139 #>  [6356,]  129  137  139 #>  [6357,]  129  137  139 #>  [6358,]  129  137  139 #>  [6359,]  129  137  139 #>  [6360,]  129  137  139 #>  [6361,]  129  137  139 #>  [6362,]  128  136  138 #>  [6363,]  129  137  139 #>  [6364,]  129  137  139 #>  [6365,]  129  137  139 #>  [6366,]  129  137  139 #>  [6367,]  129  137  139 #>  [6368,]  129  137  139 #>  [6369,]  129  137  139 #>  [6370,]  128  136  138 #>  [6371,]  129  137  139 #>  [6372,]  129  137  139 #>  [6373,]  129  137  139 #>  [6374,]  129  137  139 #>  [6375,]  129  137  139 #>  [6376,]  129  137  139 #>  [6377,]  129  137  138 #>  [6378,]  129  137  139 #>  [6379,]  129  137  138 #>  [6380,]  128  136  138 #>  [6381,]  129  137  139 #>  [6382,]  129  137  139 #>  [6383,]  128  136  138 #>  [6384,]  129  137  139 #>  [6385,]  129  137  139 #>  [6386,]  129  137  139 #>  [6387,]  129  137  139 #>  [6388,]  129  137  139 #>  [6389,]  129  137  139 #>  [6390,]  129  137  139 #>  [6391,]  129  137  139 #>  [6392,]  129  137  139 #>  [6393,]  129  137  138 #>  [6394,]  129  137  139 #>  [6395,]  128  136  138 #>  [6396,]  129  137  139 #>  [6397,]  129  137  139 #>  [6398,]  128  136  138 #>  [6399,]  129  137  139 #>  [6400,]  129  137  138 #>  [6401,]  131  139  142 #>  [6402,]  130  138  140 #>  [6403,]  131  139  141 #>  [6404,]  131  139  142 #>  [6405,]  131  139  142 #>  [6406,]  130  138  140 #>  [6407,]  131  139  141 #>  [6408,]  131  139  141 #>  [6409,]  131  139  142 #>  [6410,]  131  139  142 #>  [6411,]  130  138  140 #>  [6412,]  130  138  140 #>  [6413,]  131  139  141 #>  [6414,]  131  139  142 #>  [6415,]  130  138  140 #>  [6416,]  131  139  141 #>  [6417,]  130  138  140 #>  [6418,]  131  139  142 #>  [6419,]  130  138  140 #>  [6420,]  131  139  141 #>  [6421,]  131  139  142 #>  [6422,]  131  139  141 #>  [6423,]  130  138  140 #>  [6424,]  131  139  141 #>  [6425,]  131  139  141 #>  [6426,]  130  138  140 #>  [6427,]  131  139  142 #>  [6428,]  131  139  142 #>  [6429,]  130  138  140 #>  [6430,]  130  138  140 #>  [6431,]  130  138  140 #>  [6432,]  131  139  142 #>  [6433,]  131  139  142 #>  [6434,]  130  138  140 #>  [6435,]  130  138  140 #>  [6436,]  131  139  142 #>  [6437,]  130  138  140 #>  [6438,]  131  139  142 #>  [6439,]  131  139  141 #>  [6440,]  131  139  141 #>  [6441,]  131  139  142 #>  [6442,]  130  138  140 #>  [6443,]  130  138  140 #>  [6444,]  130  138  140 #>  [6445,]  131  139  142 #>  [6446,]  130  138  140 #>  [6447,]  130  138  140 #>  [6448,]  130  138  140 #>  [6449,]  131  139  141 #>  [6450,]  131  139  141 #>  [6451,]  131  139  142 #>  [6452,]  131  139  142 #>  [6453,]  131  139  141 #>  [6454,]  131  139  141 #>  [6455,]  131  139  141 #>  [6456,]  130  138  140 #>  [6457,]  131  139  142 #>  [6458,]  131  139  142 #>  [6459,]  131  139  141 #>  [6460,]  130  138  140 #>  [6461,]  130  138  140 #>  [6462,]  131  139  142 #>  [6463,]  130  138  140 #>  [6464,]  130  138  140 #>  [6465,]  130  138  140 #>  [6466,]  130  138  140 #>  [6467,]  131  139  142 #>  [6468,]  130  138  140 #>  [6469,]  131  139  142 #>  [6470,]  130  138  140 #>  [6471,]  131  139  142 #>  [6472,]  131  139  141 #>  [6473,]  131  139  142 #>  [6474,]  131  139  142 #>  [6475,]  130  138  140 #>  [6476,]  131  139  142 #>  [6477,]  131  139  142 #>  [6478,]  130  138  140 #>  [6479,]  130  138  140 #>  [6480,]  131  139  142 #>  [6481,]  130  138  140 #>  [6482,]  131  139  142 #>  [6483,]  131  139  142 #>  [6484,]  131  139  141 #>  [6485,]  131  139  142 #>  [6486,]  131  139  141 #>  [6487,]  131  139  142 #>  [6488,]  131  139  142 #>  [6489,]  131  139  141 #>  [6490,]  131  139  141 #>  [6491,]  131  139  142 #>  [6492,]  130  138  140 #>  [6493,]  130  138  140 #>  [6494,]  130  138  140 #>  [6495,]  130  138  140 #>  [6496,]  130  138  140 #>  [6497,]  131  139  142 #>  [6498,]  131  139  141 #>  [6499,]  131  139  142 #>  [6500,]  130  138  140 #>  [6501,]  134  142  144 #>  [6502,]  134  142  144 #>  [6503,]  133  141  144 #>  [6504,]  133  141  144 #>  [6505,]  132  140  143 #>  [6506,]  134  142  144 #>  [6507,]  133  141  144 #>  [6508,]  133  141  144 #>  [6509,]  133  141  144 #>  [6510,]  133  141  144 #>  [6511,]  134  142  144 #>  [6512,]  133  141  144 #>  [6513,]  134  142  144 #>  [6514,]  134  142  144 #>  [6515,]  134  142  144 #>  [6516,]  134  142  144 #>  [6517,]  134  142  144 #>  [6518,]  132  140  143 #>  [6519,]  134  142  144 #>  [6520,]  133  141  144 #>  [6521,]  134  142  144 #>  [6522,]  134  142  144 #>  [6523,]  133  141  144 #>  [6524,]  133  141  144 #>  [6525,]  133  141  144 #>  [6526,]  134  142  144 #>  [6527,]  134  142  144 #>  [6528,]  133  141  144 #>  [6529,]  134  142  144 #>  [6530,]  133  141  144 #>  [6531,]  133  141  144 #>  [6532,]  133  141  144 #>  [6533,]  134  142  144 #>  [6534,]  133  141  144 #>  [6535,]  134  142  144 #>  [6536,]  133  141  144 #>  [6537,]  134  142  144 #>  [6538,]  133  141  144 #>  [6539,]  133  141  144 #>  [6540,]  133  141  144 #>  [6541,]  134  142  144 #>  [6542,]  133  141  144 #>  [6543,]  133  141  144 #>  [6544,]  134  142  144 #>  [6545,]  133  141  144 #>  [6546,]  133  141  144 #>  [6547,]  134  142  144 #>  [6548,]  133  141  144 #>  [6549,]  133  141  144 #>  [6550,]  134  142  144 #>  [6551,]  133  141  144 #>  [6552,]  134  142  144 #>  [6553,]  133  141  144 #>  [6554,]  133  141  144 #>  [6555,]  134  142  144 #>  [6556,]  133  141  144 #>  [6557,]  133  141  144 #>  [6558,]  134  142  144 #>  [6559,]  134  142  144 #>  [6560,]  133  141  144 #>  [6561,]  134  142  144 #>  [6562,]  133  141  144 #>  [6563,]  133  141  144 #>  [6564,]  133  141  144 #>  [6565,]  133  141  144 #>  [6566,]  133  141  144 #>  [6567,]  133  141  144 #>  [6568,]  134  142  144 #>  [6569,]  133  141  144 #>  [6570,]  134  142  144 #>  [6571,]  132  140  143 #>  [6572,]  133  141  144 #>  [6573,]  134  142  144 #>  [6574,]  133  141  144 #>  [6575,]  132  140  143 #>  [6576,]  134  142  144 #>  [6577,]  134  142  144 #>  [6578,]  133  141  144 #>  [6579,]  134  142  144 #>  [6580,]  133  141  144 #>  [6581,]  134  142  144 #>  [6582,]  133  141  144 #>  [6583,]  134  142  144 #>  [6584,]  134  142  144 #>  [6585,]  133  141  144 #>  [6586,]  134  142  144 #>  [6587,]  134  142  144 #>  [6588,]  133  141  144 #>  [6589,]  133  141  144 #>  [6590,]  134  142  144 #>  [6591,]  133  141  144 #>  [6592,]  134  142  144 #>  [6593,]  134  142  144 #>  [6594,]  134  142  144 #>  [6595,]  133  141  144 #>  [6596,]  134  142  144 #>  [6597,]  134  142  144 #>  [6598,]  134  142  144 #>  [6599,]  134  142  144 #>  [6600,]  132  140  143 #>  [6601,]  136  144  146 #>  [6602,]  135  143  145 #>  [6603,]  135  143  145 #>  [6604,]  135  143  145 #>  [6605,]  135  143  145 #>  [6606,]  136  144  146 #>  [6607,]  135  143  145 #>  [6608,]  135  143  145 #>  [6609,]  135  143  145 #>  [6610,]  135  143  145 #>  [6611,]  135  143  145 #>  [6612,]  135  143  145 #>  [6613,]  136  144  146 #>  [6614,]  136  144  146 #>  [6615,]  136  144  146 #>  [6616,]  136  144  146 #>  [6617,]  135  143  145 #>  [6618,]  135  143  145 #>  [6619,]  135  143  145 #>  [6620,]  135  143  145 #>  [6621,]  136  144  146 #>  [6622,]  135  143  145 #>  [6623,]  135  143  145 #>  [6624,]  135  143  145 #>  [6625,]  135  143  145 #>  [6626,]  135  143  145 #>  [6627,]  135  143  145 #>  [6628,]  135  143  145 #>  [6629,]  136  144  146 #>  [6630,]  135  143  145 #>  [6631,]  135  143  145 #>  [6632,]  135  143  145 #>  [6633,]  136  144  146 #>  [6634,]  135  143  145 #>  [6635,]  135  143  145 #>  [6636,]  135  143  145 #>  [6637,]  135  143  145 #>  [6638,]  135  143  145 #>  [6639,]  135  143  145 #>  [6640,]  135  143  145 #>  [6641,]  136  144  146 #>  [6642,]  135  143  145 #>  [6643,]  135  143  145 #>  [6644,]  136  144  146 #>  [6645,]  135  143  145 #>  [6646,]  135  143  145 #>  [6647,]  135  143  145 #>  [6648,]  135  143  145 #>  [6649,]  135  143  145 #>  [6650,]  136  144  146 #>  [6651,]  135  143  145 #>  [6652,]  135  143  145 #>  [6653,]  135  143  145 #>  [6654,]  135  143  145 #>  [6655,]  135  143  145 #>  [6656,]  135  143  145 #>  [6657,]  135  143  145 #>  [6658,]  135  143  145 #>  [6659,]  136  144  146 #>  [6660,]  135  143  145 #>  [6661,]  136  144  146 #>  [6662,]  135  143  145 #>  [6663,]  135  143  145 #>  [6664,]  135  143  145 #>  [6665,]  135  143  145 #>  [6666,]  135  143  145 #>  [6667,]  135  143  145 #>  [6668,]  136  144  146 #>  [6669,]  135  143  145 #>  [6670,]  136  144  146 #>  [6671,]  135  143  145 #>  [6672,]  135  143  145 #>  [6673,]  136  144  146 #>  [6674,]  135  143  145 #>  [6675,]  135  143  145 #>  [6676,]  135  143  145 #>  [6677,]  135  143  145 #>  [6678,]  135  143  145 #>  [6679,]  135  143  145 #>  [6680,]  135  143  145 #>  [6681,]  135  143  145 #>  [6682,]  135  143  145 #>  [6683,]  136  144  146 #>  [6684,]  135  143  145 #>  [6685,]  135  143  145 #>  [6686,]  136  144  146 #>  [6687,]  135  143  145 #>  [6688,]  135  143  145 #>  [6689,]  135  143  145 #>  [6690,]  135  143  145 #>  [6691,]  135  143  145 #>  [6692,]  135  143  145 #>  [6693,]  135  143  145 #>  [6694,]  135  143  145 #>  [6695,]  135  143  145 #>  [6696,]  136  144  146 #>  [6697,]  135  143  145 #>  [6698,]  135  143  145 #>  [6699,]  136  144  146 #>  [6700,]  135  143  145 #>  [6701,]  139  146  148 #>  [6702,]  137  145  147 #>  [6703,]  138  146  148 #>  [6704,]  139  146  148 #>  [6705,]  139  146  148 #>  [6706,]  139  146  147 #>  [6707,]  138  146  148 #>  [6708,]  138  146  148 #>  [6709,]  137  145  148 #>  [6710,]  137  145  148 #>  [6711,]  139  146  147 #>  [6712,]  137  145  147 #>  [6713,]  137  145  148 #>  [6714,]  139  146  148 #>  [6715,]  139  146  147 #>  [6716,]  138  146  148 #>  [6717,]  137  145  147 #>  [6718,]  137  145  148 #>  [6719,]  139  146  147 #>  [6720,]  137  145  148 #>  [6721,]  137  145  148 #>  [6722,]  138  146  148 #>  [6723,]  137  145  147 #>  [6724,]  137  145  148 #>  [6725,]  138  146  148 #>  [6726,]  139  146  147 #>  [6727,]  137  145  148 #>  [6728,]  139  146  148 #>  [6729,]  137  145  147 #>  [6730,]  139  146  147 #>  [6731,]  137  145  147 #>  [6732,]  137  145  148 #>  [6733,]  137  145  148 #>  [6734,]  139  146  147 #>  [6735,]  139  146  147 #>  [6736,]  137  145  148 #>  [6737,]  139  146  147 #>  [6738,]  139  146  148 #>  [6739,]  138  146  148 #>  [6740,]  137  145  148 #>  [6741,]  139  146  148 #>  [6742,]  139  146  147 #>  [6743,]  138  146  147 #>  [6744,]  138  146  147 #>  [6745,]  138  146  148 #>  [6746,]  138  146  148 #>  [6747,]  138  146  147 #>  [6748,]  139  146  147 #>  [6749,]  138  146  148 #>  [6750,]  138  146  148 #>  [6751,]  139  146  148 #>  [6752,]  139  146  148 #>  [6753,]  137  145  148 #>  [6754,]  138  146  148 #>  [6755,]  138  146  148 #>  [6756,]  138  146  147 #>  [6757,]  139  146  148 #>  [6758,]  139  146  148 #>  [6759,]  138  146  148 #>  [6760,]  137  145  147 #>  [6761,]  137  145  147 #>  [6762,]  139  146  148 #>  [6763,]  137  145  147 #>  [6764,]  139  146  147 #>  [6765,]  138  146  147 #>  [6766,]  138  146  147 #>  [6767,]  139  146  148 #>  [6768,]  139  146  147 #>  [6769,]  139  146  148 #>  [6770,]  137  145  147 #>  [6771,]  139  146  148 #>  [6772,]  138  146  148 #>  [6773,]  139  146  148 #>  [6774,]  139  146  148 #>  [6775,]  137  145  147 #>  [6776,]  139  146  148 #>  [6777,]  138  146  148 #>  [6778,]  138  146  147 #>  [6779,]  138  146  147 #>  [6780,]  137  145  148 #>  [6781,]  137  145  147 #>  [6782,]  139  146  148 #>  [6783,]  137  145  148 #>  [6784,]  137  145  148 #>  [6785,]  139  146  148 #>  [6786,]  137  145  148 #>  [6787,]  139  146  148 #>  [6788,]  137  145  148 #>  [6789,]  138  146  148 #>  [6790,]  138  146  148 #>  [6791,]  139  146  148 #>  [6792,]  139  146  147 #>  [6793,]  139  146  148 #>  [6794,]  138  146  147 #>  [6795,]  139  146  147 #>  [6796,]  139  146  147 #>  [6797,]  139  146  148 #>  [6798,]  138  146  148 #>  [6799,]  139  146  148 #>  [6800,]  138  146  147 #>  [6801,]  141  148  150 #>  [6802,]  141  148  150 #>  [6803,]  140  147  149 #>  [6804,]  141  148  150 #>  [6805,]  140  147  149 #>  [6806,]  141  148  150 #>  [6807,]  140  147  149 #>  [6808,]  140  147  149 #>  [6809,]  141  148  150 #>  [6810,]  141  148  150 #>  [6811,]  141  148  150 #>  [6812,]  141  148  150 #>  [6813,]  140  147  149 #>  [6814,]  141  148  150 #>  [6815,]  141  148  150 #>  [6816,]  140  147  149 #>  [6817,]  140  147  149 #>  [6818,]  141  148  150 #>  [6819,]  141  148  150 #>  [6820,]  140  147  149 #>  [6821,]  141  148  150 #>  [6822,]  140  147  149 #>  [6823,]  141  148  150 #>  [6824,]  140  147  149 #>  [6825,]  140  147  149 #>  [6826,]  141  148  150 #>  [6827,]  141  148  150 #>  [6828,]  141  148  150 #>  [6829,]  140  147  149 #>  [6830,]  141  148  150 #>  [6831,]  141  148  150 #>  [6832,]  141  148  150 #>  [6833,]  141  148  150 #>  [6834,]  141  148  150 #>  [6835,]  141  148  150 #>  [6836,]  141  148  150 #>  [6837,]  141  148  150 #>  [6838,]  141  148  150 #>  [6839,]  140  147  149 #>  [6840,]  140  147  149 #>  [6841,]  141  148  150 #>  [6842,]  141  148  150 #>  [6843,]  140  147  149 #>  [6844,]  140  147  149 #>  [6845,]  140  147  149 #>  [6846,]  140  147  149 #>  [6847,]  140  147  149 #>  [6848,]  141  148  150 #>  [6849,]  140  147  149 #>  [6850,]  140  147  149 #>  [6851,]  140  147  149 #>  [6852,]  141  148  150 #>  [6853,]  140  147  149 #>  [6854,]  140  147  149 #>  [6855,]  140  147  149 #>  [6856,]  140  147  149 #>  [6857,]  141  148  150 #>  [6858,]  141  148  150 #>  [6859,]  140  147  149 #>  [6860,]  141  148  150 #>  [6861,]  141  148  150 #>  [6862,]  141  148  150 #>  [6863,]  140  147  149 #>  [6864,]  141  148  150 #>  [6865,]  140  147  149 #>  [6866,]  140  147  149 #>  [6867,]  141  148  150 #>  [6868,]  141  148  150 #>  [6869,]  141  148  150 #>  [6870,]  140  147  149 #>  [6871,]  140  147  149 #>  [6872,]  140  147  149 #>  [6873,]  141  148  150 #>  [6874,]  141  148  150 #>  [6875,]  141  148  150 #>  [6876,]  140  147  149 #>  [6877,]  140  147  149 #>  [6878,]  140  147  149 #>  [6879,]  140  147  149 #>  [6880,]  141  148  150 #>  [6881,]  141  148  150 #>  [6882,]  141  148  150 #>  [6883,]  140  147  149 #>  [6884,]  140  147  149 #>  [6885,]  141  148  150 #>  [6886,]  140  147  149 #>  [6887,]  141  148  150 #>  [6888,]  141  148  150 #>  [6889,]  140  147  149 #>  [6890,]  140  147  149 #>  [6891,]  141  148  150 #>  [6892,]  141  148  150 #>  [6893,]  141  148  150 #>  [6894,]  140  147  149 #>  [6895,]  141  148  150 #>  [6896,]  141  148  150 #>  [6897,]  141  148  150 #>  [6898,]  140  147  149 #>  [6899,]  141  148  150 #>  [6900,]  140  147  149 #>  [6901,]  143  149  151 #>  [6902,]  142  151  152 #>  [6903,]  142  151  152 #>  [6904,]  142  151  152 #>  [6905,]  142  151  152 #>  [6906,]  143  149  151 #>  [6907,]  142  151  152 #>  [6908,]  143  149  151 #>  [6909,]  143  149  151 #>  [6910,]  142  151  152 #>  [6911,]  142  151  152 #>  [6912,]  143  149  151 #>  [6913,]  142  151  152 #>  [6914,]  142  151  152 #>  [6915,]  143  149  151 #>  [6916,]  142  151  152 #>  [6917,]  142  151  152 #>  [6918,]  142  151  152 #>  [6919,]  142  151  152 #>  [6920,]  143  149  151 #>  [6921,]  142  150  152 #>  [6922,]  142  151  152 #>  [6923,]  142  151  152 #>  [6924,]  142  151  152 #>  [6925,]  142  150  152 #>  [6926,]  143  149  151 #>  [6927,]  142  151  152 #>  [6928,]  142  151  152 #>  [6929,]  142  151  152 #>  [6930,]  142  151  152 #>  [6931,]  142  151  152 #>  [6932,]  142  151  152 #>  [6933,]  143  149  151 #>  [6934,]  142  151  152 #>  [6935,]  142  150  152 #>  [6936,]  142  151  152 #>  [6937,]  142  151  152 #>  [6938,]  142  151  152 #>  [6939,]  142  151  152 #>  [6940,]  142  151  152 #>  [6941,]  142  151  152 #>  [6942,]  142  150  152 #>  [6943,]  143  149  151 #>  [6944,]  142  150  152 #>  [6945,]  143  149  151 #>  [6946,]  143  149  151 #>  [6947,]  142  151  152 #>  [6948,]  142  151  152 #>  [6949,]  142  151  152 #>  [6950,]  143  149  151 #>  [6951,]  143  149  151 #>  [6952,]  142  151  152 #>  [6953,]  143  149  151 #>  [6954,]  142  151  152 #>  [6955,]  143  149  151 #>  [6956,]  143  149  151 #>  [6957,]  143  149  151 #>  [6958,]  143  149  151 #>  [6959,]  142  151  152 #>  [6960,]  143  149  151 #>  [6961,]  143  149  151 #>  [6962,]  142  151  152 #>  [6963,]  142  151  152 #>  [6964,]  143  149  151 #>  [6965,]  143  149  151 #>  [6966,]  143  149  151 #>  [6967,]  142  151  152 #>  [6968,]  143  149  151 #>  [6969,]  142  151  152 #>  [6970,]  142  151  152 #>  [6971,]  143  149  151 #>  [6972,]  143  149  151 #>  [6973,]  143  149  151 #>  [6974,]  143  149  151 #>  [6975,]  142  151  152 #>  [6976,]  143  149  151 #>  [6977,]  142  151  152 #>  [6978,]  143  149  151 #>  [6979,]  142  151  152 #>  [6980,]  142  150  152 #>  [6981,]  143  149  151 #>  [6982,]  142  150  152 #>  [6983,]  142  151  152 #>  [6984,]  142  150  152 #>  [6985,]  142  150  152 #>  [6986,]  142  150  152 #>  [6987,]  142  151  152 #>  [6988,]  142  151  152 #>  [6989,]  142  150  152 #>  [6990,]  142  151  152 #>  [6991,]  142  151  152 #>  [6992,]  143  149  151 #>  [6993,]  142  151  152 #>  [6994,]  143  149  151 #>  [6995,]  142  151  152 #>  [6996,]  143  149  151 #>  [6997,]  143  149  151 #>  [6998,]  142  151  152 #>  [6999,]  142  150  152 #>  [7000,]  142  151  152 #>  [7001,]  145  153  154 #>  [7002,]  145  153  154 #>  [7003,]  145  153  154 #>  [7004,]  144  152  153 #>  [7005,]  145  153  154 #>  [7006,]  145  153  154 #>  [7007,]  145  153  154 #>  [7008,]  144  152  153 #>  [7009,]  144  152  153 #>  [7010,]  145  153  154 #>  [7011,]  144  152  153 #>  [7012,]  145  153  154 #>  [7013,]  144  152  153 #>  [7014,]  145  153  154 #>  [7015,]  145  153  154 #>  [7016,]  145  153  154 #>  [7017,]  144  152  153 #>  [7018,]  145  153  154 #>  [7019,]  145  153  154 #>  [7020,]  145  153  154 #>  [7021,]  145  153  154 #>  [7022,]  144  152  153 #>  [7023,]  145  153  154 #>  [7024,]  145  153  154 #>  [7025,]  145  153  154 #>  [7026,]  145  153  154 #>  [7027,]  144  152  153 #>  [7028,]  145  153  154 #>  [7029,]  145  153  154 #>  [7030,]  145  153  154 #>  [7031,]  145  153  154 #>  [7032,]  145  153  154 #>  [7033,]  145  153  154 #>  [7034,]  145  153  154 #>  [7035,]  144  152  153 #>  [7036,]  145  153  154 #>  [7037,]  145  153  154 #>  [7038,]  145  153  154 #>  [7039,]  145  153  154 #>  [7040,]  145  153  154 #>  [7041,]  145  153  154 #>  [7042,]  145  153  154 #>  [7043,]  144  152  153 #>  [7044,]  144  152  153 #>  [7045,]  145  153  154 #>  [7046,]  145  153  154 #>  [7047,]  145  153  154 #>  [7048,]  145  153  154 #>  [7049,]  144  152  153 #>  [7050,]  145  153  154 #>  [7051,]  145  153  154 #>  [7052,]  144  152  153 #>  [7053,]  145  153  154 #>  [7054,]  145  153  154 #>  [7055,]  144  152  153 #>  [7056,]  145  153  154 #>  [7057,]  145  153  154 #>  [7058,]  144  152  153 #>  [7059,]  145  153  154 #>  [7060,]  145  153  154 #>  [7061,]  145  153  154 #>  [7062,]  145  153  154 #>  [7063,]  145  153  154 #>  [7064,]  145  153  154 #>  [7065,]  145  153  154 #>  [7066,]  144  152  153 #>  [7067,]  145  153  154 #>  [7068,]  145  153  154 #>  [7069,]  144  152  153 #>  [7070,]  145  153  154 #>  [7071,]  145  153  154 #>  [7072,]  145  153  154 #>  [7073,]  145  153  154 #>  [7074,]  145  153  154 #>  [7075,]  145  153  154 #>  [7076,]  145  153  154 #>  [7077,]  145  153  154 #>  [7078,]  145  153  154 #>  [7079,]  144  152  153 #>  [7080,]  144  152  153 #>  [7081,]  144  152  153 #>  [7082,]  144  152  153 #>  [7083,]  144  152  153 #>  [7084,]  145  153  154 #>  [7085,]  145  153  154 #>  [7086,]  145  153  154 #>  [7087,]  144  152  153 #>  [7088,]  144  152  153 #>  [7089,]  144  152  153 #>  [7090,]  144  152  153 #>  [7091,]  145  153  154 #>  [7092,]  144  152  153 #>  [7093,]  145  153  154 #>  [7094,]  145  153  154 #>  [7095,]  144  152  153 #>  [7096,]  145  153  154 #>  [7097,]  145  153  154 #>  [7098,]  145  153  154 #>  [7099,]  144  152  153 #>  [7100,]  145  153  154 #>  [7101,]  147  155  156 #>  [7102,]  147  155  156 #>  [7103,]  147  155  156 #>  [7104,]  147  155  156 #>  [7105,]  148  156  156 #>  [7106,]  147  155  156 #>  [7107,]  147  155  156 #>  [7108,]  147  155  156 #>  [7109,]  147  155  156 #>  [7110,]  147  155  156 #>  [7111,]  147  155  156 #>  [7112,]  147  155  156 #>  [7113,]  147  155  156 #>  [7114,]  147  155  156 #>  [7115,]  146  154  155 #>  [7116,]  147  155  156 #>  [7117,]  146  154  155 #>  [7118,]  148  156  156 #>  [7119,]  147  155  156 #>  [7120,]  147  155  156 #>  [7121,]  147  155  156 #>  [7122,]  147  155  156 #>  [7123,]  147  155  156 #>  [7124,]  147  155  156 #>  [7125,]  147  155  156 #>  [7126,]  147  155  156 #>  [7127,]  148  156  156 #>  [7128,]  147  155  156 #>  [7129,]  147  155  156 #>  [7130,]  147  155  156 #>  [7131,]  146  154  155 #>  [7132,]  148  156  156 #>  [7133,]  147  155  156 #>  [7134,]  146  154  155 #>  [7135,]  147  155  156 #>  [7136,]  147  155  156 #>  [7137,]  146  154  155 #>  [7138,]  147  155  156 #>  [7139,]  147  155  156 #>  [7140,]  147  155  156 #>  [7141,]  147  155  156 #>  [7142,]  146  154  155 #>  [7143,]  146  154  155 #>  [7144,]  146  154  155 #>  [7145,]  147  155  156 #>  [7146,]  147  155  156 #>  [7147,]  147  155  156 #>  [7148,]  147  155  156 #>  [7149,]  147  155  156 #>  [7150,]  147  155  156 #>  [7151,]  147  155  156 #>  [7152,]  147  155  156 #>  [7153,]  147  155  156 #>  [7154,]  147  155  156 #>  [7155,]  147  155  156 #>  [7156,]  147  155  156 #>  [7157,]  147  155  156 #>  [7158,]  147  155  156 #>  [7159,]  147  155  156 #>  [7160,]  147  155  156 #>  [7161,]  147  155  156 #>  [7162,]  147  155  156 #>  [7163,]  146  154  155 #>  [7164,]  147  155  156 #>  [7165,]  147  155  156 #>  [7166,]  147  155  156 #>  [7167,]  147  155  156 #>  [7168,]  147  155  156 #>  [7169,]  147  155  156 #>  [7170,]  147  155  156 #>  [7171,]  148  156  156 #>  [7172,]  147  155  156 #>  [7173,]  147  155  156 #>  [7174,]  147  155  156 #>  [7175,]  146  154  155 #>  [7176,]  147  155  156 #>  [7177,]  147  155  156 #>  [7178,]  146  154  155 #>  [7179,]  146  154  155 #>  [7180,]  147  155  156 #>  [7181,]  147  155  156 #>  [7182,]  147  155  156 #>  [7183,]  147  155  156 #>  [7184,]  147  155  156 #>  [7185,]  147  155  156 #>  [7186,]  147  155  156 #>  [7187,]  147  155  156 #>  [7188,]  147  155  156 #>  [7189,]  147  155  156 #>  [7190,]  147  155  156 #>  [7191,]  148  156  156 #>  [7192,]  147  155  156 #>  [7193,]  147  155  156 #>  [7194,]  147  155  156 #>  [7195,]  146  154  155 #>  [7196,]  147  155  156 #>  [7197,]  147  155  156 #>  [7198,]  147  155  156 #>  [7199,]  147  155  156 #>  [7200,]  146  154  155 #>  [7201,]  150  158  158 #>  [7202,]  150  158  158 #>  [7203,]  149  157  157 #>  [7204,]  150  158  158 #>  [7205,]  149  157  157 #>  [7206,]  150  158  158 #>  [7207,]  149  157  157 #>  [7208,]  149  157  157 #>  [7209,]  150  158  158 #>  [7210,]  150  158  158 #>  [7211,]  150  158  158 #>  [7212,]  150  158  158 #>  [7213,]  149  157  157 #>  [7214,]  150  158  158 #>  [7215,]  150  158  158 #>  [7216,]  149  157  157 #>  [7217,]  149  157  157 #>  [7218,]  150  158  158 #>  [7219,]  150  158  158 #>  [7220,]  149  157  157 #>  [7221,]  150  158  158 #>  [7222,]  149  157  157 #>  [7223,]  150  158  158 #>  [7224,]  149  157  157 #>  [7225,]  149  157  157 #>  [7226,]  150  158  158 #>  [7227,]  150  158  158 #>  [7228,]  149  157  157 #>  [7229,]  149  157  157 #>  [7230,]  150  158  158 #>  [7231,]  150  158  158 #>  [7232,]  150  158  158 #>  [7233,]  150  158  158 #>  [7234,]  150  158  158 #>  [7235,]  150  158  158 #>  [7236,]  150  158  158 #>  [7237,]  150  158  158 #>  [7238,]  150  158  158 #>  [7239,]  149  157  157 #>  [7240,]  149  157  157 #>  [7241,]  150  158  158 #>  [7242,]  150  158  158 #>  [7243,]  149  157  157 #>  [7244,]  149  157  157 #>  [7245,]  149  157  157 #>  [7246,]  149  157  157 #>  [7247,]  149  157  157 #>  [7248,]  150  158  158 #>  [7249,]  149  157  157 #>  [7250,]  149  157  157 #>  [7251,]  149  157  157 #>  [7252,]  150  158  158 #>  [7253,]  149  157  157 #>  [7254,]  149  157  157 #>  [7255,]  149  157  157 #>  [7256,]  149  157  157 #>  [7257,]  150  158  158 #>  [7258,]  150  158  158 #>  [7259,]  149  157  157 #>  [7260,]  150  158  158 #>  [7261,]  150  158  158 #>  [7262,]  150  158  158 #>  [7263,]  149  157  157 #>  [7264,]  150  158  158 #>  [7265,]  149  157  157 #>  [7266,]  149  157  157 #>  [7267,]  150  158  158 #>  [7268,]  150  158  158 #>  [7269,]  150  158  158 #>  [7270,]  149  157  157 #>  [7271,]  149  157  157 #>  [7272,]  149  157  157 #>  [7273,]  150  158  158 #>  [7274,]  150  158  158 #>  [7275,]  150  158  158 #>  [7276,]  149  157  157 #>  [7277,]  149  157  157 #>  [7278,]  149  157  157 #>  [7279,]  149  157  157 #>  [7280,]  150  158  158 #>  [7281,]  149  157  157 #>  [7282,]  150  158  158 #>  [7283,]  149  157  157 #>  [7284,]  149  157  157 #>  [7285,]  150  158  158 #>  [7286,]  149  157  157 #>  [7287,]  150  158  158 #>  [7288,]  150  158  158 #>  [7289,]  149  157  157 #>  [7290,]  149  157  157 #>  [7291,]  150  158  158 #>  [7292,]  150  158  158 #>  [7293,]  150  158  158 #>  [7294,]  149  157  157 #>  [7295,]  150  158  158 #>  [7296,]  150  158  158 #>  [7297,]  150  158  158 #>  [7298,]  149  157  157 #>  [7299,]  150  158  158 #>  [7300,]  149  157  157 #>  [7301,]  152  160  160 #>  [7302,]  151  159  159 #>  [7303,]  152  160  160 #>  [7304,]  152  160  160 #>  [7305,]  152  160  160 #>  [7306,]  151  159  159 #>  [7307,]  152  160  160 #>  [7308,]  152  160  160 #>  [7309,]  152  160  160 #>  [7310,]  152  160  160 #>  [7311,]  151  159  159 #>  [7312,]  151  159  159 #>  [7313,]  152  160  160 #>  [7314,]  152  160  160 #>  [7315,]  151  159  159 #>  [7316,]  152  160  160 #>  [7317,]  151  159  159 #>  [7318,]  152  160  160 #>  [7319,]  152  160  160 #>  [7320,]  152  160  160 #>  [7321,]  152  160  160 #>  [7322,]  152  160  160 #>  [7323,]  151  159  159 #>  [7324,]  152  160  160 #>  [7325,]  152  160  160 #>  [7326,]  152  160  160 #>  [7327,]  152  160  160 #>  [7328,]  152  160  160 #>  [7329,]  151  159  159 #>  [7330,]  151  159  159 #>  [7331,]  151  159  159 #>  [7332,]  152  160  160 #>  [7333,]  152  160  160 #>  [7334,]  151  159  159 #>  [7335,]  151  159  159 #>  [7336,]  152  160  160 #>  [7337,]  151  159  159 #>  [7338,]  152  160  160 #>  [7339,]  152  160  160 #>  [7340,]  152  160  160 #>  [7341,]  152  160  160 #>  [7342,]  151  159  159 #>  [7343,]  151  159  159 #>  [7344,]  151  159  159 #>  [7345,]  152  160  160 #>  [7346,]  152  160  160 #>  [7347,]  151  159  159 #>  [7348,]  151  159  159 #>  [7349,]  152  160  160 #>  [7350,]  152  160  160 #>  [7351,]  152  160  160 #>  [7352,]  152  160  160 #>  [7353,]  152  160  160 #>  [7354,]  152  160  160 #>  [7355,]  152  160  160 #>  [7356,]  151  159  159 #>  [7357,]  152  160  160 #>  [7358,]  152  160  160 #>  [7359,]  152  160  160 #>  [7360,]  151  159  159 #>  [7361,]  151  159  159 #>  [7362,]  152  160  160 #>  [7363,]  151  159  159 #>  [7364,]  151  159  159 #>  [7365,]  151  159  159 #>  [7366,]  151  159  159 #>  [7367,]  152  160  160 #>  [7368,]  152  160  160 #>  [7369,]  152  160  160 #>  [7370,]  151  159  159 #>  [7371,]  152  160  160 #>  [7372,]  152  160  160 #>  [7373,]  152  160  160 #>  [7374,]  152  160  160 #>  [7375,]  151  159  159 #>  [7376,]  152  160  160 #>  [7377,]  152  160  160 #>  [7378,]  151  159  159 #>  [7379,]  151  159  159 #>  [7380,]  152  160  160 #>  [7381,]  151  159  159 #>  [7382,]  152  160  160 #>  [7383,]  152  160  160 #>  [7384,]  152  160  160 #>  [7385,]  152  160  160 #>  [7386,]  152  160  160 #>  [7387,]  152  160  160 #>  [7388,]  152  160  160 #>  [7389,]  152  160  160 #>  [7390,]  152  160  160 #>  [7391,]  152  160  160 #>  [7392,]  151  159  159 #>  [7393,]  152  160  160 #>  [7394,]  151  159  159 #>  [7395,]  151  159  159 #>  [7396,]  151  159  159 #>  [7397,]  152  160  160 #>  [7398,]  152  160  160 #>  [7399,]  152  160  160 #>  [7400,]  151  159  159 #>  [7401,]  153  161  162 #>  [7402,]  154  162  161 #>  [7403,]  153  161  162 #>  [7404,]  153  161  162 #>  [7405,]  154  162  161 #>  [7406,]  153  161  162 #>  [7407,]  154  162  161 #>  [7408,]  153  161  163 #>  [7409,]  154  162  161 #>  [7410,]  154  162  161 #>  [7411,]  153  161  162 #>  [7412,]  154  162  161 #>  [7413,]  154  162  161 #>  [7414,]  153  161  162 #>  [7415,]  154  162  161 #>  [7416,]  153  161  163 #>  [7417,]  154  162  161 #>  [7418,]  154  162  161 #>  [7419,]  153  161  163 #>  [7420,]  154  162  161 #>  [7421,]  154  162  161 #>  [7422,]  154  162  161 #>  [7423,]  154  162  161 #>  [7424,]  154  162  161 #>  [7425,]  154  162  161 #>  [7426,]  153  161  163 #>  [7427,]  154  162  161 #>  [7428,]  153  161  162 #>  [7429,]  154  162  161 #>  [7430,]  154  162  161 #>  [7431,]  154  162  161 #>  [7432,]  154  162  161 #>  [7433,]  154  162  161 #>  [7434,]  153  161  162 #>  [7435,]  153  161  162 #>  [7436,]  154  162  161 #>  [7437,]  153  161  163 #>  [7438,]  153  161  163 #>  [7439,]  154  162  161 #>  [7440,]  154  162  161 #>  [7441,]  154  162  161 #>  [7442,]  153  161  162 #>  [7443,]  154  162  161 #>  [7444,]  154  162  161 #>  [7445,]  153  161  162 #>  [7446,]  154  162  161 #>  [7447,]  154  162  161 #>  [7448,]  154  162  161 #>  [7449,]  153  161  162 #>  [7450,]  154  162  161 #>  [7451,]  154  162  161 #>  [7452,]  153  161  162 #>  [7453,]  154  162  161 #>  [7454,]  154  162  161 #>  [7455,]  153  161  163 #>  [7456,]  153  161  163 #>  [7457,]  154  162  161 #>  [7458,]  154  162  161 #>  [7459,]  153  161  163 #>  [7460,]  154  162  161 #>  [7461,]  154  162  161 #>  [7462,]  153  161  162 #>  [7463,]  154  162  161 #>  [7464,]  153  161  163 #>  [7465,]  153  161  162 #>  [7466,]  154  162  161 #>  [7467,]  154  162  161 #>  [7468,]  153  161  162 #>  [7469,]  153  161  163 #>  [7470,]  154  162  161 #>  [7471,]  154  162  161 #>  [7472,]  153  161  162 #>  [7473,]  153  161  162 #>  [7474,]  154  162  161 #>  [7475,]  154  162  161 #>  [7476,]  154  162  161 #>  [7477,]  153  161  163 #>  [7478,]  154  162  161 #>  [7479,]  153  161  162 #>  [7480,]  154  162  161 #>  [7481,]  154  162  161 #>  [7482,]  154  162  161 #>  [7483,]  154  162  161 #>  [7484,]  154  162  161 #>  [7485,]  154  162  161 #>  [7486,]  154  162  161 #>  [7487,]  154  162  161 #>  [7488,]  154  162  161 #>  [7489,]  153  161  162 #>  [7490,]  154  162  161 #>  [7491,]  153  161  162 #>  [7492,]  154  162  161 #>  [7493,]  154  162  161 #>  [7494,]  153  161  162 #>  [7495,]  154  162  161 #>  [7496,]  153  161  163 #>  [7497,]  153  161  163 #>  [7498,]  154  162  161 #>  [7499,]  154  162  161 #>  [7500,]  153  161  163 #>  [7501,]  155  163  164 #>  [7502,]  156  165  165 #>  [7503,]  156  164  165 #>  [7504,]  155  163  164 #>  [7505,]  155  163  164 #>  [7506,]  156  165  165 #>  [7507,]  155  163  164 #>  [7508,]  155  163  164 #>  [7509,]  155  163  164 #>  [7510,]  155  163  164 #>  [7511,]  155  163  164 #>  [7512,]  156  164  165 #>  [7513,]  155  163  164 #>  [7514,]  155  163  164 #>  [7515,]  155  163  164 #>  [7516,]  155  163  164 #>  [7517,]  155  163  164 #>  [7518,]  156  165  165 #>  [7519,]  156  165  165 #>  [7520,]  156  165  165 #>  [7521,]  155  163  164 #>  [7522,]  155  163  164 #>  [7523,]  155  163  164 #>  [7524,]  155  163  164 #>  [7525,]  156  164  165 #>  [7526,]  155  163  164 #>  [7527,]  155  163  164 #>  [7528,]  156  165  165 #>  [7529,]  155  163  164 #>  [7530,]  155  163  164 #>  [7531,]  156  164  165 #>  [7532,]  155  163  164 #>  [7533,]  156  165  165 #>  [7534,]  156  165  165 #>  [7535,]  155  163  164 #>  [7536,]  155  163  164 #>  [7537,]  155  163  164 #>  [7538,]  155  163  164 #>  [7539,]  155  163  164 #>  [7540,]  155  163  164 #>  [7541,]  155  163  164 #>  [7542,]  155  163  164 #>  [7543,]  155  163  164 #>  [7544,]  155  163  164 #>  [7545,]  155  163  164 #>  [7546,]  155  163  164 #>  [7547,]  155  163  164 #>  [7548,]  155  163  164 #>  [7549,]  155  163  164 #>  [7550,]  155  163  164 #>  [7551,]  155  163  164 #>  [7552,]  155  163  164 #>  [7553,]  155  163  164 #>  [7554,]  155  163  164 #>  [7555,]  155  163  164 #>  [7556,]  155  163  164 #>  [7557,]  155  163  164 #>  [7558,]  155  163  164 #>  [7559,]  155  163  164 #>  [7560,]  156  164  165 #>  [7561,]  155  163  164 #>  [7562,]  155  163  164 #>  [7563,]  155  163  164 #>  [7564,]  155  163  164 #>  [7565,]  156  165  165 #>  [7566,]  155  163  164 #>  [7567,]  155  163  164 #>  [7568,]  155  163  164 #>  [7569,]  155  163  164 #>  [7570,]  156  165  165 #>  [7571,]  156  165  165 #>  [7572,]  155  163  164 #>  [7573,]  156  165  165 #>  [7574,]  155  163  164 #>  [7575,]  155  163  164 #>  [7576,]  155  163  164 #>  [7577,]  155  163  164 #>  [7578,]  155  163  164 #>  [7579,]  155  163  164 #>  [7580,]  155  163  164 #>  [7581,]  155  163  164 #>  [7582,]  155  163  164 #>  [7583,]  155  163  164 #>  [7584,]  156  165  165 #>  [7585,]  155  163  164 #>  [7586,]  155  163  164 #>  [7587,]  155  163  164 #>  [7588,]  155  163  164 #>  [7589,]  155  163  164 #>  [7590,]  155  163  164 #>  [7591,]  155  163  164 #>  [7592,]  155  163  164 #>  [7593,]  156  165  165 #>  [7594,]  155  163  164 #>  [7595,]  155  163  164 #>  [7596,]  155  163  164 #>  [7597,]  156  164  165 #>  [7598,]  156  164  165 #>  [7599,]  155  163  164 #>  [7600,]  156  165  165 #>  [7601,]  158  168  166 #>  [7602,]  158  168  166 #>  [7603,]  157  166  167 #>  [7604,]  157  166  167 #>  [7605,]  157  166  167 #>  [7606,]  158  167  166 #>  [7607,]  157  166  167 #>  [7608,]  157  166  167 #>  [7609,]  157  166  167 #>  [7610,]  157  166  167 #>  [7611,]  157  166  167 #>  [7612,]  157  166  167 #>  [7613,]  158  168  166 #>  [7614,]  158  168  166 #>  [7615,]  158  168  166 #>  [7616,]  158  168  166 #>  [7617,]  158  168  166 #>  [7618,]  157  166  167 #>  [7619,]  157  166  167 #>  [7620,]  157  166  167 #>  [7621,]  158  167  166 #>  [7622,]  157  166  167 #>  [7623,]  157  166  167 #>  [7624,]  157  166  167 #>  [7625,]  157  166  167 #>  [7626,]  157  166  167 #>  [7627,]  157  166  167 #>  [7628,]  157  166  167 #>  [7629,]  158  168  166 #>  [7630,]  157  166  167 #>  [7631,]  157  166  167 #>  [7632,]  157  166  167 #>  [7633,]  158  168  166 #>  [7634,]  157  166  167 #>  [7635,]  158  167  166 #>  [7636,]  157  166  167 #>  [7637,]  157  166  167 #>  [7638,]  157  166  167 #>  [7639,]  157  166  167 #>  [7640,]  157  166  167 #>  [7641,]  158  168  166 #>  [7642,]  157  166  167 #>  [7643,]  157  166  167 #>  [7644,]  158  167  166 #>  [7645,]  157  166  167 #>  [7646,]  157  166  167 #>  [7647,]  157  166  167 #>  [7648,]  157  166  167 #>  [7649,]  157  166  167 #>  [7650,]  158  168  166 #>  [7651,]  157  166  167 #>  [7652,]  157  166  167 #>  [7653,]  157  166  167 #>  [7654,]  157  166  167 #>  [7655,]  157  166  167 #>  [7656,]  157  166  167 #>  [7657,]  157  166  167 #>  [7658,]  157  166  167 #>  [7659,]  158  168  166 #>  [7660,]  157  166  167 #>  [7661,]  158  168  166 #>  [7662,]  157  166  167 #>  [7663,]  157  166  167 #>  [7664,]  157  166  167 #>  [7665,]  157  166  167 #>  [7666,]  157  166  167 #>  [7667,]  157  166  167 #>  [7668,]  158  168  166 #>  [7669,]  157  166  167 #>  [7670,]  158  168  166 #>  [7671,]  157  166  167 #>  [7672,]  157  166  167 #>  [7673,]  158  167  166 #>  [7674,]  157  166  167 #>  [7675,]  157  166  167 #>  [7676,]  158  168  166 #>  [7677,]  158  168  166 #>  [7678,]  157  166  167 #>  [7679,]  158  168  166 #>  [7680,]  157  166  167 #>  [7681,]  158  168  166 #>  [7682,]  157  166  167 #>  [7683,]  158  168  166 #>  [7684,]  157  166  167 #>  [7685,]  157  166  167 #>  [7686,]  158  167  166 #>  [7687,]  157  166  167 #>  [7688,]  157  166  167 #>  [7689,]  157  166  167 #>  [7690,]  157  166  167 #>  [7691,]  157  166  167 #>  [7692,]  157  166  167 #>  [7693,]  158  168  166 #>  [7694,]  157  166  167 #>  [7695,]  157  166  167 #>  [7696,]  158  168  166 #>  [7697,]  157  166  167 #>  [7698,]  157  166  167 #>  [7699,]  158  167  166 #>  [7700,]  157  166  167 #>  [7701,]  160  170  169 #>  [7702,]  159  169  169 #>  [7703,]  159  169  168 #>  [7704,]  159  169  169 #>  [7705,]  160  170  169 #>  [7706,]  159  169  169 #>  [7707,]  159  169  168 #>  [7708,]  159  169  169 #>  [7709,]  159  169  169 #>  [7710,]  160  170  169 #>  [7711,]  160  170  169 #>  [7712,]  160  170  169 #>  [7713,]  159  169  169 #>  [7714,]  160  170  169 #>  [7715,]  160  170  169 #>  [7716,]  159  169  169 #>  [7717,]  160  170  169 #>  [7718,]  160  170  169 #>  [7719,]  159  169  169 #>  [7720,]  159  169  169 #>  [7721,]  159  169  169 #>  [7722,]  160  170  169 #>  [7723,]  159  169  169 #>  [7724,]  159  169  169 #>  [7725,]  159  169  169 #>  [7726,]  160  170  169 #>  [7727,]  160  170  169 #>  [7728,]  159  169  169 #>  [7729,]  159  169  169 #>  [7730,]  159  169  169 #>  [7731,]  160  170  169 #>  [7732,]  160  170  169 #>  [7733,]  159  169  169 #>  [7734,]  159  169  169 #>  [7735,]  159  169  169 #>  [7736,]  159  169  169 #>  [7737,]  159  169  169 #>  [7738,]  160  170  169 #>  [7739,]  159  169  169 #>  [7740,]  159  169  169 #>  [7741,]  159  169  169 #>  [7742,]  159  169  169 #>  [7743,]  160  170  169 #>  [7744,]  159  169  169 #>  [7745,]  159  169  169 #>  [7746,]  159  169  169 #>  [7747,]  160  170  169 #>  [7748,]  159  169  169 #>  [7749,]  159  169  168 #>  [7750,]  159  169  169 #>  [7751,]  159  169  169 #>  [7752,]  160  170  169 #>  [7753,]  159  169  168 #>  [7754,]  159  169  169 #>  [7755,]  159  169  169 #>  [7756,]  159  169  168 #>  [7757,]  159  169  169 #>  [7758,]  160  170  169 #>  [7759,]  160  170  169 #>  [7760,]  159  169  169 #>  [7761,]  160  170  169 #>  [7762,]  159  169  169 #>  [7763,]  159  169  169 #>  [7764,]  159  169  169 #>  [7765,]  159  169  169 #>  [7766,]  160  170  168 #>  [7767,]  159  169  169 #>  [7768,]  159  169  169 #>  [7769,]  159  169  169 #>  [7770,]  160  170  169 #>  [7771,]  160  170  169 #>  [7772,]  159  169  169 #>  [7773,]  159  169  169 #>  [7774,]  159  169  169 #>  [7775,]  160  170  169 #>  [7776,]  159  169  169 #>  [7777,]  160  170  169 #>  [7778,]  159  169  169 #>  [7779,]  160  170  169 #>  [7780,]  159  169  169 #>  [7781,]  159  169  169 #>  [7782,]  159  169  169 #>  [7783,]  159  169  169 #>  [7784,]  159  169  169 #>  [7785,]  159  169  169 #>  [7786,]  159  169  169 #>  [7787,]  160  170  169 #>  [7788,]  159  169  169 #>  [7789,]  159  169  169 #>  [7790,]  160  170  169 #>  [7791,]  160  170  169 #>  [7792,]  160  170  169 #>  [7793,]  159  169  169 #>  [7794,]  159  169  169 #>  [7795,]  160  170  169 #>  [7796,]  159  169  169 #>  [7797,]  159  169  169 #>  [7798,]  159  169  169 #>  [7799,]  159  169  169 #>  [7800,]  160  170  169 #>  [7801,]  162  172  171 #>  [7802,]  162  172  171 #>  [7803,]  161  171  170 #>  [7804,]  162  172  171 #>  [7805,]  162  172  171 #>  [7806,]  161  171  170 #>  [7807,]  161  171  170 #>  [7808,]  161  171  170 #>  [7809,]  162  172  171 #>  [7810,]  162  172  171 #>  [7811,]  162  172  171 #>  [7812,]  162  172  171 #>  [7813,]  162  172  171 #>  [7814,]  162  172  171 #>  [7815,]  162  172  171 #>  [7816,]  162  172  171 #>  [7817,]  162  172  171 #>  [7818,]  162  172  171 #>  [7819,]  162  172  171 #>  [7820,]  161  171  170 #>  [7821,]  161  171  170 #>  [7822,]  162  172  171 #>  [7823,]  161  171  170 #>  [7824,]  162  172  171 #>  [7825,]  161  171  170 #>  [7826,]  162  172  171 #>  [7827,]  162  172  171 #>  [7828,]  162  172  171 #>  [7829,]  161  171  170 #>  [7830,]  162  172  171 #>  [7831,]  162  172  171 #>  [7832,]  162  172  171 #>  [7833,]  162  172  171 #>  [7834,]  161  171  170 #>  [7835,]  161  171  170 #>  [7836,]  161  171  170 #>  [7837,]  161  171  170 #>  [7838,]  162  172  171 #>  [7839,]  162  172  171 #>  [7840,]  162  172  171 #>  [7841,]  161  171  170 #>  [7842,]  161  171  170 #>  [7843,]  162  172  171 #>  [7844,]  161  171  170 #>  [7845,]  161  171  170 #>  [7846,]  162  172  171 #>  [7847,]  162  172  171 #>  [7848,]  162  172  171 #>  [7849,]  162  172  171 #>  [7850,]  161  171  170 #>  [7851,]  162  172  171 #>  [7852,]  162  172  171 #>  [7853,]  161  171  170 #>  [7854,]  161  171  170 #>  [7855,]  161  171  170 #>  [7856,]  161  171  170 #>  [7857,]  161  171  170 #>  [7858,]  162  172  171 #>  [7859,]  162  172  171 #>  [7860,]  161  171  170 #>  [7861,]  162  172  171 #>  [7862,]  162  172  171 #>  [7863,]  162  172  171 #>  [7864,]  161  171  170 #>  [7865,]  161  171  170 #>  [7866,]  162  172  171 #>  [7867,]  161  171  170 #>  [7868,]  162  172  171 #>  [7869,]  162  172  171 #>  [7870,]  162  172  171 #>  [7871,]  162  172  171 #>  [7872,]  162  172  171 #>  [7873,]  161  171  170 #>  [7874,]  161  171  170 #>  [7875,]  162  172  171 #>  [7876,]  161  171  170 #>  [7877,]  162  172  171 #>  [7878,]  162  172  171 #>  [7879,]  162  172  171 #>  [7880,]  161  171  170 #>  [7881,]  161  171  170 #>  [7882,]  161  171  170 #>  [7883,]  162  172  171 #>  [7884,]  161  171  170 #>  [7885,]  161  171  170 #>  [7886,]  161  171  170 #>  [7887,]  162  172  171 #>  [7888,]  161  171  170 #>  [7889,]  161  171  170 #>  [7890,]  162  172  171 #>  [7891,]  162  172  171 #>  [7892,]  162  172  171 #>  [7893,]  162  172  171 #>  [7894,]  161  171  170 #>  [7895,]  162  172  171 #>  [7896,]  162  172  171 #>  [7897,]  161  171  170 #>  [7898,]  161  171  170 #>  [7899,]  161  171  170 #>  [7900,]  162  172  171 #>  [7901,]  163  173  173 #>  [7902,]  163  173  173 #>  [7903,]  163  173  173 #>  [7904,]  164  174  172 #>  [7905,]  163  173  173 #>  [7906,]  163  173  173 #>  [7907,]  163  173  173 #>  [7908,]  164  174  172 #>  [7909,]  164  174  172 #>  [7910,]  163  173  173 #>  [7911,]  164  174  172 #>  [7912,]  163  173  173 #>  [7913,]  165  174  172 #>  [7914,]  163  173  173 #>  [7915,]  163  173  173 #>  [7916,]  163  173  173 #>  [7917,]  164  174  172 #>  [7918,]  163  173  173 #>  [7919,]  163  173  173 #>  [7920,]  163  173  173 #>  [7921,]  163  173  173 #>  [7922,]  164  174  172 #>  [7923,]  163  173  173 #>  [7924,]  163  173  173 #>  [7925,]  163  173  173 #>  [7926,]  163  173  173 #>  [7927,]  164  174  172 #>  [7928,]  163  173  173 #>  [7929,]  163  173  173 #>  [7930,]  163  173  173 #>  [7931,]  163  173  173 #>  [7932,]  163  173  173 #>  [7933,]  163  173  173 #>  [7934,]  163  173  173 #>  [7935,]  164  174  172 #>  [7936,]  163  173  173 #>  [7937,]  163  173  173 #>  [7938,]  163  173  173 #>  [7939,]  163  173  173 #>  [7940,]  163  173  173 #>  [7941,]  163  173  173 #>  [7942,]  163  173  173 #>  [7943,]  165  174  172 #>  [7944,]  164  174  172 #>  [7945,]  163  173  173 #>  [7946,]  163  173  173 #>  [7947,]  163  173  173 #>  [7948,]  163  173  173 #>  [7949,]  165  174  172 #>  [7950,]  163  173  173 #>  [7951,]  163  173  173 #>  [7952,]  164  174  172 #>  [7953,]  163  173  173 #>  [7954,]  163  173  173 #>  [7955,]  165  174  172 #>  [7956,]  163  173  173 #>  [7957,]  163  173  173 #>  [7958,]  164  174  172 #>  [7959,]  163  173  173 #>  [7960,]  163  173  173 #>  [7961,]  163  173  173 #>  [7962,]  163  173  173 #>  [7963,]  163  173  173 #>  [7964,]  163  173  173 #>  [7965,]  163  173  173 #>  [7966,]  164  174  172 #>  [7967,]  163  173  173 #>  [7968,]  163  173  173 #>  [7969,]  163  173  173 #>  [7970,]  163  173  173 #>  [7971,]  163  173  173 #>  [7972,]  163  173  173 #>  [7973,]  163  173  173 #>  [7974,]  163  173  173 #>  [7975,]  163  173  173 #>  [7976,]  163  173  173 #>  [7977,]  163  173  173 #>  [7978,]  163  173  173 #>  [7979,]  165  174  172 #>  [7980,]  165  174  172 #>  [7981,]  164  174  172 #>  [7982,]  164  174  172 #>  [7983,]  165  174  172 #>  [7984,]  163  173  173 #>  [7985,]  163  173  173 #>  [7986,]  163  173  173 #>  [7987,]  164  174  172 #>  [7988,]  165  174  172 #>  [7989,]  165  174  172 #>  [7990,]  164  174  172 #>  [7991,]  163  173  173 #>  [7992,]  164  174  172 #>  [7993,]  163  173  173 #>  [7994,]  163  173  173 #>  [7995,]  164  174  172 #>  [7996,]  163  173  173 #>  [7997,]  163  173  173 #>  [7998,]  163  173  173 #>  [7999,]  164  174  172 #>  [8000,]  163  173  173 #>  [8001,]  166  175  174 #>  [8002,]  167  176  174 #>  [8003,]  166  175  174 #>  [8004,]  166  175  174 #>  [8005,]  167  176  174 #>  [8006,]  166  175  174 #>  [8007,]  167  176  174 #>  [8008,]  166  175  174 #>  [8009,]  167  176  174 #>  [8010,]  167  176  174 #>  [8011,]  166  175  174 #>  [8012,]  167  176  174 #>  [8013,]  167  176  174 #>  [8014,]  166  175  174 #>  [8015,]  166  175  174 #>  [8016,]  166  175  174 #>  [8017,]  167  176  174 #>  [8018,]  167  176  174 #>  [8019,]  166  175  175 #>  [8020,]  167  176  175 #>  [8021,]  167  176  174 #>  [8022,]  167  176  175 #>  [8023,]  167  176  174 #>  [8024,]  167  176  174 #>  [8025,]  166  175  174 #>  [8026,]  166  175  174 #>  [8027,]  167  176  175 #>  [8028,]  166  175  174 #>  [8029,]  167  176  175 #>  [8030,]  167  176  174 #>  [8031,]  167  176  174 #>  [8032,]  167  176  174 #>  [8033,]  167  176  174 #>  [8034,]  166  175  174 #>  [8035,]  166  175  174 #>  [8036,]  167  176  175 #>  [8037,]  166  175  174 #>  [8038,]  166  175  174 #>  [8039,]  166  175  174 #>  [8040,]  167  176  174 #>  [8041,]  167  176  174 #>  [8042,]  166  175  174 #>  [8043,]  166  175  174 #>  [8044,]  167  176  174 #>  [8045,]  166  175  174 #>  [8046,]  166  175  174 #>  [8047,]  167  176  174 #>  [8048,]  167  176  174 #>  [8049,]  166  175  174 #>  [8050,]  167  176  174 #>  [8051,]  166  175  174 #>  [8052,]  166  175  174 #>  [8053,]  167  176  174 #>  [8054,]  167  176  174 #>  [8055,]  166  175  174 #>  [8056,]  166  175  174 #>  [8057,]  166  175  174 #>  [8058,]  167  176  175 #>  [8059,]  166  175  174 #>  [8060,]  167  176  174 #>  [8061,]  167  176  174 #>  [8062,]  166  175  174 #>  [8063,]  167  176  174 #>  [8064,]  166  175  175 #>  [8065,]  166  175  174 #>  [8066,]  166  175  175 #>  [8067,]  166  175  174 #>  [8068,]  166  175  174 #>  [8069,]  166  175  174 #>  [8070,]  167  176  174 #>  [8071,]  166  175  174 #>  [8072,]  166  175  174 #>  [8073,]  166  175  174 #>  [8074,]  166  175  174 #>  [8075,]  167  176  174 #>  [8076,]  166  175  174 #>  [8077,]  166  175  175 #>  [8078,]  167  176  174 #>  [8079,]  166  175  174 #>  [8080,]  167  176  174 #>  [8081,]  167  176  175 #>  [8082,]  166  175  174 #>  [8083,]  167  176  174 #>  [8084,]  167  176  174 #>  [8085,]  166  175  174 #>  [8086,]  167  176  174 #>  [8087,]  167  176  175 #>  [8088,]  167  176  174 #>  [8089,]  166  175  174 #>  [8090,]  166  175  174 #>  [8091,]  166  175  174 #>  [8092,]  167  176  174 #>  [8093,]  167  176  174 #>  [8094,]  166  175  174 #>  [8095,]  167  176  174 #>  [8096,]  166  175  174 #>  [8097,]  166  175  174 #>  [8098,]  166  175  174 #>  [8099,]  166  175  174 #>  [8100,]  166  175  175 #>  [8101,]  168  178  177 #>  [8102,]  168  177  176 #>  [8103,]  168  177  176 #>  [8104,]  168  177  176 #>  [8105,]  168  177  176 #>  [8106,]  168  178  177 #>  [8107,]  168  177  176 #>  [8108,]  168  177  176 #>  [8109,]  168  177  176 #>  [8110,]  168  177  176 #>  [8111,]  168  177  176 #>  [8112,]  168  177  176 #>  [8113,]  168  178  177 #>  [8114,]  168  178  177 #>  [8115,]  168  178  177 #>  [8116,]  168  178  177 #>  [8117,]  168  178  177 #>  [8118,]  168  177  176 #>  [8119,]  168  177  176 #>  [8120,]  168  177  176 #>  [8121,]  168  178  177 #>  [8122,]  168  177  176 #>  [8123,]  168  177  176 #>  [8124,]  168  177  176 #>  [8125,]  168  177  176 #>  [8126,]  168  177  176 #>  [8127,]  168  177  176 #>  [8128,]  168  177  176 #>  [8129,]  168  178  177 #>  [8130,]  168  177  176 #>  [8131,]  168  177  176 #>  [8132,]  168  177  176 #>  [8133,]  168  178  177 #>  [8134,]  168  177  176 #>  [8135,]  168  177  176 #>  [8136,]  168  177  176 #>  [8137,]  168  177  176 #>  [8138,]  168  177  176 #>  [8139,]  168  177  176 #>  [8140,]  168  177  176 #>  [8141,]  168  178  177 #>  [8142,]  168  177  176 #>  [8143,]  168  177  176 #>  [8144,]  168  178  177 #>  [8145,]  168  177  176 #>  [8146,]  168  177  176 #>  [8147,]  168  177  176 #>  [8148,]  168  177  176 #>  [8149,]  168  177  176 #>  [8150,]  168  178  177 #>  [8151,]  168  177  176 #>  [8152,]  168  177  176 #>  [8153,]  168  177  176 #>  [8154,]  168  177  176 #>  [8155,]  168  177  176 #>  [8156,]  168  177  176 #>  [8157,]  168  177  176 #>  [8158,]  168  177  176 #>  [8159,]  168  178  177 #>  [8160,]  168  177  176 #>  [8161,]  168  178  177 #>  [8162,]  168  177  176 #>  [8163,]  168  177  176 #>  [8164,]  168  177  176 #>  [8165,]  168  177  176 #>  [8166,]  168  177  176 #>  [8167,]  168  177  176 #>  [8168,]  168  178  177 #>  [8169,]  168  177  176 #>  [8170,]  168  178  177 #>  [8171,]  168  177  176 #>  [8172,]  168  177  176 #>  [8173,]  168  178  177 #>  [8174,]  168  177  176 #>  [8175,]  168  177  176 #>  [8176,]  168  178  177 #>  [8177,]  168  177  176 #>  [8178,]  168  177  176 #>  [8179,]  168  177  176 #>  [8180,]  168  177  176 #>  [8181,]  168  178  177 #>  [8182,]  168  177  176 #>  [8183,]  168  178  177 #>  [8184,]  168  177  176 #>  [8185,]  168  177  176 #>  [8186,]  168  178  177 #>  [8187,]  168  177  176 #>  [8188,]  168  177  176 #>  [8189,]  168  177  176 #>  [8190,]  168  177  176 #>  [8191,]  168  177  176 #>  [8192,]  168  177  176 #>  [8193,]  168  177  176 #>  [8194,]  168  177  176 #>  [8195,]  168  177  176 #>  [8196,]  168  178  177 #>  [8197,]  168  177  176 #>  [8198,]  168  177  176 #>  [8199,]  168  178  177 #>  [8200,]  168  177  176 #>  [8201,]  169  179  179 #>  [8202,]  169  179  179 #>  [8203,]  170  180  179 #>  [8204,]  169  179  178 #>  [8205,]  171  180  179 #>  [8206,]  169  179  179 #>  [8207,]  169  179  179 #>  [8208,]  169  179  178 #>  [8209,]  171  180  178 #>  [8210,]  171  180  179 #>  [8211,]  171  180  178 #>  [8212,]  169  179  179 #>  [8213,]  169  179  178 #>  [8214,]  171  180  179 #>  [8215,]  169  179  179 #>  [8216,]  169  179  179 #>  [8217,]  169  179  178 #>  [8218,]  169  179  179 #>  [8219,]  169  179  179 #>  [8220,]  169  179  179 #>  [8221,]  171  180  179 #>  [8222,]  169  179  178 #>  [8223,]  169  179  179 #>  [8224,]  171  180  179 #>  [8225,]  170  180  179 #>  [8226,]  169  179  179 #>  [8227,]  169  179  178 #>  [8228,]  171  180  179 #>  [8229,]  169  179  179 #>  [8230,]  169  179  178 #>  [8231,]  171  180  179 #>  [8232,]  171  180  179 #>  [8233,]  169  179  179 #>  [8234,]  171  180  179 #>  [8235,]  171  180  178 #>  [8236,]  169  179  179 #>  [8237,]  169  179  179 #>  [8238,]  169  179  179 #>  [8239,]  170  180  179 #>  [8240,]  171  180  179 #>  [8241,]  169  179  179 #>  [8242,]  171  180  179 #>  [8243,]  169  179  178 #>  [8244,]  169  179  178 #>  [8245,]  169  179  179 #>  [8246,]  169  179  179 #>  [8247,]  171  180  179 #>  [8248,]  171  180  179 #>  [8249,]  169  179  178 #>  [8250,]  169  179  179 #>  [8251,]  169  179  179 #>  [8252,]  171  180  178 #>  [8253,]  169  179  179 #>  [8254,]  171  180  178 #>  [8255,]  169  179  178 #>  [8256,]  169  179  179 #>  [8257,]  169  179  179 #>  [8258,]  169  179  178 #>  [8259,]  169  179  179 #>  [8260,]  169  179  179 #>  [8261,]  169  179  179 #>  [8262,]  171  180  179 #>  [8263,]  169  179  179 #>  [8264,]  169  179  179 #>  [8265,]  170  180  179 #>  [8266,]  169  179  178 #>  [8267,]  169  179  179 #>  [8268,]  169  179  179 #>  [8269,]  169  179  178 #>  [8270,]  170  180  179 #>  [8271,]  169  179  179 #>  [8272,]  171  180  179 #>  [8273,]  169  179  179 #>  [8274,]  171  180  179 #>  [8275,]  169  179  179 #>  [8276,]  171  180  179 #>  [8277,]  169  179  179 #>  [8278,]  169  179  179 #>  [8279,]  169  179  178 #>  [8280,]  169  179  178 #>  [8281,]  169  179  178 #>  [8282,]  171  180  178 #>  [8283,]  169  179  178 #>  [8284,]  169  179  179 #>  [8285,]  169  179  179 #>  [8286,]  169  179  179 #>  [8287,]  169  179  178 #>  [8288,]  169  179  178 #>  [8289,]  169  179  178 #>  [8290,]  169  179  178 #>  [8291,]  171  180  179 #>  [8292,]  169  179  178 #>  [8293,]  169  179  179 #>  [8294,]  169  179  179 #>  [8295,]  169  179  178 #>  [8296,]  169  179  179 #>  [8297,]  169  179  179 #>  [8298,]  170  180  179 #>  [8299,]  169  179  178 #>  [8300,]  169  179  179 #>  [8301,]  173  182  181 #>  [8302,]  172  182  181 #>  [8303,]  172  181  180 #>  [8304,]  172  182  181 #>  [8305,]  173  182  181 #>  [8306,]  172  181  180 #>  [8307,]  172  182  181 #>  [8308,]  172  182  181 #>  [8309,]  172  182  181 #>  [8310,]  173  182  181 #>  [8311,]  173  182  181 #>  [8312,]  172  182  181 #>  [8313,]  172  182  181 #>  [8314,]  173  182  181 #>  [8315,]  173  182  181 #>  [8316,]  172  182  181 #>  [8317,]  173  182  181 #>  [8318,]  173  182  181 #>  [8319,]  172  181  180 #>  [8320,]  172  182  181 #>  [8321,]  172  182  181 #>  [8322,]  173  182  181 #>  [8323,]  172  182  181 #>  [8324,]  172  182  181 #>  [8325,]  172  182  181 #>  [8326,]  173  182  181 #>  [8327,]  173  182  181 #>  [8328,]  172  182  181 #>  [8329,]  172  182  181 #>  [8330,]  172  182  181 #>  [8331,]  173  182  181 #>  [8332,]  173  182  181 #>  [8333,]  172  182  181 #>  [8334,]  172  181  180 #>  [8335,]  172  182  181 #>  [8336,]  172  182  181 #>  [8337,]  172  181  180 #>  [8338,]  172  181  180 #>  [8339,]  172  182  181 #>  [8340,]  172  182  181 #>  [8341,]  172  182  181 #>  [8342,]  172  182  181 #>  [8343,]  173  182  181 #>  [8344,]  172  182  181 #>  [8345,]  172  181  180 #>  [8346,]  172  182  181 #>  [8347,]  173  182  181 #>  [8348,]  172  182  181 #>  [8349,]  172  181  180 #>  [8350,]  172  182  181 #>  [8351,]  172  182  181 #>  [8352,]  172  181  180 #>  [8353,]  172  182  181 #>  [8354,]  172  182  181 #>  [8355,]  172  182  181 #>  [8356,]  172  182  181 #>  [8357,]  172  182  181 #>  [8358,]  173  182  181 #>  [8359,]  173  182  181 #>  [8360,]  172  182  181 #>  [8361,]  173  182  181 #>  [8362,]  172  182  181 #>  [8363,]  172  182  181 #>  [8364,]  172  182  181 #>  [8365,]  172  182  181 #>  [8366,]  173  182  181 #>  [8367,]  172  182  181 #>  [8368,]  172  181  180 #>  [8369,]  172  182  181 #>  [8370,]  173  182  181 #>  [8371,]  173  182  181 #>  [8372,]  172  181  180 #>  [8373,]  172  182  181 #>  [8374,]  172  182  181 #>  [8375,]  173  182  181 #>  [8376,]  172  182  181 #>  [8377,]  173  182  181 #>  [8378,]  172  182  181 #>  [8379,]  173  182  181 #>  [8380,]  172  182  181 #>  [8381,]  172  182  181 #>  [8382,]  172  182  181 #>  [8383,]  172  182  181 #>  [8384,]  172  182  181 #>  [8385,]  172  182  181 #>  [8386,]  172  182  181 #>  [8387,]  173  182  181 #>  [8388,]  172  182  181 #>  [8389,]  172  182  181 #>  [8390,]  173  182  181 #>  [8391,]  173  182  181 #>  [8392,]  172  182  181 #>  [8393,]  172  182  181 #>  [8394,]  172  182  181 #>  [8395,]  173  182  181 #>  [8396,]  172  181  180 #>  [8397,]  172  182  181 #>  [8398,]  172  182  181 #>  [8399,]  172  182  181 #>  [8400,]  173  182  181 #>  [8401,]  175  184  182 #>  [8402,]  174  183  182 #>  [8403,]  174  183  182 #>  [8404,]  174  183  182 #>  [8405,]  174  183  182 #>  [8406,]  174  183  182 #>  [8407,]  174  183  182 #>  [8408,]  174  183  182 #>  [8409,]  175  184  182 #>  [8410,]  174  183  182 #>  [8411,]  174  183  182 #>  [8412,]  174  183  182 #>  [8413,]  175  184  182 #>  [8414,]  174  183  182 #>  [8415,]  174  183  182 #>  [8416,]  174  183  182 #>  [8417,]  175  184  182 #>  [8418,]  175  184  182 #>  [8419,]  174  183  182 #>  [8420,]  175  184  182 #>  [8421,]  174  183  182 #>  [8422,]  174  183  182 #>  [8423,]  174  183  182 #>  [8424,]  174  183  182 #>  [8425,]  174  183  182 #>  [8426,]  174  183  182 #>  [8427,]  175  184  182 #>  [8428,]  174  183  182 #>  [8429,]  174  183  182 #>  [8430,]  174  183  182 #>  [8431,]  174  183  182 #>  [8432,]  174  183  182 #>  [8433,]  175  184  182 #>  [8434,]  174  183  182 #>  [8435,]  174  183  182 #>  [8436,]  175  184  182 #>  [8437,]  174  183  182 #>  [8438,]  175  184  182 #>  [8439,]  174  183  182 #>  [8440,]  174  183  182 #>  [8441,]  174  183  182 #>  [8442,]  175  184  182 #>  [8443,]  174  183  182 #>  [8444,]  174  183  182 #>  [8445,]  174  183  182 #>  [8446,]  174  183  182 #>  [8447,]  174  183  182 #>  [8448,]  174  183  182 #>  [8449,]  174  183  182 #>  [8450,]  174  183  182 #>  [8451,]  175  184  182 #>  [8452,]  174  183  182 #>  [8453,]  175  184  182 #>  [8454,]  175  184  182 #>  [8455,]  174  183  182 #>  [8456,]  175  184  182 #>  [8457,]  174  183  182 #>  [8458,]  174  183  182 #>  [8459,]  174  183  182 #>  [8460,]  174  183  182 #>  [8461,]  174  183  182 #>  [8462,]  174  183  182 #>  [8463,]  174  183  182 #>  [8464,]  174  183  182 #>  [8465,]  175  184  182 #>  [8466,]  175  184  182 #>  [8467,]  174  183  182 #>  [8468,]  174  183  182 #>  [8469,]  174  183  182 #>  [8470,]  174  183  182 #>  [8471,]  174  183  182 #>  [8472,]  174  183  182 #>  [8473,]  174  183  182 #>  [8474,]  174  183  182 #>  [8475,]  174  183  182 #>  [8476,]  174  183  182 #>  [8477,]  175  184  182 #>  [8478,]  174  183  182 #>  [8479,]  175  184  182 #>  [8480,]  174  183  182 #>  [8481,]  174  183  182 #>  [8482,]  175  184  182 #>  [8483,]  175  184  182 #>  [8484,]  175  184  182 #>  [8485,]  175  184  182 #>  [8486,]  174  183  182 #>  [8487,]  175  184  182 #>  [8488,]  174  183  182 #>  [8489,]  174  183  182 #>  [8490,]  174  183  182 #>  [8491,]  175  184  182 #>  [8492,]  174  183  182 #>  [8493,]  175  184  182 #>  [8494,]  175  184  182 #>  [8495,]  174  183  182 #>  [8496,]  174  183  182 #>  [8497,]  174  183  182 #>  [8498,]  174  183  182 #>  [8499,]  174  183  182 #>  [8500,]  174  183  182 #>  [8501,]  177  185  183 #>  [8502,]  177  185  183 #>  [8503,]  176  187  184 #>  [8504,]  176  186  184 #>  [8505,]  176  186  184 #>  [8506,]  176  187  184 #>  [8507,]  177  185  183 #>  [8508,]  177  185  183 #>  [8509,]  176  186  184 #>  [8510,]  176  186  184 #>  [8511,]  176  186  184 #>  [8512,]  177  185  183 #>  [8513,]  177  185  183 #>  [8514,]  176  186  184 #>  [8515,]  177  185  183 #>  [8516,]  177  185  183 #>  [8517,]  177  185  183 #>  [8518,]  177  185  183 #>  [8519,]  177  185  183 #>  [8520,]  177  185  183 #>  [8521,]  176  186  184 #>  [8522,]  177  185  183 #>  [8523,]  177  185  183 #>  [8524,]  176  186  184 #>  [8525,]  176  187  184 #>  [8526,]  177  185  183 #>  [8527,]  177  185  183 #>  [8528,]  176  187  184 #>  [8529,]  177  185  183 #>  [8530,]  177  185  183 #>  [8531,]  176  186  184 #>  [8532,]  176  186  184 #>  [8533,]  177  185  183 #>  [8534,]  176  187  184 #>  [8535,]  176  186  184 #>  [8536,]  177  185  183 #>  [8537,]  177  185  183 #>  [8538,]  177  185  183 #>  [8539,]  176  186  184 #>  [8540,]  176  186  184 #>  [8541,]  177  185  183 #>  [8542,]  176  186  184 #>  [8543,]  177  185  183 #>  [8544,]  177  185  183 #>  [8545,]  177  185  183 #>  [8546,]  177  185  183 #>  [8547,]  176  186  184 #>  [8548,]  176  186  184 #>  [8549,]  177  185  183 #>  [8550,]  177  185  183 #>  [8551,]  177  185  183 #>  [8552,]  176  186  184 #>  [8553,]  177  185  183 #>  [8554,]  176  186  184 #>  [8555,]  177  185  183 #>  [8556,]  177  185  183 #>  [8557,]  176  186  184 #>  [8558,]  177  185  183 #>  [8559,]  177  185  183 #>  [8560,]  177  185  183 #>  [8561,]  177  185  183 #>  [8562,]  176  186  184 #>  [8563,]  177  185  183 #>  [8564,]  177  185  183 #>  [8565,]  176  187  184 #>  [8566,]  177  185  183 #>  [8567,]  176  186  184 #>  [8568,]  177  185  183 #>  [8569,]  177  185  183 #>  [8570,]  176  187  184 #>  [8571,]  177  185  183 #>  [8572,]  176  186  184 #>  [8573,]  176  187  184 #>  [8574,]  176  186  184 #>  [8575,]  177  185  183 #>  [8576,]  176  186  184 #>  [8577,]  177  185  183 #>  [8578,]  177  185  183 #>  [8579,]  176  186  184 #>  [8580,]  177  185  183 #>  [8581,]  177  185  183 #>  [8582,]  176  186  184 #>  [8583,]  177  185  183 #>  [8584,]  177  185  183 #>  [8585,]  177  185  183 #>  [8586,]  176  186  184 #>  [8587,]  177  185  183 #>  [8588,]  176  186  184 #>  [8589,]  176  186  184 #>  [8590,]  177  185  183 #>  [8591,]  176  186  184 #>  [8592,]  176  186  184 #>  [8593,]  177  185  183 #>  [8594,]  176  186  184 #>  [8595,]  177  185  183 #>  [8596,]  177  185  183 #>  [8597,]  177  185  183 #>  [8598,]  176  187  184 #>  [8599,]  176  186  184 #>  [8600,]  177  185  183 #>  [8601,]  178  188  185 #>  [8602,]  178  188  185 #>  [8603,]  179  189  186 #>  [8604,]  178  188  185 #>  [8605,]  178  188  185 #>  [8606,]  178  188  185 #>  [8607,]  179  189  186 #>  [8608,]  179  189  186 #>  [8609,]  178  188  185 #>  [8610,]  178  188  185 #>  [8611,]  178  188  185 #>  [8612,]  178  188  185 #>  [8613,]  180  189  186 #>  [8614,]  178  188  185 #>  [8615,]  178  188  185 #>  [8616,]  179  189  186 #>  [8617,]  178  188  185 #>  [8618,]  178  188  185 #>  [8619,]  178  188  185 #>  [8620,]  180  189  186 #>  [8621,]  178  188  185 #>  [8622,]  180  189  186 #>  [8623,]  178  188  185 #>  [8624,]  180  189  186 #>  [8625,]  179  189  186 #>  [8626,]  178  188  185 #>  [8627,]  178  188  185 #>  [8628,]  178  188  185 #>  [8629,]  178  188  185 #>  [8630,]  178  188  185 #>  [8631,]  178  188  185 #>  [8632,]  178  188  185 #>  [8633,]  178  188  185 #>  [8634,]  178  188  185 #>  [8635,]  178  188  185 #>  [8636,]  178  188  185 #>  [8637,]  178  188  185 #>  [8638,]  178  188  185 #>  [8639,]  180  189  186 #>  [8640,]  179  189  186 #>  [8641,]  178  188  185 #>  [8642,]  178  188  185 #>  [8643,]  178  188  185 #>  [8644,]  179  189  186 #>  [8645,]  178  188  185 #>  [8646,]  179  189  186 #>  [8647,]  178  188  185 #>  [8648,]  178  188  185 #>  [8649,]  179  189  186 #>  [8650,]  180  189  186 #>  [8651,]  178  188  185 #>  [8652,]  178  188  185 #>  [8653,]  180  189  186 #>  [8654,]  180  189  186 #>  [8655,]  179  189  186 #>  [8656,]  180  189  186 #>  [8657,]  178  188  185 #>  [8658,]  178  188  185 #>  [8659,]  179  189  186 #>  [8660,]  178  188  185 #>  [8661,]  178  188  185 #>  [8662,]  178  188  185 #>  [8663,]  180  189  186 #>  [8664,]  178  188  185 #>  [8665,]  180  189  186 #>  [8666,]  180  189  186 #>  [8667,]  178  188  185 #>  [8668,]  178  188  185 #>  [8669,]  178  188  185 #>  [8670,]  180  189  186 #>  [8671,]  178  188  185 #>  [8672,]  179  189  186 #>  [8673,]  178  188  185 #>  [8674,]  178  188  185 #>  [8675,]  178  188  185 #>  [8676,]  178  188  185 #>  [8677,]  178  188  185 #>  [8678,]  179  189  186 #>  [8679,]  178  188  185 #>  [8680,]  178  188  185 #>  [8681,]  178  188  185 #>  [8682,]  178  188  185 #>  [8683,]  178  188  185 #>  [8684,]  180  189  186 #>  [8685,]  178  188  185 #>  [8686,]  179  189  186 #>  [8687,]  178  188  185 #>  [8688,]  178  188  185 #>  [8689,]  180  189  186 #>  [8690,]  180  189  186 #>  [8691,]  178  188  185 #>  [8692,]  178  188  185 #>  [8693,]  178  188  185 #>  [8694,]  178  188  185 #>  [8695,]  178  188  185 #>  [8696,]  178  188  185 #>  [8697,]  178  188  185 #>  [8698,]  179  189  186 #>  [8699,]  178  188  185 #>  [8700,]  180  189  186 #>  [8701,]  181  190  187 #>  [8702,]  181  190  187 #>  [8703,]  181  190  187 #>  [8704,]  182  191  188 #>  [8705,]  181  190  187 #>  [8706,]  181  190  187 #>  [8707,]  182  191  188 #>  [8708,]  181  190  187 #>  [8709,]  181  190  187 #>  [8710,]  182  191  188 #>  [8711,]  181  190  187 #>  [8712,]  181  190  187 #>  [8713,]  181  190  187 #>  [8714,]  181  190  187 #>  [8715,]  181  190  187 #>  [8716,]  182  191  188 #>  [8717,]  181  190  187 #>  [8718,]  181  190  187 #>  [8719,]  181  190  187 #>  [8720,]  182  191  188 #>  [8721,]  181  190  187 #>  [8722,]  181  190  187 #>  [8723,]  181  190  187 #>  [8724,]  182  191  188 #>  [8725,]  181  190  187 #>  [8726,]  181  190  187 #>  [8727,]  181  190  187 #>  [8728,]  182  191  188 #>  [8729,]  181  190  187 #>  [8730,]  181  190  187 #>  [8731,]  181  190  187 #>  [8732,]  181  190  187 #>  [8733,]  181  190  187 #>  [8734,]  181  190  187 #>  [8735,]  181  190  187 #>  [8736,]  181  190  187 #>  [8737,]  181  190  187 #>  [8738,]  181  190  187 #>  [8739,]  181  190  187 #>  [8740,]  181  190  187 #>  [8741,]  181  190  187 #>  [8742,]  181  190  187 #>  [8743,]  181  190  187 #>  [8744,]  181  190  187 #>  [8745,]  181  190  187 #>  [8746,]  181  190  187 #>  [8747,]  181  190  187 #>  [8748,]  181  190  187 #>  [8749,]  181  190  187 #>  [8750,]  182  191  188 #>  [8751,]  181  190  187 #>  [8752,]  182  191  188 #>  [8753,]  181  190  187 #>  [8754,]  182  191  188 #>  [8755,]  181  190  187 #>  [8756,]  181  190  187 #>  [8757,]  181  190  187 #>  [8758,]  181  190  187 #>  [8759,]  181  190  187 #>  [8760,]  181  190  187 #>  [8761,]  181  190  187 #>  [8762,]  181  190  187 #>  [8763,]  181  190  187 #>  [8764,]  181  190  187 #>  [8765,]  181  190  187 #>  [8766,]  181  190  187 #>  [8767,]  181  190  187 #>  [8768,]  181  190  187 #>  [8769,]  181  190  187 #>  [8770,]  181  190  187 #>  [8771,]  181  190  187 #>  [8772,]  181  190  187 #>  [8773,]  182  191  188 #>  [8774,]  181  190  187 #>  [8775,]  181  190  187 #>  [8776,]  182  191  188 #>  [8777,]  181  190  187 #>  [8778,]  181  190  187 #>  [8779,]  181  190  187 #>  [8780,]  181  190  187 #>  [8781,]  181  190  187 #>  [8782,]  181  190  187 #>  [8783,]  181  190  187 #>  [8784,]  181  190  187 #>  [8785,]  181  190  187 #>  [8786,]  182  191  188 #>  [8787,]  181  190  187 #>  [8788,]  181  190  187 #>  [8789,]  181  190  187 #>  [8790,]  181  190  187 #>  [8791,]  182  191  188 #>  [8792,]  181  190  187 #>  [8793,]  181  190  187 #>  [8794,]  181  190  187 #>  [8795,]  181  190  187 #>  [8796,]  181  190  187 #>  [8797,]  181  190  187 #>  [8798,]  181  190  187 #>  [8799,]  181  190  187 #>  [8800,]  181  190  187 #>  [8801,]  184  193  189 #>  [8802,]  184  193  189 #>  [8803,]  184  193  189 #>  [8804,]  184  193  189 #>  [8805,]  184  193  189 #>  [8806,]  184  193  189 #>  [8807,]  184  193  189 #>  [8808,]  184  193  189 #>  [8809,]  184  193  189 #>  [8810,]  184  193  189 #>  [8811,]  184  193  189 #>  [8812,]  184  193  189 #>  [8813,]  184  193  189 #>  [8814,]  184  193  189 #>  [8815,]  184  193  189 #>  [8816,]  184  193  189 #>  [8817,]  184  193  189 #>  [8818,]  184  193  189 #>  [8819,]  184  193  189 #>  [8820,]  184  193  189 #>  [8821,]  184  193  189 #>  [8822,]  184  193  189 #>  [8823,]  184  193  189 #>  [8824,]  184  193  189 #>  [8825,]  183  192  189 #>  [8826,]  184  193  189 #>  [8827,]  184  193  189 #>  [8828,]  184  193  189 #>  [8829,]  184  193  189 #>  [8830,]  184  193  189 #>  [8831,]  184  193  189 #>  [8832,]  184  193  189 #>  [8833,]  184  193  189 #>  [8834,]  184  193  189 #>  [8835,]  184  193  189 #>  [8836,]  184  193  189 #>  [8837,]  184  193  189 #>  [8838,]  184  193  189 #>  [8839,]  184  193  189 #>  [8840,]  184  193  189 #>  [8841,]  184  193  189 #>  [8842,]  184  193  189 #>  [8843,]  184  193  189 #>  [8844,]  184  193  189 #>  [8845,]  184  193  189 #>  [8846,]  184  193  189 #>  [8847,]  184  193  189 #>  [8848,]  184  193  189 #>  [8849,]  184  193  189 #>  [8850,]  184  193  189 #>  [8851,]  184  193  189 #>  [8852,]  184  193  189 #>  [8853,]  184  193  189 #>  [8854,]  184  193  189 #>  [8855,]  184  193  189 #>  [8856,]  183  192  189 #>  [8857,]  184  193  189 #>  [8858,]  184  193  189 #>  [8859,]  184  193  189 #>  [8860,]  184  193  189 #>  [8861,]  184  193  189 #>  [8862,]  184  193  189 #>  [8863,]  184  193  189 #>  [8864,]  184  193  189 #>  [8865,]  183  192  189 #>  [8866,]  184  193  189 #>  [8867,]  184  193  189 #>  [8868,]  184  193  189 #>  [8869,]  184  193  189 #>  [8870,]  184  193  189 #>  [8871,]  184  193  189 #>  [8872,]  184  193  189 #>  [8873,]  184  193  189 #>  [8874,]  183  192  189 #>  [8875,]  184  193  189 #>  [8876,]  184  193  189 #>  [8877,]  184  193  189 #>  [8878,]  184  193  189 #>  [8879,]  184  193  189 #>  [8880,]  183  192  189 #>  [8881,]  184  193  189 #>  [8882,]  184  193  189 #>  [8883,]  184  193  189 #>  [8884,]  184  193  189 #>  [8885,]  183  192  189 #>  [8886,]  184  193  189 #>  [8887,]  184  193  189 #>  [8888,]  184  193  189 #>  [8889,]  183  192  189 #>  [8890,]  184  193  189 #>  [8891,]  184  193  189 #>  [8892,]  184  193  189 #>  [8893,]  184  193  189 #>  [8894,]  184  193  189 #>  [8895,]  184  193  189 #>  [8896,]  184  193  189 #>  [8897,]  184  193  189 #>  [8898,]  184  193  189 #>  [8899,]  184  193  189 #>  [8900,]  184  193  189 #>  [8901,]  186  194  190 #>  [8902,]  186  194  190 #>  [8903,]  185  195  191 #>  [8904,]  185  195  191 #>  [8905,]  186  194  190 #>  [8906,]  186  194  190 #>  [8907,]  185  195  191 #>  [8908,]  185  195  191 #>  [8909,]  186  194  190 #>  [8910,]  186  194  190 #>  [8911,]  186  194  190 #>  [8912,]  185  195  191 #>  [8913,]  186  194  190 #>  [8914,]  186  194  190 #>  [8915,]  186  194  190 #>  [8916,]  186  194  190 #>  [8917,]  186  194  190 #>  [8918,]  186  194  190 #>  [8919,]  186  194  190 #>  [8920,]  186  194  190 #>  [8921,]  186  194  190 #>  [8922,]  186  194  190 #>  [8923,]  185  195  191 #>  [8924,]  186  194  190 #>  [8925,]  185  195  191 #>  [8926,]  186  194  190 #>  [8927,]  186  194  190 #>  [8928,]  186  194  190 #>  [8929,]  186  194  190 #>  [8930,]  186  194  190 #>  [8931,]  185  195  191 #>  [8932,]  185  196  191 #>  [8933,]  186  194  190 #>  [8934,]  186  194  190 #>  [8935,]  186  194  190 #>  [8936,]  186  194  190 #>  [8937,]  185  195  191 #>  [8938,]  186  194  190 #>  [8939,]  186  194  190 #>  [8940,]  185  195  191 #>  [8941,]  186  194  190 #>  [8942,]  186  194  190 #>  [8943,]  186  194  190 #>  [8944,]  186  194  190 #>  [8945,]  186  194  190 #>  [8946,]  185  195  191 #>  [8947,]  185  195  191 #>  [8948,]  186  194  190 #>  [8949,]  186  194  190 #>  [8950,]  186  194  190 #>  [8951,]  186  194  190 #>  [8952,]  185  195  191 #>  [8953,]  186  194  190 #>  [8954,]  186  194  190 #>  [8955,]  185  195  191 #>  [8956,]  186  194  190 #>  [8957,]  185  195  191 #>  [8958,]  186  194  190 #>  [8959,]  185  195  191 #>  [8960,]  185  195  191 #>  [8961,]  186  194  190 #>  [8962,]  186  194  190 #>  [8963,]  186  194  190 #>  [8964,]  186  194  190 #>  [8965,]  186  194  190 #>  [8966,]  186  194  190 #>  [8967,]  185  196  191 #>  [8968,]  185  195  191 #>  [8969,]  186  194  190 #>  [8970,]  186  194  190 #>  [8971,]  186  194  190 #>  [8972,]  185  196  191 #>  [8973,]  186  194  190 #>  [8974,]  185  195  191 #>  [8975,]  186  194  190 #>  [8976,]  185  196  191 #>  [8977,]  186  194  190 #>  [8978,]  185  196  191 #>  [8979,]  186  194  190 #>  [8980,]  185  195  191 #>  [8981,]  186  194  190 #>  [8982,]  186  194  190 #>  [8983,]  186  194  190 #>  [8984,]  186  194  190 #>  [8985,]  186  194  190 #>  [8986,]  185  195  191 #>  [8987,]  186  194  190 #>  [8988,]  186  194  190 #>  [8989,]  186  194  190 #>  [8990,]  186  194  190 #>  [8991,]  186  194  190 #>  [8992,]  185  195  191 #>  [8993,]  186  194  190 #>  [8994,]  186  194  190 #>  [8995,]  186  194  190 #>  [8996,]  185  195  191 #>  [8997,]  185  195  191 #>  [8998,]  185  195  191 #>  [8999,]  186  194  190 #>  [9000,]  186  194  190 #>  [9001,]  187  198  193 #>  [9002,]  187  197  192 #>  [9003,]  187  197  192 #>  [9004,]  187  197  192 #>  [9005,]  187  198  192 #>  [9006,]  187  197  192 #>  [9007,]  187  197  192 #>  [9008,]  187  197  192 #>  [9009,]  187  197  192 #>  [9010,]  187  197  192 #>  [9011,]  187  197  192 #>  [9012,]  187  197  192 #>  [9013,]  187  197  192 #>  [9014,]  187  198  193 #>  [9015,]  187  198  193 #>  [9016,]  187  197  193 #>  [9017,]  187  197  192 #>  [9018,]  187  198  192 #>  [9019,]  187  197  192 #>  [9020,]  187  197  192 #>  [9021,]  187  197  192 #>  [9022,]  187  197  192 #>  [9023,]  187  197  192 #>  [9024,]  187  197  192 #>  [9025,]  187  197  192 #>  [9026,]  187  197  192 #>  [9027,]  187  198  192 #>  [9028,]  187  197  192 #>  [9029,]  187  197  192 #>  [9030,]  187  197  192 #>  [9031,]  187  197  192 #>  [9032,]  187  198  192 #>  [9033,]  187  197  192 #>  [9034,]  187  197  192 #>  [9035,]  187  197  192 #>  [9036,]  187  197  192 #>  [9037,]  187  197  192 #>  [9038,]  187  197  192 #>  [9039,]  187  197  192 #>  [9040,]  187  197  192 #>  [9041,]  187  197  193 #>  [9042,]  187  197  192 #>  [9043,]  187  198  192 #>  [9044,]  187  197  193 #>  [9045,]  187  197  192 #>  [9046,]  187  197  192 #>  [9047,]  187  197  192 #>  [9048,]  187  197  192 #>  [9049,]  187  197  192 #>  [9050,]  187  197  193 #>  [9051,]  187  197  192 #>  [9052,]  187  197  192 #>  [9053,]  187  197  192 #>  [9054,]  187  197  192 #>  [9055,]  187  197  192 #>  [9056,]  187  197  192 #>  [9057,]  187  197  192 #>  [9058,]  187  198  192 #>  [9059,]  187  197  193 #>  [9060,]  187  197  192 #>  [9061,]  187  197  192 #>  [9062,]  187  197  192 #>  [9063,]  187  197  192 #>  [9064,]  187  197  192 #>  [9065,]  187  197  192 #>  [9066,]  187  197  192 #>  [9067,]  187  197  192 #>  [9068,]  187  197  192 #>  [9069,]  187  197  192 #>  [9070,]  187  197  193 #>  [9071,]  187  198  192 #>  [9072,]  187  197  192 #>  [9073,]  187  197  193 #>  [9074,]  187  197  192 #>  [9075,]  187  198  192 #>  [9076,]  187  197  192 #>  [9077,]  187  197  192 #>  [9078,]  187  197  192 #>  [9079,]  187  197  192 #>  [9080,]  187  197  192 #>  [9081,]  187  197  192 #>  [9082,]  187  197  192 #>  [9083,]  187  197  192 #>  [9084,]  187  197  192 #>  [9085,]  187  197  192 #>  [9086,]  187  197  192 #>  [9087,]  187  197  192 #>  [9088,]  187  197  192 #>  [9089,]  187  197  192 #>  [9090,]  187  197  192 #>  [9091,]  187  198  192 #>  [9092,]  187  197  192 #>  [9093,]  187  197  192 #>  [9094,]  187  197  192 #>  [9095,]  187  198  192 #>  [9096,]  187  197  193 #>  [9097,]  187  197  192 #>  [9098,]  187  197  192 #>  [9099,]  187  197  193 #>  [9100,]  187  198  192 #>  [9101,]  188  199  195 #>  [9102,]  188  199  195 #>  [9103,]  188  199  195 #>  [9104,]  189  200  194 #>  [9105,]  188  199  195 #>  [9106,]  188  199  195 #>  [9107,]  188  199  195 #>  [9108,]  188  199  195 #>  [9109,]  189  200  194 #>  [9110,]  188  199  195 #>  [9111,]  190  200  194 #>  [9112,]  190  200  194 #>  [9113,]  188  199  195 #>  [9114,]  190  200  194 #>  [9115,]  190  200  194 #>  [9116,]  188  199  195 #>  [9117,]  188  199  195 #>  [9118,]  190  200  194 #>  [9119,]  189  200  194 #>  [9120,]  188  199  195 #>  [9121,]  189  200  194 #>  [9122,]  188  199  195 #>  [9123,]  188  199  195 #>  [9124,]  188  199  195 #>  [9125,]  188  199  195 #>  [9126,]  190  200  194 #>  [9127,]  190  200  194 #>  [9128,]  188  199  195 #>  [9129,]  188  199  195 #>  [9130,]  189  200  194 #>  [9131,]  190  200  194 #>  [9132,]  188  199  195 #>  [9133,]  189  200  194 #>  [9134,]  188  199  195 #>  [9135,]  188  199  195 #>  [9136,]  189  200  194 #>  [9137,]  188  199  195 #>  [9138,]  190  200  194 #>  [9139,]  188  199  195 #>  [9140,]  188  199  195 #>  [9141,]  189  200  194 #>  [9142,]  189  200  194 #>  [9143,]  188  199  195 #>  [9144,]  188  199  195 #>  [9145,]  188  199  195 #>  [9146,]  188  199  195 #>  [9147,]  188  199  195 #>  [9148,]  189  200  194 #>  [9149,]  188  199  195 #>  [9150,]  188  199  195 #>  [9151,]  188  199  195 #>  [9152,]  188  199  195 #>  [9153,]  188  199  195 #>  [9154,]  188  199  195 #>  [9155,]  188  199  195 #>  [9156,]  188  199  195 #>  [9157,]  188  199  195 #>  [9158,]  190  200  194 #>  [9159,]  188  199  195 #>  [9160,]  189  200  194 #>  [9161,]  190  200  194 #>  [9162,]  189  200  194 #>  [9163,]  188  199  195 #>  [9164,]  188  199  195 #>  [9165,]  188  199  195 #>  [9166,]  188  199  195 #>  [9167,]  188  199  195 #>  [9168,]  189  200  194 #>  [9169,]  189  200  194 #>  [9170,]  188  199  195 #>  [9171,]  188  199  195 #>  [9172,]  188  199  195 #>  [9173,]  188  199  195 #>  [9174,]  189  200  194 #>  [9175,]  190  200  194 #>  [9176,]  188  199  195 #>  [9177,]  188  199  195 #>  [9178,]  188  199  195 #>  [9179,]  188  199  195 #>  [9180,]  188  199  195 #>  [9181,]  188  199  195 #>  [9182,]  189  200  194 #>  [9183,]  188  199  195 #>  [9184,]  188  199  195 #>  [9185,]  189  200  194 #>  [9186,]  188  199  195 #>  [9187,]  188  199  195 #>  [9188,]  188  199  195 #>  [9189,]  188  199  195 #>  [9190,]  188  199  195 #>  [9191,]  188  199  195 #>  [9192,]  190  200  194 #>  [9193,]  189  200  194 #>  [9194,]  188  199  195 #>  [9195,]  188  199  195 #>  [9196,]  189  200  194 #>  [9197,]  189  200  194 #>  [9198,]  188  199  195 #>  [9199,]  188  199  195 #>  [9200,]  188  199  195 #>  [9201,]  192  202  197 #>  [9202,]  192  202  197 #>  [9203,]  191  201  196 #>  [9204,]  192  202  197 #>  [9205,]  192  202  197 #>  [9206,]  192  202  197 #>  [9207,]  192  202  197 #>  [9208,]  192  202  197 #>  [9209,]  192  202  197 #>  [9210,]  192  202  197 #>  [9211,]  191  201  196 #>  [9212,]  191  201  196 #>  [9213,]  192  202  197 #>  [9214,]  191  201  196 #>  [9215,]  192  202  197 #>  [9216,]  192  202  197 #>  [9217,]  192  202  197 #>  [9218,]  192  202  197 #>  [9219,]  191  201  196 #>  [9220,]  191  201  196 #>  [9221,]  192  202  197 #>  [9222,]  191  201  196 #>  [9223,]  192  202  197 #>  [9224,]  192  202  197 #>  [9225,]  192  202  197 #>  [9226,]  191  201  196 #>  [9227,]  192  202  197 #>  [9228,]  192  202  197 #>  [9229,]  191  201  196 #>  [9230,]  192  202  197 #>  [9231,]  192  202  197 #>  [9232,]  191  201  196 #>  [9233,]  192  202  197 #>  [9234,]  192  202  197 #>  [9235,]  192  202  197 #>  [9236,]  191  201  196 #>  [9237,]  192  202  197 #>  [9238,]  192  202  197 #>  [9239,]  192  202  197 #>  [9240,]  191  201  196 #>  [9241,]  191  201  196 #>  [9242,]  191  201  196 #>  [9243,]  192  202  197 #>  [9244,]  192  202  197 #>  [9245,]  192  202  197 #>  [9246,]  192  202  197 #>  [9247,]  192  202  197 #>  [9248,]  191  201  196 #>  [9249,]  192  202  197 #>  [9250,]  192  202  197 #>  [9251,]  191  201  196 #>  [9252,]  192  202  197 #>  [9253,]  192  202  197 #>  [9254,]  191  201  196 #>  [9255,]  192  202  197 #>  [9256,]  192  202  197 #>  [9257,]  192  202  197 #>  [9258,]  192  202  197 #>  [9259,]  192  202  197 #>  [9260,]  191  201  196 #>  [9261,]  192  202  197 #>  [9262,]  191  201  196 #>  [9263,]  191  201  196 #>  [9264,]  192  202  197 #>  [9265,]  192  202  197 #>  [9266,]  191  201  196 #>  [9267,]  192  202  197 #>  [9268,]  191  201  196 #>  [9269,]  191  201  196 #>  [9270,]  192  202  197 #>  [9271,]  192  202  197 #>  [9272,]  192  202  197 #>  [9273,]  192  202  197 #>  [9274,]  192  202  197 #>  [9275,]  192  202  197 #>  [9276,]  192  202  197 #>  [9277,]  192  202  197 #>  [9278,]  192  202  197 #>  [9279,]  192  202  197 #>  [9280,]  191  201  196 #>  [9281,]  191  201  196 #>  [9282,]  192  202  197 #>  [9283,]  191  201  196 #>  [9284,]  192  202  197 #>  [9285,]  192  202  197 #>  [9286,]  192  202  197 #>  [9287,]  192  202  197 #>  [9288,]  192  202  197 #>  [9289,]  191  201  196 #>  [9290,]  192  202  197 #>  [9291,]  191  201  196 #>  [9292,]  192  202  197 #>  [9293,]  192  202  197 #>  [9294,]  192  202  197 #>  [9295,]  192  202  197 #>  [9296,]  192  202  197 #>  [9297,]  192  202  197 #>  [9298,]  192  202  197 #>  [9299,]  192  202  197 #>  [9300,]  192  202  197 #>  [9301,]  193  205  199 #>  [9302,]  193  204  199 #>  [9303,]  193  204  199 #>  [9304,]  193  204  199 #>  [9305,]  193  204  199 #>  [9306,]  193  204  199 #>  [9307,]  193  204  199 #>  [9308,]  193  204  199 #>  [9309,]  193  205  199 #>  [9310,]  193  204  199 #>  [9311,]  193  205  199 #>  [9312,]  193  204  199 #>  [9313,]  193  205  199 #>  [9314,]  193  204  199 #>  [9315,]  193  204  199 #>  [9316,]  193  204  199 #>  [9317,]  193  205  199 #>  [9318,]  194  203  198 #>  [9319,]  193  204  199 #>  [9320,]  193  205  199 #>  [9321,]  193  204  199 #>  [9322,]  193  204  199 #>  [9323,]  193  204  199 #>  [9324,]  193  204  199 #>  [9325,]  193  204  199 #>  [9326,]  193  204  199 #>  [9327,]  193  205  199 #>  [9328,]  193  205  199 #>  [9329,]  193  205  199 #>  [9330,]  193  204  199 #>  [9331,]  193  204  199 #>  [9332,]  193  204  199 #>  [9333,]  193  205  199 #>  [9334,]  193  204  199 #>  [9335,]  193  204  199 #>  [9336,]  193  205  199 #>  [9337,]  193  204  199 #>  [9338,]  193  205  199 #>  [9339,]  193  205  199 #>  [9340,]  193  204  199 #>  [9341,]  193  205  199 #>  [9342,]  193  205  199 #>  [9343,]  193  204  199 #>  [9344,]  193  204  199 #>  [9345,]  193  204  199 #>  [9346,]  193  204  199 #>  [9347,]  193  204  199 #>  [9348,]  193  204  199 #>  [9349,]  193  204  199 #>  [9350,]  193  204  199 #>  [9351,]  194  203  198 #>  [9352,]  193  204  199 #>  [9353,]  194  203  198 #>  [9354,]  193  205  199 #>  [9355,]  193  204  199 #>  [9356,]  193  205  199 #>  [9357,]  193  204  199 #>  [9358,]  193  205  199 #>  [9359,]  193  204  199 #>  [9360,]  193  204  199 #>  [9361,]  193  204  199 #>  [9362,]  193  205  199 #>  [9363,]  193  204  199 #>  [9364,]  193  204  199 #>  [9365,]  193  205  199 #>  [9366,]  193  205  199 #>  [9367,]  193  204  199 #>  [9368,]  193  204  199 #>  [9369,]  193  204  199 #>  [9370,]  193  205  199 #>  [9371,]  193  204  199 #>  [9372,]  193  204  199 #>  [9373,]  193  204  199 #>  [9374,]  193  204  199 #>  [9375,]  193  204  199 #>  [9376,]  193  204  199 #>  [9377,]  193  205  199 #>  [9378,]  193  204  199 #>  [9379,]  193  205  199 #>  [9380,]  193  204  199 #>  [9381,]  193  204  199 #>  [9382,]  193  205  199 #>  [9383,]  193  205  199 #>  [9384,]  194  203  198 #>  [9385,]  193  205  199 #>  [9386,]  193  204  199 #>  [9387,]  193  205  199 #>  [9388,]  193  204  199 #>  [9389,]  193  205  199 #>  [9390,]  193  205  199 #>  [9391,]  193  205  199 #>  [9392,]  193  204  199 #>  [9393,]  193  205  199 #>  [9394,]  194  203  198 #>  [9395,]  193  204  199 #>  [9396,]  193  204  199 #>  [9397,]  193  204  199 #>  [9398,]  193  204  199 #>  [9399,]  193  204  199 #>  [9400,]  193  204  199 #>  [9401,]  196  207  201 #>  [9402,]  196  207  201 #>  [9403,]  196  207  201 #>  [9404,]  195  206  200 #>  [9405,]  196  207  201 #>  [9406,]  196  207  201 #>  [9407,]  196  207  201 #>  [9408,]  195  206  200 #>  [9409,]  195  206  200 #>  [9410,]  195  206  200 #>  [9411,]  196  207  201 #>  [9412,]  196  207  201 #>  [9413,]  196  207  201 #>  [9414,]  196  207  201 #>  [9415,]  196  207  201 #>  [9416,]  196  207  201 #>  [9417,]  196  207  201 #>  [9418,]  196  207  201 #>  [9419,]  196  207  201 #>  [9420,]  196  207  201 #>  [9421,]  196  207  201 #>  [9422,]  196  207  201 #>  [9423,]  196  207  201 #>  [9424,]  196  207  201 #>  [9425,]  196  207  201 #>  [9426,]  196  207  201 #>  [9427,]  196  207  201 #>  [9428,]  196  207  201 #>  [9429,]  196  207  201 #>  [9430,]  196  207  201 #>  [9431,]  196  207  201 #>  [9432,]  196  207  201 #>  [9433,]  196  207  201 #>  [9434,]  196  207  201 #>  [9435,]  196  207  201 #>  [9436,]  196  207  201 #>  [9437,]  196  207  201 #>  [9438,]  196  207  201 #>  [9439,]  196  207  201 #>  [9440,]  196  207  201 #>  [9441,]  196  207  201 #>  [9442,]  196  207  201 #>  [9443,]  195  206  200 #>  [9444,]  196  207  201 #>  [9445,]  196  207  201 #>  [9446,]  196  207  201 #>  [9447,]  196  207  201 #>  [9448,]  196  207  201 #>  [9449,]  196  207  201 #>  [9450,]  196  207  201 #>  [9451,]  195  206  200 #>  [9452,]  196  207  201 #>  [9453,]  196  207  201 #>  [9454,]  196  207  201 #>  [9455,]  196  207  201 #>  [9456,]  196  207  201 #>  [9457,]  196  207  201 #>  [9458,]  196  207  201 #>  [9459,]  196  207  201 #>  [9460,]  195  206  200 #>  [9461,]  196  207  201 #>  [9462,]  196  207  201 #>  [9463,]  196  207  201 #>  [9464,]  195  206  200 #>  [9465,]  196  207  201 #>  [9466,]  196  207  201 #>  [9467,]  195  206  200 #>  [9468,]  196  207  201 #>  [9469,]  196  207  201 #>  [9470,]  196  207  201 #>  [9471,]  196  207  201 #>  [9472,]  196  207  201 #>  [9473,]  196  207  201 #>  [9474,]  196  207  201 #>  [9475,]  196  207  201 #>  [9476,]  196  207  201 #>  [9477,]  196  207  201 #>  [9478,]  196  207  201 #>  [9479,]  196  207  201 #>  [9480,]  196  207  201 #>  [9481,]  196  207  201 #>  [9482,]  196  207  201 #>  [9483,]  196  207  201 #>  [9484,]  196  207  201 #>  [9485,]  195  206  200 #>  [9486,]  196  207  201 #>  [9487,]  196  207  201 #>  [9488,]  196  207  201 #>  [9489,]  196  207  201 #>  [9490,]  196  207  201 #>  [9491,]  195  206  200 #>  [9492,]  196  207  201 #>  [9493,]  196  207  201 #>  [9494,]  196  207  201 #>  [9495,]  195  206  200 #>  [9496,]  196  207  201 #>  [9497,]  196  207  201 #>  [9498,]  196  207  201 #>  [9499,]  196  207  201 #>  [9500,]  196  207  201 #>  [9501,]  197  208  202 #>  [9502,]  197  208  202 #>  [9503,]  197  208  202 #>  [9504,]  198  209  202 #>  [9505,]  197  208  202 #>  [9506,]  198  209  202 #>  [9507,]  197  208  202 #>  [9508,]  197  208  202 #>  [9509,]  198  209  202 #>  [9510,]  198  209  202 #>  [9511,]  198  209  202 #>  [9512,]  198  209  202 #>  [9513,]  197  208  202 #>  [9514,]  198  209  202 #>  [9515,]  198  209  202 #>  [9516,]  197  208  202 #>  [9517,]  197  208  202 #>  [9518,]  198  209  202 #>  [9519,]  198  209  202 #>  [9520,]  197  208  202 #>  [9521,]  198  209  202 #>  [9522,]  197  208  202 #>  [9523,]  197  208  202 #>  [9524,]  197  208  202 #>  [9525,]  197  208  202 #>  [9526,]  198  209  202 #>  [9527,]  198  209  202 #>  [9528,]  197  208  202 #>  [9529,]  197  208  202 #>  [9530,]  198  209  202 #>  [9531,]  198  209  202 #>  [9532,]  197  208  202 #>  [9533,]  198  209  202 #>  [9534,]  197  208  202 #>  [9535,]  197  208  202 #>  [9536,]  198  209  202 #>  [9537,]  197  208  202 #>  [9538,]  198  209  202 #>  [9539,]  197  208  202 #>  [9540,]  197  208  202 #>  [9541,]  198  209  202 #>  [9542,]  198  209  202 #>  [9543,]  197  208  202 #>  [9544,]  197  208  202 #>  [9545,]  197  208  202 #>  [9546,]  197  208  202 #>  [9547,]  197  208  202 #>  [9548,]  198  209  202 #>  [9549,]  197  208  202 #>  [9550,]  197  208  202 #>  [9551,]  197  208  202 #>  [9552,]  197  208  202 #>  [9553,]  197  208  202 #>  [9554,]  197  208  202 #>  [9555,]  197  208  202 #>  [9556,]  197  208  202 #>  [9557,]  197  208  202 #>  [9558,]  198  209  202 #>  [9559,]  197  208  202 #>  [9560,]  198  209  202 #>  [9561,]  198  209  202 #>  [9562,]  198  209  202 #>  [9563,]  197  208  202 #>  [9564,]  197  208  202 #>  [9565,]  197  208  202 #>  [9566,]  197  208  202 #>  [9567,]  197  208  202 #>  [9568,]  198  209  202 #>  [9569,]  198  209  202 #>  [9570,]  197  208  202 #>  [9571,]  197  208  202 #>  [9572,]  197  208  202 #>  [9573,]  197  208  202 #>  [9574,]  198  209  202 #>  [9575,]  198  209  202 #>  [9576,]  197  208  202 #>  [9577,]  197  208  202 #>  [9578,]  197  208  202 #>  [9579,]  197  208  202 #>  [9580,]  197  208  202 #>  [9581,]  197  208  202 #>  [9582,]  198  209  202 #>  [9583,]  197  208  202 #>  [9584,]  197  208  202 #>  [9585,]  198  209  202 #>  [9586,]  197  208  202 #>  [9587,]  197  208  202 #>  [9588,]  197  208  202 #>  [9589,]  197  208  202 #>  [9590,]  197  208  202 #>  [9591,]  197  208  202 #>  [9592,]  198  209  202 #>  [9593,]  198  209  202 #>  [9594,]  197  208  202 #>  [9595,]  197  208  202 #>  [9596,]  198  209  202 #>  [9597,]  198  209  202 #>  [9598,]  197  208  202 #>  [9599,]  198  209  202 #>  [9600,]  197  208  202 #>  [9601,]  199  210  203 #>  [9602,]  199  210  203 #>  [9603,]  199  210  203 #>  [9604,]  199  210  203 #>  [9605,]  199  210  203 #>  [9606,]  199  210  203 #>  [9607,]  199  210  203 #>  [9608,]  199  210  203 #>  [9609,]  199  210  203 #>  [9610,]  199  210  203 #>  [9611,]  199  210  203 #>  [9612,]  199  210  203 #>  [9613,]  199  210  203 #>  [9614,]  199  210  203 #>  [9615,]  199  210  203 #>  [9616,]  199  210  203 #>  [9617,]  199  210  203 #>  [9618,]  199  210  203 #>  [9619,]  199  210  203 #>  [9620,]  200  211  204 #>  [9621,]  199  210  203 #>  [9622,]  200  211  204 #>  [9623,]  199  210  203 #>  [9624,]  199  210  203 #>  [9625,]  199  210  203 #>  [9626,]  199  210  203 #>  [9627,]  200  211  204 #>  [9628,]  199  210  203 #>  [9629,]  200  211  204 #>  [9630,]  199  210  203 #>  [9631,]  199  210  203 #>  [9632,]  199  210  203 #>  [9633,]  199  210  203 #>  [9634,]  199  210  203 #>  [9635,]  199  210  203 #>  [9636,]  199  210  203 #>  [9637,]  199  210  203 #>  [9638,]  199  210  203 #>  [9639,]  199  210  203 #>  [9640,]  199  210  203 #>  [9641,]  199  210  203 #>  [9642,]  199  210  203 #>  [9643,]  199  210  203 #>  [9644,]  199  210  203 #>  [9645,]  199  210  203 #>  [9646,]  199  210  203 #>  [9647,]  199  210  203 #>  [9648,]  199  210  203 #>  [9649,]  199  210  203 #>  [9650,]  199  210  203 #>  [9651,]  199  210  203 #>  [9652,]  199  210  203 #>  [9653,]  199  210  203 #>  [9654,]  199  210  203 #>  [9655,]  199  210  203 #>  [9656,]  199  210  203 #>  [9657,]  199  210  203 #>  [9658,]  200  211  204 #>  [9659,]  199  210  203 #>  [9660,]  199  210  203 #>  [9661,]  199  210  203 #>  [9662,]  199  210  203 #>  [9663,]  199  210  203 #>  [9664,]  200  211  204 #>  [9665,]  199  210  203 #>  [9666,]  199  210  203 #>  [9667,]  199  210  203 #>  [9668,]  199  210  203 #>  [9669,]  199  210  203 #>  [9670,]  199  210  203 #>  [9671,]  199  210  203 #>  [9672,]  199  210  203 #>  [9673,]  199  210  203 #>  [9674,]  199  210  203 #>  [9675,]  199  210  203 #>  [9676,]  199  210  203 #>  [9677,]  200  211  204 #>  [9678,]  199  210  203 #>  [9679,]  199  210  203 #>  [9680,]  199  210  203 #>  [9681,]  200  211  204 #>  [9682,]  199  210  203 #>  [9683,]  199  210  203 #>  [9684,]  199  210  203 #>  [9685,]  199  210  203 #>  [9686,]  199  210  203 #>  [9687,]  200  211  204 #>  [9688,]  199  210  203 #>  [9689,]  199  210  203 #>  [9690,]  199  210  203 #>  [9691,]  199  210  203 #>  [9692,]  199  210  203 #>  [9693,]  199  210  203 #>  [9694,]  199  210  203 #>  [9695,]  199  210  203 #>  [9696,]  199  210  203 #>  [9697,]  199  210  203 #>  [9698,]  199  210  203 #>  [9699,]  199  210  203 #>  [9700,]  200  211  204 #>  [9701,]  201  213  205 #>  [9702,]  201  213  206 #>  [9703,]  201  213  206 #>  [9704,]  201  212  205 #>  [9705,]  201  213  205 #>  [9706,]  201  213  206 #>  [9707,]  201  213  206 #>  [9708,]  201  212  205 #>  [9709,]  201  212  205 #>  [9710,]  201  213  205 #>  [9711,]  201  212  205 #>  [9712,]  201  213  206 #>  [9713,]  201  212  205 #>  [9714,]  201  213  205 #>  [9715,]  201  213  205 #>  [9716,]  201  213  205 #>  [9717,]  201  212  205 #>  [9718,]  201  213  206 #>  [9719,]  201  213  206 #>  [9720,]  201  213  206 #>  [9721,]  201  213  205 #>  [9722,]  201  212  205 #>  [9723,]  201  213  206 #>  [9724,]  201  213  205 #>  [9725,]  201  213  206 #>  [9726,]  201  213  205 #>  [9727,]  201  212  205 #>  [9728,]  201  213  206 #>  [9729,]  201  213  205 #>  [9730,]  201  213  205 #>  [9731,]  201  213  206 #>  [9732,]  201  213  206 #>  [9733,]  201  213  206 #>  [9734,]  201  213  206 #>  [9735,]  201  212  205 #>  [9736,]  201  213  205 #>  [9737,]  201  213  205 #>  [9738,]  201  213  205 #>  [9739,]  201  213  205 #>  [9740,]  201  213  206 #>  [9741,]  201  213  205 #>  [9742,]  201  213  206 #>  [9743,]  201  212  205 #>  [9744,]  201  212  205 #>  [9745,]  201  213  205 #>  [9746,]  201  213  205 #>  [9747,]  201  213  205 #>  [9748,]  201  213  206 #>  [9749,]  201  212  205 #>  [9750,]  201  213  205 #>  [9751,]  201  213  205 #>  [9752,]  201  212  205 #>  [9753,]  201  213  205 #>  [9754,]  201  213  205 #>  [9755,]  201  212  205 #>  [9756,]  201  213  206 #>  [9757,]  201  213  205 #>  [9758,]  201  212  205 #>  [9759,]  201  213  205 #>  [9760,]  201  213  206 #>  [9761,]  201  213  205 #>  [9762,]  201  213  205 #>  [9763,]  201  213  205 #>  [9764,]  201  213  206 #>  [9765,]  201  213  206 #>  [9766,]  201  212  205 #>  [9767,]  201  213  205 #>  [9768,]  201  213  205 #>  [9769,]  201  212  205 #>  [9770,]  201  213  206 #>  [9771,]  201  213  206 #>  [9772,]  201  213  205 #>  [9773,]  201  213  206 #>  [9774,]  201  213  205 #>  [9775,]  201  213  205 #>  [9776,]  201  213  205 #>  [9777,]  201  213  205 #>  [9778,]  201  213  206 #>  [9779,]  201  212  205 #>  [9780,]  201  212  205 #>  [9781,]  201  212  205 #>  [9782,]  201  212  205 #>  [9783,]  201  212  205 #>  [9784,]  201  213  206 #>  [9785,]  201  213  205 #>  [9786,]  201  213  205 #>  [9787,]  201  212  205 #>  [9788,]  201  212  205 #>  [9789,]  201  212  205 #>  [9790,]  201  212  205 #>  [9791,]  201  213  205 #>  [9792,]  201  212  205 #>  [9793,]  201  213  206 #>  [9794,]  201  213  205 #>  [9795,]  201  212  205 #>  [9796,]  201  213  205 #>  [9797,]  201  213  206 #>  [9798,]  201  213  206 #>  [9799,]  201  212  205 #>  [9800,]  201  213  206 #>  [9801,]  203  215  208 #>  [9802,]  203  215  208 #>  [9803,]  202  215  208 #>  [9804,]  202  215  208 #>  [9805,]  202  215  208 #>  [9806,]  203  215  208 #>  [9807,]  202  215  208 #>  [9808,]  202  215  208 #>  [9809,]  202  215  208 #>  [9810,]  202  215  208 #>  [9811,]  202  215  208 #>  [9812,]  202  214  207 #>  [9813,]  203  215  208 #>  [9814,]  203  215  208 #>  [9815,]  203  214  207 #>  [9816,]  203  215  208 #>  [9817,]  203  214  207 #>  [9818,]  202  215  208 #>  [9819,]  202  215  208 #>  [9820,]  202  215  208 #>  [9821,]  203  215  208 #>  [9822,]  203  215  208 #>  [9823,]  202  214  207 #>  [9824,]  202  215  208 #>  [9825,]  202  215  208 #>  [9826,]  203  215  208 #>  [9827,]  203  215  208 #>  [9828,]  202  215  208 #>  [9829,]  203  214  207 #>  [9830,]  202  215  208 #>  [9831,]  202  214  207 #>  [9832,]  202  215  208 #>  [9833,]  203  215  208 #>  [9834,]  202  214  207 #>  [9835,]  203  215  208 #>  [9836,]  202  215  208 #>  [9837,]  203  214  207 #>  [9838,]  202  215  208 #>  [9839,]  202  215  208 #>  [9840,]  202  215  208 #>  [9841,]  203  215  208 #>  [9842,]  202  214  207 #>  [9843,]  202  214  207 #>  [9844,]  203  214  207 #>  [9845,]  202  215  208 #>  [9846,]  202  215  208 #>  [9847,]  202  215  208 #>  [9848,]  202  214  207 #>  [9849,]  202  215  208 #>  [9850,]  203  215  208 #>  [9851,]  202  215  208 #>  [9852,]  203  215  208 #>  [9853,]  202  215  208 #>  [9854,]  202  215  208 #>  [9855,]  202  215  208 #>  [9856,]  202  215  208 #>  [9857,]  202  215  208 #>  [9858,]  203  215  208 #>  [9859,]  203  215  208 #>  [9860,]  202  215  208 #>  [9861,]  203  215  208 #>  [9862,]  202  215  208 #>  [9863,]  202  214  207 #>  [9864,]  202  214  207 #>  [9865,]  202  215  208 #>  [9866,]  202  215  208 #>  [9867,]  202  215  208 #>  [9868,]  203  215  208 #>  [9869,]  202  215  208 #>  [9870,]  203  214  207 #>  [9871,]  203  215  208 #>  [9872,]  202  215  208 #>  [9873,]  203  215  208 #>  [9874,]  202  215  208 #>  [9875,]  202  214  207 #>  [9876,]  203  215  208 #>  [9877,]  203  215  208 #>  [9878,]  202  214  207 #>  [9879,]  203  214  207 #>  [9880,]  202  215  208 #>  [9881,]  203  214  207 #>  [9882,]  202  215  208 #>  [9883,]  203  215  208 #>  [9884,]  202  215  208 #>  [9885,]  202  215  208 #>  [9886,]  203  215  208 #>  [9887,]  202  215  208 #>  [9888,]  202  215  208 #>  [9889,]  202  215  208 #>  [9890,]  203  215  208 #>  [9891,]  202  215  208 #>  [9892,]  202  214  207 #>  [9893,]  203  215  208 #>  [9894,]  203  214  207 #>  [9895,]  202  214  207 #>  [9896,]  203  215  208 #>  [9897,]  202  215  208 #>  [9898,]  202  215  208 #>  [9899,]  203  215  208 #>  [9900,]  203  214  207 #>  [9901,]  204  216  209 #>  [9902,]  204  216  209 #>  [9903,]  206  218  210 #>  [9904,]  205  217  210 #>  [9905,]  206  218  210 #>  [9906,]  204  216  209 #>  [9907,]  206  218  210 #>  [9908,]  205  217  210 #>  [9909,]  205  217  210 #>  [9910,]  206  218  210 #>  [9911,]  205  217  210 #>  [9912,]  206  218  210 #>  [9913,]  204  216  209 #>  [9914,]  204  216  209 #>  [9915,]  204  216  209 #>  [9916,]  204  216  209 #>  [9917,]  204  216  209 #>  [9918,]  206  218  210 #>  [9919,]  206  218  210 #>  [9920,]  206  218  210 #>  [9921,]  204  216  209 #>  [9922,]  205  217  210 #>  [9923,]  206  218  210 #>  [9924,]  206  218  210 #>  [9925,]  206  218  210 #>  [9926,]  206  218  210 #>  [9927,]  205  217  210 #>  [9928,]  206  218  210 #>  [9929,]  204  216  209 #>  [9930,]  205  217  210 #>  [9931,]  206  218  210 #>  [9932,]  206  218  210 #>  [9933,]  204  216  209 #>  [9934,]  206  218  210 #>  [9935,]  204  216  209 #>  [9936,]  206  218  210 #>  [9937,]  206  218  210 #>  [9938,]  206  218  210 #>  [9939,]  206  218  210 #>  [9940,]  206  218  210 #>  [9941,]  204  216  209 #>  [9942,]  206  218  210 #>  [9943,]  205  217  210 #>  [9944,]  204  216  209 #>  [9945,]  205  217  210 #>  [9946,]  205  217  210 #>  [9947,]  206  218  210 #>  [9948,]  206  218  210 #>  [9949,]  205  217  210 #>  [9950,]  204  216  209 #>  [9951,]  206  218  210 #>  [9952,]  205  217  210 #>  [9953,]  206  218  210 #>  [9954,]  205  217  210 #>  [9955,]  205  217  210 #>  [9956,]  206  218  210 #>  [9957,]  206  218  210 #>  [9958,]  205  217  210 #>  [9959,]  204  216  209 #>  [9960,]  206  218  210 #>  [9961,]  204  216  209 #>  [9962,]  206  218  210 #>  [9963,]  206  218  210 #>  [9964,]  206  218  210 #>  [9965,]  206  218  210 #>  [9966,]  205  217  210 #>  [9967,]  206  218  210 #>  [9968,]  204  216  209 #>  [9969,]  205  217  210 #>  [9970,]  204  216  209 #>  [9971,]  206  218  210 #>  [9972,]  206  218  210 #>  [9973,]  204  216  209 #>  [9974,]  205  217  210 #>  [9975,]  206  218  210 #>  [9976,]  204  216  209 #>  [9977,]  204  216  209 #>  [9978,]  206  218  210 #>  [9979,]  204  216  209 #>  [9980,]  205  217  210 #>  [9981,]  204  216  209 #>  [9982,]  205  217  210 #>  [9983,]  204  216  209 #>  [9984,]  206  218  210 #>  [9985,]  205  217  210 #>  [9986,]  204  216  209 #>  [9987,]  205  217  210 #>  [9988,]  205  217  210 #>  [9989,]  205  217  210 #>  [9990,]  205  217  210 #>  [9991,]  205  217  210 #>  [9992,]  205  217  210 #>  [9993,]  204  216  209 #>  [9994,]  206  218  210 #>  [9995,]  205  217  210 #>  [9996,]  204  216  209 #>  [9997,]  206  218  210 #>  [9998,]  206  218  210 #>  [9999,]  204  216  209 #> [10000,]  206  218  210 #> [10001,]  207  219  211 #> [10002,]  207  219  211 #> [10003,]  207  219  211 #> [10004,]  207  219  211 #> [10005,]  207  219  211 #> [10006,]  207  219  211 #> [10007,]  207  219  211 #> [10008,]  208  220  212 #> [10009,]  208  220  212 #> [10010,]  207  219  211 #> [10011,]  207  219  211 #> [10012,]  207  219  211 #> [10013,]  207  219  211 #> [10014,]  207  219  211 #> [10015,]  207  219  211 #> [10016,]  207  219  211 #> [10017,]  207  219  211 #> [10018,]  207  219  211 #> [10019,]  207  219  211 #> [10020,]  207  219  211 #> [10021,]  207  219  211 #> [10022,]  207  219  211 #> [10023,]  207  219  211 #> [10024,]  207  219  211 #> [10025,]  207  219  211 #> [10026,]  208  220  212 #> [10027,]  207  219  211 #> [10028,]  207  219  211 #> [10029,]  207  219  211 #> [10030,]  207  219  211 #> [10031,]  207  219  211 #> [10032,]  207  219  211 #> [10033,]  207  219  211 #> [10034,]  207  219  211 #> [10035,]  207  219  211 #> [10036,]  207  219  211 #> [10037,]  207  219  211 #> [10038,]  207  219  211 #> [10039,]  207  219  211 #> [10040,]  207  219  211 #> [10041,]  207  219  211 #> [10042,]  207  219  211 #> [10043,]  207  219  211 #> [10044,]  207  219  211 #> [10045,]  207  219  211 #> [10046,]  207  219  211 #> [10047,]  207  219  211 #> [10048,]  207  219  211 #> [10049,]  207  219  211 #> [10050,]  207  219  211 #> [10051,]  207  219  211 #> [10052,]  207  219  211 #> [10053,]  207  219  211 #> [10054,]  207  219  211 #> [10055,]  207  219  211 #> [10056,]  208  220  212 #> [10057,]  207  219  211 #> [10058,]  207  219  211 #> [10059,]  207  219  211 #> [10060,]  207  219  211 #> [10061,]  208  220  212 #> [10062,]  207  219  211 #> [10063,]  207  219  211 #> [10064,]  207  219  211 #> [10065,]  207  219  211 #> [10066,]  207  219  211 #> [10067,]  207  219  211 #> [10068,]  207  219  211 #> [10069,]  207  219  211 #> [10070,]  207  219  211 #> [10071,]  207  219  211 #> [10072,]  207  219  211 #> [10073,]  207  219  211 #> [10074,]  207  219  211 #> [10075,]  207  219  211 #> [10076,]  208  220  212 #> [10077,]  207  219  211 #> [10078,]  207  219  211 #> [10079,]  207  219  211 #> [10080,]  207  219  211 #> [10081,]  207  219  211 #> [10082,]  207  219  211 #> [10083,]  207  219  211 #> [10084,]  207  219  211 #> [10085,]  207  219  211 #> [10086,]  207  219  211 #> [10087,]  207  219  211 #> [10088,]  207  219  211 #> [10089,]  207  219  211 #> [10090,]  207  219  211 #> [10091,]  207  219  211 #> [10092,]  207  219  211 #> [10093,]  207  219  211 #> [10094,]  207  219  211 #> [10095,]  207  219  211 #> [10096,]  207  219  211 #> [10097,]  207  219  211 #> [10098,]  207  219  211 #> [10099,]  207  219  211 #> [10100,]  207  219  211 #> [10101,]  210  221  214 #> [10102,]  210  221  214 #> [10103,]  209  221  213 #> [10104,]  209  221  214 #> [10105,]  209  221  214 #> [10106,]  210  221  214 #> [10107,]  209  221  213 #> [10108,]  209  221  213 #> [10109,]  209  221  214 #> [10110,]  209  221  214 #> [10111,]  209  221  214 #> [10112,]  209  221  214 #> [10113,]  210  221  214 #> [10114,]  210  221  214 #> [10115,]  210  221  214 #> [10116,]  210  221  214 #> [10117,]  210  221  214 #> [10118,]  209  221  214 #> [10119,]  209  221  214 #> [10120,]  209  221  213 #> [10121,]  210  221  214 #> [10122,]  209  221  214 #> [10123,]  209  221  214 #> [10124,]  209  221  214 #> [10125,]  209  221  213 #> [10126,]  210  221  214 #> [10127,]  209  221  214 #> [10128,]  209  221  214 #> [10129,]  210  221  214 #> [10130,]  209  221  214 #> [10131,]  209  221  214 #> [10132,]  209  221  214 #> [10133,]  210  221  214 #> [10134,]  209  221  214 #> [10135,]  210  221  214 #> [10136,]  209  221  214 #> [10137,]  209  221  214 #> [10138,]  209  221  214 #> [10139,]  209  221  213 #> [10140,]  209  221  214 #> [10141,]  210  221  214 #> [10142,]  209  221  214 #> [10143,]  209  221  214 #> [10144,]  210  221  213 #> [10145,]  209  221  214 #> [10146,]  209  221  213 #> [10147,]  209  221  214 #> [10148,]  209  221  214 #> [10149,]  209  221  213 #> [10150,]  210  221  213 #> [10151,]  209  221  214 #> [10152,]  209  221  214 #> [10153,]  209  221  213 #> [10154,]  209  221  214 #> [10155,]  209  221  213 #> [10156,]  209  221  213 #> [10157,]  209  221  214 #> [10158,]  209  221  214 #> [10159,]  210  221  213 #> [10160,]  209  221  214 #> [10161,]  210  221  214 #> [10162,]  209  221  214 #> [10163,]  209  221  214 #> [10164,]  209  221  214 #> [10165,]  209  221  213 #> [10166,]  209  221  213 #> [10167,]  209  221  214 #> [10168,]  210  221  214 #> [10169,]  209  221  214 #> [10170,]  210  221  213 #> [10171,]  210  221  214 #> [10172,]  209  221  214 #> [10173,]  210  221  214 #> [10174,]  209  221  214 #> [10175,]  209  221  214 #> [10176,]  210  221  214 #> [10177,]  210  221  214 #> [10178,]  209  221  214 #> [10179,]  210  221  214 #> [10180,]  209  221  214 #> [10181,]  210  221  214 #> [10182,]  209  221  214 #> [10183,]  210  221  214 #> [10184,]  209  221  213 #> [10185,]  209  221  214 #> [10186,]  210  221  213 #> [10187,]  209  221  214 #> [10188,]  209  221  214 #> [10189,]  209  221  214 #> [10190,]  209  221  213 #> [10191,]  209  221  214 #> [10192,]  209  221  214 #> [10193,]  210  221  214 #> [10194,]  210  221  214 #> [10195,]  209  221  214 #> [10196,]  210  221  214 #> [10197,]  209  221  214 #> [10198,]  209  221  213 #> [10199,]  210  221  214 #> [10200,]  209  221  213 #> [10201,]  212  223  216 #> [10202,]  212  223  216 #> [10203,]  212  223  216 #> [10204,]  212  223  216 #> [10205,]  212  223  216 #> [10206,]  212  223  216 #> [10207,]  212  223  216 #> [10208,]  212  223  216 #> [10209,]  212  223  216 #> [10210,]  212  223  216 #> [10211,]  212  223  216 #> [10212,]  212  223  216 #> [10213,]  212  223  216 #> [10214,]  212  223  216 #> [10215,]  212  223  216 #> [10216,]  212  223  216 #> [10217,]  212  223  216 #> [10218,]  212  223  216 #> [10219,]  212  223  216 #> [10220,]  211  222  215 #> [10221,]  211  222  215 #> [10222,]  212  223  216 #> [10223,]  212  223  216 #> [10224,]  212  223  216 #> [10225,]  211  222  215 #> [10226,]  212  223  216 #> [10227,]  212  223  216 #> [10228,]  212  223  216 #> [10229,]  212  223  216 #> [10230,]  212  223  216 #> [10231,]  212  223  216 #> [10232,]  212  223  216 #> [10233,]  212  223  216 #> [10234,]  212  223  216 #> [10235,]  212  223  216 #> [10236,]  212  223  216 #> [10237,]  212  223  216 #> [10238,]  212  223  216 #> [10239,]  212  223  216 #> [10240,]  212  223  216 #> [10241,]  212  223  216 #> [10242,]  212  223  216 #> [10243,]  212  223  216 #> [10244,]  212  223  216 #> [10245,]  212  223  216 #> [10246,]  212  223  216 #> [10247,]  212  223  216 #> [10248,]  212  223  216 #> [10249,]  212  223  216 #> [10250,]  212  223  216 #> [10251,]  212  223  216 #> [10252,]  212  223  216 #> [10253,]  212  223  216 #> [10254,]  212  223  216 #> [10255,]  212  223  216 #> [10256,]  211  222  215 #> [10257,]  212  223  216 #> [10258,]  212  223  216 #> [10259,]  212  223  216 #> [10260,]  212  223  216 #> [10261,]  212  223  216 #> [10262,]  212  223  216 #> [10263,]  212  223  216 #> [10264,]  212  223  216 #> [10265,]  211  222  215 #> [10266,]  212  223  216 #> [10267,]  212  223  216 #> [10268,]  212  223  216 #> [10269,]  212  223  216 #> [10270,]  212  223  216 #> [10271,]  212  223  216 #> [10272,]  212  223  216 #> [10273,]  212  223  216 #> [10274,]  211  222  215 #> [10275,]  212  223  216 #> [10276,]  212  223  216 #> [10277,]  212  223  216 #> [10278,]  212  223  216 #> [10279,]  212  223  216 #> [10280,]  211  222  215 #> [10281,]  212  223  216 #> [10282,]  212  223  216 #> [10283,]  212  223  216 #> [10284,]  212  223  216 #> [10285,]  211  222  215 #> [10286,]  211  222  215 #> [10287,]  212  223  216 #> [10288,]  212  223  216 #> [10289,]  211  222  215 #> [10290,]  212  223  216 #> [10291,]  212  223  216 #> [10292,]  212  223  216 #> [10293,]  212  223  216 #> [10294,]  212  223  216 #> [10295,]  212  223  216 #> [10296,]  212  223  216 #> [10297,]  212  223  216 #> [10298,]  212  223  216 #> [10299,]  212  223  216 #> [10300,]  212  223  216 #> [10301,]  214  224  218 #> [10302,]  214  224  217 #> [10303,]  213  224  217 #> [10304,]  213  224  218 #> [10305,]  213  224  218 #> [10306,]  213  224  218 #> [10307,]  214  224  217 #> [10308,]  214  224  218 #> [10309,]  213  224  218 #> [10310,]  213  224  217 #> [10311,]  213  224  218 #> [10312,]  214  224  218 #> [10313,]  214  224  217 #> [10314,]  213  224  218 #> [10315,]  214  224  218 #> [10316,]  214  224  217 #> [10317,]  214  224  218 #> [10318,]  214  224  217 #> [10319,]  214  224  217 #> [10320,]  214  224  218 #> [10321,]  213  224  217 #> [10322,]  214  224  217 #> [10323,]  214  224  217 #> [10324,]  213  224  217 #> [10325,]  213  224  218 #> [10326,]  214  224  218 #> [10327,]  214  224  218 #> [10328,]  213  224  218 #> [10329,]  214  224  217 #> [10330,]  214  224  217 #> [10331,]  213  224  217 #> [10332,]  213  224  217 #> [10333,]  214  224  218 #> [10334,]  213  224  217 #> [10335,]  213  224  217 #> [10336,]  214  224  217 #> [10337,]  214  224  217 #> [10338,]  214  224  218 #> [10339,]  213  224  217 #> [10340,]  213  224  217 #> [10341,]  214  224  218 #> [10342,]  213  224  218 #> [10343,]  214  224  218 #> [10344,]  214  224  217 #> [10345,]  214  224  218 #> [10346,]  214  224  218 #> [10347,]  213  224  217 #> [10348,]  213  224  217 #> [10349,]  214  224  217 #> [10350,]  214  224  218 #> [10351,]  214  224  218 #> [10352,]  213  224  218 #> [10353,]  214  224  218 #> [10354,]  213  224  217 #> [10355,]  214  224  218 #> [10356,]  214  224  218 #> [10357,]  213  224  218 #> [10358,]  214  224  218 #> [10359,]  214  224  217 #> [10360,]  214  224  218 #> [10361,]  214  224  218 #> [10362,]  213  224  217 #> [10363,]  214  224  218 #> [10364,]  214  224  218 #> [10365,]  213  224  218 #> [10366,]  214  224  218 #> [10367,]  214  224  218 #> [10368,]  214  224  218 #> [10369,]  214  224  218 #> [10370,]  213  224  217 #> [10371,]  214  224  218 #> [10372,]  213  224  218 #> [10373,]  213  224  218 #> [10374,]  213  224  218 #> [10375,]  214  224  218 #> [10376,]  213  224  218 #> [10377,]  214  224  217 #> [10378,]  214  224  218 #> [10379,]  213  224  217 #> [10380,]  214  224  217 #> [10381,]  214  224  218 #> [10382,]  213  224  218 #> [10383,]  214  224  217 #> [10384,]  214  224  218 #> [10385,]  214  224  217 #> [10386,]  214  224  217 #> [10387,]  214  224  218 #> [10388,]  214  224  218 #> [10389,]  213  224  218 #> [10390,]  214  224  218 #> [10391,]  213  224  218 #> [10392,]  214  224  218 #> [10393,]  214  224  217 #> [10394,]  214  224  218 #> [10395,]  214  224  217 #> [10396,]  214  224  218 #> [10397,]  214  224  218 #> [10398,]  213  224  217 #> [10399,]  214  224  218 #> [10400,]  214  224  217 #> [10401,]  216  226  220 #> [10402,]  215  225  219 #> [10403,]  215  225  219 #> [10404,]  216  226  220 #> [10405,]  216  226  220 #> [10406,]  216  226  220 #> [10407,]  215  225  219 #> [10408,]  216  226  220 #> [10409,]  216  226  220 #> [10410,]  216  226  220 #> [10411,]  216  226  220 #> [10412,]  216  226  220 #> [10413,]  215  225  219 #> [10414,]  216  226  220 #> [10415,]  216  226  220 #> [10416,]  215  225  219 #> [10417,]  216  226  220 #> [10418,]  215  225  219 #> [10419,]  215  225  219 #> [10420,]  216  226  220 #> [10421,]  215  225  219 #> [10422,]  215  225  219 #> [10423,]  215  225  219 #> [10424,]  215  225  219 #> [10425,]  216  226  220 #> [10426,]  216  226  220 #> [10427,]  216  226  220 #> [10428,]  216  226  220 #> [10429,]  216  226  220 #> [10430,]  215  225  219 #> [10431,]  215  225  219 #> [10432,]  215  225  219 #> [10433,]  216  226  220 #> [10434,]  215  225  219 #> [10435,]  215  225  219 #> [10436,]  215  225  219 #> [10437,]  215  225  219 #> [10438,]  216  226  220 #> [10439,]  215  225  219 #> [10440,]  215  225  219 #> [10441,]  216  226  220 #> [10442,]  216  226  220 #> [10443,]  216  226  220 #> [10444,]  215  225  219 #> [10445,]  216  226  220 #> [10446,]  216  226  220 #> [10447,]  215  225  219 #> [10448,]  216  226  220 #> [10449,]  215  225  219 #> [10450,]  216  226  220 #> [10451,]  216  226  220 #> [10452,]  216  226  220 #> [10453,]  216  226  220 #> [10454,]  215  225  219 #> [10455,]  216  226  220 #> [10456,]  216  226  220 #> [10457,]  216  226  220 #> [10458,]  216  226  220 #> [10459,]  215  225  219 #> [10460,]  216  226  220 #> [10461,]  216  226  220 #> [10462,]  215  225  219 #> [10463,]  216  226  220 #> [10464,]  216  226  220 #> [10465,]  216  226  220 #> [10466,]  216  226  220 #> [10467,]  216  226  220 #> [10468,]  216  226  220 #> [10469,]  216  226  220 #> [10470,]  215  225  219 #> [10471,]  216  226  220 #> [10472,]  216  226  220 #> [10473,]  216  226  220 #> [10474,]  216  226  220 #> [10475,]  216  226  220 #> [10476,]  216  226  220 #> [10477,]  215  225  219 #> [10478,]  216  226  220 #> [10479,]  215  225  219 #> [10480,]  215  225  219 #> [10481,]  216  226  220 #> [10482,]  216  226  220 #> [10483,]  215  225  219 #> [10484,]  216  226  220 #> [10485,]  216  226  220 #> [10486,]  215  225  219 #> [10487,]  216  226  220 #> [10488,]  216  226  220 #> [10489,]  216  226  220 #> [10490,]  216  226  220 #> [10491,]  216  226  220 #> [10492,]  216  226  220 #> [10493,]  215  225  219 #> [10494,]  216  226  220 #> [10495,]  215  225  219 #> [10496,]  216  226  220 #> [10497,]  216  226  220 #> [10498,]  215  225  219 #> [10499,]  216  226  220 #> [10500,]  215  225  219 #> [10501,]  219  228  222 #> [10502,]  217  229  221 #> [10503,]  218  227  222 #> [10504,]  218  227  222 #> [10505,]  218  227  222 #> [10506,]  218  227  222 #> [10507,]  218  227  222 #> [10508,]  219  228  222 #> [10509,]  217  230  221 #> [10510,]  217  230  221 #> [10511,]  218  227  222 #> [10512,]  217  229  221 #> [10513,]  219  228  222 #> [10514,]  218  227  222 #> [10515,]  219  228  222 #> [10516,]  219  228  222 #> [10517,]  217  229  221 #> [10518,]  218  227  222 #> [10519,]  219  228  222 #> [10520,]  219  228  222 #> [10521,]  217  230  221 #> [10522,]  219  228  222 #> [10523,]  218  227  222 #> [10524,]  218  227  222 #> [10525,]  218  227  222 #> [10526,]  219  228  222 #> [10527,]  219  228  222 #> [10528,]  218  227  222 #> [10529,]  217  229  221 #> [10530,]  219  228  222 #> [10531,]  218  227  222 #> [10532,]  218  227  222 #> [10533,]  217  230  221 #> [10534,]  218  227  222 #> [10535,]  218  227  222 #> [10536,]  219  228  222 #> [10537,]  219  228  222 #> [10538,]  219  228  222 #> [10539,]  218  227  222 #> [10540,]  218  227  222 #> [10541,]  219  228  222 #> [10542,]  218  227  222 #> [10543,]  219  228  222 #> [10544,]  219  228  222 #> [10545,]  218  227  222 #> [10546,]  219  228  222 #> [10547,]  218  227  222 #> [10548,]  218  227  222 #> [10549,]  218  227  222 #> [10550,]  219  228  222 #> [10551,]  219  228  222 #> [10552,]  218  227  222 #> [10553,]  217  230  221 #> [10554,]  218  227  222 #> [10555,]  219  228  222 #> [10556,]  219  228  222 #> [10557,]  218  227  222 #> [10558,]  219  228  222 #> [10559,]  219  228  222 #> [10560,]  217  230  221 #> [10561,]  219  228  222 #> [10562,]  218  227  222 #> [10563,]  217  229  221 #> [10564,]  219  228  222 #> [10565,]  218  227  222 #> [10566,]  219  228  222 #> [10567,]  218  227  222 #> [10568,]  219  228  222 #> [10569,]  219  228  222 #> [10570,]  217  229  221 #> [10571,]  219  228  222 #> [10572,]  218  227  222 #> [10573,]  218  227  222 #> [10574,]  218  227  222 #> [10575,]  219  228  222 #> [10576,]  218  227  222 #> [10577,]  219  228  222 #> [10578,]  219  228  222 #> [10579,]  218  227  222 #> [10580,]  217  230  221 #> [10581,]  217  229  221 #> [10582,]  218  227  222 #> [10583,]  219  228  222 #> [10584,]  219  228  222 #> [10585,]  219  228  222 #> [10586,]  217  230  221 #> [10587,]  219  228  222 #> [10588,]  218  227  222 #> [10589,]  218  227  222 #> [10590,]  219  228  222 #> [10591,]  218  227  222 #> [10592,]  218  227  222 #> [10593,]  219  228  222 #> [10594,]  218  227  222 #> [10595,]  219  228  222 #> [10596,]  219  228  222 #> [10597,]  219  228  222 #> [10598,]  218  227  222 #> [10599,]  218  227  222 #> [10600,]  219  228  222 #> [10601,]  221  232  224 #> [10602,]  221  232  224 #> [10603,]  220  231  224 #> [10604,]  220  231  224 #> [10605,]  221  232  224 #> [10606,]  221  232  224 #> [10607,]  220  231  224 #> [10608,]  220  231  224 #> [10609,]  221  232  224 #> [10610,]  221  232  224 #> [10611,]  221  232  224 #> [10612,]  220  231  224 #> [10613,]  221  232  224 #> [10614,]  221  232  224 #> [10615,]  221  232  224 #> [10616,]  221  232  224 #> [10617,]  221  232  224 #> [10618,]  221  232  224 #> [10619,]  221  232  224 #> [10620,]  221  232  223 #> [10621,]  221  232  223 #> [10622,]  221  232  224 #> [10623,]  220  231  224 #> [10624,]  221  232  224 #> [10625,]  220  231  223 #> [10626,]  221  232  224 #> [10627,]  221  232  224 #> [10628,]  221  232  224 #> [10629,]  221  232  224 #> [10630,]  221  232  224 #> [10631,]  220  231  224 #> [10632,]  221  232  224 #> [10633,]  221  232  224 #> [10634,]  221  232  224 #> [10635,]  221  232  224 #> [10636,]  221  232  224 #> [10637,]  220  231  224 #> [10638,]  221  232  224 #> [10639,]  221  232  224 #> [10640,]  220  231  224 #> [10641,]  221  232  224 #> [10642,]  221  232  224 #> [10643,]  221  232  224 #> [10644,]  221  232  224 #> [10645,]  221  232  224 #> [10646,]  220  231  224 #> [10647,]  220  231  224 #> [10648,]  221  232  224 #> [10649,]  221  232  224 #> [10650,]  221  232  224 #> [10651,]  221  232  224 #> [10652,]  220  231  224 #> [10653,]  221  232  224 #> [10654,]  221  232  224 #> [10655,]  220  231  224 #> [10656,]  221  232  223 #> [10657,]  220  231  224 #> [10658,]  221  232  224 #> [10659,]  220  231  224 #> [10660,]  220  231  224 #> [10661,]  221  232  224 #> [10662,]  221  232  224 #> [10663,]  221  232  224 #> [10664,]  221  232  224 #> [10665,]  221  232  223 #> [10666,]  221  232  224 #> [10667,]  221  232  224 #> [10668,]  220  231  224 #> [10669,]  221  232  224 #> [10670,]  221  232  224 #> [10671,]  221  232  224 #> [10672,]  221  232  224 #> [10673,]  221  232  224 #> [10674,]  220  231  223 #> [10675,]  221  232  224 #> [10676,]  221  232  224 #> [10677,]  221  232  224 #> [10678,]  221  232  224 #> [10679,]  221  232  224 #> [10680,]  220  231  223 #> [10681,]  221  232  224 #> [10682,]  221  232  224 #> [10683,]  221  232  224 #> [10684,]  221  232  224 #> [10685,]  221  232  223 #> [10686,]  220  231  223 #> [10687,]  221  232  224 #> [10688,]  221  232  224 #> [10689,]  221  232  223 #> [10690,]  221  232  224 #> [10691,]  221  232  224 #> [10692,]  221  232  224 #> [10693,]  221  232  224 #> [10694,]  221  232  224 #> [10695,]  221  232  224 #> [10696,]  220  231  224 #> [10697,]  220  231  224 #> [10698,]  220  231  224 #> [10699,]  221  232  224 #> [10700,]  221  232  224 #> [10701,]  222  234  226 #> [10702,]  222  234  226 #> [10703,]  222  233  225 #> [10704,]  222  234  226 #> [10705,]  222  233  225 #> [10706,]  222  233  225 #> [10707,]  222  234  226 #> [10708,]  222  234  226 #> [10709,]  222  234  226 #> [10710,]  222  234  226 #> [10711,]  222  233  225 #> [10712,]  222  233  225 #> [10713,]  222  234  226 #> [10714,]  222  233  225 #> [10715,]  222  234  226 #> [10716,]  222  234  226 #> [10717,]  222  234  226 #> [10718,]  222  234  226 #> [10719,]  222  233  225 #> [10720,]  222  233  225 #> [10721,]  222  234  226 #> [10722,]  222  233  225 #> [10723,]  222  234  226 #> [10724,]  222  233  225 #> [10725,]  222  234  226 #> [10726,]  222  233  225 #> [10727,]  222  234  226 #> [10728,]  222  234  226 #> [10729,]  222  233  225 #> [10730,]  222  233  225 #> [10731,]  222  234  226 #> [10732,]  222  233  225 #> [10733,]  222  234  226 #> [10734,]  222  233  225 #> [10735,]  222  233  225 #> [10736,]  222  233  225 #> [10737,]  222  234  226 #> [10738,]  222  234  226 #> [10739,]  222  234  226 #> [10740,]  222  233  225 #> [10741,]  222  233  225 #> [10742,]  222  233  225 #> [10743,]  222  234  226 #> [10744,]  222  234  226 #> [10745,]  222  234  226 #> [10746,]  222  234  226 #> [10747,]  222  234  226 #> [10748,]  222  233  225 #> [10749,]  222  234  226 #> [10750,]  222  234  226 #> [10751,]  222  233  225 #> [10752,]  222  234  226 #> [10753,]  222  234  226 #> [10754,]  222  233  225 #> [10755,]  222  233  225 #> [10756,]  222  234  226 #> [10757,]  222  233  225 #> [10758,]  222  234  226 #> [10759,]  222  234  226 #> [10760,]  222  233  225 #> [10761,]  222  234  226 #> [10762,]  222  233  225 #> [10763,]  222  233  225 #> [10764,]  222  234  226 #> [10765,]  222  234  226 #> [10766,]  222  233  225 #> [10767,]  222  233  225 #> [10768,]  222  233  225 #> [10769,]  222  233  225 #> [10770,]  222  234  226 #> [10771,]  222  234  226 #> [10772,]  222  234  226 #> [10773,]  222  234  226 #> [10774,]  222  234  226 #> [10775,]  222  234  226 #> [10776,]  222  234  226 #> [10777,]  222  234  226 #> [10778,]  222  233  225 #> [10779,]  222  234  226 #> [10780,]  222  233  225 #> [10781,]  222  233  225 #> [10782,]  222  234  226 #> [10783,]  222  233  225 #> [10784,]  222  234  226 #> [10785,]  222  234  226 #> [10786,]  222  234  226 #> [10787,]  222  234  226 #> [10788,]  222  234  226 #> [10789,]  222  233  225 #> [10790,]  222  234  226 #> [10791,]  222  233  225 #> [10792,]  222  234  226 #> [10793,]  222  233  225 #> [10794,]  222  234  226 #> [10795,]  222  234  226 #> [10796,]  222  234  226 #> [10797,]  222  234  226 #> [10798,]  222  233  225 #> [10799,]  222  233  225 #> [10800,]  222  234  226 #> [10801,]  224  236  228 #> [10802,]  224  236  227 #> [10803,]  223  235  228 #> [10804,]  224  236  228 #> [10805,]  224  236  228 #> [10806,]  224  236  227 #> [10807,]  223  235  228 #> [10808,]  223  235  228 #> [10809,]  224  236  228 #> [10810,]  224  236  228 #> [10811,]  224  236  227 #> [10812,]  224  236  227 #> [10813,]  223  235  228 #> [10814,]  224  236  228 #> [10815,]  224  236  227 #> [10816,]  223  235  228 #> [10817,]  224  236  227 #> [10818,]  224  236  227 #> [10819,]  224  236  227 #> [10820,]  223  235  228 #> [10821,]  224  236  227 #> [10822,]  223  235  228 #> [10823,]  224  236  227 #> [10824,]  223  235  228 #> [10825,]  223  235  228 #> [10826,]  224  236  227 #> [10827,]  224  236  228 #> [10828,]  224  236  228 #> [10829,]  224  236  227 #> [10830,]  224  236  227 #> [10831,]  224  236  227 #> [10832,]  224  236  227 #> [10833,]  224  236  228 #> [10834,]  224  236  227 #> [10835,]  224  236  227 #> [10836,]  224  236  228 #> [10837,]  224  236  227 #> [10838,]  224  236  228 #> [10839,]  223  235  228 #> [10840,]  223  235  228 #> [10841,]  224  236  228 #> [10842,]  224  236  227 #> [10843,]  224  236  227 #> [10844,]  223  235  227 #> [10845,]  223  235  228 #> [10846,]  223  235  227 #> [10847,]  224  236  227 #> [10848,]  224  236  227 #> [10849,]  223  235  228 #> [10850,]  223  235  228 #> [10851,]  224  236  227 #> [10852,]  224  236  228 #> [10853,]  223  235  228 #> [10854,]  223  235  228 #> [10855,]  223  235  228 #> [10856,]  223  235  227 #> [10857,]  224  236  228 #> [10858,]  224  236  228 #> [10859,]  223  235  228 #> [10860,]  224  236  227 #> [10861,]  224  236  227 #> [10862,]  224  236  227 #> [10863,]  223  235  227 #> [10864,]  224  236  227 #> [10865,]  223  235  227 #> [10866,]  223  235  227 #> [10867,]  224  236  228 #> [10868,]  224  236  227 #> [10869,]  224  236  227 #> [10870,]  223  235  227 #> [10871,]  224  236  228 #> [10872,]  223  235  228 #> [10873,]  224  236  228 #> [10874,]  224  236  228 #> [10875,]  224  236  227 #> [10876,]  224  236  228 #> [10877,]  224  236  228 #> [10878,]  223  235  227 #> [10879,]  224  236  227 #> [10880,]  224  236  228 #> [10881,]  224  236  227 #> [10882,]  224  236  227 #> [10883,]  224  236  228 #> [10884,]  223  235  228 #> [10885,]  224  236  228 #> [10886,]  223  235  228 #> [10887,]  224  236  228 #> [10888,]  224  236  228 #> [10889,]  223  235  227 #> [10890,]  223  235  228 #> [10891,]  224  236  228 #> [10892,]  224  236  227 #> [10893,]  224  236  227 #> [10894,]  223  235  227 #> [10895,]  224  236  227 #> [10896,]  224  236  227 #> [10897,]  224  236  227 #> [10898,]  223  235  228 #> [10899,]  224  236  228 #> [10900,]  223  235  227 #> [10901,]  226  237  229 #> [10902,]  226  237  229 #> [10903,]  225  238  230 #> [10904,]  226  237  229 #> [10905,]  225  238  230 #> [10906,]  225  238  230 #> [10907,]  226  237  229 #> [10908,]  226  237  229 #> [10909,]  226  237  229 #> [10910,]  226  237  229 #> [10911,]  225  238  230 #> [10912,]  225  238  230 #> [10913,]  226  237  229 #> [10914,]  225  239  230 #> [10915,]  226  237  229 #> [10916,]  226  237  229 #> [10917,]  226  237  229 #> [10918,]  226  237  229 #> [10919,]  225  238  230 #> [10920,]  225  239  230 #> [10921,]  226  237  229 #> [10922,]  225  239  230 #> [10923,]  226  237  229 #> [10924,]  225  239  230 #> [10925,]  226  237  229 #> [10926,]  225  238  230 #> [10927,]  226  237  229 #> [10928,]  226  237  229 #> [10929,]  225  238  230 #> [10930,]  225  238  230 #> [10931,]  226  237  229 #> [10932,]  225  238  230 #> [10933,]  226  237  229 #> [10934,]  225  238  230 #> [10935,]  225  238  230 #> [10936,]  225  239  230 #> [10937,]  226  237  229 #> [10938,]  226  237  229 #> [10939,]  226  237  229 #> [10940,]  225  238  230 #> [10941,]  225  238  230 #> [10942,]  225  238  230 #> [10943,]  226  237  229 #> [10944,]  226  237  229 #> [10945,]  226  237  229 #> [10946,]  226  237  229 #> [10947,]  226  237  229 #> [10948,]  225  238  230 #> [10949,]  226  237  229 #> [10950,]  226  237  229 #> [10951,]  225  238  230 #> [10952,]  225  239  230 #> [10953,]  226  237  229 #> [10954,]  225  239  230 #> [10955,]  225  239  230 #> [10956,]  226  237  229 #> [10957,]  225  239  230 #> [10958,]  225  238  230 #> [10959,]  226  237  229 #> [10960,]  225  238  230 #> [10961,]  226  237  229 #> [10962,]  225  238  230 #> [10963,]  225  238  230 #> [10964,]  226  237  229 #> [10965,]  226  237  229 #> [10966,]  225  238  230 #> [10967,]  225  239  230 #> [10968,]  225  238  230 #> [10969,]  225  238  230 #> [10970,]  226  237  229 #> [10971,]  226  237  229 #> [10972,]  226  237  229 #> [10973,]  226  237  229 #> [10974,]  226  237  229 #> [10975,]  226  237  229 #> [10976,]  226  237  229 #> [10977,]  226  237  229 #> [10978,]  225  238  230 #> [10979,]  226  237  229 #> [10980,]  225  238  230 #> [10981,]  225  238  230 #> [10982,]  226  237  229 #> [10983,]  225  238  230 #> [10984,]  226  237  229 #> [10985,]  226  237  229 #> [10986,]  226  237  229 #> [10987,]  226  237  229 #> [10988,]  226  237  229 #> [10989,]  225  238  230 #> [10990,]  226  237  229 #> [10991,]  225  239  230 #> [10992,]  226  237  229 #> [10993,]  225  238  230 #> [10994,]  226  237  229 #> [10995,]  226  237  229 #> [10996,]  226  237  229 #> [10997,]  226  237  229 #> [10998,]  225  238  230 #> [10999,]  225  238  230 #> [11000,]  226  237  229 #> [11001,]  228  240  231 #> [11002,]  228  240  231 #> [11003,]  227  241  232 #> [11004,]  228  240  231 #> [11005,]  228  240  231 #> [11006,]  228  240  231 #> [11007,]  227  242  232 #> [11008,]  228  240  231 #> [11009,]  228  240  231 #> [11010,]  228  240  231 #> [11011,]  228  240  231 #> [11012,]  228  240  231 #> [11013,]  227  242  232 #> [11014,]  228  240  231 #> [11015,]  228  240  231 #> [11016,]  227  241  232 #> [11017,]  228  240  231 #> [11018,]  228  240  231 #> [11019,]  227  241  232 #> [11020,]  228  240  231 #> [11021,]  227  242  232 #> [11022,]  228  240  231 #> [11023,]  227  242  232 #> [11024,]  228  240  231 #> [11025,]  228  240  231 #> [11026,]  228  240  231 #> [11027,]  228  240  231 #> [11028,]  228  240  231 #> [11029,]  228  240  231 #> [11030,]  227  242  232 #> [11031,]  227  242  232 #> [11032,]  228  240  231 #> [11033,]  228  240  231 #> [11034,]  227  241  232 #> [11035,]  227  241  232 #> [11036,]  227  242  232 #> [11037,]  227  241  232 #> [11038,]  228  240  231 #> [11039,]  227  242  232 #> [11040,]  227  242  232 #> [11041,]  228  240  231 #> [11042,]  228  240  231 #> [11043,]  228  240  231 #> [11044,]  228  240  231 #> [11045,]  228  240  231 #> [11046,]  228  240  231 #> [11047,]  227  242  232 #> [11048,]  228  240  231 #> [11049,]  227  241  232 #> [11050,]  228  240  231 #> [11051,]  228  240  231 #> [11052,]  228  240  231 #> [11053,]  228  240  231 #> [11054,]  227  242  232 #> [11055,]  228  240  231 #> [11056,]  228  240  231 #> [11057,]  228  240  231 #> [11058,]  228  240  231 #> [11059,]  228  240  231 #> [11060,]  228  240  231 #> [11061,]  228  240  231 #> [11062,]  227  242  232 #> [11063,]  228  240  231 #> [11064,]  228  240  231 #> [11065,]  228  240  231 #> [11066,]  228  240  231 #> [11067,]  228  240  231 #> [11068,]  228  240  231 #> [11069,]  228  240  231 #> [11070,]  227  242  232 #> [11071,]  228  240  231 #> [11072,]  228  240  231 #> [11073,]  228  240  231 #> [11074,]  228  240  231 #> [11075,]  228  240  231 #> [11076,]  228  240  231 #> [11077,]  227  242  232 #> [11078,]  228  240  231 #> [11079,]  227  242  232 #> [11080,]  227  242  232 #> [11081,]  228  240  231 #> [11082,]  228  240  231 #> [11083,]  227  242  232 #> [11084,]  228  240  231 #> [11085,]  228  240  231 #> [11086,]  228  240  231 #> [11087,]  228  240  231 #> [11088,]  228  240  231 #> [11089,]  228  240  231 #> [11090,]  228  240  231 #> [11091,]  228  240  231 #> [11092,]  228  240  231 #> [11093,]  227  242  232 #> [11094,]  228  240  231 #> [11095,]  227  242  232 #> [11096,]  228  240  231 #> [11097,]  228  240  231 #> [11098,]  227  242  232 #> [11099,]  228  240  231 #> [11100,]  227  242  232 #> [11101,]  230  244  234 #> [11102,]  230  244  234 #> [11103,]  230  244  234 #> [11104,]  230  244  234 #> [11105,]  230  244  234 #> [11106,]  230  244  234 #> [11107,]  229  243  233 #> [11108,]  230  244  234 #> [11109,]  230  244  234 #> [11110,]  230  244  234 #> [11111,]  230  244  234 #> [11112,]  230  244  234 #> [11113,]  230  244  234 #> [11114,]  230  244  234 #> [11115,]  230  244  234 #> [11116,]  230  244  234 #> [11117,]  230  244  234 #> [11118,]  230  244  234 #> [11119,]  230  244  234 #> [11120,]  230  244  234 #> [11121,]  229  243  233 #> [11122,]  230  244  234 #> [11123,]  229  243  233 #> [11124,]  230  244  234 #> [11125,]  230  244  234 #> [11126,]  230  244  234 #> [11127,]  230  244  234 #> [11128,]  230  244  234 #> [11129,]  230  244  234 #> [11130,]  229  243  233 #> [11131,]  230  244  234 #> [11132,]  230  244  234 #> [11133,]  230  244  234 #> [11134,]  230  244  234 #> [11135,]  230  244  234 #> [11136,]  230  244  234 #> [11137,]  230  244  234 #> [11138,]  230  244  234 #> [11139,]  229  243  233 #> [11140,]  230  244  234 #> [11141,]  230  244  234 #> [11142,]  230  244  234 #> [11143,]  230  244  234 #> [11144,]  230  244  234 #> [11145,]  230  244  234 #> [11146,]  230  244  234 #> [11147,]  229  243  233 #> [11148,]  230  244  234 #> [11149,]  229  243  233 #> [11150,]  230  244  234 #> [11151,]  230  244  234 #> [11152,]  230  244  234 #> [11153,]  230  244  234 #> [11154,]  229  243  233 #> [11155,]  230  244  234 #> [11156,]  230  244  234 #> [11157,]  230  244  234 #> [11158,]  230  244  234 #> [11159,]  230  244  234 #> [11160,]  230  244  234 #> [11161,]  230  244  234 #> [11162,]  229  243  233 #> [11163,]  230  244  234 #> [11164,]  230  244  234 #> [11165,]  230  244  234 #> [11166,]  230  244  234 #> [11167,]  230  244  234 #> [11168,]  230  244  234 #> [11169,]  230  244  234 #> [11170,]  229  243  233 #> [11171,]  230  244  234 #> [11172,]  230  244  234 #> [11173,]  230  244  234 #> [11174,]  230  244  234 #> [11175,]  230  244  234 #> [11176,]  230  244  234 #> [11177,]  230  244  234 #> [11178,]  230  244  234 #> [11179,]  229  243  233 #> [11180,]  229  243  233 #> [11181,]  230  244  234 #> [11182,]  230  244  234 #> [11183,]  229  243  233 #> [11184,]  230  244  234 #> [11185,]  230  244  234 #> [11186,]  230  244  234 #> [11187,]  230  244  234 #> [11188,]  230  244  234 #> [11189,]  230  244  234 #> [11190,]  230  244  234 #> [11191,]  230  244  234 #> [11192,]  230  244  234 #> [11193,]  230  244  234 #> [11194,]  230  244  234 #> [11195,]  229  243  233 #> [11196,]  230  244  234 #> [11197,]  230  244  234 #> [11198,]  229  243  233 #> [11199,]  230  244  234 #> [11200,]  230  244  234 #> [11201,]  232  246  235 #> [11202,]  232  246  236 #> [11203,]  231  245  235 #> [11204,]  232  246  235 #> [11205,]  232  246  236 #> [11206,]  232  246  235 #> [11207,]  232  246  236 #> [11208,]  232  246  235 #> [11209,]  232  246  236 #> [11210,]  232  246  236 #> [11211,]  231  245  235 #> [11212,]  231  245  236 #> [11213,]  232  246  236 #> [11214,]  231  245  235 #> [11215,]  232  246  236 #> [11216,]  232  246  235 #> [11217,]  232  246  236 #> [11218,]  232  246  236 #> [11219,]  231  245  235 #> [11220,]  231  245  236 #> [11221,]  232  246  236 #> [11222,]  231  245  236 #> [11223,]  232  246  236 #> [11224,]  231  245  236 #> [11225,]  232  246  236 #> [11226,]  231  245  235 #> [11227,]  232  246  236 #> [11228,]  232  246  235 #> [11229,]  231  245  236 #> [11230,]  231  245  236 #> [11231,]  232  246  236 #> [11232,]  231  245  236 #> [11233,]  232  246  236 #> [11234,]  231  245  235 #> [11235,]  232  246  235 #> [11236,]  231  245  236 #> [11237,]  232  246  235 #> [11238,]  232  246  235 #> [11239,]  232  246  236 #> [11240,]  231  245  236 #> [11241,]  231  245  236 #> [11242,]  231  245  235 #> [11243,]  232  246  236 #> [11244,]  232  246  236 #> [11245,]  232  246  235 #> [11246,]  232  246  236 #> [11247,]  232  246  236 #> [11248,]  231  245  236 #> [11249,]  232  246  235 #> [11250,]  232  246  236 #> [11251,]  231  245  236 #> [11252,]  232  246  235 #> [11253,]  232  246  236 #> [11254,]  231  245  236 #> [11255,]  232  246  235 #> [11256,]  232  246  235 #> [11257,]  232  246  236 #> [11258,]  232  246  236 #> [11259,]  232  246  235 #> [11260,]  231  245  236 #> [11261,]  232  246  236 #> [11262,]  231  245  235 #> [11263,]  231  245  236 #> [11264,]  232  246  235 #> [11265,]  232  246  235 #> [11266,]  231  245  236 #> [11267,]  231  245  236 #> [11268,]  231  245  235 #> [11269,]  231  245  235 #> [11270,]  232  246  236 #> [11271,]  232  246  236 #> [11272,]  232  246  235 #> [11273,]  232  246  235 #> [11274,]  232  246  236 #> [11275,]  232  246  236 #> [11276,]  232  246  236 #> [11277,]  232  246  235 #> [11278,]  231  245  236 #> [11279,]  232  246  235 #> [11280,]  231  245  236 #> [11281,]  231  245  236 #> [11282,]  232  246  236 #> [11283,]  231  245  236 #> [11284,]  232  246  236 #> [11285,]  232  246  236 #> [11286,]  232  246  236 #> [11287,]  232  246  236 #> [11288,]  232  246  236 #> [11289,]  231  245  235 #> [11290,]  232  246  236 #> [11291,]  231  245  235 #> [11292,]  232  246  236 #> [11293,]  232  246  236 #> [11294,]  232  246  235 #> [11295,]  232  246  236 #> [11296,]  232  246  235 #> [11297,]  232  246  235 #> [11298,]  232  246  236 #> [11299,]  232  246  236 #> [11300,]  232  246  235 #> [11301,]  233  247  238 #> [11302,]  233  247  238 #> [11303,]  234  248  237 #> [11304,]  233  247  238 #> [11305,]  233  247  238 #> [11306,]  233  247  238 #> [11307,]  234  248  237 #> [11308,]  235  248  237 #> [11309,]  233  247  238 #> [11310,]  233  247  238 #> [11311,]  233  247  238 #> [11312,]  233  247  238 #> [11313,]  235  248  237 #> [11314,]  233  247  238 #> [11315,]  233  247  238 #> [11316,]  235  248  237 #> [11317,]  233  247  238 #> [11318,]  233  247  238 #> [11319,]  233  247  238 #> [11320,]  234  248  237 #> [11321,]  233  247  238 #> [11322,]  235  248  237 #> [11323,]  233  247  238 #> [11324,]  235  248  237 #> [11325,]  234  248  237 #> [11326,]  233  247  238 #> [11327,]  233  247  238 #> [11328,]  233  247  238 #> [11329,]  233  247  238 #> [11330,]  233  247  238 #> [11331,]  233  247  238 #> [11332,]  233  247  238 #> [11333,]  233  247  238 #> [11334,]  233  247  238 #> [11335,]  233  247  238 #> [11336,]  233  247  238 #> [11337,]  233  247  238 #> [11338,]  233  247  238 #> [11339,]  234  248  237 #> [11340,]  235  248  237 #> [11341,]  233  247  238 #> [11342,]  233  247  238 #> [11343,]  233  247  238 #> [11344,]  234  248  237 #> [11345,]  233  247  238 #> [11346,]  235  248  237 #> [11347,]  233  247  238 #> [11348,]  233  247  238 #> [11349,]  234  248  237 #> [11350,]  234  248  237 #> [11351,]  233  247  238 #> [11352,]  233  247  238 #> [11353,]  234  248  237 #> [11354,]  233  247  238 #> [11355,]  234  248  237 #> [11356,]  234  248  237 #> [11357,]  233  247  238 #> [11358,]  233  247  238 #> [11359,]  234  248  237 #> [11360,]  233  247  238 #> [11361,]  233  247  238 #> [11362,]  233  247  238 #> [11363,]  233  247  238 #> [11364,]  233  247  238 #> [11365,]  234  248  237 #> [11366,]  234  248  237 #> [11367,]  233  247  238 #> [11368,]  233  247  238 #> [11369,]  233  247  238 #> [11370,]  235  248  237 #> [11371,]  233  247  238 #> [11372,]  235  248  237 #> [11373,]  233  247  238 #> [11374,]  233  247  238 #> [11375,]  233  247  238 #> [11376,]  233  247  238 #> [11377,]  233  247  238 #> [11378,]  233  247  238 #> [11379,]  233  247  238 #> [11380,]  233  247  238 #> [11381,]  233  247  238 #> [11382,]  233  247  238 #> [11383,]  233  247  238 #> [11384,]  235  248  237 #> [11385,]  233  247  238 #> [11386,]  235  248  237 #> [11387,]  233  247  238 #> [11388,]  233  247  238 #> [11389,]  235  248  237 #> [11390,]  234  248  237 #> [11391,]  233  247  238 #> [11392,]  233  247  238 #> [11393,]  233  247  238 #> [11394,]  233  247  238 #> [11395,]  233  247  238 #> [11396,]  233  247  238 #> [11397,]  233  247  238 #> [11398,]  234  248  237 #> [11399,]  233  247  238 #> [11400,]  234  248  237 #> [11401,]  237  250  240 #> [11402,]  236  249  239 #> [11403,]  236  249  239 #> [11404,]  237  250  240 #> [11405,]  237  250  240 #> [11406,]  236  249  239 #> [11407,]  236  249  239 #> [11408,]  236  249  239 #> [11409,]  236  249  239 #> [11410,]  237  250  240 #> [11411,]  237  250  240 #> [11412,]  237  250  240 #> [11413,]  237  250  240 #> [11414,]  237  250  240 #> [11415,]  237  250  240 #> [11416,]  237  250  240 #> [11417,]  237  250  240 #> [11418,]  237  250  240 #> [11419,]  237  250  240 #> [11420,]  236  249  239 #> [11421,]  236  249  239 #> [11422,]  237  250  240 #> [11423,]  236  249  239 #> [11424,]  237  250  240 #> [11425,]  236  249  239 #> [11426,]  237  250  240 #> [11427,]  237  250  240 #> [11428,]  237  250  240 #> [11429,]  236  249  239 #> [11430,]  237  250  240 #> [11431,]  237  250  240 #> [11432,]  237  250  240 #> [11433,]  237  250  240 #> [11434,]  236  249  239 #> [11435,]  236  249  239 #> [11436,]  236  249  239 #> [11437,]  236  249  239 #> [11438,]  237  250  240 #> [11439,]  237  250  240 #> [11440,]  236  249  239 #> [11441,]  236  249  239 #> [11442,]  236  249  239 #> [11443,]  237  250  240 #> [11444,]  236  249  239 #> [11445,]  236  249  239 #> [11446,]  237  250  240 #> [11447,]  237  250  240 #> [11448,]  237  250  240 #> [11449,]  236  249  239 #> [11450,]  236  249  239 #> [11451,]  237  250  240 #> [11452,]  237  250  240 #> [11453,]  236  249  239 #> [11454,]  236  249  239 #> [11455,]  236  249  239 #> [11456,]  236  249  239 #> [11457,]  236  249  239 #> [11458,]  237  250  240 #> [11459,]  237  250  240 #> [11460,]  236  249  239 #> [11461,]  237  250  240 #> [11462,]  236  249  239 #> [11463,]  237  250  240 #> [11464,]  236  249  239 #> [11465,]  236  249  239 #> [11466,]  237  250  240 #> [11467,]  236  249  239 #> [11468,]  237  250  240 #> [11469,]  237  250  240 #> [11470,]  237  250  240 #> [11471,]  237  250  240 #> [11472,]  236  249  239 #> [11473,]  236  249  239 #> [11474,]  236  249  239 #> [11475,]  237  250  240 #> [11476,]  236  249  239 #> [11477,]  237  250  240 #> [11478,]  237  250  240 #> [11479,]  237  250  240 #> [11480,]  236  249  239 #> [11481,]  236  249  239 #> [11482,]  236  249  239 #> [11483,]  237  250  240 #> [11484,]  236  249  239 #> [11485,]  236  249  239 #> [11486,]  236  249  239 #> [11487,]  237  250  240 #> [11488,]  236  249  239 #> [11489,]  236  249  239 #> [11490,]  237  250  240 #> [11491,]  237  250  240 #> [11492,]  237  250  240 #> [11493,]  237  250  240 #> [11494,]  236  249  239 #> [11495,]  237  250  240 #> [11496,]  237  250  240 #> [11497,]  236  249  239 #> [11498,]  236  249  239 #> [11499,]  236  249  239 #> [11500,]  237  250  240 #> [11501,]  239  252  242 #> [11502,]  238  251  241 #> [11503,]  239  252  242 #> [11504,]  239  252  242 #> [11505,]  239  252  242 #> [11506,]  238  251  241 #> [11507,]  239  252  242 #> [11508,]  239  252  242 #> [11509,]  239  252  242 #> [11510,]  239  252  242 #> [11511,]  238  251  241 #> [11512,]  238  251  241 #> [11513,]  239  252  242 #> [11514,]  239  252  242 #> [11515,]  238  251  241 #> [11516,]  239  252  242 #> [11517,]  238  251  241 #> [11518,]  239  252  242 #> [11519,]  238  251  241 #> [11520,]  239  252  242 #> [11521,]  239  252  242 #> [11522,]  239  252  242 #> [11523,]  238  251  241 #> [11524,]  239  252  242 #> [11525,]  239  252  242 #> [11526,]  238  251  241 #> [11527,]  239  252  242 #> [11528,]  239  252  242 #> [11529,]  238  251  241 #> [11530,]  238  251  241 #> [11531,]  238  251  241 #> [11532,]  239  252  242 #> [11533,]  239  252  242 #> [11534,]  238  251  241 #> [11535,]  238  251  241 #> [11536,]  239  252  242 #> [11537,]  238  251  241 #> [11538,]  239  252  242 #> [11539,]  239  252  242 #> [11540,]  239  252  242 #> [11541,]  239  252  242 #> [11542,]  238  251  241 #> [11543,]  238  251  241 #> [11544,]  238  251  241 #> [11545,]  239  252  242 #> [11546,]  238  251  241 #> [11547,]  238  251  241 #> [11548,]  238  251  241 #> [11549,]  239  252  242 #> [11550,]  239  252  242 #> [11551,]  239  252  242 #> [11552,]  239  252  242 #> [11553,]  239  252  242 #> [11554,]  239  252  242 #> [11555,]  239  252  242 #> [11556,]  238  251  241 #> [11557,]  239  252  242 #> [11558,]  239  252  242 #> [11559,]  239  252  242 #> [11560,]  238  251  241 #> [11561,]  238  251  241 #> [11562,]  239  252  242 #> [11563,]  238  251  241 #> [11564,]  238  251  241 #> [11565,]  238  251  241 #> [11566,]  238  251  241 #> [11567,]  239  252  242 #> [11568,]  238  251  241 #> [11569,]  239  252  242 #> [11570,]  238  251  241 #> [11571,]  239  252  242 #> [11572,]  239  252  242 #> [11573,]  239  252  242 #> [11574,]  239  252  242 #> [11575,]  238  251  241 #> [11576,]  239  252  242 #> [11577,]  239  252  242 #> [11578,]  238  251  241 #> [11579,]  238  251  241 #> [11580,]  239  252  242 #> [11581,]  238  251  241 #> [11582,]  239  252  242 #> [11583,]  239  252  242 #> [11584,]  239  252  242 #> [11585,]  239  252  242 #> [11586,]  239  252  242 #> [11587,]  239  252  242 #> [11588,]  239  252  242 #> [11589,]  239  252  242 #> [11590,]  239  252  242 #> [11591,]  239  252  242 #> [11592,]  238  251  241 #> [11593,]  238  251  241 #> [11594,]  238  251  241 #> [11595,]  238  251  241 #> [11596,]  238  251  241 #> [11597,]  239  252  242 #> [11598,]  239  252  242 #> [11599,]  239  252  242 #> [11600,]  238  251  241 #> [11601,]  241  253  244 #> [11602,]  241  253  244 #> [11603,]  240  254  243 #> [11604,]  241  253  244 #> [11605,]  240  255  243 #> [11606,]  240  255  243 #> [11607,]  241  253  244 #> [11608,]  241  253  244 #> [11609,]  241  253  244 #> [11610,]  241  253  244 #> [11611,]  240  254  243 #> [11612,]  240  254  243 #> [11613,]  241  253  244 #> [11614,]  240  254  243 #> [11615,]  241  253  244 #> [11616,]  241  253  244 #> [11617,]  241  253  244 #> [11618,]  241  253  244 #> [11619,]  240  254  243 #> [11620,]  240  254  243 #> [11621,]  241  253  244 #> [11622,]  240  254  243 #> [11623,]  241  253  244 #> [11624,]  240  255  243 #> [11625,]  241  253  244 #> [11626,]  240  254  243 #> [11627,]  241  253  244 #> [11628,]  241  253  244 #> [11629,]  240  254  243 #> [11630,]  240  255  243 #> [11631,]  241  253  244 #> [11632,]  240  254  243 #> [11633,]  240  255  243 #> [11634,]  240  255  243 #> [11635,]  240  255  243 #> [11636,]  240  254  243 #> [11637,]  241  253  244 #> [11638,]  241  253  244 #> [11639,]  241  253  244 #> [11640,]  240  254  243 #> [11641,]  240  254  243 #> [11642,]  240  254  243 #> [11643,]  241  253  244 #> [11644,]  241  253  244 #> [11645,]  241  253  244 #> [11646,]  241  253  244 #> [11647,]  241  253  244 #> [11648,]  240  254  243 #> [11649,]  241  253  244 #> [11650,]  241  253  244 #> [11651,]  240  254  243 #> [11652,]  240  255  243 #> [11653,]  241  253  244 #> [11654,]  240  254  243 #> [11655,]  240  255  243 #> [11656,]  241  253  244 #> [11657,]  240  255  243 #> [11658,]  240  255  243 #> [11659,]  241  253  244 #> [11660,]  240  254  243 #> [11661,]  241  253  244 #> [11662,]  240  254  243 #> [11663,]  240  254  243 #> [11664,]  241  253  244 #> [11665,]  241  253  244 #> [11666,]  240  254  243 #> [11667,]  240  255  243 #> [11668,]  240  254  243 #> [11669,]  240  254  243 #> [11670,]  241  253  244 #> [11671,]  241  253  244 #> [11672,]  241  253  244 #> [11673,]  241  253  244 #> [11674,]  241  253  244 #> [11675,]  241  253  244 #> [11676,]  241  253  244 #> [11677,]  241  253  244 #> [11678,]  240  255  243 #> [11679,]  241  253  244 #> [11680,]  240  254  243 #> [11681,]  240  254  243 #> [11682,]  241  253  244 #> [11683,]  240  254  243 #> [11684,]  241  253  244 #> [11685,]  240  255  243 #> [11686,]  241  253  244 #> [11687,]  241  253  244 #> [11688,]  241  253  244 #> [11689,]  240  254  243 #> [11690,]  241  253  244 #> [11691,]  240  254  243 #> [11692,]  241  253  244 #> [11693,]  240  255  243 #> [11694,]  241  253  244 #> [11695,]  241  253  244 #> [11696,]  241  253  244 #> [11697,]  240  255  243 #> [11698,]  240  255  243 #> [11699,]  240  255  243 #> [11700,]  241  253  244 #> [11701,]  243  257  246 #> [11702,]  243  257  246 #> [11703,]  242  256  245 #> [11704,]  243  257  246 #> [11705,]  243  257  246 #> [11706,]  243  257  246 #> [11707,]  242  256  245 #> [11708,]  242  256  245 #> [11709,]  243  257  246 #> [11710,]  243  257  246 #> [11711,]  243  257  246 #> [11712,]  243  257  246 #> [11713,]  243  257  246 #> [11714,]  243  257  246 #> [11715,]  243  257  246 #> [11716,]  243  257  246 #> [11717,]  243  257  246 #> [11718,]  243  257  246 #> [11719,]  243  257  246 #> [11720,]  242  256  245 #> [11721,]  243  257  246 #> [11722,]  243  257  246 #> [11723,]  243  257  246 #> [11724,]  243  257  246 #> [11725,]  242  256  245 #> [11726,]  243  257  246 #> [11727,]  243  257  246 #> [11728,]  243  257  246 #> [11729,]  243  257  246 #> [11730,]  243  257  246 #> [11731,]  243  257  246 #> [11732,]  243  257  246 #> [11733,]  243  257  246 #> [11734,]  243  257  246 #> [11735,]  243  257  246 #> [11736,]  243  257  246 #> [11737,]  243  257  246 #> [11738,]  243  257  246 #> [11739,]  242  256  245 #> [11740,]  243  257  246 #> [11741,]  243  257  246 #> [11742,]  243  257  246 #> [11743,]  243  257  246 #> [11744,]  242  256  245 #> [11745,]  243  257  246 #> [11746,]  243  257  246 #> [11747,]  243  257  246 #> [11748,]  243  257  246 #> [11749,]  242  256  245 #> [11750,]  242  256  245 #> [11751,]  243  257  246 #> [11752,]  243  257  246 #> [11753,]  242  256  245 #> [11754,]  243  257  246 #> [11755,]  242  256  245 #> [11756,]  242  256  245 #> [11757,]  243  257  246 #> [11758,]  243  257  246 #> [11759,]  242  256  245 #> [11760,]  243  257  246 #> [11761,]  243  257  246 #> [11762,]  243  257  246 #> [11763,]  243  257  246 #> [11764,]  243  257  246 #> [11765,]  242  256  245 #> [11766,]  242  256  245 #> [11767,]  243  257  246 #> [11768,]  243  257  246 #> [11769,]  243  257  246 #> [11770,]  243  257  246 #> [11771,]  243  257  246 #> [11772,]  243  257  246 #> [11773,]  243  257  246 #> [11774,]  243  257  246 #> [11775,]  243  257  246 #> [11776,]  243  257  246 #> [11777,]  243  257  246 #> [11778,]  243  257  246 #> [11779,]  243  257  246 #> [11780,]  243  257  246 #> [11781,]  243  257  246 #> [11782,]  243  257  246 #> [11783,]  243  257  246 #> [11784,]  242  256  245 #> [11785,]  243  257  246 #> [11786,]  242  256  245 #> [11787,]  243  257  246 #> [11788,]  243  257  246 #> [11789,]  243  257  246 #> [11790,]  242  256  245 #> [11791,]  243  257  246 #> [11792,]  243  257  246 #> [11793,]  243  257  246 #> [11794,]  243  257  246 #> [11795,]  243  257  246 #> [11796,]  243  257  246 #> [11797,]  243  257  246 #> [11798,]  242  256  245 #> [11799,]  243  257  246 #> [11800,]  242  256  245 #> [11801,]  244  258  247 #> [11802,]  244  258  247 #> [11803,]  244  258  247 #> [11804,]  245  259  248 #> [11805,]  244  258  247 #> [11806,]  244  258  247 #> [11807,]  244  258  247 #> [11808,]  244  258  247 #> [11809,]  244  258  247 #> [11810,]  245  260  248 #> [11811,]  244  258  247 #> [11812,]  244  258  247 #> [11813,]  244  258  247 #> [11814,]  244  258  247 #> [11815,]  245  260  248 #> [11816,]  244  258  247 #> [11817,]  244  258  247 #> [11818,]  245  260  248 #> [11819,]  244  258  247 #> [11820,]  244  258  247 #> [11821,]  245  260  248 #> [11822,]  244  258  247 #> [11823,]  245  259  248 #> [11824,]  244  258  247 #> [11825,]  245  259  248 #> [11826,]  244  258  247 #> [11827,]  244  258  247 #> [11828,]  244  258  247 #> [11829,]  244  258  247 #> [11830,]  244  258  247 #> [11831,]  244  258  247 #> [11832,]  244  258  247 #> [11833,]  244  258  247 #> [11834,]  244  258  247 #> [11835,]  244  258  247 #> [11836,]  244  258  247 #> [11837,]  244  258  247 #> [11838,]  244  258  247 #> [11839,]  245  260  248 #> [11840,]  244  258  247 #> [11841,]  244  258  247 #> [11842,]  244  258  247 #> [11843,]  245  260  248 #> [11844,]  244  258  247 #> [11845,]  245  260  248 #> [11846,]  244  258  247 #> [11847,]  244  258  247 #> [11848,]  244  258  247 #> [11849,]  244  258  247 #> [11850,]  244  258  247 #> [11851,]  244  258  247 #> [11852,]  244  258  247 #> [11853,]  245  260  248 #> [11854,]  244  258  247 #> [11855,]  244  258  247 #> [11856,]  244  258  247 #> [11857,]  244  258  247 #> [11858,]  244  258  247 #> [11859,]  244  258  247 #> [11860,]  244  258  247 #> [11861,]  245  260  248 #> [11862,]  244  258  247 #> [11863,]  244  258  247 #> [11864,]  244  258  247 #> [11865,]  244  258  247 #> [11866,]  244  258  247 #> [11867,]  244  258  247 #> [11868,]  244  258  247 #> [11869,]  244  258  247 #> [11870,]  244  258  247 #> [11871,]  244  258  247 #> [11872,]  245  259  248 #> [11873,]  245  260  248 #> [11874,]  245  259  248 #> [11875,]  245  260  248 #> [11876,]  245  259  248 #> [11877,]  245  260  248 #> [11878,]  244  258  247 #> [11879,]  244  258  247 #> [11880,]  244  258  247 #> [11881,]  244  258  247 #> [11882,]  244  258  247 #> [11883,]  244  258  247 #> [11884,]  245  260  248 #> [11885,]  244  258  247 #> [11886,]  244  258  247 #> [11887,]  244  258  247 #> [11888,]  244  258  247 #> [11889,]  244  258  247 #> [11890,]  244  258  247 #> [11891,]  244  258  247 #> [11892,]  244  258  247 #> [11893,]  244  258  247 #> [11894,]  245  260  248 #> [11895,]  245  260  248 #> [11896,]  244  258  247 #> [11897,]  244  258  247 #> [11898,]  244  258  247 #> [11899,]  244  258  247 #> [11900,]  245  260  248 #> [11901,]  246  262  249 #> [11902,]  246  262  249 #> [11903,]  246  262  249 #> [11904,]  246  262  249 #> [11905,]  246  262  249 #> [11906,]  246  262  249 #> [11907,]  246  262  249 #> [11908,]  247  261  249 #> [11909,]  246  262  249 #> [11910,]  246  262  249 #> [11911,]  246  262  249 #> [11912,]  246  262  249 #> [11913,]  247  261  249 #> [11914,]  246  262  249 #> [11915,]  247  261  249 #> [11916,]  247  261  249 #> [11917,]  246  262  249 #> [11918,]  246  262  249 #> [11919,]  247  261  249 #> [11920,]  247  261  249 #> [11921,]  246  262  249 #> [11922,]  247  261  249 #> [11923,]  246  262  249 #> [11924,]  246  262  249 #> [11925,]  246  262  249 #> [11926,]  247  261  249 #> [11927,]  247  261  249 #> [11928,]  246  262  249 #> [11929,]  247  261  249 #> [11930,]  247  261  249 #> [11931,]  246  262  249 #> [11932,]  246  262  249 #> [11933,]  246  262  249 #> [11934,]  246  262  249 #> [11935,]  246  262  249 #> [11936,]  247  261  249 #> [11937,]  247  261  249 #> [11938,]  247  261  249 #> [11939,]  246  262  249 #> [11940,]  246  262  249 #> [11941,]  247  261  249 #> [11942,]  246  262  249 #> [11943,]  247  261  249 #> [11944,]  247  261  249 #> [11945,]  246  262  249 #> [11946,]  247  261  249 #> [11947,]  246  262  249 #> [11948,]  246  262  249 #> [11949,]  246  262  249 #> [11950,]  247  261  249 #> [11951,]  247  261  249 #> [11952,]  246  262  249 #> [11953,]  247  261  249 #> [11954,]  246  262  249 #> [11955,]  247  261  249 #> [11956,]  247  261  249 #> [11957,]  246  262  249 #> [11958,]  247  261  249 #> [11959,]  247  261  249 #> [11960,]  247  261  249 #> [11961,]  246  262  249 #> [11962,]  246  262  249 #> [11963,]  246  262  249 #> [11964,]  247  261  249 #> [11965,]  246  262  249 #> [11966,]  247  261  249 #> [11967,]  246  262  249 #> [11968,]  246  262  249 #> [11969,]  247  261  249 #> [11970,]  246  262  249 #> [11971,]  247  261  249 #> [11972,]  246  262  249 #> [11973,]  246  262  249 #> [11974,]  246  262  249 #> [11975,]  246  262  249 #> [11976,]  246  262  249 #> [11977,]  247  261  249 #> [11978,]  246  262  249 #> [11979,]  246  262  249 #> [11980,]  247  261  249 #> [11981,]  247  261  249 #> [11982,]  246  262  249 #> [11983,]  247  261  249 #> [11984,]  247  261  249 #> [11985,]  247  261  249 #> [11986,]  246  262  249 #> [11987,]  247  261  249 #> [11988,]  246  262  249 #> [11989,]  246  262  249 #> [11990,]  247  261  249 #> [11991,]  246  262  249 #> [11992,]  246  262  249 #> [11993,]  246  262  249 #> [11994,]  246  262  249 #> [11995,]  247  261  249 #> [11996,]  247  261  249 #> [11997,]  247  261  249 #> [11998,]  246  262  249 #> [11999,]  246  262  249 #> [12000,]  247  261  249 #> [12001,]  249  264  251 #> [12002,]  248  263  250 #> [12003,]  248  263  250 #> [12004,]  249  264  251 #> [12005,]  248  263  250 #> [12006,]  248  263  250 #> [12007,]  249  264  251 #> [12008,]  248  263  250 #> [12009,]  249  264  251 #> [12010,]  249  264  251 #> [12011,]  248  263  250 #> [12012,]  248  263  250 #> [12013,]  249  264  251 #> [12014,]  249  264  251 #> [12015,]  248  263  250 #> [12016,]  249  264  251 #> [12017,]  248  263  250 #> [12018,]  248  263  250 #> [12019,]  248  263  250 #> [12020,]  249  264  251 #> [12021,]  248  263  250 #> [12022,]  249  264  251 #> [12023,]  248  263  250 #> [12024,]  249  264  251 #> [12025,]  249  264  251 #> [12026,]  248  263  250 #> [12027,]  248  263  250 #> [12028,]  249  264  251 #> [12029,]  248  263  250 #> [12030,]  248  263  250 #> [12031,]  248  263  250 #> [12032,]  248  263  250 #> [12033,]  248  263  250 #> [12034,]  248  263  250 #> [12035,]  248  263  250 #> [12036,]  249  264  251 #> [12037,]  248  263  250 #> [12038,]  248  263  250 #> [12039,]  249  264  251 #> [12040,]  248  263  250 #> [12041,]  248  263  250 #> [12042,]  248  263  250 #> [12043,]  248  263  250 #> [12044,]  248  263  250 #> [12045,]  249  264  251 #> [12046,]  248  263  250 #> [12047,]  248  263  250 #> [12048,]  248  263  250 #> [12049,]  249  264  251 #> [12050,]  249  264  251 #> [12051,]  248  263  250 #> [12052,]  249  264  251 #> [12053,]  249  264  251 #> [12054,]  249  264  251 #> [12055,]  249  264  251 #> [12056,]  248  263  250 #> [12057,]  249  264  251 #> [12058,]  249  264  251 #> [12059,]  249  264  251 #> [12060,]  248  263  250 #> [12061,]  248  263  250 #> [12062,]  248  263  250 #> [12063,]  248  263  250 #> [12064,]  248  263  250 #> [12065,]  248  263  250 #> [12066,]  248  263  250 #> [12067,]  249  264  251 #> [12068,]  248  263  250 #> [12069,]  248  263  250 #> [12070,]  248  263  250 #> [12071,]  248  263  250 #> [12072,]  249  264  251 #> [12073,]  249  264  251 #> [12074,]  248  263  250 #> [12075,]  248  263  250 #> [12076,]  249  264  251 #> [12077,]  248  263  250 #> [12078,]  248  263  250 #> [12079,]  248  263  250 #> [12080,]  248  263  250 #> [12081,]  248  263  250 #> [12082,]  248  263  250 #> [12083,]  248  263  250 #> [12084,]  248  263  250 #> [12085,]  249  264  251 #> [12086,]  249  264  251 #> [12087,]  249  264  251 #> [12088,]  248  263  250 #> [12089,]  248  263  250 #> [12090,]  249  264  251 #> [12091,]  249  264  251 #> [12092,]  248  263  250 #> [12093,]  248  263  250 #> [12094,]  248  263  250 #> [12095,]  248  263  250 #> [12096,]  248  263  250 #> [12097,]  248  263  250 #> [12098,]  248  263  250 #> [12099,]  248  263  250 #> [12100,]  248  263  250 #> [12101,]  250  265  252 #> [12102,]  250  265  252 #> [12103,]  250  265  252 #> [12104,]  251  266  253 #> [12105,]  250  265  252 #> [12106,]  250  265  252 #> [12107,]  251  266  253 #> [12108,]  250  265  252 #> [12109,]  251  266  253 #> [12110,]  251  266  253 #> [12111,]  250  265  252 #> [12112,]  250  265  252 #> [12113,]  251  266  253 #> [12114,]  251  266  253 #> [12115,]  250  265  252 #> [12116,]  251  266  253 #> [12117,]  250  265  252 #> [12118,]  250  265  252 #> [12119,]  250  265  252 #> [12120,]  251  266  253 #> [12121,]  250  265  252 #> [12122,]  251  266  253 #> [12123,]  250  265  252 #> [12124,]  251  266  253 #> [12125,]  251  266  253 #> [12126,]  250  265  252 #> [12127,]  250  265  252 #> [12128,]  251  266  253 #> [12129,]  250  265  252 #> [12130,]  250  265  252 #> [12131,]  250  265  252 #> [12132,]  250  265  252 #> [12133,]  250  265  252 #> [12134,]  250  265  252 #> [12135,]  250  265  252 #> [12136,]  251  266  253 #> [12137,]  250  265  252 #> [12138,]  250  265  252 #> [12139,]  251  266  253 #> [12140,]  250  265  252 #> [12141,]  250  265  252 #> [12142,]  250  265  252 #> [12143,]  250  265  252 #> [12144,]  250  265  252 #> [12145,]  250  265  252 #> [12146,]  250  265  252 #> [12147,]  250  265  252 #> [12148,]  250  265  252 #> [12149,]  250  265  252 #> [12150,]  251  266  253 #> [12151,]  250  265  252 #> [12152,]  251  266  253 #> [12153,]  250  265  252 #> [12154,]  251  266  253 #> [12155,]  251  266  253 #> [12156,]  250  265  252 #> [12157,]  251  266  253 #> [12158,]  250  265  252 #> [12159,]  251  266  253 #> [12160,]  250  265  252 #> [12161,]  250  265  252 #> [12162,]  250  265  252 #> [12163,]  250  265  252 #> [12164,]  250  265  252 #> [12165,]  250  265  252 #> [12166,]  250  265  252 #> [12167,]  251  266  253 #> [12168,]  250  265  252 #> [12169,]  250  265  252 #> [12170,]  250  265  252 #> [12171,]  250  265  252 #> [12172,]  250  265  252 #> [12173,]  251  266  253 #> [12174,]  250  265  252 #> [12175,]  250  265  252 #> [12176,]  251  266  253 #> [12177,]  250  265  252 #> [12178,]  250  265  252 #> [12179,]  250  265  252 #> [12180,]  250  265  252 #> [12181,]  250  265  252 #> [12182,]  250  265  252 #> [12183,]  250  265  252 #> [12184,]  250  265  252 #> [12185,]  250  265  252 #> [12186,]  251  266  253 #> [12187,]  250  265  252 #> [12188,]  250  265  252 #> [12189,]  250  265  252 #> [12190,]  251  266  253 #> [12191,]  251  266  253 #> [12192,]  250  265  252 #> [12193,]  250  265  252 #> [12194,]  250  265  252 #> [12195,]  250  265  252 #> [12196,]  250  265  252 #> [12197,]  250  265  252 #> [12198,]  250  265  252 #> [12199,]  250  265  252 #> [12200,]  250  265  252 #> [12201,]  253  268  255 #> [12202,]  253  268  255 #> [12203,]  252  267  254 #> [12204,]  253  268  255 #> [12205,]  253  268  255 #> [12206,]  253  268  255 #> [12207,]  253  268  255 #> [12208,]  253  268  255 #> [12209,]  252  267  254 #> [12210,]  252  267  254 #> [12211,]  252  267  254 #> [12212,]  253  268  255 #> [12213,]  253  268  255 #> [12214,]  252  267  254 #> [12215,]  253  268  255 #> [12216,]  253  268  255 #> [12217,]  253  268  255 #> [12218,]  253  268  255 #> [12219,]  253  268  255 #> [12220,]  253  268  255 #> [12221,]  252  267  254 #> [12222,]  253  268  255 #> [12223,]  253  268  255 #> [12224,]  253  268  255 #> [12225,]  253  268  255 #> [12226,]  253  268  255 #> [12227,]  253  268  255 #> [12228,]  252  267  254 #> [12229,]  253  268  255 #> [12230,]  253  268  255 #> [12231,]  252  267  254 #> [12232,]  252  267  254 #> [12233,]  253  268  255 #> [12234,]  252  267  254 #> [12235,]  252  267  254 #> [12236,]  253  268  255 #> [12237,]  253  268  255 #> [12238,]  253  268  255 #> [12239,]  252  267  254 #> [12240,]  252  267  254 #> [12241,]  253  268  255 #> [12242,]  253  268  255 #> [12243,]  253  268  255 #> [12244,]  253  268  255 #> [12245,]  253  268  255 #> [12246,]  253  268  255 #> [12247,]  253  268  255 #> [12248,]  252  267  254 #> [12249,]  253  268  255 #> [12250,]  253  268  255 #> [12251,]  253  268  255 #> [12252,]  253  268  255 #> [12253,]  253  268  255 #> [12254,]  253  268  255 #> [12255,]  253  268  255 #> [12256,]  253  268  255 #> [12257,]  253  268  255 #> [12258,]  253  268  255 #> [12259,]  253  268  255 #> [12260,]  253  268  255 #> [12261,]  253  268  255 #> [12262,]  253  268  255 #> [12263,]  253  268  255 #> [12264,]  253  268  255 #> [12265,]  252  267  254 #> [12266,]  253  268  255 #> [12267,]  253  268  255 #> [12268,]  253  268  255 #> [12269,]  253  268  255 #> [12270,]  252  267  254 #> [12271,]  253  268  255 #> [12272,]  253  268  255 #> [12273,]  253  268  255 #> [12274,]  252  267  254 #> [12275,]  253  268  255 #> [12276,]  253  268  255 #> [12277,]  253  268  255 #> [12278,]  253  268  255 #> [12279,]  253  268  255 #> [12280,]  253  268  255 #> [12281,]  253  268  255 #> [12282,]  252  267  254 #> [12283,]  253  268  255 #> [12284,]  253  268  255 #> [12285,]  253  268  255 #> [12286,]  253  268  255 #> [12287,]  253  268  255 #> [12288,]  253  268  255 #> [12289,]  253  268  255 #> [12290,]  253  268  255 #> [12291,]  253  268  255 #> [12292,]  253  268  255 #> [12293,]  253  268  255 #> [12294,]  253  268  255 #> [12295,]  253  268  255 #> [12296,]  253  268  255 #> [12297,]  253  268  255 #> [12298,]  252  267  254 #> [12299,]  253  268  255 #> [12300,]  253  268  255 #> [12301,]  254  269  256 #> [12302,]  255  270  257 #> [12303,]  254  269  256 #> [12304,]  255  270  257 #> [12305,]  255  270  257 #> [12306,]  254  269  256 #> [12307,]  255  270  257 #> [12308,]  255  270  257 #> [12309,]  255  270  257 #> [12310,]  255  270  257 #> [12311,]  254  269  256 #> [12312,]  255  270  257 #> [12313,]  255  270  257 #> [12314,]  254  269  256 #> [12315,]  255  270  257 #> [12316,]  254  269  256 #> [12317,]  255  270  257 #> [12318,]  255  270  257 #> [12319,]  254  269  256 #> [12320,]  255  270  257 #> [12321,]  255  270  257 #> [12322,]  255  270  257 #> [12323,]  255  270  257 #> [12324,]  255  270  257 #> [12325,]  255  270  257 #> [12326,]  254  269  256 #> [12327,]  255  270  257 #> [12328,]  254  269  256 #> [12329,]  255  270  257 #> [12330,]  255  270  257 #> [12331,]  255  270  257 #> [12332,]  255  270  257 #> [12333,]  255  270  257 #> [12334,]  254  269  256 #> [12335,]  254  269  256 #> [12336,]  255  270  257 #> [12337,]  254  269  256 #> [12338,]  254  269  256 #> [12339,]  255  270  257 #> [12340,]  255  270  257 #> [12341,]  255  270  257 #> [12342,]  254  269  256 #> [12343,]  255  270  257 #> [12344,]  255  270  257 #> [12345,]  254  269  256 #> [12346,]  255  270  257 #> [12347,]  255  270  257 #> [12348,]  255  270  257 #> [12349,]  254  269  256 #> [12350,]  255  270  257 #> [12351,]  255  270  257 #> [12352,]  254  269  256 #> [12353,]  255  270  257 #> [12354,]  255  270  257 #> [12355,]  255  270  257 #> [12356,]  255  270  257 #> [12357,]  255  270  257 #> [12358,]  255  270  257 #> [12359,]  254  269  256 #> [12360,]  255  270  257 #> [12361,]  255  270  257 #> [12362,]  255  270  257 #> [12363,]  255  270  257 #> [12364,]  254  269  256 #> [12365,]  255  270  257 #> [12366,]  255  270  257 #> [12367,]  255  270  257 #> [12368,]  254  269  256 #> [12369,]  255  270  257 #> [12370,]  255  270  257 #> [12371,]  255  270  257 #> [12372,]  254  269  256 #> [12373,]  254  269  256 #> [12374,]  255  270  257 #> [12375,]  255  270  257 #> [12376,]  255  270  257 #> [12377,]  254  269  256 #> [12378,]  255  270  257 #> [12379,]  254  269  256 #> [12380,]  255  270  257 #> [12381,]  255  270  257 #> [12382,]  255  270  257 #> [12383,]  255  270  257 #> [12384,]  255  270  257 #> [12385,]  255  270  257 #> [12386,]  255  270  257 #> [12387,]  255  270  257 #> [12388,]  255  270  257 #> [12389,]  254  269  256 #> [12390,]  255  270  257 #> [12391,]  255  270  257 #> [12392,]  255  270  257 #> [12393,]  255  270  257 #> [12394,]  254  269  256 #> [12395,]  255  270  257 #> [12396,]  254  269  256 #> [12397,]  254  269  256 #> [12398,]  255  270  257 #> [12399,]  255  270  257 #> [12400,]  254  269  256 #> [12401,]  257  272  259 #> [12402,]  256  271  258 #> [12403,]  257  272  259 #> [12404,]  257  272  259 #> [12405,]  257  272  259 #> [12406,]  257  272  259 #> [12407,]  257  272  259 #> [12408,]  257  272  259 #> [12409,]  257  272  259 #> [12410,]  257  272  259 #> [12411,]  257  272  259 #> [12412,]  256  271  258 #> [12413,]  257  272  259 #> [12414,]  257  272  259 #> [12415,]  256  271  258 #> [12416,]  257  272  259 #> [12417,]  256  271  258 #> [12418,]  257  272  259 #> [12419,]  257  272  259 #> [12420,]  257  272  259 #> [12421,]  257  272  259 #> [12422,]  257  272  259 #> [12423,]  256  271  258 #> [12424,]  257  272  259 #> [12425,]  257  272  259 #> [12426,]  257  272  259 #> [12427,]  257  272  259 #> [12428,]  257  272  259 #> [12429,]  256  271  258 #> [12430,]  257  272  259 #> [12431,]  256  271  258 #> [12432,]  257  272  259 #> [12433,]  257  272  259 #> [12434,]  256  271  258 #> [12435,]  257  272  259 #> [12436,]  257  272  259 #> [12437,]  256  271  258 #> [12438,]  257  272  259 #> [12439,]  257  272  259 #> [12440,]  257  272  259 #> [12441,]  257  272  259 #> [12442,]  256  271  258 #> [12443,]  256  271  258 #> [12444,]  256  271  258 #> [12445,]  257  272  259 #> [12446,]  257  272  259 #> [12447,]  257  272  259 #> [12448,]  256  271  258 #> [12449,]  257  272  259 #> [12450,]  257  272  259 #> [12451,]  257  272  259 #> [12452,]  257  272  259 #> [12453,]  257  272  259 #> [12454,]  257  272  259 #> [12455,]  257  272  259 #> [12456,]  257  272  259 #> [12457,]  257  272  259 #> [12458,]  257  272  259 #> [12459,]  257  272  259 #> [12460,]  257  272  259 #> [12461,]  257  272  259 #> [12462,]  257  272  259 #> [12463,]  256  271  258 #> [12464,]  256  271  258 #> [12465,]  257  272  259 #> [12466,]  257  272  259 #> [12467,]  257  272  259 #> [12468,]  257  272  259 #> [12469,]  257  272  259 #> [12470,]  256  271  258 #> [12471,]  257  272  259 #> [12472,]  257  272  259 #> [12473,]  257  272  259 #> [12474,]  257  272  259 #> [12475,]  256  271  258 #> [12476,]  257  272  259 #> [12477,]  257  272  259 #> [12478,]  256  271  258 #> [12479,]  256  271  258 #> [12480,]  257  272  259 #> [12481,]  256  271  258 #> [12482,]  257  272  259 #> [12483,]  257  272  259 #> [12484,]  257  272  259 #> [12485,]  257  272  259 #> [12486,]  257  272  259 #> [12487,]  257  272  259 #> [12488,]  257  272  259 #> [12489,]  257  272  259 #> [12490,]  257  272  259 #> [12491,]  257  272  259 #> [12492,]  256  271  258 #> [12493,]  257  272  259 #> [12494,]  256  271  258 #> [12495,]  256  271  258 #> [12496,]  257  272  259 #> [12497,]  257  272  259 #> [12498,]  257  272  259 #> [12499,]  257  272  259 #> [12500,]  256  271  258 #> [12501,]  259  275  261 #> [12502,]  259  275  261 #> [12503,]  259  275  260 #> [12504,]  259  274  260 #> [12505,]  259  275  261 #> [12506,]  258  273  261 #> [12507,]  259  275  260 #> [12508,]  259  274  260 #> [12509,]  259  274  261 #> [12510,]  259  274  261 #> [12511,]  259  275  261 #> [12512,]  259  275  260 #> [12513,]  259  275  261 #> [12514,]  259  275  261 #> [12515,]  259  275  261 #> [12516,]  259  275  261 #> [12517,]  259  275  261 #> [12518,]  259  274  261 #> [12519,]  259  275  261 #> [12520,]  258  273  261 #> [12521,]  258  273  261 #> [12522,]  259  275  261 #> [12523,]  259  275  260 #> [12524,]  259  275  261 #> [12525,]  258  273  260 #> [12526,]  259  275  261 #> [12527,]  259  275  261 #> [12528,]  259  275  261 #> [12529,]  259  275  261 #> [12530,]  259  274  261 #> [12531,]  259  275  260 #> [12532,]  259  275  261 #> [12533,]  259  275  261 #> [12534,]  259  275  261 #> [12535,]  258  273  261 #> [12536,]  259  275  261 #> [12537,]  259  275  260 #> [12538,]  259  275  261 #> [12539,]  259  274  261 #> [12540,]  259  275  260 #> [12541,]  259  275  261 #> [12542,]  258  273  261 #> [12543,]  259  274  261 #> [12544,]  258  273  261 #> [12545,]  259  274  261 #> [12546,]  259  275  260 #> [12547,]  259  275  260 #> [12548,]  259  275  261 #> [12549,]  259  274  261 #> [12550,]  259  275  261 #> [12551,]  259  274  261 #> [12552,]  259  275  260 #> [12553,]  258  273  261 #> [12554,]  259  275  261 #> [12555,]  259  275  260 #> [12556,]  258  273  261 #> [12557,]  259  275  260 #> [12558,]  259  275  261 #> [12559,]  259  275  260 #> [12560,]  259  274  260 #> [12561,]  259  275  261 #> [12562,]  259  275  261 #> [12563,]  259  275  261 #> [12564,]  259  274  261 #> [12565,]  258  273  261 #> [12566,]  259  274  261 #> [12567,]  259  274  261 #> [12568,]  259  275  260 #> [12569,]  259  275  261 #> [12570,]  259  275  261 #> [12571,]  259  275  261 #> [12572,]  259  275  261 #> [12573,]  258  273  261 #> [12574,]  258  273  260 #> [12575,]  259  275  261 #> [12576,]  259  275  261 #> [12577,]  259  275  261 #> [12578,]  259  274  261 #> [12579,]  259  275  261 #> [12580,]  258  273  260 #> [12581,]  259  275  261 #> [12582,]  258  273  261 #> [12583,]  259  275  261 #> [12584,]  258  273  261 #> [12585,]  258  273  261 #> [12586,]  258  273  260 #> [12587,]  259  275  261 #> [12588,]  259  275  261 #> [12589,]  258  273  261 #> [12590,]  259  275  261 #> [12591,]  259  274  261 #> [12592,]  259  275  261 #> [12593,]  259  275  261 #> [12594,]  258  273  261 #> [12595,]  259  274  261 #> [12596,]  259  275  260 #> [12597,]  259  275  260 #> [12598,]  259  275  260 #> [12599,]  258  273  261 #> [12600,]  259  275  261 #> [12601,]  261  277  263 #> [12602,]  261  277  263 #> [12603,]  260  276  262 #> [12604,]  261  277  263 #> [12605,]  260  276  263 #> [12606,]  260  276  263 #> [12607,]  261  277  262 #> [12608,]  261  277  263 #> [12609,]  261  277  263 #> [12610,]  261  277  263 #> [12611,]  260  276  263 #> [12612,]  260  276  263 #> [12613,]  261  277  263 #> [12614,]  260  276  263 #> [12615,]  261  277  263 #> [12616,]  261  277  263 #> [12617,]  261  277  263 #> [12618,]  261  277  263 #> [12619,]  260  276  263 #> [12620,]  260  276  263 #> [12621,]  261  277  263 #> [12622,]  260  276  263 #> [12623,]  261  277  263 #> [12624,]  260  276  263 #> [12625,]  261  277  263 #> [12626,]  260  276  263 #> [12627,]  261  277  263 #> [12628,]  261  277  263 #> [12629,]  260  276  263 #> [12630,]  260  276  263 #> [12631,]  261  277  263 #> [12632,]  260  276  263 #> [12633,]  260  276  263 #> [12634,]  260  276  263 #> [12635,]  260  276  263 #> [12636,]  260  276  263 #> [12637,]  261  277  263 #> [12638,]  261  277  263 #> [12639,]  261  277  263 #> [12640,]  260  276  263 #> [12641,]  260  276  263 #> [12642,]  260  276  263 #> [12643,]  261  277  263 #> [12644,]  261  277  263 #> [12645,]  261  277  263 #> [12646,]  261  277  263 #> [12647,]  261  277  263 #> [12648,]  260  276  263 #> [12649,]  261  277  262 #> [12650,]  261  277  263 #> [12651,]  260  276  263 #> [12652,]  260  276  263 #> [12653,]  261  277  262 #> [12654,]  260  276  263 #> [12655,]  260  276  262 #> [12656,]  261  277  262 #> [12657,]  260  276  263 #> [12658,]  260  276  263 #> [12659,]  261  277  263 #> [12660,]  260  276  263 #> [12661,]  261  277  263 #> [12662,]  260  276  263 #> [12663,]  260  276  263 #> [12664,]  261  277  263 #> [12665,]  261  277  263 #> [12666,]  260  276  262 #> [12667,]  260  276  263 #> [12668,]  260  276  263 #> [12669,]  260  276  263 #> [12670,]  261  277  263 #> [12671,]  261  277  263 #> [12672,]  261  277  263 #> [12673,]  261  277  263 #> [12674,]  261  277  263 #> [12675,]  261  277  263 #> [12676,]  261  277  263 #> [12677,]  261  277  263 #> [12678,]  260  276  263 #> [12679,]  261  277  263 #> [12680,]  260  276  263 #> [12681,]  260  276  263 #> [12682,]  261  277  263 #> [12683,]  260  276  263 #> [12684,]  261  277  263 #> [12685,]  261  277  263 #> [12686,]  261  277  263 #> [12687,]  261  277  263 #> [12688,]  261  277  263 #> [12689,]  260  276  263 #> [12690,]  261  277  263 #> [12691,]  260  276  263 #> [12692,]  261  277  263 #> [12693,]  260  276  263 #> [12694,]  261  277  263 #> [12695,]  261  277  263 #> [12696,]  261  277  263 #> [12697,]  261  277  263 #> [12698,]  260  276  263 #> [12699,]  260  276  263 #> [12700,]  261  277  263 #> [12701,]  262  278  264 #> [12702,]  263  279  265 #> [12703,]  263  279  265 #> [12704,]  262  278  264 #> [12705,]  262  278  264 #> [12706,]  263  279  265 #> [12707,]  263  279  265 #> [12708,]  262  278  264 #> [12709,]  262  278  264 #> [12710,]  263  279  265 #> [12711,]  262  278  264 #> [12712,]  263  279  265 #> [12713,]  262  278  264 #> [12714,]  262  278  264 #> [12715,]  262  278  264 #> [12716,]  262  278  264 #> [12717,]  262  278  264 #> [12718,]  263  279  265 #> [12719,]  263  279  265 #> [12720,]  263  279  265 #> [12721,]  262  278  264 #> [12722,]  262  278  264 #> [12723,]  263  279  265 #> [12724,]  262  278  264 #> [12725,]  263  279  265 #> [12726,]  262  278  264 #> [12727,]  262  278  264 #> [12728,]  263  279  265 #> [12729,]  263  279  265 #> [12730,]  262  278  264 #> [12731,]  263  279  265 #> [12732,]  263  279  265 #> [12733,]  263  279  265 #> [12734,]  263  279  265 #> [12735,]  262  278  264 #> [12736,]  262  278  264 #> [12737,]  262  278  264 #> [12738,]  262  278  264 #> [12739,]  263  279  265 #> [12740,]  263  279  265 #> [12741,]  262  278  264 #> [12742,]  263  279  265 #> [12743,]  262  278  264 #> [12744,]  262  278  264 #> [12745,]  262  278  264 #> [12746,]  262  278  264 #> [12747,]  263  279  265 #> [12748,]  263  279  265 #> [12749,]  262  278  264 #> [12750,]  263  279  265 #> [12751,]  262  278  264 #> [12752,]  262  278  264 #> [12753,]  263  279  265 #> [12754,]  262  278  264 #> [12755,]  262  278  264 #> [12756,]  263  279  265 #> [12757,]  263  279  265 #> [12758,]  262  278  264 #> [12759,]  262  278  264 #> [12760,]  263  279  265 #> [12761,]  263  279  265 #> [12762,]  262  278  264 #> [12763,]  262  278  264 #> [12764,]  263  279  265 #> [12765,]  263  279  265 #> [12766,]  262  278  264 #> [12767,]  262  278  264 #> [12768,]  262  278  264 #> [12769,]  262  278  264 #> [12770,]  263  279  265 #> [12771,]  263  279  265 #> [12772,]  262  278  264 #> [12773,]  263  279  265 #> [12774,]  262  278  264 #> [12775,]  263  279  265 #> [12776,]  262  278  264 #> [12777,]  263  279  265 #> [12778,]  263  279  265 #> [12779,]  262  278  264 #> [12780,]  262  278  264 #> [12781,]  262  278  264 #> [12782,]  262  278  264 #> [12783,]  262  278  264 #> [12784,]  263  279  265 #> [12785,]  262  278  264 #> [12786,]  263  279  265 #> [12787,]  262  278  264 #> [12788,]  262  278  264 #> [12789,]  262  278  264 #> [12790,]  262  278  264 #> [12791,]  262  278  264 #> [12792,]  262  278  264 #> [12793,]  263  279  265 #> [12794,]  263  279  265 #> [12795,]  262  278  264 #> [12796,]  262  278  264 #> [12797,]  263  279  265 #> [12798,]  263  279  265 #> [12799,]  262  278  264 #> [12800,]  263  279  265 #> [12801,]  265  281  267 #> [12802,]  264  280  267 #> [12803,]  264  280  266 #> [12804,]  264  280  266 #> [12805,]  265  281  267 #> [12806,]  264  280  267 #> [12807,]  264  280  266 #> [12808,]  264  280  266 #> [12809,]  264  280  267 #> [12810,]  265  281  267 #> [12811,]  265  281  267 #> [12812,]  265  281  266 #> [12813,]  264  280  267 #> [12814,]  265  281  267 #> [12815,]  265  281  267 #> [12816,]  264  280  267 #> [12817,]  265  281  267 #> [12818,]  265  281  267 #> [12819,]  264  280  267 #> [12820,]  264  280  267 #> [12821,]  264  280  267 #> [12822,]  265  281  267 #> [12823,]  264  280  267 #> [12824,]  264  280  267 #> [12825,]  264  280  266 #> [12826,]  265  281  267 #> [12827,]  265  281  267 #> [12828,]  264  280  267 #> [12829,]  264  280  267 #> [12830,]  264  280  267 #> [12831,]  265  281  266 #> [12832,]  265  281  267 #> [12833,]  264  280  267 #> [12834,]  264  280  267 #> [12835,]  264  280  267 #> [12836,]  264  280  267 #> [12837,]  264  280  267 #> [12838,]  265  281  267 #> [12839,]  264  280  267 #> [12840,]  264  280  267 #> [12841,]  264  280  267 #> [12842,]  264  280  267 #> [12843,]  265  281  267 #> [12844,]  264  280  267 #> [12845,]  264  280  267 #> [12846,]  264  280  267 #> [12847,]  265  281  267 #> [12848,]  264  280  267 #> [12849,]  264  280  267 #> [12850,]  264  280  267 #> [12851,]  264  280  267 #> [12852,]  265  281  266 #> [12853,]  264  280  267 #> [12854,]  264  280  267 #> [12855,]  264  280  267 #> [12856,]  264  280  267 #> [12857,]  264  280  266 #> [12858,]  265  281  267 #> [12859,]  265  281  266 #> [12860,]  264  280  266 #> [12861,]  265  281  267 #> [12862,]  264  280  267 #> [12863,]  264  280  267 #> [12864,]  264  280  267 #> [12865,]  264  280  267 #> [12866,]  265  281  267 #> [12867,]  264  280  267 #> [12868,]  264  280  266 #> [12869,]  264  280  267 #> [12870,]  265  281  267 #> [12871,]  265  281  267 #> [12872,]  264  280  267 #> [12873,]  264  280  267 #> [12874,]  264  280  267 #> [12875,]  265  281  267 #> [12876,]  264  280  267 #> [12877,]  265  281  267 #> [12878,]  264  280  267 #> [12879,]  265  281  267 #> [12880,]  264  280  267 #> [12881,]  264  280  267 #> [12882,]  264  280  267 #> [12883,]  264  280  267 #> [12884,]  264  280  267 #> [12885,]  264  280  267 #> [12886,]  264  280  266 #> [12887,]  265  281  267 #> [12888,]  264  280  267 #> [12889,]  264  280  267 #> [12890,]  265  281  267 #> [12891,]  265  281  267 #> [12892,]  265  281  267 #> [12893,]  264  280  267 #> [12894,]  264  280  267 #> [12895,]  265  281  267 #> [12896,]  264  280  266 #> [12897,]  264  280  266 #> [12898,]  264  280  267 #> [12899,]  264  280  267 #> [12900,]  265  281  267 #> [12901,]  267  283  269 #> [12902,]  266  282  268 #> [12903,]  267  282  268 #> [12904,]  267  282  268 #> [12905,]  267  282  268 #> [12906,]  266  283  269 #> [12907,]  267  282  268 #> [12908,]  267  283  269 #> [12909,]  267  283  269 #> [12910,]  267  282  268 #> [12911,]  266  282  268 #> [12912,]  266  283  269 #> [12913,]  267  282  268 #> [12914,]  267  283  269 #> [12915,]  266  283  269 #> [12916,]  267  282  268 #> [12917,]  266  282  268 #> [12918,]  266  282  268 #> [12919,]  266  282  268 #> [12920,]  267  283  269 #> [12921,]  266  282  268 #> [12922,]  267  282  268 #> [12923,]  266  282  268 #> [12924,]  267  282  268 #> [12925,]  267  282  268 #> [12926,]  266  283  269 #> [12927,]  267  282  268 #> [12928,]  267  282  268 #> [12929,]  266  282  268 #> [12930,]  266  282  268 #> [12931,]  266  282  268 #> [12932,]  266  282  268 #> [12933,]  267  283  269 #> [12934,]  266  282  268 #> [12935,]  266  282  268 #> [12936,]  267  282  268 #> [12937,]  266  282  268 #> [12938,]  266  282  268 #> [12939,]  267  282  268 #> [12940,]  267  282  268 #> [12941,]  267  282  268 #> [12942,]  266  282  268 #> [12943,]  266  283  269 #> [12944,]  266  282  268 #> [12945,]  267  283  269 #> [12946,]  266  283  269 #> [12947,]  266  282  268 #> [12948,]  266  282  268 #> [12949,]  267  282  268 #> [12950,]  267  283  269 #> [12951,]  266  283  269 #> [12952,]  267  282  268 #> [12953,]  267  283  269 #> [12954,]  267  282  268 #> [12955,]  267  283  269 #> [12956,]  266  283  269 #> [12957,]  267  283  269 #> [12958,]  267  283  269 #> [12959,]  267  282  268 #> [12960,]  266  283  269 #> [12961,]  266  283  269 #> [12962,]  266  282  268 #> [12963,]  266  282  268 #> [12964,]  266  283  269 #> [12965,]  266  283  269 #> [12966,]  266  283  269 #> [12967,]  267  282  268 #> [12968,]  266  283  269 #> [12969,]  266  282  268 #> [12970,]  266  282  268 #> [12971,]  267  283  269 #> [12972,]  267  283  269 #> [12973,]  267  283  269 #> [12974,]  267  283  269 #> [12975,]  266  283  269 #> [12976,]  267  283  269 #> [12977,]  267  282  268 #> [12978,]  266  283  269 #> [12979,]  266  282  268 #> [12980,]  267  282  268 #> [12981,]  266  283  269 #> [12982,]  266  282  268 #> [12983,]  267  282  268 #> [12984,]  267  282  268 #> [12985,]  267  282  268 #> [12986,]  267  282  268 #> [12987,]  267  282  268 #> [12988,]  267  282  268 #> [12989,]  266  282  268 #> [12990,]  267  282  268 #> [12991,]  267  282  268 #> [12992,]  266  283  269 #> [12993,]  266  282  268 #> [12994,]  266  283  269 #> [12995,]  266  282  268 #> [12996,]  266  283  269 #> [12997,]  266  283  269 #> [12998,]  266  282  268 #> [12999,]  267  282  268 #> [13000,]  266  282  268 #> [13001,]  269  285  271 #> [13002,]  268  284  270 #> [13003,]  268  284  270 #> [13004,]  268  284  270 #> [13005,]  268  284  270 #> [13006,]  268  284  270 #> [13007,]  268  284  270 #> [13008,]  268  284  270 #> [13009,]  268  284  270 #> [13010,]  268  284  270 #> [13011,]  268  284  270 #> [13012,]  268  284  270 #> [13013,]  268  284  270 #> [13014,]  269  285  271 #> [13015,]  268  284  270 #> [13016,]  269  285  271 #> [13017,]  268  284  270 #> [13018,]  268  284  270 #> [13019,]  268  284  270 #> [13020,]  268  284  270 #> [13021,]  268  284  270 #> [13022,]  268  284  270 #> [13023,]  268  284  270 #> [13024,]  268  284  270 #> [13025,]  268  284  270 #> [13026,]  268  284  270 #> [13027,]  268  284  270 #> [13028,]  268  284  270 #> [13029,]  268  284  270 #> [13030,]  268  284  270 #> [13031,]  268  284  270 #> [13032,]  268  284  270 #> [13033,]  268  284  270 #> [13034,]  268  284  270 #> [13035,]  268  284  270 #> [13036,]  268  284  270 #> [13037,]  268  284  270 #> [13038,]  268  284  270 #> [13039,]  268  284  270 #> [13040,]  268  284  270 #> [13041,]  269  285  271 #> [13042,]  268  284  270 #> [13043,]  268  284  270 #> [13044,]  268  284  270 #> [13045,]  268  284  270 #> [13046,]  268  284  270 #> [13047,]  268  284  270 #> [13048,]  268  284  270 #> [13049,]  268  284  270 #> [13050,]  268  284  270 #> [13051,]  268  284  270 #> [13052,]  268  284  270 #> [13053,]  268  284  270 #> [13054,]  268  284  270 #> [13055,]  268  284  270 #> [13056,]  268  284  270 #> [13057,]  268  284  270 #> [13058,]  268  284  270 #> [13059,]  268  284  270 #> [13060,]  268  284  270 #> [13061,]  268  284  270 #> [13062,]  268  284  270 #> [13063,]  268  284  270 #> [13064,]  268  284  270 #> [13065,]  268  284  270 #> [13066,]  268  284  270 #> [13067,]  268  284  270 #> [13068,]  268  284  270 #> [13069,]  268  284  270 #> [13070,]  268  284  270 #> [13071,]  268  284  270 #> [13072,]  268  284  270 #> [13073,]  268  284  270 #> [13074,]  268  284  270 #> [13075,]  268  284  270 #> [13076,]  268  284  270 #> [13077,]  268  284  270 #> [13078,]  268  284  270 #> [13079,]  268  284  270 #> [13080,]  268  284  270 #> [13081,]  268  284  270 #> [13082,]  268  284  270 #> [13083,]  268  284  270 #> [13084,]  268  284  270 #> [13085,]  268  284  270 #> [13086,]  268  284  270 #> [13087,]  268  284  270 #> [13088,]  268  284  270 #> [13089,]  268  284  270 #> [13090,]  268  284  270 #> [13091,]  268  284  270 #> [13092,]  268  284  270 #> [13093,]  268  284  270 #> [13094,]  268  284  270 #> [13095,]  268  284  270 #> [13096,]  268  284  270 #> [13097,]  268  284  270 #> [13098,]  268  284  270 #> [13099,]  269  285  271 #> [13100,]  268  284  270 #> [13101,]  271  287  273 #> [13102,]  271  287  273 #> [13103,]  270  286  272 #> [13104,]  271  287  273 #> [13105,]  271  287  273 #> [13106,]  271  287  273 #> [13107,]  270  286  272 #> [13108,]  270  286  272 #> [13109,]  271  287  273 #> [13110,]  271  287  273 #> [13111,]  271  287  273 #> [13112,]  271  287  273 #> [13113,]  270  286  272 #> [13114,]  271  287  273 #> [13115,]  271  287  273 #> [13116,]  270  286  272 #> [13117,]  271  287  273 #> [13118,]  271  287  273 #> [13119,]  271  287  273 #> [13120,]  270  286  272 #> [13121,]  271  287  273 #> [13122,]  270  286  272 #> [13123,]  271  287  273 #> [13124,]  270  286  272 #> [13125,]  270  286  272 #> [13126,]  271  287  273 #> [13127,]  271  287  273 #> [13128,]  271  287  273 #> [13129,]  271  287  273 #> [13130,]  271  287  273 #> [13131,]  271  287  273 #> [13132,]  271  287  273 #> [13133,]  271  287  273 #> [13134,]  271  287  273 #> [13135,]  271  287  273 #> [13136,]  271  287  273 #> [13137,]  271  287  273 #> [13138,]  271  287  273 #> [13139,]  270  286  272 #> [13140,]  270  286  272 #> [13141,]  271  287  273 #> [13142,]  271  287  273 #> [13143,]  271  287  273 #> [13144,]  270  286  272 #> [13145,]  271  287  273 #> [13146,]  270  286  272 #> [13147,]  271  287  273 #> [13148,]  271  287  273 #> [13149,]  270  286  272 #> [13150,]  270  286  272 #> [13151,]  271  287  273 #> [13152,]  271  287  273 #> [13153,]  270  286  272 #> [13154,]  270  286  272 #> [13155,]  270  286  272 #> [13156,]  270  286  272 #> [13157,]  271  287  273 #> [13158,]  271  287  273 #> [13159,]  270  286  272 #> [13160,]  271  287  273 #> [13161,]  271  287  273 #> [13162,]  271  287  273 #> [13163,]  270  286  272 #> [13164,]  271  287  273 #> [13165,]  270  286  272 #> [13166,]  270  286  272 #> [13167,]  271  287  273 #> [13168,]  271  287  273 #> [13169,]  271  287  273 #> [13170,]  270  286  272 #> [13171,]  271  287  273 #> [13172,]  270  286  272 #> [13173,]  271  287  273 #> [13174,]  271  287  273 #> [13175,]  271  287  273 #> [13176,]  271  287  273 #> [13177,]  271  287  273 #> [13178,]  270  286  272 #> [13179,]  271  287  273 #> [13180,]  271  287  273 #> [13181,]  271  287  273 #> [13182,]  271  287  273 #> [13183,]  271  287  273 #> [13184,]  270  286  272 #> [13185,]  271  287  273 #> [13186,]  270  286  272 #> [13187,]  271  287  273 #> [13188,]  271  287  273 #> [13189,]  270  286  272 #> [13190,]  270  286  272 #> [13191,]  271  287  273 #> [13192,]  271  287  273 #> [13193,]  271  287  273 #> [13194,]  271  287  273 #> [13195,]  271  287  273 #> [13196,]  271  287  273 #> [13197,]  271  287  273 #> [13198,]  270  286  272 #> [13199,]  271  287  273 #> [13200,]  270  286  272 #> [13201,]  273  289  275 #> [13202,]  272  288  274 #> [13203,]  273  289  275 #> [13204,]  273  289  275 #> [13205,]  273  289  275 #> [13206,]  272  288  274 #> [13207,]  273  289  275 #> [13208,]  273  289  275 #> [13209,]  273  289  275 #> [13210,]  273  289  275 #> [13211,]  272  288  274 #> [13212,]  272  288  274 #> [13213,]  273  289  275 #> [13214,]  273  289  275 #> [13215,]  272  288  274 #> [13216,]  273  289  275 #> [13217,]  272  288  274 #> [13218,]  272  288  274 #> [13219,]  272  288  274 #> [13220,]  273  289  275 #> [13221,]  272  288  274 #> [13222,]  273  289  275 #> [13223,]  272  288  274 #> [13224,]  273  289  275 #> [13225,]  273  289  275 #> [13226,]  272  288  274 #> [13227,]  273  289  275 #> [13228,]  273  289  275 #> [13229,]  272  288  274 #> [13230,]  272  288  274 #> [13231,]  272  288  274 #> [13232,]  272  288  274 #> [13233,]  273  289  275 #> [13234,]  272  288  274 #> [13235,]  272  288  274 #> [13236,]  273  289  275 #> [13237,]  272  288  274 #> [13238,]  272  288  274 #> [13239,]  273  289  275 #> [13240,]  273  289  275 #> [13241,]  273  289  275 #> [13242,]  272  288  274 #> [13243,]  272  288  274 #> [13244,]  272  288  274 #> [13245,]  273  289  275 #> [13246,]  272  288  274 #> [13247,]  272  288  274 #> [13248,]  272  288  274 #> [13249,]  273  289  275 #> [13250,]  273  289  275 #> [13251,]  272  288  274 #> [13252,]  273  289  275 #> [13253,]  273  289  275 #> [13254,]  273  289  275 #> [13255,]  273  289  275 #> [13256,]  272  288  274 #> [13257,]  273  289  275 #> [13258,]  273  289  275 #> [13259,]  273  289  275 #> [13260,]  272  288  274 #> [13261,]  272  288  274 #> [13262,]  272  288  274 #> [13263,]  272  288  274 #> [13264,]  272  288  274 #> [13265,]  272  288  274 #> [13266,]  272  288  274 #> [13267,]  273  289  275 #> [13268,]  272  288  274 #> [13269,]  272  288  274 #> [13270,]  272  288  274 #> [13271,]  273  289  275 #> [13272,]  273  289  275 #> [13273,]  273  289  275 #> [13274,]  273  289  275 #> [13275,]  272  288  274 #> [13276,]  273  289  275 #> [13277,]  273  289  275 #> [13278,]  272  288  274 #> [13279,]  272  288  274 #> [13280,]  273  289  275 #> [13281,]  272  288  274 #> [13282,]  272  288  274 #> [13283,]  272  288  274 #> [13284,]  273  289  275 #> [13285,]  273  289  275 #> [13286,]  273  289  275 #> [13287,]  273  289  275 #> [13288,]  273  289  275 #> [13289,]  272  288  274 #> [13290,]  273  289  275 #> [13291,]  273  289  275 #> [13292,]  272  288  274 #> [13293,]  272  288  274 #> [13294,]  272  288  274 #> [13295,]  272  288  274 #> [13296,]  272  288  274 #> [13297,]  272  288  274 #> [13298,]  272  288  274 #> [13299,]  273  289  275 #> [13300,]  272  288  274 #> [13301,]  275  291  277 #> [13302,]  275  291  277 #> [13303,]  275  291  277 #> [13304,]  274  290  276 #> [13305,]  275  291  277 #> [13306,]  275  291  278 #> [13307,]  275  291  277 #> [13308,]  274  290  276 #> [13309,]  274  290  276 #> [13310,]  275  291  278 #> [13311,]  275  291  278 #> [13312,]  275  291  278 #> [13313,]  275  291  277 #> [13314,]  275  291  278 #> [13315,]  275  291  278 #> [13316,]  275  291  277 #> [13317,]  274  290  276 #> [13318,]  275  291  278 #> [13319,]  275  291  278 #> [13320,]  275  291  277 #> [13321,]  275  291  278 #> [13322,]  275  291  277 #> [13323,]  275  291  278 #> [13324,]  275  291  277 #> [13325,]  275  291  277 #> [13326,]  275  291  278 #> [13327,]  274  290  276 #> [13328,]  275  291  277 #> [13329,]  275  291  277 #> [13330,]  275  291  278 #> [13331,]  275  291  278 #> [13332,]  275  291  278 #> [13333,]  275  291  278 #> [13334,]  275  291  278 #> [13335,]  275  291  278 #> [13336,]  275  291  278 #> [13337,]  275  291  277 #> [13338,]  275  291  278 #> [13339,]  275  291  277 #> [13340,]  275  291  277 #> [13341,]  275  291  278 #> [13342,]  275  291  278 #> [13343,]  275  291  277 #> [13344,]  274  290  276 #> [13345,]  275  291  277 #> [13346,]  275  291  277 #> [13347,]  275  291  277 #> [13348,]  275  291  278 #> [13349,]  275  291  277 #> [13350,]  275  291  277 #> [13351,]  275  291  277 #> [13352,]  274  290  276 #> [13353,]  275  291  277 #> [13354,]  275  291  277 #> [13355,]  275  291  277 #> [13356,]  275  291  277 #> [13357,]  275  291  277 #> [13358,]  275  291  278 #> [13359,]  275  291  277 #> [13360,]  275  291  278 #> [13361,]  275  291  278 #> [13362,]  275  291  278 #> [13363,]  275  291  277 #> [13364,]  275  291  278 #> [13365,]  275  291  277 #> [13366,]  274  290  276 #> [13367,]  275  291  278 #> [13368,]  275  291  278 #> [13369,]  275  291  278 #> [13370,]  275  291  277 #> [13371,]  275  291  277 #> [13372,]  275  291  277 #> [13373,]  275  291  278 #> [13374,]  275  291  278 #> [13375,]  275  291  278 #> [13376,]  275  291  277 #> [13377,]  275  291  277 #> [13378,]  275  291  277 #> [13379,]  275  291  277 #> [13380,]  275  291  278 #> [13381,]  274  290  276 #> [13382,]  274  290  276 #> [13383,]  275  291  277 #> [13384,]  275  291  277 #> [13385,]  275  291  278 #> [13386,]  275  291  277 #> [13387,]  274  290  276 #> [13388,]  275  291  278 #> [13389,]  275  291  277 #> [13390,]  274  290  276 #> [13391,]  275  291  278 #> [13392,]  274  290  276 #> [13393,]  275  291  278 #> [13394,]  275  291  277 #> [13395,]  274  290  276 #> [13396,]  275  291  278 #> [13397,]  275  291  278 #> [13398,]  275  291  277 #> [13399,]  274  290  276 #> [13400,]  275  291  277 #> [13401,]  277  293  280 #> [13402,]  276  292  280 #> [13403,]  276  292  279 #> [13404,]  276  292  280 #> [13405,]  277  293  279 #> [13406,]  276  292  279 #> [13407,]  276  292  280 #> [13408,]  276  292  280 #> [13409,]  276  292  280 #> [13410,]  277  293  280 #> [13411,]  277  293  279 #> [13412,]  277  293  279 #> [13413,]  276  292  280 #> [13414,]  277  293  279 #> [13415,]  277  293  280 #> [13416,]  276  292  280 #> [13417,]  277  293  280 #> [13418,]  277  293  280 #> [13419,]  276  292  279 #> [13420,]  276  292  279 #> [13421,]  276  292  280 #> [13422,]  277  293  279 #> [13423,]  276  292  280 #> [13424,]  276  292  279 #> [13425,]  276  292  280 #> [13426,]  277  293  279 #> [13427,]  277  293  280 #> [13428,]  276  292  280 #> [13429,]  276  292  279 #> [13430,]  276  292  279 #> [13431,]  277  293  280 #> [13432,]  277  293  279 #> [13433,]  276  292  280 #> [13434,]  276  292  279 #> [13435,]  276  292  279 #> [13436,]  276  292  279 #> [13437,]  276  292  280 #> [13438,]  277  293  280 #> [13439,]  276  292  280 #> [13440,]  276  292  279 #> [13441,]  276  292  279 #> [13442,]  276  292  279 #> [13443,]  277  293  280 #> [13444,]  276  292  280 #> [13445,]  276  292  280 #> [13446,]  276  292  280 #> [13447,]  277  293  280 #> [13448,]  276  292  279 #> [13449,]  276  292  280 #> [13450,]  276  292  280 #> [13451,]  276  292  279 #> [13452,]  277  293  279 #> [13453,]  276  292  280 #> [13454,]  276  292  279 #> [13455,]  276  292  279 #> [13456,]  276  292  280 #> [13457,]  276  292  279 #> [13458,]  277  293  280 #> [13459,]  277  293  280 #> [13460,]  276  292  279 #> [13461,]  277  293  280 #> [13462,]  276  292  279 #> [13463,]  276  292  279 #> [13464,]  276  292  280 #> [13465,]  276  292  280 #> [13466,]  277  293  279 #> [13467,]  276  292  279 #> [13468,]  276  292  279 #> [13469,]  276  292  279 #> [13470,]  277  293  280 #> [13471,]  277  293  280 #> [13472,]  276  292  280 #> [13473,]  276  292  280 #> [13474,]  276  292  280 #> [13475,]  277  293  280 #> [13476,]  276  292  280 #> [13477,]  277  293  280 #> [13478,]  276  292  279 #> [13479,]  277  293  280 #> [13480,]  276  292  279 #> [13481,]  276  292  279 #> [13482,]  276  292  280 #> [13483,]  276  292  279 #> [13484,]  276  292  280 #> [13485,]  276  292  280 #> [13486,]  276  292  280 #> [13487,]  277  293  280 #> [13488,]  276  292  280 #> [13489,]  276  292  279 #> [13490,]  277  293  280 #> [13491,]  277  293  279 #> [13492,]  277  293  280 #> [13493,]  276  292  279 #> [13494,]  276  292  280 #> [13495,]  277  293  280 #> [13496,]  276  292  280 #> [13497,]  276  292  280 #> [13498,]  276  292  279 #> [13499,]  276  292  279 #> [13500,]  277  293  280 #> [13501,]  278  296  282 #> [13502,]  278  296  282 #> [13503,]  278  295  283 #> [13504,]  279  294  281 #> [13505,]  278  295  283 #> [13506,]  278  296  282 #> [13507,]  279  294  281 #> [13508,]  278  295  283 #> [13509,]  278  295  283 #> [13510,]  279  294  281 #> [13511,]  278  295  283 #> [13512,]  278  295  283 #> [13513,]  279  294  281 #> [13514,]  278  296  282 #> [13515,]  279  294  281 #> [13516,]  279  294  281 #> [13517,]  279  294  281 #> [13518,]  279  294  281 #> [13519,]  278  295  283 #> [13520,]  278  295  283 #> [13521,]  279  294  281 #> [13522,]  278  296  282 #> [13523,]  279  294  281 #> [13524,]  278  295  283 #> [13525,]  279  294  281 #> [13526,]  278  296  282 #> [13527,]  279  294  281 #> [13528,]  279  294  281 #> [13529,]  278  296  282 #> [13530,]  278  295  283 #> [13531,]  278  295  283 #> [13532,]  278  295  283 #> [13533,]  278  296  282 #> [13534,]  278  295  283 #> [13535,]  278  296  282 #> [13536,]  278  295  283 #> [13537,]  278  296  282 #> [13538,]  278  295  283 #> [13539,]  279  294  281 #> [13540,]  278  295  283 #> [13541,]  278  296  282 #> [13542,]  278  295  283 #> [13543,]  279  294  281 #> [13544,]  278  296  282 #> [13545,]  279  294  281 #> [13546,]  279  294  281 #> [13547,]  279  294  281 #> [13548,]  278  295  283 #> [13549,]  278  295  283 #> [13550,]  278  296  282 #> [13551,]  278  295  283 #> [13552,]  278  296  282 #> [13553,]  279  294  281 #> [13554,]  278  295  283 #> [13555,]  278  295  283 #> [13556,]  279  294  281 #> [13557,]  278  295  283 #> [13558,]  278  296  282 #> [13559,]  278  296  282 #> [13560,]  278  295  283 #> [13561,]  279  294  281 #> [13562,]  278  295  283 #> [13563,]  278  295  283 #> [13564,]  279  294  281 #> [13565,]  278  295  283 #> [13566,]  278  295  283 #> [13567,]  278  295  283 #> [13568,]  278  296  282 #> [13569,]  278  295  283 #> [13570,]  278  296  282 #> [13571,]  279  294  281 #> [13572,]  279  294  281 #> [13573,]  279  294  281 #> [13574,]  279  294  281 #> [13575,]  279  294  281 #> [13576,]  279  294  281 #> [13577,]  279  294  281 #> [13578,]  278  295  283 #> [13579,]  278  296  282 #> [13580,]  278  295  283 #> [13581,]  278  296  282 #> [13582,]  279  294  281 #> [13583,]  278  296  282 #> [13584,]  279  294  281 #> [13585,]  278  295  283 #> [13586,]  278  296  282 #> [13587,]  278  295  283 #> [13588,]  279  294  281 #> [13589,]  278  295  283 #> [13590,]  278  296  282 #> [13591,]  278  295  283 #> [13592,]  278  295  283 #> [13593,]  278  296  282 #> [13594,]  279  294  281 #> [13595,]  279  294  281 #> [13596,]  278  296  282 #> [13597,]  278  295  283 #> [13598,]  278  295  283 #> [13599,]  278  296  282 #> [13600,]  279  294  281 #> [13601,]  280  297  284 #> [13602,]  280  297  284 #> [13603,]  280  297  284 #> [13604,]  280  297  284 #> [13605,]  280  297  284 #> [13606,]  280  297  284 #> [13607,]  280  297  284 #> [13608,]  280  297  284 #> [13609,]  280  297  284 #> [13610,]  280  297  284 #> [13611,]  280  297  284 #> [13612,]  280  297  284 #> [13613,]  280  297  284 #> [13614,]  280  297  284 #> [13615,]  280  297  284 #> [13616,]  280  297  284 #> [13617,]  280  297  284 #> [13618,]  280  297  284 #> [13619,]  280  297  284 #> [13620,]  281  298  285 #> [13621,]  280  297  284 #> [13622,]  280  297  284 #> [13623,]  280  297  284 #> [13624,]  281  298  285 #> [13625,]  280  297  284 #> [13626,]  280  297  284 #> [13627,]  280  297  284 #> [13628,]  281  298  285 #> [13629,]  280  297  284 #> [13630,]  280  297  284 #> [13631,]  280  297  284 #> [13632,]  280  297  284 #> [13633,]  280  297  284 #> [13634,]  280  297  284 #> [13635,]  280  297  284 #> [13636,]  280  297  284 #> [13637,]  280  297  284 #> [13638,]  280  297  284 #> [13639,]  280  297  284 #> [13640,]  280  297  284 #> [13641,]  280  297  284 #> [13642,]  280  297  284 #> [13643,]  280  297  284 #> [13644,]  280  297  284 #> [13645,]  280  297  284 #> [13646,]  280  297  284 #> [13647,]  280  297  284 #> [13648,]  280  297  284 #> [13649,]  280  297  284 #> [13650,]  280  297  284 #> [13651,]  280  297  284 #> [13652,]  281  298  285 #> [13653,]  280  297  284 #> [13654,]  280  297  284 #> [13655,]  280  297  284 #> [13656,]  280  297  284 #> [13657,]  280  297  284 #> [13658,]  280  297  284 #> [13659,]  280  297  284 #> [13660,]  280  297  284 #> [13661,]  280  297  284 #> [13662,]  280  297  284 #> [13663,]  280  297  284 #> [13664,]  280  297  284 #> [13665,]  280  297  284 #> [13666,]  280  297  284 #> [13667,]  280  297  284 #> [13668,]  280  297  284 #> [13669,]  280  297  284 #> [13670,]  280  297  284 #> [13671,]  280  297  284 #> [13672,]  280  297  284 #> [13673,]  280  297  284 #> [13674,]  280  297  284 #> [13675,]  280  297  284 #> [13676,]  281  298  285 #> [13677,]  280  297  284 #> [13678,]  280  297  284 #> [13679,]  280  297  284 #> [13680,]  280  297  284 #> [13681,]  280  297  284 #> [13682,]  280  297  284 #> [13683,]  280  297  284 #> [13684,]  280  297  284 #> [13685,]  280  297  284 #> [13686,]  281  298  285 #> [13687,]  280  297  284 #> [13688,]  280  297  284 #> [13689,]  280  297  284 #> [13690,]  280  297  284 #> [13691,]  280  297  284 #> [13692,]  280  297  284 #> [13693,]  280  297  284 #> [13694,]  280  297  284 #> [13695,]  280  297  284 #> [13696,]  280  297  284 #> [13697,]  280  297  284 #> [13698,]  280  297  284 #> [13699,]  280  297  284 #> [13700,]  280  297  284 #> [13701,]  282  299  287 #> [13702,]  283  300  287 #> [13703,]  283  300  286 #> [13704,]  282  299  287 #> [13705,]  283  300  287 #> [13706,]  283  300  287 #> [13707,]  283  300  287 #> [13708,]  282  299  287 #> [13709,]  282  299  287 #> [13710,]  283  300  287 #> [13711,]  282  299  286 #> [13712,]  283  300  286 #> [13713,]  282  299  287 #> [13714,]  282  299  286 #> [13715,]  282  299  287 #> [13716,]  283  300  287 #> [13717,]  282  299  287 #> [13718,]  283  300  287 #> [13719,]  283  300  286 #> [13720,]  283  300  286 #> [13721,]  282  299  287 #> [13722,]  282  299  286 #> [13723,]  283  300  287 #> [13724,]  283  300  287 #> [13725,]  283  300  287 #> [13726,]  283  300  286 #> [13727,]  282  299  287 #> [13728,]  283  300  287 #> [13729,]  283  300  286 #> [13730,]  282  299  287 #> [13731,]  283  300  287 #> [13732,]  283  300  286 #> [13733,]  283  300  287 #> [13734,]  283  300  287 #> [13735,]  282  299  287 #> [13736,]  283  300  286 #> [13737,]  283  300  287 #> [13738,]  283  300  287 #> [13739,]  283  300  287 #> [13740,]  283  300  286 #> [13741,]  283  300  286 #> [13742,]  283  300  286 #> [13743,]  282  299  287 #> [13744,]  282  299  287 #> [13745,]  282  299  287 #> [13746,]  282  299  287 #> [13747,]  283  300  287 #> [13748,]  283  300  286 #> [13749,]  282  299  287 #> [13750,]  283  300  287 #> [13751,]  283  300  286 #> [13752,]  282  299  287 #> [13753,]  283  300  287 #> [13754,]  282  299  286 #> [13755,]  282  299  287 #> [13756,]  283  300  287 #> [13757,]  283  300  287 #> [13758,]  282  299  287 #> [13759,]  283  300  287 #> [13760,]  283  300  286 #> [13761,]  283  300  287 #> [13762,]  282  299  286 #> [13763,]  283  300  286 #> [13764,]  283  300  287 #> [13765,]  283  300  287 #> [13766,]  282  299  286 #> [13767,]  282  299  287 #> [13768,]  282  299  286 #> [13769,]  282  299  286 #> [13770,]  283  300  287 #> [13771,]  283  300  287 #> [13772,]  283  300  287 #> [13773,]  283  300  287 #> [13774,]  282  299  287 #> [13775,]  283  300  287 #> [13776,]  283  300  287 #> [13777,]  283  300  287 #> [13778,]  283  300  287 #> [13779,]  282  299  287 #> [13780,]  282  299  286 #> [13781,]  282  299  286 #> [13782,]  282  299  287 #> [13783,]  282  299  286 #> [13784,]  283  300  287 #> [13785,]  282  299  287 #> [13786,]  283  300  287 #> [13787,]  282  299  287 #> [13788,]  282  299  287 #> [13789,]  282  299  286 #> [13790,]  282  299  287 #> [13791,]  282  299  286 #> [13792,]  282  299  287 #> [13793,]  283  300  287 #> [13794,]  283  300  287 #> [13795,]  282  299  287 #> [13796,]  282  299  287 #> [13797,]  283  300  287 #> [13798,]  283  300  287 #> [13799,]  282  299  287 #> [13800,]  283  300  287 #> [13801,]  284  301  288 #> [13802,]  285  302  289 #> [13803,]  284  301  288 #> [13804,]  284  301  288 #> [13805,]  285  302  290 #> [13806,]  284  301  288 #> [13807,]  285  302  289 #> [13808,]  284  301  288 #> [13809,]  285  302  290 #> [13810,]  285  302  289 #> [13811,]  284  301  288 #> [13812,]  285  302  290 #> [13813,]  285  302  289 #> [13814,]  284  301  288 #> [13815,]  284  301  288 #> [13816,]  284  301  288 #> [13817,]  285  302  289 #> [13818,]  285  302  289 #> [13819,]  284  301  288 #> [13820,]  285  302  290 #> [13821,]  285  302  289 #> [13822,]  285  302  289 #> [13823,]  285  302  289 #> [13824,]  285  302  289 #> [13825,]  284  301  288 #> [13826,]  284  301  288 #> [13827,]  285  302  290 #> [13828,]  284  301  288 #> [13829,]  285  302  289 #> [13830,]  285  302  289 #> [13831,]  285  302  289 #> [13832,]  285  302  289 #> [13833,]  285  302  290 #> [13834,]  284  301  288 #> [13835,]  284  301  288 #> [13836,]  285  302  289 #> [13837,]  284  301  288 #> [13838,]  284  301  288 #> [13839,]  284  301  288 #> [13840,]  285  302  289 #> [13841,]  285  302  290 #> [13842,]  284  301  288 #> [13843,]  284  301  288 #> [13844,]  285  302  289 #> [13845,]  284  301  288 #> [13846,]  284  301  288 #> [13847,]  285  302  289 #> [13848,]  285  302  289 #> [13849,]  284  301  288 #> [13850,]  285  302  290 #> [13851,]  284  301  288 #> [13852,]  284  301  288 #> [13853,]  285  302  290 #> [13854,]  285  302  289 #> [13855,]  284  301  288 #> [13856,]  284  301  288 #> [13857,]  284  301  288 #> [13858,]  285  302  290 #> [13859,]  284  301  288 #> [13860,]  285  302  290 #> [13861,]  285  302  290 #> [13862,]  284  301  288 #> [13863,]  285  302  290 #> [13864,]  284  301  288 #> [13865,]  284  301  288 #> [13866,]  284  301  288 #> [13867,]  284  301  288 #> [13868,]  284  301  288 #> [13869,]  284  301  288 #> [13870,]  285  302  289 #> [13871,]  285  302  290 #> [13872,]  284  301  288 #> [13873,]  284  301  288 #> [13874,]  285  302  290 #> [13875,]  285  302  290 #> [13876,]  285  302  290 #> [13877,]  284  301  288 #> [13878,]  285  302  290 #> [13879,]  284  301  288 #> [13880,]  285  302  289 #> [13881,]  285  302  290 #> [13882,]  284  301  288 #> [13883,]  285  302  289 #> [13884,]  285  302  290 #> [13885,]  284  301  288 #> [13886,]  285  302  289 #> [13887,]  285  302  290 #> [13888,]  285  302  290 #> [13889,]  284  301  288 #> [13890,]  285  302  290 #> [13891,]  284  301  288 #> [13892,]  285  302  290 #> [13893,]  285  302  289 #> [13894,]  284  301  288 #> [13895,]  285  302  289 #> [13896,]  284  301  288 #> [13897,]  284  301  288 #> [13898,]  284  301  288 #> [13899,]  284  301  288 #> [13900,]  284  301  288 #> [13901,]  287  304  292 #> [13902,]  286  303  291 #> [13903,]  287  304  292 #> [13904,]  287  304  292 #> [13905,]  287  304  292 #> [13906,]  286  303  291 #> [13907,]  287  304  292 #> [13908,]  287  304  292 #> [13909,]  287  304  292 #> [13910,]  287  304  292 #> [13911,]  286  303  291 #> [13912,]  286  303  291 #> [13913,]  287  304  292 #> [13914,]  287  304  292 #> [13915,]  286  303  291 #> [13916,]  287  304  292 #> [13917,]  286  303  291 #> [13918,]  287  304  292 #> [13919,]  287  304  292 #> [13920,]  287  304  292 #> [13921,]  287  304  292 #> [13922,]  287  304  292 #> [13923,]  286  303  291 #> [13924,]  287  304  292 #> [13925,]  287  304  292 #> [13926,]  287  304  292 #> [13927,]  287  304  292 #> [13928,]  287  304  292 #> [13929,]  286  303  291 #> [13930,]  287  304  292 #> [13931,]  286  303  291 #> [13932,]  287  304  292 #> [13933,]  287  304  292 #> [13934,]  286  303  291 #> [13935,]  287  304  292 #> [13936,]  287  304  292 #> [13937,]  286  303  291 #> [13938,]  287  304  292 #> [13939,]  287  304  292 #> [13940,]  287  304  292 #> [13941,]  287  304  292 #> [13942,]  286  303  291 #> [13943,]  286  303  291 #> [13944,]  286  303  291 #> [13945,]  287  304  292 #> [13946,]  287  304  292 #> [13947,]  286  303  291 #> [13948,]  286  303  291 #> [13949,]  287  304  292 #> [13950,]  287  304  292 #> [13951,]  287  304  292 #> [13952,]  287  304  292 #> [13953,]  287  304  292 #> [13954,]  287  304  292 #> [13955,]  287  304  292 #> [13956,]  287  304  292 #> [13957,]  287  304  292 #> [13958,]  287  304  292 #> [13959,]  287  304  292 #> [13960,]  287  304  292 #> [13961,]  286  303  291 #> [13962,]  287  304  292 #> [13963,]  286  303  291 #> [13964,]  286  303  291 #> [13965,]  287  304  292 #> [13966,]  287  304  292 #> [13967,]  287  304  292 #> [13968,]  287  304  292 #> [13969,]  287  304  292 #> [13970,]  286  303  291 #> [13971,]  287  304  292 #> [13972,]  287  304  292 #> [13973,]  287  304  292 #> [13974,]  287  304  292 #> [13975,]  286  303  291 #> [13976,]  287  304  292 #> [13977,]  287  304  292 #> [13978,]  286  303  291 #> [13979,]  286  303  291 #> [13980,]  287  304  292 #> [13981,]  286  303  291 #> [13982,]  287  304  292 #> [13983,]  287  304  292 #> [13984,]  287  304  292 #> [13985,]  287  304  292 #> [13986,]  287  304  292 #> [13987,]  287  304  292 #> [13988,]  287  304  292 #> [13989,]  287  304  292 #> [13990,]  287  304  292 #> [13991,]  287  304  292 #> [13992,]  286  303  291 #> [13993,]  287  304  292 #> [13994,]  286  303  291 #> [13995,]  286  303  291 #> [13996,]  287  304  292 #> [13997,]  287  304  292 #> [13998,]  287  304  292 #> [13999,]  287  304  292 #> [14000,]  286  303  291 #> [14001,]  288  306  294 #> [14002,]  288  306  294 #> [14003,]  288  305  294 #> [14004,]  288  306  293 #> [14005,]  288  306  294 #> [14006,]  288  305  294 #> [14007,]  288  305  294 #> [14008,]  288  306  293 #> [14009,]  288  306  293 #> [14010,]  288  306  293 #> [14011,]  288  306  294 #> [14012,]  288  306  294 #> [14013,]  288  306  294 #> [14014,]  288  306  294 #> [14015,]  288  306  294 #> [14016,]  288  306  294 #> [14017,]  288  306  294 #> [14018,]  288  306  294 #> [14019,]  288  306  294 #> [14020,]  288  305  294 #> [14021,]  288  305  294 #> [14022,]  288  306  294 #> [14023,]  288  305  294 #> [14024,]  288  306  294 #> [14025,]  288  305  294 #> [14026,]  288  306  294 #> [14027,]  288  306  294 #> [14028,]  288  306  294 #> [14029,]  288  306  294 #> [14030,]  288  306  294 #> [14031,]  288  306  294 #> [14032,]  288  306  294 #> [14033,]  288  306  294 #> [14034,]  288  305  294 #> [14035,]  288  305  294 #> [14036,]  288  306  294 #> [14037,]  288  305  294 #> [14038,]  288  306  294 #> [14039,]  288  306  294 #> [14040,]  288  306  294 #> [14041,]  288  306  294 #> [14042,]  288  305  294 #> [14043,]  288  306  294 #> [14044,]  288  305  294 #> [14045,]  288  306  294 #> [14046,]  288  306  294 #> [14047,]  288  306  294 #> [14048,]  288  306  294 #> [14049,]  288  306  294 #> [14050,]  288  305  294 #> [14051,]  288  306  293 #> [14052,]  288  306  294 #> [14053,]  288  305  294 #> [14054,]  288  305  294 #> [14055,]  288  305  294 #> [14056,]  288  305  294 #> [14057,]  288  305  294 #> [14058,]  288  306  294 #> [14059,]  288  306  294 #> [14060,]  288  306  294 #> [14061,]  288  306  294 #> [14062,]  288  306  294 #> [14063,]  288  306  294 #> [14064,]  288  305  294 #> [14065,]  288  305  294 #> [14066,]  288  306  294 #> [14067,]  288  306  294 #> [14068,]  288  306  294 #> [14069,]  288  306  294 #> [14070,]  288  306  294 #> [14071,]  288  306  294 #> [14072,]  288  306  294 #> [14073,]  288  305  294 #> [14074,]  288  305  294 #> [14075,]  288  306  294 #> [14076,]  288  306  294 #> [14077,]  288  306  294 #> [14078,]  288  306  294 #> [14079,]  288  306  294 #> [14080,]  288  305  294 #> [14081,]  288  305  294 #> [14082,]  288  305  294 #> [14083,]  288  306  294 #> [14084,]  288  305  294 #> [14085,]  288  305  293 #> [14086,]  288  305  294 #> [14087,]  288  306  294 #> [14088,]  288  305  294 #> [14089,]  288  305  294 #> [14090,]  288  306  294 #> [14091,]  288  306  293 #> [14092,]  288  306  294 #> [14093,]  288  306  294 #> [14094,]  288  305  294 #> [14095,]  288  306  293 #> [14096,]  288  306  294 #> [14097,]  288  305  294 #> [14098,]  288  305  294 #> [14099,]  288  305  294 #> [14100,]  288  306  294 #> [14101,]  290  308  296 #> [14102,]  289  307  295 #> [14103,]  289  307  295 #> [14104,]  289  307  295 #> [14105,]  289  307  295 #> [14106,]  289  307  295 #> [14107,]  289  307  295 #> [14108,]  289  307  295 #> [14109,]  289  307  295 #> [14110,]  289  307  295 #> [14111,]  289  307  295 #> [14112,]  289  307  295 #> [14113,]  289  307  295 #> [14114,]  290  308  296 #> [14115,]  289  307  295 #> [14116,]  290  308  296 #> [14117,]  289  307  295 #> [14118,]  289  307  295 #> [14119,]  289  307  295 #> [14120,]  289  307  295 #> [14121,]  289  307  295 #> [14122,]  289  307  295 #> [14123,]  289  307  295 #> [14124,]  289  307  295 #> [14125,]  289  307  295 #> [14126,]  289  307  295 #> [14127,]  289  307  295 #> [14128,]  289  307  295 #> [14129,]  289  307  295 #> [14130,]  289  307  295 #> [14131,]  289  307  295 #> [14132,]  289  307  295 #> [14133,]  289  307  295 #> [14134,]  289  307  295 #> [14135,]  289  307  295 #> [14136,]  289  307  295 #> [14137,]  289  307  295 #> [14138,]  289  307  295 #> [14139,]  289  307  295 #> [14140,]  289  307  295 #> [14141,]  290  308  296 #> [14142,]  289  307  295 #> [14143,]  289  307  295 #> [14144,]  289  307  295 #> [14145,]  289  307  295 #> [14146,]  289  307  295 #> [14147,]  289  307  295 #> [14148,]  289  307  295 #> [14149,]  289  307  295 #> [14150,]  289  307  295 #> [14151,]  289  307  295 #> [14152,]  289  307  295 #> [14153,]  289  307  295 #> [14154,]  289  307  295 #> [14155,]  289  307  295 #> [14156,]  289  307  295 #> [14157,]  289  307  295 #> [14158,]  289  307  295 #> [14159,]  289  307  295 #> [14160,]  289  307  295 #> [14161,]  289  307  295 #> [14162,]  289  307  295 #> [14163,]  289  307  295 #> [14164,]  289  307  295 #> [14165,]  289  307  295 #> [14166,]  289  307  295 #> [14167,]  289  307  295 #> [14168,]  289  307  295 #> [14169,]  289  307  295 #> [14170,]  289  307  295 #> [14171,]  289  307  295 #> [14172,]  289  307  295 #> [14173,]  289  307  295 #> [14174,]  289  307  295 #> [14175,]  289  307  295 #> [14176,]  289  307  295 #> [14177,]  289  307  295 #> [14178,]  289  307  295 #> [14179,]  289  307  295 #> [14180,]  289  307  295 #> [14181,]  289  307  295 #> [14182,]  289  307  295 #> [14183,]  289  307  295 #> [14184,]  289  307  295 #> [14185,]  289  307  295 #> [14186,]  289  307  295 #> [14187,]  289  307  295 #> [14188,]  289  307  295 #> [14189,]  289  307  295 #> [14190,]  289  307  295 #> [14191,]  289  307  295 #> [14192,]  289  307  295 #> [14193,]  289  307  295 #> [14194,]  289  307  295 #> [14195,]  289  307  295 #> [14196,]  289  307  295 #> [14197,]  289  307  295 #> [14198,]  289  307  295 #> [14199,]  290  308  296 #> [14200,]  289  307  295 #> [14201,]  292  309  299 #> [14202,]  291  310  297 #> [14203,]  291  311  297 #> [14204,]  291  311  297 #> [14205,]  291  311  297 #> [14206,]  291  310  297 #> [14207,]  291  311  297 #> [14208,]  291  311  297 #> [14209,]  291  311  297 #> [14210,]  291  311  297 #> [14211,]  291  310  297 #> [14212,]  291  310  297 #> [14213,]  292  309  299 #> [14214,]  292  309  299 #> [14215,]  292  309  299 #> [14216,]  292  309  298 #> [14217,]  291  310  297 #> [14218,]  291  311  297 #> [14219,]  291  310  297 #> [14220,]  291  311  297 #> [14221,]  292  309  299 #> [14222,]  291  311  297 #> [14223,]  291  310  297 #> [14224,]  291  311  297 #> [14225,]  291  311  297 #> [14226,]  291  310  297 #> [14227,]  291  311  297 #> [14228,]  291  311  297 #> [14229,]  292  309  299 #> [14230,]  291  310  297 #> [14231,]  291  310  297 #> [14232,]  291  311  297 #> [14233,]  292  309  299 #> [14234,]  291  310  297 #> [14235,]  291  310  297 #> [14236,]  291  311  297 #> [14237,]  291  310  297 #> [14238,]  291  311  297 #> [14239,]  291  311  297 #> [14240,]  291  311  297 #> [14241,]  292  309  299 #> [14242,]  291  310  297 #> [14243,]  291  310  297 #> [14244,]  292  309  298 #> [14245,]  291  311  297 #> [14246,]  291  310  297 #> [14247,]  291  310  297 #> [14248,]  291  310  297 #> [14249,]  291  311  297 #> [14250,]  292  309  298 #> [14251,]  291  310  297 #> [14252,]  291  311  297 #> [14253,]  291  311  297 #> [14254,]  291  311  297 #> [14255,]  291  311  297 #> [14256,]  291  310  297 #> [14257,]  291  311  297 #> [14258,]  291  311  297 #> [14259,]  292  309  298 #> [14260,]  291  310  297 #> [14261,]  291  310  297 #> [14262,]  291  310  297 #> [14263,]  291  310  297 #> [14264,]  291  310  297 #> [14265,]  291  310  297 #> [14266,]  291  310  297 #> [14267,]  291  311  297 #> [14268,]  292  309  299 #> [14269,]  291  310  297 #> [14270,]  292  309  298 #> [14271,]  291  311  297 #> [14272,]  291  311  297 #> [14273,]  292  309  299 #> [14274,]  291  311  297 #> [14275,]  291  310  297 #> [14276,]  291  311  297 #> [14277,]  291  311  297 #> [14278,]  291  310  297 #> [14279,]  291  310  297 #> [14280,]  291  311  297 #> [14281,]  291  310  297 #> [14282,]  291  311  297 #> [14283,]  291  311  297 #> [14284,]  291  311  297 #> [14285,]  291  311  297 #> [14286,]  291  311  297 #> [14287,]  291  311  297 #> [14288,]  291  311  297 #> [14289,]  291  311  297 #> [14290,]  291  311  297 #> [14291,]  291  311  297 #> [14292,]  291  310  297 #> [14293,]  291  310  297 #> [14294,]  291  310  297 #> [14295,]  291  310  297 #> [14296,]  292  309  299 #> [14297,]  291  311  297 #> [14298,]  291  311  297 #> [14299,]  292  309  299 #> [14300,]  291  310  297 #> [14301,]  293  313  301 #> [14302,]  293  313  302 #> [14303,]  293  313  301 #> [14304,]  294  312  300 #> [14305,]  293  313  301 #> [14306,]  293  313  301 #> [14307,]  293  313  301 #> [14308,]  293  313  301 #> [14309,]  293  313  302 #> [14310,]  294  312  300 #> [14311,]  293  313  301 #> [14312,]  293  313  302 #> [14313,]  293  313  301 #> [14314,]  293  313  301 #> [14315,]  293  313  301 #> [14316,]  293  313  301 #> [14317,]  293  313  301 #> [14318,]  294  312  300 #> [14319,]  293  313  301 #> [14320,]  293  313  301 #> [14321,]  294  312  300 #> [14322,]  293  313  301 #> [14323,]  293  313  301 #> [14324,]  293  313  301 #> [14325,]  294  312  300 #> [14326,]  293  313  301 #> [14327,]  293  313  301 #> [14328,]  293  313  301 #> [14329,]  293  313  302 #> [14330,]  293  313  301 #> [14331,]  293  313  301 #> [14332,]  293  313  301 #> [14333,]  293  313  302 #> [14334,]  293  313  301 #> [14335,]  293  313  301 #> [14336,]  293  313  301 #> [14337,]  293  313  301 #> [14338,]  293  313  301 #> [14339,]  294  312  300 #> [14340,]  293  313  301 #> [14341,]  293  313  301 #> [14342,]  293  313  301 #> [14343,]  294  312  300 #> [14344,]  293  313  301 #> [14345,]  294  312  300 #> [14346,]  293  313  301 #> [14347,]  293  313  301 #> [14348,]  293  313  301 #> [14349,]  293  313  301 #> [14350,]  293  313  301 #> [14351,]  293  313  301 #> [14352,]  293  313  301 #> [14353,]  294  312  300 #> [14354,]  293  313  301 #> [14355,]  293  313  301 #> [14356,]  293  313  301 #> [14357,]  293  313  301 #> [14358,]  293  313  301 #> [14359,]  293  313  301 #> [14360,]  293  313  301 #> [14361,]  293  313  301 #> [14362,]  293  313  301 #> [14363,]  293  313  301 #> [14364,]  293  313  301 #> [14365,]  293  313  301 #> [14366,]  293  313  301 #> [14367,]  293  313  301 #> [14368,]  293  313  301 #> [14369,]  293  313  301 #> [14370,]  293  313  302 #> [14371,]  293  313  301 #> [14372,]  294  312  300 #> [14373,]  294  312  300 #> [14374,]  294  312  300 #> [14375,]  294  312  300 #> [14376,]  294  312  300 #> [14377,]  294  312  300 #> [14378,]  293  313  301 #> [14379,]  293  313  301 #> [14380,]  293  313  301 #> [14381,]  293  313  301 #> [14382,]  293  313  301 #> [14383,]  293  313  301 #> [14384,]  293  313  301 #> [14385,]  293  313  301 #> [14386,]  293  313  302 #> [14387,]  293  313  301 #> [14388,]  293  313  301 #> [14389,]  293  313  301 #> [14390,]  293  313  301 #> [14391,]  293  313  301 #> [14392,]  293  313  301 #> [14393,]  293  313  301 #> [14394,]  294  312  300 #> [14395,]  294  312  300 #> [14396,]  293  313  301 #> [14397,]  293  313  301 #> [14398,]  293  313  301 #> [14399,]  293  313  301 #> [14400,]  293  313  301 #> [14401,]  295  314  304 #> [14402,]  295  314  304 #> [14403,]  295  314  303 #> [14404,]  295  314  304 #> [14405,]  295  314  304 #> [14406,]  296  315  304 #> [14407,]  295  314  303 #> [14408,]  296  315  304 #> [14409,]  296  315  304 #> [14410,]  295  314  304 #> [14411,]  295  314  304 #> [14412,]  296  315  304 #> [14413,]  295  314  304 #> [14414,]  295  314  304 #> [14415,]  296  315  304 #> [14416,]  295  314  304 #> [14417,]  295  314  304 #> [14418,]  295  314  304 #> [14419,]  295  314  304 #> [14420,]  295  314  303 #> [14421,]  295  314  304 #> [14422,]  295  314  304 #> [14423,]  295  314  304 #> [14424,]  295  314  304 #> [14425,]  295  314  303 #> [14426,]  296  315  304 #> [14427,]  295  314  304 #> [14428,]  295  314  304 #> [14429,]  295  314  304 #> [14430,]  295  314  304 #> [14431,]  295  314  304 #> [14432,]  295  314  304 #> [14433,]  296  315  304 #> [14434,]  295  314  304 #> [14435,]  295  314  304 #> [14436,]  295  314  304 #> [14437,]  295  314  304 #> [14438,]  295  314  304 #> [14439,]  295  314  303 #> [14440,]  295  314  304 #> [14441,]  295  314  304 #> [14442,]  295  314  304 #> [14443,]  296  315  304 #> [14444,]  295  314  304 #> [14445,]  296  315  304 #> [14446,]  296  315  304 #> [14447,]  295  314  304 #> [14448,]  295  314  304 #> [14449,]  295  314  303 #> [14450,]  295  314  304 #> [14451,]  296  315  304 #> [14452,]  295  314  304 #> [14453,]  295  314  303 #> [14454,]  295  314  304 #> [14455,]  295  314  303 #> [14456,]  296  315  303 #> [14457,]  296  315  304 #> [14458,]  295  314  304 #> [14459,]  295  314  304 #> [14460,]  295  314  304 #> [14461,]  296  315  304 #> [14462,]  295  314  304 #> [14463,]  295  314  304 #> [14464,]  296  315  304 #> [14465,]  295  314  303 #> [14466,]  296  315  303 #> [14467,]  295  314  304 #> [14468,]  296  315  304 #> [14469,]  295  314  304 #> [14470,]  295  314  304 #> [14471,]  295  314  304 #> [14472,]  296  315  304 #> [14473,]  295  314  304 #> [14474,]  295  314  304 #> [14475,]  295  314  304 #> [14476,]  296  315  304 #> [14477,]  295  314  304 #> [14478,]  295  314  304 #> [14479,]  295  314  304 #> [14480,]  295  314  304 #> [14481,]  295  314  304 #> [14482,]  295  314  304 #> [14483,]  295  314  304 #> [14484,]  295  314  304 #> [14485,]  295  314  304 #> [14486,]  295  314  304 #> [14487,]  295  314  304 #> [14488,]  295  314  304 #> [14489,]  295  314  304 #> [14490,]  295  314  303 #> [14491,]  295  314  304 #> [14492,]  295  314  304 #> [14493,]  295  314  304 #> [14494,]  296  315  304 #> [14495,]  295  314  304 #> [14496,]  296  315  304 #> [14497,]  295  314  304 #> [14498,]  295  314  304 #> [14499,]  295  314  304 #> [14500,]  295  314  303 #> [14501,]  297  316  305 #> [14502,]  297  316  305 #> [14503,]  297  316  305 #> [14504,]  298  317  306 #> [14505,]  297  316  305 #> [14506,]  297  316  305 #> [14507,]  297  316  305 #> [14508,]  297  316  305 #> [14509,]  297  316  305 #> [14510,]  298  317  306 #> [14511,]  297  316  305 #> [14512,]  297  316  305 #> [14513,]  297  316  305 #> [14514,]  297  316  305 #> [14515,]  297  316  305 #> [14516,]  297  316  305 #> [14517,]  297  316  305 #> [14518,]  298  317  306 #> [14519,]  297  316  305 #> [14520,]  297  316  305 #> [14521,]  297  316  305 #> [14522,]  297  316  305 #> [14523,]  297  316  305 #> [14524,]  297  316  305 #> [14525,]  298  317  306 #> [14526,]  297  316  305 #> [14527,]  297  316  305 #> [14528,]  297  316  305 #> [14529,]  297  316  305 #> [14530,]  297  316  305 #> [14531,]  297  316  305 #> [14532,]  297  316  305 #> [14533,]  297  316  305 #> [14534,]  297  316  305 #> [14535,]  297  316  305 #> [14536,]  297  316  305 #> [14537,]  297  316  305 #> [14538,]  297  316  305 #> [14539,]  298  317  306 #> [14540,]  297  316  305 #> [14541,]  297  316  305 #> [14542,]  297  316  305 #> [14543,]  298  317  306 #> [14544,]  297  316  305 #> [14545,]  298  317  306 #> [14546,]  297  316  305 #> [14547,]  297  316  305 #> [14548,]  297  316  305 #> [14549,]  297  316  305 #> [14550,]  297  316  305 #> [14551,]  297  316  305 #> [14552,]  297  316  305 #> [14553,]  298  317  306 #> [14554,]  297  316  305 #> [14555,]  297  316  305 #> [14556,]  297  316  305 #> [14557,]  297  316  305 #> [14558,]  297  316  305 #> [14559,]  297  316  305 #> [14560,]  297  316  305 #> [14561,]  297  316  305 #> [14562,]  297  316  305 #> [14563,]  297  316  305 #> [14564,]  297  316  305 #> [14565,]  297  316  305 #> [14566,]  297  316  305 #> [14567,]  297  316  305 #> [14568,]  297  316  305 #> [14569,]  297  316  305 #> [14570,]  297  316  305 #> [14571,]  297  316  305 #> [14572,]  298  317  306 #> [14573,]  298  317  306 #> [14574,]  298  317  306 #> [14575,]  298  317  306 #> [14576,]  298  317  306 #> [14577,]  298  317  306 #> [14578,]  297  316  305 #> [14579,]  297  316  305 #> [14580,]  297  316  305 #> [14581,]  297  316  305 #> [14582,]  297  316  305 #> [14583,]  297  316  305 #> [14584,]  297  316  305 #> [14585,]  297  316  305 #> [14586,]  297  316  305 #> [14587,]  297  316  305 #> [14588,]  297  316  305 #> [14589,]  297  316  305 #> [14590,]  297  316  305 #> [14591,]  297  316  305 #> [14592,]  297  316  305 #> [14593,]  297  316  305 #> [14594,]  298  317  306 #> [14595,]  298  317  306 #> [14596,]  297  316  305 #> [14597,]  297  316  305 #> [14598,]  297  316  305 #> [14599,]  297  316  305 #> [14600,]  297  316  305 #> [14601,]  300  319  308 #> [14602,]  299  318  307 #> [14603,]  299  318  307 #> [14604,]  300  319  308 #> [14605,]  300  319  308 #> [14606,]  299  318  307 #> [14607,]  299  318  307 #> [14608,]  299  318  307 #> [14609,]  299  318  307 #> [14610,]  300  319  308 #> [14611,]  300  319  308 #> [14612,]  300  319  308 #> [14613,]  300  319  308 #> [14614,]  300  319  308 #> [14615,]  300  319  308 #> [14616,]  300  319  308 #> [14617,]  300  319  308 #> [14618,]  300  319  308 #> [14619,]  300  319  308 #> [14620,]  299  318  307 #> [14621,]  299  318  307 #> [14622,]  300  319  308 #> [14623,]  299  318  307 #> [14624,]  300  319  308 #> [14625,]  299  318  307 #> [14626,]  300  319  308 #> [14627,]  300  319  308 #> [14628,]  300  319  308 #> [14629,]  299  318  307 #> [14630,]  299  318  307 #> [14631,]  300  319  308 #> [14632,]  300  319  308 #> [14633,]  300  319  308 #> [14634,]  299  318  307 #> [14635,]  299  318  307 #> [14636,]  299  318  307 #> [14637,]  299  318  307 #> [14638,]  300  319  308 #> [14639,]  300  319  308 #> [14640,]  299  318  307 #> [14641,]  299  318  307 #> [14642,]  299  318  307 #> [14643,]  300  319  308 #> [14644,]  299  318  307 #> [14645,]  299  318  307 #> [14646,]  300  319  308 #> [14647,]  300  319  308 #> [14648,]  300  319  308 #> [14649,]  299  318  307 #> [14650,]  299  318  307 #> [14651,]  300  319  308 #> [14652,]  300  319  308 #> [14653,]  299  318  307 #> [14654,]  299  318  307 #> [14655,]  299  318  307 #> [14656,]  299  318  307 #> [14657,]  299  318  307 #> [14658,]  300  319  308 #> [14659,]  300  319  308 #> [14660,]  299  318  307 #> [14661,]  300  319  308 #> [14662,]  299  318  307 #> [14663,]  300  319  308 #> [14664,]  299  318  307 #> [14665,]  299  318  307 #> [14666,]  300  319  308 #> [14667,]  299  318  307 #> [14668,]  300  319  308 #> [14669,]  300  319  308 #> [14670,]  300  319  308 #> [14671,]  300  319  308 #> [14672,]  299  318  307 #> [14673,]  299  318  307 #> [14674,]  299  318  307 #> [14675,]  300  319  308 #> [14676,]  299  318  307 #> [14677,]  300  319  308 #> [14678,]  300  319  308 #> [14679,]  300  319  308 #> [14680,]  299  318  307 #> [14681,]  299  318  307 #> [14682,]  299  318  307 #> [14683,]  300  319  308 #> [14684,]  299  318  307 #> [14685,]  299  318  307 #> [14686,]  299  318  307 #> [14687,]  300  319  308 #> [14688,]  299  318  307 #> [14689,]  299  318  307 #> [14690,]  300  319  308 #> [14691,]  300  319  308 #> [14692,]  300  319  308 #> [14693,]  300  319  308 #> [14694,]  299  318  307 #> [14695,]  300  319  308 #> [14696,]  300  319  308 #> [14697,]  299  318  307 #> [14698,]  299  318  307 #> [14699,]  299  318  307 #> [14700,]  300  319  308 #> [14701,]  302  321  310 #> [14702,]  302  321  310 #> [14703,]  302  321  310 #> [14704,]  301  320  309 #> [14705,]  302  321  310 #> [14706,]  302  321  310 #> [14707,]  302  321  310 #> [14708,]  301  320  309 #> [14709,]  301  320  309 #> [14710,]  301  320  309 #> [14711,]  302  321  310 #> [14712,]  302  321  310 #> [14713,]  302  321  310 #> [14714,]  302  321  310 #> [14715,]  302  321  310 #> [14716,]  302  321  310 #> [14717,]  302  321  310 #> [14718,]  301  320  309 #> [14719,]  302  321  310 #> [14720,]  301  320  309 #> [14721,]  302  321  310 #> [14722,]  302  321  310 #> [14723,]  302  321  310 #> [14724,]  302  321  310 #> [14725,]  302  321  310 #> [14726,]  302  321  310 #> [14727,]  302  321  310 #> [14728,]  302  321  310 #> [14729,]  302  321  310 #> [14730,]  301  320  309 #> [14731,]  302  321  310 #> [14732,]  302  321  310 #> [14733,]  302  321  310 #> [14734,]  302  321  310 #> [14735,]  302  321  310 #> [14736,]  302  321  310 #> [14737,]  302  321  310 #> [14738,]  302  321  310 #> [14739,]  301  320  309 #> [14740,]  302  321  310 #> [14741,]  302  321  310 #> [14742,]  302  321  310 #> [14743,]  301  320  309 #> [14744,]  302  321  310 #> [14745,]  301  320  309 #> [14746,]  302  321  310 #> [14747,]  302  321  310 #> [14748,]  302  321  310 #> [14749,]  301  320  309 #> [14750,]  302  321  310 #> [14751,]  301  320  309 #> [14752,]  302  321  310 #> [14753,]  301  320  309 #> [14754,]  302  321  310 #> [14755,]  302  321  310 #> [14756,]  301  320  309 #> [14757,]  302  321  310 #> [14758,]  302  321  310 #> [14759,]  302  321  310 #> [14760,]  301  320  309 #> [14761,]  302  321  310 #> [14762,]  302  321  310 #> [14763,]  302  321  310 #> [14764,]  301  320  309 #> [14765,]  301  320  309 #> [14766,]  301  320  309 #> [14767,]  301  320  309 #> [14768,]  302  321  310 #> [14769,]  302  321  310 #> [14770,]  302  321  310 #> [14771,]  302  321  310 #> [14772,]  302  321  310 #> [14773,]  302  321  310 #> [14774,]  302  321  310 #> [14775,]  302  321  310 #> [14776,]  302  321  310 #> [14777,]  302  321  310 #> [14778,]  301  320  309 #> [14779,]  302  321  310 #> [14780,]  302  321  310 #> [14781,]  302  321  310 #> [14782,]  302  321  310 #> [14783,]  302  321  310 #> [14784,]  302  321  310 #> [14785,]  301  320  309 #> [14786,]  302  321  310 #> [14787,]  302  321  310 #> [14788,]  302  321  310 #> [14789,]  301  320  309 #> [14790,]  302  321  310 #> [14791,]  301  320  309 #> [14792,]  302  321  310 #> [14793,]  302  321  310 #> [14794,]  302  321  310 #> [14795,]  301  320  309 #> [14796,]  302  321  310 #> [14797,]  302  321  310 #> [14798,]  302  321  310 #> [14799,]  302  321  310 #> [14800,]  302  321  310 #> [14801,]  303  322  313 #> [14802,]  304  323  311 #> [14803,]  304  323  311 #> [14804,]  303  322  312 #> [14805,]  304  323  311 #> [14806,]  304  323  311 #> [14807,]  304  323  311 #> [14808,]  303  322  312 #> [14809,]  303  322  312 #> [14810,]  304  323  311 #> [14811,]  303  322  312 #> [14812,]  304  323  311 #> [14813,]  303  322  313 #> [14814,]  303  322  313 #> [14815,]  303  322  313 #> [14816,]  303  322  313 #> [14817,]  303  322  313 #> [14818,]  304  323  311 #> [14819,]  304  323  311 #> [14820,]  304  323  311 #> [14821,]  303  322  313 #> [14822,]  303  322  312 #> [14823,]  304  323  311 #> [14824,]  304  323  311 #> [14825,]  304  323  311 #> [14826,]  304  323  311 #> [14827,]  303  322  312 #> [14828,]  304  323  311 #> [14829,]  304  323  311 #> [14830,]  303  322  312 #> [14831,]  304  323  311 #> [14832,]  304  323  311 #> [14833,]  304  323  311 #> [14834,]  304  323  311 #> [14835,]  303  322  313 #> [14836,]  304  323  311 #> [14837,]  303  322  312 #> [14838,]  304  323  311 #> [14839,]  304  323  311 #> [14840,]  304  323  311 #> [14841,]  303  322  313 #> [14842,]  304  323  311 #> [14843,]  303  322  312 #> [14844,]  303  322  313 #> [14845,]  303  322  312 #> [14846,]  303  322  312 #> [14847,]  304  323  311 #> [14848,]  304  323  311 #> [14849,]  303  322  312 #> [14850,]  304  323  311 #> [14851,]  304  323  311 #> [14852,]  303  322  312 #> [14853,]  304  323  311 #> [14854,]  303  322  312 #> [14855,]  303  322  312 #> [14856,]  304  323  311 #> [14857,]  304  323  311 #> [14858,]  303  322  312 #> [14859,]  304  323  311 #> [14860,]  304  323  311 #> [14861,]  304  323  311 #> [14862,]  303  322  312 #> [14863,]  304  323  311 #> [14864,]  304  323  311 #> [14865,]  304  323  311 #> [14866,]  303  322  312 #> [14867,]  303  322  312 #> [14868,]  303  322  313 #> [14869,]  303  322  312 #> [14870,]  304  323  311 #> [14871,]  304  323  311 #> [14872,]  304  323  311 #> [14873,]  304  323  311 #> [14874,]  303  322  312 #> [14875,]  304  323  311 #> [14876,]  304  323  311 #> [14877,]  304  323  311 #> [14878,]  304  323  311 #> [14879,]  303  322  313 #> [14880,]  303  322  312 #> [14881,]  303  322  313 #> [14882,]  303  322  312 #> [14883,]  303  322  313 #> [14884,]  304  323  311 #> [14885,]  303  322  312 #> [14886,]  304  323  311 #> [14887,]  303  322  312 #> [14888,]  303  322  312 #> [14889,]  303  322  312 #> [14890,]  303  322  312 #> [14891,]  303  322  312 #> [14892,]  303  322  312 #> [14893,]  304  323  311 #> [14894,]  304  323  311 #> [14895,]  303  322  312 #> [14896,]  303  322  313 #> [14897,]  304  323  311 #> [14898,]  304  323  311 #> [14899,]  303  322  313 #> [14900,]  304  323  311 #> [14901,]  306  324  314 #> [14902,]  306  324  314 #> [14903,]  305  324  314 #> [14904,]  306  324  314 #> [14905,]  306  324  314 #> [14906,]  306  324  314 #> [14907,]  305  324  314 #> [14908,]  306  324  314 #> [14909,]  306  324  314 #> [14910,]  306  324  314 #> [14911,]  306  324  314 #> [14912,]  306  324  314 #> [14913,]  305  324  314 #> [14914,]  306  324  314 #> [14915,]  306  324  314 #> [14916,]  305  324  314 #> [14917,]  306  324  314 #> [14918,]  306  324  314 #> [14919,]  306  324  314 #> [14920,]  306  325  315 #> [14921,]  305  324  314 #> [14922,]  306  325  315 #> [14923,]  305  324  314 #> [14924,]  306  324  314 #> [14925,]  306  324  314 #> [14926,]  306  324  314 #> [14927,]  306  325  315 #> [14928,]  306  324  314 #> [14929,]  306  325  315 #> [14930,]  305  324  314 #> [14931,]  305  324  314 #> [14932,]  306  324  314 #> [14933,]  306  324  314 #> [14934,]  306  324  314 #> [14935,]  305  324  314 #> [14936,]  305  324  314 #> [14937,]  305  324  314 #> [14938,]  306  324  314 #> [14939,]  305  324  314 #> [14940,]  305  324  314 #> [14941,]  306  324  314 #> [14942,]  306  324  314 #> [14943,]  306  324  314 #> [14944,]  306  324  314 #> [14945,]  306  324  314 #> [14946,]  306  324  314 #> [14947,]  305  324  314 #> [14948,]  306  324  314 #> [14949,]  305  324  314 #> [14950,]  306  324  314 #> [14951,]  306  324  314 #> [14952,]  306  324  314 #> [14953,]  306  324  314 #> [14954,]  305  324  314 #> [14955,]  306  324  314 #> [14956,]  306  324  314 #> [14957,]  306  324  314 #> [14958,]  306  325  315 #> [14959,]  306  324  314 #> [14960,]  306  324  314 #> [14961,]  306  324  314 #> [14962,]  305  324  314 #> [14963,]  306  324  314 #> [14964,]  306  325  315 #> [14965,]  306  324  314 #> [14966,]  306  324  314 #> [14967,]  306  324  314 #> [14968,]  306  324  314 #> [14969,]  306  324  314 #> [14970,]  305  324  314 #> [14971,]  306  324  314 #> [14972,]  306  324  314 #> [14973,]  306  324  314 #> [14974,]  306  324  314 #> [14975,]  306  324  314 #> [14976,]  306  324  314 #> [14977,]  305  325  315 #> [14978,]  306  324  314 #> [14979,]  305  324  314 #> [14980,]  305  324  314 #> [14981,]  306  325  315 #> [14982,]  306  324  314 #> [14983,]  305  324  314 #> [14984,]  306  324  314 #> [14985,]  306  324  314 #> [14986,]  306  324  314 #> [14987,]  306  325  315 #> [14988,]  306  324  314 #> [14989,]  306  324  314 #> [14990,]  306  324  314 #> [14991,]  306  324  314 #> [14992,]  306  324  314 #> [14993,]  305  324  314 #> [14994,]  306  324  314 #> [14995,]  305  324  314 #> [14996,]  306  324  314 #> [14997,]  306  324  314 #> [14998,]  305  324  314 #> [14999,]  306  324  314 #> [15000,]  306  325  315 #> [15001,]  307  327  317 #> [15002,]  307  326  316 #> [15003,]  307  326  316 #> [15004,]  307  328  317 #> [15005,]  307  326  316 #> [15006,]  307  326  316 #> [15007,]  307  327  317 #> [15008,]  307  327  317 #> [15009,]  307  327  317 #> [15010,]  307  328  317 #> [15011,]  307  326  316 #> [15012,]  307  326  316 #> [15013,]  307  327  317 #> [15014,]  307  326  316 #> [15015,]  307  328  317 #> [15016,]  307  328  317 #> [15017,]  307  327  317 #> [15018,]  307  328  317 #> [15019,]  307  326  316 #> [15020,]  307  326  316 #> [15021,]  307  328  317 #> [15022,]  307  326  316 #> [15023,]  307  328  317 #> [15024,]  307  326  316 #> [15025,]  307  328  317 #> [15026,]  307  326  316 #> [15027,]  307  328  317 #> [15028,]  307  327  317 #> [15029,]  307  326  316 #> [15030,]  307  326  316 #> [15031,]  307  326  316 #> [15032,]  307  326  316 #> [15033,]  307  326  316 #> [15034,]  307  326  316 #> [15035,]  307  326  316 #> [15036,]  307  326  316 #> [15037,]  307  327  317 #> [15038,]  307  326  316 #> [15039,]  307  328  317 #> [15040,]  307  326  316 #> [15041,]  307  326  316 #> [15042,]  307  326  316 #> [15043,]  307  328  317 #> [15044,]  307  326  316 #> [15045,]  307  328  317 #> [15046,]  307  327  317 #> [15047,]  307  327  317 #> [15048,]  307  326  316 #> [15049,]  307  326  316 #> [15050,]  307  326  316 #> [15051,]  307  326  316 #> [15052,]  307  326  316 #> [15053,]  307  328  317 #> [15054,]  307  326  316 #> [15055,]  307  326  316 #> [15056,]  307  327  317 #> [15057,]  307  326  316 #> [15058,]  307  326  316 #> [15059,]  307  326  316 #> [15060,]  307  326  316 #> [15061,]  307  328  317 #> [15062,]  307  326  316 #> [15063,]  307  326  316 #> [15064,]  307  327  317 #> [15065,]  307  326  316 #> [15066,]  307  326  316 #> [15067,]  307  326  316 #> [15068,]  307  326  316 #> [15069,]  307  326  316 #> [15070,]  307  327  317 #> [15071,]  307  327  317 #> [15072,]  307  328  317 #> [15073,]  307  328  317 #> [15074,]  307  328  317 #> [15075,]  307  328  317 #> [15076,]  307  328  317 #> [15077,]  307  328  317 #> [15078,]  307  326  316 #> [15079,]  307  326  316 #> [15080,]  307  326  316 #> [15081,]  307  326  316 #> [15082,]  307  327  317 #> [15083,]  307  326  316 #> [15084,]  307  328  317 #> [15085,]  307  326  316 #> [15086,]  307  326  316 #> [15087,]  307  327  317 #> [15088,]  307  327  317 #> [15089,]  307  326  316 #> [15090,]  307  327  317 #> [15091,]  307  326  316 #> [15092,]  307  326  316 #> [15093,]  307  326  316 #> [15094,]  307  328  317 #> [15095,]  307  328  317 #> [15096,]  307  327  317 #> [15097,]  307  326  316 #> [15098,]  307  326  316 #> [15099,]  307  326  316 #> [15100,]  307  328  317 #> [15101,]  309  329  319 #> [15102,]  308  331  318 #> [15103,]  309  329  318 #> [15104,]  309  329  318 #> [15105,]  309  329  319 #> [15106,]  308  331  318 #> [15107,]  309  329  318 #> [15108,]  309  329  318 #> [15109,]  309  329  318 #> [15110,]  309  329  319 #> [15111,]  308  331  319 #> [15112,]  308  331  319 #> [15113,]  309  329  318 #> [15114,]  309  329  319 #> [15115,]  308  331  319 #> [15116,]  309  329  319 #> [15117,]  308  330  319 #> [15118,]  309  329  319 #> [15119,]  309  329  319 #> [15120,]  309  329  318 #> [15121,]  309  329  318 #> [15122,]  309  329  319 #> [15123,]  308  331  318 #> [15124,]  309  329  319 #> [15125,]  309  329  318 #> [15126,]  309  329  319 #> [15127,]  309  329  319 #> [15128,]  309  329  318 #> [15129,]  308  330  318 #> [15130,]  308  331  318 #> [15131,]  308  331  319 #> [15132,]  309  329  319 #> [15133,]  309  329  319 #> [15134,]  308  331  318 #> [15135,]  309  329  318 #> [15136,]  309  329  318 #> [15137,]  308  331  318 #> [15138,]  309  329  319 #> [15139,]  309  329  319 #> [15140,]  309  329  318 #> [15141,]  309  329  318 #> [15142,]  308  331  318 #> [15143,]  308  330  319 #> [15144,]  308  330  318 #> [15145,]  309  329  318 #> [15146,]  309  329  318 #> [15147,]  308  330  319 #> [15148,]  308  331  318 #> [15149,]  309  329  318 #> [15150,]  309  329  318 #> [15151,]  309  329  319 #> [15152,]  309  329  319 #> [15153,]  309  329  318 #> [15154,]  309  329  318 #> [15155,]  309  329  318 #> [15156,]  308  330  318 #> [15157,]  309  329  318 #> [15158,]  309  329  319 #> [15159,]  309  329  319 #> [15160,]  308  331  318 #> [15161,]  308  331  319 #> [15162,]  309  329  318 #> [15163,]  308  330  318 #> [15164,]  308  331  318 #> [15165,]  308  330  318 #> [15166,]  309  329  319 #> [15167,]  309  329  318 #> [15168,]  309  329  319 #> [15169,]  309  329  318 #> [15170,]  308  330  319 #> [15171,]  309  329  319 #> [15172,]  309  329  318 #> [15173,]  309  329  318 #> [15174,]  309  329  318 #> [15175,]  308  331  319 #> [15176,]  309  329  318 #> [15177,]  309  329  319 #> [15178,]  308  330  318 #> [15179,]  308  330  319 #> [15180,]  309  329  318 #> [15181,]  308  330  318 #> [15182,]  309  329  318 #> [15183,]  309  329  319 #> [15184,]  309  329  318 #> [15185,]  309  329  318 #> [15186,]  309  329  318 #> [15187,]  309  329  319 #> [15188,]  309  329  318 #> [15189,]  309  329  318 #> [15190,]  309  329  319 #> [15191,]  309  329  319 #> [15192,]  308  331  319 #> [15193,]  309  329  318 #> [15194,]  308  330  318 #> [15195,]  308  331  319 #> [15196,]  309  329  319 #> [15197,]  309  329  318 #> [15198,]  309  329  318 #> [15199,]  309  329  318 #> [15200,]  308  330  319 #> [15201,]  311  333  320 #> [15202,]  311  333  320 #> [15203,]  310  332  320 #> [15204,]  310  332  320 #> [15205,]  310  332  320 #> [15206,]  310  332  320 #> [15207,]  310  332  320 #> [15208,]  311  333  320 #> [15209,]  310  332  320 #> [15210,]  310  332  320 #> [15211,]  310  332  320 #> [15212,]  310  332  320 #> [15213,]  311  333  320 #> [15214,]  310  332  320 #> [15215,]  311  333  320 #> [15216,]  311  333  320 #> [15217,]  310  332  320 #> [15218,]  310  332  320 #> [15219,]  311  333  320 #> [15220,]  311  333  320 #> [15221,]  310  332  320 #> [15222,]  311  333  320 #> [15223,]  311  333  320 #> [15224,]  310  332  320 #> [15225,]  310  332  320 #> [15226,]  311  333  320 #> [15227,]  311  333  320 #> [15228,]  310  332  320 #> [15229,]  311  333  320 #> [15230,]  311  333  320 #> [15231,]  310  332  320 #> [15232,]  310  332  320 #> [15233,]  311  333  320 #> [15234,]  310  332  320 #> [15235,]  310  332  320 #> [15236,]  311  333  320 #> [15237,]  311  333  320 #> [15238,]  311  333  320 #> [15239,]  310  332  320 #> [15240,]  310  332  320 #> [15241,]  311  333  320 #> [15242,]  310  332  320 #> [15243,]  311  333  320 #> [15244,]  311  333  320 #> [15245,]  310  332  320 #> [15246,]  311  333  320 #> [15247,]  310  332  320 #> [15248,]  310  332  320 #> [15249,]  310  332  320 #> [15250,]  311  333  320 #> [15251,]  311  333  320 #> [15252,]  310  332  320 #> [15253,]  311  333  320 #> [15254,]  310  332  320 #> [15255,]  311  333  320 #> [15256,]  311  333  320 #> [15257,]  310  332  320 #> [15258,]  311  333  320 #> [15259,]  311  333  320 #> [15260,]  311  333  320 #> [15261,]  311  333  320 #> [15262,]  310  332  320 #> [15263,]  311  333  320 #> [15264,]  311  333  320 #> [15265,]  310  332  320 #> [15266,]  311  333  320 #> [15267,]  310  332  320 #> [15268,]  311  333  320 #> [15269,]  311  333  320 #> [15270,]  310  332  320 #> [15271,]  311  333  320 #> [15272,]  310  332  320 #> [15273,]  310  332  320 #> [15274,]  310  332  320 #> [15275,]  311  333  320 #> [15276,]  310  332  320 #> [15277,]  311  333  320 #> [15278,]  311  333  320 #> [15279,]  310  332  320 #> [15280,]  311  333  320 #> [15281,]  311  333  320 #> [15282,]  310  332  320 #> [15283,]  311  333  320 #> [15284,]  311  333  320 #> [15285,]  311  333  320 #> [15286,]  310  332  320 #> [15287,]  311  333  320 #> [15288,]  310  332  320 #> [15289,]  310  332  320 #> [15290,]  311  333  320 #> [15291,]  310  332  320 #> [15292,]  310  332  320 #> [15293,]  311  333  320 #> [15294,]  310  332  320 #> [15295,]  311  333  320 #> [15296,]  311  333  320 #> [15297,]  311  333  320 #> [15298,]  310  332  320 #> [15299,]  310  332  320 #> [15300,]  311  333  320 #> [15301,]  312  336  321 #> [15302,]  313  334  323 #> [15303,]  313  334  322 #> [15304,]  312  335  321 #> [15305,]  313  334  323 #> [15306,]  313  334  322 #> [15307,]  313  334  322 #> [15308,]  312  335  321 #> [15309,]  312  335  321 #> [15310,]  313  334  323 #> [15311,]  312  335  321 #> [15312,]  313  334  323 #> [15313,]  312  336  321 #> [15314,]  312  336  321 #> [15315,]  313  334  323 #> [15316,]  313  334  323 #> [15317,]  312  335  321 #> [15318,]  313  334  323 #> [15319,]  313  334  323 #> [15320,]  313  334  322 #> [15321,]  312  336  321 #> [15322,]  312  335  321 #> [15323,]  313  334  322 #> [15324,]  313  334  323 #> [15325,]  313  334  322 #> [15326,]  313  334  323 #> [15327,]  312  335  321 #> [15328,]  313  334  323 #> [15329,]  313  334  323 #> [15330,]  312  336  321 #> [15331,]  313  334  323 #> [15332,]  313  334  323 #> [15333,]  313  334  323 #> [15334,]  313  334  322 #> [15335,]  312  335  321 #> [15336,]  313  334  323 #> [15337,]  313  334  322 #> [15338,]  313  334  323 #> [15339,]  313  334  323 #> [15340,]  313  334  323 #> [15341,]  313  334  323 #> [15342,]  313  334  322 #> [15343,]  312  336  321 #> [15344,]  312  335  321 #> [15345,]  312  336  321 #> [15346,]  312  336  321 #> [15347,]  313  334  323 #> [15348,]  313  334  323 #> [15349,]  312  336  321 #> [15350,]  313  334  323 #> [15351,]  313  334  323 #> [15352,]  312  335  321 #> [15353,]  313  334  322 #> [15354,]  312  336  321 #> [15355,]  312  336  321 #> [15356,]  313  334  322 #> [15357,]  313  334  322 #> [15358,]  312  335  321 #> [15359,]  313  334  323 #> [15360,]  313  334  323 #> [15361,]  313  334  323 #> [15362,]  313  334  323 #> [15363,]  313  334  323 #> [15364,]  313  334  322 #> [15365,]  313  334  322 #> [15366,]  312  335  321 #> [15367,]  313  334  323 #> [15368,]  312  336  321 #> [15369,]  312  336  321 #> [15370,]  313  334  323 #> [15371,]  313  334  323 #> [15372,]  313  334  323 #> [15373,]  313  334  322 #> [15374,]  313  334  322 #> [15375,]  313  334  323 #> [15376,]  313  334  323 #> [15377,]  313  334  323 #> [15378,]  313  334  323 #> [15379,]  312  336  321 #> [15380,]  312  336  321 #> [15381,]  312  335  321 #> [15382,]  312  335  321 #> [15383,]  312  336  321 #> [15384,]  313  334  322 #> [15385,]  313  334  322 #> [15386,]  313  334  322 #> [15387,]  312  335  321 #> [15388,]  312  336  321 #> [15389,]  312  336  321 #> [15390,]  312  335  321 #> [15391,]  312  336  321 #> [15392,]  312  335  321 #> [15393,]  313  334  323 #> [15394,]  313  334  322 #> [15395,]  312  335  321 #> [15396,]  312  336  321 #> [15397,]  313  334  323 #> [15398,]  313  334  322 #> [15399,]  312  335  321 #> [15400,]  313  334  323 #> [15401,]  314  337  325 #> [15402,]  314  337  325 #> [15403,]  314  337  325 #> [15404,]  315  338  324 #> [15405,]  314  337  325 #> [15406,]  314  337  325 #> [15407,]  314  337  325 #> [15408,]  314  337  325 #> [15409,]  314  337  325 #> [15410,]  314  337  325 #> [15411,]  314  337  325 #> [15412,]  314  337  325 #> [15413,]  314  337  325 #> [15414,]  315  338  324 #> [15415,]  314  337  325 #> [15416,]  314  337  325 #> [15417,]  314  337  325 #> [15418,]  314  337  325 #> [15419,]  314  337  325 #> [15420,]  314  337  325 #> [15421,]  314  337  325 #> [15422,]  314  337  325 #> [15423,]  314  337  325 #> [15424,]  314  337  325 #> [15425,]  314  337  325 #> [15426,]  314  337  325 #> [15427,]  315  338  324 #> [15428,]  314  337  325 #> [15429,]  314  337  325 #> [15430,]  314  337  325 #> [15431,]  314  337  325 #> [15432,]  314  337  325 #> [15433,]  314  337  325 #> [15434,]  314  337  325 #> [15435,]  314  337  325 #> [15436,]  314  337  325 #> [15437,]  314  337  325 #> [15438,]  314  337  325 #> [15439,]  314  337  325 #> [15440,]  314  337  325 #> [15441,]  314  337  325 #> [15442,]  314  337  325 #> [15443,]  314  337  325 #> [15444,]  314  337  325 #> [15445,]  314  337  325 #> [15446,]  314  337  325 #> [15447,]  314  337  325 #> [15448,]  314  337  325 #> [15449,]  314  337  325 #> [15450,]  314  337  325 #> [15451,]  314  337  325 #> [15452,]  314  337  325 #> [15453,]  314  337  325 #> [15454,]  314  337  325 #> [15455,]  314  337  325 #> [15456,]  314  337  325 #> [15457,]  314  337  325 #> [15458,]  314  337  325 #> [15459,]  314  337  325 #> [15460,]  314  337  325 #> [15461,]  315  338  324 #> [15462,]  314  337  325 #> [15463,]  314  337  325 #> [15464,]  314  337  325 #> [15465,]  314  337  325 #> [15466,]  314  337  325 #> [15467,]  314  337  325 #> [15468,]  314  337  325 #> [15469,]  314  337  325 #> [15470,]  314  337  325 #> [15471,]  314  337  325 #> [15472,]  314  337  325 #> [15473,]  314  337  325 #> [15474,]  314  337  325 #> [15475,]  314  337  325 #> [15476,]  314  337  325 #> [15477,]  314  337  325 #> [15478,]  314  337  325 #> [15479,]  314  337  325 #> [15480,]  314  337  325 #> [15481,]  314  337  325 #> [15482,]  315  338  324 #> [15483,]  314  337  325 #> [15484,]  314  337  325 #> [15485,]  314  337  325 #> [15486,]  314  337  325 #> [15487,]  314  337  325 #> [15488,]  314  337  325 #> [15489,]  314  337  325 #> [15490,]  314  337  325 #> [15491,]  314  337  325 #> [15492,]  315  338  324 #> [15493,]  315  338  324 #> [15494,]  314  337  325 #> [15495,]  314  337  325 #> [15496,]  315  338  324 #> [15497,]  315  338  324 #> [15498,]  314  337  325 #> [15499,]  314  337  325 #> [15500,]  314  337  325 #> [15501,]  317  341  329 #> [15502,]  317  341  328 #> [15503,]  316  339  326 #> [15504,]  316  339  327 #> [15505,]  317  341  329 #> [15506,]  317  341  328 #> [15507,]  316  339  327 #> [15508,]  316  339  327 #> [15509,]  317  341  329 #> [15510,]  316  339  327 #> [15511,]  317  341  328 #> [15512,]  316  339  326 #> [15513,]  317  341  329 #> [15514,]  316  339  326 #> [15515,]  316  339  327 #> [15516,]  316  339  327 #> [15517,]  317  341  328 #> [15518,]  317  341  328 #> [15519,]  317  341  328 #> [15520,]  317  340  329 #> [15521,]  317  341  328 #> [15522,]  317  341  329 #> [15523,]  316  339  327 #> [15524,]  317  341  329 #> [15525,]  316  339  327 #> [15526,]  316  339  326 #> [15527,]  317  341  329 #> [15528,]  317  341  329 #> [15529,]  317  341  328 #> [15530,]  316  339  327 #> [15531,]  316  339  327 #> [15532,]  316  339  326 #> [15533,]  317  341  329 #> [15534,]  316  339  327 #> [15535,]  316  339  327 #> [15536,]  317  341  329 #> [15537,]  316  339  327 #> [15538,]  317  341  329 #> [15539,]  317  340  329 #> [15540,]  316  339  327 #> [15541,]  317  341  329 #> [15542,]  317  341  328 #> [15543,]  317  341  328 #> [15544,]  316  339  327 #> [15545,]  316  339  327 #> [15546,]  316  339  327 #> [15547,]  316  339  327 #> [15548,]  317  341  328 #> [15549,]  316  339  327 #> [15550,]  317  341  329 #> [15551,]  317  341  328 #> [15552,]  316  339  327 #> [15553,]  317  340  329 #> [15554,]  317  341  329 #> [15555,]  316  339  327 #> [15556,]  317  340  328 #> [15557,]  316  339  327 #> [15558,]  317  341  329 #> [15559,]  316  339  327 #> [15560,]  316  339  327 #> [15561,]  317  341  328 #> [15562,]  317  341  328 #> [15563,]  317  341  328 #> [15564,]  317  341  328 #> [15565,]  317  340  328 #> [15566,]  317  340  328 #> [15567,]  316  339  327 #> [15568,]  316  339  327 #> [15569,]  316  339  326 #> [15570,]  317  341  328 #> [15571,]  316  339  327 #> [15572,]  316  339  327 #> [15573,]  317  341  329 #> [15574,]  316  339  327 #> [15575,]  316  339  327 #> [15576,]  316  339  327 #> [15577,]  317  341  329 #> [15578,]  316  339  327 #> [15579,]  317  341  328 #> [15580,]  316  339  326 #> [15581,]  317  341  328 #> [15582,]  317  341  328 #> [15583,]  317  341  329 #> [15584,]  317  341  329 #> [15585,]  317  341  329 #> [15586,]  316  339  327 #> [15587,]  317  341  329 #> [15588,]  316  339  327 #> [15589,]  317  341  328 #> [15590,]  317  340  329 #> [15591,]  317  341  329 #> [15592,]  316  339  327 #> [15593,]  317  341  328 #> [15594,]  317  341  328 #> [15595,]  316  339  327 #> [15596,]  316  339  327 #> [15597,]  316  339  327 #> [15598,]  316  339  327 #> [15599,]  317  341  329 #> [15600,]  317  340  328 #> [15601,]  319  342  330 #> [15602,]  318  342  330 #> [15603,]  318  342  331 #> [15604,]  319  342  331 #> [15605,]  318  342  331 #> [15606,]  318  342  330 #> [15607,]  319  342  331 #> [15608,]  318  342  331 #> [15609,]  319  342  331 #> [15610,]  319  342  331 #> [15611,]  318  342  330 #> [15612,]  318  342  331 #> [15613,]  319  342  330 #> [15614,]  319  342  330 #> [15615,]  318  342  330 #> [15616,]  319  342  330 #> [15617,]  318  342  330 #> [15618,]  318  342  331 #> [15619,]  318  342  332 #> [15620,]  319  342  332 #> [15621,]  318  342  330 #> [15622,]  319  342  330 #> [15623,]  318  342  331 #> [15624,]  319  342  331 #> [15625,]  319  342  331 #> [15626,]  318  342  330 #> [15627,]  318  342  330 #> [15628,]  319  342  331 #> [15629,]  318  342  330 #> [15630,]  318  342  331 #> [15631,]  318  342  331 #> [15632,]  318  342  331 #> [15633,]  318  342  330 #> [15634,]  318  342  331 #> [15635,]  318  342  330 #> [15636,]  319  342  332 #> [15637,]  318  342  330 #> [15638,]  318  342  332 #> [15639,]  319  342  331 #> [15640,]  318  342  331 #> [15641,]  318  342  330 #> [15642,]  318  342  331 #> [15643,]  318  342  331 #> [15644,]  318  342  330 #> [15645,]  319  342  331 #> [15646,]  318  342  332 #> [15647,]  318  342  330 #> [15648,]  318  342  331 #> [15649,]  319  342  331 #> [15650,]  319  342  330 #> [15651,]  318  342  331 #> [15652,]  319  342  330 #> [15653,]  319  342  332 #> [15654,]  319  342  331 #> [15655,]  319  342  332 #> [15656,]  318  342  331 #> [15657,]  319  342  331 #> [15658,]  319  342  330 #> [15659,]  319  342  330 #> [15660,]  318  342  331 #> [15661,]  318  342  330 #> [15662,]  318  342  331 #> [15663,]  318  342  331 #> [15664,]  318  342  332 #> [15665,]  318  342  331 #> [15666,]  318  342  332 #> [15667,]  319  342  331 #> [15668,]  318  342  330 #> [15669,]  318  342  332 #> [15670,]  318  342  330 #> [15671,]  318  342  330 #> [15672,]  319  342  331 #> [15673,]  319  342  330 #> [15674,]  318  342  331 #> [15675,]  318  342  331 #> [15676,]  319  342  330 #> [15677,]  318  342  330 #> [15678,]  318  342  331 #> [15679,]  318  342  330 #> [15680,]  318  342  332 #> [15681,]  318  342  330 #> [15682,]  318  342  331 #> [15683,]  318  342  330 #> [15684,]  318  342  330 #> [15685,]  319  342  331 #> [15686,]  319  342  330 #> [15687,]  319  342  330 #> [15688,]  318  342  331 #> [15689,]  318  342  331 #> [15690,]  319  342  330 #> [15691,]  319  342  331 #> [15692,]  318  342  331 #> [15693,]  318  342  330 #> [15694,]  318  342  330 #> [15695,]  318  342  331 #> [15696,]  318  342  330 #> [15697,]  318  342  332 #> [15698,]  318  342  331 #> [15699,]  318  342  330 #> [15700,]  318  342  330 #> [15701,]  320  343  334 #> [15702,]  320  343  334 #> [15703,]  320  343  334 #> [15704,]  321  344  333 #> [15705,]  320  343  334 #> [15706,]  320  343  334 #> [15707,]  320  343  334 #> [15708,]  322  345  333 #> [15709,]  322  345  333 #> [15710,]  320  343  334 #> [15711,]  321  344  333 #> [15712,]  320  343  335 #> [15713,]  321  344  333 #> [15714,]  320  343  335 #> [15715,]  320  343  334 #> [15716,]  320  343  334 #> [15717,]  321  344  333 #> [15718,]  320  343  334 #> [15719,]  320  343  335 #> [15720,]  320  343  334 #> [15721,]  320  343  334 #> [15722,]  321  344  333 #> [15723,]  320  343  334 #> [15724,]  320  343  334 #> [15725,]  320  343  334 #> [15726,]  320  343  334 #> [15727,]  321  344  333 #> [15728,]  320  343  334 #> [15729,]  320  343  334 #> [15730,]  320  343  334 #> [15731,]  320  343  334 #> [15732,]  320  343  334 #> [15733,]  320  343  334 #> [15734,]  320  343  334 #> [15735,]  321  344  333 #> [15736,]  320  343  334 #> [15737,]  320  343  334 #> [15738,]  320  343  335 #> [15739,]  320  343  334 #> [15740,]  320  343  334 #> [15741,]  320  343  335 #> [15742,]  320  343  335 #> [15743,]  322  345  333 #> [15744,]  321  344  333 #> [15745,]  320  343  334 #> [15746,]  320  343  334 #> [15747,]  320  343  334 #> [15748,]  320  343  335 #> [15749,]  321  344  333 #> [15750,]  320  343  334 #> [15751,]  320  343  334 #> [15752,]  321  344  333 #> [15753,]  320  343  334 #> [15754,]  320  343  334 #> [15755,]  322  345  333 #> [15756,]  320  343  334 #> [15757,]  320  343  334 #> [15758,]  322  345  333 #> [15759,]  320  343  334 #> [15760,]  320  343  334 #> [15761,]  320  343  335 #> [15762,]  320  343  334 #> [15763,]  320  343  334 #> [15764,]  320  343  334 #> [15765,]  320  343  334 #> [15766,]  322  345  333 #> [15767,]  320  343  334 #> [15768,]  320  343  334 #> [15769,]  321  344  333 #> [15770,]  320  343  334 #> [15771,]  320  343  334 #> [15772,]  320  343  334 #> [15773,]  320  343  334 #> [15774,]  320  343  335 #> [15775,]  320  343  335 #> [15776,]  320  343  334 #> [15777,]  320  343  334 #> [15778,]  320  343  334 #> [15779,]  321  344  333 #> [15780,]  321  344  333 #> [15781,]  322  345  333 #> [15782,]  321  344  333 #> [15783,]  321  344  333 #> [15784,]  320  343  334 #> [15785,]  320  343  334 #> [15786,]  320  343  334 #> [15787,]  322  345  333 #> [15788,]  321  344  333 #> [15789,]  321  344  333 #> [15790,]  322  345  333 #> [15791,]  320  343  334 #> [15792,]  322  345  333 #> [15793,]  320  343  335 #> [15794,]  320  343  334 #> [15795,]  321  344  333 #> [15796,]  320  343  335 #> [15797,]  320  343  335 #> [15798,]  320  343  334 #> [15799,]  321  344  333 #> [15800,]  320  343  334 #> [15801,]  324  347  337 #> [15802,]  323  346  336 #> [15803,]  323  346  336 #> [15804,]  323  346  336 #> [15805,]  323  346  336 #> [15806,]  323  346  336 #> [15807,]  323  346  336 #> [15808,]  323  346  336 #> [15809,]  324  347  337 #> [15810,]  323  346  336 #> [15811,]  323  346  336 #> [15812,]  323  346  336 #> [15813,]  324  347  337 #> [15814,]  323  346  336 #> [15815,]  323  346  336 #> [15816,]  323  346  336 #> [15817,]  324  347  337 #> [15818,]  324  347  337 #> [15819,]  323  346  336 #> [15820,]  324  347  337 #> [15821,]  323  346  336 #> [15822,]  323  346  336 #> [15823,]  323  346  336 #> [15824,]  323  346  336 #> [15825,]  323  346  336 #> [15826,]  323  346  336 #> [15827,]  324  347  337 #> [15828,]  323  346  336 #> [15829,]  323  346  336 #> [15830,]  323  346  336 #> [15831,]  323  346  336 #> [15832,]  323  346  336 #> [15833,]  324  347  337 #> [15834,]  323  346  336 #> [15835,]  323  346  336 #> [15836,]  324  347  337 #> [15837,]  323  346  336 #> [15838,]  324  347  337 #> [15839,]  323  346  336 #> [15840,]  323  346  336 #> [15841,]  323  346  336 #> [15842,]  324  347  337 #> [15843,]  323  346  336 #> [15844,]  323  346  336 #> [15845,]  323  346  336 #> [15846,]  323  346  336 #> [15847,]  323  346  336 #> [15848,]  323  346  336 #> [15849,]  323  346  336 #> [15850,]  323  346  336 #> [15851,]  324  347  337 #> [15852,]  323  346  336 #> [15853,]  324  347  337 #> [15854,]  324  347  337 #> [15855,]  323  346  336 #> [15856,]  324  347  337 #> [15857,]  323  346  336 #> [15858,]  323  346  336 #> [15859,]  323  346  336 #> [15860,]  323  346  336 #> [15861,]  323  346  336 #> [15862,]  323  346  336 #> [15863,]  323  346  336 #> [15864,]  323  346  336 #> [15865,]  324  347  337 #> [15866,]  324  347  337 #> [15867,]  323  346  336 #> [15868,]  323  346  336 #> [15869,]  323  346  336 #> [15870,]  323  346  336 #> [15871,]  323  346  336 #> [15872,]  323  346  336 #> [15873,]  323  346  336 #> [15874,]  323  346  336 #> [15875,]  323  346  336 #> [15876,]  323  346  336 #> [15877,]  324  347  337 #> [15878,]  323  346  336 #> [15879,]  324  347  337 #> [15880,]  323  346  336 #> [15881,]  323  346  336 #> [15882,]  324  347  337 #> [15883,]  324  347  337 #> [15884,]  324  347  337 #> [15885,]  324  347  337 #> [15886,]  323  346  336 #> [15887,]  324  347  337 #> [15888,]  323  346  336 #> [15889,]  323  346  336 #> [15890,]  323  346  336 #> [15891,]  324  347  337 #> [15892,]  323  346  336 #> [15893,]  324  347  337 #> [15894,]  324  347  337 #> [15895,]  323  346  336 #> [15896,]  323  346  336 #> [15897,]  323  346  336 #> [15898,]  323  346  336 #> [15899,]  323  346  336 #> [15900,]  323  346  336 #> [15901,]  326  349  338 #> [15902,]  326  349  338 #> [15903,]  326  349  338 #> [15904,]  326  349  338 #> [15905,]  326  349  338 #> [15906,]  326  349  338 #> [15907,]  326  349  338 #> [15908,]  326  349  338 #> [15909,]  326  349  338 #> [15910,]  326  349  338 #> [15911,]  326  349  338 #> [15912,]  326  349  338 #> [15913,]  326  349  338 #> [15914,]  326  349  338 #> [15915,]  326  349  338 #> [15916,]  326  349  338 #> [15917,]  326  349  338 #> [15918,]  326  349  338 #> [15919,]  326  349  338 #> [15920,]  326  349  338 #> [15921,]  326  349  338 #> [15922,]  326  349  338 #> [15923,]  326  349  338 #> [15924,]  326  349  338 #> [15925,]  325  348  338 #> [15926,]  326  349  338 #> [15927,]  326  349  338 #> [15928,]  326  349  338 #> [15929,]  326  349  338 #> [15930,]  326  349  338 #> [15931,]  326  349  338 #> [15932,]  326  349  338 #> [15933,]  326  349  338 #> [15934,]  326  349  338 #> [15935,]  326  349  338 #> [15936,]  326  349  338 #> [15937,]  326  349  338 #> [15938,]  326  349  338 #> [15939,]  326  349  338 #> [15940,]  326  349  338 #> [15941,]  326  349  338 #> [15942,]  326  349  338 #> [15943,]  326  349  338 #> [15944,]  326  349  338 #> [15945,]  326  349  338 #> [15946,]  326  349  338 #> [15947,]  326  349  338 #> [15948,]  326  349  338 #> [15949,]  326  349  338 #> [15950,]  326  349  338 #> [15951,]  326  349  338 #> [15952,]  326  349  338 #> [15953,]  326  349  338 #> [15954,]  326  349  338 #> [15955,]  326  349  338 #> [15956,]  325  348  338 #> [15957,]  326  349  338 #> [15958,]  326  349  338 #> [15959,]  326  349  338 #> [15960,]  326  349  338 #> [15961,]  326  349  338 #> [15962,]  326  349  338 #> [15963,]  326  349  338 #> [15964,]  326  349  338 #> [15965,]  325  348  338 #> [15966,]  326  349  338 #> [15967,]  326  349  338 #> [15968,]  326  349  338 #> [15969,]  326  349  338 #> [15970,]  326  349  338 #> [15971,]  326  349  338 #> [15972,]  326  349  338 #> [15973,]  326  349  338 #> [15974,]  326  349  338 #> [15975,]  326  349  338 #> [15976,]  326  349  338 #> [15977,]  326  349  338 #> [15978,]  326  349  338 #> [15979,]  326  349  338 #> [15980,]  325  348  338 #> [15981,]  326  349  338 #> [15982,]  326  349  338 #> [15983,]  326  349  338 #> [15984,]  326  349  338 #> [15985,]  325  348  338 #> [15986,]  326  349  338 #> [15987,]  326  349  338 #> [15988,]  326  349  338 #> [15989,]  325  348  338 #> [15990,]  326  349  338 #> [15991,]  326  349  338 #> [15992,]  326  349  338 #> [15993,]  326  349  338 #> [15994,]  326  349  338 #> [15995,]  326  349  338 #> [15996,]  326  349  338 #> [15997,]  326  349  338 #> [15998,]  326  349  338 #> [15999,]  326  349  338 #> [16000,]  326  349  338 #> [16001,]  327  350  340 #> [16002,]  327  350  339 #> [16003,]  327  350  340 #> [16004,]  327  350  340 #> [16005,]  327  350  340 #> [16006,]  328  351  340 #> [16007,]  327  350  340 #> [16008,]  328  351  340 #> [16009,]  328  351  340 #> [16010,]  327  350  340 #> [16011,]  327  350  340 #> [16012,]  328  351  339 #> [16013,]  327  350  340 #> [16014,]  327  350  340 #> [16015,]  328  351  339 #> [16016,]  327  350  340 #> [16017,]  327  350  339 #> [16018,]  327  350  340 #> [16019,]  327  350  340 #> [16020,]  327  350  340 #> [16021,]  327  350  340 #> [16022,]  327  350  340 #> [16023,]  327  350  339 #> [16024,]  327  350  340 #> [16025,]  327  350  340 #> [16026,]  328  351  340 #> [16027,]  327  350  340 #> [16028,]  327  350  340 #> [16029,]  327  350  339 #> [16030,]  327  350  340 #> [16031,]  327  350  339 #> [16032,]  327  350  340 #> [16033,]  327  350  340 #> [16034,]  327  350  339 #> [16035,]  327  350  340 #> [16036,]  327  350  340 #> [16037,]  327  350  339 #> [16038,]  327  350  340 #> [16039,]  327  350  340 #> [16040,]  327  350  340 #> [16041,]  327  350  340 #> [16042,]  327  350  339 #> [16043,]  328  351  339 #> [16044,]  327  350  339 #> [16045,]  327  350  340 #> [16046,]  328  351  340 #> [16047,]  327  350  340 #> [16048,]  327  350  339 #> [16049,]  327  350  340 #> [16050,]  327  350  340 #> [16051,]  328  351  340 #> [16052,]  327  350  340 #> [16053,]  327  350  340 #> [16054,]  327  350  340 #> [16055,]  327  350  340 #> [16056,]  328  351  340 #> [16057,]  327  350  340 #> [16058,]  327  350  340 #> [16059,]  327  350  340 #> [16060,]  327  350  340 #> [16061,]  328  351  340 #> [16062,]  327  350  340 #> [16063,]  327  350  339 #> [16064,]  328  351  339 #> [16065,]  327  350  340 #> [16066,]  328  351  340 #> [16067,]  327  350  340 #> [16068,]  327  350  340 #> [16069,]  327  350  340 #> [16070,]  327  350  339 #> [16071,]  327  350  340 #> [16072,]  327  350  340 #> [16073,]  327  350  340 #> [16074,]  327  350  340 #> [16075,]  327  350  339 #> [16076,]  328  351  340 #> [16077,]  327  350  340 #> [16078,]  327  350  339 #> [16079,]  327  350  339 #> [16080,]  327  350  340 #> [16081,]  327  350  339 #> [16082,]  327  350  340 #> [16083,]  327  350  340 #> [16084,]  327  350  340 #> [16085,]  327  350  340 #> [16086,]  327  350  340 #> [16087,]  327  350  340 #> [16088,]  327  350  340 #> [16089,]  327  350  340 #> [16090,]  327  350  340 #> [16091,]  327  350  340 #> [16092,]  327  350  339 #> [16093,]  327  350  340 #> [16094,]  328  351  339 #> [16095,]  327  350  339 #> [16096,]  327  350  340 #> [16097,]  327  350  340 #> [16098,]  327  350  340 #> [16099,]  327  350  340 #> [16100,]  327  350  339 #> [16101,]  330  353  343 #> [16102,]  329  352  341 #> [16103,]  329  352  341 #> [16104,]  329  352  341 #> [16105,]  330  353  342 #> [16106,]  329  352  341 #> [16107,]  329  352  341 #> [16108,]  329  352  341 #> [16109,]  329  352  341 #> [16110,]  330  353  343 #> [16111,]  330  353  342 #> [16112,]  330  353  342 #> [16113,]  329  352  341 #> [16114,]  330  353  342 #> [16115,]  330  353  343 #> [16116,]  329  352  341 #> [16117,]  330  353  343 #> [16118,]  330  353  343 #> [16119,]  329  352  341 #> [16120,]  329  352  341 #> [16121,]  329  352  341 #> [16122,]  330  353  342 #> [16123,]  329  352  341 #> [16124,]  329  352  341 #> [16125,]  329  352  341 #> [16126,]  330  353  342 #> [16127,]  330  353  343 #> [16128,]  329  352  341 #> [16129,]  329  352  341 #> [16130,]  329  352  341 #> [16131,]  330  353  342 #> [16132,]  330  353  342 #> [16133,]  329  352  341 #> [16134,]  329  352  341 #> [16135,]  329  352  341 #> [16136,]  329  352  341 #> [16137,]  329  352  341 #> [16138,]  330  353  343 #> [16139,]  329  352  341 #> [16140,]  329  352  341 #> [16141,]  329  352  341 #> [16142,]  329  352  341 #> [16143,]  330  353  343 #> [16144,]  329  352  341 #> [16145,]  329  352  341 #> [16146,]  329  352  341 #> [16147,]  330  353  343 #> [16148,]  329  352  341 #> [16149,]  329  352  341 #> [16150,]  329  352  341 #> [16151,]  329  352  341 #> [16152,]  330  353  342 #> [16153,]  329  352  341 #> [16154,]  329  352  341 #> [16155,]  329  352  341 #> [16156,]  329  352  341 #> [16157,]  329  352  341 #> [16158,]  330  353  342 #> [16159,]  330  353  342 #> [16160,]  329  352  341 #> [16161,]  330  353  343 #> [16162,]  329  352  341 #> [16163,]  329  352  341 #> [16164,]  329  352  341 #> [16165,]  329  352  341 #> [16166,]  330  353  342 #> [16167,]  329  352  341 #> [16168,]  329  352  341 #> [16169,]  329  352  341 #> [16170,]  330  353  343 #> [16171,]  330  353  343 #> [16172,]  329  352  341 #> [16173,]  329  352  341 #> [16174,]  329  352  341 #> [16175,]  330  353  343 #> [16176,]  329  352  341 #> [16177,]  330  353  343 #> [16178,]  329  352  341 #> [16179,]  330  353  343 #> [16180,]  329  352  341 #> [16181,]  329  352  341 #> [16182,]  329  352  341 #> [16183,]  329  352  341 #> [16184,]  329  352  341 #> [16185,]  329  352  341 #> [16186,]  329  352  341 #> [16187,]  330  353  343 #> [16188,]  329  352  341 #> [16189,]  329  352  341 #> [16190,]  330  353  343 #> [16191,]  330  353  342 #> [16192,]  330  353  342 #> [16193,]  329  352  341 #> [16194,]  329  352  341 #> [16195,]  330  353  343 #> [16196,]  329  352  341 #> [16197,]  329  352  341 #> [16198,]  329  352  341 #> [16199,]  329  352  341 #> [16200,]  330  353  343 #> [16201,]  331  355  344 #> [16202,]  331  354  345 #> [16203,]  331  354  345 #> [16204,]  331  355  344 #> [16205,]  331  354  345 #> [16206,]  331  354  345 #> [16207,]  331  355  344 #> [16208,]  331  354  345 #> [16209,]  331  355  344 #> [16210,]  331  355  344 #> [16211,]  331  354  345 #> [16212,]  331  354  345 #> [16213,]  331  355  344 #> [16214,]  331  355  344 #> [16215,]  331  354  345 #> [16216,]  331  355  344 #> [16217,]  331  354  345 #> [16218,]  331  354  345 #> [16219,]  331  354  345 #> [16220,]  331  355  344 #> [16221,]  331  354  345 #> [16222,]  331  355  344 #> [16223,]  331  354  345 #> [16224,]  331  355  344 #> [16225,]  331  355  344 #> [16226,]  331  354  345 #> [16227,]  331  354  345 #> [16228,]  331  355  344 #> [16229,]  331  354  345 #> [16230,]  331  354  345 #> [16231,]  331  354  345 #> [16232,]  331  354  345 #> [16233,]  331  354  345 #> [16234,]  331  354  345 #> [16235,]  331  354  345 #> [16236,]  331  355  344 #> [16237,]  331  354  345 #> [16238,]  331  354  345 #> [16239,]  331  355  344 #> [16240,]  331  354  345 #> [16241,]  331  354  345 #> [16242,]  331  354  345 #> [16243,]  331  354  345 #> [16244,]  331  354  345 #> [16245,]  331  354  345 #> [16246,]  331  354  345 #> [16247,]  331  354  345 #> [16248,]  331  354  345 #> [16249,]  331  354  345 #> [16250,]  331  355  344 #> [16251,]  331  354  345 #> [16252,]  331  355  344 #> [16253,]  331  354  345 #> [16254,]  331  355  344 #> [16255,]  331  355  344 #> [16256,]  331  354  345 #> [16257,]  331  355  344 #> [16258,]  331  355  344 #> [16259,]  331  355  344 #> [16260,]  331  354  345 #> [16261,]  331  354  345 #> [16262,]  331  354  345 #> [16263,]  331  354  345 #> [16264,]  331  354  345 #> [16265,]  331  354  345 #> [16266,]  331  354  345 #> [16267,]  331  355  344 #> [16268,]  331  354  345 #> [16269,]  331  354  345 #> [16270,]  331  354  345 #> [16271,]  331  354  345 #> [16272,]  331  354  345 #> [16273,]  331  355  344 #> [16274,]  331  354  345 #> [16275,]  331  354  345 #> [16276,]  331  355  344 #> [16277,]  331  354  345 #> [16278,]  331  354  345 #> [16279,]  331  354  345 #> [16280,]  331  354  345 #> [16281,]  331  354  345 #> [16282,]  331  354  345 #> [16283,]  331  354  345 #> [16284,]  331  354  345 #> [16285,]  331  355  344 #> [16286,]  331  355  344 #> [16287,]  331  354  345 #> [16288,]  331  354  345 #> [16289,]  331  354  345 #> [16290,]  331  355  344 #> [16291,]  331  355  344 #> [16292,]  331  354  345 #> [16293,]  331  354  345 #> [16294,]  331  354  345 #> [16295,]  331  354  345 #> [16296,]  331  354  345 #> [16297,]  331  354  345 #> [16298,]  331  354  345 #> [16299,]  331  354  345 #> [16300,]  331  354  345 #> [16301,]  333  356  346 #> [16302,]  333  356  347 #> [16303,]  333  356  346 #> [16304,]  333  356  346 #> [16305,]  333  356  347 #> [16306,]  333  356  346 #> [16307,]  332  356  347 #> [16308,]  333  356  346 #> [16309,]  333  356  347 #> [16310,]  333  356  347 #> [16311,]  333  356  346 #> [16312,]  333  356  347 #> [16313,]  333  356  347 #> [16314,]  333  356  346 #> [16315,]  333  356  346 #> [16316,]  333  356  346 #> [16317,]  333  356  347 #> [16318,]  333  356  347 #> [16319,]  333  356  346 #> [16320,]  333  356  347 #> [16321,]  332  356  347 #> [16322,]  333  356  347 #> [16323,]  333  356  347 #> [16324,]  333  356  347 #> [16325,]  333  356  346 #> [16326,]  333  356  346 #> [16327,]  333  356  347 #> [16328,]  333  356  346 #> [16329,]  333  356  347 #> [16330,]  333  356  347 #> [16331,]  333  356  347 #> [16332,]  333  356  347 #> [16333,]  333  356  347 #> [16334,]  333  356  346 #> [16335,]  333  356  346 #> [16336,]  333  356  347 #> [16337,]  333  356  346 #> [16338,]  333  356  346 #> [16339,]  332  356  346 #> [16340,]  333  356  347 #> [16341,]  333  356  347 #> [16342,]  333  356  346 #> [16343,]  333  356  346 #> [16344,]  333  356  347 #> [16345,]  333  356  346 #> [16346,]  333  356  346 #> [16347,]  333  356  347 #> [16348,]  333  356  347 #> [16349,]  332  356  346 #> [16350,]  333  356  347 #> [16351,]  333  356  346 #> [16352,]  333  356  346 #> [16353,]  333  356  347 #> [16354,]  333  356  347 #> [16355,]  333  356  346 #> [16356,]  333  356  346 #> [16357,]  333  356  346 #> [16358,]  333  356  347 #> [16359,]  333  356  346 #> [16360,]  333  356  347 #> [16361,]  333  356  347 #> [16362,]  332  356  346 #> [16363,]  333  356  347 #> [16364,]  333  356  346 #> [16365,]  333  356  346 #> [16366,]  333  356  346 #> [16367,]  333  356  346 #> [16368,]  333  356  346 #> [16369,]  333  356  346 #> [16370,]  332  356  347 #> [16371,]  333  356  346 #> [16372,]  333  356  346 #> [16373,]  333  356  346 #> [16374,]  333  356  347 #> [16375,]  333  356  347 #> [16376,]  333  356  347 #> [16377,]  333  356  346 #> [16378,]  333  356  347 #> [16379,]  333  356  346 #> [16380,]  332  356  347 #> [16381,]  333  356  347 #> [16382,]  333  356  346 #> [16383,]  333  356  347 #> [16384,]  333  356  347 #> [16385,]  333  356  346 #> [16386,]  333  356  347 #> [16387,]  333  356  347 #> [16388,]  333  356  347 #> [16389,]  333  356  346 #> [16390,]  333  356  346 #> [16391,]  333  356  346 #> [16392,]  333  356  347 #> [16393,]  333  356  347 #> [16394,]  333  356  346 #> [16395,]  332  356  347 #> [16396,]  333  356  346 #> [16397,]  333  356  346 #> [16398,]  333  356  346 #> [16399,]  333  356  346 #> [16400,]  333  356  346 #> [16401,]  335  358  350 #> [16402,]  334  357  348 #> [16403,]  334  357  348 #> [16404,]  334  357  348 #> [16405,]  334  357  348 #> [16406,]  334  357  348 #> [16407,]  334  357  348 #> [16408,]  334  357  348 #> [16409,]  335  358  350 #> [16410,]  334  357  348 #> [16411,]  334  357  348 #> [16412,]  334  357  348 #> [16413,]  335  358  349 #> [16414,]  334  357  348 #> [16415,]  334  357  348 #> [16416,]  334  357  348 #> [16417,]  335  358  349 #> [16418,]  335  358  349 #> [16419,]  334  357  348 #> [16420,]  335  358  350 #> [16421,]  334  357  348 #> [16422,]  334  357  348 #> [16423,]  334  357  348 #> [16424,]  334  357  348 #> [16425,]  334  357  348 #> [16426,]  334  357  348 #> [16427,]  335  358  349 #> [16428,]  334  357  348 #> [16429,]  334  357  348 #> [16430,]  334  357  348 #> [16431,]  334  357  348 #> [16432,]  334  357  348 #> [16433,]  335  358  350 #> [16434,]  334  357  348 #> [16435,]  334  357  348 #> [16436,]  335  358  349 #> [16437,]  334  357  348 #> [16438,]  335  358  350 #> [16439,]  334  357  348 #> [16440,]  334  357  348 #> [16441,]  334  357  348 #> [16442,]  335  358  350 #> [16443,]  334  357  348 #> [16444,]  334  357  348 #> [16445,]  334  357  348 #> [16446,]  334  357  348 #> [16447,]  334  357  348 #> [16448,]  334  357  348 #> [16449,]  334  357  348 #> [16450,]  334  357  348 #> [16451,]  335  358  350 #> [16452,]  334  357  348 #> [16453,]  335  358  350 #> [16454,]  335  358  349 #> [16455,]  334  357  348 #> [16456,]  335  358  350 #> [16457,]  334  357  348 #> [16458,]  334  357  348 #> [16459,]  334  357  348 #> [16460,]  334  357  348 #> [16461,]  334  357  348 #> [16462,]  334  357  348 #> [16463,]  334  357  348 #> [16464,]  334  357  348 #> [16465,]  335  358  350 #> [16466,]  335  358  350 #> [16467,]  334  357  348 #> [16468,]  334  357  348 #> [16469,]  334  357  348 #> [16470,]  334  357  348 #> [16471,]  334  357  348 #> [16472,]  334  357  348 #> [16473,]  334  357  348 #> [16474,]  334  357  348 #> [16475,]  334  357  348 #> [16476,]  334  357  348 #> [16477,]  335  358  349 #> [16478,]  334  357  348 #> [16479,]  335  358  349 #> [16480,]  334  357  348 #> [16481,]  334  357  348 #> [16482,]  335  358  350 #> [16483,]  335  358  349 #> [16484,]  335  358  350 #> [16485,]  335  358  349 #> [16486,]  334  357  348 #> [16487,]  335  358  350 #> [16488,]  334  357  348 #> [16489,]  334  357  348 #> [16490,]  334  357  348 #> [16491,]  335  358  350 #> [16492,]  334  357  348 #> [16493,]  335  358  349 #> [16494,]  335  358  350 #> [16495,]  334  357  348 #> [16496,]  334  357  348 #> [16497,]  334  357  348 #> [16498,]  334  357  348 #> [16499,]  334  357  348 #> [16500,]  334  357  348 #> [16501,]  337  360  352 #> [16502,]  337  360  351 #> [16503,]  336  359  352 #> [16504,]  336  359  352 #> [16505,]  336  359  352 #> [16506,]  336  359  351 #> [16507,]  337  360  352 #> [16508,]  337  360  352 #> [16509,]  336  359  352 #> [16510,]  336  359  352 #> [16511,]  336  359  351 #> [16512,]  337  360  351 #> [16513,]  337  360  352 #> [16514,]  336  359  352 #> [16515,]  337  360  351 #> [16516,]  337  360  352 #> [16517,]  337  360  351 #> [16518,]  337  360  351 #> [16519,]  337  360  351 #> [16520,]  337  360  352 #> [16521,]  336  359  351 #> [16522,]  337  360  352 #> [16523,]  337  360  351 #> [16524,]  336  359  352 #> [16525,]  336  359  352 #> [16526,]  337  360  351 #> [16527,]  337  360  352 #> [16528,]  336  359  352 #> [16529,]  337  360  351 #> [16530,]  337  360  351 #> [16531,]  336  359  351 #> [16532,]  336  359  351 #> [16533,]  337  360  352 #> [16534,]  336  359  351 #> [16535,]  336  359  351 #> [16536,]  337  360  352 #> [16537,]  337  360  351 #> [16538,]  337  360  351 #> [16539,]  336  359  352 #> [16540,]  336  359  352 #> [16541,]  337  360  352 #> [16542,]  336  359  351 #> [16543,]  337  360  351 #> [16544,]  337  360  351 #> [16545,]  337  360  352 #> [16546,]  337  360  351 #> [16547,]  336  359  351 #> [16548,]  336  359  351 #> [16549,]  337  360  352 #> [16550,]  337  360  352 #> [16551,]  337  360  351 #> [16552,]  336  359  352 #> [16553,]  337  360  352 #> [16554,]  336  359  352 #> [16555,]  337  360  352 #> [16556,]  337  360  351 #> [16557,]  336  359  352 #> [16558,]  337  360  352 #> [16559,]  337  360  352 #> [16560,]  337  360  351 #> [16561,]  337  360  351 #> [16562,]  336  359  351 #> [16563,]  337  360  351 #> [16564,]  337  360  351 #> [16565,]  336  359  351 #> [16566,]  337  360  351 #> [16567,]  336  359  352 #> [16568,]  337  360  351 #> [16569,]  337  360  351 #> [16570,]  336  359  351 #> [16571,]  337  360  352 #> [16572,]  336  359  352 #> [16573,]  336  359  352 #> [16574,]  336  359  352 #> [16575,]  337  360  351 #> [16576,]  336  359  352 #> [16577,]  337  360  352 #> [16578,]  337  360  351 #> [16579,]  336  359  351 #> [16580,]  337  360  352 #> [16581,]  337  360  351 #> [16582,]  336  359  351 #> [16583,]  337  360  352 #> [16584,]  337  360  352 #> [16585,]  337  360  352 #> [16586,]  336  359  352 #> [16587,]  337  360  352 #> [16588,]  336  359  352 #> [16589,]  336  359  351 #> [16590,]  337  360  352 #> [16591,]  336  359  352 #> [16592,]  336  359  351 #> [16593,]  337  360  351 #> [16594,]  336  359  351 #> [16595,]  337  360  351 #> [16596,]  337  360  351 #> [16597,]  337  360  351 #> [16598,]  336  359  351 #> [16599,]  337  360  352 #> [16600,]  337  360  351 #> [16601,]  339  362  354 #> [16602,]  338  361  353 #> [16603,]  339  362  354 #> [16604,]  339  362  354 #> [16605,]  339  362  354 #> [16606,]  338  361  353 #> [16607,]  339  362  354 #> [16608,]  339  362  354 #> [16609,]  339  362  354 #> [16610,]  339  362  354 #> [16611,]  339  362  354 #> [16612,]  338  361  353 #> [16613,]  339  362  354 #> [16614,]  339  362  354 #> [16615,]  338  361  353 #> [16616,]  339  362  354 #> [16617,]  338  361  353 #> [16618,]  339  362  354 #> [16619,]  339  362  354 #> [16620,]  339  362  354 #> [16621,]  339  362  354 #> [16622,]  339  362  354 #> [16623,]  338  361  353 #> [16624,]  339  362  354 #> [16625,]  339  362  354 #> [16626,]  339  362  354 #> [16627,]  339  362  354 #> [16628,]  339  362  354 #> [16629,]  338  361  353 #> [16630,]  339  362  354 #> [16631,]  338  361  353 #> [16632,]  339  362  354 #> [16633,]  339  362  354 #> [16634,]  338  361  353 #> [16635,]  339  362  354 #> [16636,]  339  362  354 #> [16637,]  338  361  353 #> [16638,]  339  362  354 #> [16639,]  339  362  354 #> [16640,]  339  362  354 #> [16641,]  339  362  354 #> [16642,]  338  361  353 #> [16643,]  338  361  353 #> [16644,]  338  361  353 #> [16645,]  339  362  354 #> [16646,]  339  362  354 #> [16647,]  338  361  353 #> [16648,]  338  361  353 #> [16649,]  339  362  354 #> [16650,]  339  362  354 #> [16651,]  339  362  354 #> [16652,]  339  362  354 #> [16653,]  339  362  354 #> [16654,]  339  362  354 #> [16655,]  339  362  354 #> [16656,]  339  362  354 #> [16657,]  339  362  354 #> [16658,]  339  362  354 #> [16659,]  339  362  354 #> [16660,]  339  362  354 #> [16661,]  339  362  354 #> [16662,]  339  362  354 #> [16663,]  338  361  353 #> [16664,]  338  361  353 #> [16665,]  339  362  354 #> [16666,]  339  362  354 #> [16667,]  339  362  354 #> [16668,]  339  362  354 #> [16669,]  339  362  354 #> [16670,]  338  361  353 #> [16671,]  339  362  354 #> [16672,]  339  362  354 #> [16673,]  339  362  354 #> [16674,]  339  362  354 #> [16675,]  338  361  353 #> [16676,]  339  362  354 #> [16677,]  339  362  354 #> [16678,]  338  361  353 #> [16679,]  338  361  353 #> [16680,]  339  362  354 #> [16681,]  338  361  353 #> [16682,]  339  362  354 #> [16683,]  339  362  354 #> [16684,]  339  362  354 #> [16685,]  339  362  354 #> [16686,]  339  362  354 #> [16687,]  339  362  354 #> [16688,]  339  362  354 #> [16689,]  339  362  354 #> [16690,]  339  362  354 #> [16691,]  339  362  354 #> [16692,]  338  361  353 #> [16693,]  339  362  354 #> [16694,]  338  361  353 #> [16695,]  338  361  353 #> [16696,]  339  362  354 #> [16697,]  339  362  354 #> [16698,]  339  362  354 #> [16699,]  339  362  354 #> [16700,]  338  361  353 #> [16701,]  341  364  356 #> [16702,]  340  363  355 #> [16703,]  341  364  356 #> [16704,]  341  364  356 #> [16705,]  341  364  356 #> [16706,]  340  363  355 #> [16707,]  341  364  356 #> [16708,]  341  364  356 #> [16709,]  341  364  356 #> [16710,]  341  364  356 #> [16711,]  340  363  355 #> [16712,]  340  363  355 #> [16713,]  341  364  356 #> [16714,]  341  364  356 #> [16715,]  340  363  355 #> [16716,]  341  364  356 #> [16717,]  340  363  355 #> [16718,]  340  363  355 #> [16719,]  340  363  355 #> [16720,]  341  364  356 #> [16721,]  340  363  355 #> [16722,]  341  364  356 #> [16723,]  340  363  355 #> [16724,]  341  364  356 #> [16725,]  341  364  356 #> [16726,]  340  363  355 #> [16727,]  341  364  356 #> [16728,]  341  364  356 #> [16729,]  340  363  355 #> [16730,]  340  363  355 #> [16731,]  340  363  355 #> [16732,]  340  363  355 #> [16733,]  341  364  356 #> [16734,]  340  363  355 #> [16735,]  340  363  355 #> [16736,]  341  364  356 #> [16737,]  340  363  355 #> [16738,]  340  363  355 #> [16739,]  341  364  356 #> [16740,]  341  364  356 #> [16741,]  341  364  356 #> [16742,]  340  363  355 #> [16743,]  340  363  355 #> [16744,]  340  363  355 #> [16745,]  341  364  356 #> [16746,]  340  363  355 #> [16747,]  340  363  355 #> [16748,]  340  363  355 #> [16749,]  341  364  356 #> [16750,]  341  364  356 #> [16751,]  340  363  355 #> [16752,]  341  364  356 #> [16753,]  341  364  356 #> [16754,]  341  364  356 #> [16755,]  341  364  356 #> [16756,]  340  363  355 #> [16757,]  341  364  356 #> [16758,]  341  364  356 #> [16759,]  341  364  356 #> [16760,]  340  363  355 #> [16761,]  340  363  355 #> [16762,]  340  363  355 #> [16763,]  340  363  355 #> [16764,]  340  363  355 #> [16765,]  340  363  355 #> [16766,]  340  363  355 #> [16767,]  341  364  356 #> [16768,]  340  363  355 #> [16769,]  340  363  355 #> [16770,]  340  363  355 #> [16771,]  341  364  356 #> [16772,]  341  364  356 #> [16773,]  341  364  356 #> [16774,]  341  364  356 #> [16775,]  340  363  355 #> [16776,]  341  364  356 #> [16777,]  341  364  356 #> [16778,]  340  363  355 #> [16779,]  340  363  355 #> [16780,]  341  364  356 #> [16781,]  340  363  355 #> [16782,]  340  363  355 #> [16783,]  340  363  355 #> [16784,]  341  364  356 #> [16785,]  341  364  356 #> [16786,]  341  364  356 #> [16787,]  341  364  356 #> [16788,]  341  364  356 #> [16789,]  340  363  355 #> [16790,]  341  364  356 #> [16791,]  341  364  356 #> [16792,]  340  363  355 #> [16793,]  340  363  355 #> [16794,]  340  363  355 #> [16795,]  340  363  355 #> [16796,]  340  363  355 #> [16797,]  340  363  355 #> [16798,]  340  363  355 #> [16799,]  341  364  356 #> [16800,]  340  363  355 #> [16801,]  343  366  358 #> [16802,]  343  366  358 #> [16803,]  342  365  357 #> [16804,]  342  365  357 #> [16805,]  343  366  358 #> [16806,]  343  366  358 #> [16807,]  342  365  357 #> [16808,]  342  365  357 #> [16809,]  343  366  358 #> [16810,]  343  366  358 #> [16811,]  343  366  358 #> [16812,]  342  365  357 #> [16813,]  343  366  358 #> [16814,]  343  366  358 #> [16815,]  343  366  358 #> [16816,]  343  366  358 #> [16817,]  343  366  358 #> [16818,]  343  366  358 #> [16819,]  343  366  358 #> [16820,]  343  366  358 #> [16821,]  343  366  358 #> [16822,]  343  366  358 #> [16823,]  342  365  357 #> [16824,]  343  366  358 #> [16825,]  342  365  357 #> [16826,]  343  366  358 #> [16827,]  343  366  358 #> [16828,]  343  366  358 #> [16829,]  343  366  358 #> [16830,]  343  366  358 #> [16831,]  342  365  357 #> [16832,]  343  366  358 #> [16833,]  343  366  358 #> [16834,]  343  366  358 #> [16835,]  343  366  358 #> [16836,]  343  366  358 #> [16837,]  342  365  357 #> [16838,]  343  366  358 #> [16839,]  343  366  358 #> [16840,]  342  365  357 #> [16841,]  343  366  358 #> [16842,]  343  366  358 #> [16843,]  343  366  358 #> [16844,]  343  366  358 #> [16845,]  343  366  358 #> [16846,]  342  365  357 #> [16847,]  342  365  357 #> [16848,]  343  366  358 #> [16849,]  343  366  358 #> [16850,]  343  366  358 #> [16851,]  343  366  358 #> [16852,]  342  365  357 #> [16853,]  343  366  358 #> [16854,]  343  366  358 #> [16855,]  342  365  357 #> [16856,]  343  366  358 #> [16857,]  342  365  357 #> [16858,]  343  366  358 #> [16859,]  342  365  357 #> [16860,]  342  365  357 #> [16861,]  343  366  358 #> [16862,]  343  366  358 #> [16863,]  343  366  358 #> [16864,]  343  366  358 #> [16865,]  343  366  358 #> [16866,]  343  366  358 #> [16867,]  343  366  358 #> [16868,]  342  365  357 #> [16869,]  343  366  358 #> [16870,]  343  366  358 #> [16871,]  343  366  358 #> [16872,]  343  366  358 #> [16873,]  343  366  358 #> [16874,]  342  365  357 #> [16875,]  343  366  358 #> [16876,]  343  366  358 #> [16877,]  343  366  358 #> [16878,]  343  366  358 #> [16879,]  343  366  358 #> [16880,]  342  365  357 #> [16881,]  343  366  358 #> [16882,]  343  366  358 #> [16883,]  343  366  358 #> [16884,]  343  366  358 #> [16885,]  343  366  358 #> [16886,]  342  365  357 #> [16887,]  343  366  358 #> [16888,]  343  366  358 #> [16889,]  343  366  358 #> [16890,]  343  366  358 #> [16891,]  343  366  358 #> [16892,]  342  365  357 #> [16893,]  343  366  358 #> [16894,]  343  366  358 #> [16895,]  343  366  358 #> [16896,]  342  365  357 #> [16897,]  342  365  357 #> [16898,]  342  365  357 #> [16899,]  343  366  358 #> [16900,]  343  366  358 #> [16901,]  344  367  360 #> [16902,]  344  367  360 #> [16903,]  344  367  360 #> [16904,]  345  368  359 #> [16905,]  344  367  360 #> [16906,]  344  367  360 #> [16907,]  345  368  359 #> [16908,]  344  367  360 #> [16909,]  344  367  360 #> [16910,]  345  368  359 #> [16911,]  344  367  360 #> [16912,]  344  367  360 #> [16913,]  344  367  360 #> [16914,]  344  367  360 #> [16915,]  344  367  360 #> [16916,]  345  368  359 #> [16917,]  344  367  360 #> [16918,]  344  367  360 #> [16919,]  344  367  360 #> [16920,]  345  368  359 #> [16921,]  344  367  360 #> [16922,]  344  367  360 #> [16923,]  344  367  360 #> [16924,]  345  368  359 #> [16925,]  345  368  359 #> [16926,]  344  367  360 #> [16927,]  344  367  360 #> [16928,]  345  368  359 #> [16929,]  344  367  360 #> [16930,]  344  367  360 #> [16931,]  344  367  360 #> [16932,]  344  367  360 #> [16933,]  344  367  360 #> [16934,]  344  367  360 #> [16935,]  344  367  360 #> [16936,]  345  368  359 #> [16937,]  344  367  360 #> [16938,]  344  367  360 #> [16939,]  345  368  359 #> [16940,]  344  367  360 #> [16941,]  344  367  360 #> [16942,]  344  367  360 #> [16943,]  344  367  360 #> [16944,]  344  367  360 #> [16945,]  344  367  360 #> [16946,]  344  367  360 #> [16947,]  344  367  360 #> [16948,]  344  367  360 #> [16949,]  344  367  360 #> [16950,]  345  368  359 #> [16951,]  344  367  360 #> [16952,]  345  368  359 #> [16953,]  344  367  360 #> [16954,]  345  368  359 #> [16955,]  344  367  360 #> [16956,]  344  367  360 #> [16957,]  345  368  359 #> [16958,]  344  367  360 #> [16959,]  344  367  360 #> [16960,]  344  367  360 #> [16961,]  344  367  360 #> [16962,]  344  367  360 #> [16963,]  344  367  360 #> [16964,]  344  367  360 #> [16965,]  344  367  360 #> [16966,]  344  367  360 #> [16967,]  344  367  360 #> [16968,]  344  367  360 #> [16969,]  344  367  360 #> [16970,]  344  367  360 #> [16971,]  344  367  360 #> [16972,]  344  367  360 #> [16973,]  345  368  359 #> [16974,]  344  367  360 #> [16975,]  344  367  360 #> [16976,]  345  368  359 #> [16977,]  344  367  360 #> [16978,]  344  367  360 #> [16979,]  344  367  360 #> [16980,]  344  367  360 #> [16981,]  344  367  360 #> [16982,]  344  367  360 #> [16983,]  344  367  360 #> [16984,]  344  367  360 #> [16985,]  344  367  360 #> [16986,]  345  368  359 #> [16987,]  344  367  360 #> [16988,]  344  367  360 #> [16989,]  344  367  360 #> [16990,]  344  367  360 #> [16991,]  345  368  359 #> [16992,]  344  367  360 #> [16993,]  344  367  360 #> [16994,]  344  367  360 #> [16995,]  344  367  360 #> [16996,]  344  367  360 #> [16997,]  344  367  360 #> [16998,]  344  367  360 #> [16999,]  344  367  360 #> [17000,]  344  367  360 #> [17001,]  346  369  362 #> [17002,]  347  369  361 #> [17003,]  347  369  362 #> [17004,]  346  369  362 #> [17005,]  347  369  362 #> [17006,]  347  369  361 #> [17007,]  347  369  362 #> [17008,]  346  369  362 #> [17009,]  346  369  362 #> [17010,]  347  369  362 #> [17011,]  346  369  361 #> [17012,]  347  369  361 #> [17013,]  346  369  362 #> [17014,]  346  369  362 #> [17015,]  347  369  361 #> [17016,]  347  369  362 #> [17017,]  346  369  361 #> [17018,]  347  369  362 #> [17019,]  347  369  361 #> [17020,]  347  369  362 #> [17021,]  346  369  362 #> [17022,]  346  369  362 #> [17023,]  347  369  361 #> [17024,]  347  369  362 #> [17025,]  347  369  362 #> [17026,]  347  369  361 #> [17027,]  346  369  362 #> [17028,]  347  369  362 #> [17029,]  347  369  361 #> [17030,]  346  369  361 #> [17031,]  347  369  361 #> [17032,]  347  369  362 #> [17033,]  347  369  362 #> [17034,]  347  369  361 #> [17035,]  346  369  361 #> [17036,]  347  369  362 #> [17037,]  347  369  361 #> [17038,]  347  369  362 #> [17039,]  347  369  362 #> [17040,]  347  369  362 #> [17041,]  347  369  362 #> [17042,]  347  369  361 #> [17043,]  346  369  361 #> [17044,]  346  369  361 #> [17045,]  346  369  362 #> [17046,]  346  369  362 #> [17047,]  347  369  361 #> [17048,]  347  369  361 #> [17049,]  346  369  362 #> [17050,]  347  369  362 #> [17051,]  347  369  362 #> [17052,]  346  369  362 #> [17053,]  347  369  362 #> [17054,]  346  369  362 #> [17055,]  346  369  362 #> [17056,]  347  369  361 #> [17057,]  347  369  362 #> [17058,]  346  369  362 #> [17059,]  347  369  362 #> [17060,]  347  369  361 #> [17061,]  347  369  361 #> [17062,]  347  369  362 #> [17063,]  347  369  361 #> [17064,]  347  369  361 #> [17065,]  347  369  361 #> [17066,]  346  369  361 #> [17067,]  347  369  362 #> [17068,]  346  369  361 #> [17069,]  346  369  362 #> [17070,]  347  369  361 #> [17071,]  347  369  362 #> [17072,]  347  369  362 #> [17073,]  347  369  362 #> [17074,]  346  369  362 #> [17075,]  347  369  361 #> [17076,]  347  369  362 #> [17077,]  347  369  362 #> [17078,]  347  369  361 #> [17079,]  346  369  361 #> [17080,]  346  369  362 #> [17081,]  346  369  361 #> [17082,]  346  369  362 #> [17083,]  346  369  362 #> [17084,]  347  369  362 #> [17085,]  346  369  362 #> [17086,]  347  369  362 #> [17087,]  346  369  362 #> [17088,]  346  369  362 #> [17089,]  346  369  362 #> [17090,]  346  369  362 #> [17091,]  346  369  362 #> [17092,]  346  369  361 #> [17093,]  347  369  362 #> [17094,]  347  369  361 #> [17095,]  346  369  361 #> [17096,]  346  369  361 #> [17097,]  347  369  362 #> [17098,]  347  369  362 #> [17099,]  346  369  362 #> [17100,]  347  369  361 #> [17101,]  349  371  364 #> [17102,]  349  371  364 #> [17103,]  348  370  363 #> [17104,]  348  370  363 #> [17105,]  348  370  363 #> [17106,]  349  371  364 #> [17107,]  348  370  363 #> [17108,]  348  370  363 #> [17109,]  348  370  363 #> [17110,]  348  370  363 #> [17111,]  348  370  363 #> [17112,]  348  370  363 #> [17113,]  349  371  364 #> [17114,]  349  371  364 #> [17115,]  349  371  364 #> [17116,]  349  371  364 #> [17117,]  349  371  364 #> [17118,]  348  370  363 #> [17119,]  348  370  363 #> [17120,]  348  370  363 #> [17121,]  349  371  364 #> [17122,]  348  370  363 #> [17123,]  348  370  363 #> [17124,]  348  370  363 #> [17125,]  348  370  363 #> [17126,]  348  370  363 #> [17127,]  348  370  363 #> [17128,]  348  370  363 #> [17129,]  349  371  364 #> [17130,]  348  370  363 #> [17131,]  348  370  363 #> [17132,]  348  370  363 #> [17133,]  349  371  364 #> [17134,]  348  370  363 #> [17135,]  349  371  364 #> [17136,]  348  370  363 #> [17137,]  348  370  363 #> [17138,]  348  370  363 #> [17139,]  348  370  363 #> [17140,]  348  370  363 #> [17141,]  349  371  364 #> [17142,]  348  370  363 #> [17143,]  348  370  363 #> [17144,]  349  371  364 #> [17145,]  348  370  363 #> [17146,]  348  370  363 #> [17147,]  348  370  363 #> [17148,]  348  370  363 #> [17149,]  348  370  363 #> [17150,]  349  371  364 #> [17151,]  348  370  363 #> [17152,]  348  370  363 #> [17153,]  348  370  363 #> [17154,]  348  370  363 #> [17155,]  348  370  363 #> [17156,]  348  370  363 #> [17157,]  348  370  363 #> [17158,]  348  370  363 #> [17159,]  349  371  364 #> [17160,]  348  370  363 #> [17161,]  349  371  364 #> [17162,]  348  370  363 #> [17163,]  348  370  363 #> [17164,]  348  370  363 #> [17165,]  348  370  363 #> [17166,]  348  370  363 #> [17167,]  348  370  363 #> [17168,]  349  371  364 #> [17169,]  348  370  363 #> [17170,]  349  371  364 #> [17171,]  348  370  363 #> [17172,]  348  370  363 #> [17173,]  349  371  364 #> [17174,]  348  370  363 #> [17175,]  348  370  363 #> [17176,]  349  371  364 #> [17177,]  349  371  364 #> [17178,]  348  370  363 #> [17179,]  349  371  364 #> [17180,]  348  370  363 #> [17181,]  349  371  364 #> [17182,]  348  370  363 #> [17183,]  349  371  364 #> [17184,]  348  370  363 #> [17185,]  348  370  363 #> [17186,]  349  371  364 #> [17187,]  348  370  363 #> [17188,]  348  370  363 #> [17189,]  348  370  363 #> [17190,]  348  370  363 #> [17191,]  348  370  363 #> [17192,]  348  370  363 #> [17193,]  349  371  364 #> [17194,]  348  370  363 #> [17195,]  348  370  363 #> [17196,]  349  371  364 #> [17197,]  348  370  363 #> [17198,]  348  370  363 #> [17199,]  349  371  364 #> [17200,]  348  370  363 #> [17201,]  351  373  365 #> [17202,]  350  372  366 #> [17203,]  350  372  366 #> [17204,]  350  372  366 #> [17205,]  350  372  366 #> [17206,]  350  372  366 #> [17207,]  350  372  366 #> [17208,]  350  372  366 #> [17209,]  351  373  365 #> [17210,]  350  372  366 #> [17211,]  351  373  365 #> [17212,]  350  372  366 #> [17213,]  351  373  365 #> [17214,]  350  372  366 #> [17215,]  350  372  366 #> [17216,]  350  372  366 #> [17217,]  351  373  365 #> [17218,]  351  373  365 #> [17219,]  350  372  366 #> [17220,]  351  373  365 #> [17221,]  350  372  366 #> [17222,]  350  372  366 #> [17223,]  350  372  366 #> [17224,]  350  372  366 #> [17225,]  350  372  366 #> [17226,]  350  372  366 #> [17227,]  351  373  365 #> [17228,]  351  373  365 #> [17229,]  351  373  365 #> [17230,]  350  372  366 #> [17231,]  350  372  366 #> [17232,]  350  372  366 #> [17233,]  351  373  365 #> [17234,]  350  372  366 #> [17235,]  350  372  366 #> [17236,]  351  373  365 #> [17237,]  350  372  366 #> [17238,]  351  373  365 #> [17239,]  351  373  365 #> [17240,]  350  372  366 #> [17241,]  350  372  366 #> [17242,]  351  373  365 #> [17243,]  350  372  366 #> [17244,]  350  372  366 #> [17245,]  350  372  366 #> [17246,]  350  372  366 #> [17247,]  350  372  366 #> [17248,]  350  372  366 #> [17249,]  350  372  366 #> [17250,]  350  372  366 #> [17251,]  351  373  365 #> [17252,]  350  372  366 #> [17253,]  351  373  365 #> [17254,]  351  373  365 #> [17255,]  350  372  366 #> [17256,]  351  373  365 #> [17257,]  350  372  366 #> [17258,]  351  373  365 #> [17259,]  350  372  366 #> [17260,]  350  372  366 #> [17261,]  350  372  366 #> [17262,]  351  373  365 #> [17263,]  350  372  366 #> [17264,]  350  372  366 #> [17265,]  351  373  365 #> [17266,]  351  373  365 #> [17267,]  350  372  366 #> [17268,]  350  372  366 #> [17269,]  350  372  366 #> [17270,]  350  372  366 #> [17271,]  350  372  366 #> [17272,]  350  372  366 #> [17273,]  350  372  366 #> [17274,]  350  372  366 #> [17275,]  350  372  366 #> [17276,]  350  372  366 #> [17277,]  351  373  365 #> [17278,]  350  372  366 #> [17279,]  351  373  365 #> [17280,]  350  372  366 #> [17281,]  350  372  366 #> [17282,]  351  373  365 #> [17283,]  351  373  365 #> [17284,]  351  373  365 #> [17285,]  351  373  365 #> [17286,]  350  372  366 #> [17287,]  351  373  365 #> [17288,]  350  372  366 #> [17289,]  351  373  365 #> [17290,]  350  372  366 #> [17291,]  351  373  365 #> [17292,]  350  372  366 #> [17293,]  351  373  365 #> [17294,]  351  373  365 #> [17295,]  350  372  366 #> [17296,]  350  372  366 #> [17297,]  350  372  366 #> [17298,]  350  372  366 #> [17299,]  350  372  366 #> [17300,]  350  372  366 #> [17301,]  352  374  367 #> [17302,]  352  374  367 #> [17303,]  352  374  367 #> [17304,]  353  375  368 #> [17305,]  352  374  367 #> [17306,]  352  374  367 #> [17307,]  353  375  368 #> [17308,]  352  374  367 #> [17309,]  353  375  368 #> [17310,]  353  375  368 #> [17311,]  352  374  367 #> [17312,]  352  374  367 #> [17313,]  352  374  367 #> [17314,]  353  375  368 #> [17315,]  352  374  367 #> [17316,]  353  375  368 #> [17317,]  352  374  367 #> [17318,]  352  374  367 #> [17319,]  352  374  367 #> [17320,]  353  375  368 #> [17321,]  352  374  367 #> [17322,]  352  374  367 #> [17323,]  352  374  367 #> [17324,]  353  375  368 #> [17325,]  353  375  368 #> [17326,]  352  374  367 #> [17327,]  352  374  367 #> [17328,]  353  375  368 #> [17329,]  352  374  367 #> [17330,]  352  374  367 #> [17331,]  352  374  367 #> [17332,]  352  374  367 #> [17333,]  352  374  367 #> [17334,]  352  374  367 #> [17335,]  352  374  367 #> [17336,]  353  375  368 #> [17337,]  352  374  367 #> [17338,]  352  374  367 #> [17339,]  353  375  368 #> [17340,]  352  374  367 #> [17341,]  352  374  367 #> [17342,]  352  374  367 #> [17343,]  352  374  367 #> [17344,]  352  374  367 #> [17345,]  352  374  367 #> [17346,]  352  374  367 #> [17347,]  352  374  367 #> [17348,]  352  374  367 #> [17349,]  352  374  367 #> [17350,]  353  375  368 #> [17351,]  352  374  367 #> [17352,]  353  375  368 #> [17353,]  352  374  367 #> [17354,]  353  375  368 #> [17355,]  353  375  368 #> [17356,]  352  374  367 #> [17357,]  353  375  368 #> [17358,]  352  374  367 #> [17359,]  353  375  368 #> [17360,]  352  374  367 #> [17361,]  352  374  367 #> [17362,]  352  374  367 #> [17363,]  352  374  367 #> [17364,]  352  374  367 #> [17365,]  352  374  367 #> [17366,]  352  374  367 #> [17367,]  353  375  368 #> [17368,]  352  374  367 #> [17369,]  352  374  367 #> [17370,]  352  374  367 #> [17371,]  352  374  367 #> [17372,]  352  374  367 #> [17373,]  353  375  368 #> [17374,]  352  374  367 #> [17375,]  352  374  367 #> [17376,]  353  375  368 #> [17377,]  352  374  367 #> [17378,]  352  374  367 #> [17379,]  352  374  367 #> [17380,]  352  374  367 #> [17381,]  352  374  367 #> [17382,]  352  374  367 #> [17383,]  352  374  367 #> [17384,]  352  374  367 #> [17385,]  352  374  367 #> [17386,]  353  375  368 #> [17387,]  352  374  367 #> [17388,]  352  374  367 #> [17389,]  352  374  367 #> [17390,]  353  375  368 #> [17391,]  353  375  368 #> [17392,]  352  374  367 #> [17393,]  352  374  367 #> [17394,]  352  374  367 #> [17395,]  352  374  367 #> [17396,]  352  374  367 #> [17397,]  352  374  367 #> [17398,]  352  374  367 #> [17399,]  352  374  367 #> [17400,]  352  374  367 #> [17401,]  354  376  370 #> [17402,]  354  376  370 #> [17403,]  355  377  369 #> [17404,]  354  376  370 #> [17405,]  354  376  370 #> [17406,]  355  377  369 #> [17407,]  354  376  370 #> [17408,]  354  376  370 #> [17409,]  354  376  370 #> [17410,]  354  376  370 #> [17411,]  354  376  370 #> [17412,]  355  377  369 #> [17413,]  354  376  370 #> [17414,]  354  376  370 #> [17415,]  354  376  370 #> [17416,]  354  376  370 #> [17417,]  354  376  370 #> [17418,]  354  376  370 #> [17419,]  355  377  369 #> [17420,]  355  377  369 #> [17421,]  354  376  370 #> [17422,]  354  376  370 #> [17423,]  354  376  370 #> [17424,]  354  376  370 #> [17425,]  355  377  369 #> [17426,]  354  376  370 #> [17427,]  354  376  370 #> [17428,]  355  377  369 #> [17429,]  354  376  370 #> [17430,]  354  376  370 #> [17431,]  354  376  370 #> [17432,]  354  376  370 #> [17433,]  355  377  369 #> [17434,]  355  377  369 #> [17435,]  354  376  370 #> [17436,]  354  376  370 #> [17437,]  354  376  370 #> [17438,]  354  376  370 #> [17439,]  354  376  370 #> [17440,]  354  376  370 #> [17441,]  354  376  370 #> [17442,]  354  376  370 #> [17443,]  354  376  370 #> [17444,]  354  376  370 #> [17445,]  354  376  370 #> [17446,]  354  376  370 #> [17447,]  354  376  370 #> [17448,]  354  376  370 #> [17449,]  354  376  370 #> [17450,]  354  376  370 #> [17451,]  354  376  370 #> [17452,]  354  376  370 #> [17453,]  354  376  370 #> [17454,]  354  376  370 #> [17455,]  354  376  370 #> [17456,]  354  376  370 #> [17457,]  354  376  370 #> [17458,]  354  376  370 #> [17459,]  354  376  370 #> [17460,]  355  377  369 #> [17461,]  354  376  370 #> [17462,]  354  376  370 #> [17463,]  354  376  370 #> [17464,]  354  376  370 #> [17465,]  355  377  369 #> [17466,]  354  376  370 #> [17467,]  354  376  370 #> [17468,]  354  376  370 #> [17469,]  354  376  370 #> [17470,]  355  377  369 #> [17471,]  354  376  370 #> [17472,]  354  376  370 #> [17473,]  355  377  369 #> [17474,]  354  376  370 #> [17475,]  354  376  370 #> [17476,]  354  376  370 #> [17477,]  354  376  370 #> [17478,]  354  376  370 #> [17479,]  354  376  370 #> [17480,]  354  376  370 #> [17481,]  354  376  370 #> [17482,]  354  376  370 #> [17483,]  354  376  370 #> [17484,]  354  376  370 #> [17485,]  354  376  370 #> [17486,]  354  376  370 #> [17487,]  354  376  370 #> [17488,]  354  376  370 #> [17489,]  354  376  370 #> [17490,]  354  376  370 #> [17491,]  354  376  370 #> [17492,]  354  376  370 #> [17493,]  355  377  369 #> [17494,]  354  376  370 #> [17495,]  354  376  370 #> [17496,]  354  376  370 #> [17497,]  355  377  369 #> [17498,]  355  377  369 #> [17499,]  354  376  370 #> [17500,]  354  376  370 #> [17501,]  356  378  371 #> [17502,]  357  379  372 #> [17503,]  356  378  371 #> [17504,]  356  378  371 #> [17505,]  357  379  372 #> [17506,]  356  378  371 #> [17507,]  357  379  372 #> [17508,]  356  378  371 #> [17509,]  357  379  372 #> [17510,]  357  379  372 #> [17511,]  356  378  371 #> [17512,]  357  379  372 #> [17513,]  357  379  372 #> [17514,]  356  378  371 #> [17515,]  356  378  371 #> [17516,]  356  378  371 #> [17517,]  357  379  372 #> [17518,]  357  379  372 #> [17519,]  356  378  371 #> [17520,]  357  379  372 #> [17521,]  357  379  372 #> [17522,]  357  379  372 #> [17523,]  357  379  372 #> [17524,]  357  379  372 #> [17525,]  356  378  371 #> [17526,]  356  378  371 #> [17527,]  357  379  372 #> [17528,]  356  378  371 #> [17529,]  357  379  372 #> [17530,]  357  379  372 #> [17531,]  357  379  372 #> [17532,]  357  379  372 #> [17533,]  357  379  372 #> [17534,]  356  378  371 #> [17535,]  356  378  371 #> [17536,]  357  379  372 #> [17537,]  356  378  371 #> [17538,]  356  378  371 #> [17539,]  356  378  371 #> [17540,]  357  379  372 #> [17541,]  357  379  372 #> [17542,]  356  378  371 #> [17543,]  356  378  371 #> [17544,]  357  379  372 #> [17545,]  356  378  371 #> [17546,]  356  378  371 #> [17547,]  357  379  372 #> [17548,]  357  379  372 #> [17549,]  356  378  371 #> [17550,]  357  379  372 #> [17551,]  356  378  371 #> [17552,]  356  378  371 #> [17553,]  357  379  372 #> [17554,]  357  379  372 #> [17555,]  356  378  371 #> [17556,]  356  378  371 #> [17557,]  356  378  371 #> [17558,]  357  379  372 #> [17559,]  356  378  371 #> [17560,]  357  379  372 #> [17561,]  357  379  372 #> [17562,]  356  378  371 #> [17563,]  357  379  372 #> [17564,]  356  378  371 #> [17565,]  356  378  371 #> [17566,]  356  378  371 #> [17567,]  356  378  371 #> [17568,]  356  378  371 #> [17569,]  356  378  371 #> [17570,]  357  379  372 #> [17571,]  356  378  371 #> [17572,]  356  378  371 #> [17573,]  356  378  371 #> [17574,]  356  378  371 #> [17575,]  357  379  372 #> [17576,]  356  378  371 #> [17577,]  356  378  371 #> [17578,]  357  379  372 #> [17579,]  356  378  371 #> [17580,]  357  379  372 #> [17581,]  357  379  372 #> [17582,]  356  378  371 #> [17583,]  357  379  372 #> [17584,]  357  379  372 #> [17585,]  356  378  371 #> [17586,]  357  379  372 #> [17587,]  357  379  372 #> [17588,]  357  379  372 #> [17589,]  356  378  371 #> [17590,]  356  378  371 #> [17591,]  356  378  371 #> [17592,]  357  379  372 #> [17593,]  357  379  372 #> [17594,]  356  378  371 #> [17595,]  357  379  372 #> [17596,]  356  378  371 #> [17597,]  356  378  371 #> [17598,]  356  378  371 #> [17599,]  356  378  371 #> [17600,]  356  378  371 #> [17601,]  358  380  373 #> [17602,]  360  381  374 #> [17603,]  359  381  374 #> [17604,]  360  381  374 #> [17605,]  358  380  373 #> [17606,]  360  381  374 #> [17607,]  359  381  374 #> [17608,]  359  381  374 #> [17609,]  360  381  374 #> [17610,]  358  380  373 #> [17611,]  358  380  373 #> [17612,]  358  380  373 #> [17613,]  359  381  374 #> [17614,]  358  380  373 #> [17615,]  358  380  373 #> [17616,]  359  381  374 #> [17617,]  358  380  373 #> [17618,]  358  380  373 #> [17619,]  360  381  374 #> [17620,]  359  381  374 #> [17621,]  360  381  374 #> [17622,]  358  380  373 #> [17623,]  360  381  374 #> [17624,]  359  381  374 #> [17625,]  359  381  374 #> [17626,]  358  380  373 #> [17627,]  358  380  373 #> [17628,]  360  381  374 #> [17629,]  359  381  374 #> [17630,]  360  381  374 #> [17631,]  358  380  373 #> [17632,]  358  380  373 #> [17633,]  360  381  374 #> [17634,]  360  381  374 #> [17635,]  360  381  374 #> [17636,]  360  381  374 #> [17637,]  360  381  374 #> [17638,]  358  380  373 #> [17639,]  359  381  374 #> [17640,]  359  381  374 #> [17641,]  360  381  374 #> [17642,]  360  381  374 #> [17643,]  358  380  373 #> [17644,]  359  381  374 #> [17645,]  359  381  374 #> [17646,]  359  381  374 #> [17647,]  358  380  373 #> [17648,]  360  381  374 #> [17649,]  359  381  374 #> [17650,]  359  381  374 #> [17651,]  359  381  374 #> [17652,]  358  380  373 #> [17653,]  359  381  374 #> [17654,]  359  381  374 #> [17655,]  359  381  374 #> [17656,]  359  381  374 #> [17657,]  360  381  374 #> [17658,]  358  380  373 #> [17659,]  358  380  373 #> [17660,]  360  381  374 #> [17661,]  358  380  373 #> [17662,]  360  381  374 #> [17663,]  359  381  374 #> [17664,]  360  381  374 #> [17665,]  359  381  374 #> [17666,]  358  380  373 #> [17667,]  360  381  374 #> [17668,]  360  381  374 #> [17669,]  360  381  374 #> [17670,]  358  380  373 #> [17671,]  358  380  373 #> [17672,]  359  381  374 #> [17673,]  360  381  374 #> [17674,]  360  381  374 #> [17675,]  358  380  373 #> [17676,]  359  381  374 #> [17677,]  358  380  373 #> [17678,]  359  381  374 #> [17679,]  358  380  373 #> [17680,]  360  381  374 #> [17681,]  360  381  374 #> [17682,]  360  381  374 #> [17683,]  359  381  374 #> [17684,]  359  381  374 #> [17685,]  360  381  374 #> [17686,]  359  381  374 #> [17687,]  358  380  373 #> [17688,]  360  381  374 #> [17689,]  359  381  374 #> [17690,]  358  380  373 #> [17691,]  358  380  373 #> [17692,]  358  380  373 #> [17693,]  360  381  374 #> [17694,]  359  381  374 #> [17695,]  358  380  373 #> [17696,]  360  381  374 #> [17697,]  360  381  374 #> [17698,]  359  381  374 #> [17699,]  360  381  374 #> [17700,]  358  380  373 #> [17701,]  362  382  375 #> [17702,]  361  385  376 #> [17703,]  362  382  375 #> [17704,]  362  382  375 #> [17705,]  363  383  375 #> [17706,]  361  384  376 #> [17707,]  362  382  375 #> [17708,]  362  382  375 #> [17709,]  363  383  375 #> [17710,]  363  383  375 #> [17711,]  362  382  375 #> [17712,]  361  384  376 #> [17713,]  363  383  375 #> [17714,]  362  382  375 #> [17715,]  361  385  376 #> [17716,]  362  382  375 #> [17717,]  361  384  376 #> [17718,]  363  383  375 #> [17719,]  362  382  375 #> [17720,]  363  383  375 #> [17721,]  363  383  375 #> [17722,]  363  383  375 #> [17723,]  361  384  376 #> [17724,]  363  383  375 #> [17725,]  362  382  375 #> [17726,]  362  382  375 #> [17727,]  363  383  375 #> [17728,]  362  382  375 #> [17729,]  361  385  376 #> [17730,]  363  383  375 #> [17731,]  361  384  376 #> [17732,]  363  383  375 #> [17733,]  363  383  375 #> [17734,]  361  384  376 #> [17735,]  362  382  375 #> [17736,]  363  383  375 #> [17737,]  361  385  376 #> [17738,]  362  382  375 #> [17739,]  362  382  375 #> [17740,]  363  383  375 #> [17741,]  362  382  375 #> [17742,]  361  384  376 #> [17743,]  361  385  376 #> [17744,]  361  385  376 #> [17745,]  362  382  375 #> [17746,]  362  382  375 #> [17747,]  361  384  376 #> [17748,]  361  384  376 #> [17749,]  362  382  375 #> [17750,]  363  383  375 #> [17751,]  362  382  375 #> [17752,]  362  382  375 #> [17753,]  363  383  375 #> [17754,]  362  382  375 #> [17755,]  362  382  375 #> [17756,]  362  382  375 #> [17757,]  362  382  375 #> [17758,]  362  382  375 #> [17759,]  362  382  375 #> [17760,]  363  383  375 #> [17761,]  363  383  375 #> [17762,]  362  382  375 #> [17763,]  361  384  376 #> [17764,]  361  385  376 #> [17765,]  362  382  375 #> [17766,]  362  382  375 #> [17767,]  362  382  375 #> [17768,]  362  382  375 #> [17769,]  362  382  375 #> [17770,]  361  384  376 #> [17771,]  362  382  375 #> [17772,]  362  382  375 #> [17773,]  362  382  375 #> [17774,]  362  382  375 #> [17775,]  361  384  376 #> [17776,]  362  382  375 #> [17777,]  362  382  375 #> [17778,]  361  385  376 #> [17779,]  361  384  376 #> [17780,]  363  383  375 #> [17781,]  361  385  376 #> [17782,]  362  382  375 #> [17783,]  363  383  375 #> [17784,]  363  383  375 #> [17785,]  362  382  375 #> [17786,]  363  383  375 #> [17787,]  363  383  375 #> [17788,]  363  383  375 #> [17789,]  362  382  375 #> [17790,]  362  382  375 #> [17791,]  362  382  375 #> [17792,]  361  384  376 #> [17793,]  363  383  375 #> [17794,]  361  384  376 #> [17795,]  361  385  376 #> [17796,]  362  382  375 #> [17797,]  362  382  375 #> [17798,]  362  382  375 #> [17799,]  362  382  375 #> [17800,]  361  385  376 #> [17801,]  365  387  378 #> [17802,]  365  387  378 #> [17803,]  364  386  377 #> [17804,]  365  387  378 #> [17805,]  365  387  378 #> [17806,]  364  386  377 #> [17807,]  365  387  378 #> [17808,]  365  387  379 #> [17809,]  365  387  378 #> [17810,]  365  387  378 #> [17811,]  364  386  377 #> [17812,]  365  387  378 #> [17813,]  365  387  379 #> [17814,]  365  387  378 #> [17815,]  365  387  379 #> [17816,]  364  386  377 #> [17817,]  365  387  378 #> [17818,]  365  387  378 #> [17819,]  364  386  377 #> [17820,]  365  387  379 #> [17821,]  365  387  378 #> [17822,]  365  387  379 #> [17823,]  365  387  378 #> [17824,]  365  387  378 #> [17825,]  365  387  378 #> [17826,]  365  387  378 #> [17827,]  365  387  379 #> [17828,]  365  387  378 #> [17829,]  365  387  379 #> [17830,]  365  387  378 #> [17831,]  365  387  378 #> [17832,]  365  387  378 #> [17833,]  365  387  378 #> [17834,]  364  386  377 #> [17835,]  364  386  377 #> [17836,]  365  387  379 #> [17837,]  364  386  377 #> [17838,]  364  386  377 #> [17839,]  365  387  378 #> [17840,]  365  387  378 #> [17841,]  365  387  379 #> [17842,]  365  387  378 #> [17843,]  365  387  378 #> [17844,]  365  387  378 #> [17845,]  364  386  377 #> [17846,]  365  387  379 #> [17847,]  365  387  378 #> [17848,]  365  387  378 #> [17849,]  364  386  377 #> [17850,]  365  387  379 #> [17851,]  365  387  379 #> [17852,]  364  386  377 #> [17853,]  365  387  379 #> [17854,]  365  387  378 #> [17855,]  365  387  379 #> [17856,]  365  387  378 #> [17857,]  365  387  378 #> [17858,]  365  387  379 #> [17859,]  365  387  378 #> [17860,]  365  387  379 #> [17861,]  365  387  378 #> [17862,]  365  387  378 #> [17863,]  365  387  378 #> [17864,]  364  386  377 #> [17865,]  365  387  378 #> [17866,]  365  387  379 #> [17867,]  365  387  378 #> [17868,]  364  386  377 #> [17869,]  365  387  379 #> [17870,]  365  387  378 #> [17871,]  365  387  379 #> [17872,]  364  386  377 #> [17873,]  365  387  378 #> [17874,]  365  387  378 #> [17875,]  365  387  378 #> [17876,]  365  387  378 #> [17877,]  365  387  379 #> [17878,]  365  387  378 #> [17879,]  365  387  378 #> [17880,]  365  387  379 #> [17881,]  365  387  379 #> [17882,]  365  387  378 #> [17883,]  365  387  379 #> [17884,]  365  387  379 #> [17885,]  365  387  379 #> [17886,]  365  387  378 #> [17887,]  365  387  379 #> [17888,]  365  387  378 #> [17889,]  365  387  378 #> [17890,]  365  387  379 #> [17891,]  365  387  378 #> [17892,]  365  387  378 #> [17893,]  365  387  378 #> [17894,]  365  387  378 #> [17895,]  365  387  378 #> [17896,]  364  386  377 #> [17897,]  364  386  377 #> [17898,]  365  387  378 #> [17899,]  365  387  378 #> [17900,]  365  387  379 #> [17901,]  367  389  380 #> [17902,]  367  389  380 #> [17903,]  366  388  381 #> [17904,]  366  388  381 #> [17905,]  366  388  381 #> [17906,]  367  389  380 #> [17907,]  366  388  381 #> [17908,]  366  388  381 #> [17909,]  366  388  381 #> [17910,]  366  388  381 #> [17911,]  366  388  381 #> [17912,]  366  388  381 #> [17913,]  367  389  380 #> [17914,]  367  389  380 #> [17915,]  367  389  380 #> [17916,]  367  389  380 #> [17917,]  367  389  380 #> [17918,]  366  388  381 #> [17919,]  366  388  381 #> [17920,]  366  388  381 #> [17921,]  367  389  380 #> [17922,]  366  388  381 #> [17923,]  366  388  381 #> [17924,]  366  388  381 #> [17925,]  366  388  381 #> [17926,]  366  388  381 #> [17927,]  366  388  381 #> [17928,]  366  388  381 #> [17929,]  367  389  380 #> [17930,]  366  388  381 #> [17931,]  366  388  381 #> [17932,]  366  388  381 #> [17933,]  367  389  380 #> [17934,]  366  388  381 #> [17935,]  366  388  381 #> [17936,]  366  388  381 #> [17937,]  366  388  381 #> [17938,]  366  388  381 #> [17939,]  366  388  381 #> [17940,]  366  388  381 #> [17941,]  367  389  380 #> [17942,]  366  388  381 #> [17943,]  366  388  381 #> [17944,]  367  389  380 #> [17945,]  366  388  381 #> [17946,]  366  388  381 #> [17947,]  366  388  381 #> [17948,]  366  388  381 #> [17949,]  366  388  381 #> [17950,]  367  389  380 #> [17951,]  366  388  381 #> [17952,]  366  388  381 #> [17953,]  366  388  381 #> [17954,]  366  388  381 #> [17955,]  366  388  381 #> [17956,]  366  388  381 #> [17957,]  366  388  381 #> [17958,]  366  388  381 #> [17959,]  367  389  380 #> [17960,]  366  388  381 #> [17961,]  367  389  380 #> [17962,]  366  388  381 #> [17963,]  366  388  381 #> [17964,]  366  388  381 #> [17965,]  366  388  381 #> [17966,]  366  388  381 #> [17967,]  366  388  381 #> [17968,]  367  389  380 #> [17969,]  366  388  381 #> [17970,]  367  389  380 #> [17971,]  366  388  381 #> [17972,]  366  388  381 #> [17973,]  367  389  380 #> [17974,]  366  388  381 #> [17975,]  366  388  381 #> [17976,]  367  389  380 #> [17977,]  366  388  381 #> [17978,]  366  388  381 #> [17979,]  366  388  381 #> [17980,]  366  388  381 #> [17981,]  367  389  380 #> [17982,]  366  388  381 #> [17983,]  367  389  380 #> [17984,]  366  388  381 #> [17985,]  366  388  381 #> [17986,]  367  389  380 #> [17987,]  366  388  381 #> [17988,]  366  388  381 #> [17989,]  366  388  381 #> [17990,]  366  388  381 #> [17991,]  366  388  381 #> [17992,]  366  388  381 #> [17993,]  367  389  380 #> [17994,]  366  388  381 #> [17995,]  366  388  381 #> [17996,]  367  389  380 #> [17997,]  366  388  381 #> [17998,]  366  388  381 #> [17999,]  367  389  380 #> [18000,]  366  388  381 #> [18001,]  369  391  382 #> [18002,]  368  390  383 #> [18003,]  368  390  383 #> [18004,]  368  390  383 #> [18005,]  368  390  383 #> [18006,]  369  391  382 #> [18007,]  368  390  383 #> [18008,]  369  391  382 #> [18009,]  369  391  382 #> [18010,]  368  390  383 #> [18011,]  368  390  383 #> [18012,]  369  391  382 #> [18013,]  368  390  383 #> [18014,]  369  391  382 #> [18015,]  369  391  382 #> [18016,]  368  390  383 #> [18017,]  368  390  383 #> [18018,]  368  390  383 #> [18019,]  368  390  383 #> [18020,]  369  391  382 #> [18021,]  368  390  383 #> [18022,]  368  390  383 #> [18023,]  368  390  383 #> [18024,]  368  390  383 #> [18025,]  368  390  383 #> [18026,]  369  391  382 #> [18027,]  368  390  383 #> [18028,]  368  390  383 #> [18029,]  368  390  383 #> [18030,]  368  390  383 #> [18031,]  368  390  383 #> [18032,]  368  390  383 #> [18033,]  369  391  382 #> [18034,]  368  390  383 #> [18035,]  368  390  383 #> [18036,]  368  390  383 #> [18037,]  368  390  383 #> [18038,]  368  390  383 #> [18039,]  368  390  383 #> [18040,]  368  390  383 #> [18041,]  368  390  383 #> [18042,]  368  390  383 #> [18043,]  369  391  382 #> [18044,]  368  390  383 #> [18045,]  369  391  382 #> [18046,]  369  391  382 #> [18047,]  368  390  383 #> [18048,]  368  390  383 #> [18049,]  368  390  383 #> [18050,]  369  391  382 #> [18051,]  369  391  382 #> [18052,]  368  390  383 #> [18053,]  369  391  382 #> [18054,]  368  390  383 #> [18055,]  369  391  382 #> [18056,]  369  391  382 #> [18057,]  369  391  382 #> [18058,]  369  391  382 #> [18059,]  368  390  383 #> [18060,]  369  391  382 #> [18061,]  369  391  382 #> [18062,]  368  390  383 #> [18063,]  368  390  383 #> [18064,]  369  391  382 #> [18065,]  369  391  382 #> [18066,]  369  391  382 #> [18067,]  368  390  383 #> [18068,]  369  391  382 #> [18069,]  368  390  383 #> [18070,]  368  390  383 #> [18071,]  369  391  382 #> [18072,]  369  391  382 #> [18073,]  369  391  382 #> [18074,]  369  391  382 #> [18075,]  369  391  382 #> [18076,]  369  391  382 #> [18077,]  368  390  383 #> [18078,]  369  391  382 #> [18079,]  368  390  383 #> [18080,]  368  390  383 #> [18081,]  369  391  382 #> [18082,]  368  390  383 #> [18083,]  368  390  383 #> [18084,]  368  390  383 #> [18085,]  368  390  383 #> [18086,]  368  390  383 #> [18087,]  368  390  383 #> [18088,]  368  390  383 #> [18089,]  368  390  383 #> [18090,]  368  390  383 #> [18091,]  368  390  383 #> [18092,]  369  391  382 #> [18093,]  368  390  383 #> [18094,]  369  391  382 #> [18095,]  368  390  383 #> [18096,]  369  391  382 #> [18097,]  369  391  382 #> [18098,]  368  390  383 #> [18099,]  368  390  383 #> [18100,]  368  390  383 #> [18101,]  370  393  385 #> [18102,]  370  393  385 #> [18103,]  370  392  384 #> [18104,]  370  392  384 #> [18105,]  370  393  385 #> [18106,]  370  394  385 #> [18107,]  370  392  384 #> [18108,]  370  392  384 #> [18109,]  370  394  385 #> [18110,]  370  393  385 #> [18111,]  370  393  385 #> [18112,]  370  392  384 #> [18113,]  370  393  385 #> [18114,]  370  393  385 #> [18115,]  370  394  385 #> [18116,]  370  393  385 #> [18117,]  370  393  385 #> [18118,]  370  393  385 #> [18119,]  370  393  385 #> [18120,]  370  393  385 #> [18121,]  370  393  385 #> [18122,]  370  393  385 #> [18123,]  370  392  384 #> [18124,]  370  393  385 #> [18125,]  370  392  384 #> [18126,]  370  394  385 #> [18127,]  370  393  385 #> [18128,]  370  393  385 #> [18129,]  370  393  385 #> [18130,]  370  393  385 #> [18131,]  370  392  384 #> [18132,]  370  393  385 #> [18133,]  370  394  385 #> [18134,]  370  393  385 #> [18135,]  370  393  385 #> [18136,]  370  393  385 #> [18137,]  370  392  384 #> [18138,]  370  393  385 #> [18139,]  370  393  385 #> [18140,]  370  392  384 #> [18141,]  370  393  385 #> [18142,]  370  393  385 #> [18143,]  370  394  385 #> [18144,]  370  393  385 #> [18145,]  370  394  385 #> [18146,]  370  392  384 #> [18147,]  370  392  384 #> [18148,]  370  393  385 #> [18149,]  370  393  385 #> [18150,]  370  393  385 #> [18151,]  370  394  385 #> [18152,]  370  392  384 #> [18153,]  370  393  385 #> [18154,]  370  393  385 #> [18155,]  370  392  384 #> [18156,]  370  394  385 #> [18157,]  370  392  384 #> [18158,]  370  393  385 #> [18159,]  370  392  384 #> [18160,]  370  392  384 #> [18161,]  370  394  385 #> [18162,]  370  393  385 #> [18163,]  370  393  385 #> [18164,]  370  394  385 #> [18165,]  370  393  385 #> [18166,]  370  394  385 #> [18167,]  370  393  385 #> [18168,]  370  392  384 #> [18169,]  370  393  385 #> [18170,]  370  393  385 #> [18171,]  370  393  385 #> [18172,]  370  393  385 #> [18173,]  370  393  385 #> [18174,]  370  392  384 #> [18175,]  370  393  385 #> [18176,]  370  394  385 #> [18177,]  370  393  385 #> [18178,]  370  393  385 #> [18179,]  370  393  385 #> [18180,]  370  392  384 #> [18181,]  370  393  385 #> [18182,]  370  393  385 #> [18183,]  370  393  385 #> [18184,]  370  393  385 #> [18185,]  370  393  385 #> [18186,]  370  392  384 #> [18187,]  370  393  385 #> [18188,]  370  393  385 #> [18189,]  370  393  385 #> [18190,]  370  393  385 #> [18191,]  370  393  385 #> [18192,]  370  392  384 #> [18193,]  370  393  385 #> [18194,]  370  394  385 #> [18195,]  370  393  385 #> [18196,]  370  392  384 #> [18197,]  370  392  384 #> [18198,]  370  392  384 #> [18199,]  370  393  385 #> [18200,]  370  393  385 #> [18201,]  372  396  387 #> [18202,]  372  396  387 #> [18203,]  372  396  387 #> [18204,]  372  396  387 #> [18205,]  372  396  387 #> [18206,]  372  396  387 #> [18207,]  372  396  387 #> [18208,]  372  396  387 #> [18209,]  372  396  387 #> [18210,]  372  396  387 #> [18211,]  372  396  387 #> [18212,]  371  395  386 #> [18213,]  372  396  387 #> [18214,]  372  396  387 #> [18215,]  371  395  386 #> [18216,]  372  396  387 #> [18217,]  371  395  386 #> [18218,]  372  396  387 #> [18219,]  372  396  387 #> [18220,]  372  396  387 #> [18221,]  372  396  387 #> [18222,]  372  396  387 #> [18223,]  371  395  386 #> [18224,]  372  396  387 #> [18225,]  372  396  387 #> [18226,]  372  396  387 #> [18227,]  372  396  387 #> [18228,]  372  396  387 #> [18229,]  371  395  386 #> [18230,]  372  396  387 #> [18231,]  371  395  386 #> [18232,]  372  396  387 #> [18233,]  372  396  387 #> [18234,]  371  395  386 #> [18235,]  372  396  387 #> [18236,]  372  396  387 #> [18237,]  371  395  386 #> [18238,]  372  396  387 #> [18239,]  372  396  387 #> [18240,]  372  396  387 #> [18241,]  372  396  387 #> [18242,]  371  395  386 #> [18243,]  371  395  386 #> [18244,]  371  395  386 #> [18245,]  372  396  387 #> [18246,]  372  396  387 #> [18247,]  372  396  387 #> [18248,]  371  395  386 #> [18249,]  372  396  387 #> [18250,]  372  396  387 #> [18251,]  372  396  387 #> [18252,]  372  396  387 #> [18253,]  372  396  387 #> [18254,]  372  396  387 #> [18255,]  372  396  387 #> [18256,]  372  396  387 #> [18257,]  372  396  387 #> [18258,]  372  396  387 #> [18259,]  372  396  387 #> [18260,]  372  396  387 #> [18261,]  372  396  387 #> [18262,]  372  396  387 #> [18263,]  371  395  386 #> [18264,]  371  395  386 #> [18265,]  372  396  387 #> [18266,]  372  396  387 #> [18267,]  372  396  387 #> [18268,]  372  396  387 #> [18269,]  372  396  387 #> [18270,]  371  395  386 #> [18271,]  372  396  387 #> [18272,]  372  396  387 #> [18273,]  372  396  387 #> [18274,]  372  396  387 #> [18275,]  371  395  386 #> [18276,]  372  396  387 #> [18277,]  372  396  387 #> [18278,]  371  395  386 #> [18279,]  371  395  386 #> [18280,]  372  396  387 #> [18281,]  371  395  386 #> [18282,]  372  396  387 #> [18283,]  372  396  387 #> [18284,]  372  396  387 #> [18285,]  372  396  387 #> [18286,]  372  396  387 #> [18287,]  372  396  387 #> [18288,]  372  396  387 #> [18289,]  372  396  387 #> [18290,]  372  396  387 #> [18291,]  372  396  387 #> [18292,]  372  396  387 #> [18293,]  372  396  387 #> [18294,]  371  395  386 #> [18295,]  371  395  386 #> [18296,]  372  396  387 #> [18297,]  372  396  387 #> [18298,]  372  396  387 #> [18299,]  372  396  387 #> [18300,]  371  395  386 #> [18301,]  373  397  388 #> [18302,]  373  397  388 #> [18303,]  373  397  388 #> [18304,]  374  398  389 #> [18305,]  373  397  388 #> [18306,]  373  397  388 #> [18307,]  373  397  388 #> [18308,]  373  397  388 #> [18309,]  373  397  388 #> [18310,]  373  397  388 #> [18311,]  373  397  388 #> [18312,]  373  397  388 #> [18313,]  373  397  388 #> [18314,]  374  398  389 #> [18315,]  373  397  388 #> [18316,]  373  397  388 #> [18317,]  373  397  388 #> [18318,]  373  397  388 #> [18319,]  373  397  388 #> [18320,]  373  397  388 #> [18321,]  373  397  388 #> [18322,]  373  397  388 #> [18323,]  373  397  388 #> [18324,]  373  397  388 #> [18325,]  373  397  388 #> [18326,]  373  397  388 #> [18327,]  374  398  389 #> [18328,]  373  397  388 #> [18329,]  373  397  388 #> [18330,]  373  397  388 #> [18331,]  373  397  388 #> [18332,]  373  397  388 #> [18333,]  373  397  388 #> [18334,]  373  397  388 #> [18335,]  373  397  388 #> [18336,]  373  397  388 #> [18337,]  373  397  388 #> [18338,]  373  397  388 #> [18339,]  373  397  388 #> [18340,]  373  397  388 #> [18341,]  373  397  388 #> [18342,]  373  397  388 #> [18343,]  373  397  388 #> [18344,]  373  397  388 #> [18345,]  373  397  388 #> [18346,]  373  397  388 #> [18347,]  373  397  388 #> [18348,]  373  397  388 #> [18349,]  373  397  388 #> [18350,]  373  397  388 #> [18351,]  373  397  388 #> [18352,]  373  397  388 #> [18353,]  373  397  388 #> [18354,]  373  397  388 #> [18355,]  373  397  388 #> [18356,]  373  397  388 #> [18357,]  373  397  388 #> [18358,]  373  397  388 #> [18359,]  373  397  388 #> [18360,]  373  397  388 #> [18361,]  374  398  389 #> [18362,]  373  397  388 #> [18363,]  373  397  388 #> [18364,]  373  397  388 #> [18365,]  373  397  388 #> [18366,]  373  397  388 #> [18367,]  373  397  388 #> [18368,]  373  397  388 #> [18369,]  374  398  389 #> [18370,]  373  397  388 #> [18371,]  373  397  388 #> [18372,]  373  397  388 #> [18373,]  373  397  388 #> [18374,]  373  397  388 #> [18375,]  373  397  388 #> [18376,]  373  397  388 #> [18377,]  373  397  388 #> [18378,]  373  397  388 #> [18379,]  373  397  388 #> [18380,]  373  397  388 #> [18381,]  373  397  388 #> [18382,]  374  398  389 #> [18383,]  373  397  388 #> [18384,]  373  397  388 #> [18385,]  373  397  388 #> [18386,]  373  397  388 #> [18387,]  373  397  388 #> [18388,]  373  397  388 #> [18389,]  373  397  388 #> [18390,]  373  397  388 #> [18391,]  373  397  388 #> [18392,]  374  398  389 #> [18393,]  374  398  389 #> [18394,]  373  397  388 #> [18395,]  373  397  388 #> [18396,]  374  398  389 #> [18397,]  374  398  389 #> [18398,]  373  397  388 #> [18399,]  373  397  388 #> [18400,]  373  397  388 #> [18401,]  375  399  390 #> [18402,]  376  400  391 #> [18403,]  375  399  391 #> [18404,]  375  399  390 #> [18405,]  375  399  391 #> [18406,]  375  399  391 #> [18407,]  375  399  391 #> [18408,]  375  399  390 #> [18409,]  376  400  390 #> [18410,]  376  400  391 #> [18411,]  375  399  390 #> [18412,]  376  400  391 #> [18413,]  375  399  390 #> [18414,]  375  399  390 #> [18415,]  375  399  391 #> [18416,]  375  399  391 #> [18417,]  375  399  390 #> [18418,]  375  399  391 #> [18419,]  375  399  391 #> [18420,]  375  399  391 #> [18421,]  376  400  390 #> [18422,]  375  399  390 #> [18423,]  375  399  391 #> [18424,]  375  399  391 #> [18425,]  375  399  391 #> [18426,]  375  399  391 #> [18427,]  375  399  390 #> [18428,]  375  399  391 #> [18429,]  376  400  391 #> [18430,]  375  399  390 #> [18431,]  375  399  391 #> [18432,]  375  399  391 #> [18433,]  376  400  391 #> [18434,]  375  399  391 #> [18435,]  375  399  390 #> [18436,]  375  399  391 #> [18437,]  375  399  391 #> [18438,]  375  399  391 #> [18439,]  375  399  391 #> [18440,]  375  399  391 #> [18441,]  375  399  391 #> [18442,]  375  399  391 #> [18443,]  375  399  390 #> [18444,]  375  399  390 #> [18445,]  375  399  390 #> [18446,]  375  399  390 #> [18447,]  375  399  391 #> [18448,]  375  399  391 #> [18449,]  375  399  390 #> [18450,]  375  399  391 #> [18451,]  375  399  391 #> [18452,]  375  399  390 #> [18453,]  375  399  391 #> [18454,]  375  399  390 #> [18455,]  375  399  390 #> [18456,]  375  399  391 #> [18457,]  375  399  391 #> [18458,]  375  399  390 #> [18459,]  375  399  391 #> [18460,]  376  400  391 #> [18461,]  375  399  391 #> [18462,]  375  399  391 #> [18463,]  376  400  391 #> [18464,]  375  399  391 #> [18465,]  375  399  391 #> [18466,]  375  399  390 #> [18467,]  375  399  391 #> [18468,]  375  399  390 #> [18469,]  375  399  390 #> [18470,]  376  400  391 #> [18471,]  375  399  391 #> [18472,]  375  399  391 #> [18473,]  375  399  391 #> [18474,]  375  399  391 #> [18475,]  375  399  391 #> [18476,]  375  399  391 #> [18477,]  375  399  391 #> [18478,]  375  399  391 #> [18479,]  375  399  390 #> [18480,]  375  399  390 #> [18481,]  376  400  390 #> [18482,]  375  399  390 #> [18483,]  375  399  390 #> [18484,]  375  399  391 #> [18485,]  375  399  391 #> [18486,]  376  400  391 #> [18487,]  375  399  390 #> [18488,]  375  399  390 #> [18489,]  375  399  390 #> [18490,]  375  399  390 #> [18491,]  375  399  390 #> [18492,]  375  399  390 #> [18493,]  375  399  391 #> [18494,]  375  399  391 #> [18495,]  375  399  390 #> [18496,]  375  399  390 #> [18497,]  375  399  391 #> [18498,]  375  399  391 #> [18499,]  375  399  390 #> [18500,]  375  399  391 #> [18501,]  377  401  392 #> [18502,]  377  401  392 #> [18503,]  377  401  392 #> [18504,]  377  401  392 #> [18505,]  377  401  392 #> [18506,]  378  402  393 #> [18507,]  377  401  392 #> [18508,]  378  402  393 #> [18509,]  378  402  393 #> [18510,]  377  401  392 #> [18511,]  377  401  392 #> [18512,]  378  402  393 #> [18513,]  377  401  392 #> [18514,]  377  401  392 #> [18515,]  378  402  393 #> [18516,]  377  401  392 #> [18517,]  377  401  392 #> [18518,]  377  401  392 #> [18519,]  377  401  392 #> [18520,]  377  401  392 #> [18521,]  377  401  392 #> [18522,]  377  401  392 #> [18523,]  377  401  392 #> [18524,]  377  401  392 #> [18525,]  377  401  392 #> [18526,]  378  402  393 #> [18527,]  377  401  392 #> [18528,]  377  401  392 #> [18529,]  377  401  392 #> [18530,]  377  401  392 #> [18531,]  377  401  392 #> [18532,]  377  401  392 #> [18533,]  378  402  393 #> [18534,]  377  401  392 #> [18535,]  377  401  392 #> [18536,]  377  401  392 #> [18537,]  377  401  392 #> [18538,]  377  401  392 #> [18539,]  377  401  392 #> [18540,]  377  401  392 #> [18541,]  377  401  392 #> [18542,]  377  401  392 #> [18543,]  378  402  393 #> [18544,]  377  401  392 #> [18545,]  378  402  393 #> [18546,]  378  402  393 #> [18547,]  377  401  392 #> [18548,]  377  401  392 #> [18549,]  377  401  392 #> [18550,]  377  401  392 #> [18551,]  378  402  393 #> [18552,]  377  401  392 #> [18553,]  377  401  392 #> [18554,]  377  401  392 #> [18555,]  377  401  392 #> [18556,]  378  402  393 #> [18557,]  378  402  393 #> [18558,]  377  401  392 #> [18559,]  377  401  392 #> [18560,]  377  401  392 #> [18561,]  378  402  393 #> [18562,]  377  401  392 #> [18563,]  377  401  392 #> [18564,]  378  402  393 #> [18565,]  377  401  392 #> [18566,]  378  402  393 #> [18567,]  377  401  392 #> [18568,]  378  402  393 #> [18569,]  377  401  392 #> [18570,]  377  401  392 #> [18571,]  377  401  392 #> [18572,]  377  401  392 #> [18573,]  377  401  392 #> [18574,]  377  401  392 #> [18575,]  377  401  392 #> [18576,]  378  402  393 #> [18577,]  377  401  392 #> [18578,]  377  401  392 #> [18579,]  377  401  392 #> [18580,]  377  401  392 #> [18581,]  377  401  392 #> [18582,]  377  401  392 #> [18583,]  377  401  392 #> [18584,]  377  401  392 #> [18585,]  377  401  392 #> [18586,]  377  401  392 #> [18587,]  377  401  392 #> [18588,]  377  401  392 #> [18589,]  377  401  392 #> [18590,]  377  401  392 #> [18591,]  377  401  392 #> [18592,]  377  401  392 #> [18593,]  377  401  392 #> [18594,]  378  402  393 #> [18595,]  377  401  392 #> [18596,]  378  402  393 #> [18597,]  377  401  392 #> [18598,]  377  401  392 #> [18599,]  377  401  392 #> [18600,]  377  401  392 #> [18601,]  379  403  395 #> [18602,]  379  403  395 #> [18603,]  379  403  395 #> [18604,]  379  403  394 #> [18605,]  379  403  395 #> [18606,]  379  403  395 #> [18607,]  379  403  395 #> [18608,]  379  403  394 #> [18609,]  379  403  394 #> [18610,]  380  405  394 #> [18611,]  379  403  395 #> [18612,]  379  403  395 #> [18613,]  379  403  395 #> [18614,]  379  403  395 #> [18615,]  379  403  395 #> [18616,]  379  403  395 #> [18617,]  379  403  395 #> [18618,]  380  405  395 #> [18619,]  379  403  395 #> [18620,]  379  403  395 #> [18621,]  379  403  395 #> [18622,]  379  403  395 #> [18623,]  379  403  395 #> [18624,]  379  403  395 #> [18625,]  380  404  395 #> [18626,]  379  403  395 #> [18627,]  379  403  395 #> [18628,]  379  403  395 #> [18629,]  379  403  395 #> [18630,]  379  403  395 #> [18631,]  379  403  395 #> [18632,]  379  403  395 #> [18633,]  379  403  395 #> [18634,]  379  403  395 #> [18635,]  379  403  395 #> [18636,]  379  403  395 #> [18637,]  379  403  395 #> [18638,]  379  403  395 #> [18639,]  380  404  395 #> [18640,]  379  403  395 #> [18641,]  379  403  395 #> [18642,]  379  403  395 #> [18643,]  380  404  394 #> [18644,]  379  403  395 #> [18645,]  380  404  395 #> [18646,]  379  403  395 #> [18647,]  379  403  395 #> [18648,]  379  403  395 #> [18649,]  379  403  395 #> [18650,]  379  403  395 #> [18651,]  379  403  394 #> [18652,]  379  403  395 #> [18653,]  379  403  395 #> [18654,]  379  403  395 #> [18655,]  379  403  395 #> [18656,]  379  403  395 #> [18657,]  379  403  395 #> [18658,]  379  403  395 #> [18659,]  379  403  395 #> [18660,]  379  403  394 #> [18661,]  379  403  395 #> [18662,]  379  403  395 #> [18663,]  379  403  395 #> [18664,]  379  403  395 #> [18665,]  379  403  395 #> [18666,]  379  403  395 #> [18667,]  379  403  394 #> [18668,]  379  403  395 #> [18669,]  379  403  395 #> [18670,]  379  403  395 #> [18671,]  379  403  395 #> [18672,]  379  403  395 #> [18673,]  380  405  395 #> [18674,]  380  405  395 #> [18675,]  380  405  395 #> [18676,]  380  404  395 #> [18677,]  380  404  395 #> [18678,]  379  403  395 #> [18679,]  379  403  395 #> [18680,]  379  403  395 #> [18681,]  379  403  395 #> [18682,]  379  403  395 #> [18683,]  379  403  395 #> [18684,]  379  403  395 #> [18685,]  379  403  394 #> [18686,]  379  403  395 #> [18687,]  379  403  395 #> [18688,]  379  403  395 #> [18689,]  379  403  395 #> [18690,]  379  403  395 #> [18691,]  379  403  394 #> [18692,]  379  403  395 #> [18693,]  379  403  395 #> [18694,]  379  403  395 #> [18695,]  379  403  394 #> [18696,]  379  403  395 #> [18697,]  379  403  395 #> [18698,]  379  403  395 #> [18699,]  379  403  395 #> [18700,]  379  403  395 #> [18701,]  381  406  397 #> [18702,]  382  407  396 #> [18703,]  381  406  397 #> [18704,]  381  406  397 #> [18705,]  381  406  397 #> [18706,]  381  406  397 #> [18707,]  381  406  397 #> [18708,]  381  406  397 #> [18709,]  382  407  396 #> [18710,]  382  407  396 #> [18711,]  381  406  397 #> [18712,]  382  407  396 #> [18713,]  381  406  397 #> [18714,]  381  406  397 #> [18715,]  381  406  397 #> [18716,]  381  406  397 #> [18717,]  381  406  397 #> [18718,]  381  406  397 #> [18719,]  381  406  397 #> [18720,]  381  406  397 #> [18721,]  382  407  396 #> [18722,]  381  406  397 #> [18723,]  381  406  397 #> [18724,]  381  406  397 #> [18725,]  381  406  397 #> [18726,]  381  406  397 #> [18727,]  381  406  397 #> [18728,]  381  406  397 #> [18729,]  382  407  396 #> [18730,]  381  406  397 #> [18731,]  381  406  397 #> [18732,]  381  406  397 #> [18733,]  382  407  396 #> [18734,]  381  406  397 #> [18735,]  381  406  397 #> [18736,]  381  406  397 #> [18737,]  381  406  397 #> [18738,]  381  406  397 #> [18739,]  381  406  397 #> [18740,]  381  406  397 #> [18741,]  381  406  397 #> [18742,]  381  406  397 #> [18743,]  381  406  397 #> [18744,]  381  406  397 #> [18745,]  381  406  397 #> [18746,]  381  406  397 #> [18747,]  381  406  397 #> [18748,]  381  406  397 #> [18749,]  381  406  397 #> [18750,]  381  406  397 #> [18751,]  381  406  397 #> [18752,]  381  406  397 #> [18753,]  381  406  397 #> [18754,]  381  406  397 #> [18755,]  381  406  397 #> [18756,]  381  406  397 #> [18757,]  381  406  397 #> [18758,]  381  406  397 #> [18759,]  381  406  397 #> [18760,]  382  407  396 #> [18761,]  381  406  397 #> [18762,]  381  406  397 #> [18763,]  382  407  396 #> [18764,]  381  406  397 #> [18765,]  381  406  397 #> [18766,]  381  406  397 #> [18767,]  381  406  397 #> [18768,]  381  406  397 #> [18769,]  381  406  397 #> [18770,]  382  407  396 #> [18771,]  381  406  397 #> [18772,]  381  406  397 #> [18773,]  381  406  397 #> [18774,]  381  406  397 #> [18775,]  381  406  397 #> [18776,]  381  406  397 #> [18777,]  381  406  397 #> [18778,]  381  406  397 #> [18779,]  381  406  397 #> [18780,]  382  407  396 #> [18781,]  382  407  396 #> [18782,]  381  406  397 #> [18783,]  381  406  397 #> [18784,]  381  406  397 #> [18785,]  381  406  397 #> [18786,]  382  407  396 #> [18787,]  381  406  397 #> [18788,]  381  406  397 #> [18789,]  381  406  397 #> [18790,]  381  406  397 #> [18791,]  381  406  397 #> [18792,]  381  406  397 #> [18793,]  381  406  397 #> [18794,]  381  406  397 #> [18795,]  381  406  397 #> [18796,]  381  406  397 #> [18797,]  381  406  397 #> [18798,]  381  406  397 #> [18799,]  381  406  397 #> [18800,]  381  406  397 #> [18801,]  384  409  399 #> [18802,]  384  409  399 #> [18803,]  383  408  398 #> [18804,]  384  409  399 #> [18805,]  384  409  399 #> [18806,]  383  408  398 #> [18807,]  383  408  398 #> [18808,]  384  409  399 #> [18809,]  384  409  399 #> [18810,]  384  409  399 #> [18811,]  384  409  399 #> [18812,]  384  409  399 #> [18813,]  384  409  399 #> [18814,]  384  409  399 #> [18815,]  384  409  399 #> [18816,]  384  409  399 #> [18817,]  384  409  399 #> [18818,]  384  409  399 #> [18819,]  384  409  399 #> [18820,]  383  408  398 #> [18821,]  383  408  398 #> [18822,]  384  409  399 #> [18823,]  383  408  398 #> [18824,]  384  409  399 #> [18825,]  383  408  398 #> [18826,]  384  409  399 #> [18827,]  384  409  399 #> [18828,]  384  409  399 #> [18829,]  383  408  398 #> [18830,]  384  409  399 #> [18831,]  384  409  399 #> [18832,]  384  409  399 #> [18833,]  384  409  399 #> [18834,]  383  408  398 #> [18835,]  383  408  398 #> [18836,]  384  409  399 #> [18837,]  383  408  398 #> [18838,]  384  409  399 #> [18839,]  384  409  399 #> [18840,]  384  409  399 #> [18841,]  383  408  398 #> [18842,]  383  408  398 #> [18843,]  384  409  399 #> [18844,]  383  408  398 #> [18845,]  383  408  398 #> [18846,]  384  409  399 #> [18847,]  384  409  399 #> [18848,]  384  409  399 #> [18849,]  384  409  399 #> [18850,]  383  408  398 #> [18851,]  384  409  399 #> [18852,]  384  409  399 #> [18853,]  383  408  398 #> [18854,]  383  408  398 #> [18855,]  383  408  398 #> [18856,]  383  408  398 #> [18857,]  383  408  398 #> [18858,]  384  409  399 #> [18859,]  384  409  399 #> [18860,]  383  408  398 #> [18861,]  384  409  399 #> [18862,]  384  409  399 #> [18863,]  384  409  399 #> [18864,]  383  408  398 #> [18865,]  383  408  398 #> [18866,]  384  409  399 #> [18867,]  384  409  399 #> [18868,]  384  409  399 #> [18869,]  384  409  399 #> [18870,]  384  409  399 #> [18871,]  384  409  399 #> [18872,]  384  409  399 #> [18873,]  383  408  398 #> [18874,]  383  408  398 #> [18875,]  384  409  399 #> [18876,]  384  409  399 #> [18877,]  384  409  399 #> [18878,]  384  409  399 #> [18879,]  384  409  399 #> [18880,]  383  408  398 #> [18881,]  383  408  398 #> [18882,]  383  408  398 #> [18883,]  384  409  399 #> [18884,]  383  408  398 #> [18885,]  383  408  398 #> [18886,]  383  408  398 #> [18887,]  384  409  399 #> [18888,]  383  408  398 #> [18889,]  383  408  398 #> [18890,]  384  409  399 #> [18891,]  384  409  399 #> [18892,]  384  409  399 #> [18893,]  384  409  399 #> [18894,]  383  408  398 #> [18895,]  384  409  399 #> [18896,]  384  409  399 #> [18897,]  383  408  398 #> [18898,]  383  408  398 #> [18899,]  383  408  398 #> [18900,]  384  409  399 #> [18901,]  385  410  400 #> [18902,]  385  410  400 #> [18903,]  385  410  400 #> [18904,]  386  410  400 #> [18905,]  385  410  400 #> [18906,]  385  410  400 #> [18907,]  385  410  400 #> [18908,]  385  410  400 #> [18909,]  385  410  400 #> [18910,]  385  410  400 #> [18911,]  385  410  400 #> [18912,]  386  410  400 #> [18913,]  385  410  400 #> [18914,]  386  410  400 #> [18915,]  385  410  400 #> [18916,]  385  410  400 #> [18917,]  385  410  400 #> [18918,]  385  410  400 #> [18919,]  386  410  400 #> [18920,]  385  410  400 #> [18921,]  385  410  400 #> [18922,]  385  410  400 #> [18923,]  385  410  400 #> [18924,]  385  410  400 #> [18925,]  385  410  400 #> [18926,]  385  410  400 #> [18927,]  386  410  400 #> [18928,]  385  410  400 #> [18929,]  385  410  400 #> [18930,]  385  410  400 #> [18931,]  385  410  400 #> [18932,]  385  410  400 #> [18933,]  385  410  400 #> [18934,]  385  410  400 #> [18935,]  385  410  400 #> [18936,]  385  410  400 #> [18937,]  385  410  400 #> [18938,]  385  410  400 #> [18939,]  385  410  400 #> [18940,]  385  410  400 #> [18941,]  386  410  400 #> [18942,]  386  410  400 #> [18943,]  385  410  400 #> [18944,]  385  410  400 #> [18945,]  385  410  400 #> [18946,]  385  410  400 #> [18947,]  385  410  400 #> [18948,]  386  410  400 #> [18949,]  385  410  400 #> [18950,]  385  410  400 #> [18951,]  385  410  400 #> [18952,]  385  410  400 #> [18953,]  385  410  400 #> [18954,]  385  410  400 #> [18955,]  385  410  400 #> [18956,]  385  410  400 #> [18957,]  385  410  400 #> [18958,]  385  410  400 #> [18959,]  385  410  400 #> [18960,]  385  410  400 #> [18961,]  386  410  400 #> [18962,]  385  410  400 #> [18963,]  385  410  400 #> [18964,]  385  410  400 #> [18965,]  385  410  400 #> [18966,]  385  410  400 #> [18967,]  385  410  400 #> [18968,]  385  410  400 #> [18969,]  386  410  400 #> [18970,]  385  410  400 #> [18971,]  385  410  400 #> [18972,]  385  410  400 #> [18973,]  385  410  400 #> [18974,]  385  410  400 #> [18975,]  385  410  400 #> [18976,]  385  410  400 #> [18977,]  385  410  400 #> [18978,]  385  410  400 #> [18979,]  385  410  400 #> [18980,]  385  410  400 #> [18981,]  385  410  400 #> [18982,]  386  410  400 #> [18983,]  385  410  400 #> [18984,]  385  410  400 #> [18985,]  385  410  400 #> [18986,]  385  410  400 #> [18987,]  385  410  400 #> [18988,]  385  410  400 #> [18989,]  385  410  400 #> [18990,]  385  410  400 #> [18991,]  385  410  400 #> [18992,]  386  410  400 #> [18993,]  386  410  400 #> [18994,]  385  410  400 #> [18995,]  385  410  400 #> [18996,]  386  410  400 #> [18997,]  386  410  400 #> [18998,]  385  410  400 #> [18999,]  385  410  400 #> [19000,]  385  410  400 #> [19001,]  388  413  402 #> [19002,]  388  412  402 #> [19003,]  387  411  401 #> [19004,]  387  411  401 #> [19005,]  387  411  401 #> [19006,]  388  412  402 #> [19007,]  388  413  402 #> [19008,]  387  411  401 #> [19009,]  387  411  401 #> [19010,]  387  411  401 #> [19011,]  388  413  402 #> [19012,]  388  412  402 #> [19013,]  388  413  402 #> [19014,]  388  413  402 #> [19015,]  388  412  402 #> [19016,]  388  413  402 #> [19017,]  388  412  402 #> [19018,]  387  411  401 #> [19019,]  388  413  402 #> [19020,]  387  411  401 #> [19021,]  388  413  402 #> [19022,]  388  413  402 #> [19023,]  387  411  401 #> [19024,]  387  411  401 #> [19025,]  388  413  402 #> [19026,]  388  413  402 #> [19027,]  388  413  402 #> [19028,]  388  413  402 #> [19029,]  388  412  402 #> [19030,]  387  411  401 #> [19031,]  387  411  401 #> [19032,]  387  411  401 #> [19033,]  388  413  402 #> [19034,]  387  411  401 #> [19035,]  388  413  402 #> [19036,]  387  411  401 #> [19037,]  388  412  402 #> [19038,]  387  411  401 #> [19039,]  387  411  401 #> [19040,]  388  413  402 #> [19041,]  388  413  402 #> [19042,]  387  411  401 #> [19043,]  387  411  401 #> [19044,]  388  412  402 #> [19045,]  387  411  401 #> [19046,]  388  413  402 #> [19047,]  388  412  402 #> [19048,]  387  411  401 #> [19049,]  387  411  401 #> [19050,]  388  413  402 #> [19051,]  387  411  401 #> [19052,]  388  413  402 #> [19053,]  387  411  401 #> [19054,]  388  413  402 #> [19055,]  388  413  402 #> [19056,]  387  411  401 #> [19057,]  388  413  402 #> [19058,]  388  413  402 #> [19059,]  388  413  402 #> [19060,]  387  411  401 #> [19061,]  388  413  402 #> [19062,]  387  411  401 #> [19063,]  388  412  402 #> [19064,]  387  411  401 #> [19065,]  387  411  401 #> [19066,]  387  411  401 #> [19067,]  387  411  401 #> [19068,]  388  413  402 #> [19069,]  388  413  402 #> [19070,]  388  412  402 #> [19071,]  388  413  402 #> [19072,]  387  411  401 #> [19073,]  388  413  402 #> [19074,]  388  413  402 #> [19075,]  388  412  402 #> [19076,]  388  413  402 #> [19077,]  388  413  402 #> [19078,]  387  411  401 #> [19079,]  388  412  402 #> [19080,]  388  413  402 #> [19081,]  388  412  402 #> [19082,]  388  413  402 #> [19083,]  388  413  402 #> [19084,]  388  413  402 #> [19085,]  387  411  401 #> [19086,]  388  413  402 #> [19087,]  388  413  402 #> [19088,]  387  411  401 #> [19089,]  387  411  401 #> [19090,]  388  413  402 #> [19091,]  387  411  401 #> [19092,]  388  412  402 #> [19093,]  388  413  402 #> [19094,]  388  412  402 #> [19095,]  387  411  401 #> [19096,]  388  413  402 #> [19097,]  388  413  402 #> [19098,]  388  413  402 #> [19099,]  388  413  402 #> [19100,]  388  412  402 #> [19101,]  390  415  404 #> [19102,]  390  415  404 #> [19103,]  389  414  403 #> [19104,]  389  414  403 #> [19105,]  389  414  403 #> [19106,]  390  415  404 #> [19107,]  390  415  404 #> [19108,]  389  414  403 #> [19109,]  389  414  403 #> [19110,]  389  414  403 #> [19111,]  390  415  404 #> [19112,]  390  415  404 #> [19113,]  390  415  404 #> [19114,]  390  415  404 #> [19115,]  390  415  404 #> [19116,]  390  415  404 #> [19117,]  390  415  404 #> [19118,]  389  414  403 #> [19119,]  390  415  404 #> [19120,]  389  414  403 #> [19121,]  390  415  404 #> [19122,]  390  415  404 #> [19123,]  389  414  403 #> [19124,]  389  414  403 #> [19125,]  390  415  404 #> [19126,]  390  415  404 #> [19127,]  390  415  404 #> [19128,]  390  415  404 #> [19129,]  390  415  404 #> [19130,]  389  414  403 #> [19131,]  389  414  403 #> [19132,]  389  414  403 #> [19133,]  390  415  404 #> [19134,]  389  414  403 #> [19135,]  390  415  404 #> [19136,]  390  415  404 #> [19137,]  390  415  404 #> [19138,]  390  415  404 #> [19139,]  389  414  403 #> [19140,]  390  415  404 #> [19141,]  390  415  404 #> [19142,]  389  414  403 #> [19143,]  389  414  403 #> [19144,]  390  415  404 #> [19145,]  389  414  403 #> [19146,]  390  415  404 #> [19147,]  390  415  404 #> [19148,]  389  414  403 #> [19149,]  389  414  403 #> [19150,]  390  415  404 #> [19151,]  389  414  403 #> [19152,]  390  415  404 #> [19153,]  389  414  403 #> [19154,]  390  415  404 #> [19155,]  390  415  404 #> [19156,]  389  414  403 #> [19157,]  390  415  404 #> [19158,]  390  415  404 #> [19159,]  390  415  404 #> [19160,]  389  414  403 #> [19161,]  390  415  404 #> [19162,]  389  414  403 #> [19163,]  390  415  404 #> [19164,]  389  414  403 #> [19165,]  389  414  403 #> [19166,]  389  414  403 #> [19167,]  389  414  403 #> [19168,]  390  415  404 #> [19169,]  390  415  404 #> [19170,]  390  415  404 #> [19171,]  390  415  404 #> [19172,]  389  414  403 #> [19173,]  390  415  404 #> [19174,]  390  415  404 #> [19175,]  390  415  404 #> [19176,]  390  415  404 #> [19177,]  390  415  404 #> [19178,]  389  414  403 #> [19179,]  390  415  404 #> [19180,]  390  415  404 #> [19181,]  390  415  404 #> [19182,]  390  415  404 #> [19183,]  390  415  404 #> [19184,]  390  415  404 #> [19185,]  389  414  403 #> [19186,]  390  415  404 #> [19187,]  390  415  404 #> [19188,]  389  414  403 #> [19189,]  389  414  403 #> [19190,]  390  415  404 #> [19191,]  389  414  403 #> [19192,]  390  415  404 #> [19193,]  390  415  404 #> [19194,]  390  415  404 #> [19195,]  389  414  403 #> [19196,]  390  415  404 #> [19197,]  390  415  404 #> [19198,]  390  415  404 #> [19199,]  390  415  404 #> [19200,]  390  415  404 #> [19201,]  392  417  405 #> [19202,]  391  416  405 #> [19203,]  391  416  405 #> [19204,]  391  416  405 #> [19205,]  391  416  405 #> [19206,]  391  416  406 #> [19207,]  391  416  405 #> [19208,]  391  416  406 #> [19209,]  392  417  406 #> [19210,]  391  416  405 #> [19211,]  391  416  405 #> [19212,]  391  416  406 #> [19213,]  392  417  405 #> [19214,]  391  416  405 #> [19215,]  391  416  406 #> [19216,]  391  416  405 #> [19217,]  392  417  405 #> [19218,]  392  417  405 #> [19219,]  391  416  405 #> [19220,]  392  417  405 #> [19221,]  391  416  405 #> [19222,]  391  416  405 #> [19223,]  391  416  405 #> [19224,]  391  416  405 #> [19225,]  391  416  405 #> [19226,]  391  416  406 #> [19227,]  392  417  405 #> [19228,]  391  416  405 #> [19229,]  391  416  405 #> [19230,]  391  416  405 #> [19231,]  391  416  405 #> [19232,]  391  416  405 #> [19233,]  392  417  406 #> [19234,]  391  416  405 #> [19235,]  391  416  405 #> [19236,]  392  417  405 #> [19237,]  391  416  405 #> [19238,]  392  417  405 #> [19239,]  391  416  405 #> [19240,]  391  416  405 #> [19241,]  391  416  405 #> [19242,]  392  417  405 #> [19243,]  391  416  406 #> [19244,]  391  416  405 #> [19245,]  391  416  405 #> [19246,]  391  416  406 #> [19247,]  391  416  405 #> [19248,]  391  416  405 #> [19249,]  391  416  405 #> [19250,]  391  416  405 #> [19251,]  392  417  406 #> [19252,]  391  416  405 #> [19253,]  392  417  405 #> [19254,]  392  417  405 #> [19255,]  391  416  405 #> [19256,]  392  417  406 #> [19257,]  391  416  405 #> [19258,]  391  416  405 #> [19259,]  391  416  405 #> [19260,]  391  416  405 #> [19261,]  391  416  406 #> [19262,]  392  417  405 #> [19263,]  391  416  405 #> [19264,]  391  416  406 #> [19265,]  392  417  405 #> [19266,]  392  417  406 #> [19267,]  391  416  405 #> [19268,]  391  416  406 #> [19269,]  391  416  405 #> [19270,]  391  416  405 #> [19271,]  391  416  405 #> [19272,]  391  416  405 #> [19273,]  391  416  405 #> [19274,]  391  416  405 #> [19275,]  391  416  405 #> [19276,]  391  416  406 #> [19277,]  392  417  405 #> [19278,]  391  416  405 #> [19279,]  392  417  405 #> [19280,]  391  416  405 #> [19281,]  391  416  405 #> [19282,]  392  417  405 #> [19283,]  392  417  405 #> [19284,]  392  417  405 #> [19285,]  392  417  405 #> [19286,]  391  416  405 #> [19287,]  392  417  405 #> [19288,]  391  416  405 #> [19289,]  391  416  405 #> [19290,]  391  416  405 #> [19291,]  392  417  405 #> [19292,]  391  416  405 #> [19293,]  392  417  405 #> [19294,]  392  417  406 #> [19295,]  391  416  405 #> [19296,]  391  416  405 #> [19297,]  391  416  405 #> [19298,]  391  416  405 #> [19299,]  391  416  405 #> [19300,]  391  416  405 #> [19301,]  394  419  408 #> [19302,]  394  419  408 #> [19303,]  393  418  407 #> [19304,]  394  419  408 #> [19305,]  393  418  407 #> [19306,]  394  419  408 #> [19307,]  394  419  408 #> [19308,]  394  419  408 #> [19309,]  393  418  407 #> [19310,]  393  418  407 #> [19311,]  393  418  407 #> [19312,]  394  419  408 #> [19313,]  394  419  408 #> [19314,]  393  418  407 #> [19315,]  394  419  408 #> [19316,]  394  419  408 #> [19317,]  394  419  408 #> [19318,]  394  419  408 #> [19319,]  394  419  408 #> [19320,]  394  419  408 #> [19321,]  393  418  407 #> [19322,]  394  419  408 #> [19323,]  394  419  408 #> [19324,]  393  418  407 #> [19325,]  393  418  407 #> [19326,]  394  419  408 #> [19327,]  394  419  408 #> [19328,]  393  418  407 #> [19329,]  394  419  408 #> [19330,]  394  419  408 #> [19331,]  393  418  407 #> [19332,]  393  418  407 #> [19333,]  394  419  408 #> [19334,]  393  418  407 #> [19335,]  393  418  407 #> [19336,]  394  419  408 #> [19337,]  394  419  408 #> [19338,]  394  419  408 #> [19339,]  393  418  407 #> [19340,]  393  418  407 #> [19341,]  394  419  408 #> [19342,]  394  419  408 #> [19343,]  394  419  408 #> [19344,]  394  419  408 #> [19345,]  394  419  408 #> [19346,]  394  419  408 #> [19347,]  393  418  407 #> [19348,]  393  418  407 #> [19349,]  394  419  408 #> [19350,]  394  419  408 #> [19351,]  394  419  408 #> [19352,]  393  418  407 #> [19353,]  394  419  408 #> [19354,]  393  418  407 #> [19355,]  394  419  408 #> [19356,]  394  419  408 #> [19357,]  394  419  408 #> [19358,]  394  419  408 #> [19359,]  394  419  408 #> [19360,]  394  419  408 #> [19361,]  394  419  408 #> [19362,]  393  418  407 #> [19363,]  394  419  408 #> [19364,]  394  419  408 #> [19365,]  393  418  407 #> [19366,]  394  419  408 #> [19367,]  394  419  408 #> [19368,]  394  419  408 #> [19369,]  394  419  408 #> [19370,]  393  418  407 #> [19371,]  394  419  408 #> [19372,]  393  418  407 #> [19373,]  394  419  408 #> [19374,]  393  418  407 #> [19375,]  394  419  408 #> [19376,]  393  418  407 #> [19377,]  394  419  408 #> [19378,]  394  419  408 #> [19379,]  394  419  408 #> [19380,]  394  419  408 #> [19381,]  394  419  408 #> [19382,]  393  418  407 #> [19383,]  394  419  408 #> [19384,]  394  419  408 #> [19385,]  394  419  408 #> [19386,]  394  419  408 #> [19387,]  394  419  408 #> [19388,]  394  419  408 #> [19389,]  394  419  408 #> [19390,]  394  419  408 #> [19391,]  393  418  407 #> [19392,]  394  419  408 #> [19393,]  394  419  408 #> [19394,]  394  419  408 #> [19395,]  394  419  408 #> [19396,]  394  419  408 #> [19397,]  394  419  408 #> [19398,]  393  418  407 #> [19399,]  394  419  408 #> [19400,]  394  419  408 #> [19401,]  396  421  410 #> [19402,]  396  421  410 #> [19403,]  396  421  410 #> [19404,]  396  421  410 #> [19405,]  396  421  410 #> [19406,]  395  420  409 #> [19407,]  396  421  410 #> [19408,]  396  421  410 #> [19409,]  396  421  410 #> [19410,]  396  421  410 #> [19411,]  396  421  410 #> [19412,]  396  421  410 #> [19413,]  396  421  410 #> [19414,]  396  421  410 #> [19415,]  396  421  410 #> [19416,]  396  421  410 #> [19417,]  396  421  410 #> [19418,]  396  421  410 #> [19419,]  395  420  409 #> [19420,]  396  421  410 #> [19421,]  396  421  410 #> [19422,]  396  421  410 #> [19423,]  396  421  410 #> [19424,]  396  421  410 #> [19425,]  396  421  410 #> [19426,]  396  421  410 #> [19427,]  396  421  410 #> [19428,]  396  421  410 #> [19429,]  396  421  410 #> [19430,]  396  421  410 #> [19431,]  396  421  410 #> [19432,]  396  421  410 #> [19433,]  396  421  410 #> [19434,]  395  420  409 #> [19435,]  396  421  410 #> [19436,]  396  421  410 #> [19437,]  396  421  410 #> [19438,]  395  420  409 #> [19439,]  396  421  410 #> [19440,]  396  421  410 #> [19441,]  396  421  410 #> [19442,]  396  421  410 #> [19443,]  396  421  410 #> [19444,]  396  421  410 #> [19445,]  396  421  410 #> [19446,]  396  421  410 #> [19447,]  396  421  410 #> [19448,]  396  421  410 #> [19449,]  395  420  409 #> [19450,]  396  421  410 #> [19451,]  396  421  410 #> [19452,]  396  421  410 #> [19453,]  396  421  410 #> [19454,]  396  421  410 #> [19455,]  396  421  410 #> [19456,]  396  421  410 #> [19457,]  396  421  410 #> [19458,]  396  421  410 #> [19459,]  396  421  410 #> [19460,]  396  421  410 #> [19461,]  396  421  410 #> [19462,]  396  421  410 #> [19463,]  396  421  410 #> [19464,]  396  421  410 #> [19465,]  396  421  410 #> [19466,]  396  421  410 #> [19467,]  396  421  410 #> [19468,]  396  421  410 #> [19469,]  396  421  410 #> [19470,]  396  421  410 #> [19471,]  396  421  410 #> [19472,]  395  420  409 #> [19473,]  396  421  410 #> [19474,]  396  421  410 #> [19475,]  396  421  410 #> [19476,]  396  421  410 #> [19477,]  396  421  410 #> [19478,]  396  421  410 #> [19479,]  396  421  410 #> [19480,]  396  421  410 #> [19481,]  396  421  410 #> [19482,]  396  421  410 #> [19483,]  396  421  410 #> [19484,]  396  421  410 #> [19485,]  396  421  410 #> [19486,]  396  421  410 #> [19487,]  396  421  410 #> [19488,]  396  421  410 #> [19489,]  396  421  410 #> [19490,]  396  421  410 #> [19491,]  396  421  410 #> [19492,]  396  421  410 #> [19493,]  396  421  410 #> [19494,]  396  421  410 #> [19495,]  396  421  410 #> [19496,]  396  421  410 #> [19497,]  396  421  410 #> [19498,]  396  421  410 #> [19499,]  396  421  410 #> [19500,]  396  421  410 #> [19501,]  398  423  412 #> [19502,]  397  422  412 #> [19503,]  397  422  412 #> [19504,]  397  422  412 #> [19505,]  398  423  412 #> [19506,]  397  422  412 #> [19507,]  397  422  412 #> [19508,]  397  422  412 #> [19509,]  398  423  412 #> [19510,]  397  422  412 #> [19511,]  398  423  412 #> [19512,]  397  422  412 #> [19513,]  398  423  412 #> [19514,]  397  422  412 #> [19515,]  397  422  411 #> [19516,]  397  422  412 #> [19517,]  398  423  411 #> [19518,]  398  423  412 #> [19519,]  397  422  412 #> [19520,]  398  423  412 #> [19521,]  398  423  412 #> [19522,]  397  422  412 #> [19523,]  397  422  412 #> [19524,]  398  423  412 #> [19525,]  397  422  412 #> [19526,]  397  422  412 #> [19527,]  398  423  412 #> [19528,]  398  423  412 #> [19529,]  398  423  412 #> [19530,]  397  422  412 #> [19531,]  397  422  411 #> [19532,]  397  422  412 #> [19533,]  398  423  412 #> [19534,]  397  422  411 #> [19535,]  397  422  412 #> [19536,]  398  423  412 #> [19537,]  397  422  411 #> [19538,]  398  423  412 #> [19539,]  398  423  412 #> [19540,]  397  422  412 #> [19541,]  398  423  412 #> [19542,]  398  423  411 #> [19543,]  397  422  411 #> [19544,]  397  422  411 #> [19545,]  397  422  412 #> [19546,]  397  422  412 #> [19547,]  397  422  412 #> [19548,]  397  422  412 #> [19549,]  397  422  412 #> [19550,]  397  422  412 #> [19551,]  398  423  412 #> [19552,]  397  422  412 #> [19553,]  398  423  412 #> [19554,]  398  423  412 #> [19555,]  397  422  412 #> [19556,]  398  423  412 #> [19557,]  397  422  412 #> [19558,]  398  423  412 #> [19559,]  397  422  412 #> [19560,]  397  422  412 #> [19561,]  398  423  412 #> [19562,]  398  423  412 #> [19563,]  397  422  411 #> [19564,]  398  423  412 #> [19565,]  398  423  412 #> [19566,]  398  423  412 #> [19567,]  397  422  412 #> [19568,]  397  422  412 #> [19569,]  397  422  412 #> [19570,]  398  423  412 #> [19571,]  397  422  412 #> [19572,]  397  422  412 #> [19573,]  397  422  412 #> [19574,]  397  422  412 #> [19575,]  397  422  411 #> [19576,]  397  422  412 #> [19577,]  398  423  412 #> [19578,]  397  422  411 #> [19579,]  398  423  412 #> [19580,]  397  422  412 #> [19581,]  397  422  412 #> [19582,]  398  423  412 #> [19583,]  398  423  412 #> [19584,]  398  423  412 #> [19585,]  398  423  412 #> [19586,]  397  422  412 #> [19587,]  398  423  412 #> [19588,]  397  422  412 #> [19589,]  398  423  412 #> [19590,]  398  423  412 #> [19591,]  398  423  412 #> [19592,]  397  422  412 #> [19593,]  398  423  412 #> [19594,]  398  423  412 #> [19595,]  397  422  411 #> [19596,]  397  422  412 #> [19597,]  397  422  412 #> [19598,]  397  422  412 #> [19599,]  398  423  412 #> [19600,]  398  423  411 #> [19601,]  399  424  415 #> [19602,]  400  425  413 #> [19603,]  399  424  414 #> [19604,]  400  425  413 #> [19605,]  400  425  413 #> [19606,]  399  424  415 #> [19607,]  400  425  413 #> [19608,]  400  425  413 #> [19609,]  400  425  413 #> [19610,]  400  425  413 #> [19611,]  399  424  415 #> [19612,]  400  425  413 #> [19613,]  400  425  413 #> [19614,]  399  424  415 #> [19615,]  400  425  413 #> [19616,]  399  424  414 #> [19617,]  400  425  413 #> [19618,]  400  425  413 #> [19619,]  399  424  414 #> [19620,]  400  425  413 #> [19621,]  400  425  413 #> [19622,]  400  425  413 #> [19623,]  400  425  413 #> [19624,]  400  425  413 #> [19625,]  400  425  413 #> [19626,]  399  424  415 #> [19627,]  400  425  413 #> [19628,]  399  424  415 #> [19629,]  400  425  413 #> [19630,]  400  425  413 #> [19631,]  400  425  413 #> [19632,]  400  425  413 #> [19633,]  400  425  413 #> [19634,]  399  424  414 #> [19635,]  399  424  414 #> [19636,]  400  425  413 #> [19637,]  399  424  414 #> [19638,]  399  424  415 #> [19639,]  400  425  413 #> [19640,]  400  425  413 #> [19641,]  400  425  413 #> [19642,]  399  424  415 #> [19643,]  400  425  413 #> [19644,]  400  425  413 #> [19645,]  399  424  415 #> [19646,]  400  425  413 #> [19647,]  400  425  413 #> [19648,]  400  425  413 #> [19649,]  399  424  414 #> [19650,]  400  425  413 #> [19651,]  400  425  413 #> [19652,]  399  424  415 #> [19653,]  400  425  413 #> [19654,]  400  425  413 #> [19655,]  400  425  413 #> [19656,]  400  425  413 #> [19657,]  400  425  413 #> [19658,]  400  425  413 #> [19659,]  400  425  413 #> [19660,]  400  425  413 #> [19661,]  400  425  413 #> [19662,]  400  425  413 #> [19663,]  400  425  413 #> [19664,]  399  424  415 #> [19665,]  400  425  413 #> [19666,]  400  425  413 #> [19667,]  400  425  413 #> [19668,]  399  424  415 #> [19669,]  400  425  413 #> [19670,]  400  425  413 #> [19671,]  400  425  413 #> [19672,]  399  424  415 #> [19673,]  399  424  415 #> [19674,]  400  425  413 #> [19675,]  400  425  413 #> [19676,]  400  425  413 #> [19677,]  399  424  414 #> [19678,]  400  425  413 #> [19679,]  400  425  413 #> [19680,]  400  425  413 #> [19681,]  400  425  413 #> [19682,]  400  425  413 #> [19683,]  400  425  413 #> [19684,]  400  425  413 #> [19685,]  400  425  413 #> [19686,]  400  425  413 #> [19687,]  400  425  413 #> [19688,]  400  425  413 #> [19689,]  399  424  415 #> [19690,]  400  425  413 #> [19691,]  400  425  413 #> [19692,]  400  425  413 #> [19693,]  400  425  413 #> [19694,]  399  424  415 #> [19695,]  400  425  413 #> [19696,]  399  424  415 #> [19697,]  399  424  415 #> [19698,]  400  425  413 #> [19699,]  400  425  413 #> [19700,]  399  424  414 #> [19701,]  401  427  416 #> [19702,]  401  427  416 #> [19703,]  401  427  416 #> [19704,]  402  426  417 #> [19705,]  401  427  416 #> [19706,]  401  427  416 #> [19707,]  401  427  416 #> [19708,]  401  427  416 #> [19709,]  401  427  416 #> [19710,]  401  427  416 #> [19711,]  401  427  416 #> [19712,]  402  426  417 #> [19713,]  401  427  416 #> [19714,]  402  426  417 #> [19715,]  401  427  416 #> [19716,]  401  427  416 #> [19717,]  401  427  416 #> [19718,]  401  427  416 #> [19719,]  402  426  418 #> [19720,]  401  427  416 #> [19721,]  401  427  416 #> [19722,]  401  427  416 #> [19723,]  401  427  416 #> [19724,]  401  427  416 #> [19725,]  401  427  416 #> [19726,]  401  427  416 #> [19727,]  402  426  418 #> [19728,]  401  427  416 #> [19729,]  401  427  416 #> [19730,]  401  427  416 #> [19731,]  401  427  416 #> [19732,]  401  427  416 #> [19733,]  401  427  416 #> [19734,]  401  427  416 #> [19735,]  401  427  416 #> [19736,]  401  427  416 #> [19737,]  401  427  416 #> [19738,]  402  426  418 #> [19739,]  401  427  416 #> [19740,]  401  427  416 #> [19741,]  402  426  418 #> [19742,]  402  426  417 #> [19743,]  401  427  416 #> [19744,]  401  427  416 #> [19745,]  401  427  416 #> [19746,]  401  427  416 #> [19747,]  401  427  416 #> [19748,]  402  426  417 #> [19749,]  401  427  416 #> [19750,]  401  427  416 #> [19751,]  401  427  416 #> [19752,]  401  427  416 #> [19753,]  401  427  416 #> [19754,]  401  427  416 #> [19755,]  401  427  416 #> [19756,]  401  427  416 #> [19757,]  401  427  416 #> [19758,]  401  427  416 #> [19759,]  401  427  416 #> [19760,]  401  427  416 #> [19761,]  402  426  417 #> [19762,]  401  427  416 #> [19763,]  401  427  416 #> [19764,]  401  427  416 #> [19765,]  401  427  416 #> [19766,]  401  427  416 #> [19767,]  401  427  416 #> [19768,]  401  427  416 #> [19769,]  402  426  418 #> [19770,]  401  427  416 #> [19771,]  401  427  416 #> [19772,]  401  427  416 #> [19773,]  401  427  416 #> [19774,]  401  427  416 #> [19775,]  401  427  416 #> [19776,]  401  427  416 #> [19777,]  401  427  416 #> [19778,]  401  427  416 #> [19779,]  401  427  416 #> [19780,]  401  427  416 #> [19781,]  401  427  416 #> [19782,]  402  426  417 #> [19783,]  401  427  416 #> [19784,]  401  427  416 #> [19785,]  401  427  416 #> [19786,]  401  427  416 #> [19787,]  401  427  416 #> [19788,]  401  427  416 #> [19789,]  401  427  416 #> [19790,]  401  427  416 #> [19791,]  401  427  416 #> [19792,]  402  426  417 #> [19793,]  402  426  417 #> [19794,]  401  427  416 #> [19795,]  401  427  416 #> [19796,]  402  426  418 #> [19797,]  402  426  418 #> [19798,]  401  427  416 #> [19799,]  401  427  416 #> [19800,]  401  427  416 #> [19801,]  403  428  419 #> [19802,]  404  429  420 #> [19803,]  403  428  419 #> [19804,]  403  428  419 #> [19805,]  403  428  419 #> [19806,]  403  428  419 #> [19807,]  403  428  419 #> [19808,]  403  428  419 #> [19809,]  404  429  420 #> [19810,]  404  429  420 #> [19811,]  403  428  419 #> [19812,]  404  429  420 #> [19813,]  403  428  419 #> [19814,]  403  428  419 #> [19815,]  403  428  419 #> [19816,]  403  428  419 #> [19817,]  403  428  419 #> [19818,]  403  428  419 #> [19819,]  403  428  419 #> [19820,]  403  428  419 #> [19821,]  404  429  420 #> [19822,]  403  428  419 #> [19823,]  403  428  419 #> [19824,]  403  428  419 #> [19825,]  403  428  419 #> [19826,]  403  428  419 #> [19827,]  403  428  419 #> [19828,]  403  428  419 #> [19829,]  404  429  420 #> [19830,]  403  428  419 #> [19831,]  403  428  419 #> [19832,]  403  428  419 #> [19833,]  404  429  420 #> [19834,]  403  428  419 #> [19835,]  403  428  419 #> [19836,]  403  428  419 #> [19837,]  403  428  419 #> [19838,]  403  428  419 #> [19839,]  403  428  419 #> [19840,]  403  428  419 #> [19841,]  403  428  419 #> [19842,]  403  428  419 #> [19843,]  403  428  419 #> [19844,]  403  428  419 #> [19845,]  403  428  419 #> [19846,]  403  428  419 #> [19847,]  403  428  419 #> [19848,]  403  428  419 #> [19849,]  403  428  419 #> [19850,]  403  428  419 #> [19851,]  403  428  419 #> [19852,]  403  428  419 #> [19853,]  403  428  419 #> [19854,]  403  428  419 #> [19855,]  403  428  419 #> [19856,]  403  428  419 #> [19857,]  403  428  419 #> [19858,]  403  428  419 #> [19859,]  403  428  419 #> [19860,]  404  429  420 #> [19861,]  403  428  419 #> [19862,]  403  428  419 #> [19863,]  404  429  420 #> [19864,]  403  428  419 #> [19865,]  403  428  419 #> [19866,]  403  428  419 #> [19867,]  403  428  419 #> [19868,]  403  428  419 #> [19869,]  403  428  419 #> [19870,]  404  429  420 #> [19871,]  403  428  419 #> [19872,]  403  428  419 #> [19873,]  403  428  419 #> [19874,]  403  428  419 #> [19875,]  403  428  419 #> [19876,]  403  428  419 #> [19877,]  403  428  419 #> [19878,]  403  428  419 #> [19879,]  403  428  419 #> [19880,]  403  428  419 #> [19881,]  404  429  420 #> [19882,]  403  428  419 #> [19883,]  403  428  419 #> [19884,]  403  428  419 #> [19885,]  403  428  419 #> [19886,]  404  429  420 #> [19887,]  403  428  419 #> [19888,]  403  428  419 #> [19889,]  403  428  419 #> [19890,]  403  428  419 #> [19891,]  403  428  419 #> [19892,]  403  428  419 #> [19893,]  403  428  419 #> [19894,]  403  428  419 #> [19895,]  403  428  419 #> [19896,]  403  428  419 #> [19897,]  403  428  419 #> [19898,]  403  428  419 #> [19899,]  403  428  419 #> [19900,]  403  428  419 #> [19901,]  405  430  422 #> [19902,]  406  431  422 #> [19903,]  406  431  421 #> [19904,]  405  430  422 #> [19905,]  405  430  422 #> [19906,]  406  431  422 #> [19907,]  406  431  422 #> [19908,]  405  430  422 #> [19909,]  405  430  421 #> [19910,]  405  430  421 #> [19911,]  405  430  421 #> [19912,]  406  431  422 #> [19913,]  405  430  422 #> [19914,]  405  430  421 #> [19915,]  405  430  422 #> [19916,]  405  430  422 #> [19917,]  405  430  422 #> [19918,]  406  431  422 #> [19919,]  406  431  422 #> [19920,]  406  431  422 #> [19921,]  405  430  421 #> [19922,]  405  430  422 #> [19923,]  406  431  422 #> [19924,]  405  430  422 #> [19925,]  406  431  422 #> [19926,]  405  430  422 #> [19927,]  405  430  422 #> [19928,]  406  431  421 #> [19929,]  405  430  422 #> [19930,]  405  430  422 #> [19931,]  406  431  421 #> [19932,]  406  431  421 #> [19933,]  406  431  422 #> [19934,]  406  431  421 #> [19935,]  405  430  421 #> [19936,]  405  430  422 #> [19937,]  405  430  422 #> [19938,]  405  430  422 #> [19939,]  405  430  421 #> [19940,]  406  431  421 #> [19941,]  405  430  422 #> [19942,]  406  431  422 #> [19943,]  405  430  422 #> [19944,]  405  430  422 #> [19945,]  405  430  422 #> [19946,]  405  430  422 #> [19947,]  405  430  422 #> [19948,]  406  431  421 #> [19949,]  405  430  422 #> [19950,]  405  430  422 #> [19951,]  405  430  422 #> [19952,]  405  430  422 #> [19953,]  405  430  422 #> [19954,]  405  430  422 #> [19955,]  405  430  422 #> [19956,]  406  431  422 #> [19957,]  405  430  422 #> [19958,]  405  430  422 #> [19959,]  405  430  422 #> [19960,]  406  431  422 #> [19961,]  405  430  422 #> [19962,]  405  430  422 #> [19963,]  405  430  422 #> [19964,]  406  431  422 #> [19965,]  406  431  421 #> [19966,]  405  430  422 #> [19967,]  405  430  422 #> [19968,]  405  430  422 #> [19969,]  405  430  422 #> [19970,]  406  431  421 #> [19971,]  406  431  422 #> [19972,]  405  430  422 #> [19973,]  406  431  422 #> [19974,]  405  430  421 #> [19975,]  405  430  422 #> [19976,]  405  430  422 #> [19977,]  405  430  422 #> [19978,]  406  431  422 #> [19979,]  405  430  422 #> [19980,]  405  430  422 #> [19981,]  405  430  422 #> [19982,]  405  430  421 #> [19983,]  405  430  422 #> [19984,]  406  431  422 #> [19985,]  405  430  422 #> [19986,]  405  430  422 #> [19987,]  405  430  422 #> [19988,]  405  430  422 #> [19989,]  405  430  422 #> [19990,]  405  430  422 #> [19991,]  405  430  422 #> [19992,]  405  430  422 #> [19993,]  406  431  422 #> [19994,]  405  430  422 #> [19995,]  405  430  422 #> [19996,]  405  430  422 #> [19997,]  406  431  422 #> [19998,]  406  431  421 #> [19999,]  405  430  422 #> [20000,]  406  431  422"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Return forest's leaf node scale parameters. leaf scale sampled forest question, throws error leaf model stochastic scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"computeForestLeafVariances(model_object, forest_type, forest_inds = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"model_object Object type bartmodel bcfmodel corresponding BART / BCF model least one forest sample forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Vector size length(forest_inds) leaf scale parameter requested forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafVariances(bart_model, \"mean\") #>  [1] 0.004812251 0.005344195 0.005454589 0.005331039 0.005182490 0.005076583 #>  [7] 0.005118244 0.004397982 0.005222832 0.005149626 computeForestLeafVariances(bart_model, \"mean\", 0) #> [1] 0.004812251 computeForestLeafVariances(bart_model, \"mean\", c(1,3,5)) #> [1] 0.005344195 0.005331039 0.005076583"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Compute return largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"computeForestMaxLeafIndex(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute max leaf indices. provided, function return max leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Vector containing largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestMaxLeafIndex(bart_model, X, \"mean\") #>  [1] 392 412 411 422 407 427 427 419 434 444 computeForestMaxLeafIndex(bart_model, X, \"mean\", 0) #> [1] 392 computeForestMaxLeafIndex(bart_model, X, \"mean\", c(1,3,9)) #> [1] 412 422 444"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"Convert persistent aspects covariate preprocessor (-memory) C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"convertPreprocessorToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"wrapper around -memory C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Convert list (-memory) JSON representations BART model single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"createBARTModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- list(saveBARTModelToJson(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BART models single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"createBARTModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string_list <- list(saveBARTModelToJsonString(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJsonString(bart_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Convert (-memory) JSON representation BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"createBARTModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"json_object Object type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model) bart_model_roundtrip <- createBARTModelFromJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Convert JSON file containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"createBARTModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) bart_model_roundtrip <- createBARTModelFromJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Convert JSON string containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"createBARTModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJsonString(bart_model) bart_model_roundtrip <- createBARTModelFromJsonString(bart_json) y_hat_mean_roundtrip <- rowMeans(predict(bart_model_roundtrip, X_train)$y_hat) plot(rowMeans(bart_model$y_hat_train), y_hat_mean_roundtrip,       xlab = \"original\", ylab = \"roundtrip\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"createBCFModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_list <- list(saveBCFModelToJson(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJson(bcf_json_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"createBCFModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_string_list <- list(saveBCFModelToJsonString(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJsonString(bcf_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Convert (-memory) JSON representation BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"createBCFModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"json_object Object type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) bcf_json <- saveBCFModelToJson(bcf_model) bcf_model_roundtrip <- createBCFModelFromJson(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Convert JSON file containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"createBCFModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\") # bcf_model_roundtrip <- createBCFModelFromJsonFile(\"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Convert JSON string containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"createBCFModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json <- saveBCFModelToJsonString(bcf_model) # bcf_model_roundtrip <- createBCFModelFromJsonString(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new (empty) C++ Json object — createCppJson","title":"Create a new (empty) C++ Json object — createCppJson","text":"Create new (empty) C++ Json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"createCppJson()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new (empty) C++ Json object — createCppJson","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json file — createCppJsonFile","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"Create C++ Json object Json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"createCppJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"json_filename Name file read. Must end .json.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) tmpjson <- tempfile(fileext = \".json\") example_json$save_file(file.path(tmpjson)) example_json_roundtrip <- createCppJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json string — createCppJsonString","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"Create C++ Json object Json string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"createCppJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) example_json_string <- example_json$return_json_string() example_json_roundtrip <- createCppJsonString(example_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R class that wraps a C++ random number generator — createCppRNG","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"Create R class wraps C++ random number generator","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"createCppRNG(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"CppRng object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"rng <- createCppRNG(1234) rng <- createCppRNG()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest — createForest","title":"Create a forest — createForest","text":"Create forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest — createForest","text":"","code":"createForest(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest — createForest","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest — createForest","text":"Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest — createForest","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest dataset object — createForestDataset","title":"Create a forest dataset object — createForestDataset","text":"Create forest dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest dataset object — createForestDataset","text":"","code":"createForestDataset(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest dataset object — createForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest dataset object — createForestDataset","text":"ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest dataset object — createForestDataset","text":"","code":"covariate_matrix <- matrix(runif(10*100), ncol = 10) basis_matrix <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) forest_dataset <- createForestDataset(covariate_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model object — createForestModel","title":"Create a forest model object — createForestModel","text":"Create forest model object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model object — createForestModel","text":"","code":"createForestModel(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model object — createForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree ensemble mean model. Setting -1 enforce depth limits trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model object — createForestModel","text":"ForestModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model object — createForestModel","text":"","code":"num_trees <- 100 n <- 100 p <- 10 alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a container of forest samples — createForestSamples","title":"Create a container of forest samples — createForestSamples","text":"Create container forest samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a container of forest samples — createForestSamples","text":"","code":"createForestSamples(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a container of forest samples — createForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a container of forest samples — createForestSamples","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a container of forest samples — createForestSamples","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an outcome object — createOutcome","title":"Create an outcome object — createOutcome","text":"Create outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an outcome object — createOutcome","text":"","code":"createOutcome(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an outcome object — createOutcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an outcome object — createOutcome","text":"Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an outcome object — createOutcome","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) outcome <- createOutcome(y)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"createPreprocessorFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"json_object -memory wrapper around JSON C++ object containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJson(preprocessor_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"createPreprocessorFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"json_string -memory JSON string containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJsonString(preprocessor_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectSamples object — createRandomEffectSamples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"Create RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"createRandomEffectSamples(num_components, num_groups, random_effects_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random effects dataset object — createRandomEffectsDataset","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"Create random effects dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"createRandomEffectsDataset(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"rfx_group_ids <- sample(1:2, size = 100, replace = TRUE) rfx_basis <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsModel object — createRandomEffectsModel","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"Create RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsTracker object — createRandomEffectsTracker","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"Create RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"createRandomEffectsTracker(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"# S3 method for class 'bartmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"object Object type bartmodel containing draws BART model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) snr <- 3 group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) E_y <- f_XW + rfx_term y <- E_y + rnorm(n, 0, 1)*(sd(E_y)/snr) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- group_ids[test_inds] rfx_group_ids_train <- group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     rfx_group_ids_train = rfx_group_ids_train, rfx_group_ids_test = rfx_group_ids_test,                     rfx_basis_train = rfx_basis_train, rfx_basis_test = rfx_basis_test,                     num_gfr = 100, num_burnin = 0, num_mcmc = 100) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) rfx_samples <- getRandomEffectSamples(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"Generic function extracting random effect samples model object (BCF, BART, etc...)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"object Fitted model object extract random effects ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"List random effect samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"Combine multiple JSON model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"loadForestContainerCombinedJson(json_object_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"json_object_list List objects class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) mean_forest <- loadForestContainerCombinedJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"loadForestContainerCombinedJsonString(json_string_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"json_string_list List strings parse objects type CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) mean_forest <- loadForestContainerCombinedJsonString(bart_json_string, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of forest samples from json — loadForestContainerJson","title":"Load a container of forest samples from json — loadForestContainerJson","text":"Load container forest samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"loadForestContainerJson(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of forest samples from json — loadForestContainerJson","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of forest samples from json — loadForestContainerJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) mean_forest <- loadForestContainerJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"Combine multiple JSON model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"loadRandomEffectSamplesCombinedJson(json_object_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"json_object_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"loadRandomEffectSamplesCombinedJsonString(json_string_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"json_string_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJsonString(bart_json_string, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"Load container random effect samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"loadRandomEffectSamplesJson(json_object, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"json_object Object class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) rfx_samples <- loadRandomEffectSamplesJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a scalar from json — loadScalarJson","title":"Load a scalar from json — loadScalarJson","text":"Load scalar json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a scalar from json — loadScalarJson","text":"","code":"loadScalarJson(json_object, json_scalar_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a scalar from json — loadScalarJson","text":"json_object Object class CppJson json_scalar_label Label referring particular scalar / string value (.e. \"num_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a scalar from json — loadScalarJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a scalar from json — loadScalarJson","text":"","code":"example_scalar <- 5.4 example_json <- createCppJson() example_json$add_scalar(\"myscalar\", example_scalar) roundtrip_scalar <- loadScalarJson(example_json, \"myscalar\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a vector from json — loadVectorJson","title":"Load a vector from json — loadVectorJson","text":"Load vector json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a vector from json — loadVectorJson","text":"","code":"loadVectorJson(json_object, json_vector_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a vector from json — loadVectorJson","text":"json_object Object class CppJson json_vector_label Label referring particular vector (.e. \"sigma2_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a vector from json — loadVectorJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a vector from json — loadVectorJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) roundtrip_vec <- loadVectorJson(example_json, \"myvec\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BART model on new data — predict.bartmodel","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"Predict sampled BART model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"# S3 method for class 'bartmodel' predict(   object,   X,   leaf_basis = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"object Object type bart containing draws regression forest associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. leaf_basis (Optional) Bases used prediction (e.g. dot product leaf values). Default: NULL. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"List prediction matrices. model random effects, list one element – predictions forest. model random effects, list three elements – forest predictions, random effects predictions, sum (y_hat).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) y_hat_test <- predict(bart_model, X_test)$y_hat plot(rowMeans(y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BCF model on new data — predict.bcfmodel","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"Predict sampled BCF model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' predict(   object,   X,   Z,   propensity = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. Z Treatments used prediction. propensity (Optional) Propensities used prediction. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"List 3-5 nrow(X) object$num_samples matrices: prognostic function estimates, treatment effect estimates, (optionally) random effects predictions, (optionally) variance forest predictions, outcome predictions.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train) preds <- predict(bcf_model, X_test, Z_test, pi_test) plot(rowMeans(preds$mu_hat), mu_test, xlab = \"predicted\",      ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(preds$tau_hat), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"preprocessPredictionData(input_data, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"input_data Covariates, provided either dataframe matrix metadata List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocessed data categorical variables appropriately handled","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"cov_df <- data.frame(x1 = 1:5, x2 = 5:1, x3 = 6:10) metadata <- list(num_ordered_cat_vars = 0, num_unordered_cat_vars = 0,                   num_numeric_vars = 3, numeric_vars = c(\"x1\", \"x2\", \"x3\")) X_preprocessed <- preprocessPredictionData(cov_df, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"preprocessTrainData(input_data)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"input_data Covariates, provided either dataframe matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"List preprocessed (unmodified) data details number type variable, unique categories associated categorical variables, vector feature types needed calls BART BCF.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) X <- preprocess_list$X"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"Reset active forest, either specific forest ForestContainer ensemble single-node (.e. root) trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"resetActiveForest(active_forest, forest_samples = NULL, forest_num = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"active_forest Current active forest forest_samples (Optional) Container forest samples re-initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees. forest_num (Optional) Index forest samples initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples$add_forest_with_constant_leaves(0.0) forest_samples$add_numeric_split_tree(0, 0, 0, 0, 0.5, -1.0, 1.0) forest_samples$add_numeric_split_tree(0, 1, 0, 1, 0.75, 3.4, 0.75) active_forest$set_root_leaves(0.1) resetActiveForest(active_forest, forest_samples, 0) resetActiveForest(active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"Re-initialize forest model (tracking data structures) specific forest ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"resetForestModel(forest_model, forest, dataset, residual, is_mean_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"forest_model Forest model tracking data structures forest Forest re-initialize forest model dataset Training dataset object residual Residual also updated is_mean_model Whether model updated conditional mean model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"n <- 100 p <- 10 num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) leaf_model <- 0 sigma2 <- 1.0 leaf_scale <- as.matrix(1.0) variable_weights <- rep(1/p, p) a_forest <- 1 b_forest <- 1 cutpoint_grid_size <- 100 X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) y <- -5 + 10*(X[,1] > 0.5) + rnorm(n) outcome <- createOutcome(y) rng <- createCppRNG(1234) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth) active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_model$sample_one_iteration(     forest_dataset, outcome, forest_samples, active_forest,      rng, feature_types, leaf_model, leaf_scale, variable_weights,      a_forest, b_forest, sigma2, cutpoint_grid_size, keep_forest = TRUE,      gfr = FALSE, pre_initialized = TRUE ) resetActiveForest(active_forest, forest_samples, 0) resetForestModel(forest_model, active_forest, forest_dataset, outcome, TRUE)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"Reset RandomEffectsModel object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"resetRandomEffectsModel(rfx_model, rfx_samples, sample_num, sigma_alpha_init)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"rfx_model Object type RandomEffectsModel. rfx_samples Object type RandomEffectSamples. sample_num Index sample stored rfx_samples reset state random effects model. Zero-indexed, resetting based first sample require setting sample_num = 0. sigma_alpha_init Initial value \"working parameter\" scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"Reset RandomEffectsTracker object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"resetRandomEffectsTracker(   rfx_tracker,   rfx_model,   rfx_dataset,   residual,   rfx_samples )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome. rfx_samples Object type RandomEffectSamples.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0) resetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome, rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object to its ","title":"Reset a RandomEffectsModel object to its ","text":"Reset RandomEffectsModel object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object to its ","text":"","code":"rootResetRandomEffectsModel(   rfx_model,   alpha_init,   xi_init,   sigma_alpha_init,   sigma_xi_init,   sigma_xi_shape,   sigma_xi_scale )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object to its ","text":"rfx_model Object type RandomEffectsModel. alpha_init Initial value \"working parameter\". xi_init Initial value \"group parameters\". sigma_alpha_init Initial value \"working parameter\" scale parameter. sigma_xi_init Initial value \"group parameters\" scale parameter. sigma_xi_shape Shape parameter inverse gamma variance model group parameters. sigma_xi_scale Scale parameter inverse gamma variance model group parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object to its ","title":"Reset a RandomEffectsTracker object to its ","text":"Reset RandomEffectsTracker object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object to its ","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale) rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"Sample one iteration (inverse gamma) global variance model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"sampleGlobalErrorVarianceOneIteration(residual, dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"residual Outcome class dataset ForestDataset class rng C++ random number generator Global variance shape parameter b Global variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) y_std <- (y-mean(y))/sd(y) forest_dataset <- createForestDataset(X) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 sigma2 <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"Sample one iteration leaf parameter variance model (univariate basis constant leaf!)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"sampleLeafVarianceOneIteration(forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"forest C++ forest rng C++ random number generator Leaf variance shape parameter b Leaf variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 tau <- sampleLeafVarianceOneIteration(active_forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Convert persistent aspects BART model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"saveBARTModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"Convert persistent aspects BART model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"saveBARTModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"object Object type bartmodel containing draws BART model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"Convert persistent aspects BART model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"saveBARTModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string <- saveBARTModelToJsonString(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Convert persistent aspects BCF model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"saveBCFModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # bcf_json <- saveBCFModelToJson(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"Convert persistent aspects BCF model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"saveBCFModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"Convert persistent aspects BCF model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"saveBCFModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonString(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"Convert persistent aspects covariate preprocessor (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"savePreprocessorToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Stochastic tree ensembles (XBART BART) supervised learning causal inference.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Maintainer: Drew Herren drewherrenopensource@gmail.com (ORCID) Authors: Richard Hahn Jared Murray Carlos Carvalho Jingyu contributors: stochtree contributors [copyright holder]","code":""},{"path":"https://stochastictree.github.io/stochtree-r/news/index.html","id":"stochtree-010","dir":"Changelog","previous_headings":"","what":"stochtree 0.1.0","title":"stochtree 0.1.0","text":"Initial CRAN submission.","code":""}]
