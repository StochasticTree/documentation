[{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Step Function","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple step function.","code":"# Generate the data n <- 500 p_x <- 10 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Demo 1: Step Function > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,     general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Demo 2: Partitioned Linear Model > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect BART samples burnin.","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects","what":"Simulation","title":"Bayesian Supervised Learning in StochTree","text":", generate data simple partitioned linear model additive random effect structure.","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) noise_sd <- sd(f_XW) / snr y <- f_XW + rfx_term + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"first sample ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_warmstart <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, rfx_group_ids_train = rfx_group_ids_train,      rfx_basis_train = rfx_basis_train, X_test = X_test, leaf_basis_test = leaf_basis_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_warmstart$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/BayesianSupervisedLearning.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Demo 3: Partitioned Linear Model with Random Effects > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Bayesian Supervised Learning in StochTree","text":"Next, sample ensemble model without warm-start initialization. Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = 100) bart_model_root <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params ) plot(bart_model_root$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_root$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6|X3−1|τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 \\lvert X_3 - 1 \\rvert\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart","dir":"Articles","previous_headings":"Binary Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.98"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-2-linear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=1+2X2X4g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 1 + 2 X_2 X_4\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.75"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-1","dir":"Articles","previous_headings":"Binary Treatment > Demo 2: Linear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.76"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-3-linear-outcome-model-homogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process Hahn, Murray, Carvalho (2020): y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+g(X)+6X1X3τ(X)=3g(X)=𝕀(X5=1)×2−𝕀(X5=2)×1−𝕀(X5=3)×4sμ=𝕍(μ(X))π(X)=0.8ϕ(3μ(X)sμ)−X12+2U+120X1,X2,X3∼N(0,1)X4∼Bernoulli(1/2)X5∼Categorical(1/3,1/3,1/3)U∼Uniform(0,1)Z∼Bernoulli(π(X))\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + g(X) + 6 X_1 X_3\\\\ \\tau(X) &= 3\\\\ g(X) &= \\mathbb{}(X_5=1) \\times 2 - \\mathbb{}(X_5=2) \\times 1 - \\mathbb{}(X_5=3) \\times 4\\\\ s_{\\mu} &= \\sqrt{\\mathbb{V}(\\mu(X))}\\\\ \\pi(X) &= 0.8 \\phi\\left(\\frac{3\\mu(X)}{s_{\\mu}}\\right) - \\frac{X_1}{2} + \\frac{2U+1}{20}\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim \\text{Bernoulli}(1/2)\\\\ X_5 &\\sim \\text{Categorical}(1/3,1/3,1/3)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu2(X) tau_x <- tau1(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-2","dir":"Articles","previous_headings":"Binary Treatment > Demo 3: Linear Outcome Model, Homogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.7"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-4-nonlinear-outcome-model-heterogeneous-treatment-effect","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)={−1.1 ifX1>X20.9 ifX1≤X2τ(X)=11+exp(−X3)+X210π(X)=Φ(μ(X))Z∼Bernoulli(π(X))X1,X2,X3∼N(0,1)X4∼N(X2,1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= \\begin{cases} -1.1 & \\text{ } X_1 > X_2\\\\ 0.9 & \\text{ } X_1 \\leq X_2 \\end{cases}\\\\ \\tau(X) &= \\frac{1}{1+\\exp(-X_3)} + \\frac{X_2}{10}\\\\ \\pi(X) &= \\Phi\\left(\\mu(X)\\right)\\\\ Z &\\sim \\text{Bernoulli}\\left(\\pi(X)\\right)\\\\ X_1,X_2,X_3 &\\sim N\\left(0,1\\right)\\\\ X_4 &\\sim N\\left(X_2,1\\right)\\\\ \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 1000 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n,x2,1) X <- cbind(x1,x2,x3,x4) p <- ncol(X) mu <- function(x) {-1*(x[,1]>(x[,2])) + 1*(x[,1]<(x[,2])) - 0.1} tau <- function(x) {1/(1 + exp(-x[,3])) + x[,2]/10} mu_x <- mu(X) tau_x <- tau(X) pi_x <- pnorm(mu_x) Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x sigma <- diff(range(mu_x + tau_x*pi))/8 y <- E_XZ + sigma*rnorm(n) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 1"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-3","dir":"Articles","previous_headings":"Binary Treatment > Demo 4: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 100 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.92"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-5-nonlinear-outcome-model-heterogeneous-treatment-effect-with-additive-random-effects","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","title":"Causal Machine Learning in StochTree","text":"augment simulated example Demo 1 additive random effect structure show bcf() function can estimate incorporate effects forest sampling procedure.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw augmented “demo 1” DGP","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-4","dir":"Articles","previous_headings":"Binary Treatment > Demo 5: Nonlinear Outcome Model, Heterogeneous Treatment Effect with Additive Random Effects > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"simulate “warm-start” model (running root-MCMC BART random effects simply matter modifying code snippet setting num_gfr <- 0 num_mcmc > 0). Inspect BART samples initialized XBART warm-start      Examine test set interval coverage clear causal inference much difficult presence strong covariate-dependent prognostic effects strong group-level random effects. sense, proper prior calibration three μ\\mu, τ\\tau random effects models crucial.","code":"num_gfr <- 100 num_burnin <- 0 num_mcmc <- 500 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,     rfx_basis_test = rfx_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$rfx_preds_test), rfx_term_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Random effects terms\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ-rfx_term) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.95"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-6-nonlinear-outcome-model-heterogeneous-treatment-effect-using-different-features-in-the-prognostic-and-treatment-forests","dir":"Articles","previous_headings":"Binary Treatment","what":"Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","title":"Causal Machine Learning in StochTree","text":", consider case might prefer use subset covariates treatment effect forest. might want ? Well, many cases plausible covariates (example age, income, etc…) influence outcome interest causal problem, moderate treatment effect. case, ’d need include variables prognostic forest deconfounding don’t necessarily need include treatment effect forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-5","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw modified “demo 1” DGP","code":"mu <- function(x) {1+g(x)+x[,1]*x[,3]-x[,2]+3*x[,3]} tau <- function(x) {1 - 2*x[,1] + 2*x[,2] + 1*x[,1]*x[,2]} n <- 500 snr <- 4 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) x6 <- rnorm(n) x7 <- rnorm(n) x8 <- rnorm(n) x9 <- rnorm(n) x10 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5,x6,x7,x8,x9,x10) p <- ncol(X) mu_x <- mu(X) tau_x <- tau(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.5 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect burned-samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.948 test_tau_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_tau_mean - tau_test)^2)) #> [1] 1.639477 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 2.067215"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"mcmc-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"MCMC, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model original MCMC sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples     Examine test set interval coverage test set RMSE","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_mcmc <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_mcmc$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_mcmc$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_mcmc$sigma2_samples, sigma_observed)),                   max(c(bcf_model_mcmc$sigma2_samples, sigma_observed))) plot(bcf_model_mcmc$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_mcmc$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.964 test_mean <- rowMeans(bcf_model_mcmc$tau_hat_test) sqrt(mean((test_mean - tau_test)^2)) #> [1] 1.308772 test_outcome_mean <- rowMeans(bcf_model_mcmc$y_hat_test) sqrt(mean((test_outcome_mean - y_test)^2)) #> [1] 1.954767"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-full-covariate-set-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, full covariate set in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariates prognostic (μ(X)\\mu(X)) treatment effect (τ(X)\\tau(X)) forests. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.956 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.622401 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 2.01316"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-covariate-subset-in-taux","dir":"Articles","previous_headings":"Binary Treatment > Demo 6: Nonlinear Outcome Model, Heterogeneous Treatment Effect using Different Features in the Prognostic and Treatment Forests > Sampling and Analysis","what":"Warmstart, covariate subset in τ(X)\\tau(X)","title":"Causal Machine Learning in StochTree","text":"simulate model warm-start sampler, using covariate X1X_1 treatment effect forest. Inspect BART samples initialized XBART warm-start     Examine test set interval coverage test set RMSE","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F, keep_vars = c(\"x1\",\"x2\")) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$y_hat_test), y_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Outcome\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96 test_tau_mean <- rowMeans(bcf_model_warmstart$tau_hat_test) sqrt(mean((tau_test - test_tau_mean)^2)) #> [1] 1.324862 test_outcome_mean <- rowMeans(bcf_model_warmstart$y_hat_test) sqrt(mean((y_test - test_outcome_mean)^2)) #> [1] 1.944019"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"demo-1-nonlinear-outcome-model-heterogeneous-treatment-effect-1","dir":"Articles","previous_headings":"Continuous Treatment","what":"Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","title":"Causal Machine Learning in StochTree","text":"consider following data generating process: y=μ(X)+τ(X)Z+ϵϵ∼N(0,σ2)μ(X)=1+2X1−𝟙(X2<0)×4+𝟙(X2≥0)×4+3(|X3|−2π)τ(X)=1+2X4X1,X2,X3,X4,X5∼N(0,1)U∼Uniform(0,1)π(X)=μ(X)−12+4(U−12)Z∼𝒩(π(X),1)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) Z + \\epsilon\\\\ \\epsilon &\\sim N\\left(0,\\sigma^2\\right)\\\\ \\mu(X) &= 1 + 2 X_1 - \\mathbb{1}\\left(X_2 < 0\\right) \\times 4 + \\mathbb{1}\\left(X_2 \\geq 0\\right) \\times 4 + 3 \\left(\\lvert X_3 \\rvert - \\sqrt{\\frac{2}{\\pi}} \\right)\\\\ \\tau(X) &= 1 + 2 X_4\\\\ X_1,X_2,X_3,X_4,X_5 &\\sim N\\left(0,1\\right)\\\\ U &\\sim \\text{Uniform}\\left(0,1\\right)\\\\ \\pi(X) &= \\frac{\\mu(X) - 1}{2} + 4 \\left(U - \\frac{1}{2}\\right)\\\\ Z &\\sim \\mathcal{N}\\left(\\pi(X), 1\\right) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"simulation-6","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect","what":"Simulation","title":"Causal Machine Learning in StochTree","text":"draw DGP defined ","code":"n <- 500 snr <- 3 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- 1 + 2*x1 - 4*(x2 < 0) + 4*(x2 >= 0) + 3*(abs(x3) - sqrt(2/pi)) tau_x <- 1 + 2*x4 u <- runif(n) pi_x <- ((mu_x-1)/4) + 4*(u-0.5) Z <- pi_x + rnorm(n,0,1) E_XZ <- mu_x + Z*tau_x y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"warmstart-5","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"Warmstart","title":"Causal Machine Learning in StochTree","text":"first simulate ensemble model y∣Xy \\mid X using “warm-start” initialization samples (Krantsevich, , Hahn (2023)). default stochtree. Inspect BART samples initialized XBART warm-start    Examine test set interval coverage","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_warmstart <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_warmstart$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_warmstart$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_warmstart$sigma2_samples, sigma_observed)),                   max(c(bcf_model_warmstart$sigma2_samples, sigma_observed))) plot(bcf_model_warmstart$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_warmstart$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.96"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CausalInference.html","id":"bart-mcmc-without-warmstart-4","dir":"Articles","previous_headings":"Continuous Treatment > Demo 1: Nonlinear Outcome Model, Heterogeneous Treatment Effect > Sampling and Analysis","what":"BART MCMC without Warmstart","title":"Causal Machine Learning in StochTree","text":"Next, simulate ensemble model without warm-start initialization. Inspect BART samples burnin    Examine test set interval coverage","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 1000 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(keep_every = 5) mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model_root <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mu_forest_params = mu_forest_params,      tau_forest_params = tau_forest_params ) plot(rowMeans(bcf_model_root$mu_hat_test), mu_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(rowMeans(bcf_model_root$tau_hat_test), tau_test,       xlab = \"predicted\", ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3) sigma_observed <- var(y-E_XZ) plot_bounds <- c(min(c(bcf_model_root$sigma2_samples, sigma_observed)),                   max(c(bcf_model_root$sigma2_samples, sigma_observed))) plot(bcf_model_root$sigma2_samples, ylim = plot_bounds,       ylab = \"sigma^2\", xlab = \"Sample\", main = \"Global variance parameter\") abline(h = sigma_observed, lty=3, lwd = 3, col = \"blue\") test_lb <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.025) test_ub <- apply(bcf_model_root$tau_hat_test, 1, quantile, 0.975) cover <- (     (test_lb <= tau_x[test_inds]) &      (test_ub >= tau_x[test_inds]) ) mean(cover) #> [1] 0.93"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Custom Sampling Routines in StochTree","text":"functions bart() bcf() provide simple performant interfaces supervised learning / causal inference, stochtree also offers access many “low-level” data structures typically implemented C++. low-level interface designed performance even simplicity — rather intent provide “prototype” interface C++ code doesn’t require modifying C++. illustrate prototype interface might useful, consider classic BART algorithm:    INPUT: yy, XX, τ\\tau, ν\\nu, λ\\lambda, α\\alpha, β\\beta    OUTPUT: mm samples decision forest kk trees global variance parameter σ2\\sigma^2    Initialize σ2\\sigma^2 via default data-dependent calibration exercise    Initialize “forest 0” kk trees single root node, referring tree jj’s prediction vector f0,jf_{0,j}    Compute residual r=y−∑j=1kf0,jr = y - \\sum_{j=1}^k f_{0,j}    iiIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Initialize forest ii forest −1i-1       jjIN {1,…,k}\\left\\{1,\\dots,k\\right\\}:          Add predictions tree jj residual: r=r+fi,jr = r + f_{,j}          Update tree jj via Metropolis-Hastings rr XX data tree priors depending (τ\\tau, σ2\\sigma^2, α\\alpha, β\\beta)          Sample leaf node parameters tree jj via Gibbs (leaf node prior N(0,τ)N\\left(0,\\tau\\right))          Subtract (updated) predictions tree jj residual: r=r−fi,jr = r - f_{,j}       Sample σ2\\sigma^2 via Gibbs (prior IG(ν/2,νλ/2)IG(\\nu/2,\\nu\\lambda/2)) algorithm conceptually simple, much core computation carried low-level languages C C++ tree data structure. result, changes algorithm, supporting heteroskedasticity (Pratola et al. (2020)), categorical outcomes (Murray (2021)) causal effect estimation (Hahn, Murray, Carvalho (2020)) require modifying low-level code. prototype interface exposes core components loop R level, thus making possible interchange C++ computation steps like “update tree jj via Metropolis-Hastings” R computation custom variance model, user-specified additive mean model components, . begin, load stochtree package","code":"library(stochtree)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) y <- f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1] } # Forest predictions preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via “grow--root” (Hahn (2023))   Inspect BART samples obtained “warm-starting”","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-2-supervised-learning-with-additive-random-effects","dir":"Articles","previous_headings":"","what":"Demo 2: Supervised Learning with Additive Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example add simple “random effects” structure: every observation either group 1 group 2 random group intercept (simulated quite strong, underscoring need random effects modeling).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- c(-5, 5) rfx_basis <- rep(1, n) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rfx_coefs[group_ids] * rfx_basis y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1) xi_init <- matrix(c(1,1),1,2) sigma_alpha_init <- matrix(c(1),1,1) sigma_xi_init <- matrix(c(1),1,1) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-1","dir":"Articles","previous_headings":"Demo 2: Supervised Learning with Additive Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-3-supervised-learning-with-additive-multi-component-random-effects","dir":"Articles","previous_headings":"","what":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","title":"Custom Sampling Routines in StochTree","text":"build example, case allowing random intercept regression coefficient (pre-specified basis) group (1 2).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-5, -3, 5, 3), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3*W[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1*W[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1*W[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*W[,1]) ) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) y <- f_XW + rfx_term + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Set parameters inform random effects samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha <- 0.9 beta <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- T feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) alpha_init <- c(1,0) xi_init <- matrix(c(1,0,1,0),2,2) sigma_alpha_init <- diag(1,2,2) sigma_xi_init <- diag(1,2,2) sigma_xi_shape <- 1 sigma_xi_scale <- 1 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha, beta,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) }  # Random effects dataset rfx_basis <- as.matrix(rfx_basis) group_ids <- as.integer(group_ids) rfx_dataset <- createRandomEffectsDataset(group_ids, rfx_basis)  # Random effects details num_groups <- length(unique(group_ids)) num_components <- ncol(rfx_basis)  # Random effects tracker rfx_tracker <- createRandomEffectsTracker(group_ids)  # Random effects model rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_model$set_working_parameter(alpha_init) rfx_model$set_group_parameters(xi_init) rfx_model$set_working_parameter_cov(sigma_alpha_init) rfx_model$set_group_parameter_cov(sigma_xi_init) rfx_model$set_variance_prior_shape(sigma_xi_shape) rfx_model$set_variance_prior_scale(sigma_xi_scale)  # Random effect samples rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) num_warmstart <- 10 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } for (i in (num_warmstart+1):num_samples) {     # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     )          # Sample leaf node variance parameter and update `leaf_prior_scale`     leaf_scale_samples[i+1] <- sampleLeafVarianceOneIteration(         active_forest, rng, a_leaf, b_leaf     )     leaf_prior_scale[1,1] <- leaf_scale_samples[i+1]          # Sample random effects model     rfx_model$sample_random_effect(rfx_dataset, outcome, rfx_tracker, rfx_samples,                                     TRUE, global_var_samples[i+1], rng) } # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Random effects predictions rfx_preds <- rfx_samples$predict(group_ids, rfx_basis)*y_std  # Overall predictions preds <- forest_preds + rfx_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-2","dir":"Articles","previous_headings":"Demo 3: Supervised Learning with Additive Multi-Component Random Effects","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model   Inspect BART samples obtained “warm-starting” plus additive random effects model   Now inspect samples BART forest alone (without considering random effect predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-4-supervised-learning-with-additive-linear-model","dir":"Articles","previous_headings":"","what":"Demo 4: Supervised Learning with Additive Linear Model","title":"Custom Sampling Routines in StochTree","text":"Instead group random effects, show combine stochastic forest additive linear regression term. model corresponds broadly y=Wβ+f(X)+ϵf(X)∼BART(c,d)β∼𝒩(0,τ)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= W\\beta + f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}(c,d)\\\\ \\beta &\\sim \\mathcal{N}(0, \\tau)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}(,b) \\end{aligned} \\end{equation*}","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"Simulate partitioned linear model simple additive group random effect structure","code":"# Generate the data n <- 500 p_X <- 10 p_W <- 1 X <- matrix(runif(n*p_X), ncol = p_X) W <- matrix(runif(n*p_W), ncol = p_W) beta_W <- c(5) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-3) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (1) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) lm_term <- W %*% beta_W y <- lm_term + f_XW + rnorm(n, 0, 1)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Initialize R-level access C++ classes needed sample model Prepare run sampler Run grow--root sampler “warm-start” BART Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"alpha_bart <- 0.9 beta_bart <- 1.25 min_samples_leaf <- 1 max_depth <- 10 num_trees <- 100 cutpoint_grid_size = 100 global_variance_init = 1. tau_init = 0.5 leaf_prior_scale = matrix(c(tau_init), ncol = 1) nu <- 4 lambda <- 0.5 a_leaf <- 2. b_leaf <- 0.5 leaf_regression <- F feature_types <- as.integer(rep(0, p_X)) # 0 = numeric var_weights <- rep(1/p_X, p_X) beta_tau <- 20 # Data if (leaf_regression) {     forest_dataset <- createForestDataset(X, W)     outcome_model_type <- 1 } else {     forest_dataset <- createForestDataset(X)     outcome_model_type <- 0 } outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model <- createForestModel(forest_dataset, feature_types,                                    num_trees, n, alpha_bart, beta_bart,                                    min_samples_leaf, max_depth)  # \"Active forest\" (which gets updated by the sample) and  # container of forest samples (which is written to when  # a sample is not discarded due to burn-in / thinning) if (leaf_regression) {     forest_samples <- createForestSamples(num_trees, 1, F)     active_forest <- createForest(num_trees, 1, F) } else {     forest_samples <- createForestSamples(num_trees, 1, T)     active_forest <- createForest(num_trees, 1, T) } num_warmstart <- 20 num_mcmc <- 100 num_samples <- num_warmstart + num_mcmc beta_init <- 0 global_var_samples <- c(global_variance_init, rep(0, num_samples)) leaf_scale_samples <- c(tau_init, rep(0, num_samples)) beta_samples <- c(beta_init, rep(0, num_samples)) for (i in 1:num_warmstart) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, sigma2, cutpoint_grid_size, keep_forest = T, gfr = T     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } for (i in (num_warmstart+1):num_samples) {     # Initialize vectors needed for posterior sampling     if (i == 1) {         beta_hat <- beta_init         yhat_forest <- rep(0, n)         partial_res <- resid - yhat_forest     } else {         yhat_forest <- forest_samples$predict_raw_single_forest(forest_dataset, (i-1)-1)         partial_res <- resid - yhat_forest         outcome$add_vector(W %*% beta_hat)     }     # Sample beta from bayesian linear model with gaussian prior     sigma2 <- global_var_samples[i]     beta_posterior_mean <- sum(partial_res*W[,1])/(sigma2 + sum(W[,1]*W[,1]))     beta_posterior_var <- (sigma2*beta_tau)/(sigma2 + sum(W[,1]*W[,1]))     beta_hat <- rnorm(1, beta_posterior_mean, sqrt(beta_posterior_var))     beta_samples[i+1] <- beta_hat     # Update partial residual before sampling forest     outcome$subtract_vector(W %*% beta_hat)          # Sample forest     forest_model$sample_one_iteration(         forest_dataset, outcome, forest_samples, active_forest, rng, feature_types,          outcome_model_type, leaf_prior_scale, var_weights,          1, 1, global_var_samples[i], cutpoint_grid_size, keep_forest = T, gfr = F     )          # Sample global variance parameter     global_var_samples[i+1] <- sampleGlobalErrorVarianceOneIteration(         outcome, forest_dataset, rng, nu, lambda     ) } # Linear model predictions lm_preds <- (sapply(1:num_samples, function(x) W[,1]*beta_samples[x+1]))*y_std  # Forest predictions forest_preds <- forest_samples$predict(forest_dataset)*y_std + y_bar  # Overall predictions preds <- forest_preds + lm_preds  # Global error variance sigma_samples <- sqrt(global_var_samples)*y_std  # Regression parameter beta_samples <- beta_samples*y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-3","dir":"Articles","previous_headings":"Demo 4: Supervised Learning with Additive Linear Model","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect initial samples obtained via grow--root additive random effects model    Inspect BART samples obtained “warm-starting” plus additive random effects model    Now inspect samples BART forest alone (without considering additive linear model predictions)","code":"plot(sigma_samples[1:num_warmstart], ylab=\"sigma\") plot(beta_samples[1:num_warmstart], ylab=\"beta\") plot(rowMeans(preds[,1:num_warmstart]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(sigma_samples[(num_warmstart+1):num_samples], ylab=\"sigma\") plot(beta_samples[(num_warmstart+1):num_samples], ylab=\"beta\") plot(rowMeans(preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(forest_preds[,(num_warmstart+1):num_samples]), y, pch=16,       cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"demo-5-causal-inference","dir":"Articles","previous_headings":"","what":"Demo 5: Causal Inference","title":"Custom Sampling Routines in StochTree","text":"show implement Bayesian Causal Forest (BCF) model Hahn, Murray, Carvalho (2020) using stochtree’s prototype API, including demoing non-trivial sampling step done R level.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"background","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Background","title":"Custom Sampling Routines in StochTree","text":"supervised learning case previous demo conceptually simple, motivate causal effect estimation task additional notation. Let yy refer continuous outcome interest, ZZ refer binary treatment, XX set covariates may influence YY, ZZ, . XX exhaustive set covariates influence ZZ YY, can specific YY terms causal model (see example Pearl (2009)) Y=F(Z,X,ϵY)\\begin{equation*} \\begin{aligned} Y &= F(Z, X, \\epsilon_Y) \\end{aligned} \\end{equation*} ϵY\\epsilon_Y outcome specific random noise FF function generates YY (many cases, FF can thought inverse CDF conditional XX ZZ). “potential outcomes” (see Imbens Rubin (2015)) can recovered Y1=F(1,X,ϵY)Y^1 = F(1, X, \\epsilon_Y) Y0=F(0,X,ϵY)Y^0 = F(0, X, \\epsilon_Y). causal outcome model can decomposed “mean” “error” terms Y=μ(X)+Zτ(X)+[η(X)+Zδ(X)]μ(X)=𝔼ϵY[F(0,X,ϵY)]τ(X)=𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]η(X)=F(0,X,ϵY)−𝔼ϵY[F(0,X,ϵY)]δ(X)=F(1,X,ϵY)−F(0,X,ϵY)−𝔼ϵY[F(1,X,ϵY)−F(0,X,ϵY)]\\begin{equation*} \\begin{aligned} Y &= \\mu(X) + Z\\tau(X) + \\left[\\eta(X) + Z\\delta(X)\\right]\\\\ \\mu(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\tau(X) &= \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right]\\\\ \\eta(X) &= F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(0, X, \\epsilon_Y)\\right]\\\\ \\delta(X) &= F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y) - \\mathbb{E}_{\\epsilon_Y}\\left[F(1, X, \\epsilon_Y) - F(0, X, \\epsilon_Y)\\right] \\end{aligned} \\end{equation*} τ(X)\\tau(X) precisely conditional average treatment effect (CATE) estimand. Unfortunately, functional form FF unavailable analysis, τ(X)\\tau(X) derived. flexible, regularized nonparametrics enter picture, aim estimate μ(X)\\mu(X) τ(X)\\tau(X) data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"Demo 5: Causal Inference > Background","what":"Bayesian Causal Forest (BCF)","title":"Custom Sampling Routines in StochTree","text":"BCF estimates μ(X)\\mu(X) τ(X)\\tau(X) using separate BART forests term. Furthermore, rather rely common implicit coding ZZ 0 control observations 1 treated observations, consider coding control observations parameter b0b_0 treated observations parameter b1b_1. Placing N(0,1/2)N(0,1/2) prior bzb_z, essentially redefines outcome model y=μ(X)+τ(X)f(Z)+ϵf(Z)=b0(1−Z)+b1Zϵ∼N(0,σ2)b0,b1∼N(0,1/2)\\begin{equation*} \\begin{aligned} y &= \\mu(X) + \\tau(X) f(Z) + \\epsilon\\\\ f(Z) &= b_0(1-Z) + b_1 Z\\\\ \\epsilon &\\sim N\\left(0, \\sigma^2\\right)\\\\ b_0, b_1 &\\sim N\\left(0, 1/2\\right) \\end{aligned} \\end{equation*} Updating bzb_z requires additional Gibbs step, derive . Conditioning sampled forests μ\\mu τ\\tau, essentially regressing y−μ(Z)y - \\mu(Z) [(1−Z)τ(X),Zτ(X)]\\left[(1-Z)\\tau(X), Z\\tau(X)\\right] closed form posterior b0∣y,X,μ,τ∼N(syτ,0sττ,0+2σ2,σ2sττ,0+2σ2)b1∣y,X,μ,τ∼N(syτ,1sττ,1+2σ2,σ2sττ,1+2σ2)\\begin{equation*} \\begin{aligned} b_0 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,0}}{s_{\\tau\\tau,0} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,0} + 2\\sigma^2}\\right)\\\\ b_1 \\mid y, X, \\mu,\\tau &\\sim N\\left(\\frac{s_{y\\tau,1}}{s_{\\tau\\tau,1} + 2\\sigma^2}, \\frac{\\sigma^2}{s_{\\tau\\tau,1} + 2\\sigma^2}\\right) \\end{aligned} \\end{equation*} syτ,z=∑:Zi=z(yi−μ(Xi))τ(Xi)s_{y\\tau,z} = \\sum_{: Z_i = z} (y_i - \\mu(X_i))\\tau(X_i) sττ,z=∑:Zi=zτ(Xi)τ(Xi)s_{\\tau\\tau,z} = \\sum_{: Z_i = z} \\tau(X_i)\\tau(X_i).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"simulation-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Simulation","title":"Custom Sampling Routines in StochTree","text":"simulated causal DGP mirrors nonlinear, heterogeneous treatment effect DGP presented Hahn, Murray, Carvalho (2020).","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr)  # Standardize outcome y_bar <- mean(y) y_std <- sd(y) resid <- (y-y_bar)/y_std"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"sampling-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Sampling","title":"Custom Sampling Routines in StochTree","text":"Set parameters inform forest variance parameter samplers Prepare run sampler (now must specify initial values b0b_0 b1b_1, choose -1/2 1/2 instead 0 1). Initialize R-level access C++ classes needed sample model Run grow--root sampler “warm-start” BART, also updating adaptive coding parameter b0b_0 b1b_1 Pick last GFR forest (associated global variance / leaf scale parameters) MCMC sampler Predict rescale samples","code":"# Mu forest alpha_mu <- 0.95 beta_mu <- 2.0 min_samples_leaf_mu <- 5 max_depth_mu <- 10 num_trees_mu <- 250 cutpoint_grid_size_mu = 100 tau_init_mu = 1/num_trees_mu leaf_prior_scale_mu = matrix(c(tau_init_mu), ncol = 1) a_leaf_mu <- 3. b_leaf_mu <- var(resid)/(num_trees_mu) leaf_regression_mu <- F sigma_leaf_mu <- var(resid)/(num_trees_mu) current_leaf_scale_mu <- as.matrix(sigma_leaf_mu)  # Tau forest alpha_tau <- 0.25 beta_tau <- 3.0 min_samples_leaf_tau <- 5 max_depth_tau <- 10 num_trees_tau <- 50 cutpoint_grid_size_tau = 100 a_leaf_tau <- 3. b_leaf_tau <- var(resid)/(2*num_trees_tau) leaf_regression_tau <- T sigma_leaf_tau <- var(resid)/(2*num_trees_tau) current_leaf_scale_tau <- as.matrix(sigma_leaf_tau)  # Common parameters nu <- 3 sigma2hat <- (sigma(lm(resid~X)))^2 quantile_cutoff <- 0.9 if (is.null(lambda)) {     lambda <- (sigma2hat*qgamma(1-quantile_cutoff,nu))/nu } sigma2 <- sigma2hat current_sigma2 <- sigma2 # Sampling composition num_gfr <- 20 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc  # Sigma^2 samples global_var_samples <- rep(0, num_samples)  # Adaptive coding parameter samples b_0_samples <- rep(0, num_samples) b_1_samples <- rep(0, num_samples) b_0 <- -0.5 b_1 <- 0.5 current_b_0 <- b_0 current_b_1 <- b_1 tau_basis <- (1-Z)*current_b_0 + Z*current_b_1 # Data X_mu <- cbind(X, pi_x) X_tau <- X feature_types <- c(0,0,0,1,1) feature_types_mu <- as.integer(c(feature_types,0)) feature_types_tau <- as.integer(feature_types) variable_weights_mu = rep(1/ncol(X_mu), ncol(X_mu)) variable_weights_tau = rep(1/ncol(X_tau), ncol(X_tau)) forest_dataset_mu <- createForestDataset(X_mu) forest_dataset_tau <- createForestDataset(X_tau, tau_basis) outcome <- createOutcome(resid)  # Random number generator (std::mt19937) rng <- createCppRNG()  # Sampling data structures forest_model_mu <- createForestModel(     forest_dataset_mu, feature_types_mu, num_trees_mu, nrow(X_mu),      alpha_mu, beta_mu, min_samples_leaf_mu, max_depth_mu ) forest_model_tau <- createForestModel(     forest_dataset_tau, feature_types_tau, num_trees_tau, nrow(X_tau),      alpha_tau, beta_tau, min_samples_leaf_tau, max_depth_tau )  # Container of forest samples forest_samples_mu <- createForestSamples(num_trees_mu, 1, T) active_forest_mu <- createForest(num_trees_mu, 1, T) forest_samples_tau <- createForestSamples(num_trees_tau, 1, F) active_forest_tau <- createForest(num_trees_tau, 1, F)  # Initialize the leaves of each tree in the prognostic forest active_forest_mu$prepare_for_sampler(forest_dataset_mu, outcome, forest_model_mu, 0, mean(resid)) active_forest_mu$adjust_residual(forest_dataset_mu, outcome, forest_model_mu, F, F)  # Initialize the leaves of each tree in the treatment effect forest active_forest_tau$prepare_for_sampler(forest_dataset_tau, outcome, forest_model_tau, 1, 0.) active_forest_tau$adjust_residual(forest_dataset_tau, outcome, forest_model_tau, T, F) if (num_gfr > 0){     for (i in 1:num_gfr) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng,              feature_types_mu, 0, current_leaf_scale_mu, variable_weights_mu,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(             outcome, forest_dataset_mu, rng, nu, lambda         )         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng,              feature_types_tau, 1, current_leaf_scale_tau, variable_weights_tau,              1, 1, current_sigma2, cutpoint_grid_size, keep_forest = T, gfr = T,              pre_initialized = T         )                  # Sample adaptive coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1                  # Sample variance parameters (if requested)         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } if (num_burnin + num_mcmc > 0) {     for (i in (num_gfr+1):num_samples) {         # Sample the prognostic forest         forest_model_mu$sample_one_iteration(             forest_dataset_mu, outcome, forest_samples_mu, active_forest_mu, rng, feature_types_mu,              0, current_leaf_scale_mu, variable_weights_mu, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_mu, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]          # Sample the treatment forest         forest_model_tau$sample_one_iteration(             forest_dataset_tau, outcome, forest_samples_tau, active_forest_tau, rng, feature_types_tau,              1, current_leaf_scale_tau, variable_weights_tau, 1, 1, current_sigma2,              cutpoint_grid_size, keep_forest = T, gfr = F, pre_initialized = T         )                  # Sample coding parameters         mu_x_raw <- active_forest_mu$predict_raw(forest_dataset_mu)         tau_x_raw <- active_forest_tau$predict_raw(forest_dataset_tau)         s_tt0 <- sum(tau_x_raw*tau_x_raw*(Z==0))         s_tt1 <- sum(tau_x_raw*tau_x_raw*(Z==1))         partial_resid_mu <- resid - mu_x_raw         s_ty0 <- sum(tau_x_raw*partial_resid_mu*(Z==0))         s_ty1 <- sum(tau_x_raw*partial_resid_mu*(Z==1))         current_b_0 <- rnorm(1, (s_ty0/(s_tt0 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt0 + 2*current_sigma2)))         current_b_1 <- rnorm(1, (s_ty1/(s_tt1 + 2*current_sigma2)),                               sqrt(current_sigma2/(s_tt1 + 2*current_sigma2)))         tau_basis <- (1-Z)*current_b_0 + Z*current_b_1         forest_dataset_tau$update_basis(tau_basis)         forest_model_tau$propagate_basis_update(forest_dataset_tau, outcome, active_forest_tau)         b_0_samples[i] <- current_b_0         b_1_samples[i] <- current_b_1          # Sample global variance parameter         global_var_samples[i] <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset_tau, rng, nu, lambda)         current_sigma2 <- global_var_samples[i]     } } # Forest predictions mu_hat <- forest_samples_mu$predict(forest_dataset_mu)*y_std + y_bar tau_hat_raw <- forest_samples_tau$predict_raw(forest_dataset_tau) tau_hat <- t(t(tau_hat_raw) * (b_1_samples - b_0_samples))*y_std y_hat <- mu_hat + tau_hat * as.numeric(Z)  # Global error variance sigma2_samples <- global_var_samples*(y_std^2)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/CustomSamplingRoutine.html","id":"results-4","dir":"Articles","previous_headings":"Demo 5: Causal Inference","what":"Results","title":"Custom Sampling Routines in StochTree","text":"Inspect XBART results    Inspect warm start BART results    Inspect “adaptive coding” parameters b0b_0 b1b_1.","code":"plot(sigma2_samples[1:num_gfr], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,1:num_gfr]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,1:num_gfr]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,1:num_gfr]) - tau_x)^2) #> [1] 0.3286409 plot(sigma2_samples[(num_gfr+1):num_samples], ylab=\"sigma^2\") plot(rowMeans(mu_hat[,(num_gfr+1):num_samples]), mu_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"prognostic term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(tau_hat[,(num_gfr+1):num_samples]), tau_x, pch=16, cex=0.75,       xlab = \"pred\", ylab = \"actual\", main = \"treatment effect term\") abline(0,1,col=\"red\",lty=2,lwd=2.5) mean((rowMeans(tau_hat[,(num_gfr+1):num_samples]) - tau_x)^2) #> [1] 0.4025612 plot(b_0_samples, col = \"blue\", ylab = \"Coding parameter draws\",       ylim = c(min(min(b_0_samples), min(b_1_samples)), max(max(b_0_samples), max(b_1_samples)))) points(b_1_samples, col = \"orange\") legend(\"topleft\", legend = c(\"b_0\", \"b_1\"), col = c(\"blue\", \"orange\"), pch = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Kernel Methods from Tree Ensembles in StochTree","text":"trained tree ensemble strong --sample performance admits natural motivation “distance” two samples: shared leaf membership. number leaves ensemble 1 ss (, tree 1 3 leaves, reserves numbers 1 - 3, turn tree 2 5 leaves, reserves numbers 4 - 8 label leaves, ). dataset nn observations, construct matrix WW follows:    Initialize WW matrix zeroes nn rows many columns leaves ensemble    Let s = 0    jjIN {1,…,m}\\left\\{1,\\dots,m\\right\\}:       Let num_leaves number leaves tree jj       iiIN {1,…,n}\\left\\{1,\\dots,n\\right\\}:          Let k leaf tree jj maps observation ii          Set element Wi,k+s=1W_{,k+s} = 1       Let s = s + num_leaves sparse matrix WW matrix representation basis predictions ensemble (.e. integrating leaf parameters just analyzing leaf indices). ensemble mm trees, can determine proportion trees map observation leaf computing WWT/mW W^T / m. can form basis kernel function used Gaussian process regression, demonstrate . begin, load stochtree package tgp package serve point reference.","code":"library(stochtree) library(tgp) library(MASS) library(Matrix) library(mvtnorm)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-1-univariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Univariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"begin simulated example tgp package (Gramacy Taddy (2010)). data generating process (DGP) non-stationary single numeric covariate. define training set test set evaluate various approaches modeling sample outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data X_train <- seq(0,20,length=100) X_test <- seq(0,20,length=99) y_train <- (sin(pi*X_train/5) + 0.2*cos(4*pi*X_train/5)) * (X_train <= 9.6) lin_train <- X_train>9.6;  y_train[lin_train] <- -1 + X_train[lin_train]/10 y_train <- y_train + rnorm(length(y_train), sd=0.1) y_test <- (sin(pi*X_test/5) + 0.2*cos(4*pi*X_test/5)) * (X_test <= 9.6) lin_test <- X_test>9.6;  y_test[lin_test] <- -1 + X_test[lin_test]/10  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 0.0466081"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process","dir":"Articles","previous_headings":"Demo 1: Univariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) colnames(X_train) <- colnames(X_test) <- \"x1\" mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 0.09672507"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"demo-2-multivariate-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 2: Multivariate Supervised Learning","title":"Kernel Methods from Tree Ensembles in StochTree","text":"proceed simulated “Friedman” dataset, implemented tgp.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"traditional-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"Traditional Gaussian Process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"can use tgp package model data classical Gaussian Process.  Assess RMSE","code":"# Generate the data, add many \"noise variables\" n <- 100 friedman.df <- friedman.1.data(n=n) train_inds <- sort(sample(1:n, floor(0.8*n), replace = FALSE)) test_inds <- (1:n)[!((1:n) %in% train_inds)] X <- as.matrix(friedman.df)[,1:10] X <- cbind(X, matrix(runif(n*10), ncol = 10)) y <- as.matrix(friedman.df)[,12] + rnorm(n,0,1)*(sd(as.matrix(friedman.df)[,11])/2) X_train <- X[train_inds,] X_test <- X[test_inds,] y_train <- y[train_inds] y_test <- y[test_inds]  # Fit the GP model_gp <- bgp(X=X_train, Z=y_train, XX=X_test) plot(model_gp$ZZ.mean, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((model_gp$ZZ.mean - y_test)^2)) #> [1] 5.023593"},{"path":"https://stochastictree.github.io/stochtree-r/articles/EnsembleKernel.html","id":"bart-based-gaussian-process-1","dir":"Articles","previous_headings":"Demo 2: Multivariate Supervised Learning","what":"BART-based Gaussian process","title":"Kernel Methods from Tree Ensembles in StochTree","text":"Assess RMSE use case BART kernel classical kriging perhaps unclear without empirical investigation, see later vignette kernel approach can beneficial causal inference applications.","code":"# Run BART on the data num_trees <- 200 sigma_leaf <- 1/num_trees X_train <- as.data.frame(X_train) X_test <- as.data.frame(X_test) mean_forest_params <- list(num_trees=num_trees, sigma2_leaf_init=sigma_leaf) bart_model <- bart(X_train=X_train, y_train=y_train, X_test=X_test, mean_forest_params = mean_forest_params)  # Extract kernels needed for kriging leaf_mat_train <- computeForestLeafIndices(bart_model, X_train, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) leaf_mat_test <- computeForestLeafIndices(bart_model, X_test, forest_type = \"mean\",                                             forest_inds = bart_model$model_params$num_samples - 1) W_train <- sparseMatrix(i=rep(1:length(y_train),num_trees), j=leaf_mat_train + 1, x=1) W_test <- sparseMatrix(i=rep(1:length(y_test),num_trees), j=leaf_mat_test + 1, x=1) Sigma_11 <- tcrossprod(W_test) / num_trees Sigma_12 <- tcrossprod(W_test, W_train) / num_trees Sigma_22 <- tcrossprod(W_train) / num_trees Sigma_22_inv <- ginv(as.matrix(Sigma_22)) Sigma_21 <- t(Sigma_12)  # Compute mean and covariance for the test set posterior mu_tilde <- Sigma_12 %*% Sigma_22_inv %*% y_train Sigma_tilde <- as.matrix((sigma_leaf)*(Sigma_11 - Sigma_12 %*% Sigma_22_inv %*% Sigma_21))  # Sample from f(X_test) | X_test, X_train, f(X_train) gp_samples <- mvtnorm::rmvnorm(1000, mean = mu_tilde, sigma = Sigma_tilde)  # Compute posterior mean predictions for f(X_test) yhat_mean_test <- colMeans(gp_samples) plot(yhat_mean_test, y_test, xlab = \"predicted\", ylab = \"actual\", main = \"BART Gaussian process\") abline(0,1,lwd=2.5,lty=3,col=\"red\") sqrt(mean((yhat_mean_test - y_test)^2)) #> [1] 5.484561"},{"path":[]},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean relatively simple covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 20 a_0 <- 1.5 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc","dir":"Articles","previous_headings":"Demo 1: Variance-Only Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0) variance_forest_params <- list(num_trees = num_trees) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data constant (zero) mean complex covariate-modified variance function. y=0+σ2(X)ϵσ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= 0 + \\sigma^2(X) \\epsilon\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_trees <- 20 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-1","dir":"Articles","previous_headings":"Demo 2: Variance-Only Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 0,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = num_trees, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data (relatively simple) covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X2≥0 X2<0.25−2X2≥0.25 X2<0.52X2≥0.5 X2<0.756X2≥0.75 X2<1σ2(X)={0.25X1≥0 X1<0.251X1≥0.25 X1<0.54X1≥0.5 X1<0.759X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-2","dir":"Articles","previous_headings":"Demo 3: Mean and Variance Simulation (simple DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"simulation-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP)","what":"Simulation","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":", generate data complex covariate-modified mean variance functions. y=f(X)+σ2(X)ϵf(X)={−6X4X2≥0 X2<0.25−2X4X2≥0.25 X2<0.52X4X2≥0.5 X2<0.756X4X2≥0.75 X2<1σ2(X)={0.25X32X1≥0 X1<0.251X32X1≥0.25 X1<0.54X32X1≥0.5 X1<0.759X32X1≥0.75 X1<1X1,…,Xp∼U(0,1)ϵ∼𝒩(0,1)\\begin{equation*} \\begin{aligned} y &= f(X) + \\sigma^2(X) \\epsilon\\\\ f(X) &= \\begin{cases} -6X_4 & X_2 \\geq 0 \\text{ } X_2 < 0.25\\\\ -2X_4 & X_2 \\geq 0.25 \\text{ } X_2 < 0.5\\\\ 2X_4 & X_2 \\geq 0.5 \\text{ } X_2 < 0.75\\\\ 6X_4 & X_2 \\geq 0.75 \\text{ } X_2 < 1\\\\ \\end{cases}\\\\ \\sigma^2(X) &= \\begin{cases} 0.25X_3^2 & X_1 \\geq 0 \\text{ } X_1 < 0.25\\\\ 1X_3^2 & X_1 \\geq 0.25 \\text{ } X_1 < 0.5\\\\ 4X_3^2 & X_1 \\geq 0.5 \\text{ } X_1 < 0.75\\\\ 9X_3^2 & X_1 \\geq 0.75 \\text{ } X_1 < 1\\\\ \\end{cases}\\\\ X_1,\\dots,X_p &\\sim \\text{U}\\left(0,1\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,1\\right) \\end{aligned} \\end{equation*}","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,2]) & (0.25 > X[,2])) * (-6*X[,4]) +      ((0.25 <= X[,2]) & (0.5 > X[,2])) * (-2*X[,4]) +      ((0.5 <= X[,2]) & (0.75 > X[,2])) * (2*X[,4]) +      ((0.75 <= X[,2]) & (1 > X[,2])) * (6*X[,4]) ) s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds]"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"warmstart-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"Warmstart","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"first sample σ2(X)\\sigma^2(X) ensemble using “warm-start” initialization (Hahn (2023)). default stochtree. Inspect MCMC samples","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_warmstart <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_warmstart$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_warmstart$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/Heteroskedasticity.html","id":"mcmc-3","dir":"Articles","previous_headings":"Demo 4: Mean and Variance Simulation (complex DGP) > Sampling and Analysis","what":"MCMC","title":"Bayesian Supervised Learning with Heteroskedasticity in StochTree","text":"now sample σ2(X)\\sigma^2(X) ensemble using MCMC root initialization (Chipman, George, McCulloch (2010)). Inspect MCMC samples","code":"num_gfr <- 0 num_burnin <- 1000 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 50,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 5) bart_model_mcmc <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params ) plot(rowMeans(bart_model_mcmc$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"mean function\") abline(0,1,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model_mcmc$sigma_x_hat_test), s_x_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\", main = \"standard deviation function\") abline(0,1,col=\"red\",lty=2,lwd=2.5)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-1-bayesian-causal-forest-bcf","dir":"Articles","previous_headings":"","what":"Demo 1: Bayesian Causal Forest (BCF)","title":"Model Serialization in StochTree","text":"BCF models initially sampled constructed using bcf() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw modified version data generating process defined Hahn, Murray, Carvalho (2020). Sample BCF model.","code":"# Generate synthetic data n <- 1000 snr <- 2 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE)  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc mu_forest_params <- list(sample_sigma2_leaf = F) tau_forest_params <- list(sample_sigma2_leaf = F) bcf_model <- bcf(     X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train,      rfx_group_ids_train = rfx_group_ids_train, rfx_basis_train = rfx_basis_train,      X_test = X_test, Z_test = Z_test, propensity_test = pi_test,      rfx_group_ids_test = rfx_group_ids_test, rfx_basis_test = rfx_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      mu_forest_params = mu_forest_params, tau_forest_params = tau_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BCF model disk.","code":"saveBCFModelToJsonFile(bcf_model, \"bcf.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization","dir":"Articles","previous_headings":"Demo 1: Bayesian Causal Forest (BCF)","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BCF model disk. Check predictions align original model.","code":"bcf_model_reload <- createBCFModelFromJsonFile(\"bcf.json\") bcf_preds_reload <- predict(bcf_model_reload, X_train, Z_train, pi_train, rfx_group_ids_train, rfx_basis_train) plot(rowMeans(bcf_model$mu_hat_train), rowMeans(bcf_preds_reload$mu_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Prognostic forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$tau_hat_train), rowMeans(bcf_preds_reload$tau_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Treatment forest\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bcf_model$y_hat_train), rowMeans(bcf_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Overall outcome\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"demo-2-bart","dir":"Articles","previous_headings":"","what":"Demo 2: BART","title":"Model Serialization in StochTree","text":"BART models initially sampled constructed using bart() function. show save reload models JSON files disk.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"model-building-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Model Building","title":"Model Serialization in StochTree","text":"Draw relatively straightforward heteroskedastic supervised learning DGP. Sample BART model.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- 0 s_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (0.5*X[,3]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (1*X[,3]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2*X[,3]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (3*X[,3]) ) y <- f_XW + rnorm(n, 0, 1)*s_XW  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds] f_x_test <- f_XW[test_inds] f_x_train <- f_XW[train_inds] s_x_test <- s_XW[test_inds] s_x_train <- s_XW[train_inds] num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_samples <- num_gfr + num_burnin + num_mcmc general_params <- list(sample_sigma2_global = F) mean_forest_params <- list(sample_sigma2_leaf = F, num_trees = 100,                             alpha = 0.95, beta = 2, min_samples_leaf = 5) variance_forest_params <- list(num_trees = 50, alpha = 0.95,                                 beta = 1.25, min_samples_leaf = 1) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params,      variance_forest_params = variance_forest_params )"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"serialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Serialization","title":"Model Serialization in StochTree","text":"Save BART model disk.","code":"saveBARTModelToJsonFile(bart_model, \"bart.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/articles/ModelSerialization.html","id":"deserialization-1","dir":"Articles","previous_headings":"Demo 2: BART","what":"Deserialization","title":"Model Serialization in StochTree","text":"Reload BART model disk. Check predictions align original model.","code":"bart_model_reload <- createBARTModelFromJsonFile(\"bart.json\") bart_preds_reload <- predict(bart_model_reload, X_train) plot(rowMeans(bart_model$y_hat_train), rowMeans(bart_preds_reload$y_hat),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Mean Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3) plot(rowMeans(bart_model$sigma_x_hat_train), rowMeans(bart_preds_reload$variance_forest_predictions),       xlab = \"Original\", ylab = \"Deserialized\", main = \"Conditional Variance Estimates\") abline(0,1,col=\"red\",lwd=3,lty=3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Mixing MCMC sampler perennial concern complex Bayesian models, BART exception. common way address concerns run multiple independent “chains” MCMC sampler, chain gets stuck different region posterior, combined samples attain better coverage full posterior. idea works classic “-root” MCMC sampler Chipman, George, McCulloch (2010), key insight Hahn (2023) XBART algorithm may used warm-start initialize multiple chains BART MCMC sampler. Operationally, two approaches implementation (setting num_gfr > 0 warm-start initialization desired), vignette demonstrate run multi-chain sampler sequentially parallel. begin, load stochtree necessary packages","code":"library(stochtree) library(foreach) library(doParallel) #> Loading required package: iterators #> Loading required package: parallel"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"data-simulation","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Data Simulation","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Simulate simple partitioned linear model","code":"# Generate the data n <- 500 p_x <- 10 p_w <- 1 snr <- 3 X <- matrix(runif(n*p_x), ncol = p_x) leaf_basis <- matrix(runif(n*p_w), ncol = p_w) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5*leaf_basis[,1]) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5*leaf_basis[,1]) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5*leaf_basis[,1]) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5*leaf_basis[,1]) ) noise_sd <- sd(f_XW) / snr y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) leaf_basis_test <- leaf_basis[test_inds,] leaf_basis_train <- leaf_basis[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-sequentially","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains Sequentially","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"Define high-level parameters, including number chains run number samples per chain. run 4 independent chains 5 warm-start iterations 100 MCMC iterations . Run sampler, storing resulting BART objects list Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare original ŷ\\hat{y} values","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 bart_models <- list() general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) for (i in 1:num_chains) {     bart_models[[i]] <- stochtree::bart(         X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train, X_test = X_test,          leaf_basis_test = leaf_basis_test, num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,          general_params = general_params, mean_forest_params = mean_forest_params     ) } json_string_list <- list() for (i in 1:num_chains) {     json_string_list[[i]] <- saveBARTModelToJsonString(bart_models[[i]]) } combined_bart <- createBARTModelFromCombinedJsonString(json_string_list) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(bart_models[[i]]$y_hat_test),           rowMeans(yhat_combined[,inds_start:inds_end]),          xlab = \"original\", ylab = \"deserialized\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"sampling-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"use high-level parameters sequential demo. order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params, mean_forest_params = mean_forest_params   )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } #> Warning: executing %dopar% sequentially: no parallel backend registered stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":"https://stochastictree.github.io/stochtree-r/articles/MultiChain.html","id":"warmstarting-multiple-chains-in-parallel","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Warmstarting Multiple Chains in Parallel","title":"Running Multiple Chains (Sequentially or in Parallel) in StochTree","text":"example, ran multiple parallel chains MCMC sampler starting “root” forest. Consider instead “warmstart” approach Hahn (2023), forests sampled using fast “grow--root” (GFR) algorithm several MCMC chains run using different GFR forests. use high-level parameters parallel demo. First, sample model using grow--root algorithm main R session several iterations (use forests see independent parallel chains moment). order run sampler parallel, parallel backend must registered R environment. code register parallel backend access many cores available machine. Note evaluate code snippet order interact nicely CRAN / Github Actions environments. Note bartmodel object contains external pointers forests created stochtree shared object, stochtree::bart() run parallel independent subprocesses, pointers generally accessible session kicked parallel run. overcome , can return JSON representation bartmodel memory combine single -memory bartmodel object. first step process run sampler parallel, storing resulting BART JSON strings list. Close parallel cluster (evaluated , explained ). Now, want combine forests BART models single forest, can follows can predict combined forest follows Compare average predictions chain original predictions.  true yy values.","code":"num_chains <- 4 num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 num_trees <- 100 general_params <- list(sample_sigma2_global = T) mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees) xbart_model <- stochtree::bart(     X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,      X_test = X_test, leaf_basis_test = leaf_basis_test,      num_gfr = num_gfr, num_burnin = 0, num_mcmc = 0,      general_params = general_params, mean_forest_params = mean_forest_params ) xbart_model_string <- stochtree::saveBARTModelToJsonString(xbart_model) ncores <- parallel::detectCores() cl <- makeCluster(ncores) registerDoParallel(cl) bart_model_outputs <- foreach (i = 1:num_chains) %dopar% {   random_seed <- i   bart_params <- list(sample_sigma_global = T, sample_sigma_leaf = T,                        num_trees_mean = num_trees, random_seed = random_seed)   general_params <- list(sample_sigma2_global = T, random_seed = random_seed)   mean_forest_params <- list(sample_sigma2_leaf = T, num_trees = num_trees)   bart_model <- stochtree::bart(       X_train = X_train, leaf_basis_train = leaf_basis_train, y_train = y_train,        X_test = X_test, leaf_basis_test = leaf_basis_test,        num_gfr = 0, num_burnin = num_burnin, num_mcmc = num_mcmc,        general_params = general_params, mean_forest_params = mean_forest_params,        previous_model_json = xbart_model_string, previous_model_warmstart_sample_num = num_gfr - i + 1,    )   bart_model_string <- stochtree::saveBARTModelToJsonString(bart_model)   y_hat_test <- bart_model$y_hat_test   list(model=bart_model_string, yhat=y_hat_test) } stopCluster(cl) bart_model_strings <- list() bart_model_yhats <- matrix(NA, nrow = length(y_test), ncol = num_chains) for (i in 1:length(bart_model_outputs)) {     bart_model_strings[[i]] <- bart_model_outputs[[i]]$model     bart_model_yhats[,i] <- rowMeans(bart_model_outputs[[i]]$yhat) } combined_bart <- createBARTModelFromCombinedJsonString(bart_model_strings) yhat_combined <- predict(combined_bart, X_test, leaf_basis_test)$y_hat par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), bart_model_yhats[,i],          xlab = \"deserialized\", ylab = \"original\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1)) par(mfrow = c(1,2)) for (i in 1:num_chains) {     offset <- (i-1)*num_mcmc     inds_start <- offset + 1     inds_end <- offset + num_mcmc     plot(rowMeans(yhat_combined[,inds_start:inds_end]), y_test,          xlab = \"predicted\", ylab = \"actual\",           main = paste0(\"Chain \", i, \"\\nPredictions\"))     abline(0,1,col=\"red\",lty=3,lwd=3) } par(mfrow = c(1,1))"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"background","dir":"Articles","previous_headings":"","what":"Background","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"“classic” BART model Chipman, George, McCulloch (2010) y=f(X)+ϵf(X)∼BART(α,β)ϵ∼𝒩(0,σ2)σ2∼IG(,b)\\begin{equation*} \\begin{aligned} y &= f(X) + \\epsilon\\\\ f(X) &\\sim \\text{BART}\\left(\\alpha, \\beta\\right)\\\\ \\epsilon &\\sim \\mathcal{N}\\left(0,\\sigma^2\\right)\\\\ \\sigma^2 &\\sim \\text{IG}\\left(,b\\right) \\end{aligned} \\end{equation*} semiparametric, nonparametric tree ensemble f(X)f(X) homoskedastic error variance parameter σ2\\sigma^2. Note Chipman, George, McCulloch (2010), aa bb parameterized =ν2a = \\frac{\\nu}{2} b=νλ2b = \\frac{\\nu\\lambda}{2}.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/articles/PriorCalibration.html","id":"setting-priors-on-variance-parameters-in-stochtree","dir":"Articles","previous_headings":"","what":"Setting Priors on Variance Parameters in stochtree","title":"Prior Calibration Approaches for Parametric Components of Stochastic Tree Ensembles","text":"default, stochtree employs Jeffreys’ prior σ2\\sigma^2σ2∝1σ2\\begin{equation*} \\begin{aligned} \\sigma^2 &\\propto \\frac{1}{\\sigma^2} \\end{aligned} \\end{equation*} corresponds improper prior =0a = 0 b=0b = 0. provide convenience functions users wishing set σ2\\sigma^2 prior Chipman, George, McCulloch (2010). case, ν\\nu set default 3 λ\\lambda calibrated follows: “overestimate,” σ̂2\\hat{\\sigma}^2, σ2\\sigma^2 obtained via simple linear regression yy XX λ\\lambda chosen ensure p(σ2<σ̂2)=qp(\\sigma^2 < \\hat{\\sigma}^2) = q value qq, typically set default value 0.9. done stochtree via calibrateInverseGammaErrorVariance function. Now run BART model variance parameterization Inspect --sample predictions model  Inspect posterior samples σ2\\sigma^2","code":"# Load library library(stochtree)  # Generate data n <- 500 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd)  # Test/train split test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds]  # Calibrate the scale parameter for the variance term as in Chipman et al (2010) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y_train, X_train, nu = nu) general_params <- list(sigma2_global_shape = nu/2, sigma2_global_scale = (nu*lambda)/2) bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     num_gfr = 0, num_burnin = 1000, num_mcmc = 100,                     general_params = general_params) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3) plot(bart_model$sigma2_global_samples, ylab = \"sigma^2\", xlab = \"iteration\") abline(h = noise_sd^2, col = \"red\", lty = 3, lwd = 3)"},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"demo-1-supervised-learning","dir":"Articles","previous_headings":"","what":"Demo 1: Supervised Learning","title":"Deeper Dive on Sampled Forests in StochTree","text":"Generate sample data feature 10 “important” feature.","code":"# Generate the data n <- 500 p_x <- 10 X <- matrix(runif(n*p_x), ncol = p_x) f_XW <- (     ((0 <= X[,10]) & (0.25 > X[,10])) * (-7.5) +      ((0.25 <= X[,10]) & (0.5 > X[,10])) * (-2.5) +      ((0.5 <= X[,10]) & (0.75 > X[,10])) * (2.5) +      ((0.75 <= X[,10]) & (1 > X[,10])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, 1)*noise_sd  # Split data into test and train sets test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- as.data.frame(X[test_inds,]) X_train <- as.data.frame(X[train_inds,]) y_test <- y[test_inds] y_train <- y[train_inds]"},{"path":"https://stochastictree.github.io/stochtree-r/articles/TreeInspection.html","id":"sampling-and-analysis","dir":"Articles","previous_headings":"Demo 1: Supervised Learning","what":"Sampling and Analysis","title":"Deeper Dive on Sampled Forests in StochTree","text":"Run BART. Inspect MCMC samples   Check variable split count last GFR sample split counts appear relatively uniform across features, let’s dig deeper look individual trees, starting first tree last “grow--root” sample. tree single split “important” feature. Now, let’s look second tree. tree also splits important feature. see “later” trees splitting features, also note trees fitting outcome already residualized many “relevant splits” made trees 1 2. Now, let’s inspect first tree last GFR sample depth, following scikit-learn vignette","code":"num_gfr <- 10 num_burnin <- 0 num_mcmc <- 100 general_params <- list(keep_gfr = T) bart_model <- stochtree::bart(     X_train = X_train, y_train = y_train, X_test = X_test,      num_gfr = num_gfr, num_burnin = num_burnin, num_mcmc = num_mcmc,      general_params = general_params ) plot(bart_model$sigma2_global_samples, ylab=\"sigma^2\") abline(h=noise_sd^2,col=\"red\",lty=2,lwd=2.5) plot(rowMeans(bart_model$y_hat_test), y_test,       pch=16, cex=0.75, xlab = \"pred\", ylab = \"actual\") abline(0,1,col=\"red\",lty=2,lwd=2.5) bart_model$mean_forests$get_forest_split_counts(10, p_x) #>  [1] 29 22 15 25 30 30 27 21 28 37 bart_model$mean_forests$get_aggregate_split_counts(p_x) #>  [1] 2692 2300 1957 2283 2776 2549 2782 2613 3075 3979 splits = bart_model$mean_forests$get_granular_split_counts(p_x) splits[10,1,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,2,] #>  [1] 0 0 0 0 0 0 0 0 0 1 splits[10,20,] #>  [1] 1 0 0 0 0 0 0 0 0 0 splits[10,30,] #>  [1] 0 0 0 0 0 1 0 0 0 0 forest_num <- 9 tree_num <- 0 nodes <- sort(bart_model$mean_forests$nodes(forest_num, tree_num)) for (nid in nodes) {     if (bart_model$mean_forests$is_leaf_node(forest_num, tree_num, nid)) {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         leaf_values <- bart_model$mean_forests$node_leaf_values(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a leaf node with value=\",              format(leaf_values, digits = 3), \"\\n\", sep = \"\")     } else {         node_depth <- bart_model$mean_forests$node_depth(forest_num, tree_num, nid)         space_text <- rep(\"\\t\", node_depth)         left <- bart_model$mean_forests$left_child_node(forest_num, tree_num, nid)         feature <- bart_model$mean_forests$node_split_index(forest_num, tree_num, nid)         threshold <- bart_model$mean_forests$node_split_threshold(forest_num, tree_num, nid)         right <- bart_model$mean_forests$right_child_node(forest_num, tree_num, nid)         cat(space_text, \"node=\", nid, \" is a split node, which tells us to go to node \",              left, \" if X[:, \", feature, \"] <= \", format(threshold, digits = 3),              \" else to node \", right, \"\\n\", sep = \"\")     } } #> node=0 is a split node, which tells us to go to node 1 if X[:, 9] <= 0.496 else to node 2 #>  node=1 is a leaf node with value=-0.248 #>  node=2 is a leaf node with value=0.123"},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Drew Herren. Author, maintainer. Richard Hahn. Author. Jared Murray. Author. Carlos Carvalho. Author. Jingyu . Author. stochtree contributors. Copyright holder.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Herren D, Hahn R, Murray J, Carvalho C, J (2025). stochtree: Stochastic tree ensembles (XBART BART) supervised learning causal inference. R package version 0.1.0, https://stochtree.ai.","code":"@Manual{,   title = {stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference},   author = {Drew Herren and Richard Hahn and Jared Murray and Carlos Carvalho and Jingyu He},   year = {2025},   note = {R package version 0.1.0},   url = {https://stochtree.ai}, }"},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"stochtree-r-package","dir":"","previous_headings":"","what":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"Software building stochastic tree ensembles (.e. BART, XBART) supervised learning causal inference.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference","text":"stochtree can installed CRAN via development version stochtree can installed github via","code":"install.package(\"stochtree\") remotes::install_github(\"StochasticTree/stochtree\", ref=\"r-dev\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — CppJson","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_ptr External pointer C++ nlohmann::json object num_forests Number forests nlohmann::json object forest_labels Names forest objects overall nlohmann::json object num_rfx Number random effects terms nlohman::json object rfx_container_labels Names rfx container objects overall nlohmann::json object rfx_mapper_labels Names rfx label mapper objects overall nlohmann::json object rfx_groupid_labels Names rfx group id objects overall nlohmann::json object","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"CppJson$new() CppJson$add_forest() CppJson$add_random_effects() CppJson$add_scalar() CppJson$add_integer() CppJson$add_boolean() CppJson$add_string() CppJson$add_vector() CppJson$add_integer_vector() CppJson$add_string_vector() CppJson$add_list() CppJson$add_string_list() CppJson$get_scalar() CppJson$get_integer() CppJson$get_boolean() CppJson$get_string() CppJson$get_vector() CppJson$get_integer_vector() CppJson$get_string_vector() CppJson$get_numeric_list() CppJson$get_string_list() CppJson$return_json_string() CppJson$save_file() CppJson$load_from_file() CppJson$load_from_string()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Create new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"new CppJson object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-forest-","dir":"Reference","previous_headings":"","what":"Method add_forest()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert forest container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_forest(forest_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"forest_samples ForestSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-random-effects-","dir":"Reference","previous_headings":"","what":"Method add_random_effects()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert random effects container json add current CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_random_effects(rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"rfx_samples RandomEffectSamples R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-scalar-","dir":"Reference","previous_headings":"","what":"Method add_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_scalar(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-","dir":"Reference","previous_headings":"","what":"Method add_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add scalar json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Integer value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-boolean-","dir":"Reference","previous_headings":"","what":"Method add_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_boolean(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-","dir":"Reference","previous_headings":"","what":"Method add_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string(field_name, field_value, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_value Numeric value field added json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-integer-vector-","dir":"Reference","previous_headings":"","what":"Method add_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_integer_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-vector-","dir":"Reference","previous_headings":"","what":"Method add_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add array json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_vector(field_name, field_vector, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_vector Character vector stored json subfolder_name (Optional) Name subfolder / hierarchy place value","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-list-","dir":"Reference","previous_headings":"","what":"Method add_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-add-string-list-","dir":"Reference","previous_headings":"","what":"Method add_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Add list vectors (object map arrays) json object name \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$add_string_list(field_name, field_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json field_list List stored json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-scalar-","dir":"Reference","previous_headings":"","what":"Method get_scalar()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve scalar value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_scalar(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-","dir":"Reference","previous_headings":"","what":"Method get_integer()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-boolean-","dir":"Reference","previous_headings":"","what":"Method get_boolean()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve boolean value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_boolean(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-","dir":"Reference","previous_headings":"","what":"Method get_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve string value json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-vector-","dir":"Reference","previous_headings":"","what":"Method get_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-integer-vector-","dir":"Reference","previous_headings":"","what":"Method get_integer_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve integer vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_integer_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-vector-","dir":"Reference","previous_headings":"","what":"Method get_string_vector()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Retrieve character vector json object name \"field_name\" (optional subfolder \"subfolder_name\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_vector(field_name, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field accessed json subfolder_name (Optional) Name subfolder / hierarchy field stored","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-numeric-list-","dir":"Reference","previous_headings":"","what":"Method get_numeric_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list numeric vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_numeric_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-get-string-list-","dir":"Reference","previous_headings":"","what":"Method get_string_list()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Reconstruct list string vectors json object stored \"field_name\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$get_string_list(field_name, key_names)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"field_name name field added json key_names Vector names list elements (vector)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-return-json-string-","dir":"Reference","previous_headings":"","what":"Method return_json_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Convert JSON object -memory string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$return_json_string()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-save-file-","dir":"Reference","previous_headings":"","what":"Method save_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Save json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$save_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-file-","dir":"Reference","previous_headings":"","what":"Method load_from_file()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_file(filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"method-load-from-string-","dir":"Reference","previous_headings":"","what":"Method load_from_string()","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"Load json object string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"","code":"CppJson$load_from_string(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppJson.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — CppJson","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Persists C++ random number generator throughout R session ensure reproducibility given random seed. seed provided, C++ random number generator initialized using std::random_device.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"rng_ptr External pointer C++ std::mt19937 class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"CppRNG$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"Create new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"","code":"CppRNG$new(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/CppRNG.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps a C++ random number generator (for reproducibility) — CppRNG","text":"new CppRNG object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores a single ensemble of decision trees (often treated as the ","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Wrapper around C++ tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_ptr External pointer C++ TreeEnsemble class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Forest$new() Forest$predict() Forest$predict_raw() Forest$set_root_leaves() Forest$prepare_for_sampler() Forest$adjust_residual() Forest$num_trees() Forest$leaf_dimension() Forest$is_constant_leaf() Forest$is_exponentiated() Forest$add_numeric_split_tree() Forest$get_tree_leaves() Forest$get_tree_split_counts() Forest$get_forest_split_counts() Forest$tree_max_depth() Forest$average_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Create new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"new Forest object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"vector predictions many rows forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Predict \"raw\" leaf values (without multiplied basis) every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array vector (length number observations). case multivariate leaf regression, array matrix (number observations leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$set_root_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$adjust_residual(dataset, outcome, forest_model, requires_basis, add)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return number trees ensemble Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return output dimension trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return constant leaf status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Return exponentiation status trees Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$add_numeric_split_tree(   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_leaves(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable given tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_tree_split_counts(tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Retrieve vector split counts every training set variable forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$get_forest_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method tree_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum depth specific tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$tree_max_depth(tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"tree_num Tree index within forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth tree forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"","code":"Forest$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Forest.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores a single ensemble of decision trees (often treated as the ","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a forest — ForestDataset","title":"Dataset used to sample a forest — ForestDataset","text":"dataset consists three matrices / vectors: covariates, bases, variance weights. basis vector variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a forest — ForestDataset","text":"data_ptr External pointer C++ ForestDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a forest — ForestDataset","text":"ForestDataset$new() ForestDataset$update_basis() ForestDataset$num_observations() ForestDataset$num_covariates() ForestDataset$num_basis() ForestDataset$has_basis() ForestDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a forest — ForestDataset","text":"Create new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$new(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"new ForestDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-update-basis-","dir":"Reference","previous_headings":"","what":"Method update_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Update basis matrix dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$update_basis(basis)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a forest — ForestDataset","text":"basis Updated matrix bases used define leaf regression","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number observations ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-covariates-","dir":"Reference","previous_headings":"","what":"Method num_covariates()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number covariates ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_covariates()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Covariate count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-num-basis-","dir":"Reference","previous_headings":"","what":"Method num_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Return number bases ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$num_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"Basis count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a forest — ForestDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a forest — ForestDataset","text":"","code":"ForestDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestDataset.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a forest — ForestDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines and samples a forest model — ForestModel","title":"Class that defines and samples a forest model — ForestModel","text":"Hosts C++ data structures needed sample ensemble decision trees, exposes functionality run forest sampler (using either MCMC grow--root algorithm).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines and samples a forest model — ForestModel","text":"tracker_ptr External pointer C++ ForestTracker class tree_prior_ptr External pointer C++ TreePrior class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines and samples a forest model — ForestModel","text":"ForestModel$new() ForestModel$sample_one_iteration() ForestModel$propagate_basis_update() ForestModel$propagate_residual_update() ForestModel$update_alpha() ForestModel$update_beta() ForestModel$update_min_samples_leaf() ForestModel$update_max_depth()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines and samples a forest model — ForestModel","text":"Create new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$new(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth = -1 )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree can reach","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"new ForestModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-sample-one-iteration-","dir":"Reference","previous_headings":"","what":"Method sample_one_iteration()","title":"Class that defines and samples a forest model — ForestModel","text":"Run single iteration forest sampling algorithm (MCMC GFR)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$sample_one_iteration(   forest_dataset,   residual,   forest_samples,   active_forest,   rng,   feature_types,   leaf_model_int,   leaf_model_scale,   variable_weights,   a_forest,   b_forest,   global_scale,   cutpoint_grid_size = 500,   keep_forest = T,   gfr = T,   pre_initialized = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"forest_dataset Dataset used sample forest residual Outcome used sample forest forest_samples Container forest samples active_forest \"Active\" forest updated sampler iteration rng Wrapper around C++ random number generator feature_types Vector specifying type p covariates forest_dataset (0 = numeric, 1 = ordered categorical, 2 = unordered categorical) leaf_model_int Integer specifying leaf model type (0 = constant leaf, 1 = univariate leaf regression, 2 = multivariate leaf regression) leaf_model_scale Scale parameter used leaf node model (q x q matrix q dimensionality basis >1 leaf_model_int = 2) variable_weights Vector specifying sampling probability p covariates forest_dataset a_forest Shape parameter variance forest model (applicable) b_forest Scale parameter variance forest model (applicable) global_scale Global variance parameter cutpoint_grid_size (Optional) Number unique cutpoints consider (default: 500, currently used GFR = TRUE) keep_forest (Optional) Whether updated forest sample saved forest_samples. Default: T. gfr (Optional) Whether forest sampled using \"grow--root\" (GFR) algorithm. Default: T. pre_initialized (Optional) Whether leaves pre-initialized outside sampling loop (samples drawn). multi-forest implementations like BCF, true, though single-forest supervised learning implementation, can let C++ initialization. Default: F.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-basis-update-","dir":"Reference","previous_headings":"","what":"Method propagate_basis_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Propagates basis update (full/partial) residual iteratively () adding back previous prediction tree, (b) recomputing predictions tree (caching C++ side), (c) subtracting new predictions residual. useful cases basis (e.g. leaf regression) updated outside tree sampler (e.g. adaptive coding binary treatment BCF). basis updated, overall \"function\" represented tree model changed reflected residual next sampling loop run.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_basis_update(dataset, outcome, active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions active_forest \"Active\" forest updated sampler iteration","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-propagate-residual-update-","dir":"Reference","previous_headings":"","what":"Method propagate_residual_update()","title":"Class that defines and samples a forest model — ForestModel","text":"Update current state outcome (.e. partial residual) data subtracting current predictions tree. function run Outcome class's update_data method, overwrites partial residual entirely new stream outcome data.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$propagate_residual_update(residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"residual Outcome used sample forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-alpha-","dir":"Reference","previous_headings":"","what":"Method update_alpha()","title":"Class that defines and samples a forest model — ForestModel","text":"Update alpha tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_alpha(alpha)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"alpha New value alpha used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-beta-","dir":"Reference","previous_headings":"","what":"Method update_beta()","title":"Class that defines and samples a forest model — ForestModel","text":"Update beta tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_beta(beta)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"beta New value beta used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-min-samples-leaf-","dir":"Reference","previous_headings":"","what":"Method update_min_samples_leaf()","title":"Class that defines and samples a forest model — ForestModel","text":"Update min_samples_leaf tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_min_samples_leaf(min_samples_leaf)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"min_samples_leaf New value min_samples_leaf used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"method-update-max-depth-","dir":"Reference","previous_headings":"","what":"Method update_max_depth()","title":"Class that defines and samples a forest model — ForestModel","text":"Update max_depth tree prior","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines and samples a forest model — ForestModel","text":"","code":"ForestModel$update_max_depth(max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines and samples a forest model — ForestModel","text":"max_depth New value max_depth used","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines and samples a forest model — ForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that stores draws from an random ensemble of decision trees — ForestSamples","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Wrapper around C++ container tree ensembles","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_container_ptr External pointer C++ ForestContainer class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ForestSamples$new() ForestSamples$load_from_json() ForestSamples$append_from_json() ForestSamples$load_from_json_string() ForestSamples$append_from_json_string() ForestSamples$predict() ForestSamples$predict_raw() ForestSamples$predict_raw_single_forest() ForestSamples$predict_raw_single_tree() ForestSamples$set_root_leaves() ForestSamples$prepare_for_sampler() ForestSamples$adjust_residual() ForestSamples$save_json() ForestSamples$load_json() ForestSamples$num_samples() ForestSamples$num_trees() ForestSamples$leaf_dimension() ForestSamples$is_constant_leaf() ForestSamples$is_exponentiated() ForestSamples$add_forest_with_constant_leaves() ForestSamples$add_numeric_split_tree() ForestSamples$get_tree_leaves() ForestSamples$get_tree_split_counts() ForestSamples$get_forest_split_counts() ForestSamples$get_aggregate_split_counts() ForestSamples$get_granular_split_counts() ForestSamples$ensemble_tree_max_depth() ForestSamples$average_ensemble_max_depth() ForestSamples$average_max_depth() ForestSamples$num_forest_leaves() ForestSamples$sum_leaves_squared() ForestSamples$is_leaf_node() ForestSamples$is_numeric_split_node() ForestSamples$is_categorical_split_node() ForestSamples$parent_node() ForestSamples$left_child_node() ForestSamples$right_child_node() ForestSamples$node_depth() ForestSamples$node_split_index() ForestSamples$node_split_threshold() ForestSamples$node_split_categories() ForestSamples$node_leaf_values() ForestSamples$num_nodes() ForestSamples$num_leaves() ForestSamples$num_leaf_parents() ForestSamples$num_split_nodes() ForestSamples$nodes() ForestSamples$leaves() ForestSamples$delete_sample()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$new(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Create new ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"new ForestContainer object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Append ForestContainer object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$append_from_json_string(json_string, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_string JSON string parses object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns samples ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-","dir":"Reference","previous_headings":"","what":"Method predict_raw()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) every tree ensemble every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw(forest_dataset)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array predictions observation forest_dataset sample ForestSamples class prediction dimensionality forests' leaf model. case constant leaf model univariate leaf regression, array two-dimensional (number observations, number forest samples). case multivariate leaf regression, array three-dimension (number observations, leaf model dimension, number samples).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-forest-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_forest()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific forest every sample forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_forest(forest_dataset, forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-predict-raw-single-tree-","dir":"Reference","previous_headings":"","what":"Method predict_raw_single_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Predict \"raw\" leaf values (without multiplied basis) specific tree specific forest every observation forest_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$predict_raw_single_tree(forest_dataset, forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_dataset ForestDataset R class forest_num Index forest sample within container tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"matrix predictions many rows forest_dataset many columns dimensions leaves trees ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-set-root-leaves-","dir":"Reference","previous_headings":"","what":"Method set_root_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$set_root_leaves(forest_num, leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest sample within container. leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-prepare-for-sampler-","dir":"Reference","previous_headings":"","what":"Method prepare_for_sampler()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Set constant predicted value every tree ensemble. Stops program tree root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$prepare_for_sampler(   dataset,   outcome,   forest_model,   leaf_model_int,   leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset Dataset class (covariates, basis, etc...) outcome Outcome Outcome class (residual / partial residual) forest_model ForestModel object storing tracking structures used training / sampling leaf_model_int Integer value encoding leaf model type (0 = constant gaussian, 1 = univariate gaussian, 2 = multivariate gaussian, 3 = log linear variance). leaf_value Constant leaf value(s) fixed tree ensemble indexed forest_num. Can either single number vector, depending forest's leaf dimension.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-adjust-residual-","dir":"Reference","previous_headings":"","what":"Method adjust_residual()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Adjusts residual based predictions forest typically run just beginning forest sampling algorithm. trees initialized constant root node predictions, root predictions subtracted residual.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$adjust_residual(   dataset,   outcome,   forest_model,   requires_basis,   forest_num,   add )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"dataset ForestDataset object storing covariates bases given forest outcome Outcome object storing residuals updated based forest predictions forest_model ForestModel object storing tracking structures used training / sampling requires_basis Whether forest requires basis prediction forest_num Index forest used update residuals add Whether forest predictions added subtracted residuals","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-save-json-","dir":"Reference","previous_headings":"","what":"Method save_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Store trees metadata ForestDataset class json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$save_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name output json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-load-json-","dir":"Reference","previous_headings":"","what":"Method load_json()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Load trees metadata ensemble json file. Note trees metadata already present ForestDataset class overwritten.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$load_json(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-13","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"json_filename Name model input json file (must end \".json\")","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-samples-","dir":"Reference","previous_headings":"","what":"Method num_samples()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number samples ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sample count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-trees-","dir":"Reference","previous_headings":"","what":"Method num_trees()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return number trees ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_trees()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Tree count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaf-dimension-","dir":"Reference","previous_headings":"","what":"Method leaf_dimension()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return output dimension trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaf_dimension()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node parameter size","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-constant-leaf-","dir":"Reference","previous_headings":"","what":"Method is_constant_leaf()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return constant leaf status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_constant_leaf()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaves constant, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-exponentiated-","dir":"Reference","previous_headings":"","what":"Method is_exponentiated()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Return exponentiation status trees ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-18","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_exponentiated()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"T leaf predictions must exponentiated, F otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-forest-with-constant-leaves-","dir":"Reference","previous_headings":"","what":"Method add_forest_with_constant_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add new -root ensemble container, leaves set value / vector provided","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-19","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_forest_with_constant_leaves(leaf_value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-14","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"leaf_value Value (vector values) initialize root nodes tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-add-numeric-split-tree-","dir":"Reference","previous_headings":"","what":"Method add_numeric_split_tree()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Add numeric (.e. X[,] <= c) split given tree ensemble","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-20","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$add_numeric_split_tree(   forest_num,   tree_num,   leaf_num,   feature_num,   split_threshold,   left_leaf_value,   right_leaf_value )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-15","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree split tree_num Index tree split leaf_num Leaf split feature_num Feature defines new split split_threshold Value defines cutoff new split left_leaf_value Value (vector values) assign newly created left node right_leaf_value Value (vector values) assign newly created right node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-leaves-","dir":"Reference","previous_headings":"","what":"Method get_tree_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector indices leaf nodes given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-21","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-16","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree leaf indices retrieved","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-tree-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_tree_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given tree given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-22","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_tree_split_counts(forest_num, tree_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-17","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest contains tree tree_num tree_num Index tree split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-forest-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_forest_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-23","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_forest_split_counts(forest_num, num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-18","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest split counts retrieved num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-aggregate-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_aggregate_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, aggregated across ensembles trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-24","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_aggregate_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-19","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-get-granular-split-counts-","dir":"Reference","previous_headings":"","what":"Method get_granular_split_counts()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Retrieve vector split counts every training set variable given forest, reported separately ensemble tree","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-25","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$get_granular_split_counts(num_features)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-20","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"num_features Total number features training set","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-ensemble-tree-max-depth-","dir":"Reference","previous_headings":"","what":"Method ensemble_tree_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum depth specific tree specific ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-26","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$ensemble_tree_max_depth(ensemble_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-21","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number tree_num Tree index within ensemble ensemble_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Maximum leaf depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-ensemble-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_ensemble_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-27","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_ensemble_max_depth(ensemble_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-22","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"ensemble_num Ensemble number","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-average-max-depth-","dir":"Reference","previous_headings":"","what":"Method average_max_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth tree ensemble ForestContainer object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-28","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$average_max_depth()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-16","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-forest-leaves-","dir":"Reference","previous_headings":"","what":"Method num_forest_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-29","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_forest_leaves(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-23","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-17","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count leaves ensemble stored forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-sum-leaves-squared-","dir":"Reference","previous_headings":"","what":"Method sum_leaves_squared()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Sum squared (raw) leaf values given ensemble ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-30","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$sum_leaves_squared(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-24","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index ensemble queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-18","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Average maximum depth","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-leaf-node-","dir":"Reference","previous_headings":"","what":"Method is_leaf_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples leaf","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-31","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_leaf_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-25","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-19","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node leaf, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-numeric-split-node-","dir":"Reference","previous_headings":"","what":"Method is_numeric_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples numeric split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-32","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_numeric_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-26","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-20","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node numeric split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-is-categorical-split-node-","dir":"Reference","previous_headings":"","what":"Method is_categorical_split_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Whether given node given tree given forest ForestSamples categorical split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-33","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$is_categorical_split_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-27","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-21","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"TRUE node categorical split node, FALSE otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-parent-node-","dir":"Reference","previous_headings":"","what":"Method parent_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Parent node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-34","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$parent_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-28","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-22","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID parent node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-left-child-node-","dir":"Reference","previous_headings":"","what":"Method left_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Left child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-35","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$left_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-29","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-23","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID left child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-right-child-node-","dir":"Reference","previous_headings":"","what":"Method right_child_node()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Right child node given node given tree given forest ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-36","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$right_child_node(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-30","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-24","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer ID right child node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-depth-","dir":"Reference","previous_headings":"","what":"Method node_depth()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Depth given node given tree given forest ForestSamples object, 0 depth root node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-37","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_depth(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-31","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-25","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-index-","dir":"Reference","previous_headings":"","what":"Method node_split_index()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Split index given node given tree given forest ForestSamples object. Returns -1 node leaf.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-38","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_index(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-32","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-26","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Integer valued depth node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-threshold-","dir":"Reference","previous_headings":"","what":"Method node_split_threshold()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defines numeric split given node given tree given forest ForestSamples object. Returns Inf node leaf categorical split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-39","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_threshold(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-33","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-27","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Threshold defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-split-categories-","dir":"Reference","previous_headings":"","what":"Method node_split_categories()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array category indices define categorical split given node given tree given forest ForestSamples object. Returns c(Inf) node leaf numeric split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-40","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_split_categories(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-34","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-28","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Categories defining split node","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-node-leaf-values-","dir":"Reference","previous_headings":"","what":"Method node_leaf_values()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Leaf node value(s) given node given tree given forest ForestSamples object. Values stale node split node.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-41","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$node_leaf_values(forest_num, tree_num, node_id)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-35","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried node_id Index node queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-29","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Vector (often univariate) leaf values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-nodes-","dir":"Reference","previous_headings":"","what":"Method num_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-42","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-36","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-30","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaves-","dir":"Reference","previous_headings":"","what":"Method num_leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaves given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-43","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-37","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-31","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaves","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-leaf-parents-","dir":"Reference","previous_headings":"","what":"Method num_leaf_parents()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number leaf parents (split nodes two leaves children) given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-44","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_leaf_parents(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-38","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-32","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree leaf parents","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-num-split-nodes-","dir":"Reference","previous_headings":"","what":"Method num_split_nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Number split nodes given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-45","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$num_split_nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-39","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-33","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Count total tree split nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-nodes-","dir":"Reference","previous_headings":"","what":"Method nodes()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array node indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-46","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$nodes(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-40","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-34","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices tree nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-leaves-","dir":"Reference","previous_headings":"","what":"Method leaves()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Array leaf indices given tree given forest ForestSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-47","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$leaves(forest_num, tree_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-41","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest queried tree_num Index tree queried","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"returns-35","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Indices leaf nodes","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"Modify ForestSamples object removing forest sample indexed `forest_num","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"usage-48","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"","code":"ForestSamples$delete_sample(forest_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/ForestSamples.html","id":"arguments-42","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that stores draws from an random ensemble of decision trees — ForestSamples","text":"forest_num Index forest removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Outcome / partial residual used to sample an additive model. — Outcome","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome class wrapper around vector (mutable) outcomes ML tasks (supervised learning, causal inference). additive tree ensemble sampled, outcome used sample specific model term \"partial residual\" consisting outcome minus predictions every model term (trees, group random effects, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"data_ptr External pointer C++ Outcome class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Outcome$new() Outcome$get_data() Outcome$add_vector() Outcome$subtract_vector() Outcome$update_data()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Create new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$new(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new Outcome object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Extract raw data R underlying C++ object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$get_data()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"R vector containing (copy ) values Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-add-vector-","dir":"Reference","previous_headings":"","what":"Method add_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data adding values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$add_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector added outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-subtract-vector-","dir":"Reference","previous_headings":"","what":"Method subtract_vector()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data subtracting values update_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$subtract_vector(update_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"update_vector Vector subtracted outcome","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"method-update-data-","dir":"Reference","previous_headings":"","what":"Method update_data()","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"Update current state outcome (.e. partial residual) data replacing element elements new_vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"","code":"Outcome$update_data(new_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"new_vector Vector overwrite current data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/Outcome.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Outcome / partial residual used to sample an additive model. — Outcome","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that wraps the ","title":"Class that wraps the ","text":"Coordinates various C++ random effects classes persists needed prediction / serialization","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that wraps the ","text":"rfx_container_ptr External pointer C++ StochTree::RandomEffectsContainer class label_mapper_ptr External pointer C++ StochTree::LabelMapper class training_group_ids Unique vector group IDs training dataset","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that wraps the ","text":"RandomEffectSamples$new() RandomEffectSamples$load_in_session() RandomEffectSamples$load_from_json() RandomEffectSamples$append_from_json() RandomEffectSamples$load_from_json_string() RandomEffectSamples$append_from_json_string() RandomEffectSamples$predict() RandomEffectSamples$extract_parameter_samples() RandomEffectSamples$delete_sample() RandomEffectSamples$extract_label_mapping()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that wraps the ","text":"Create new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$new()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-in-session-","dir":"Reference","previous_headings":"","what":"Method load_in_session()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object \"-session\" R objects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_in_session(   num_components,   num_groups,   random_effects_tracker )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-","dir":"Reference","previous_headings":"","what":"Method load_from_json()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-","dir":"Reference","previous_headings":"","what":"Method append_from_json()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json(   json_object,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_object Object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-load-from-json-string-","dir":"Reference","previous_headings":"","what":"Method load_from_json_string()","title":"Class that wraps the ","text":"Construct RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$load_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"new RandomEffectSamples object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-append-from-json-string-","dir":"Reference","previous_headings":"","what":"Method append_from_json_string()","title":"Class that wraps the ","text":"Append random effect draws RandomEffectSamples object json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$append_from_json_string(   json_string,   json_rfx_container_label,   json_rfx_mapper_label,   json_rfx_groupids_label )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"json_string JSON string parses object class CppJson json_rfx_container_label Label referring particular rfx sample container (.e. \"random_effect_container_0\") overall json hierarchy json_rfx_mapper_label Label referring particular rfx label mapper (.e. \"random_effect_label_mapper_0\") overall json hierarchy json_rfx_groupids_label Label referring particular set rfx group IDs (.e. \"random_effect_groupids_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"Class that wraps the ","text":"Predict random effects observation implied rfx_group_ids rfx_basis. random effects model \"intercept-\" rfx_basis vector ones size length(rfx_group_ids).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$predict(rfx_group_ids, rfx_basis = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"rfx_group_ids Indices random effects groups prediction set rfx_basis (Optional ) Basis used random effects prediction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"Matrix many rows observations provided many columns samples drawn model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-parameter-samples-","dir":"Reference","previous_headings":"","what":"Method extract_parameter_samples()","title":"Class that wraps the ","text":"Extract random effects parameters sampled. \"redundant parameterization\" Gelman et al (2008), includes four parameters: alpha (\"working parameter\" shared across every group), xi (\"group parameter\" sampled separately group), beta (product alpha xi, corresponds overall group-level random effects), sigma (group-independent prior variance component xi).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_parameter_samples()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-delete-sample-","dir":"Reference","previous_headings":"","what":"Method delete_sample()","title":"Class that wraps the ","text":"Modify RandomEffectsSamples object removing parameter samples index sample_num.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$delete_sample(sample_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that wraps the ","text":"sample_num Index RFX sample removed","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"method-extract-label-mapping-","dir":"Reference","previous_headings":"","what":"Method extract_label_mapping()","title":"Class that wraps the ","text":"Convert mapping group IDs random effect components indices C++ R native format","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that wraps the ","text":"","code":"RandomEffectSamples$extract_label_mapping()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectSamples.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that wraps the ","text":"List mapping group ID random effect components.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset used to sample a random effects model — RandomEffectsDataset","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"dataset consists three matrices / vectors: group labels, bases, variance weights. Variance weights optional.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"data_ptr External pointer C++ RandomEffectsDataset class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"RandomEffectsDataset$new() RandomEffectsDataset$num_observations() RandomEffectsDataset$has_group_labels() RandomEffectsDataset$has_basis() RandomEffectsDataset$has_variance_weights()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Create new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$new(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"new RandomEffectsDataset object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-num-observations-","dir":"Reference","previous_headings":"","what":"Method num_observations()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Return number observations RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$num_observations()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Observation count","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-group-labels-","dir":"Reference","previous_headings":"","what":"Method has_group_labels()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset group label indices","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_group_labels()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True group label vector loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-basis-","dir":"Reference","previous_headings":"","what":"Method has_basis()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset basis matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_basis()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True basis matrix loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"method-has-variance-weights-","dir":"Reference","previous_headings":"","what":"Method has_variance_weights()","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"Whether dataset variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"","code":"RandomEffectsDataset$has_variance_weights()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsDataset.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"Dataset used to sample a random effects model — RandomEffectsDataset","text":"True variance weights loaded, false otherwise","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"The core ","title":"The core ","text":"Stores current model state, prior parameters, procedures sampling conditional posterior parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The core ","text":"rfx_model_ptr External pointer C++ StochTree::RandomEffectsModel class num_groups Number groups random effects model num_components Number components (.e. dimension basis) random effects model","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The core ","text":"RandomEffectsModel$new() RandomEffectsModel$sample_random_effect() RandomEffectsModel$predict() RandomEffectsModel$set_working_parameter() RandomEffectsModel$set_group_parameters() RandomEffectsModel$set_working_parameter_cov() RandomEffectsModel$set_group_parameter_cov() RandomEffectsModel$set_variance_prior_shape() RandomEffectsModel$set_variance_prior_scale()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The core ","text":"Create new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$new(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"new RandomEffectsModel object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-sample-random-effect-","dir":"Reference","previous_headings":"","what":"Method sample_random_effect()","title":"The core ","text":"Sample random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$sample_random_effect(   rfx_dataset,   residual,   rfx_tracker,   rfx_samples,   keep_sample,   global_variance,   rng )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset residual Object type Outcome rfx_tracker Object type RandomEffectsTracker rfx_samples Object type RandomEffectSamples keep_sample Whether sample retained rfx_samples. FALSE, state rfx_tracker updated, parameter values added sample container. Samples commonly discarded due burn-thinning. global_variance Scalar global variance parameter rng Object type CppRNG","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-predict-","dir":"Reference","previous_headings":"","what":"Method predict()","title":"The core ","text":"Predict (single sample ) random effects model.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$predict(rfx_dataset, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"rfx_dataset Object type RandomEffectsDataset rfx_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"Vector predictions size matching number observations rfx_dataset","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter()","title":"The core ","text":"Set value \"working parameter.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameters-","dir":"Reference","previous_headings":"","what":"Method set_group_parameters()","title":"The core ","text":"Set value \"group parameters.\" typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameters(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-working-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_working_parameter_cov()","title":"The core ","text":"Set value working parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_working_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-group-parameter-cov-","dir":"Reference","previous_headings":"","what":"Method set_group_parameter_cov()","title":"The core ","text":"Set value group parameter covariance. typically used initialization, also used interrupt override sampler.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_group_parameter_cov(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-shape-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_shape()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_shape(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"method-set-variance-prior-scale-","dir":"Reference","previous_headings":"","what":"Method set_variance_prior_scale()","title":"The core ","text":"Set shape parameter group parameter variance prior.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The core ","text":"","code":"RandomEffectsModel$set_variance_prior_scale(value)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The core ","text":"value Parameter input","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsModel.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"The core ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Class that defines a ","title":"Class that defines a ","text":"Stores mapping every observation group index, mapping group indices training sample observations available group, predictions observation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Class that defines a ","text":"rfx_tracker_ptr External pointer C++ StochTree::RandomEffectsTracker class","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Class that defines a ","text":"RandomEffectsTracker$new()","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Class that defines a ","text":"Create new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Class that defines a ","text":"","code":"RandomEffectsTracker$new(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Class that defines a ","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/RandomEffectsTracker.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Class that defines a ","text":"new RandomEffectsTracker object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the BART algorithm for supervised learning. — bart","title":"Run the BART algorithm for supervised learning. — bart","text":"Run BART algorithm supervised learning.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"bart(   X_train,   y_train,   leaf_basis_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   leaf_basis_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mean_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the BART algorithm for supervised learning. — bart","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). y_train Outcome modeled ensemble. leaf_basis_train (Optional) Bases used define regression model y ~ W leaf regression tree. default, BART assumes constant leaf node parameters, implicitly regressing constant basis ones (.e. y ~ 1). rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. leaf_basis_test (Optional) Test set bases used define \"sample\" evaluation data. test set optional, structure provided test set must match training set (.e. X_train leaf_basis_train provided, test set must consist X_test leaf_basis_test number columns). rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BART model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BART sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var(y_train), y_train possibly standardized outcome, set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mean_forest_params (Optional) list mean forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional mean model. Default: 200. num_trees = 0, conditional mean modeled using forest, function proceed num_trees > 0 variance forest. alpha Prior probability splitting tree depth 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 mean model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, mean model. Default: 5. max_depth Maximum depth tree ensemble mean model. Default: 10. Can overridden -1 enforce depth limits trees. sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(leaf_basis_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. var_forest_leaf_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var(y_train))/num_trees, y_train possibly standardized outcome, set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / leaf_prior_calibration_param^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the BART algorithm for supervised learning. — bart","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the BART algorithm for supervised learning. — bart","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test) plot(rowMeans(bart_model$y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"Run Bayesian Causal Forest (BCF) algorithm regularized causal effect estimation.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"bcf(   X_train,   Z_train,   y_train,   propensity_train = NULL,   rfx_group_ids_train = NULL,   rfx_basis_train = NULL,   X_test = NULL,   Z_test = NULL,   propensity_test = NULL,   rfx_group_ids_test = NULL,   rfx_basis_test = NULL,   num_gfr = 5,   num_burnin = 0,   num_mcmc = 100,   previous_model_json = NULL,   previous_model_warmstart_sample_num = NULL,   general_params = list(),   mu_forest_params = list(),   tau_forest_params = list(),   variance_forest_params = list() )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"X_train Covariates used split trees ensemble. May provided either dataframe matrix. Matrix covariates assumed numeric. Covariates passed dataframe preprocessed based variable types (e.g. categorical columns stored unordered factors one-hot encoded, categorical columns stored ordered factors passed integers core algorithm, along metadata column ordered categorical). Z_train Vector (continuous binary) treatment assignments. y_train Outcome modeled ensemble. propensity_train (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_train (Optional) Group labels used additive random effects model. rfx_basis_train (Optional) Basis \"random-slope\" regression additive random effects model. rfx_group_ids_train provided regression basis, intercept-random effects model estimated. X_test (Optional) Test set covariates used define \"sample\" evaluation data. May provided either dataframe matrix, format X_test must consistent X_train. Z_test (Optional) Test set (continuous binary) treatment assignments. propensity_test (Optional) Vector propensity scores. provided, estimated data. rfx_group_ids_test (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis_test (Optional) Test set basis \"random-slope\" regression additive random effects model. num_gfr Number \"warm-start\" iterations run using grow--root algorithm (Hahn, 2021). Default: 5. num_burnin Number \"burn-\" iterations MCMC sampler. Default: 0. num_mcmc Number \"retained\" iterations MCMC sampler. Default: 100. previous_model_json (Optional) JSON string containing previous BCF model. can used \"continue\" sampler interactively inspecting samples run parallel chains \"warm-started\" existing forest samples. Default: NULL. previous_model_warmstart_sample_num (Optional) Sample number previous_model_json used warmstart BCF sampler. One-indexed (first sample used warm-start setting previous_model_warmstart_sample_num = 1). Default: NULL. general_params (Optional) list general (non-forest-specific) model parameters, default value processed internally, argument list optional. cutpoint_grid_size Maximum size \"grid\" potential cutpoints consider GFR algorithm. Default: 100. standardize Whether standardize outcome (store offset / scale model object). Default: TRUE. sample_sigma2_global Whether update sigma^2 global error variance parameter based IG(sigma2_global_shape, sigma2_global_scale). Default: TRUE. sigma2_global_init Starting value global error variance parameter. Calibrated internally 1.0*var((y_train-mean(y_train))/sd(y_train)) set. sigma2_global_shape Shape parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. sigma2_global_scale Scale parameter IG(sigma2_global_shape, sigma2_global_scale) global error variance model. Default: 0. variable_weights Numeric weights reflecting relative probability splitting variable. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . Note propensity score included covariate either forest, weight default 1/ncol(X_train). workaround wish provide custom weight propensity score include column X_train set propensity_covariate 'none' adjust keep_vars accordingly mu tau forests. propensity_covariate Whether include propensity score covariate either forests. Enter \"none\" neither, \"mu\" prognostic forest, \"tau\" treatment forest, \"\" forests. \"none\" propensity score provided, estimated (X_train, Z_train) using stochtree::bart(). Default: \"mu\". adaptive_coding Whether use \"adaptive coding\" scheme binary treatment variable coded manually (0,1) (-1,1) learned via parameters b_0 b_1 attach outcome model [b_0 (1-Z) + b_1 Z] tau(X). ignored Z binary. Default: TRUE. control_coding_init Initial value \"control\" group coding parameter. ignored Z binary. Default: -0.5. treated_coding_init Initial value \"treatment\" group coding parameter. ignored Z binary. Default: 0.5. rfx_prior_var Prior (diagonals ) covariance additive group-level random regression coefficients. Must vector length ncol(rfx_basis_train). Default: rep(1, ncol(rfx_basis_train)) random_seed Integer parameterizing C++ random number generator. specified, C++ random number generator seeded according std::random_device. keep_burnin Whether \"burnin\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_gfr Whether \"grow--root\" samples included stored samples forests parameters. Default FALSE. Ignored num_mcmc = 0. keep_every many iterations burned-MCMC sampler run forests parameters retained. Default 1. Setting keep_every <- k k > 1 \"thin\" MCMC samples retaining every k-th sample, rather simply every sample. can reduce autocorrelation MCMC samples. num_chains many independent MCMC chains sampled. num_mcmc = 0, ignored. num_gfr = 0, chain run root num_mcmc * keep_every + num_burnin iterations, num_mcmc samples retained. num_gfr > 0, MCMC chain initialized separate GFR ensemble, requirement num_gfr >= num_chains. Default: 1. verbose Whether print progress sampling loops. Default: FALSE. mu_forest_params (Optional) list prognostic forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble prognostic forest. Default: 250. Must positive integer. alpha Prior probability splitting tree depth 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 prognostic forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, prognostic forest. Default: 5. max_depth Maximum depth tree ensemble prognostic forest. Default: 10. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable prognostic forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. tau_forest_params (Optional) list treatment effect forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble treatment effect forest. Default: 50. Must positive integer. alpha Prior probability splitting tree depth 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.25. beta Exponent decreases split probabilities nodes depth > 0 treatment effect forest. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 3. min_samples_leaf Minimum allowable size leaf, terms training samples, treatment effect forest. Default: 5. max_depth Maximum depth tree ensemble treatment effect forest. Default: 5. Can overridden -1 enforce depth limits trees. variable_weights Numeric weights reflecting relative probability splitting variable treatment effect forest. need sum 1 negative. Defaults rep(1/ncol(X_train), ncol(X_train)) set . sample_sigma2_leaf Whether update leaf scale variance parameter based IG(sigma2_leaf_shape, sigma2_leaf_scale). (currently) set true ncol(Z_train)>1. Default: FALSE. sigma2_leaf_init Starting value leaf node scale parameter. Calibrated internally 1/num_trees set . sigma2_leaf_shape Shape parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Default: 3. sigma2_leaf_scale Scale parameter IG(sigma2_leaf_shape, sigma2_leaf_scale) leaf node parameter variance model. Calibrated internally 0.5/num_trees set . keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored. variance_forest_params (Optional) list variance forest model parameters, default value processed internally, argument list optional. num_trees Number trees ensemble conditional variance model. Default: 0. Variance modeled using tree / forest num_trees > 0. alpha Prior probability splitting tree depth 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 0.95. beta Exponent decreases split probabilities nodes depth > 0 variance model. Tree split prior combines alpha beta via alpha*(1+node_depth)^-beta. Default: 2. min_samples_leaf Minimum allowable size leaf, terms training samples, variance model. Default: 5. max_depth Maximum depth tree ensemble variance model. Default: 10. Can overridden -1 enforce depth limits trees. leaf_prior_calibration_param Hyperparameter used calibrate IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model. var_forest_prior_shape var_forest_prior_scale set , calibration parameter used set values num_trees / leaf_prior_calibration_param^2 + 0.5 num_trees / leaf_prior_calibration_param^2, respectively. Default: 1.5. variance_forest_init Starting value root forest prediction conditional (heteroskedastic) error variance model. Calibrated internally log(0.6*var((y_train-mean(y_train))/sd(y_train)))/num_trees set. var_forest_prior_shape Shape parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 + 0.5 set. var_forest_prior_scale Scale parameter IG(var_forest_prior_shape, var_forest_prior_scale) conditional error variance model (sampled num_trees > 0). Calibrated internally num_trees / 1.5^2 set. keep_vars Vector variable names column indices denoting variables included forest. Default: NULL. drop_vars Vector variable names column indices denoting variables excluded forest. Default: NULL. drop_vars keep_vars set, drop_vars ignored.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"List sampling outputs wrapper around sampled forests (can used -memory prediction new data, serialized JSON disk).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/bcf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run the Bayesian Causal Forest (BCF) algorithm for regularized causal effect estimation. — bcf","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, X_test = X_test, Z_test = Z_test,                   propensity_test = pi_test) plot(rowMeans(bcf_model$mu_hat_test), mu_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(bcf_model$tau_hat_test), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Chipman, H., George, E., Hahn, R., McCulloch, R., Pratola, M. Sparapani, R. (2022). Bayesian Additive Regression Trees, Computational Approaches. Wiley StatsRef: Statistics Reference Online (eds N. Balakrishnan, T. Colton, B. Everitt, W. Piegorsch, F. Ruggeri J.L. Teugels). https://doi.org/10.1002/9781118445112.stat08288","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"calibrateInverseGammaErrorVariance(   y,   X,   W = NULL,   nu = 3,   quant = 0.9,   standardize = TRUE )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"y Outcome modeled using BART, BCF another nonparametric ensemble method. X Covariates used partition trees ensemble series ensemble. W (Optional) Basis used define \"leaf regression\" model decision tree. \"classic\" BART model assumes constant leaf parameter, equivalent \"leaf regression\" basis ones, though necessary pass vector ones, BART function. Default: NULL. nu shape parameter global error variance's IG prior. scale parameter Sparapani et al (2021) parameterization defined nu*lambda lambda output function. Default: 3. quant (Optional) Quantile inverse gamma prior distribution represented linear-regression-based overestimate sigma^2. Default: 0.9. standardize (Optional) Whether outcome standardized ((y-mean(y))/sd(y)) calibration lambda. Default: TRUE.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"Value lambda determines scale parameter global error variance prior (sigma^2 ~ IG(nu,nu*lambda))","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/calibrateInverseGammaErrorVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calibrate the scale parameter on an inverse gamma prior for the global error variance as in Chipman et al (2022) — calibrateInverseGammaErrorVariance","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) y <- 10*X[,1] - 20*X[,2] + rnorm(n) nu <- 3 lambda <- calibrateInverseGammaErrorVariance(y, X, nu = nu) sigma2hat <- mean(resid(lm(y~X))^2) mean(var(y)/rgamma(100000, nu, rate = nu*lambda) < sigma2hat) #> [1] 0.90021"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf indices — computeForestLeafIndices","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"Compute return vector representation forest's leaf predictions every observation dataset. vector \"row-major\" format can easily re-represented CSR sparse matrix: elements organized first n elements correspond leaf predictions n observations dataset first tree ensemble, next n elements correspond predictions second tree . \"data\" element corresponds uniquely mapped column index corresponds single leaf single tree (.e. tree 1 3 leaves, column indices range 0 2, tree 2's leaf indices begin 3, etc...).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"computeForestLeafIndices(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"List vectors. vector size num_obs * num_trees, num_obs = nrow(covariates) num_trees number trees relevant forest model_object.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafIndices.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf indices — computeForestLeafIndices","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafIndices(bart_model, X, \"mean\") #>          [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>     [1,]    1    1    1    1    1    1    1    1    1     1 #>     [2,]    0    0    0    0    0    0    0    0    0     0 #>     [3,]    1    1    1    1    1    1    1    1    1     1 #>     [4,]    1    1    1    1    1    1    1    1    1     1 #>     [5,]    1    1    1    1    1    1    1    1    1     1 #>     [6,]    0    0    0    0    0    0    0    0    0     0 #>     [7,]    1    1    1    1    1    1    1    1    1     1 #>     [8,]    1    1    1    1    1    1    1    1    1     1 #>     [9,]    1    1    1    1    1    1    1    1    1     1 #>    [10,]    1    1    1    1    1    1    1    1    1     1 #>    [11,]    0    0    0    0    0    0    0    0    0     0 #>    [12,]    0    0    0    0    0    0    0    0    0     0 #>    [13,]    1    1    1    1    1    1    1    1    1     1 #>    [14,]    1    1    1    1    1    1    1    1    1     1 #>    [15,]    0    0    0    0    0    0    0    0    0     0 #>    [16,]    1    1    1    1    1    1    1    1    1     1 #>    [17,]    0    0    0    0    0    0    0    0    0     0 #>    [18,]    0    0    0    0    0    0    0    0    0     0 #>    [19,]    0    0    0    0    0    0    0    0    0     0 #>    [20,]    1    1    1    1    1    1    1    1    1     1 #>    [21,]    0    0    0    0    0    0    0    0    0     0 #>    [22,]    1    1    1    1    1    1    1    1    1     1 #>    [23,]    0    0    0    0    0    0    0    0    0     0 #>    [24,]    1    1    1    1    1    1    1    1    1     1 #>    [25,]    1    1    1    1    1    1    1    1    1     1 #>    [26,]    0    0    0    0    0    0    0    0    0     0 #>    [27,]    1    1    1    1    1    1    1    1    1     1 #>    [28,]    1    1    1    1    1    1    1    1    1     1 #>    [29,]    0    0    0    0    0    0    0    0    0     0 #>    [30,]    0    0    0    0    0    0    0    0    0     0 #>    [31,]    0    0    0    0    0    0    0    0    0     0 #>    [32,]    0    0    0    0    0    0    0    0    0     0 #>    [33,]    1    1    1    1    1    1    1    1    1     1 #>    [34,]    0    0    0    0    0    0    0    0    0     0 #>    [35,]    0    0    0    0    0    0    0    0    0     0 #>    [36,]    1    1    1    1    1    1    1    1    1     1 #>    [37,]    0    0    0    0    0    0    0    0    0     0 #>    [38,]    1    1    1    1    1    1    1    1    1     1 #>    [39,]    1    1    1    1    1    1    1    1    1     1 #>    [40,]    1    1    1    1    1    1    1    1    1     1 #>    [41,]    1    1    1    1    1    1    1    1    1     1 #>    [42,]    0    0    0    0    0    0    0    0    0     0 #>    [43,]    0    0    0    0    0    0    0    0    0     0 #>    [44,]    0    0    0    0    0    0    0    0    0     0 #>    [45,]    1    1    1    1    1    1    1    1    1     1 #>    [46,]    0    0    0    0    0    0    0    0    0     0 #>    [47,]    0    0    0    0    0    0    0    0    0     0 #>    [48,]    0    0    0    0    0    0    0    0    0     0 #>    [49,]    1    1    1    1    1    1    1    1    1     1 #>    [50,]    1    1    1    1    1    1    1    1    1     1 #>    [51,]    0    0    0    0    0    0    0    0    0     0 #>    [52,]    1    1    1    1    1    1    1    1    1     1 #>    [53,]    1    1    1    1    1    1    1    1    1     1 #>    [54,]    1    1    1    1    1    1    1    1    1     1 #>    [55,]    1    1    1    1    1    1    1    1    1     1 #>    [56,]    0    0    0    0    0    0    0    0    0     0 #>    [57,]    1    1    1    1    1    1    1    1    1     1 #>    [58,]    1    1    1    1    1    1    1    1    1     1 #>    [59,]    1    1    1    1    1    1    1    1    1     1 #>    [60,]    0    0    0    0    0    0    0    0    0     0 #>    [61,]    0    0    0    0    0    0    0    0    0     0 #>    [62,]    0    0    0    0    0    0    0    0    0     0 #>    [63,]    0    0    0    0    0    0    0    0    0     0 #>    [64,]    0    0    0    0    0    0    0    0    0     0 #>    [65,]    0    0    0    0    0    0    0    0    0     0 #>    [66,]    0    0    0    0    0    0    0    0    0     0 #>    [67,]    1    1    1    1    1    1    1    1    1     1 #>    [68,]    0    0    0    0    0    0    0    0    0     0 #>    [69,]    0    0    0    0    0    0    0    0    0     0 #>    [70,]    0    0    0    0    0    0    0    0    0     0 #>    [71,]    1    1    1    1    1    1    1    1    1     1 #>    [72,]    1    1    1    1    1    1    1    1    1     1 #>    [73,]    1    1    1    1    1    1    1    1    1     1 #>    [74,]    1    1    1    1    1    1    1    1    1     1 #>    [75,]    0    0    0    0    0    0    0    0    0     0 #>    [76,]    1    1    1    1    1    1    1    1    1     1 #>    [77,]    1    1    1    1    1    1    1    1    1     1 #>    [78,]    0    0    0    0    0    0    0    0    0     0 #>    [79,]    0    0    0    0    0    0    0    0    0     0 #>    [80,]    1    1    1    1    1    1    1    1    1     1 #>    [81,]    0    0    0    0    0    0    0    0    0     0 #>    [82,]    0    0    0    0    0    0    0    0    0     0 #>    [83,]    1    1    1    1    1    1    1    1    1     1 #>    [84,]    1    1    1    1    1    1    1    1    1     1 #>    [85,]    1    1    1    1    1    1    1    1    1     1 #>    [86,]    1    1    1    1    1    1    1    1    1     1 #>    [87,]    1    1    1    1    1    1    1    1    1     1 #>    [88,]    1    1    1    1    1    1    1    1    1     1 #>    [89,]    0    0    0    0    0    0    0    0    0     0 #>    [90,]    1    1    1    1    1    1    1    1    1     1 #>    [91,]    1    1    1    1    1    1    1    1    1     1 #>    [92,]    0    0    0    0    0    0    0    0    0     0 #>    [93,]    0    0    0    0    0    0    0    0    0     0 #>    [94,]    0    0    0    0    0    0    0    0    0     0 #>    [95,]    0    0    0    0    0    0    0    0    0     0 #>    [96,]    0    0    0    0    0    0    0    0    0     0 #>    [97,]    0    0    0    0    0    0    0    0    0     0 #>    [98,]    0    0    0    0    0    0    0    0    0     0 #>    [99,]    1    1    1    1    1    1    1    1    1     1 #>   [100,]    0    0    0    0    0    0    0    0    0     0 #>   [101,]    2    3    3    3    3    3    3    3    3     3 #>   [102,]    2    2    2    2    2    2    2    2    2     2 #>   [103,]    2    2    2    2    2    2    2    2    2     2 #>   [104,]    2    2    2    2    2    2    2    2    2     2 #>   [105,]    2    3    3    3    3    3    3    3    3     3 #>   [106,]    2    3    3    3    3    3    3    3    3     3 #>   [107,]    2    2    2    2    2    2    2    2    2     2 #>   [108,]    2    3    3    3    3    3    3    3    3     3 #>   [109,]    2    3    3    3    3    3    3    3    3     3 #>   [110,]    2    2    2    2    2    2    2    2    2     2 #>   [111,]    2    2    2    2    2    2    2    2    2     2 #>   [112,]    2    3    3    3    3    3    3    3    3     3 #>   [113,]    2    2    2    2    2    2    2    2    2     2 #>   [114,]    2    3    3    3    3    3    3    3    3     3 #>   [115,]    2    3    3    3    3    3    3    3    3     3 #>   [116,]    2    2    2    2    2    2    2    2    2     2 #>   [117,]    2    2    2    2    2    2    2    2    2     2 #>   [118,]    2    2    2    2    2    2    2    2    2     2 #>   [119,]    2    2    2    2    2    2    2    2    2     2 #>   [120,]    2    3    3    3    3    3    3    3    3     3 #>   [121,]    2    2    2    2    2    2    2    2    2     2 #>   [122,]    2    2    2    2    2    2    2    2    2     2 #>   [123,]    2    2    2    2    2    2    2    2    2     2 #>   [124,]    2    2    2    2    2    2    2    2    2     2 #>   [125,]    2    2    2    2    2    2    2    2    2     2 #>   [126,]    2    3    3    3    3    3    3    3    3     3 #>   [127,]    2    2    2    2    2    2    2    2    2     2 #>   [128,]    2    2    2    2    2    2    2    2    2     2 #>   [129,]    2    2    2    2    2    2    2    2    2     2 #>   [130,]    2    2    2    2    2    2    2    2    2     2 #>   [131,]    2    2    2    2    2    2    2    2    2     2 #>   [132,]    2    2    2    2    2    2    2    2    2     2 #>   [133,]    2    3    3    3    3    3    3    3    3     3 #>   [134,]    2    2    2    2    2    2    2    2    2     2 #>   [135,]    2    2    2    2    2    2    2    2    2     2 #>   [136,]    2    2    2    2    2    2    2    2    2     2 #>   [137,]    2    2    2    2    2    2    2    2    2     2 #>   [138,]    2    2    2    2    2    2    2    2    2     2 #>   [139,]    2    2    2    2    2    2    2    2    2     2 #>   [140,]    2    2    2    2    2    2    2    2    2     2 #>   [141,]    2    2    2    2    2    2    2    2    2     2 #>   [142,]    2    2    2    2    2    2    2    2    2     2 #>   [143,]    2    3    3    3    3    3    3    3    3     3 #>   [144,]    2    2    2    2    2    2    2    2    2     2 #>   [145,]    2    3    3    3    3    3    3    3    3     3 #>   [146,]    2    3    3    3    3    3    3    3    3     3 #>   [147,]    2    2    2    2    2    2    2    2    2     2 #>   [148,]    2    2    2    2    2    2    2    2    2     2 #>   [149,]    2    2    2    2    2    2    2    2    2     2 #>   [150,]    2    3    3    3    3    3    3    3    3     3 #>   [151,]    2    3    3    3    3    3    3    3    3     3 #>   [152,]    2    2    2    2    2    2    2    2    2     2 #>   [153,]    2    3    3    3    3    3    3    3    3     3 #>   [154,]    2    2    2    2    2    2    2    2    2     2 #>   [155,]    2    3    3    3    3    3    3    3    3     3 #>   [156,]    2    3    3    3    3    3    3    3    3     3 #>   [157,]    2    3    3    3    3    3    3    3    3     3 #>   [158,]    2    3    3    3    3    3    3    3    3     3 #>   [159,]    2    2    2    2    2    2    2    2    2     2 #>   [160,]    2    3    3    3    3    3    3    3    3     3 #>   [161,]    2    3    3    3    3    3    3    3    3     3 #>   [162,]    2    2    2    2    2    2    2    2    2     2 #>   [163,]    2    2    2    2    2    2    2    2    2     2 #>   [164,]    2    3    3    3    3    3    3    3    3     3 #>   [165,]    2    3    3    3    3    3    3    3    3     3 #>   [166,]    2    3    3    3    3    3    3    3    3     3 #>   [167,]    2    2    2    2    2    2    2    2    2     2 #>   [168,]    2    3    3    3    3    3    3    3    3     3 #>   [169,]    2    2    2    2    2    2    2    2    2     2 #>   [170,]    2    2    2    2    2    2    2    2    2     2 #>   [171,]    2    3    3    3    3    3    3    3    3     3 #>   [172,]    2    3    3    3    3    3    3    3    3     3 #>   [173,]    2    3    3    3    3    3    3    3    3     3 #>   [174,]    2    3    3    3    3    3    3    3    3     3 #>   [175,]    2    3    3    3    3    3    3    3    3     3 #>   [176,]    2    3    3    3    3    3    3    3    3     3 #>   [177,]    2    2    2    2    2    2    2    2    2     2 #>   [178,]    2    3    3    3    3    3    3    3    3     3 #>   [179,]    2    2    2    2    2    2    2    2    2     2 #>   [180,]    2    2    2    2    2    2    2    2    2     2 #>   [181,]    2    3    3    3    3    3    3    3    3     3 #>   [182,]    2    2    2    2    2    2    2    2    2     2 #>   [183,]    2    2    2    2    2    2    2    2    2     2 #>   [184,]    2    2    2    2    2    2    2    2    2     2 #>   [185,]    2    2    2    2    2    2    2    2    2     2 #>   [186,]    2    2    2    2    2    2    2    2    2     2 #>   [187,]    2    2    2    2    2    2    2    2    2     2 #>   [188,]    2    2    2    2    2    2    2    2    2     2 #>   [189,]    2    2    2    2    2    2    2    2    2     2 #>   [190,]    2    2    2    2    2    2    2    2    2     2 #>   [191,]    2    2    2    2    2    2    2    2    2     2 #>   [192,]    2    3    3    3    3    3    3    3    3     3 #>   [193,]    2    2    2    2    2    2    2    2    2     2 #>   [194,]    2    3    3    3    3    3    3    3    3     3 #>   [195,]    2    2    2    2    2    2    2    2    2     2 #>   [196,]    2    3    3    3    3    3    3    3    3     3 #>   [197,]    2    3    3    3    3    3    3    3    3     3 #>   [198,]    2    2    2    2    2    2    2    2    2     2 #>   [199,]    2    2    2    2    2    2    2    2    2     2 #>   [200,]    2    2    2    2    2    2    2    2    2     2 #>   [201,]    3    4    4    4    4    4    4    4    4     4 #>   [202,]    3    4    4    4    4    4    4    4    4     4 #>   [203,]    4    5    5    5    5    5    5    5    5     5 #>   [204,]    3    4    4    4    4    4    4    4    4     4 #>   [205,]    3    4    4    4    4    4    4    4    4     4 #>   [206,]    4    5    5    5    5    5    5    5    5     5 #>   [207,]    3    4    4    4    4    4    4    4    4     4 #>   [208,]    3    4    4    4    4    4    4    4    4     4 #>   [209,]    3    4    4    4    4    4    4    4    4     4 #>   [210,]    3    4    4    4    4    4    4    4    4     4 #>   [211,]    3    4    4    4    4    4    4    4    4     4 #>   [212,]    3    4    4    4    4    4    4    4    4     4 #>   [213,]    3    4    4    4    4    4    4    4    4     4 #>   [214,]    3    4    4    4    4    4    4    4    4     4 #>   [215,]    3    4    4    4    4    4    4    4    4     4 #>   [216,]    3    4    4    4    4    4    4    4    4     4 #>   [217,]    3    4    4    4    4    4    4    4    4     4 #>   [218,]    3    4    4    4    4    4    4    4    4     4 #>   [219,]    3    4    4    4    4    4    4    4    4     4 #>   [220,]    3    4    4    4    4    4    4    4    4     4 #>   [221,]    3    4    4    4    4    4    4    4    4     4 #>   [222,]    3    4    4    4    4    4    4    4    4     4 #>   [223,]    3    4    4    4    4    4    4    4    4     4 #>   [224,]    3    4    4    4    4    4    4    4    4     4 #>   [225,]    3    4    4    4    4    4    4    4    4     4 #>   [226,]    3    4    4    4    4    4    4    4    4     4 #>   [227,]    3    4    4    4    4    4    4    4    4     4 #>   [228,]    3    4    4    4    4    4    4    4    4     4 #>   [229,]    3    4    4    4    4    4    4    4    4     4 #>   [230,]    3    4    4    4    4    4    4    4    4     4 #>   [231,]    3    4    4    4    4    4    4    4    4     4 #>   [232,]    3    4    4    4    4    4    4    4    4     4 #>   [233,]    3    4    4    4    4    4    4    4    4     4 #>   [234,]    4    5    5    5    5    5    5    5    5     5 #>   [235,]    3    4    4    4    4    4    4    4    4     4 #>   [236,]    3    4    4    4    4    4    4    4    4     4 #>   [237,]    3    4    4    4    4    4    4    4    4     4 #>   [238,]    3    4    4    4    4    4    4    4    4     4 #>   [239,]    3    4    4    4    4    4    4    4    4     4 #>   [240,]    3    4    4    4    4    4    4    4    4     4 #>   [241,]    3    4    4    4    4    4    4    4    4     4 #>   [242,]    3    4    4    4    4    4    4    4    4     4 #>   [243,]    3    4    4    4    4    4    4    4    4     4 #>   [244,]    3    4    4    4    4    4    4    4    4     4 #>   [245,]    3    4    4    4    4    4    4    4    4     4 #>   [246,]    3    4    4    4    4    4    4    4    4     4 #>   [247,]    3    4    4    4    4    4    4    4    4     4 #>   [248,]    3    4    4    4    4    4    4    4    4     4 #>   [249,]    3    4    4    4    4    4    4    4    4     4 #>   [250,]    3    4    4    4    4    4    4    4    4     4 #>   [251,]    3    4    4    4    4    4    4    4    4     4 #>   [252,]    3    4    4    4    4    4    4    4    4     4 #>   [253,]    3    4    4    4    4    4    4    4    4     4 #>   [254,]    3    4    4    4    4    4    4    4    4     4 #>   [255,]    3    4    4    4    4    4    4    4    4     4 #>   [256,]    3    4    4    4    4    4    4    4    4     4 #>   [257,]    3    4    4    4    4    4    4    4    4     4 #>   [258,]    3    4    4    4    4    4    4    4    4     4 #>   [259,]    3    4    4    4    4    4    4    4    4     4 #>   [260,]    4    5    5    5    5    5    5    5    5     5 #>   [261,]    3    4    4    4    4    4    4    4    4     4 #>   [262,]    3    4    4    4    4    4    4    4    4     4 #>   [263,]    3    4    4    4    4    4    4    4    4     4 #>   [264,]    3    4    4    4    4    4    4    4    4     4 #>   [265,]    4    5    5    5    5    5    5    5    5     5 #>   [266,]    3    4    4    4    4    4    4    4    4     4 #>   [267,]    3    4    4    4    4    4    4    4    4     4 #>   [268,]    3    4    4    4    4    4    4    4    4     4 #>   [269,]    3    4    4    4    4    4    4    4    4     4 #>   [270,]    3    4    4    4    4    4    4    4    4     4 #>   [271,]    3    4    4    4    4    4    4    4    4     4 #>   [272,]    3    4    4    4    4    4    4    4    4     4 #>   [273,]    3    4    4    4    4    4    4    4    4     4 #>   [274,]    3    4    4    4    4    4    4    4    4     4 #>   [275,]    3    4    4    4    4    4    4    4    4     4 #>   [276,]    3    4    4    4    4    4    4    4    4     4 #>   [277,]    3    4    4    4    4    4    4    4    4     4 #>   [278,]    3    4    4    4    4    4    4    4    4     4 #>   [279,]    3    4    4    4    4    4    4    4    4     4 #>   [280,]    3    4    4    4    4    4    4    4    4     4 #>   [281,]    3    4    4    4    4    4    4    4    4     4 #>   [282,]    3    4    4    4    4    4    4    4    4     4 #>   [283,]    3    4    4    4    4    4    4    4    4     4 #>   [284,]    3    4    4    4    4    4    4    4    4     4 #>   [285,]    3    4    4    4    4    4    4    4    4     4 #>   [286,]    3    4    4    4    4    4    4    4    4     4 #>   [287,]    3    4    4    4    4    4    4    4    4     4 #>   [288,]    3    4    4    4    4    4    4    4    4     4 #>   [289,]    3    4    4    4    4    4    4    4    4     4 #>   [290,]    3    4    4    4    4    4    4    4    4     4 #>   [291,]    3    4    4    4    4    4    4    4    4     4 #>   [292,]    3    4    4    4    4    4    4    4    4     4 #>   [293,]    4    5    5    5    5    5    5    5    5     5 #>   [294,]    3    4    4    4    4    4    4    4    4     4 #>   [295,]    3    4    4    4    4    4    4    4    4     4 #>   [296,]    3    4    4    4    4    4    4    4    4     4 #>   [297,]    3    4    4    4    4    4    4    4    4     4 #>   [298,]    3    4    4    4    4    4    4    4    4     4 #>   [299,]    3    4    4    4    4    4    4    4    4     4 #>   [300,]    3    4    4    4    4    4    4    4    4     4 #>   [301,]    6    7    7    8    8    7    7    6    6     9 #>   [302,]    6    7    7    8    8    7    7    6    6     8 #>   [303,]    6    7    7    7    7    7    7    6    6     8 #>   [304,]    6    7    7    8    8    7    7    6    6     9 #>   [305,]    6    7    7    8    8    7    7    6    6     8 #>   [306,]    6    7    7    8    8    7    7    6    6     8 #>   [307,]    5    6    6    6    6    6    6    8    8     7 #>   [308,]    6    7    7    7    7    7    7    6    6     9 #>   [309,]    6    7    7    8    8    7    7    6    6     8 #>   [310,]    6    7    7    8    8    7    7    6    6     9 #>   [311,]    6    7    7    8    8    7    7    6    6     8 #>   [312,]    6    7    7    8    8    7    7    6    6     8 #>   [313,]    6    7    7    7    7    7    7    6    6     9 #>   [314,]    6    7    7    8    8    7    7    6    6     8 #>   [315,]    6    7    7    8    8    7    7    6    6     9 #>   [316,]    6    7    7    7    7    7    7    6    6     9 #>   [317,]    6    7    7    7    7    7    7    6    6     9 #>   [318,]    6    7    7    8    8    7    7    6    6     9 #>   [319,]    6    7    7    8    8    7    7    6    6     8 #>   [320,]    6    7    7    7    7    7    7    6    6     8 #>   [321,]    5    6    6    6    6    6    6    8    8     7 #>   [322,]    6    7    7    7    7    7    7    6    6     8 #>   [323,]    6    7    7    8    8    7    7    6    6     9 #>   [324,]    6    7    7    7    7    7    7    6    6     8 #>   [325,]    6    7    7    7    7    7    7    6    6     9 #>   [326,]    6    7    7    8    8    7    7    6    6     8 #>   [327,]    6    7    7    8    8    7    7    6    6     9 #>   [328,]    6    7    7    8    8    7    7    6    6     9 #>   [329,]    6    7    7    8    8    7    7    6    6     8 #>   [330,]    5    6    6    6    6    6    6    7    7     6 #>   [331,]    6    7    7    8    8    7    7    6    6     8 #>   [332,]    6    7    7    8    8    7    7    6    6     8 #>   [333,]    6    7    7    8    8    7    7    6    6     8 #>   [334,]    6    7    7    8    8    7    7    6    6     8 #>   [335,]    6    7    7    8    8    7    7    6    6     8 #>   [336,]    6    7    7    8    8    7    7    6    6     8 #>   [337,]    6    7    7    8    8    7    7    6    6     8 #>   [338,]    6    7    7    8    8    7    7    6    6     8 #>   [339,]    5    6    6    6    6    6    6    8    8     7 #>   [340,]    6    7    7    7    7    7    7    6    6     8 #>   [341,]    6    7    7    8    8    7    7    6    6     8 #>   [342,]    6    7    7    8    8    7    7    6    6     8 #>   [343,]    6    7    7    8    8    7    7    6    6     9 #>   [344,]    6    7    7    7    7    7    7    6    6     8 #>   [345,]    6    7    7    7    7    7    7    6    6     9 #>   [346,]    6    7    7    7    7    7    7    6    6     9 #>   [347,]    6    7    7    7    7    7    7    6    6     9 #>   [348,]    6    7    7    8    8    7    7    6    6     8 #>   [349,]    5    6    6    6    6    6    6    7    7     6 #>   [350,]    6    7    7    7    7    7    7    6    6     8 #>   [351,]    6    7    7    8    8    7    7    6    6     8 #>   [352,]    6    7    7    8    8    7    7    6    6     8 #>   [353,]    6    7    7    7    7    7    7    6    6     9 #>   [354,]    5    6    6    6    6    6    6    7    7     6 #>   [355,]    6    7    7    7    7    7    7    6    6     8 #>   [356,]    6    7    7    7    7    7    7    6    6     9 #>   [357,]    6    7    7    8    8    7    7    6    6     8 #>   [358,]    6    7    7    8    8    7    7    6    6     8 #>   [359,]    6    7    7    7    7    7    7    6    6     8 #>   [360,]    6    7    7    8    8    7    7    6    6     8 #>   [361,]    6    7    7    8    8    7    7    6    6     9 #>   [362,]    5    6    6    6    6    6    6    7    7     6 #>   [363,]    6    7    7    7    7    7    7    6    6     8 #>   [364,]    6    7    7    8    8    7    7    6    6     9 #>   [365,]    6    7    7    7    7    7    7    6    6     8 #>   [366,]    6    7    7    7    7    7    7    6    6     8 #>   [367,]    6    7    7    8    8    7    7    6    6     8 #>   [368,]    6    7    7    8    8    7    7    6    6     8 #>   [369,]    6    7    7    8    8    7    7    6    6     8 #>   [370,]    5    6    6    6    6    6    6    8    8     7 #>   [371,]    6    7    7    8    8    7    7    6    6     9 #>   [372,]    6    7    7    7    7    7    7    6    6     9 #>   [373,]    6    7    7    8    8    7    7    6    6     9 #>   [374,]    6    7    7    8    8    7    7    6    6     9 #>   [375,]    6    7    7    8    8    7    7    6    6     9 #>   [376,]    6    7    7    8    8    7    7    6    6     9 #>   [377,]    6    7    7    8    8    7    7    6    6     9 #>   [378,]    6    7    7    7    7    7    7    6    6     8 #>   [379,]    6    7    7    8    8    7    7    6    6     8 #>   [380,]    5    6    6    6    6    6    6    7    7     6 #>   [381,]    6    7    7    8    8    7    7    6    6     8 #>   [382,]    6    7    7    8    8    7    7    6    6     9 #>   [383,]    6    7    7    8    8    7    7    6    6     8 #>   [384,]    6    7    7    7    7    7    7    6    6     9 #>   [385,]    6    7    7    8    8    7    7    6    6     8 #>   [386,]    6    7    7    7    7    7    7    6    6     8 #>   [387,]    6    7    7    8    8    7    7    6    6     8 #>   [388,]    6    7    7    8    8    7    7    6    6     9 #>   [389,]    6    7    7    7    7    7    7    6    6     8 #>   [390,]    6    7    7    7    7    7    7    6    6     8 #>   [391,]    6    7    7    8    8    7    7    6    6     8 #>   [392,]    6    7    7    8    8    7    7    6    6     8 #>   [393,]    6    7    7    8    8    7    7    6    6     8 #>   [394,]    6    7    7    7    7    7    7    6    6     9 #>   [395,]    5    6    6    6    6    6    6    8    8     7 #>   [396,]    6    7    7    8    8    7    7    6    6     8 #>   [397,]    6    7    7    8    8    7    7    6    6     8 #>   [398,]    5    6    6    6    6    6    6    7    7     6 #>   [399,]    6    7    7    8    8    7    7    6    6     8 #>   [400,]    6    7    7    7    7    7    7    6    6     9 #>   [401,]    8    9    9   10   10    9    9   10   10    11 #>   [402,]    7    8    8    9    9    8    8    9    9    10 #>   [403,]    7    8    8    9    9    8    8    9    9    10 #>   [404,]    8    9    9   10   10    9    9   10   10    11 #>   [405,]    8    9    9   10   10    9    9   10   10    11 #>   [406,]    8    9    9   10   10    9    9   10   10    11 #>   [407,]    7    8    8    9    9    8    8    9    9    10 #>   [408,]    8    9    9   10   10    9    9   10   10    11 #>   [409,]    8    9    9   11   10    9    9   10   10    11 #>   [410,]    7    8    8    9    9    8    8    9    9    10 #>   [411,]    8    9    9   10   10    9    9   10   10    11 #>   [412,]    8    9    9   11   10    9    9   10   10    11 #>   [413,]    7    8    8    9    9    8    8    9    9    10 #>   [414,]    8    9    9   10   10    9    9   10   10    11 #>   [415,]    8    9    9   10   10    9    9   10   10    11 #>   [416,]    7    8    8    9    9    8    8    9    9    10 #>   [417,]    7    8    8    9    9    8    8    9    9    10 #>   [418,]    7    8    8    9    9    8    8    9    9    10 #>   [419,]    7    8    8    9    9    8    8    9    9    10 #>   [420,]    8    9    9   10   10    9    9   10   10    11 #>   [421,]    7    8    8    9    9    8    8    9    9    10 #>   [422,]    7    8    8    9    9    8    8    9    9    10 #>   [423,]    7    8    8    9    9    8    8    9    9    10 #>   [424,]    7    8    8    9    9    8    8    9    9    10 #>   [425,]    7    8    8    9    9    8    8    9    9    10 #>   [426,]    8    9    9   10   10    9    9   10   10    11 #>   [427,]    7    8    8    9    9    8    8    9    9    10 #>   [428,]    8    9    9   10   10    9    9   10   10    11 #>   [429,]    7    8    8    9    9    8    8    9    9    10 #>   [430,]    7    8    8    9    9    8    8    9    9    10 #>   [431,]    7    8    8    9    9    8    8    9    9    10 #>   [432,]    7    8    8    9    9    8    8    9    9    10 #>   [433,]    8    9    9   11   10    9    9   10   10    11 #>   [434,]    7    8    8    9    9    8    8    9    9    10 #>   [435,]    7    8    8    9    9    8    8    9    9    10 #>   [436,]    7    8    8    9    9    8    8    9    9    10 #>   [437,]    7    8    8    9    9    8    8    9    9    10 #>   [438,]    8    9    9   10   10    9    9   10   10    11 #>   [439,]    7    8    8    9    9    8    8    9    9    10 #>   [440,]    7    8    8    9    9    8    8    9    9    10 #>   [441,]    8    9    9   10   10    9    9   10   10    11 #>   [442,]    8    9    9   10   10    9    9   10   10    11 #>   [443,]    8    9    9   10   10    9    9   10   10    11 #>   [444,]    7    8    8    9    9    8    8    9    9    10 #>   [445,]    8    9    9   10   10    9    9   10   10    11 #>   [446,]    8    9    9   10   10    9    9   10   10    11 #>   [447,]    7    8    8    9    9    8    8    9    9    10 #>   [448,]    7    8    8    9    9    8    8    9    9    10 #>   [449,]    7    8    8    9    9    8    8    9    9    10 #>   [450,]    8    9    9   10   10    9    9   10   10    11 #>   [451,]    8    9    9   10   10    9    9   10   10    11 #>   [452,]    8    9    9   10   10    9    9   10   10    11 #>   [453,]    8    9    9   11   10    9    9   10   10    11 #>   [454,]    7    8    8    9    9    8    8    9    9    10 #>   [455,]    8    9    9   10   10    9    9   10   10    11 #>   [456,]    8    9    9   10   10    9    9   10   10    11 #>   [457,]    8    9    9   10   10    9    9   10   10    11 #>   [458,]    8    9    9   10   10    9    9   10   10    11 #>   [459,]    7    8    8    9    9    8    8    9    9    10 #>   [460,]    8    9    9   11   10    9    9   10   10    11 #>   [461,]    8    9    9   10   10    9    9   10   10    11 #>   [462,]    7    8    8    9    9    8    8    9    9    10 #>   [463,]    8    9    9   11   10    9    9   10   10    11 #>   [464,]    8    9    9   10   10    9    9   10   10    11 #>   [465,]    8    9    9   10   10    9    9   10   10    11 #>   [466,]    8    9    9   10   10    9    9   10   10    11 #>   [467,]    8    9    9   10   10    9    9   10   10    11 #>   [468,]    8    9    9   10   10    9    9   10   10    11 #>   [469,]    7    8    8    9    9    8    8    9    9    10 #>   [470,]    7    8    8    9    9    8    8    9    9    10 #>   [471,]    8    9    9   10   10    9    9   10   10    11 #>   [472,]    8    9    9   10   10    9    9   10   10    11 #>   [473,]    8    9    9   10   10    9    9   10   10    11 #>   [474,]    8    9    9   10   10    9    9   10   10    11 #>   [475,]    8    9    9   11   10    9    9   10   10    11 #>   [476,]    8    9    9   10   10    9    9   10   10    11 #>   [477,]    7    8    8    9    9    8    8    9    9    10 #>   [478,]    8    9    9   10   10    9    9   10   10    11 #>   [479,]    7    8    8    9    9    8    8    9    9    10 #>   [480,]    7    8    8    9    9    8    8    9    9    10 #>   [481,]    8    9    9   11   10    9    9   10   10    11 #>   [482,]    7    8    8    9    9    8    8    9    9    10 #>   [483,]    7    8    8    9    9    8    8    9    9    10 #>   [484,]    8    9    9   10   10    9    9   10   10    11 #>   [485,]    7    8    8    9    9    8    8    9    9    10 #>   [486,]    7    8    8    9    9    8    8    9    9    10 #>   [487,]    8    9    9   10   10    9    9   10   10    11 #>   [488,]    8    9    9   10   10    9    9   10   10    11 #>   [489,]    8    9    9   10   10    9    9   10   10    11 #>   [490,]    8    9    9   10   10    9    9   10   10    11 #>   [491,]    8    9    9   10   10    9    9   10   10    11 #>   [492,]    8    9    9   10   10    9    9   10   10    11 #>   [493,]    7    8    8    9    9    8    8    9    9    10 #>   [494,]    8    9    9   10   10    9    9   10   10    11 #>   [495,]    7    8    8    9    9    8    8    9    9    10 #>   [496,]    8    9    9   10   10    9    9   10   10    11 #>   [497,]    8    9    9   10   10    9    9   10   10    11 #>   [498,]    7    8    8    9    9    8    8    9    9    10 #>   [499,]    7    8    8    9    9    8    8    9    9    10 #>   [500,]    7    8    8    9    9    8    8    9    9    10 #>   [501,]    9   10   10   12   11   10   10   11   11    12 #>   [502,]    9   10   10   12   11   10   10   11   11    12 #>   [503,]   10   11   11   13   12   11   11   12   12    13 #>   [504,]    9   10   10   12   11   10   10   11   11    12 #>   [505,]    9   10   10   12   11   10   10   11   11    12 #>   [506,]   10   11   11   13   12   11   11   12   12    13 #>   [507,]    9   10   10   12   11   10   10   11   11    12 #>   [508,]    9   10   10   12   11   10   10   11   11    12 #>   [509,]    9   10   10   12   11   10   10   11   11    12 #>   [510,]    9   10   10   12   11   10   10   11   11    12 #>   [511,]    9   10   10   12   11   10   10   11   11    12 #>   [512,]    9   10   10   12   11   10   10   11   11    12 #>   [513,]    9   10   10   12   11   10   10   11   11    12 #>   [514,]    9   10   10   12   11   10   10   11   11    12 #>   [515,]    9   10   10   12   11   10   10   11   11    12 #>   [516,]    9   10   10   12   11   10   10   11   11    12 #>   [517,]    9   10   10   12   11   10   10   11   11    12 #>   [518,]    9   10   10   12   11   10   10   11   11    12 #>   [519,]   10   11   11   13   12   11   11   12   12    13 #>   [520,]    9   10   10   12   11   10   10   11   11    12 #>   [521,]    9   10   10   12   11   10   10   11   11    12 #>   [522,]    9   10   10   12   11   10   10   11   11    12 #>   [523,]    9   10   10   12   11   10   10   11   11    12 #>   [524,]    9   10   10   12   11   10   10   11   11    12 #>   [525,]   10   11   11   13   12   11   11   12   12    13 #>   [526,]    9   10   10   12   11   10   10   11   11    12 #>   [527,]    9   10   10   12   11   10   10   11   11    12 #>   [528,]    9   10   10   12   11   10   10   11   11    12 #>   [529,]    9   10   10   12   11   10   10   11   11    12 #>   [530,]    9   10   10   12   11   10   10   11   11    12 #>   [531,]    9   10   10   12   11   10   10   11   11    12 #>   [532,]    9   10   10   12   11   10   10   11   11    12 #>   [533,]    9   10   10   12   11   10   10   11   11    12 #>   [534,]   10   11   11   13   12   11   11   12   12    13 #>   [535,]    9   10   10   12   11   10   10   11   11    12 #>   [536,]    9   10   10   12   11   10   10   11   11    12 #>   [537,]    9   10   10   12   11   10   10   11   11    12 #>   [538,]    9   10   10   12   11   10   10   11   11    12 #>   [539,]    9   10   10   12   11   10   10   11   11    12 #>   [540,]    9   10   10   12   11   10   10   11   11    12 #>   [541,]    9   10   10   12   11   10   10   11   11    12 #>   [542,]    9   10   10   12   11   10   10   11   11    12 #>   [543,]    9   10   10   12   11   10   10   11   11    12 #>   [544,]    9   10   10   12   11   10   10   11   11    12 #>   [545,]    9   10   10   12   11   10   10   11   11    12 #>   [546,]    9   10   10   12   11   10   10   11   11    12 #>   [547,]    9   10   10   12   11   10   10   11   11    12 #>   [548,]    9   10   10   12   11   10   10   11   11    12 #>   [549,]    9   10   10   12   11   10   10   11   11    12 #>   [550,]    9   10   10   12   11   10   10   11   11    12 #>   [551,]    9   10   10   12   11   10   10   11   11    12 #>   [552,]    9   10   10   12   11   10   10   11   11    12 #>   [553,]    9   10   10   12   11   10   10   11   11    12 #>   [554,]    9   10   10   12   11   10   10   11   11    12 #>   [555,]    9   10   10   12   11   10   10   11   11    12 #>   [556,]    9   10   10   12   11   10   10   11   11    12 #>   [557,]    9   10   10   12   11   10   10   11   11    12 #>   [558,]    9   10   10   12   11   10   10   11   11    12 #>   [559,]    9   10   10   12   11   10   10   11   11    12 #>   [560,]   10   11   11   13   12   11   11   12   12    13 #>   [561,]    9   10   10   12   11   10   10   11   11    12 #>   [562,]    9   10   10   12   11   10   10   11   11    12 #>   [563,]    9   10   10   12   11   10   10   11   11    12 #>   [564,]    9   10   10   12   11   10   10   11   11    12 #>   [565,]   10   11   11   13   12   11   11   12   12    13 #>   [566,]    9   10   10   12   11   10   10   11   11    12 #>   [567,]    9   10   10   12   11   10   10   11   11    12 #>   [568,]    9   10   10   12   11   10   10   11   11    12 #>   [569,]    9   10   10   12   11   10   10   11   11    12 #>   [570,]   10   11   11   13   12   11   11   12   12    13 #>   [571,]    9   10   10   12   11   10   10   11   11    12 #>   [572,]    9   10   10   12   11   10   10   11   11    12 #>   [573,]   10   11   11   13   12   11   11   12   12    13 #>   [574,]    9   10   10   12   11   10   10   11   11    12 #>   [575,]    9   10   10   12   11   10   10   11   11    12 #>   [576,]    9   10   10   12   11   10   10   11   11    12 #>   [577,]    9   10   10   12   11   10   10   11   11    12 #>   [578,]    9   10   10   12   11   10   10   11   11    12 #>   [579,]    9   10   10   12   11   10   10   11   11    12 #>   [580,]    9   10   10   12   11   10   10   11   11    12 #>   [581,]    9   10   10   12   11   10   10   11   11    12 #>   [582,]    9   10   10   12   11   10   10   11   11    12 #>   [583,]    9   10   10   12   11   10   10   11   11    12 #>   [584,]    9   10   10   12   11   10   10   11   11    12 #>   [585,]    9   10   10   12   11   10   10   11   11    12 #>   [586,]    9   10   10   12   11   10   10   11   11    12 #>   [587,]    9   10   10   12   11   10   10   11   11    12 #>   [588,]    9   10   10   12   11   10   10   11   11    12 #>   [589,]    9   10   10   12   11   10   10   11   11    12 #>   [590,]    9   10   10   12   11   10   10   11   11    12 #>   [591,]    9   10   10   12   11   10   10   11   11    12 #>   [592,]    9   10   10   12   11   10   10   11   11    12 #>   [593,]   10   11   11   13   12   11   11   12   12    13 #>   [594,]    9   10   10   12   11   10   10   11   11    12 #>   [595,]    9   10   10   12   11   10   10   11   11    12 #>   [596,]    9   10   10   12   11   10   10   11   11    12 #>   [597,]    9   10   10   12   11   10   10   11   11    12 #>   [598,]    9   10   10   12   11   10   10   11   11    12 #>   [599,]    9   10   10   12   11   10   10   11   11    12 #>   [600,]    9   10   10   12   11   10   10   11   11    12 #>   [601,]   12   13   13   15   13   12   14   14   14    15 #>   [602,]   12   13   13   15   13   12   13   14   14    15 #>   [603,]   12   13   13   15   13   12   13   14   14    15 #>   [604,]   11   12   12   14   15   13   12   13   13    14 #>   [605,]   12   13   13   15   13   12   14   14   14    15 #>   [606,]   12   13   13   15   13   12   14   14   14    15 #>   [607,]   12   13   13   15   13   12   13   14   14    15 #>   [608,]   11   12   12   14   15   13   12   13   13    14 #>   [609,]   11   12   12   14   15   13   12   13   13    14 #>   [610,]   11   12   12   14   15   13   12   13   13    14 #>   [611,]   12   13   13   15   13   12   14   14   14    15 #>   [612,]   12   13   13   15   13   12   14   14   14    15 #>   [613,]   12   13   13   15   13   12   13   14   14    15 #>   [614,]   12   13   13   15   13   12   14   14   14    15 #>   [615,]   12   13   13   15   13   12   14   14   14    15 #>   [616,]   12   13   13   15   13   12   13   14   14    15 #>   [617,]   12   13   13   15   13   12   13   14   14    15 #>   [618,]   11   12   12   14   15   13   12   13   13    14 #>   [619,]   12   13   13   15   13   12   13   14   14    15 #>   [620,]   11   12   12   14   14   13   12   13   13    14 #>   [621,]   12   13   13   15   13   12   13   14   14    15 #>   [622,]   12   13   13   15   13   12   13   14   14    15 #>   [623,]   12   13   13   15   13   12   13   14   14    15 #>   [624,]   11   12   12   14   15   13   12   13   13    14 #>   [625,]   12   13   13   15   13   12   13   14   14    15 #>   [626,]   12   13   13   15   13   12   14   14   14    15 #>   [627,]   12   13   13   15   13   12   13   14   14    15 #>   [628,]   12   13   13   15   13   12   14   14   14    15 #>   [629,]   12   13   13   15   13   12   13   14   14    15 #>   [630,]   11   12   12   14   15   13   12   13   13    14 #>   [631,]   12   13   13   15   13   12   13   14   14    15 #>   [632,]   12   13   13   15   13   12   13   14   14    15 #>   [633,]   12   13   13   15   13   12   14   14   14    15 #>   [634,]   12   13   13   15   13   12   13   14   14    15 #>   [635,]   12   13   13   15   13   12   13   14   14    15 #>   [636,]   12   13   13   15   13   12   13   14   14    15 #>   [637,]   12   13   13   15   13   12   13   14   14    15 #>   [638,]   12   13   13   15   13   12   14   14   14    15 #>   [639,]   11   12   12   14   15   13   12   13   13    14 #>   [640,]   12   13   13   15   13   12   13   14   14    15 #>   [641,]   12   13   13   15   13   12   14   14   14    15 #>   [642,]   12   13   13   15   13   12   14   14   14    15 #>   [643,]   11   12   12   14   15   13   12   13   13    14 #>   [644,]   12   13   13   15   13   12   13   14   14    15 #>   [645,]   11   12   12   14   15   13   12   13   13    14 #>   [646,]   12   13   13   15   13   12   14   14   14    15 #>   [647,]   12   13   13   15   13   12   13   14   14    15 #>   [648,]   12   13   13   15   13   12   13   14   14    15 #>   [649,]   11   12   12   14   15   13   12   13   13    14 #>   [650,]   12   13   13   15   13   12   14   14   14    15 #>   [651,]   11   12   12   14   15   13   12   13   13    14 #>   [652,]   12   13   13   15   13   12   14   14   14    15 #>   [653,]   11   12   12   14   15   13   12   13   13    14 #>   [654,]   12   13   13   15   13   12   13   14   14    15 #>   [655,]   12   13   13   15   13   12   14   14   14    15 #>   [656,]   11   12   12   14   14   13   12   13   13    14 #>   [657,]   12   13   13   15   13   12   14   14   14    15 #>   [658,]   12   13   13   15   13   12   14   14   14    15 #>   [659,]   12   13   13   15   13   12   13   14   14    15 #>   [660,]   11   12   12   14   15   13   12   13   13    14 #>   [661,]   12   13   13   15   13   12   14   14   14    15 #>   [662,]   12   13   13   15   13   12   13   14   14    15 #>   [663,]   12   13   13   15   13   12   14   14   14    15 #>   [664,]   11   12   12   14   15   13   12   13   13    14 #>   [665,]   11   12   12   14   14   13   12   13   13    14 #>   [666,]   11   12   12   14   15   13   12   13   13    14 #>   [667,]   11   12   12   14   15   13   12   13   13    14 #>   [668,]   12   13   13   15   13   12   14   14   14    15 #>   [669,]   12   13   13   15   13   12   14   14   14    15 #>   [670,]   12   13   13   15   13   12   13   14   14    15 #>   [671,]   12   13   13   15   13   12   14   14   14    15 #>   [672,]   12   13   13   15   13   12   14   14   14    15 #>   [673,]   12   13   13   15   13   12   14   14   14    15 #>   [674,]   12   13   13   15   13   12   14   14   14    15 #>   [675,]   12   13   13   15   13   12   14   14   14    15 #>   [676,]   12   13   13   15   13   12   14   14   14    15 #>   [677,]   12   13   13   15   13   12   13   14   14    15 #>   [678,]   11   12   12   14   15   13   12   13   13    14 #>   [679,]   12   13   13   15   13   12   13   14   14    15 #>   [680,]   12   13   13   15   13   12   13   14   14    15 #>   [681,]   12   13   13   15   13   12   14   14   14    15 #>   [682,]   12   13   13   15   13   12   14   14   14    15 #>   [683,]   12   13   13   15   13   12   13   14   14    15 #>   [684,]   12   13   13   15   13   12   14   14   14    15 #>   [685,]   11   12   12   14   14   13   12   13   13    14 #>   [686,]   12   13   13   15   13   12   13   14   14    15 #>   [687,]   12   13   13   15   13   12   14   14   14    15 #>   [688,]   12   13   13   15   13   12   14   14   14    15 #>   [689,]   11   12   12   14   14   13   12   13   13    14 #>   [690,]   12   13   13   15   13   12   14   14   14    15 #>   [691,]   11   12   12   14   15   13   12   13   13    14 #>   [692,]   12   13   13   15   13   12   14   14   14    15 #>   [693,]   12   13   13   15   13   12   13   14   14    15 #>   [694,]   12   13   13   15   13   12   14   14   14    15 #>   [695,]   11   12   12   14   15   13   12   13   13    14 #>   [696,]   12   13   13   15   13   12   14   14   14    15 #>   [697,]   12   13   13   15   13   12   14   14   14    15 #>   [698,]   12   13   13   15   13   12   13   14   14    15 #>   [699,]   12   13   13   15   13   12   14   14   14    15 #>   [700,]   12   13   13   15   13   12   13   14   14    15 #>   [701,]   13   15   15   17   17   15   16   16   15    17 #>   [702,]   13   14   14   16   16   14   15   15   15    16 #>   [703,]   13   14   14   16   16   14   15   15   15    16 #>   [704,]   13   14   14   16   16   14   15   15   15    17 #>   [705,]   13   15   15   17   17   15   16   16   15    17 #>   [706,]   13   14   14   16   16   14   15   15   15    17 #>   [707,]   13   14   14   16   16   14   15   15   15    16 #>   [708,]   13   14   14   16   16   14   15   15   15    17 #>   [709,]   13   14   14   16   16   14   15   15   15    17 #>   [710,]   13   15   15   17   17   15   16   16   15    16 #>   [711,]   13   15   15   17   17   15   16   16   15    17 #>   [712,]   13   15   15   17   17   15   16   16   15    17 #>   [713,]   13   14   14   16   16   14   15   15   15    16 #>   [714,]   13   15   15   17   17   15   16   16   15    17 #>   [715,]   13   15   15   17   17   15   16   16   15    17 #>   [716,]   13   14   14   16   16   14   15   15   15    16 #>   [717,]   13   15   15   17   17   15   16   16   15    17 #>   [718,]   13   15   15   17   17   15   16   16   15    16 #>   [719,]   13   14   14   16   16   14   15   15   15    16 #>   [720,]   13   14   14   16   16   14   15   15   15    17 #>   [721,]   13   14   14   16   16   14   15   15   15    16 #>   [722,]   13   15   15   17   17   15   16   16   15    16 #>   [723,]   13   14   14   16   16   14   15   15   15    16 #>   [724,]   13   14   14   16   16   14   15   15   15    16 #>   [725,]   13   14   14   16   16   14   15   15   15    17 #>   [726,]   13   15   15   17   17   15   16   16   15    17 #>   [727,]   13   15   15   17   17   15   16   16   15    17 #>   [728,]   13   14   14   16   16   14   15   15   15    17 #>   [729,]   13   14   14   16   16   14   15   15   15    16 #>   [730,]   13   14   14   16   16   14   15   15   15    16 #>   [731,]   13   15   15   17   17   15   16   16   15    16 #>   [732,]   13   15   15   17   17   15   16   16   15    16 #>   [733,]   13   14   14   16   16   14   15   15   15    17 #>   [734,]   13   14   14   16   16   14   15   15   15    16 #>   [735,]   13   14   14   16   16   14   15   15   15    16 #>   [736,]   13   14   14   16   16   14   15   15   15    16 #>   [737,]   13   14   14   16   16   14   15   15   15    16 #>   [738,]   13   15   15   17   17   15   16   16   15    17 #>   [739,]   13   14   14   16   16   14   15   15   15    16 #>   [740,]   13   14   14   16   16   14   15   15   15    16 #>   [741,]   13   14   14   16   16   14   15   15   15    17 #>   [742,]   13   14   14   16   16   14   15   15   15    17 #>   [743,]   13   15   15   17   17   15   16   16   15    17 #>   [744,]   13   14   14   16   16   14   15   15   15    16 #>   [745,]   13   14   14   16   16   14   15   15   15    17 #>   [746,]   13   14   14   16   16   14   15   15   15    17 #>   [747,]   13   15   15   17   17   15   16   16   15    16 #>   [748,]   13   14   14   16   16   14   15   15   15    16 #>   [749,]   13   14   14   16   16   14   15   15   15    16 #>   [750,]   13   14   14   16   16   14   15   15   15    17 #>   [751,]   13   14   14   16   16   14   15   15   15    17 #>   [752,]   13   15   15   17   17   15   16   16   15    17 #>   [753,]   13   14   14   16   16   14   15   15   15    17 #>   [754,]   13   14   14   16   16   14   15   15   15    16 #>   [755,]   13   14   14   16   16   14   15   15   15    17 #>   [756,]   13   14   14   16   16   14   15   15   15    17 #>   [757,]   13   14   14   16   16   14   15   15   15    17 #>   [758,]   13   15   15   17   17   15   16   16   15    17 #>   [759,]   13   15   15   17   17   15   16   16   15    16 #>   [760,]   13   14   14   16   16   14   15   15   15    17 #>   [761,]   13   15   15   17   17   15   16   16   15    17 #>   [762,]   13   14   14   16   16   14   15   15   15    16 #>   [763,]   13   14   14   16   16   14   15   15   15    17 #>   [764,]   13   14   14   16   16   14   15   15   15    17 #>   [765,]   13   14   14   16   16   14   15   15   15    17 #>   [766,]   13   15   15   17   17   15   16   16   15    17 #>   [767,]   13   14   14   16   16   14   15   15   15    17 #>   [768,]   13   14   14   16   16   14   15   15   15    17 #>   [769,]   13   14   14   16   16   14   15   15   15    17 #>   [770,]   13   15   15   17   17   15   16   16   15    16 #>   [771,]   13   15   15   17   17   15   16   16   15    17 #>   [772,]   13   14   14   16   16   14   15   15   15    17 #>   [773,]   13   14   14   16   16   14   15   15   15    17 #>   [774,]   13   14   14   16   16   14   15   15   15    17 #>   [775,]   13   15   15   17   17   15   16   16   15    17 #>   [776,]   13   14   14   16   16   14   15   15   15    17 #>   [777,]   13   15   15   17   17   15   16   16   15    16 #>   [778,]   13   14   14   16   16   14   15   15   15    17 #>   [779,]   13   15   15   17   17   15   16   16   15    16 #>   [780,]   13   14   14   16   16   14   15   15   15    16 #>   [781,]   13   14   14   16   16   14   15   15   15    17 #>   [782,]   13   14   14   16   16   14   15   15   15    17 #>   [783,]   13   14   14   16   16   14   15   15   15    16 #>   [784,]   13   14   14   16   16   14   15   15   15    17 #>   [785,]   13   14   14   16   16   14   15   15   15    16 #>   [786,]   13   14   14   16   16   14   15   15   15    16 #>   [787,]   13   15   15   17   17   15   16   16   15    17 #>   [788,]   13   14   14   16   16   14   15   15   15    17 #>   [789,]   13   14   14   16   16   14   15   15   15    17 #>   [790,]   13   15   15   17   17   15   16   16   15    17 #>   [791,]   13   15   15   17   17   15   16   16   15    17 #>   [792,]   13   15   15   17   17   15   16   16   15    17 #>   [793,]   13   14   14   16   16   14   15   15   15    16 #>   [794,]   13   14   14   16   16   14   15   15   15    17 #>   [795,]   13   15   15   17   17   15   16   16   15    16 #>   [796,]   13   14   14   16   16   14   15   15   15    17 #>   [797,]   13   14   14   16   16   14   15   15   15    17 #>   [798,]   13   14   14   16   16   14   15   15   15    16 #>   [799,]   13   14   14   16   16   14   15   15   15    17 #>   [800,]   13   15   15   17   17   15   16   16   15    16 #>   [801,]   14   16   17   19   19   17   18   18   17    19 #>   [802,]   14   16   16   18   18   16   17   17   16    18 #>   [803,]   14   16   16   18   18   16   17   17   16    18 #>   [804,]   14   16   17   19   19   17   18   18   17    19 #>   [805,]   14   16   17   19   19   17   18   18   17    19 #>   [806,]   14   16   16   18   18   16   17   17   16    18 #>   [807,]   14   16   16   18   18   16   17   17   16    18 #>   [808,]   14   16   16   18   18   16   17   17   16    18 #>   [809,]   14   16   16   18   18   16   17   17   16    18 #>   [810,]   14   16   17   19   19   17   18   18   17    19 #>   [811,]   14   16   17   19   19   17   18   18   17    19 #>   [812,]   14   16   17   19   19   17   18   18   17    19 #>   [813,]   14   16   17   19   19   17   18   18   17    19 #>   [814,]   14   16   17   19   19   17   18   18   17    19 #>   [815,]   14   16   17   19   19   17   18   18   17    19 #>   [816,]   14   16   17   19   19   17   18   18   17    19 #>   [817,]   14   16   17   19   19   17   18   18   17    19 #>   [818,]   14   16   17   19   19   17   18   18   17    19 #>   [819,]   14   16   17   19   19   17   18   18   17    19 #>   [820,]   14   16   16   18   18   16   17   17   16    18 #>   [821,]   14   16   16   18   18   16   17   17   16    18 #>   [822,]   14   16   17   19   19   17   18   18   17    19 #>   [823,]   14   16   16   18   18   16   17   17   16    18 #>   [824,]   14   16   17   19   19   17   18   18   17    19 #>   [825,]   14   16   16   18   18   16   17   17   16    18 #>   [826,]   14   16   17   19   19   17   18   18   17    19 #>   [827,]   14   16   17   19   19   17   18   18   17    19 #>   [828,]   14   16   17   19   19   17   18   18   17    19 #>   [829,]   14   16   16   18   18   16   17   17   16    18 #>   [830,]   14   16   16   18   18   16   17   17   16    18 #>   [831,]   14   16   17   19   19   17   18   18   17    19 #>   [832,]   14   16   17   19   19   17   18   18   17    19 #>   [833,]   14   16   17   19   19   17   18   18   17    19 #>   [834,]   14   16   16   18   18   16   17   17   16    18 #>   [835,]   14   16   16   18   18   16   17   17   16    18 #>   [836,]   14   16   16   18   18   16   17   17   16    18 #>   [837,]   14   16   16   18   18   16   17   17   16    18 #>   [838,]   14   16   17   19   19   17   18   18   17    19 #>   [839,]   14   16   17   19   19   17   18   18   17    19 #>   [840,]   14   16   16   18   18   16   17   17   16    18 #>   [841,]   14   16   16   18   18   16   17   17   16    18 #>   [842,]   14   16   16   18   18   16   17   17   16    18 #>   [843,]   14   16   17   19   19   17   18   18   17    19 #>   [844,]   14   16   16   18   18   16   17   17   16    18 #>   [845,]   14   16   16   18   18   16   17   17   16    18 #>   [846,]   14   16   17   19   19   17   18   18   17    19 #>   [847,]   14   16   17   19   19   17   18   18   17    19 #>   [848,]   14   16   17   19   19   17   18   18   17    19 #>   [849,]   14   16   16   18   18   16   17   17   16    18 #>   [850,]   14   16   16   18   18   16   17   17   16    18 #>   [851,]   14   16   17   19   19   17   18   18   17    19 #>   [852,]   14   16   17   19   19   17   18   18   17    19 #>   [853,]   14   16   16   18   18   16   17   17   16    18 #>   [854,]   14   16   16   18   18   16   17   17   16    18 #>   [855,]   14   16   16   18   18   16   17   17   16    18 #>   [856,]   14   16   16   18   18   16   17   17   16    18 #>   [857,]   14   16   16   18   18   16   17   17   16    18 #>   [858,]   14   16   17   19   19   17   18   18   17    19 #>   [859,]   14   16   17   19   19   17   18   18   17    19 #>   [860,]   14   16   16   18   18   16   17   17   16    18 #>   [861,]   14   16   17   19   19   17   18   18   17    19 #>   [862,]   14   16   16   18   18   16   17   17   16    18 #>   [863,]   14   16   17   19   19   17   18   18   17    19 #>   [864,]   14   16   16   18   18   16   17   17   16    18 #>   [865,]   14   16   16   18   18   16   17   17   16    18 #>   [866,]   14   16   17   19   19   17   18   18   17    19 #>   [867,]   14   16   16   18   18   16   17   17   16    18 #>   [868,]   14   16   17   19   19   17   18   18   17    19 #>   [869,]   14   16   17   19   19   17   18   18   17    19 #>   [870,]   14   16   17   19   19   17   18   18   17    19 #>   [871,]   14   16   17   19   19   17   18   18   17    19 #>   [872,]   14   16   16   18   18   16   17   17   16    18 #>   [873,]   14   16   16   18   18   16   17   17   16    18 #>   [874,]   14   16   16   18   18   16   17   17   16    18 #>   [875,]   14   16   17   19   19   17   18   18   17    19 #>   [876,]   14   16   16   18   18   16   17   17   16    18 #>   [877,]   14   16   17   19   19   17   18   18   17    19 #>   [878,]   14   16   17   19   19   17   18   18   17    19 #>   [879,]   14   16   17   19   19   17   18   18   17    19 #>   [880,]   14   16   16   18   18   16   17   17   16    18 #>   [881,]   14   16   16   18   18   16   17   17   16    18 #>   [882,]   14   16   16   18   18   16   17   17   16    18 #>   [883,]   14   16   17   19   19   17   18   18   17    19 #>   [884,]   14   16   16   18   18   16   17   17   16    18 #>   [885,]   14   16   16   18   18   16   17   17   16    18 #>   [886,]   14   16   16   18   18   16   17   17   16    18 #>   [887,]   14   16   17   19   19   17   18   18   17    19 #>   [888,]   14   16   16   18   18   16   17   17   16    18 #>   [889,]   14   16   16   18   18   16   17   17   16    18 #>   [890,]   14   16   17   19   19   17   18   18   17    19 #>   [891,]   14   16   17   19   19   17   18   18   17    19 #>   [892,]   14   16   17   19   19   17   18   18   17    19 #>   [893,]   14   16   16   18   18   16   17   17   16    18 #>   [894,]   14   16   16   18   18   16   17   17   16    18 #>   [895,]   14   16   17   19   19   17   18   18   17    19 #>   [896,]   14   16   17   19   19   17   18   18   17    19 #>   [897,]   14   16   16   18   18   16   17   17   16    18 #>   [898,]   14   16   16   18   18   16   17   17   16    18 #>   [899,]   14   16   16   18   18   16   17   17   16    18 #>   [900,]   14   16   17   19   19   17   18   18   17    19 #>   [901,]   15   17   18   20   20   18   21   21   20    22 #>   [902,]   16   18   19   20   20   18   21   21   20    22 #>   [903,]   16   18   19   20   20   18   20   20   19    21 #>   [904,]   15   17   18   20   21   19   19   19   18    20 #>   [905,]   15   17   18   20   20   18   21   21   20    22 #>   [906,]   16   18   19   20   21   19   19   19   18    20 #>   [907,]   15   17   18   20   20   18   20   20   19    21 #>   [908,]   15   17   18   20   20   18   21   21   20    22 #>   [909,]   15   17   18   20   21   19   19   19   18    20 #>   [910,]   15   17   18   20   21   19   19   19   18    20 #>   [911,]   15   17   18   20   21   19   19   19   18    20 #>   [912,]   16   18   19   20   21   19   19   19   18    20 #>   [913,]   15   17   18   20   20   18   21   21   20    22 #>   [914,]   15   17   18   20   21   19   19   19   18    20 #>   [915,]   15   17   18   20   21   19   19   19   18    20 #>   [916,]   15   17   18   20   20   18   21   21   20    22 #>   [917,]   15   17   18   20   20   18   21   21   20    22 #>   [918,]   16   18   19   20   21   19   19   19   18    20 #>   [919,]   16   18   19   20   21   19   19   19   18    20 #>   [920,]   16   18   19   20   20   18   21   21   20    22 #>   [921,]   15   17   18   20   21   19   19   19   18    20 #>   [922,]   15   17   18   20   20   18   21   21   20    22 #>   [923,]   15   17   18   20   21   19   19   19   18    20 #>   [924,]   15   17   18   20   20   18   21   21   20    22 #>   [925,]   16   18   19   20   20   18   21   21   20    22 #>   [926,]   15   17   18   20   21   19   19   19   18    20 #>   [927,]   15   17   18   20   21   19   19   19   18    20 #>   [928,]   16   18   19   20   20   18   21   21   20    22 #>   [929,]   15   17   18   20   20   18   21   21   20    22 #>   [930,]   15   17   18   20   21   19   19   19   18    20 #>   [931,]   15   17   18   20   21   19   19   19   18    20 #>   [932,]   15   17   18   20   21   19   19   19   18    20 #>   [933,]   16   18   19   20   21   19   19   19   18    20 #>   [934,]   16   18   19   20   21   19   19   19   18    20 #>   [935,]   15   17   18   20   21   19   19   19   18    20 #>   [936,]   15   17   18   20   21   19   19   19   18    20 #>   [937,]   15   17   18   20   20   18   21   21   20    22 #>   [938,]   15   17   18   20   21   19   19   19   18    20 #>   [939,]   15   17   18   20   20   18   20   20   19    21 #>   [940,]   15   17   18   20   20   18   21   21   20    22 #>   [941,]   15   17   18   20   21   19   19   19   18    20 #>   [942,]   15   17   18   20   21   19   19   19   18    20 #>   [943,]   15   17   18   20   20   18   21   21   20    22 #>   [944,]   15   17   18   20   20   18   21   21   20    22 #>   [945,]   15   17   18   20   20   18   21   21   20    22 #>   [946,]   15   17   18   20   20   18   21   21   20    22 #>   [947,]   15   17   18   20   20   18   20   20   19    21 #>   [948,]   15   17   18   20   21   19   19   19   18    20 #>   [949,]   15   17   18   20   20   18   20   20   19    21 #>   [950,]   15   17   18   20   20   18   21   21   20    22 #>   [951,]   15   17   18   20   20   18   21   21   20    22 #>   [952,]   15   17   18   20   21   19   19   19   18    20 #>   [953,]   15   17   18   20   20   18   21   21   20    22 #>   [954,]   15   17   18   20   20   18   20   20   19    21 #>   [955,]   15   17   18   20   20   18   21   21   20    22 #>   [956,]   15   17   18   20   20   18   21   21   20    22 #>   [957,]   15   17   18   20   20   18   21   21   20    22 #>   [958,]   15   17   18   20   21   19   19   19   18    20 #>   [959,]   15   17   18   20   20   18   21   21   20    22 #>   [960,]   16   18   19   20   21   19   19   19   18    20 #>   [961,]   15   17   18   20   21   19   19   19   18    20 #>   [962,]   15   17   18   20   21   19   19   19   18    20 #>   [963,]   15   17   18   20   20   18   21   21   20    22 #>   [964,]   15   17   18   20   21   19   19   19   18    20 #>   [965,]   16   18   19   20   20   18   21   21   20    22 #>   [966,]   15   17   18   20   20   18   21   21   20    22 #>   [967,]   15   17   18   20   21   19   19   19   18    20 #>   [968,]   15   17   18   20   21   19   19   19   18    20 #>   [969,]   15   17   18   20   21   19   19   19   18    20 #>   [970,]   16   18   19   20   20   18   20   20   19    21 #>   [971,]   15   17   18   20   20   18   21   21   20    22 #>   [972,]   15   17   18   20   20   18   21   21   20    22 #>   [973,]   16   18   19   20   21   19   19   19   18    20 #>   [974,]   15   17   18   20   21   19   19   19   18    20 #>   [975,]   15   17   18   20   21   19   19   19   18    20 #>   [976,]   15   17   18   20   20   18   21   21   20    22 #>   [977,]   15   17   18   20   20   18   20   20   19    21 #>   [978,]   15   17   18   20   20   18   21   21   20    22 #>   [979,]   15   17   18   20   20   18   20   20   19    21 #>   [980,]   15   17   18   20   21   19   19   19   18    20 #>   [981,]   15   17   18   20   20   18   21   21   20    22 #>   [982,]   15   17   18   20   21   19   19   19   18    20 #>   [983,]   15   17   18   20   20   18   20   20   19    21 #>   [984,]   16   18   19   20   20   18   21   21   20    22 #>   [985,]   15   17   18   20   21   19   19   19   18    20 #>   [986,]   15   17   18   20   20   18   21   21   20    22 #>   [987,]   15   17   18   20   20   18   21   21   20    22 #>   [988,]   15   17   18   20   20   18   21   21   20    22 #>   [989,]   15   17   18   20   20   18   21   21   20    22 #>   [990,]   15   17   18   20   20   18   21   21   20    22 #>   [991,]   15   17   18   20   21   19   19   19   18    20 #>   [992,]   15   17   18   20   21   19   19   19   18    20 #>   [993,]   16   18   19   20   21   19   19   19   18    20 #>   [994,]   15   17   18   20   20   18   21   21   20    22 #>   [995,]   15   17   18   20   21   19   19   19   18    20 #>   [996,]   15   17   18   20   21   19   19   19   18    20 #>   [997,]   16   18   19   20   21   19   19   19   18    20 #>   [998,]   16   18   19   20   20   18   20   20   19    21 #>   [999,]   15   17   18   20   21   19   19   19   18    20 #>  [1000,]   15   17   18   20   20   18   21   21   20    22 #>  [1001,]   18   20   21   22   23   21   23   23   22    24 #>  [1002,]   18   20   21   22   23   21   23   23   22    24 #>  [1003,]   18   20   21   22   23   21   23   23   22    24 #>  [1004,]   18   20   21   22   23   21   23   23   22    24 #>  [1005,]   18   20   21   22   23   21   23   23   22    24 #>  [1006,]   18   20   21   22   23   21   23   23   22    24 #>  [1007,]   18   20   21   22   23   21   23   23   22    24 #>  [1008,]   18   20   21   22   23   21   23   23   22    24 #>  [1009,]   18   20   21   22   23   21   23   23   22    24 #>  [1010,]   18   20   21   22   23   21   23   23   22    24 #>  [1011,]   18   20   21   22   23   21   23   23   22    24 #>  [1012,]   18   20   21   22   23   21   23   23   22    24 #>  [1013,]   18   20   21   22   23   21   23   23   22    24 #>  [1014,]   18   20   21   22   23   21   23   23   22    24 #>  [1015,]   18   20   21   22   23   21   23   23   22    24 #>  [1016,]   18   20   21   22   23   21   23   23   22    24 #>  [1017,]   18   20   21   22   23   21   23   23   22    24 #>  [1018,]   18   20   21   22   23   21   23   23   22    24 #>  [1019,]   18   20   21   22   23   21   23   23   22    24 #>  [1020,]   17   19   20   21   22   20   22   22   21    23 #>  [1021,]   17   19   20   21   22   20   22   22   21    23 #>  [1022,]   18   20   21   22   23   21   23   23   22    24 #>  [1023,]   18   20   21   22   23   21   23   23   22    24 #>  [1024,]   18   20   21   22   23   21   23   23   22    24 #>  [1025,]   17   19   20   21   22   20   22   22   21    23 #>  [1026,]   18   20   21   22   23   21   23   23   22    24 #>  [1027,]   18   20   21   22   23   21   23   23   22    24 #>  [1028,]   18   20   21   22   23   21   23   23   22    24 #>  [1029,]   18   20   21   22   23   21   23   23   22    24 #>  [1030,]   18   20   21   22   23   21   23   23   22    24 #>  [1031,]   18   20   21   22   23   21   23   23   22    24 #>  [1032,]   18   20   21   22   23   21   23   23   22    24 #>  [1033,]   18   20   21   22   23   21   23   23   22    24 #>  [1034,]   18   20   21   22   23   21   23   23   22    24 #>  [1035,]   17   19   20   21   22   20   22   22   21    23 #>  [1036,]   18   20   21   22   23   21   23   23   22    24 #>  [1037,]   18   20   21   22   23   21   23   23   22    24 #>  [1038,]   18   20   21   22   23   21   23   23   22    24 #>  [1039,]   18   20   21   22   23   21   23   23   22    24 #>  [1040,]   18   20   21   22   23   21   23   23   22    24 #>  [1041,]   18   20   21   22   23   21   23   23   22    24 #>  [1042,]   18   20   21   22   23   21   23   23   22    24 #>  [1043,]   18   20   21   22   23   21   23   23   22    24 #>  [1044,]   17   19   20   21   22   20   22   22   21    23 #>  [1045,]   18   20   21   22   23   21   23   23   22    24 #>  [1046,]   18   20   21   22   23   21   23   23   22    24 #>  [1047,]   18   20   21   22   23   21   23   23   22    24 #>  [1048,]   18   20   21   22   23   21   23   23   22    24 #>  [1049,]   18   20   21   22   23   21   23   23   22    24 #>  [1050,]   18   20   21   22   23   21   23   23   22    24 #>  [1051,]   18   20   21   22   23   21   23   23   22    24 #>  [1052,]   18   20   21   22   23   21   23   23   22    24 #>  [1053,]   17   19   20   21   22   20   22   22   21    23 #>  [1054,]   18   20   21   22   23   21   23   23   22    24 #>  [1055,]   18   20   21   22   23   21   23   23   22    24 #>  [1056,]   17   19   20   21   22   20   22   22   21    23 #>  [1057,]   18   20   21   22   23   21   23   23   22    24 #>  [1058,]   18   20   21   22   23   21   23   23   22    24 #>  [1059,]   18   20   21   22   23   21   23   23   22    24 #>  [1060,]   18   20   21   22   23   21   23   23   22    24 #>  [1061,]   18   20   21   22   23   21   23   23   22    24 #>  [1062,]   18   20   21   22   23   21   23   23   22    24 #>  [1063,]   18   20   21   22   23   21   23   23   22    24 #>  [1064,]   18   20   21   22   23   21   23   23   22    24 #>  [1065,]   17   19   20   21   22   20   22   22   21    23 #>  [1066,]   18   20   21   22   23   21   23   23   22    24 #>  [1067,]   18   20   21   22   23   21   23   23   22    24 #>  [1068,]   18   20   21   22   23   21   23   23   22    24 #>  [1069,]   18   20   21   22   23   21   23   23   22    24 #>  [1070,]   18   20   21   22   23   21   23   23   22    24 #>  [1071,]   18   20   21   22   23   21   23   23   22    24 #>  [1072,]   18   20   21   22   23   21   23   23   22    24 #>  [1073,]   18   20   21   22   23   21   23   23   22    24 #>  [1074,]   17   19   20   21   22   20   22   22   21    23 #>  [1075,]   18   20   21   22   23   21   23   23   22    24 #>  [1076,]   18   20   21   22   23   21   23   23   22    24 #>  [1077,]   18   20   21   22   23   21   23   23   22    24 #>  [1078,]   18   20   21   22   23   21   23   23   22    24 #>  [1079,]   18   20   21   22   23   21   23   23   22    24 #>  [1080,]   17   19   20   21   22   20   22   22   21    23 #>  [1081,]   18   20   21   22   23   21   23   23   22    24 #>  [1082,]   18   20   21   22   23   21   23   23   22    24 #>  [1083,]   18   20   21   22   23   21   23   23   22    24 #>  [1084,]   18   20   21   22   23   21   23   23   22    24 #>  [1085,]   17   19   20   21   22   20   22   22   21    23 #>  [1086,]   17   19   20   21   22   20   22   22   21    23 #>  [1087,]   18   20   21   22   23   21   23   23   22    24 #>  [1088,]   18   20   21   22   23   21   23   23   22    24 #>  [1089,]   17   19   20   21   22   20   22   22   21    23 #>  [1090,]   18   20   21   22   23   21   23   23   22    24 #>  [1091,]   18   20   21   22   23   21   23   23   22    24 #>  [1092,]   18   20   21   22   23   21   23   23   22    24 #>  [1093,]   18   20   21   22   23   21   23   23   22    24 #>  [1094,]   18   20   21   22   23   21   23   23   22    24 #>  [1095,]   18   20   21   22   23   21   23   23   22    24 #>  [1096,]   18   20   21   22   23   21   23   23   22    24 #>  [1097,]   18   20   21   22   23   21   23   23   22    24 #>  [1098,]   18   20   21   22   23   21   23   23   22    24 #>  [1099,]   18   20   21   22   23   21   23   23   22    24 #>  [1100,]   18   20   21   22   23   21   23   23   22    24 #>  [1101,]   20   23   23   24   25   23   25   25   24    27 #>  [1102,]   20   23   23   24   25   23   25   25   24    26 #>  [1103,]   19   21   22   23   24   22   24   24   23    25 #>  [1104,]   19   21   22   23   24   22   24   24   23    25 #>  [1105,]   19   21   22   23   24   22   24   24   23    25 #>  [1106,]   19   21   22   23   24   22   24   24   23    25 #>  [1107,]   20   23   23   24   25   23   25   25   24    27 #>  [1108,]   20   23   23   24   25   23   25   25   24    26 #>  [1109,]   19   21   22   23   24   22   24   24   23    25 #>  [1110,]   19   21   22   23   24   22   24   24   23    25 #>  [1111,]   19   21   22   23   24   22   24   24   23    25 #>  [1112,]   20   23   23   24   25   23   25   25   24    26 #>  [1113,]   20   23   23   24   25   23   25   25   24    27 #>  [1114,]   19   21   22   23   24   22   24   24   23    25 #>  [1115,]   20   22   23   24   25   23   25   25   24    26 #>  [1116,]   20   23   23   24   25   23   25   25   24    27 #>  [1117,]   20   22   23   24   25   23   25   25   24    26 #>  [1118,]   20   23   23   24   25   23   25   25   24    26 #>  [1119,]   20   23   23   24   25   23   25   25   24    26 #>  [1120,]   20   23   23   24   25   23   25   25   24    27 #>  [1121,]   19   21   22   23   24   22   24   24   23    25 #>  [1122,]   20   23   23   24   25   23   25   25   24    27 #>  [1123,]   20   23   23   24   25   23   25   25   24    26 #>  [1124,]   19   21   22   23   24   22   24   24   23    25 #>  [1125,]   19   21   22   23   24   22   24   24   23    25 #>  [1126,]   20   23   23   24   25   23   25   25   24    26 #>  [1127,]   20   23   23   24   25   23   25   25   24    26 #>  [1128,]   19   21   22   23   24   22   24   24   23    25 #>  [1129,]   20   23   23   24   25   23   25   25   24    26 #>  [1130,]   20   23   23   24   25   23   25   25   24    26 #>  [1131,]   19   21   22   23   24   22   24   24   23    25 #>  [1132,]   19   21   22   23   24   22   24   24   23    25 #>  [1133,]   20   23   23   24   25   23   25   25   24    26 #>  [1134,]   19   21   22   23   24   22   24   24   23    25 #>  [1135,]   19   21   22   23   24   22   24   24   23    25 #>  [1136,]   20   23   23   24   25   23   25   25   24    27 #>  [1137,]   20   22   23   24   25   23   25   25   24    26 #>  [1138,]   20   23   23   24   25   23   25   25   24    26 #>  [1139,]   19   21   22   23   24   22   24   24   23    25 #>  [1140,]   19   21   22   23   24   22   24   24   23    25 #>  [1141,]   20   23   23   24   25   23   25   25   24    26 #>  [1142,]   19   21   22   23   24   22   24   24   23    25 #>  [1143,]   20   22   23   24   25   23   25   25   24    26 #>  [1144,]   20   22   23   24   25   23   25   25   24    26 #>  [1145,]   20   23   23   24   25   23   25   25   24    26 #>  [1146,]   20   23   23   24   25   23   25   25   24    26 #>  [1147,]   19   21   22   23   24   22   24   24   23    25 #>  [1148,]   19   21   22   23   24   22   24   24   23    25 #>  [1149,]   20   23   23   24   25   23   25   25   24    26 #>  [1150,]   20   23   23   24   25   23   25   25   24    27 #>  [1151,]   20   23   23   24   25   23   25   25   24    26 #>  [1152,]   19   21   22   23   24   22   24   24   23    25 #>  [1153,]   20   23   23   24   25   23   25   25   24    27 #>  [1154,]   19   21   22   23   24   22   24   24   23    25 #>  [1155,]   20   23   23   24   25   23   25   25   24    27 #>  [1156,]   20   23   23   24   25   23   25   25   24    26 #>  [1157,]   19   21   22   23   24   22   24   24   23    25 #>  [1158,]   20   23   23   24   25   23   25   25   24    27 #>  [1159,]   20   23   23   24   25   23   25   25   24    27 #>  [1160,]   20   23   23   24   25   23   25   25   24    26 #>  [1161,]   20   23   23   24   25   23   25   25   24    26 #>  [1162,]   19   21   22   23   24   22   24   24   23    25 #>  [1163,]   20   22   23   24   25   23   25   25   24    26 #>  [1164,]   20   23   23   24   25   23   25   25   24    26 #>  [1165,]   19   21   22   23   24   22   24   24   23    25 #>  [1166,]   20   23   23   24   25   23   25   25   24    26 #>  [1167,]   19   21   22   23   24   22   24   24   23    25 #>  [1168,]   20   23   23   24   25   23   25   25   24    26 #>  [1169,]   20   23   23   24   25   23   25   25   24    26 #>  [1170,]   19   21   22   23   24   22   24   24   23    25 #>  [1171,]   20   23   23   24   25   23   25   25   24    26 #>  [1172,]   19   21   22   23   24   22   24   24   23    25 #>  [1173,]   19   21   22   23   24   22   24   24   23    25 #>  [1174,]   19   21   22   23   24   22   24   24   23    25 #>  [1175,]   20   22   23   24   25   23   25   25   24    26 #>  [1176,]   19   21   22   23   24   22   24   24   23    25 #>  [1177,]   20   23   23   24   25   23   25   25   24    26 #>  [1178,]   20   22   23   24   25   23   25   25   24    26 #>  [1179,]   19   21   22   23   24   22   24   24   23    25 #>  [1180,]   20   23   23   24   25   23   25   25   24    26 #>  [1181,]   20   23   23   24   25   23   25   25   24    26 #>  [1182,]   19   21   22   23   24   22   24   24   23    25 #>  [1183,]   20   23   23   24   25   23   25   25   24    26 #>  [1184,]   20   23   23   24   25   23   25   25   24    26 #>  [1185,]   20   23   23   24   25   23   25   25   24    27 #>  [1186,]   19   21   22   23   24   22   24   24   23    25 #>  [1187,]   20   23   23   24   25   23   25   25   24    26 #>  [1188,]   19   21   22   23   24   22   24   24   23    25 #>  [1189,]   19   21   22   23   24   22   24   24   23    25 #>  [1190,]   20   23   23   24   25   23   25   25   24    27 #>  [1191,]   19   21   22   23   24   22   24   24   23    25 #>  [1192,]   20   23   23   24   25   23   25   25   24    26 #>  [1193,]   20   23   23   24   25   23   25   25   24    26 #>  [1194,]   19   21   22   23   24   22   24   24   23    25 #>  [1195,]   20   22   23   24   25   23   25   25   24    26 #>  [1196,]   20   23   23   24   25   23   25   25   24    26 #>  [1197,]   20   23   23   24   25   23   25   25   24    26 #>  [1198,]   19   21   22   23   24   22   24   24   23    25 #>  [1199,]   20   23   23   24   25   23   25   25   24    26 #>  [1200,]   20   22   23   24   25   23   25   25   24    26 #>  [1201,]   22   25   25   26   27   25   27   27   26    29 #>  [1202,]   22   25   25   26   27   25   27   27   26    29 #>  [1203,]   22   25   25   26   27   25   27   27   26    29 #>  [1204,]   21   24   24   25   26   24   26   26   25    28 #>  [1205,]   22   25   25   26   27   25   27   27   26    29 #>  [1206,]   22   25   25   26   27   25   27   27   26    29 #>  [1207,]   22   25   25   26   27   25   27   27   26    29 #>  [1208,]   21   24   24   25   26   24   26   26   25    28 #>  [1209,]   21   24   24   25   26   24   26   26   25    28 #>  [1210,]   22   25   25   26   27   25   27   27   26    29 #>  [1211,]   21   24   24   25   26   24   26   26   25    28 #>  [1212,]   22   25   25   26   27   25   27   27   26    29 #>  [1213,]   21   24   24   25   26   24   26   26   25    28 #>  [1214,]   22   25   25   26   27   25   27   27   26    29 #>  [1215,]   22   25   25   26   27   25   27   27   26    29 #>  [1216,]   22   25   25   26   27   25   27   27   26    29 #>  [1217,]   21   24   24   25   26   24   26   26   25    28 #>  [1218,]   22   25   25   26   27   25   27   27   26    29 #>  [1219,]   22   25   25   26   27   25   27   27   26    29 #>  [1220,]   22   25   25   26   27   25   27   27   26    29 #>  [1221,]   22   25   25   26   27   25   27   27   26    29 #>  [1222,]   21   24   24   25   26   24   26   26   25    28 #>  [1223,]   22   25   25   26   27   25   27   27   26    29 #>  [1224,]   22   25   25   26   27   25   27   27   26    29 #>  [1225,]   22   25   25   26   27   25   27   27   26    29 #>  [1226,]   22   25   25   26   27   25   27   27   26    29 #>  [1227,]   21   24   24   25   26   24   26   26   25    28 #>  [1228,]   22   25   25   26   27   25   27   27   26    29 #>  [1229,]   22   25   25   26   27   25   27   27   26    29 #>  [1230,]   22   25   25   26   27   25   27   27   26    29 #>  [1231,]   22   25   25   26   27   25   27   27   26    29 #>  [1232,]   22   25   25   26   27   25   27   27   26    29 #>  [1233,]   22   25   25   26   27   25   27   27   26    29 #>  [1234,]   22   25   25   26   27   25   27   27   26    29 #>  [1235,]   21   24   24   25   26   24   26   26   25    28 #>  [1236,]   22   25   25   26   27   25   27   27   26    29 #>  [1237,]   22   25   25   26   27   25   27   27   26    29 #>  [1238,]   22   25   25   26   27   25   27   27   26    29 #>  [1239,]   22   25   25   26   27   25   27   27   26    29 #>  [1240,]   22   25   25   26   27   25   27   27   26    29 #>  [1241,]   22   25   25   26   27   25   27   27   26    29 #>  [1242,]   22   25   25   26   27   25   27   27   26    29 #>  [1243,]   21   24   24   25   26   24   26   26   25    28 #>  [1244,]   21   24   24   25   26   24   26   26   25    28 #>  [1245,]   22   25   25   26   27   25   27   27   26    29 #>  [1246,]   22   25   25   26   27   25   27   27   26    29 #>  [1247,]   22   25   25   26   27   25   27   27   26    29 #>  [1248,]   22   25   25   26   27   25   27   27   26    29 #>  [1249,]   21   24   24   25   26   24   26   26   25    28 #>  [1250,]   22   25   25   26   27   25   27   27   26    29 #>  [1251,]   22   25   25   26   27   25   27   27   26    29 #>  [1252,]   21   24   24   25   26   24   26   26   25    28 #>  [1253,]   22   25   25   26   27   25   27   27   26    29 #>  [1254,]   22   25   25   26   27   25   27   27   26    29 #>  [1255,]   21   24   24   25   26   24   26   26   25    28 #>  [1256,]   22   25   25   26   27   25   27   27   26    29 #>  [1257,]   22   25   25   26   27   25   27   27   26    29 #>  [1258,]   21   24   24   25   26   24   26   26   25    28 #>  [1259,]   22   25   25   26   27   25   27   27   26    29 #>  [1260,]   22   25   25   26   27   25   27   27   26    29 #>  [1261,]   22   25   25   26   27   25   27   27   26    29 #>  [1262,]   22   25   25   26   27   25   27   27   26    29 #>  [1263,]   22   25   25   26   27   25   27   27   26    29 #>  [1264,]   22   25   25   26   27   25   27   27   26    29 #>  [1265,]   22   25   25   26   27   25   27   27   26    29 #>  [1266,]   21   24   24   25   26   24   26   26   25    28 #>  [1267,]   22   25   25   26   27   25   27   27   26    29 #>  [1268,]   22   25   25   26   27   25   27   27   26    29 #>  [1269,]   21   24   24   25   26   24   26   26   25    28 #>  [1270,]   22   25   25   26   27   25   27   27   26    29 #>  [1271,]   22   25   25   26   27   25   27   27   26    29 #>  [1272,]   22   25   25   26   27   25   27   27   26    29 #>  [1273,]   22   25   25   26   27   25   27   27   26    29 #>  [1274,]   22   25   25   26   27   25   27   27   26    29 #>  [1275,]   22   25   25   26   27   25   27   27   26    29 #>  [1276,]   22   25   25   26   27   25   27   27   26    29 #>  [1277,]   22   25   25   26   27   25   27   27   26    29 #>  [1278,]   22   25   25   26   27   25   27   27   26    29 #>  [1279,]   21   24   24   25   26   24   26   26   25    28 #>  [1280,]   21   24   24   25   26   24   26   26   25    28 #>  [1281,]   21   24   24   25   26   24   26   26   25    28 #>  [1282,]   21   24   24   25   26   24   26   26   25    28 #>  [1283,]   21   24   24   25   26   24   26   26   25    28 #>  [1284,]   22   25   25   26   27   25   27   27   26    29 #>  [1285,]   22   25   25   26   27   25   27   27   26    29 #>  [1286,]   22   25   25   26   27   25   27   27   26    29 #>  [1287,]   21   24   24   25   26   24   26   26   25    28 #>  [1288,]   21   24   24   25   26   24   26   26   25    28 #>  [1289,]   21   24   24   25   26   24   26   26   25    28 #>  [1290,]   21   24   24   25   26   24   26   26   25    28 #>  [1291,]   22   25   25   26   27   25   27   27   26    29 #>  [1292,]   21   24   24   25   26   24   26   26   25    28 #>  [1293,]   22   25   25   26   27   25   27   27   26    29 #>  [1294,]   22   25   25   26   27   25   27   27   26    29 #>  [1295,]   21   24   24   25   26   24   26   26   25    28 #>  [1296,]   22   25   25   26   27   25   27   27   26    29 #>  [1297,]   22   25   25   26   27   25   27   27   26    29 #>  [1298,]   22   25   25   26   27   25   27   27   26    29 #>  [1299,]   21   24   24   25   26   24   26   26   25    28 #>  [1300,]   22   25   25   26   27   25   27   27   26    29 #>  [1301,]   23   26   26   27   28   26   28   28   27    30 #>  [1302,]   24   27   27   28   29   27   29   29   28    31 #>  [1303,]   24   27   27   28   29   27   29   29   28    31 #>  [1304,]   23   26   26   27   28   26   28   28   27    30 #>  [1305,]   23   26   26   27   28   26   28   28   27    30 #>  [1306,]   24   27   27   28   29   27   29   29   28    31 #>  [1307,]   24   27   27   28   29   27   29   29   28    31 #>  [1308,]   23   26   26   27   28   26   28   28   27    30 #>  [1309,]   23   26   26   27   28   26   28   28   27    30 #>  [1310,]   23   26   26   27   28   26   28   28   27    30 #>  [1311,]   23   26   26   27   28   26   28   28   27    30 #>  [1312,]   24   27   27   28   29   27   29   29   28    31 #>  [1313,]   23   26   26   27   28   26   28   28   27    30 #>  [1314,]   23   26   26   27   28   26   28   28   27    30 #>  [1315,]   23   26   26   27   28   26   28   28   27    30 #>  [1316,]   23   26   26   27   28   26   28   28   27    30 #>  [1317,]   23   26   26   27   28   26   28   28   27    30 #>  [1318,]   24   27   27   28   29   27   29   29   28    31 #>  [1319,]   24   27   27   28   29   27   29   29   28    31 #>  [1320,]   24   27   27   28   29   27   29   29   28    31 #>  [1321,]   23   26   26   27   28   26   28   28   27    30 #>  [1322,]   23   26   26   27   28   26   28   28   27    30 #>  [1323,]   24   27   27   28   29   27   29   29   28    31 #>  [1324,]   23   26   26   27   28   26   28   28   27    30 #>  [1325,]   24   27   27   28   29   27   29   29   28    31 #>  [1326,]   23   26   26   27   28   26   28   28   27    30 #>  [1327,]   23   26   26   27   28   26   28   28   27    30 #>  [1328,]   24   27   27   28   29   27   29   29   28    31 #>  [1329,]   24   27   27   28   29   27   29   29   28    31 #>  [1330,]   23   26   26   27   28   26   28   28   27    30 #>  [1331,]   24   27   27   28   29   27   29   29   28    31 #>  [1332,]   24   27   27   28   29   27   29   29   28    31 #>  [1333,]   24   27   27   28   29   27   29   29   28    31 #>  [1334,]   24   27   27   28   29   27   29   29   28    31 #>  [1335,]   23   26   26   27   28   26   28   28   27    30 #>  [1336,]   23   26   26   27   28   26   28   28   27    30 #>  [1337,]   23   26   26   27   28   26   28   28   27    30 #>  [1338,]   23   26   26   27   28   26   28   28   27    30 #>  [1339,]   23   26   26   27   28   26   28   28   27    30 #>  [1340,]   24   27   27   28   29   27   29   29   28    31 #>  [1341,]   23   26   26   27   28   26   28   28   27    30 #>  [1342,]   24   27   27   28   29   27   29   29   28    31 #>  [1343,]   23   26   26   27   28   26   28   28   27    30 #>  [1344,]   23   26   26   27   28   26   28   28   27    30 #>  [1345,]   23   26   26   27   28   26   28   28   27    30 #>  [1346,]   23   26   26   27   28   26   28   28   27    30 #>  [1347,]   23   26   26   27   28   26   28   28   27    30 #>  [1348,]   24   27   27   28   29   27   29   29   28    31 #>  [1349,]   23   26   26   27   28   26   28   28   27    30 #>  [1350,]   23   26   26   27   28   26   28   28   27    30 #>  [1351,]   23   26   26   27   28   26   28   28   27    30 #>  [1352,]   23   26   26   27   28   26   28   28   27    30 #>  [1353,]   23   26   26   27   28   26   28   28   27    30 #>  [1354,]   23   26   26   27   28   26   28   28   27    30 #>  [1355,]   23   26   26   27   28   26   28   28   27    30 #>  [1356,]   24   27   27   28   29   27   29   29   28    31 #>  [1357,]   24   27   27   28   29   27   29   29   28    31 #>  [1358,]   23   26   26   27   28   26   28   28   27    30 #>  [1359,]   23   26   26   27   28   26   28   28   27    30 #>  [1360,]   24   27   27   28   29   27   29   29   28    31 #>  [1361,]   24   27   27   28   29   27   29   29   28    31 #>  [1362,]   23   26   26   27   28   26   28   28   27    30 #>  [1363,]   23   26   26   27   28   26   28   28   27    30 #>  [1364,]   24   27   27   28   29   27   29   29   28    31 #>  [1365,]   24   27   27   28   29   27   29   29   28    31 #>  [1366,]   23   26   26   27   28   26   28   28   27    30 #>  [1367,]   23   26   26   27   28   26   28   28   27    30 #>  [1368,]   23   26   26   27   28   26   28   28   27    30 #>  [1369,]   23   26   26   27   28   26   28   28   27    30 #>  [1370,]   24   27   27   28   29   27   29   29   28    31 #>  [1371,]   24   27   27   28   29   27   29   29   28    31 #>  [1372,]   23   26   26   27   28   26   28   28   27    30 #>  [1373,]   24   27   27   28   29   27   29   29   28    31 #>  [1374,]   23   26   26   27   28   26   28   28   27    30 #>  [1375,]   24   27   27   28   29   27   29   29   28    31 #>  [1376,]   23   26   26   27   28   26   28   28   27    30 #>  [1377,]   24   27   27   28   29   27   29   29   28    31 #>  [1378,]   24   27   27   28   29   27   29   29   28    31 #>  [1379,]   23   26   26   27   28   26   28   28   27    30 #>  [1380,]   23   26   26   27   28   26   28   28   27    30 #>  [1381,]   23   26   26   27   28   26   28   28   27    30 #>  [1382,]   23   26   26   27   28   26   28   28   27    30 #>  [1383,]   23   26   26   27   28   26   28   28   27    30 #>  [1384,]   24   27   27   28   29   27   29   29   28    31 #>  [1385,]   23   26   26   27   28   26   28   28   27    30 #>  [1386,]   24   27   27   28   29   27   29   29   28    31 #>  [1387,]   23   26   26   27   28   26   28   28   27    30 #>  [1388,]   23   26   26   27   28   26   28   28   27    30 #>  [1389,]   23   26   26   27   28   26   28   28   27    30 #>  [1390,]   23   26   26   27   28   26   28   28   27    30 #>  [1391,]   23   26   26   27   28   26   28   28   27    30 #>  [1392,]   23   26   26   27   28   26   28   28   27    30 #>  [1393,]   24   27   27   28   29   27   29   29   28    31 #>  [1394,]   23   26   26   27   28   26   28   28   27    30 #>  [1395,]   23   26   26   27   28   26   28   28   27    30 #>  [1396,]   23   26   26   27   28   26   28   28   27    30 #>  [1397,]   24   27   27   28   29   27   29   29   28    31 #>  [1398,]   24   27   27   28   29   27   29   29   28    31 #>  [1399,]   23   26   26   27   28   26   28   28   27    30 #>  [1400,]   24   27   27   28   29   27   29   29   28    31 #>  [1401,]   26   28   28   29   32   30   31   31   31    34 #>  [1402,]   26   28   29   30   30   28   30   30   29    32 #>  [1403,]   25   28   28   29   31   29   31   31   31    34 #>  [1404,]   25   28   28   29   31   29   31   31   31    34 #>  [1405,]   26   28   29   30   30   28   30   30   29    32 #>  [1406,]   26   28   28   29   32   30   31   31   31    34 #>  [1407,]   25   28   29   30   30   28   30   30   29    32 #>  [1408,]   25   28   28   29   31   29   31   31   31    34 #>  [1409,]   26   28   29   30   30   28   30   30   29    32 #>  [1410,]   25   28   29   30   30   28   30   30   29    32 #>  [1411,]   26   28   28   29   32   30   31   31   31    34 #>  [1412,]   25   28   29   30   30   28   30   30   29    32 #>  [1413,]   26   28   29   30   30   28   30   30   29    32 #>  [1414,]   25   28   28   29   32   30   31   31   31    34 #>  [1415,]   26   28   28   29   32   30   31   31   30    33 #>  [1416,]   25   28   28   29   32   30   31   31   31    34 #>  [1417,]   26   28   29   30   30   28   30   30   29    32 #>  [1418,]   26   28   29   30   30   28   30   30   29    32 #>  [1419,]   26   28   28   29   32   30   31   31   31    34 #>  [1420,]   26   28   29   30   30   28   30   30   29    32 #>  [1421,]   26   28   29   30   30   28   30   30   29    32 #>  [1422,]   26   28   29   30   30   28   30   30   29    32 #>  [1423,]   25   28   29   30   30   28   30   30   29    32 #>  [1424,]   26   28   29   30   30   28   30   30   29    32 #>  [1425,]   25   28   28   29   31   29   31   31   31    34 #>  [1426,]   26   28   28   29   32   30   31   31   31    34 #>  [1427,]   26   28   29   30   30   28   30   30   29    32 #>  [1428,]   26   28   28   29   32   30   31   31   31    34 #>  [1429,]   26   28   29   30   30   28   30   30   29    32 #>  [1430,]   26   28   29   30   30   28   30   30   29    32 #>  [1431,]   25   28   29   30   30   28   30   30   29    32 #>  [1432,]   25   28   29   30   30   28   30   30   29    32 #>  [1433,]   26   28   29   30   30   28   30   30   29    32 #>  [1434,]   26   28   28   29   32   30   31   31   30    33 #>  [1435,]   26   28   28   29   32   30   31   31   31    34 #>  [1436,]   26   28   29   30   30   28   30   30   29    32 #>  [1437,]   25   28   28   29   31   29   31   31   30    33 #>  [1438,]   26   28   28   29   32   30   31   31   31    34 #>  [1439,]   26   28   29   30   30   28   30   30   29    32 #>  [1440,]   25   28   29   30   30   28   30   30   29    32 #>  [1441,]   26   28   29   30   30   28   30   30   29    32 #>  [1442,]   26   28   28   29   32   30   31   31   30    33 #>  [1443,]   26   28   28   29   32   30   31   31   30    33 #>  [1444,]   25   28   29   30   30   28   30   30   29    32 #>  [1445,]   26   28   28   29   32   30   31   31   31    34 #>  [1446,]   25   28   28   29   31   29   31   31   31    34 #>  [1447,]   25   28   29   30   30   28   30   30   29    32 #>  [1448,]   26   28   29   30   30   28   30   30   29    32 #>  [1449,]   26   28   28   29   32   30   31   31   31    34 #>  [1450,]   26   28   29   30   30   28   30   30   29    32 #>  [1451,]   26   28   29   30   30   28   30   30   29    32 #>  [1452,]   25   28   28   29   31   29   31   31   31    34 #>  [1453,]   26   28   29   30   30   28   30   30   29    32 #>  [1454,]   26   28   29   30   30   28   30   30   29    32 #>  [1455,]   25   28   28   29   31   29   31   31   31    34 #>  [1456,]   26   28   28   29   32   30   31   31   31    34 #>  [1457,]   25   28   28   29   31   29   31   31   31    34 #>  [1458,]   26   28   29   30   30   28   30   30   29    32 #>  [1459,]   25   28   28   29   31   29   31   31   31    34 #>  [1460,]   25   28   29   30   30   28   30   30   29    32 #>  [1461,]   26   28   29   30   30   28   30   30   29    32 #>  [1462,]   26   28   28   29   32   30   31   31   31    34 #>  [1463,]   26   28   29   30   30   28   30   30   29    32 #>  [1464,]   26   28   28   29   32   30   31   31   31    34 #>  [1465,]   26   28   28   29   32   30   31   31   31    34 #>  [1466,]   26   28   28   29   32   30   31   31   31    34 #>  [1467,]   25   28   28   29   32   30   31   31   31    34 #>  [1468,]   25   28   28   29   31   29   31   31   31    34 #>  [1469,]   26   28   28   29   32   30   31   31   31    34 #>  [1470,]   26   28   29   30   30   28   30   30   29    32 #>  [1471,]   26   28   29   30   30   28   30   30   29    32 #>  [1472,]   25   28   28   29   31   29   31   31   31    34 #>  [1473,]   26   28   28   29   32   30   31   31   31    34 #>  [1474,]   25   28   29   30   30   28   30   30   29    32 #>  [1475,]   25   28   29   30   30   28   30   30   29    32 #>  [1476,]   25   28   29   30   30   28   30   30   29    32 #>  [1477,]   26   28   28   29   32   30   31   31   31    34 #>  [1478,]   25   28   29   30   30   28   30   30   29    32 #>  [1479,]   26   28   28   29   32   30   31   31   30    33 #>  [1480,]   25   28   29   30   30   28   30   30   29    32 #>  [1481,]   26   28   29   30   30   28   30   30   29    32 #>  [1482,]   26   28   28   29   32   30   31   31   31    34 #>  [1483,]   26   28   29   30   30   28   30   30   29    32 #>  [1484,]   26   28   29   30   30   28   30   30   29    32 #>  [1485,]   26   28   28   29   32   30   31   31   31    34 #>  [1486,]   25   28   29   30   30   28   30   30   29    32 #>  [1487,]   26   28   29   30   30   28   30   30   29    32 #>  [1488,]   26   28   29   30   30   28   30   30   29    32 #>  [1489,]   26   28   28   29   32   30   31   31   31    34 #>  [1490,]   26   28   29   30   30   28   30   30   29    32 #>  [1491,]   26   28   28   29   32   30   31   31   31    34 #>  [1492,]   25   28   29   30   30   28   30   30   29    32 #>  [1493,]   26   28   29   30   30   28   30   30   29    32 #>  [1494,]   26   28   28   29   32   30   31   31   30    33 #>  [1495,]   25   28   29   30   30   28   30   30   29    32 #>  [1496,]   25   28   28   29   31   29   31   31   31    34 #>  [1497,]   25   28   28   29   31   29   31   31   31    34 #>  [1498,]   25   28   28   29   31   29   31   31   31    34 #>  [1499,]   26   28   28   29   32   30   31   31   31    34 #>  [1500,]   26   28   28   29   32   30   31   31   30    33 #>  [1501,]   28   30   31   32   34   32   33   32   32    35 #>  [1502,]   28   30   31   32   34   32   33   32   32    35 #>  [1503,]   27   29   30   31   33   31   32   33   33    36 #>  [1504,]   27   29   30   31   33   31   32   34   33    36 #>  [1505,]   27   29   30   31   33   31   32   34   33    36 #>  [1506,]   28   30   31   32   34   32   33   32   32    35 #>  [1507,]   27   29   30   31   33   31   32   33   33    36 #>  [1508,]   27   29   30   31   33   31   32   34   33    36 #>  [1509,]   27   29   30   31   33   31   32   34   33    36 #>  [1510,]   27   29   30   31   33   31   32   34   33    36 #>  [1511,]   28   30   31   32   34   32   33   32   32    35 #>  [1512,]   27   29   30   31   33   31   32   34   33    36 #>  [1513,]   28   30   31   32   34   32   33   32   32    35 #>  [1514,]   28   30   31   32   34   32   33   32   32    35 #>  [1515,]   28   30   31   32   34   32   33   32   32    35 #>  [1516,]   28   30   31   32   34   32   33   32   32    35 #>  [1517,]   28   30   31   32   34   32   33   32   32    35 #>  [1518,]   27   29   30   31   33   31   32   34   33    36 #>  [1519,]   27   29   30   31   33   31   32   34   33    36 #>  [1520,]   27   29   30   31   33   31   32   34   33    36 #>  [1521,]   28   30   31   32   34   32   33   32   32    35 #>  [1522,]   28   30   31   32   34   32   33   32   32    35 #>  [1523,]   27   29   30   31   33   31   32   33   33    36 #>  [1524,]   27   29   30   31   33   31   32   34   33    36 #>  [1525,]   27   29   30   31   33   31   32   34   33    36 #>  [1526,]   28   30   31   32   34   32   33   32   32    35 #>  [1527,]   28   30   31   32   34   32   33   32   32    35 #>  [1528,]   27   29   30   31   33   31   32   34   33    36 #>  [1529,]   28   30   31   32   34   32   33   32   32    35 #>  [1530,]   27   29   30   31   33   31   32   33   33    36 #>  [1531,]   27   29   30   31   33   31   32   33   33    36 #>  [1532,]   27   29   30   31   33   31   32   34   33    36 #>  [1533,]   28   30   31   32   34   32   33   32   32    35 #>  [1534,]   27   29   30   31   33   31   32   34   33    36 #>  [1535,]   28   30   31   32   34   32   33   32   32    35 #>  [1536,]   27   29   30   31   33   31   32   34   33    36 #>  [1537,]   28   30   31   32   34   32   33   32   32    35 #>  [1538,]   27   29   30   31   33   31   32   34   33    36 #>  [1539,]   27   29   30   31   33   31   32   33   33    36 #>  [1540,]   27   29   30   31   33   31   32   34   33    36 #>  [1541,]   28   30   31   32   34   32   33   32   32    35 #>  [1542,]   27   29   30   31   33   31   32   34   33    36 #>  [1543,]   27   29   30   31   33   31   32   34   33    36 #>  [1544,]   28   30   31   32   34   32   33   32   32    35 #>  [1545,]   27   29   30   31   33   31   32   34   33    36 #>  [1546,]   27   29   30   31   33   31   32   34   33    36 #>  [1547,]   28   30   31   32   34   32   33   32   32    35 #>  [1548,]   27   29   30   31   33   31   32   34   33    36 #>  [1549,]   27   29   30   31   33   31   32   33   33    36 #>  [1550,]   28   30   31   32   34   32   33   32   32    35 #>  [1551,]   27   29   30   31   33   31   32   34   33    36 #>  [1552,]   28   30   31   32   34   32   33   32   32    35 #>  [1553,]   27   29   30   31   33   31   32   34   33    36 #>  [1554,]   27   29   30   31   33   31   32   33   33    36 #>  [1555,]   27   29   30   31   33   31   32   34   33    36 #>  [1556,]   27   29   30   31   33   31   32   34   33    36 #>  [1557,]   27   29   30   31   33   31   32   34   33    36 #>  [1558,]   28   30   31   32   34   32   33   32   32    35 #>  [1559,]   28   30   31   32   34   32   33   32   32    35 #>  [1560,]   27   29   30   31   33   31   32   34   33    36 #>  [1561,]   28   30   31   32   34   32   33   32   32    35 #>  [1562,]   27   29   30   31   33   31   32   33   33    36 #>  [1563,]   27   29   30   31   33   31   32   34   33    36 #>  [1564,]   27   29   30   31   33   31   32   34   33    36 #>  [1565,]   27   29   30   31   33   31   32   34   33    36 #>  [1566,]   27   29   30   31   33   31   32   34   33    36 #>  [1567,]   27   29   30   31   33   31   32   34   33    36 #>  [1568,]   28   30   31   32   34   32   33   32   32    35 #>  [1569,]   27   29   30   31   33   31   32   34   33    36 #>  [1570,]   28   30   31   32   34   32   33   32   32    35 #>  [1571,]   28   30   31   32   34   32   33   32   32    35 #>  [1572,]   27   29   30   31   33   31   32   34   33    36 #>  [1573,]   28   30   31   32   34   32   33   32   32    35 #>  [1574,]   27   29   30   31   33   31   32   34   33    36 #>  [1575,]   27   29   30   31   33   31   32   34   33    36 #>  [1576,]   28   30   31   32   34   32   33   32   32    35 #>  [1577,]   28   30   31   32   34   32   33   32   32    35 #>  [1578,]   27   29   30   31   33   31   32   34   33    36 #>  [1579,]   28   30   31   32   34   32   33   32   32    35 #>  [1580,]   27   29   30   31   33   31   32   33   33    36 #>  [1581,]   28   30   31   32   34   32   33   32   32    35 #>  [1582,]   27   29   30   31   33   31   32   34   33    36 #>  [1583,]   28   30   31   32   34   32   33   32   32    35 #>  [1584,]   28   30   31   32   34   32   33   32   32    35 #>  [1585,]   27   29   30   31   33   31   32   34   33    36 #>  [1586,]   28   30   31   32   34   32   33   32   32    35 #>  [1587,]   27   29   30   31   33   31   32   34   33    36 #>  [1588,]   27   29   30   31   33   31   32   34   33    36 #>  [1589,]   27   29   30   31   33   31   32   34   33    36 #>  [1590,]   28   30   31   32   34   32   33   32   32    35 #>  [1591,]   27   29   30   31   33   31   32   34   33    36 #>  [1592,]   27   29   30   31   33   31   32   34   33    36 #>  [1593,]   28   30   31   32   34   32   33   32   32    35 #>  [1594,]   28   30   31   32   34   32   33   32   32    35 #>  [1595,]   27   29   30   31   33   31   32   33   33    36 #>  [1596,]   28   30   31   32   34   32   33   32   32    35 #>  [1597,]   27   29   30   31   33   31   32   34   33    36 #>  [1598,]   27   29   30   31   33   31   32   33   33    36 #>  [1599,]   28   30   31   32   34   32   33   32   32    35 #>  [1600,]   28   30   31   32   34   32   33   32   32    35 #>  [1601,]   29   31   32   33   37   35   37   37   35    38 #>  [1602,]   30   33   33   34   35   33   34   35   34    37 #>  [1603,]   30   32   33   34   35   33   34   35   34    37 #>  [1604,]   29   31   32   33   36   34   35   36   35    38 #>  [1605,]   30   32   33   34   35   33   34   35   34    37 #>  [1606,]   30   32   33   34   35   33   34   35   34    37 #>  [1607,]   30   33   33   34   35   33   34   35   34    37 #>  [1608,]   29   31   32   33   36   34   35   36   35    38 #>  [1609,]   29   31   32   33   37   35   36   37   35    38 #>  [1610,]   30   33   33   34   35   33   34   35   34    37 #>  [1611,]   29   31   32   33   37   35   36   37   35    38 #>  [1612,]   30   32   33   34   35   33   34   35   34    37 #>  [1613,]   29   31   32   33   37   35   37   37   35    38 #>  [1614,]   29   31   32   33   37   35   37   37   35    38 #>  [1615,]   30   33   33   34   35   33   34   35   34    37 #>  [1616,]   30   33   33   34   35   33   34   35   34    37 #>  [1617,]   29   31   32   33   37   35   37   37   35    38 #>  [1618,]   30   33   33   34   35   33   34   35   34    37 #>  [1619,]   30   32   33   34   35   33   34   35   34    37 #>  [1620,]   30   32   33   34   35   33   34   35   34    37 #>  [1621,]   29   31   32   33   37   35   37   37   35    38 #>  [1622,]   29   31   32   33   37   35   36   37   35    38 #>  [1623,]   30   33   33   34   35   33   34   35   34    37 #>  [1624,]   30   32   33   34   35   33   34   35   34    37 #>  [1625,]   30   33   33   34   35   33   34   35   34    37 #>  [1626,]   30   32   33   34   35   33   34   35   34    37 #>  [1627,]   29   31   32   33   37   35   36   37   35    38 #>  [1628,]   30   33   33   34   35   33   34   35   34    37 #>  [1629,]   30   32   33   34   35   33   34   35   34    37 #>  [1630,]   29   31   32   33   37   35   36   37   35    38 #>  [1631,]   30   33   33   34   35   33   34   35   34    37 #>  [1632,]   30   32   33   34   35   33   34   35   34    37 #>  [1633,]   30   32   33   34   35   33   34   35   34    37 #>  [1634,]   30   32   33   34   35   33   34   35   34    37 #>  [1635,]   29   31   32   33   37   35   37   37   35    38 #>  [1636,]   30   32   33   34   35   33   34   35   34    37 #>  [1637,]   30   33   33   34   35   33   34   35   34    37 #>  [1638,]   30   33   33   34   35   33   34   35   34    37 #>  [1639,]   30   33   33   34   35   33   34   35   34    37 #>  [1640,]   30   32   33   34   35   33   34   35   34    37 #>  [1641,]   30   32   33   34   35   33   34   35   34    37 #>  [1642,]   30   32   33   34   35   33   34   35   34    37 #>  [1643,]   29   31   32   33   37   35   36   37   35    38 #>  [1644,]   29   31   32   33   37   35   37   37   35    38 #>  [1645,]   29   31   32   33   37   35   36   37   35    38 #>  [1646,]   29   31   32   33   37   35   36   37   35    38 #>  [1647,]   30   33   33   34   35   33   34   35   34    37 #>  [1648,]   30   32   33   34   35   33   34   35   34    37 #>  [1649,]   29   31   32   33   37   35   36   37   35    38 #>  [1650,]   30   33   33   34   35   33   34   35   34    37 #>  [1651,]   30   32   33   34   35   33   34   35   34    37 #>  [1652,]   29   31   32   33   36   34   35   36   35    38 #>  [1653,]   30   33   33   34   35   33   34   35   34    37 #>  [1654,]   29   31   32   33   37   35   36   37   35    38 #>  [1655,]   29   31   32   33   37   35   36   37   35    38 #>  [1656,]   30   33   33   34   35   33   34   35   34    37 #>  [1657,]   30   32   33   34   35   33   34   35   34    37 #>  [1658,]   29   31   32   33   37   35   36   37   35    38 #>  [1659,]   30   33   33   34   35   33   34   35   34    37 #>  [1660,]   30   32   33   34   35   33   34   35   34    37 #>  [1661,]   30   33   33   34   35   33   34   35   34    37 #>  [1662,]   30   32   33   34   35   33   34   35   34    37 #>  [1663,]   30   32   33   34   35   33   34   35   34    37 #>  [1664,]   30   33   33   34   35   33   34   35   34    37 #>  [1665,]   30   33   33   34   35   33   34   35   34    37 #>  [1666,]   29   31   32   33   37   35   36   37   35    38 #>  [1667,]   30   32   33   34   35   33   34   35   34    37 #>  [1668,]   29   31   32   33   36   34   35   36   35    38 #>  [1669,]   29   31   32   33   37   35   36   37   35    38 #>  [1670,]   30   33   33   34   35   33   34   35   34    37 #>  [1671,]   30   33   33   34   35   33   34   35   34    37 #>  [1672,]   30   33   33   34   35   33   34   35   34    37 #>  [1673,]   30   33   33   34   35   33   34   35   34    37 #>  [1674,]   30   33   33   34   35   33   34   35   34    37 #>  [1675,]   30   33   33   34   35   33   34   35   34    37 #>  [1676,]   30   33   33   34   35   33   34   35   34    37 #>  [1677,]   30   33   33   34   35   33   34   35   34    37 #>  [1678,]   30   32   33   34   35   33   34   35   34    37 #>  [1679,]   29   31   32   33   37   35   37   37   35    38 #>  [1680,]   29   31   32   33   37   35   36   37   35    38 #>  [1681,]   29   31   32   33   37   35   37   37   35    38 #>  [1682,]   29   31   32   33   37   35   36   37   35    38 #>  [1683,]   29   31   32   33   37   35   37   37   35    38 #>  [1684,]   30   33   33   34   35   33   34   35   34    37 #>  [1685,]   30   33   33   34   35   33   34   35   34    37 #>  [1686,]   30   33   33   34   35   33   34   35   34    37 #>  [1687,]   29   31   32   33   37   35   36   37   35    38 #>  [1688,]   29   31   32   33   37   35   36   37   35    38 #>  [1689,]   29   31   32   33   37   35   36   37   35    38 #>  [1690,]   29   31   32   33   37   35   36   37   35    38 #>  [1691,]   29   31   32   33   37   35   36   37   35    38 #>  [1692,]   29   31   32   33   37   35   36   37   35    38 #>  [1693,]   30   32   33   34   35   33   34   35   34    37 #>  [1694,]   30   33   33   34   35   33   34   35   34    37 #>  [1695,]   29   31   32   33   37   35   36   37   35    38 #>  [1696,]   29   31   32   33   36   34   35   36   35    38 #>  [1697,]   30   32   33   34   35   33   34   35   34    37 #>  [1698,]   30   32   33   34   35   33   34   35   34    37 #>  [1699,]   29   31   32   33   37   35   37   37   35    38 #>  [1700,]   30   33   33   34   35   33   34   35   34    37 #>  [1701,]   32   35   35   36   39   37   39   39   37    40 #>  [1702,]   31   34   34   35   38   36   38   38   36    39 #>  [1703,]   31   34   34   35   38   36   38   38   36    39 #>  [1704,]   32   35   35   36   39   37   39   39   37    40 #>  [1705,]   32   35   35   36   39   37   39   39   37    40 #>  [1706,]   31   34   34   35   38   36   38   38   36    39 #>  [1707,]   31   34   34   35   38   36   38   38   36    39 #>  [1708,]   31   34   34   35   38   36   38   38   36    39 #>  [1709,]   31   34   34   35   38   36   38   38   36    39 #>  [1710,]   32   35   35   36   39   37   39   39   37    40 #>  [1711,]   32   35   35   36   39   37   39   39   37    40 #>  [1712,]   32   35   35   36   39   37   39   39   37    40 #>  [1713,]   32   35   35   36   39   37   39   39   37    40 #>  [1714,]   32   35   35   36   39   37   39   39   37    40 #>  [1715,]   32   35   35   36   39   37   39   39   37    40 #>  [1716,]   32   35   35   36   39   37   39   39   37    40 #>  [1717,]   32   35   35   36   39   37   39   39   37    40 #>  [1718,]   32   35   35   36   39   37   39   39   37    40 #>  [1719,]   32   35   35   36   39   37   39   39   37    40 #>  [1720,]   31   34   34   35   38   36   38   38   36    39 #>  [1721,]   31   34   34   35   38   36   38   38   36    39 #>  [1722,]   32   35   35   36   39   37   39   39   37    40 #>  [1723,]   31   34   34   35   38   36   38   38   36    39 #>  [1724,]   32   35   35   36   39   37   39   39   37    40 #>  [1725,]   31   34   34   35   38   36   38   38   36    39 #>  [1726,]   32   35   35   36   39   37   39   39   37    40 #>  [1727,]   32   35   35   36   39   37   39   39   37    40 #>  [1728,]   32   35   35   36   39   37   39   39   37    40 #>  [1729,]   31   34   34   35   38   36   38   38   36    39 #>  [1730,]   32   35   35   36   39   37   39   39   37    40 #>  [1731,]   32   35   35   36   39   37   39   39   37    40 #>  [1732,]   32   35   35   36   39   37   39   39   37    40 #>  [1733,]   32   35   35   36   39   37   39   39   37    40 #>  [1734,]   31   34   34   35   38   36   38   38   36    39 #>  [1735,]   31   34   34   35   38   36   38   38   36    39 #>  [1736,]   31   34   34   35   38   36   38   38   36    39 #>  [1737,]   31   34   34   35   38   36   38   38   36    39 #>  [1738,]   32   35   35   36   39   37   39   39   37    40 #>  [1739,]   32   35   35   36   39   37   39   39   37    40 #>  [1740,]   32   35   35   36   39   37   39   39   37    40 #>  [1741,]   31   34   34   35   38   36   38   38   36    39 #>  [1742,]   31   34   34   35   38   36   38   38   36    39 #>  [1743,]   32   35   35   36   39   37   39   39   37    40 #>  [1744,]   31   34   34   35   38   36   38   38   36    39 #>  [1745,]   31   34   34   35   38   36   38   38   36    39 #>  [1746,]   32   35   35   36   39   37   39   39   37    40 #>  [1747,]   32   35   35   36   39   37   39   39   37    40 #>  [1748,]   32   35   35   36   39   37   39   39   37    40 #>  [1749,]   32   35   35   36   39   37   39   39   37    40 #>  [1750,]   31   34   34   35   38   36   38   38   36    39 #>  [1751,]   32   35   35   36   39   37   39   39   37    40 #>  [1752,]   32   35   35   36   39   37   39   39   37    40 #>  [1753,]   31   34   34   35   38   36   38   38   36    39 #>  [1754,]   31   34   34   35   38   36   38   38   36    39 #>  [1755,]   31   34   34   35   38   36   38   38   36    39 #>  [1756,]   31   34   34   35   38   36   38   38   36    39 #>  [1757,]   31   34   34   35   38   36   38   38   36    39 #>  [1758,]   32   35   35   36   39   37   39   39   37    40 #>  [1759,]   32   35   35   36   39   37   39   39   37    40 #>  [1760,]   31   34   34   35   38   36   38   38   36    39 #>  [1761,]   32   35   35   36   39   37   39   39   37    40 #>  [1762,]   31   34   34   35   38   36   38   38   36    39 #>  [1763,]   32   35   35   36   39   37   39   39   37    40 #>  [1764,]   31   34   34   35   38   36   38   38   36    39 #>  [1765,]   31   34   34   35   38   36   38   38   36    39 #>  [1766,]   32   35   35   36   39   37   39   39   37    40 #>  [1767,]   31   34   34   35   38   36   38   38   36    39 #>  [1768,]   32   35   35   36   39   37   39   39   37    40 #>  [1769,]   32   35   35   36   39   37   39   39   37    40 #>  [1770,]   32   35   35   36   39   37   39   39   37    40 #>  [1771,]   32   35   35   36   39   37   39   39   37    40 #>  [1772,]   31   34   34   35   38   36   38   38   36    39 #>  [1773,]   31   34   34   35   38   36   38   38   36    39 #>  [1774,]   31   34   34   35   38   36   38   38   36    39 #>  [1775,]   32   35   35   36   39   37   39   39   37    40 #>  [1776,]   31   34   34   35   38   36   38   38   36    39 #>  [1777,]   32   35   35   36   39   37   39   39   37    40 #>  [1778,]   32   35   35   36   39   37   39   39   37    40 #>  [1779,]   32   35   35   36   39   37   39   39   37    40 #>  [1780,]   31   34   34   35   38   36   38   38   36    39 #>  [1781,]   31   34   34   35   38   36   38   38   36    39 #>  [1782,]   31   34   34   35   38   36   38   38   36    39 #>  [1783,]   32   35   35   36   39   37   39   39   37    40 #>  [1784,]   31   34   34   35   38   36   38   38   36    39 #>  [1785,]   31   34   34   35   38   36   38   38   36    39 #>  [1786,]   31   34   34   35   38   36   38   38   36    39 #>  [1787,]   32   35   35   36   39   37   39   39   37    40 #>  [1788,]   31   34   34   35   38   36   38   38   36    39 #>  [1789,]   31   34   34   35   38   36   38   38   36    39 #>  [1790,]   32   35   35   36   39   37   39   39   37    40 #>  [1791,]   32   35   35   36   39   37   39   39   37    40 #>  [1792,]   32   35   35   36   39   37   39   39   37    40 #>  [1793,]   32   35   35   36   39   37   39   39   37    40 #>  [1794,]   31   34   34   35   38   36   38   38   36    39 #>  [1795,]   32   35   35   36   39   37   39   39   37    40 #>  [1796,]   32   35   35   36   39   37   39   39   37    40 #>  [1797,]   31   34   34   35   38   36   38   38   36    39 #>  [1798,]   31   34   34   35   38   36   38   38   36    39 #>  [1799,]   31   34   34   35   38   36   38   38   36    39 #>  [1800,]   32   35   35   36   39   37   39   39   37    40 #>  [1801,]   33   36   37   37   40   38   40   41   39    42 #>  [1802,]   34   37   36   39   42   40   42   40   38    41 #>  [1803,]   33   36   37   37   40   38   40   41   39    42 #>  [1804,]   33   36   38   38   41   39   41   41   39    42 #>  [1805,]   34   37   36   39   42   40   42   40   38    41 #>  [1806,]   33   36   37   37   40   38   40   41   39    42 #>  [1807,]   34   37   36   39   42   40   42   40   38    41 #>  [1808,]   33   36   38   38   41   39   41   41   39    42 #>  [1809,]   34   37   36   40   42   40   42   40   38    41 #>  [1810,]   34   37   36   39   42   40   42   40   38    41 #>  [1811,]   33   36   37   37   40   38   40   41   39    42 #>  [1812,]   34   37   36   40   42   40   42   40   38    41 #>  [1813,]   34   37   36   39   42   40   42   40   38    41 #>  [1814,]   33   36   37   37   40   38   40   41   39    42 #>  [1815,]   33   36   38   38   41   39   41   41   39    42 #>  [1816,]   33   36   37   37   40   38   40   41   39    42 #>  [1817,]   34   37   36   39   42   40   42   40   38    41 #>  [1818,]   34   37   36   39   42   40   42   40   38    41 #>  [1819,]   33   36   37   37   40   38   40   41   39    42 #>  [1820,]   34   37   36   39   42   40   42   40   38    41 #>  [1821,]   34   37   36   39   42   40   42   40   38    41 #>  [1822,]   34   37   36   39   42   40   42   40   38    41 #>  [1823,]   34   37   36   39   42   40   42   40   38    41 #>  [1824,]   34   37   36   39   42   40   42   40   38    41 #>  [1825,]   34   37   36   39   42   40   42   40   38    41 #>  [1826,]   33   36   37   37   40   38   40   41   39    42 #>  [1827,]   34   37   36   39   42   40   42   40   38    41 #>  [1828,]   33   36   37   37   40   38   40   41   39    42 #>  [1829,]   34   37   36   39   42   40   42   40   38    41 #>  [1830,]   34   37   36   39   42   40   42   40   38    41 #>  [1831,]   34   37   36   39   42   40   42   40   38    41 #>  [1832,]   34   37   36   39   42   40   42   40   38    41 #>  [1833,]   34   37   36   40   42   40   42   40   38    41 #>  [1834,]   33   36   37   37   40   38   40   41   39    42 #>  [1835,]   33   36   37   37   40   38   40   41   39    42 #>  [1836,]   34   37   36   39   42   40   42   40   38    41 #>  [1837,]   33   36   37   37   40   38   40   41   39    42 #>  [1838,]   33   36   37   37   40   38   40   41   39    42 #>  [1839,]   34   37   36   39   42   40   42   40   38    41 #>  [1840,]   34   37   36   39   42   40   42   40   38    41 #>  [1841,]   34   37   36   39   42   40   42   40   38    41 #>  [1842,]   33   36   37   37   40   38   40   41   39    42 #>  [1843,]   34   37   36   40   42   40   42   40   38    41 #>  [1844,]   34   37   36   39   42   40   42   40   38    41 #>  [1845,]   33   36   37   37   40   38   40   41   39    42 #>  [1846,]   33   36   38   38   41   39   41   41   39    42 #>  [1847,]   34   37   36   39   42   40   42   40   38    41 #>  [1848,]   34   37   36   39   42   40   42   40   38    41 #>  [1849,]   33   36   37   37   40   38   40   41   39    42 #>  [1850,]   34   37   36   39   42   40   42   40   38    41 #>  [1851,]   34   37   36   40   42   40   42   40   38    41 #>  [1852,]   33   36   37   37   40   38   40   41   39    42 #>  [1853,]   34   37   36   39   42   40   42   40   38    41 #>  [1854,]   34   37   36   39   42   40   42   40   38    41 #>  [1855,]   33   36   38   38   41   39   41   41   39    42 #>  [1856,]   33   36   37   37   40   38   40   41   39    42 #>  [1857,]   33   36   38   38   41   39   41   41   39    42 #>  [1858,]   34   37   36   39   42   40   42   40   38    41 #>  [1859,]   33   36   37   37   40   38   40   41   39    42 #>  [1860,]   34   37   36   39   42   40   42   40   38    41 #>  [1861,]   34   37   36   40   42   40   42   40   38    41 #>  [1862,]   33   36   38   38   41   39   41   41   39    42 #>  [1863,]   34   37   36   39   42   40   42   40   38    41 #>  [1864,]   33   36   37   37   40   38   40   41   39    42 #>  [1865,]   33   36   37   37   40   38   40   41   39    42 #>  [1866,]   34   37   36   40   42   40   42   40   38    41 #>  [1867,]   33   36   38   38   41   39   41   41   39    42 #>  [1868,]   33   36   37   37   40   38   40   41   39    42 #>  [1869,]   33   36   37   37   40   38   40   41   39    42 #>  [1870,]   34   37   36   39   42   40   42   40   38    41 #>  [1871,]   34   37   36   39   42   40   42   40   38    41 #>  [1872,]   33   36   37   37   40   38   40   41   39    42 #>  [1873,]   33   36   37   37   40   38   40   41   39    42 #>  [1874,]   34   37   36   39   42   40   42   40   38    41 #>  [1875,]   34   37   36   39   42   40   42   40   38    41 #>  [1876,]   34   37   36   40   42   40   42   40   38    41 #>  [1877,]   33   36   37   37   40   38   40   41   39    42 #>  [1878,]   34   37   36   39   42   40   42   40   38    41 #>  [1879,]   33   36   37   37   40   38   40   41   39    42 #>  [1880,]   34   37   36   39   42   40   42   40   38    41 #>  [1881,]   34   37   36   40   42   40   42   40   38    41 #>  [1882,]   33   36   38   38   41   39   41   41   39    42 #>  [1883,]   34   37   36   39   42   40   42   40   38    41 #>  [1884,]   34   37   36   39   42   40   42   40   38    41 #>  [1885,]   33   36   38   38   41   39   41   41   39    42 #>  [1886,]   34   37   36   39   42   40   42   40   38    41 #>  [1887,]   34   37   36   39   42   40   42   40   38    41 #>  [1888,]   34   37   36   39   42   40   42   40   38    41 #>  [1889,]   33   36   37   37   40   38   40   41   39    42 #>  [1890,]   34   37   36   39   42   40   42   40   38    41 #>  [1891,]   33   36   38   38   41   39   41   41   39    42 #>  [1892,]   34   37   36   39   42   40   42   40   38    41 #>  [1893,]   34   37   36   39   42   40   42   40   38    41 #>  [1894,]   33   36   37   37   40   38   40   41   39    42 #>  [1895,]   34   37   36   39   42   40   42   40   38    41 #>  [1896,]   33   36   37   37   40   38   40   41   39    42 #>  [1897,]   33   36   37   37   40   38   40   41   39    42 #>  [1898,]   33   36   38   38   41   39   41   41   39    42 #>  [1899,]   34   37   36   39   42   40   42   40   38    41 #>  [1900,]   33   36   37   37   40   38   40   41   39    42 #>  [1901,]   35   38   39   41   43   41   44   43   41    44 #>  [1902,]   36   39   40   42   44   42   43   42   40    43 #>  [1903,]   35   38   39   41   43   41   45   44   42    44 #>  [1904,]   35   38   39   41   43   41   44   43   41    44 #>  [1905,]   35   38   39   41   43   41   44   43   41    44 #>  [1906,]   35   38   39   41   43   41   45   44   42    44 #>  [1907,]   35   38   39   41   43   41   45   44   42    44 #>  [1908,]   35   38   39   41   43   41   44   43   41    44 #>  [1909,]   36   39   40   42   44   42   43   42   40    43 #>  [1910,]   36   39   40   42   44   42   43   42   40    43 #>  [1911,]   35   38   39   41   43   41   44   43   41    44 #>  [1912,]   36   39   40   42   44   42   43   42   40    43 #>  [1913,]   36   39   40   42   44   42   43   42   40    43 #>  [1914,]   35   38   39   41   43   41   44   43   41    44 #>  [1915,]   35   38   39   41   43   41   44   43   41    44 #>  [1916,]   35   38   39   41   43   41   44   43   41    44 #>  [1917,]   36   39   40   42   44   42   43   42   40    43 #>  [1918,]   35   38   39   41   43   41   45   44   42    44 #>  [1919,]   35   38   39   41   43   41   45   44   42    44 #>  [1920,]   35   38   39   41   43   41   45   44   42    44 #>  [1921,]   36   39   40   42   44   42   43   42   40    43 #>  [1922,]   35   38   39   41   43   41   44   43   41    44 #>  [1923,]   35   38   39   41   43   41   45   44   42    44 #>  [1924,]   36   39   40   42   44   42   43   42   40    43 #>  [1925,]   35   38   39   41   43   41   45   44   42    44 #>  [1926,]   35   38   39   41   43   41   44   43   41    44 #>  [1927,]   35   38   39   41   43   41   44   43   41    44 #>  [1928,]   35   38   39   41   43   41   45   44   42    44 #>  [1929,]   36   39   40   42   44   42   43   42   40    43 #>  [1930,]   35   38   39   41   43   41   44   43   41    44 #>  [1931,]   35   38   39   41   43   41   45   44   42    44 #>  [1932,]   36   39   40   42   44   42   43   42   40    43 #>  [1933,]   36   39   40   42   44   42   43   42   40    43 #>  [1934,]   35   38   39   41   43   41   45   44   42    44 #>  [1935,]   35   38   39   41   43   41   44   43   41    44 #>  [1936,]   35   38   39   41   43   41   44   43   41    44 #>  [1937,]   35   38   39   41   43   41   44   43   41    44 #>  [1938,]   35   38   39   41   43   41   44   43   41    44 #>  [1939,]   35   38   39   41   43   41   44   43   41    44 #>  [1940,]   36   39   40   42   44   42   43   42   40    43 #>  [1941,]   35   38   39   41   43   41   44   43   41    44 #>  [1942,]   35   38   39   41   43   41   45   44   42    44 #>  [1943,]   35   38   39   41   43   41   44   43   41    44 #>  [1944,]   35   38   39   41   43   41   44   43   41    44 #>  [1945,]   35   38   39   41   43   41   44   43   41    44 #>  [1946,]   35   38   39   41   43   41   44   43   41    44 #>  [1947,]   35   38   39   41   43   41   45   44   42    44 #>  [1948,]   35   38   39   41   43   41   45   44   42    44 #>  [1949,]   35   38   39   41   43   41   44   43   41    44 #>  [1950,]   35   38   39   41   43   41   45   44   42    44 #>  [1951,]   35   38   39   41   43   41   44   43   41    44 #>  [1952,]   35   38   39   41   43   41   44   43   41    44 #>  [1953,]   36   39   40   42   44   42   43   42   40    43 #>  [1954,]   35   38   39   41   43   41   44   43   41    44 #>  [1955,]   35   38   39   41   43   41   44   43   41    44 #>  [1956,]   35   38   39   41   43   41   45   44   42    44 #>  [1957,]   35   38   39   41   43   41   45   44   42    44 #>  [1958,]   35   38   39   41   43   41   44   43   41    44 #>  [1959,]   35   38   39   41   43   41   44   43   41    44 #>  [1960,]   36   39   40   42   44   42   43   42   40    43 #>  [1961,]   36   39   40   42   44   42   43   42   40    43 #>  [1962,]   35   38   39   41   43   41   44   43   41    44 #>  [1963,]   36   39   40   42   44   42   43   42   40    43 #>  [1964,]   35   38   39   41   43   41   45   44   42    44 #>  [1965,]   35   38   39   41   43   41   45   44   42    44 #>  [1966,]   35   38   39   41   43   41   44   43   41    44 #>  [1967,]   35   38   39   41   43   41   44   43   41    44 #>  [1968,]   35   38   39   41   43   41   44   43   41    44 #>  [1969,]   35   38   39   41   43   41   44   43   41    44 #>  [1970,]   36   39   40   42   44   42   43   42   40    43 #>  [1971,]   35   38   39   41   43   41   45   44   42    44 #>  [1972,]   35   38   39   41   43   41   44   43   41    44 #>  [1973,]   35   38   39   41   43   41   45   44   42    44 #>  [1974,]   35   38   39   41   43   41   44   43   41    44 #>  [1975,]   36   39   40   42   44   42   43   42   40    43 #>  [1976,]   35   38   39   41   43   41   44   43   41    44 #>  [1977,]   35   38   39   41   43   41   45   44   42    44 #>  [1978,]   35   38   39   41   43   41   45   44   42    44 #>  [1979,]   35   38   39   41   43   41   44   43   41    44 #>  [1980,]   36   39   40   42   44   42   43   42   40    43 #>  [1981,]   36   39   40   42   44   42   43   42   40    43 #>  [1982,]   35   38   39   41   43   41   44   43   41    44 #>  [1983,]   36   39   40   42   44   42   43   42   40    43 #>  [1984,]   35   38   39   41   43   41   45   44   42    44 #>  [1985,]   35   38   39   41   43   41   44   43   41    44 #>  [1986,]   36   39   40   42   44   42   43   42   40    43 #>  [1987,]   35   38   39   41   43   41   44   43   41    44 #>  [1988,]   35   38   39   41   43   41   44   43   41    44 #>  [1989,]   35   38   39   41   43   41   44   43   41    44 #>  [1990,]   35   38   39   41   43   41   44   43   41    44 #>  [1991,]   35   38   39   41   43   41   44   43   41    44 #>  [1992,]   35   38   39   41   43   41   44   43   41    44 #>  [1993,]   35   38   39   41   43   41   45   44   42    44 #>  [1994,]   35   38   39   41   43   41   44   43   41    44 #>  [1995,]   35   38   39   41   43   41   44   43   41    44 #>  [1996,]   35   38   39   41   43   41   44   43   41    44 #>  [1997,]   35   38   39   41   43   41   45   44   42    44 #>  [1998,]   35   38   39   41   43   41   45   44   42    44 #>  [1999,]   35   38   39   41   43   41   44   43   41    44 #>  [2000,]   35   38   39   41   43   41   45   44   42    44 #>  [2001,]   38   40   42   44   46   44   47   46   44    45 #>  [2002,]   38   40   41   43   45   43   46   45   43    46 #>  [2003,]   37   40   41   43   45   43   46   45   43    46 #>  [2004,]   38   40   42   45   47   45   47   46   44    45 #>  [2005,]   37   40   41   43   45   43   46   45   43    46 #>  [2006,]   37   40   41   43   45   43   46   45   43    46 #>  [2007,]   38   40   42   44   46   44   47   46   44    45 #>  [2008,]   38   40   42   44   46   44   47   46   44    45 #>  [2009,]   38   40   42   44   46   44   47   46   44    45 #>  [2010,]   38   40   42   45   47   45   47   46   44    45 #>  [2011,]   37   40   41   43   45   43   46   45   43    46 #>  [2012,]   37   40   41   43   45   43   46   45   43    46 #>  [2013,]   38   40   42   44   46   44   47   46   44    45 #>  [2014,]   37   40   41   43   45   43   46   45   43    46 #>  [2015,]   38   40   42   44   46   44   47   46   44    45 #>  [2016,]   38   40   42   44   46   44   47   46   44    45 #>  [2017,]   38   40   42   44   46   44   47   46   44    45 #>  [2018,]   38   40   42   45   47   45   47   46   44    45 #>  [2019,]   37   40   41   43   45   43   46   45   43    46 #>  [2020,]   37   40   41   43   45   43   46   45   43    47 #>  [2021,]   38   40   42   44   46   44   47   46   44    45 #>  [2022,]   37   40   41   43   45   43   46   45   43    46 #>  [2023,]   38   40   42   44   46   44   47   46   44    45 #>  [2024,]   37   40   41   43   45   43   46   45   43    46 #>  [2025,]   38   40   42   45   47   45   47   46   44    45 #>  [2026,]   37   40   41   43   45   43   46   45   43    46 #>  [2027,]   38   40   42   44   46   44   47   46   44    45 #>  [2028,]   38   40   42   44   46   44   47   46   44    45 #>  [2029,]   37   40   41   43   45   43   46   45   43    46 #>  [2030,]   37   40   41   43   45   43   46   45   43    46 #>  [2031,]   38   40   41   43   45   43   46   45   43    46 #>  [2032,]   37   40   41   43   45   43   46   45   43    46 #>  [2033,]   37   40   41   43   45   43   46   45   43    47 #>  [2034,]   37   40   41   43   45   43   46   45   43    46 #>  [2035,]   37   40   41   43   45   43   46   45   43    46 #>  [2036,]   37   40   41   43   45   43   46   45   43    47 #>  [2037,]   38   40   42   44   46   44   47   46   44    45 #>  [2038,]   38   40   42   44   46   44   47   46   44    45 #>  [2039,]   38   40   42   45   47   45   47   46   44    45 #>  [2040,]   37   40   41   43   45   43   46   45   43    46 #>  [2041,]   37   40   41   43   45   43   46   45   43    46 #>  [2042,]   37   40   41   43   45   43   46   45   43    47 #>  [2043,]   38   40   42   45   47   45   47   46   44    45 #>  [2044,]   38   40   42   44   46   44   47   46   44    45 #>  [2045,]   38   40   42   45   47   45   47   46   44    45 #>  [2046,]   38   40   42   44   46   44   47   46   44    45 #>  [2047,]   38   40   42   44   46   44   47   46   44    45 #>  [2048,]   37   40   41   43   45   43   46   45   43    46 #>  [2049,]   38   40   41   43   45   43   46   45   43    46 #>  [2050,]   38   40   41   43   45   43   46   45   43    46 #>  [2051,]   37   40   41   43   45   43   46   45   43    47 #>  [2052,]   37   40   41   43   45   43   46   45   43    46 #>  [2053,]   38   40   42   45   47   45   47   46   44    45 #>  [2054,]   37   40   41   43   45   43   46   45   43    47 #>  [2055,]   37   40   41   43   45   43   46   45   43    46 #>  [2056,]   38   40   42   44   46   44   47   46   44    45 #>  [2057,]   37   40   41   43   45   43   46   45   43    46 #>  [2058,]   37   40   41   43   45   43   46   45   43    46 #>  [2059,]   38   40   41   43   45   43   46   45   43    46 #>  [2060,]   37   40   41   43   45   43   46   45   43    46 #>  [2061,]   38   40   42   44   46   44   47   46   44    45 #>  [2062,]   37   40   41   43   45   43   46   45   43    46 #>  [2063,]   37   40   41   43   45   43   46   45   43    46 #>  [2064,]   38   40   42   44   46   44   47   46   44    45 #>  [2065,]   38   40   41   43   45   43   46   45   43    47 #>  [2066,]   37   40   41   43   45   43   46   45   43    47 #>  [2067,]   37   40   41   43   45   43   46   45   43    46 #>  [2068,]   37   40   41   43   45   43   46   45   43    46 #>  [2069,]   37   40   41   43   45   43   46   45   43    46 #>  [2070,]   38   40   42   44   46   44   47   46   44    45 #>  [2071,]   38   40   42   44   46   44   47   46   44    45 #>  [2072,]   38   40   42   44   46   44   47   46   44    45 #>  [2073,]   38   40   42   45   47   45   47   46   44    45 #>  [2074,]   38   40   42   45   47   45   47   46   44    45 #>  [2075,]   38   40   42   45   47   45   47   46   44    45 #>  [2076,]   38   40   42   45   47   45   47   46   44    45 #>  [2077,]   38   40   42   45   47   45   47   46   44    45 #>  [2078,]   37   40   41   43   45   43   46   45   43    46 #>  [2079,]   38   40   42   44   46   44   47   46   44    45 #>  [2080,]   37   40   41   43   45   43   46   45   43    46 #>  [2081,]   37   40   41   43   45   43   46   45   43    46 #>  [2082,]   38   40   42   44   46   44   47   46   44    45 #>  [2083,]   37   40   41   43   45   43   46   45   43    47 #>  [2084,]   38   40   42   44   46   44   47   46   44    45 #>  [2085,]   38   40   41   43   45   43   46   45   43    47 #>  [2086,]   38   40   42   44   46   44   47   46   44    45 #>  [2087,]   38   40   42   44   46   44   47   46   44    45 #>  [2088,]   38   40   42   44   46   44   47   46   44    45 #>  [2089,]   37   40   41   43   45   43   46   45   43    46 #>  [2090,]   38   40   42   44   46   44   47   46   44    45 #>  [2091,]   37   40   41   43   45   43   46   45   43    47 #>  [2092,]   38   40   41   43   45   43   46   45   43    46 #>  [2093,]   37   40   41   43   45   43   46   45   43    47 #>  [2094,]   38   40   42   44   46   44   47   46   44    45 #>  [2095,]   38   40   42   45   47   45   47   46   44    45 #>  [2096,]   38   40   42   44   46   44   47   46   44    45 #>  [2097,]   37   40   41   43   45   43   46   45   43    46 #>  [2098,]   37   40   41   43   45   43   46   45   43    46 #>  [2099,]   37   40   41   43   45   43   46   45   43    46 #>  [2100,]   38   40   42   44   46   44   47   46   44    45 #>  [2101,]   39   41   43   46   48   46   48   47   45    48 #>  [2102,]   40   42   44   47   49   47   49   48   46    49 #>  [2103,]   39   41   43   46   48   46   48   47   45    48 #>  [2104,]   39   41   43   46   48   46   48   47   45    48 #>  [2105,]   39   41   43   46   48   46   48   47   45    48 #>  [2106,]   39   41   43   46   48   46   48   47   45    48 #>  [2107,]   39   41   43   46   48   46   48   47   45    48 #>  [2108,]   39   41   43   46   48   46   48   47   45    48 #>  [2109,]   40   42   44   47   49   47   49   48   46    49 #>  [2110,]   40   42   44   47   49   47   49   48   46    49 #>  [2111,]   39   41   43   46   48   46   48   47   45    48 #>  [2112,]   40   42   44   47   49   47   49   48   46    49 #>  [2113,]   40   42   44   47   49   47   49   48   46    49 #>  [2114,]   39   41   43   46   48   46   48   47   45    48 #>  [2115,]   39   41   43   46   48   46   48   47   45    48 #>  [2116,]   39   41   43   46   48   46   48   47   45    48 #>  [2117,]   40   42   44   47   49   47   49   48   46    49 #>  [2118,]   39   41   43   46   48   46   48   47   45    48 #>  [2119,]   39   41   43   46   48   46   48   47   45    48 #>  [2120,]   39   41   43   46   48   46   48   47   45    48 #>  [2121,]   40   42   44   47   49   47   49   48   46    49 #>  [2122,]   39   41   43   46   48   46   48   47   45    48 #>  [2123,]   39   41   43   46   48   46   48   47   45    48 #>  [2124,]   39   41   43   46   48   46   48   47   45    48 #>  [2125,]   39   41   43   46   48   46   48   47   45    48 #>  [2126,]   39   41   43   46   48   46   48   47   45    48 #>  [2127,]   39   41   43   46   48   46   48   47   45    48 #>  [2128,]   39   41   43   46   48   46   48   47   45    48 #>  [2129,]   40   42   44   47   49   47   49   48   46    49 #>  [2130,]   39   41   43   46   48   46   48   47   45    48 #>  [2131,]   39   41   43   46   48   46   48   47   45    48 #>  [2132,]   40   42   44   47   49   47   49   48   46    49 #>  [2133,]   40   42   44   47   49   47   49   48   46    49 #>  [2134,]   39   41   43   46   48   46   48   47   45    48 #>  [2135,]   39   41   43   46   48   46   48   47   45    48 #>  [2136,]   39   41   43   46   48   46   48   47   45    48 #>  [2137,]   39   41   43   46   48   46   48   47   45    48 #>  [2138,]   39   41   43   46   48   46   48   47   45    48 #>  [2139,]   39   41   43   46   48   46   48   47   45    48 #>  [2140,]   40   42   44   47   49   47   49   48   46    49 #>  [2141,]   39   41   43   46   48   46   48   47   45    48 #>  [2142,]   39   41   43   46   48   46   48   47   45    48 #>  [2143,]   39   41   43   46   48   46   48   47   45    48 #>  [2144,]   39   41   43   46   48   46   48   47   45    48 #>  [2145,]   39   41   43   46   48   46   48   47   45    48 #>  [2146,]   39   41   43   46   48   46   48   47   45    48 #>  [2147,]   39   41   43   46   48   46   48   47   45    48 #>  [2148,]   39   41   43   46   48   46   48   47   45    48 #>  [2149,]   39   41   43   46   48   46   48   47   45    48 #>  [2150,]   39   41   43   46   48   46   48   47   45    48 #>  [2151,]   39   41   43   46   48   46   48   47   45    48 #>  [2152,]   39   41   43   46   48   46   48   47   45    48 #>  [2153,]   40   42   44   47   49   47   49   48   46    49 #>  [2154,]   39   41   43   46   48   46   48   47   45    48 #>  [2155,]   39   41   43   46   48   46   48   47   45    48 #>  [2156,]   39   41   43   46   48   46   48   47   45    48 #>  [2157,]   39   41   43   46   48   46   48   47   45    48 #>  [2158,]   39   41   43   46   48   46   48   47   45    48 #>  [2159,]   39   41   43   46   48   46   48   47   45    48 #>  [2160,]   40   42   44   47   49   47   49   48   46    49 #>  [2161,]   39   41   43   46   48   46   48   47   45    48 #>  [2162,]   39   41   43   46   48   46   48   47   45    48 #>  [2163,]   40   42   44   47   49   47   49   48   46    49 #>  [2164,]   39   41   43   46   48   46   48   47   45    48 #>  [2165,]   39   41   43   46   48   46   48   47   45    48 #>  [2166,]   39   41   43   46   48   46   48   47   45    48 #>  [2167,]   39   41   43   46   48   46   48   47   45    48 #>  [2168,]   39   41   43   46   48   46   48   47   45    48 #>  [2169,]   39   41   43   46   48   46   48   47   45    48 #>  [2170,]   40   42   44   47   49   47   49   48   46    49 #>  [2171,]   39   41   43   46   48   46   48   47   45    48 #>  [2172,]   39   41   43   46   48   46   48   47   45    48 #>  [2173,]   39   41   43   46   48   46   48   47   45    48 #>  [2174,]   39   41   43   46   48   46   48   47   45    48 #>  [2175,]   40   42   44   47   49   47   49   48   46    49 #>  [2176,]   39   41   43   46   48   46   48   47   45    48 #>  [2177,]   39   41   43   46   48   46   48   47   45    48 #>  [2178,]   39   41   43   46   48   46   48   47   45    48 #>  [2179,]   39   41   43   46   48   46   48   47   45    48 #>  [2180,]   40   42   44   47   49   47   49   48   46    49 #>  [2181,]   40   42   44   47   49   47   49   48   46    49 #>  [2182,]   39   41   43   46   48   46   48   47   45    48 #>  [2183,]   39   41   43   46   48   46   48   47   45    48 #>  [2184,]   39   41   43   46   48   46   48   47   45    48 #>  [2185,]   39   41   43   46   48   46   48   47   45    48 #>  [2186,]   40   42   44   47   49   47   49   48   46    49 #>  [2187,]   39   41   43   46   48   46   48   47   45    48 #>  [2188,]   39   41   43   46   48   46   48   47   45    48 #>  [2189,]   39   41   43   46   48   46   48   47   45    48 #>  [2190,]   39   41   43   46   48   46   48   47   45    48 #>  [2191,]   39   41   43   46   48   46   48   47   45    48 #>  [2192,]   39   41   43   46   48   46   48   47   45    48 #>  [2193,]   39   41   43   46   48   46   48   47   45    48 #>  [2194,]   39   41   43   46   48   46   48   47   45    48 #>  [2195,]   39   41   43   46   48   46   48   47   45    48 #>  [2196,]   39   41   43   46   48   46   48   47   45    48 #>  [2197,]   39   41   43   46   48   46   48   47   45    48 #>  [2198,]   39   41   43   46   48   46   48   47   45    48 #>  [2199,]   39   41   43   46   48   46   48   47   45    48 #>  [2200,]   39   41   43   46   48   46   48   47   45    48 #>  [2201,]   41   44   46   49   51   49   51   50   48    51 #>  [2202,]   42   43   45   48   50   48   50   49   47    50 #>  [2203,]   41   44   46   49   51   49   51   50   48    51 #>  [2204,]   41   45   46   49   51   49   51   50   48    51 #>  [2205,]   41   44   46   49   51   49   51   50   48    51 #>  [2206,]   41   44   46   49   51   49   51   50   48    51 #>  [2207,]   41   44   46   49   51   49   51   50   48    51 #>  [2208,]   41   44   46   49   51   49   51   50   48    51 #>  [2209,]   42   43   45   48   50   48   50   49   47    50 #>  [2210,]   42   43   45   48   50   48   50   49   47    50 #>  [2211,]   41   45   46   49   51   49   51   50   48    51 #>  [2212,]   42   43   45   48   50   48   50   49   47    50 #>  [2213,]   42   43   45   48   50   48   50   49   47    50 #>  [2214,]   41   45   46   49   51   49   51   50   48    51 #>  [2215,]   41   45   46   49   51   49   51   50   48    51 #>  [2216,]   41   44   46   49   51   49   51   50   48    51 #>  [2217,]   42   43   45   48   50   48   50   49   47    50 #>  [2218,]   42   43   45   48   50   48   50   49   47    50 #>  [2219,]   41   45   46   49   51   49   51   50   48    51 #>  [2220,]   42   43   45   48   50   48   50   49   47    50 #>  [2221,]   42   43   45   48   50   48   50   49   47    50 #>  [2222,]   41   44   46   49   51   49   51   50   48    51 #>  [2223,]   42   43   45   48   50   48   50   49   47    50 #>  [2224,]   42   43   45   48   50   48   50   49   47    50 #>  [2225,]   41   44   46   49   51   49   51   50   48    51 #>  [2226,]   41   44   46   49   51   49   51   50   48    51 #>  [2227,]   42   43   45   48   50   48   50   49   47    50 #>  [2228,]   41   44   46   49   51   49   51   50   48    51 #>  [2229,]   42   43   45   48   50   48   50   49   47    50 #>  [2230,]   41   44   46   49   51   49   51   50   48    51 #>  [2231,]   42   43   45   48   50   48   50   49   47    50 #>  [2232,]   42   43   45   48   50   48   50   49   47    50 #>  [2233,]   42   43   45   48   50   48   50   49   47    50 #>  [2234,]   41   44   46   49   51   49   51   50   48    51 #>  [2235,]   41   44   46   49   51   49   51   50   48    51 #>  [2236,]   42   43   45   48   50   48   50   49   47    50 #>  [2237,]   41   44   46   49   51   49   51   50   48    51 #>  [2238,]   41   45   46   49   51   49   51   50   48    51 #>  [2239,]   41   44   46   49   51   49   51   50   48    51 #>  [2240,]   42   43   45   48   50   48   50   49   47    50 #>  [2241,]   41   45   46   49   51   49   51   50   48    51 #>  [2242,]   41   45   46   49   51   49   51   50   48    51 #>  [2243,]   41   44   46   49   51   49   51   50   48    51 #>  [2244,]   41   44   46   49   51   49   51   50   48    51 #>  [2245,]   41   44   46   49   51   49   51   50   48    51 #>  [2246,]   41   44   46   49   51   49   51   50   48    51 #>  [2247,]   41   44   46   49   51   49   51   50   48    51 #>  [2248,]   41   45   46   49   51   49   51   50   48    51 #>  [2249,]   41   44   46   49   51   49   51   50   48    51 #>  [2250,]   41   44   46   49   51   49   51   50   48    51 #>  [2251,]   41   44   46   49   51   49   51   50   48    51 #>  [2252,]   41   44   46   49   51   49   51   50   48    51 #>  [2253,]   42   43   45   48   50   48   50   49   47    50 #>  [2254,]   41   44   46   49   51   49   51   50   48    51 #>  [2255,]   41   44   46   49   51   49   51   50   48    51 #>  [2256,]   41   44   46   49   51   49   51   50   48    51 #>  [2257,]   41   44   46   49   51   49   51   50   48    51 #>  [2258,]   41   45   46   49   51   49   51   50   48    51 #>  [2259,]   41   44   46   49   51   49   51   50   48    51 #>  [2260,]   42   43   45   48   50   48   50   49   47    50 #>  [2261,]   42   43   45   48   50   48   50   49   47    50 #>  [2262,]   41   44   46   49   51   49   51   50   48    51 #>  [2263,]   42   43   45   48   50   48   50   49   47    50 #>  [2264,]   41   44   46   49   51   49   51   50   48    51 #>  [2265,]   41   44   46   49   51   49   51   50   48    51 #>  [2266,]   41   44   46   49   51   49   51   50   48    51 #>  [2267,]   41   44   46   49   51   49   51   50   48    51 #>  [2268,]   41   45   46   49   51   49   51   50   48    51 #>  [2269,]   41   45   46   49   51   49   51   50   48    51 #>  [2270,]   42   43   45   48   50   48   50   49   47    50 #>  [2271,]   41   44   46   49   51   49   51   50   48    51 #>  [2272,]   41   44   46   49   51   49   51   50   48    51 #>  [2273,]   41   44   46   49   51   49   51   50   48    51 #>  [2274,]   41   45   46   49   51   49   51   50   48    51 #>  [2275,]   42   43   45   48   50   48   50   49   47    50 #>  [2276,]   41   44   46   49   51   49   51   50   48    51 #>  [2277,]   41   44   46   49   51   49   51   50   48    51 #>  [2278,]   41   44   46   49   51   49   51   50   48    51 #>  [2279,]   41   44   46   49   51   49   51   50   48    51 #>  [2280,]   42   43   45   48   50   48   50   49   47    50 #>  [2281,]   42   43   45   48   50   48   50   49   47    50 #>  [2282,]   41   45   46   49   51   49   51   50   48    51 #>  [2283,]   42   43   45   48   50   48   50   49   47    50 #>  [2284,]   42   43   45   48   50   48   50   49   47    50 #>  [2285,]   41   44   46   49   51   49   51   50   48    51 #>  [2286,]   42   43   45   48   50   48   50   49   47    50 #>  [2287,]   41   44   46   49   51   49   51   50   48    51 #>  [2288,]   42   43   45   48   50   48   50   49   47    50 #>  [2289,]   41   44   46   49   51   49   51   50   48    51 #>  [2290,]   41   44   46   49   51   49   51   50   48    51 #>  [2291,]   41   44   46   49   51   49   51   50   48    51 #>  [2292,]   41   45   46   49   51   49   51   50   48    51 #>  [2293,]   41   45   46   49   51   49   51   50   48    51 #>  [2294,]   41   44   46   49   51   49   51   50   48    51 #>  [2295,]   41   44   46   49   51   49   51   50   48    51 #>  [2296,]   41   45   46   49   51   49   51   50   48    51 #>  [2297,]   41   45   46   49   51   49   51   50   48    51 #>  [2298,]   41   44   46   49   51   49   51   50   48    51 #>  [2299,]   41   44   46   49   51   49   51   50   48    51 #>  [2300,]   41   44   46   49   51   49   51   50   48    51 #>  [2301,]   44   47   47   53   53   51   53   52   50    53 #>  [2302,]   43   46   48   50   54   52   54   53   49    52 #>  [2303,]   43   46   48   50   54   52   54   53   49    52 #>  [2304,]   44   47   47   53   53   51   53   52   50    53 #>  [2305,]   44   47   47   52   52   50   52   51   50    53 #>  [2306,]   43   46   49   51   54   52   54   53   49    52 #>  [2307,]   43   46   48   50   54   52   54   53   49    52 #>  [2308,]   43   46   49   51   54   52   54   53   49    52 #>  [2309,]   43   46   49   51   54   52   54   53   49    52 #>  [2310,]   44   47   47   53   53   51   53   52   50    53 #>  [2311,]   44   47   47   52   52   50   52   51   50    53 #>  [2312,]   44   47   47   52   52   50   52   51   50    53 #>  [2313,]   44   47   47   53   53   51   53   52   50    53 #>  [2314,]   44   47   47   52   52   50   52   51   50    53 #>  [2315,]   44   47   47   53   53   51   53   52   50    53 #>  [2316,]   44   47   47   53   53   51   53   52   50    53 #>  [2317,]   44   47   47   53   53   51   53   52   50    53 #>  [2318,]   44   47   47   53   53   51   53   52   50    53 #>  [2319,]   44   47   47   52   52   50   52   51   50    53 #>  [2320,]   43   46   48   50   54   52   54   53   49    52 #>  [2321,]   43   46   48   50   54   52   54   53   49    52 #>  [2322,]   44   47   47   52   52   50   52   51   50    53 #>  [2323,]   43   46   48   50   54   52   54   53   49    52 #>  [2324,]   44   47   47   52   52   50   52   51   50    53 #>  [2325,]   43   46   48   50   54   52   54   53   49    52 #>  [2326,]   44   47   47   52   52   50   52   51   50    53 #>  [2327,]   44   47   47   53   53   51   53   52   50    53 #>  [2328,]   44   47   47   53   53   51   53   52   50    53 #>  [2329,]   43   46   48   50   54   52   54   53   49    52 #>  [2330,]   44   47   47   52   52   50   52   51   50    53 #>  [2331,]   44   47   47   52   52   50   52   51   50    53 #>  [2332,]   44   47   47   52   52   50   52   51   50    53 #>  [2333,]   44   47   47   52   52   50   52   51   50    53 #>  [2334,]   43   46   48   50   54   52   54   53   49    52 #>  [2335,]   43   46   48   50   54   52   54   53   49    52 #>  [2336,]   43   46   48   50   54   52   54   53   49    52 #>  [2337,]   43   46   48   50   54   52   54   53   49    52 #>  [2338,]   44   47   47   52   52   50   52   51   50    53 #>  [2339,]   44   47   47   53   53   51   53   52   50    53 #>  [2340,]   44   47   47   52   52   50   52   51   50    53 #>  [2341,]   43   46   48   50   54   52   54   53   49    52 #>  [2342,]   43   46   48   50   54   52   54   53   49    52 #>  [2343,]   44   47   47   53   53   51   53   52   50    53 #>  [2344,]   43   46   48   50   54   52   54   53   49    52 #>  [2345,]   43   46   49   51   54   52   54   53   49    52 #>  [2346,]   44   47   47   53   53   51   53   52   50    53 #>  [2347,]   44   47   47   53   53   51   53   52   50    53 #>  [2348,]   44   47   47   52   52   50   52   51   50    53 #>  [2349,]   44   47   47   52   52   50   52   51   50    53 #>  [2350,]   43   46   48   50   54   52   54   53   49    52 #>  [2351,]   44   47   47   52   52   50   52   51   50    53 #>  [2352,]   44   47   47   52   52   50   52   51   50    53 #>  [2353,]   43   46   48   50   54   52   54   53   49    52 #>  [2354,]   43   46   48   50   54   52   54   53   49    52 #>  [2355,]   43   46   48   50   54   52   54   53   49    52 #>  [2356,]   43   46   49   51   54   52   54   53   49    52 #>  [2357,]   43   46   49   51   54   52   54   53   49    52 #>  [2358,]   44   47   47   52   52   50   52   51   50    53 #>  [2359,]   44   47   47   52   52   50   52   51   50    53 #>  [2360,]   43   46   48   50   54   52   54   53   49    52 #>  [2361,]   44   47   47   53   53   51   53   52   50    53 #>  [2362,]   44   47   47   52   52   50   52   51   50    53 #>  [2363,]   44   47   47   52   52   50   52   51   50    53 #>  [2364,]   43   46   49   51   54   52   54   53   49    52 #>  [2365,]   43   46   48   50   54   52   54   53   49    52 #>  [2366,]   44   47   47   52   52   50   52   51   50    53 #>  [2367,]   43   46   48   50   54   52   54   53   49    52 #>  [2368,]   44   47   47   52   52   50   52   51   50    53 #>  [2369,]   44   47   47   52   52   50   52   51   50    53 #>  [2370,]   44   47   47   53   53   51   53   52   50    53 #>  [2371,]   44   47   47   53   53   51   53   52   50    53 #>  [2372,]   44   47   47   53   53   51   53   52   50    53 #>  [2373,]   43   46   48   50   54   52   54   53   49    52 #>  [2374,]   43   46   48   50   54   52   54   53   49    52 #>  [2375,]   44   47   47   53   53   51   53   52   50    53 #>  [2376,]   43   46   49   51   54   52   54   53   49    52 #>  [2377,]   44   47   47   53   53   51   53   52   50    53 #>  [2378,]   44   47   47   52   52   50   52   51   50    53 #>  [2379,]   44   47   47   52   52   50   52   51   50    53 #>  [2380,]   43   46   48   50   54   52   54   53   49    52 #>  [2381,]   43   46   48   50   54   52   54   53   49    52 #>  [2382,]   43   46   48   50   54   52   54   53   49    52 #>  [2383,]   44   47   47   52   52   50   52   51   50    53 #>  [2384,]   43   46   48   50   54   52   54   53   49    52 #>  [2385,]   43   46   48   50   54   52   54   53   49    52 #>  [2386,]   43   46   48   50   54   52   54   53   49    52 #>  [2387,]   44   47   47   53   53   51   53   52   50    53 #>  [2388,]   43   46   48   50   54   52   54   53   49    52 #>  [2389,]   43   46   48   50   54   52   54   53   49    52 #>  [2390,]   44   47   47   53   53   51   53   52   50    53 #>  [2391,]   44   47   47   52   52   50   52   51   50    53 #>  [2392,]   44   47   47   52   52   50   52   51   50    53 #>  [2393,]   44   47   47   52   52   50   52   51   50    53 #>  [2394,]   43   46   49   51   54   52   54   53   49    52 #>  [2395,]   44   47   47   53   53   51   53   52   50    53 #>  [2396,]   44   47   47   53   53   51   53   52   50    53 #>  [2397,]   43   46   48   50   54   52   54   53   49    52 #>  [2398,]   43   46   48   50   54   52   54   53   49    52 #>  [2399,]   43   46   48   50   54   52   54   53   49    52 #>  [2400,]   44   47   47   53   53   51   53   52   50    53 #>  [2401,]   46   49   51   55   56   54   56   55   51    54 #>  [2402,]   45   48   50   54   55   53   55   54   53    56 #>  [2403,]   45   48   50   54   55   53   55   54   53    56 #>  [2404,]   46   49   51   55   56   54   56   55   51    54 #>  [2405,]   46   49   51   55   56   54   56   55   51    54 #>  [2406,]   46   49   51   55   56   54   56   55   51    54 #>  [2407,]   45   48   50   54   55   53   55   54   53    56 #>  [2408,]   46   49   51   55   56   54   56   55   51    54 #>  [2409,]   46   49   51   55   56   54   56   55   51    54 #>  [2410,]   46   49   51   55   56   54   56   55   51    54 #>  [2411,]   46   49   51   55   56   54   56   55   51    54 #>  [2412,]   46   49   51   55   56   54   56   55   51    54 #>  [2413,]   45   48   50   54   55   53   55   54   52    55 #>  [2414,]   46   49   51   55   56   54   56   55   51    54 #>  [2415,]   46   49   51   55   56   54   56   55   51    54 #>  [2416,]   45   48   50   54   55   53   55   54   52    55 #>  [2417,]   46   49   51   55   56   54   56   55   51    54 #>  [2418,]   45   48   50   54   55   53   55   54   53    56 #>  [2419,]   45   48   50   54   55   53   55   54   53    56 #>  [2420,]   46   49   51   55   56   54   56   55   51    54 #>  [2421,]   45   48   50   54   55   53   55   54   52    55 #>  [2422,]   45   48   50   54   55   53   55   54   52    55 #>  [2423,]   45   48   50   54   55   53   55   54   53    56 #>  [2424,]   45   48   50   54   55   53   55   54   52    55 #>  [2425,]   46   49   51   55   56   54   56   55   51    54 #>  [2426,]   46   49   51   55   56   54   56   55   51    54 #>  [2427,]   46   49   51   55   56   54   56   55   51    54 #>  [2428,]   46   49   51   55   56   54   56   55   51    54 #>  [2429,]   46   49   51   55   56   54   56   55   51    54 #>  [2430,]   45   48   50   54   55   53   55   54   52    55 #>  [2431,]   45   48   50   54   55   53   55   54   53    56 #>  [2432,]   45   48   50   54   55   53   55   54   53    56 #>  [2433,]   46   49   51   55   56   54   56   55   51    54 #>  [2434,]   45   48   50   54   55   53   55   54   53    56 #>  [2435,]   45   48   50   54   55   53   55   54   52    55 #>  [2436,]   45   48   50   54   55   53   55   54   52    55 #>  [2437,]   45   48   50   54   55   53   55   54   52    55 #>  [2438,]   46   49   51   55   56   54   56   55   51    54 #>  [2439,]   45   48   50   54   55   53   55   54   52    55 #>  [2440,]   45   48   50   54   55   53   55   54   53    56 #>  [2441,]   46   49   51   55   56   54   56   55   51    54 #>  [2442,]   46   49   51   55   56   54   56   55   51    54 #>  [2443,]   46   49   51   55   56   54   56   55   51    54 #>  [2444,]   45   48   50   54   55   53   55   54   52    55 #>  [2445,]   46   49   51   55   56   54   56   55   51    54 #>  [2446,]   46   49   51   55   56   54   56   55   51    54 #>  [2447,]   45   48   50   54   55   53   55   54   52    55 #>  [2448,]   46   49   51   55   56   54   56   55   51    54 #>  [2449,]   45   48   50   54   55   53   55   54   52    55 #>  [2450,]   46   49   51   55   56   54   56   55   51    54 #>  [2451,]   46   49   51   55   56   54   56   55   51    54 #>  [2452,]   46   49   51   55   56   54   56   55   51    54 #>  [2453,]   46   49   51   55   56   54   56   55   51    54 #>  [2454,]   45   48   50   54   55   53   55   54   52    55 #>  [2455,]   46   49   51   55   56   54   56   55   51    54 #>  [2456,]   46   49   51   55   56   54   56   55   51    54 #>  [2457,]   46   49   51   55   56   54   56   55   51    54 #>  [2458,]   46   49   51   55   56   54   56   55   51    54 #>  [2459,]   45   48   50   54   55   53   55   54   52    55 #>  [2460,]   46   49   51   55   56   54   56   55   51    54 #>  [2461,]   46   49   51   55   56   54   56   55   51    54 #>  [2462,]   45   48   50   54   55   53   55   54   52    55 #>  [2463,]   46   49   51   55   56   54   56   55   51    54 #>  [2464,]   46   49   51   55   56   54   56   55   51    54 #>  [2465,]   46   49   51   55   56   54   56   55   51    54 #>  [2466,]   46   49   51   55   56   54   56   55   51    54 #>  [2467,]   46   49   51   55   56   54   56   55   51    54 #>  [2468,]   46   49   51   55   56   54   56   55   51    54 #>  [2469,]   46   49   51   55   56   54   56   55   51    54 #>  [2470,]   45   48   50   54   55   53   55   54   53    56 #>  [2471,]   46   49   51   55   56   54   56   55   51    54 #>  [2472,]   46   49   51   55   56   54   56   55   51    54 #>  [2473,]   46   49   51   55   56   54   56   55   51    54 #>  [2474,]   46   49   51   55   56   54   56   55   51    54 #>  [2475,]   46   49   51   55   56   54   56   55   51    54 #>  [2476,]   46   49   51   55   56   54   56   55   51    54 #>  [2477,]   45   48   50   54   55   53   55   54   53    56 #>  [2478,]   46   49   51   55   56   54   56   55   51    54 #>  [2479,]   45   48   50   54   55   53   55   54   52    55 #>  [2480,]   45   48   50   54   55   53   55   54   52    55 #>  [2481,]   46   49   51   55   56   54   56   55   51    54 #>  [2482,]   46   49   51   55   56   54   56   55   51    54 #>  [2483,]   45   48   50   54   55   53   55   54   52    55 #>  [2484,]   46   49   51   55   56   54   56   55   51    54 #>  [2485,]   46   49   51   55   56   54   56   55   51    54 #>  [2486,]   45   48   50   54   55   53   55   54   53    56 #>  [2487,]   46   49   51   55   56   54   56   55   51    54 #>  [2488,]   46   49   51   55   56   54   56   55   51    54 #>  [2489,]   46   49   51   55   56   54   56   55   51    54 #>  [2490,]   46   49   51   55   56   54   56   55   51    54 #>  [2491,]   46   49   51   55   56   54   56   55   51    54 #>  [2492,]   46   49   51   55   56   54   56   55   51    54 #>  [2493,]   45   48   50   54   55   53   55   54   53    56 #>  [2494,]   46   49   51   55   56   54   56   55   51    54 #>  [2495,]   45   48   50   54   55   53   55   54   52    55 #>  [2496,]   46   49   51   55   56   54   56   55   51    54 #>  [2497,]   46   49   51   55   56   54   56   55   51    54 #>  [2498,]   45   48   50   54   55   53   55   54   53    56 #>  [2499,]   46   49   51   55   56   54   56   55   51    54 #>  [2500,]   45   48   50   54   55   53   55   54   53    56 #>  [2501,]   48   51   53   57   58   56   58   57   55    58 #>  [2502,]   48   51   53   57   58   56   58   57   55    58 #>  [2503,]   47   50   52   56   57   55   57   56   54    57 #>  [2504,]   48   51   53   57   58   56   58   57   55    58 #>  [2505,]   48   51   53   57   58   56   58   57   55    58 #>  [2506,]   48   51   53   57   58   56   58   57   55    58 #>  [2507,]   47   50   52   56   57   55   57   56   54    57 #>  [2508,]   47   50   52   56   57   55   57   56   54    57 #>  [2509,]   48   51   53   57   58   56   58   57   55    58 #>  [2510,]   48   51   53   57   58   56   58   57   55    58 #>  [2511,]   48   51   53   57   58   56   58   57   55    58 #>  [2512,]   48   51   53   57   58   56   58   57   55    58 #>  [2513,]   47   50   52   56   57   55   57   56   54    57 #>  [2514,]   48   51   53   57   58   56   58   57   55    58 #>  [2515,]   48   51   53   57   58   56   58   57   55    58 #>  [2516,]   47   50   52   56   57   55   57   56   54    57 #>  [2517,]   48   51   53   57   58   56   58   57   55    58 #>  [2518,]   48   51   53   57   58   56   58   57   55    58 #>  [2519,]   48   51   53   57   58   56   58   57   55    58 #>  [2520,]   47   50   52   56   57   55   57   56   54    57 #>  [2521,]   48   51   53   57   58   56   58   57   55    58 #>  [2522,]   47   50   52   56   57   55   57   56   54    57 #>  [2523,]   48   51   53   57   58   56   58   57   55    58 #>  [2524,]   47   50   52   56   57   55   57   56   54    57 #>  [2525,]   47   50   52   56   57   55   57   56   54    57 #>  [2526,]   48   51   53   57   58   56   58   57   55    58 #>  [2527,]   48   51   53   57   58   56   58   57   55    58 #>  [2528,]   48   51   53   57   58   56   58   57   55    58 #>  [2529,]   48   51   53   57   58   56   58   57   55    58 #>  [2530,]   48   51   53   57   58   56   58   57   55    58 #>  [2531,]   48   51   53   57   58   56   58   57   55    58 #>  [2532,]   48   51   53   57   58   56   58   57   55    58 #>  [2533,]   48   51   53   57   58   56   58   57   55    58 #>  [2534,]   48   51   53   57   58   56   58   57   55    58 #>  [2535,]   48   51   53   57   58   56   58   57   55    58 #>  [2536,]   48   51   53   57   58   56   58   57   55    58 #>  [2537,]   48   51   53   57   58   56   58   57   55    58 #>  [2538,]   48   51   53   57   58   56   58   57   55    58 #>  [2539,]   47   50   52   56   57   55   57   56   54    57 #>  [2540,]   47   50   52   56   57   55   57   56   54    57 #>  [2541,]   48   51   53   57   58   56   58   57   55    58 #>  [2542,]   48   51   53   57   58   56   58   57   55    58 #>  [2543,]   48   51   53   57   58   56   58   57   55    58 #>  [2544,]   47   50   52   56   57   55   57   56   54    57 #>  [2545,]   48   51   53   57   58   56   58   57   55    58 #>  [2546,]   47   50   52   56   57   55   57   56   54    57 #>  [2547,]   48   51   53   57   58   56   58   57   55    58 #>  [2548,]   48   51   53   57   58   56   58   57   55    58 #>  [2549,]   47   50   52   56   57   55   57   56   54    57 #>  [2550,]   47   50   52   56   57   55   57   56   54    57 #>  [2551,]   48   51   53   57   58   56   58   57   55    58 #>  [2552,]   48   51   53   57   58   56   58   57   55    58 #>  [2553,]   47   50   52   56   57   55   57   56   54    57 #>  [2554,]   48   51   53   57   58   56   58   57   55    58 #>  [2555,]   47   50   52   56   57   55   57   56   54    57 #>  [2556,]   47   50   52   56   57   55   57   56   54    57 #>  [2557,]   48   51   53   57   58   56   58   57   55    58 #>  [2558,]   48   51   53   57   58   56   58   57   55    58 #>  [2559,]   47   50   52   56   57   55   57   56   54    57 #>  [2560,]   48   51   53   57   58   56   58   57   55    58 #>  [2561,]   48   51   53   57   58   56   58   57   55    58 #>  [2562,]   48   51   53   57   58   56   58   57   55    58 #>  [2563,]   47   50   52   56   57   55   57   56   54    57 #>  [2564,]   48   51   53   57   58   56   58   57   55    58 #>  [2565,]   47   50   52   56   57   55   57   56   54    57 #>  [2566,]   47   50   52   56   57   55   57   56   54    57 #>  [2567,]   48   51   53   57   58   56   58   57   55    58 #>  [2568,]   48   51   53   57   58   56   58   57   55    58 #>  [2569,]   48   51   53   57   58   56   58   57   55    58 #>  [2570,]   47   50   52   56   57   55   57   56   54    57 #>  [2571,]   48   51   53   57   58   56   58   57   55    58 #>  [2572,]   47   50   52   56   57   55   57   56   54    57 #>  [2573,]   48   51   53   57   58   56   58   57   55    58 #>  [2574,]   48   51   53   57   58   56   58   57   55    58 #>  [2575,]   48   51   53   57   58   56   58   57   55    58 #>  [2576,]   48   51   53   57   58   56   58   57   55    58 #>  [2577,]   48   51   53   57   58   56   58   57   55    58 #>  [2578,]   48   51   53   57   58   56   58   57   55    58 #>  [2579,]   48   51   53   57   58   56   58   57   55    58 #>  [2580,]   48   51   53   57   58   56   58   57   55    58 #>  [2581,]   48   51   53   57   58   56   58   57   55    58 #>  [2582,]   48   51   53   57   58   56   58   57   55    58 #>  [2583,]   48   51   53   57   58   56   58   57   55    58 #>  [2584,]   47   50   52   56   57   55   57   56   54    57 #>  [2585,]   48   51   53   57   58   56   58   57   55    58 #>  [2586,]   47   50   52   56   57   55   57   56   54    57 #>  [2587,]   48   51   53   57   58   56   58   57   55    58 #>  [2588,]   48   51   53   57   58   56   58   57   55    58 #>  [2589,]   47   50   52   56   57   55   57   56   54    57 #>  [2590,]   47   50   52   56   57   55   57   56   54    57 #>  [2591,]   48   51   53   57   58   56   58   57   55    58 #>  [2592,]   48   51   53   57   58   56   58   57   55    58 #>  [2593,]   48   51   53   57   58   56   58   57   55    58 #>  [2594,]   48   51   53   57   58   56   58   57   55    58 #>  [2595,]   48   51   53   57   58   56   58   57   55    58 #>  [2596,]   48   51   53   57   58   56   58   57   55    58 #>  [2597,]   48   51   53   57   58   56   58   57   55    58 #>  [2598,]   47   50   52   56   57   55   57   56   54    57 #>  [2599,]   48   51   53   57   58   56   58   57   55    58 #>  [2600,]   47   50   52   56   57   55   57   56   54    57 #>  [2601,]   50   53   55   59   60   58   60   59   57    60 #>  [2602,]   49   52   54   58   59   57   59   58   56    59 #>  [2603,]   49   52   54   58   59   57   59   58   56    59 #>  [2604,]   49   52   54   58   59   57   59   58   56    59 #>  [2605,]   50   53   55   59   60   58   60   59   57    60 #>  [2606,]   49   52   54   58   59   57   59   58   56    59 #>  [2607,]   49   52   54   58   59   57   59   58   56    59 #>  [2608,]   49   52   54   58   59   57   59   58   56    59 #>  [2609,]   50   53   55   59   60   58   60   59   57    60 #>  [2610,]   49   52   54   58   59   57   59   58   56    59 #>  [2611,]   50   53   55   59   60   58   60   59   57    60 #>  [2612,]   49   52   54   58   59   57   59   58   56    59 #>  [2613,]   50   53   55   59   60   58   60   59   57    60 #>  [2614,]   49   52   54   58   59   57   59   58   56    59 #>  [2615,]   49   52   54   58   59   57   59   58   56    59 #>  [2616,]   49   52   54   58   59   57   59   58   56    59 #>  [2617,]   50   53   55   59   60   58   60   59   57    60 #>  [2618,]   50   53   55   59   60   58   60   59   57    60 #>  [2619,]   50   53   55   59   60   58   60   59   57    60 #>  [2620,]   50   53   55   59   60   58   60   59   57    60 #>  [2621,]   50   53   55   59   60   58   60   59   57    60 #>  [2622,]   50   53   55   59   60   58   60   59   57    60 #>  [2623,]   49   52   54   58   59   57   59   58   56    59 #>  [2624,]   50   53   55   59   60   58   60   59   57    60 #>  [2625,]   49   52   54   58   59   57   59   58   56    59 #>  [2626,]   49   52   54   58   59   57   59   58   56    59 #>  [2627,]   50   53   55   59   60   58   60   59   57    60 #>  [2628,]   50   53   55   59   60   58   60   59   57    60 #>  [2629,]   50   53   55   59   60   58   60   59   57    60 #>  [2630,]   49   52   54   58   59   57   59   58   56    59 #>  [2631,]   49   52   54   58   59   57   59   58   56    59 #>  [2632,]   49   52   54   58   59   57   59   58   56    59 #>  [2633,]   50   53   55   59   60   58   60   59   57    60 #>  [2634,]   49   52   54   58   59   57   59   58   56    59 #>  [2635,]   49   52   54   58   59   57   59   58   56    59 #>  [2636,]   50   53   55   59   60   58   60   59   57    60 #>  [2637,]   49   52   54   58   59   57   59   58   56    59 #>  [2638,]   50   53   55   59   60   58   60   59   57    60 #>  [2639,]   50   53   55   59   60   58   60   59   57    60 #>  [2640,]   49   52   54   58   59   57   59   58   56    59 #>  [2641,]   50   53   55   59   60   58   60   59   57    60 #>  [2642,]   50   53   55   59   60   58   60   59   57    60 #>  [2643,]   49   52   54   58   59   57   59   58   56    59 #>  [2644,]   49   52   54   58   59   57   59   58   56    59 #>  [2645,]   49   52   54   58   59   57   59   58   56    59 #>  [2646,]   49   52   54   58   59   57   59   58   56    59 #>  [2647,]   49   52   54   58   59   57   59   58   56    59 #>  [2648,]   49   52   54   58   59   57   59   58   56    59 #>  [2649,]   49   52   54   58   59   57   59   58   56    59 #>  [2650,]   50   53   55   59   60   58   60   59   57    60 #>  [2651,]   50   53   55   59   60   58   60   59   57    60 #>  [2652,]   49   52   54   58   59   57   59   58   56    59 #>  [2653,]   50   53   55   59   60   58   60   59   57    60 #>  [2654,]   50   53   55   59   60   58   60   59   57    60 #>  [2655,]   49   52   54   58   59   57   59   58   56    59 #>  [2656,]   50   53   55   59   60   58   60   59   57    60 #>  [2657,]   49   52   54   58   59   57   59   58   56    59 #>  [2658,]   50   53   55   59   60   58   60   59   57    60 #>  [2659,]   49   52   54   58   59   57   59   58   56    59 #>  [2660,]   49   52   54   58   59   57   59   58   56    59 #>  [2661,]   50   53   55   59   60   58   60   59   57    60 #>  [2662,]   50   53   55   59   60   58   60   59   57    60 #>  [2663,]   49   52   54   58   59   57   59   58   56    59 #>  [2664,]   50   53   55   59   60   58   60   59   57    60 #>  [2665,]   50   53   55   59   60   58   60   59   57    60 #>  [2666,]   50   53   55   59   60   58   60   59   57    60 #>  [2667,]   49   52   54   58   59   57   59   58   56    59 #>  [2668,]   49   52   54   58   59   57   59   58   56    59 #>  [2669,]   49   52   54   58   59   57   59   58   56    59 #>  [2670,]   50   53   55   59   60   58   60   59   57    60 #>  [2671,]   49   52   54   58   59   57   59   58   56    59 #>  [2672,]   49   52   54   58   59   57   59   58   56    59 #>  [2673,]   50   53   55   59   60   58   60   59   57    60 #>  [2674,]   49   52   54   58   59   57   59   58   56    59 #>  [2675,]   49   52   54   58   59   57   59   58   56    59 #>  [2676,]   49   52   54   58   59   57   59   58   56    59 #>  [2677,]   50   53   55   59   60   58   60   59   57    60 #>  [2678,]   49   52   54   58   59   57   59   58   56    59 #>  [2679,]   50   53   55   59   60   58   60   59   57    60 #>  [2680,]   49   52   54   58   59   57   59   58   56    59 #>  [2681,]   50   53   55   59   60   58   60   59   57    60 #>  [2682,]   50   53   55   59   60   58   60   59   57    60 #>  [2683,]   50   53   55   59   60   58   60   59   57    60 #>  [2684,]   50   53   55   59   60   58   60   59   57    60 #>  [2685,]   50   53   55   59   60   58   60   59   57    60 #>  [2686,]   49   52   54   58   59   57   59   58   56    59 #>  [2687,]   50   53   55   59   60   58   60   59   57    60 #>  [2688,]   49   52   54   58   59   57   59   58   56    59 #>  [2689,]   50   53   55   59   60   58   60   59   57    60 #>  [2690,]   50   53   55   59   60   58   60   59   57    60 #>  [2691,]   50   53   55   59   60   58   60   59   57    60 #>  [2692,]   49   52   54   58   59   57   59   58   56    59 #>  [2693,]   50   53   55   59   60   58   60   59   57    60 #>  [2694,]   50   53   55   59   60   58   60   59   57    60 #>  [2695,]   49   52   54   58   59   57   59   58   56    59 #>  [2696,]   49   52   54   58   59   57   59   58   56    59 #>  [2697,]   49   52   54   58   59   57   59   58   56    59 #>  [2698,]   49   52   54   58   59   57   59   58   56    59 #>  [2699,]   50   53   55   59   60   58   60   59   57    60 #>  [2700,]   50   53   55   59   60   58   60   59   57    60 #>  [2701,]   51   54   56   60   61   59   61   60   58    61 #>  [2702,]   51   54   56   60   61   59   61   60   58    61 #>  [2703,]   51   54   56   60   61   59   61   60   58    61 #>  [2704,]   52   55   57   61   62   60   62   61   59    62 #>  [2705,]   51   54   56   60   61   59   61   60   58    61 #>  [2706,]   51   54   56   60   61   59   61   60   58    61 #>  [2707,]   51   54   56   60   61   59   61   60   58    61 #>  [2708,]   51   54   56   60   61   59   61   60   58    61 #>  [2709,]   51   54   56   60   61   59   61   60   58    61 #>  [2710,]   51   54   56   60   61   59   61   60   58    61 #>  [2711,]   52   55   57   61   62   60   62   61   59    62 #>  [2712,]   52   55   57   61   62   60   62   61   59    62 #>  [2713,]   51   54   56   60   61   59   61   60   58    61 #>  [2714,]   52   55   57   61   62   60   62   61   59    62 #>  [2715,]   52   55   57   61   62   60   62   61   59    62 #>  [2716,]   51   54   56   60   61   59   61   60   58    61 #>  [2717,]   51   54   56   60   61   59   61   60   58    61 #>  [2718,]   51   54   56   60   61   59   61   60   58    61 #>  [2719,]   52   55   57   61   62   60   62   61   59    62 #>  [2720,]   51   54   56   60   61   59   61   60   58    61 #>  [2721,]   52   55   57   61   62   60   62   61   59    62 #>  [2722,]   51   54   56   60   61   59   61   60   58    61 #>  [2723,]   51   54   56   60   61   59   61   60   58    61 #>  [2724,]   51   54   56   60   61   59   61   60   58    61 #>  [2725,]   51   54   56   60   61   59   61   60   58    61 #>  [2726,]   51   54   56   60   61   59   61   60   58    61 #>  [2727,]   52   55   57   61   62   60   62   61   59    62 #>  [2728,]   51   54   56   60   61   59   61   60   58    61 #>  [2729,]   51   54   56   60   61   59   61   60   58    61 #>  [2730,]   51   54   56   60   61   59   61   60   58    61 #>  [2731,]   51   54   56   60   61   59   61   60   58    61 #>  [2732,]   51   54   56   60   61   59   61   60   58    61 #>  [2733,]   51   54   56   60   61   59   61   60   58    61 #>  [2734,]   51   54   56   60   61   59   61   60   58    61 #>  [2735,]   51   54   56   60   61   59   61   60   58    61 #>  [2736,]   51   54   56   60   61   59   61   60   58    61 #>  [2737,]   51   54   56   60   61   59   61   60   58    61 #>  [2738,]   52   55   57   61   62   60   62   61   59    62 #>  [2739,]   51   54   56   60   61   59   61   60   58    61 #>  [2740,]   51   54   56   60   61   59   61   60   58    61 #>  [2741,]   52   55   57   61   62   60   62   61   59    62 #>  [2742,]   52   55   57   61   62   60   62   61   59    62 #>  [2743,]   51   54   56   60   61   59   61   60   58    61 #>  [2744,]   51   54   56   60   61   59   61   60   58    61 #>  [2745,]   51   54   56   60   61   59   61   60   58    61 #>  [2746,]   51   54   56   60   61   59   61   60   58    61 #>  [2747,]   51   54   56   60   61   59   61   60   58    61 #>  [2748,]   52   55   57   61   62   60   62   61   59    62 #>  [2749,]   51   54   56   60   61   59   61   60   58    61 #>  [2750,]   51   54   56   60   61   59   61   60   58    61 #>  [2751,]   51   54   56   60   61   59   61   60   58    61 #>  [2752,]   51   54   56   60   61   59   61   60   58    61 #>  [2753,]   51   54   56   60   61   59   61   60   58    61 #>  [2754,]   51   54   56   60   61   59   61   60   58    61 #>  [2755,]   51   54   56   60   61   59   61   60   58    61 #>  [2756,]   51   54   56   60   61   59   61   60   58    61 #>  [2757,]   51   54   56   60   61   59   61   60   58    61 #>  [2758,]   51   54   56   60   61   59   61   60   58    61 #>  [2759,]   51   54   56   60   61   59   61   60   58    61 #>  [2760,]   51   54   56   60   61   59   61   60   58    61 #>  [2761,]   52   55   57   61   62   60   62   61   59    62 #>  [2762,]   51   54   56   60   61   59   61   60   58    61 #>  [2763,]   51   54   56   60   61   59   61   60   58    61 #>  [2764,]   51   54   56   60   61   59   61   60   58    61 #>  [2765,]   51   54   56   60   61   59   61   60   58    61 #>  [2766,]   51   54   56   60   61   59   61   60   58    61 #>  [2767,]   51   54   56   60   61   59   61   60   58    61 #>  [2768,]   52   55   57   61   62   60   62   61   59    62 #>  [2769,]   52   55   57   61   62   60   62   61   59    62 #>  [2770,]   51   54   56   60   61   59   61   60   58    61 #>  [2771,]   51   54   56   60   61   59   61   60   58    61 #>  [2772,]   51   54   56   60   61   59   61   60   58    61 #>  [2773,]   51   54   56   60   61   59   61   60   58    61 #>  [2774,]   52   55   57   61   62   60   62   61   59    62 #>  [2775,]   52   55   57   61   62   60   62   61   59    62 #>  [2776,]   51   54   56   60   61   59   61   60   58    61 #>  [2777,]   51   54   56   60   61   59   61   60   58    61 #>  [2778,]   51   54   56   60   61   59   61   60   58    61 #>  [2779,]   51   54   56   60   61   59   61   60   58    61 #>  [2780,]   51   54   56   60   61   59   61   60   58    61 #>  [2781,]   51   54   56   60   61   59   61   60   58    61 #>  [2782,]   52   55   57   61   62   60   62   61   59    62 #>  [2783,]   51   54   56   60   61   59   61   60   58    61 #>  [2784,]   51   54   56   60   61   59   61   60   58    61 #>  [2785,]   51   54   56   60   61   59   61   60   58    61 #>  [2786,]   51   54   56   60   61   59   61   60   58    61 #>  [2787,]   51   54   56   60   61   59   61   60   58    61 #>  [2788,]   51   54   56   60   61   59   61   60   58    61 #>  [2789,]   51   54   56   60   61   59   61   60   58    61 #>  [2790,]   51   54   56   60   61   59   61   60   58    61 #>  [2791,]   51   54   56   60   61   59   61   60   58    61 #>  [2792,]   52   55   57   61   62   60   62   61   59    62 #>  [2793,]   52   55   57   61   62   60   62   61   59    62 #>  [2794,]   51   54   56   60   61   59   61   60   58    61 #>  [2795,]   51   54   56   60   61   59   61   60   58    61 #>  [2796,]   52   55   57   61   62   60   62   61   59    62 #>  [2797,]   52   55   57   61   62   60   62   61   59    62 #>  [2798,]   51   54   56   60   61   59   61   60   58    61 #>  [2799,]   51   54   56   60   61   59   61   60   58    61 #>  [2800,]   51   54   56   60   61   59   61   60   58    61 #>  [2801,]   53   56   58   62   63   61   63   62   60    63 #>  [2802,]   53   56   58   62   63   61   63   62   60    63 #>  [2803,]   54   57   59   63   64   62   64   63   61    64 #>  [2804,]   53   56   58   62   63   61   63   62   60    63 #>  [2805,]   53   56   58   62   63   61   63   62   60    63 #>  [2806,]   54   57   60   63   64   62   64   63   61    64 #>  [2807,]   53   56   58   62   63   61   63   62   60    63 #>  [2808,]   53   56   58   62   63   61   63   62   60    63 #>  [2809,]   53   56   58   62   63   61   63   62   60    63 #>  [2810,]   53   56   58   62   63   61   63   62   60    63 #>  [2811,]   53   56   58   62   63   61   63   62   60    63 #>  [2812,]   53   56   58   62   63   61   63   62   60    63 #>  [2813,]   53   56   58   62   63   61   63   62   60    63 #>  [2814,]   53   56   58   62   63   61   63   62   60    63 #>  [2815,]   53   56   58   62   63   61   63   62   60    63 #>  [2816,]   53   56   58   62   63   61   63   62   60    63 #>  [2817,]   53   56   58   62   63   61   63   62   60    63 #>  [2818,]   53   56   58   62   63   61   63   62   60    63 #>  [2819,]   54   57   59   63   64   62   64   63   61    64 #>  [2820,]   53   56   58   62   63   61   63   62   60    63 #>  [2821,]   53   56   58   62   63   61   63   62   60    63 #>  [2822,]   53   56   58   62   63   61   63   62   60    63 #>  [2823,]   53   56   58   62   63   61   63   62   60    63 #>  [2824,]   53   56   58   62   63   61   63   62   60    63 #>  [2825,]   54   57   60   63   64   62   64   63   61    64 #>  [2826,]   53   56   58   62   63   61   63   62   60    63 #>  [2827,]   53   56   58   62   63   61   63   62   60    63 #>  [2828,]   53   56   58   62   63   61   63   62   60    63 #>  [2829,]   53   56   58   62   63   61   63   62   60    63 #>  [2830,]   53   56   58   62   63   61   63   62   60    63 #>  [2831,]   53   56   58   62   63   61   63   62   60    63 #>  [2832,]   53   56   58   62   63   61   63   62   60    63 #>  [2833,]   54   57   60   63   64   62   64   63   61    64 #>  [2834,]   54   57   59   63   64   62   64   63   61    64 #>  [2835,]   53   56   58   62   63   61   63   62   60    63 #>  [2836,]   53   56   58   62   63   61   63   62   60    63 #>  [2837,]   53   56   58   62   63   61   63   62   60    63 #>  [2838,]   53   56   58   62   63   61   63   62   60    63 #>  [2839,]   53   56   58   62   63   61   63   62   60    63 #>  [2840,]   53   56   58   62   63   61   63   62   60    63 #>  [2841,]   53   56   58   62   63   61   63   62   60    63 #>  [2842,]   53   56   58   62   63   61   63   62   60    63 #>  [2843,]   53   56   58   62   63   61   63   62   60    63 #>  [2844,]   53   56   58   62   63   61   63   62   60    63 #>  [2845,]   53   56   58   62   63   61   63   62   60    63 #>  [2846,]   53   56   58   62   63   61   63   62   60    63 #>  [2847,]   53   56   58   62   63   61   63   62   60    63 #>  [2848,]   53   56   58   62   63   61   63   62   60    63 #>  [2849,]   53   56   58   62   63   61   63   62   60    63 #>  [2850,]   53   56   58   62   63   61   63   62   60    63 #>  [2851,]   53   56   58   62   63   61   63   62   60    63 #>  [2852,]   53   56   58   62   63   61   63   62   60    63 #>  [2853,]   53   56   58   62   63   61   63   62   60    63 #>  [2854,]   53   56   58   62   63   61   63   62   60    63 #>  [2855,]   53   56   58   62   63   61   63   62   60    63 #>  [2856,]   53   56   58   62   63   61   63   62   60    63 #>  [2857,]   53   56   58   62   63   61   63   62   60    63 #>  [2858,]   53   56   58   62   63   61   63   62   60    63 #>  [2859,]   53   56   58   62   63   61   63   62   60    63 #>  [2860,]   54   57   60   63   64   62   64   63   61    64 #>  [2861,]   53   56   58   62   63   61   63   62   60    63 #>  [2862,]   53   56   58   62   63   61   63   62   60    63 #>  [2863,]   53   56   58   62   63   61   63   62   60    63 #>  [2864,]   53   56   58   62   63   61   63   62   60    63 #>  [2865,]   54   57   60   63   64   62   64   63   61    64 #>  [2866,]   53   56   58   62   63   61   63   62   60    63 #>  [2867,]   53   56   58   62   63   61   63   62   60    63 #>  [2868,]   53   56   58   62   63   61   63   62   60    63 #>  [2869,]   53   56   58   62   63   61   63   62   60    63 #>  [2870,]   54   57   59   63   64   62   64   63   61    64 #>  [2871,]   53   56   58   62   63   61   63   62   60    63 #>  [2872,]   53   56   58   62   63   61   63   62   60    63 #>  [2873,]   54   57   60   63   64   62   64   63   61    64 #>  [2874,]   53   56   58   62   63   61   63   62   60    63 #>  [2875,]   53   56   58   62   63   61   63   62   60    63 #>  [2876,]   53   56   58   62   63   61   63   62   60    63 #>  [2877,]   53   56   58   62   63   61   63   62   60    63 #>  [2878,]   53   56   58   62   63   61   63   62   60    63 #>  [2879,]   53   56   58   62   63   61   63   62   60    63 #>  [2880,]   53   56   58   62   63   61   63   62   60    63 #>  [2881,]   53   56   58   62   63   61   63   62   60    63 #>  [2882,]   53   56   58   62   63   61   63   62   60    63 #>  [2883,]   53   56   58   62   63   61   63   62   60    63 #>  [2884,]   53   56   58   62   63   61   63   62   60    63 #>  [2885,]   53   56   58   62   63   61   63   62   60    63 #>  [2886,]   53   56   58   62   63   61   63   62   60    63 #>  [2887,]   53   56   58   62   63   61   63   62   60    63 #>  [2888,]   53   56   58   62   63   61   63   62   60    63 #>  [2889,]   53   56   58   62   63   61   63   62   60    63 #>  [2890,]   53   56   58   62   63   61   63   62   60    63 #>  [2891,]   53   56   58   62   63   61   63   62   60    63 #>  [2892,]   53   56   58   62   63   61   63   62   60    63 #>  [2893,]   54   57   59   63   64   62   64   63   61    64 #>  [2894,]   53   56   58   62   63   61   63   62   60    63 #>  [2895,]   53   56   58   62   63   61   63   62   60    63 #>  [2896,]   53   56   58   62   63   61   63   62   60    63 #>  [2897,]   53   56   58   62   63   61   63   62   60    63 #>  [2898,]   54   57   59   63   64   62   64   63   61    64 #>  [2899,]   53   56   58   62   63   61   63   62   60    63 #>  [2900,]   53   56   58   62   63   61   63   62   60    63 #>  [2901,]   55   58   61   64   65   63   65   64   62    65 #>  [2902,]   55   58   61   64   65   63   65   64   62    65 #>  [2903,]   55   58   61   64   65   63   65   64   62    65 #>  [2904,]   55   58   61   64   65   63   65   64   62    65 #>  [2905,]   55   58   61   64   65   63   65   64   62    65 #>  [2906,]   55   58   61   64   65   63   65   64   62    65 #>  [2907,]   55   58   61   64   65   63   65   64   62    65 #>  [2908,]   55   58   61   64   65   63   65   64   62    65 #>  [2909,]   55   58   61   64   65   63   65   64   62    65 #>  [2910,]   55   58   61   64   65   63   65   64   62    65 #>  [2911,]   55   58   61   64   65   63   65   64   62    65 #>  [2912,]   55   58   61   64   65   63   65   64   62    65 #>  [2913,]   55   58   61   64   65   63   65   64   62    65 #>  [2914,]   55   58   61   64   65   63   65   64   62    65 #>  [2915,]   55   58   61   64   65   63   65   64   62    65 #>  [2916,]   55   58   61   64   65   63   65   64   62    65 #>  [2917,]   55   58   61   64   65   63   65   64   62    65 #>  [2918,]   55   58   61   64   65   63   65   64   62    65 #>  [2919,]   56   59   62   65   66   64   67   66   63    66 #>  [2920,]   56   59   62   65   66   64   67   66   63    66 #>  [2921,]   55   58   61   64   65   63   65   64   62    65 #>  [2922,]   56   59   62   65   66   64   66   65   63    66 #>  [2923,]   55   58   61   64   65   63   65   64   62    65 #>  [2924,]   55   58   61   64   65   63   65   64   62    65 #>  [2925,]   55   58   61   64   65   63   65   64   62    65 #>  [2926,]   55   58   61   64   65   63   65   64   62    65 #>  [2927,]   56   59   62   65   66   64   66   65   63    66 #>  [2928,]   55   58   61   64   65   63   65   64   62    65 #>  [2929,]   56   59   62   65   66   64   67   66   63    66 #>  [2930,]   55   58   61   64   65   63   65   64   62    65 #>  [2931,]   55   58   61   64   65   63   65   64   62    65 #>  [2932,]   55   58   61   64   65   63   65   64   62    65 #>  [2933,]   55   58   61   64   65   63   65   64   62    65 #>  [2934,]   55   58   61   64   65   63   65   64   62    65 #>  [2935,]   55   58   61   64   65   63   65   64   62    65 #>  [2936,]   56   59   62   65   66   64   67   66   63    66 #>  [2937,]   55   58   61   64   65   63   65   64   62    65 #>  [2938,]   55   58   61   64   65   63   65   64   62    65 #>  [2939,]   55   58   61   64   65   63   65   64   62    65 #>  [2940,]   55   58   61   64   65   63   65   64   62    65 #>  [2941,]   55   58   61   64   65   63   65   64   62    65 #>  [2942,]   55   58   61   64   65   63   65   64   62    65 #>  [2943,]   55   58   61   64   65   63   65   64   62    65 #>  [2944,]   55   58   61   64   65   63   65   64   62    65 #>  [2945,]   55   58   61   64   65   63   65   64   62    65 #>  [2946,]   55   58   61   64   65   63   65   64   62    65 #>  [2947,]   55   58   61   64   65   63   65   64   62    65 #>  [2948,]   55   58   61   64   65   63   65   64   62    65 #>  [2949,]   55   58   61   64   65   63   65   64   62    65 #>  [2950,]   55   58   61   64   65   63   65   64   62    65 #>  [2951,]   55   58   61   64   65   63   65   64   62    65 #>  [2952,]   55   58   61   64   65   63   65   64   62    65 #>  [2953,]   55   58   61   64   65   63   65   64   62    65 #>  [2954,]   55   58   61   64   65   63   65   64   62    65 #>  [2955,]   55   58   61   64   65   63   65   64   62    65 #>  [2956,]   55   58   61   64   65   63   65   64   62    65 #>  [2957,]   55   58   61   64   65   63   65   64   62    65 #>  [2958,]   56   59   62   65   66   64   66   65   63    66 #>  [2959,]   55   58   61   64   65   63   65   64   62    65 #>  [2960,]   55   58   61   64   65   63   65   64   62    65 #>  [2961,]   55   58   61   64   65   63   65   64   62    65 #>  [2962,]   55   58   61   64   65   63   65   64   62    65 #>  [2963,]   55   58   61   64   65   63   65   64   62    65 #>  [2964,]   56   59   62   65   66   64   67   66   63    66 #>  [2965,]   55   58   61   64   65   63   65   64   62    65 #>  [2966,]   56   59   62   65   66   64   66   65   63    66 #>  [2967,]   55   58   61   64   65   63   65   64   62    65 #>  [2968,]   55   58   61   64   65   63   65   64   62    65 #>  [2969,]   55   58   61   64   65   63   65   64   62    65 #>  [2970,]   55   58   61   64   65   63   65   64   62    65 #>  [2971,]   55   58   61   64   65   63   65   64   62    65 #>  [2972,]   55   58   61   64   65   63   65   64   62    65 #>  [2973,]   55   58   61   64   65   63   65   64   62    65 #>  [2974,]   55   58   61   64   65   63   65   64   62    65 #>  [2975,]   55   58   61   64   65   63   65   64   62    65 #>  [2976,]   55   58   61   64   65   63   65   64   62    65 #>  [2977,]   56   59   62   65   66   64   67   66   63    66 #>  [2978,]   55   58   61   64   65   63   65   64   62    65 #>  [2979,]   55   58   61   64   65   63   65   64   62    65 #>  [2980,]   55   58   61   64   65   63   65   64   62    65 #>  [2981,]   56   59   62   65   66   64   66   65   63    66 #>  [2982,]   55   58   61   64   65   63   65   64   62    65 #>  [2983,]   55   58   61   64   65   63   65   64   62    65 #>  [2984,]   55   58   61   64   65   63   65   64   62    65 #>  [2985,]   55   58   61   64   65   63   65   64   62    65 #>  [2986,]   55   58   61   64   65   63   65   64   62    65 #>  [2987,]   56   59   62   65   66   64   66   65   63    66 #>  [2988,]   55   58   61   64   65   63   65   64   62    65 #>  [2989,]   55   58   61   64   65   63   65   64   62    65 #>  [2990,]   55   58   61   64   65   63   65   64   62    65 #>  [2991,]   55   58   61   64   65   63   65   64   62    65 #>  [2992,]   55   58   61   64   65   63   65   64   62    65 #>  [2993,]   55   58   61   64   65   63   65   64   62    65 #>  [2994,]   55   58   61   64   65   63   65   64   62    65 #>  [2995,]   55   58   61   64   65   63   65   64   62    65 #>  [2996,]   55   58   61   64   65   63   65   64   62    65 #>  [2997,]   56   59   62   65   66   64   67   66   63    66 #>  [2998,]   55   58   61   64   65   63   65   64   62    65 #>  [2999,]   55   58   61   64   65   63   65   64   62    65 #>  [3000,]   56   59   62   65   66   64   67   66   63    66 #>  [3001,]   58   61   64   67   68   66   68   67   64    67 #>  [3002,]   58   61   64   67   68   66   68   67   64    67 #>  [3003,]   57   60   63   66   67   65   70   68   65    68 #>  [3004,]   58   61   64   67   68   66   68   67   64    67 #>  [3005,]   58   61   64   67   68   66   68   67   64    67 #>  [3006,]   58   61   64   67   68   66   68   67   64    67 #>  [3007,]   57   60   63   66   67   65   70   68   65    68 #>  [3008,]   57   60   63   66   67   65   69   68   65    68 #>  [3009,]   58   61   64   67   68   66   68   67   64    67 #>  [3010,]   58   61   64   67   68   66   68   67   64    67 #>  [3011,]   58   61   64   67   68   66   68   67   64    67 #>  [3012,]   58   61   64   67   68   66   68   67   64    67 #>  [3013,]   58   61   64   67   68   66   68   67   64    67 #>  [3014,]   58   61   64   67   68   66   68   67   64    67 #>  [3015,]   58   61   64   67   68   66   68   67   64    67 #>  [3016,]   58   61   64   67   68   66   68   67   64    67 #>  [3017,]   58   61   64   67   68   66   68   67   64    67 #>  [3018,]   58   61   64   67   68   66   68   67   64    67 #>  [3019,]   58   61   64   67   68   66   68   67   64    67 #>  [3020,]   57   60   63   66   67   65   70   68   65    68 #>  [3021,]   58   61   64   67   68   66   68   67   64    67 #>  [3022,]   58   61   64   67   68   66   68   67   64    67 #>  [3023,]   58   61   64   67   68   66   68   67   64    67 #>  [3024,]   58   61   64   67   68   66   68   67   64    67 #>  [3025,]   57   60   63   66   67   65   70   68   65    68 #>  [3026,]   58   61   64   67   68   66   68   67   64    67 #>  [3027,]   58   61   64   67   68   66   68   67   64    67 #>  [3028,]   58   61   64   67   68   66   68   67   64    67 #>  [3029,]   58   61   64   67   68   66   68   67   64    67 #>  [3030,]   58   61   64   67   68   66   68   67   64    67 #>  [3031,]   58   61   64   67   68   66   68   67   64    67 #>  [3032,]   58   61   64   67   68   66   68   67   64    67 #>  [3033,]   58   61   64   67   68   66   68   67   64    67 #>  [3034,]   58   61   64   67   68   66   68   67   64    67 #>  [3035,]   58   61   64   67   68   66   68   67   64    67 #>  [3036,]   58   61   64   67   68   66   68   67   64    67 #>  [3037,]   58   61   64   67   68   66   68   67   64    67 #>  [3038,]   58   61   64   67   68   66   68   67   64    67 #>  [3039,]   57   60   63   66   67   65   70   68   65    68 #>  [3040,]   58   61   64   67   68   66   68   67   64    67 #>  [3041,]   58   61   64   67   68   66   68   67   64    67 #>  [3042,]   58   61   64   67   68   66   68   67   64    67 #>  [3043,]   58   61   64   67   68   66   68   67   64    67 #>  [3044,]   57   60   63   66   67   65   69   68   65    68 #>  [3045,]   58   61   64   67   68   66   68   67   64    67 #>  [3046,]   57   60   63   66   67   65   70   68   65    68 #>  [3047,]   58   61   64   67   68   66   68   67   64    67 #>  [3048,]   58   61   64   67   68   66   68   67   64    67 #>  [3049,]   57   60   63   66   67   65   69   68   65    68 #>  [3050,]   57   60   63   66   67   65   70   68   65    68 #>  [3051,]   58   61   64   67   68   66   68   67   64    67 #>  [3052,]   58   61   64   67   68   66   68   67   64    67 #>  [3053,]   57   60   63   66   67   65   70   68   65    68 #>  [3054,]   58   61   64   67   68   66   68   67   64    67 #>  [3055,]   57   60   63   66   67   65   69   68   65    68 #>  [3056,]   57   60   63   66   67   65   70   68   65    68 #>  [3057,]   58   61   64   67   68   66   68   67   64    67 #>  [3058,]   58   61   64   67   68   66   68   67   64    67 #>  [3059,]   57   60   63   66   67   65   70   68   65    68 #>  [3060,]   58   61   64   67   68   66   68   67   64    67 #>  [3061,]   58   61   64   67   68   66   68   67   64    67 #>  [3062,]   58   61   64   67   68   66   68   67   64    67 #>  [3063,]   58   61   64   67   68   66   68   67   64    67 #>  [3064,]   58   61   64   67   68   66   68   67   64    67 #>  [3065,]   57   60   63   66   67   65   70   68   65    68 #>  [3066,]   57   60   63   66   67   65   69   68   65    68 #>  [3067,]   58   61   64   67   68   66   68   67   64    67 #>  [3068,]   58   61   64   67   68   66   68   67   64    67 #>  [3069,]   58   61   64   67   68   66   68   67   64    67 #>  [3070,]   57   60   63   66   67   65   70   68   65    68 #>  [3071,]   58   61   64   67   68   66   68   67   64    67 #>  [3072,]   57   60   63   66   67   65   70   68   65    68 #>  [3073,]   58   61   64   67   68   66   68   67   64    67 #>  [3074,]   58   61   64   67   68   66   68   67   64    67 #>  [3075,]   58   61   64   67   68   66   68   67   64    67 #>  [3076,]   58   61   64   67   68   66   68   67   64    67 #>  [3077,]   58   61   64   67   68   66   68   67   64    67 #>  [3078,]   58   61   64   67   68   66   68   67   64    67 #>  [3079,]   58   61   64   67   68   66   68   67   64    67 #>  [3080,]   58   61   64   67   68   66   68   67   64    67 #>  [3081,]   58   61   64   67   68   66   68   67   64    67 #>  [3082,]   58   61   64   67   68   66   68   67   64    67 #>  [3083,]   58   61   64   67   68   66   68   67   64    67 #>  [3084,]   57   60   63   66   67   65   70   68   65    68 #>  [3085,]   58   61   64   67   68   66   68   67   64    67 #>  [3086,]   57   60   63   66   67   65   70   68   65    68 #>  [3087,]   58   61   64   67   68   66   68   67   64    67 #>  [3088,]   58   61   64   67   68   66   68   67   64    67 #>  [3089,]   58   61   64   67   68   66   68   67   64    67 #>  [3090,]   57   60   63   66   67   65   69   68   65    68 #>  [3091,]   58   61   64   67   68   66   68   67   64    67 #>  [3092,]   58   61   64   67   68   66   68   67   64    67 #>  [3093,]   58   61   64   67   68   66   68   67   64    67 #>  [3094,]   58   61   64   67   68   66   68   67   64    67 #>  [3095,]   58   61   64   67   68   66   68   67   64    67 #>  [3096,]   58   61   64   67   68   66   68   67   64    67 #>  [3097,]   58   61   64   67   68   66   68   67   64    67 #>  [3098,]   57   60   63   66   67   65   70   68   65    68 #>  [3099,]   58   61   64   67   68   66   68   67   64    67 #>  [3100,]   57   60   63   66   67   65   70   68   65    68 #>  [3101,]   60   63   66   69   69   68   73   71   68    70 #>  [3102,]   60   63   66   69   69   67   71   69   66    69 #>  [3103,]   59   62   65   68   69   67   71   69   66    69 #>  [3104,]   59   62   65   68   69   68   72   70   67    70 #>  [3105,]   60   63   66   69   69   68   72   70   67    70 #>  [3106,]   60   63   66   69   69   67   71   69   66    69 #>  [3107,]   59   62   65   68   69   67   71   69   66    69 #>  [3108,]   59   62   65   68   69   67   71   69   66    69 #>  [3109,]   60   63   66   69   69   67   71   69   66    69 #>  [3110,]   60   63   66   69   69   68   72   70   67    70 #>  [3111,]   60   63   66   69   69   68   73   71   68    70 #>  [3112,]   59   62   65   68   69   68   73   71   68    70 #>  [3113,]   60   63   66   69   69   68   73   71   68    70 #>  [3114,]   60   63   66   69   69   68   73   71   68    70 #>  [3115,]   60   63   66   69   69   68   73   71   68    70 #>  [3116,]   60   63   66   69   69   68   73   71   68    70 #>  [3117,]   60   63   66   69   69   68   73   71   68    70 #>  [3118,]   60   63   66   69   69   68   72   70   67    70 #>  [3119,]   60   63   66   69   69   68   73   71   68    70 #>  [3120,]   60   63   66   69   69   67   71   69   66    69 #>  [3121,]   60   63   66   69   69   67   71   69   66    69 #>  [3122,]   60   63   66   69   69   68   73   71   68    70 #>  [3123,]   60   63   66   69   69   67   71   69   66    69 #>  [3124,]   60   63   66   69   69   68   72   70   67    70 #>  [3125,]   59   62   65   68   69   67   71   69   66    69 #>  [3126,]   60   63   66   69   69   68   73   71   68    70 #>  [3127,]   60   63   66   69   69   68   73   71   68    70 #>  [3128,]   60   63   66   69   69   68   73   71   68    70 #>  [3129,]   60   63   66   69   69   67   71   69   66    69 #>  [3130,]   60   63   66   69   69   67   71   69   66    69 #>  [3131,]   59   62   65   68   69   68   73   71   68    70 #>  [3132,]   60   63   66   69   69   68   72   70   67    70 #>  [3133,]   60   63   66   69   69   68   73   71   68    70 #>  [3134,]   60   63   66   69   69   67   71   69   66    69 #>  [3135,]   60   63   66   69   69   67   71   69   66    69 #>  [3136,]   60   63   66   69   69   67   71   69   66    69 #>  [3137,]   60   63   66   69   69   67   71   69   66    69 #>  [3138,]   60   63   66   69   69   68   73   71   68    70 #>  [3139,]   60   63   66   69   69   68   72   70   67    70 #>  [3140,]   60   63   66   69   69   67   71   69   66    69 #>  [3141,]   60   63   66   69   69   67   71   69   66    69 #>  [3142,]   60   63   66   69   69   67   71   69   66    69 #>  [3143,]   60   63   66   69   69   68   72   70   67    70 #>  [3144,]   60   63   66   69   69   67   71   69   66    69 #>  [3145,]   60   63   66   69   69   67   71   69   66    69 #>  [3146,]   60   63   66   69   69   68   73   71   68    70 #>  [3147,]   60   63   66   69   69   68   73   71   68    70 #>  [3148,]   60   63   66   69   69   68   72   70   67    70 #>  [3149,]   60   63   66   69   69   67   71   69   66    69 #>  [3150,]   60   63   66   69   69   67   71   69   66    69 #>  [3151,]   60   63   66   69   69   68   72   70   67    70 #>  [3152,]   59   62   65   68   69   68   73   71   68    70 #>  [3153,]   60   63   66   69   69   67   71   69   66    69 #>  [3154,]   60   63   66   69   69   67   71   69   66    69 #>  [3155,]   60   63   66   69   69   67   71   69   66    69 #>  [3156,]   60   63   66   69   69   67   71   69   66    69 #>  [3157,]   60   63   66   69   69   67   71   69   66    69 #>  [3158,]   60   63   66   69   69   68   73   71   68    70 #>  [3159,]   59   62   65   68   69   68   73   71   68    70 #>  [3160,]   59   62   65   68   69   67   71   69   66    69 #>  [3161,]   60   63   66   69   69   68   73   71   68    70 #>  [3162,]   60   63   66   69   69   67   71   69   66    69 #>  [3163,]   60   63   66   69   69   68   73   71   68    70 #>  [3164,]   60   63   66   69   69   67   71   69   66    69 #>  [3165,]   60   63   66   69   69   67   71   69   66    69 #>  [3166,]   60   63   66   69   69   68   72   70   67    70 #>  [3167,]   60   63   66   69   69   67   71   69   66    69 #>  [3168,]   60   63   66   69   69   68   73   71   68    70 #>  [3169,]   60   63   66   69   69   68   73   71   68    70 #>  [3170,]   60   63   66   69   69   68   73   71   68    70 #>  [3171,]   60   63   66   69   69   68   73   71   68    70 #>  [3172,]   60   63   66   69   69   67   71   69   66    69 #>  [3173,]   60   63   66   69   69   67   71   69   66    69 #>  [3174,]   60   63   66   69   69   67   71   69   66    69 #>  [3175,]   60   63   66   69   69   68   73   71   68    70 #>  [3176,]   60   63   66   69   69   67   71   69   66    69 #>  [3177,]   60   63   66   69   69   68   73   71   68    70 #>  [3178,]   60   63   66   69   69   68   72   70   67    70 #>  [3179,]   60   63   66   69   69   68   73   71   68    70 #>  [3180,]   60   63   66   69   69   67   71   69   66    69 #>  [3181,]   60   63   66   69   69   67   71   69   66    69 #>  [3182,]   60   63   66   69   69   67   71   69   66    69 #>  [3183,]   60   63   66   69   69   68   73   71   68    70 #>  [3184,]   60   63   66   69   69   67   71   69   66    69 #>  [3185,]   60   63   66   69   69   67   71   69   66    69 #>  [3186,]   60   63   66   69   69   67   71   69   66    69 #>  [3187,]   60   63   66   69   69   68   73   71   68    70 #>  [3188,]   60   63   66   69   69   67   71   69   66    69 #>  [3189,]   60   63   66   69   69   67   71   69   66    69 #>  [3190,]   60   63   66   69   69   68   73   71   68    70 #>  [3191,]   60   63   66   69   69   68   72   70   67    70 #>  [3192,]   60   63   66   69   69   68   73   71   68    70 #>  [3193,]   60   63   66   69   69   68   73   71   68    70 #>  [3194,]   60   63   66   69   69   67   71   69   66    69 #>  [3195,]   60   63   66   69   69   68   72   70   67    70 #>  [3196,]   59   62   65   68   69   68   73   71   68    70 #>  [3197,]   59   62   65   68   69   67   71   69   66    69 #>  [3198,]   60   63   66   69   69   67   71   69   66    69 #>  [3199,]   60   63   66   69   69   67   71   69   66    69 #>  [3200,]   60   63   66   69   69   68   73   71   68    70 #>  [3201,]   62   65   68   71   70   69   74   72   69    71 #>  [3202,]   62   65   68   71   70   69   74   72   69    71 #>  [3203,]   62   65   68   71   70   69   74   72   69    71 #>  [3204,]   62   65   68   71   70   69   74   72   69    71 #>  [3205,]   62   65   68   71   70   69   74   72   69    71 #>  [3206,]   62   65   68   71   70   69   74   72   69    71 #>  [3207,]   62   65   68   71   70   69   74   72   69    71 #>  [3208,]   62   65   68   71   70   69   74   72   69    71 #>  [3209,]   62   65   68   71   70   69   74   72   69    71 #>  [3210,]   62   65   68   71   70   69   74   72   69    71 #>  [3211,]   62   65   68   71   70   69   74   72   69    71 #>  [3212,]   61   64   67   70   71   70   75   73   70    72 #>  [3213,]   62   65   68   71   70   69   74   72   69    71 #>  [3214,]   62   65   68   71   70   69   74   72   69    71 #>  [3215,]   61   64   67   70   72   71   76   74   70    72 #>  [3216,]   62   65   68   71   70   69   74   72   69    71 #>  [3217,]   61   64   67   70   71   70   75   73   70    72 #>  [3218,]   62   65   68   71   70   69   74   72   69    71 #>  [3219,]   62   65   68   71   70   69   74   72   69    71 #>  [3220,]   62   65   68   71   70   69   74   72   69    71 #>  [3221,]   62   65   68   71   70   69   74   72   69    71 #>  [3222,]   62   65   68   71   70   69   74   72   69    71 #>  [3223,]   61   64   67   70   71   70   75   73   70    72 #>  [3224,]   62   65   68   71   70   69   74   72   69    71 #>  [3225,]   62   65   68   71   70   69   74   72   69    71 #>  [3226,]   62   65   68   71   70   69   74   72   69    71 #>  [3227,]   62   65   68   71   70   69   74   72   69    71 #>  [3228,]   62   65   68   71   70   69   74   72   69    71 #>  [3229,]   61   64   67   70   72   71   76   74   70    72 #>  [3230,]   62   65   68   71   70   69   74   72   69    71 #>  [3231,]   61   64   67   70   71   70   75   73   70    72 #>  [3232,]   62   65   68   71   70   69   74   72   69    71 #>  [3233,]   62   65   68   71   70   69   74   72   69    71 #>  [3234,]   61   64   67   70   71   70   75   73   70    72 #>  [3235,]   62   65   68   71   70   69   74   72   69    71 #>  [3236,]   62   65   68   71   70   69   74   72   69    71 #>  [3237,]   61   64   67   70   72   71   76   74   70    72 #>  [3238,]   62   65   68   71   70   69   74   72   69    71 #>  [3239,]   62   65   68   71   70   69   74   72   69    71 #>  [3240,]   62   65   68   71   70   69   74   72   69    71 #>  [3241,]   62   65   68   71   70   69   74   72   69    71 #>  [3242,]   61   64   67   70   71   70   75   73   70    72 #>  [3243,]   61   64   67   70   71   70   75   73   70    72 #>  [3244,]   61   64   67   70   71   70   75   73   70    72 #>  [3245,]   62   65   68   71   70   69   74   72   69    71 #>  [3246,]   62   65   68   71   70   69   74   72   69    71 #>  [3247,]   62   65   68   71   70   69   74   72   69    71 #>  [3248,]   61   64   67   70   71   70   75   73   70    72 #>  [3249,]   62   65   68   71   70   69   74   72   69    71 #>  [3250,]   62   65   68   71   70   69   74   72   69    71 #>  [3251,]   62   65   68   71   70   69   74   72   69    71 #>  [3252,]   62   65   68   71   70   69   74   72   69    71 #>  [3253,]   62   65   68   71   70   69   74   72   69    71 #>  [3254,]   62   65   68   71   70   69   74   72   69    71 #>  [3255,]   62   65   68   71   70   69   74   72   69    71 #>  [3256,]   62   65   68   71   70   69   74   72   69    71 #>  [3257,]   62   65   68   71   70   69   74   72   69    71 #>  [3258,]   62   65   68   71   70   69   74   72   69    71 #>  [3259,]   62   65   68   71   70   69   74   72   69    71 #>  [3260,]   62   65   68   71   70   69   74   72   69    71 #>  [3261,]   62   65   68   71   70   69   74   72   69    71 #>  [3262,]   62   65   68   71   70   69   74   72   69    71 #>  [3263,]   61   64   67   70   71   70   75   73   70    72 #>  [3264,]   61   64   67   70   72   71   76   74   70    72 #>  [3265,]   62   65   68   71   70   69   74   72   69    71 #>  [3266,]   62   65   68   71   70   69   74   72   69    71 #>  [3267,]   62   65   68   71   70   69   74   72   69    71 #>  [3268,]   62   65   68   71   70   69   74   72   69    71 #>  [3269,]   62   65   68   71   70   69   74   72   69    71 #>  [3270,]   61   64   67   70   71   70   75   73   70    72 #>  [3271,]   62   65   68   71   70   69   74   72   69    71 #>  [3272,]   62   65   68   71   70   69   74   72   69    71 #>  [3273,]   62   65   68   71   70   69   74   72   69    71 #>  [3274,]   62   65   68   71   70   69   74   72   69    71 #>  [3275,]   61   64   67   70   71   70   75   73   70    72 #>  [3276,]   62   65   68   71   70   69   74   72   69    71 #>  [3277,]   62   65   68   71   70   69   74   72   69    71 #>  [3278,]   61   64   67   70   71   70   75   73   70    72 #>  [3279,]   61   64   67   70   71   70   75   73   70    72 #>  [3280,]   62   65   68   71   70   69   74   72   69    71 #>  [3281,]   61   64   67   70   72   71   76   74   70    72 #>  [3282,]   62   65   68   71   70   69   74   72   69    71 #>  [3283,]   62   65   68   71   70   69   74   72   69    71 #>  [3284,]   62   65   68   71   70   69   74   72   69    71 #>  [3285,]   62   65   68   71   70   69   74   72   69    71 #>  [3286,]   62   65   68   71   70   69   74   72   69    71 #>  [3287,]   62   65   68   71   70   69   74   72   69    71 #>  [3288,]   62   65   68   71   70   69   74   72   69    71 #>  [3289,]   62   65   68   71   70   69   74   72   69    71 #>  [3290,]   62   65   68   71   70   69   74   72   69    71 #>  [3291,]   62   65   68   71   70   69   74   72   69    71 #>  [3292,]   62   65   68   71   70   69   74   72   69    71 #>  [3293,]   62   65   68   71   70   69   74   72   69    71 #>  [3294,]   61   64   67   70   71   70   75   73   70    72 #>  [3295,]   61   64   67   70   72   71   76   74   70    72 #>  [3296,]   62   65   68   71   70   69   74   72   69    71 #>  [3297,]   62   65   68   71   70   69   74   72   69    71 #>  [3298,]   62   65   68   71   70   69   74   72   69    71 #>  [3299,]   62   65   68   71   70   69   74   72   69    71 #>  [3300,]   61   64   67   70   72   71   76   74   70    72 #>  [3301,]   64   67   70   72   74   73   78   76   71    74 #>  [3302,]   64   67   70   72   73   72   77   75   71    73 #>  [3303,]   63   66   69   72   73   72   77   75   71    73 #>  [3304,]   64   67   70   72   74   73   78   76   71    74 #>  [3305,]   63   66   69   72   74   73   78   76   71    74 #>  [3306,]   63   66   69   72   73   72   77   75   71    74 #>  [3307,]   64   67   70   72   73   72   77   75   71    73 #>  [3308,]   64   67   70   72   73   72   77   75   71    74 #>  [3309,]   64   67   70   72   73   72   77   75   71    74 #>  [3310,]   64   67   70   72   74   73   78   76   71    73 #>  [3311,]   63   66   69   72   74   73   78   76   71    74 #>  [3312,]   63   66   69   72   74   73   78   76   71    74 #>  [3313,]   64   67   70   72   74   73   78   76   71    73 #>  [3314,]   63   66   69   72   74   73   78   76   71    74 #>  [3315,]   64   67   70   72   74   73   78   76   71    74 #>  [3316,]   64   67   70   72   74   73   78   76   71    73 #>  [3317,]   64   67   70   72   74   73   78   76   71    73 #>  [3318,]   64   67   70   72   74   73   78   76   71    73 #>  [3319,]   63   66   69   72   74   73   78   76   71    73 #>  [3320,]   63   66   69   72   73   72   77   75   71    74 #>  [3321,]   64   67   70   72   73   72   77   75   71    73 #>  [3322,]   63   66   69   72   74   73   78   76   71    73 #>  [3323,]   64   67   70   72   73   72   77   75   71    73 #>  [3324,]   63   66   69   72   74   73   78   76   71    73 #>  [3325,]   64   67   70   72   73   72   77   75   71    73 #>  [3326,]   63   66   69   72   74   73   78   76   71    74 #>  [3327,]   64   67   70   72   74   73   78   76   71    74 #>  [3328,]   64   67   70   72   74   73   78   76   71    74 #>  [3329,]   63   66   69   72   73   72   77   75   71    73 #>  [3330,]   63   66   69   72   74   73   78   76   71    73 #>  [3331,]   64   67   70   72   74   73   78   76   71    73 #>  [3332,]   63   66   69   72   74   73   78   76   71    73 #>  [3333,]   63   66   69   72   74   73   78   76   71    74 #>  [3334,]   63   66   69   72   73   72   77   75   71    73 #>  [3335,]   63   66   69   72   73   72   77   75   71    73 #>  [3336,]   63   66   69   72   73   72   77   75   71    73 #>  [3337,]   64   67   70   72   73   72   77   75   71    73 #>  [3338,]   64   67   70   72   74   73   78   76   71    74 #>  [3339,]   64   67   70   72   74   73   78   76   71    73 #>  [3340,]   63   66   69   72   74   73   78   76   71    73 #>  [3341,]   63   66   69   72   73   72   77   75   71    74 #>  [3342,]   63   66   69   72   73   72   77   75   71    74 #>  [3343,]   64   67   70   72   74   73   78   76   71    74 #>  [3344,]   64   67   70   72   73   72   77   75   71    73 #>  [3345,]   64   67   70   72   73   72   77   75   71    74 #>  [3346,]   64   67   70   72   74   73   78   76   71    74 #>  [3347,]   64   67   70   72   74   73   78   76   71    73 #>  [3348,]   63   66   69   72   74   73   78   76   71    73 #>  [3349,]   64   67   70   72   74   73   78   76   71    73 #>  [3350,]   64   67   70   72   73   72   77   75   71    74 #>  [3351,]   63   66   69   72   74   73   78   76   71    74 #>  [3352,]   63   66   69   72   74   73   78   76   71    74 #>  [3353,]   64   67   70   72   73   72   77   75   71    74 #>  [3354,]   63   66   69   72   73   72   77   75   71    73 #>  [3355,]   63   66   69   72   73   72   77   75   71    74 #>  [3356,]   64   67   70   72   73   72   77   75   71    74 #>  [3357,]   63   66   69   72   73   72   77   75   71    74 #>  [3358,]   63   66   69   72   74   73   78   76   71    74 #>  [3359,]   64   67   70   72   74   73   78   76   71    73 #>  [3360,]   63   66   69   72   73   72   77   75   71    74 #>  [3361,]   64   67   70   72   74   73   78   76   71    74 #>  [3362,]   63   66   69   72   73   72   77   75   71    73 #>  [3363,]   63   66   69   72   74   73   78   76   71    74 #>  [3364,]   64   67   70   72   73   72   77   75   71    74 #>  [3365,]   64   67   70   72   73   72   77   75   71    74 #>  [3366,]   63   66   69   72   74   73   78   76   71    74 #>  [3367,]   63   66   69   72   73   72   77   75   71    74 #>  [3368,]   63   66   69   72   74   73   78   76   71    74 #>  [3369,]   63   66   69   72   74   73   78   76   71    74 #>  [3370,]   64   67   70   72   74   73   78   76   71    73 #>  [3371,]   64   67   70   72   74   73   78   76   71    74 #>  [3372,]   64   67   70   72   73   72   77   75   71    74 #>  [3373,]   64   67   70   72   73   72   77   75   71    74 #>  [3374,]   64   67   70   72   73   72   77   75   71    74 #>  [3375,]   64   67   70   72   74   73   78   76   71    74 #>  [3376,]   64   67   70   72   73   72   77   75   71    74 #>  [3377,]   64   67   70   72   74   73   78   76   71    73 #>  [3378,]   63   66   69   72   74   73   78   76   71    74 #>  [3379,]   64   67   70   72   74   73   78   76   71    73 #>  [3380,]   63   66   69   72   73   72   77   75   71    73 #>  [3381,]   63   66   69   72   73   72   77   75   71    74 #>  [3382,]   64   67   70   72   73   72   77   75   71    74 #>  [3383,]   63   66   69   72   74   73   78   76   71    73 #>  [3384,]   64   67   70   72   73   72   77   75   71    74 #>  [3385,]   64   67   70   72   73   72   77   75   71    73 #>  [3386,]   64   67   70   72   73   72   77   75   71    73 #>  [3387,]   64   67   70   72   74   73   78   76   71    74 #>  [3388,]   64   67   70   72   73   72   77   75   71    74 #>  [3389,]   63   66   69   72   73   72   77   75   71    74 #>  [3390,]   64   67   70   72   74   73   78   76   71    74 #>  [3391,]   63   66   69   72   74   73   78   76   71    74 #>  [3392,]   64   67   70   72   74   73   78   76   71    74 #>  [3393,]   63   66   69   72   74   73   78   76   71    73 #>  [3394,]   64   67   70   72   73   72   77   75   71    74 #>  [3395,]   64   67   70   72   74   73   78   76   71    73 #>  [3396,]   64   67   70   72   74   73   78   76   71    74 #>  [3397,]   64   67   70   72   73   72   77   75   71    74 #>  [3398,]   63   66   69   72   73   72   77   75   71    73 #>  [3399,]   63   66   69   72   73   72   77   75   71    74 #>  [3400,]   64   67   70   72   74   73   78   76   71    73 #>  [3401,]   65   68   72   74   75   74   79   77   72    75 #>  [3402,]   65   68   73   74   75   74   79   77   72    75 #>  [3403,]   66   69   71   73   77   75   80   78   73    76 #>  [3404,]   65   68   72   74   75   74   79   77   72    75 #>  [3405,]   65   68   73   74   75   74   79   77   72    75 #>  [3406,]   66   69   71   73   77   75   80   78   73    76 #>  [3407,]   65   68   73   74   75   74   79   77   72    75 #>  [3408,]   65   68   72   74   75   74   79   77   72    75 #>  [3409,]   65   68   72   74   75   74   79   77   72    75 #>  [3410,]   65   68   73   74   75   74   79   77   72    75 #>  [3411,]   65   68   72   74   75   74   79   77   72    75 #>  [3412,]   66   69   71   73   76   75   80   78   73    76 #>  [3413,]   65   68   72   74   75   74   79   77   72    75 #>  [3414,]   65   68   72   74   75   74   79   77   72    75 #>  [3415,]   65   68   72   74   75   74   79   77   72    75 #>  [3416,]   65   68   72   74   75   74   79   77   72    75 #>  [3417,]   65   68   72   74   75   74   79   77   72    75 #>  [3418,]   65   68   73   74   75   74   79   77   72    75 #>  [3419,]   66   69   71   73   76   75   80   78   73    76 #>  [3420,]   65   68   73   74   75   74   79   77   72    75 #>  [3421,]   65   68   72   74   75   74   79   77   72    75 #>  [3422,]   65   68   72   74   75   74   79   77   72    75 #>  [3423,]   65   68   73   74   75   74   79   77   72    75 #>  [3424,]   65   68   73   74   75   74   79   77   72    75 #>  [3425,]   66   69   71   73   76   75   80   78   73    76 #>  [3426,]   65   68   73   74   75   74   79   77   72    75 #>  [3427,]   65   68   72   74   75   74   79   77   72    75 #>  [3428,]   66   69   71   73   76   75   80   78   73    76 #>  [3429,]   65   68   73   74   75   74   79   77   72    75 #>  [3430,]   65   68   72   74   75   74   79   77   72    75 #>  [3431,]   65   68   73   74   75   74   79   77   72    75 #>  [3432,]   65   68   73   74   75   74   79   77   72    75 #>  [3433,]   66   69   71   73   76   75   80   78   73    76 #>  [3434,]   66   69   71   73   77   75   80   78   73    76 #>  [3435,]   65   68   72   74   75   74   79   77   72    75 #>  [3436,]   65   68   73   74   75   74   79   77   72    75 #>  [3437,]   65   68   73   74   75   74   79   77   72    75 #>  [3438,]   65   68   73   74   75   74   79   77   72    75 #>  [3439,]   65   68   73   74   75   74   79   77   72    75 #>  [3440,]   65   68   73   74   75   74   79   77   72    75 #>  [3441,]   65   68   72   74   75   74   79   77   72    75 #>  [3442,]   65   68   73   74   75   74   79   77   72    75 #>  [3443,]   65   68   72   74   75   74   79   77   72    75 #>  [3444,]   65   68   72   74   75   74   79   77   72    75 #>  [3445,]   65   68   72   74   75   74   79   77   72    75 #>  [3446,]   65   68   72   74   75   74   79   77   72    75 #>  [3447,]   65   68   73   74   75   74   79   77   72    75 #>  [3448,]   65   68   73   74   75   74   79   77   72    75 #>  [3449,]   65   68   72   74   75   74   79   77   72    75 #>  [3450,]   65   68   73   74   75   74   79   77   72    75 #>  [3451,]   65   68   73   74   75   74   79   77   72    75 #>  [3452,]   65   68   72   74   75   74   79   77   72    75 #>  [3453,]   65   68   73   74   75   74   79   77   72    75 #>  [3454,]   65   68   72   74   75   74   79   77   72    75 #>  [3455,]   65   68   72   74   75   74   79   77   72    75 #>  [3456,]   65   68   73   74   75   74   79   77   72    75 #>  [3457,]   65   68   73   74   75   74   79   77   72    75 #>  [3458,]   65   68   72   74   75   74   79   77   72    75 #>  [3459,]   65   68   73   74   75   74   79   77   72    75 #>  [3460,]   66   69   71   73   77   75   80   78   73    76 #>  [3461,]   65   68   73   74   75   74   79   77   72    75 #>  [3462,]   65   68   72   74   75   74   79   77   72    75 #>  [3463,]   65   68   73   74   75   74   79   77   72    75 #>  [3464,]   65   68   73   74   75   74   79   77   72    75 #>  [3465,]   66   69   71   73   77   75   80   78   73    76 #>  [3466,]   65   68   72   74   75   74   79   77   72    75 #>  [3467,]   65   68   72   74   75   74   79   77   72    75 #>  [3468,]   65   68   72   74   75   74   79   77   72    75 #>  [3469,]   65   68   72   74   75   74   79   77   72    75 #>  [3470,]   66   69   71   73   77   75   80   78   73    76 #>  [3471,]   65   68   73   74   75   74   79   77   72    75 #>  [3472,]   65   68   73   74   75   74   79   77   72    75 #>  [3473,]   66   69   71   73   77   75   80   78   73    76 #>  [3474,]   65   68   72   74   75   74   79   77   72    75 #>  [3475,]   65   68   73   74   75   74   79   77   72    75 #>  [3476,]   65   68   73   74   75   74   79   77   72    75 #>  [3477,]   65   68   73   74   75   74   79   77   72    75 #>  [3478,]   65   68   73   74   75   74   79   77   72    75 #>  [3479,]   65   68   72   74   75   74   79   77   72    75 #>  [3480,]   65   68   72   74   75   74   79   77   72    75 #>  [3481,]   65   68   72   74   75   74   79   77   72    75 #>  [3482,]   65   68   72   74   75   74   79   77   72    75 #>  [3483,]   65   68   72   74   75   74   79   77   72    75 #>  [3484,]   65   68   73   74   75   74   79   77   72    75 #>  [3485,]   65   68   72   74   75   74   79   77   72    75 #>  [3486,]   65   68   73   74   75   74   79   77   72    75 #>  [3487,]   65   68   72   74   75   74   79   77   72    75 #>  [3488,]   65   68   72   74   75   74   79   77   72    75 #>  [3489,]   65   68   72   74   75   74   79   77   72    75 #>  [3490,]   65   68   72   74   75   74   79   77   72    75 #>  [3491,]   65   68   72   74   75   74   79   77   72    75 #>  [3492,]   65   68   72   74   75   74   79   77   72    75 #>  [3493,]   66   69   71   73   77   75   80   78   73    76 #>  [3494,]   65   68   73   74   75   74   79   77   72    75 #>  [3495,]   65   68   72   74   75   74   79   77   72    75 #>  [3496,]   65   68   72   74   75   74   79   77   72    75 #>  [3497,]   66   69   71   73   76   75   80   78   73    76 #>  [3498,]   66   69   71   73   76   75   80   78   73    76 #>  [3499,]   65   68   72   74   75   74   79   77   72    75 #>  [3500,]   65   68   73   74   75   74   79   77   72    75 #>  [3501,]   67   70   74   76   79   77   82   80   75    78 #>  [3502,]   67   70   74   76   79   77   82   80   75    78 #>  [3503,]   67   71   74   75   78   76   81   79   74    77 #>  [3504,]   67   70   74   75   78   76   81   79   74    77 #>  [3505,]   67   70   74   75   78   76   81   79   74    77 #>  [3506,]   67   71   74   75   78   76   81   79   74    77 #>  [3507,]   67   70   74   76   79   77   82   80   75    78 #>  [3508,]   67   70   74   76   79   77   82   80   75    78 #>  [3509,]   67   70   74   75   78   76   81   79   74    77 #>  [3510,]   67   70   74   75   78   76   81   79   74    77 #>  [3511,]   67   70   74   75   78   76   81   79   74    77 #>  [3512,]   67   71   74   76   79   77   82   80   75    78 #>  [3513,]   67   70   74   76   79   77   82   80   75    78 #>  [3514,]   67   70   74   75   78   76   81   79   74    77 #>  [3515,]   67   70   74   76   79   77   82   80   75    78 #>  [3516,]   67   70   74   76   79   77   82   80   75    78 #>  [3517,]   67   70   74   76   79   77   82   80   75    78 #>  [3518,]   67   70   74   76   79   77   82   80   75    78 #>  [3519,]   67   71   74   76   79   77   82   80   75    78 #>  [3520,]   67   71   74   76   79   77   82   80   75    78 #>  [3521,]   67   70   74   75   78   76   81   79   74    77 #>  [3522,]   67   70   74   76   79   77   82   80   75    78 #>  [3523,]   67   70   74   76   79   77   82   80   75    78 #>  [3524,]   67   70   74   75   78   76   81   79   74    77 #>  [3525,]   67   71   74   75   78   76   81   79   74    77 #>  [3526,]   67   70   74   76   79   77   82   80   75    78 #>  [3527,]   67   70   74   76   79   77   82   80   75    78 #>  [3528,]   67   71   74   75   78   76   81   79   74    77 #>  [3529,]   67   70   74   76   79   77   82   80   75    78 #>  [3530,]   67   70   74   76   79   77   82   80   75    78 #>  [3531,]   67   70   74   75   78   76   81   79   74    77 #>  [3532,]   67   70   74   75   78   76   81   79   74    77 #>  [3533,]   67   71   74   76   79   77   82   80   75    78 #>  [3534,]   67   71   74   75   78   76   81   79   74    77 #>  [3535,]   67   70   74   75   78   76   81   79   74    77 #>  [3536,]   67   70   74   76   79   77   82   80   75    78 #>  [3537,]   67   70   74   76   79   77   82   80   75    78 #>  [3538,]   67   70   74   76   79   77   82   80   75    78 #>  [3539,]   67   70   74   75   78   76   81   79   74    77 #>  [3540,]   67   70   74   75   78   76   81   79   74    77 #>  [3541,]   67   70   74   76   79   77   82   80   75    78 #>  [3542,]   67   70   74   75   78   76   81   79   74    77 #>  [3543,]   67   70   74   76   79   77   82   80   75    78 #>  [3544,]   67   70   74   76   79   77   82   80   75    78 #>  [3545,]   67   70   74   76   79   77   82   80   75    78 #>  [3546,]   67   70   74   76   79   77   82   80   75    78 #>  [3547,]   67   70   74   75   78   76   81   79   74    77 #>  [3548,]   67   70   74   75   78   76   81   79   74    77 #>  [3549,]   67   70   74   76   79   77   82   80   75    78 #>  [3550,]   67   70   74   76   79   77   82   80   75    78 #>  [3551,]   67   70   74   76   79   77   82   80   75    78 #>  [3552,]   67   70   74   75   78   76   81   79   74    77 #>  [3553,]   67   70   74   76   79   77   82   80   75    78 #>  [3554,]   67   70   74   75   78   76   81   79   74    77 #>  [3555,]   67   70   74   76   79   77   82   80   75    78 #>  [3556,]   67   70   74   76   79   77   82   80   75    78 #>  [3557,]   67   70   74   75   78   76   81   79   74    77 #>  [3558,]   67   70   74   76   79   77   82   80   75    78 #>  [3559,]   67   70   74   76   79   77   82   80   75    78 #>  [3560,]   67   71   74   76   79   77   82   80   75    78 #>  [3561,]   67   70   74   76   79   77   82   80   75    78 #>  [3562,]   67   70   74   75   78   76   81   79   74    77 #>  [3563,]   67   70   74   76   79   77   82   80   75    78 #>  [3564,]   67   70   74   76   79   77   82   80   75    78 #>  [3565,]   67   71   74   75   78   76   81   79   74    77 #>  [3566,]   67   70   74   76   79   77   82   80   75    78 #>  [3567,]   67   70   74   76   79   77   82   80   75    78 #>  [3568,]   67   70   74   76   79   77   82   80   75    78 #>  [3569,]   67   70   74   76   79   77   82   80   75    78 #>  [3570,]   67   71   74   75   78   76   81   79   74    77 #>  [3571,]   67   70   74   76   79   77   82   80   75    78 #>  [3572,]   67   70   74   75   78   76   81   79   74    77 #>  [3573,]   67   71   74   76   79   77   82   80   75    78 #>  [3574,]   67   70   74   75   78   76   81   79   74    77 #>  [3575,]   67   70   74   76   79   77   82   80   75    78 #>  [3576,]   67   70   74   75   78   76   81   79   74    77 #>  [3577,]   67   70   74   76   79   77   82   80   75    78 #>  [3578,]   67   70   74   76   79   77   82   80   75    78 #>  [3579,]   67   70   74   76   79   77   82   80   75    78 #>  [3580,]   67   70   74   76   79   77   82   80   75    78 #>  [3581,]   67   70   74   76   79   77   82   80   75    78 #>  [3582,]   67   70   74   75   78   76   81   79   74    77 #>  [3583,]   67   70   74   76   79   77   82   80   75    78 #>  [3584,]   67   70   74   76   79   77   82   80   75    78 #>  [3585,]   67   70   74   76   79   77   82   80   75    78 #>  [3586,]   67   70   74   76   79   77   82   80   75    78 #>  [3587,]   67   70   74   76   79   77   82   80   75    78 #>  [3588,]   67   70   74   76   79   77   82   80   75    78 #>  [3589,]   67   70   74   76   79   77   82   80   75    78 #>  [3590,]   67   70   74   76   79   77   82   80   75    78 #>  [3591,]   67   70   74   75   78   76   81   79   74    77 #>  [3592,]   67   70   74   76   79   77   82   80   75    78 #>  [3593,]   67   71   74   76   79   77   82   80   75    78 #>  [3594,]   67   70   74   76   79   77   82   80   75    78 #>  [3595,]   67   70   74   76   79   77   82   80   75    78 #>  [3596,]   67   70   74   76   79   77   82   80   75    78 #>  [3597,]   67   71   74   76   79   77   82   80   75    78 #>  [3598,]   67   71   74   75   78   76   81   79   74    77 #>  [3599,]   67   70   74   76   79   77   82   80   75    78 #>  [3600,]   67   70   74   76   79   77   82   80   75    78 #>  [3601,]   69   73   76   78   81   79   84   83   77    80 #>  [3602,]   69   73   76   78   81   79   84   83   77    80 #>  [3603,]   68   72   75   77   80   78   83   81   76    79 #>  [3604,]   68   72   75   77   80   78   83   81   76    79 #>  [3605,]   68   72   75   77   80   78   83   81   76    79 #>  [3606,]   68   72   75   77   80   78   83   81   76    79 #>  [3607,]   69   73   76   78   81   79   84   82   77    80 #>  [3608,]   69   73   76   78   81   79   84   82   77    80 #>  [3609,]   68   72   75   77   80   78   83   81   76    79 #>  [3610,]   68   72   75   77   80   78   83   81   76    79 #>  [3611,]   68   72   75   77   80   78   83   81   76    79 #>  [3612,]   69   73   76   78   81   79   84   83   77    80 #>  [3613,]   69   73   76   78   81   79   84   82   77    80 #>  [3614,]   68   72   75   77   80   78   83   81   76    79 #>  [3615,]   69   73   76   78   81   79   84   83   77    80 #>  [3616,]   69   73   76   78   81   79   84   82   77    80 #>  [3617,]   69   73   76   78   81   79   84   83   77    80 #>  [3618,]   69   73   76   78   81   79   84   83   77    80 #>  [3619,]   69   73   76   78   81   79   84   83   77    80 #>  [3620,]   69   73   76   78   81   79   84   82   77    80 #>  [3621,]   68   72   75   77   80   78   83   81   76    79 #>  [3622,]   69   73   76   78   81   79   84   82   77    80 #>  [3623,]   69   73   76   78   81   79   84   83   77    80 #>  [3624,]   68   72   75   77   80   78   83   81   76    79 #>  [3625,]   68   72   75   77   80   78   83   81   76    79 #>  [3626,]   69   73   76   78   81   79   84   83   77    80 #>  [3627,]   69   73   76   78   81   79   84   83   77    80 #>  [3628,]   68   72   75   77   80   78   83   81   76    79 #>  [3629,]   69   73   76   78   81   79   84   83   77    80 #>  [3630,]   69   73   76   78   81   79   84   83   77    80 #>  [3631,]   68   72   75   77   80   78   83   81   76    79 #>  [3632,]   68   72   75   77   80   78   83   81   76    79 #>  [3633,]   69   73   76   78   81   79   84   83   77    80 #>  [3634,]   68   72   75   77   80   78   83   81   76    79 #>  [3635,]   68   72   75   77   80   78   83   81   76    79 #>  [3636,]   69   73   76   78   81   79   84   83   77    80 #>  [3637,]   69   73   76   78   81   79   84   83   77    80 #>  [3638,]   69   73   76   78   81   79   84   83   77    80 #>  [3639,]   68   72   75   77   80   78   83   81   76    79 #>  [3640,]   68   72   75   77   80   78   83   81   76    79 #>  [3641,]   69   73   76   78   81   79   84   83   77    80 #>  [3642,]   68   72   75   77   80   78   83   81   76    79 #>  [3643,]   69   73   76   78   81   79   84   83   77    80 #>  [3644,]   69   73   76   78   81   79   84   82   77    80 #>  [3645,]   69   73   76   78   81   79   84   83   77    80 #>  [3646,]   69   73   76   78   81   79   84   82   77    80 #>  [3647,]   68   72   75   77   80   78   83   81   76    79 #>  [3648,]   68   72   75   77   80   78   83   81   76    79 #>  [3649,]   69   73   76   78   81   79   84   82   77    80 #>  [3650,]   69   73   76   78   81   79   84   82   77    80 #>  [3651,]   69   73   76   78   81   79   84   83   77    80 #>  [3652,]   68   72   75   77   80   78   83   81   76    79 #>  [3653,]   69   73   76   78   81   79   84   82   77    80 #>  [3654,]   68   72   75   77   80   78   83   81   76    79 #>  [3655,]   69   73   76   78   81   79   84   82   77    80 #>  [3656,]   69   73   76   78   81   79   84   82   77    80 #>  [3657,]   68   72   75   77   80   78   83   81   76    79 #>  [3658,]   69   73   76   78   81   79   84   83   77    80 #>  [3659,]   69   73   76   78   81   79   84   82   77    80 #>  [3660,]   69   73   76   78   81   79   84   83   77    80 #>  [3661,]   69   73   76   78   81   79   84   83   77    80 #>  [3662,]   68   72   75   77   80   78   83   81   76    79 #>  [3663,]   69   73   76   78   81   79   84   82   77    80 #>  [3664,]   69   73   76   78   81   79   84   83   77    80 #>  [3665,]   68   72   75   77   80   78   83   81   76    79 #>  [3666,]   69   73   76   78   81   79   84   82   77    80 #>  [3667,]   68   72   75   77   80   78   83   81   76    79 #>  [3668,]   69   73   76   78   81   79   84   83   77    80 #>  [3669,]   69   73   76   78   81   79   84   83   77    80 #>  [3670,]   68   72   75   77   80   78   83   81   76    79 #>  [3671,]   69   73   76   78   81   79   84   83   77    80 #>  [3672,]   68   72   75   77   80   78   83   81   76    79 #>  [3673,]   68   72   75   77   80   78   83   81   76    79 #>  [3674,]   68   72   75   77   80   78   83   81   76    79 #>  [3675,]   69   73   76   78   81   79   84   83   77    80 #>  [3676,]   68   72   75   77   80   78   83   81   76    79 #>  [3677,]   69   73   76   78   81   79   84   83   77    80 #>  [3678,]   69   73   76   78   81   79   84   82   77    80 #>  [3679,]   68   72   75   77   80   78   83   81   76    79 #>  [3680,]   69   73   76   78   81   79   84   83   77    80 #>  [3681,]   69   73   76   78   81   79   84   83   77    80 #>  [3682,]   68   72   75   77   80   78   83   81   76    79 #>  [3683,]   69   73   76   78   81   79   84   83   77    80 #>  [3684,]   69   73   76   78   81   79   84   82   77    80 #>  [3685,]   69   73   76   78   81   79   84   83   77    80 #>  [3686,]   68   72   75   77   80   78   83   81   76    79 #>  [3687,]   69   73   76   78   81   79   84   83   77    80 #>  [3688,]   68   72   75   77   80   78   83   81   76    79 #>  [3689,]   68   72   75   77   80   78   83   81   76    79 #>  [3690,]   69   73   76   78   81   79   84   82   77    80 #>  [3691,]   68   72   75   77   80   78   83   81   76    79 #>  [3692,]   68   72   75   77   80   78   83   81   76    79 #>  [3693,]   69   73   76   78   81   79   84   83   77    80 #>  [3694,]   68   72   75   77   80   78   83   81   76    79 #>  [3695,]   69   73   76   78   81   79   84   83   77    80 #>  [3696,]   69   73   76   78   81   79   84   83   77    80 #>  [3697,]   69   73   76   78   81   79   84   83   77    80 #>  [3698,]   68   72   75   77   80   78   83   81   76    79 #>  [3699,]   68   72   75   77   80   78   83   81   76    79 #>  [3700,]   69   73   76   78   81   79   84   82   77    80 #>  [3701,]   71   74   77   79   82   80   85   84   78    81 #>  [3702,]   70   75   78   80   83   81   86   85   79    82 #>  [3703,]   71   74   77   79   82   80   85   84   78    81 #>  [3704,]   71   74   77   79   82   80   85   84   78    81 #>  [3705,]   71   74   77   79   82   80   85   84   78    81 #>  [3706,]   70   75   78   80   83   81   86   85   79    82 #>  [3707,]   71   74   77   79   82   80   85   84   78    81 #>  [3708,]   71   74   77   79   82   80   85   84   78    81 #>  [3709,]   71   74   77   79   82   80   85   84   78    81 #>  [3710,]   71   74   77   79   82   80   85   84   78    81 #>  [3711,]   70   76   79   81   84   82   87   86   80    83 #>  [3712,]   70   76   79   81   84   82   87   86   80    83 #>  [3713,]   71   74   77   79   82   80   85   84   78    81 #>  [3714,]   71   74   77   79   82   80   85   84   78    81 #>  [3715,]   70   76   79   81   84   82   87   86   80    83 #>  [3716,]   71   74   77   79   82   80   85   84   78    81 #>  [3717,]   70   76   79   81   84   82   87   86   80    83 #>  [3718,]   71   74   77   79   82   80   85   84   78    81 #>  [3719,]   70   76   79   81   84   82   87   86   80    83 #>  [3720,]   71   74   77   79   82   80   85   84   78    81 #>  [3721,]   71   74   77   79   82   80   85   84   78    81 #>  [3722,]   71   74   77   79   82   80   85   84   78    81 #>  [3723,]   70   75   78   80   83   81   86   85   79    82 #>  [3724,]   71   74   77   79   82   80   85   84   78    81 #>  [3725,]   71   74   77   79   82   80   85   84   78    81 #>  [3726,]   70   76   79   81   84   82   87   86   80    83 #>  [3727,]   71   74   77   79   82   80   85   84   78    81 #>  [3728,]   71   74   77   79   82   80   85   84   78    81 #>  [3729,]   70   75   78   80   83   81   86   85   79    82 #>  [3730,]   70   75   78   80   83   81   86   85   79    82 #>  [3731,]   70   76   79   81   84   82   87   86   80    83 #>  [3732,]   71   74   77   79   82   80   85   84   78    81 #>  [3733,]   71   74   77   79   82   80   85   84   78    81 #>  [3734,]   70   75   78   80   83   81   86   85   79    82 #>  [3735,]   70   75   78   80   83   81   86   85   79    82 #>  [3736,]   71   74   77   79   82   80   85   84   78    81 #>  [3737,]   70   75   78   80   83   81   86   85   79    82 #>  [3738,]   71   74   77   79   82   80   85   84   78    81 #>  [3739,]   71   74   77   79   82   80   85   84   78    81 #>  [3740,]   71   74   77   79   82   80   85   84   78    81 #>  [3741,]   71   74   77   79   82   80   85   84   78    81 #>  [3742,]   70   75   78   80   83   81   86   85   79    82 #>  [3743,]   70   76   79   81   84   82   87   86   80    83 #>  [3744,]   70   75   78   80   83   81   86   85   79    82 #>  [3745,]   71   74   77   79   82   80   85   84   78    81 #>  [3746,]   70   75   78   80   83   81   86   85   79    82 #>  [3747,]   70   76   79   81   84   82   87   86   80    83 #>  [3748,]   70   75   78   80   83   81   86   85   79    82 #>  [3749,]   71   74   77   79   82   80   85   84   78    81 #>  [3750,]   71   74   77   79   82   80   85   84   78    81 #>  [3751,]   71   74   77   79   82   80   85   84   78    81 #>  [3752,]   71   74   77   79   82   80   85   84   78    81 #>  [3753,]   71   74   77   79   82   80   85   84   78    81 #>  [3754,]   71   74   77   79   82   80   85   84   78    81 #>  [3755,]   71   74   77   79   82   80   85   84   78    81 #>  [3756,]   70   75   78   80   83   81   86   85   79    82 #>  [3757,]   71   74   77   79   82   80   85   84   78    81 #>  [3758,]   71   74   77   79   82   80   85   84   78    81 #>  [3759,]   71   74   77   79   82   80   85   84   78    81 #>  [3760,]   70   75   78   80   83   81   86   85   79    82 #>  [3761,]   70   76   79   81   84   82   87   86   80    83 #>  [3762,]   71   74   77   79   82   80   85   84   78    81 #>  [3763,]   70   75   78   80   83   81   86   85   79    82 #>  [3764,]   70   75   78   80   83   81   86   85   79    82 #>  [3765,]   70   75   78   80   83   81   86   85   79    82 #>  [3766,]   70   76   79   81   84   82   87   86   80    83 #>  [3767,]   71   74   77   79   82   80   85   84   78    81 #>  [3768,]   70   76   79   81   84   82   87   86   80    83 #>  [3769,]   71   74   77   79   82   80   85   84   78    81 #>  [3770,]   70   76   79   81   84   82   87   86   80    83 #>  [3771,]   71   74   77   79   82   80   85   84   78    81 #>  [3772,]   71   74   77   79   82   80   85   84   78    81 #>  [3773,]   71   74   77   79   82   80   85   84   78    81 #>  [3774,]   71   74   77   79   82   80   85   84   78    81 #>  [3775,]   70   76   79   81   84   82   87   86   80    83 #>  [3776,]   71   74   77   79   82   80   85   84   78    81 #>  [3777,]   71   74   77   79   82   80   85   84   78    81 #>  [3778,]   70   75   78   80   83   81   86   85   79    82 #>  [3779,]   70   76   79   81   84   82   87   86   80    83 #>  [3780,]   71   74   77   79   82   80   85   84   78    81 #>  [3781,]   70   75   78   80   83   81   86   85   79    82 #>  [3782,]   71   74   77   79   82   80   85   84   78    81 #>  [3783,]   71   74   77   79   82   80   85   84   78    81 #>  [3784,]   71   74   77   79   82   80   85   84   78    81 #>  [3785,]   71   74   77   79   82   80   85   84   78    81 #>  [3786,]   71   74   77   79   82   80   85   84   78    81 #>  [3787,]   71   74   77   79   82   80   85   84   78    81 #>  [3788,]   71   74   77   79   82   80   85   84   78    81 #>  [3789,]   71   74   77   79   82   80   85   84   78    81 #>  [3790,]   71   74   77   79   82   80   85   84   78    81 #>  [3791,]   71   74   77   79   82   80   85   84   78    81 #>  [3792,]   70   76   79   81   84   82   87   86   80    83 #>  [3793,]   70   75   78   80   83   81   86   85   79    82 #>  [3794,]   70   75   78   80   83   81   86   85   79    82 #>  [3795,]   70   76   79   81   84   82   87   86   80    83 #>  [3796,]   70   76   79   81   84   82   87   86   80    83 #>  [3797,]   71   74   77   79   82   80   85   84   78    81 #>  [3798,]   71   74   77   79   82   80   85   84   78    81 #>  [3799,]   71   74   77   79   82   80   85   84   78    81 #>  [3800,]   70   76   79   81   84   82   87   86   80    83 #>  [3801,]   73   78   81   83   86   84   89   88   82    84 #>  [3802,]   72   77   80   82   85   83   88   87   81    84 #>  [3803,]   72   77   80   82   85   83   88   87   81    84 #>  [3804,]   72   77   80   82   85   83   88   87   81    84 #>  [3805,]   72   77   80   82   85   83   88   87   81    84 #>  [3806,]   72   77   80   82   85   83   88   87   81    84 #>  [3807,]   72   77   80   82   85   83   88   87   81    84 #>  [3808,]   72   77   80   82   85   83   88   87   81    84 #>  [3809,]   73   78   81   83   86   84   89   88   82    84 #>  [3810,]   72   77   80   82   85   83   88   87   81    84 #>  [3811,]   72   77   80   82   85   83   88   87   81    84 #>  [3812,]   72   77   80   82   85   83   88   87   81    84 #>  [3813,]   73   78   81   83   86   84   90   88   82    84 #>  [3814,]   72   77   80   82   85   83   88   87   81    84 #>  [3815,]   72   77   80   82   85   83   88   87   81    84 #>  [3816,]   72   77   80   82   85   83   88   87   81    84 #>  [3817,]   73   78   81   83   86   84   89   88   82    84 #>  [3818,]   73   78   81   83   86   84   90   88   82    84 #>  [3819,]   72   77   80   82   85   83   88   87   81    84 #>  [3820,]   73   78   81   83   86   84   89   88   82    84 #>  [3821,]   72   77   80   82   85   83   88   87   81    84 #>  [3822,]   72   77   80   82   85   83   88   87   81    84 #>  [3823,]   72   77   80   82   85   83   88   87   81    84 #>  [3824,]   72   77   80   82   85   83   88   87   81    84 #>  [3825,]   72   77   80   82   85   83   88   87   81    84 #>  [3826,]   72   77   80   82   85   83   88   87   81    84 #>  [3827,]   73   78   81   83   86   84   89   88   82    84 #>  [3828,]   72   77   80   82   85   83   88   87   81    84 #>  [3829,]   72   77   80   82   85   83   88   87   81    84 #>  [3830,]   72   77   80   82   85   83   88   87   81    84 #>  [3831,]   72   77   80   82   85   83   88   87   81    84 #>  [3832,]   72   77   80   82   85   83   88   87   81    84 #>  [3833,]   73   78   81   83   86   84   89   88   82    84 #>  [3834,]   72   77   80   82   85   83   88   87   81    84 #>  [3835,]   72   77   80   82   85   83   88   87   81    84 #>  [3836,]   73   78   81   83   86   84   89   88   82    84 #>  [3837,]   72   77   80   82   85   83   88   87   81    84 #>  [3838,]   73   78   81   83   86   84   89   88   82    84 #>  [3839,]   72   77   80   82   85   83   88   87   81    84 #>  [3840,]   72   77   80   82   85   83   88   87   81    84 #>  [3841,]   72   77   80   82   85   83   88   87   81    84 #>  [3842,]   73   78   81   83   86   84   90   88   82    84 #>  [3843,]   72   77   80   82   85   83   88   87   81    84 #>  [3844,]   72   77   80   82   85   83   88   87   81    84 #>  [3845,]   72   77   80   82   85   83   88   87   81    84 #>  [3846,]   72   77   80   82   85   83   88   87   81    84 #>  [3847,]   72   77   80   82   85   83   88   87   81    84 #>  [3848,]   72   77   80   82   85   83   88   87   81    84 #>  [3849,]   72   77   80   82   85   83   88   87   81    84 #>  [3850,]   72   77   80   82   85   83   88   87   81    84 #>  [3851,]   73   78   81   83   86   84   90   88   82    84 #>  [3852,]   72   77   80   82   85   83   88   87   81    84 #>  [3853,]   73   78   81   83   86   84   90   88   82    84 #>  [3854,]   73   78   81   83   86   84   89   88   82    84 #>  [3855,]   72   77   80   82   85   83   88   87   81    84 #>  [3856,]   73   78   81   83   86   84   89   88   82    84 #>  [3857,]   72   77   80   82   85   83   88   87   81    84 #>  [3858,]   72   77   80   82   85   83   88   87   81    84 #>  [3859,]   72   77   80   82   85   83   88   87   81    84 #>  [3860,]   72   77   80   82   85   83   88   87   81    84 #>  [3861,]   72   77   80   82   85   83   88   87   81    84 #>  [3862,]   72   77   80   82   85   83   88   87   81    84 #>  [3863,]   72   77   80   82   85   83   88   87   81    84 #>  [3864,]   72   77   80   82   85   83   88   87   81    84 #>  [3865,]   73   78   81   83   86   84   89   88   82    84 #>  [3866,]   73   78   81   83   86   84   89   88   82    84 #>  [3867,]   72   77   80   82   85   83   88   87   81    84 #>  [3868,]   72   77   80   82   85   83   88   87   81    84 #>  [3869,]   72   77   80   82   85   83   88   87   81    84 #>  [3870,]   72   77   80   82   85   83   88   87   81    84 #>  [3871,]   72   77   80   82   85   83   88   87   81    84 #>  [3872,]   72   77   80   82   85   83   88   87   81    84 #>  [3873,]   72   77   80   82   85   83   88   87   81    84 #>  [3874,]   72   77   80   82   85   83   88   87   81    84 #>  [3875,]   72   77   80   82   85   83   88   87   81    84 #>  [3876,]   72   77   80   82   85   83   88   87   81    84 #>  [3877,]   73   78   81   83   86   84   89   88   82    84 #>  [3878,]   72   77   80   82   85   83   88   87   81    84 #>  [3879,]   73   78   81   83   86   84   90   88   82    84 #>  [3880,]   72   77   80   82   85   83   88   87   81    84 #>  [3881,]   72   77   80   82   85   83   88   87   81    84 #>  [3882,]   73   78   81   83   86   84   89   88   82    84 #>  [3883,]   73   78   81   83   86   84   89   88   82    84 #>  [3884,]   73   78   81   83   86   84   90   88   82    84 #>  [3885,]   72   77   80   82   85   83   88   87   81    84 #>  [3886,]   72   77   80   82   85   83   88   87   81    84 #>  [3887,]   73   78   81   83   86   84   89   88   82    84 #>  [3888,]   72   77   80   82   85   83   88   87   81    84 #>  [3889,]   72   77   80   82   85   83   88   87   81    84 #>  [3890,]   72   77   80   82   85   83   88   87   81    84 #>  [3891,]   73   78   81   83   86   84   90   88   82    84 #>  [3892,]   72   77   80   82   85   83   88   87   81    84 #>  [3893,]   73   78   81   83   86   84   90   88   82    84 #>  [3894,]   73   78   81   83   86   84   90   88   82    84 #>  [3895,]   72   77   80   82   85   83   88   87   81    84 #>  [3896,]   72   77   80   82   85   83   88   87   81    84 #>  [3897,]   72   77   80   82   85   83   88   87   81    84 #>  [3898,]   72   77   80   82   85   83   88   87   81    84 #>  [3899,]   72   77   80   82   85   83   88   87   81    84 #>  [3900,]   72   77   80   82   85   83   88   87   81    84 #>  [3901,]   74   79   82   85   88   86   92   90   84    87 #>  [3902,]   75   80   83   84   87   85   91   89   83    85 #>  [3903,]   74   79   82   85   88   86   92   90   84    86 #>  [3904,]   74   79   82   86   89   86   92   90   84    87 #>  [3905,]   74   79   82   85   88   86   92   90   84    87 #>  [3906,]   74   79   82   85   88   86   92   90   84    87 #>  [3907,]   74   79   82   86   89   86   92   90   84    87 #>  [3908,]   74   79   82   85   88   86   92   90   84    87 #>  [3909,]   75   80   83   84   87   85   91   89   83    85 #>  [3910,]   75   80   83   84   87   85   91   89   83    85 #>  [3911,]   74   79   82   85   88   86   92   90   84    87 #>  [3912,]   75   80   83   84   87   85   91   89   83    85 #>  [3913,]   75   80   83   84   87   85   91   89   83    85 #>  [3914,]   74   79   82   86   89   86   92   90   84    86 #>  [3915,]   74   79   82   85   88   86   92   90   84    87 #>  [3916,]   74   79   82   86   89   86   92   90   84    87 #>  [3917,]   75   80   83   84   87   85   91   89   83    85 #>  [3918,]   74   79   82   85   88   86   92   90   84    87 #>  [3919,]   74   79   82   85   88   86   92   90   84    87 #>  [3920,]   74   79   82   86   89   86   92   90   84    87 #>  [3921,]   75   80   83   84   87   85   91   89   83    85 #>  [3922,]   74   79   82   86   89   86   92   90   84    87 #>  [3923,]   74   79   82   85   88   86   92   90   84    87 #>  [3924,]   74   79   82   86   89   86   92   90   84    87 #>  [3925,]   74   79   82   86   89   86   92   90   84    87 #>  [3926,]   74   79   82   85   88   86   92   90   84    86 #>  [3927,]   74   79   82   85   88   86   92   90   84    87 #>  [3928,]   74   79   82   86   89   86   92   90   84    87 #>  [3929,]   75   80   83   84   87   85   91   89   83    85 #>  [3930,]   74   79   82   85   88   86   92   90   84    87 #>  [3931,]   74   79   82   85   88   86   92   90   84    87 #>  [3932,]   74   79   82   85   88   86   92   90   84    86 #>  [3933,]   75   80   83   84   87   85   91   89   83    85 #>  [3934,]   74   79   82   85   88   86   92   90   84    87 #>  [3935,]   74   79   82   85   88   86   92   90   84    87 #>  [3936,]   74   79   82   86   89   86   92   90   84    87 #>  [3937,]   74   79   82   85   88   86   92   90   84    87 #>  [3938,]   74   79   82   85   88   86   92   90   84    87 #>  [3939,]   74   79   82   86   89   86   92   90   84    87 #>  [3940,]   74   79   82   85   88   86   92   90   84    87 #>  [3941,]   74   79   82   85   88   86   92   90   84    87 #>  [3942,]   74   79   82   85   88   86   92   90   84    86 #>  [3943,]   74   79   82   85   88   86   92   90   84    87 #>  [3944,]   74   79   82   85   88   86   92   90   84    87 #>  [3945,]   74   79   82   85   88   86   92   90   84    87 #>  [3946,]   74   79   82   85   88   86   92   90   84    87 #>  [3947,]   74   79   82   85   88   86   92   90   84    87 #>  [3948,]   74   79   82   85   88   86   92   90   84    86 #>  [3949,]   74   79   82   85   88   86   92   90   84    87 #>  [3950,]   74   79   82   86   89   86   92   90   84    87 #>  [3951,]   74   79   82   85   88   86   92   90   84    86 #>  [3952,]   74   79   82   86   89   86   92   90   84    87 #>  [3953,]   75   80   83   84   87   85   91   89   83    85 #>  [3954,]   74   79   82   86   89   86   92   90   84    86 #>  [3955,]   74   79   82   86   89   86   92   90   84    87 #>  [3956,]   74   79   82   85   88   86   92   90   84    87 #>  [3957,]   74   79   82   86   89   86   92   90   84    87 #>  [3958,]   74   79   82   85   88   86   92   90   84    87 #>  [3959,]   74   79   82   86   89   86   92   90   84    87 #>  [3960,]   75   80   83   84   87   85   91   89   83    85 #>  [3961,]   74   79   82   85   88   86   92   90   84    87 #>  [3962,]   74   79   82   85   88   86   92   90   84    86 #>  [3963,]   75   80   83   84   87   85   91   89   83    85 #>  [3964,]   74   79   82   85   88   86   92   90   84    87 #>  [3965,]   74   79   82   85   88   86   92   90   84    87 #>  [3966,]   74   79   82   85   88   86   92   90   84    86 #>  [3967,]   74   79   82   86   89   86   92   90   84    87 #>  [3968,]   74   79   82   85   88   86   92   90   84    87 #>  [3969,]   74   79   82   85   88   86   92   90   84    86 #>  [3970,]   75   80   83   84   87   85   91   89   83    85 #>  [3971,]   74   79   82   85   88   86   92   90   84    87 #>  [3972,]   74   79   82   85   88   86   92   90   84    87 #>  [3973,]   74   79   82   86   89   86   92   90   84    87 #>  [3974,]   74   79   82   85   88   86   92   90   84    87 #>  [3975,]   75   80   83   84   87   85   91   89   83    85 #>  [3976,]   74   79   82   86   89   86   92   90   84    87 #>  [3977,]   74   79   82   85   88   86   92   90   84    87 #>  [3978,]   74   79   82   85   88   86   92   90   84    87 #>  [3979,]   74   79   82   85   88   86   92   90   84    87 #>  [3980,]   75   80   83   84   87   85   91   89   83    85 #>  [3981,]   75   80   83   84   87   85   91   89   83    85 #>  [3982,]   74   79   82   85   88   86   92   90   84    87 #>  [3983,]   74   79   82   85   88   86   92   90   84    87 #>  [3984,]   74   79   82   85   88   86   92   90   84    87 #>  [3985,]   74   79   82   85   88   86   92   90   84    87 #>  [3986,]   75   80   83   84   87   85   91   89   83    85 #>  [3987,]   74   79   82   85   88   86   92   90   84    87 #>  [3988,]   74   79   82   85   88   86   92   90   84    87 #>  [3989,]   74   79   82   85   88   86   92   90   84    86 #>  [3990,]   74   79   82   86   89   86   92   90   84    87 #>  [3991,]   74   79   82   86   89   86   92   90   84    87 #>  [3992,]   74   79   82   85   88   86   92   90   84    87 #>  [3993,]   74   79   82   85   88   86   92   90   84    87 #>  [3994,]   74   79   82   85   88   86   92   90   84    87 #>  [3995,]   74   79   82   85   88   86   92   90   84    87 #>  [3996,]   74   79   82   85   88   86   92   90   84    87 #>  [3997,]   74   79   82   85   88   86   92   90   84    87 #>  [3998,]   74   79   82   85   88   86   92   90   84    87 #>  [3999,]   74   79   82   85   88   86   92   90   84    87 #>  [4000,]   74   79   82   85   88   86   92   90   84    87 #>  [4001,]   76   81   84   88   91   88   94   91   85    88 #>  [4002,]   76   81   84   87   90   87   93   93   87    89 #>  [4003,]   76   81   84   87   90   87   93   92   86    89 #>  [4004,]   76   81   84   87   90   87   93   92   86    89 #>  [4005,]   76   81   84   88   91   88   94   91   85    88 #>  [4006,]   76   81   84   88   91   88   94   91   85    88 #>  [4007,]   76   81   84   87   90   87   93   92   86    89 #>  [4008,]   76   81   84   88   91   88   94   91   85    88 #>  [4009,]   76   81   84   88   91   88   94   91   85    88 #>  [4010,]   76   81   84   87   90   87   93   93   87    89 #>  [4011,]   76   81   84   88   91   88   94   91   85    88 #>  [4012,]   76   81   84   88   91   88   94   91   85    88 #>  [4013,]   76   81   84   87   90   87   93   93   87    89 #>  [4014,]   76   81   84   88   91   88   94   91   85    88 #>  [4015,]   76   81   84   88   91   88   94   91   85    88 #>  [4016,]   76   81   84   87   90   87   93   92   86    89 #>  [4017,]   76   81   84   87   90   87   93   93   87    89 #>  [4018,]   76   81   84   87   90   87   93   93   87    89 #>  [4019,]   76   81   84   87   90   87   93   92   86    89 #>  [4020,]   76   81   84   88   91   88   94   91   85    88 #>  [4021,]   76   81   84   87   90   87   93   93   87    89 #>  [4022,]   76   81   84   87   90   87   93   92   86    89 #>  [4023,]   76   81   84   87   90   87   93   93   87    89 #>  [4024,]   76   81   84   87   90   87   93   93   87    89 #>  [4025,]   76   81   84   87   90   87   93   92   86    89 #>  [4026,]   76   81   84   88   91   88   94   91   85    88 #>  [4027,]   76   81   84   87   90   87   93   93   87    89 #>  [4028,]   76   81   84   88   91   88   94   91   85    88 #>  [4029,]   76   81   84   87   90   87   93   93   87    89 #>  [4030,]   76   81   84   87   90   87   93   92   86    89 #>  [4031,]   76   81   84   87   90   87   93   93   87    89 #>  [4032,]   76   81   84   87   90   87   93   93   87    89 #>  [4033,]   76   81   84   88   91   88   94   91   85    88 #>  [4034,]   76   81   84   87   90   87   93   92   86    89 #>  [4035,]   76   81   84   87   90   87   93   92   86    89 #>  [4036,]   76   81   84   87   90   87   93   93   87    89 #>  [4037,]   76   81   84   87   90   87   93   92   86    89 #>  [4038,]   76   81   84   88   91   88   94   91   85    88 #>  [4039,]   76   81   84   87   90   87   93   92   86    89 #>  [4040,]   76   81   84   87   90   87   93   93   87    89 #>  [4041,]   76   81   84   88   91   88   94   91   85    88 #>  [4042,]   76   81   84   88   91   88   94   91   85    88 #>  [4043,]   76   81   84   88   91   88   94   91   85    88 #>  [4044,]   76   81   84   87   90   87   93   93   87    89 #>  [4045,]   76   81   84   88   91   88   94   91   85    88 #>  [4046,]   76   81   84   88   91   88   94   91   85    88 #>  [4047,]   76   81   84   87   90   87   93   92   86    89 #>  [4048,]   76   81   84   87   90   87   93   92   86    89 #>  [4049,]   76   81   84   87   90   87   93   92   86    89 #>  [4050,]   76   81   84   88   91   88   94   91   85    88 #>  [4051,]   76   81   84   88   91   88   94   91   85    88 #>  [4052,]   76   81   84   88   91   88   94   91   85    88 #>  [4053,]   76   81   84   88   91   88   94   91   85    88 #>  [4054,]   76   81   84   87   90   87   93   92   86    89 #>  [4055,]   76   81   84   88   91   88   94   91   85    88 #>  [4056,]   76   81   84   88   91   88   94   91   85    88 #>  [4057,]   76   81   84   88   91   88   94   91   85    88 #>  [4058,]   76   81   84   88   91   88   94   91   85    88 #>  [4059,]   76   81   84   87   90   87   93   92   86    89 #>  [4060,]   76   81   84   88   91   88   94   91   85    88 #>  [4061,]   76   81   84   88   91   88   94   91   85    88 #>  [4062,]   76   81   84   87   90   87   93   92   86    89 #>  [4063,]   76   81   84   88   91   88   94   91   85    88 #>  [4064,]   76   81   84   88   91   88   94   91   85    88 #>  [4065,]   76   81   84   88   91   88   94   91   85    88 #>  [4066,]   76   81   84   88   91   88   94   91   85    88 #>  [4067,]   76   81   84   88   91   88   94   91   85    88 #>  [4068,]   76   81   84   88   91   88   94   91   85    88 #>  [4069,]   76   81   84   87   90   87   93   92   86    89 #>  [4070,]   76   81   84   87   90   87   93   93   87    89 #>  [4071,]   76   81   84   88   91   88   94   91   85    88 #>  [4072,]   76   81   84   88   91   88   94   91   85    88 #>  [4073,]   76   81   84   88   91   88   94   91   85    88 #>  [4074,]   76   81   84   88   91   88   94   91   85    88 #>  [4075,]   76   81   84   88   91   88   94   91   85    88 #>  [4076,]   76   81   84   88   91   88   94   91   85    88 #>  [4077,]   76   81   84   87   90   87   93   92   86    89 #>  [4078,]   76   81   84   88   91   88   94   91   85    88 #>  [4079,]   76   81   84   87   90   87   93   92   86    89 #>  [4080,]   76   81   84   87   90   87   93   93   87    89 #>  [4081,]   76   81   84   88   91   88   94   91   85    88 #>  [4082,]   76   81   84   87   90   87   93   92   86    89 #>  [4083,]   76   81   84   87   90   87   93   93   87    89 #>  [4084,]   76   81   84   88   91   88   94   91   85    88 #>  [4085,]   76   81   84   87   90   87   93   92   86    89 #>  [4086,]   76   81   84   87   90   87   93   93   87    89 #>  [4087,]   76   81   84   88   91   88   94   91   85    88 #>  [4088,]   76   81   84   88   91   88   94   91   85    88 #>  [4089,]   76   81   84   87   90   87   93   92   86    89 #>  [4090,]   76   81   84   88   91   88   94   91   85    88 #>  [4091,]   76   81   84   88   91   88   94   91   85    88 #>  [4092,]   76   81   84   88   91   88   94   91   85    88 #>  [4093,]   76   81   84   87   90   87   93   92   86    89 #>  [4094,]   76   81   84   88   91   88   94   91   85    88 #>  [4095,]   76   81   84   87   90   87   93   92   86    89 #>  [4096,]   76   81   84   88   91   88   94   91   85    88 #>  [4097,]   76   81   84   88   91   88   94   91   85    88 #>  [4098,]   76   81   84   87   90   87   93   92   86    89 #>  [4099,]   76   81   84   87   90   87   93   92   86    89 #>  [4100,]   76   81   84   87   90   87   93   92   86    89 #>  [4101,]   77   82   85   89   92   89   95   94   88    90 #>  [4102,]   77   82   85   89   92   89   95   94   88    90 #>  [4103,]   77   82   85   89   92   89   95   94   88    90 #>  [4104,]   78   82   85   89   92   89   95   94   88    90 #>  [4105,]   77   82   85   89   92   89   95   94   88    90 #>  [4106,]   77   82   85   89   92   89   95   94   88    90 #>  [4107,]   78   82   85   89   92   89   95   94   88    90 #>  [4108,]   77   82   86   89   92   89   95   94   88    90 #>  [4109,]   77   82   86   89   92   89   95   94   88    90 #>  [4110,]   78   82   85   89   92   89   95   94   88    90 #>  [4111,]   77   82   85   89   92   89   95   94   88    90 #>  [4112,]   77   82   85   89   92   89   95   94   88    90 #>  [4113,]   77   82   85   89   92   89   95   94   88    90 #>  [4114,]   77   82   85   89   92   89   95   94   88    90 #>  [4115,]   77   82   85   89   92   89   95   94   88    90 #>  [4116,]   78   82   85   89   92   89   95   94   88    90 #>  [4117,]   77   82   85   89   92   89   95   94   88    90 #>  [4118,]   77   82   85   89   92   89   95   94   88    90 #>  [4119,]   77   82   85   89   92   89   95   94   88    90 #>  [4120,]   78   82   85   89   93   90   96   95   89    91 #>  [4121,]   77   82   85   89   92   89   95   94   88    90 #>  [4122,]   77   82   85   89   93   90   96   95   89    91 #>  [4123,]   77   82   85   89   92   89   95   94   88    90 #>  [4124,]   78   82   85   89   92   89   95   94   88    90 #>  [4125,]   78   82   85   89   92   89   95   94   88    90 #>  [4126,]   77   82   86   89   92   89   95   94   88    90 #>  [4127,]   77   82   85   89   92   89   95   94   88    90 #>  [4128,]   78   82   85   89   92   89   95   94   88    90 #>  [4129,]   77   82   85   89   93   90   96   95   89    91 #>  [4130,]   77   82   85   89   92   89   95   94   88    90 #>  [4131,]   77   82   85   89   92   89   95   94   88    90 #>  [4132,]   77   82   85   89   92   89   95   94   88    90 #>  [4133,]   77   82   85   89   92   89   95   94   88    90 #>  [4134,]   77   82   85   89   92   89   95   94   88    90 #>  [4135,]   77   82   85   89   92   89   95   94   88    90 #>  [4136,]   77   82   85   89   92   89   95   94   88    90 #>  [4137,]   77   82   85   89   92   89   95   94   88    90 #>  [4138,]   77   82   85   89   92   89   95   94   88    90 #>  [4139,]   78   82   85   89   92   89   95   94   88    90 #>  [4140,]   77   82   85   89   92   89   95   94   88    90 #>  [4141,]   77   82   85   89   92   89   95   94   88    90 #>  [4142,]   77   82   85   89   92   89   95   94   88    90 #>  [4143,]   77   82   85   89   92   89   95   94   88    90 #>  [4144,]   77   82   85   89   92   89   95   94   88    90 #>  [4145,]   77   82   85   89   92   89   95   94   88    90 #>  [4146,]   77   82   85   89   92   89   95   94   88    90 #>  [4147,]   77   82   85   89   92   89   95   94   88    90 #>  [4148,]   77   82   85   89   92   89   95   94   88    90 #>  [4149,]   77   82   85   89   92   89   95   94   88    90 #>  [4150,]   78   82   85   89   92   89   95   94   88    90 #>  [4151,]   77   82   85   89   92   89   95   94   88    90 #>  [4152,]   78   82   85   89   92   89   95   94   88    90 #>  [4153,]   77   82   85   89   92   89   95   94   88    90 #>  [4154,]   78   82   85   89   92   89   95   94   88    90 #>  [4155,]   77   82   85   89   92   89   95   94   88    90 #>  [4156,]   77   82   86   89   92   89   95   94   88    90 #>  [4157,]   78   82   85   89   92   89   95   94   88    90 #>  [4158,]   77   82   85   89   93   90   96   95   89    91 #>  [4159,]   77   82   85   89   92   89   95   94   88    90 #>  [4160,]   77   82   85   89   92   89   95   94   88    90 #>  [4161,]   77   82   86   89   92   89   95   94   88    90 #>  [4162,]   77   82   85   89   92   89   95   94   88    90 #>  [4163,]   77   82   85   89   92   89   95   94   88    90 #>  [4164,]   77   82   85   89   93   90   96   95   89    91 #>  [4165,]   77   82   85   89   92   89   95   94   88    90 #>  [4166,]   77   82   85   89   92   89   95   94   88    90 #>  [4167,]   77   82   85   89   92   89   95   94   88    90 #>  [4168,]   77   82   85   89   92   89   95   94   88    90 #>  [4169,]   77   82   85   89   92   89   95   94   88    90 #>  [4170,]   77   82   85   89   92   89   95   94   88    90 #>  [4171,]   77   82   85   89   92   89   95   94   88    90 #>  [4172,]   77   82   85   89   92   89   95   94   88    90 #>  [4173,]   78   82   85   89   92   89   95   94   88    90 #>  [4174,]   77   82   85   89   92   89   95   94   88    90 #>  [4175,]   77   82   85   89   92   89   95   94   88    90 #>  [4176,]   78   82   86   89   92   89   95   94   88    90 #>  [4177,]   77   82   85   89   93   90   96   95   89    91 #>  [4178,]   77   82   85   89   92   89   95   94   88    90 #>  [4179,]   77   82   85   89   92   89   95   94   88    90 #>  [4180,]   77   82   85   89   92   89   95   94   88    90 #>  [4181,]   77   82   85   89   92   89   95   94   88    90 #>  [4182,]   77   82   85   89   92   89   95   94   88    90 #>  [4183,]   77   82   85   89   92   89   95   94   88    90 #>  [4184,]   77   82   85   89   92   89   95   94   88    90 #>  [4185,]   77   82   85   89   92   89   95   94   88    90 #>  [4186,]   78   82   85   89   92   89   95   94   88    90 #>  [4187,]   77   82   85   89   93   90   96   95   89    91 #>  [4188,]   77   82   85   89   92   89   95   94   88    90 #>  [4189,]   77   82   85   89   92   89   95   94   88    90 #>  [4190,]   77   82   85   89   92   89   95   94   88    90 #>  [4191,]   78   82   85   89   92   89   95   94   88    90 #>  [4192,]   77   82   85   89   92   89   95   94   88    90 #>  [4193,]   77   82   85   89   92   89   95   94   88    90 #>  [4194,]   77   82   85   89   92   89   95   94   88    90 #>  [4195,]   77   82   85   89   92   89   95   94   88    90 #>  [4196,]   77   82   85   89   92   89   95   94   88    90 #>  [4197,]   77   82   85   89   92   89   95   94   88    90 #>  [4198,]   77   82   85   89   92   89   95   94   88    90 #>  [4199,]   77   82   85   89   92   89   95   94   88    90 #>  [4200,]   77   82   85   89   92   89   95   94   88    90 #>  [4201,]   80   84   88   91   95   93   98   97   91    93 #>  [4202,]   80   84   88   91   95   92   98   97   91    93 #>  [4203,]   79   83   87   90   94   91   97   96   90    92 #>  [4204,]   79   83   87   90   94   91   97   96   90    92 #>  [4205,]   79   83   87   90   94   91   97   96   90    92 #>  [4206,]   80   84   88   91   95   92   98   97   91    93 #>  [4207,]   80   84   88   91   95   92   98   97   91    93 #>  [4208,]   79   83   87   90   94   91   97   96   90    92 #>  [4209,]   79   83   87   90   94   91   97   96   90    92 #>  [4210,]   79   83   87   90   94   91   97   96   90    92 #>  [4211,]   80   84   88   91   95   92   98   97   91    93 #>  [4212,]   79   83   87   90   94   91   97   96   90    92 #>  [4213,]   80   84   88   91   95   92   98   97   91    93 #>  [4214,]   80   84   88   91   95   93   98   97   91    93 #>  [4215,]   80   84   88   91   95   93   98   97   91    93 #>  [4216,]   80   84   88   91   95   92   98   97   91    93 #>  [4217,]   80   84   88   91   95   92   98   97   91    93 #>  [4218,]   79   83   87   90   94   91   97   96   90    92 #>  [4219,]   80   84   88   91   95   92   98   97   91    93 #>  [4220,]   79   83   87   90   94   91   97   96   90    92 #>  [4221,]   80   84   88   91   95   92   98   97   91    93 #>  [4222,]   80   84   88   91   95   92   98   97   91    93 #>  [4223,]   79   83   87   90   94   91   97   96   90    92 #>  [4224,]   79   83   87   90   94   91   97   96   90    92 #>  [4225,]   79   83   87   90   94   91   97   96   90    92 #>  [4226,]   80   84   88   91   95   93   98   97   91    93 #>  [4227,]   80   84   88   91   95   93   98   97   91    93 #>  [4228,]   79   83   87   90   94   91   97   96   90    92 #>  [4229,]   80   84   88   91   95   92   98   97   91    93 #>  [4230,]   79   83   87   90   94   91   97   96   90    92 #>  [4231,]   79   83   87   90   94   91   97   96   90    92 #>  [4232,]   79   83   87   90   94   91   97   96   90    92 #>  [4233,]   80   84   88   91   95   92   98   97   91    93 #>  [4234,]   79   83   87   90   94   91   97   96   90    92 #>  [4235,]   80   84   88   91   95   92   98   97   91    93 #>  [4236,]   79   83   87   90   94   91   97   96   90    92 #>  [4237,]   80   84   88   91   95   92   98   97   91    93 #>  [4238,]   79   83   87   90   94   91   97   96   90    92 #>  [4239,]   79   83   87   90   94   91   97   96   90    92 #>  [4240,]   80   84   88   91   95   92   98   97   91    93 #>  [4241,]   80   84   88   91   95   92   98   97   91    93 #>  [4242,]   79   83   87   90   94   91   97   96   90    92 #>  [4243,]   79   83   87   90   94   91   97   96   90    92 #>  [4244,]   80   84   88   91   95   92   98   97   91    93 #>  [4245,]   79   83   87   90   94   91   97   96   90    92 #>  [4246,]   80   84   88   91   95   92   98   97   91    93 #>  [4247,]   80   84   88   91   95   92   98   97   91    93 #>  [4248,]   79   83   87   90   94   91   97   96   90    92 #>  [4249,]   79   83   87   90   94   91   97   96   90    92 #>  [4250,]   80   84   88   91   95   92   98   97   91    93 #>  [4251,]   79   83   87   90   94   91   97   96   90    92 #>  [4252,]   80   84   88   91   95   92   98   97   91    93 #>  [4253,]   79   83   87   90   94   91   97   96   90    92 #>  [4254,]   79   83   87   90   94   91   97   96   90    92 #>  [4255,]   80   84   88   91   95   92   98   97   91    93 #>  [4256,]   79   83   87   90   94   91   97   96   90    92 #>  [4257,]   79   83   87   90   94   91   97   96   90    92 #>  [4258,]   80   84   88   91   95   93   98   97   91    93 #>  [4259,]   80   84   88   91   95   93   98   97   91    93 #>  [4260,]   79   83   87   90   94   91   97   96   90    92 #>  [4261,]   80   84   88   91   95   93   98   97   91    93 #>  [4262,]   79   83   87   90   94   91   97   96   90    92 #>  [4263,]   80   84   88   91   95   92   98   97   91    93 #>  [4264,]   79   83   87   90   94   91   97   96   90    92 #>  [4265,]   79   83   87   90   94   91   97   96   90    92 #>  [4266,]   79   83   87   90   94   91   97   96   90    92 #>  [4267,]   79   83   87   90   94   91   97   96   90    92 #>  [4268,]   80   84   88   91   95   92   98   97   91    93 #>  [4269,]   80   84   88   91   95   92   98   97   91    93 #>  [4270,]   80   84   88   91   95   93   98   97   91    93 #>  [4271,]   80   84   88   91   95   93   98   97   91    93 #>  [4272,]   79   83   87   90   94   91   97   96   90    92 #>  [4273,]   80   84   88   91   95   92   98   97   91    93 #>  [4274,]   80   84   88   91   95   92   98   97   91    93 #>  [4275,]   80   84   88   91   95   93   98   97   91    93 #>  [4276,]   80   84   88   91   95   92   98   97   91    93 #>  [4277,]   80   84   88   91   95   92   98   97   91    93 #>  [4278,]   79   83   87   90   94   91   97   96   90    92 #>  [4279,]   80   84   88   91   95   93   98   97   91    93 #>  [4280,]   80   84   88   91   95   92   98   97   91    93 #>  [4281,]   80   84   88   91   95   92   98   97   91    93 #>  [4282,]   80   84   88   91   95   92   98   97   91    93 #>  [4283,]   80   84   88   91   95   92   98   97   91    93 #>  [4284,]   80   84   88   91   95   92   98   97   91    93 #>  [4285,]   79   83   87   90   94   91   97   96   90    92 #>  [4286,]   80   84   88   91   95   92   98   97   91    93 #>  [4287,]   80   84   88   91   95   93   98   97   91    93 #>  [4288,]   79   83   87   90   94   91   97   96   90    92 #>  [4289,]   79   83   87   90   94   91   97   96   90    92 #>  [4290,]   80   84   88   91   95   92   98   97   91    93 #>  [4291,]   79   83   87   90   94   91   97   96   90    92 #>  [4292,]   80   84   88   91   95   92   98   97   91    93 #>  [4293,]   80   84   88   91   95   92   98   97   91    93 #>  [4294,]   80   84   88   91   95   92   98   97   91    93 #>  [4295,]   79   83   87   90   94   91   97   96   90    92 #>  [4296,]   80   84   88   91   95   92   98   97   91    93 #>  [4297,]   80   84   88   91   95   92   98   97   91    93 #>  [4298,]   80   84   88   91   95   92   98   97   91    93 #>  [4299,]   80   84   88   91   95   92   98   97   91    93 #>  [4300,]   80   84   88   91   95   93   98   97   91    93 #>  [4301,]   81   85   89   92   96   94   99   98   92    94 #>  [4302,]   82   86   90   93   97   95  100   99   93    95 #>  [4303,]   81   85   89   92   96   94   99   98   92    94 #>  [4304,]   81   85   89   92   96   94   99   98   92    94 #>  [4305,]   81   85   89   92   96   94   99   98   92    94 #>  [4306,]   81   85   89   92   96   94   99   98   92    94 #>  [4307,]   81   85   89   92   96   94   99   98   92    94 #>  [4308,]   81   85   89   92   96   94   99   98   92    94 #>  [4309,]   82   86   90   93   97   95  100   99   93    95 #>  [4310,]   82   86   90   93   97   95  100   99   93    95 #>  [4311,]   81   85   89   92   96   94   99   98   92    94 #>  [4312,]   82   86   90   93   97   95  100   99   93    95 #>  [4313,]   81   85   89   92   96   94   99   98   92    94 #>  [4314,]   81   85   89   92   96   94   99   98   92    94 #>  [4315,]   81   85   89   92   96   94   99   98   92    94 #>  [4316,]   81   85   89   92   96   94   99   98   92    94 #>  [4317,]   81   85   89   92   96   94   99   98   92    94 #>  [4318,]   81   85   89   92   96   94   99   98   92    94 #>  [4319,]   81   85   89   92   96   94   99   98   92    94 #>  [4320,]   81   85   89   92   96   94   99   98   92    94 #>  [4321,]   82   86   90   93   97   95  100   99   93    95 #>  [4322,]   81   85   89   92   96   94   99   98   92    94 #>  [4323,]   81   85   89   92   96   94   99   98   92    94 #>  [4324,]   81   85   89   92   96   94   99   98   92    94 #>  [4325,]   81   85   89   92   96   94   99   98   92    94 #>  [4326,]   81   85   89   92   96   94   99   98   92    94 #>  [4327,]   81   85   89   92   96   94   99   98   92    94 #>  [4328,]   81   85   89   92   96   94   99   98   92    94 #>  [4329,]   82   86   90   93   97   95  100   99   93    95 #>  [4330,]   81   85   89   92   96   94   99   98   92    94 #>  [4331,]   81   85   89   92   96   94   99   98   92    94 #>  [4332,]   81   85   89   92   96   94   99   98   92    94 #>  [4333,]   82   86   90   93   97   95  100   99   93    95 #>  [4334,]   81   85   89   92   96   94   99   98   92    94 #>  [4335,]   81   85   89   92   96   94   99   98   92    94 #>  [4336,]   81   85   89   92   96   94   99   98   92    94 #>  [4337,]   81   85   89   92   96   94   99   98   92    94 #>  [4338,]   81   85   89   92   96   94   99   98   92    94 #>  [4339,]   81   85   89   92   96   94   99   98   92    94 #>  [4340,]   81   85   89   92   96   94   99   98   92    94 #>  [4341,]   81   85   89   92   96   94   99   98   92    94 #>  [4342,]   81   85   89   92   96   94   99   98   92    94 #>  [4343,]   81   85   89   92   96   94   99   98   92    94 #>  [4344,]   81   85   89   92   96   94   99   98   92    94 #>  [4345,]   81   85   89   92   96   94   99   98   92    94 #>  [4346,]   81   85   89   92   96   94   99   98   92    94 #>  [4347,]   81   85   89   92   96   94   99   98   92    94 #>  [4348,]   81   85   89   92   96   94   99   98   92    94 #>  [4349,]   81   85   89   92   96   94   99   98   92    94 #>  [4350,]   81   85   89   92   96   94   99   98   92    94 #>  [4351,]   81   85   89   92   96   94   99   98   92    94 #>  [4352,]   81   85   89   92   96   94   99   98   92    94 #>  [4353,]   81   85   89   92   96   94   99   98   92    94 #>  [4354,]   81   85   89   92   96   94   99   98   92    94 #>  [4355,]   81   85   89   92   96   94   99   98   92    94 #>  [4356,]   81   85   89   92   96   94   99   98   92    94 #>  [4357,]   81   85   89   92   96   94   99   98   92    94 #>  [4358,]   81   85   89   92   96   94   99   98   92    94 #>  [4359,]   81   85   89   92   96   94   99   98   92    94 #>  [4360,]   81   85   89   92   96   94   99   98   92    94 #>  [4361,]   81   85   89   92   96   94   99   98   92    94 #>  [4362,]   81   85   89   92   96   94   99   98   92    94 #>  [4363,]   81   85   89   92   96   94   99   98   92    94 #>  [4364,]   81   85   89   92   96   94   99   98   92    94 #>  [4365,]   81   85   89   92   96   94   99   98   92    94 #>  [4366,]   81   85   89   92   96   94   99   98   92    94 #>  [4367,]   81   85   89   92   96   94   99   98   92    94 #>  [4368,]   81   85   89   92   96   94   99   98   92    94 #>  [4369,]   81   85   89   92   96   94   99   98   92    94 #>  [4370,]   82   86   90   93   97   95  100   99   93    95 #>  [4371,]   81   85   89   92   96   94   99   98   92    94 #>  [4372,]   81   85   89   92   96   94   99   98   92    94 #>  [4373,]   81   85   89   92   96   94   99   98   92    94 #>  [4374,]   81   85   89   92   96   94   99   98   92    94 #>  [4375,]   81   85   89   92   96   94   99   98   92    94 #>  [4376,]   81   85   89   92   96   94   99   98   92    94 #>  [4377,]   81   85   89   92   96   94   99   98   92    94 #>  [4378,]   81   85   89   92   96   94   99   98   92    94 #>  [4379,]   81   85   89   92   96   94   99   98   92    94 #>  [4380,]   81   85   89   92   96   94   99   98   92    94 #>  [4381,]   81   85   89   92   96   94   99   98   92    94 #>  [4382,]   81   85   89   92   96   94   99   98   92    94 #>  [4383,]   81   85   89   92   96   94   99   98   92    94 #>  [4384,]   81   85   89   92   96   94   99   98   92    94 #>  [4385,]   81   85   89   92   96   94   99   98   92    94 #>  [4386,]   82   86   90   93   97   95  100   99   93    95 #>  [4387,]   81   85   89   92   96   94   99   98   92    94 #>  [4388,]   81   85   89   92   96   94   99   98   92    94 #>  [4389,]   81   85   89   92   96   94   99   98   92    94 #>  [4390,]   81   85   89   92   96   94   99   98   92    94 #>  [4391,]   81   85   89   92   96   94   99   98   92    94 #>  [4392,]   81   85   89   92   96   94   99   98   92    94 #>  [4393,]   81   85   89   92   96   94   99   98   92    94 #>  [4394,]   81   85   89   92   96   94   99   98   92    94 #>  [4395,]   81   85   89   92   96   94   99   98   92    94 #>  [4396,]   81   85   89   92   96   94   99   98   92    94 #>  [4397,]   81   85   89   92   96   94   99   98   92    94 #>  [4398,]   81   85   89   92   96   94   99   98   92    94 #>  [4399,]   81   85   89   92   96   94   99   98   92    94 #>  [4400,]   81   85   89   92   96   94   99   98   92    94 #>  [4401,]   83   87   91   94   98   96  101  100   94    96 #>  [4402,]   84   88   92   95   99   97  102  101   95    97 #>  [4403,]   84   88   92   95   99   97  102  101   95    97 #>  [4404,]   83   87   91   94   98   96  101  100   94    96 #>  [4405,]   84   88   92   95   99   97  102  101   95    97 #>  [4406,]   84   88   92   95   99   97  102  101   95    97 #>  [4407,]   84   88   92   95   99   97  102  101   95    97 #>  [4408,]   83   87   91   94   98   96  101  100   94    96 #>  [4409,]   83   87   91   94   98   96  101  100   94    96 #>  [4410,]   84   88   92   95   99   97  102  101   95    97 #>  [4411,]   83   87   91   94   98   96  101  100   94    96 #>  [4412,]   84   88   92   95   99   97  102  101   95    97 #>  [4413,]   83   87   91   94   98   96  101  100   94    96 #>  [4414,]   83   87   91   94   98   96  101  100   94    96 #>  [4415,]   83   87   91   94   98   96  101  100   94    96 #>  [4416,]   83   87   91   94   98   96  101  100   94    96 #>  [4417,]   83   87   91   94   98   96  101  100   94    96 #>  [4418,]   84   88   92   95   99   97  102  101   95    97 #>  [4419,]   84   88   92   95   99   97  102  101   95    97 #>  [4420,]   84   88   92   95   99   97  102  101   95    97 #>  [4421,]   83   87   91   94   98   96  101  100   94    96 #>  [4422,]   83   87   91   94   98   96  101  100   94    96 #>  [4423,]   84   88   92   95   99   97  102  101   95    97 #>  [4424,]   83   87   91   94   98   96  101  100   94    96 #>  [4425,]   84   88   92   95   99   97  102  101   95    97 #>  [4426,]   84   88   92   95   99   97  102  101   95    97 #>  [4427,]   83   87   91   94   98   96  101  100   94    96 #>  [4428,]   84   88   92   95   99   97  102  101   95    97 #>  [4429,]   84   88   92   95   99   97  102  101   95    97 #>  [4430,]   83   87   91   94   98   96  101  100   94    96 #>  [4431,]   84   88   92   95   99   97  102  101   95    97 #>  [4432,]   84   88   92   95   99   97  102  101   95    97 #>  [4433,]   84   88   92   95   99   97  102  101   95    97 #>  [4434,]   84   88   92   95   99   97  102  101   95    97 #>  [4435,]   83   87   91   94   98   96  101  100   94    96 #>  [4436,]   84   88   92   95   99   97  102  101   95    97 #>  [4437,]   83   87   91   94   98   96  101  100   94    96 #>  [4438,]   83   87   91   94   98   96  101  100   94    96 #>  [4439,]   84   88   92   95   99   97  102  101   95    97 #>  [4440,]   84   88   92   95   99   97  102  101   95    97 #>  [4441,]   83   87   91   94   98   96  101  100   94    96 #>  [4442,]   84   88   92   95   99   97  102  101   95    97 #>  [4443,]   83   87   91   94   98   96  101  100   94    96 #>  [4444,]   83   87   91   94   98   96  101  100   94    96 #>  [4445,]   83   87   91   94   98   96  101  100   94    96 #>  [4446,]   83   87   91   94   98   96  101  100   94    96 #>  [4447,]   84   88   92   95   99   97  102  101   95    97 #>  [4448,]   84   88   92   95   99   97  102  101   95    97 #>  [4449,]   83   87   91   94   98   96  101  100   94    96 #>  [4450,]   84   88   92   95   99   97  102  101   95    97 #>  [4451,]   83   87   91   94   98   96  101  100   94    96 #>  [4452,]   83   87   91   94   98   96  101  100   94    96 #>  [4453,]   84   88   92   95   99   97  102  101   95    97 #>  [4454,]   83   87   91   94   98   96  101  100   94    96 #>  [4455,]   83   87   91   94   98   96  101  100   94    96 #>  [4456,]   84   88   92   95   99   97  102  101   95    97 #>  [4457,]   84   88   92   95   99   97  102  101   95    97 #>  [4458,]   83   87   91   94   98   96  101  100   94    96 #>  [4459,]   83   87   91   94   98   96  101  100   94    96 #>  [4460,]   84   88   92   95   99   97  102  101   95    97 #>  [4461,]   84   88   92   95   99   97  102  101   95    97 #>  [4462,]   83   87   91   94   98   96  101  100   94    96 #>  [4463,]   84   88   92   95   99   97  102  101   95    97 #>  [4464,]   84   88   92   95   99   97  102  101   95    97 #>  [4465,]   84   88   92   95   99   97  102  101   95    97 #>  [4466,]   83   87   91   94   98   96  101  100   94    96 #>  [4467,]   83   87   91   94   98   96  101  100   94    96 #>  [4468,]   83   87   91   94   98   96  101  100   94    96 #>  [4469,]   83   87   91   94   98   96  101  100   94    96 #>  [4470,]   84   88   92   95   99   97  102  101   95    97 #>  [4471,]   84   88   92   95   99   97  102  101   95    97 #>  [4472,]   84   88   92   95   99   97  102  101   95    97 #>  [4473,]   84   88   92   95   99   97  102  101   95    97 #>  [4474,]   83   87   91   94   98   96  101  100   94    96 #>  [4475,]   84   88   92   95   99   97  102  101   95    97 #>  [4476,]   84   88   92   95   99   97  102  101   95    97 #>  [4477,]   84   88   92   95   99   97  102  101   95    97 #>  [4478,]   84   88   92   95   99   97  102  101   95    97 #>  [4479,]   83   87   91   94   98   96  101  100   94    96 #>  [4480,]   83   87   91   94   98   96  101  100   94    96 #>  [4481,]   83   87   91   94   98   96  101  100   94    96 #>  [4482,]   83   87   91   94   98   96  101  100   94    96 #>  [4483,]   83   87   91   94   98   96  101  100   94    96 #>  [4484,]   84   88   92   95   99   97  102  101   95    97 #>  [4485,]   83   87   91   94   98   96  101  100   94    96 #>  [4486,]   84   88   92   95   99   97  102  101   95    97 #>  [4487,]   83   87   91   94   98   96  101  100   94    96 #>  [4488,]   83   87   91   94   98   96  101  100   94    96 #>  [4489,]   83   87   91   94   98   96  101  100   94    96 #>  [4490,]   83   87   91   94   98   96  101  100   94    96 #>  [4491,]   83   87   91   94   98   96  101  100   94    96 #>  [4492,]   83   87   91   94   98   96  101  100   94    96 #>  [4493,]   84   88   92   95   99   97  102  101   95    97 #>  [4494,]   84   88   92   95   99   97  102  101   95    97 #>  [4495,]   83   87   91   94   98   96  101  100   94    96 #>  [4496,]   83   87   91   94   98   96  101  100   94    96 #>  [4497,]   84   88   92   95   99   97  102  101   95    97 #>  [4498,]   84   88   92   95   99   97  102  101   95    97 #>  [4499,]   83   87   91   94   98   96  101  100   94    96 #>  [4500,]   84   88   92   95   99   97  102  101   95    97 #>  [4501,]   86   90   94   96  101   99  104  103   97   100 #>  [4502,]   86   90   94   96  101   99  104  103   97   100 #>  [4503,]   85   89   93   96  100   98  103  102   96    98 #>  [4504,]   85   89   93   96  101   99  104  103   97   100 #>  [4505,]   85   89   93   96  100   98  103  102   96    98 #>  [4506,]   85   89   93   96  101   99  104  103   97   100 #>  [4507,]   85   89   93   96  101   99  104  103   97   100 #>  [4508,]   86   90   94   96  101   99  104  103   97   100 #>  [4509,]   85   89   93   96  100   98  103  102   96    98 #>  [4510,]   85   89   93   96  100   98  103  102   96    98 #>  [4511,]   85   89   93   96  100   98  103  102   96    98 #>  [4512,]   85   89   93   96  101   99  104  103   97   100 #>  [4513,]   86   90   94   96  101   99  104  103   97   100 #>  [4514,]   85   89   93   96  100   98  103  102   96    98 #>  [4515,]   86   90   94   96  101   99  104  103   97   100 #>  [4516,]   86   90   94   96  101   99  104  103   97   100 #>  [4517,]   85   89   93   96  101   99  104  103   97   100 #>  [4518,]   85   89   93   96  101   99  104  103   97   100 #>  [4519,]   86   90   94   96  101   99  104  103   97   100 #>  [4520,]   86   90   94   96  101   99  104  103   97    99 #>  [4521,]   85   89   93   96  100   98  103  102   96    98 #>  [4522,]   86   90   94   96  101   99  104  103   97   100 #>  [4523,]   86   90   94   96  101   99  104  103   97   100 #>  [4524,]   85   89   93   96  101   99  104  103   97   100 #>  [4525,]   85   89   93   96  101   99  104  103   97    99 #>  [4526,]   86   90   94   96  101   99  104  103   97   100 #>  [4527,]   86   90   94   96  101   99  104  103   97   100 #>  [4528,]   85   89   93   96  100   98  103  102   96    98 #>  [4529,]   86   90   94   96  101   99  104  103   97   100 #>  [4530,]   86   90   94   96  101   99  104  103   97   100 #>  [4531,]   85   89   93   96  100   98  103  102   96    98 #>  [4532,]   85   89   93   96  100   98  103  102   96    98 #>  [4533,]   86   90   94   96  101   99  104  103   97   100 #>  [4534,]   85   89   93   96  100   98  103  102   96    98 #>  [4535,]   85   89   93   96  100   98  103  102   96    98 #>  [4536,]   86   90   94   96  101   99  104  103   97   100 #>  [4537,]   86   90   94   96  101   99  104  103   97   100 #>  [4538,]   86   90   94   96  101   99  104  103   97   100 #>  [4539,]   85   89   93   96  100   98  103  102   96    98 #>  [4540,]   85   89   93   96  100   98  103  102   96    98 #>  [4541,]   86   90   94   96  101   99  104  103   97   100 #>  [4542,]   85   89   93   96  101   99  104  103   97   100 #>  [4543,]   86   90   94   96  101   99  104  103   97   100 #>  [4544,]   86   90   94   96  101   99  104  103   97    99 #>  [4545,]   86   90   94   96  101   99  104  103   97   100 #>  [4546,]   86   90   94   96  101   99  104  103   97   100 #>  [4547,]   85   89   93   96  100   98  103  102   96    98 #>  [4548,]   85   89   93   96  100   98  103  102   96    98 #>  [4549,]   85   89   93   96  101   99  104  103   97   100 #>  [4550,]   86   90   94   96  101   99  104  103   97   100 #>  [4551,]   86   90   94   96  101   99  104  103   97   100 #>  [4552,]   85   89   93   96  100   98  103  102   96    98 #>  [4553,]   86   90   94   96  101   99  104  103   97    99 #>  [4554,]   85   89   93   96  101   99  104  103   97   100 #>  [4555,]   86   90   94   96  101   99  104  103   97   100 #>  [4556,]   86   90   94   96  101   99  104  103   97    99 #>  [4557,]   85   89   93   96  101   99  104  103   97   100 #>  [4558,]   86   90   94   96  101   99  104  103   97   100 #>  [4559,]   86   90   94   96  101   99  104  103   97   100 #>  [4560,]   86   90   94   96  101   99  104  103   97   100 #>  [4561,]   86   90   94   96  101   99  104  103   97   100 #>  [4562,]   85   89   93   96  100   98  103  102   96    98 #>  [4563,]   86   90   94   96  101   99  104  103   97   100 #>  [4564,]   86   90   94   96  101   99  104  103   97   100 #>  [4565,]   85   89   93   96  100   98  103  102   96    98 #>  [4566,]   86   90   94   96  101   99  104  103   97   100 #>  [4567,]   85   89   93   96  101   99  104  103   97   100 #>  [4568,]   86   90   94   96  101   99  104  103   97   100 #>  [4569,]   86   90   94   96  101   99  104  103   97   100 #>  [4570,]   85   89   93   96  100   98  103  102   96    98 #>  [4571,]   86   90   94   96  101   99  104  103   97   100 #>  [4572,]   85   89   93   96  100   98  103  102   96    98 #>  [4573,]   85   89   93   96  101   99  104  103   97   100 #>  [4574,]   85   89   93   96  100   98  103  102   96    98 #>  [4575,]   86   90   94   96  101   99  104  103   97   100 #>  [4576,]   85   89   93   96  100   98  103  102   96    98 #>  [4577,]   86   90   94   96  101   99  104  103   97   100 #>  [4578,]   86   90   94   96  101   99  104  103   97   100 #>  [4579,]   85   89   93   96  101   99  104  103   97   100 #>  [4580,]   86   90   94   96  101   99  104  103   97    99 #>  [4581,]   86   90   94   96  101   99  104  103   97   100 #>  [4582,]   85   89   93   96  100   98  103  102   96    98 #>  [4583,]   86   90   94   96  101   99  104  103   97   100 #>  [4584,]   86   90   94   96  101   99  104  103   97   100 #>  [4585,]   86   90   94   96  101   99  104  103   97    99 #>  [4586,]   85   89   93   96  101   99  104  103   97    99 #>  [4587,]   86   90   94   96  101   99  104  103   97   100 #>  [4588,]   85   89   93   96  101   99  104  103   97   100 #>  [4589,]   85   89   93   96  101   99  104  103   97    99 #>  [4590,]   86   90   94   96  101   99  104  103   97   100 #>  [4591,]   85   89   93   96  100   98  103  102   96    98 #>  [4592,]   85   89   93   96  101   99  104  103   97   100 #>  [4593,]   86   90   94   96  101   99  104  103   97   100 #>  [4594,]   85   89   93   96  101   99  104  103   97   100 #>  [4595,]   86   90   94   96  101   99  104  103   97   100 #>  [4596,]   86   90   94   96  101   99  104  103   97   100 #>  [4597,]   86   90   94   96  101   99  104  103   97   100 #>  [4598,]   85   89   93   96  100   98  103  102   96    98 #>  [4599,]   85   89   93   96  101   99  104  103   97   100 #>  [4600,]   86   90   94   96  101   99  104  103   97   100 #>  [4601,]   88   92   96   98  103  100  105  104   98   101 #>  [4602,]   88   92   96   98  103  100  105  104   98   101 #>  [4603,]   87   91   95   97  102  101  106  105   99   102 #>  [4604,]   87   91   95   97  102  101  106  105   99   102 #>  [4605,]   87   91   95   97  102  101  106  105   99   102 #>  [4606,]   87   91   95   97  102  101  106  105   99   102 #>  [4607,]   87   91   95   97  102  102  107  105   99   102 #>  [4608,]   88   92   96   98  103  100  105  104   98   101 #>  [4609,]   87   91   95   97  102  101  106  105   99   102 #>  [4610,]   87   91   95   97  102  102  107  105   99   102 #>  [4611,]   87   91   95   97  102  101  106  105   99   102 #>  [4612,]   87   91   95   97  102  101  106  105   99   102 #>  [4613,]   88   92   96   98  103  100  105  104   98   101 #>  [4614,]   87   91   95   97  102  101  106  105   99   102 #>  [4615,]   88   92   96   98  103  100  105  104   98   101 #>  [4616,]   88   92   96   98  103  100  105  104   98   101 #>  [4617,]   87   91   95   97  102  101  106  105   99   102 #>  [4618,]   87   91   95   97  102  101  106  105   99   102 #>  [4619,]   88   92   96   98  103  100  105  104   98   101 #>  [4620,]   88   92   96   98  103  100  105  104   98   101 #>  [4621,]   87   91   95   97  102  101  106  105   99   102 #>  [4622,]   88   92   96   98  103  100  105  104   98   101 #>  [4623,]   88   92   96   98  103  100  105  104   98   101 #>  [4624,]   87   91   95   97  102  102  107  105   99   102 #>  [4625,]   87   91   95   97  102  101  106  105   99   102 #>  [4626,]   88   92   96   98  103  100  105  104   98   101 #>  [4627,]   88   92   96   98  103  100  105  104   98   101 #>  [4628,]   87   91   95   97  102  102  107  105   99   102 #>  [4629,]   88   92   96   98  103  100  105  104   98   101 #>  [4630,]   88   92   96   98  103  100  105  104   98   101 #>  [4631,]   87   91   95   97  102  101  106  105   99   102 #>  [4632,]   87   91   95   97  102  101  106  105   99   102 #>  [4633,]   88   92   96   98  103  100  105  104   98   101 #>  [4634,]   87   91   95   97  102  101  106  105   99   102 #>  [4635,]   87   91   95   97  102  101  106  105   99   102 #>  [4636,]   88   92   96   98  103  100  105  104   98   101 #>  [4637,]   88   92   96   98  103  100  105  104   98   101 #>  [4638,]   88   92   96   98  103  100  105  104   98   101 #>  [4639,]   87   91   95   97  102  101  106  105   99   102 #>  [4640,]   87   91   95   97  102  101  106  105   99   102 #>  [4641,]   88   92   96   98  103  100  105  104   98   101 #>  [4642,]   87   91   95   97  102  101  106  105   99   102 #>  [4643,]   88   92   96   98  103  100  105  104   98   101 #>  [4644,]   88   92   96   98  103  100  105  104   98   101 #>  [4645,]   87   91   95   97  102  101  106  105   99   102 #>  [4646,]   88   92   96   98  103  100  105  104   98   101 #>  [4647,]   87   91   95   97  102  101  106  105   99   102 #>  [4648,]   87   91   95   97  102  101  106  105   99   102 #>  [4649,]   87   91   95   97  102  101  106  105   99   102 #>  [4650,]   88   92   96   98  103  100  105  104   98   101 #>  [4651,]   88   92   96   98  103  100  105  104   98   101 #>  [4652,]   87   91   95   97  102  102  107  105   99   102 #>  [4653,]   88   92   96   98  103  100  105  104   98   101 #>  [4654,]   87   91   95   97  102  101  106  105   99   102 #>  [4655,]   88   92   96   98  103  100  105  104   98   101 #>  [4656,]   88   92   96   98  103  100  105  104   98   101 #>  [4657,]   87   91   95   97  102  101  106  105   99   102 #>  [4658,]   88   92   96   98  103  100  105  104   98   101 #>  [4659,]   88   92   96   98  103  100  105  104   98   101 #>  [4660,]   88   92   96   98  103  100  105  104   98   101 #>  [4661,]   88   92   96   98  103  100  105  104   98   101 #>  [4662,]   87   91   95   97  102  101  106  105   99   102 #>  [4663,]   88   92   96   98  103  100  105  104   98   101 #>  [4664,]   88   92   96   98  103  100  105  104   98   101 #>  [4665,]   87   91   95   97  102  101  106  105   99   102 #>  [4666,]   88   92   96   98  103  100  105  104   98   101 #>  [4667,]   87   91   95   97  102  101  106  105   99   102 #>  [4668,]   88   92   96   98  103  100  105  104   98   101 #>  [4669,]   88   92   96   98  103  100  105  104   98   101 #>  [4670,]   87   91   95   97  102  101  106  105   99   102 #>  [4671,]   88   92   96   98  103  100  105  104   98   101 #>  [4672,]   87   91   95   97  102  101  106  105   99   102 #>  [4673,]   87   91   95   97  102  101  106  105   99   102 #>  [4674,]   87   91   95   97  102  101  106  105   99   102 #>  [4675,]   88   92   96   98  103  100  105  104   98   101 #>  [4676,]   87   91   95   97  102  102  107  105   99   102 #>  [4677,]   88   92   96   98  103  100  105  104   98   101 #>  [4678,]   88   92   96   98  103  100  105  104   98   101 #>  [4679,]   87   91   95   97  102  101  106  105   99   102 #>  [4680,]   88   92   96   98  103  100  105  104   98   101 #>  [4681,]   88   92   96   98  103  100  105  104   98   101 #>  [4682,]   87   91   95   97  102  101  106  105   99   102 #>  [4683,]   88   92   96   98  103  100  105  104   98   101 #>  [4684,]   88   92   96   98  103  100  105  104   98   101 #>  [4685,]   88   92   96   98  103  100  105  104   98   101 #>  [4686,]   87   91   95   97  102  102  107  105   99   102 #>  [4687,]   88   92   96   98  103  100  105  104   98   101 #>  [4688,]   87   91   95   97  102  101  106  105   99   102 #>  [4689,]   87   91   95   97  102  101  106  105   99   102 #>  [4690,]   88   92   96   98  103  100  105  104   98   101 #>  [4691,]   87   91   95   97  102  102  107  105   99   102 #>  [4692,]   87   91   95   97  102  101  106  105   99   102 #>  [4693,]   88   92   96   98  103  100  105  104   98   101 #>  [4694,]   87   91   95   97  102  101  106  105   99   102 #>  [4695,]   88   92   96   98  103  100  105  104   98   101 #>  [4696,]   88   92   96   98  103  100  105  104   98   101 #>  [4697,]   88   92   96   98  103  100  105  104   98   101 #>  [4698,]   87   91   95   97  102  101  106  105   99   102 #>  [4699,]   87   91   95   97  102  101  106  105   99   102 #>  [4700,]   88   92   96   98  103  100  105  104   98   101 #>  [4701,]   89   93   97   99  104  103  108  106  100   103 #>  [4702,]   89   93   97   99  104  103  108  106  100   103 #>  [4703,]   89   93   97   99  104  103  108  106  100   103 #>  [4704,]   89   93   97   99  104  103  108  106  100   103 #>  [4705,]   89   93   97   99  104  103  108  106  100   103 #>  [4706,]   89   93   97   99  104  103  108  106  100   103 #>  [4707,]   89   93   97   99  104  103  108  106  100   103 #>  [4708,]   90   94   98  100  105  104  109  107  101   104 #>  [4709,]   89   93   97   99  104  103  108  106  100   103 #>  [4710,]   89   93   97   99  104  103  108  106  100   103 #>  [4711,]   89   93   97   99  104  103  108  106  100   103 #>  [4712,]   89   93   97   99  104  103  108  106  100   103 #>  [4713,]   90   94   98  100  105  104  109  107  101   104 #>  [4714,]   89   93   97   99  104  103  108  106  100   103 #>  [4715,]   90   94   98  100  105  104  109  107  101   104 #>  [4716,]   90   94   98  100  105  104  109  107  101   104 #>  [4717,]   89   93   97   99  104  103  108  106  100   103 #>  [4718,]   89   93   97   99  104  103  108  106  100   103 #>  [4719,]   90   94   98  100  105  104  109  107  101   104 #>  [4720,]   90   94   98  100  105  104  109  107  101   104 #>  [4721,]   89   93   97   99  104  103  108  106  100   103 #>  [4722,]   90   94   98  100  105  104  109  107  101   104 #>  [4723,]   89   93   97   99  104  103  108  106  100   103 #>  [4724,]   89   93   97   99  104  103  108  106  100   103 #>  [4725,]   89   93   97   99  104  103  108  106  100   103 #>  [4726,]   90   94   98  100  105  104  109  107  101   104 #>  [4727,]   90   94   98  100  105  104  109  107  101   104 #>  [4728,]   89   93   97   99  104  103  108  106  100   103 #>  [4729,]   90   94   98  100  105  104  109  107  101   104 #>  [4730,]   90   94   98  100  105  104  109  107  101   104 #>  [4731,]   89   93   97   99  104  103  108  106  100   103 #>  [4732,]   89   93   97   99  104  103  108  106  100   103 #>  [4733,]   89   93   97   99  104  103  108  106  100   103 #>  [4734,]   89   93   97   99  104  103  108  106  100   103 #>  [4735,]   89   93   97   99  104  103  108  106  100   103 #>  [4736,]   90   94   98  100  105  104  109  107  101   104 #>  [4737,]   90   94   98  100  105  104  109  107  101   104 #>  [4738,]   90   94   98  100  105  104  109  107  101   104 #>  [4739,]   89   93   97   99  104  103  108  106  100   103 #>  [4740,]   89   93   97   99  104  103  108  106  100   103 #>  [4741,]   90   94   98  100  105  104  109  107  101   104 #>  [4742,]   89   93   97   99  104  103  108  106  100   103 #>  [4743,]   90   94   98  100  105  104  109  107  101   104 #>  [4744,]   90   94   98  100  105  104  109  107  101   104 #>  [4745,]   89   93   97   99  104  103  108  106  100   103 #>  [4746,]   90   94   98  100  105  104  109  107  101   104 #>  [4747,]   89   93   97   99  104  103  108  106  100   103 #>  [4748,]   89   93   97   99  104  103  108  106  100   103 #>  [4749,]   89   93   97   99  104  103  108  106  100   103 #>  [4750,]   90   94   98  100  105  104  109  107  101   104 #>  [4751,]   90   94   98  100  105  104  109  107  101   104 #>  [4752,]   89   93   97   99  104  103  108  106  100   103 #>  [4753,]   90   94   98  100  105  104  109  107  101   104 #>  [4754,]   89   93   97   99  104  103  108  106  100   103 #>  [4755,]   90   94   98  100  105  104  109  107  101   104 #>  [4756,]   90   94   98  100  105  104  109  107  101   104 #>  [4757,]   89   93   97   99  104  103  108  106  100   103 #>  [4758,]   90   94   98  100  105  104  109  107  101   104 #>  [4759,]   90   94   98  100  105  104  109  107  101   104 #>  [4760,]   90   94   98  100  105  104  109  107  101   104 #>  [4761,]   89   93   97   99  104  103  108  106  100   103 #>  [4762,]   89   93   97   99  104  103  108  106  100   103 #>  [4763,]   89   93   97   99  104  103  108  106  100   103 #>  [4764,]   90   94   98  100  105  104  109  107  101   104 #>  [4765,]   89   93   97   99  104  103  108  106  100   103 #>  [4766,]   90   94   98  100  105  104  109  107  101   104 #>  [4767,]   89   93   97   99  104  103  108  106  100   103 #>  [4768,]   89   93   97   99  104  103  108  106  100   103 #>  [4769,]   90   94   98  100  105  104  109  107  101   104 #>  [4770,]   89   93   97   99  104  103  108  106  100   103 #>  [4771,]   90   94   98  100  105  104  109  107  101   104 #>  [4772,]   89   93   97   99  104  103  108  106  100   103 #>  [4773,]   89   93   97   99  104  103  108  106  100   103 #>  [4774,]   89   93   97   99  104  103  108  106  100   103 #>  [4775,]   89   93   97   99  104  103  108  106  100   103 #>  [4776,]   89   93   97   99  104  103  108  106  100   103 #>  [4777,]   90   94   98  100  105  104  109  107  101   104 #>  [4778,]   89   93   97   99  104  103  108  106  100   103 #>  [4779,]   89   93   97   99  104  103  108  106  100   103 #>  [4780,]   90   94   98  100  105  104  109  107  101   104 #>  [4781,]   90   94   98  100  105  104  109  107  101   104 #>  [4782,]   89   93   97   99  104  103  108  106  100   103 #>  [4783,]   90   94   98  100  105  104  109  107  101   104 #>  [4784,]   90   94   98  100  105  104  109  107  101   104 #>  [4785,]   90   94   98  100  105  104  109  107  101   104 #>  [4786,]   89   93   97   99  104  103  108  106  100   103 #>  [4787,]   90   94   98  100  105  104  109  107  101   104 #>  [4788,]   89   93   97   99  104  103  108  106  100   103 #>  [4789,]   89   93   97   99  104  103  108  106  100   103 #>  [4790,]   90   94   98  100  105  104  109  107  101   104 #>  [4791,]   89   93   97   99  104  103  108  106  100   103 #>  [4792,]   89   93   97   99  104  103  108  106  100   103 #>  [4793,]   89   93   97   99  104  103  108  106  100   103 #>  [4794,]   89   93   97   99  104  103  108  106  100   103 #>  [4795,]   90   94   98  100  105  104  109  107  101   104 #>  [4796,]   90   94   98  100  105  104  109  107  101   104 #>  [4797,]   90   94   98  100  105  104  109  107  101   104 #>  [4798,]   89   93   97   99  104  103  108  106  100   103 #>  [4799,]   89   93   97   99  104  103  108  106  100   103 #>  [4800,]   90   94   98  100  105  104  109  107  101   104 #>  [4801,]   91   95   99  102  107  106  111  109  103   106 #>  [4802,]   91   95   99  103  109  108  113  111  105   107 #>  [4803,]   91   95   99  102  107  106  111  109  103   106 #>  [4804,]   91   95   99  102  107  106  111  109  103   106 #>  [4805,]   91   95   99  103  108  107  112  110  104   107 #>  [4806,]   91   95   99  102  107  106  111  109  103   106 #>  [4807,]   91   95   99  102  107  106  111  109  103   106 #>  [4808,]   92   96  100  101  106  105  110  108  102   105 #>  [4809,]   92   96  100  101  106  105  110  108  102   105 #>  [4810,]   91   95   99  103  109  108  113  111  105   107 #>  [4811,]   91   95   99  102  107  106  111  109  103   106 #>  [4812,]   91   95   99  103  109  108  113  111  105   107 #>  [4813,]   91   95   99  103  109  108  113  111  105   107 #>  [4814,]   91   95   99  102  107  106  111  109  103   106 #>  [4815,]   91   95   99  102  107  106  111  109  103   106 #>  [4816,]   91   95   99  102  107  106  111  109  103   106 #>  [4817,]   91   95   99  103  109  108  113  111  105   107 #>  [4818,]   91   95   99  103  108  107  112  110  104   107 #>  [4819,]   91   95   99  102  107  106  111  109  103   106 #>  [4820,]   91   95   99  103  108  107  112  110  104   107 #>  [4821,]   91   95   99  103  109  108  113  111  105   107 #>  [4822,]   91   95   99  102  107  106  111  109  103   106 #>  [4823,]   91   95   99  103  108  107  112  110  104   107 #>  [4824,]   91   95   99  103  108  107  112  110  104   107 #>  [4825,]   91   95   99  102  107  106  111  109  103   106 #>  [4826,]   92   96  100  101  106  105  110  108  102   105 #>  [4827,]   91   95   99  103  108  107  112  110  104   107 #>  [4828,]   91   95   99  102  107  106  111  109  103   106 #>  [4829,]   91   95   99  103  109  108  113  111  105   107 #>  [4830,]   91   95   99  102  107  106  111  109  103   106 #>  [4831,]   91   95   99  103  108  107  112  110  104   107 #>  [4832,]   91   95   99  103  109  108  113  111  105   107 #>  [4833,]   91   95   99  103  109  108  113  111  105   107 #>  [4834,]   91   95   99  102  107  106  111  109  103   106 #>  [4835,]   91   95   99  102  107  106  111  109  103   106 #>  [4836,]   91   95   99  103  108  107  112  110  104   107 #>  [4837,]   91   95   99  102  107  106  111  109  103   106 #>  [4838,]   91   95   99  102  107  106  111  109  103   106 #>  [4839,]   91   95   99  102  107  106  111  109  103   106 #>  [4840,]   91   95   99  103  108  107  112  110  104   107 #>  [4841,]   91   95   99  102  107  106  111  109  103   106 #>  [4842,]   91   95   99  102  107  106  111  109  103   106 #>  [4843,]   91   95   99  102  107  106  111  109  103   106 #>  [4844,]   91   95   99  103  108  107  112  110  104   107 #>  [4845,]   91   95   99  102  107  106  111  109  103   106 #>  [4846,]   91   95   99  102  107  106  111  109  103   106 #>  [4847,]   91   95   99  102  107  106  111  109  103   106 #>  [4848,]   91   95   99  102  107  106  111  109  103   106 #>  [4849,]   91   95   99  102  107  106  111  109  103   106 #>  [4850,]   91   95   99  102  107  106  111  109  103   106 #>  [4851,]   91   95   99  102  107  106  111  109  103   106 #>  [4852,]   91   95   99  102  107  106  111  109  103   106 #>  [4853,]   91   95   99  103  109  108  113  111  105   107 #>  [4854,]   91   95   99  102  107  106  111  109  103   106 #>  [4855,]   91   95   99  102  107  106  111  109  103   106 #>  [4856,]   92   96  100  101  106  105  110  108  102   105 #>  [4857,]   91   95   99  102  107  106  111  109  103   106 #>  [4858,]   91   95   99  102  107  106  111  109  103   106 #>  [4859,]   91   95   99  102  107  106  111  109  103   106 #>  [4860,]   91   95   99  103  109  108  113  111  105   107 #>  [4861,]   92   96  100  101  106  105  110  108  102   105 #>  [4862,]   91   95   99  102  107  106  111  109  103   106 #>  [4863,]   91   95   99  103  109  108  113  111  105   107 #>  [4864,]   91   95   99  102  107  106  111  109  103   106 #>  [4865,]   91   95   99  102  107  106  111  109  103   106 #>  [4866,]   91   95   99  102  107  106  111  109  103   106 #>  [4867,]   91   95   99  102  107  106  111  109  103   106 #>  [4868,]   91   95   99  102  107  106  111  109  103   106 #>  [4869,]   91   95   99  102  107  106  111  109  103   106 #>  [4870,]   91   95   99  103  109  108  113  111  105   107 #>  [4871,]   91   95   99  102  107  106  111  109  103   106 #>  [4872,]   91   95   99  102  107  106  111  109  103   106 #>  [4873,]   91   95   99  102  107  106  111  109  103   106 #>  [4874,]   91   95   99  102  107  106  111  109  103   106 #>  [4875,]   91   95   99  103  109  108  113  111  105   107 #>  [4876,]   92   96  100  101  106  105  110  108  102   105 #>  [4877,]   91   95   99  102  107  106  111  109  103   106 #>  [4878,]   91   95   99  102  107  106  111  109  103   106 #>  [4879,]   91   95   99  102  107  106  111  109  103   106 #>  [4880,]   91   95   99  103  109  108  113  111  105   107 #>  [4881,]   91   95   99  103  109  108  113  111  105   107 #>  [4882,]   91   95   99  102  107  106  111  109  103   106 #>  [4883,]   91   95   99  103  108  107  112  110  104   107 #>  [4884,]   91   95   99  103  108  107  112  110  104   107 #>  [4885,]   91   95   99  102  107  106  111  109  103   106 #>  [4886,]   91   95   99  103  109  108  113  111  105   107 #>  [4887,]   91   95   99  102  107  106  111  109  103   106 #>  [4888,]   91   95   99  103  108  107  112  110  104   107 #>  [4889,]   91   95   99  102  107  106  111  109  103   106 #>  [4890,]   91   95   99  102  107  106  111  109  103   106 #>  [4891,]   91   95   99  102  107  106  111  109  103   106 #>  [4892,]   91   95   99  102  107  106  111  109  103   106 #>  [4893,]   91   95   99  102  107  106  111  109  103   106 #>  [4894,]   91   95   99  102  107  106  111  109  103   106 #>  [4895,]   91   95   99  102  107  106  111  109  103   106 #>  [4896,]   91   95   99  102  107  106  111  109  103   106 #>  [4897,]   91   95   99  102  107  106  111  109  103   106 #>  [4898,]   91   95   99  102  107  106  111  109  103   106 #>  [4899,]   91   95   99  102  107  106  111  109  103   106 #>  [4900,]   91   95   99  102  107  106  111  109  103   106 #>  [4901,]   94   97  102  105  111  110  115  113  107   109 #>  [4902,]   93   97  102  105  111  110  115  113  107   109 #>  [4903,]   93   97  101  104  110  109  114  112  106   108 #>  [4904,]   93   97  102  105  111  110  115  113  107   109 #>  [4905,]   94   97  102  105  111  110  115  113  107   109 #>  [4906,]   93   97  102  105  111  110  115  113  107   109 #>  [4907,]   93   97  101  104  110  109  114  112  106   108 #>  [4908,]   93   97  101  104  110  109  114  112  106   108 #>  [4909,]   94   97  102  105  111  110  115  113  107   109 #>  [4910,]   93   97  102  105  111  110  115  113  107   109 #>  [4911,]   94   97  102  105  111  110  115  113  107   109 #>  [4912,]   93   97  102  105  111  110  115  113  107   109 #>  [4913,]   94   97  101  104  110  109  114  112  106   108 #>  [4914,]   93   97  102  105  111  110  115  113  107   109 #>  [4915,]   93   97  102  105  111  110  115  113  107   109 #>  [4916,]   93   97  101  104  110  109  114  112  106   108 #>  [4917,]   94   97  101  104  110  109  114  112  106   108 #>  [4918,]   94   97  102  105  111  110  115  113  107   109 #>  [4919,]   93   97  102  105  111  110  115  113  107   109 #>  [4920,]   94   97  101  104  110  109  114  112  106   108 #>  [4921,]   94   97  102  105  111  110  115  113  107   109 #>  [4922,]   93   97  101  104  110  109  114  112  106   108 #>  [4923,]   93   97  102  105  111  110  115  113  107   109 #>  [4924,]   94   97  101  104  110  109  114  112  106   108 #>  [4925,]   93   97  101  104  110  109  114  112  106   108 #>  [4926,]   93   97  102  105  111  110  115  113  107   109 #>  [4927,]   94   97  102  105  111  110  115  113  107   109 #>  [4928,]   94   97  102  105  111  110  115  113  107   109 #>  [4929,]   94   97  102  105  111  110  115  113  107   109 #>  [4930,]   93   97  102  105  111  110  115  113  107   109 #>  [4931,]   93   97  102  105  111  110  115  113  107   109 #>  [4932,]   93   97  102  105  111  110  115  113  107   109 #>  [4933,]   94   97  102  105  111  110  115  113  107   109 #>  [4934,]   93   97  102  105  111  110  115  113  107   109 #>  [4935,]   93   97  102  105  111  110  115  113  107   109 #>  [4936,]   94   97  102  105  111  110  115  113  107   109 #>  [4937,]   93   97  102  105  111  110  115  113  107   109 #>  [4938,]   94   97  102  105  111  110  115  113  107   109 #>  [4939,]   94   97  101  104  110  109  114  112  106   108 #>  [4940,]   93   97  101  104  110  109  114  112  106   108 #>  [4941,]   94   97  102  105  111  110  115  113  107   109 #>  [4942,]   94   97  102  105  111  110  115  113  107   109 #>  [4943,]   93   97  101  104  110  109  114  112  106   108 #>  [4944,]   93   97  101  104  110  109  114  112  106   108 #>  [4945,]   93   97  101  104  110  109  114  112  106   108 #>  [4946,]   93   97  101  104  110  109  114  112  106   108 #>  [4947,]   93   97  101  104  110  109  114  112  106   108 #>  [4948,]   93   97  102  105  111  110  115  113  107   109 #>  [4949,]   93   97  101  104  110  109  114  112  106   108 #>  [4950,]   93   97  101  104  110  109  114  112  106   108 #>  [4951,]   94   97  102  105  111  110  115  113  107   109 #>  [4952,]   93   97  102  105  111  110  115  113  107   109 #>  [4953,]   94   97  101  104  110  109  114  112  106   108 #>  [4954,]   94   97  101  104  110  109  114  112  106   108 #>  [4955,]   93   97  101  104  110  109  114  112  106   108 #>  [4956,]   94   97  101  104  110  109  114  112  106   108 #>  [4957,]   93   97  102  105  111  110  115  113  107   109 #>  [4958,]   94   97  102  105  111  110  115  113  107   109 #>  [4959,]   93   97  101  104  110  109  114  112  106   108 #>  [4960,]   93   97  102  105  111  110  115  113  107   109 #>  [4961,]   94   97  102  105  111  110  115  113  107   109 #>  [4962,]   94   97  102  105  111  110  115  113  107   109 #>  [4963,]   93   97  101  104  110  109  114  112  106   108 #>  [4964,]   94   97  102  105  111  110  115  113  107   109 #>  [4965,]   94   97  101  104  110  109  114  112  106   108 #>  [4966,]   94   97  101  104  110  109  114  112  106   108 #>  [4967,]   93   97  102  105  111  110  115  113  107   109 #>  [4968,]   93   97  102  105  111  110  115  113  107   109 #>  [4969,]   93   97  102  105  111  110  115  113  107   109 #>  [4970,]   94   97  101  104  110  109  114  112  106   108 #>  [4971,]   93   97  102  105  111  110  115  113  107   109 #>  [4972,]   93   97  101  104  110  109  114  112  106   108 #>  [4973,]   93   97  102  105  111  110  115  113  107   109 #>  [4974,]   93   97  102  105  111  110  115  113  107   109 #>  [4975,]   93   97  102  105  111  110  115  113  107   109 #>  [4976,]   93   97  102  105  111  110  115  113  107   109 #>  [4977,]   94   97  101  104  110  109  114  112  106   108 #>  [4978,]   93   97  101  104  110  109  114  112  106   108 #>  [4979,]   94   97  101  104  110  109  114  112  106   108 #>  [4980,]   93   97  102  105  111  110  115  113  107   109 #>  [4981,]   93   97  102  105  111  110  115  113  107   109 #>  [4982,]   94   97  102  105  111  110  115  113  107   109 #>  [4983,]   94   97  102  105  111  110  115  113  107   109 #>  [4984,]   94   97  101  104  110  109  114  112  106   108 #>  [4985,]   94   97  102  105  111  110  115  113  107   109 #>  [4986,]   93   97  101  104  110  109  114  112  106   108 #>  [4987,]   94   97  102  105  111  110  115  113  107   109 #>  [4988,]   93   97  102  105  111  110  115  113  107   109 #>  [4989,]   94   97  101  104  110  109  114  112  106   108 #>  [4990,]   94   97  101  104  110  109  114  112  106   108 #>  [4991,]   94   97  102  105  111  110  115  113  107   109 #>  [4992,]   93   97  102  105  111  110  115  113  107   109 #>  [4993,]   94   97  102  105  111  110  115  113  107   109 #>  [4994,]   94   97  101  104  110  109  114  112  106   108 #>  [4995,]   93   97  102  105  111  110  115  113  107   109 #>  [4996,]   93   97  102  105  111  110  115  113  107   109 #>  [4997,]   93   97  102  105  111  110  115  113  107   109 #>  [4998,]   93   97  101  104  110  109  114  112  106   108 #>  [4999,]   94   97  102  105  111  110  115  113  107   109 #>  [5000,]   94   97  101  104  110  109  114  112  106   108 #>  [5001,]   96   99  104  107  113  112  117  115  109   111 #>  [5002,]   96   99  104  107  113  112  117  115  109   111 #>  [5003,]   96   99  104  107  113  112  117  115  109   111 #>  [5004,]   95   98  103  106  112  111  116  114  108   110 #>  [5005,]   96   99  104  107  113  112  117  115  109   111 #>  [5006,]   96   99  104  107  113  112  117  115  109   111 #>  [5007,]   96   99  104  107  113  112  117  115  109   111 #>  [5008,]   95   98  103  106  112  111  116  114  108   110 #>  [5009,]   95   98  103  106  112  111  116  114  108   110 #>  [5010,]   95   98  103  106  112  111  116  114  108   110 #>  [5011,]   96   99  104  107  113  112  117  115  109   111 #>  [5012,]   96   99  104  107  113  112  117  115  109   111 #>  [5013,]   96   99  104  107  113  112  117  115  109   111 #>  [5014,]   96   99  104  107  113  112  117  115  109   111 #>  [5015,]   96   99  104  107  113  112  117  115  109   111 #>  [5016,]   96   99  104  107  113  112  117  115  109   111 #>  [5017,]   96   99  104  107  113  112  117  115  109   111 #>  [5018,]   96   99  104  107  113  112  117  115  109   111 #>  [5019,]   96   99  104  107  113  112  117  115  109   111 #>  [5020,]   96   99  104  107  113  112  117  115  109   111 #>  [5021,]   96   99  104  107  113  112  117  115  109   111 #>  [5022,]   96   99  104  107  113  112  117  115  109   111 #>  [5023,]   96   99  104  107  113  112  117  115  109   111 #>  [5024,]   96   99  104  107  113  112  117  115  109   111 #>  [5025,]   96   99  104  107  113  112  117  115  109   111 #>  [5026,]   96   99  104  107  113  112  117  115  109   111 #>  [5027,]   96   99  104  107  113  112  117  115  109   111 #>  [5028,]   96   99  104  107  113  112  117  115  109   111 #>  [5029,]   96   99  104  107  113  112  117  115  109   111 #>  [5030,]   96   99  104  107  113  112  117  115  109   111 #>  [5031,]   96   99  104  107  113  112  117  115  109   111 #>  [5032,]   96   99  104  107  113  112  117  115  109   111 #>  [5033,]   96   99  104  107  113  112  117  115  109   111 #>  [5034,]   96   99  104  107  113  112  117  115  109   111 #>  [5035,]   96   99  104  107  113  112  117  115  109   111 #>  [5036,]   96   99  104  107  113  112  117  115  109   111 #>  [5037,]   96   99  104  107  113  112  117  115  109   111 #>  [5038,]   96   99  104  107  113  112  117  115  109   111 #>  [5039,]   96   99  104  107  113  112  117  115  109   111 #>  [5040,]   96   99  104  107  113  112  117  115  109   111 #>  [5041,]   96   99  104  107  113  112  117  115  109   111 #>  [5042,]   96   99  104  107  113  112  117  115  109   111 #>  [5043,]   95   98  103  106  112  111  116  114  108   110 #>  [5044,]   96   99  104  107  113  112  117  115  109   111 #>  [5045,]   96   99  104  107  113  112  117  115  109   111 #>  [5046,]   96   99  104  107  113  112  117  115  109   111 #>  [5047,]   96   99  104  107  113  112  117  115  109   111 #>  [5048,]   96   99  104  107  113  112  117  115  109   111 #>  [5049,]   96   99  104  107  113  112  117  115  109   111 #>  [5050,]   96   99  104  107  113  112  117  115  109   111 #>  [5051,]   95   98  103  106  112  111  116  114  108   110 #>  [5052,]   96   99  104  107  113  112  117  115  109   111 #>  [5053,]   96   99  104  107  113  112  117  115  109   111 #>  [5054,]   96   99  104  107  113  112  117  115  109   111 #>  [5055,]   96   99  104  107  113  112  117  115  109   111 #>  [5056,]   96   99  104  107  113  112  117  115  109   111 #>  [5057,]   96   99  104  107  113  112  117  115  109   111 #>  [5058,]   96   99  104  107  113  112  117  115  109   111 #>  [5059,]   96   99  104  107  113  112  117  115  109   111 #>  [5060,]   95   98  103  106  112  111  116  114  108   110 #>  [5061,]   96   99  104  107  113  112  117  115  109   111 #>  [5062,]   96   99  104  107  113  112  117  115  109   111 #>  [5063,]   96   99  104  107  113  112  117  115  109   111 #>  [5064,]   96   99  104  107  113  112  117  115  109   111 #>  [5065,]   96   99  104  107  113  112  117  115  109   111 #>  [5066,]   96   99  104  107  113  112  117  115  109   111 #>  [5067,]   95   98  103  106  112  111  116  114  108   110 #>  [5068,]   96   99  104  107  113  112  117  115  109   111 #>  [5069,]   96   99  104  107  113  112  117  115  109   111 #>  [5070,]   96   99  104  107  113  112  117  115  109   111 #>  [5071,]   96   99  104  107  113  112  117  115  109   111 #>  [5072,]   96   99  104  107  113  112  117  115  109   111 #>  [5073,]   96   99  104  107  113  112  117  115  109   111 #>  [5074,]   96   99  104  107  113  112  117  115  109   111 #>  [5075,]   96   99  104  107  113  112  117  115  109   111 #>  [5076,]   96   99  104  107  113  112  117  115  109   111 #>  [5077,]   96   99  104  107  113  112  117  115  109   111 #>  [5078,]   96   99  104  107  113  112  117  115  109   111 #>  [5079,]   96   99  104  107  113  112  117  115  109   111 #>  [5080,]   96   99  104  107  113  112  117  115  109   111 #>  [5081,]   96   99  104  107  113  112  117  115  109   111 #>  [5082,]   96   99  104  107  113  112  117  115  109   111 #>  [5083,]   96   99  104  107  113  112  117  115  109   111 #>  [5084,]   96   99  104  107  113  112  117  115  109   111 #>  [5085,]   95   98  103  106  112  111  116  114  108   110 #>  [5086,]   96   99  104  107  113  112  117  115  109   111 #>  [5087,]   96   99  104  107  113  112  117  115  109   111 #>  [5088,]   96   99  104  107  113  112  117  115  109   111 #>  [5089,]   96   99  104  107  113  112  117  115  109   111 #>  [5090,]   96   99  104  107  113  112  117  115  109   111 #>  [5091,]   95   98  103  106  112  111  116  114  108   110 #>  [5092,]   96   99  104  107  113  112  117  115  109   111 #>  [5093,]   96   99  104  107  113  112  117  115  109   111 #>  [5094,]   96   99  104  107  113  112  117  115  109   111 #>  [5095,]   95   98  103  106  112  111  116  114  108   110 #>  [5096,]   96   99  104  107  113  112  117  115  109   111 #>  [5097,]   96   99  104  107  113  112  117  115  109   111 #>  [5098,]   96   99  104  107  113  112  117  115  109   111 #>  [5099,]   96   99  104  107  113  112  117  115  109   111 #>  [5100,]   96   99  104  107  113  112  117  115  109   111 #>  [5101,]   98  101  106  109  115  114  118  116  110   112 #>  [5102,]   97  100  105  108  114  113  120  117  111   113 #>  [5103,]   97  100  105  108  114  113  120  117  111   113 #>  [5104,]   97  100  105  108  114  113  119  117  111   113 #>  [5105,]   97  100  105  108  114  113  120  117  111   113 #>  [5106,]   97  100  105  108  114  113  120  117  111   113 #>  [5107,]   97  100  105  108  114  113  120  117  111   113 #>  [5108,]   97  100  105  108  114  113  119  117  111   113 #>  [5109,]   97  100  105  108  114  113  119  117  111   113 #>  [5110,]   97  100  105  108  114  113  120  117  111   113 #>  [5111,]   97  100  105  108  114  113  119  117  111   113 #>  [5112,]   97  100  105  108  114  113  120  117  111   113 #>  [5113,]   97  100  105  108  114  113  119  117  111   113 #>  [5114,]   98  101  106  109  115  114  118  116  110   112 #>  [5115,]   98  101  106  109  115  114  118  116  110   112 #>  [5116,]   98  101  106  109  115  114  118  116  110   112 #>  [5117,]   97  100  105  108  114  113  119  117  111   113 #>  [5118,]   97  100  105  108  114  113  120  117  111   113 #>  [5119,]   97  100  105  108  114  113  120  117  111   113 #>  [5120,]   97  100  105  108  114  113  120  117  111   113 #>  [5121,]   97  100  105  108  114  113  120  117  111   113 #>  [5122,]   97  100  105  108  114  113  119  117  111   113 #>  [5123,]   97  100  105  108  114  113  120  117  111   113 #>  [5124,]   97  100  105  108  114  113  120  117  111   113 #>  [5125,]   97  100  105  108  114  113  120  117  111   113 #>  [5126,]   97  100  105  108  114  113  120  117  111   113 #>  [5127,]   97  100  105  108  114  113  119  117  111   113 #>  [5128,]   97  100  105  108  114  113  120  117  111   113 #>  [5129,]   97  100  105  108  114  113  120  117  111   113 #>  [5130,]   97  100  105  108  114  113  120  117  111   113 #>  [5131,]   97  100  105  108  114  113  120  117  111   113 #>  [5132,]   97  100  105  108  114  113  120  117  111   113 #>  [5133,]   97  100  105  108  114  113  120  117  111   113 #>  [5134,]   97  100  105  108  114  113  120  117  111   113 #>  [5135,]   97  100  105  108  114  113  119  117  111   113 #>  [5136,]   97  100  105  108  114  113  120  117  111   113 #>  [5137,]   97  100  105  108  114  113  120  117  111   113 #>  [5138,]   97  100  105  108  114  113  120  117  111   113 #>  [5139,]   97  100  105  108  114  113  120  117  111   113 #>  [5140,]   97  100  105  108  114  113  120  117  111   113 #>  [5141,]   98  101  106  109  115  114  118  116  110   112 #>  [5142,]   97  100  105  108  114  113  120  117  111   113 #>  [5143,]   97  100  105  108  114  113  119  117  111   113 #>  [5144,]   98  101  106  109  115  114  118  116  110   112 #>  [5145,]   97  100  105  108  114  113  120  117  111   113 #>  [5146,]   97  100  105  108  114  113  120  117  111   113 #>  [5147,]   97  100  105  108  114  113  120  117  111   113 #>  [5148,]   97  100  105  108  114  113  120  117  111   113 #>  [5149,]   97  100  105  108  114  113  119  117  111   113 #>  [5150,]   98  101  106  109  115  114  118  116  110   112 #>  [5151,]   97  100  105  108  114  113  120  117  111   113 #>  [5152,]   97  100  105  108  114  113  119  117  111   113 #>  [5153,]   97  100  105  108  114  113  120  117  111   113 #>  [5154,]   97  100  105  108  114  113  120  117  111   113 #>  [5155,]   97  100  105  108  114  113  119  117  111   113 #>  [5156,]   97  100  105  108  114  113  120  117  111   113 #>  [5157,]   97  100  105  108  114  113  120  117  111   113 #>  [5158,]   97  100  105  108  114  113  119  117  111   113 #>  [5159,]   98  101  106  109  115  114  118  116  110   112 #>  [5160,]   97  100  105  108  114  113  120  117  111   113 #>  [5161,]   97  100  105  108  114  113  120  117  111   113 #>  [5162,]   97  100  105  108  114  113  120  117  111   113 #>  [5163,]   97  100  105  108  114  113  120  117  111   113 #>  [5164,]   97  100  105  108  114  113  120  117  111   113 #>  [5165,]   97  100  105  108  114  113  120  117  111   113 #>  [5166,]   97  100  105  108  114  113  119  117  111   113 #>  [5167,]   97  100  105  108  114  113  120  117  111   113 #>  [5168,]   97  100  105  108  114  113  120  117  111   113 #>  [5169,]   97  100  105  108  114  113  119  117  111   113 #>  [5170,]   97  100  105  108  114  113  120  117  111   113 #>  [5171,]   97  100  105  108  114  113  120  117  111   113 #>  [5172,]   97  100  105  108  114  113  120  117  111   113 #>  [5173,]   98  101  106  109  115  114  118  116  110   112 #>  [5174,]   97  100  105  108  114  113  120  117  111   113 #>  [5175,]   97  100  105  108  114  113  120  117  111   113 #>  [5176,]   97  100  105  108  114  113  120  117  111   113 #>  [5177,]   97  100  105  108  114  113  120  117  111   113 #>  [5178,]   97  100  105  108  114  113  120  117  111   113 #>  [5179,]   97  100  105  108  114  113  119  117  111   113 #>  [5180,]   97  100  105  108  114  113  119  117  111   113 #>  [5181,]   97  100  105  108  114  113  119  117  111   113 #>  [5182,]   97  100  105  108  114  113  119  117  111   113 #>  [5183,]   97  100  105  108  114  113  119  117  111   113 #>  [5184,]   97  100  105  108  114  113  120  117  111   113 #>  [5185,]   97  100  105  108  114  113  120  117  111   113 #>  [5186,]   97  100  105  108  114  113  120  117  111   113 #>  [5187,]   97  100  105  108  114  113  119  117  111   113 #>  [5188,]   97  100  105  108  114  113  119  117  111   113 #>  [5189,]   97  100  105  108  114  113  119  117  111   113 #>  [5190,]   97  100  105  108  114  113  119  117  111   113 #>  [5191,]   97  100  105  108  114  113  120  117  111   113 #>  [5192,]   97  100  105  108  114  113  119  117  111   113 #>  [5193,]   97  100  105  108  114  113  120  117  111   113 #>  [5194,]   97  100  105  108  114  113  120  117  111   113 #>  [5195,]   97  100  105  108  114  113  119  117  111   113 #>  [5196,]   97  100  105  108  114  113  120  117  111   113 #>  [5197,]   97  100  105  108  114  113  120  117  111   113 #>  [5198,]   97  100  105  108  114  113  120  117  111   113 #>  [5199,]   98  101  106  109  115  114  118  116  110   112 #>  [5200,]   97  100  105  108  114  113  120  117  111   113 #>  [5201,]  100  103  107  113  118  117  121  118  113   115 #>  [5202,]  100  103  107  113  118  117  121  118  112   114 #>  [5203,]   99  102  109  111  117  116  122  118  112   114 #>  [5204,]   99  102  108  110  116  115  122  118  113   115 #>  [5205,]   99  102  108  110  116  115  122  118  112   114 #>  [5206,]   99  102  109  111  117  116  122  118  112   114 #>  [5207,]   99  102  109  111  117  116  122  118  113   115 #>  [5208,]  100  103  107  112  118  117  121  118  112   114 #>  [5209,]   99  102  108  110  116  115  122  118  113   115 #>  [5210,]   99  102  108  110  116  115  122  118  113   115 #>  [5211,]   99  102  108  110  116  115  122  118  112   114 #>  [5212,]   99  102  109  111  117  116  122  118  112   114 #>  [5213,]  100  103  107  113  118  117  121  118  113   115 #>  [5214,]   99  102  108  110  116  115  122  118  113   115 #>  [5215,]  100  103  107  113  118  117  121  118  112   114 #>  [5216,]  100  103  107  113  118  117  121  118  113   115 #>  [5217,]   99  102  108  110  116  115  122  118  112   114 #>  [5218,]   99  102  109  111  117  116  122  118  112   114 #>  [5219,]  100  103  107  113  118  117  121  118  112   114 #>  [5220,]  100  103  107  113  118  117  121  118  113   115 #>  [5221,]   99  102  108  110  116  115  122  118  112   114 #>  [5222,]  100  103  107  113  118  117  121  118  113   115 #>  [5223,]   99  102  109  111  117  116  122  118  112   114 #>  [5224,]   99  102  108  110  116  115  122  118  113   115 #>  [5225,]   99  102  109  111  117  116  122  118  113   115 #>  [5226,]  100  103  107  113  118  117  121  118  112   114 #>  [5227,]  100  103  107  113  118  117  121  118  112   114 #>  [5228,]   99  102  109  111  117  116  122  118  113   115 #>  [5229,]  100  103  107  113  118  117  121  118  112   114 #>  [5230,]  100  103  107  113  118  117  121  118  112   114 #>  [5231,]   99  102  109  111  117  116  122  118  112   114 #>  [5232,]   99  102  109  111  117  116  122  118  112   114 #>  [5233,]  100  103  107  113  118  117  121  118  112   114 #>  [5234,]   99  102  109  111  117  116  122  118  112   114 #>  [5235,]   99  102  108  110  116  115  122  118  112   114 #>  [5236,]  100  103  107  113  118  117  121  118  113   115 #>  [5237,]  100  103  107  113  118  117  121  118  112   114 #>  [5238,]  100  103  107  113  118  117  121  118  112   114 #>  [5239,]   99  102  108  110  116  115  122  118  113   115 #>  [5240,]   99  102  109  111  117  116  122  118  112   114 #>  [5241,]  100  103  107  113  118  117  121  118  112   114 #>  [5242,]   99  102  109  111  117  116  122  118  112   114 #>  [5243,]  100  103  107  113  118  117  121  118  112   114 #>  [5244,]  100  103  107  113  118  117  121  118  112   114 #>  [5245,]   99  102  108  110  116  115  122  118  112   114 #>  [5246,]  100  103  107  113  118  117  121  118  112   114 #>  [5247,]   99  102  108  110  116  115  122  118  112   114 #>  [5248,]   99  102  109  111  117  116  122  118  112   114 #>  [5249,]   99  102  108  110  116  115  122  118  112   114 #>  [5250,]  100  103  107  113  118  117  121  118  113   115 #>  [5251,]  100  103  107  113  118  117  121  118  112   114 #>  [5252,]   99  102  108  110  116  115  122  118  113   115 #>  [5253,]  100  103  107  113  118  117  121  118  112   114 #>  [5254,]   99  102  108  110  116  115  122  118  113   115 #>  [5255,]  100  103  107  113  118  117  121  118  113   115 #>  [5256,]  100  103  107  113  118  117  121  118  112   114 #>  [5257,]   99  102  109  111  117  116  122  118  113   115 #>  [5258,]  100  103  107  113  118  117  121  118  113   115 #>  [5259,]  100  103  107  112  118  117  121  118  113   115 #>  [5260,]  100  103  107  112  118  117  121  118  112   114 #>  [5261,]  100  103  107  113  118  117  121  118  112   114 #>  [5262,]   99  102  108  110  116  115  122  118  112   114 #>  [5263,]  100  103  107  113  118  117  121  118  112   114 #>  [5264,]  100  103  107  113  118  117  121  118  112   114 #>  [5265,]   99  102  109  111  117  116  122  118  112   114 #>  [5266,]  100  103  107  113  118  117  121  118  112   114 #>  [5267,]   99  102  108  110  116  115  122  118  113   115 #>  [5268,]  100  103  107  112  118  117  121  118  112   114 #>  [5269,]  100  103  107  113  118  117  121  118  112   114 #>  [5270,]   99  102  109  111  117  116  122  118  112   114 #>  [5271,]  100  103  107  113  118  117  121  118  112   114 #>  [5272,]   99  102  108  110  116  115  122  118  113   115 #>  [5273,]   99  102  109  111  117  116  122  118  113   115 #>  [5274,]   99  102  108  110  116  115  122  118  112   114 #>  [5275,]  100  103  107  113  118  117  121  118  112   114 #>  [5276,]   99  102  108  110  116  115  122  118  113   115 #>  [5277,]  100  103  107  113  118  117  121  118  112   114 #>  [5278,]  100  103  107  113  118  117  121  118  112   114 #>  [5279,]   99  102  108  110  116  115  122  118  112   114 #>  [5280,]  100  103  107  112  118  117  121  118  112   114 #>  [5281,]  100  103  107  113  118  117  121  118  112   114 #>  [5282,]   99  102  108  110  116  115  122  118  112   114 #>  [5283,]  100  103  107  113  118  117  121  118  112   114 #>  [5284,]  100  103  107  113  118  117  121  118  112   114 #>  [5285,]  100  103  107  113  118  117  121  118  113   115 #>  [5286,]   99  102  109  111  117  116  122  118  113   115 #>  [5287,]  100  103  107  113  118  117  121  118  112   114 #>  [5288,]   99  102  108  110  116  115  122  118  112   114 #>  [5289,]   99  102  108  110  116  115  122  118  112   114 #>  [5290,]  100  103  107  113  118  117  121  118  113   115 #>  [5291,]   99  102  108  110  116  115  122  118  113   115 #>  [5292,]   99  102  108  110  116  115  122  118  112   114 #>  [5293,]  100  103  107  113  118  117  121  118  112   114 #>  [5294,]   99  102  108  110  116  115  122  118  112   114 #>  [5295,]  100  103  107  113  118  117  121  118  112   114 #>  [5296,]  100  103  107  112  118  117  121  118  112   114 #>  [5297,]  100  103  107  112  118  117  121  118  112   114 #>  [5298,]   99  102  109  111  117  116  122  118  112   114 #>  [5299,]   99  102  108  110  116  115  122  118  112   114 #>  [5300,]  100  103  107  113  118  117  121  118  112   114 #>  [5301,]  102  104  110  114  120  119  124  122  117   119 #>  [5302,]  102  104  110  114  121  120  125  120  115   117 #>  [5303,]  101  105  111  115  119  118  123  119  114   116 #>  [5304,]  102  104  110  114  120  119  124  121  116   118 #>  [5305,]  102  104  110  114  121  120  125  120  115   117 #>  [5306,]  102  104  110  114  120  119  124  122  117   119 #>  [5307,]  102  104  110  114  121  120  125  120  115   117 #>  [5308,]  102  104  110  114  120  119  124  121  116   118 #>  [5309,]  102  104  110  114  121  120  125  120  115   117 #>  [5310,]  101  106  111  115  119  118  123  119  114   116 #>  [5311,]  101  106  111  115  119  118  123  119  114   116 #>  [5312,]  102  104  110  114  121  120  125  120  115   117 #>  [5313,]  102  104  110  114  121  120  125  120  115   117 #>  [5314,]  101  106  111  115  119  118  123  119  114   116 #>  [5315,]  102  104  110  114  120  119  124  122  117   119 #>  [5316,]  102  104  110  114  120  119  124  122  117   119 #>  [5317,]  102  104  110  114  121  120  125  120  115   117 #>  [5318,]  102  104  110  114  121  120  125  120  115   117 #>  [5319,]  102  104  110  114  120  119  124  121  116   118 #>  [5320,]  102  104  110  114  121  120  125  120  115   117 #>  [5321,]  101  105  111  115  119  118  123  119  114   116 #>  [5322,]  102  104  110  114  121  120  125  120  115   117 #>  [5323,]  102  104  110  114  121  120  125  120  115   117 #>  [5324,]  102  104  110  114  121  120  125  120  115   117 #>  [5325,]  102  104  110  114  121  120  125  120  115   117 #>  [5326,]  102  104  110  114  120  119  124  122  117   119 #>  [5327,]  102  104  110  114  121  120  125  120  115   117 #>  [5328,]  101  106  111  115  119  118  123  119  114   116 #>  [5329,]  102  104  110  114  121  120  125  120  115   117 #>  [5330,]  102  104  110  114  121  120  125  120  115   117 #>  [5331,]  101  105  111  115  119  118  123  119  114   116 #>  [5332,]  101  106  111  115  119  118  123  119  114   116 #>  [5333,]  102  104  110  114  121  120  125  120  115   117 #>  [5334,]  101  105  111  115  119  118  123  119  114   116 #>  [5335,]  102  104  110  114  120  119  124  122  117   119 #>  [5336,]  102  104  110  114  121  120  125  120  115   117 #>  [5337,]  102  104  110  114  120  119  124  121  116   118 #>  [5338,]  102  104  110  114  120  119  124  121  116   118 #>  [5339,]  102  104  110  114  121  120  125  120  115   117 #>  [5340,]  101  105  111  115  119  118  123  119  114   116 #>  [5341,]  102  104  110  114  121  120  125  120  115   117 #>  [5342,]  102  104  110  114  120  119  124  121  116   118 #>  [5343,]  102  104  110  114  120  119  124  121  116   118 #>  [5344,]  102  104  110  114  121  120  125  120  115   117 #>  [5345,]  102  104  110  114  120  119  124  121  116   118 #>  [5346,]  102  104  110  114  120  119  124  121  116   118 #>  [5347,]  102  104  110  114  121  120  125  120  115   117 #>  [5348,]  101  106  111  115  119  118  123  119  114   116 #>  [5349,]  102  104  110  114  120  119  124  121  116   118 #>  [5350,]  102  104  110  114  121  120  125  120  115   117 #>  [5351,]  102  104  110  114  121  120  125  120  115   117 #>  [5352,]  102  104  110  114  120  119  124  121  116   118 #>  [5353,]  102  104  110  114  121  120  125  120  115   117 #>  [5354,]  102  104  110  114  121  120  125  120  115   117 #>  [5355,]  102  104  110  114  120  119  124  121  116   118 #>  [5356,]  102  104  110  114  120  119  124  121  116   118 #>  [5357,]  102  104  110  114  120  119  124  121  116   118 #>  [5358,]  102  104  110  114  121  120  125  120  115   117 #>  [5359,]  102  104  110  114  120  119  124  122  117   119 #>  [5360,]  102  104  110  114  121  120  125  120  115   117 #>  [5361,]  102  104  110  114  121  120  125  120  115   117 #>  [5362,]  102  104  110  114  120  119  124  121  116   118 #>  [5363,]  102  104  110  114  121  120  125  120  115   117 #>  [5364,]  102  104  110  114  120  119  124  121  116   118 #>  [5365,]  102  104  110  114  120  119  124  121  116   118 #>  [5366,]  102  104  110  114  121  120  125  120  115   117 #>  [5367,]  102  104  110  114  120  119  124  121  116   118 #>  [5368,]  102  104  110  114  120  119  124  122  117   119 #>  [5369,]  102  104  110  114  120  119  124  121  116   118 #>  [5370,]  101  105  111  115  119  118  123  119  114   116 #>  [5371,]  102  104  110  114  121  120  125  120  115   117 #>  [5372,]  102  104  110  114  120  119  124  121  116   118 #>  [5373,]  102  104  110  114  120  119  124  122  117   119 #>  [5374,]  101  106  111  115  119  118  123  119  114   116 #>  [5375,]  102  104  110  114  121  120  125  120  115   117 #>  [5376,]  102  104  110  114  121  120  125  120  115   117 #>  [5377,]  102  104  110  114  120  119  124  122  117   119 #>  [5378,]  102  104  110  114  121  120  125  120  115   117 #>  [5379,]  102  104  110  114  120  119  124  122  117   119 #>  [5380,]  102  104  110  114  121  120  125  120  115   117 #>  [5381,]  102  104  110  114  121  120  125  120  115   117 #>  [5382,]  101  106  111  115  119  118  123  119  114   116 #>  [5383,]  102  104  110  114  121  120  125  120  115   117 #>  [5384,]  102  104  110  114  121  120  125  120  115   117 #>  [5385,]  102  104  110  114  120  119  124  121  116   118 #>  [5386,]  102  104  110  114  121  120  125  120  115   117 #>  [5387,]  102  104  110  114  121  120  125  120  115   117 #>  [5388,]  102  104  110  114  121  120  125  120  115   117 #>  [5389,]  102  104  110  114  120  119  124  121  116   118 #>  [5390,]  102  104  110  114  121  120  125  120  115   117 #>  [5391,]  102  104  110  114  120  119  124  121  116   118 #>  [5392,]  102  104  110  114  121  120  125  120  115   117 #>  [5393,]  102  104  110  114  121  120  125  120  115   117 #>  [5394,]  102  104  110  114  120  119  124  122  117   119 #>  [5395,]  102  104  110  114  121  120  125  120  115   117 #>  [5396,]  102  104  110  114  120  119  124  122  117   119 #>  [5397,]  102  104  110  114  120  119  124  121  116   118 #>  [5398,]  101  105  111  115  119  118  123  119  114   116 #>  [5399,]  102  104  110  114  121  120  125  120  115   117 #>  [5400,]  102  104  110  114  120  119  124  121  116   118 #>  [5401,]  103  107  112  116  124  123  128  125  120   121 #>  [5402,]  103  107  112  116  123  122  127  124  119   121 #>  [5403,]  103  107  112  116  123  122  127  124  119   121 #>  [5404,]  104  108  113  117  122  121  126  123  118   120 #>  [5405,]  103  107  112  116  124  123  128  125  120   121 #>  [5406,]  103  107  112  116  123  122  127  124  119   121 #>  [5407,]  104  108  113  117  122  121  126  123  118   120 #>  [5408,]  103  107  112  116  123  122  127  124  119   121 #>  [5409,]  104  108  113  117  122  121  126  123  118   120 #>  [5410,]  104  108  113  117  122  121  126  123  118   120 #>  [5411,]  103  107  112  116  124  123  128  125  120   121 #>  [5412,]  103  107  112  116  123  122  127  124  119   121 #>  [5413,]  103  107  112  116  123  122  127  124  119   121 #>  [5414,]  104  108  113  117  122  121  126  123  118   120 #>  [5415,]  103  107  112  116  124  123  128  125  120   121 #>  [5416,]  104  108  113  117  122  121  126  123  118   120 #>  [5417,]  103  107  112  116  124  123  128  125  120   121 #>  [5418,]  103  107  112  116  124  123  128  125  120   121 #>  [5419,]  103  107  112  116  123  122  127  124  119   121 #>  [5420,]  104  108  113  117  122  121  126  123  118   120 #>  [5421,]  103  107  112  116  123  122  127  124  119   121 #>  [5422,]  104  108  113  117  122  121  126  123  118   120 #>  [5423,]  103  107  112  116  123  122  127  124  119   121 #>  [5424,]  104  108  113  117  122  121  126  123  118   120 #>  [5425,]  104  108  113  117  122  121  126  123  118   120 #>  [5426,]  103  107  112  116  124  123  128  125  120   121 #>  [5427,]  103  107  112  116  124  123  128  125  120   121 #>  [5428,]  104  108  113  117  122  121  126  123  118   120 #>  [5429,]  103  107  112  116  123  122  127  124  119   121 #>  [5430,]  103  107  112  116  123  122  127  124  119   121 #>  [5431,]  103  107  112  116  124  123  128  125  120   121 #>  [5432,]  103  107  112  116  124  123  128  125  120   121 #>  [5433,]  103  107  112  116  123  122  127  124  119   121 #>  [5434,]  103  107  112  116  123  122  127  124  119   121 #>  [5435,]  103  107  112  116  123  122  127  124  119   121 #>  [5436,]  104  108  113  117  122  121  126  123  118   120 #>  [5437,]  103  107  112  116  123  122  127  124  119   121 #>  [5438,]  103  107  112  116  123  122  127  124  119   121 #>  [5439,]  104  108  113  117  122  121  126  123  118   120 #>  [5440,]  103  107  112  116  123  122  127  124  119   121 #>  [5441,]  103  107  112  116  123  122  127  124  119   121 #>  [5442,]  103  107  112  116  123  122  127  124  119   121 #>  [5443,]  103  107  112  116  124  123  128  125  120   121 #>  [5444,]  103  107  112  116  123  122  127  124  119   121 #>  [5445,]  103  107  112  116  123  122  127  124  119   121 #>  [5446,]  103  107  112  116  123  122  127  124  119   121 #>  [5447,]  103  107  112  116  124  123  128  125  120   121 #>  [5448,]  103  107  112  116  123  122  127  124  119   121 #>  [5449,]  103  107  112  116  123  122  127  124  119   121 #>  [5450,]  104  108  113  117  122  121  126  123  118   120 #>  [5451,]  103  107  112  116  123  122  127  124  119   121 #>  [5452,]  104  108  113  117  122  121  126  123  118   120 #>  [5453,]  103  107  112  116  123  122  127  124  119   121 #>  [5454,]  104  108  113  117  122  121  126  123  118   120 #>  [5455,]  104  108  113  117  122  121  126  123  118   120 #>  [5456,]  103  107  112  116  123  122  127  124  119   121 #>  [5457,]  104  108  113  117  122  121  126  123  118   120 #>  [5458,]  103  107  112  116  124  123  128  125  120   121 #>  [5459,]  104  108  113  117  122  121  126  123  118   120 #>  [5460,]  103  107  112  116  123  122  127  124  119   121 #>  [5461,]  103  107  112  116  124  123  128  125  120   121 #>  [5462,]  103  107  112  116  123  122  127  124  119   121 #>  [5463,]  103  107  112  116  123  122  127  124  119   121 #>  [5464,]  103  107  112  116  123  122  127  124  119   121 #>  [5465,]  103  107  112  116  123  122  127  124  119   121 #>  [5466,]  103  107  112  116  124  123  128  125  120   121 #>  [5467,]  104  108  113  117  122  121  126  123  118   120 #>  [5468,]  103  107  112  116  123  122  127  124  119   121 #>  [5469,]  103  107  112  116  123  122  127  124  119   121 #>  [5470,]  103  107  112  116  124  123  128  125  120   121 #>  [5471,]  103  107  112  116  124  123  128  125  120   121 #>  [5472,]  103  107  112  116  123  122  127  124  119   121 #>  [5473,]  104  108  113  117  122  121  126  123  118   120 #>  [5474,]  103  107  112  116  123  122  127  124  119   121 #>  [5475,]  103  107  112  116  124  123  128  125  120   121 #>  [5476,]  104  108  113  117  122  121  126  123  118   120 #>  [5477,]  103  107  112  116  124  123  128  125  120   121 #>  [5478,]  103  107  112  116  123  122  127  124  119   121 #>  [5479,]  103  107  112  116  124  123  128  125  120   121 #>  [5480,]  103  107  112  116  123  122  127  124  119   121 #>  [5481,]  103  107  112  116  123  122  127  124  119   121 #>  [5482,]  103  107  112  116  123  122  127  124  119   121 #>  [5483,]  103  107  112  116  123  122  127  124  119   121 #>  [5484,]  103  107  112  116  123  122  127  124  119   121 #>  [5485,]  103  107  112  116  123  122  127  124  119   121 #>  [5486,]  104  108  113  117  122  121  126  123  118   120 #>  [5487,]  103  107  112  116  124  123  128  125  120   121 #>  [5488,]  103  107  112  116  123  122  127  124  119   121 #>  [5489,]  103  107  112  116  123  122  127  124  119   121 #>  [5490,]  104  108  113  117  122  121  126  123  118   120 #>  [5491,]  104  108  113  117  122  121  126  123  118   120 #>  [5492,]  103  107  112  116  123  122  127  124  119   121 #>  [5493,]  103  107  112  116  123  122  127  124  119   121 #>  [5494,]  103  107  112  116  123  122  127  124  119   121 #>  [5495,]  103  107  112  116  124  123  128  125  120   121 #>  [5496,]  103  107  112  116  123  122  127  124  119   121 #>  [5497,]  103  107  112  116  123  122  127  124  119   121 #>  [5498,]  103  107  112  116  123  122  127  124  119   121 #>  [5499,]  103  107  112  116  123  122  127  124  119   121 #>  [5500,]  103  107  112  116  124  123  128  125  120   121 #>  [5501,]  105  109  114  118  125  124  129  126  121   122 #>  [5502,]  106  110  115  119  126  125  130  127  122   123 #>  [5503,]  105  109  114  118  125  124  129  126  121   122 #>  [5504,]  105  109  114  118  125  124  129  126  121   122 #>  [5505,]  106  110  115  119  126  125  130  127  122   123 #>  [5506,]  105  109  114  118  125  124  129  126  121   122 #>  [5507,]  106  110  115  119  126  125  130  127  122   123 #>  [5508,]  105  109  114  118  125  124  129  126  121   122 #>  [5509,]  106  110  115  119  126  125  130  127  122   123 #>  [5510,]  106  110  115  119  126  125  130  127  122   123 #>  [5511,]  105  109  114  118  125  124  129  126  121   122 #>  [5512,]  106  110  115  119  126  125  130  127  122   123 #>  [5513,]  106  110  115  119  126  125  130  127  122   123 #>  [5514,]  105  109  114  118  125  124  129  126  121   122 #>  [5515,]  105  109  114  118  125  124  129  126  121   122 #>  [5516,]  105  109  114  118  125  124  129  126  121   122 #>  [5517,]  106  110  115  119  126  125  130  127  122   123 #>  [5518,]  106  110  115  119  126  125  130  127  122   123 #>  [5519,]  105  109  114  118  125  124  129  126  121   122 #>  [5520,]  106  110  115  119  126  125  130  127  122   123 #>  [5521,]  106  110  115  119  126  125  130  127  122   123 #>  [5522,]  106  110  115  119  126  125  130  127  122   123 #>  [5523,]  106  110  115  119  126  125  130  127  122   123 #>  [5524,]  106  110  115  119  126  125  130  127  122   123 #>  [5525,]  106  110  115  119  126  125  130  127  122   123 #>  [5526,]  105  109  114  118  125  124  129  126  121   122 #>  [5527,]  106  110  115  119  126  125  130  127  122   123 #>  [5528,]  105  109  114  118  125  124  129  126  121   122 #>  [5529,]  106  110  115  119  126  125  130  127  122   123 #>  [5530,]  106  110  115  119  126  125  130  127  122   123 #>  [5531,]  106  110  115  119  126  125  130  127  122   123 #>  [5532,]  106  110  115  119  126  125  130  127  122   123 #>  [5533,]  106  110  115  119  126  125  130  127  122   123 #>  [5534,]  105  109  114  118  125  124  129  126  121   122 #>  [5535,]  105  109  114  118  125  124  129  126  121   122 #>  [5536,]  106  110  115  119  126  125  130  127  122   123 #>  [5537,]  105  109  114  118  125  124  129  126  121   122 #>  [5538,]  105  109  114  118  125  124  129  126  121   122 #>  [5539,]  106  110  115  119  126  125  130  127  122   123 #>  [5540,]  106  110  115  119  126  125  130  127  122   123 #>  [5541,]  106  110  115  119  126  125  130  127  122   123 #>  [5542,]  105  109  114  118  125  124  129  126  121   122 #>  [5543,]  105  109  114  118  125  124  129  126  121   122 #>  [5544,]  106  110  115  119  126  125  130  127  122   123 #>  [5545,]  105  109  114  118  125  124  129  126  121   122 #>  [5546,]  105  109  114  118  125  124  129  126  121   122 #>  [5547,]  106  110  115  119  126  125  130  127  122   123 #>  [5548,]  106  110  115  119  126  125  130  127  122   123 #>  [5549,]  105  109  114  118  125  124  129  126  121   122 #>  [5550,]  106  110  115  119  126  125  130  127  122   123 #>  [5551,]  106  110  115  119  126  125  130  127  122   123 #>  [5552,]  105  109  114  118  125  124  129  126  121   122 #>  [5553,]  106  110  115  119  126  125  130  127  122   123 #>  [5554,]  106  110  115  119  126  125  130  127  122   123 #>  [5555,]  105  109  114  118  125  124  129  126  121   122 #>  [5556,]  105  109  114  118  125  124  129  126  121   122 #>  [5557,]  105  109  114  118  125  124  129  126  121   122 #>  [5558,]  106  110  115  119  126  125  130  127  122   123 #>  [5559,]  105  109  114  118  125  124  129  126  121   122 #>  [5560,]  106  110  115  119  126  125  130  127  122   123 #>  [5561,]  106  110  115  119  126  125  130  127  122   123 #>  [5562,]  105  109  114  118  125  124  129  126  121   122 #>  [5563,]  106  110  115  119  126  125  130  127  122   123 #>  [5564,]  105  109  114  118  125  124  129  126  121   122 #>  [5565,]  105  109  114  118  125  124  129  126  121   122 #>  [5566,]  106  110  115  119  126  125  130  127  122   123 #>  [5567,]  105  109  114  118  125  124  129  126  121   122 #>  [5568,]  105  109  114  118  125  124  129  126  121   122 #>  [5569,]  105  109  114  118  125  124  129  126  121   122 #>  [5570,]  106  110  115  119  126  125  130  127  122   123 #>  [5571,]  106  110  115  119  126  125  130  127  122   123 #>  [5572,]  105  109  114  118  125  124  129  126  121   122 #>  [5573,]  105  109  114  118  125  124  129  126  121   122 #>  [5574,]  106  110  115  119  126  125  130  127  122   123 #>  [5575,]  106  110  115  119  126  125  130  127  122   123 #>  [5576,]  106  110  115  119  126  125  130  127  122   123 #>  [5577,]  105  109  114  118  125  124  129  126  121   122 #>  [5578,]  106  110  115  119  126  125  130  127  122   123 #>  [5579,]  105  109  114  118  125  124  129  126  121   122 #>  [5580,]  106  110  115  119  126  125  130  127  122   123 #>  [5581,]  106  110  115  119  126  125  130  127  122   123 #>  [5582,]  105  109  114  118  125  124  129  126  121   122 #>  [5583,]  106  110  115  119  126  125  130  127  122   123 #>  [5584,]  106  110  115  119  126  125  130  127  122   123 #>  [5585,]  105  109  114  118  125  124  129  126  121   122 #>  [5586,]  106  110  115  119  126  125  130  127  122   123 #>  [5587,]  106  110  115  119  126  125  130  127  122   123 #>  [5588,]  106  110  115  119  126  125  130  127  122   123 #>  [5589,]  105  109  114  118  125  124  129  126  121   122 #>  [5590,]  106  110  115  119  126  125  130  127  122   123 #>  [5591,]  105  109  114  118  125  124  129  126  121   122 #>  [5592,]  106  110  115  119  126  125  130  127  122   123 #>  [5593,]  106  110  115  119  126  125  130  127  122   123 #>  [5594,]  105  109  114  118  125  124  129  126  121   122 #>  [5595,]  106  110  115  119  126  125  130  127  122   123 #>  [5596,]  105  109  114  118  125  124  129  126  121   122 #>  [5597,]  105  109  114  118  125  124  129  126  121   122 #>  [5598,]  105  109  114  118  125  124  129  126  121   122 #>  [5599,]  106  110  115  119  126  125  130  127  122   123 #>  [5600,]  105  109  114  118  125  124  129  126  121   122 #>  [5601,]  107  111  116  120  127  128  132  129  124   125 #>  [5602,]  107  111  116  120  127  127  132  129  124   125 #>  [5603,]  108  112  117  121  128  126  131  128  123   124 #>  [5604,]  107  111  116  120  127  127  132  129  124   125 #>  [5605,]  107  111  116  120  127  128  132  129  124   125 #>  [5606,]  108  112  117  121  128  126  131  128  123   124 #>  [5607,]  107  111  116  120  127  127  132  129  124   125 #>  [5608,]  107  111  116  120  127  127  132  129  124   125 #>  [5609,]  107  111  116  120  127  127  132  129  124   125 #>  [5610,]  107  111  116  120  127  128  132  129  124   125 #>  [5611,]  107  111  116  120  127  128  132  129  124   125 #>  [5612,]  108  112  117  121  128  126  131  128  123   124 #>  [5613,]  107  111  116  120  127  127  132  129  124   125 #>  [5614,]  107  111  116  120  127  128  132  129  124   125 #>  [5615,]  107  111  116  120  127  128  132  129  124   125 #>  [5616,]  107  111  116  120  127  127  132  129  124   125 #>  [5617,]  107  111  116  120  127  128  132  129  124   125 #>  [5618,]  107  111  116  120  127  128  132  129  124   125 #>  [5619,]  108  112  117  121  128  126  131  128  123   124 #>  [5620,]  107  111  116  120  127  127  132  129  124   125 #>  [5621,]  107  111  116  120  127  127  132  129  124   125 #>  [5622,]  107  111  116  120  127  128  132  129  124   125 #>  [5623,]  107  111  116  120  127  127  132  129  124   125 #>  [5624,]  107  111  116  120  127  127  132  129  124   125 #>  [5625,]  108  112  117  121  128  126  131  128  123   124 #>  [5626,]  107  111  116  120  127  128  132  129  124   125 #>  [5627,]  107  111  116  120  127  128  132  129  124   125 #>  [5628,]  108  112  117  121  128  126  131  128  123   124 #>  [5629,]  107  111  116  120  127  127  132  129  124   125 #>  [5630,]  107  111  116  120  127  127  132  129  124   125 #>  [5631,]  107  111  116  120  127  128  132  129  124   125 #>  [5632,]  107  111  116  120  127  128  132  129  124   125 #>  [5633,]  108  112  117  121  128  126  131  128  123   124 #>  [5634,]  108  112  117  121  128  126  131  128  123   124 #>  [5635,]  107  111  116  120  127  127  132  129  124   125 #>  [5636,]  107  111  116  120  127  127  132  129  124   125 #>  [5637,]  107  111  116  120  127  127  132  129  124   125 #>  [5638,]  107  111  116  120  127  128  132  129  124   125 #>  [5639,]  107  111  116  120  127  127  132  129  124   125 #>  [5640,]  107  111  116  120  127  127  132  129  124   125 #>  [5641,]  107  111  116  120  127  127  132  129  124   125 #>  [5642,]  107  111  116  120  127  127  132  129  124   125 #>  [5643,]  107  111  116  120  127  128  132  129  124   125 #>  [5644,]  107  111  116  120  127  127  132  129  124   125 #>  [5645,]  107  111  116  120  127  127  132  129  124   125 #>  [5646,]  107  111  116  120  127  127  132  129  124   125 #>  [5647,]  107  111  116  120  127  128  132  129  124   125 #>  [5648,]  107  111  116  120  127  127  132  129  124   125 #>  [5649,]  107  111  116  120  127  127  132  129  124   125 #>  [5650,]  107  111  116  120  127  127  132  129  124   125 #>  [5651,]  107  111  116  120  127  127  132  129  124   125 #>  [5652,]  107  111  116  120  127  128  132  129  124   125 #>  [5653,]  107  111  116  120  127  127  132  129  124   125 #>  [5654,]  107  111  116  120  127  127  132  129  124   125 #>  [5655,]  107  111  116  120  127  127  132  129  124   125 #>  [5656,]  107  111  116  120  127  127  132  129  124   125 #>  [5657,]  107  111  116  120  127  127  132  129  124   125 #>  [5658,]  107  111  116  120  127  128  132  129  124   125 #>  [5659,]  107  111  116  120  127  128  132  129  124   125 #>  [5660,]  108  112  117  121  128  126  131  128  123   124 #>  [5661,]  107  111  116  120  127  128  132  129  124   125 #>  [5662,]  107  111  116  120  127  127  132  129  124   125 #>  [5663,]  107  111  116  120  127  127  132  129  124   125 #>  [5664,]  107  111  116  120  127  127  132  129  124   125 #>  [5665,]  108  112  117  121  128  126  131  128  123   124 #>  [5666,]  107  111  116  120  127  128  132  129  124   125 #>  [5667,]  107  111  116  120  127  127  132  129  124   125 #>  [5668,]  107  111  116  120  127  127  132  129  124   125 #>  [5669,]  107  111  116  120  127  127  132  129  124   125 #>  [5670,]  108  112  117  121  128  126  131  128  123   124 #>  [5671,]  107  111  116  120  127  128  132  129  124   125 #>  [5672,]  107  111  116  120  127  127  132  129  124   125 #>  [5673,]  108  112  117  121  128  126  131  128  123   124 #>  [5674,]  107  111  116  120  127  127  132  129  124   125 #>  [5675,]  107  111  116  120  127  128  132  129  124   125 #>  [5676,]  107  111  116  120  127  127  132  129  124   125 #>  [5677,]  107  111  116  120  127  128  132  129  124   125 #>  [5678,]  107  111  116  120  127  127  132  129  124   125 #>  [5679,]  107  111  116  120  127  128  132  129  124   125 #>  [5680,]  107  111  116  120  127  127  132  129  124   125 #>  [5681,]  107  111  116  120  127  127  132  129  124   125 #>  [5682,]  107  111  116  120  127  127  132  129  124   125 #>  [5683,]  107  111  116  120  127  127  132  129  124   125 #>  [5684,]  107  111  116  120  127  127  132  129  124   125 #>  [5685,]  107  111  116  120  127  127  132  129  124   125 #>  [5686,]  107  111  116  120  127  127  132  129  124   125 #>  [5687,]  107  111  116  120  127  128  132  129  124   125 #>  [5688,]  107  111  116  120  127  127  132  129  124   125 #>  [5689,]  107  111  116  120  127  127  132  129  124   125 #>  [5690,]  107  111  116  120  127  128  132  129  124   125 #>  [5691,]  107  111  116  120  127  128  132  129  124   125 #>  [5692,]  107  111  116  120  127  128  132  129  124   125 #>  [5693,]  108  112  117  121  128  126  131  128  123   124 #>  [5694,]  107  111  116  120  127  127  132  129  124   125 #>  [5695,]  107  111  116  120  127  128  132  129  124   125 #>  [5696,]  107  111  116  120  127  127  132  129  124   125 #>  [5697,]  108  112  117  121  128  126  131  128  123   124 #>  [5698,]  108  112  117  121  128  126  131  128  123   124 #>  [5699,]  107  111  116  120  127  127  132  129  124   125 #>  [5700,]  107  111  116  120  127  128  132  129  124   125 #>  [5701,]  110  114  119  123  131  131  135  132  126   126 #>  [5702,]  110  114  119  123  131  131  135  132  126   126 #>  [5703,]  110  114  119  123  130  130  134  131  126   126 #>  [5704,]  109  113  118  122  129  129  133  130  125   126 #>  [5705,]  110  114  119  123  130  130  134  131  126   126 #>  [5706,]  110  114  119  123  131  131  135  132  126   126 #>  [5707,]  110  114  119  123  130  130  134  131  126   126 #>  [5708,]  109  113  118  122  129  129  133  130  125   126 #>  [5709,]  109  113  118  122  129  129  133  130  125   126 #>  [5710,]  109  113  118  122  129  129  133  130  125   126 #>  [5711,]  110  114  119  123  130  130  134  131  126   126 #>  [5712,]  110  114  119  123  130  130  134  131  126   126 #>  [5713,]  110  114  119  123  131  131  135  132  126   126 #>  [5714,]  110  114  119  123  131  131  135  132  126   126 #>  [5715,]  110  114  119  123  131  131  135  132  126   126 #>  [5716,]  110  114  119  123  131  131  135  132  126   126 #>  [5717,]  110  114  119  123  131  131  135  132  126   126 #>  [5718,]  110  114  119  123  130  130  134  131  126   126 #>  [5719,]  110  114  119  123  130  130  134  131  126   126 #>  [5720,]  110  114  119  123  130  130  134  131  126   126 #>  [5721,]  110  114  119  123  131  131  135  132  126   126 #>  [5722,]  110  114  119  123  130  130  134  131  126   126 #>  [5723,]  110  114  119  123  130  130  134  131  126   126 #>  [5724,]  110  114  119  123  130  130  134  131  126   126 #>  [5725,]  110  114  119  123  130  130  134  131  126   126 #>  [5726,]  110  114  119  123  131  131  135  132  126   126 #>  [5727,]  110  114  119  123  130  130  134  131  126   126 #>  [5728,]  110  114  119  123  130  130  134  131  126   126 #>  [5729,]  110  114  119  123  131  131  135  132  126   126 #>  [5730,]  110  114  119  123  130  130  134  131  126   126 #>  [5731,]  110  114  119  123  130  130  134  131  126   126 #>  [5732,]  110  114  119  123  130  130  134  131  126   126 #>  [5733,]  110  114  119  123  131  131  135  132  126   126 #>  [5734,]  110  114  119  123  130  130  134  131  126   126 #>  [5735,]  110  114  119  123  131  131  135  132  126   126 #>  [5736,]  110  114  119  123  130  130  134  131  126   126 #>  [5737,]  110  114  119  123  130  130  134  131  126   126 #>  [5738,]  110  114  119  123  130  130  134  131  126   126 #>  [5739,]  110  114  119  123  130  130  134  131  126   126 #>  [5740,]  110  114  119  123  130  130  134  131  126   126 #>  [5741,]  110  114  119  123  131  131  135  132  126   126 #>  [5742,]  110  114  119  123  130  130  134  131  126   126 #>  [5743,]  109  113  118  122  129  129  133  130  125   126 #>  [5744,]  110  114  119  123  131  131  135  132  126   126 #>  [5745,]  110  114  119  123  130  130  134  131  126   126 #>  [5746,]  110  114  119  123  130  130  134  131  126   126 #>  [5747,]  110  114  119  123  130  130  134  131  126   126 #>  [5748,]  110  114  119  123  130  130  134  131  126   126 #>  [5749,]  110  114  119  123  130  130  134  131  126   126 #>  [5750,]  110  114  119  123  131  131  135  132  126   126 #>  [5751,]  109  113  118  122  129  129  133  130  125   126 #>  [5752,]  110  114  119  123  130  130  134  131  126   126 #>  [5753,]  110  114  119  123  130  130  134  131  126   126 #>  [5754,]  110  114  119  123  130  130  134  131  126   126 #>  [5755,]  110  114  119  123  130  130  134  131  126   126 #>  [5756,]  110  114  119  123  130  130  134  131  126   126 #>  [5757,]  110  114  119  123  130  130  134  131  126   126 #>  [5758,]  110  114  119  123  130  130  134  131  126   126 #>  [5759,]  110  114  119  123  131  131  135  132  126   126 #>  [5760,]  109  113  118  122  129  129  133  130  125   126 #>  [5761,]  110  114  119  123  131  131  135  132  126   126 #>  [5762,]  110  114  119  123  130  130  134  131  126   126 #>  [5763,]  110  114  119  123  130  130  134  131  126   126 #>  [5764,]  109  113  118  122  129  129  133  130  125   126 #>  [5765,]  110  114  119  123  130  130  134  131  126   126 #>  [5766,]  110  114  119  123  130  130  134  131  126   126 #>  [5767,]  109  113  118  122  129  129  133  130  125   126 #>  [5768,]  110  114  119  123  131  131  135  132  126   126 #>  [5769,]  110  114  119  123  130  130  134  131  126   126 #>  [5770,]  110  114  119  123  131  131  135  132  126   126 #>  [5771,]  110  114  119  123  131  131  135  132  126   126 #>  [5772,]  110  114  119  123  130  130  134  131  126   126 #>  [5773,]  110  114  119  123  131  131  135  132  126   126 #>  [5774,]  110  114  119  123  130  130  134  131  126   126 #>  [5775,]  110  114  119  123  130  130  134  131  126   126 #>  [5776,]  110  114  119  123  131  131  135  132  126   126 #>  [5777,]  110  114  119  123  131  131  135  132  126   126 #>  [5778,]  109  113  118  122  129  129  133  130  125   126 #>  [5779,]  110  114  119  123  131  131  135  132  126   126 #>  [5780,]  110  114  119  123  130  130  134  131  126   126 #>  [5781,]  110  114  119  123  131  131  135  132  126   126 #>  [5782,]  110  114  119  123  130  130  134  131  126   126 #>  [5783,]  110  114  119  123  131  131  135  132  126   126 #>  [5784,]  110  114  119  123  130  130  134  131  126   126 #>  [5785,]  109  113  118  122  129  129  133  130  125   126 #>  [5786,]  110  114  119  123  131  131  135  132  126   126 #>  [5787,]  110  114  119  123  130  130  134  131  126   126 #>  [5788,]  110  114  119  123  130  130  134  131  126   126 #>  [5789,]  109  113  118  122  129  129  133  130  125   126 #>  [5790,]  110  114  119  123  130  130  134  131  126   126 #>  [5791,]  109  113  118  122  129  129  133  130  125   126 #>  [5792,]  110  114  119  123  130  130  134  131  126   126 #>  [5793,]  110  114  119  123  131  131  135  132  126   126 #>  [5794,]  110  114  119  123  130  130  134  131  126   126 #>  [5795,]  109  113  118  122  129  129  133  130  125   126 #>  [5796,]  110  114  119  123  131  131  135  132  126   126 #>  [5797,]  110  114  119  123  130  130  134  131  126   126 #>  [5798,]  110  114  119  123  130  130  134  131  126   126 #>  [5799,]  110  114  119  123  131  131  135  132  126   126 #>  [5800,]  110  114  119  123  130  130  134  131  126   126 #>  [5801,]  112  116  121  125  133  133  137  134  128   128 #>  [5802,]  111  115  120  124  132  132  136  133  127   127 #>  [5803,]  111  115  120  124  132  132  136  133  127   127 #>  [5804,]  111  115  120  124  132  132  136  133  127   127 #>  [5805,]  112  116  121  125  133  133  137  134  128   128 #>  [5806,]  112  116  121  125  133  133  137  134  128   128 #>  [5807,]  111  115  120  124  132  132  136  133  127   127 #>  [5808,]  112  116  121  125  133  133  137  134  128   128 #>  [5809,]  112  116  121  125  133  133  137  134  128   128 #>  [5810,]  111  115  120  124  132  132  136  133  127   127 #>  [5811,]  111  115  120  124  132  132  136  133  127   127 #>  [5812,]  112  116  121  125  133  133  137  134  128   128 #>  [5813,]  111  115  120  124  132  132  136  133  127   127 #>  [5814,]  112  116  121  125  133  133  137  134  128   128 #>  [5815,]  112  116  121  125  133  133  137  134  128   128 #>  [5816,]  111  115  120  124  132  132  136  133  127   127 #>  [5817,]  111  115  120  124  132  132  136  133  127   127 #>  [5818,]  111  115  120  124  132  132  136  133  127   127 #>  [5819,]  111  115  120  124  132  132  136  133  127   127 #>  [5820,]  112  116  121  125  133  133  137  134  128   128 #>  [5821,]  111  115  120  124  132  132  136  133  127   127 #>  [5822,]  111  115  120  124  132  132  136  133  127   127 #>  [5823,]  111  115  120  124  132  132  136  133  127   127 #>  [5824,]  111  115  120  124  132  132  136  133  127   127 #>  [5825,]  111  115  120  124  132  132  136  133  127   127 #>  [5826,]  112  116  121  125  133  133  137  134  128   128 #>  [5827,]  111  115  120  124  132  132  136  133  127   127 #>  [5828,]  112  116  121  125  133  133  137  134  128   128 #>  [5829,]  111  115  120  124  132  132  136  133  127   127 #>  [5830,]  111  115  120  124  132  132  136  133  127   127 #>  [5831,]  111  115  120  124  132  132  136  133  127   127 #>  [5832,]  111  115  120  124  132  132  136  133  127   127 #>  [5833,]  112  116  121  125  133  133  137  134  128   128 #>  [5834,]  111  115  120  124  132  132  136  133  127   127 #>  [5835,]  111  115  120  124  132  132  136  133  127   127 #>  [5836,]  111  115  120  124  132  132  136  133  127   127 #>  [5837,]  111  115  120  124  132  132  136  133  127   127 #>  [5838,]  112  116  121  125  133  133  137  134  128   128 #>  [5839,]  111  115  120  124  132  132  136  133  127   127 #>  [5840,]  111  115  120  124  132  132  136  133  127   127 #>  [5841,]  112  116  121  125  133  133  137  134  128   128 #>  [5842,]  112  116  121  125  133  133  137  134  128   128 #>  [5843,]  112  116  121  125  133  133  137  134  128   128 #>  [5844,]  111  115  120  124  132  132  136  133  127   127 #>  [5845,]  112  116  121  125  133  133  137  134  128   128 #>  [5846,]  112  116  121  125  133  133  137  134  128   128 #>  [5847,]  111  115  120  124  132  132  136  133  127   127 #>  [5848,]  111  115  120  124  132  132  136  133  127   127 #>  [5849,]  111  115  120  124  132  132  136  133  127   127 #>  [5850,]  112  116  121  125  133  133  137  134  128   128 #>  [5851,]  112  116  121  125  133  133  137  134  128   128 #>  [5852,]  111  115  120  124  132  132  136  133  127   127 #>  [5853,]  112  116  121  125  133  133  137  134  128   128 #>  [5854,]  111  115  120  124  132  132  136  133  127   127 #>  [5855,]  112  116  121  125  133  133  137  134  128   128 #>  [5856,]  112  116  121  125  133  133  137  134  128   128 #>  [5857,]  112  116  121  125  133  133  137  134  128   128 #>  [5858,]  112  116  121  125  133  133  137  134  128   128 #>  [5859,]  111  115  120  124  132  132  136  133  127   127 #>  [5860,]  112  116  121  125  133  133  137  134  128   128 #>  [5861,]  112  116  121  125  133  133  137  134  128   128 #>  [5862,]  111  115  120  124  132  132  136  133  127   127 #>  [5863,]  112  116  121  125  133  133  137  134  128   128 #>  [5864,]  112  116  121  125  133  133  137  134  128   128 #>  [5865,]  112  116  121  125  133  133  137  134  128   128 #>  [5866,]  112  116  121  125  133  133  137  134  128   128 #>  [5867,]  111  115  120  124  132  132  136  133  127   127 #>  [5868,]  112  116  121  125  133  133  137  134  128   128 #>  [5869,]  111  115  120  124  132  132  136  133  127   127 #>  [5870,]  111  115  120  124  132  132  136  133  127   127 #>  [5871,]  112  116  121  125  133  133  137  134  128   128 #>  [5872,]  112  116  121  125  133  133  137  134  128   128 #>  [5873,]  112  116  121  125  133  133  137  134  128   128 #>  [5874,]  112  116  121  125  133  133  137  134  128   128 #>  [5875,]  112  116  121  125  133  133  137  134  128   128 #>  [5876,]  112  116  121  125  133  133  137  134  128   128 #>  [5877,]  111  115  120  124  132  132  136  133  127   127 #>  [5878,]  112  116  121  125  133  133  137  134  128   128 #>  [5879,]  111  115  120  124  132  132  136  133  127   127 #>  [5880,]  111  115  120  124  132  132  136  133  127   127 #>  [5881,]  112  116  121  125  133  133  137  134  128   128 #>  [5882,]  111  115  120  124  132  132  136  133  127   127 #>  [5883,]  111  115  120  124  132  132  136  133  127   127 #>  [5884,]  112  116  121  125  133  133  137  134  128   128 #>  [5885,]  111  115  120  124  132  132  136  133  127   127 #>  [5886,]  111  115  120  124  132  132  136  133  127   127 #>  [5887,]  112  116  121  125  133  133  137  134  128   128 #>  [5888,]  111  115  120  124  132  132  136  133  127   127 #>  [5889,]  111  115  120  124  132  132  136  133  127   127 #>  [5890,]  112  116  121  125  133  133  137  134  128   128 #>  [5891,]  112  116  121  125  133  133  137  134  128   128 #>  [5892,]  112  116  121  125  133  133  137  134  128   128 #>  [5893,]  111  115  120  124  132  132  136  133  127   127 #>  [5894,]  112  116  121  125  133  133  137  134  128   128 #>  [5895,]  111  115  120  124  132  132  136  133  127   127 #>  [5896,]  112  116  121  125  133  133  137  134  128   128 #>  [5897,]  112  116  121  125  133  133  137  134  128   128 #>  [5898,]  111  115  120  124  132  132  136  133  127   127 #>  [5899,]  111  115  120  124  132  132  136  133  127   127 #>  [5900,]  111  115  120  124  132  132  136  133  127   127 #>  [5901,]  113  118  123  127  135  135  138  135  129   129 #>  [5902,]  113  118  123  127  135  135  138  136  130   130 #>  [5903,]  113  118  123  127  135  135  138  136  130   130 #>  [5904,]  113  119  124  127  135  135  138  135  129   129 #>  [5905,]  113  118  123  127  135  135  138  136  130   130 #>  [5906,]  114  117  122  126  134  134  138  136  130   130 #>  [5907,]  113  118  123  127  135  135  138  136  130   130 #>  [5908,]  114  117  122  126  134  134  138  135  129   129 #>  [5909,]  114  117  122  126  134  134  138  135  129   129 #>  [5910,]  113  118  123  127  135  135  138  136  130   130 #>  [5911,]  113  119  124  127  135  135  138  135  129   129 #>  [5912,]  114  117  122  126  134  134  138  136  130   130 #>  [5913,]  113  118  123  127  135  135  138  135  129   129 #>  [5914,]  113  119  124  127  135  135  138  135  129   129 #>  [5915,]  114  117  122  126  134  134  138  135  129   129 #>  [5916,]  113  118  123  127  135  135  138  135  129   129 #>  [5917,]  113  118  123  127  135  135  138  135  129   129 #>  [5918,]  113  119  124  127  135  135  138  136  130   130 #>  [5919,]  113  119  124  127  135  135  138  136  130   130 #>  [5920,]  113  118  123  127  135  135  138  136  130   130 #>  [5921,]  113  119  124  127  135  135  138  135  129   129 #>  [5922,]  113  118  123  127  135  135  138  135  129   129 #>  [5923,]  113  118  123  127  135  135  138  136  130   130 #>  [5924,]  113  118  123  127  135  135  138  135  129   129 #>  [5925,]  113  118  123  127  135  135  138  136  130   130 #>  [5926,]  114  117  122  126  134  134  138  136  130   130 #>  [5927,]  113  119  124  127  135  135  138  135  129   129 #>  [5928,]  113  118  123  127  135  135  138  136  130   130 #>  [5929,]  113  118  123  127  135  135  138  136  130   130 #>  [5930,]  113  119  124  127  135  135  138  135  129   129 #>  [5931,]  113  119  124  127  135  135  138  136  130   130 #>  [5932,]  113  118  123  127  135  135  138  136  130   130 #>  [5933,]  114  117  122  126  134  134  138  136  130   130 #>  [5934,]  113  118  123  127  135  135  138  136  130   130 #>  [5935,]  113  118  123  127  135  135  138  135  129   129 #>  [5936,]  113  119  124  127  135  135  138  136  130   130 #>  [5937,]  113  118  123  127  135  135  138  135  129   129 #>  [5938,]  113  119  124  127  135  135  138  135  129   129 #>  [5939,]  113  118  123  127  135  135  138  136  130   130 #>  [5940,]  113  118  123  127  135  135  138  136  130   130 #>  [5941,]  113  119  124  127  135  135  138  135  129   129 #>  [5942,]  113  119  124  127  135  135  138  136  130   130 #>  [5943,]  114  117  122  126  134  134  138  135  129   129 #>  [5944,]  113  118  123  127  135  135  138  135  129   129 #>  [5945,]  113  118  123  127  135  135  138  135  129   129 #>  [5946,]  114  117  122  126  134  134  138  135  129   129 #>  [5947,]  113  118  123  127  135  135  138  136  130   130 #>  [5948,]  113  119  124  127  135  135  138  136  130   130 #>  [5949,]  113  118  123  127  135  135  138  135  129   129 #>  [5950,]  113  118  123  127  135  135  138  136  130   130 #>  [5951,]  114  117  122  126  134  134  138  135  129   129 #>  [5952,]  113  118  123  127  135  135  138  135  129   129 #>  [5953,]  113  118  123  127  135  135  138  136  130   130 #>  [5954,]  113  118  123  127  135  135  138  135  129   129 #>  [5955,]  113  118  123  127  135  135  138  135  129   129 #>  [5956,]  114  117  122  126  134  134  138  136  130   130 #>  [5957,]  114  117  122  126  134  134  138  136  130   130 #>  [5958,]  113  119  124  127  135  135  138  135  129   129 #>  [5959,]  113  118  123  127  135  135  138  135  129   129 #>  [5960,]  113  119  124  127  135  135  138  136  130   130 #>  [5961,]  114  117  122  126  134  134  138  136  130   130 #>  [5962,]  113  119  124  127  135  135  138  135  129   129 #>  [5963,]  113  118  123  127  135  135  138  136  130   130 #>  [5964,]  114  117  122  126  134  134  138  136  130   130 #>  [5965,]  113  118  123  127  135  135  138  136  130   130 #>  [5966,]  114  117  122  126  134  134  138  135  129   129 #>  [5967,]  113  118  123  127  135  135  138  135  129   129 #>  [5968,]  114  117  122  126  134  134  138  135  129   129 #>  [5969,]  113  119  124  127  135  135  138  135  129   129 #>  [5970,]  113  118  123  127  135  135  138  136  130   130 #>  [5971,]  113  118  123  127  135  135  138  136  130   130 #>  [5972,]  113  118  123  127  135  135  138  136  130   130 #>  [5973,]  113  118  123  127  135  135  138  136  130   130 #>  [5974,]  113  119  124  127  135  135  138  135  129   129 #>  [5975,]  113  119  124  127  135  135  138  136  130   130 #>  [5976,]  114  117  122  126  134  134  138  136  130   130 #>  [5977,]  113  118  123  127  135  135  138  136  130   130 #>  [5978,]  113  118  123  127  135  135  138  136  130   130 #>  [5979,]  113  118  123  127  135  135  138  135  129   129 #>  [5980,]  113  118  123  127  135  135  138  135  129   129 #>  [5981,]  113  118  123  127  135  135  138  135  129   129 #>  [5982,]  113  119  124  127  135  135  138  135  129   129 #>  [5983,]  113  118  123  127  135  135  138  135  129   129 #>  [5984,]  113  118  123  127  135  135  138  136  130   130 #>  [5985,]  113  119  124  127  135  135  138  135  129   129 #>  [5986,]  113  118  123  127  135  135  138  136  130   130 #>  [5987,]  113  118  123  127  135  135  138  135  129   129 #>  [5988,]  113  118  123  127  135  135  138  135  129   129 #>  [5989,]  113  118  123  127  135  135  138  135  129   129 #>  [5990,]  113  118  123  127  135  135  138  135  129   129 #>  [5991,]  113  118  123  127  135  135  138  135  129   129 #>  [5992,]  113  119  124  127  135  135  138  135  129   129 #>  [5993,]  113  119  124  127  135  135  138  136  130   130 #>  [5994,]  114  117  122  126  134  134  138  136  130   130 #>  [5995,]  113  118  123  127  135  135  138  135  129   129 #>  [5996,]  113  119  124  127  135  135  138  135  129   129 #>  [5997,]  113  119  124  127  135  135  138  136  130   130 #>  [5998,]  113  118  123  127  135  135  138  136  130   130 #>  [5999,]  113  119  124  127  135  135  138  135  129   129 #>  [6000,]  113  118  123  127  135  135  138  136  130   130 #>  [6001,]  115  120  125  128  136  136  139  137  131   131 #>  [6002,]  116  121  126  129  137  137  140  138  132   132 #>  [6003,]  116  121  126  129  137  137  140  138  132   132 #>  [6004,]  115  120  125  128  136  136  139  137  131   131 #>  [6005,]  115  120  125  128  136  136  139  137  131   131 #>  [6006,]  116  121  126  129  137  137  140  138  132   132 #>  [6007,]  116  121  126  129  137  137  140  138  132   132 #>  [6008,]  115  120  125  128  136  136  139  137  131   131 #>  [6009,]  115  120  125  128  136  136  139  137  131   131 #>  [6010,]  115  120  125  128  136  136  139  137  131   131 #>  [6011,]  115  120  125  128  136  136  139  137  131   131 #>  [6012,]  116  121  126  129  137  137  140  138  132   132 #>  [6013,]  115  120  125  128  136  136  139  137  131   131 #>  [6014,]  115  120  125  128  136  136  139  137  131   131 #>  [6015,]  115  120  125  128  136  136  139  137  131   131 #>  [6016,]  115  120  125  128  136  136  139  137  131   131 #>  [6017,]  115  120  125  128  136  136  139  137  131   131 #>  [6018,]  116  121  126  129  137  137  140  138  132   132 #>  [6019,]  116  121  126  129  137  137  140  138  132   132 #>  [6020,]  116  121  126  129  137  137  140  138  132   132 #>  [6021,]  115  120  125  128  136  136  139  137  131   131 #>  [6022,]  115  120  125  128  136  136  139  137  131   131 #>  [6023,]  116  121  126  129  137  137  140  138  132   132 #>  [6024,]  115  120  125  128  136  136  139  137  131   131 #>  [6025,]  116  121  126  129  137  137  140  138  132   132 #>  [6026,]  115  120  125  128  136  136  139  137  131   131 #>  [6027,]  115  120  125  128  136  136  139  137  131   131 #>  [6028,]  116  121  126  129  137  137  140  138  132   132 #>  [6029,]  115  120  125  128  136  136  139  137  131   131 #>  [6030,]  115  120  125  128  136  136  139  137  131   131 #>  [6031,]  116  121  126  129  137  137  140  138  132   132 #>  [6032,]  116  121  126  129  137  137  140  138  132   132 #>  [6033,]  116  121  126  129  137  137  140  138  132   132 #>  [6034,]  116  121  126  129  137  137  140  138  132   132 #>  [6035,]  115  120  125  128  136  136  139  137  131   131 #>  [6036,]  115  120  125  128  136  136  139  137  131   131 #>  [6037,]  115  120  125  128  136  136  139  137  131   131 #>  [6038,]  115  120  125  128  136  136  139  137  131   131 #>  [6039,]  115  120  125  128  136  136  139  137  131   131 #>  [6040,]  116  121  126  129  137  137  140  138  132   132 #>  [6041,]  115  120  125  128  136  136  139  137  131   131 #>  [6042,]  116  121  126  129  137  137  140  138  132   132 #>  [6043,]  115  120  125  128  136  136  139  137  131   131 #>  [6044,]  115  120  125  128  136  136  139  137  131   131 #>  [6045,]  115  120  125  128  136  136  139  137  131   131 #>  [6046,]  115  120  125  128  136  136  139  137  131   131 #>  [6047,]  115  120  125  128  136  136  139  137  131   131 #>  [6048,]  116  121  126  129  137  137  140  138  132   132 #>  [6049,]  115  120  125  128  136  136  139  137  131   131 #>  [6050,]  115  120  125  128  136  136  139  137  131   131 #>  [6051,]  115  120  125  128  136  136  139  137  131   131 #>  [6052,]  115  120  125  128  136  136  139  137  131   131 #>  [6053,]  115  120  125  128  136  136  139  137  131   131 #>  [6054,]  115  120  125  128  136  136  139  137  131   131 #>  [6055,]  115  120  125  128  136  136  139  137  131   131 #>  [6056,]  116  121  126  129  137  137  140  138  132   132 #>  [6057,]  115  120  125  128  136  136  139  137  131   131 #>  [6058,]  115  120  125  128  136  136  139  137  131   131 #>  [6059,]  115  120  125  128  136  136  139  137  131   131 #>  [6060,]  116  121  126  129  137  137  140  138  132   132 #>  [6061,]  116  121  126  129  137  137  140  138  132   132 #>  [6062,]  115  120  125  128  136  136  139  137  131   131 #>  [6063,]  115  120  125  128  136  136  139  137  131   131 #>  [6064,]  116  121  126  129  137  137  140  138  132   132 #>  [6065,]  116  121  126  129  137  137  140  138  132   132 #>  [6066,]  115  120  125  128  136  136  139  137  131   131 #>  [6067,]  115  120  125  128  136  136  139  137  131   131 #>  [6068,]  115  120  125  128  136  136  139  137  131   131 #>  [6069,]  115  120  125  128  136  136  139  137  131   131 #>  [6070,]  116  121  126  129  137  137  140  138  132   132 #>  [6071,]  116  121  126  129  137  137  140  138  132   132 #>  [6072,]  115  120  125  128  136  136  139  137  131   131 #>  [6073,]  116  121  126  129  137  137  140  138  132   132 #>  [6074,]  115  120  125  128  136  136  139  137  131   131 #>  [6075,]  115  120  125  128  136  136  139  137  131   131 #>  [6076,]  115  120  125  128  136  136  139  137  131   131 #>  [6077,]  115  120  125  128  136  136  139  137  131   131 #>  [6078,]  116  121  126  129  137  137  140  138  132   132 #>  [6079,]  115  120  125  128  136  136  139  137  131   131 #>  [6080,]  115  120  125  128  136  136  139  137  131   131 #>  [6081,]  115  120  125  128  136  136  139  137  131   131 #>  [6082,]  115  120  125  128  136  136  139  137  131   131 #>  [6083,]  115  120  125  128  136  136  139  137  131   131 #>  [6084,]  116  121  126  129  137  137  140  138  132   132 #>  [6085,]  115  120  125  128  136  136  139  137  131   131 #>  [6086,]  115  120  125  128  136  136  139  137  131   131 #>  [6087,]  115  120  125  128  136  136  139  137  131   131 #>  [6088,]  115  120  125  128  136  136  139  137  131   131 #>  [6089,]  115  120  125  128  136  136  139  137  131   131 #>  [6090,]  115  120  125  128  136  136  139  137  131   131 #>  [6091,]  115  120  125  128  136  136  139  137  131   131 #>  [6092,]  115  120  125  128  136  136  139  137  131   131 #>  [6093,]  116  121  126  129  137  137  140  138  132   132 #>  [6094,]  115  120  125  128  136  136  139  137  131   131 #>  [6095,]  115  120  125  128  136  136  139  137  131   131 #>  [6096,]  115  120  125  128  136  136  139  137  131   131 #>  [6097,]  116  121  126  129  137  137  140  138  132   132 #>  [6098,]  116  121  126  129  137  137  140  138  132   132 #>  [6099,]  115  120  125  128  136  136  139  137  131   131 #>  [6100,]  116  121  126  129  137  137  140  138  132   132 #>  [6101,]  118  123  128  131  139  139  142  140  134   133 #>  [6102,]  118  123  128  131  139  139  142  140  134   133 #>  [6103,]  118  123  128  131  139  139  142  140  134   133 #>  [6104,]  117  122  127  130  138  138  141  139  133   134 #>  [6105,]  118  123  128  131  139  139  142  140  134   133 #>  [6106,]  118  123  128  131  139  139  142  140  134   133 #>  [6107,]  118  123  128  131  139  139  142  140  134   133 #>  [6108,]  117  122  127  130  138  138  141  139  133   135 #>  [6109,]  117  122  127  130  138  138  141  139  133   134 #>  [6110,]  118  123  128  131  139  139  142  140  134   133 #>  [6111,]  117  122  127  130  138  138  141  139  133   134 #>  [6112,]  118  123  128  131  139  139  142  140  134   133 #>  [6113,]  117  122  127  130  138  138  141  139  133   135 #>  [6114,]  118  123  128  131  139  139  142  140  134   133 #>  [6115,]  118  123  128  131  139  139  142  140  134   133 #>  [6116,]  118  123  128  131  139  139  142  140  134   133 #>  [6117,]  117  122  127  130  138  138  141  139  133   134 #>  [6118,]  118  123  128  131  139  139  142  140  134   133 #>  [6119,]  118  123  128  131  139  139  142  140  134   133 #>  [6120,]  118  123  128  131  139  139  142  140  134   133 #>  [6121,]  118  123  128  131  139  139  142  140  134   133 #>  [6122,]  117  122  127  130  138  138  141  139  133   135 #>  [6123,]  118  123  128  131  139  139  142  140  134   133 #>  [6124,]  118  123  128  131  139  139  142  140  134   133 #>  [6125,]  118  123  128  131  139  139  142  140  134   133 #>  [6126,]  118  123  128  131  139  139  142  140  134   133 #>  [6127,]  117  122  127  130  138  138  141  139  133   135 #>  [6128,]  118  123  128  131  139  139  142  140  134   133 #>  [6129,]  118  123  128  131  139  139  142  140  134   133 #>  [6130,]  118  123  128  131  139  139  142  140  134   133 #>  [6131,]  118  123  128  131  139  139  142  140  134   133 #>  [6132,]  118  123  128  131  139  139  142  140  134   133 #>  [6133,]  118  123  128  131  139  139  142  140  134   133 #>  [6134,]  118  123  128  131  139  139  142  140  134   133 #>  [6135,]  117  122  127  130  138  138  141  139  133   134 #>  [6136,]  118  123  128  131  139  139  142  140  134   133 #>  [6137,]  118  123  128  131  139  139  142  140  134   133 #>  [6138,]  118  123  128  131  139  139  142  140  134   133 #>  [6139,]  118  123  128  131  139  139  142  140  134   133 #>  [6140,]  118  123  128  131  139  139  142  140  134   133 #>  [6141,]  118  123  128  131  139  139  142  140  134   133 #>  [6142,]  118  123  128  131  139  139  142  140  134   133 #>  [6143,]  117  122  127  130  138  138  141  139  133   134 #>  [6144,]  117  122  127  130  138  138  141  139  133   134 #>  [6145,]  118  123  128  131  139  139  142  140  134   133 #>  [6146,]  118  123  128  131  139  139  142  140  134   133 #>  [6147,]  118  123  128  131  139  139  142  140  134   133 #>  [6148,]  118  123  128  131  139  139  142  140  134   133 #>  [6149,]  117  122  127  130  138  138  141  139  133   134 #>  [6150,]  118  123  128  131  139  139  142  140  134   133 #>  [6151,]  118  123  128  131  139  139  142  140  134   133 #>  [6152,]  117  122  127  130  138  138  141  139  133   134 #>  [6153,]  118  123  128  131  139  139  142  140  134   133 #>  [6154,]  118  123  128  131  139  139  142  140  134   133 #>  [6155,]  117  122  127  130  138  138  141  139  133   135 #>  [6156,]  118  123  128  131  139  139  142  140  134   133 #>  [6157,]  118  123  128  131  139  139  142  140  134   133 #>  [6158,]  117  122  127  130  138  138  141  139  133   135 #>  [6159,]  118  123  128  131  139  139  142  140  134   133 #>  [6160,]  118  123  128  131  139  139  142  140  134   133 #>  [6161,]  118  123  128  131  139  139  142  140  134   133 #>  [6162,]  118  123  128  131  139  139  142  140  134   133 #>  [6163,]  118  123  128  131  139  139  142  140  134   133 #>  [6164,]  118  123  128  131  139  139  142  140  134   133 #>  [6165,]  118  123  128  131  139  139  142  140  134   133 #>  [6166,]  117  122  127  130  138  138  141  139  133   135 #>  [6167,]  118  123  128  131  139  139  142  140  134   133 #>  [6168,]  118  123  128  131  139  139  142  140  134   133 #>  [6169,]  118  123  128  131  139  139  142  140  134   133 #>  [6170,]  118  123  128  131  139  139  142  140  134   133 #>  [6171,]  118  123  128  131  139  139  142  140  134   133 #>  [6172,]  118  123  128  131  139  139  142  140  134   133 #>  [6173,]  118  123  128  131  139  139  142  140  134   133 #>  [6174,]  118  123  128  131  139  139  142  140  134   133 #>  [6175,]  118  123  128  131  139  139  142  140  134   133 #>  [6176,]  118  123  128  131  139  139  142  140  134   133 #>  [6177,]  118  123  128  131  139  139  142  140  134   133 #>  [6178,]  118  123  128  131  139  139  142  140  134   133 #>  [6179,]  117  122  127  130  138  138  141  139  133   134 #>  [6180,]  117  122  127  130  138  138  141  139  133   135 #>  [6181,]  117  122  127  130  138  138  141  139  133   135 #>  [6182,]  117  122  127  130  138  138  141  139  133   134 #>  [6183,]  117  122  127  130  138  138  141  139  133   135 #>  [6184,]  118  123  128  131  139  139  142  140  134   133 #>  [6185,]  118  123  128  131  139  139  142  140  134   133 #>  [6186,]  118  123  128  131  139  139  142  140  134   133 #>  [6187,]  117  122  127  130  138  138  141  139  133   135 #>  [6188,]  117  122  127  130  138  138  141  139  133   134 #>  [6189,]  117  122  127  130  138  138  141  139  133   134 #>  [6190,]  117  122  127  130  138  138  141  139  133   135 #>  [6191,]  118  123  128  131  139  139  142  140  134   133 #>  [6192,]  117  122  127  130  138  138  141  139  133   134 #>  [6193,]  118  123  128  131  139  139  142  140  134   133 #>  [6194,]  118  123  128  131  139  139  142  140  134   133 #>  [6195,]  117  122  127  130  138  138  141  139  133   134 #>  [6196,]  118  123  128  131  139  139  142  140  134   133 #>  [6197,]  118  123  128  131  139  139  142  140  134   133 #>  [6198,]  118  123  128  131  139  139  142  140  134   133 #>  [6199,]  117  122  127  130  138  138  141  139  133   134 #>  [6200,]  118  123  128  131  139  139  142  140  134   133 #>  [6201,]  120  125  130  133  141  141  144  142  136   137 #>  [6202,]  120  125  130  133  141  141  144  142  136   137 #>  [6203,]  120  125  130  133  141  141  144  142  136   137 #>  [6204,]  120  125  130  133  141  141  144  142  136   137 #>  [6205,]  120  125  130  133  141  141  144  142  136   137 #>  [6206,]  120  125  130  133  141  141  144  142  136   137 #>  [6207,]  120  125  130  133  141  141  144  142  136   137 #>  [6208,]  120  125  130  133  141  141  144  142  136   137 #>  [6209,]  120  125  130  133  141  141  144  142  136   137 #>  [6210,]  119  124  129  132  140  140  143  141  135   136 #>  [6211,]  119  124  129  132  140  140  143  141  135   136 #>  [6212,]  120  125  130  133  141  141  144  142  136   137 #>  [6213,]  120  125  130  133  141  141  144  142  136   137 #>  [6214,]  119  124  129  132  140  140  143  141  135   136 #>  [6215,]  120  125  130  133  141  141  144  142  136   137 #>  [6216,]  120  125  130  133  141  141  144  142  136   137 #>  [6217,]  120  125  130  133  141  141  144  142  136   137 #>  [6218,]  120  125  130  133  141  141  144  142  136   137 #>  [6219,]  120  125  130  133  141  141  144  142  136   137 #>  [6220,]  120  125  130  133  141  141  144  142  136   137 #>  [6221,]  120  125  130  133  141  141  144  142  136   137 #>  [6222,]  120  125  130  133  141  141  144  142  136   137 #>  [6223,]  120  125  130  133  141  141  144  142  136   137 #>  [6224,]  120  125  130  133  141  141  144  142  136   137 #>  [6225,]  120  125  130  133  141  141  144  142  136   137 #>  [6226,]  120  125  130  133  141  141  144  142  136   137 #>  [6227,]  120  125  130  133  141  141  144  142  136   137 #>  [6228,]  120  125  130  133  141  141  144  142  136   137 #>  [6229,]  120  125  130  133  141  141  144  142  136   137 #>  [6230,]  120  125  130  133  141  141  144  142  136   137 #>  [6231,]  120  125  130  133  141  141  144  142  136   137 #>  [6232,]  120  125  130  133  141  141  144  142  136   137 #>  [6233,]  120  125  130  133  141  141  144  142  136   137 #>  [6234,]  120  125  130  133  141  141  144  142  136   137 #>  [6235,]  120  125  130  133  141  141  144  142  136   137 #>  [6236,]  120  125  130  133  141  141  144  142  136   137 #>  [6237,]  120  125  130  133  141  141  144  142  136   137 #>  [6238,]  120  125  130  133  141  141  144  142  136   137 #>  [6239,]  120  125  130  133  141  141  144  142  136   137 #>  [6240,]  119  124  129  132  140  140  143  141  135   136 #>  [6241,]  120  125  130  133  141  141  144  142  136   137 #>  [6242,]  120  125  130  133  141  141  144  142  136   137 #>  [6243,]  120  125  130  133  141  141  144  142  136   137 #>  [6244,]  120  125  130  133  141  141  144  142  136   137 #>  [6245,]  120  125  130  133  141  141  144  142  136   137 #>  [6246,]  120  125  130  133  141  141  144  142  136   137 #>  [6247,]  120  125  130  133  141  141  144  142  136   137 #>  [6248,]  119  124  129  132  140  140  143  141  135   136 #>  [6249,]  120  125  130  133  141  141  144  142  136   137 #>  [6250,]  120  125  130  133  141  141  144  142  136   137 #>  [6251,]  120  125  130  133  141  141  144  142  136   137 #>  [6252,]  120  125  130  133  141  141  144  142  136   137 #>  [6253,]  120  125  130  133  141  141  144  142  136   137 #>  [6254,]  120  125  130  133  141  141  144  142  136   137 #>  [6255,]  120  125  130  133  141  141  144  142  136   137 #>  [6256,]  120  125  130  133  141  141  144  142  136   137 #>  [6257,]  120  125  130  133  141  141  144  142  136   137 #>  [6258,]  120  125  130  133  141  141  144  142  136   137 #>  [6259,]  120  125  130  133  141  141  144  142  136   137 #>  [6260,]  120  125  130  133  141  141  144  142  136   137 #>  [6261,]  120  125  130  133  141  141  144  142  136   137 #>  [6262,]  120  125  130  133  141  141  144  142  136   137 #>  [6263,]  120  125  130  133  141  141  144  142  136   137 #>  [6264,]  120  125  130  133  141  141  144  142  136   137 #>  [6265,]  120  125  130  133  141  141  144  142  136   137 #>  [6266,]  120  125  130  133  141  141  144  142  136   137 #>  [6267,]  120  125  130  133  141  141  144  142  136   137 #>  [6268,]  120  125  130  133  141  141  144  142  136   137 #>  [6269,]  120  125  130  133  141  141  144  142  136   137 #>  [6270,]  119  124  129  132  140  140  143  141  135   136 #>  [6271,]  120  125  130  133  141  141  144  142  136   137 #>  [6272,]  120  125  130  133  141  141  144  142  136   137 #>  [6273,]  120  125  130  133  141  141  144  142  136   137 #>  [6274,]  120  125  130  133  141  141  144  142  136   137 #>  [6275,]  120  125  130  133  141  141  144  142  136   137 #>  [6276,]  120  125  130  133  141  141  144  142  136   137 #>  [6277,]  120  125  130  133  141  141  144  142  136   137 #>  [6278,]  120  125  130  133  141  141  144  142  136   137 #>  [6279,]  120  125  130  133  141  141  144  142  136   137 #>  [6280,]  120  125  130  133  141  141  144  142  136   137 #>  [6281,]  120  125  130  133  141  141  144  142  136   137 #>  [6282,]  120  125  130  133  141  141  144  142  136   137 #>  [6283,]  120  125  130  133  141  141  144  142  136   137 #>  [6284,]  120  125  130  133  141  141  144  142  136   137 #>  [6285,]  120  125  130  133  141  141  144  142  136   137 #>  [6286,]  120  125  130  133  141  141  144  142  136   137 #>  [6287,]  120  125  130  133  141  141  144  142  136   137 #>  [6288,]  120  125  130  133  141  141  144  142  136   137 #>  [6289,]  120  125  130  133  141  141  144  142  136   137 #>  [6290,]  120  125  130  133  141  141  144  142  136   137 #>  [6291,]  120  125  130  133  141  141  144  142  136   137 #>  [6292,]  120  125  130  133  141  141  144  142  136   137 #>  [6293,]  120  125  130  133  141  141  144  142  136   137 #>  [6294,]  120  125  130  133  141  141  144  142  136   137 #>  [6295,]  120  125  130  133  141  141  144  142  136   137 #>  [6296,]  120  125  130  133  141  141  144  142  136   137 #>  [6297,]  120  125  130  133  141  141  144  142  136   137 #>  [6298,]  120  125  130  133  141  141  144  142  136   137 #>  [6299,]  120  125  130  133  141  141  144  142  136   137 #>  [6300,]  120  125  130  133  141  141  144  142  136   137 #>  [6301,]  122  127  132  134  142  142  145  143  137   138 #>  [6302,]  121  126  131  136  143  143  146  143  138   139 #>  [6303,]  122  127  132  134  142  142  145  143  138   139 #>  [6304,]  122  127  132  134  142  142  145  143  137   138 #>  [6305,]  121  126  131  136  143  143  146  143  138   139 #>  [6306,]  121  126  131  135  143  143  146  143  138   139 #>  [6307,]  122  127  132  134  142  142  145  143  138   139 #>  [6308,]  121  126  131  135  143  143  146  143  137   138 #>  [6309,]  122  127  132  134  142  142  145  143  137   138 #>  [6310,]  122  127  132  134  142  142  145  143  138   139 #>  [6311,]  121  126  131  135  143  143  146  143  137   138 #>  [6312,]  121  126  131  136  143  143  146  143  138   139 #>  [6313,]  122  127  132  134  142  142  145  143  137   138 #>  [6314,]  122  127  132  134  142  142  145  143  137   138 #>  [6315,]  121  126  131  136  143  143  146  143  137   138 #>  [6316,]  122  127  132  134  142  142  145  143  137   138 #>  [6317,]  121  126  131  136  143  143  146  143  137   138 #>  [6318,]  121  126  131  136  143  143  146  143  138   139 #>  [6319,]  121  126  131  135  143  143  146  143  138   139 #>  [6320,]  122  127  132  134  142  142  145  143  138   139 #>  [6321,]  121  126  131  136  143  143  146  143  137   138 #>  [6322,]  122  127  132  134  142  142  145  143  137   138 #>  [6323,]  121  126  131  136  143  143  146  143  138   139 #>  [6324,]  122  127  132  134  142  142  145  143  138   139 #>  [6325,]  122  127  132  134  142  142  145  143  138   139 #>  [6326,]  121  126  131  135  143  143  146  143  138   139 #>  [6327,]  122  127  132  134  142  142  145  143  137   138 #>  [6328,]  122  127  132  134  142  142  145  143  138   139 #>  [6329,]  121  126  131  136  143  143  146  143  138   139 #>  [6330,]  121  126  131  136  143  143  146  143  137   138 #>  [6331,]  121  126  131  136  143  143  146  143  138   139 #>  [6332,]  121  126  131  136  143  143  146  143  138   139 #>  [6333,]  121  126  131  136  143  143  146  143  138   139 #>  [6334,]  121  126  131  135  143  143  146  143  138   139 #>  [6335,]  121  126  131  135  143  143  146  143  137   138 #>  [6336,]  122  127  132  134  142  142  145  143  138   139 #>  [6337,]  121  126  131  135  143  143  146  143  137   138 #>  [6338,]  121  126  131  135  143  143  146  143  138   139 #>  [6339,]  122  127  132  134  142  142  145  143  138   139 #>  [6340,]  121  126  131  136  143  143  146  143  138   139 #>  [6341,]  122  127  132  134  142  142  145  143  137   138 #>  [6342,]  121  126  131  135  143  143  146  143  138   139 #>  [6343,]  121  126  131  136  143  143  146  143  137   138 #>  [6344,]  121  126  131  136  143  143  146  143  137   138 #>  [6345,]  122  127  132  134  142  142  145  143  137   138 #>  [6346,]  121  126  131  136  143  143  146  143  137   138 #>  [6347,]  121  126  131  136  143  143  146  143  138   139 #>  [6348,]  121  126  131  136  143  143  146  143  138   139 #>  [6349,]  122  127  132  134  142  142  145  143  137   138 #>  [6350,]  122  127  132  134  142  142  145  143  138   139 #>  [6351,]  121  126  131  136  143  143  146  143  138   139 #>  [6352,]  122  127  132  134  142  142  145  143  137   138 #>  [6353,]  122  127  132  134  142  142  145  143  138   139 #>  [6354,]  122  127  132  134  142  142  145  143  137   138 #>  [6355,]  122  127  132  134  142  142  145  143  137   138 #>  [6356,]  121  126  131  135  143  143  146  143  138   139 #>  [6357,]  122  127  132  134  142  142  145  143  138   139 #>  [6358,]  122  127  132  134  142  142  145  143  137   138 #>  [6359,]  122  127  132  134  142  142  145  143  138   139 #>  [6360,]  121  126  131  136  143  143  146  143  138   139 #>  [6361,]  121  126  131  136  143  143  146  143  138   139 #>  [6362,]  121  126  131  135  143  143  146  143  137   138 #>  [6363,]  121  126  131  136  143  143  146  143  138   139 #>  [6364,]  121  126  131  135  143  143  146  143  138   139 #>  [6365,]  121  126  131  135  143  143  146  143  138   139 #>  [6366,]  121  126  131  136  143  143  146  143  137   138 #>  [6367,]  122  127  132  134  142  142  145  143  137   138 #>  [6368,]  121  126  131  135  143  143  146  143  137   138 #>  [6369,]  121  126  131  135  143  143  146  143  137   138 #>  [6370,]  121  126  131  136  143  143  146  143  138   139 #>  [6371,]  122  127  132  134  142  142  145  143  138   139 #>  [6372,]  122  127  132  134  142  142  145  143  138   139 #>  [6373,]  122  127  132  134  142  142  145  143  138   139 #>  [6374,]  122  127  132  134  142  142  145  143  137   138 #>  [6375,]  121  126  131  136  143  143  146  143  138   139 #>  [6376,]  122  127  132  134  142  142  145  143  138   139 #>  [6377,]  121  126  131  135  143  143  146  143  138   139 #>  [6378,]  121  126  131  136  143  143  146  143  138   139 #>  [6379,]  121  126  131  135  143  143  146  143  137   138 #>  [6380,]  122  127  132  134  142  142  145  143  137   138 #>  [6381,]  121  126  131  136  143  143  146  143  137   138 #>  [6382,]  121  126  131  136  143  143  146  143  137   138 #>  [6383,]  121  126  131  136  143  143  146  143  137   138 #>  [6384,]  121  126  131  136  143  143  146  143  138   139 #>  [6385,]  122  127  132  134  142  142  145  143  137   138 #>  [6386,]  122  127  132  134  142  142  145  143  138   139 #>  [6387,]  122  127  132  134  142  142  145  143  137   138 #>  [6388,]  122  127  132  134  142  142  145  143  137   138 #>  [6389,]  121  126  131  135  143  143  146  143  137   138 #>  [6390,]  122  127  132  134  142  142  145  143  137   138 #>  [6391,]  122  127  132  134  142  142  145  143  137   138 #>  [6392,]  121  126  131  136  143  143  146  143  137   138 #>  [6393,]  121  126  131  136  143  143  146  143  138   139 #>  [6394,]  121  126  131  135  143  143  146  143  138   139 #>  [6395,]  121  126  131  136  143  143  146  143  137   138 #>  [6396,]  121  126  131  135  143  143  146  143  137   138 #>  [6397,]  121  126  131  135  143  143  146  143  138   139 #>  [6398,]  121  126  131  136  143  143  146  143  138   139 #>  [6399,]  121  126  131  136  143  143  146  143  137   138 #>  [6400,]  121  126  131  135  143  143  146  143  138   139 #>  [6401,]  123  128  134  138  145  144  150  147  140   141 #>  [6402,]  123  128  133  137  144  146  148  145  141   142 #>  [6403,]  123  128  133  137  144  145  147  144  141   142 #>  [6404,]  123  128  133  137  144  146  148  145  141   143 #>  [6405,]  123  128  133  137  144  146  148  145  141   143 #>  [6406,]  123  128  133  137  144  145  147  144  141   142 #>  [6407,]  123  128  133  137  144  145  147  144  141   142 #>  [6408,]  123  128  133  137  144  146  148  145  141   142 #>  [6409,]  123  128  134  138  145  144  150  147  140   141 #>  [6410,]  123  128  133  137  144  146  148  145  141   143 #>  [6411,]  123  128  134  138  145  144  150  147  140   141 #>  [6412,]  123  128  133  137  144  146  148  145  141   143 #>  [6413,]  123  128  134  138  145  144  150  147  140   141 #>  [6414,]  123  128  133  137  144  146  148  145  141   143 #>  [6415,]  123  128  133  137  144  146  148  145  141   143 #>  [6416,]  123  128  133  137  144  146  148  145  141   143 #>  [6417,]  123  128  134  138  145  144  150  147  140   141 #>  [6418,]  123  128  134  138  145  144  150  147  140   141 #>  [6419,]  123  128  133  137  144  146  148  145  141   143 #>  [6420,]  123  128  134  138  145  144  149  146  139   140 #>  [6421,]  123  128  133  137  144  145  147  144  141   142 #>  [6422,]  123  128  133  137  144  146  148  145  141   143 #>  [6423,]  123  128  133  137  144  145  147  144  141   142 #>  [6424,]  123  128  133  137  144  146  148  145  141   143 #>  [6425,]  123  128  133  137  144  145  147  144  141   142 #>  [6426,]  123  128  133  137  144  146  148  145  141   143 #>  [6427,]  123  128  134  138  145  144  150  147  140   141 #>  [6428,]  123  128  134  138  145  144  150  147  140   141 #>  [6429,]  123  128  134  138  145  144  150  147  140   141 #>  [6430,]  123  128  133  137  144  146  148  145  141   142 #>  [6431,]  123  128  133  137  144  146  148  145  141   143 #>  [6432,]  123  128  133  137  144  146  148  145  141   143 #>  [6433,]  123  128  134  138  145  144  150  147  140   141 #>  [6434,]  123  128  133  137  144  145  147  144  141   142 #>  [6435,]  123  128  133  137  144  145  147  144  141   142 #>  [6436,]  123  128  134  138  145  144  150  147  140   141 #>  [6437,]  123  128  133  137  144  145  147  144  141   142 #>  [6438,]  123  128  134  138  145  144  150  147  140   141 #>  [6439,]  123  128  134  138  145  144  150  147  140   141 #>  [6440,]  123  128  133  137  144  146  148  145  141   142 #>  [6441,]  123  128  133  137  144  145  147  144  141   142 #>  [6442,]  123  128  134  138  145  144  149  146  139   140 #>  [6443,]  123  128  133  137  144  146  148  145  141   143 #>  [6444,]  123  128  133  137  144  145  147  144  141   142 #>  [6445,]  123  128  133  137  144  145  147  144  141   142 #>  [6446,]  123  128  133  137  144  146  148  145  141   143 #>  [6447,]  123  128  133  137  144  146  148  145  141   143 #>  [6448,]  123  128  133  137  144  146  148  145  141   143 #>  [6449,]  123  128  133  137  144  146  148  145  141   142 #>  [6450,]  123  128  133  137  144  145  147  144  141   142 #>  [6451,]  123  128  134  138  145  144  150  147  140   141 #>  [6452,]  123  128  133  137  144  146  148  145  141   143 #>  [6453,]  123  128  134  138  145  144  149  146  139   140 #>  [6454,]  123  128  134  138  145  144  150  147  140   141 #>  [6455,]  123  128  133  137  144  145  147  144  141   142 #>  [6456,]  123  128  134  138  145  144  149  146  139   140 #>  [6457,]  123  128  133  137  144  145  147  144  141   142 #>  [6458,]  123  128  134  138  145  144  150  147  140   141 #>  [6459,]  123  128  133  137  144  146  148  145  141   143 #>  [6460,]  123  128  133  137  144  145  147  144  141   142 #>  [6461,]  123  128  133  137  144  146  148  145  141   143 #>  [6462,]  123  128  134  138  145  144  150  147  140   141 #>  [6463,]  123  128  133  137  144  146  148  145  141   143 #>  [6464,]  123  128  133  137  144  145  147  144  141   142 #>  [6465,]  123  128  134  138  145  144  149  146  139   140 #>  [6466,]  123  128  134  138  145  144  150  147  140   141 #>  [6467,]  123  128  133  137  144  146  148  145  141   142 #>  [6468,]  123  128  133  137  144  146  148  145  141   143 #>  [6469,]  123  128  133  137  144  146  148  145  141   143 #>  [6470,]  123  128  133  137  144  146  148  145  141   143 #>  [6471,]  123  128  133  137  144  146  148  145  141   143 #>  [6472,]  123  128  133  137  144  146  148  145  141   142 #>  [6473,]  123  128  133  137  144  145  147  144  141   142 #>  [6474,]  123  128  133  137  144  145  147  144  141   142 #>  [6475,]  123  128  133  137  144  146  148  145  141   143 #>  [6476,]  123  128  133  137  144  145  147  144  141   142 #>  [6477,]  123  128  134  138  145  144  150  147  140   141 #>  [6478,]  123  128  133  137  144  146  148  145  141   143 #>  [6479,]  123  128  134  138  145  144  150  147  140   141 #>  [6480,]  123  128  133  137  144  145  147  144  141   142 #>  [6481,]  123  128  133  137  144  145  147  144  141   142 #>  [6482,]  123  128  134  138  145  144  149  146  139   140 #>  [6483,]  123  128  134  138  145  144  150  147  140   141 #>  [6484,]  123  128  134  138  145  144  149  146  139   140 #>  [6485,]  123  128  134  138  145  144  149  146  139   140 #>  [6486,]  123  128  133  137  144  145  147  144  141   142 #>  [6487,]  123  128  134  138  145  144  150  147  140   141 #>  [6488,]  123  128  133  137  144  145  147  144  141   142 #>  [6489,]  123  128  134  138  145  144  149  146  139   140 #>  [6490,]  123  128  134  138  145  144  150  147  140   141 #>  [6491,]  123  128  134  138  145  144  150  147  140   141 #>  [6492,]  123  128  133  137  144  146  148  145  141   143 #>  [6493,]  123  128  134  138  145  144  150  147  140   141 #>  [6494,]  123  128  134  138  145  144  149  146  139   140 #>  [6495,]  123  128  133  137  144  146  148  145  141   143 #>  [6496,]  123  128  133  137  144  146  148  145  141   143 #>  [6497,]  123  128  133  137  144  145  147  144  141   142 #>  [6498,]  123  128  133  137  144  145  147  144  141   142 #>  [6499,]  123  128  133  137  144  145  147  144  141   142 #>  [6500,]  123  128  133  137  144  146  148  145  141   143 #>  [6501,]  124  129  135  139  146  147  151  148  143   147 #>  [6502,]  125  130  136  140  147  148  152  149  142   144 #>  [6503,]  124  129  135  139  146  147  151  148  143   146 #>  [6504,]  125  130  136  140  147  148  152  149  142   144 #>  [6505,]  125  130  136  140  147  148  152  149  142   144 #>  [6506,]  124  129  135  139  146  147  151  148  143   146 #>  [6507,]  125  130  136  140  147  148  152  149  142   144 #>  [6508,]  125  130  136  140  147  148  152  149  142   144 #>  [6509,]  125  130  136  140  147  148  152  149  142   144 #>  [6510,]  125  130  136  140  147  148  152  149  142   144 #>  [6511,]  124  129  135  139  146  147  151  148  144   145 #>  [6512,]  125  130  136  140  147  148  152  149  142   144 #>  [6513,]  125  130  136  140  147  148  152  149  142   144 #>  [6514,]  124  129  135  139  146  147  151  148  144   145 #>  [6515,]  125  130  136  140  147  148  152  149  142   144 #>  [6516,]  124  129  135  139  146  147  151  148  143   147 #>  [6517,]  125  130  136  140  147  148  152  149  142   144 #>  [6518,]  125  130  136  140  147  148  152  149  142   144 #>  [6519,]  124  129  135  139  146  147  151  148  144   145 #>  [6520,]  125  130  136  140  147  148  152  149  142   144 #>  [6521,]  125  130  136  140  147  148  152  149  142   144 #>  [6522,]  125  130  136  140  147  148  152  149  142   144 #>  [6523,]  125  130  136  140  147  148  152  149  142   144 #>  [6524,]  125  130  136  140  147  148  152  149  142   144 #>  [6525,]  125  130  136  140  147  148  152  149  142   144 #>  [6526,]  125  130  136  140  147  148  152  149  142   144 #>  [6527,]  125  130  136  140  147  148  152  149  142   144 #>  [6528,]  124  129  135  139  146  147  151  148  143   146 #>  [6529,]  125  130  136  140  147  148  152  149  142   144 #>  [6530,]  125  130  136  140  147  148  152  149  142   144 #>  [6531,]  125  130  136  140  147  148  152  149  142   144 #>  [6532,]  125  130  136  140  147  148  152  149  142   144 #>  [6533,]  125  130  136  140  147  148  152  149  142   144 #>  [6534,]  124  129  135  139  146  147  151  148  143   146 #>  [6535,]  124  129  135  139  146  147  151  148  143   146 #>  [6536,]  125  130  136  140  147  148  152  149  142   144 #>  [6537,]  124  129  135  139  146  147  151  148  143   147 #>  [6538,]  124  129  135  139  146  147  151  148  144   145 #>  [6539,]  125  130  136  140  147  148  152  149  142   144 #>  [6540,]  125  130  136  140  147  148  152  149  142   144 #>  [6541,]  125  130  136  140  147  148  152  149  142   144 #>  [6542,]  124  129  135  139  146  147  151  148  144   145 #>  [6543,]  125  130  136  140  147  148  152  149  142   144 #>  [6544,]  125  130  136  140  147  148  152  149  142   144 #>  [6545,]  124  129  135  139  146  147  151  148  143   147 #>  [6546,]  125  130  136  140  147  148  152  149  142   144 #>  [6547,]  125  130  136  140  147  148  152  149  142   144 #>  [6548,]  125  130  136  140  147  148  152  149  142   144 #>  [6549,]  124  129  135  139  146  147  151  148  143   147 #>  [6550,]  125  130  136  140  147  148  152  149  142   144 #>  [6551,]  125  130  136  140  147  148  152  149  142   144 #>  [6552,]  124  129  135  139  146  147  151  148  143   146 #>  [6553,]  125  130  136  140  147  148  152  149  142   144 #>  [6554,]  125  130  136  140  147  148  152  149  142   144 #>  [6555,]  125  130  136  140  147  148  152  149  142   144 #>  [6556,]  125  130  136  140  147  148  152  149  142   144 #>  [6557,]  125  130  136  140  147  148  152  149  142   144 #>  [6558,]  125  130  136  140  147  148  152  149  142   144 #>  [6559,]  125  130  136  140  147  148  152  149  142   144 #>  [6560,]  125  130  136  140  147  148  152  149  142   144 #>  [6561,]  125  130  136  140  147  148  152  149  142   144 #>  [6562,]  125  130  136  140  147  148  152  149  142   144 #>  [6563,]  125  130  136  140  147  148  152  149  142   144 #>  [6564,]  124  129  135  139  146  147  151  148  143   147 #>  [6565,]  125  130  136  140  147  148  152  149  142   144 #>  [6566,]  125  130  136  140  147  148  152  149  142   144 #>  [6567,]  125  130  136  140  147  148  152  149  142   144 #>  [6568,]  124  129  135  139  146  147  151  148  144   145 #>  [6569,]  125  130  136  140  147  148  152  149  142   144 #>  [6570,]  125  130  136  140  147  148  152  149  142   144 #>  [6571,]  125  130  136  140  147  148  152  149  142   144 #>  [6572,]  124  129  135  139  146  147  151  148  143   146 #>  [6573,]  124  129  135  139  146  147  151  148  143   146 #>  [6574,]  125  130  136  140  147  148  152  149  142   144 #>  [6575,]  125  130  136  140  147  148  152  149  142   144 #>  [6576,]  125  130  136  140  147  148  152  149  142   144 #>  [6577,]  124  129  135  139  146  147  151  148  143   147 #>  [6578,]  125  130  136  140  147  148  152  149  142   144 #>  [6579,]  125  130  136  140  147  148  152  149  142   144 #>  [6580,]  125  130  136  140  147  148  152  149  142   144 #>  [6581,]  125  130  136  140  147  148  152  149  142   144 #>  [6582,]  125  130  136  140  147  148  152  149  142   144 #>  [6583,]  125  130  136  140  147  148  152  149  142   144 #>  [6584,]  125  130  136  140  147  148  152  149  142   144 #>  [6585,]  125  130  136  140  147  148  152  149  142   144 #>  [6586,]  125  130  136  140  147  148  152  149  142   144 #>  [6587,]  125  130  136  140  147  148  152  149  142   144 #>  [6588,]  125  130  136  140  147  148  152  149  142   144 #>  [6589,]  124  129  135  139  146  147  151  148  143   146 #>  [6590,]  125  130  136  140  147  148  152  149  142   144 #>  [6591,]  125  130  136  140  147  148  152  149  142   144 #>  [6592,]  125  130  136  140  147  148  152  149  142   144 #>  [6593,]  125  130  136  140  147  148  152  149  142   144 #>  [6594,]  124  129  135  139  146  147  151  148  143   146 #>  [6595,]  125  130  136  140  147  148  152  149  142   144 #>  [6596,]  124  129  135  139  146  147  151  148  144   145 #>  [6597,]  124  129  135  139  146  147  151  148  144   145 #>  [6598,]  125  130  136  140  147  148  152  149  142   144 #>  [6599,]  125  130  136  140  147  148  152  149  142   144 #>  [6600,]  124  129  135  139  146  147  151  148  143   147 #>  [6601,]  127  132  138  143  149  150  154  151  146   149 #>  [6602,]  126  131  137  141  148  149  153  150  145   148 #>  [6603,]  127  132  138  142  149  150  154  151  146   149 #>  [6604,]  127  132  138  142  149  150  154  151  146   149 #>  [6605,]  127  132  138  143  149  150  154  151  146   149 #>  [6606,]  126  131  137  141  148  149  153  150  145   148 #>  [6607,]  127  132  138  142  149  150  154  151  146   149 #>  [6608,]  127  132  138  142  149  150  154  151  146   149 #>  [6609,]  127  132  138  143  149  150  154  151  146   149 #>  [6610,]  127  132  138  143  149  150  154  151  146   149 #>  [6611,]  126  131  137  141  148  149  153  150  145   148 #>  [6612,]  126  131  137  141  148  149  153  150  145   148 #>  [6613,]  127  132  138  143  149  150  154  151  146   149 #>  [6614,]  127  132  138  143  149  150  154  151  146   149 #>  [6615,]  126  131  137  141  148  149  153  150  145   148 #>  [6616,]  127  132  138  143  149  150  154  151  146   149 #>  [6617,]  126  131  137  141  148  149  153  150  145   148 #>  [6618,]  127  132  138  143  149  150  154  151  146   149 #>  [6619,]  126  131  137  141  148  149  153  150  145   148 #>  [6620,]  127  132  138  143  149  150  154  151  146   149 #>  [6621,]  127  132  138  143  149  150  154  151  146   149 #>  [6622,]  127  132  138  143  149  150  154  151  146   149 #>  [6623,]  126  131  137  141  148  149  153  150  145   148 #>  [6624,]  127  132  138  143  149  150  154  151  146   149 #>  [6625,]  127  132  138  142  149  150  154  151  146   149 #>  [6626,]  126  131  137  141  148  149  153  150  145   148 #>  [6627,]  127  132  138  143  149  150  154  151  146   149 #>  [6628,]  127  132  138  143  149  150  154  151  146   149 #>  [6629,]  126  131  137  141  148  149  153  150  145   148 #>  [6630,]  126  131  137  141  148  149  153  150  145   148 #>  [6631,]  126  131  137  141  148  149  153  150  145   148 #>  [6632,]  127  132  138  143  149  150  154  151  146   149 #>  [6633,]  127  132  138  143  149  150  154  151  146   149 #>  [6634,]  126  131  137  141  148  149  153  150  145   148 #>  [6635,]  126  131  137  141  148  149  153  150  145   148 #>  [6636,]  127  132  138  143  149  150  154  151  146   149 #>  [6637,]  126  131  137  141  148  149  153  150  145   148 #>  [6638,]  127  132  138  143  149  150  154  151  146   149 #>  [6639,]  127  132  138  143  149  150  154  151  146   149 #>  [6640,]  127  132  138  142  149  150  154  151  146   149 #>  [6641,]  127  132  138  143  149  150  154  151  146   149 #>  [6642,]  126  131  137  141  148  149  153  150  145   148 #>  [6643,]  126  131  137  141  148  149  153  150  145   148 #>  [6644,]  126  131  137  141  148  149  153  150  145   148 #>  [6645,]  127  132  138  143  149  150  154  151  146   149 #>  [6646,]  126  131  137  141  148  149  153  150  145   148 #>  [6647,]  126  131  137  141  148  149  153  150  145   148 #>  [6648,]  126  131  137  141  148  149  153  150  145   148 #>  [6649,]  127  132  138  143  149  150  154  151  146   149 #>  [6650,]  127  132  138  143  149  150  154  151  146   149 #>  [6651,]  127  132  138  143  149  150  154  151  146   149 #>  [6652,]  127  132  138  142  149  150  154  151  146   149 #>  [6653,]  127  132  138  143  149  150  154  151  146   149 #>  [6654,]  127  132  138  143  149  150  154  151  146   149 #>  [6655,]  127  132  138  142  149  150  154  151  146   149 #>  [6656,]  126  131  137  141  148  149  153  150  145   148 #>  [6657,]  127  132  138  142  149  150  154  151  146   149 #>  [6658,]  127  132  138  143  149  150  154  151  146   149 #>  [6659,]  127  132  138  142  149  150  154  151  146   149 #>  [6660,]  126  131  137  141  148  149  153  150  145   148 #>  [6661,]  126  131  137  141  148  149  153  150  145   148 #>  [6662,]  127  132  138  143  149  150  154  151  146   149 #>  [6663,]  126  131  137  141  148  149  153  150  145   148 #>  [6664,]  126  131  137  141  148  149  153  150  145   148 #>  [6665,]  126  131  137  141  148  149  153  150  145   148 #>  [6666,]  126  131  137  141  148  149  153  150  145   148 #>  [6667,]  127  132  138  143  149  150  154  151  146   149 #>  [6668,]  126  131  137  141  148  149  153  150  145   148 #>  [6669,]  127  132  138  143  149  150  154  151  146   149 #>  [6670,]  126  131  137  141  148  149  153  150  145   148 #>  [6671,]  127  132  138  143  149  150  154  151  146   149 #>  [6672,]  127  132  138  143  149  150  154  151  146   149 #>  [6673,]  127  132  138  143  149  150  154  151  146   149 #>  [6674,]  127  132  138  142  149  150  154  151  146   149 #>  [6675,]  126  131  137  141  148  149  153  150  145   148 #>  [6676,]  127  132  138  143  149  150  154  151  146   149 #>  [6677,]  127  132  138  143  149  150  154  151  146   149 #>  [6678,]  126  131  137  141  148  149  153  150  145   148 #>  [6679,]  126  131  137  141  148  149  153  150  145   148 #>  [6680,]  127  132  138  142  149  150  154  151  146   149 #>  [6681,]  126  131  137  141  148  149  153  150  145   148 #>  [6682,]  127  132  138  143  149  150  154  151  146   149 #>  [6683,]  127  132  138  143  149  150  154  151  146   149 #>  [6684,]  127  132  138  143  149  150  154  151  146   149 #>  [6685,]  127  132  138  143  149  150  154  151  146   149 #>  [6686,]  127  132  138  142  149  150  154  151  146   149 #>  [6687,]  127  132  138  143  149  150  154  151  146   149 #>  [6688,]  127  132  138  143  149  150  154  151  146   149 #>  [6689,]  127  132  138  143  149  150  154  151  146   149 #>  [6690,]  127  132  138  143  149  150  154  151  146   149 #>  [6691,]  127  132  138  143  149  150  154  151  146   149 #>  [6692,]  126  131  137  141  148  149  153  150  145   148 #>  [6693,]  126  131  137  141  148  149  153  150  145   148 #>  [6694,]  126  131  137  141  148  149  153  150  145   148 #>  [6695,]  126  131  137  141  148  149  153  150  145   148 #>  [6696,]  126  131  137  141  148  149  153  150  145   148 #>  [6697,]  127  132  138  142  149  150  154  151  146   149 #>  [6698,]  127  132  138  142  149  150  154  151  146   149 #>  [6699,]  127  132  138  143  149  150  154  151  146   149 #>  [6700,]  126  131  137  141  148  149  153  150  145   148 #>  [6701,]  128  133  139  144  150  151  155  152  147   150 #>  [6702,]  128  133  139  144  150  151  155  152  147   150 #>  [6703,]  128  133  139  144  150  151  155  152  147   150 #>  [6704,]  128  133  139  144  150  151  155  152  147   150 #>  [6705,]  128  133  139  144  150  151  155  152  147   150 #>  [6706,]  128  133  139  144  150  151  155  152  147   150 #>  [6707,]  128  133  139  144  150  151  155  152  147   150 #>  [6708,]  128  133  139  144  150  151  155  152  147   150 #>  [6709,]  129  134  140  145  151  152  156  153  148   151 #>  [6710,]  128  133  139  144  150  151  155  152  147   150 #>  [6711,]  128  133  139  144  150  151  155  152  147   150 #>  [6712,]  128  133  139  144  150  151  155  152  147   150 #>  [6713,]  129  134  140  145  151  152  156  153  148   151 #>  [6714,]  128  133  139  144  150  151  155  152  147   150 #>  [6715,]  128  133  139  144  150  151  155  152  147   150 #>  [6716,]  128  133  139  144  150  151  155  152  147   150 #>  [6717,]  129  134  140  145  151  152  156  153  148   151 #>  [6718,]  129  134  140  145  151  152  156  153  148   151 #>  [6719,]  128  133  139  144  150  151  155  152  147   150 #>  [6720,]  128  133  139  144  150  151  155  152  147   150 #>  [6721,]  128  133  139  144  150  151  155  152  147   150 #>  [6722,]  128  133  139  144  150  151  155  152  147   150 #>  [6723,]  128  133  139  144  150  151  155  152  147   150 #>  [6724,]  128  133  139  144  150  151  155  152  147   150 #>  [6725,]  128  133  139  144  150  151  155  152  147   150 #>  [6726,]  128  133  139  144  150  151  155  152  147   150 #>  [6727,]  129  134  140  145  151  152  156  153  148   151 #>  [6728,]  128  133  139  144  150  151  155  152  147   150 #>  [6729,]  128  133  139  144  150  151  155  152  147   150 #>  [6730,]  128  133  139  144  150  151  155  152  147   150 #>  [6731,]  128  133  139  144  150  151  155  152  147   150 #>  [6732,]  128  133  139  144  150  151  155  152  147   150 #>  [6733,]  128  133  139  144  150  151  155  152  147   150 #>  [6734,]  128  133  139  144  150  151  155  152  147   150 #>  [6735,]  128  133  139  144  150  151  155  152  147   150 #>  [6736,]  128  133  139  144  150  151  155  152  147   150 #>  [6737,]  128  133  139  144  150  151  155  152  147   150 #>  [6738,]  128  133  139  144  150  151  155  152  147   150 #>  [6739,]  128  133  139  144  150  151  155  152  147   150 #>  [6740,]  128  133  139  144  150  151  155  152  147   150 #>  [6741,]  128  133  139  144  150  151  155  152  147   150 #>  [6742,]  129  134  140  145  151  152  156  153  148   151 #>  [6743,]  128  133  139  144  150  151  155  152  147   150 #>  [6744,]  128  133  139  144  150  151  155  152  147   150 #>  [6745,]  128  133  139  144  150  151  155  152  147   150 #>  [6746,]  128  133  139  144  150  151  155  152  147   150 #>  [6747,]  128  133  139  144  150  151  155  152  147   150 #>  [6748,]  128  133  139  144  150  151  155  152  147   150 #>  [6749,]  128  133  139  144  150  151  155  152  147   150 #>  [6750,]  128  133  139  144  150  151  155  152  147   150 #>  [6751,]  129  134  140  145  151  152  156  153  148   151 #>  [6752,]  128  133  139  144  150  151  155  152  147   150 #>  [6753,]  129  134  140  145  151  152  156  153  148   151 #>  [6754,]  128  133  139  144  150  151  155  152  147   150 #>  [6755,]  128  133  139  144  150  151  155  152  147   150 #>  [6756,]  128  133  139  144  150  151  155  152  147   150 #>  [6757,]  128  133  139  144  150  151  155  152  147   150 #>  [6758,]  128  133  139  144  150  151  155  152  147   150 #>  [6759,]  128  133  139  144  150  151  155  152  147   150 #>  [6760,]  128  133  139  144  150  151  155  152  147   150 #>  [6761,]  128  133  139  144  150  151  155  152  147   150 #>  [6762,]  128  133  139  144  150  151  155  152  147   150 #>  [6763,]  128  133  139  144  150  151  155  152  147   150 #>  [6764,]  128  133  139  144  150  151  155  152  147   150 #>  [6765,]  129  134  140  145  151  152  156  153  148   151 #>  [6766,]  129  134  140  145  151  152  156  153  148   151 #>  [6767,]  128  133  139  144  150  151  155  152  147   150 #>  [6768,]  128  133  139  144  150  151  155  152  147   150 #>  [6769,]  128  133  139  144  150  151  155  152  147   150 #>  [6770,]  128  133  139  144  150  151  155  152  147   150 #>  [6771,]  128  133  139  144  150  151  155  152  147   150 #>  [6772,]  128  133  139  144  150  151  155  152  147   150 #>  [6773,]  128  133  139  144  150  151  155  152  147   150 #>  [6774,]  128  133  139  144  150  151  155  152  147   150 #>  [6775,]  128  133  139  144  150  151  155  152  147   150 #>  [6776,]  128  133  139  144  150  151  155  152  147   150 #>  [6777,]  128  133  139  144  150  151  155  152  147   150 #>  [6778,]  128  133  139  144  150  151  155  152  147   150 #>  [6779,]  129  134  140  145  151  152  156  153  148   151 #>  [6780,]  128  133  139  144  150  151  155  152  147   150 #>  [6781,]  128  133  139  144  150  151  155  152  147   150 #>  [6782,]  129  134  140  145  151  152  156  153  148   151 #>  [6783,]  128  133  139  144  150  151  155  152  147   150 #>  [6784,]  129  134  140  145  151  152  156  153  148   151 #>  [6785,]  128  133  139  144  150  151  155  152  147   150 #>  [6786,]  128  133  139  144  150  151  155  152  147   150 #>  [6787,]  128  133  139  144  150  151  155  152  147   150 #>  [6788,]  128  133  139  144  150  151  155  152  147   150 #>  [6789,]  128  133  139  144  150  151  155  152  147   150 #>  [6790,]  128  133  139  144  150  151  155  152  147   150 #>  [6791,]  129  134  140  145  151  152  156  153  148   151 #>  [6792,]  128  133  139  144  150  151  155  152  147   150 #>  [6793,]  129  134  140  145  151  152  156  153  148   151 #>  [6794,]  129  134  140  145  151  152  156  153  148   151 #>  [6795,]  128  133  139  144  150  151  155  152  147   150 #>  [6796,]  128  133  139  144  150  151  155  152  147   150 #>  [6797,]  128  133  139  144  150  151  155  152  147   150 #>  [6798,]  128  133  139  144  150  151  155  152  147   150 #>  [6799,]  128  133  139  144  150  151  155  152  147   150 #>  [6800,]  128  133  139  144  150  151  155  152  147   150 #>  [6801,]  130  135  141  146  152  153  157  154  149   152 #>  [6802,]  130  135  141  146  152  153  157  154  149   152 #>  [6803,]  130  135  141  146  152  153  157  154  149   152 #>  [6804,]  131  136  142  147  153  154  158  155  150   153 #>  [6805,]  130  135  141  146  152  153  157  154  149   152 #>  [6806,]  130  135  141  146  152  153  157  154  149   152 #>  [6807,]  130  135  141  146  152  153  157  154  149   152 #>  [6808,]  130  135  141  146  152  153  157  154  149   152 #>  [6809,]  130  135  141  146  152  153  157  154  149   152 #>  [6810,]  131  136  142  147  153  154  158  155  150   153 #>  [6811,]  130  135  141  146  152  153  157  154  149   152 #>  [6812,]  130  135  141  146  152  153  157  154  149   152 #>  [6813,]  130  135  141  146  152  153  157  154  149   152 #>  [6814,]  130  135  141  146  152  153  157  154  149   152 #>  [6815,]  130  135  141  146  152  153  157  154  149   152 #>  [6816,]  130  135  141  146  152  153  157  154  149   152 #>  [6817,]  130  135  141  146  152  153  157  154  149   152 #>  [6818,]  131  136  142  147  153  154  158  155  150   153 #>  [6819,]  130  135  141  146  152  153  157  154  149   152 #>  [6820,]  130  135  141  146  152  153  157  154  149   152 #>  [6821,]  131  136  142  147  153  154  158  155  150   153 #>  [6822,]  130  135  141  146  152  153  157  154  149   152 #>  [6823,]  130  135  141  146  152  153  157  154  149   152 #>  [6824,]  130  135  141  146  152  153  157  154  149   152 #>  [6825,]  131  136  142  147  153  154  158  155  150   153 #>  [6826,]  130  135  141  146  152  153  157  154  149   152 #>  [6827,]  130  135  141  146  152  153  157  154  149   152 #>  [6828,]  130  135  141  146  152  153  157  154  149   152 #>  [6829,]  130  135  141  146  152  153  157  154  149   152 #>  [6830,]  130  135  141  146  152  153  157  154  149   152 #>  [6831,]  130  135  141  146  152  153  157  154  149   152 #>  [6832,]  130  135  141  146  152  153  157  154  149   152 #>  [6833,]  130  135  141  146  152  153  157  154  149   152 #>  [6834,]  130  135  141  146  152  153  157  154  149   152 #>  [6835,]  130  135  141  146  152  153  157  154  149   152 #>  [6836,]  130  135  141  146  152  153  157  154  149   152 #>  [6837,]  130  135  141  146  152  153  157  154  149   152 #>  [6838,]  130  135  141  146  152  153  157  154  149   152 #>  [6839,]  131  136  142  147  153  154  158  155  150   153 #>  [6840,]  130  135  141  146  152  153  157  154  149   152 #>  [6841,]  130  135  141  146  152  153  157  154  149   152 #>  [6842,]  130  135  141  146  152  153  157  154  149   152 #>  [6843,]  131  136  142  147  153  154  158  155  150   153 #>  [6844,]  130  135  141  146  152  153  157  154  149   152 #>  [6845,]  131  136  142  147  153  154  158  155  150   153 #>  [6846,]  130  135  141  146  152  153  157  154  149   152 #>  [6847,]  130  135  141  146  152  153  157  154  149   152 #>  [6848,]  130  135  141  146  152  153  157  154  149   152 #>  [6849,]  130  135  141  146  152  153  157  154  149   152 #>  [6850,]  130  135  141  146  152  153  157  154  149   152 #>  [6851,]  130  135  141  146  152  153  157  154  149   152 #>  [6852,]  130  135  141  146  152  153  157  154  149   152 #>  [6853,]  131  136  142  147  153  154  158  155  150   153 #>  [6854,]  130  135  141  146  152  153  157  154  149   152 #>  [6855,]  130  135  141  146  152  153  157  154  149   152 #>  [6856,]  130  135  141  146  152  153  157  154  149   152 #>  [6857,]  130  135  141  146  152  153  157  154  149   152 #>  [6858,]  130  135  141  146  152  153  157  154  149   152 #>  [6859,]  130  135  141  146  152  153  157  154  149   152 #>  [6860,]  130  135  141  146  152  153  157  154  149   152 #>  [6861,]  131  136  142  147  153  154  158  155  150   153 #>  [6862,]  130  135  141  146  152  153  157  154  149   152 #>  [6863,]  130  135  141  146  152  153  157  154  149   152 #>  [6864,]  130  135  141  146  152  153  157  154  149   152 #>  [6865,]  130  135  141  146  152  153  157  154  149   152 #>  [6866,]  130  135  141  146  152  153  157  154  149   152 #>  [6867,]  130  135  141  146  152  153  157  154  149   152 #>  [6868,]  130  135  141  146  152  153  157  154  149   152 #>  [6869,]  130  135  141  146  152  153  157  154  149   152 #>  [6870,]  130  135  141  146  152  153  157  154  149   152 #>  [6871,]  130  135  141  146  152  153  157  154  149   152 #>  [6872,]  131  136  142  147  153  154  158  155  150   153 #>  [6873,]  131  136  142  147  153  154  158  155  150   153 #>  [6874,]  131  136  142  147  153  154  158  155  150   153 #>  [6875,]  131  136  142  147  153  154  158  155  150   153 #>  [6876,]  131  136  142  147  153  154  158  155  150   153 #>  [6877,]  131  136  142  147  153  154  158  155  150   153 #>  [6878,]  130  135  141  146  152  153  157  154  149   152 #>  [6879,]  130  135  141  146  152  153  157  154  149   152 #>  [6880,]  130  135  141  146  152  153  157  154  149   152 #>  [6881,]  130  135  141  146  152  153  157  154  149   152 #>  [6882,]  130  135  141  146  152  153  157  154  149   152 #>  [6883,]  130  135  141  146  152  153  157  154  149   152 #>  [6884,]  131  136  142  147  153  154  158  155  150   153 #>  [6885,]  130  135  141  146  152  153  157  154  149   152 #>  [6886,]  130  135  141  146  152  153  157  154  149   152 #>  [6887,]  130  135  141  146  152  153  157  154  149   152 #>  [6888,]  130  135  141  146  152  153  157  154  149   152 #>  [6889,]  130  135  141  146  152  153  157  154  149   152 #>  [6890,]  130  135  141  146  152  153  157  154  149   152 #>  [6891,]  130  135  141  146  152  153  157  154  149   152 #>  [6892,]  130  135  141  146  152  153  157  154  149   152 #>  [6893,]  130  135  141  146  152  153  157  154  149   152 #>  [6894,]  131  136  142  147  153  154  158  155  150   153 #>  [6895,]  131  136  142  147  153  154  158  155  150   153 #>  [6896,]  130  135  141  146  152  153  157  154  149   152 #>  [6897,]  130  135  141  146  152  153  157  154  149   152 #>  [6898,]  130  135  141  146  152  153  157  154  149   152 #>  [6899,]  130  135  141  146  152  153  157  154  149   152 #>  [6900,]  131  136  142  147  153  154  158  155  150   153 #>  [6901,]  132  137  143  148  154  156  160  157  152   155 #>  [6902,]  133  138  144  149  154  155  159  156  151   154 #>  [6903,]  133  138  144  149  154  155  159  156  151   154 #>  [6904,]  132  137  143  148  154  156  160  157  152   155 #>  [6905,]  133  138  144  149  154  156  160  157  152   155 #>  [6906,]  133  138  144  149  154  156  160  157  152   155 #>  [6907,]  133  138  144  149  154  155  159  156  151   154 #>  [6908,]  132  137  143  148  154  156  160  157  152   155 #>  [6909,]  132  137  143  148  154  156  160  157  152   155 #>  [6910,]  133  138  144  149  154  156  160  157  152   155 #>  [6911,]  132  137  143  148  154  156  160  157  152   155 #>  [6912,]  133  138  144  149  154  156  160  157  152   155 #>  [6913,]  132  137  143  148  154  155  159  156  151   154 #>  [6914,]  132  137  143  148  154  156  160  157  152   155 #>  [6915,]  132  137  143  148  154  156  160  157  152   155 #>  [6916,]  132  137  143  148  154  155  159  156  151   154 #>  [6917,]  132  137  143  148  154  156  160  157  152   155 #>  [6918,]  133  138  144  149  154  155  159  156  151   154 #>  [6919,]  133  138  144  149  154  155  159  156  151   154 #>  [6920,]  133  138  144  149  154  156  160  157  152   155 #>  [6921,]  132  137  143  148  154  155  159  156  151   154 #>  [6922,]  132  137  143  148  154  155  159  156  151   154 #>  [6923,]  133  138  144  149  154  155  159  156  151   154 #>  [6924,]  133  138  144  149  154  155  159  156  151   154 #>  [6925,]  133  138  144  149  154  156  160  157  152   155 #>  [6926,]  133  138  144  149  154  156  160  157  152   155 #>  [6927,]  132  137  143  148  154  156  160  157  152   155 #>  [6928,]  133  138  144  149  154  156  160  157  152   155 #>  [6929,]  133  138  144  149  154  156  160  157  152   155 #>  [6930,]  132  137  143  148  154  155  159  156  151   154 #>  [6931,]  133  138  144  149  154  155  159  156  151   154 #>  [6932,]  133  138  144  149  154  156  160  157  152   155 #>  [6933,]  133  138  144  149  154  156  160  157  152   155 #>  [6934,]  133  138  144  149  154  155  159  156  151   154 #>  [6935,]  132  137  143  148  154  155  159  156  151   154 #>  [6936,]  133  138  144  149  154  155  159  156  151   154 #>  [6937,]  132  137  143  148  154  155  159  156  151   154 #>  [6938,]  133  138  144  149  154  156  160  157  152   155 #>  [6939,]  133  138  144  149  154  155  159  156  151   154 #>  [6940,]  133  138  144  149  154  155  159  156  151   154 #>  [6941,]  132  137  143  148  154  156  160  157  152   155 #>  [6942,]  133  138  144  149  154  156  160  157  152   155 #>  [6943,]  132  137  143  148  154  156  160  157  152   155 #>  [6944,]  132  137  143  148  154  155  159  156  151   154 #>  [6945,]  132  137  143  148  154  156  160  157  152   155 #>  [6946,]  132  137  143  148  154  156  160  157  152   155 #>  [6947,]  133  138  144  149  154  155  159  156  151   154 #>  [6948,]  133  138  144  149  154  156  160  157  152   155 #>  [6949,]  132  137  143  148  154  155  159  156  151   154 #>  [6950,]  133  138  144  149  154  156  160  157  152   155 #>  [6951,]  133  138  144  149  154  156  160  157  152   155 #>  [6952,]  132  137  143  148  154  156  160  157  152   155 #>  [6953,]  133  138  144  149  154  156  160  157  152   155 #>  [6954,]  132  137  143  148  154  155  159  156  151   154 #>  [6955,]  132  137  143  148  154  156  160  157  152   155 #>  [6956,]  133  138  144  149  154  156  160  157  152   155 #>  [6957,]  133  138  144  149  154  156  160  157  152   155 #>  [6958,]  132  137  143  148  154  156  160  157  152   155 #>  [6959,]  133  138  144  149  154  156  160  157  152   155 #>  [6960,]  133  138  144  149  154  156  160  157  152   155 #>  [6961,]  133  138  144  149  154  156  160  157  152   155 #>  [6962,]  132  137  143  148  154  155  159  156  151   154 #>  [6963,]  133  138  144  149  154  156  160  157  152   155 #>  [6964,]  133  138  144  149  154  156  160  157  152   155 #>  [6965,]  133  138  144  149  154  156  160  157  152   155 #>  [6966,]  132  137  143  148  154  156  160  157  152   155 #>  [6967,]  132  137  143  148  154  156  160  157  152   155 #>  [6968,]  132  137  143  148  154  156  160  157  152   155 #>  [6969,]  132  137  143  148  154  156  160  157  152   155 #>  [6970,]  133  138  144  149  154  155  159  156  151   154 #>  [6971,]  133  138  144  149  154  156  160  157  152   155 #>  [6972,]  133  138  144  149  154  156  160  157  152   155 #>  [6973,]  133  138  144  149  154  156  160  157  152   155 #>  [6974,]  132  137  143  148  154  156  160  157  152   155 #>  [6975,]  133  138  144  149  154  156  160  157  152   155 #>  [6976,]  133  138  144  149  154  156  160  157  152   155 #>  [6977,]  133  138  144  149  154  155  159  156  151   154 #>  [6978,]  133  138  144  149  154  156  160  157  152   155 #>  [6979,]  132  137  143  148  154  155  159  156  151   154 #>  [6980,]  132  137  143  148  154  155  159  156  151   154 #>  [6981,]  132  137  143  148  154  156  160  157  152   155 #>  [6982,]  132  137  143  148  154  156  160  157  152   155 #>  [6983,]  132  137  143  148  154  155  159  156  151   154 #>  [6984,]  133  138  144  149  154  156  160  157  152   155 #>  [6985,]  132  137  143  148  154  156  160  157  152   155 #>  [6986,]  133  138  144  149  154  156  160  157  152   155 #>  [6987,]  132  137  143  148  154  156  160  157  152   155 #>  [6988,]  132  137  143  148  154  156  160  157  152   155 #>  [6989,]  132  137  143  148  154  156  160  157  152   155 #>  [6990,]  132  137  143  148  154  156  160  157  152   155 #>  [6991,]  132  137  143  148  154  156  160  157  152   155 #>  [6992,]  132  137  143  148  154  156  160  157  152   155 #>  [6993,]  133  138  144  149  154  155  159  156  151   154 #>  [6994,]  133  138  144  149  154  156  160  157  152   155 #>  [6995,]  132  137  143  148  154  155  159  156  151   154 #>  [6996,]  132  137  143  148  154  156  160  157  152   155 #>  [6997,]  133  138  144  149  154  156  160  157  152   155 #>  [6998,]  133  138  144  149  154  155  159  156  151   154 #>  [6999,]  132  137  143  148  154  156  160  157  152   155 #>  [7000,]  133  138  144  149  154  155  159  156  151   154 #>  [7001,]  135  140  146  151  155  157  161  158  153   157 #>  [7002,]  134  139  145  150  156  158  162  159  153   157 #>  [7003,]  134  139  145  150  156  158  162  159  153   156 #>  [7004,]  134  139  145  150  157  158  162  159  153   157 #>  [7005,]  134  139  145  150  157  158  162  159  153   157 #>  [7006,]  134  139  145  150  157  158  162  159  153   157 #>  [7007,]  134  139  145  150  156  158  162  159  153   157 #>  [7008,]  134  139  145  150  157  158  162  159  153   157 #>  [7009,]  134  139  145  150  157  158  162  159  153   157 #>  [7010,]  134  139  145  150  156  158  162  159  153   156 #>  [7011,]  134  139  145  150  157  158  162  159  153   156 #>  [7012,]  134  139  145  150  157  158  162  159  153   157 #>  [7013,]  134  139  145  150  156  158  162  159  153   157 #>  [7014,]  135  140  146  151  155  157  161  158  153   156 #>  [7015,]  135  140  146  151  155  157  161  158  153   157 #>  [7016,]  135  140  146  151  155  157  161  158  153   157 #>  [7017,]  134  139  145  150  156  158  162  159  153   157 #>  [7018,]  134  139  145  150  156  158  162  159  153   157 #>  [7019,]  134  139  145  150  156  158  162  159  153   157 #>  [7020,]  134  139  145  150  157  158  162  159  153   157 #>  [7021,]  134  139  145  150  156  158  162  159  153   157 #>  [7022,]  134  139  145  150  156  158  162  159  153   157 #>  [7023,]  134  139  145  150  156  158  162  159  153   157 #>  [7024,]  134  139  145  150  156  158  162  159  153   157 #>  [7025,]  134  139  145  150  156  158  162  159  153   157 #>  [7026,]  134  139  145  150  157  158  162  159  153   157 #>  [7027,]  134  139  145  150  157  158  162  159  153   157 #>  [7028,]  134  139  145  150  157  158  162  159  153   157 #>  [7029,]  134  139  145  150  156  158  162  159  153   157 #>  [7030,]  134  139  145  150  156  158  162  159  153   157 #>  [7031,]  134  139  145  150  156  158  162  159  153   157 #>  [7032,]  134  139  145  150  156  158  162  159  153   156 #>  [7033,]  134  139  145  150  157  158  162  159  153   157 #>  [7034,]  134  139  145  150  156  158  162  159  153   157 #>  [7035,]  134  139  145  150  156  158  162  159  153   157 #>  [7036,]  134  139  145  150  156  158  162  159  153   157 #>  [7037,]  134  139  145  150  156  158  162  159  153   157 #>  [7038,]  134  139  145  150  157  158  162  159  153   157 #>  [7039,]  134  139  145  150  156  158  162  159  153   157 #>  [7040,]  134  139  145  150  156  158  162  159  153   156 #>  [7041,]  135  140  146  151  155  157  161  158  153   157 #>  [7042,]  134  139  145  150  157  158  162  159  153   157 #>  [7043,]  134  139  145  150  157  158  162  159  153   157 #>  [7044,]  135  140  146  151  155  157  161  158  153   157 #>  [7045,]  134  139  145  150  157  158  162  159  153   157 #>  [7046,]  134  139  145  150  157  158  162  159  153   157 #>  [7047,]  134  139  145  150  156  158  162  159  153   157 #>  [7048,]  134  139  145  150  156  158  162  159  153   156 #>  [7049,]  134  139  145  150  156  158  162  159  153   157 #>  [7050,]  135  140  146  151  155  157  161  158  153   157 #>  [7051,]  134  139  145  150  157  158  162  159  153   157 #>  [7052,]  134  139  145  150  157  158  162  159  153   157 #>  [7053,]  134  139  145  150  157  158  162  159  153   157 #>  [7054,]  134  139  145  150  156  158  162  159  153   157 #>  [7055,]  134  139  145  150  157  158  162  159  153   157 #>  [7056,]  134  139  145  150  157  158  162  159  153   157 #>  [7057,]  134  139  145  150  157  158  162  159  153   157 #>  [7058,]  134  139  145  150  157  158  162  159  153   157 #>  [7059,]  135  140  146  151  155  157  161  158  153   157 #>  [7060,]  134  139  145  150  157  158  162  159  153   157 #>  [7061,]  134  139  145  150  157  158  162  159  153   157 #>  [7062,]  134  139  145  150  156  158  162  159  153   157 #>  [7063,]  134  139  145  150  157  158  162  159  153   157 #>  [7064,]  134  139  145  150  157  158  162  159  153   157 #>  [7065,]  134  139  145  150  157  158  162  159  153   157 #>  [7066,]  134  139  145  150  157  158  162  159  153   157 #>  [7067,]  134  139  145  150  157  158  162  159  153   157 #>  [7068,]  134  139  145  150  157  158  162  159  153   157 #>  [7069,]  134  139  145  150  157  158  162  159  153   157 #>  [7070,]  135  140  146  151  155  157  161  158  153   156 #>  [7071,]  134  139  145  150  157  158  162  159  153   157 #>  [7072,]  134  139  145  150  157  158  162  159  153   157 #>  [7073,]  135  140  146  151  155  157  161  158  153   157 #>  [7074,]  134  139  145  150  157  158  162  159  153   157 #>  [7075,]  134  139  145  150  157  158  162  159  153   157 #>  [7076,]  134  139  145  150  157  158  162  159  153   157 #>  [7077,]  134  139  145  150  156  158  162  159  153   157 #>  [7078,]  134  139  145  150  157  158  162  159  153   157 #>  [7079,]  134  139  145  150  156  158  162  159  153   157 #>  [7080,]  134  139  145  150  156  158  162  159  153   157 #>  [7081,]  134  139  145  150  157  158  162  159  153   157 #>  [7082,]  134  139  145  150  157  158  162  159  153   157 #>  [7083,]  134  139  145  150  156  158  162  159  153   157 #>  [7084,]  134  139  145  150  157  158  162  159  153   157 #>  [7085,]  134  139  145  150  156  158  162  159  153   157 #>  [7086,]  134  139  145  150  156  158  162  159  153   157 #>  [7087,]  134  139  145  150  157  158  162  159  153   157 #>  [7088,]  134  139  145  150  157  158  162  159  153   157 #>  [7089,]  134  139  145  150  157  158  162  159  153   157 #>  [7090,]  134  139  145  150  157  158  162  159  153   157 #>  [7091,]  134  139  145  150  157  158  162  159  153   157 #>  [7092,]  134  139  145  150  157  158  162  159  153   157 #>  [7093,]  134  139  145  150  156  158  162  159  153   157 #>  [7094,]  134  139  145  150  157  158  162  159  153   157 #>  [7095,]  134  139  145  150  156  158  162  159  153   157 #>  [7096,]  135  140  146  151  155  157  161  158  153   157 #>  [7097,]  134  139  145  150  157  158  162  159  153   157 #>  [7098,]  134  139  145  150  156  158  162  159  153   157 #>  [7099,]  135  140  146  151  155  157  161  158  153   157 #>  [7100,]  134  139  145  150  156  158  162  159  153   157 #>  [7101,]  137  142  148  153  158  159  163  160  154   158 #>  [7102,]  137  142  148  153  158  159  163  160  154   158 #>  [7103,]  136  141  147  152  158  159  163  160  154   158 #>  [7104,]  137  142  148  153  158  160  164  161  155   159 #>  [7105,]  137  142  148  153  158  159  163  160  154   158 #>  [7106,]  137  142  148  153  158  160  164  161  155   159 #>  [7107,]  137  142  148  153  158  159  163  160  154   158 #>  [7108,]  137  142  148  153  158  159  163  160  154   158 #>  [7109,]  137  142  148  153  158  160  164  161  155   159 #>  [7110,]  137  142  148  153  158  160  164  161  155   159 #>  [7111,]  136  141  147  152  158  160  164  161  155   159 #>  [7112,]  136  141  147  152  158  160  164  161  155   159 #>  [7113,]  137  142  148  153  158  159  163  160  154   158 #>  [7114,]  136  141  147  152  158  160  164  161  155   159 #>  [7115,]  137  142  148  153  158  160  164  161  155   159 #>  [7116,]  137  142  148  153  158  159  163  160  154   158 #>  [7117,]  137  142  148  153  158  159  163  160  154   158 #>  [7118,]  137  142  148  153  158  160  164  161  155   159 #>  [7119,]  136  141  147  152  158  160  164  161  155   159 #>  [7120,]  136  141  147  152  158  159  163  160  154   158 #>  [7121,]  137  142  148  153  158  160  164  161  155   159 #>  [7122,]  136  141  147  152  158  159  163  160  154   158 #>  [7123,]  137  142  148  153  158  159  163  160  154   158 #>  [7124,]  137  142  148  153  158  159  163  160  154   158 #>  [7125,]  137  142  148  153  158  159  163  160  154   158 #>  [7126,]  136  141  147  152  158  160  164  161  155   159 #>  [7127,]  137  142  148  153  158  160  164  161  155   159 #>  [7128,]  137  142  148  153  158  159  163  160  154   158 #>  [7129,]  136  141  147  152  158  159  163  160  154   158 #>  [7130,]  136  141  147  152  158  160  164  161  155   159 #>  [7131,]  137  142  148  153  158  160  164  161  155   159 #>  [7132,]  136  141  147  152  158  160  164  161  155   159 #>  [7133,]  137  142  148  153  158  160  164  161  155   159 #>  [7134,]  137  142  148  153  158  160  164  161  155   159 #>  [7135,]  137  142  148  153  158  159  163  160  154   158 #>  [7136,]  136  141  147  152  158  160  164  161  155   159 #>  [7137,]  137  142  148  153  158  159  163  160  154   158 #>  [7138,]  137  142  148  153  158  160  164  161  155   159 #>  [7139,]  137  142  148  153  158  159  163  160  154   158 #>  [7140,]  136  141  147  152  158  159  163  160  154   158 #>  [7141,]  136  141  147  152  158  160  164  161  155   159 #>  [7142,]  136  141  147  152  158  160  164  161  155   159 #>  [7143,]  137  142  148  153  158  159  163  160  154   158 #>  [7144,]  137  142  148  153  158  159  163  160  154   158 #>  [7145,]  137  142  148  153  158  159  163  160  154   158 #>  [7146,]  137  142  148  153  158  159  163  160  154   158 #>  [7147,]  137  142  148  153  158  159  163  160  154   158 #>  [7148,]  136  141  147  152  158  160  164  161  155   159 #>  [7149,]  137  142  148  153  158  159  163  160  154   158 #>  [7150,]  137  142  148  153  158  159  163  160  154   158 #>  [7151,]  136  141  147  152  158  159  163  160  154   158 #>  [7152,]  137  142  148  153  158  160  164  161  155   159 #>  [7153,]  137  142  148  153  158  159  163  160  154   158 #>  [7154,]  136  141  147  152  158  159  163  160  154   158 #>  [7155,]  137  142  148  153  158  159  163  160  154   158 #>  [7156,]  137  142  148  153  158  159  163  160  154   158 #>  [7157,]  137  142  148  153  158  159  163  160  154   158 #>  [7158,]  137  142  148  153  158  160  164  161  155   159 #>  [7159,]  137  142  148  153  158  159  163  160  154   158 #>  [7160,]  136  141  147  152  158  160  164  161  155   159 #>  [7161,]  137  142  148  153  158  160  164  161  155   159 #>  [7162,]  136  141  147  152  158  160  164  161  155   159 #>  [7163,]  136  141  147  152  158  159  163  160  154   158 #>  [7164,]  137  142  148  153  158  160  164  161  155   159 #>  [7165,]  137  142  148  153  158  159  163  160  154   158 #>  [7166,]  136  141  147  152  158  159  163  160  154   158 #>  [7167,]  137  142  148  153  158  160  164  161  155   159 #>  [7168,]  136  141  147  152  158  160  164  161  155   159 #>  [7169,]  136  141  147  152  158  160  164  161  155   159 #>  [7170,]  137  142  148  153  158  159  163  160  154   158 #>  [7171,]  137  142  148  153  158  159  163  160  154   158 #>  [7172,]  137  142  148  153  158  159  163  160  154   158 #>  [7173,]  137  142  148  153  158  160  164  161  155   159 #>  [7174,]  137  142  148  153  158  160  164  161  155   159 #>  [7175,]  137  142  148  153  158  160  164  161  155   159 #>  [7176,]  137  142  148  153  158  159  163  160  154   158 #>  [7177,]  137  142  148  153  158  159  163  160  154   158 #>  [7178,]  137  142  148  153  158  159  163  160  154   158 #>  [7179,]  137  142  148  153  158  159  163  160  154   158 #>  [7180,]  136  141  147  152  158  160  164  161  155   159 #>  [7181,]  136  141  147  152  158  159  163  160  154   158 #>  [7182,]  137  142  148  153  158  160  164  161  155   159 #>  [7183,]  136  141  147  152  158  159  163  160  154   158 #>  [7184,]  137  142  148  153  158  159  163  160  154   158 #>  [7185,]  137  142  148  153  158  160  164  161  155   159 #>  [7186,]  137  142  148  153  158  159  163  160  154   158 #>  [7187,]  137  142  148  153  158  159  163  160  154   158 #>  [7188,]  137  142  148  153  158  159  163  160  154   158 #>  [7189,]  136  141  147  152  158  159  163  160  154   158 #>  [7190,]  137  142  148  153  158  159  163  160  154   158 #>  [7191,]  136  141  147  152  158  159  163  160  154   158 #>  [7192,]  137  142  148  153  158  160  164  161  155   159 #>  [7193,]  137  142  148  153  158  160  164  161  155   159 #>  [7194,]  137  142  148  153  158  159  163  160  154   158 #>  [7195,]  137  142  148  153  158  159  163  160  154   158 #>  [7196,]  137  142  148  153  158  160  164  161  155   159 #>  [7197,]  137  142  148  153  158  160  164  161  155   159 #>  [7198,]  137  142  148  153  158  159  163  160  154   158 #>  [7199,]  137  142  148  153  158  160  164  161  155   159 #>  [7200,]  137  142  148  153  158  159  163  160  154   158 #>  [7201,]  138  143  149  154  159  161  165  162  156   160 #>  [7202,]  139  144  150  155  160  162  166  163  157   161 #>  [7203,]  139  144  150  155  160  162  166  163  157   161 #>  [7204,]  138  143  149  154  159  161  165  162  156   160 #>  [7205,]  138  143  149  154  159  161  165  162  156   160 #>  [7206,]  139  144  150  155  160  162  166  163  157   161 #>  [7207,]  139  144  150  155  160  162  166  163  157   161 #>  [7208,]  138  143  149  154  159  161  165  162  156   160 #>  [7209,]  138  143  149  154  159  161  165  162  156   160 #>  [7210,]  139  144  150  155  160  162  166  163  157   161 #>  [7211,]  138  143  149  154  159  161  165  162  156   160 #>  [7212,]  139  144  150  155  160  162  166  163  157   161 #>  [7213,]  138  143  149  154  159  161  165  162  156   160 #>  [7214,]  138  143  149  154  159  161  165  162  156   160 #>  [7215,]  138  143  149  154  159  161  165  162  156   160 #>  [7216,]  138  143  149  154  159  161  165  162  156   160 #>  [7217,]  138  143  149  154  159  161  165  162  156   160 #>  [7218,]  139  144  150  155  160  162  166  163  157   161 #>  [7219,]  139  144  150  155  160  162  166  163  157   161 #>  [7220,]  139  144  150  155  160  162  166  163  157   161 #>  [7221,]  138  143  149  154  159  161  165  162  156   160 #>  [7222,]  138  143  149  154  159  161  165  162  156   160 #>  [7223,]  139  144  150  155  160  162  166  163  157   161 #>  [7224,]  138  143  149  154  159  161  165  162  156   160 #>  [7225,]  139  144  150  155  160  162  166  163  157   161 #>  [7226,]  138  143  149  154  159  161  165  162  156   160 #>  [7227,]  138  143  149  154  159  161  165  162  156   160 #>  [7228,]  139  144  150  155  160  162  166  163  157   161 #>  [7229,]  139  144  150  155  160  162  166  163  157   161 #>  [7230,]  138  143  149  154  159  161  165  162  156   160 #>  [7231,]  139  144  150  155  160  162  166  163  157   161 #>  [7232,]  139  144  150  155  160  162  166  163  157   161 #>  [7233,]  139  144  150  155  160  162  166  163  157   161 #>  [7234,]  139  144  150  155  160  162  166  163  157   161 #>  [7235,]  138  143  149  154  159  161  165  162  156   160 #>  [7236,]  139  144  150  155  160  162  166  163  157   161 #>  [7237,]  138  143  149  154  159  161  165  162  156   160 #>  [7238,]  138  143  149  154  159  161  165  162  156   160 #>  [7239,]  139  144  150  155  160  162  166  163  157   161 #>  [7240,]  139  144  150  155  160  162  166  163  157   161 #>  [7241,]  138  143  149  154  159  161  165  162  156   160 #>  [7242,]  139  144  150  155  160  162  166  163  157   161 #>  [7243,]  138  143  149  154  159  161  165  162  156   160 #>  [7244,]  138  143  149  154  159  161  165  162  156   160 #>  [7245,]  138  143  149  154  159  161  165  162  156   160 #>  [7246,]  138  143  149  154  159  161  165  162  156   160 #>  [7247,]  139  144  150  155  160  162  166  163  157   161 #>  [7248,]  139  144  150  155  160  162  166  163  157   161 #>  [7249,]  138  143  149  154  159  161  165  162  156   160 #>  [7250,]  139  144  150  155  160  162  166  163  157   161 #>  [7251,]  138  143  149  154  159  161  165  162  156   160 #>  [7252,]  138  143  149  154  159  161  165  162  156   160 #>  [7253,]  139  144  150  155  160  162  166  163  157   161 #>  [7254,]  138  143  149  154  159  161  165  162  156   160 #>  [7255,]  138  143  149  154  159  161  165  162  156   160 #>  [7256,]  139  144  150  155  160  162  166  163  157   161 #>  [7257,]  139  144  150  155  160  162  166  163  157   161 #>  [7258,]  138  143  149  154  159  161  165  162  156   160 #>  [7259,]  138  143  149  154  159  161  165  162  156   160 #>  [7260,]  139  144  150  155  160  162  166  163  157   161 #>  [7261,]  139  144  150  155  160  162  166  163  157   161 #>  [7262,]  138  143  149  154  159  161  165  162  156   160 #>  [7263,]  139  144  150  155  160  162  166  163  157   161 #>  [7264,]  139  144  150  155  160  162  166  163  157   161 #>  [7265,]  139  144  150  155  160  162  166  163  157   161 #>  [7266,]  138  143  149  154  159  161  165  162  156   160 #>  [7267,]  138  143  149  154  159  161  165  162  156   160 #>  [7268,]  138  143  149  154  159  161  165  162  156   160 #>  [7269,]  138  143  149  154  159  161  165  162  156   160 #>  [7270,]  139  144  150  155  160  162  166  163  157   161 #>  [7271,]  139  144  150  155  160  162  166  163  157   161 #>  [7272,]  139  144  150  155  160  162  166  163  157   161 #>  [7273,]  139  144  150  155  160  162  166  163  157   161 #>  [7274,]  138  143  149  154  159  161  165  162  156   160 #>  [7275,]  139  144  150  155  160  162  166  163  157   161 #>  [7276,]  139  144  150  155  160  162  166  163  157   161 #>  [7277,]  139  144  150  155  160  162  166  163  157   161 #>  [7278,]  139  144  150  155  160  162  166  163  157   161 #>  [7279,]  138  143  149  154  159  161  165  162  156   160 #>  [7280,]  138  143  149  154  159  161  165  162  156   160 #>  [7281,]  138  143  149  154  159  161  165  162  156   160 #>  [7282,]  138  143  149  154  159  161  165  162  156   160 #>  [7283,]  138  143  149  154  159  161  165  162  156   160 #>  [7284,]  139  144  150  155  160  162  166  163  157   161 #>  [7285,]  138  143  149  154  159  161  165  162  156   160 #>  [7286,]  139  144  150  155  160  162  166  163  157   161 #>  [7287,]  138  143  149  154  159  161  165  162  156   160 #>  [7288,]  138  143  149  154  159  161  165  162  156   160 #>  [7289,]  138  143  149  154  159  161  165  162  156   160 #>  [7290,]  138  143  149  154  159  161  165  162  156   160 #>  [7291,]  138  143  149  154  159  161  165  162  156   160 #>  [7292,]  138  143  149  154  159  161  165  162  156   160 #>  [7293,]  139  144  150  155  160  162  166  163  157   161 #>  [7294,]  139  144  150  155  160  162  166  163  157   161 #>  [7295,]  138  143  149  154  159  161  165  162  156   160 #>  [7296,]  138  143  149  154  159  161  165  162  156   160 #>  [7297,]  139  144  150  155  160  162  166  163  157   161 #>  [7298,]  139  144  150  155  160  162  166  163  157   161 #>  [7299,]  138  143  149  154  159  161  165  162  156   160 #>  [7300,]  139  144  150  155  160  162  166  163  157   161 #>  [7301,]  141  146  151  156  161  163  167  164  158   162 #>  [7302,]  141  146  151  157  162  165  168  165  159   163 #>  [7303,]  141  146  151  156  161  163  167  164  158   162 #>  [7304,]  141  146  151  157  162  164  168  165  159   163 #>  [7305,]  141  146  151  157  162  165  168  165  159   163 #>  [7306,]  141  146  151  156  161  163  167  164  158   162 #>  [7307,]  141  146  151  157  162  165  168  165  159   163 #>  [7308,]  141  146  151  157  162  164  168  165  159   163 #>  [7309,]  141  146  151  157  162  165  168  165  159   163 #>  [7310,]  141  146  151  157  162  165  168  165  159   163 #>  [7311,]  141  146  151  156  161  163  167  164  158   162 #>  [7312,]  141  146  151  157  162  165  168  165  159   163 #>  [7313,]  141  146  151  157  162  165  168  165  159   163 #>  [7314,]  141  146  151  156  161  163  167  164  158   162 #>  [7315,]  140  145  151  157  162  165  168  165  159   163 #>  [7316,]  141  146  151  156  161  163  167  164  158   162 #>  [7317,]  141  146  151  157  162  165  168  165  159   163 #>  [7318,]  141  146  151  157  162  165  168  165  159   163 #>  [7319,]  141  146  151  156  161  163  167  164  158   162 #>  [7320,]  141  146  151  157  162  165  168  165  159   163 #>  [7321,]  141  146  151  157  162  165  168  165  159   163 #>  [7322,]  141  146  151  157  162  165  168  165  159   163 #>  [7323,]  141  146  151  157  162  165  168  165  159   163 #>  [7324,]  141  146  151  157  162  165  168  165  159   163 #>  [7325,]  141  146  151  157  162  165  168  165  159   163 #>  [7326,]  141  146  151  156  161  163  167  164  158   162 #>  [7327,]  141  146  151  157  162  165  168  165  159   163 #>  [7328,]  141  146  151  156  161  163  167  164  158   162 #>  [7329,]  141  146  151  157  162  165  168  165  159   163 #>  [7330,]  141  146  151  157  162  165  168  165  159   163 #>  [7331,]  140  145  151  157  162  165  168  165  159   163 #>  [7332,]  141  146  151  157  162  165  168  165  159   163 #>  [7333,]  141  146  151  157  162  165  168  165  159   163 #>  [7334,]  140  145  151  156  161  163  167  164  158   162 #>  [7335,]  141  146  151  156  161  163  167  164  158   162 #>  [7336,]  141  146  151  157  162  165  168  165  159   163 #>  [7337,]  141  146  151  156  161  163  167  164  158   162 #>  [7338,]  141  146  151  156  161  163  167  164  158   162 #>  [7339,]  141  146  151  157  162  165  168  165  159   163 #>  [7340,]  141  146  151  157  162  165  168  165  159   163 #>  [7341,]  141  146  151  157  162  165  168  165  159   163 #>  [7342,]  140  145  151  156  161  163  167  164  158   162 #>  [7343,]  140  145  151  157  162  165  168  165  159   163 #>  [7344,]  140  145  151  157  162  165  168  165  159   163 #>  [7345,]  141  146  151  156  161  163  167  164  158   162 #>  [7346,]  141  146  151  157  162  165  168  165  159   163 #>  [7347,]  141  146  151  157  162  165  168  165  159   163 #>  [7348,]  141  146  151  157  162  165  168  165  159   163 #>  [7349,]  141  146  151  156  161  163  167  164  158   162 #>  [7350,]  141  146  151  157  162  165  168  165  159   163 #>  [7351,]  141  146  151  157  162  165  168  165  159   163 #>  [7352,]  141  146  151  156  161  163  167  164  158   162 #>  [7353,]  141  146  151  157  162  165  168  165  159   163 #>  [7354,]  141  146  151  157  162  165  168  165  159   163 #>  [7355,]  141  146  151  157  162  164  168  165  159   163 #>  [7356,]  141  146  151  156  161  163  167  164  158   162 #>  [7357,]  141  146  151  157  162  165  168  165  159   163 #>  [7358,]  141  146  151  157  162  165  168  165  159   163 #>  [7359,]  141  146  151  156  161  163  167  164  158   162 #>  [7360,]  141  146  151  157  162  165  168  165  159   163 #>  [7361,]  141  146  151  157  162  165  168  165  159   163 #>  [7362,]  141  146  151  157  162  164  168  165  159   163 #>  [7363,]  140  145  151  157  162  165  168  165  159   163 #>  [7364,]  141  146  151  156  161  163  167  164  158   162 #>  [7365,]  141  146  151  156  161  163  167  164  158   162 #>  [7366,]  141  146  151  157  162  165  168  165  159   163 #>  [7367,]  141  146  151  157  162  165  168  165  159   163 #>  [7368,]  141  146  151  156  161  163  167  164  158   162 #>  [7369,]  141  146  151  156  161  163  167  164  158   162 #>  [7370,]  141  146  151  157  162  165  168  165  159   163 #>  [7371,]  141  146  151  157  162  165  168  165  159   163 #>  [7372,]  141  146  151  156  161  163  167  164  158   162 #>  [7373,]  141  146  151  156  161  163  167  164  158   162 #>  [7374,]  141  146  151  157  162  165  168  165  159   163 #>  [7375,]  140  145  151  157  162  165  168  165  159   163 #>  [7376,]  141  146  151  157  162  165  168  165  159   163 #>  [7377,]  141  146  151  156  161  163  167  164  158   162 #>  [7378,]  140  145  151  157  162  165  168  165  159   163 #>  [7379,]  141  146  151  156  161  163  167  164  158   162 #>  [7380,]  141  146  151  157  162  165  168  165  159   163 #>  [7381,]  141  146  151  157  162  165  168  165  159   163 #>  [7382,]  141  146  151  157  162  165  168  165  159   163 #>  [7383,]  141  146  151  157  162  165  168  165  159   163 #>  [7384,]  141  146  151  157  162  165  168  165  159   163 #>  [7385,]  141  146  151  157  162  165  168  165  159   163 #>  [7386,]  141  146  151  157  162  165  168  165  159   163 #>  [7387,]  141  146  151  157  162  165  168  165  159   163 #>  [7388,]  141  146  151  157  162  165  168  165  159   163 #>  [7389,]  141  146  151  156  161  163  167  164  158   162 #>  [7390,]  141  146  151  157  162  165  168  165  159   163 #>  [7391,]  141  146  151  157  162  164  168  165  159   163 #>  [7392,]  141  146  151  157  162  165  168  165  159   163 #>  [7393,]  141  146  151  157  162  165  168  165  159   163 #>  [7394,]  141  146  151  156  161  163  167  164  158   162 #>  [7395,]  140  145  151  157  162  165  168  165  159   163 #>  [7396,]  141  146  151  156  161  163  167  164  158   162 #>  [7397,]  141  146  151  156  161  163  167  164  158   162 #>  [7398,]  141  146  151  157  162  165  168  165  159   163 #>  [7399,]  141  146  151  157  162  165  168  165  159   163 #>  [7400,]  141  146  151  156  161  163  167  164  158   162 #>  [7401,]  142  147  152  158  163  168  171  168  162   164 #>  [7402,]  143  147  152  158  163  169  171  168  162   164 #>  [7403,]  142  147  152  158  163  168  171  168  162   164 #>  [7404,]  142  147  153  159  164  166  169  166  160   165 #>  [7405,]  142  147  152  158  163  169  171  168  162   164 #>  [7406,]  142  147  152  158  163  168  171  168  162   164 #>  [7407,]  142  147  153  159  164  166  169  166  160   165 #>  [7408,]  142  147  152  158  163  169  171  168  162   164 #>  [7409,]  143  147  152  158  163  169  171  168  162   164 #>  [7410,]  143  147  153  159  164  166  169  166  160   165 #>  [7411,]  142  147  152  158  163  168  171  168  162   164 #>  [7412,]  143  147  152  158  163  169  171  168  162   164 #>  [7413,]  142  147  153  160  165  167  170  167  161   165 #>  [7414,]  142  147  152  158  163  168  171  168  162   164 #>  [7415,]  142  147  153  160  165  167  170  167  161   165 #>  [7416,]  142  147  153  160  165  167  170  167  161   165 #>  [7417,]  142  147  153  160  165  167  170  167  161   165 #>  [7418,]  142  147  153  159  164  166  169  166  160   165 #>  [7419,]  142  147  152  158  163  168  171  168  162   164 #>  [7420,]  142  147  152  158  163  169  171  168  162   164 #>  [7421,]  143  147  153  160  165  167  170  167  161   165 #>  [7422,]  142  147  152  158  163  169  171  168  162   164 #>  [7423,]  142  147  153  159  164  166  169  166  160   165 #>  [7424,]  142  147  152  158  163  169  171  168  162   164 #>  [7425,]  142  147  153  159  164  166  169  166  160   165 #>  [7426,]  142  147  152  158  163  168  171  168  162   164 #>  [7427,]  142  147  153  159  164  166  169  166  160   165 #>  [7428,]  142  147  153  159  164  166  169  166  160   165 #>  [7429,]  143  147  152  158  163  169  171  168  162   164 #>  [7430,]  142  147  152  158  163  169  171  168  162   164 #>  [7431,]  142  147  152  158  163  169  171  168  162   164 #>  [7432,]  142  147  152  158  163  169  171  168  162   164 #>  [7433,]  143  147  152  158  163  169  171  168  162   164 #>  [7434,]  142  147  152  158  163  168  171  168  162   164 #>  [7435,]  142  147  152  158  163  168  171  168  162   164 #>  [7436,]  142  147  152  158  163  169  171  168  162   164 #>  [7437,]  142  147  152  158  163  168  171  168  162   164 #>  [7438,]  142  147  152  158  163  168  171  168  162   164 #>  [7439,]  142  147  153  159  164  166  169  166  160   165 #>  [7440,]  142  147  152  158  163  169  171  168  162   164 #>  [7441,]  142  147  152  158  163  169  171  168  162   164 #>  [7442,]  142  147  152  158  163  168  171  168  162   164 #>  [7443,]  142  147  153  159  164  166  169  166  160   165 #>  [7444,]  142  147  152  158  163  169  171  168  162   164 #>  [7445,]  142  147  153  159  164  166  169  166  160   165 #>  [7446,]  142  147  153  159  164  166  169  166  160   165 #>  [7447,]  142  147  153  159  164  166  169  166  160   165 #>  [7448,]  142  147  152  158  163  169  171  168  162   164 #>  [7449,]  142  147  152  158  163  168  171  168  162   164 #>  [7450,]  142  147  152  158  163  169  171  168  162   164 #>  [7451,]  142  147  152  158  163  169  171  168  162   164 #>  [7452,]  142  147  152  158  163  168  171  168  162   164 #>  [7453,]  142  147  153  159  164  166  169  166  160   165 #>  [7454,]  142  147  152  158  163  169  171  168  162   164 #>  [7455,]  142  147  152  158  163  169  171  168  162   164 #>  [7456,]  142  147  153  159  164  166  169  166  160   165 #>  [7457,]  142  147  152  158  163  169  171  168  162   164 #>  [7458,]  142  147  152  158  163  169  171  168  162   164 #>  [7459,]  142  147  152  158  163  168  171  168  162   164 #>  [7460,]  143  147  152  158  163  169  171  168  162   164 #>  [7461,]  142  147  153  160  165  167  170  167  161   165 #>  [7462,]  142  147  152  158  163  169  171  168  162   164 #>  [7463,]  142  147  152  158  163  169  171  168  162   164 #>  [7464,]  142  147  153  159  164  166  169  166  160   165 #>  [7465,]  142  147  152  158  163  169  171  168  162   164 #>  [7466,]  142  147  152  158  163  169  171  168  162   164 #>  [7467,]  142  147  152  158  163  169  171  168  162   164 #>  [7468,]  142  147  152  158  163  168  171  168  162   164 #>  [7469,]  142  147  152  158  163  169  171  168  162   164 #>  [7470,]  143  147  152  158  163  169  171  168  162   164 #>  [7471,]  142  147  153  159  164  166  169  166  160   165 #>  [7472,]  142  147  153  159  164  166  169  166  160   165 #>  [7473,]  142  147  153  160  165  167  170  167  161   165 #>  [7474,]  142  147  153  159  164  166  169  166  160   165 #>  [7475,]  142  147  153  159  164  166  169  166  160   165 #>  [7476,]  142  147  153  160  165  167  170  167  161   165 #>  [7477,]  142  147  153  160  165  167  170  167  161   165 #>  [7478,]  142  147  152  158  163  169  171  168  162   164 #>  [7479,]  142  147  152  158  163  169  171  168  162   164 #>  [7480,]  142  147  152  158  163  169  171  168  162   164 #>  [7481,]  142  147  152  158  163  169  171  168  162   164 #>  [7482,]  142  147  153  159  164  166  169  166  160   165 #>  [7483,]  142  147  152  158  163  169  171  168  162   164 #>  [7484,]  142  147  153  159  164  166  169  166  160   165 #>  [7485,]  142  147  152  158  163  169  171  168  162   164 #>  [7486,]  143  147  152  158  163  169  171  168  162   164 #>  [7487,]  142  147  152  158  163  169  171  168  162   164 #>  [7488,]  142  147  153  159  164  166  169  166  160   165 #>  [7489,]  142  147  152  158  163  168  171  168  162   164 #>  [7490,]  142  147  152  158  163  169  171  168  162   164 #>  [7491,]  142  147  152  158  163  169  171  168  162   164 #>  [7492,]  142  147  152  158  163  169  171  168  162   164 #>  [7493,]  142  147  152  158  163  169  171  168  162   164 #>  [7494,]  142  147  153  159  164  166  169  166  160   165 #>  [7495,]  142  147  153  159  164  166  169  166  160   165 #>  [7496,]  142  147  152  158  163  168  171  168  162   164 #>  [7497,]  142  147  152  158  163  168  171  168  162   164 #>  [7498,]  142  147  152  158  163  169  171  168  162   164 #>  [7499,]  142  147  152  158  163  169  171  168  162   164 #>  [7500,]  142  147  153  159  164  166  169  166  160   165 #>  [7501,]  144  148  156  163  168  171  173  170  164   167 #>  [7502,]  144  148  156  163  168  171  173  170  164   167 #>  [7503,]  144  148  155  162  167  171  173  170  164   167 #>  [7504,]  144  148  155  162  167  171  173  170  164   167 #>  [7505,]  144  148  156  163  168  171  173  170  164   167 #>  [7506,]  145  149  154  161  166  170  172  169  163   166 #>  [7507,]  144  148  155  162  167  171  173  170  164   167 #>  [7508,]  145  149  154  161  166  170  172  169  163   166 #>  [7509,]  145  149  154  161  166  170  172  169  163   166 #>  [7510,]  144  148  156  163  168  171  173  170  164   167 #>  [7511,]  144  148  156  163  168  171  173  170  164   167 #>  [7512,]  145  149  154  161  166  170  172  169  163   166 #>  [7513,]  144  148  156  163  168  171  173  170  164   167 #>  [7514,]  144  148  156  163  168  171  173  170  164   167 #>  [7515,]  145  149  154  161  166  170  172  169  163   166 #>  [7516,]  144  148  156  163  168  171  173  170  164   167 #>  [7517,]  144  148  156  163  168  171  173  170  164   167 #>  [7518,]  144  148  156  163  168  171  173  170  164   167 #>  [7519,]  144  148  156  163  168  171  173  170  164   167 #>  [7520,]  144  148  156  163  168  171  173  170  164   167 #>  [7521,]  144  148  156  163  168  171  173  170  164   167 #>  [7522,]  144  148  156  163  168  171  173  170  164   167 #>  [7523,]  144  148  155  162  167  171  173  170  164   167 #>  [7524,]  144  148  156  163  168  171  173  170  164   167 #>  [7525,]  144  148  155  162  167  171  173  170  164   167 #>  [7526,]  145  149  154  161  166  170  172  169  163   166 #>  [7527,]  144  148  156  163  168  171  173  170  164   167 #>  [7528,]  144  148  156  163  168  171  173  170  164   167 #>  [7529,]  144  148  156  163  168  171  173  170  164   167 #>  [7530,]  144  148  156  163  168  171  173  170  164   167 #>  [7531,]  144  148  155  162  167  171  173  170  164   167 #>  [7532,]  144  148  155  162  167  171  173  170  164   167 #>  [7533,]  145  149  154  161  166  170  172  169  163   166 #>  [7534,]  144  148  156  163  168  171  173  170  164   167 #>  [7535,]  144  148  156  163  168  171  173  170  164   167 #>  [7536,]  144  148  156  163  168  171  173  170  164   167 #>  [7537,]  144  148  155  162  167  171  173  170  164   167 #>  [7538,]  144  148  156  163  168  171  173  170  164   167 #>  [7539,]  144  148  156  163  168  171  173  170  164   167 #>  [7540,]  144  148  155  162  167  171  173  170  164   167 #>  [7541,]  144  148  156  163  168  171  173  170  164   167 #>  [7542,]  144  148  156  163  168  171  173  170  164   167 #>  [7543,]  145  149  154  161  166  170  172  169  163   166 #>  [7544,]  144  148  156  163  168  171  173  170  164   167 #>  [7545,]  144  148  156  163  168  171  173  170  164   167 #>  [7546,]  145  149  154  161  166  170  172  169  163   166 #>  [7547,]  144  148  155  162  167  171  173  170  164   167 #>  [7548,]  144  148  156  163  168  171  173  170  164   167 #>  [7549,]  144  148  156  163  168  171  173  170  164   167 #>  [7550,]  144  148  156  163  168  171  173  170  164   167 #>  [7551,]  145  149  154  161  166  170  172  169  163   166 #>  [7552,]  144  148  155  162  167  171  173  170  164   167 #>  [7553,]  144  148  156  163  168  171  173  170  164   167 #>  [7554,]  144  148  156  163  168  171  173  170  164   167 #>  [7555,]  144  148  155  162  167  171  173  170  164   167 #>  [7556,]  145  149  154  161  166  170  172  169  163   166 #>  [7557,]  145  149  154  161  166  170  172  169  163   166 #>  [7558,]  144  148  156  163  168  171  173  170  164   167 #>  [7559,]  144  148  155  162  167  171  173  170  164   167 #>  [7560,]  144  148  155  162  167  171  173  170  164   167 #>  [7561,]  145  149  154  161  166  170  172  169  163   166 #>  [7562,]  144  148  156  163  168  171  173  170  164   167 #>  [7563,]  144  148  156  163  168  171  173  170  164   167 #>  [7564,]  145  149  154  161  166  170  172  169  163   166 #>  [7565,]  144  148  156  163  168  171  173  170  164   167 #>  [7566,]  145  149  154  161  166  170  172  169  163   166 #>  [7567,]  144  148  156  163  168  171  173  170  164   167 #>  [7568,]  145  149  154  161  166  170  172  169  163   166 #>  [7569,]  144  148  156  163  168  171  173  170  164   167 #>  [7570,]  144  148  156  163  168  171  173  170  164   167 #>  [7571,]  144  148  156  163  168  171  173  170  164   167 #>  [7572,]  144  148  155  162  167  171  173  170  164   167 #>  [7573,]  144  148  156  163  168  171  173  170  164   167 #>  [7574,]  144  148  155  162  167  171  173  170  164   167 #>  [7575,]  144  148  156  163  168  171  173  170  164   167 #>  [7576,]  145  149  154  161  166  170  172  169  163   166 #>  [7577,]  144  148  156  163  168  171  173  170  164   167 #>  [7578,]  144  148  156  163  168  171  173  170  164   167 #>  [7579,]  144  148  156  163  168  171  173  170  164   167 #>  [7580,]  144  148  155  162  167  171  173  170  164   167 #>  [7581,]  144  148  156  163  168  171  173  170  164   167 #>  [7582,]  144  148  156  163  168  171  173  170  164   167 #>  [7583,]  144  148  156  163  168  171  173  170  164   167 #>  [7584,]  144  148  156  163  168  171  173  170  164   167 #>  [7585,]  144  148  156  163  168  171  173  170  164   167 #>  [7586,]  144  148  155  162  167  171  173  170  164   167 #>  [7587,]  144  148  156  163  168  171  173  170  164   167 #>  [7588,]  144  148  156  163  168  171  173  170  164   167 #>  [7589,]  144  148  156  163  168  171  173  170  164   167 #>  [7590,]  144  148  156  163  168  171  173  170  164   167 #>  [7591,]  144  148  156  163  168  171  173  170  164   167 #>  [7592,]  144  148  155  162  167  171  173  170  164   167 #>  [7593,]  144  148  156  163  168  171  173  170  164   167 #>  [7594,]  145  149  154  161  166  170  172  169  163   166 #>  [7595,]  144  148  156  163  168  171  173  170  164   167 #>  [7596,]  144  148  155  162  167  171  173  170  164   167 #>  [7597,]  144  148  155  162  167  171  173  170  164   167 #>  [7598,]  144  148  155  162  167  171  173  170  164   167 #>  [7599,]  144  148  156  163  168  171  173  170  164   167 #>  [7600,]  144  148  156  163  168  171  173  170  164   167 #>  [7601,]  147  151  158  165  169  173  175  172  166   169 #>  [7602,]  147  151  158  165  169  172  174  171  165   168 #>  [7603,]  147  151  158  165  169  172  174  171  165   168 #>  [7604,]  147  151  158  165  169  172  174  171  165   168 #>  [7605,]  147  151  158  165  169  172  174  171  165   168 #>  [7606,]  147  151  158  165  169  172  174  171  165   168 #>  [7607,]  147  151  158  165  169  172  174  171  165   168 #>  [7608,]  147  151  159  165  169  172  174  171  165   168 #>  [7609,]  147  151  158  165  169  173  175  172  166   169 #>  [7610,]  147  151  158  165  169  172  174  171  165   168 #>  [7611,]  147  151  158  165  169  172  174  171  165   168 #>  [7612,]  147  151  158  165  169  172  174  171  165   168 #>  [7613,]  147  151  159  165  169  173  175  172  166   169 #>  [7614,]  147  151  158  165  169  172  174  171  165   168 #>  [7615,]  146  150  157  164  169  172  174  171  165   168 #>  [7616,]  147  151  158  165  169  172  174  171  165   168 #>  [7617,]  147  151  158  165  169  173  175  172  166   169 #>  [7618,]  147  151  158  165  169  173  175  172  166   169 #>  [7619,]  147  151  159  165  169  172  174  171  165   168 #>  [7620,]  147  151  159  165  169  172  174  171  165   168 #>  [7621,]  147  151  158  165  169  172  174  171  165   168 #>  [7622,]  147  151  159  165  169  172  174  171  165   168 #>  [7623,]  147  151  158  165  169  172  174  171  165   168 #>  [7624,]  147  151  158  165  169  172  174  171  165   168 #>  [7625,]  147  151  158  165  169  172  174  171  165   168 #>  [7626,]  147  151  158  165  169  172  174  171  165   168 #>  [7627,]  147  151  159  165  169  173  175  172  166   169 #>  [7628,]  147  151  158  165  169  172  174  171  165   168 #>  [7629,]  147  151  159  165  169  172  174  171  165   168 #>  [7630,]  147  151  158  165  169  172  174  171  165   168 #>  [7631,]  146  150  157  164  169  172  174  171  165   168 #>  [7632,]  147  151  158  165  169  172  174  171  165   168 #>  [7633,]  147  151  158  165  169  172  174  171  165   168 #>  [7634,]  146  150  157  164  169  172  174  171  165   168 #>  [7635,]  147  151  158  165  169  172  174  171  165   168 #>  [7636,]  147  151  159  165  169  173  175  172  166   169 #>  [7637,]  147  151  159  165  169  172  174  171  165   168 #>  [7638,]  147  151  159  165  169  172  174  171  165   168 #>  [7639,]  147  151  158  165  169  172  174  171  165   168 #>  [7640,]  147  151  158  165  169  172  174  171  165   168 #>  [7641,]  147  151  159  165  169  172  174  171  165   168 #>  [7642,]  146  150  157  164  169  173  175  172  166   169 #>  [7643,]  146  150  157  164  169  172  174  171  165   168 #>  [7644,]  146  150  157  164  169  172  174  171  165   168 #>  [7645,]  147  151  158  165  169  172  174  171  165   168 #>  [7646,]  147  151  159  165  169  172  174  171  165   168 #>  [7647,]  147  151  158  165  169  172  174  171  165   168 #>  [7648,]  147  151  158  165  169  172  174  171  165   168 #>  [7649,]  147  151  158  165  169  172  174  171  165   168 #>  [7650,]  147  151  159  165  169  172  174  171  165   168 #>  [7651,]  147  151  159  165  169  173  175  172  166   169 #>  [7652,]  147  151  158  165  169  172  174  171  165   168 #>  [7653,]  147  151  159  165  169  173  175  172  166   169 #>  [7654,]  147  151  158  165  169  172  174  171  165   168 #>  [7655,]  147  151  159  165  169  172  174  171  165   168 #>  [7656,]  147  151  158  165  169  173  175  172  166   169 #>  [7657,]  147  151  158  165  169  172  174  171  165   168 #>  [7658,]  147  151  159  165  169  172  174  171  165   168 #>  [7659,]  147  151  159  165  169  172  174  171  165   168 #>  [7660,]  147  151  159  165  169  172  174  171  165   168 #>  [7661,]  147  151  158  165  169  172  174  171  165   168 #>  [7662,]  147  151  158  165  169  172  174  171  165   168 #>  [7663,]  146  150  157  164  169  172  174  171  165   168 #>  [7664,]  147  151  159  165  169  172  174  171  165   168 #>  [7665,]  147  151  158  165  169  173  175  172  166   169 #>  [7666,]  147  151  159  165  169  173  175  172  166   169 #>  [7667,]  147  151  158  165  169  172  174  171  165   168 #>  [7668,]  147  151  158  165  169  172  174  171  165   168 #>  [7669,]  147  151  159  165  169  172  174  171  165   168 #>  [7670,]  147  151  158  165  169  172  174  171  165   168 #>  [7671,]  147  151  159  165  169  172  174  171  165   168 #>  [7672,]  147  151  158  165  169  172  174  171  165   168 #>  [7673,]  147  151  158  165  169  172  174  171  165   168 #>  [7674,]  147  151  158  165  169  172  174  171  165   168 #>  [7675,]  146  150  157  164  169  172  174  171  165   168 #>  [7676,]  147  151  158  165  169  172  174  171  165   168 #>  [7677,]  147  151  159  165  169  172  174  171  165   168 #>  [7678,]  147  151  158  165  169  172  174  171  165   168 #>  [7679,]  147  151  158  165  169  173  175  172  166   169 #>  [7680,]  147  151  159  165  169  172  174  171  165   168 #>  [7681,]  147  151  159  165  169  172  174  171  165   168 #>  [7682,]  147  151  158  165  169  173  175  172  166   169 #>  [7683,]  147  151  159  165  169  173  175  172  166   169 #>  [7684,]  147  151  159  165  169  173  175  172  166   169 #>  [7685,]  147  151  159  165  169  172  174  171  165   168 #>  [7686,]  147  151  158  165  169  172  174  171  165   168 #>  [7687,]  147  151  159  165  169  173  175  172  166   169 #>  [7688,]  147  151  158  165  169  172  174  171  165   168 #>  [7689,]  147  151  158  165  169  172  174  171  165   168 #>  [7690,]  147  151  159  165  169  172  174  171  165   168 #>  [7691,]  147  151  158  165  169  173  175  172  166   169 #>  [7692,]  147  151  158  165  169  172  174  171  165   168 #>  [7693,]  147  151  158  165  169  173  175  172  166   169 #>  [7694,]  147  151  158  165  169  173  175  172  166   169 #>  [7695,]  147  151  159  165  169  172  174  171  165   168 #>  [7696,]  147  151  159  165  169  172  174  171  165   168 #>  [7697,]  147  151  159  165  169  172  174  171  165   168 #>  [7698,]  147  151  158  165  169  172  174  171  165   168 #>  [7699,]  147  151  158  165  169  172  174  171  165   168 #>  [7700,]  147  151  159  165  169  172  174  171  165   168 #>  [7701,]  148  152  160  166  170  174  176  173  167   170 #>  [7702,]  148  152  160  166  170  174  176  173  167   170 #>  [7703,]  148  152  160  166  170  174  176  173  167   170 #>  [7704,]  148  152  160  166  170  174  176  173  167   170 #>  [7705,]  148  152  160  166  170  174  176  173  167   170 #>  [7706,]  149  153  161  167  171  175  177  174  168   171 #>  [7707,]  148  152  160  166  170  174  176  173  167   170 #>  [7708,]  149  153  161  167  171  175  177  174  168   171 #>  [7709,]  149  153  161  167  171  175  177  174  168   171 #>  [7710,]  148  152  160  166  170  174  176  173  167   170 #>  [7711,]  148  152  160  166  170  174  176  173  167   170 #>  [7712,]  149  153  161  167  171  175  177  174  168   171 #>  [7713,]  148  152  160  166  170  174  176  173  167   170 #>  [7714,]  148  152  160  166  170  174  176  173  167   170 #>  [7715,]  149  153  161  167  171  175  177  174  168   171 #>  [7716,]  148  152  160  166  170  174  176  173  167   170 #>  [7717,]  148  152  160  166  170  174  176  173  167   170 #>  [7718,]  148  152  160  166  170  174  176  173  167   170 #>  [7719,]  148  152  160  166  170  174  176  173  167   170 #>  [7720,]  148  152  160  166  170  174  176  173  167   170 #>  [7721,]  148  152  160  166  170  174  176  173  167   170 #>  [7722,]  148  152  160  166  170  174  176  173  167   170 #>  [7723,]  148  152  160  166  170  174  176  173  167   170 #>  [7724,]  148  152  160  166  170  174  176  173  167   170 #>  [7725,]  148  152  160  166  170  174  176  173  167   170 #>  [7726,]  149  153  161  167  171  175  177  174  168   171 #>  [7727,]  148  152  160  166  170  174  176  173  167   170 #>  [7728,]  148  152  160  166  170  174  176  173  167   170 #>  [7729,]  148  152  160  166  170  174  176  173  167   170 #>  [7730,]  148  152  160  166  170  174  176  173  167   170 #>  [7731,]  148  152  160  166  170  174  176  173  167   170 #>  [7732,]  148  152  160  166  170  174  176  173  167   170 #>  [7733,]  149  153  161  167  171  175  177  174  168   171 #>  [7734,]  148  152  160  166  170  174  176  173  167   170 #>  [7735,]  148  152  160  166  170  174  176  173  167   170 #>  [7736,]  148  152  160  166  170  174  176  173  167   170 #>  [7737,]  148  152  160  166  170  174  176  173  167   170 #>  [7738,]  148  152  160  166  170  174  176  173  167   170 #>  [7739,]  148  152  160  166  170  174  176  173  167   170 #>  [7740,]  148  152  160  166  170  174  176  173  167   170 #>  [7741,]  148  152  160  166  170  174  176  173  167   170 #>  [7742,]  148  152  160  166  170  174  176  173  167   170 #>  [7743,]  149  153  161  167  171  175  177  174  168   171 #>  [7744,]  148  152  160  166  170  174  176  173  167   170 #>  [7745,]  149  153  161  167  171  175  177  174  168   171 #>  [7746,]  149  153  161  167  171  175  177  174  168   171 #>  [7747,]  148  152  160  166  170  174  176  173  167   170 #>  [7748,]  148  152  160  166  170  174  176  173  167   170 #>  [7749,]  148  152  160  166  170  174  176  173  167   170 #>  [7750,]  148  152  160  166  170  174  176  173  167   170 #>  [7751,]  149  153  161  167  171  175  177  174  168   171 #>  [7752,]  148  152  160  166  170  174  176  173  167   170 #>  [7753,]  148  152  160  166  170  174  176  173  167   170 #>  [7754,]  148  152  160  166  170  174  176  173  167   170 #>  [7755,]  148  152  160  166  170  174  176  173  167   170 #>  [7756,]  149  153  161  167  171  175  177  174  168   171 #>  [7757,]  149  153  161  167  171  175  177  174  168   171 #>  [7758,]  148  152  160  166  170  174  176  173  167   170 #>  [7759,]  148  152  160  166  170  174  176  173  167   170 #>  [7760,]  148  152  160  166  170  174  176  173  167   170 #>  [7761,]  149  153  161  167  171  175  177  174  168   171 #>  [7762,]  148  152  160  166  170  174  176  173  167   170 #>  [7763,]  148  152  160  166  170  174  176  173  167   170 #>  [7764,]  149  153  161  167  171  175  177  174  168   171 #>  [7765,]  148  152  160  166  170  174  176  173  167   170 #>  [7766,]  149  153  161  167  171  175  177  174  168   171 #>  [7767,]  148  152  160  166  170  174  176  173  167   170 #>  [7768,]  149  153  161  167  171  175  177  174  168   171 #>  [7769,]  148  152  160  166  170  174  176  173  167   170 #>  [7770,]  148  152  160  166  170  174  176  173  167   170 #>  [7771,]  148  152  160  166  170  174  176  173  167   170 #>  [7772,]  148  152  160  166  170  174  176  173  167   170 #>  [7773,]  148  152  160  166  170  174  176  173  167   170 #>  [7774,]  148  152  160  166  170  174  176  173  167   170 #>  [7775,]  148  152  160  166  170  174  176  173  167   170 #>  [7776,]  149  153  161  167  171  175  177  174  168   171 #>  [7777,]  148  152  160  166  170  174  176  173  167   170 #>  [7778,]  148  152  160  166  170  174  176  173  167   170 #>  [7779,]  148  152  160  166  170  174  176  173  167   170 #>  [7780,]  148  152  160  166  170  174  176  173  167   170 #>  [7781,]  148  152  160  166  170  174  176  173  167   170 #>  [7782,]  148  152  160  166  170  174  176  173  167   170 #>  [7783,]  148  152  160  166  170  174  176  173  167   170 #>  [7784,]  148  152  160  166  170  174  176  173  167   170 #>  [7785,]  148  152  160  166  170  174  176  173  167   170 #>  [7786,]  148  152  160  166  170  174  176  173  167   170 #>  [7787,]  148  152  160  166  170  174  176  173  167   170 #>  [7788,]  148  152  160  166  170  174  176  173  167   170 #>  [7789,]  148  152  160  166  170  174  176  173  167   170 #>  [7790,]  148  152  160  166  170  174  176  173  167   170 #>  [7791,]  148  152  160  166  170  174  176  173  167   170 #>  [7792,]  148  152  160  166  170  174  176  173  167   170 #>  [7793,]  148  152  160  166  170  174  176  173  167   170 #>  [7794,]  149  153  161  167  171  175  177  174  168   171 #>  [7795,]  148  152  160  166  170  174  176  173  167   170 #>  [7796,]  148  152  160  166  170  174  176  173  167   170 #>  [7797,]  148  152  160  166  170  174  176  173  167   170 #>  [7798,]  148  152  160  166  170  174  176  173  167   170 #>  [7799,]  148  152  160  166  170  174  176  173  167   170 #>  [7800,]  148  152  160  166  170  174  176  173  167   170 #>  [7801,]  151  155  163  169  173  177  179  176  170   173 #>  [7802,]  151  155  163  169  173  177  179  176  170   173 #>  [7803,]  150  154  162  168  172  176  178  175  169   172 #>  [7804,]  151  155  163  169  173  177  179  176  170   173 #>  [7805,]  151  155  163  169  173  177  179  176  170   173 #>  [7806,]  151  155  163  169  173  177  179  176  170   173 #>  [7807,]  150  154  162  168  172  176  178  175  169   172 #>  [7808,]  150  154  162  168  172  176  178  175  169   172 #>  [7809,]  151  155  163  169  173  177  179  176  170   173 #>  [7810,]  151  155  163  169  173  177  179  176  170   173 #>  [7811,]  151  155  163  169  173  177  179  176  170   173 #>  [7812,]  151  155  163  169  173  177  179  176  170   173 #>  [7813,]  150  154  162  168  172  176  178  175  169   172 #>  [7814,]  151  155  163  169  173  177  179  176  170   173 #>  [7815,]  151  155  163  169  173  177  179  176  170   173 #>  [7816,]  150  154  162  168  172  176  178  175  169   172 #>  [7817,]  150  154  162  168  172  176  178  175  169   172 #>  [7818,]  151  155  163  169  173  177  179  176  170   173 #>  [7819,]  151  155  163  169  173  177  179  176  170   173 #>  [7820,]  150  154  162  168  172  176  178  175  169   172 #>  [7821,]  151  155  163  169  173  177  179  176  170   173 #>  [7822,]  150  154  162  168  172  176  178  175  169   172 #>  [7823,]  151  155  163  169  173  177  179  176  170   173 #>  [7824,]  150  154  162  168  172  176  178  175  169   172 #>  [7825,]  150  154  162  168  172  176  178  175  169   172 #>  [7826,]  151  155  163  169  173  177  179  176  170   173 #>  [7827,]  151  155  163  169  173  177  179  176  170   173 #>  [7828,]  151  155  163  169  173  177  179  176  170   173 #>  [7829,]  151  155  163  169  173  177  179  176  170   173 #>  [7830,]  151  155  163  169  173  177  179  176  170   173 #>  [7831,]  151  155  163  169  173  177  179  176  170   173 #>  [7832,]  151  155  163  169  173  177  179  176  170   173 #>  [7833,]  151  155  163  169  173  177  179  176  170   173 #>  [7834,]  151  155  163  169  173  177  179  176  170   173 #>  [7835,]  151  155  163  169  173  177  179  176  170   173 #>  [7836,]  151  155  163  169  173  177  179  176  170   173 #>  [7837,]  151  155  163  169  173  177  179  176  170   173 #>  [7838,]  151  155  163  169  173  177  179  176  170   173 #>  [7839,]  150  154  162  168  172  176  178  175  169   172 #>  [7840,]  150  154  162  168  172  176  178  175  169   172 #>  [7841,]  151  155  163  169  173  177  179  176  170   173 #>  [7842,]  151  155  163  169  173  177  179  176  170   173 #>  [7843,]  150  154  162  168  172  176  178  175  169   172 #>  [7844,]  150  154  162  168  172  176  178  175  169   172 #>  [7845,]  150  154  162  168  172  176  178  175  169   172 #>  [7846,]  150  154  162  168  172  176  178  175  169   172 #>  [7847,]  150  154  162  168  172  176  178  175  169   172 #>  [7848,]  151  155  163  169  173  177  179  176  170   173 #>  [7849,]  150  154  162  168  172  176  178  175  169   172 #>  [7850,]  150  154  162  168  172  176  178  175  169   172 #>  [7851,]  151  155  163  169  173  177  179  176  170   173 #>  [7852,]  151  155  163  169  173  177  179  176  170   173 #>  [7853,]  150  154  162  168  172  176  178  175  169   172 #>  [7854,]  150  154  162  168  172  176  178  175  169   172 #>  [7855,]  150  154  162  168  172  176  178  175  169   172 #>  [7856,]  150  154  162  168  172  176  178  175  169   172 #>  [7857,]  151  155  163  169  173  177  179  176  170   173 #>  [7858,]  151  155  163  169  173  177  179  176  170   173 #>  [7859,]  150  154  162  168  172  176  178  175  169   172 #>  [7860,]  151  155  163  169  173  177  179  176  170   173 #>  [7861,]  151  155  163  169  173  177  179  176  170   173 #>  [7862,]  151  155  163  169  173  177  179  176  170   173 #>  [7863,]  150  154  162  168  172  176  178  175  169   172 #>  [7864,]  151  155  163  169  173  177  179  176  170   173 #>  [7865,]  150  154  162  168  172  176  178  175  169   172 #>  [7866,]  150  154  162  168  172  176  178  175  169   172 #>  [7867,]  151  155  163  169  173  177  179  176  170   173 #>  [7868,]  151  155  163  169  173  177  179  176  170   173 #>  [7869,]  151  155  163  169  173  177  179  176  170   173 #>  [7870,]  150  154  162  168  172  176  178  175  169   172 #>  [7871,]  151  155  163  169  173  177  179  176  170   173 #>  [7872,]  150  154  162  168  172  176  178  175  169   172 #>  [7873,]  151  155  163  169  173  177  179  176  170   173 #>  [7874,]  151  155  163  169  173  177  179  176  170   173 #>  [7875,]  151  155  163  169  173  177  179  176  170   173 #>  [7876,]  151  155  163  169  173  177  179  176  170   173 #>  [7877,]  150  154  162  168  172  176  178  175  169   172 #>  [7878,]  150  154  162  168  172  176  178  175  169   172 #>  [7879,]  150  154  162  168  172  176  178  175  169   172 #>  [7880,]  151  155  163  169  173  177  179  176  170   173 #>  [7881,]  151  155  163  169  173  177  179  176  170   173 #>  [7882,]  151  155  163  169  173  177  179  176  170   173 #>  [7883,]  151  155  163  169  173  177  179  176  170   173 #>  [7884,]  150  154  162  168  172  176  178  175  169   172 #>  [7885,]  151  155  163  169  173  177  179  176  170   173 #>  [7886,]  150  154  162  168  172  176  178  175  169   172 #>  [7887,]  151  155  163  169  173  177  179  176  170   173 #>  [7888,]  151  155  163  169  173  177  179  176  170   173 #>  [7889,]  150  154  162  168  172  176  178  175  169   172 #>  [7890,]  150  154  162  168  172  176  178  175  169   172 #>  [7891,]  151  155  163  169  173  177  179  176  170   173 #>  [7892,]  151  155  163  169  173  177  179  176  170   173 #>  [7893,]  151  155  163  169  173  177  179  176  170   173 #>  [7894,]  150  154  162  168  172  176  178  175  169   172 #>  [7895,]  151  155  163  169  173  177  179  176  170   173 #>  [7896,]  151  155  163  169  173  177  179  176  170   173 #>  [7897,]  151  155  163  169  173  177  179  176  170   173 #>  [7898,]  150  154  162  168  172  176  178  175  169   172 #>  [7899,]  151  155  163  169  173  177  179  176  170   173 #>  [7900,]  150  154  162  168  172  176  178  175  169   172 #>  [7901,]  152  156  164  170  174  178  180  177  171   176 #>  [7902,]  152  156  164  170  174  178  180  177  171   176 #>  [7903,]  152  156  164  170  174  178  180  177  171   175 #>  [7904,]  153  157  165  171  175  179  181  178  172   174 #>  [7905,]  152  156  164  170  174  178  180  177  171   175 #>  [7906,]  152  156  164  170  174  178  180  177  171   175 #>  [7907,]  152  156  164  170  174  178  180  177  171   176 #>  [7908,]  152  156  164  170  174  178  180  177  171   176 #>  [7909,]  152  156  164  170  174  178  180  177  171   175 #>  [7910,]  153  157  165  171  175  179  181  178  172   174 #>  [7911,]  152  156  164  170  174  178  180  177  171   175 #>  [7912,]  152  156  164  170  174  178  180  177  171   176 #>  [7913,]  152  156  164  170  174  178  180  177  171   176 #>  [7914,]  152  156  164  170  174  178  180  177  171   175 #>  [7915,]  152  156  164  170  174  178  180  177  171   176 #>  [7916,]  152  156  164  170  174  178  180  177  171   176 #>  [7917,]  152  156  164  170  174  178  180  177  171   176 #>  [7918,]  153  157  165  171  175  179  181  178  172   174 #>  [7919,]  152  156  164  170  174  178  180  177  171   176 #>  [7920,]  152  156  164  170  174  178  180  177  171   176 #>  [7921,]  153  157  165  171  175  179  181  178  172   174 #>  [7922,]  152  156  164  170  174  178  180  177  171   176 #>  [7923,]  152  156  164  170  174  178  180  177  171   176 #>  [7924,]  152  156  164  170  174  178  180  177  171   175 #>  [7925,]  153  157  165  171  175  179  181  178  172   174 #>  [7926,]  152  156  164  170  174  178  180  177  171   176 #>  [7927,]  152  156  164  170  174  178  180  177  171   176 #>  [7928,]  152  156  164  170  174  178  180  177  171   175 #>  [7929,]  152  156  164  170  174  178  180  177  171   176 #>  [7930,]  152  156  164  170  174  178  180  177  171   176 #>  [7931,]  152  156  164  170  174  178  180  177  171   175 #>  [7932,]  152  156  164  170  174  178  180  177  171   175 #>  [7933,]  152  156  164  170  174  178  180  177  171   176 #>  [7934,]  152  156  164  170  174  178  180  177  171   175 #>  [7935,]  152  156  164  170  174  178  180  177  171   175 #>  [7936,]  152  156  164  170  174  178  180  177  171   176 #>  [7937,]  152  156  164  170  174  178  180  177  171   176 #>  [7938,]  152  156  164  170  174  178  180  177  171   176 #>  [7939,]  153  157  165  171  175  179  181  178  172   174 #>  [7940,]  152  156  164  170  174  178  180  177  171   175 #>  [7941,]  152  156  164  170  174  178  180  177  171   176 #>  [7942,]  152  156  164  170  174  178  180  177  171   175 #>  [7943,]  153  157  165  171  175  179  181  178  172   174 #>  [7944,]  152  156  164  170  174  178  180  177  171   176 #>  [7945,]  153  157  165  171  175  179  181  178  172   174 #>  [7946,]  152  156  164  170  174  178  180  177  171   176 #>  [7947,]  152  156  164  170  174  178  180  177  171   175 #>  [7948,]  152  156  164  170  174  178  180  177  171   175 #>  [7949,]  152  156  164  170  174  178  180  177  171   176 #>  [7950,]  152  156  164  170  174  178  180  177  171   176 #>  [7951,]  152  156  164  170  174  178  180  177  171   176 #>  [7952,]  152  156  164  170  174  178  180  177  171   175 #>  [7953,]  153  157  165  171  175  179  181  178  172   174 #>  [7954,]  152  156  164  170  174  178  180  177  171   175 #>  [7955,]  152  156  164  170  174  178  180  177  171   176 #>  [7956,]  152  156  164  170  174  178  180  177  171   176 #>  [7957,]  152  156  164  170  174  178  180  177  171   175 #>  [7958,]  152  156  164  170  174  178  180  177  171   176 #>  [7959,]  152  156  164  170  174  178  180  177  171   176 #>  [7960,]  152  156  164  170  174  178  180  177  171   176 #>  [7961,]  153  157  165  171  175  179  181  178  172   174 #>  [7962,]  152  156  164  170  174  178  180  177  171   175 #>  [7963,]  152  156  164  170  174  178  180  177  171   176 #>  [7964,]  152  156  164  170  174  178  180  177  171   176 #>  [7965,]  152  156  164  170  174  178  180  177  171   175 #>  [7966,]  152  156  164  170  174  178  180  177  171   176 #>  [7967,]  152  156  164  170  174  178  180  177  171   175 #>  [7968,]  152  156  164  170  174  178  180  177  171   176 #>  [7969,]  152  156  164  170  174  178  180  177  171   176 #>  [7970,]  152  156  164  170  174  178  180  177  171   175 #>  [7971,]  152  156  164  170  174  178  180  177  171   176 #>  [7972,]  153  157  165  171  175  179  181  178  172   174 #>  [7973,]  153  157  165  171  175  179  181  178  172   174 #>  [7974,]  153  157  165  171  175  179  181  178  172   174 #>  [7975,]  153  157  165  171  175  179  181  178  172   174 #>  [7976,]  153  157  165  171  175  179  181  178  172   174 #>  [7977,]  153  157  165  171  175  179  181  178  172   174 #>  [7978,]  152  156  164  170  174  178  180  177  171   176 #>  [7979,]  152  156  164  170  174  178  180  177  171   175 #>  [7980,]  152  156  164  170  174  178  180  177  171   176 #>  [7981,]  152  156  164  170  174  178  180  177  171   176 #>  [7982,]  152  156  164  170  174  178  180  177  171   175 #>  [7983,]  152  156  164  170  174  178  180  177  171   176 #>  [7984,]  153  157  165  171  175  179  181  178  172   174 #>  [7985,]  152  156  164  170  174  178  180  177  171   176 #>  [7986,]  152  156  164  170  174  178  180  177  171   175 #>  [7987,]  152  156  164  170  174  178  180  177  171   176 #>  [7988,]  152  156  164  170  174  178  180  177  171   175 #>  [7989,]  152  156  164  170  174  178  180  177  171   175 #>  [7990,]  152  156  164  170  174  178  180  177  171   176 #>  [7991,]  152  156  164  170  174  178  180  177  171   175 #>  [7992,]  152  156  164  170  174  178  180  177  171   176 #>  [7993,]  152  156  164  170  174  178  180  177  171   176 #>  [7994,]  153  157  165  171  175  179  181  178  172   174 #>  [7995,]  153  157  165  171  175  179  181  178  172   174 #>  [7996,]  152  156  164  170  174  178  180  177  171   176 #>  [7997,]  152  156  164  170  174  178  180  177  171   176 #>  [7998,]  152  156  164  170  174  178  180  177  171   175 #>  [7999,]  152  156  164  170  174  178  180  177  171   176 #>  [8000,]  153  157  165  171  175  179  181  178  172   174 #>  [8001,]  155  159  167  172  177  181  183  180  174   177 #>  [8002,]  155  159  167  172  177  181  184  181  174   177 #>  [8003,]  154  158  166  172  176  180  182  179  173   178 #>  [8004,]  155  159  167  172  177  181  183  180  174   177 #>  [8005,]  154  158  166  172  177  181  184  181  174   177 #>  [8006,]  155  159  167  172  177  181  184  181  174   177 #>  [8007,]  155  159  167  172  177  181  184  181  174   177 #>  [8008,]  155  159  167  172  177  181  183  180  174   177 #>  [8009,]  154  158  166  172  177  181  183  180  174   177 #>  [8010,]  154  158  166  172  177  181  184  181  174   177 #>  [8011,]  154  158  166  172  176  180  182  179  173   179 #>  [8012,]  155  159  167  172  176  180  182  179  173   179 #>  [8013,]  155  159  167  172  177  181  183  180  174   177 #>  [8014,]  154  158  166  172  176  180  182  179  173   179 #>  [8015,]  155  159  167  172  177  181  183  180  174   177 #>  [8016,]  155  159  167  172  177  181  183  180  174   177 #>  [8017,]  155  159  167  172  177  181  183  180  174   177 #>  [8018,]  155  159  167  172  177  181  184  181  174   177 #>  [8019,]  155  159  167  172  177  181  184  181  174   177 #>  [8020,]  155  159  167  172  176  180  182  179  173   178 #>  [8021,]  154  158  166  172  177  181  183  180  174   177 #>  [8022,]  155  159  167  172  176  180  182  179  173   178 #>  [8023,]  155  159  167  172  177  181  184  181  174   177 #>  [8024,]  154  158  166  172  177  181  184  181  174   177 #>  [8025,]  154  158  166  172  177  181  184  181  174   177 #>  [8026,]  155  159  167  172  176  180  182  179  173   179 #>  [8027,]  155  159  167  172  177  181  183  180  174   177 #>  [8028,]  154  158  166  172  177  181  184  181  174   177 #>  [8029,]  155  159  167  172  176  180  182  179  173   179 #>  [8030,]  155  159  167  172  177  181  183  180  174   177 #>  [8031,]  154  158  166  172  177  181  184  181  174   177 #>  [8032,]  154  158  166  172  176  180  182  179  173   179 #>  [8033,]  155  159  167  172  177  181  184  181  174   177 #>  [8034,]  154  158  166  172  177  181  184  181  174   177 #>  [8035,]  154  158  166  172  177  181  183  180  174   177 #>  [8036,]  155  159  167  172  176  180  182  179  173   179 #>  [8037,]  155  159  167  172  177  181  183  180  174   177 #>  [8038,]  155  159  167  172  177  181  183  180  174   177 #>  [8039,]  154  158  166  172  177  181  184  181  174   177 #>  [8040,]  154  158  166  172  176  180  182  179  173   178 #>  [8041,]  155  159  167  172  176  180  182  179  173   179 #>  [8042,]  155  159  167  172  176  180  182  179  173   179 #>  [8043,]  155  159  167  172  177  181  183  180  174   177 #>  [8044,]  155  159  167  172  177  181  183  180  174   177 #>  [8045,]  155  159  167  172  177  181  183  180  174   177 #>  [8046,]  155  159  167  172  177  181  183  180  174   177 #>  [8047,]  154  158  166  172  177  181  184  181  174   177 #>  [8048,]  154  158  166  172  176  180  182  179  173   179 #>  [8049,]  155  159  167  172  177  181  183  180  174   177 #>  [8050,]  155  159  167  172  177  181  184  181  174   177 #>  [8051,]  155  159  167  172  176  180  182  179  173   178 #>  [8052,]  154  158  166  172  177  181  183  180  174   177 #>  [8053,]  155  159  167  172  177  181  184  181  174   177 #>  [8054,]  154  158  166  172  176  180  182  179  173   178 #>  [8055,]  155  159  167  172  177  181  183  180  174   177 #>  [8056,]  155  159  167  172  177  181  184  181  174   177 #>  [8057,]  155  159  167  172  177  181  184  181  174   177 #>  [8058,]  155  159  167  172  177  181  183  180  174   177 #>  [8059,]  155  159  167  172  177  181  184  181  174   177 #>  [8060,]  155  159  167  172  176  180  182  179  173   179 #>  [8061,]  155  159  167  172  177  181  184  181  174   177 #>  [8062,]  154  158  166  172  176  180  182  179  173   179 #>  [8063,]  155  159  167  172  177  181  184  181  174   177 #>  [8064,]  155  159  167  172  177  181  184  181  174   177 #>  [8065,]  154  158  166  172  177  181  184  181  174   177 #>  [8066,]  155  159  167  172  176  180  182  179  173   178 #>  [8067,]  155  159  167  172  177  181  183  180  174   177 #>  [8068,]  155  159  167  172  176  180  182  179  173   179 #>  [8069,]  155  159  167  172  176  180  182  179  173   179 #>  [8070,]  154  158  166  172  177  181  184  181  174   177 #>  [8071,]  155  159  167  172  177  181  184  181  174   177 #>  [8072,]  154  158  166  172  177  181  184  181  174   177 #>  [8073,]  155  159  167  172  177  181  184  181  174   177 #>  [8074,]  154  158  166  172  177  181  183  180  174   177 #>  [8075,]  155  159  167  172  177  181  184  181  174   177 #>  [8076,]  154  158  166  172  177  181  184  181  174   177 #>  [8077,]  155  159  167  172  177  181  184  181  174   177 #>  [8078,]  155  159  167  172  177  181  184  181  174   177 #>  [8079,]  155  159  167  172  177  181  183  180  174   177 #>  [8080,]  155  159  167  172  176  180  182  179  173   179 #>  [8081,]  155  159  167  172  176  180  182  179  173   179 #>  [8082,]  154  158  166  172  177  181  183  180  174   177 #>  [8083,]  155  159  167  172  176  180  182  179  173   178 #>  [8084,]  155  159  167  172  177  181  184  181  174   177 #>  [8085,]  155  159  167  172  177  181  183  180  174   177 #>  [8086,]  155  159  167  172  177  181  184  181  174   177 #>  [8087,]  155  159  167  172  177  181  183  180  174   177 #>  [8088,]  155  159  167  172  177  181  183  180  174   177 #>  [8089,]  155  159  167  172  176  180  182  179  173   178 #>  [8090,]  155  159  167  172  177  181  183  180  174   177 #>  [8091,]  154  158  166  172  176  180  182  179  173   179 #>  [8092,]  155  159  167  172  177  181  183  180  174   177 #>  [8093,]  155  159  167  172  177  181  184  181  174   177 #>  [8094,]  155  159  167  172  177  181  184  181  174   177 #>  [8095,]  155  159  167  172  177  181  183  180  174   177 #>  [8096,]  155  159  167  172  177  181  183  180  174   177 #>  [8097,]  155  159  167  172  177  181  184  181  174   177 #>  [8098,]  154  158  166  172  177  181  184  181  174   177 #>  [8099,]  155  159  167  172  177  181  183  180  174   177 #>  [8100,]  155  159  167  172  177  181  184  181  174   177 #>  [8101,]  156  160  168  173  178  182  185  182  175   180 #>  [8102,]  156  160  168  173  178  182  185  182  175   180 #>  [8103,]  156  160  168  173  178  182  185  182  175   180 #>  [8104,]  157  161  169  174  179  183  186  183  176   181 #>  [8105,]  156  160  168  173  178  182  185  182  175   180 #>  [8106,]  156  160  168  173  178  182  185  182  175   180 #>  [8107,]  157  161  169  174  179  184  186  183  176   181 #>  [8108,]  156  160  168  173  178  182  185  182  175   180 #>  [8109,]  156  160  168  173  178  182  185  182  175   180 #>  [8110,]  157  161  169  174  179  184  186  183  176   181 #>  [8111,]  156  160  168  173  178  182  185  182  175   180 #>  [8112,]  156  160  168  173  178  182  185  182  175   180 #>  [8113,]  156  160  168  173  178  182  185  182  175   180 #>  [8114,]  156  160  168  173  178  182  185  182  175   180 #>  [8115,]  157  161  169  174  179  184  186  183  176   181 #>  [8116,]  157  161  169  174  179  184  186  183  176   181 #>  [8117,]  156  160  168  173  178  182  185  182  175   180 #>  [8118,]  157  161  169  174  179  184  186  183  176   181 #>  [8119,]  156  160  168  173  178  182  185  182  175   180 #>  [8120,]  156  160  168  173  178  182  185  182  175   180 #>  [8121,]  157  161  169  174  179  184  186  183  176   181 #>  [8122,]  156  160  168  173  178  182  185  182  175   180 #>  [8123,]  157  161  169  174  179  184  186  183  176   181 #>  [8124,]  156  160  168  173  178  182  185  182  175   180 #>  [8125,]  157  161  169  174  179  184  186  183  176   181 #>  [8126,]  156  160  168  173  178  182  185  182  175   180 #>  [8127,]  157  161  169  174  179  183  186  183  176   181 #>  [8128,]  157  161  169  174  179  184  186  183  176   181 #>  [8129,]  156  160  168  173  178  182  185  182  175   180 #>  [8130,]  156  160  168  173  178  182  185  182  175   180 #>  [8131,]  156  160  168  173  178  182  185  182  175   180 #>  [8132,]  156  160  168  173  178  182  185  182  175   180 #>  [8133,]  156  160  168  173  178  182  185  182  175   180 #>  [8134,]  156  160  168  173  178  182  185  182  175   180 #>  [8135,]  156  160  168  173  178  182  185  182  175   180 #>  [8136,]  156  160  168  173  178  182  185  182  175   180 #>  [8137,]  156  160  168  173  178  182  185  182  175   180 #>  [8138,]  156  160  168  173  178  182  185  182  175   180 #>  [8139,]  157  161  169  174  179  184  186  183  176   181 #>  [8140,]  156  160  168  173  178  182  185  182  175   180 #>  [8141,]  156  160  168  173  178  182  185  182  175   180 #>  [8142,]  156  160  168  173  178  182  185  182  175   180 #>  [8143,]  157  161  169  174  179  183  186  183  176   181 #>  [8144,]  156  160  168  173  178  182  185  182  175   180 #>  [8145,]  157  161  169  174  179  184  186  183  176   181 #>  [8146,]  156  160  168  173  178  182  185  182  175   180 #>  [8147,]  157  161  169  174  179  184  186  183  176   181 #>  [8148,]  156  160  168  173  178  182  185  182  175   180 #>  [8149,]  156  160  168  173  178  182  185  182  175   180 #>  [8150,]  156  160  168  173  178  182  185  182  175   180 #>  [8151,]  156  160  168  173  178  182  185  182  175   180 #>  [8152,]  156  160  168  173  178  182  185  182  175   180 #>  [8153,]  157  161  169  174  179  184  186  183  176   181 #>  [8154,]  156  160  168  173  178  182  185  182  175   180 #>  [8155,]  156  160  168  173  178  182  185  182  175   180 #>  [8156,]  156  160  168  173  178  182  185  182  175   180 #>  [8157,]  156  160  168  173  178  182  185  182  175   180 #>  [8158,]  156  160  168  173  178  182  185  182  175   180 #>  [8159,]  156  160  168  173  178  182  185  182  175   180 #>  [8160,]  156  160  168  173  178  182  185  182  175   180 #>  [8161,]  157  161  169  174  179  184  186  183  176   181 #>  [8162,]  156  160  168  173  178  182  185  182  175   180 #>  [8163,]  156  160  168  173  178  182  185  182  175   180 #>  [8164,]  156  160  168  173  178  182  185  182  175   180 #>  [8165,]  156  160  168  173  178  182  185  182  175   180 #>  [8166,]  156  160  168  173  178  182  185  182  175   180 #>  [8167,]  156  160  168  173  178  182  185  182  175   180 #>  [8168,]  156  160  168  173  178  182  185  182  175   180 #>  [8169,]  156  160  168  173  178  182  185  182  175   180 #>  [8170,]  156  160  168  173  178  182  185  182  175   180 #>  [8171,]  157  161  169  174  179  184  186  183  176   181 #>  [8172,]  157  161  169  174  179  184  186  183  176   181 #>  [8173,]  157  161  169  174  179  184  186  183  176   181 #>  [8174,]  157  161  169  174  179  184  186  183  176   181 #>  [8175,]  157  161  169  174  179  184  186  183  176   181 #>  [8176,]  157  161  169  174  179  184  186  183  176   181 #>  [8177,]  157  161  169  174  179  184  186  183  176   181 #>  [8178,]  156  160  168  173  178  182  185  182  175   180 #>  [8179,]  156  160  168  173  178  182  185  182  175   180 #>  [8180,]  156  160  168  173  178  182  185  182  175   180 #>  [8181,]  156  160  168  173  178  182  185  182  175   180 #>  [8182,]  156  160  168  173  178  182  185  182  175   180 #>  [8183,]  156  160  168  173  178  182  185  182  175   180 #>  [8184,]  157  161  169  174  179  184  186  183  176   181 #>  [8185,]  156  160  168  173  178  182  185  182  175   180 #>  [8186,]  156  160  168  173  178  182  185  182  175   180 #>  [8187,]  156  160  168  173  178  182  185  182  175   180 #>  [8188,]  157  161  169  174  179  183  186  183  176   181 #>  [8189,]  156  160  168  173  178  182  185  182  175   180 #>  [8190,]  156  160  168  173  178  182  185  182  175   180 #>  [8191,]  156  160  168  173  178  182  185  182  175   180 #>  [8192,]  156  160  168  173  178  182  185  182  175   180 #>  [8193,]  156  160  168  173  178  182  185  182  175   180 #>  [8194,]  157  161  169  174  179  184  186  183  176   181 #>  [8195,]  157  161  169  174  179  183  186  183  176   181 #>  [8196,]  156  160  168  173  178  182  185  182  175   180 #>  [8197,]  156  160  168  173  178  182  185  182  175   180 #>  [8198,]  156  160  168  173  178  182  185  182  175   180 #>  [8199,]  156  160  168  173  178  182  185  182  175   180 #>  [8200,]  157  161  169  174  179  184  186  183  176   181 #>  [8201,]  159  163  171  176  181  185  187  187  179   182 #>  [8202,]  159  163  171  176  181  185  187  186  179   182 #>  [8203,]  158  162  170  175  180  186  188  184  177   183 #>  [8204,]  159  163  171  176  181  185  187  186  179   182 #>  [8205,]  159  163  171  176  181  185  187  187  179   182 #>  [8206,]  159  163  171  176  181  185  187  186  179   182 #>  [8207,]  158  162  170  175  180  187  189  185  178   183 #>  [8208,]  159  163  171  176  181  185  187  186  179   182 #>  [8209,]  159  163  171  176  181  185  187  186  179   182 #>  [8210,]  159  163  171  176  181  185  187  186  179   182 #>  [8211,]  159  163  171  176  181  185  187  187  179   182 #>  [8212,]  159  163  171  176  181  185  187  186  179   182 #>  [8213,]  159  163  171  176  181  185  187  186  179   182 #>  [8214,]  159  163  171  176  181  185  187  187  179   182 #>  [8215,]  159  163  171  176  181  185  187  187  179   182 #>  [8216,]  159  163  171  176  181  185  187  186  179   182 #>  [8217,]  159  163  171  176  181  185  187  187  179   182 #>  [8218,]  159  163  171  176  181  185  187  187  179   182 #>  [8219,]  159  163  171  176  181  185  187  186  179   182 #>  [8220,]  158  162  170  175  180  187  189  185  178   183 #>  [8221,]  159  163  171  176  181  185  187  186  179   182 #>  [8222,]  159  163  171  176  181  185  187  187  179   182 #>  [8223,]  159  163  171  176  181  185  187  186  179   182 #>  [8224,]  159  163  171  176  181  185  187  186  179   182 #>  [8225,]  158  162  170  175  180  187  189  185  178   183 #>  [8226,]  159  163  171  176  181  185  187  187  179   182 #>  [8227,]  159  163  171  176  181  185  187  187  179   182 #>  [8228,]  159  163  171  176  181  185  187  186  179   182 #>  [8229,]  159  163  171  176  181  185  187  186  179   182 #>  [8230,]  159  163  171  176  181  185  187  186  179   182 #>  [8231,]  159  163  171  176  181  185  187  187  179   182 #>  [8232,]  159  163  171  176  181  185  187  187  179   182 #>  [8233,]  159  163  171  176  181  185  187  186  179   182 #>  [8234,]  159  163  171  176  181  185  187  186  179   182 #>  [8235,]  159  163  171  176  181  185  187  186  179   182 #>  [8236,]  159  163  171  176  181  185  187  186  179   182 #>  [8237,]  159  163  171  176  181  185  187  186  179   182 #>  [8238,]  159  163  171  176  181  185  187  186  179   182 #>  [8239,]  158  162  170  175  180  187  189  185  178   183 #>  [8240,]  159  163  171  176  181  185  187  186  179   182 #>  [8241,]  159  163  171  176  181  185  187  186  179   182 #>  [8242,]  159  163  171  176  181  185  187  186  179   182 #>  [8243,]  159  163  171  176  181  185  187  187  179   182 #>  [8244,]  159  163  171  176  181  185  187  186  179   182 #>  [8245,]  159  163  171  176  181  185  187  186  179   182 #>  [8246,]  159  163  171  176  181  185  187  186  179   182 #>  [8247,]  159  163  171  176  181  185  187  187  179   182 #>  [8248,]  159  163  171  176  181  185  187  186  179   182 #>  [8249,]  158  162  170  175  180  186  188  184  177   183 #>  [8250,]  159  163  171  176  181  185  187  186  179   182 #>  [8251,]  159  163  171  176  181  185  187  186  179   182 #>  [8252,]  159  163  171  176  181  185  187  186  179   182 #>  [8253,]  158  162  170  175  180  187  189  185  178   183 #>  [8254,]  159  163  171  176  181  185  187  186  179   182 #>  [8255,]  158  162  170  175  180  187  189  185  178   183 #>  [8256,]  158  162  170  175  180  186  188  184  177   183 #>  [8257,]  159  163  171  176  181  185  187  186  179   182 #>  [8258,]  159  163  171  176  181  185  187  187  179   182 #>  [8259,]  159  163  171  176  181  185  187  187  179   182 #>  [8260,]  159  163  171  176  181  185  187  186  179   182 #>  [8261,]  159  163  171  176  181  185  187  187  179   182 #>  [8262,]  159  163  171  176  181  185  187  186  179   182 #>  [8263,]  159  163  171  176  181  185  187  186  179   182 #>  [8264,]  159  163  171  176  181  185  187  186  179   182 #>  [8265,]  158  162  170  175  180  186  188  184  177   183 #>  [8266,]  158  162  170  175  180  186  188  184  177   183 #>  [8267,]  159  163  171  176  181  185  187  186  179   182 #>  [8268,]  159  163  171  176  181  185  187  186  179   182 #>  [8269,]  159  163  171  176  181  185  187  186  179   182 #>  [8270,]  159  163  171  176  181  185  187  187  179   182 #>  [8271,]  159  163  171  176  181  185  187  187  179   182 #>  [8272,]  159  163  171  176  181  185  187  186  179   182 #>  [8273,]  159  163  171  176  181  185  187  186  179   182 #>  [8274,]  159  163  171  176  181  185  187  186  179   182 #>  [8275,]  159  163  171  176  181  185  187  187  179   182 #>  [8276,]  159  163  171  176  181  185  187  186  179   182 #>  [8277,]  159  163  171  176  181  185  187  187  179   182 #>  [8278,]  159  163  171  176  181  185  187  186  179   182 #>  [8279,]  159  163  171  176  181  185  187  187  179   182 #>  [8280,]  159  163  171  176  181  185  187  186  179   182 #>  [8281,]  159  163  171  176  181  185  187  186  179   182 #>  [8282,]  159  163  171  176  181  185  187  186  179   182 #>  [8283,]  159  163  171  176  181  185  187  186  179   182 #>  [8284,]  159  163  171  176  181  185  187  186  179   182 #>  [8285,]  159  163  171  176  181  185  187  186  179   182 #>  [8286,]  159  163  171  176  181  185  187  186  179   182 #>  [8287,]  159  163  171  176  181  185  187  187  179   182 #>  [8288,]  159  163  171  176  181  185  187  186  179   182 #>  [8289,]  159  163  171  176  181  185  187  186  179   182 #>  [8290,]  158  162  170  175  180  187  189  185  178   183 #>  [8291,]  159  163  171  176  181  185  187  187  179   182 #>  [8292,]  159  163  171  176  181  185  187  186  179   182 #>  [8293,]  159  163  171  176  181  185  187  186  179   182 #>  [8294,]  159  163  171  176  181  185  187  186  179   182 #>  [8295,]  159  163  171  176  181  185  187  187  179   182 #>  [8296,]  159  163  171  176  181  185  187  186  179   182 #>  [8297,]  159  163  171  176  181  185  187  186  179   182 #>  [8298,]  159  163  171  176  181  185  187  186  179   182 #>  [8299,]  159  163  171  176  181  185  187  186  179   182 #>  [8300,]  158  162  170  175  180  186  188  184  177   183 #>  [8301,]  161  165  174  179  184  190  191  189  181   185 #>  [8302,]  161  165  174  179  184  190  191  189  181   185 #>  [8303,]  161  165  173  178  183  189  191  189  181   185 #>  [8304,]  161  165  173  178  183  189  191  189  182   186 #>  [8305,]  161  165  173  178  183  189  191  189  181   185 #>  [8306,]  160  164  172  177  182  188  190  188  180   184 #>  [8307,]  160  164  172  177  182  188  190  188  180   184 #>  [8308,]  161  165  174  179  184  190  191  189  181   185 #>  [8309,]  161  165  173  178  183  189  191  189  182   186 #>  [8310,]  161  165  173  178  183  189  191  189  181   185 #>  [8311,]  161  165  173  178  183  189  191  189  182   187 #>  [8312,]  161  165  174  179  184  190  191  189  182   186 #>  [8313,]  161  165  174  179  184  190  191  189  181   185 #>  [8314,]  161  165  173  178  183  189  191  189  182   187 #>  [8315,]  161  165  174  179  184  190  191  189  182   187 #>  [8316,]  161  165  174  179  184  190  191  189  181   185 #>  [8317,]  161  165  174  179  184  190  191  189  181   185 #>  [8318,]  161  165  174  179  184  190  191  189  182   187 #>  [8319,]  161  165  174  179  184  190  191  189  182   186 #>  [8320,]  160  164  172  177  182  188  190  188  180   184 #>  [8321,]  160  164  172  177  182  188  190  188  180   184 #>  [8322,]  161  165  174  179  184  190  191  189  181   185 #>  [8323,]  161  165  174  179  184  190  191  189  181   185 #>  [8324,]  161  165  173  178  183  189  191  189  181   185 #>  [8325,]  160  164  172  177  182  188  190  188  180   184 #>  [8326,]  161  165  174  179  184  190  191  189  182   187 #>  [8327,]  161  165  174  179  184  190  191  189  182   187 #>  [8328,]  161  165  173  178  183  189  191  189  181   185 #>  [8329,]  161  165  174  179  184  190  191  189  181   185 #>  [8330,]  161  165  174  179  184  190  191  189  182   186 #>  [8331,]  161  165  173  178  183  189  191  189  182   187 #>  [8332,]  161  165  173  178  183  189  191  189  181   185 #>  [8333,]  161  165  174  179  184  190  191  189  182   186 #>  [8334,]  161  165  173  178  183  189  191  189  181   185 #>  [8335,]  160  164  172  177  182  188  190  188  180   184 #>  [8336,]  161  165  174  179  184  190  191  189  182   186 #>  [8337,]  160  164  172  177  182  188  190  188  180   184 #>  [8338,]  161  165  174  179  184  190  191  189  182   186 #>  [8339,]  161  165  173  178  183  189  191  189  181   185 #>  [8340,]  161  165  173  178  183  189  191  189  181   185 #>  [8341,]  161  165  174  179  184  190  191  189  182   186 #>  [8342,]  160  164  172  177  182  188  190  188  180   184 #>  [8343,]  161  165  174  179  184  190  191  189  181   185 #>  [8344,]  160  164  172  177  182  188  190  188  180   184 #>  [8345,]  161  165  174  179  184  190  191  189  181   185 #>  [8346,]  161  165  174  179  184  190  191  189  181   185 #>  [8347,]  161  165  173  178  183  189  191  189  181   185 #>  [8348,]  161  165  173  178  183  189  191  189  182   186 #>  [8349,]  161  165  174  179  184  190  191  189  181   185 #>  [8350,]  161  165  174  179  184  190  191  189  181   185 #>  [8351,]  161  165  174  179  184  190  191  189  181   185 #>  [8352,]  161  165  173  178  183  189  191  189  181   185 #>  [8353,]  160  164  172  177  182  188  190  188  180   184 #>  [8354,]  161  165  173  178  183  189  191  189  181   185 #>  [8355,]  161  165  174  179  184  190  191  189  181   185 #>  [8356,]  160  164  172  177  182  188  190  188  180   184 #>  [8357,]  160  164  172  177  182  188  190  188  180   184 #>  [8358,]  161  165  174  179  184  190  191  189  182   187 #>  [8359,]  161  165  174  179  184  190  191  189  181   185 #>  [8360,]  161  165  174  179  184  190  191  189  182   186 #>  [8361,]  161  165  174  179  184  190  191  189  182   187 #>  [8362,]  161  165  173  178  183  189  191  189  182   186 #>  [8363,]  161  165  174  179  184  190  191  189  181   185 #>  [8364,]  161  165  174  179  184  190  191  189  181   185 #>  [8365,]  160  164  172  177  182  188  190  188  180   184 #>  [8366,]  161  165  174  179  184  190  191  189  181   185 #>  [8367,]  161  165  174  179  184  190  191  189  181   185 #>  [8368,]  161  165  174  179  184  190  191  189  182   186 #>  [8369,]  161  165  174  179  184  190  191  189  182   186 #>  [8370,]  161  165  173  178  183  189  191  189  181   185 #>  [8371,]  161  165  174  179  184  190  191  189  181   185 #>  [8372,]  161  165  173  178  183  189  191  189  181   185 #>  [8373,]  160  164  172  177  182  188  190  188  180   184 #>  [8374,]  160  164  172  177  182  188  190  188  180   184 #>  [8375,]  161  165  174  179  184  190  191  189  182   187 #>  [8376,]  161  165  173  178  183  189  191  189  181   185 #>  [8377,]  161  165  174  179  184  190  191  189  181   185 #>  [8378,]  161  165  174  179  184  190  191  189  181   185 #>  [8379,]  161  165  173  178  183  189  191  189  181   185 #>  [8380,]  160  164  172  177  182  188  190  188  180   184 #>  [8381,]  161  165  174  179  184  190  191  189  181   185 #>  [8382,]  160  164  172  177  182  188  190  188  180   184 #>  [8383,]  161  165  174  179  184  190  191  189  181   185 #>  [8384,]  160  164  172  177  182  188  190  188  180   184 #>  [8385,]  160  164  172  177  182  188  190  188  180   184 #>  [8386,]  160  164  172  177  182  188  190  188  180   184 #>  [8387,]  161  165  174  179  184  190  191  189  181   185 #>  [8388,]  161  165  174  179  184  190  191  189  181   185 #>  [8389,]  160  164  172  177  182  188  190  188  180   184 #>  [8390,]  161  165  174  179  184  190  191  189  181   185 #>  [8391,]  161  165  173  178  183  189  191  189  181   185 #>  [8392,]  161  165  174  179  184  190  191  189  182   186 #>  [8393,]  161  165  174  179  184  190  191  189  182   186 #>  [8394,]  160  164  172  177  182  188  190  188  180   184 #>  [8395,]  161  165  174  179  184  190  191  189  181   185 #>  [8396,]  161  165  174  179  184  190  191  189  182   186 #>  [8397,]  161  165  174  179  184  190  191  189  182   186 #>  [8398,]  161  165  173  178  183  189  191  189  181   185 #>  [8399,]  160  164  172  177  182  188  190  188  180   184 #>  [8400,]  161  165  174  179  184  190  191  189  181   185 #>  [8401,]  163  167  176  181  186  192  193  191  184   189 #>  [8402,]  162  166  175  180  185  191  192  190  183   188 #>  [8403,]  162  166  175  180  185  191  192  190  183   188 #>  [8404,]  162  166  175  180  185  191  192  190  183   188 #>  [8405,]  163  167  176  181  186  192  193  191  184   189 #>  [8406,]  162  166  175  180  185  191  192  190  183   188 #>  [8407,]  162  166  175  180  185  191  192  190  183   188 #>  [8408,]  162  166  175  180  185  191  192  190  183   188 #>  [8409,]  162  166  175  180  185  191  192  190  183   188 #>  [8410,]  163  167  176  181  186  192  193  191  184   189 #>  [8411,]  163  167  176  181  186  192  193  191  184   189 #>  [8412,]  163  167  176  181  186  192  193  191  184   189 #>  [8413,]  162  166  175  180  185  191  192  190  183   188 #>  [8414,]  163  167  176  181  186  192  193  191  184   189 #>  [8415,]  163  167  176  181  186  192  193  191  184   189 #>  [8416,]  162  166  175  180  185  191  192  190  183   188 #>  [8417,]  163  167  176  181  186  192  193  191  184   189 #>  [8418,]  163  167  176  181  186  192  193  191  184   189 #>  [8419,]  163  167  176  181  186  192  193  191  184   189 #>  [8420,]  162  166  175  180  185  191  192  190  183   188 #>  [8421,]  162  166  175  180  185  191  192  190  183   188 #>  [8422,]  163  167  176  181  186  192  193  191  184   189 #>  [8423,]  162  166  175  180  185  191  192  190  183   188 #>  [8424,]  162  166  175  180  185  191  192  190  183   188 #>  [8425,]  162  166  175  180  185  191  192  190  183   188 #>  [8426,]  163  167  176  181  186  192  193  191  184   189 #>  [8427,]  163  167  176  181  186  192  193  191  184   189 #>  [8428,]  162  166  175  180  185  191  192  190  183   188 #>  [8429,]  162  166  175  180  185  191  192  190  183   188 #>  [8430,]  162  166  175  180  185  191  192  190  183   188 #>  [8431,]  163  167  176  181  186  192  193  191  184   189 #>  [8432,]  163  167  176  181  186  192  193  191  184   189 #>  [8433,]  162  166  175  180  185  191  192  190  183   188 #>  [8434,]  162  166  175  180  185  191  192  190  183   188 #>  [8435,]  162  166  175  180  185  191  192  190  183   188 #>  [8436,]  162  166  175  180  185  191  192  190  183   188 #>  [8437,]  162  166  175  180  185  191  192  190  183   188 #>  [8438,]  163  167  176  181  186  192  193  191  184   189 #>  [8439,]  163  167  176  181  186  192  193  191  184   189 #>  [8440,]  162  166  175  180  185  191  192  190  183   188 #>  [8441,]  162  166  175  180  185  191  192  190  183   188 #>  [8442,]  162  166  175  180  185  191  192  190  183   188 #>  [8443,]  163  167  176  181  186  192  193  191  184   189 #>  [8444,]  162  166  175  180  185  191  192  190  183   188 #>  [8445,]  162  166  175  180  185  191  192  190  183   188 #>  [8446,]  162  166  175  180  185  191  192  190  183   188 #>  [8447,]  163  167  176  181  186  192  193  191  184   189 #>  [8448,]  162  166  175  180  185  191  192  190  183   188 #>  [8449,]  162  166  175  180  185  191  192  190  183   188 #>  [8450,]  162  166  175  180  185  191  192  190  183   188 #>  [8451,]  162  166  175  180  185  191  192  190  183   188 #>  [8452,]  163  167  176  181  186  192  193  191  184   189 #>  [8453,]  162  166  175  180  185  191  192  190  183   188 #>  [8454,]  162  166  175  180  185  191  192  190  183   188 #>  [8455,]  162  166  175  180  185  191  192  190  183   188 #>  [8456,]  162  166  175  180  185  191  192  190  183   188 #>  [8457,]  162  166  175  180  185  191  192  190  183   188 #>  [8458,]  163  167  176  181  186  192  193  191  184   189 #>  [8459,]  163  167  176  181  186  192  193  191  184   189 #>  [8460,]  162  166  175  180  185  191  192  190  183   188 #>  [8461,]  163  167  176  181  186  192  193  191  184   189 #>  [8462,]  162  166  175  180  185  191  192  190  183   188 #>  [8463,]  162  166  175  180  185  191  192  190  183   188 #>  [8464,]  162  166  175  180  185  191  192  190  183   188 #>  [8465,]  162  166  175  180  185  191  192  190  183   188 #>  [8466,]  163  167  176  181  186  192  193  191  184   189 #>  [8467,]  162  166  175  180  185  191  192  190  183   188 #>  [8468,]  163  167  176  181  186  192  193  191  184   189 #>  [8469,]  162  166  175  180  185  191  192  190  183   188 #>  [8470,]  163  167  176  181  186  192  193  191  184   189 #>  [8471,]  163  167  176  181  186  192  193  191  184   189 #>  [8472,]  162  166  175  180  185  191  192  190  183   188 #>  [8473,]  162  166  175  180  185  191  192  190  183   188 #>  [8474,]  162  166  175  180  185  191  192  190  183   188 #>  [8475,]  163  167  176  181  186  192  193  191  184   189 #>  [8476,]  162  166  175  180  185  191  192  190  183   188 #>  [8477,]  163  167  176  181  186  192  193  191  184   189 #>  [8478,]  162  166  175  180  185  191  192  190  183   188 #>  [8479,]  163  167  176  181  186  192  193  191  184   189 #>  [8480,]  162  166  175  180  185  191  192  190  183   188 #>  [8481,]  162  166  175  180  185  191  192  190  183   188 #>  [8482,]  162  166  175  180  185  191  192  190  183   188 #>  [8483,]  163  167  176  181  186  192  193  191  184   189 #>  [8484,]  162  166  175  180  185  191  192  190  183   188 #>  [8485,]  162  166  175  180  185  191  192  190  183   188 #>  [8486,]  162  166  175  180  185  191  192  190  183   188 #>  [8487,]  163  167  176  181  186  192  193  191  184   189 #>  [8488,]  162  166  175  180  185  191  192  190  183   188 #>  [8489,]  162  166  175  180  185  191  192  190  183   188 #>  [8490,]  163  167  176  181  186  192  193  191  184   189 #>  [8491,]  163  167  176  181  186  192  193  191  184   189 #>  [8492,]  163  167  176  181  186  192  193  191  184   189 #>  [8493,]  162  166  175  180  185  191  192  190  183   188 #>  [8494,]  162  166  175  180  185  191  192  190  183   188 #>  [8495,]  163  167  176  181  186  192  193  191  184   189 #>  [8496,]  163  167  176  181  186  192  193  191  184   189 #>  [8497,]  162  166  175  180  185  191  192  190  183   188 #>  [8498,]  162  166  175  180  185  191  192  190  183   188 #>  [8499,]  162  166  175  180  185  191  192  190  183   188 #>  [8500,]  163  167  176  181  186  192  193  191  184   189 #>  [8501,]  164  168  177  184  189  194  195  193  186   191 #>  [8502,]  165  169  178  182  187  193  194  192  185   190 #>  [8503,]  164  168  177  184  189  194  195  193  186   191 #>  [8504,]  164  168  177  184  189  194  195  193  186   191 #>  [8505,]  164  168  177  184  189  194  195  193  186   191 #>  [8506,]  164  168  177  183  188  194  195  193  186   191 #>  [8507,]  164  168  177  184  189  194  195  193  186   191 #>  [8508,]  165  169  178  182  187  193  194  192  185   190 #>  [8509,]  164  168  177  184  189  194  195  193  186   191 #>  [8510,]  164  168  177  184  189  194  195  193  186   191 #>  [8511,]  164  168  177  183  188  194  195  193  186   191 #>  [8512,]  164  168  177  183  188  194  195  193  186   191 #>  [8513,]  165  169  178  182  187  193  194  192  185   190 #>  [8514,]  164  168  177  184  189  194  195  193  186   191 #>  [8515,]  165  169  178  182  187  193  194  192  185   190 #>  [8516,]  165  169  178  182  187  193  194  192  185   190 #>  [8517,]  164  168  177  183  188  194  195  193  186   191 #>  [8518,]  164  168  177  184  189  194  195  193  186   191 #>  [8519,]  165  169  178  182  187  193  194  192  185   190 #>  [8520,]  165  169  178  182  187  193  194  192  185   190 #>  [8521,]  164  168  177  183  188  194  195  193  186   191 #>  [8522,]  165  169  178  182  187  193  194  192  185   190 #>  [8523,]  164  168  177  183  188  194  195  193  186   191 #>  [8524,]  164  168  177  184  189  194  195  193  186   191 #>  [8525,]  164  168  177  184  189  194  195  193  186   191 #>  [8526,]  165  169  178  182  187  193  194  192  185   190 #>  [8527,]  165  169  178  182  187  193  194  192  185   190 #>  [8528,]  164  168  177  184  189  194  195  193  186   191 #>  [8529,]  165  169  178  182  187  193  194  192  185   190 #>  [8530,]  165  169  178  182  187  193  194  192  185   190 #>  [8531,]  164  168  177  183  188  194  195  193  186   191 #>  [8532,]  164  168  177  183  188  194  195  193  186   191 #>  [8533,]  165  169  178  182  187  193  194  192  185   190 #>  [8534,]  164  168  177  183  188  194  195  193  186   191 #>  [8535,]  164  168  177  183  188  194  195  193  186   191 #>  [8536,]  165  169  178  182  187  193  194  192  185   190 #>  [8537,]  165  169  178  182  187  193  194  192  185   190 #>  [8538,]  165  169  178  182  187  193  194  192  185   190 #>  [8539,]  164  168  177  184  189  194  195  193  186   191 #>  [8540,]  164  168  177  184  189  194  195  193  186   191 #>  [8541,]  165  169  178  182  187  193  194  192  185   190 #>  [8542,]  164  168  177  183  188  194  195  193  186   191 #>  [8543,]  165  169  178  182  187  193  194  192  185   190 #>  [8544,]  165  169  178  182  187  193  194  192  185   190 #>  [8545,]  164  168  177  184  189  194  195  193  186   191 #>  [8546,]  165  169  178  182  187  193  194  192  185   190 #>  [8547,]  164  168  177  183  188  194  195  193  186   191 #>  [8548,]  164  168  177  183  188  194  195  193  186   191 #>  [8549,]  164  168  177  184  189  194  195  193  186   191 #>  [8550,]  165  169  178  182  187  193  194  192  185   190 #>  [8551,]  165  169  178  182  187  193  194  192  185   190 #>  [8552,]  164  168  177  184  189  194  195  193  186   191 #>  [8553,]  165  169  178  182  187  193  194  192  185   190 #>  [8554,]  164  168  177  184  189  194  195  193  186   191 #>  [8555,]  165  169  178  182  187  193  194  192  185   190 #>  [8556,]  165  169  178  182  187  193  194  192  185   190 #>  [8557,]  164  168  177  184  189  194  195  193  186   191 #>  [8558,]  165  169  178  182  187  193  194  192  185   190 #>  [8559,]  165  169  178  182  187  193  194  192  185   190 #>  [8560,]  165  169  178  182  187  193  194  192  185   190 #>  [8561,]  165  169  178  182  187  193  194  192  185   190 #>  [8562,]  164  168  177  183  188  194  195  193  186   191 #>  [8563,]  165  169  178  182  187  193  194  192  185   190 #>  [8564,]  165  169  178  182  187  193  194  192  185   190 #>  [8565,]  164  168  177  183  188  194  195  193  186   191 #>  [8566,]  165  169  178  182  187  193  194  192  185   190 #>  [8567,]  164  168  177  184  189  194  195  193  186   191 #>  [8568,]  165  169  178  182  187  193  194  192  185   190 #>  [8569,]  165  169  178  182  187  193  194  192  185   190 #>  [8570,]  164  168  177  183  188  194  195  193  186   191 #>  [8571,]  165  169  178  182  187  193  194  192  185   190 #>  [8572,]  164  168  177  184  189  194  195  193  186   191 #>  [8573,]  164  168  177  184  189  194  195  193  186   191 #>  [8574,]  164  168  177  184  189  194  195  193  186   191 #>  [8575,]  165  169  178  182  187  193  194  192  185   190 #>  [8576,]  164  168  177  184  189  194  195  193  186   191 #>  [8577,]  165  169  178  182  187  193  194  192  185   190 #>  [8578,]  165  169  178  182  187  193  194  192  185   190 #>  [8579,]  164  168  177  183  188  194  195  193  186   191 #>  [8580,]  165  169  178  182  187  193  194  192  185   190 #>  [8581,]  165  169  178  182  187  193  194  192  185   190 #>  [8582,]  164  168  177  183  188  194  195  193  186   191 #>  [8583,]  165  169  178  182  187  193  194  192  185   190 #>  [8584,]  165  169  178  182  187  193  194  192  185   190 #>  [8585,]  165  169  178  182  187  193  194  192  185   190 #>  [8586,]  164  168  177  184  189  194  195  193  186   191 #>  [8587,]  165  169  178  182  187  193  194  192  185   190 #>  [8588,]  164  168  177  184  189  194  195  193  186   191 #>  [8589,]  164  168  177  183  188  194  195  193  186   191 #>  [8590,]  165  169  178  182  187  193  194  192  185   190 #>  [8591,]  164  168  177  184  189  194  195  193  186   191 #>  [8592,]  164  168  177  183  188  194  195  193  186   191 #>  [8593,]  165  169  178  182  187  193  194  192  185   190 #>  [8594,]  164  168  177  183  188  194  195  193  186   191 #>  [8595,]  165  169  178  182  187  193  194  192  185   190 #>  [8596,]  165  169  178  182  187  193  194  192  185   190 #>  [8597,]  165  169  178  182  187  193  194  192  185   190 #>  [8598,]  164  168  177  184  189  194  195  193  186   191 #>  [8599,]  164  168  177  184  189  194  195  193  186   191 #>  [8600,]  165  169  178  182  187  193  194  192  185   190 #>  [8601,]  166  170  179  185  192  197  198  195  188   193 #>  [8602,]  166  170  179  185  191  196  197  195  188   193 #>  [8603,]  166  170  179  185  191  196  197  195  188   193 #>  [8604,]  166  170  179  185  192  197  198  195  188   193 #>  [8605,]  166  170  179  185  191  196  197  195  188   193 #>  [8606,]  166  170  179  185  191  196  197  195  188   193 #>  [8607,]  166  170  179  185  192  197  198  195  188   193 #>  [8608,]  166  170  179  185  192  197  198  195  188   193 #>  [8609,]  166  170  179  185  192  197  198  195  188   193 #>  [8610,]  166  170  179  185  192  197  198  195  188   193 #>  [8611,]  166  170  179  185  191  196  197  195  188   193 #>  [8612,]  166  170  179  185  191  196  197  195  188   193 #>  [8613,]  166  170  179  185  192  197  198  195  188   193 #>  [8614,]  166  170  179  185  191  196  197  195  188   193 #>  [8615,]  166  170  179  185  192  197  198  195  188   193 #>  [8616,]  166  170  179  185  192  197  198  195  188   193 #>  [8617,]  166  170  179  185  192  197  198  195  188   193 #>  [8618,]  167  171  180  186  190  195  196  194  187   192 #>  [8619,]  166  170  179  185  191  196  197  195  188   193 #>  [8620,]  166  170  179  185  191  196  197  195  188   193 #>  [8621,]  166  170  179  185  192  197  198  195  188   193 #>  [8622,]  166  170  179  185  191  196  197  195  188   193 #>  [8623,]  166  170  179  185  192  197  198  195  188   193 #>  [8624,]  166  170  179  185  191  196  197  195  188   193 #>  [8625,]  166  170  179  185  192  197  198  195  188   193 #>  [8626,]  166  170  179  185  191  196  197  195  188   193 #>  [8627,]  166  170  179  185  192  197  198  195  188   193 #>  [8628,]  166  170  179  185  192  197  198  195  188   193 #>  [8629,]  166  170  179  185  191  196  197  195  188   193 #>  [8630,]  166  170  179  185  191  196  197  195  188   193 #>  [8631,]  166  170  179  185  191  196  197  195  188   193 #>  [8632,]  166  170  179  185  191  196  197  195  188   193 #>  [8633,]  166  170  179  185  191  196  197  195  188   193 #>  [8634,]  166  170  179  185  191  196  197  195  188   193 #>  [8635,]  166  170  179  185  191  196  197  195  188   193 #>  [8636,]  166  170  179  185  191  196  197  195  188   193 #>  [8637,]  166  170  179  185  191  196  197  195  188   193 #>  [8638,]  166  170  179  185  191  196  197  195  188   193 #>  [8639,]  166  170  179  185  192  197  198  195  188   193 #>  [8640,]  166  170  179  185  191  196  197  195  188   193 #>  [8641,]  166  170  179  185  191  196  197  195  188   193 #>  [8642,]  166  170  179  185  191  196  197  195  188   193 #>  [8643,]  166  170  179  185  192  197  198  195  188   193 #>  [8644,]  166  170  179  185  191  196  197  195  188   193 #>  [8645,]  166  170  179  185  192  197  198  195  188   193 #>  [8646,]  166  170  179  185  192  197  198  195  188   193 #>  [8647,]  166  170  179  185  192  197  198  195  188   193 #>  [8648,]  166  170  179  185  191  196  197  195  188   193 #>  [8649,]  166  170  179  185  191  196  197  195  188   193 #>  [8650,]  166  170  179  185  191  196  197  195  188   193 #>  [8651,]  167  171  180  186  190  195  196  194  187   192 #>  [8652,]  166  170  179  185  191  196  197  195  188   193 #>  [8653,]  167  171  180  186  190  195  196  194  187   192 #>  [8654,]  166  170  179  185  191  196  197  195  188   193 #>  [8655,]  166  170  179  185  191  196  197  195  188   193 #>  [8656,]  166  170  179  185  192  197  198  195  188   193 #>  [8657,]  166  170  179  185  191  196  197  195  188   193 #>  [8658,]  166  170  179  185  191  196  197  195  188   193 #>  [8659,]  166  170  179  185  191  196  197  195  188   193 #>  [8660,]  166  170  179  185  191  196  197  195  188   193 #>  [8661,]  166  170  179  185  192  197  198  195  188   193 #>  [8662,]  166  170  179  185  191  196  197  195  188   193 #>  [8663,]  166  170  179  185  191  196  197  195  188   193 #>  [8664,]  166  170  179  185  192  197  198  195  188   193 #>  [8665,]  166  170  179  185  191  196  197  195  188   193 #>  [8666,]  166  170  179  185  191  196  197  195  188   193 #>  [8667,]  166  170  179  185  191  196  197  195  188   193 #>  [8668,]  166  170  179  185  191  196  197  195  188   193 #>  [8669,]  166  170  179  185  191  196  197  195  188   193 #>  [8670,]  166  170  179  185  192  197  198  195  188   193 #>  [8671,]  166  170  179  185  192  197  198  195  188   193 #>  [8672,]  166  170  179  185  192  197  198  195  188   193 #>  [8673,]  166  170  179  185  192  197  198  195  188   193 #>  [8674,]  166  170  179  185  192  197  198  195  188   193 #>  [8675,]  166  170  179  185  192  197  198  195  188   193 #>  [8676,]  166  170  179  185  192  197  198  195  188   193 #>  [8677,]  166  170  179  185  192  197  198  195  188   193 #>  [8678,]  166  170  179  185  191  196  197  195  188   193 #>  [8679,]  166  170  179  185  191  196  197  195  188   193 #>  [8680,]  166  170  179  185  191  196  197  195  188   193 #>  [8681,]  166  170  179  185  191  196  197  195  188   193 #>  [8682,]  166  170  179  185  192  197  198  195  188   193 #>  [8683,]  166  170  179  185  191  196  197  195  188   193 #>  [8684,]  167  171  180  186  190  195  196  194  187   192 #>  [8685,]  166  170  179  185  191  196  197  195  188   193 #>  [8686,]  166  170  179  185  191  196  197  195  188   193 #>  [8687,]  166  170  179  185  191  196  197  195  188   193 #>  [8688,]  166  170  179  185  192  197  198  195  188   193 #>  [8689,]  166  170  179  185  191  196  197  195  188   193 #>  [8690,]  166  170  179  185  191  196  197  195  188   193 #>  [8691,]  166  170  179  185  191  196  197  195  188   193 #>  [8692,]  166  170  179  185  191  196  197  195  188   193 #>  [8693,]  166  170  179  185  191  196  197  195  188   193 #>  [8694,]  167  171  180  186  190  195  196  194  187   192 #>  [8695,]  166  170  179  185  192  197  198  195  188   193 #>  [8696,]  166  170  179  185  191  196  197  195  188   193 #>  [8697,]  166  170  179  185  191  196  197  195  188   193 #>  [8698,]  166  170  179  185  191  196  197  195  188   193 #>  [8699,]  166  170  179  185  191  196  197  195  188   193 #>  [8700,]  166  170  179  185  192  197  198  195  188   193 #>  [8701,]  169  173  182  188  194  199  199  197  190   194 #>  [8702,]  168  172  181  187  193  198  199  197  190   194 #>  [8703,]  168  172  181  187  193  198  199  196  189   196 #>  [8704,]  168  172  181  187  193  198  199  196  189   195 #>  [8705,]  169  173  182  188  194  199  199  196  189   196 #>  [8706,]  168  172  181  187  193  198  199  197  190   194 #>  [8707,]  168  172  181  187  193  198  199  196  189   196 #>  [8708,]  168  172  181  187  193  198  199  196  189   195 #>  [8709,]  168  172  181  187  193  198  199  196  189   195 #>  [8710,]  168  172  181  187  193  198  199  196  189   195 #>  [8711,]  168  172  181  187  193  198  199  196  189   196 #>  [8712,]  168  172  181  187  193  198  199  196  189   196 #>  [8713,]  168  172  181  187  193  198  199  197  190   194 #>  [8714,]  169  173  182  188  194  199  199  197  190   194 #>  [8715,]  169  173  182  188  194  199  199  197  190   194 #>  [8716,]  168  172  181  187  193  198  199  197  190   194 #>  [8717,]  168  172  181  187  193  198  199  197  190   194 #>  [8718,]  169  173  182  188  194  199  199  196  189   196 #>  [8719,]  168  172  181  187  193  198  199  196  189   196 #>  [8720,]  168  172  181  187  193  198  199  196  189   196 #>  [8721,]  168  172  181  187  193  198  199  197  190   194 #>  [8722,]  169  173  182  188  194  199  199  197  190   194 #>  [8723,]  168  172  181  187  193  198  199  196  189   196 #>  [8724,]  168  172  181  187  193  198  199  196  189   196 #>  [8725,]  168  172  181  187  193  198  199  196  189   196 #>  [8726,]  169  173  182  188  194  199  199  197  190   194 #>  [8727,]  169  173  182  188  194  199  199  197  190   194 #>  [8728,]  168  172  181  187  193  198  199  196  189   196 #>  [8729,]  168  172  181  187  193  198  199  197  190   194 #>  [8730,]  168  172  181  187  193  198  199  196  189   196 #>  [8731,]  169  173  182  188  194  199  199  196  189   196 #>  [8732,]  169  173  182  188  194  199  199  196  189   196 #>  [8733,]  168  172  181  187  193  198  199  197  190   194 #>  [8734,]  168  172  181  187  193  198  199  196  189   196 #>  [8735,]  168  172  181  187  193  198  199  197  190   194 #>  [8736,]  168  172  181  187  193  198  199  196  189   196 #>  [8737,]  168  172  181  187  193  198  199  197  190   194 #>  [8738,]  168  172  181  187  193  198  199  196  189   196 #>  [8739,]  168  172  181  187  193  198  199  196  189   196 #>  [8740,]  168  172  181  187  193  198  199  196  189   196 #>  [8741,]  168  172  181  187  193  198  199  197  190   194 #>  [8742,]  168  172  181  187  193  198  199  196  189   196 #>  [8743,]  169  173  182  188  194  199  199  196  189   196 #>  [8744,]  168  172  181  187  193  198  199  197  190   194 #>  [8745,]  168  172  181  187  193  198  199  196  189   196 #>  [8746,]  168  172  181  187  193  198  199  196  189   196 #>  [8747,]  169  173  182  188  194  199  199  196  189   196 #>  [8748,]  168  172  181  187  193  198  199  196  189   196 #>  [8749,]  168  172  181  187  193  198  199  196  189   196 #>  [8750,]  168  172  181  187  193  198  199  197  190   194 #>  [8751,]  168  172  181  187  193  198  199  196  189   195 #>  [8752,]  168  172  181  187  193  198  199  197  190   194 #>  [8753,]  168  172  181  187  193  198  199  196  189   196 #>  [8754,]  168  172  181  187  193  198  199  196  189   196 #>  [8755,]  168  172  181  187  193  198  199  196  189   196 #>  [8756,]  168  172  181  187  193  198  199  196  189   196 #>  [8757,]  168  172  181  187  193  198  199  196  189   196 #>  [8758,]  169  173  182  188  194  199  199  197  190   194 #>  [8759,]  169  173  182  188  194  199  199  197  190   194 #>  [8760,]  168  172  181  187  193  198  199  196  189   196 #>  [8761,]  169  173  182  188  194  199  199  197  190   194 #>  [8762,]  168  172  181  187  193  198  199  196  189   196 #>  [8763,]  168  172  181  187  193  198  199  196  189   196 #>  [8764,]  168  172  181  187  193  198  199  196  189   196 #>  [8765,]  168  172  181  187  193  198  199  196  189   196 #>  [8766,]  169  173  182  188  194  199  199  196  189   196 #>  [8767,]  168  172  181  187  193  198  199  196  189   196 #>  [8768,]  168  172  181  187  193  198  199  197  190   194 #>  [8769,]  168  172  181  187  193  198  199  196  189   196 #>  [8770,]  169  173  182  188  194  199  199  197  190   194 #>  [8771,]  169  173  182  188  194  199  199  197  190   194 #>  [8772,]  168  172  181  187  193  198  199  196  189   196 #>  [8773,]  168  172  181  187  193  198  199  197  190   194 #>  [8774,]  168  172  181  187  193  198  199  196  189   196 #>  [8775,]  169  173  182  188  194  199  199  196  189   196 #>  [8776,]  168  172  181  187  193  198  199  197  190   194 #>  [8777,]  169  173  182  188  194  199  199  197  190   194 #>  [8778,]  168  172  181  187  193  198  199  196  189   196 #>  [8779,]  169  173  182  188  194  199  199  197  190   194 #>  [8780,]  168  172  181  187  193  198  199  196  189   196 #>  [8781,]  168  172  181  187  193  198  199  197  190   194 #>  [8782,]  168  172  181  187  193  198  199  196  189   196 #>  [8783,]  168  172  181  187  193  198  199  197  190   194 #>  [8784,]  168  172  181  187  193  198  199  196  189   196 #>  [8785,]  168  172  181  187  193  198  199  196  189   195 #>  [8786,]  168  172  181  187  193  198  199  197  190   194 #>  [8787,]  169  173  182  188  194  199  199  196  189   196 #>  [8788,]  168  172  181  187  193  198  199  196  189   196 #>  [8789,]  168  172  181  187  193  198  199  196  189   196 #>  [8790,]  168  172  181  187  193  198  199  197  190   194 #>  [8791,]  169  173  182  188  194  199  199  196  189   195 #>  [8792,]  168  172  181  187  193  198  199  196  189   196 #>  [8793,]  168  172  181  187  193  198  199  197  190   194 #>  [8794,]  168  172  181  187  193  198  199  197  190   194 #>  [8795,]  169  173  182  188  194  199  199  196  189   195 #>  [8796,]  168  172  181  187  193  198  199  197  190   194 #>  [8797,]  168  172  181  187  193  198  199  196  189   196 #>  [8798,]  168  172  181  187  193  198  199  196  189   196 #>  [8799,]  168  172  181  187  193  198  199  197  190   194 #>  [8800,]  169  173  182  188  194  199  199  197  190   194 #>  [8801,]  170  174  183  189  196  201  201  199  192   198 #>  [8802,]  170  174  184  189  195  200  200  198  191   197 #>  [8803,]  170  174  183  189  195  200  200  198  191   197 #>  [8804,]  170  174  183  189  196  201  201  199  192   198 #>  [8805,]  170  174  184  189  195  200  200  198  191   197 #>  [8806,]  170  174  183  189  195  200  200  198  191   197 #>  [8807,]  170  174  184  189  196  201  201  199  192   198 #>  [8808,]  170  174  183  189  195  200  200  198  191   197 #>  [8809,]  170  174  184  189  196  201  201  199  192   198 #>  [8810,]  170  174  184  189  196  201  201  199  192   198 #>  [8811,]  170  174  183  189  195  200  200  198  191   197 #>  [8812,]  170  174  184  189  195  200  200  198  191   197 #>  [8813,]  170  174  184  189  196  201  201  199  192   198 #>  [8814,]  170  174  183  189  196  201  201  199  192   198 #>  [8815,]  170  174  183  189  195  200  200  198  191   197 #>  [8816,]  170  174  183  189  196  201  201  199  192   198 #>  [8817,]  170  174  184  189  195  200  200  198  191   197 #>  [8818,]  170  174  184  189  195  200  200  198  191   197 #>  [8819,]  170  174  183  189  195  200  200  198  191   197 #>  [8820,]  170  174  184  189  196  201  201  199  192   198 #>  [8821,]  170  174  184  189  195  200  200  198  191   197 #>  [8822,]  170  174  184  189  196  201  201  199  192   198 #>  [8823,]  170  174  184  189  195  200  200  198  191   197 #>  [8824,]  170  174  184  189  196  201  201  199  192   198 #>  [8825,]  170  174  183  189  196  201  201  199  192   198 #>  [8826,]  170  174  183  189  195  200  200  198  191   197 #>  [8827,]  170  174  184  189  195  200  200  198  191   197 #>  [8828,]  170  174  183  189  196  201  201  199  192   198 #>  [8829,]  170  174  184  189  195  200  200  198  191   197 #>  [8830,]  170  174  184  189  195  200  200  198  191   197 #>  [8831,]  170  174  184  189  195  200  200  198  191   197 #>  [8832,]  170  174  184  189  195  200  200  198  191   197 #>  [8833,]  170  174  184  189  195  200  200  198  191   197 #>  [8834,]  170  174  183  189  195  200  200  198  191   197 #>  [8835,]  170  174  183  189  195  200  200  198  191   197 #>  [8836,]  170  174  184  189  196  201  201  199  192   198 #>  [8837,]  170  174  183  189  195  200  200  198  191   197 #>  [8838,]  170  174  183  189  195  200  200  198  191   197 #>  [8839,]  170  174  184  189  196  201  201  199  192   198 #>  [8840,]  170  174  184  189  195  200  200  198  191   197 #>  [8841,]  170  174  184  189  195  200  200  198  191   197 #>  [8842,]  170  174  183  189  195  200  200  198  191   197 #>  [8843,]  170  174  183  189  195  200  200  198  191   197 #>  [8844,]  170  174  184  189  195  200  200  198  191   197 #>  [8845,]  170  174  183  189  196  201  201  199  192   198 #>  [8846,]  170  174  183  189  195  200  200  198  191   197 #>  [8847,]  170  174  184  189  195  200  200  198  191   197 #>  [8848,]  170  174  184  189  195  200  200  198  191   197 #>  [8849,]  170  174  183  189  196  201  201  199  192   198 #>  [8850,]  170  174  184  189  196  201  201  199  192   198 #>  [8851,]  170  174  184  189  195  200  200  198  191   197 #>  [8852,]  170  174  183  189  196  201  201  199  192   198 #>  [8853,]  170  174  184  189  196  201  201  199  192   198 #>  [8854,]  170  174  184  189  196  201  201  199  192   198 #>  [8855,]  170  174  183  189  196  201  201  199  192   198 #>  [8856,]  170  174  183  189  195  200  200  198  191   197 #>  [8857,]  170  174  183  189  196  201  201  199  192   198 #>  [8858,]  170  174  184  189  196  201  201  199  192   198 #>  [8859,]  170  174  183  189  196  201  201  199  192   198 #>  [8860,]  170  174  184  189  195  200  200  198  191   197 #>  [8861,]  170  174  184  189  195  200  200  198  191   197 #>  [8862,]  170  174  183  189  195  200  200  198  191   197 #>  [8863,]  170  174  184  189  195  200  200  198  191   197 #>  [8864,]  170  174  183  189  195  200  200  198  191   197 #>  [8865,]  170  174  183  189  195  200  200  198  191   197 #>  [8866,]  170  174  183  189  195  200  200  198  191   197 #>  [8867,]  170  174  183  189  196  201  201  199  192   198 #>  [8868,]  170  174  183  189  195  200  200  198  191   197 #>  [8869,]  170  174  183  189  195  200  200  198  191   197 #>  [8870,]  170  174  184  189  195  200  200  198  191   197 #>  [8871,]  170  174  184  189  195  200  200  198  191   197 #>  [8872,]  170  174  183  189  196  201  201  199  192   198 #>  [8873,]  170  174  183  189  196  201  201  199  192   198 #>  [8874,]  170  174  184  189  195  200  200  198  191   197 #>  [8875,]  170  174  184  189  195  200  200  198  191   197 #>  [8876,]  170  174  184  189  196  201  201  199  192   198 #>  [8877,]  170  174  183  189  195  200  200  198  191   197 #>  [8878,]  170  174  184  189  195  200  200  198  191   197 #>  [8879,]  170  174  183  189  195  200  200  198  191   197 #>  [8880,]  170  174  184  189  195  200  200  198  191   197 #>  [8881,]  170  174  184  189  195  200  200  198  191   197 #>  [8882,]  170  174  183  189  195  200  200  198  191   197 #>  [8883,]  170  174  184  189  195  200  200  198  191   197 #>  [8884,]  170  174  184  189  195  200  200  198  191   197 #>  [8885,]  170  174  183  189  196  201  201  199  192   198 #>  [8886,]  170  174  184  189  196  201  201  199  192   198 #>  [8887,]  170  174  184  189  196  201  201  199  192   198 #>  [8888,]  170  174  184  189  196  201  201  199  192   198 #>  [8889,]  170  174  183  189  195  200  200  198  191   197 #>  [8890,]  170  174  184  189  196  201  201  199  192   198 #>  [8891,]  170  174  183  189  196  201  201  199  192   198 #>  [8892,]  170  174  184  189  195  200  200  198  191   197 #>  [8893,]  170  174  184  189  195  200  200  198  191   197 #>  [8894,]  170  174  183  189  195  200  200  198  191   197 #>  [8895,]  170  174  184  189  195  200  200  198  191   197 #>  [8896,]  170  174  183  189  195  200  200  198  191   197 #>  [8897,]  170  174  183  189  195  200  200  198  191   197 #>  [8898,]  170  174  183  189  195  200  200  198  191   197 #>  [8899,]  170  174  183  189  195  200  200  198  191   197 #>  [8900,]  170  174  183  189  195  200  200  198  191   197 #>  [8901,]  172  176  186  191  198  203  203  201  194   200 #>  [8902,]  172  176  186  191  198  203  203  201  194   200 #>  [8903,]  171  175  185  190  197  202  202  200  193   199 #>  [8904,]  172  176  186  191  198  203  203  201  194   200 #>  [8905,]  172  176  186  191  198  203  203  201  194   200 #>  [8906,]  172  176  186  191  198  203  203  201  194   200 #>  [8907,]  171  175  185  190  197  202  202  200  193   199 #>  [8908,]  172  176  186  191  198  203  203  201  194   200 #>  [8909,]  172  176  186  191  198  203  203  201  194   200 #>  [8910,]  172  176  186  191  198  203  203  201  194   200 #>  [8911,]  172  176  186  191  198  203  203  201  194   200 #>  [8912,]  172  176  186  191  198  203  203  201  194   200 #>  [8913,]  171  175  185  190  197  202  202  200  193   199 #>  [8914,]  172  176  186  191  198  203  203  201  194   200 #>  [8915,]  172  176  186  191  198  203  203  201  194   200 #>  [8916,]  171  175  185  190  197  202  202  200  193   199 #>  [8917,]  172  176  186  191  198  203  203  201  194   200 #>  [8918,]  172  176  186  191  198  203  203  201  194   200 #>  [8919,]  172  176  186  191  198  203  203  201  194   200 #>  [8920,]  172  176  186  191  198  203  203  201  194   200 #>  [8921,]  171  175  185  190  197  202  202  200  193   199 #>  [8922,]  172  176  186  191  198  203  203  201  194   200 #>  [8923,]  171  175  185  190  197  202  202  200  193   199 #>  [8924,]  172  176  186  191  198  203  203  201  194   200 #>  [8925,]  172  176  186  191  198  203  203  201  194   200 #>  [8926,]  172  176  186  191  198  203  203  201  194   200 #>  [8927,]  172  176  186  191  198  203  203  201  194   200 #>  [8928,]  172  176  186  191  198  203  203  201  194   200 #>  [8929,]  172  176  186  191  198  203  203  201  194   200 #>  [8930,]  171  175  185  190  197  202  202  200  193   199 #>  [8931,]  171  175  185  190  197  202  202  200  193   199 #>  [8932,]  172  176  186  191  198  203  203  201  194   200 #>  [8933,]  172  176  186  191  198  203  203  201  194   200 #>  [8934,]  172  176  186  191  198  203  203  201  194   200 #>  [8935,]  172  176  186  191  198  203  203  201  194   200 #>  [8936,]  171  175  185  190  197  202  202  200  193   199 #>  [8937,]  172  176  186  191  198  203  203  201  194   200 #>  [8938,]  172  176  186  191  198  203  203  201  194   200 #>  [8939,]  171  175  185  190  197  202  202  200  193   199 #>  [8940,]  171  175  185  190  197  202  202  200  193   199 #>  [8941,]  172  176  186  191  198  203  203  201  194   200 #>  [8942,]  172  176  186  191  198  203  203  201  194   200 #>  [8943,]  172  176  186  191  198  203  203  201  194   200 #>  [8944,]  172  176  186  191  198  203  203  201  194   200 #>  [8945,]  172  176  186  191  198  203  203  201  194   200 #>  [8946,]  172  176  186  191  198  203  203  201  194   200 #>  [8947,]  171  175  185  190  197  202  202  200  193   199 #>  [8948,]  172  176  186  191  198  203  203  201  194   200 #>  [8949,]  171  175  185  190  197  202  202  200  193   199 #>  [8950,]  172  176  186  191  198  203  203  201  194   200 #>  [8951,]  172  176  186  191  198  203  203  201  194   200 #>  [8952,]  172  176  186  191  198  203  203  201  194   200 #>  [8953,]  172  176  186  191  198  203  203  201  194   200 #>  [8954,]  171  175  185  190  197  202  202  200  193   199 #>  [8955,]  172  176  186  191  198  203  203  201  194   200 #>  [8956,]  172  176  186  191  198  203  203  201  194   200 #>  [8957,]  172  176  186  191  198  203  203  201  194   200 #>  [8958,]  172  176  186  191  198  203  203  201  194   200 #>  [8959,]  172  176  186  191  198  203  203  201  194   200 #>  [8960,]  172  176  186  191  198  203  203  201  194   200 #>  [8961,]  172  176  186  191  198  203  203  201  194   200 #>  [8962,]  171  175  185  190  197  202  202  200  193   199 #>  [8963,]  172  176  186  191  198  203  203  201  194   200 #>  [8964,]  172  176  186  191  198  203  203  201  194   200 #>  [8965,]  172  176  186  191  198  203  203  201  194   200 #>  [8966,]  172  176  186  191  198  203  203  201  194   200 #>  [8967,]  172  176  186  191  198  203  203  201  194   200 #>  [8968,]  172  176  186  191  198  203  203  201  194   200 #>  [8969,]  172  176  186  191  198  203  203  201  194   200 #>  [8970,]  171  175  185  190  197  202  202  200  193   199 #>  [8971,]  172  176  186  191  198  203  203  201  194   200 #>  [8972,]  172  176  186  191  198  203  203  201  194   200 #>  [8973,]  172  176  186  191  198  203  203  201  194   200 #>  [8974,]  172  176  186  191  198  203  203  201  194   200 #>  [8975,]  172  176  186  191  198  203  203  201  194   200 #>  [8976,]  172  176  186  191  198  203  203  201  194   200 #>  [8977,]  171  175  185  190  197  202  202  200  193   199 #>  [8978,]  172  176  186  191  198  203  203  201  194   200 #>  [8979,]  171  175  185  190  197  202  202  200  193   199 #>  [8980,]  171  175  185  190  197  202  202  200  193   199 #>  [8981,]  172  176  186  191  198  203  203  201  194   200 #>  [8982,]  172  176  186  191  198  203  203  201  194   200 #>  [8983,]  171  175  185  190  197  202  202  200  193   199 #>  [8984,]  172  176  186  191  198  203  203  201  194   200 #>  [8985,]  172  176  186  191  198  203  203  201  194   200 #>  [8986,]  172  176  186  191  198  203  203  201  194   200 #>  [8987,]  172  176  186  191  198  203  203  201  194   200 #>  [8988,]  172  176  186  191  198  203  203  201  194   200 #>  [8989,]  172  176  186  191  198  203  203  201  194   200 #>  [8990,]  172  176  186  191  198  203  203  201  194   200 #>  [8991,]  172  176  186  191  198  203  203  201  194   200 #>  [8992,]  172  176  186  191  198  203  203  201  194   200 #>  [8993,]  172  176  186  191  198  203  203  201  194   200 #>  [8994,]  172  176  186  191  198  203  203  201  194   200 #>  [8995,]  171  175  185  190  197  202  202  200  193   199 #>  [8996,]  172  176  186  191  198  203  203  201  194   200 #>  [8997,]  172  176  186  191  198  203  203  201  194   200 #>  [8998,]  171  175  185  190  197  202  202  200  193   199 #>  [8999,]  172  176  186  191  198  203  203  201  194   200 #>  [9000,]  172  176  186  191  198  203  203  201  194   200 #>  [9001,]  174  178  188  192  199  204  204  202  195   201 #>  [9002,]  174  178  188  192  199  204  204  202  195   201 #>  [9003,]  173  177  187  194  200  205  205  203  196   202 #>  [9004,]  173  177  187  193  200  205  205  203  196   202 #>  [9005,]  173  177  187  194  200  205  205  203  196   202 #>  [9006,]  174  178  188  192  199  204  204  202  195   201 #>  [9007,]  174  178  188  192  199  204  204  202  195   201 #>  [9008,]  173  177  187  193  200  205  205  203  196   202 #>  [9009,]  173  177  187  193  200  205  205  203  196   202 #>  [9010,]  173  177  187  193  200  205  205  203  196   202 #>  [9011,]  174  178  188  192  199  204  204  202  195   201 #>  [9012,]  173  177  187  194  200  205  205  203  196   202 #>  [9013,]  174  178  188  192  199  204  204  202  195   201 #>  [9014,]  174  178  188  192  199  204  204  202  195   201 #>  [9015,]  174  178  188  192  199  204  204  202  195   201 #>  [9016,]  174  178  188  192  199  204  204  202  195   201 #>  [9017,]  174  178  188  192  199  204  204  202  195   201 #>  [9018,]  173  177  187  193  200  205  205  203  196   202 #>  [9019,]  174  178  188  192  199  204  204  202  195   201 #>  [9020,]  173  177  187  193  200  205  205  203  196   202 #>  [9021,]  174  178  188  192  199  204  204  202  195   201 #>  [9022,]  174  178  188  192  199  204  204  202  195   201 #>  [9023,]  173  177  187  194  200  205  205  203  196   202 #>  [9024,]  173  177  187  194  200  205  205  203  196   202 #>  [9025,]  173  177  187  194  200  205  205  203  196   202 #>  [9026,]  174  178  188  192  199  204  204  202  195   201 #>  [9027,]  174  178  188  192  199  204  204  202  195   201 #>  [9028,]  173  177  187  194  200  205  205  203  196   202 #>  [9029,]  174  178  188  192  199  204  204  202  195   201 #>  [9030,]  173  177  187  193  200  205  205  203  196   202 #>  [9031,]  173  177  187  194  200  205  205  203  196   202 #>  [9032,]  173  177  187  194  200  205  205  203  196   202 #>  [9033,]  174  178  188  192  199  204  204  202  195   201 #>  [9034,]  173  177  187  194  200  205  205  203  196   202 #>  [9035,]  174  178  188  192  199  204  204  202  195   201 #>  [9036,]  173  177  187  194  200  205  205  203  196   202 #>  [9037,]  174  178  188  192  199  204  204  202  195   201 #>  [9038,]  173  177  187  194  200  205  205  203  196   202 #>  [9039,]  173  177  187  193  200  205  205  203  196   202 #>  [9040,]  174  178  188  192  199  204  204  202  195   201 #>  [9041,]  174  178  188  192  199  204  204  202  195   201 #>  [9042,]  173  177  187  194  200  205  205  203  196   202 #>  [9043,]  173  177  187  193  200  205  205  203  196   202 #>  [9044,]  174  178  188  192  199  204  204  202  195   201 #>  [9045,]  173  177  187  194  200  205  205  203  196   202 #>  [9046,]  173  177  187  194  200  205  205  203  196   202 #>  [9047,]  174  178  188  192  199  204  204  202  195   201 #>  [9048,]  173  177  187  194  200  205  205  203  196   202 #>  [9049,]  173  177  187  194  200  205  205  203  196   202 #>  [9050,]  174  178  188  192  199  204  204  202  195   201 #>  [9051,]  173  177  187  193  200  205  205  203  196   202 #>  [9052,]  174  178  188  192  199  204  204  202  195   201 #>  [9053,]  173  177  187  193  200  205  205  203  196   202 #>  [9054,]  173  177  187  194  200  205  205  203  196   202 #>  [9055,]  174  178  188  192  199  204  204  202  195   201 #>  [9056,]  173  177  187  193  200  205  205  203  196   202 #>  [9057,]  173  177  187  194  200  205  205  203  196   202 #>  [9058,]  174  178  188  192  199  204  204  202  195   201 #>  [9059,]  174  178  188  192  199  204  204  202  195   201 #>  [9060,]  173  177  187  193  200  205  205  203  196   202 #>  [9061,]  174  178  188  192  199  204  204  202  195   201 #>  [9062,]  173  177  187  194  200  205  205  203  196   202 #>  [9063,]  173  177  187  194  200  205  205  203  196   202 #>  [9064,]  173  177  187  193  200  205  205  203  196   202 #>  [9065,]  173  177  187  194  200  205  205  203  196   202 #>  [9066,]  173  177  187  193  200  205  205  203  196   202 #>  [9067,]  173  177  187  193  200  205  205  203  196   202 #>  [9068,]  174  178  188  192  199  204  204  202  195   201 #>  [9069,]  174  178  188  192  199  204  204  202  195   201 #>  [9070,]  174  178  188  192  199  204  204  202  195   201 #>  [9071,]  174  178  188  192  199  204  204  202  195   201 #>  [9072,]  173  177  187  194  200  205  205  203  196   202 #>  [9073,]  174  178  188  192  199  204  204  202  195   201 #>  [9074,]  174  178  188  192  199  204  204  202  195   201 #>  [9075,]  174  178  188  192  199  204  204  202  195   201 #>  [9076,]  174  178  188  192  199  204  204  202  195   201 #>  [9077,]  174  178  188  192  199  204  204  202  195   201 #>  [9078,]  173  177  187  193  200  205  205  203  196   202 #>  [9079,]  174  178  188  192  199  204  204  202  195   201 #>  [9080,]  173  177  187  194  200  205  205  203  196   202 #>  [9081,]  174  178  188  192  199  204  204  202  195   201 #>  [9082,]  173  177  187  194  200  205  205  203  196   202 #>  [9083,]  174  178  188  192  199  204  204  202  195   201 #>  [9084,]  174  178  188  192  199  204  204  202  195   201 #>  [9085,]  173  177  187  193  200  205  205  203  196   202 #>  [9086,]  174  178  188  192  199  204  204  202  195   201 #>  [9087,]  174  178  188  192  199  204  204  202  195   201 #>  [9088,]  173  177  187  194  200  205  205  203  196   202 #>  [9089,]  173  177  187  193  200  205  205  203  196   202 #>  [9090,]  174  178  188  192  199  204  204  202  195   201 #>  [9091,]  173  177  187  193  200  205  205  203  196   202 #>  [9092,]  174  178  188  192  199  204  204  202  195   201 #>  [9093,]  174  178  188  192  199  204  204  202  195   201 #>  [9094,]  174  178  188  192  199  204  204  202  195   201 #>  [9095,]  173  177  187  193  200  205  205  203  196   202 #>  [9096,]  174  178  188  192  199  204  204  202  195   201 #>  [9097,]  174  178  188  192  199  204  204  202  195   201 #>  [9098,]  174  178  188  192  199  204  204  202  195   201 #>  [9099,]  174  178  188  192  199  204  204  202  195   201 #>  [9100,]  174  178  188  192  199  204  204  202  195   201 #>  [9101,]  175  179  189  195  201  206  206  204  197   203 #>  [9102,]  175  179  189  195  201  206  206  204  197   203 #>  [9103,]  175  179  189  195  201  206  206  204  197   203 #>  [9104,]  176  180  190  196  202  207  207  205  198   204 #>  [9105,]  175  179  189  195  201  206  206  204  197   203 #>  [9106,]  176  180  190  196  202  207  207  205  198   204 #>  [9107,]  175  179  189  195  201  206  206  204  197   203 #>  [9108,]  175  179  189  195  201  206  206  204  197   203 #>  [9109,]  176  180  190  196  202  207  207  205  198   204 #>  [9110,]  176  180  190  196  202  207  207  205  198   204 #>  [9111,]  176  180  190  196  202  207  207  205  198   204 #>  [9112,]  176  180  190  196  202  207  207  205  198   204 #>  [9113,]  175  179  189  195  201  206  206  204  197   203 #>  [9114,]  176  180  190  196  202  207  207  205  198   204 #>  [9115,]  176  180  190  196  202  207  207  205  198   204 #>  [9116,]  175  179  189  195  201  206  206  204  197   203 #>  [9117,]  175  179  189  195  201  206  206  204  197   203 #>  [9118,]  176  180  190  196  202  207  207  205  198   204 #>  [9119,]  176  180  190  196  202  207  207  205  198   204 #>  [9120,]  175  179  189  195  201  206  206  204  197   203 #>  [9121,]  176  180  190  196  202  207  207  205  198   204 #>  [9122,]  175  179  189  195  201  206  206  204  197   203 #>  [9123,]  175  179  189  195  201  206  206  204  197   203 #>  [9124,]  175  179  189  195  201  206  206  204  197   203 #>  [9125,]  175  179  189  195  201  206  206  204  197   203 #>  [9126,]  176  180  190  196  202  207  207  205  198   204 #>  [9127,]  176  180  190  196  202  207  207  205  198   204 #>  [9128,]  175  179  189  195  201  206  206  204  197   203 #>  [9129,]  175  179  189  195  201  206  206  204  197   203 #>  [9130,]  176  180  190  196  202  207  207  205  198   204 #>  [9131,]  176  180  190  196  202  207  207  205  198   204 #>  [9132,]  176  180  190  196  202  207  207  205  198   204 #>  [9133,]  176  180  190  196  202  207  207  205  198   204 #>  [9134,]  175  179  189  195  201  206  206  204  197   203 #>  [9135,]  175  179  189  195  201  206  206  204  197   203 #>  [9136,]  176  180  190  196  202  207  207  205  198   204 #>  [9137,]  175  179  189  195  201  206  206  204  197   203 #>  [9138,]  176  180  190  196  202  207  207  205  198   204 #>  [9139,]  175  179  189  195  201  206  206  204  197   203 #>  [9140,]  175  179  189  195  201  206  206  204  197   203 #>  [9141,]  176  180  190  196  202  207  207  205  198   204 #>  [9142,]  176  180  190  196  202  207  207  205  198   204 #>  [9143,]  175  179  189  195  201  206  206  204  197   203 #>  [9144,]  175  179  189  195  201  206  206  204  197   203 #>  [9145,]  175  179  189  195  201  206  206  204  197   203 #>  [9146,]  175  179  189  195  201  206  206  204  197   203 #>  [9147,]  175  179  189  195  201  206  206  204  197   203 #>  [9148,]  176  180  190  196  202  207  207  205  198   204 #>  [9149,]  175  179  189  195  201  206  206  204  197   203 #>  [9150,]  175  179  189  195  201  206  206  204  197   203 #>  [9151,]  175  179  189  195  201  206  206  204  197   203 #>  [9152,]  175  179  189  195  201  206  206  204  197   203 #>  [9153,]  175  179  189  195  201  206  206  204  197   203 #>  [9154,]  175  179  189  195  201  206  206  204  197   203 #>  [9155,]  175  179  189  195  201  206  206  204  197   203 #>  [9156,]  175  179  189  195  201  206  206  204  197   203 #>  [9157,]  175  179  189  195  201  206  206  204  197   203 #>  [9158,]  176  180  190  196  202  207  207  205  198   204 #>  [9159,]  175  179  189  195  201  206  206  204  197   203 #>  [9160,]  176  180  190  196  202  207  207  205  198   204 #>  [9161,]  176  180  190  196  202  207  207  205  198   204 #>  [9162,]  176  180  190  196  202  207  207  205  198   204 #>  [9163,]  175  179  189  195  201  206  206  204  197   203 #>  [9164,]  176  180  190  196  202  207  207  205  198   204 #>  [9165,]  175  179  189  195  201  206  206  204  197   203 #>  [9166,]  175  179  189  195  201  206  206  204  197   203 #>  [9167,]  175  179  189  195  201  206  206  204  197   203 #>  [9168,]  176  180  190  196  202  207  207  205  198   204 #>  [9169,]  176  180  190  196  202  207  207  205  198   204 #>  [9170,]  175  179  189  195  201  206  206  204  197   203 #>  [9171,]  175  179  189  195  201  206  206  204  197   203 #>  [9172,]  175  179  189  195  201  206  206  204  197   203 #>  [9173,]  175  179  189  195  201  206  206  204  197   203 #>  [9174,]  176  180  190  196  202  207  207  205  198   204 #>  [9175,]  176  180  190  196  202  207  207  205  198   204 #>  [9176,]  175  179  189  195  201  206  206  204  197   203 #>  [9177,]  175  179  189  195  201  206  206  204  197   203 #>  [9178,]  175  179  189  195  201  206  206  204  197   203 #>  [9179,]  175  179  189  195  201  206  206  204  197   203 #>  [9180,]  175  179  189  195  201  206  206  204  197   203 #>  [9181,]  175  179  189  195  201  206  206  204  197   203 #>  [9182,]  176  180  190  196  202  207  207  205  198   204 #>  [9183,]  175  179  189  195  201  206  206  204  197   203 #>  [9184,]  175  179  189  195  201  206  206  204  197   203 #>  [9185,]  176  180  190  196  202  207  207  205  198   204 #>  [9186,]  175  179  189  195  201  206  206  204  197   203 #>  [9187,]  175  179  189  195  201  206  206  204  197   203 #>  [9188,]  175  179  189  195  201  206  206  204  197   203 #>  [9189,]  175  179  189  195  201  206  206  204  197   203 #>  [9190,]  175  179  189  195  201  206  206  204  197   203 #>  [9191,]  175  179  189  195  201  206  206  204  197   203 #>  [9192,]  176  180  190  196  202  207  207  205  198   204 #>  [9193,]  176  180  190  196  202  207  207  205  198   204 #>  [9194,]  175  179  189  195  201  206  206  204  197   203 #>  [9195,]  175  179  189  195  201  206  206  204  197   203 #>  [9196,]  176  180  190  196  202  207  207  205  198   204 #>  [9197,]  176  180  190  196  202  207  207  205  198   204 #>  [9198,]  175  179  189  195  201  206  206  204  197   203 #>  [9199,]  176  180  190  196  202  207  207  205  198   204 #>  [9200,]  175  179  189  195  201  206  206  204  197   203 #>  [9201,]  177  181  191  197  203  208  208  206  200   206 #>  [9202,]  178  182  192  198  204  209  209  207  199   205 #>  [9203,]  177  181  191  197  203  208  208  206  200   206 #>  [9204,]  177  181  191  197  203  208  208  206  200   206 #>  [9205,]  177  181  191  197  203  208  208  206  200   206 #>  [9206,]  177  181  191  197  203  208  208  206  201   206 #>  [9207,]  177  181  191  197  203  208  208  206  200   206 #>  [9208,]  177  181  191  197  203  208  208  206  201   206 #>  [9209,]  178  182  192  198  204  209  209  207  199   205 #>  [9210,]  178  182  192  198  204  209  209  207  199   205 #>  [9211,]  177  181  191  197  203  208  208  206  200   206 #>  [9212,]  178  182  192  198  204  209  209  207  199   205 #>  [9213,]  178  182  192  198  204  209  209  207  199   205 #>  [9214,]  177  181  191  197  203  208  208  206  200   206 #>  [9215,]  177  181  191  197  203  208  208  206  201   206 #>  [9216,]  177  181  191  197  203  208  208  206  200   206 #>  [9217,]  178  182  192  198  204  209  209  207  199   205 #>  [9218,]  177  181  191  197  203  208  208  206  200   206 #>  [9219,]  177  181  191  197  203  208  208  206  200   206 #>  [9220,]  177  181  191  197  203  208  208  206  200   206 #>  [9221,]  178  182  192  198  204  209  209  207  199   205 #>  [9222,]  177  181  191  197  203  208  208  206  200   206 #>  [9223,]  177  181  191  197  203  208  208  206  200   206 #>  [9224,]  178  182  192  198  204  209  209  207  199   205 #>  [9225,]  177  181  191  197  203  208  208  206  200   206 #>  [9226,]  177  181  191  197  203  208  208  206  201   206 #>  [9227,]  177  181  191  197  203  208  208  206  200   206 #>  [9228,]  177  181  191  197  203  208  208  206  200   206 #>  [9229,]  178  182  192  198  204  209  209  207  199   205 #>  [9230,]  177  181  191  197  203  208  208  206  200   206 #>  [9231,]  177  181  191  197  203  208  208  206  200   206 #>  [9232,]  178  182  192  198  204  209  209  207  199   205 #>  [9233,]  178  182  192  198  204  209  209  207  199   205 #>  [9234,]  177  181  191  197  203  208  208  206  200   206 #>  [9235,]  177  181  191  197  203  208  208  206  200   206 #>  [9236,]  177  181  191  197  203  208  208  206  200   206 #>  [9237,]  177  181  191  197  203  208  208  206  200   206 #>  [9238,]  177  181  191  197  203  208  208  206  200   206 #>  [9239,]  177  181  191  197  203  208  208  206  200   206 #>  [9240,]  178  182  192  198  204  209  209  207  199   205 #>  [9241,]  177  181  191  197  203  208  208  206  200   206 #>  [9242,]  177  181  191  197  203  208  208  206  200   206 #>  [9243,]  177  181  191  197  203  208  208  206  201   206 #>  [9244,]  177  181  191  197  203  208  208  206  200   206 #>  [9245,]  177  181  191  197  203  208  208  206  201   206 #>  [9246,]  177  181  191  197  203  208  208  206  201   206 #>  [9247,]  177  181  191  197  203  208  208  206  200   206 #>  [9248,]  177  181  191  197  203  208  208  206  200   206 #>  [9249,]  177  181  191  197  203  208  208  206  200   206 #>  [9250,]  177  181  191  197  203  208  208  206  200   206 #>  [9251,]  177  181  191  197  203  208  208  206  201   206 #>  [9252,]  177  181  191  197  203  208  208  206  200   206 #>  [9253,]  178  182  192  198  204  209  209  207  199   205 #>  [9254,]  177  181  191  197  203  208  208  206  200   206 #>  [9255,]  177  181  191  197  203  208  208  206  200   206 #>  [9256,]  177  181  191  197  203  208  208  206  201   206 #>  [9257,]  177  181  191  197  203  208  208  206  201   206 #>  [9258,]  177  181  191  197  203  208  208  206  200   206 #>  [9259,]  177  181  191  197  203  208  208  206  200   206 #>  [9260,]  178  182  192  198  204  209  209  207  199   205 #>  [9261,]  178  182  192  198  204  209  209  207  199   205 #>  [9262,]  177  181  191  197  203  208  208  206  200   206 #>  [9263,]  178  182  192  198  204  209  209  207  199   205 #>  [9264,]  177  181  191  197  203  208  208  206  201   206 #>  [9265,]  177  181  191  197  203  208  208  206  201   206 #>  [9266,]  177  181  191  197  203  208  208  206  201   206 #>  [9267,]  177  181  191  197  203  208  208  206  200   206 #>  [9268,]  177  181  191  197  203  208  208  206  201   206 #>  [9269,]  177  181  191  197  203  208  208  206  200   206 #>  [9270,]  178  182  192  198  204  209  209  207  199   205 #>  [9271,]  177  181  191  197  203  208  208  206  200   206 #>  [9272,]  177  181  191  197  203  208  208  206  201   206 #>  [9273,]  177  181  191  197  203  208  208  206  200   206 #>  [9274,]  177  181  191  197  203  208  208  206  200   206 #>  [9275,]  178  182  192  198  204  209  209  207  199   205 #>  [9276,]  177  181  191  197  203  208  208  206  201   206 #>  [9277,]  177  181  191  197  203  208  208  206  200   206 #>  [9278,]  177  181  191  197  203  208  208  206  200   206 #>  [9279,]  177  181  191  197  203  208  208  206  200   206 #>  [9280,]  178  182  192  198  204  209  209  207  199   205 #>  [9281,]  178  182  192  198  204  209  209  207  199   205 #>  [9282,]  177  181  191  197  203  208  208  206  200   206 #>  [9283,]  178  182  192  198  204  209  209  207  199   205 #>  [9284,]  177  181  191  197  203  208  208  206  200   206 #>  [9285,]  177  181  191  197  203  208  208  206  200   206 #>  [9286,]  178  182  192  198  204  209  209  207  199   205 #>  [9287,]  177  181  191  197  203  208  208  206  200   206 #>  [9288,]  177  181  191  197  203  208  208  206  200   206 #>  [9289,]  177  181  191  197  203  208  208  206  200   206 #>  [9290,]  177  181  191  197  203  208  208  206  200   206 #>  [9291,]  177  181  191  197  203  208  208  206  200   206 #>  [9292,]  177  181  191  197  203  208  208  206  201   206 #>  [9293,]  177  181  191  197  203  208  208  206  200   206 #>  [9294,]  177  181  191  197  203  208  208  206  201   206 #>  [9295,]  177  181  191  197  203  208  208  206  200   206 #>  [9296,]  177  181  191  197  203  208  208  206  201   206 #>  [9297,]  177  181  191  197  203  208  208  206  201   206 #>  [9298,]  177  181  191  197  203  208  208  206  200   206 #>  [9299,]  177  181  191  197  203  208  208  206  200   206 #>  [9300,]  177  181  191  197  203  208  208  206  200   206 #>  [9301,]  179  183  193  199  205  210  210  208  203   208 #>  [9302,]  180  184  194  200  206  211  211  208  203   208 #>  [9303,]  179  183  193  199  205  210  210  208  203   208 #>  [9304,]  179  183  193  199  205  210  210  208  202   207 #>  [9305,]  179  183  193  199  205  210  210  208  203   208 #>  [9306,]  179  183  193  199  205  210  210  208  203   208 #>  [9307,]  179  183  193  199  205  210  210  208  203   208 #>  [9308,]  179  183  193  199  205  210  210  208  202   207 #>  [9309,]  180  184  194  200  206  211  211  208  202   207 #>  [9310,]  180  184  194  200  206  211  211  208  203   208 #>  [9311,]  179  183  193  199  205  210  210  208  203   208 #>  [9312,]  180  184  194  200  206  211  211  208  203   208 #>  [9313,]  179  183  193  199  205  210  210  208  203   208 #>  [9314,]  179  183  193  199  205  210  210  208  203   208 #>  [9315,]  179  183  193  199  205  210  210  208  203   208 #>  [9316,]  179  183  193  199  205  210  210  208  203   208 #>  [9317,]  179  183  193  199  205  210  210  208  202   207 #>  [9318,]  179  183  193  199  205  210  210  208  203   208 #>  [9319,]  179  183  193  199  205  210  210  208  203   208 #>  [9320,]  179  183  193  199  205  210  210  208  203   208 #>  [9321,]  180  184  194  200  206  211  211  208  203   208 #>  [9322,]  179  183  193  199  205  210  210  208  203   208 #>  [9323,]  179  183  193  199  205  210  210  208  203   208 #>  [9324,]  179  183  193  199  205  210  210  208  203   208 #>  [9325,]  179  183  193  199  205  210  210  208  203   208 #>  [9326,]  179  183  193  199  205  210  210  208  203   208 #>  [9327,]  179  183  193  199  205  210  210  208  202   207 #>  [9328,]  179  183  193  199  205  210  210  208  203   208 #>  [9329,]  180  184  194  200  206  211  211  208  203   208 #>  [9330,]  179  183  193  199  205  210  210  208  203   208 #>  [9331,]  179  183  193  199  205  210  210  208  203   208 #>  [9332,]  179  183  193  199  205  210  210  208  203   208 #>  [9333,]  180  184  194  200  206  211  211  208  203   208 #>  [9334,]  179  183  193  199  205  210  210  208  203   208 #>  [9335,]  179  183  193  199  205  210  210  208  203   208 #>  [9336,]  179  183  193  199  205  210  210  208  203   208 #>  [9337,]  179  183  193  199  205  210  210  208  203   208 #>  [9338,]  179  183  193  199  205  210  210  208  203   208 #>  [9339,]  179  183  193  199  205  210  210  208  203   208 #>  [9340,]  179  183  193  199  205  210  210  208  203   208 #>  [9341,]  179  183  193  199  205  210  210  208  203   208 #>  [9342,]  179  183  193  199  205  210  210  208  203   208 #>  [9343,]  179  183  193  199  205  210  210  208  203   208 #>  [9344,]  179  183  193  199  205  210  210  208  202   207 #>  [9345,]  179  183  193  199  205  210  210  208  203   208 #>  [9346,]  179  183  193  199  205  210  210  208  203   208 #>  [9347,]  179  183  193  199  205  210  210  208  203   208 #>  [9348,]  179  183  193  199  205  210  210  208  203   208 #>  [9349,]  179  183  193  199  205  210  210  208  203   208 #>  [9350,]  179  183  193  199  205  210  210  208  203   208 #>  [9351,]  179  183  193  199  205  210  210  208  203   208 #>  [9352,]  179  183  193  199  205  210  210  208  202   207 #>  [9353,]  179  183  193  199  205  210  210  208  203   208 #>  [9354,]  179  183  193  199  205  210  210  208  203   208 #>  [9355,]  179  183  193  199  205  210  210  208  203   208 #>  [9356,]  179  183  193  199  205  210  210  208  203   208 #>  [9357,]  179  183  193  199  205  210  210  208  203   208 #>  [9358,]  179  183  193  199  205  210  210  208  203   208 #>  [9359,]  179  183  193  199  205  210  210  208  203   208 #>  [9360,]  180  184  194  200  206  211  211  208  203   208 #>  [9361,]  179  183  193  199  205  210  210  208  203   208 #>  [9362,]  179  183  193  199  205  210  210  208  203   208 #>  [9363,]  179  183  193  199  205  210  210  208  203   208 #>  [9364,]  179  183  193  199  205  210  210  208  203   208 #>  [9365,]  179  183  193  199  205  210  210  208  203   208 #>  [9366,]  179  183  193  199  205  210  210  208  202   207 #>  [9367,]  179  183  193  199  205  210  210  208  203   208 #>  [9368,]  179  183  193  199  205  210  210  208  203   208 #>  [9369,]  179  183  193  199  205  210  210  208  203   208 #>  [9370,]  180  184  194  200  206  211  211  208  203   208 #>  [9371,]  179  183  193  199  205  210  210  208  203   208 #>  [9372,]  179  183  193  199  205  210  210  208  203   208 #>  [9373,]  179  183  193  199  205  210  210  208  203   208 #>  [9374,]  179  183  193  199  205  210  210  208  203   208 #>  [9375,]  179  183  193  199  205  210  210  208  203   208 #>  [9376,]  179  183  193  199  205  210  210  208  203   208 #>  [9377,]  179  183  193  199  205  210  210  208  203   208 #>  [9378,]  179  183  193  199  205  210  210  208  203   208 #>  [9379,]  179  183  193  199  205  210  210  208  203   208 #>  [9380,]  179  183  193  199  205  210  210  208  203   208 #>  [9381,]  179  183  193  199  205  210  210  208  202   207 #>  [9382,]  179  183  193  199  205  210  210  208  202   207 #>  [9383,]  179  183  193  199  205  210  210  208  203   208 #>  [9384,]  179  183  193  199  205  210  210  208  203   208 #>  [9385,]  179  183  193  199  205  210  210  208  203   208 #>  [9386,]  180  184  194  200  206  211  211  208  203   208 #>  [9387,]  179  183  193  199  205  210  210  208  202   207 #>  [9388,]  179  183  193  199  205  210  210  208  203   208 #>  [9389,]  179  183  193  199  205  210  210  208  203   208 #>  [9390,]  179  183  193  199  205  210  210  208  202   207 #>  [9391,]  179  183  193  199  205  210  210  208  203   208 #>  [9392,]  179  183  193  199  205  210  210  208  202   207 #>  [9393,]  179  183  193  199  205  210  210  208  203   208 #>  [9394,]  179  183  193  199  205  210  210  208  203   208 #>  [9395,]  179  183  193  199  205  210  210  208  202   207 #>  [9396,]  179  183  193  199  205  210  210  208  203   208 #>  [9397,]  179  183  193  199  205  210  210  208  203   208 #>  [9398,]  179  183  193  199  205  210  210  208  203   208 #>  [9399,]  179  183  193  199  205  210  210  208  202   207 #>  [9400,]  179  183  193  199  205  210  210  208  203   208 #>  [9401,]  182  186  196  202  208  213  213  210  205   210 #>  [9402,]  182  186  196  202  208  213  213  210  205   210 #>  [9403,]  181  185  195  201  207  212  212  209  204   209 #>  [9404,]  182  186  196  202  208  213  213  211  205   210 #>  [9405,]  182  186  196  202  208  213  213  210  205   210 #>  [9406,]  181  185  195  201  207  212  212  209  204   209 #>  [9407,]  182  186  196  202  208  213  213  210  205   210 #>  [9408,]  182  186  196  202  208  213  213  210  205   210 #>  [9409,]  182  186  196  202  208  213  213  211  205   210 #>  [9410,]  182  186  196  202  208  213  213  211  205   210 #>  [9411,]  182  186  196  202  208  213  213  211  205   210 #>  [9412,]  182  186  196  202  208  213  213  211  205   210 #>  [9413,]  182  186  196  202  208  213  213  210  205   210 #>  [9414,]  182  186  196  202  208  213  213  211  205   210 #>  [9415,]  182  186  196  202  208  213  213  211  205   210 #>  [9416,]  182  186  196  202  208  213  213  210  205   210 #>  [9417,]  182  186  196  202  208  213  213  210  205   210 #>  [9418,]  182  186  196  202  208  213  213  211  205   210 #>  [9419,]  181  185  195  201  207  212  212  209  204   209 #>  [9420,]  182  186  196  202  208  213  213  210  205   210 #>  [9421,]  182  186  196  202  208  213  213  211  205   210 #>  [9422,]  182  186  196  202  208  213  213  210  205   210 #>  [9423,]  182  186  196  202  208  213  213  211  205   210 #>  [9424,]  182  186  196  202  208  213  213  210  205   210 #>  [9425,]  182  186  196  202  208  213  213  210  205   210 #>  [9426,]  182  186  196  202  208  213  213  211  205   210 #>  [9427,]  182  186  196  202  208  213  213  211  205   210 #>  [9428,]  182  186  196  202  208  213  213  210  205   210 #>  [9429,]  182  186  196  202  208  213  213  210  205   210 #>  [9430,]  182  186  196  202  208  213  213  211  205   210 #>  [9431,]  182  186  196  202  208  213  213  211  205   210 #>  [9432,]  182  186  196  202  208  213  213  211  205   210 #>  [9433,]  182  186  196  202  208  213  213  211  205   210 #>  [9434,]  181  185  195  201  207  212  212  209  204   209 #>  [9435,]  182  186  196  202  208  213  213  210  205   210 #>  [9436,]  182  186  196  202  208  213  213  211  205   210 #>  [9437,]  181  185  195  201  207  212  212  209  204   209 #>  [9438,]  181  185  195  201  207  212  212  209  204   209 #>  [9439,]  182  186  196  202  208  213  213  210  205   210 #>  [9440,]  182  186  196  202  208  213  213  210  205   210 #>  [9441,]  182  186  196  202  208  213  213  211  205   210 #>  [9442,]  182  186  196  202  208  213  213  211  205   210 #>  [9443,]  182  186  196  202  208  213  213  210  205   210 #>  [9444,]  182  186  196  202  208  213  213  210  205   210 #>  [9445,]  181  185  195  201  207  212  212  209  204   209 #>  [9446,]  182  186  196  202  208  213  213  210  205   210 #>  [9447,]  182  186  196  202  208  213  213  210  205   210 #>  [9448,]  182  186  196  202  208  213  213  211  205   210 #>  [9449,]  181  185  195  201  207  212  212  209  204   209 #>  [9450,]  182  186  196  202  208  213  213  210  205   210 #>  [9451,]  182  186  196  202  208  213  213  210  205   210 #>  [9452,]  181  185  195  201  207  212  212  209  204   209 #>  [9453,]  182  186  196  202  208  213  213  210  205   210 #>  [9454,]  182  186  196  202  208  213  213  210  205   210 #>  [9455,]  182  186  196  202  208  213  213  210  205   210 #>  [9456,]  182  186  196  202  208  213  213  210  205   210 #>  [9457,]  182  186  196  202  208  213  213  210  205   210 #>  [9458,]  182  186  196  202  208  213  213  211  205   210 #>  [9459,]  182  186  196  202  208  213  213  210  205   210 #>  [9460,]  182  186  196  202  208  213  213  211  205   210 #>  [9461,]  182  186  196  202  208  213  213  211  205   210 #>  [9462,]  182  186  196  202  208  213  213  211  205   210 #>  [9463,]  182  186  196  202  208  213  213  210  205   210 #>  [9464,]  181  185  195  201  207  212  212  209  204   209 #>  [9465,]  182  186  196  202  208  213  213  210  205   210 #>  [9466,]  182  186  196  202  208  213  213  210  205   210 #>  [9467,]  182  186  196  202  208  213  213  211  205   210 #>  [9468,]  181  185  195  201  207  212  212  209  204   209 #>  [9469,]  182  186  196  202  208  213  213  211  205   210 #>  [9470,]  182  186  196  202  208  213  213  210  205   210 #>  [9471,]  182  186  196  202  208  213  213  210  205   210 #>  [9472,]  181  185  195  201  207  212  212  209  204   209 #>  [9473,]  182  186  196  202  208  213  213  211  205   210 #>  [9474,]  182  186  196  202  208  213  213  211  205   210 #>  [9475,]  182  186  196  202  208  213  213  211  205   210 #>  [9476,]  182  186  196  202  208  213  213  210  205   210 #>  [9477,]  182  186  196  202  208  213  213  210  205   210 #>  [9478,]  182  186  196  202  208  213  213  210  205   210 #>  [9479,]  182  186  196  202  208  213  213  210  205   210 #>  [9480,]  182  186  196  202  208  213  213  211  205   210 #>  [9481,]  182  186  196  202  208  213  213  210  205   210 #>  [9482,]  182  186  196  202  208  213  213  211  205   210 #>  [9483,]  182  186  196  202  208  213  213  210  205   210 #>  [9484,]  182  186  196  202  208  213  213  210  205   210 #>  [9485,]  182  186  196  202  208  213  213  211  205   210 #>  [9486,]  182  186  196  202  208  213  213  210  205   210 #>  [9487,]  182  186  196  202  208  213  213  210  205   210 #>  [9488,]  182  186  196  202  208  213  213  210  205   210 #>  [9489,]  182  186  196  202  208  213  213  210  205   210 #>  [9490,]  182  186  196  202  208  213  213  210  205   210 #>  [9491,]  182  186  196  202  208  213  213  211  205   210 #>  [9492,]  182  186  196  202  208  213  213  211  205   210 #>  [9493,]  182  186  196  202  208  213  213  211  205   210 #>  [9494,]  182  186  196  202  208  213  213  210  205   210 #>  [9495,]  182  186  196  202  208  213  213  210  205   210 #>  [9496,]  181  185  195  201  207  212  212  209  204   209 #>  [9497,]  181  185  195  201  207  212  212  209  204   209 #>  [9498,]  182  186  196  202  208  213  213  210  205   210 #>  [9499,]  182  186  196  202  208  213  213  211  205   210 #>  [9500,]  182  186  196  202  208  213  213  210  205   210 #>  [9501,]  183  187  197  203  209  214  214  212  206   211 #>  [9502,]  183  187  197  203  209  214  214  212  206   211 #>  [9503,]  183  187  197  203  209  214  214  212  206   211 #>  [9504,]  184  188  198  204  210  215  215  213  207   212 #>  [9505,]  183  187  197  203  209  214  214  212  206   211 #>  [9506,]  184  188  198  204  210  215  215  213  207   212 #>  [9507,]  183  187  197  203  209  214  214  212  206   211 #>  [9508,]  183  187  197  203  209  214  214  212  206   211 #>  [9509,]  184  188  198  204  210  215  215  213  207   212 #>  [9510,]  184  188  198  204  210  215  215  213  207   212 #>  [9511,]  184  188  198  204  210  215  215  213  207   212 #>  [9512,]  184  188  198  204  210  215  215  213  207   212 #>  [9513,]  183  187  197  203  209  214  214  212  206   211 #>  [9514,]  184  188  198  204  210  215  215  213  207   212 #>  [9515,]  184  188  198  204  210  215  215  213  207   212 #>  [9516,]  183  187  197  203  209  214  214  212  206   211 #>  [9517,]  183  187  197  203  209  214  214  212  206   211 #>  [9518,]  184  188  198  204  210  215  215  213  207   212 #>  [9519,]  184  188  198  204  210  215  215  213  207   212 #>  [9520,]  183  187  197  203  209  214  214  212  206   211 #>  [9521,]  184  188  198  204  210  215  215  213  207   212 #>  [9522,]  183  187  197  203  209  214  214  212  206   211 #>  [9523,]  184  188  198  204  210  215  215  213  207   212 #>  [9524,]  183  187  197  203  209  214  214  212  206   211 #>  [9525,]  183  187  197  203  209  214  214  212  206   211 #>  [9526,]  184  188  198  204  210  215  215  213  207   212 #>  [9527,]  184  188  198  204  210  215  215  213  207   212 #>  [9528,]  183  187  197  203  209  214  214  212  206   211 #>  [9529,]  183  187  197  203  209  214  214  212  206   211 #>  [9530,]  184  188  198  204  210  215  215  213  207   212 #>  [9531,]  184  188  198  204  210  215  215  213  207   212 #>  [9532,]  184  188  198  204  210  215  215  213  207   212 #>  [9533,]  184  188  198  204  210  215  215  213  207   212 #>  [9534,]  184  188  198  204  210  215  215  213  207   212 #>  [9535,]  183  187  197  203  209  214  214  212  206   211 #>  [9536,]  184  188  198  204  210  215  215  213  207   212 #>  [9537,]  183  187  197  203  209  214  214  212  206   211 #>  [9538,]  184  188  198  204  210  215  215  213  207   212 #>  [9539,]  183  187  197  203  209  214  214  212  206   211 #>  [9540,]  183  187  197  203  209  214  214  212  206   211 #>  [9541,]  184  188  198  204  210  215  215  213  207   212 #>  [9542,]  184  188  198  204  210  215  215  213  207   212 #>  [9543,]  183  187  197  203  209  214  214  212  206   211 #>  [9544,]  183  187  197  203  209  214  214  212  206   211 #>  [9545,]  183  187  197  203  209  214  214  212  206   211 #>  [9546,]  183  187  197  203  209  214  214  212  206   211 #>  [9547,]  183  187  197  203  209  214  214  212  206   211 #>  [9548,]  184  188  198  204  210  215  215  213  207   212 #>  [9549,]  183  187  197  203  209  214  214  212  206   211 #>  [9550,]  183  187  197  203  209  214  214  212  206   211 #>  [9551,]  183  187  197  203  209  214  214  212  206   211 #>  [9552,]  184  188  198  204  210  215  215  213  207   212 #>  [9553,]  183  187  197  203  209  214  214  212  206   211 #>  [9554,]  183  187  197  203  209  214  214  212  206   211 #>  [9555,]  183  187  197  203  209  214  214  212  206   211 #>  [9556,]  183  187  197  203  209  214  214  212  206   211 #>  [9557,]  183  187  197  203  209  214  214  212  206   211 #>  [9558,]  184  188  198  204  210  215  215  213  207   212 #>  [9559,]  183  187  197  203  209  214  214  212  206   211 #>  [9560,]  184  188  198  204  210  215  215  213  207   212 #>  [9561,]  184  188  198  204  210  215  215  213  207   212 #>  [9562,]  184  188  198  204  210  215  215  213  207   212 #>  [9563,]  183  187  197  203  209  214  214  212  206   211 #>  [9564,]  184  188  198  204  210  215  215  213  207   212 #>  [9565,]  183  187  197  203  209  214  214  212  206   211 #>  [9566,]  183  187  197  203  209  214  214  212  206   211 #>  [9567,]  184  188  198  204  210  215  215  213  207   212 #>  [9568,]  184  188  198  204  210  215  215  213  207   212 #>  [9569,]  184  188  198  204  210  215  215  213  207   212 #>  [9570,]  183  187  197  203  209  214  214  212  206   211 #>  [9571,]  183  187  197  203  209  214  214  212  206   211 #>  [9572,]  183  187  197  203  209  214  214  212  206   211 #>  [9573,]  184  188  198  204  210  215  215  213  207   212 #>  [9574,]  184  188  198  204  210  215  215  213  207   212 #>  [9575,]  184  188  198  204  210  215  215  213  207   212 #>  [9576,]  183  187  197  203  209  214  214  212  206   211 #>  [9577,]  183  187  197  203  209  214  214  212  206   211 #>  [9578,]  183  187  197  203  209  214  214  212  206   211 #>  [9579,]  183  187  197  203  209  214  214  212  206   211 #>  [9580,]  184  188  198  204  210  215  215  213  207   212 #>  [9581,]  183  187  197  203  209  214  214  212  206   211 #>  [9582,]  184  188  198  204  210  215  215  213  207   212 #>  [9583,]  183  187  197  203  209  214  214  212  206   211 #>  [9584,]  183  187  197  203  209  214  214  212  206   211 #>  [9585,]  184  188  198  204  210  215  215  213  207   212 #>  [9586,]  183  187  197  203  209  214  214  212  206   211 #>  [9587,]  183  187  197  203  209  214  214  212  206   211 #>  [9588,]  183  187  197  203  209  214  214  212  206   211 #>  [9589,]  183  187  197  203  209  214  214  212  206   211 #>  [9590,]  183  187  197  203  209  214  214  212  206   211 #>  [9591,]  183  187  197  203  209  214  214  212  206   211 #>  [9592,]  184  188  198  204  210  215  215  213  207   212 #>  [9593,]  184  188  198  204  210  215  215  213  207   212 #>  [9594,]  183  187  197  203  209  214  214  212  206   211 #>  [9595,]  183  187  197  203  209  214  214  212  206   211 #>  [9596,]  184  188  198  204  210  215  215  213  207   212 #>  [9597,]  184  188  198  204  210  215  215  213  207   212 #>  [9598,]  183  187  197  203  209  214  214  212  206   211 #>  [9599,]  184  188  198  204  210  215  215  213  207   212 #>  [9600,]  183  187  197  203  209  214  214  212  206   211 #>  [9601,]  186  190  199  205  211  216  216  214  208   213 #>  [9602,]  186  190  199  205  211  216  216  214  208   213 #>  [9603,]  185  189  200  206  212  217  217  215  209   214 #>  [9604,]  185  189  200  206  212  217  217  216  209   214 #>  [9605,]  186  190  199  205  211  216  216  214  208   213 #>  [9606,]  186  190  199  205  211  216  216  214  208   213 #>  [9607,]  185  189  200  206  212  217  217  216  209   214 #>  [9608,]  185  189  200  206  212  217  217  216  209   214 #>  [9609,]  186  190  199  205  211  216  216  214  208   213 #>  [9610,]  185  189  201  206  212  217  217  216  209   214 #>  [9611,]  186  190  199  205  211  216  216  214  208   213 #>  [9612,]  185  189  201  206  212  217  217  215  209   214 #>  [9613,]  186  190  199  205  211  216  216  214  208   213 #>  [9614,]  185  189  200  206  212  217  217  215  209   214 #>  [9615,]  186  190  199  205  211  216  216  214  208   213 #>  [9616,]  185  189  200  206  212  217  217  216  209   214 #>  [9617,]  186  190  199  205  211  216  216  214  208   213 #>  [9618,]  186  190  199  205  211  216  216  214  208   213 #>  [9619,]  186  190  199  205  211  216  216  214  208   213 #>  [9620,]  186  190  199  205  211  216  216  214  208   213 #>  [9621,]  186  190  199  205  211  216  216  214  208   213 #>  [9622,]  186  190  199  205  211  216  216  214  208   213 #>  [9623,]  185  189  201  206  212  217  217  216  209   214 #>  [9624,]  186  190  199  205  211  216  216  214  208   213 #>  [9625,]  185  189  200  206  212  217  217  216  209   214 #>  [9626,]  185  189  200  206  212  217  217  215  209   214 #>  [9627,]  186  190  199  205  211  216  216  214  208   213 #>  [9628,]  186  190  199  205  211  216  216  214  208   213 #>  [9629,]  186  190  199  205  211  216  216  214  208   213 #>  [9630,]  186  190  199  205  211  216  216  214  208   213 #>  [9631,]  185  189  201  206  212  217  217  216  209   214 #>  [9632,]  185  189  201  206  212  217  217  215  209   214 #>  [9633,]  186  190  199  205  211  216  216  214  208   213 #>  [9634,]  186  190  199  205  211  216  216  214  208   213 #>  [9635,]  185  189  200  206  212  217  217  216  209   214 #>  [9636,]  186  190  199  205  211  216  216  214  208   213 #>  [9637,]  185  189  200  206  212  217  217  216  209   214 #>  [9638,]  186  190  199  205  211  216  216  214  208   213 #>  [9639,]  186  190  199  205  211  216  216  214  208   213 #>  [9640,]  185  189  201  206  212  217  217  216  209   214 #>  [9641,]  186  190  199  205  211  216  216  214  208   213 #>  [9642,]  186  190  199  205  211  216  216  214  208   213 #>  [9643,]  186  190  199  205  211  216  216  214  208   213 #>  [9644,]  185  189  201  206  212  217  217  216  209   214 #>  [9645,]  185  189  200  206  212  217  217  216  209   214 #>  [9646,]  185  189  200  206  212  217  217  216  209   214 #>  [9647,]  185  189  200  206  212  217  217  216  209   214 #>  [9648,]  186  190  199  205  211  216  216  214  208   213 #>  [9649,]  186  190  199  205  211  216  216  214  208   213 #>  [9650,]  186  190  199  205  211  216  216  214  208   213 #>  [9651,]  186  190  199  205  211  216  216  214  208   213 #>  [9652,]  185  189  200  206  212  217  217  216  209   214 #>  [9653,]  186  190  199  205  211  216  216  214  208   213 #>  [9654,]  186  190  199  205  211  216  216  214  208   213 #>  [9655,]  185  189  200  206  212  217  217  216  209   214 #>  [9656,]  186  190  199  205  211  216  216  214  208   213 #>  [9657,]  185  189  200  206  212  217  217  216  209   214 #>  [9658,]  186  190  199  205  211  216  216  214  208   213 #>  [9659,]  185  189  200  206  212  217  217  216  209   214 #>  [9660,]  185  189  201  206  212  217  217  216  209   214 #>  [9661,]  186  190  199  205  211  216  216  214  208   213 #>  [9662,]  186  190  199  205  211  216  216  214  208   213 #>  [9663,]  186  190  199  205  211  216  216  214  208   213 #>  [9664,]  186  190  199  205  211  216  216  214  208   213 #>  [9665,]  186  190  199  205  211  216  216  214  208   213 #>  [9666,]  186  190  199  205  211  216  216  214  208   213 #>  [9667,]  185  189  200  206  212  217  217  216  209   214 #>  [9668,]  185  189  200  206  212  217  217  216  209   214 #>  [9669,]  186  190  199  205  211  216  216  214  208   213 #>  [9670,]  186  190  199  205  211  216  216  214  208   213 #>  [9671,]  186  190  199  205  211  216  216  214  208   213 #>  [9672,]  185  189  200  206  212  217  217  216  209   214 #>  [9673,]  186  190  199  205  211  216  216  214  208   213 #>  [9674,]  185  189  200  206  212  217  217  216  209   214 #>  [9675,]  185  189  201  206  212  217  217  216  209   214 #>  [9676,]  185  189  200  206  212  217  217  216  209   214 #>  [9677,]  186  190  199  205  211  216  216  214  208   213 #>  [9678,]  185  189  200  206  212  217  217  216  209   214 #>  [9679,]  186  190  199  205  211  216  216  214  208   213 #>  [9680,]  185  189  201  206  212  217  217  215  209   214 #>  [9681,]  186  190  199  205  211  216  216  214  208   213 #>  [9682,]  186  190  199  205  211  216  216  214  208   213 #>  [9683,]  186  190  199  205  211  216  216  214  208   213 #>  [9684,]  186  190  199  205  211  216  216  214  208   213 #>  [9685,]  186  190  199  205  211  216  216  214  208   213 #>  [9686,]  185  189  201  206  212  217  217  216  209   214 #>  [9687,]  186  190  199  205  211  216  216  214  208   213 #>  [9688,]  185  189  201  206  212  217  217  216  209   214 #>  [9689,]  186  190  199  205  211  216  216  214  208   213 #>  [9690,]  186  190  199  205  211  216  216  214  208   213 #>  [9691,]  186  190  199  205  211  216  216  214  208   213 #>  [9692,]  185  189  200  206  212  217  217  216  209   214 #>  [9693,]  186  190  199  205  211  216  216  214  208   213 #>  [9694,]  186  190  199  205  211  216  216  214  208   213 #>  [9695,]  185  189  200  206  212  217  217  216  209   214 #>  [9696,]  185  189  200  206  212  217  217  216  209   214 #>  [9697,]  185  189  200  206  212  217  217  216  209   214 #>  [9698,]  185  189  200  206  212  217  217  216  209   214 #>  [9699,]  186  190  199  205  211  216  216  214  208   213 #>  [9700,]  186  190  199  205  211  216  216  214  208   213 #>  [9701,]  187  191  202  207  213  218  218  217  210   215 #>  [9702,]  188  192  203  208  214  219  219  218  211   216 #>  [9703,]  187  191  202  207  213  218  218  217  210   215 #>  [9704,]  187  191  202  207  213  218  218  217  210   215 #>  [9705,]  188  192  203  208  214  219  219  218  211   216 #>  [9706,]  187  191  202  207  213  218  218  217  210   215 #>  [9707,]  187  191  202  207  213  218  218  217  210   215 #>  [9708,]  187  191  202  207  213  218  218  217  210   215 #>  [9709,]  188  192  203  208  214  219  219  218  211   216 #>  [9710,]  188  192  203  208  214  219  219  218  211   216 #>  [9711,]  187  191  202  207  213  218  218  217  210   215 #>  [9712,]  188  192  203  208  214  219  219  218  211   216 #>  [9713,]  188  192  203  208  214  219  219  218  211   216 #>  [9714,]  187  191  202  207  213  218  218  217  210   215 #>  [9715,]  187  191  202  207  213  218  218  217  210   215 #>  [9716,]  187  191  202  207  213  218  218  217  210   215 #>  [9717,]  188  192  203  208  214  219  219  218  211   216 #>  [9718,]  188  192  203  208  214  219  219  218  211   216 #>  [9719,]  187  191  202  207  213  218  218  217  210   215 #>  [9720,]  188  192  203  208  214  219  219  218  211   216 #>  [9721,]  188  192  203  208  214  219  219  218  211   216 #>  [9722,]  187  191  202  207  213  218  218  217  210   215 #>  [9723,]  188  192  203  208  214  219  219  218  211   216 #>  [9724,]  188  192  203  208  214  219  219  218  211   216 #>  [9725,]  187  191  202  207  213  218  218  217  210   215 #>  [9726,]  187  191  202  207  213  218  218  217  210   215 #>  [9727,]  188  192  203  208  214  219  219  218  211   216 #>  [9728,]  187  191  202  207  213  218  218  217  210   215 #>  [9729,]  188  192  203  208  214  219  219  218  211   216 #>  [9730,]  187  191  202  207  213  218  218  217  210   215 #>  [9731,]  188  192  203  208  214  219  219  218  211   216 #>  [9732,]  188  192  203  208  214  219  219  218  211   216 #>  [9733,]  188  192  203  208  214  219  219  218  211   216 #>  [9734,]  187  191  202  207  213  218  218  217  210   215 #>  [9735,]  187  191  202  207  213  218  218  217  210   215 #>  [9736,]  188  192  203  208  214  219  219  218  211   216 #>  [9737,]  187  191  202  207  213  218  218  217  210   215 #>  [9738,]  187  191  202  207  213  218  218  217  210   215 #>  [9739,]  187  191  202  207  213  218  218  217  210   215 #>  [9740,]  188  192  203  208  214  219  219  218  211   216 #>  [9741,]  187  191  202  207  213  218  218  217  210   215 #>  [9742,]  187  191  202  207  213  218  218  217  210   215 #>  [9743,]  187  191  202  207  213  218  218  217  210   215 #>  [9744,]  187  191  202  207  213  218  218  217  210   215 #>  [9745,]  187  191  202  207  213  218  218  217  210   215 #>  [9746,]  187  191  202  207  213  218  218  217  210   215 #>  [9747,]  187  191  202  207  213  218  218  217  210   215 #>  [9748,]  187  191  202  207  213  218  218  217  210   215 #>  [9749,]  187  191  202  207  213  218  218  217  210   215 #>  [9750,]  187  191  202  207  213  218  218  217  210   215 #>  [9751,]  187  191  202  207  213  218  218  217  210   215 #>  [9752,]  187  191  202  207  213  218  218  217  210   215 #>  [9753,]  188  192  203  208  214  219  219  218  211   216 #>  [9754,]  187  191  202  207  213  218  218  217  210   215 #>  [9755,]  187  191  202  207  213  218  218  217  210   215 #>  [9756,]  187  191  202  207  213  218  218  217  210   215 #>  [9757,]  187  191  202  207  213  218  218  217  210   215 #>  [9758,]  187  191  202  207  213  218  218  217  210   215 #>  [9759,]  187  191  202  207  213  218  218  217  210   215 #>  [9760,]  188  192  203  208  214  219  219  218  211   216 #>  [9761,]  188  192  203  208  214  219  219  218  211   216 #>  [9762,]  187  191  202  207  213  218  218  217  210   215 #>  [9763,]  188  192  203  208  214  219  219  218  211   216 #>  [9764,]  187  191  202  207  213  218  218  217  210   215 #>  [9765,]  187  191  202  207  213  218  218  217  210   215 #>  [9766,]  187  191  202  207  213  218  218  217  210   215 #>  [9767,]  187  191  202  207  213  218  218  217  210   215 #>  [9768,]  187  191  202  207  213  218  218  217  210   215 #>  [9769,]  187  191  202  207  213  218  218  217  210   215 #>  [9770,]  188  192  203  208  214  219  219  218  211   216 #>  [9771,]  187  191  202  207  213  218  218  217  210   215 #>  [9772,]  187  191  202  207  213  218  218  217  210   215 #>  [9773,]  187  191  202  207  213  218  218  217  210   215 #>  [9774,]  187  191  202  207  213  218  218  217  210   215 #>  [9775,]  188  192  203  208  214  219  219  218  211   216 #>  [9776,]  187  191  202  207  213  218  218  217  210   215 #>  [9777,]  187  191  202  207  213  218  218  217  210   215 #>  [9778,]  187  191  202  207  213  218  218  217  210   215 #>  [9779,]  187  191  202  207  213  218  218  217  210   215 #>  [9780,]  188  192  203  208  214  219  219  218  211   216 #>  [9781,]  188  192  203  208  214  219  219  218  211   216 #>  [9782,]  187  191  202  207  213  218  218  217  210   215 #>  [9783,]  188  192  203  208  214  219  219  218  211   216 #>  [9784,]  188  192  203  208  214  219  219  218  211   216 #>  [9785,]  187  191  202  207  213  218  218  217  210   215 #>  [9786,]  188  192  203  208  214  219  219  218  211   216 #>  [9787,]  187  191  202  207  213  218  218  217  210   215 #>  [9788,]  188  192  203  208  214  219  219  218  211   216 #>  [9789,]  187  191  202  207  213  218  218  217  210   215 #>  [9790,]  187  191  202  207  213  218  218  217  210   215 #>  [9791,]  187  191  202  207  213  218  218  217  210   215 #>  [9792,]  187  191  202  207  213  218  218  217  210   215 #>  [9793,]  187  191  202  207  213  218  218  217  210   215 #>  [9794,]  187  191  202  207  213  218  218  217  210   215 #>  [9795,]  187  191  202  207  213  218  218  217  210   215 #>  [9796,]  187  191  202  207  213  218  218  217  210   215 #>  [9797,]  187  191  202  207  213  218  218  217  210   215 #>  [9798,]  187  191  202  207  213  218  218  217  210   215 #>  [9799,]  187  191  202  207  213  218  218  217  210   215 #>  [9800,]  187  191  202  207  213  218  218  217  210   215 #>  [9801,]  190  195  205  210  215  221  220  220  213   219 #>  [9802,]  190  194  205  210  215  220  220  220  213   219 #>  [9803,]  189  193  204  209  215  220  220  219  212   217 #>  [9804,]  189  193  204  209  215  221  220  220  213   219 #>  [9805,]  190  195  205  210  215  220  220  220  213   219 #>  [9806,]  190  194  205  210  215  220  220  220  213   219 #>  [9807,]  189  193  204  209  215  221  220  219  212   217 #>  [9808,]  189  193  204  209  215  220  220  220  213   219 #>  [9809,]  190  195  205  210  215  221  220  220  213   219 #>  [9810,]  190  195  205  210  215  221  220  220  213   219 #>  [9811,]  190  194  205  210  215  220  220  220  213   219 #>  [9812,]  189  193  204  209  215  220  220  219  212   217 #>  [9813,]  190  195  205  210  215  221  220  220  213   219 #>  [9814,]  190  195  205  210  215  221  220  220  213   218 #>  [9815,]  190  194  205  210  215  220  220  220  213   219 #>  [9816,]  190  195  205  210  215  221  220  220  213   219 #>  [9817,]  190  194  205  210  215  220  220  220  213   219 #>  [9818,]  190  195  205  210  215  220  220  220  213   219 #>  [9819,]  190  194  205  210  215  220  220  220  213   219 #>  [9820,]  190  195  205  210  215  221  220  220  213   219 #>  [9821,]  190  195  205  210  215  220  220  220  213   219 #>  [9822,]  190  195  205  210  215  221  220  220  213   219 #>  [9823,]  189  193  204  209  215  220  220  220  213   219 #>  [9824,]  190  195  205  210  215  221  220  220  213   219 #>  [9825,]  189  193  204  209  215  221  220  220  213   219 #>  [9826,]  190  194  205  210  215  220  220  220  213   218 #>  [9827,]  190  195  205  210  215  220  220  220  213   219 #>  [9828,]  190  195  205  210  215  221  220  220  213   219 #>  [9829,]  190  194  205  210  215  220  220  220  213   219 #>  [9830,]  190  194  205  210  215  220  220  220  213   219 #>  [9831,]  189  193  204  209  215  220  220  219  212   217 #>  [9832,]  190  195  205  210  215  220  220  220  213   218 #>  [9833,]  190  195  205  210  215  220  220  220  213   219 #>  [9834,]  190  194  205  210  215  220  220  220  213   219 #>  [9835,]  190  194  205  210  215  220  220  220  213   219 #>  [9836,]  190  195  205  210  215  221  220  220  213   219 #>  [9837,]  189  193  204  209  215  220  220  220  213   219 #>  [9838,]  190  195  205  210  215  220  220  220  213   219 #>  [9839,]  190  195  205  210  215  221  220  220  213   219 #>  [9840,]  189  193  204  209  215  220  220  220  213   219 #>  [9841,]  190  195  205  210  215  220  220  220  213   219 #>  [9842,]  190  194  205  210  215  220  220  220  213   218 #>  [9843,]  190  194  205  210  215  220  220  220  213   219 #>  [9844,]  190  194  205  210  215  220  220  220  213   219 #>  [9845,]  190  195  205  210  215  221  220  220  213   219 #>  [9846,]  189  193  204  209  215  220  220  220  213   219 #>  [9847,]  189  193  204  209  215  220  220  220  213   219 #>  [9848,]  190  194  205  210  215  220  220  220  213   218 #>  [9849,]  190  195  205  210  215  221  220  220  213   219 #>  [9850,]  190  195  205  210  215  221  220  220  213   219 #>  [9851,]  190  195  205  210  215  220  220  220  213   218 #>  [9852,]  189  193  204  209  215  221  220  219  212   217 #>  [9853,]  190  195  205  210  215  221  220  220  213   219 #>  [9854,]  190  195  205  210  215  221  220  220  213   218 #>  [9855,]  189  193  204  209  215  221  220  220  213   219 #>  [9856,]  190  194  205  210  215  220  220  220  213   219 #>  [9857,]  189  193  204  209  215  221  220  220  213   219 #>  [9858,]  190  195  205  210  215  221  220  220  213   219 #>  [9859,]  189  193  204  209  215  221  220  219  212   217 #>  [9860,]  189  193  204  209  215  220  220  219  212   217 #>  [9861,]  190  194  205  210  215  220  220  220  213   219 #>  [9862,]  190  195  205  210  215  220  220  220  213   218 #>  [9863,]  190  194  205  210  215  220  220  220  213   219 #>  [9864,]  190  194  205  210  215  220  220  220  213   219 #>  [9865,]  190  194  205  210  215  220  220  220  213   219 #>  [9866,]  190  194  205  210  215  220  220  220  213   218 #>  [9867,]  190  195  205  210  215  221  220  220  213   219 #>  [9868,]  189  193  204  209  215  220  220  220  213   219 #>  [9869,]  190  195  205  210  215  220  220  220  213   218 #>  [9870,]  190  194  205  210  215  220  220  220  213   219 #>  [9871,]  190  195  205  210  215  220  220  220  213   219 #>  [9872,]  190  195  205  210  215  221  220  220  213   219 #>  [9873,]  190  195  205  210  215  221  220  220  213   219 #>  [9874,]  189  193  204  209  215  220  220  220  213   219 #>  [9875,]  190  194  205  210  215  220  220  220  213   219 #>  [9876,]  190  195  205  210  215  221  220  220  213   219 #>  [9877,]  190  195  205  210  215  220  220  220  213   219 #>  [9878,]  190  194  205  210  215  220  220  220  213   219 #>  [9879,]  190  194  205  210  215  220  220  220  213   219 #>  [9880,]  189  193  204  209  215  220  220  220  213   218 #>  [9881,]  190  194  205  210  215  220  220  220  213   218 #>  [9882,]  190  195  205  210  215  220  220  220  213   219 #>  [9883,]  190  195  205  210  215  220  220  220  213   219 #>  [9884,]  190  195  205  210  215  220  220  220  213   219 #>  [9885,]  190  195  205  210  215  221  220  220  213   219 #>  [9886,]  189  193  204  209  215  221  220  220  213   219 #>  [9887,]  190  195  205  210  215  221  220  220  213   219 #>  [9888,]  190  195  205  210  215  221  220  220  213   219 #>  [9889,]  190  195  205  210  215  220  220  220  213   218 #>  [9890,]  190  195  205  210  215  221  220  220  213   219 #>  [9891,]  190  195  205  210  215  221  220  220  213   219 #>  [9892,]  189  193  204  209  215  220  220  220  213   219 #>  [9893,]  190  195  205  210  215  220  220  220  213   219 #>  [9894,]  190  194  205  210  215  220  220  220  213   219 #>  [9895,]  190  194  205  210  215  220  220  220  213   219 #>  [9896,]  189  193  204  209  215  220  220  220  213   219 #>  [9897,]  189  193  204  209  215  220  220  219  212   217 #>  [9898,]  189  193  204  209  215  220  220  220  213   219 #>  [9899,]  190  195  205  210  215  220  220  220  213   219 #>  [9900,]  190  194  205  210  215  220  220  220  213   219 #>  [9901,]  191  196  206  211  216  222  222  222  215   221 #>  [9902,]  191  196  206  211  216  222  222  222  215   221 #>  [9903,]  191  196  206  211  216  222  221  221  214   220 #>  [9904,]  191  196  206  211  216  222  222  222  215   221 #>  [9905,]  192  197  207  212  217  222  221  221  214   220 #>  [9906,]  191  196  206  211  216  222  222  222  215   221 #>  [9907,]  191  196  206  211  216  222  221  221  214   220 #>  [9908,]  191  196  206  211  216  222  221  221  214   220 #>  [9909,]  191  196  206  211  216  222  222  222  215   221 #>  [9910,]  191  196  206  211  216  222  222  222  215   221 #>  [9911,]  191  196  206  211  216  222  222  222  215   221 #>  [9912,]  191  196  206  211  216  222  222  222  215   221 #>  [9913,]  191  196  206  211  216  222  221  221  214   220 #>  [9914,]  191  196  206  211  216  222  222  222  215   221 #>  [9915,]  191  196  206  211  216  222  222  222  215   221 #>  [9916,]  191  196  206  211  216  222  221  221  214   220 #>  [9917,]  191  196  206  211  216  222  221  221  214   220 #>  [9918,]  192  197  207  212  217  222  222  222  215   221 #>  [9919,]  191  196  206  211  216  222  222  222  215   221 #>  [9920,]  191  196  206  211  216  222  221  221  214   220 #>  [9921,]  191  196  206  211  216  222  222  222  215   221 #>  [9922,]  191  196  206  211  216  222  221  221  214   220 #>  [9923,]  191  196  206  211  216  222  222  222  215   221 #>  [9924,]  191  196  206  211  216  222  221  221  214   220 #>  [9925,]  191  196  206  211  216  222  221  221  214   220 #>  [9926,]  191  196  206  211  216  222  222  222  215   221 #>  [9927,]  191  196  206  211  216  222  222  222  215   221 #>  [9928,]  191  196  206  211  216  222  222  222  215   221 #>  [9929,]  191  196  206  211  216  222  221  221  214   220 #>  [9930,]  191  196  206  211  216  222  222  222  215   221 #>  [9931,]  191  196  206  211  216  222  222  222  215   221 #>  [9932,]  191  196  206  211  216  222  222  222  215   221 #>  [9933,]  191  196  206  211  216  222  222  222  215   221 #>  [9934,]  191  196  206  211  216  222  222  222  215   221 #>  [9935,]  191  196  206  211  216  222  222  222  215   221 #>  [9936,]  191  196  206  211  216  222  222  222  215   221 #>  [9937,]  191  196  206  211  216  222  222  222  215   221 #>  [9938,]  191  196  206  211  216  222  222  222  215   221 #>  [9939,]  191  196  206  211  216  222  221  221  214   220 #>  [9940,]  191  196  206  211  216  222  221  221  214   220 #>  [9941,]  191  196  206  211  216  222  222  222  215   221 #>  [9942,]  191  196  206  211  216  222  222  222  215   221 #>  [9943,]  191  196  206  211  216  222  221  221  214   220 #>  [9944,]  191  196  206  211  216  222  221  221  214   220 #>  [9945,]  191  196  206  211  216  222  221  221  214   220 #>  [9946,]  191  196  206  211  216  222  221  221  214   220 #>  [9947,]  191  196  206  211  216  222  221  221  214   220 #>  [9948,]  191  196  206  211  216  222  222  222  215   221 #>  [9949,]  191  196  206  211  216  222  221  221  214   220 #>  [9950,]  191  196  206  211  216  222  221  221  214   220 #>  [9951,]  191  196  206  211  216  222  221  221  214   220 #>  [9952,]  191  196  206  211  216  222  222  222  215   221 #>  [9953,]  191  196  206  211  216  222  221  221  214   220 #>  [9954,]  191  196  206  211  216  222  221  221  214   220 #>  [9955,]  191  196  206  211  216  222  221  221  214   220 #>  [9956,]  191  196  206  211  216  222  221  221  214   220 #>  [9957,]  191  196  206  211  216  222  222  222  215   221 #>  [9958,]  191  196  206  211  216  222  222  222  215   221 #>  [9959,]  191  196  206  211  216  222  221  221  214   220 #>  [9960,]  191  196  206  211  216  222  222  222  215   221 #>  [9961,]  191  196  206  211  216  222  222  222  215   221 #>  [9962,]  191  196  206  211  216  222  222  222  215   221 #>  [9963,]  191  196  206  211  216  222  221  221  214   220 #>  [9964,]  191  196  206  211  216  222  222  222  215   221 #>  [9965,]  191  196  206  211  216  222  221  221  214   220 #>  [9966,]  191  196  206  211  216  222  221  221  214   220 #>  [9967,]  191  196  206  211  216  222  222  222  215   221 #>  [9968,]  191  196  206  211  216  222  222  222  215   221 #>  [9969,]  191  196  206  211  216  222  222  222  215   221 #>  [9970,]  191  196  206  211  216  222  221  221  214   220 #>  [9971,]  192  197  207  212  217  222  221  221  214   220 #>  [9972,]  191  196  206  211  216  222  221  221  214   220 #>  [9973,]  191  196  206  211  216  222  222  222  215   221 #>  [9974,]  191  196  206  211  216  222  222  222  215   221 #>  [9975,]  192  197  207  212  217  222  222  222  215   221 #>  [9976,]  191  196  206  211  216  222  221  221  214   220 #>  [9977,]  191  196  206  211  216  222  221  221  214   220 #>  [9978,]  191  196  206  211  216  222  221  221  214   220 #>  [9979,]  191  196  206  211  216  222  221  221  214   220 #>  [9980,]  191  196  206  211  216  222  222  222  215   221 #>  [9981,]  191  196  206  211  216  222  222  222  215   221 #>  [9982,]  191  196  206  211  216  222  222  222  215   221 #>  [9983,]  191  196  206  211  216  222  221  221  214   220 #>  [9984,]  191  196  206  211  216  222  221  221  214   220 #>  [9985,]  191  196  206  211  216  222  222  222  215   221 #>  [9986,]  191  196  206  211  216  222  221  221  214   220 #>  [9987,]  191  196  206  211  216  222  222  222  215   221 #>  [9988,]  191  196  206  211  216  222  222  222  215   221 #>  [9989,]  191  196  206  211  216  222  221  221  214   220 #>  [9990,]  191  196  206  211  216  222  221  221  214   220 #>  [9991,]  191  196  206  211  216  222  222  222  215   221 #>  [9992,]  191  196  206  211  216  222  222  222  215   221 #>  [9993,]  191  196  206  211  216  222  222  222  215   221 #>  [9994,]  191  196  206  211  216  222  221  221  214   220 #>  [9995,]  192  197  207  212  217  222  222  222  215   221 #>  [9996,]  191  196  206  211  216  222  222  222  215   221 #>  [9997,]  191  196  206  211  216  222  222  222  215   221 #>  [9998,]  191  196  206  211  216  222  221  221  214   220 #>  [9999,]  191  196  206  211  216  222  222  222  215   221 #>  [ reached getOption(\"max.print\") -- omitted 10001 rows ] computeForestLeafIndices(bart_model, X, \"mean\", 0) #>          [,1] #>     [1,]    1 #>     [2,]    0 #>     [3,]    1 #>     [4,]    1 #>     [5,]    1 #>     [6,]    0 #>     [7,]    1 #>     [8,]    1 #>     [9,]    1 #>    [10,]    1 #>    [11,]    0 #>    [12,]    0 #>    [13,]    1 #>    [14,]    1 #>    [15,]    0 #>    [16,]    1 #>    [17,]    0 #>    [18,]    0 #>    [19,]    0 #>    [20,]    1 #>    [21,]    0 #>    [22,]    1 #>    [23,]    0 #>    [24,]    1 #>    [25,]    1 #>    [26,]    0 #>    [27,]    1 #>    [28,]    1 #>    [29,]    0 #>    [30,]    0 #>    [31,]    0 #>    [32,]    0 #>    [33,]    1 #>    [34,]    0 #>    [35,]    0 #>    [36,]    1 #>    [37,]    0 #>    [38,]    1 #>    [39,]    1 #>    [40,]    1 #>    [41,]    1 #>    [42,]    0 #>    [43,]    0 #>    [44,]    0 #>    [45,]    1 #>    [46,]    0 #>    [47,]    0 #>    [48,]    0 #>    [49,]    1 #>    [50,]    1 #>    [51,]    0 #>    [52,]    1 #>    [53,]    1 #>    [54,]    1 #>    [55,]    1 #>    [56,]    0 #>    [57,]    1 #>    [58,]    1 #>    [59,]    1 #>    [60,]    0 #>    [61,]    0 #>    [62,]    0 #>    [63,]    0 #>    [64,]    0 #>    [65,]    0 #>    [66,]    0 #>    [67,]    1 #>    [68,]    0 #>    [69,]    0 #>    [70,]    0 #>    [71,]    1 #>    [72,]    1 #>    [73,]    1 #>    [74,]    1 #>    [75,]    0 #>    [76,]    1 #>    [77,]    1 #>    [78,]    0 #>    [79,]    0 #>    [80,]    1 #>    [81,]    0 #>    [82,]    0 #>    [83,]    1 #>    [84,]    1 #>    [85,]    1 #>    [86,]    1 #>    [87,]    1 #>    [88,]    1 #>    [89,]    0 #>    [90,]    1 #>    [91,]    1 #>    [92,]    0 #>    [93,]    0 #>    [94,]    0 #>    [95,]    0 #>    [96,]    0 #>    [97,]    0 #>    [98,]    0 #>    [99,]    1 #>   [100,]    0 #>   [101,]    2 #>   [102,]    2 #>   [103,]    2 #>   [104,]    2 #>   [105,]    2 #>   [106,]    2 #>   [107,]    2 #>   [108,]    2 #>   [109,]    2 #>   [110,]    2 #>   [111,]    2 #>   [112,]    2 #>   [113,]    2 #>   [114,]    2 #>   [115,]    2 #>   [116,]    2 #>   [117,]    2 #>   [118,]    2 #>   [119,]    2 #>   [120,]    2 #>   [121,]    2 #>   [122,]    2 #>   [123,]    2 #>   [124,]    2 #>   [125,]    2 #>   [126,]    2 #>   [127,]    2 #>   [128,]    2 #>   [129,]    2 #>   [130,]    2 #>   [131,]    2 #>   [132,]    2 #>   [133,]    2 #>   [134,]    2 #>   [135,]    2 #>   [136,]    2 #>   [137,]    2 #>   [138,]    2 #>   [139,]    2 #>   [140,]    2 #>   [141,]    2 #>   [142,]    2 #>   [143,]    2 #>   [144,]    2 #>   [145,]    2 #>   [146,]    2 #>   [147,]    2 #>   [148,]    2 #>   [149,]    2 #>   [150,]    2 #>   [151,]    2 #>   [152,]    2 #>   [153,]    2 #>   [154,]    2 #>   [155,]    2 #>   [156,]    2 #>   [157,]    2 #>   [158,]    2 #>   [159,]    2 #>   [160,]    2 #>   [161,]    2 #>   [162,]    2 #>   [163,]    2 #>   [164,]    2 #>   [165,]    2 #>   [166,]    2 #>   [167,]    2 #>   [168,]    2 #>   [169,]    2 #>   [170,]    2 #>   [171,]    2 #>   [172,]    2 #>   [173,]    2 #>   [174,]    2 #>   [175,]    2 #>   [176,]    2 #>   [177,]    2 #>   [178,]    2 #>   [179,]    2 #>   [180,]    2 #>   [181,]    2 #>   [182,]    2 #>   [183,]    2 #>   [184,]    2 #>   [185,]    2 #>   [186,]    2 #>   [187,]    2 #>   [188,]    2 #>   [189,]    2 #>   [190,]    2 #>   [191,]    2 #>   [192,]    2 #>   [193,]    2 #>   [194,]    2 #>   [195,]    2 #>   [196,]    2 #>   [197,]    2 #>   [198,]    2 #>   [199,]    2 #>   [200,]    2 #>   [201,]    3 #>   [202,]    3 #>   [203,]    4 #>   [204,]    3 #>   [205,]    3 #>   [206,]    4 #>   [207,]    3 #>   [208,]    3 #>   [209,]    3 #>   [210,]    3 #>   [211,]    3 #>   [212,]    3 #>   [213,]    3 #>   [214,]    3 #>   [215,]    3 #>   [216,]    3 #>   [217,]    3 #>   [218,]    3 #>   [219,]    3 #>   [220,]    3 #>   [221,]    3 #>   [222,]    3 #>   [223,]    3 #>   [224,]    3 #>   [225,]    3 #>   [226,]    3 #>   [227,]    3 #>   [228,]    3 #>   [229,]    3 #>   [230,]    3 #>   [231,]    3 #>   [232,]    3 #>   [233,]    3 #>   [234,]    4 #>   [235,]    3 #>   [236,]    3 #>   [237,]    3 #>   [238,]    3 #>   [239,]    3 #>   [240,]    3 #>   [241,]    3 #>   [242,]    3 #>   [243,]    3 #>   [244,]    3 #>   [245,]    3 #>   [246,]    3 #>   [247,]    3 #>   [248,]    3 #>   [249,]    3 #>   [250,]    3 #>   [251,]    3 #>   [252,]    3 #>   [253,]    3 #>   [254,]    3 #>   [255,]    3 #>   [256,]    3 #>   [257,]    3 #>   [258,]    3 #>   [259,]    3 #>   [260,]    4 #>   [261,]    3 #>   [262,]    3 #>   [263,]    3 #>   [264,]    3 #>   [265,]    4 #>   [266,]    3 #>   [267,]    3 #>   [268,]    3 #>   [269,]    3 #>   [270,]    3 #>   [271,]    3 #>   [272,]    3 #>   [273,]    3 #>   [274,]    3 #>   [275,]    3 #>   [276,]    3 #>   [277,]    3 #>   [278,]    3 #>   [279,]    3 #>   [280,]    3 #>   [281,]    3 #>   [282,]    3 #>   [283,]    3 #>   [284,]    3 #>   [285,]    3 #>   [286,]    3 #>   [287,]    3 #>   [288,]    3 #>   [289,]    3 #>   [290,]    3 #>   [291,]    3 #>   [292,]    3 #>   [293,]    4 #>   [294,]    3 #>   [295,]    3 #>   [296,]    3 #>   [297,]    3 #>   [298,]    3 #>   [299,]    3 #>   [300,]    3 #>   [301,]    6 #>   [302,]    6 #>   [303,]    6 #>   [304,]    6 #>   [305,]    6 #>   [306,]    6 #>   [307,]    5 #>   [308,]    6 #>   [309,]    6 #>   [310,]    6 #>   [311,]    6 #>   [312,]    6 #>   [313,]    6 #>   [314,]    6 #>   [315,]    6 #>   [316,]    6 #>   [317,]    6 #>   [318,]    6 #>   [319,]    6 #>   [320,]    6 #>   [321,]    5 #>   [322,]    6 #>   [323,]    6 #>   [324,]    6 #>   [325,]    6 #>   [326,]    6 #>   [327,]    6 #>   [328,]    6 #>   [329,]    6 #>   [330,]    5 #>   [331,]    6 #>   [332,]    6 #>   [333,]    6 #>   [334,]    6 #>   [335,]    6 #>   [336,]    6 #>   [337,]    6 #>   [338,]    6 #>   [339,]    5 #>   [340,]    6 #>   [341,]    6 #>   [342,]    6 #>   [343,]    6 #>   [344,]    6 #>   [345,]    6 #>   [346,]    6 #>   [347,]    6 #>   [348,]    6 #>   [349,]    5 #>   [350,]    6 #>   [351,]    6 #>   [352,]    6 #>   [353,]    6 #>   [354,]    5 #>   [355,]    6 #>   [356,]    6 #>   [357,]    6 #>   [358,]    6 #>   [359,]    6 #>   [360,]    6 #>   [361,]    6 #>   [362,]    5 #>   [363,]    6 #>   [364,]    6 #>   [365,]    6 #>   [366,]    6 #>   [367,]    6 #>   [368,]    6 #>   [369,]    6 #>   [370,]    5 #>   [371,]    6 #>   [372,]    6 #>   [373,]    6 #>   [374,]    6 #>   [375,]    6 #>   [376,]    6 #>   [377,]    6 #>   [378,]    6 #>   [379,]    6 #>   [380,]    5 #>   [381,]    6 #>   [382,]    6 #>   [383,]    6 #>   [384,]    6 #>   [385,]    6 #>   [386,]    6 #>   [387,]    6 #>   [388,]    6 #>   [389,]    6 #>   [390,]    6 #>   [391,]    6 #>   [392,]    6 #>   [393,]    6 #>   [394,]    6 #>   [395,]    5 #>   [396,]    6 #>   [397,]    6 #>   [398,]    5 #>   [399,]    6 #>   [400,]    6 #>   [401,]    8 #>   [402,]    7 #>   [403,]    7 #>   [404,]    8 #>   [405,]    8 #>   [406,]    8 #>   [407,]    7 #>   [408,]    8 #>   [409,]    8 #>   [410,]    7 #>   [411,]    8 #>   [412,]    8 #>   [413,]    7 #>   [414,]    8 #>   [415,]    8 #>   [416,]    7 #>   [417,]    7 #>   [418,]    7 #>   [419,]    7 #>   [420,]    8 #>   [421,]    7 #>   [422,]    7 #>   [423,]    7 #>   [424,]    7 #>   [425,]    7 #>   [426,]    8 #>   [427,]    7 #>   [428,]    8 #>   [429,]    7 #>   [430,]    7 #>   [431,]    7 #>   [432,]    7 #>   [433,]    8 #>   [434,]    7 #>   [435,]    7 #>   [436,]    7 #>   [437,]    7 #>   [438,]    8 #>   [439,]    7 #>   [440,]    7 #>   [441,]    8 #>   [442,]    8 #>   [443,]    8 #>   [444,]    7 #>   [445,]    8 #>   [446,]    8 #>   [447,]    7 #>   [448,]    7 #>   [449,]    7 #>   [450,]    8 #>   [451,]    8 #>   [452,]    8 #>   [453,]    8 #>   [454,]    7 #>   [455,]    8 #>   [456,]    8 #>   [457,]    8 #>   [458,]    8 #>   [459,]    7 #>   [460,]    8 #>   [461,]    8 #>   [462,]    7 #>   [463,]    8 #>   [464,]    8 #>   [465,]    8 #>   [466,]    8 #>   [467,]    8 #>   [468,]    8 #>   [469,]    7 #>   [470,]    7 #>   [471,]    8 #>   [472,]    8 #>   [473,]    8 #>   [474,]    8 #>   [475,]    8 #>   [476,]    8 #>   [477,]    7 #>   [478,]    8 #>   [479,]    7 #>   [480,]    7 #>   [481,]    8 #>   [482,]    7 #>   [483,]    7 #>   [484,]    8 #>   [485,]    7 #>   [486,]    7 #>   [487,]    8 #>   [488,]    8 #>   [489,]    8 #>   [490,]    8 #>   [491,]    8 #>   [492,]    8 #>   [493,]    7 #>   [494,]    8 #>   [495,]    7 #>   [496,]    8 #>   [497,]    8 #>   [498,]    7 #>   [499,]    7 #>   [500,]    7 #>   [501,]    9 #>   [502,]    9 #>   [503,]   10 #>   [504,]    9 #>   [505,]    9 #>   [506,]   10 #>   [507,]    9 #>   [508,]    9 #>   [509,]    9 #>   [510,]    9 #>   [511,]    9 #>   [512,]    9 #>   [513,]    9 #>   [514,]    9 #>   [515,]    9 #>   [516,]    9 #>   [517,]    9 #>   [518,]    9 #>   [519,]   10 #>   [520,]    9 #>   [521,]    9 #>   [522,]    9 #>   [523,]    9 #>   [524,]    9 #>   [525,]   10 #>   [526,]    9 #>   [527,]    9 #>   [528,]    9 #>   [529,]    9 #>   [530,]    9 #>   [531,]    9 #>   [532,]    9 #>   [533,]    9 #>   [534,]   10 #>   [535,]    9 #>   [536,]    9 #>   [537,]    9 #>   [538,]    9 #>   [539,]    9 #>   [540,]    9 #>   [541,]    9 #>   [542,]    9 #>   [543,]    9 #>   [544,]    9 #>   [545,]    9 #>   [546,]    9 #>   [547,]    9 #>   [548,]    9 #>   [549,]    9 #>   [550,]    9 #>   [551,]    9 #>   [552,]    9 #>   [553,]    9 #>   [554,]    9 #>   [555,]    9 #>   [556,]    9 #>   [557,]    9 #>   [558,]    9 #>   [559,]    9 #>   [560,]   10 #>   [561,]    9 #>   [562,]    9 #>   [563,]    9 #>   [564,]    9 #>   [565,]   10 #>   [566,]    9 #>   [567,]    9 #>   [568,]    9 #>   [569,]    9 #>   [570,]   10 #>   [571,]    9 #>   [572,]    9 #>   [573,]   10 #>   [574,]    9 #>   [575,]    9 #>   [576,]    9 #>   [577,]    9 #>   [578,]    9 #>   [579,]    9 #>   [580,]    9 #>   [581,]    9 #>   [582,]    9 #>   [583,]    9 #>   [584,]    9 #>   [585,]    9 #>   [586,]    9 #>   [587,]    9 #>   [588,]    9 #>   [589,]    9 #>   [590,]    9 #>   [591,]    9 #>   [592,]    9 #>   [593,]   10 #>   [594,]    9 #>   [595,]    9 #>   [596,]    9 #>   [597,]    9 #>   [598,]    9 #>   [599,]    9 #>   [600,]    9 #>   [601,]   12 #>   [602,]   12 #>   [603,]   12 #>   [604,]   11 #>   [605,]   12 #>   [606,]   12 #>   [607,]   12 #>   [608,]   11 #>   [609,]   11 #>   [610,]   11 #>   [611,]   12 #>   [612,]   12 #>   [613,]   12 #>   [614,]   12 #>   [615,]   12 #>   [616,]   12 #>   [617,]   12 #>   [618,]   11 #>   [619,]   12 #>   [620,]   11 #>   [621,]   12 #>   [622,]   12 #>   [623,]   12 #>   [624,]   11 #>   [625,]   12 #>   [626,]   12 #>   [627,]   12 #>   [628,]   12 #>   [629,]   12 #>   [630,]   11 #>   [631,]   12 #>   [632,]   12 #>   [633,]   12 #>   [634,]   12 #>   [635,]   12 #>   [636,]   12 #>   [637,]   12 #>   [638,]   12 #>   [639,]   11 #>   [640,]   12 #>   [641,]   12 #>   [642,]   12 #>   [643,]   11 #>   [644,]   12 #>   [645,]   11 #>   [646,]   12 #>   [647,]   12 #>   [648,]   12 #>   [649,]   11 #>   [650,]   12 #>   [651,]   11 #>   [652,]   12 #>   [653,]   11 #>   [654,]   12 #>   [655,]   12 #>   [656,]   11 #>   [657,]   12 #>   [658,]   12 #>   [659,]   12 #>   [660,]   11 #>   [661,]   12 #>   [662,]   12 #>   [663,]   12 #>   [664,]   11 #>   [665,]   11 #>   [666,]   11 #>   [667,]   11 #>   [668,]   12 #>   [669,]   12 #>   [670,]   12 #>   [671,]   12 #>   [672,]   12 #>   [673,]   12 #>   [674,]   12 #>   [675,]   12 #>   [676,]   12 #>   [677,]   12 #>   [678,]   11 #>   [679,]   12 #>   [680,]   12 #>   [681,]   12 #>   [682,]   12 #>   [683,]   12 #>   [684,]   12 #>   [685,]   11 #>   [686,]   12 #>   [687,]   12 #>   [688,]   12 #>   [689,]   11 #>   [690,]   12 #>   [691,]   11 #>   [692,]   12 #>   [693,]   12 #>   [694,]   12 #>   [695,]   11 #>   [696,]   12 #>   [697,]   12 #>   [698,]   12 #>   [699,]   12 #>   [700,]   12 #>   [701,]   13 #>   [702,]   13 #>   [703,]   13 #>   [704,]   13 #>   [705,]   13 #>   [706,]   13 #>   [707,]   13 #>   [708,]   13 #>   [709,]   13 #>   [710,]   13 #>   [711,]   13 #>   [712,]   13 #>   [713,]   13 #>   [714,]   13 #>   [715,]   13 #>   [716,]   13 #>   [717,]   13 #>   [718,]   13 #>   [719,]   13 #>   [720,]   13 #>   [721,]   13 #>   [722,]   13 #>   [723,]   13 #>   [724,]   13 #>   [725,]   13 #>   [726,]   13 #>   [727,]   13 #>   [728,]   13 #>   [729,]   13 #>   [730,]   13 #>   [731,]   13 #>   [732,]   13 #>   [733,]   13 #>   [734,]   13 #>   [735,]   13 #>   [736,]   13 #>   [737,]   13 #>   [738,]   13 #>   [739,]   13 #>   [740,]   13 #>   [741,]   13 #>   [742,]   13 #>   [743,]   13 #>   [744,]   13 #>   [745,]   13 #>   [746,]   13 #>   [747,]   13 #>   [748,]   13 #>   [749,]   13 #>   [750,]   13 #>   [751,]   13 #>   [752,]   13 #>   [753,]   13 #>   [754,]   13 #>   [755,]   13 #>   [756,]   13 #>   [757,]   13 #>   [758,]   13 #>   [759,]   13 #>   [760,]   13 #>   [761,]   13 #>   [762,]   13 #>   [763,]   13 #>   [764,]   13 #>   [765,]   13 #>   [766,]   13 #>   [767,]   13 #>   [768,]   13 #>   [769,]   13 #>   [770,]   13 #>   [771,]   13 #>   [772,]   13 #>   [773,]   13 #>   [774,]   13 #>   [775,]   13 #>   [776,]   13 #>   [777,]   13 #>   [778,]   13 #>   [779,]   13 #>   [780,]   13 #>   [781,]   13 #>   [782,]   13 #>   [783,]   13 #>   [784,]   13 #>   [785,]   13 #>   [786,]   13 #>   [787,]   13 #>   [788,]   13 #>   [789,]   13 #>   [790,]   13 #>   [791,]   13 #>   [792,]   13 #>   [793,]   13 #>   [794,]   13 #>   [795,]   13 #>   [796,]   13 #>   [797,]   13 #>   [798,]   13 #>   [799,]   13 #>   [800,]   13 #>   [801,]   14 #>   [802,]   14 #>   [803,]   14 #>   [804,]   14 #>   [805,]   14 #>   [806,]   14 #>   [807,]   14 #>   [808,]   14 #>   [809,]   14 #>   [810,]   14 #>   [811,]   14 #>   [812,]   14 #>   [813,]   14 #>   [814,]   14 #>   [815,]   14 #>   [816,]   14 #>   [817,]   14 #>   [818,]   14 #>   [819,]   14 #>   [820,]   14 #>   [821,]   14 #>   [822,]   14 #>   [823,]   14 #>   [824,]   14 #>   [825,]   14 #>   [826,]   14 #>   [827,]   14 #>   [828,]   14 #>   [829,]   14 #>   [830,]   14 #>   [831,]   14 #>   [832,]   14 #>   [833,]   14 #>   [834,]   14 #>   [835,]   14 #>   [836,]   14 #>   [837,]   14 #>   [838,]   14 #>   [839,]   14 #>   [840,]   14 #>   [841,]   14 #>   [842,]   14 #>   [843,]   14 #>   [844,]   14 #>   [845,]   14 #>   [846,]   14 #>   [847,]   14 #>   [848,]   14 #>   [849,]   14 #>   [850,]   14 #>   [851,]   14 #>   [852,]   14 #>   [853,]   14 #>   [854,]   14 #>   [855,]   14 #>   [856,]   14 #>   [857,]   14 #>   [858,]   14 #>   [859,]   14 #>   [860,]   14 #>   [861,]   14 #>   [862,]   14 #>   [863,]   14 #>   [864,]   14 #>   [865,]   14 #>   [866,]   14 #>   [867,]   14 #>   [868,]   14 #>   [869,]   14 #>   [870,]   14 #>   [871,]   14 #>   [872,]   14 #>   [873,]   14 #>   [874,]   14 #>   [875,]   14 #>   [876,]   14 #>   [877,]   14 #>   [878,]   14 #>   [879,]   14 #>   [880,]   14 #>   [881,]   14 #>   [882,]   14 #>   [883,]   14 #>   [884,]   14 #>   [885,]   14 #>   [886,]   14 #>   [887,]   14 #>   [888,]   14 #>   [889,]   14 #>   [890,]   14 #>   [891,]   14 #>   [892,]   14 #>   [893,]   14 #>   [894,]   14 #>   [895,]   14 #>   [896,]   14 #>   [897,]   14 #>   [898,]   14 #>   [899,]   14 #>   [900,]   14 #>   [901,]   15 #>   [902,]   16 #>   [903,]   16 #>   [904,]   15 #>   [905,]   15 #>   [906,]   16 #>   [907,]   15 #>   [908,]   15 #>   [909,]   15 #>   [910,]   15 #>   [911,]   15 #>   [912,]   16 #>   [913,]   15 #>   [914,]   15 #>   [915,]   15 #>   [916,]   15 #>   [917,]   15 #>   [918,]   16 #>   [919,]   16 #>   [920,]   16 #>   [921,]   15 #>   [922,]   15 #>   [923,]   15 #>   [924,]   15 #>   [925,]   16 #>   [926,]   15 #>   [927,]   15 #>   [928,]   16 #>   [929,]   15 #>   [930,]   15 #>   [931,]   15 #>   [932,]   15 #>   [933,]   16 #>   [934,]   16 #>   [935,]   15 #>   [936,]   15 #>   [937,]   15 #>   [938,]   15 #>   [939,]   15 #>   [940,]   15 #>   [941,]   15 #>   [942,]   15 #>   [943,]   15 #>   [944,]   15 #>   [945,]   15 #>   [946,]   15 #>   [947,]   15 #>   [948,]   15 #>   [949,]   15 #>   [950,]   15 #>   [951,]   15 #>   [952,]   15 #>   [953,]   15 #>   [954,]   15 #>   [955,]   15 #>   [956,]   15 #>   [957,]   15 #>   [958,]   15 #>   [959,]   15 #>   [960,]   16 #>   [961,]   15 #>   [962,]   15 #>   [963,]   15 #>   [964,]   15 #>   [965,]   16 #>   [966,]   15 #>   [967,]   15 #>   [968,]   15 #>   [969,]   15 #>   [970,]   16 #>   [971,]   15 #>   [972,]   15 #>   [973,]   16 #>   [974,]   15 #>   [975,]   15 #>   [976,]   15 #>   [977,]   15 #>   [978,]   15 #>   [979,]   15 #>   [980,]   15 #>   [981,]   15 #>   [982,]   15 #>   [983,]   15 #>   [984,]   16 #>   [985,]   15 #>   [986,]   15 #>   [987,]   15 #>   [988,]   15 #>   [989,]   15 #>   [990,]   15 #>   [991,]   15 #>   [992,]   15 #>   [993,]   16 #>   [994,]   15 #>   [995,]   15 #>   [996,]   15 #>   [997,]   16 #>   [998,]   16 #>   [999,]   15 #>  [1000,]   15 #>  [1001,]   18 #>  [1002,]   18 #>  [1003,]   18 #>  [1004,]   18 #>  [1005,]   18 #>  [1006,]   18 #>  [1007,]   18 #>  [1008,]   18 #>  [1009,]   18 #>  [1010,]   18 #>  [1011,]   18 #>  [1012,]   18 #>  [1013,]   18 #>  [1014,]   18 #>  [1015,]   18 #>  [1016,]   18 #>  [1017,]   18 #>  [1018,]   18 #>  [1019,]   18 #>  [1020,]   17 #>  [1021,]   17 #>  [1022,]   18 #>  [1023,]   18 #>  [1024,]   18 #>  [1025,]   17 #>  [1026,]   18 #>  [1027,]   18 #>  [1028,]   18 #>  [1029,]   18 #>  [1030,]   18 #>  [1031,]   18 #>  [1032,]   18 #>  [1033,]   18 #>  [1034,]   18 #>  [1035,]   17 #>  [1036,]   18 #>  [1037,]   18 #>  [1038,]   18 #>  [1039,]   18 #>  [1040,]   18 #>  [1041,]   18 #>  [1042,]   18 #>  [1043,]   18 #>  [1044,]   17 #>  [1045,]   18 #>  [1046,]   18 #>  [1047,]   18 #>  [1048,]   18 #>  [1049,]   18 #>  [1050,]   18 #>  [1051,]   18 #>  [1052,]   18 #>  [1053,]   17 #>  [1054,]   18 #>  [1055,]   18 #>  [1056,]   17 #>  [1057,]   18 #>  [1058,]   18 #>  [1059,]   18 #>  [1060,]   18 #>  [1061,]   18 #>  [1062,]   18 #>  [1063,]   18 #>  [1064,]   18 #>  [1065,]   17 #>  [1066,]   18 #>  [1067,]   18 #>  [1068,]   18 #>  [1069,]   18 #>  [1070,]   18 #>  [1071,]   18 #>  [1072,]   18 #>  [1073,]   18 #>  [1074,]   17 #>  [1075,]   18 #>  [1076,]   18 #>  [1077,]   18 #>  [1078,]   18 #>  [1079,]   18 #>  [1080,]   17 #>  [1081,]   18 #>  [1082,]   18 #>  [1083,]   18 #>  [1084,]   18 #>  [1085,]   17 #>  [1086,]   17 #>  [1087,]   18 #>  [1088,]   18 #>  [1089,]   17 #>  [1090,]   18 #>  [1091,]   18 #>  [1092,]   18 #>  [1093,]   18 #>  [1094,]   18 #>  [1095,]   18 #>  [1096,]   18 #>  [1097,]   18 #>  [1098,]   18 #>  [1099,]   18 #>  [1100,]   18 #>  [1101,]   20 #>  [1102,]   20 #>  [1103,]   19 #>  [1104,]   19 #>  [1105,]   19 #>  [1106,]   19 #>  [1107,]   20 #>  [1108,]   20 #>  [1109,]   19 #>  [1110,]   19 #>  [1111,]   19 #>  [1112,]   20 #>  [1113,]   20 #>  [1114,]   19 #>  [1115,]   20 #>  [1116,]   20 #>  [1117,]   20 #>  [1118,]   20 #>  [1119,]   20 #>  [1120,]   20 #>  [1121,]   19 #>  [1122,]   20 #>  [1123,]   20 #>  [1124,]   19 #>  [1125,]   19 #>  [1126,]   20 #>  [1127,]   20 #>  [1128,]   19 #>  [1129,]   20 #>  [1130,]   20 #>  [1131,]   19 #>  [1132,]   19 #>  [1133,]   20 #>  [1134,]   19 #>  [1135,]   19 #>  [1136,]   20 #>  [1137,]   20 #>  [1138,]   20 #>  [1139,]   19 #>  [1140,]   19 #>  [1141,]   20 #>  [1142,]   19 #>  [1143,]   20 #>  [1144,]   20 #>  [1145,]   20 #>  [1146,]   20 #>  [1147,]   19 #>  [1148,]   19 #>  [1149,]   20 #>  [1150,]   20 #>  [1151,]   20 #>  [1152,]   19 #>  [1153,]   20 #>  [1154,]   19 #>  [1155,]   20 #>  [1156,]   20 #>  [1157,]   19 #>  [1158,]   20 #>  [1159,]   20 #>  [1160,]   20 #>  [1161,]   20 #>  [1162,]   19 #>  [1163,]   20 #>  [1164,]   20 #>  [1165,]   19 #>  [1166,]   20 #>  [1167,]   19 #>  [1168,]   20 #>  [1169,]   20 #>  [1170,]   19 #>  [1171,]   20 #>  [1172,]   19 #>  [1173,]   19 #>  [1174,]   19 #>  [1175,]   20 #>  [1176,]   19 #>  [1177,]   20 #>  [1178,]   20 #>  [1179,]   19 #>  [1180,]   20 #>  [1181,]   20 #>  [1182,]   19 #>  [1183,]   20 #>  [1184,]   20 #>  [1185,]   20 #>  [1186,]   19 #>  [1187,]   20 #>  [1188,]   19 #>  [1189,]   19 #>  [1190,]   20 #>  [1191,]   19 #>  [1192,]   20 #>  [1193,]   20 #>  [1194,]   19 #>  [1195,]   20 #>  [1196,]   20 #>  [1197,]   20 #>  [1198,]   19 #>  [1199,]   20 #>  [1200,]   20 #>  [1201,]   22 #>  [1202,]   22 #>  [1203,]   22 #>  [1204,]   21 #>  [1205,]   22 #>  [1206,]   22 #>  [1207,]   22 #>  [1208,]   21 #>  [1209,]   21 #>  [1210,]   22 #>  [1211,]   21 #>  [1212,]   22 #>  [1213,]   21 #>  [1214,]   22 #>  [1215,]   22 #>  [1216,]   22 #>  [1217,]   21 #>  [1218,]   22 #>  [1219,]   22 #>  [1220,]   22 #>  [1221,]   22 #>  [1222,]   21 #>  [1223,]   22 #>  [1224,]   22 #>  [1225,]   22 #>  [1226,]   22 #>  [1227,]   21 #>  [1228,]   22 #>  [1229,]   22 #>  [1230,]   22 #>  [1231,]   22 #>  [1232,]   22 #>  [1233,]   22 #>  [1234,]   22 #>  [1235,]   21 #>  [1236,]   22 #>  [1237,]   22 #>  [1238,]   22 #>  [1239,]   22 #>  [1240,]   22 #>  [1241,]   22 #>  [1242,]   22 #>  [1243,]   21 #>  [1244,]   21 #>  [1245,]   22 #>  [1246,]   22 #>  [1247,]   22 #>  [1248,]   22 #>  [1249,]   21 #>  [1250,]   22 #>  [1251,]   22 #>  [1252,]   21 #>  [1253,]   22 #>  [1254,]   22 #>  [1255,]   21 #>  [1256,]   22 #>  [1257,]   22 #>  [1258,]   21 #>  [1259,]   22 #>  [1260,]   22 #>  [1261,]   22 #>  [1262,]   22 #>  [1263,]   22 #>  [1264,]   22 #>  [1265,]   22 #>  [1266,]   21 #>  [1267,]   22 #>  [1268,]   22 #>  [1269,]   21 #>  [1270,]   22 #>  [1271,]   22 #>  [1272,]   22 #>  [1273,]   22 #>  [1274,]   22 #>  [1275,]   22 #>  [1276,]   22 #>  [1277,]   22 #>  [1278,]   22 #>  [1279,]   21 #>  [1280,]   21 #>  [1281,]   21 #>  [1282,]   21 #>  [1283,]   21 #>  [1284,]   22 #>  [1285,]   22 #>  [1286,]   22 #>  [1287,]   21 #>  [1288,]   21 #>  [1289,]   21 #>  [1290,]   21 #>  [1291,]   22 #>  [1292,]   21 #>  [1293,]   22 #>  [1294,]   22 #>  [1295,]   21 #>  [1296,]   22 #>  [1297,]   22 #>  [1298,]   22 #>  [1299,]   21 #>  [1300,]   22 #>  [1301,]   23 #>  [1302,]   24 #>  [1303,]   24 #>  [1304,]   23 #>  [1305,]   23 #>  [1306,]   24 #>  [1307,]   24 #>  [1308,]   23 #>  [1309,]   23 #>  [1310,]   23 #>  [1311,]   23 #>  [1312,]   24 #>  [1313,]   23 #>  [1314,]   23 #>  [1315,]   23 #>  [1316,]   23 #>  [1317,]   23 #>  [1318,]   24 #>  [1319,]   24 #>  [1320,]   24 #>  [1321,]   23 #>  [1322,]   23 #>  [1323,]   24 #>  [1324,]   23 #>  [1325,]   24 #>  [1326,]   23 #>  [1327,]   23 #>  [1328,]   24 #>  [1329,]   24 #>  [1330,]   23 #>  [1331,]   24 #>  [1332,]   24 #>  [1333,]   24 #>  [1334,]   24 #>  [1335,]   23 #>  [1336,]   23 #>  [1337,]   23 #>  [1338,]   23 #>  [1339,]   23 #>  [1340,]   24 #>  [1341,]   23 #>  [1342,]   24 #>  [1343,]   23 #>  [1344,]   23 #>  [1345,]   23 #>  [1346,]   23 #>  [1347,]   23 #>  [1348,]   24 #>  [1349,]   23 #>  [1350,]   23 #>  [1351,]   23 #>  [1352,]   23 #>  [1353,]   23 #>  [1354,]   23 #>  [1355,]   23 #>  [1356,]   24 #>  [1357,]   24 #>  [1358,]   23 #>  [1359,]   23 #>  [1360,]   24 #>  [1361,]   24 #>  [1362,]   23 #>  [1363,]   23 #>  [1364,]   24 #>  [1365,]   24 #>  [1366,]   23 #>  [1367,]   23 #>  [1368,]   23 #>  [1369,]   23 #>  [1370,]   24 #>  [1371,]   24 #>  [1372,]   23 #>  [1373,]   24 #>  [1374,]   23 #>  [1375,]   24 #>  [1376,]   23 #>  [1377,]   24 #>  [1378,]   24 #>  [1379,]   23 #>  [1380,]   23 #>  [1381,]   23 #>  [1382,]   23 #>  [1383,]   23 #>  [1384,]   24 #>  [1385,]   23 #>  [1386,]   24 #>  [1387,]   23 #>  [1388,]   23 #>  [1389,]   23 #>  [1390,]   23 #>  [1391,]   23 #>  [1392,]   23 #>  [1393,]   24 #>  [1394,]   23 #>  [1395,]   23 #>  [1396,]   23 #>  [1397,]   24 #>  [1398,]   24 #>  [1399,]   23 #>  [1400,]   24 #>  [1401,]   26 #>  [1402,]   26 #>  [1403,]   25 #>  [1404,]   25 #>  [1405,]   26 #>  [1406,]   26 #>  [1407,]   25 #>  [1408,]   25 #>  [1409,]   26 #>  [1410,]   25 #>  [1411,]   26 #>  [1412,]   25 #>  [1413,]   26 #>  [1414,]   25 #>  [1415,]   26 #>  [1416,]   25 #>  [1417,]   26 #>  [1418,]   26 #>  [1419,]   26 #>  [1420,]   26 #>  [1421,]   26 #>  [1422,]   26 #>  [1423,]   25 #>  [1424,]   26 #>  [1425,]   25 #>  [1426,]   26 #>  [1427,]   26 #>  [1428,]   26 #>  [1429,]   26 #>  [1430,]   26 #>  [1431,]   25 #>  [1432,]   25 #>  [1433,]   26 #>  [1434,]   26 #>  [1435,]   26 #>  [1436,]   26 #>  [1437,]   25 #>  [1438,]   26 #>  [1439,]   26 #>  [1440,]   25 #>  [1441,]   26 #>  [1442,]   26 #>  [1443,]   26 #>  [1444,]   25 #>  [1445,]   26 #>  [1446,]   25 #>  [1447,]   25 #>  [1448,]   26 #>  [1449,]   26 #>  [1450,]   26 #>  [1451,]   26 #>  [1452,]   25 #>  [1453,]   26 #>  [1454,]   26 #>  [1455,]   25 #>  [1456,]   26 #>  [1457,]   25 #>  [1458,]   26 #>  [1459,]   25 #>  [1460,]   25 #>  [1461,]   26 #>  [1462,]   26 #>  [1463,]   26 #>  [1464,]   26 #>  [1465,]   26 #>  [1466,]   26 #>  [1467,]   25 #>  [1468,]   25 #>  [1469,]   26 #>  [1470,]   26 #>  [1471,]   26 #>  [1472,]   25 #>  [1473,]   26 #>  [1474,]   25 #>  [1475,]   25 #>  [1476,]   25 #>  [1477,]   26 #>  [1478,]   25 #>  [1479,]   26 #>  [1480,]   25 #>  [1481,]   26 #>  [1482,]   26 #>  [1483,]   26 #>  [1484,]   26 #>  [1485,]   26 #>  [1486,]   25 #>  [1487,]   26 #>  [1488,]   26 #>  [1489,]   26 #>  [1490,]   26 #>  [1491,]   26 #>  [1492,]   25 #>  [1493,]   26 #>  [1494,]   26 #>  [1495,]   25 #>  [1496,]   25 #>  [1497,]   25 #>  [1498,]   25 #>  [1499,]   26 #>  [1500,]   26 #>  [1501,]   28 #>  [1502,]   28 #>  [1503,]   27 #>  [1504,]   27 #>  [1505,]   27 #>  [1506,]   28 #>  [1507,]   27 #>  [1508,]   27 #>  [1509,]   27 #>  [1510,]   27 #>  [1511,]   28 #>  [1512,]   27 #>  [1513,]   28 #>  [1514,]   28 #>  [1515,]   28 #>  [1516,]   28 #>  [1517,]   28 #>  [1518,]   27 #>  [1519,]   27 #>  [1520,]   27 #>  [1521,]   28 #>  [1522,]   28 #>  [1523,]   27 #>  [1524,]   27 #>  [1525,]   27 #>  [1526,]   28 #>  [1527,]   28 #>  [1528,]   27 #>  [1529,]   28 #>  [1530,]   27 #>  [1531,]   27 #>  [1532,]   27 #>  [1533,]   28 #>  [1534,]   27 #>  [1535,]   28 #>  [1536,]   27 #>  [1537,]   28 #>  [1538,]   27 #>  [1539,]   27 #>  [1540,]   27 #>  [1541,]   28 #>  [1542,]   27 #>  [1543,]   27 #>  [1544,]   28 #>  [1545,]   27 #>  [1546,]   27 #>  [1547,]   28 #>  [1548,]   27 #>  [1549,]   27 #>  [1550,]   28 #>  [1551,]   27 #>  [1552,]   28 #>  [1553,]   27 #>  [1554,]   27 #>  [1555,]   27 #>  [1556,]   27 #>  [1557,]   27 #>  [1558,]   28 #>  [1559,]   28 #>  [1560,]   27 #>  [1561,]   28 #>  [1562,]   27 #>  [1563,]   27 #>  [1564,]   27 #>  [1565,]   27 #>  [1566,]   27 #>  [1567,]   27 #>  [1568,]   28 #>  [1569,]   27 #>  [1570,]   28 #>  [1571,]   28 #>  [1572,]   27 #>  [1573,]   28 #>  [1574,]   27 #>  [1575,]   27 #>  [1576,]   28 #>  [1577,]   28 #>  [1578,]   27 #>  [1579,]   28 #>  [1580,]   27 #>  [1581,]   28 #>  [1582,]   27 #>  [1583,]   28 #>  [1584,]   28 #>  [1585,]   27 #>  [1586,]   28 #>  [1587,]   27 #>  [1588,]   27 #>  [1589,]   27 #>  [1590,]   28 #>  [1591,]   27 #>  [1592,]   27 #>  [1593,]   28 #>  [1594,]   28 #>  [1595,]   27 #>  [1596,]   28 #>  [1597,]   27 #>  [1598,]   27 #>  [1599,]   28 #>  [1600,]   28 #>  [1601,]   29 #>  [1602,]   30 #>  [1603,]   30 #>  [1604,]   29 #>  [1605,]   30 #>  [1606,]   30 #>  [1607,]   30 #>  [1608,]   29 #>  [1609,]   29 #>  [1610,]   30 #>  [1611,]   29 #>  [1612,]   30 #>  [1613,]   29 #>  [1614,]   29 #>  [1615,]   30 #>  [1616,]   30 #>  [1617,]   29 #>  [1618,]   30 #>  [1619,]   30 #>  [1620,]   30 #>  [1621,]   29 #>  [1622,]   29 #>  [1623,]   30 #>  [1624,]   30 #>  [1625,]   30 #>  [1626,]   30 #>  [1627,]   29 #>  [1628,]   30 #>  [1629,]   30 #>  [1630,]   29 #>  [1631,]   30 #>  [1632,]   30 #>  [1633,]   30 #>  [1634,]   30 #>  [1635,]   29 #>  [1636,]   30 #>  [1637,]   30 #>  [1638,]   30 #>  [1639,]   30 #>  [1640,]   30 #>  [1641,]   30 #>  [1642,]   30 #>  [1643,]   29 #>  [1644,]   29 #>  [1645,]   29 #>  [1646,]   29 #>  [1647,]   30 #>  [1648,]   30 #>  [1649,]   29 #>  [1650,]   30 #>  [1651,]   30 #>  [1652,]   29 #>  [1653,]   30 #>  [1654,]   29 #>  [1655,]   29 #>  [1656,]   30 #>  [1657,]   30 #>  [1658,]   29 #>  [1659,]   30 #>  [1660,]   30 #>  [1661,]   30 #>  [1662,]   30 #>  [1663,]   30 #>  [1664,]   30 #>  [1665,]   30 #>  [1666,]   29 #>  [1667,]   30 #>  [1668,]   29 #>  [1669,]   29 #>  [1670,]   30 #>  [1671,]   30 #>  [1672,]   30 #>  [1673,]   30 #>  [1674,]   30 #>  [1675,]   30 #>  [1676,]   30 #>  [1677,]   30 #>  [1678,]   30 #>  [1679,]   29 #>  [1680,]   29 #>  [1681,]   29 #>  [1682,]   29 #>  [1683,]   29 #>  [1684,]   30 #>  [1685,]   30 #>  [1686,]   30 #>  [1687,]   29 #>  [1688,]   29 #>  [1689,]   29 #>  [1690,]   29 #>  [1691,]   29 #>  [1692,]   29 #>  [1693,]   30 #>  [1694,]   30 #>  [1695,]   29 #>  [1696,]   29 #>  [1697,]   30 #>  [1698,]   30 #>  [1699,]   29 #>  [1700,]   30 #>  [1701,]   32 #>  [1702,]   31 #>  [1703,]   31 #>  [1704,]   32 #>  [1705,]   32 #>  [1706,]   31 #>  [1707,]   31 #>  [1708,]   31 #>  [1709,]   31 #>  [1710,]   32 #>  [1711,]   32 #>  [1712,]   32 #>  [1713,]   32 #>  [1714,]   32 #>  [1715,]   32 #>  [1716,]   32 #>  [1717,]   32 #>  [1718,]   32 #>  [1719,]   32 #>  [1720,]   31 #>  [1721,]   31 #>  [1722,]   32 #>  [1723,]   31 #>  [1724,]   32 #>  [1725,]   31 #>  [1726,]   32 #>  [1727,]   32 #>  [1728,]   32 #>  [1729,]   31 #>  [1730,]   32 #>  [1731,]   32 #>  [1732,]   32 #>  [1733,]   32 #>  [1734,]   31 #>  [1735,]   31 #>  [1736,]   31 #>  [1737,]   31 #>  [1738,]   32 #>  [1739,]   32 #>  [1740,]   32 #>  [1741,]   31 #>  [1742,]   31 #>  [1743,]   32 #>  [1744,]   31 #>  [1745,]   31 #>  [1746,]   32 #>  [1747,]   32 #>  [1748,]   32 #>  [1749,]   32 #>  [1750,]   31 #>  [1751,]   32 #>  [1752,]   32 #>  [1753,]   31 #>  [1754,]   31 #>  [1755,]   31 #>  [1756,]   31 #>  [1757,]   31 #>  [1758,]   32 #>  [1759,]   32 #>  [1760,]   31 #>  [1761,]   32 #>  [1762,]   31 #>  [1763,]   32 #>  [1764,]   31 #>  [1765,]   31 #>  [1766,]   32 #>  [1767,]   31 #>  [1768,]   32 #>  [1769,]   32 #>  [1770,]   32 #>  [1771,]   32 #>  [1772,]   31 #>  [1773,]   31 #>  [1774,]   31 #>  [1775,]   32 #>  [1776,]   31 #>  [1777,]   32 #>  [1778,]   32 #>  [1779,]   32 #>  [1780,]   31 #>  [1781,]   31 #>  [1782,]   31 #>  [1783,]   32 #>  [1784,]   31 #>  [1785,]   31 #>  [1786,]   31 #>  [1787,]   32 #>  [1788,]   31 #>  [1789,]   31 #>  [1790,]   32 #>  [1791,]   32 #>  [1792,]   32 #>  [1793,]   32 #>  [1794,]   31 #>  [1795,]   32 #>  [1796,]   32 #>  [1797,]   31 #>  [1798,]   31 #>  [1799,]   31 #>  [1800,]   32 #>  [1801,]   33 #>  [1802,]   34 #>  [1803,]   33 #>  [1804,]   33 #>  [1805,]   34 #>  [1806,]   33 #>  [1807,]   34 #>  [1808,]   33 #>  [1809,]   34 #>  [1810,]   34 #>  [1811,]   33 #>  [1812,]   34 #>  [1813,]   34 #>  [1814,]   33 #>  [1815,]   33 #>  [1816,]   33 #>  [1817,]   34 #>  [1818,]   34 #>  [1819,]   33 #>  [1820,]   34 #>  [1821,]   34 #>  [1822,]   34 #>  [1823,]   34 #>  [1824,]   34 #>  [1825,]   34 #>  [1826,]   33 #>  [1827,]   34 #>  [1828,]   33 #>  [1829,]   34 #>  [1830,]   34 #>  [1831,]   34 #>  [1832,]   34 #>  [1833,]   34 #>  [1834,]   33 #>  [1835,]   33 #>  [1836,]   34 #>  [1837,]   33 #>  [1838,]   33 #>  [1839,]   34 #>  [1840,]   34 #>  [1841,]   34 #>  [1842,]   33 #>  [1843,]   34 #>  [1844,]   34 #>  [1845,]   33 #>  [1846,]   33 #>  [1847,]   34 #>  [1848,]   34 #>  [1849,]   33 #>  [1850,]   34 #>  [1851,]   34 #>  [1852,]   33 #>  [1853,]   34 #>  [1854,]   34 #>  [1855,]   33 #>  [1856,]   33 #>  [1857,]   33 #>  [1858,]   34 #>  [1859,]   33 #>  [1860,]   34 #>  [1861,]   34 #>  [1862,]   33 #>  [1863,]   34 #>  [1864,]   33 #>  [1865,]   33 #>  [1866,]   34 #>  [1867,]   33 #>  [1868,]   33 #>  [1869,]   33 #>  [1870,]   34 #>  [1871,]   34 #>  [1872,]   33 #>  [1873,]   33 #>  [1874,]   34 #>  [1875,]   34 #>  [1876,]   34 #>  [1877,]   33 #>  [1878,]   34 #>  [1879,]   33 #>  [1880,]   34 #>  [1881,]   34 #>  [1882,]   33 #>  [1883,]   34 #>  [1884,]   34 #>  [1885,]   33 #>  [1886,]   34 #>  [1887,]   34 #>  [1888,]   34 #>  [1889,]   33 #>  [1890,]   34 #>  [1891,]   33 #>  [1892,]   34 #>  [1893,]   34 #>  [1894,]   33 #>  [1895,]   34 #>  [1896,]   33 #>  [1897,]   33 #>  [1898,]   33 #>  [1899,]   34 #>  [1900,]   33 #>  [1901,]   35 #>  [1902,]   36 #>  [1903,]   35 #>  [1904,]   35 #>  [1905,]   35 #>  [1906,]   35 #>  [1907,]   35 #>  [1908,]   35 #>  [1909,]   36 #>  [1910,]   36 #>  [1911,]   35 #>  [1912,]   36 #>  [1913,]   36 #>  [1914,]   35 #>  [1915,]   35 #>  [1916,]   35 #>  [1917,]   36 #>  [1918,]   35 #>  [1919,]   35 #>  [1920,]   35 #>  [1921,]   36 #>  [1922,]   35 #>  [1923,]   35 #>  [1924,]   36 #>  [1925,]   35 #>  [1926,]   35 #>  [1927,]   35 #>  [1928,]   35 #>  [1929,]   36 #>  [1930,]   35 #>  [1931,]   35 #>  [1932,]   36 #>  [1933,]   36 #>  [1934,]   35 #>  [1935,]   35 #>  [1936,]   35 #>  [1937,]   35 #>  [1938,]   35 #>  [1939,]   35 #>  [1940,]   36 #>  [1941,]   35 #>  [1942,]   35 #>  [1943,]   35 #>  [1944,]   35 #>  [1945,]   35 #>  [1946,]   35 #>  [1947,]   35 #>  [1948,]   35 #>  [1949,]   35 #>  [1950,]   35 #>  [1951,]   35 #>  [1952,]   35 #>  [1953,]   36 #>  [1954,]   35 #>  [1955,]   35 #>  [1956,]   35 #>  [1957,]   35 #>  [1958,]   35 #>  [1959,]   35 #>  [1960,]   36 #>  [1961,]   36 #>  [1962,]   35 #>  [1963,]   36 #>  [1964,]   35 #>  [1965,]   35 #>  [1966,]   35 #>  [1967,]   35 #>  [1968,]   35 #>  [1969,]   35 #>  [1970,]   36 #>  [1971,]   35 #>  [1972,]   35 #>  [1973,]   35 #>  [1974,]   35 #>  [1975,]   36 #>  [1976,]   35 #>  [1977,]   35 #>  [1978,]   35 #>  [1979,]   35 #>  [1980,]   36 #>  [1981,]   36 #>  [1982,]   35 #>  [1983,]   36 #>  [1984,]   35 #>  [1985,]   35 #>  [1986,]   36 #>  [1987,]   35 #>  [1988,]   35 #>  [1989,]   35 #>  [1990,]   35 #>  [1991,]   35 #>  [1992,]   35 #>  [1993,]   35 #>  [1994,]   35 #>  [1995,]   35 #>  [1996,]   35 #>  [1997,]   35 #>  [1998,]   35 #>  [1999,]   35 #>  [2000,]   35 #>  [2001,]   38 #>  [2002,]   38 #>  [2003,]   37 #>  [2004,]   38 #>  [2005,]   37 #>  [2006,]   37 #>  [2007,]   38 #>  [2008,]   38 #>  [2009,]   38 #>  [2010,]   38 #>  [2011,]   37 #>  [2012,]   37 #>  [2013,]   38 #>  [2014,]   37 #>  [2015,]   38 #>  [2016,]   38 #>  [2017,]   38 #>  [2018,]   38 #>  [2019,]   37 #>  [2020,]   37 #>  [2021,]   38 #>  [2022,]   37 #>  [2023,]   38 #>  [2024,]   37 #>  [2025,]   38 #>  [2026,]   37 #>  [2027,]   38 #>  [2028,]   38 #>  [2029,]   37 #>  [2030,]   37 #>  [2031,]   38 #>  [2032,]   37 #>  [2033,]   37 #>  [2034,]   37 #>  [2035,]   37 #>  [2036,]   37 #>  [2037,]   38 #>  [2038,]   38 #>  [2039,]   38 #>  [2040,]   37 #>  [2041,]   37 #>  [2042,]   37 #>  [2043,]   38 #>  [2044,]   38 #>  [2045,]   38 #>  [2046,]   38 #>  [2047,]   38 #>  [2048,]   37 #>  [2049,]   38 #>  [2050,]   38 #>  [2051,]   37 #>  [2052,]   37 #>  [2053,]   38 #>  [2054,]   37 #>  [2055,]   37 #>  [2056,]   38 #>  [2057,]   37 #>  [2058,]   37 #>  [2059,]   38 #>  [2060,]   37 #>  [2061,]   38 #>  [2062,]   37 #>  [2063,]   37 #>  [2064,]   38 #>  [2065,]   38 #>  [2066,]   37 #>  [2067,]   37 #>  [2068,]   37 #>  [2069,]   37 #>  [2070,]   38 #>  [2071,]   38 #>  [2072,]   38 #>  [2073,]   38 #>  [2074,]   38 #>  [2075,]   38 #>  [2076,]   38 #>  [2077,]   38 #>  [2078,]   37 #>  [2079,]   38 #>  [2080,]   37 #>  [2081,]   37 #>  [2082,]   38 #>  [2083,]   37 #>  [2084,]   38 #>  [2085,]   38 #>  [2086,]   38 #>  [2087,]   38 #>  [2088,]   38 #>  [2089,]   37 #>  [2090,]   38 #>  [2091,]   37 #>  [2092,]   38 #>  [2093,]   37 #>  [2094,]   38 #>  [2095,]   38 #>  [2096,]   38 #>  [2097,]   37 #>  [2098,]   37 #>  [2099,]   37 #>  [2100,]   38 #>  [2101,]   39 #>  [2102,]   40 #>  [2103,]   39 #>  [2104,]   39 #>  [2105,]   39 #>  [2106,]   39 #>  [2107,]   39 #>  [2108,]   39 #>  [2109,]   40 #>  [2110,]   40 #>  [2111,]   39 #>  [2112,]   40 #>  [2113,]   40 #>  [2114,]   39 #>  [2115,]   39 #>  [2116,]   39 #>  [2117,]   40 #>  [2118,]   39 #>  [2119,]   39 #>  [2120,]   39 #>  [2121,]   40 #>  [2122,]   39 #>  [2123,]   39 #>  [2124,]   39 #>  [2125,]   39 #>  [2126,]   39 #>  [2127,]   39 #>  [2128,]   39 #>  [2129,]   40 #>  [2130,]   39 #>  [2131,]   39 #>  [2132,]   40 #>  [2133,]   40 #>  [2134,]   39 #>  [2135,]   39 #>  [2136,]   39 #>  [2137,]   39 #>  [2138,]   39 #>  [2139,]   39 #>  [2140,]   40 #>  [2141,]   39 #>  [2142,]   39 #>  [2143,]   39 #>  [2144,]   39 #>  [2145,]   39 #>  [2146,]   39 #>  [2147,]   39 #>  [2148,]   39 #>  [2149,]   39 #>  [2150,]   39 #>  [2151,]   39 #>  [2152,]   39 #>  [2153,]   40 #>  [2154,]   39 #>  [2155,]   39 #>  [2156,]   39 #>  [2157,]   39 #>  [2158,]   39 #>  [2159,]   39 #>  [2160,]   40 #>  [2161,]   39 #>  [2162,]   39 #>  [2163,]   40 #>  [2164,]   39 #>  [2165,]   39 #>  [2166,]   39 #>  [2167,]   39 #>  [2168,]   39 #>  [2169,]   39 #>  [2170,]   40 #>  [2171,]   39 #>  [2172,]   39 #>  [2173,]   39 #>  [2174,]   39 #>  [2175,]   40 #>  [2176,]   39 #>  [2177,]   39 #>  [2178,]   39 #>  [2179,]   39 #>  [2180,]   40 #>  [2181,]   40 #>  [2182,]   39 #>  [2183,]   39 #>  [2184,]   39 #>  [2185,]   39 #>  [2186,]   40 #>  [2187,]   39 #>  [2188,]   39 #>  [2189,]   39 #>  [2190,]   39 #>  [2191,]   39 #>  [2192,]   39 #>  [2193,]   39 #>  [2194,]   39 #>  [2195,]   39 #>  [2196,]   39 #>  [2197,]   39 #>  [2198,]   39 #>  [2199,]   39 #>  [2200,]   39 #>  [2201,]   41 #>  [2202,]   42 #>  [2203,]   41 #>  [2204,]   41 #>  [2205,]   41 #>  [2206,]   41 #>  [2207,]   41 #>  [2208,]   41 #>  [2209,]   42 #>  [2210,]   42 #>  [2211,]   41 #>  [2212,]   42 #>  [2213,]   42 #>  [2214,]   41 #>  [2215,]   41 #>  [2216,]   41 #>  [2217,]   42 #>  [2218,]   42 #>  [2219,]   41 #>  [2220,]   42 #>  [2221,]   42 #>  [2222,]   41 #>  [2223,]   42 #>  [2224,]   42 #>  [2225,]   41 #>  [2226,]   41 #>  [2227,]   42 #>  [2228,]   41 #>  [2229,]   42 #>  [2230,]   41 #>  [2231,]   42 #>  [2232,]   42 #>  [2233,]   42 #>  [2234,]   41 #>  [2235,]   41 #>  [2236,]   42 #>  [2237,]   41 #>  [2238,]   41 #>  [2239,]   41 #>  [2240,]   42 #>  [2241,]   41 #>  [2242,]   41 #>  [2243,]   41 #>  [2244,]   41 #>  [2245,]   41 #>  [2246,]   41 #>  [2247,]   41 #>  [2248,]   41 #>  [2249,]   41 #>  [2250,]   41 #>  [2251,]   41 #>  [2252,]   41 #>  [2253,]   42 #>  [2254,]   41 #>  [2255,]   41 #>  [2256,]   41 #>  [2257,]   41 #>  [2258,]   41 #>  [2259,]   41 #>  [2260,]   42 #>  [2261,]   42 #>  [2262,]   41 #>  [2263,]   42 #>  [2264,]   41 #>  [2265,]   41 #>  [2266,]   41 #>  [2267,]   41 #>  [2268,]   41 #>  [2269,]   41 #>  [2270,]   42 #>  [2271,]   41 #>  [2272,]   41 #>  [2273,]   41 #>  [2274,]   41 #>  [2275,]   42 #>  [2276,]   41 #>  [2277,]   41 #>  [2278,]   41 #>  [2279,]   41 #>  [2280,]   42 #>  [2281,]   42 #>  [2282,]   41 #>  [2283,]   42 #>  [2284,]   42 #>  [2285,]   41 #>  [2286,]   42 #>  [2287,]   41 #>  [2288,]   42 #>  [2289,]   41 #>  [2290,]   41 #>  [2291,]   41 #>  [2292,]   41 #>  [2293,]   41 #>  [2294,]   41 #>  [2295,]   41 #>  [2296,]   41 #>  [2297,]   41 #>  [2298,]   41 #>  [2299,]   41 #>  [2300,]   41 #>  [2301,]   44 #>  [2302,]   43 #>  [2303,]   43 #>  [2304,]   44 #>  [2305,]   44 #>  [2306,]   43 #>  [2307,]   43 #>  [2308,]   43 #>  [2309,]   43 #>  [2310,]   44 #>  [2311,]   44 #>  [2312,]   44 #>  [2313,]   44 #>  [2314,]   44 #>  [2315,]   44 #>  [2316,]   44 #>  [2317,]   44 #>  [2318,]   44 #>  [2319,]   44 #>  [2320,]   43 #>  [2321,]   43 #>  [2322,]   44 #>  [2323,]   43 #>  [2324,]   44 #>  [2325,]   43 #>  [2326,]   44 #>  [2327,]   44 #>  [2328,]   44 #>  [2329,]   43 #>  [2330,]   44 #>  [2331,]   44 #>  [2332,]   44 #>  [2333,]   44 #>  [2334,]   43 #>  [2335,]   43 #>  [2336,]   43 #>  [2337,]   43 #>  [2338,]   44 #>  [2339,]   44 #>  [2340,]   44 #>  [2341,]   43 #>  [2342,]   43 #>  [2343,]   44 #>  [2344,]   43 #>  [2345,]   43 #>  [2346,]   44 #>  [2347,]   44 #>  [2348,]   44 #>  [2349,]   44 #>  [2350,]   43 #>  [2351,]   44 #>  [2352,]   44 #>  [2353,]   43 #>  [2354,]   43 #>  [2355,]   43 #>  [2356,]   43 #>  [2357,]   43 #>  [2358,]   44 #>  [2359,]   44 #>  [2360,]   43 #>  [2361,]   44 #>  [2362,]   44 #>  [2363,]   44 #>  [2364,]   43 #>  [2365,]   43 #>  [2366,]   44 #>  [2367,]   43 #>  [2368,]   44 #>  [2369,]   44 #>  [2370,]   44 #>  [2371,]   44 #>  [2372,]   44 #>  [2373,]   43 #>  [2374,]   43 #>  [2375,]   44 #>  [2376,]   43 #>  [2377,]   44 #>  [2378,]   44 #>  [2379,]   44 #>  [2380,]   43 #>  [2381,]   43 #>  [2382,]   43 #>  [2383,]   44 #>  [2384,]   43 #>  [2385,]   43 #>  [2386,]   43 #>  [2387,]   44 #>  [2388,]   43 #>  [2389,]   43 #>  [2390,]   44 #>  [2391,]   44 #>  [2392,]   44 #>  [2393,]   44 #>  [2394,]   43 #>  [2395,]   44 #>  [2396,]   44 #>  [2397,]   43 #>  [2398,]   43 #>  [2399,]   43 #>  [2400,]   44 #>  [2401,]   46 #>  [2402,]   45 #>  [2403,]   45 #>  [2404,]   46 #>  [2405,]   46 #>  [2406,]   46 #>  [2407,]   45 #>  [2408,]   46 #>  [2409,]   46 #>  [2410,]   46 #>  [2411,]   46 #>  [2412,]   46 #>  [2413,]   45 #>  [2414,]   46 #>  [2415,]   46 #>  [2416,]   45 #>  [2417,]   46 #>  [2418,]   45 #>  [2419,]   45 #>  [2420,]   46 #>  [2421,]   45 #>  [2422,]   45 #>  [2423,]   45 #>  [2424,]   45 #>  [2425,]   46 #>  [2426,]   46 #>  [2427,]   46 #>  [2428,]   46 #>  [2429,]   46 #>  [2430,]   45 #>  [2431,]   45 #>  [2432,]   45 #>  [2433,]   46 #>  [2434,]   45 #>  [2435,]   45 #>  [2436,]   45 #>  [2437,]   45 #>  [2438,]   46 #>  [2439,]   45 #>  [2440,]   45 #>  [2441,]   46 #>  [2442,]   46 #>  [2443,]   46 #>  [2444,]   45 #>  [2445,]   46 #>  [2446,]   46 #>  [2447,]   45 #>  [2448,]   46 #>  [2449,]   45 #>  [2450,]   46 #>  [2451,]   46 #>  [2452,]   46 #>  [2453,]   46 #>  [2454,]   45 #>  [2455,]   46 #>  [2456,]   46 #>  [2457,]   46 #>  [2458,]   46 #>  [2459,]   45 #>  [2460,]   46 #>  [2461,]   46 #>  [2462,]   45 #>  [2463,]   46 #>  [2464,]   46 #>  [2465,]   46 #>  [2466,]   46 #>  [2467,]   46 #>  [2468,]   46 #>  [2469,]   46 #>  [2470,]   45 #>  [2471,]   46 #>  [2472,]   46 #>  [2473,]   46 #>  [2474,]   46 #>  [2475,]   46 #>  [2476,]   46 #>  [2477,]   45 #>  [2478,]   46 #>  [2479,]   45 #>  [2480,]   45 #>  [2481,]   46 #>  [2482,]   46 #>  [2483,]   45 #>  [2484,]   46 #>  [2485,]   46 #>  [2486,]   45 #>  [2487,]   46 #>  [2488,]   46 #>  [2489,]   46 #>  [2490,]   46 #>  [2491,]   46 #>  [2492,]   46 #>  [2493,]   45 #>  [2494,]   46 #>  [2495,]   45 #>  [2496,]   46 #>  [2497,]   46 #>  [2498,]   45 #>  [2499,]   46 #>  [2500,]   45 #>  [2501,]   48 #>  [2502,]   48 #>  [2503,]   47 #>  [2504,]   48 #>  [2505,]   48 #>  [2506,]   48 #>  [2507,]   47 #>  [2508,]   47 #>  [2509,]   48 #>  [2510,]   48 #>  [2511,]   48 #>  [2512,]   48 #>  [2513,]   47 #>  [2514,]   48 #>  [2515,]   48 #>  [2516,]   47 #>  [2517,]   48 #>  [2518,]   48 #>  [2519,]   48 #>  [2520,]   47 #>  [2521,]   48 #>  [2522,]   47 #>  [2523,]   48 #>  [2524,]   47 #>  [2525,]   47 #>  [2526,]   48 #>  [2527,]   48 #>  [2528,]   48 #>  [2529,]   48 #>  [2530,]   48 #>  [2531,]   48 #>  [2532,]   48 #>  [2533,]   48 #>  [2534,]   48 #>  [2535,]   48 #>  [2536,]   48 #>  [2537,]   48 #>  [2538,]   48 #>  [2539,]   47 #>  [2540,]   47 #>  [2541,]   48 #>  [2542,]   48 #>  [2543,]   48 #>  [2544,]   47 #>  [2545,]   48 #>  [2546,]   47 #>  [2547,]   48 #>  [2548,]   48 #>  [2549,]   47 #>  [2550,]   47 #>  [2551,]   48 #>  [2552,]   48 #>  [2553,]   47 #>  [2554,]   48 #>  [2555,]   47 #>  [2556,]   47 #>  [2557,]   48 #>  [2558,]   48 #>  [2559,]   47 #>  [2560,]   48 #>  [2561,]   48 #>  [2562,]   48 #>  [2563,]   47 #>  [2564,]   48 #>  [2565,]   47 #>  [2566,]   47 #>  [2567,]   48 #>  [2568,]   48 #>  [2569,]   48 #>  [2570,]   47 #>  [2571,]   48 #>  [2572,]   47 #>  [2573,]   48 #>  [2574,]   48 #>  [2575,]   48 #>  [2576,]   48 #>  [2577,]   48 #>  [2578,]   48 #>  [2579,]   48 #>  [2580,]   48 #>  [2581,]   48 #>  [2582,]   48 #>  [2583,]   48 #>  [2584,]   47 #>  [2585,]   48 #>  [2586,]   47 #>  [2587,]   48 #>  [2588,]   48 #>  [2589,]   47 #>  [2590,]   47 #>  [2591,]   48 #>  [2592,]   48 #>  [2593,]   48 #>  [2594,]   48 #>  [2595,]   48 #>  [2596,]   48 #>  [2597,]   48 #>  [2598,]   47 #>  [2599,]   48 #>  [2600,]   47 #>  [2601,]   50 #>  [2602,]   49 #>  [2603,]   49 #>  [2604,]   49 #>  [2605,]   50 #>  [2606,]   49 #>  [2607,]   49 #>  [2608,]   49 #>  [2609,]   50 #>  [2610,]   49 #>  [2611,]   50 #>  [2612,]   49 #>  [2613,]   50 #>  [2614,]   49 #>  [2615,]   49 #>  [2616,]   49 #>  [2617,]   50 #>  [2618,]   50 #>  [2619,]   50 #>  [2620,]   50 #>  [2621,]   50 #>  [2622,]   50 #>  [2623,]   49 #>  [2624,]   50 #>  [2625,]   49 #>  [2626,]   49 #>  [2627,]   50 #>  [2628,]   50 #>  [2629,]   50 #>  [2630,]   49 #>  [2631,]   49 #>  [2632,]   49 #>  [2633,]   50 #>  [2634,]   49 #>  [2635,]   49 #>  [2636,]   50 #>  [2637,]   49 #>  [2638,]   50 #>  [2639,]   50 #>  [2640,]   49 #>  [2641,]   50 #>  [2642,]   50 #>  [2643,]   49 #>  [2644,]   49 #>  [2645,]   49 #>  [2646,]   49 #>  [2647,]   49 #>  [2648,]   49 #>  [2649,]   49 #>  [2650,]   50 #>  [2651,]   50 #>  [2652,]   49 #>  [2653,]   50 #>  [2654,]   50 #>  [2655,]   49 #>  [2656,]   50 #>  [2657,]   49 #>  [2658,]   50 #>  [2659,]   49 #>  [2660,]   49 #>  [2661,]   50 #>  [2662,]   50 #>  [2663,]   49 #>  [2664,]   50 #>  [2665,]   50 #>  [2666,]   50 #>  [2667,]   49 #>  [2668,]   49 #>  [2669,]   49 #>  [2670,]   50 #>  [2671,]   49 #>  [2672,]   49 #>  [2673,]   50 #>  [2674,]   49 #>  [2675,]   49 #>  [2676,]   49 #>  [2677,]   50 #>  [2678,]   49 #>  [2679,]   50 #>  [2680,]   49 #>  [2681,]   50 #>  [2682,]   50 #>  [2683,]   50 #>  [2684,]   50 #>  [2685,]   50 #>  [2686,]   49 #>  [2687,]   50 #>  [2688,]   49 #>  [2689,]   50 #>  [2690,]   50 #>  [2691,]   50 #>  [2692,]   49 #>  [2693,]   50 #>  [2694,]   50 #>  [2695,]   49 #>  [2696,]   49 #>  [2697,]   49 #>  [2698,]   49 #>  [2699,]   50 #>  [2700,]   50 #>  [2701,]   51 #>  [2702,]   51 #>  [2703,]   51 #>  [2704,]   52 #>  [2705,]   51 #>  [2706,]   51 #>  [2707,]   51 #>  [2708,]   51 #>  [2709,]   51 #>  [2710,]   51 #>  [2711,]   52 #>  [2712,]   52 #>  [2713,]   51 #>  [2714,]   52 #>  [2715,]   52 #>  [2716,]   51 #>  [2717,]   51 #>  [2718,]   51 #>  [2719,]   52 #>  [2720,]   51 #>  [2721,]   52 #>  [2722,]   51 #>  [2723,]   51 #>  [2724,]   51 #>  [2725,]   51 #>  [2726,]   51 #>  [2727,]   52 #>  [2728,]   51 #>  [2729,]   51 #>  [2730,]   51 #>  [2731,]   51 #>  [2732,]   51 #>  [2733,]   51 #>  [2734,]   51 #>  [2735,]   51 #>  [2736,]   51 #>  [2737,]   51 #>  [2738,]   52 #>  [2739,]   51 #>  [2740,]   51 #>  [2741,]   52 #>  [2742,]   52 #>  [2743,]   51 #>  [2744,]   51 #>  [2745,]   51 #>  [2746,]   51 #>  [2747,]   51 #>  [2748,]   52 #>  [2749,]   51 #>  [2750,]   51 #>  [2751,]   51 #>  [2752,]   51 #>  [2753,]   51 #>  [2754,]   51 #>  [2755,]   51 #>  [2756,]   51 #>  [2757,]   51 #>  [2758,]   51 #>  [2759,]   51 #>  [2760,]   51 #>  [2761,]   52 #>  [2762,]   51 #>  [2763,]   51 #>  [2764,]   51 #>  [2765,]   51 #>  [2766,]   51 #>  [2767,]   51 #>  [2768,]   52 #>  [2769,]   52 #>  [2770,]   51 #>  [2771,]   51 #>  [2772,]   51 #>  [2773,]   51 #>  [2774,]   52 #>  [2775,]   52 #>  [2776,]   51 #>  [2777,]   51 #>  [2778,]   51 #>  [2779,]   51 #>  [2780,]   51 #>  [2781,]   51 #>  [2782,]   52 #>  [2783,]   51 #>  [2784,]   51 #>  [2785,]   51 #>  [2786,]   51 #>  [2787,]   51 #>  [2788,]   51 #>  [2789,]   51 #>  [2790,]   51 #>  [2791,]   51 #>  [2792,]   52 #>  [2793,]   52 #>  [2794,]   51 #>  [2795,]   51 #>  [2796,]   52 #>  [2797,]   52 #>  [2798,]   51 #>  [2799,]   51 #>  [2800,]   51 #>  [2801,]   53 #>  [2802,]   53 #>  [2803,]   54 #>  [2804,]   53 #>  [2805,]   53 #>  [2806,]   54 #>  [2807,]   53 #>  [2808,]   53 #>  [2809,]   53 #>  [2810,]   53 #>  [2811,]   53 #>  [2812,]   53 #>  [2813,]   53 #>  [2814,]   53 #>  [2815,]   53 #>  [2816,]   53 #>  [2817,]   53 #>  [2818,]   53 #>  [2819,]   54 #>  [2820,]   53 #>  [2821,]   53 #>  [2822,]   53 #>  [2823,]   53 #>  [2824,]   53 #>  [2825,]   54 #>  [2826,]   53 #>  [2827,]   53 #>  [2828,]   53 #>  [2829,]   53 #>  [2830,]   53 #>  [2831,]   53 #>  [2832,]   53 #>  [2833,]   54 #>  [2834,]   54 #>  [2835,]   53 #>  [2836,]   53 #>  [2837,]   53 #>  [2838,]   53 #>  [2839,]   53 #>  [2840,]   53 #>  [2841,]   53 #>  [2842,]   53 #>  [2843,]   53 #>  [2844,]   53 #>  [2845,]   53 #>  [2846,]   53 #>  [2847,]   53 #>  [2848,]   53 #>  [2849,]   53 #>  [2850,]   53 #>  [2851,]   53 #>  [2852,]   53 #>  [2853,]   53 #>  [2854,]   53 #>  [2855,]   53 #>  [2856,]   53 #>  [2857,]   53 #>  [2858,]   53 #>  [2859,]   53 #>  [2860,]   54 #>  [2861,]   53 #>  [2862,]   53 #>  [2863,]   53 #>  [2864,]   53 #>  [2865,]   54 #>  [2866,]   53 #>  [2867,]   53 #>  [2868,]   53 #>  [2869,]   53 #>  [2870,]   54 #>  [2871,]   53 #>  [2872,]   53 #>  [2873,]   54 #>  [2874,]   53 #>  [2875,]   53 #>  [2876,]   53 #>  [2877,]   53 #>  [2878,]   53 #>  [2879,]   53 #>  [2880,]   53 #>  [2881,]   53 #>  [2882,]   53 #>  [2883,]   53 #>  [2884,]   53 #>  [2885,]   53 #>  [2886,]   53 #>  [2887,]   53 #>  [2888,]   53 #>  [2889,]   53 #>  [2890,]   53 #>  [2891,]   53 #>  [2892,]   53 #>  [2893,]   54 #>  [2894,]   53 #>  [2895,]   53 #>  [2896,]   53 #>  [2897,]   53 #>  [2898,]   54 #>  [2899,]   53 #>  [2900,]   53 #>  [2901,]   55 #>  [2902,]   55 #>  [2903,]   55 #>  [2904,]   55 #>  [2905,]   55 #>  [2906,]   55 #>  [2907,]   55 #>  [2908,]   55 #>  [2909,]   55 #>  [2910,]   55 #>  [2911,]   55 #>  [2912,]   55 #>  [2913,]   55 #>  [2914,]   55 #>  [2915,]   55 #>  [2916,]   55 #>  [2917,]   55 #>  [2918,]   55 #>  [2919,]   56 #>  [2920,]   56 #>  [2921,]   55 #>  [2922,]   56 #>  [2923,]   55 #>  [2924,]   55 #>  [2925,]   55 #>  [2926,]   55 #>  [2927,]   56 #>  [2928,]   55 #>  [2929,]   56 #>  [2930,]   55 #>  [2931,]   55 #>  [2932,]   55 #>  [2933,]   55 #>  [2934,]   55 #>  [2935,]   55 #>  [2936,]   56 #>  [2937,]   55 #>  [2938,]   55 #>  [2939,]   55 #>  [2940,]   55 #>  [2941,]   55 #>  [2942,]   55 #>  [2943,]   55 #>  [2944,]   55 #>  [2945,]   55 #>  [2946,]   55 #>  [2947,]   55 #>  [2948,]   55 #>  [2949,]   55 #>  [2950,]   55 #>  [2951,]   55 #>  [2952,]   55 #>  [2953,]   55 #>  [2954,]   55 #>  [2955,]   55 #>  [2956,]   55 #>  [2957,]   55 #>  [2958,]   56 #>  [2959,]   55 #>  [2960,]   55 #>  [2961,]   55 #>  [2962,]   55 #>  [2963,]   55 #>  [2964,]   56 #>  [2965,]   55 #>  [2966,]   56 #>  [2967,]   55 #>  [2968,]   55 #>  [2969,]   55 #>  [2970,]   55 #>  [2971,]   55 #>  [2972,]   55 #>  [2973,]   55 #>  [2974,]   55 #>  [2975,]   55 #>  [2976,]   55 #>  [2977,]   56 #>  [2978,]   55 #>  [2979,]   55 #>  [2980,]   55 #>  [2981,]   56 #>  [2982,]   55 #>  [2983,]   55 #>  [2984,]   55 #>  [2985,]   55 #>  [2986,]   55 #>  [2987,]   56 #>  [2988,]   55 #>  [2989,]   55 #>  [2990,]   55 #>  [2991,]   55 #>  [2992,]   55 #>  [2993,]   55 #>  [2994,]   55 #>  [2995,]   55 #>  [2996,]   55 #>  [2997,]   56 #>  [2998,]   55 #>  [2999,]   55 #>  [3000,]   56 #>  [3001,]   58 #>  [3002,]   58 #>  [3003,]   57 #>  [3004,]   58 #>  [3005,]   58 #>  [3006,]   58 #>  [3007,]   57 #>  [3008,]   57 #>  [3009,]   58 #>  [3010,]   58 #>  [3011,]   58 #>  [3012,]   58 #>  [3013,]   58 #>  [3014,]   58 #>  [3015,]   58 #>  [3016,]   58 #>  [3017,]   58 #>  [3018,]   58 #>  [3019,]   58 #>  [3020,]   57 #>  [3021,]   58 #>  [3022,]   58 #>  [3023,]   58 #>  [3024,]   58 #>  [3025,]   57 #>  [3026,]   58 #>  [3027,]   58 #>  [3028,]   58 #>  [3029,]   58 #>  [3030,]   58 #>  [3031,]   58 #>  [3032,]   58 #>  [3033,]   58 #>  [3034,]   58 #>  [3035,]   58 #>  [3036,]   58 #>  [3037,]   58 #>  [3038,]   58 #>  [3039,]   57 #>  [3040,]   58 #>  [3041,]   58 #>  [3042,]   58 #>  [3043,]   58 #>  [3044,]   57 #>  [3045,]   58 #>  [3046,]   57 #>  [3047,]   58 #>  [3048,]   58 #>  [3049,]   57 #>  [3050,]   57 #>  [3051,]   58 #>  [3052,]   58 #>  [3053,]   57 #>  [3054,]   58 #>  [3055,]   57 #>  [3056,]   57 #>  [3057,]   58 #>  [3058,]   58 #>  [3059,]   57 #>  [3060,]   58 #>  [3061,]   58 #>  [3062,]   58 #>  [3063,]   58 #>  [3064,]   58 #>  [3065,]   57 #>  [3066,]   57 #>  [3067,]   58 #>  [3068,]   58 #>  [3069,]   58 #>  [3070,]   57 #>  [3071,]   58 #>  [3072,]   57 #>  [3073,]   58 #>  [3074,]   58 #>  [3075,]   58 #>  [3076,]   58 #>  [3077,]   58 #>  [3078,]   58 #>  [3079,]   58 #>  [3080,]   58 #>  [3081,]   58 #>  [3082,]   58 #>  [3083,]   58 #>  [3084,]   57 #>  [3085,]   58 #>  [3086,]   57 #>  [3087,]   58 #>  [3088,]   58 #>  [3089,]   58 #>  [3090,]   57 #>  [3091,]   58 #>  [3092,]   58 #>  [3093,]   58 #>  [3094,]   58 #>  [3095,]   58 #>  [3096,]   58 #>  [3097,]   58 #>  [3098,]   57 #>  [3099,]   58 #>  [3100,]   57 #>  [3101,]   60 #>  [3102,]   60 #>  [3103,]   59 #>  [3104,]   59 #>  [3105,]   60 #>  [3106,]   60 #>  [3107,]   59 #>  [3108,]   59 #>  [3109,]   60 #>  [3110,]   60 #>  [3111,]   60 #>  [3112,]   59 #>  [3113,]   60 #>  [3114,]   60 #>  [3115,]   60 #>  [3116,]   60 #>  [3117,]   60 #>  [3118,]   60 #>  [3119,]   60 #>  [3120,]   60 #>  [3121,]   60 #>  [3122,]   60 #>  [3123,]   60 #>  [3124,]   60 #>  [3125,]   59 #>  [3126,]   60 #>  [3127,]   60 #>  [3128,]   60 #>  [3129,]   60 #>  [3130,]   60 #>  [3131,]   59 #>  [3132,]   60 #>  [3133,]   60 #>  [3134,]   60 #>  [3135,]   60 #>  [3136,]   60 #>  [3137,]   60 #>  [3138,]   60 #>  [3139,]   60 #>  [3140,]   60 #>  [3141,]   60 #>  [3142,]   60 #>  [3143,]   60 #>  [3144,]   60 #>  [3145,]   60 #>  [3146,]   60 #>  [3147,]   60 #>  [3148,]   60 #>  [3149,]   60 #>  [3150,]   60 #>  [3151,]   60 #>  [3152,]   59 #>  [3153,]   60 #>  [3154,]   60 #>  [3155,]   60 #>  [3156,]   60 #>  [3157,]   60 #>  [3158,]   60 #>  [3159,]   59 #>  [3160,]   59 #>  [3161,]   60 #>  [3162,]   60 #>  [3163,]   60 #>  [3164,]   60 #>  [3165,]   60 #>  [3166,]   60 #>  [3167,]   60 #>  [3168,]   60 #>  [3169,]   60 #>  [3170,]   60 #>  [3171,]   60 #>  [3172,]   60 #>  [3173,]   60 #>  [3174,]   60 #>  [3175,]   60 #>  [3176,]   60 #>  [3177,]   60 #>  [3178,]   60 #>  [3179,]   60 #>  [3180,]   60 #>  [3181,]   60 #>  [3182,]   60 #>  [3183,]   60 #>  [3184,]   60 #>  [3185,]   60 #>  [3186,]   60 #>  [3187,]   60 #>  [3188,]   60 #>  [3189,]   60 #>  [3190,]   60 #>  [3191,]   60 #>  [3192,]   60 #>  [3193,]   60 #>  [3194,]   60 #>  [3195,]   60 #>  [3196,]   59 #>  [3197,]   59 #>  [3198,]   60 #>  [3199,]   60 #>  [3200,]   60 #>  [3201,]   62 #>  [3202,]   62 #>  [3203,]   62 #>  [3204,]   62 #>  [3205,]   62 #>  [3206,]   62 #>  [3207,]   62 #>  [3208,]   62 #>  [3209,]   62 #>  [3210,]   62 #>  [3211,]   62 #>  [3212,]   61 #>  [3213,]   62 #>  [3214,]   62 #>  [3215,]   61 #>  [3216,]   62 #>  [3217,]   61 #>  [3218,]   62 #>  [3219,]   62 #>  [3220,]   62 #>  [3221,]   62 #>  [3222,]   62 #>  [3223,]   61 #>  [3224,]   62 #>  [3225,]   62 #>  [3226,]   62 #>  [3227,]   62 #>  [3228,]   62 #>  [3229,]   61 #>  [3230,]   62 #>  [3231,]   61 #>  [3232,]   62 #>  [3233,]   62 #>  [3234,]   61 #>  [3235,]   62 #>  [3236,]   62 #>  [3237,]   61 #>  [3238,]   62 #>  [3239,]   62 #>  [3240,]   62 #>  [3241,]   62 #>  [3242,]   61 #>  [3243,]   61 #>  [3244,]   61 #>  [3245,]   62 #>  [3246,]   62 #>  [3247,]   62 #>  [3248,]   61 #>  [3249,]   62 #>  [3250,]   62 #>  [3251,]   62 #>  [3252,]   62 #>  [3253,]   62 #>  [3254,]   62 #>  [3255,]   62 #>  [3256,]   62 #>  [3257,]   62 #>  [3258,]   62 #>  [3259,]   62 #>  [3260,]   62 #>  [3261,]   62 #>  [3262,]   62 #>  [3263,]   61 #>  [3264,]   61 #>  [3265,]   62 #>  [3266,]   62 #>  [3267,]   62 #>  [3268,]   62 #>  [3269,]   62 #>  [3270,]   61 #>  [3271,]   62 #>  [3272,]   62 #>  [3273,]   62 #>  [3274,]   62 #>  [3275,]   61 #>  [3276,]   62 #>  [3277,]   62 #>  [3278,]   61 #>  [3279,]   61 #>  [3280,]   62 #>  [3281,]   61 #>  [3282,]   62 #>  [3283,]   62 #>  [3284,]   62 #>  [3285,]   62 #>  [3286,]   62 #>  [3287,]   62 #>  [3288,]   62 #>  [3289,]   62 #>  [3290,]   62 #>  [3291,]   62 #>  [3292,]   62 #>  [3293,]   62 #>  [3294,]   61 #>  [3295,]   61 #>  [3296,]   62 #>  [3297,]   62 #>  [3298,]   62 #>  [3299,]   62 #>  [3300,]   61 #>  [3301,]   64 #>  [3302,]   64 #>  [3303,]   63 #>  [3304,]   64 #>  [3305,]   63 #>  [3306,]   63 #>  [3307,]   64 #>  [3308,]   64 #>  [3309,]   64 #>  [3310,]   64 #>  [3311,]   63 #>  [3312,]   63 #>  [3313,]   64 #>  [3314,]   63 #>  [3315,]   64 #>  [3316,]   64 #>  [3317,]   64 #>  [3318,]   64 #>  [3319,]   63 #>  [3320,]   63 #>  [3321,]   64 #>  [3322,]   63 #>  [3323,]   64 #>  [3324,]   63 #>  [3325,]   64 #>  [3326,]   63 #>  [3327,]   64 #>  [3328,]   64 #>  [3329,]   63 #>  [3330,]   63 #>  [3331,]   64 #>  [3332,]   63 #>  [3333,]   63 #>  [3334,]   63 #>  [3335,]   63 #>  [3336,]   63 #>  [3337,]   64 #>  [3338,]   64 #>  [3339,]   64 #>  [3340,]   63 #>  [3341,]   63 #>  [3342,]   63 #>  [3343,]   64 #>  [3344,]   64 #>  [3345,]   64 #>  [3346,]   64 #>  [3347,]   64 #>  [3348,]   63 #>  [3349,]   64 #>  [3350,]   64 #>  [3351,]   63 #>  [3352,]   63 #>  [3353,]   64 #>  [3354,]   63 #>  [3355,]   63 #>  [3356,]   64 #>  [3357,]   63 #>  [3358,]   63 #>  [3359,]   64 #>  [3360,]   63 #>  [3361,]   64 #>  [3362,]   63 #>  [3363,]   63 #>  [3364,]   64 #>  [3365,]   64 #>  [3366,]   63 #>  [3367,]   63 #>  [3368,]   63 #>  [3369,]   63 #>  [3370,]   64 #>  [3371,]   64 #>  [3372,]   64 #>  [3373,]   64 #>  [3374,]   64 #>  [3375,]   64 #>  [3376,]   64 #>  [3377,]   64 #>  [3378,]   63 #>  [3379,]   64 #>  [3380,]   63 #>  [3381,]   63 #>  [3382,]   64 #>  [3383,]   63 #>  [3384,]   64 #>  [3385,]   64 #>  [3386,]   64 #>  [3387,]   64 #>  [3388,]   64 #>  [3389,]   63 #>  [3390,]   64 #>  [3391,]   63 #>  [3392,]   64 #>  [3393,]   63 #>  [3394,]   64 #>  [3395,]   64 #>  [3396,]   64 #>  [3397,]   64 #>  [3398,]   63 #>  [3399,]   63 #>  [3400,]   64 #>  [3401,]   65 #>  [3402,]   65 #>  [3403,]   66 #>  [3404,]   65 #>  [3405,]   65 #>  [3406,]   66 #>  [3407,]   65 #>  [3408,]   65 #>  [3409,]   65 #>  [3410,]   65 #>  [3411,]   65 #>  [3412,]   66 #>  [3413,]   65 #>  [3414,]   65 #>  [3415,]   65 #>  [3416,]   65 #>  [3417,]   65 #>  [3418,]   65 #>  [3419,]   66 #>  [3420,]   65 #>  [3421,]   65 #>  [3422,]   65 #>  [3423,]   65 #>  [3424,]   65 #>  [3425,]   66 #>  [3426,]   65 #>  [3427,]   65 #>  [3428,]   66 #>  [3429,]   65 #>  [3430,]   65 #>  [3431,]   65 #>  [3432,]   65 #>  [3433,]   66 #>  [3434,]   66 #>  [3435,]   65 #>  [3436,]   65 #>  [3437,]   65 #>  [3438,]   65 #>  [3439,]   65 #>  [3440,]   65 #>  [3441,]   65 #>  [3442,]   65 #>  [3443,]   65 #>  [3444,]   65 #>  [3445,]   65 #>  [3446,]   65 #>  [3447,]   65 #>  [3448,]   65 #>  [3449,]   65 #>  [3450,]   65 #>  [3451,]   65 #>  [3452,]   65 #>  [3453,]   65 #>  [3454,]   65 #>  [3455,]   65 #>  [3456,]   65 #>  [3457,]   65 #>  [3458,]   65 #>  [3459,]   65 #>  [3460,]   66 #>  [3461,]   65 #>  [3462,]   65 #>  [3463,]   65 #>  [3464,]   65 #>  [3465,]   66 #>  [3466,]   65 #>  [3467,]   65 #>  [3468,]   65 #>  [3469,]   65 #>  [3470,]   66 #>  [3471,]   65 #>  [3472,]   65 #>  [3473,]   66 #>  [3474,]   65 #>  [3475,]   65 #>  [3476,]   65 #>  [3477,]   65 #>  [3478,]   65 #>  [3479,]   65 #>  [3480,]   65 #>  [3481,]   65 #>  [3482,]   65 #>  [3483,]   65 #>  [3484,]   65 #>  [3485,]   65 #>  [3486,]   65 #>  [3487,]   65 #>  [3488,]   65 #>  [3489,]   65 #>  [3490,]   65 #>  [3491,]   65 #>  [3492,]   65 #>  [3493,]   66 #>  [3494,]   65 #>  [3495,]   65 #>  [3496,]   65 #>  [3497,]   66 #>  [3498,]   66 #>  [3499,]   65 #>  [3500,]   65 #>  [3501,]   67 #>  [3502,]   67 #>  [3503,]   67 #>  [3504,]   67 #>  [3505,]   67 #>  [3506,]   67 #>  [3507,]   67 #>  [3508,]   67 #>  [3509,]   67 #>  [3510,]   67 #>  [3511,]   67 #>  [3512,]   67 #>  [3513,]   67 #>  [3514,]   67 #>  [3515,]   67 #>  [3516,]   67 #>  [3517,]   67 #>  [3518,]   67 #>  [3519,]   67 #>  [3520,]   67 #>  [3521,]   67 #>  [3522,]   67 #>  [3523,]   67 #>  [3524,]   67 #>  [3525,]   67 #>  [3526,]   67 #>  [3527,]   67 #>  [3528,]   67 #>  [3529,]   67 #>  [3530,]   67 #>  [3531,]   67 #>  [3532,]   67 #>  [3533,]   67 #>  [3534,]   67 #>  [3535,]   67 #>  [3536,]   67 #>  [3537,]   67 #>  [3538,]   67 #>  [3539,]   67 #>  [3540,]   67 #>  [3541,]   67 #>  [3542,]   67 #>  [3543,]   67 #>  [3544,]   67 #>  [3545,]   67 #>  [3546,]   67 #>  [3547,]   67 #>  [3548,]   67 #>  [3549,]   67 #>  [3550,]   67 #>  [3551,]   67 #>  [3552,]   67 #>  [3553,]   67 #>  [3554,]   67 #>  [3555,]   67 #>  [3556,]   67 #>  [3557,]   67 #>  [3558,]   67 #>  [3559,]   67 #>  [3560,]   67 #>  [3561,]   67 #>  [3562,]   67 #>  [3563,]   67 #>  [3564,]   67 #>  [3565,]   67 #>  [3566,]   67 #>  [3567,]   67 #>  [3568,]   67 #>  [3569,]   67 #>  [3570,]   67 #>  [3571,]   67 #>  [3572,]   67 #>  [3573,]   67 #>  [3574,]   67 #>  [3575,]   67 #>  [3576,]   67 #>  [3577,]   67 #>  [3578,]   67 #>  [3579,]   67 #>  [3580,]   67 #>  [3581,]   67 #>  [3582,]   67 #>  [3583,]   67 #>  [3584,]   67 #>  [3585,]   67 #>  [3586,]   67 #>  [3587,]   67 #>  [3588,]   67 #>  [3589,]   67 #>  [3590,]   67 #>  [3591,]   67 #>  [3592,]   67 #>  [3593,]   67 #>  [3594,]   67 #>  [3595,]   67 #>  [3596,]   67 #>  [3597,]   67 #>  [3598,]   67 #>  [3599,]   67 #>  [3600,]   67 #>  [3601,]   69 #>  [3602,]   69 #>  [3603,]   68 #>  [3604,]   68 #>  [3605,]   68 #>  [3606,]   68 #>  [3607,]   69 #>  [3608,]   69 #>  [3609,]   68 #>  [3610,]   68 #>  [3611,]   68 #>  [3612,]   69 #>  [3613,]   69 #>  [3614,]   68 #>  [3615,]   69 #>  [3616,]   69 #>  [3617,]   69 #>  [3618,]   69 #>  [3619,]   69 #>  [3620,]   69 #>  [3621,]   68 #>  [3622,]   69 #>  [3623,]   69 #>  [3624,]   68 #>  [3625,]   68 #>  [3626,]   69 #>  [3627,]   69 #>  [3628,]   68 #>  [3629,]   69 #>  [3630,]   69 #>  [3631,]   68 #>  [3632,]   68 #>  [3633,]   69 #>  [3634,]   68 #>  [3635,]   68 #>  [3636,]   69 #>  [3637,]   69 #>  [3638,]   69 #>  [3639,]   68 #>  [3640,]   68 #>  [3641,]   69 #>  [3642,]   68 #>  [3643,]   69 #>  [3644,]   69 #>  [3645,]   69 #>  [3646,]   69 #>  [3647,]   68 #>  [3648,]   68 #>  [3649,]   69 #>  [3650,]   69 #>  [3651,]   69 #>  [3652,]   68 #>  [3653,]   69 #>  [3654,]   68 #>  [3655,]   69 #>  [3656,]   69 #>  [3657,]   68 #>  [3658,]   69 #>  [3659,]   69 #>  [3660,]   69 #>  [3661,]   69 #>  [3662,]   68 #>  [3663,]   69 #>  [3664,]   69 #>  [3665,]   68 #>  [3666,]   69 #>  [3667,]   68 #>  [3668,]   69 #>  [3669,]   69 #>  [3670,]   68 #>  [3671,]   69 #>  [3672,]   68 #>  [3673,]   68 #>  [3674,]   68 #>  [3675,]   69 #>  [3676,]   68 #>  [3677,]   69 #>  [3678,]   69 #>  [3679,]   68 #>  [3680,]   69 #>  [3681,]   69 #>  [3682,]   68 #>  [3683,]   69 #>  [3684,]   69 #>  [3685,]   69 #>  [3686,]   68 #>  [3687,]   69 #>  [3688,]   68 #>  [3689,]   68 #>  [3690,]   69 #>  [3691,]   68 #>  [3692,]   68 #>  [3693,]   69 #>  [3694,]   68 #>  [3695,]   69 #>  [3696,]   69 #>  [3697,]   69 #>  [3698,]   68 #>  [3699,]   68 #>  [3700,]   69 #>  [3701,]   71 #>  [3702,]   70 #>  [3703,]   71 #>  [3704,]   71 #>  [3705,]   71 #>  [3706,]   70 #>  [3707,]   71 #>  [3708,]   71 #>  [3709,]   71 #>  [3710,]   71 #>  [3711,]   70 #>  [3712,]   70 #>  [3713,]   71 #>  [3714,]   71 #>  [3715,]   70 #>  [3716,]   71 #>  [3717,]   70 #>  [3718,]   71 #>  [3719,]   70 #>  [3720,]   71 #>  [3721,]   71 #>  [3722,]   71 #>  [3723,]   70 #>  [3724,]   71 #>  [3725,]   71 #>  [3726,]   70 #>  [3727,]   71 #>  [3728,]   71 #>  [3729,]   70 #>  [3730,]   70 #>  [3731,]   70 #>  [3732,]   71 #>  [3733,]   71 #>  [3734,]   70 #>  [3735,]   70 #>  [3736,]   71 #>  [3737,]   70 #>  [3738,]   71 #>  [3739,]   71 #>  [3740,]   71 #>  [3741,]   71 #>  [3742,]   70 #>  [3743,]   70 #>  [3744,]   70 #>  [3745,]   71 #>  [3746,]   70 #>  [3747,]   70 #>  [3748,]   70 #>  [3749,]   71 #>  [3750,]   71 #>  [3751,]   71 #>  [3752,]   71 #>  [3753,]   71 #>  [3754,]   71 #>  [3755,]   71 #>  [3756,]   70 #>  [3757,]   71 #>  [3758,]   71 #>  [3759,]   71 #>  [3760,]   70 #>  [3761,]   70 #>  [3762,]   71 #>  [3763,]   70 #>  [3764,]   70 #>  [3765,]   70 #>  [3766,]   70 #>  [3767,]   71 #>  [3768,]   70 #>  [3769,]   71 #>  [3770,]   70 #>  [3771,]   71 #>  [3772,]   71 #>  [3773,]   71 #>  [3774,]   71 #>  [3775,]   70 #>  [3776,]   71 #>  [3777,]   71 #>  [3778,]   70 #>  [3779,]   70 #>  [3780,]   71 #>  [3781,]   70 #>  [3782,]   71 #>  [3783,]   71 #>  [3784,]   71 #>  [3785,]   71 #>  [3786,]   71 #>  [3787,]   71 #>  [3788,]   71 #>  [3789,]   71 #>  [3790,]   71 #>  [3791,]   71 #>  [3792,]   70 #>  [3793,]   70 #>  [3794,]   70 #>  [3795,]   70 #>  [3796,]   70 #>  [3797,]   71 #>  [3798,]   71 #>  [3799,]   71 #>  [3800,]   70 #>  [3801,]   73 #>  [3802,]   72 #>  [3803,]   72 #>  [3804,]   72 #>  [3805,]   72 #>  [3806,]   72 #>  [3807,]   72 #>  [3808,]   72 #>  [3809,]   73 #>  [3810,]   72 #>  [3811,]   72 #>  [3812,]   72 #>  [3813,]   73 #>  [3814,]   72 #>  [3815,]   72 #>  [3816,]   72 #>  [3817,]   73 #>  [3818,]   73 #>  [3819,]   72 #>  [3820,]   73 #>  [3821,]   72 #>  [3822,]   72 #>  [3823,]   72 #>  [3824,]   72 #>  [3825,]   72 #>  [3826,]   72 #>  [3827,]   73 #>  [3828,]   72 #>  [3829,]   72 #>  [3830,]   72 #>  [3831,]   72 #>  [3832,]   72 #>  [3833,]   73 #>  [3834,]   72 #>  [3835,]   72 #>  [3836,]   73 #>  [3837,]   72 #>  [3838,]   73 #>  [3839,]   72 #>  [3840,]   72 #>  [3841,]   72 #>  [3842,]   73 #>  [3843,]   72 #>  [3844,]   72 #>  [3845,]   72 #>  [3846,]   72 #>  [3847,]   72 #>  [3848,]   72 #>  [3849,]   72 #>  [3850,]   72 #>  [3851,]   73 #>  [3852,]   72 #>  [3853,]   73 #>  [3854,]   73 #>  [3855,]   72 #>  [3856,]   73 #>  [3857,]   72 #>  [3858,]   72 #>  [3859,]   72 #>  [3860,]   72 #>  [3861,]   72 #>  [3862,]   72 #>  [3863,]   72 #>  [3864,]   72 #>  [3865,]   73 #>  [3866,]   73 #>  [3867,]   72 #>  [3868,]   72 #>  [3869,]   72 #>  [3870,]   72 #>  [3871,]   72 #>  [3872,]   72 #>  [3873,]   72 #>  [3874,]   72 #>  [3875,]   72 #>  [3876,]   72 #>  [3877,]   73 #>  [3878,]   72 #>  [3879,]   73 #>  [3880,]   72 #>  [3881,]   72 #>  [3882,]   73 #>  [3883,]   73 #>  [3884,]   73 #>  [3885,]   72 #>  [3886,]   72 #>  [3887,]   73 #>  [3888,]   72 #>  [3889,]   72 #>  [3890,]   72 #>  [3891,]   73 #>  [3892,]   72 #>  [3893,]   73 #>  [3894,]   73 #>  [3895,]   72 #>  [3896,]   72 #>  [3897,]   72 #>  [3898,]   72 #>  [3899,]   72 #>  [3900,]   72 #>  [3901,]   74 #>  [3902,]   75 #>  [3903,]   74 #>  [3904,]   74 #>  [3905,]   74 #>  [3906,]   74 #>  [3907,]   74 #>  [3908,]   74 #>  [3909,]   75 #>  [3910,]   75 #>  [3911,]   74 #>  [3912,]   75 #>  [3913,]   75 #>  [3914,]   74 #>  [3915,]   74 #>  [3916,]   74 #>  [3917,]   75 #>  [3918,]   74 #>  [3919,]   74 #>  [3920,]   74 #>  [3921,]   75 #>  [3922,]   74 #>  [3923,]   74 #>  [3924,]   74 #>  [3925,]   74 #>  [3926,]   74 #>  [3927,]   74 #>  [3928,]   74 #>  [3929,]   75 #>  [3930,]   74 #>  [3931,]   74 #>  [3932,]   74 #>  [3933,]   75 #>  [3934,]   74 #>  [3935,]   74 #>  [3936,]   74 #>  [3937,]   74 #>  [3938,]   74 #>  [3939,]   74 #>  [3940,]   74 #>  [3941,]   74 #>  [3942,]   74 #>  [3943,]   74 #>  [3944,]   74 #>  [3945,]   74 #>  [3946,]   74 #>  [3947,]   74 #>  [3948,]   74 #>  [3949,]   74 #>  [3950,]   74 #>  [3951,]   74 #>  [3952,]   74 #>  [3953,]   75 #>  [3954,]   74 #>  [3955,]   74 #>  [3956,]   74 #>  [3957,]   74 #>  [3958,]   74 #>  [3959,]   74 #>  [3960,]   75 #>  [3961,]   74 #>  [3962,]   74 #>  [3963,]   75 #>  [3964,]   74 #>  [3965,]   74 #>  [3966,]   74 #>  [3967,]   74 #>  [3968,]   74 #>  [3969,]   74 #>  [3970,]   75 #>  [3971,]   74 #>  [3972,]   74 #>  [3973,]   74 #>  [3974,]   74 #>  [3975,]   75 #>  [3976,]   74 #>  [3977,]   74 #>  [3978,]   74 #>  [3979,]   74 #>  [3980,]   75 #>  [3981,]   75 #>  [3982,]   74 #>  [3983,]   74 #>  [3984,]   74 #>  [3985,]   74 #>  [3986,]   75 #>  [3987,]   74 #>  [3988,]   74 #>  [3989,]   74 #>  [3990,]   74 #>  [3991,]   74 #>  [3992,]   74 #>  [3993,]   74 #>  [3994,]   74 #>  [3995,]   74 #>  [3996,]   74 #>  [3997,]   74 #>  [3998,]   74 #>  [3999,]   74 #>  [4000,]   74 #>  [4001,]   76 #>  [4002,]   76 #>  [4003,]   76 #>  [4004,]   76 #>  [4005,]   76 #>  [4006,]   76 #>  [4007,]   76 #>  [4008,]   76 #>  [4009,]   76 #>  [4010,]   76 #>  [4011,]   76 #>  [4012,]   76 #>  [4013,]   76 #>  [4014,]   76 #>  [4015,]   76 #>  [4016,]   76 #>  [4017,]   76 #>  [4018,]   76 #>  [4019,]   76 #>  [4020,]   76 #>  [4021,]   76 #>  [4022,]   76 #>  [4023,]   76 #>  [4024,]   76 #>  [4025,]   76 #>  [4026,]   76 #>  [4027,]   76 #>  [4028,]   76 #>  [4029,]   76 #>  [4030,]   76 #>  [4031,]   76 #>  [4032,]   76 #>  [4033,]   76 #>  [4034,]   76 #>  [4035,]   76 #>  [4036,]   76 #>  [4037,]   76 #>  [4038,]   76 #>  [4039,]   76 #>  [4040,]   76 #>  [4041,]   76 #>  [4042,]   76 #>  [4043,]   76 #>  [4044,]   76 #>  [4045,]   76 #>  [4046,]   76 #>  [4047,]   76 #>  [4048,]   76 #>  [4049,]   76 #>  [4050,]   76 #>  [4051,]   76 #>  [4052,]   76 #>  [4053,]   76 #>  [4054,]   76 #>  [4055,]   76 #>  [4056,]   76 #>  [4057,]   76 #>  [4058,]   76 #>  [4059,]   76 #>  [4060,]   76 #>  [4061,]   76 #>  [4062,]   76 #>  [4063,]   76 #>  [4064,]   76 #>  [4065,]   76 #>  [4066,]   76 #>  [4067,]   76 #>  [4068,]   76 #>  [4069,]   76 #>  [4070,]   76 #>  [4071,]   76 #>  [4072,]   76 #>  [4073,]   76 #>  [4074,]   76 #>  [4075,]   76 #>  [4076,]   76 #>  [4077,]   76 #>  [4078,]   76 #>  [4079,]   76 #>  [4080,]   76 #>  [4081,]   76 #>  [4082,]   76 #>  [4083,]   76 #>  [4084,]   76 #>  [4085,]   76 #>  [4086,]   76 #>  [4087,]   76 #>  [4088,]   76 #>  [4089,]   76 #>  [4090,]   76 #>  [4091,]   76 #>  [4092,]   76 #>  [4093,]   76 #>  [4094,]   76 #>  [4095,]   76 #>  [4096,]   76 #>  [4097,]   76 #>  [4098,]   76 #>  [4099,]   76 #>  [4100,]   76 #>  [4101,]   77 #>  [4102,]   77 #>  [4103,]   77 #>  [4104,]   78 #>  [4105,]   77 #>  [4106,]   77 #>  [4107,]   78 #>  [4108,]   77 #>  [4109,]   77 #>  [4110,]   78 #>  [4111,]   77 #>  [4112,]   77 #>  [4113,]   77 #>  [4114,]   77 #>  [4115,]   77 #>  [4116,]   78 #>  [4117,]   77 #>  [4118,]   77 #>  [4119,]   77 #>  [4120,]   78 #>  [4121,]   77 #>  [4122,]   77 #>  [4123,]   77 #>  [4124,]   78 #>  [4125,]   78 #>  [4126,]   77 #>  [4127,]   77 #>  [4128,]   78 #>  [4129,]   77 #>  [4130,]   77 #>  [4131,]   77 #>  [4132,]   77 #>  [4133,]   77 #>  [4134,]   77 #>  [4135,]   77 #>  [4136,]   77 #>  [4137,]   77 #>  [4138,]   77 #>  [4139,]   78 #>  [4140,]   77 #>  [4141,]   77 #>  [4142,]   77 #>  [4143,]   77 #>  [4144,]   77 #>  [4145,]   77 #>  [4146,]   77 #>  [4147,]   77 #>  [4148,]   77 #>  [4149,]   77 #>  [4150,]   78 #>  [4151,]   77 #>  [4152,]   78 #>  [4153,]   77 #>  [4154,]   78 #>  [4155,]   77 #>  [4156,]   77 #>  [4157,]   78 #>  [4158,]   77 #>  [4159,]   77 #>  [4160,]   77 #>  [4161,]   77 #>  [4162,]   77 #>  [4163,]   77 #>  [4164,]   77 #>  [4165,]   77 #>  [4166,]   77 #>  [4167,]   77 #>  [4168,]   77 #>  [4169,]   77 #>  [4170,]   77 #>  [4171,]   77 #>  [4172,]   77 #>  [4173,]   78 #>  [4174,]   77 #>  [4175,]   77 #>  [4176,]   78 #>  [4177,]   77 #>  [4178,]   77 #>  [4179,]   77 #>  [4180,]   77 #>  [4181,]   77 #>  [4182,]   77 #>  [4183,]   77 #>  [4184,]   77 #>  [4185,]   77 #>  [4186,]   78 #>  [4187,]   77 #>  [4188,]   77 #>  [4189,]   77 #>  [4190,]   77 #>  [4191,]   78 #>  [4192,]   77 #>  [4193,]   77 #>  [4194,]   77 #>  [4195,]   77 #>  [4196,]   77 #>  [4197,]   77 #>  [4198,]   77 #>  [4199,]   77 #>  [4200,]   77 #>  [4201,]   80 #>  [4202,]   80 #>  [4203,]   79 #>  [4204,]   79 #>  [4205,]   79 #>  [4206,]   80 #>  [4207,]   80 #>  [4208,]   79 #>  [4209,]   79 #>  [4210,]   79 #>  [4211,]   80 #>  [4212,]   79 #>  [4213,]   80 #>  [4214,]   80 #>  [4215,]   80 #>  [4216,]   80 #>  [4217,]   80 #>  [4218,]   79 #>  [4219,]   80 #>  [4220,]   79 #>  [4221,]   80 #>  [4222,]   80 #>  [4223,]   79 #>  [4224,]   79 #>  [4225,]   79 #>  [4226,]   80 #>  [4227,]   80 #>  [4228,]   79 #>  [4229,]   80 #>  [4230,]   79 #>  [4231,]   79 #>  [4232,]   79 #>  [4233,]   80 #>  [4234,]   79 #>  [4235,]   80 #>  [4236,]   79 #>  [4237,]   80 #>  [4238,]   79 #>  [4239,]   79 #>  [4240,]   80 #>  [4241,]   80 #>  [4242,]   79 #>  [4243,]   79 #>  [4244,]   80 #>  [4245,]   79 #>  [4246,]   80 #>  [4247,]   80 #>  [4248,]   79 #>  [4249,]   79 #>  [4250,]   80 #>  [4251,]   79 #>  [4252,]   80 #>  [4253,]   79 #>  [4254,]   79 #>  [4255,]   80 #>  [4256,]   79 #>  [4257,]   79 #>  [4258,]   80 #>  [4259,]   80 #>  [4260,]   79 #>  [4261,]   80 #>  [4262,]   79 #>  [4263,]   80 #>  [4264,]   79 #>  [4265,]   79 #>  [4266,]   79 #>  [4267,]   79 #>  [4268,]   80 #>  [4269,]   80 #>  [4270,]   80 #>  [4271,]   80 #>  [4272,]   79 #>  [4273,]   80 #>  [4274,]   80 #>  [4275,]   80 #>  [4276,]   80 #>  [4277,]   80 #>  [4278,]   79 #>  [4279,]   80 #>  [4280,]   80 #>  [4281,]   80 #>  [4282,]   80 #>  [4283,]   80 #>  [4284,]   80 #>  [4285,]   79 #>  [4286,]   80 #>  [4287,]   80 #>  [4288,]   79 #>  [4289,]   79 #>  [4290,]   80 #>  [4291,]   79 #>  [4292,]   80 #>  [4293,]   80 #>  [4294,]   80 #>  [4295,]   79 #>  [4296,]   80 #>  [4297,]   80 #>  [4298,]   80 #>  [4299,]   80 #>  [4300,]   80 #>  [4301,]   81 #>  [4302,]   82 #>  [4303,]   81 #>  [4304,]   81 #>  [4305,]   81 #>  [4306,]   81 #>  [4307,]   81 #>  [4308,]   81 #>  [4309,]   82 #>  [4310,]   82 #>  [4311,]   81 #>  [4312,]   82 #>  [4313,]   81 #>  [4314,]   81 #>  [4315,]   81 #>  [4316,]   81 #>  [4317,]   81 #>  [4318,]   81 #>  [4319,]   81 #>  [4320,]   81 #>  [4321,]   82 #>  [4322,]   81 #>  [4323,]   81 #>  [4324,]   81 #>  [4325,]   81 #>  [4326,]   81 #>  [4327,]   81 #>  [4328,]   81 #>  [4329,]   82 #>  [4330,]   81 #>  [4331,]   81 #>  [4332,]   81 #>  [4333,]   82 #>  [4334,]   81 #>  [4335,]   81 #>  [4336,]   81 #>  [4337,]   81 #>  [4338,]   81 #>  [4339,]   81 #>  [4340,]   81 #>  [4341,]   81 #>  [4342,]   81 #>  [4343,]   81 #>  [4344,]   81 #>  [4345,]   81 #>  [4346,]   81 #>  [4347,]   81 #>  [4348,]   81 #>  [4349,]   81 #>  [4350,]   81 #>  [4351,]   81 #>  [4352,]   81 #>  [4353,]   81 #>  [4354,]   81 #>  [4355,]   81 #>  [4356,]   81 #>  [4357,]   81 #>  [4358,]   81 #>  [4359,]   81 #>  [4360,]   81 #>  [4361,]   81 #>  [4362,]   81 #>  [4363,]   81 #>  [4364,]   81 #>  [4365,]   81 #>  [4366,]   81 #>  [4367,]   81 #>  [4368,]   81 #>  [4369,]   81 #>  [4370,]   82 #>  [4371,]   81 #>  [4372,]   81 #>  [4373,]   81 #>  [4374,]   81 #>  [4375,]   81 #>  [4376,]   81 #>  [4377,]   81 #>  [4378,]   81 #>  [4379,]   81 #>  [4380,]   81 #>  [4381,]   81 #>  [4382,]   81 #>  [4383,]   81 #>  [4384,]   81 #>  [4385,]   81 #>  [4386,]   82 #>  [4387,]   81 #>  [4388,]   81 #>  [4389,]   81 #>  [4390,]   81 #>  [4391,]   81 #>  [4392,]   81 #>  [4393,]   81 #>  [4394,]   81 #>  [4395,]   81 #>  [4396,]   81 #>  [4397,]   81 #>  [4398,]   81 #>  [4399,]   81 #>  [4400,]   81 #>  [4401,]   83 #>  [4402,]   84 #>  [4403,]   84 #>  [4404,]   83 #>  [4405,]   84 #>  [4406,]   84 #>  [4407,]   84 #>  [4408,]   83 #>  [4409,]   83 #>  [4410,]   84 #>  [4411,]   83 #>  [4412,]   84 #>  [4413,]   83 #>  [4414,]   83 #>  [4415,]   83 #>  [4416,]   83 #>  [4417,]   83 #>  [4418,]   84 #>  [4419,]   84 #>  [4420,]   84 #>  [4421,]   83 #>  [4422,]   83 #>  [4423,]   84 #>  [4424,]   83 #>  [4425,]   84 #>  [4426,]   84 #>  [4427,]   83 #>  [4428,]   84 #>  [4429,]   84 #>  [4430,]   83 #>  [4431,]   84 #>  [4432,]   84 #>  [4433,]   84 #>  [4434,]   84 #>  [4435,]   83 #>  [4436,]   84 #>  [4437,]   83 #>  [4438,]   83 #>  [4439,]   84 #>  [4440,]   84 #>  [4441,]   83 #>  [4442,]   84 #>  [4443,]   83 #>  [4444,]   83 #>  [4445,]   83 #>  [4446,]   83 #>  [4447,]   84 #>  [4448,]   84 #>  [4449,]   83 #>  [4450,]   84 #>  [4451,]   83 #>  [4452,]   83 #>  [4453,]   84 #>  [4454,]   83 #>  [4455,]   83 #>  [4456,]   84 #>  [4457,]   84 #>  [4458,]   83 #>  [4459,]   83 #>  [4460,]   84 #>  [4461,]   84 #>  [4462,]   83 #>  [4463,]   84 #>  [4464,]   84 #>  [4465,]   84 #>  [4466,]   83 #>  [4467,]   83 #>  [4468,]   83 #>  [4469,]   83 #>  [4470,]   84 #>  [4471,]   84 #>  [4472,]   84 #>  [4473,]   84 #>  [4474,]   83 #>  [4475,]   84 #>  [4476,]   84 #>  [4477,]   84 #>  [4478,]   84 #>  [4479,]   83 #>  [4480,]   83 #>  [4481,]   83 #>  [4482,]   83 #>  [4483,]   83 #>  [4484,]   84 #>  [4485,]   83 #>  [4486,]   84 #>  [4487,]   83 #>  [4488,]   83 #>  [4489,]   83 #>  [4490,]   83 #>  [4491,]   83 #>  [4492,]   83 #>  [4493,]   84 #>  [4494,]   84 #>  [4495,]   83 #>  [4496,]   83 #>  [4497,]   84 #>  [4498,]   84 #>  [4499,]   83 #>  [4500,]   84 #>  [4501,]   86 #>  [4502,]   86 #>  [4503,]   85 #>  [4504,]   85 #>  [4505,]   85 #>  [4506,]   85 #>  [4507,]   85 #>  [4508,]   86 #>  [4509,]   85 #>  [4510,]   85 #>  [4511,]   85 #>  [4512,]   85 #>  [4513,]   86 #>  [4514,]   85 #>  [4515,]   86 #>  [4516,]   86 #>  [4517,]   85 #>  [4518,]   85 #>  [4519,]   86 #>  [4520,]   86 #>  [4521,]   85 #>  [4522,]   86 #>  [4523,]   86 #>  [4524,]   85 #>  [4525,]   85 #>  [4526,]   86 #>  [4527,]   86 #>  [4528,]   85 #>  [4529,]   86 #>  [4530,]   86 #>  [4531,]   85 #>  [4532,]   85 #>  [4533,]   86 #>  [4534,]   85 #>  [4535,]   85 #>  [4536,]   86 #>  [4537,]   86 #>  [4538,]   86 #>  [4539,]   85 #>  [4540,]   85 #>  [4541,]   86 #>  [4542,]   85 #>  [4543,]   86 #>  [4544,]   86 #>  [4545,]   86 #>  [4546,]   86 #>  [4547,]   85 #>  [4548,]   85 #>  [4549,]   85 #>  [4550,]   86 #>  [4551,]   86 #>  [4552,]   85 #>  [4553,]   86 #>  [4554,]   85 #>  [4555,]   86 #>  [4556,]   86 #>  [4557,]   85 #>  [4558,]   86 #>  [4559,]   86 #>  [4560,]   86 #>  [4561,]   86 #>  [4562,]   85 #>  [4563,]   86 #>  [4564,]   86 #>  [4565,]   85 #>  [4566,]   86 #>  [4567,]   85 #>  [4568,]   86 #>  [4569,]   86 #>  [4570,]   85 #>  [4571,]   86 #>  [4572,]   85 #>  [4573,]   85 #>  [4574,]   85 #>  [4575,]   86 #>  [4576,]   85 #>  [4577,]   86 #>  [4578,]   86 #>  [4579,]   85 #>  [4580,]   86 #>  [4581,]   86 #>  [4582,]   85 #>  [4583,]   86 #>  [4584,]   86 #>  [4585,]   86 #>  [4586,]   85 #>  [4587,]   86 #>  [4588,]   85 #>  [4589,]   85 #>  [4590,]   86 #>  [4591,]   85 #>  [4592,]   85 #>  [4593,]   86 #>  [4594,]   85 #>  [4595,]   86 #>  [4596,]   86 #>  [4597,]   86 #>  [4598,]   85 #>  [4599,]   85 #>  [4600,]   86 #>  [4601,]   88 #>  [4602,]   88 #>  [4603,]   87 #>  [4604,]   87 #>  [4605,]   87 #>  [4606,]   87 #>  [4607,]   87 #>  [4608,]   88 #>  [4609,]   87 #>  [4610,]   87 #>  [4611,]   87 #>  [4612,]   87 #>  [4613,]   88 #>  [4614,]   87 #>  [4615,]   88 #>  [4616,]   88 #>  [4617,]   87 #>  [4618,]   87 #>  [4619,]   88 #>  [4620,]   88 #>  [4621,]   87 #>  [4622,]   88 #>  [4623,]   88 #>  [4624,]   87 #>  [4625,]   87 #>  [4626,]   88 #>  [4627,]   88 #>  [4628,]   87 #>  [4629,]   88 #>  [4630,]   88 #>  [4631,]   87 #>  [4632,]   87 #>  [4633,]   88 #>  [4634,]   87 #>  [4635,]   87 #>  [4636,]   88 #>  [4637,]   88 #>  [4638,]   88 #>  [4639,]   87 #>  [4640,]   87 #>  [4641,]   88 #>  [4642,]   87 #>  [4643,]   88 #>  [4644,]   88 #>  [4645,]   87 #>  [4646,]   88 #>  [4647,]   87 #>  [4648,]   87 #>  [4649,]   87 #>  [4650,]   88 #>  [4651,]   88 #>  [4652,]   87 #>  [4653,]   88 #>  [4654,]   87 #>  [4655,]   88 #>  [4656,]   88 #>  [4657,]   87 #>  [4658,]   88 #>  [4659,]   88 #>  [4660,]   88 #>  [4661,]   88 #>  [4662,]   87 #>  [4663,]   88 #>  [4664,]   88 #>  [4665,]   87 #>  [4666,]   88 #>  [4667,]   87 #>  [4668,]   88 #>  [4669,]   88 #>  [4670,]   87 #>  [4671,]   88 #>  [4672,]   87 #>  [4673,]   87 #>  [4674,]   87 #>  [4675,]   88 #>  [4676,]   87 #>  [4677,]   88 #>  [4678,]   88 #>  [4679,]   87 #>  [4680,]   88 #>  [4681,]   88 #>  [4682,]   87 #>  [4683,]   88 #>  [4684,]   88 #>  [4685,]   88 #>  [4686,]   87 #>  [4687,]   88 #>  [4688,]   87 #>  [4689,]   87 #>  [4690,]   88 #>  [4691,]   87 #>  [4692,]   87 #>  [4693,]   88 #>  [4694,]   87 #>  [4695,]   88 #>  [4696,]   88 #>  [4697,]   88 #>  [4698,]   87 #>  [4699,]   87 #>  [4700,]   88 #>  [4701,]   89 #>  [4702,]   89 #>  [4703,]   89 #>  [4704,]   89 #>  [4705,]   89 #>  [4706,]   89 #>  [4707,]   89 #>  [4708,]   90 #>  [4709,]   89 #>  [4710,]   89 #>  [4711,]   89 #>  [4712,]   89 #>  [4713,]   90 #>  [4714,]   89 #>  [4715,]   90 #>  [4716,]   90 #>  [4717,]   89 #>  [4718,]   89 #>  [4719,]   90 #>  [4720,]   90 #>  [4721,]   89 #>  [4722,]   90 #>  [4723,]   89 #>  [4724,]   89 #>  [4725,]   89 #>  [4726,]   90 #>  [4727,]   90 #>  [4728,]   89 #>  [4729,]   90 #>  [4730,]   90 #>  [4731,]   89 #>  [4732,]   89 #>  [4733,]   89 #>  [4734,]   89 #>  [4735,]   89 #>  [4736,]   90 #>  [4737,]   90 #>  [4738,]   90 #>  [4739,]   89 #>  [4740,]   89 #>  [4741,]   90 #>  [4742,]   89 #>  [4743,]   90 #>  [4744,]   90 #>  [4745,]   89 #>  [4746,]   90 #>  [4747,]   89 #>  [4748,]   89 #>  [4749,]   89 #>  [4750,]   90 #>  [4751,]   90 #>  [4752,]   89 #>  [4753,]   90 #>  [4754,]   89 #>  [4755,]   90 #>  [4756,]   90 #>  [4757,]   89 #>  [4758,]   90 #>  [4759,]   90 #>  [4760,]   90 #>  [4761,]   89 #>  [4762,]   89 #>  [4763,]   89 #>  [4764,]   90 #>  [4765,]   89 #>  [4766,]   90 #>  [4767,]   89 #>  [4768,]   89 #>  [4769,]   90 #>  [4770,]   89 #>  [4771,]   90 #>  [4772,]   89 #>  [4773,]   89 #>  [4774,]   89 #>  [4775,]   89 #>  [4776,]   89 #>  [4777,]   90 #>  [4778,]   89 #>  [4779,]   89 #>  [4780,]   90 #>  [4781,]   90 #>  [4782,]   89 #>  [4783,]   90 #>  [4784,]   90 #>  [4785,]   90 #>  [4786,]   89 #>  [4787,]   90 #>  [4788,]   89 #>  [4789,]   89 #>  [4790,]   90 #>  [4791,]   89 #>  [4792,]   89 #>  [4793,]   89 #>  [4794,]   89 #>  [4795,]   90 #>  [4796,]   90 #>  [4797,]   90 #>  [4798,]   89 #>  [4799,]   89 #>  [4800,]   90 #>  [4801,]   91 #>  [4802,]   91 #>  [4803,]   91 #>  [4804,]   91 #>  [4805,]   91 #>  [4806,]   91 #>  [4807,]   91 #>  [4808,]   92 #>  [4809,]   92 #>  [4810,]   91 #>  [4811,]   91 #>  [4812,]   91 #>  [4813,]   91 #>  [4814,]   91 #>  [4815,]   91 #>  [4816,]   91 #>  [4817,]   91 #>  [4818,]   91 #>  [4819,]   91 #>  [4820,]   91 #>  [4821,]   91 #>  [4822,]   91 #>  [4823,]   91 #>  [4824,]   91 #>  [4825,]   91 #>  [4826,]   92 #>  [4827,]   91 #>  [4828,]   91 #>  [4829,]   91 #>  [4830,]   91 #>  [4831,]   91 #>  [4832,]   91 #>  [4833,]   91 #>  [4834,]   91 #>  [4835,]   91 #>  [4836,]   91 #>  [4837,]   91 #>  [4838,]   91 #>  [4839,]   91 #>  [4840,]   91 #>  [4841,]   91 #>  [4842,]   91 #>  [4843,]   91 #>  [4844,]   91 #>  [4845,]   91 #>  [4846,]   91 #>  [4847,]   91 #>  [4848,]   91 #>  [4849,]   91 #>  [4850,]   91 #>  [4851,]   91 #>  [4852,]   91 #>  [4853,]   91 #>  [4854,]   91 #>  [4855,]   91 #>  [4856,]   92 #>  [4857,]   91 #>  [4858,]   91 #>  [4859,]   91 #>  [4860,]   91 #>  [4861,]   92 #>  [4862,]   91 #>  [4863,]   91 #>  [4864,]   91 #>  [4865,]   91 #>  [4866,]   91 #>  [4867,]   91 #>  [4868,]   91 #>  [4869,]   91 #>  [4870,]   91 #>  [4871,]   91 #>  [4872,]   91 #>  [4873,]   91 #>  [4874,]   91 #>  [4875,]   91 #>  [4876,]   92 #>  [4877,]   91 #>  [4878,]   91 #>  [4879,]   91 #>  [4880,]   91 #>  [4881,]   91 #>  [4882,]   91 #>  [4883,]   91 #>  [4884,]   91 #>  [4885,]   91 #>  [4886,]   91 #>  [4887,]   91 #>  [4888,]   91 #>  [4889,]   91 #>  [4890,]   91 #>  [4891,]   91 #>  [4892,]   91 #>  [4893,]   91 #>  [4894,]   91 #>  [4895,]   91 #>  [4896,]   91 #>  [4897,]   91 #>  [4898,]   91 #>  [4899,]   91 #>  [4900,]   91 #>  [4901,]   94 #>  [4902,]   93 #>  [4903,]   93 #>  [4904,]   93 #>  [4905,]   94 #>  [4906,]   93 #>  [4907,]   93 #>  [4908,]   93 #>  [4909,]   94 #>  [4910,]   93 #>  [4911,]   94 #>  [4912,]   93 #>  [4913,]   94 #>  [4914,]   93 #>  [4915,]   93 #>  [4916,]   93 #>  [4917,]   94 #>  [4918,]   94 #>  [4919,]   93 #>  [4920,]   94 #>  [4921,]   94 #>  [4922,]   93 #>  [4923,]   93 #>  [4924,]   94 #>  [4925,]   93 #>  [4926,]   93 #>  [4927,]   94 #>  [4928,]   94 #>  [4929,]   94 #>  [4930,]   93 #>  [4931,]   93 #>  [4932,]   93 #>  [4933,]   94 #>  [4934,]   93 #>  [4935,]   93 #>  [4936,]   94 #>  [4937,]   93 #>  [4938,]   94 #>  [4939,]   94 #>  [4940,]   93 #>  [4941,]   94 #>  [4942,]   94 #>  [4943,]   93 #>  [4944,]   93 #>  [4945,]   93 #>  [4946,]   93 #>  [4947,]   93 #>  [4948,]   93 #>  [4949,]   93 #>  [4950,]   93 #>  [4951,]   94 #>  [4952,]   93 #>  [4953,]   94 #>  [4954,]   94 #>  [4955,]   93 #>  [4956,]   94 #>  [4957,]   93 #>  [4958,]   94 #>  [4959,]   93 #>  [4960,]   93 #>  [4961,]   94 #>  [4962,]   94 #>  [4963,]   93 #>  [4964,]   94 #>  [4965,]   94 #>  [4966,]   94 #>  [4967,]   93 #>  [4968,]   93 #>  [4969,]   93 #>  [4970,]   94 #>  [4971,]   93 #>  [4972,]   93 #>  [4973,]   93 #>  [4974,]   93 #>  [4975,]   93 #>  [4976,]   93 #>  [4977,]   94 #>  [4978,]   93 #>  [4979,]   94 #>  [4980,]   93 #>  [4981,]   93 #>  [4982,]   94 #>  [4983,]   94 #>  [4984,]   94 #>  [4985,]   94 #>  [4986,]   93 #>  [4987,]   94 #>  [4988,]   93 #>  [4989,]   94 #>  [4990,]   94 #>  [4991,]   94 #>  [4992,]   93 #>  [4993,]   94 #>  [4994,]   94 #>  [4995,]   93 #>  [4996,]   93 #>  [4997,]   93 #>  [4998,]   93 #>  [4999,]   94 #>  [5000,]   94 #>  [5001,]   96 #>  [5002,]   96 #>  [5003,]   96 #>  [5004,]   95 #>  [5005,]   96 #>  [5006,]   96 #>  [5007,]   96 #>  [5008,]   95 #>  [5009,]   95 #>  [5010,]   95 #>  [5011,]   96 #>  [5012,]   96 #>  [5013,]   96 #>  [5014,]   96 #>  [5015,]   96 #>  [5016,]   96 #>  [5017,]   96 #>  [5018,]   96 #>  [5019,]   96 #>  [5020,]   96 #>  [5021,]   96 #>  [5022,]   96 #>  [5023,]   96 #>  [5024,]   96 #>  [5025,]   96 #>  [5026,]   96 #>  [5027,]   96 #>  [5028,]   96 #>  [5029,]   96 #>  [5030,]   96 #>  [5031,]   96 #>  [5032,]   96 #>  [5033,]   96 #>  [5034,]   96 #>  [5035,]   96 #>  [5036,]   96 #>  [5037,]   96 #>  [5038,]   96 #>  [5039,]   96 #>  [5040,]   96 #>  [5041,]   96 #>  [5042,]   96 #>  [5043,]   95 #>  [5044,]   96 #>  [5045,]   96 #>  [5046,]   96 #>  [5047,]   96 #>  [5048,]   96 #>  [5049,]   96 #>  [5050,]   96 #>  [5051,]   95 #>  [5052,]   96 #>  [5053,]   96 #>  [5054,]   96 #>  [5055,]   96 #>  [5056,]   96 #>  [5057,]   96 #>  [5058,]   96 #>  [5059,]   96 #>  [5060,]   95 #>  [5061,]   96 #>  [5062,]   96 #>  [5063,]   96 #>  [5064,]   96 #>  [5065,]   96 #>  [5066,]   96 #>  [5067,]   95 #>  [5068,]   96 #>  [5069,]   96 #>  [5070,]   96 #>  [5071,]   96 #>  [5072,]   96 #>  [5073,]   96 #>  [5074,]   96 #>  [5075,]   96 #>  [5076,]   96 #>  [5077,]   96 #>  [5078,]   96 #>  [5079,]   96 #>  [5080,]   96 #>  [5081,]   96 #>  [5082,]   96 #>  [5083,]   96 #>  [5084,]   96 #>  [5085,]   95 #>  [5086,]   96 #>  [5087,]   96 #>  [5088,]   96 #>  [5089,]   96 #>  [5090,]   96 #>  [5091,]   95 #>  [5092,]   96 #>  [5093,]   96 #>  [5094,]   96 #>  [5095,]   95 #>  [5096,]   96 #>  [5097,]   96 #>  [5098,]   96 #>  [5099,]   96 #>  [5100,]   96 #>  [5101,]   98 #>  [5102,]   97 #>  [5103,]   97 #>  [5104,]   97 #>  [5105,]   97 #>  [5106,]   97 #>  [5107,]   97 #>  [5108,]   97 #>  [5109,]   97 #>  [5110,]   97 #>  [5111,]   97 #>  [5112,]   97 #>  [5113,]   97 #>  [5114,]   98 #>  [5115,]   98 #>  [5116,]   98 #>  [5117,]   97 #>  [5118,]   97 #>  [5119,]   97 #>  [5120,]   97 #>  [5121,]   97 #>  [5122,]   97 #>  [5123,]   97 #>  [5124,]   97 #>  [5125,]   97 #>  [5126,]   97 #>  [5127,]   97 #>  [5128,]   97 #>  [5129,]   97 #>  [5130,]   97 #>  [5131,]   97 #>  [5132,]   97 #>  [5133,]   97 #>  [5134,]   97 #>  [5135,]   97 #>  [5136,]   97 #>  [5137,]   97 #>  [5138,]   97 #>  [5139,]   97 #>  [5140,]   97 #>  [5141,]   98 #>  [5142,]   97 #>  [5143,]   97 #>  [5144,]   98 #>  [5145,]   97 #>  [5146,]   97 #>  [5147,]   97 #>  [5148,]   97 #>  [5149,]   97 #>  [5150,]   98 #>  [5151,]   97 #>  [5152,]   97 #>  [5153,]   97 #>  [5154,]   97 #>  [5155,]   97 #>  [5156,]   97 #>  [5157,]   97 #>  [5158,]   97 #>  [5159,]   98 #>  [5160,]   97 #>  [5161,]   97 #>  [5162,]   97 #>  [5163,]   97 #>  [5164,]   97 #>  [5165,]   97 #>  [5166,]   97 #>  [5167,]   97 #>  [5168,]   97 #>  [5169,]   97 #>  [5170,]   97 #>  [5171,]   97 #>  [5172,]   97 #>  [5173,]   98 #>  [5174,]   97 #>  [5175,]   97 #>  [5176,]   97 #>  [5177,]   97 #>  [5178,]   97 #>  [5179,]   97 #>  [5180,]   97 #>  [5181,]   97 #>  [5182,]   97 #>  [5183,]   97 #>  [5184,]   97 #>  [5185,]   97 #>  [5186,]   97 #>  [5187,]   97 #>  [5188,]   97 #>  [5189,]   97 #>  [5190,]   97 #>  [5191,]   97 #>  [5192,]   97 #>  [5193,]   97 #>  [5194,]   97 #>  [5195,]   97 #>  [5196,]   97 #>  [5197,]   97 #>  [5198,]   97 #>  [5199,]   98 #>  [5200,]   97 #>  [5201,]  100 #>  [5202,]  100 #>  [5203,]   99 #>  [5204,]   99 #>  [5205,]   99 #>  [5206,]   99 #>  [5207,]   99 #>  [5208,]  100 #>  [5209,]   99 #>  [5210,]   99 #>  [5211,]   99 #>  [5212,]   99 #>  [5213,]  100 #>  [5214,]   99 #>  [5215,]  100 #>  [5216,]  100 #>  [5217,]   99 #>  [5218,]   99 #>  [5219,]  100 #>  [5220,]  100 #>  [5221,]   99 #>  [5222,]  100 #>  [5223,]   99 #>  [5224,]   99 #>  [5225,]   99 #>  [5226,]  100 #>  [5227,]  100 #>  [5228,]   99 #>  [5229,]  100 #>  [5230,]  100 #>  [5231,]   99 #>  [5232,]   99 #>  [5233,]  100 #>  [5234,]   99 #>  [5235,]   99 #>  [5236,]  100 #>  [5237,]  100 #>  [5238,]  100 #>  [5239,]   99 #>  [5240,]   99 #>  [5241,]  100 #>  [5242,]   99 #>  [5243,]  100 #>  [5244,]  100 #>  [5245,]   99 #>  [5246,]  100 #>  [5247,]   99 #>  [5248,]   99 #>  [5249,]   99 #>  [5250,]  100 #>  [5251,]  100 #>  [5252,]   99 #>  [5253,]  100 #>  [5254,]   99 #>  [5255,]  100 #>  [5256,]  100 #>  [5257,]   99 #>  [5258,]  100 #>  [5259,]  100 #>  [5260,]  100 #>  [5261,]  100 #>  [5262,]   99 #>  [5263,]  100 #>  [5264,]  100 #>  [5265,]   99 #>  [5266,]  100 #>  [5267,]   99 #>  [5268,]  100 #>  [5269,]  100 #>  [5270,]   99 #>  [5271,]  100 #>  [5272,]   99 #>  [5273,]   99 #>  [5274,]   99 #>  [5275,]  100 #>  [5276,]   99 #>  [5277,]  100 #>  [5278,]  100 #>  [5279,]   99 #>  [5280,]  100 #>  [5281,]  100 #>  [5282,]   99 #>  [5283,]  100 #>  [5284,]  100 #>  [5285,]  100 #>  [5286,]   99 #>  [5287,]  100 #>  [5288,]   99 #>  [5289,]   99 #>  [5290,]  100 #>  [5291,]   99 #>  [5292,]   99 #>  [5293,]  100 #>  [5294,]   99 #>  [5295,]  100 #>  [5296,]  100 #>  [5297,]  100 #>  [5298,]   99 #>  [5299,]   99 #>  [5300,]  100 #>  [5301,]  102 #>  [5302,]  102 #>  [5303,]  101 #>  [5304,]  102 #>  [5305,]  102 #>  [5306,]  102 #>  [5307,]  102 #>  [5308,]  102 #>  [5309,]  102 #>  [5310,]  101 #>  [5311,]  101 #>  [5312,]  102 #>  [5313,]  102 #>  [5314,]  101 #>  [5315,]  102 #>  [5316,]  102 #>  [5317,]  102 #>  [5318,]  102 #>  [5319,]  102 #>  [5320,]  102 #>  [5321,]  101 #>  [5322,]  102 #>  [5323,]  102 #>  [5324,]  102 #>  [5325,]  102 #>  [5326,]  102 #>  [5327,]  102 #>  [5328,]  101 #>  [5329,]  102 #>  [5330,]  102 #>  [5331,]  101 #>  [5332,]  101 #>  [5333,]  102 #>  [5334,]  101 #>  [5335,]  102 #>  [5336,]  102 #>  [5337,]  102 #>  [5338,]  102 #>  [5339,]  102 #>  [5340,]  101 #>  [5341,]  102 #>  [5342,]  102 #>  [5343,]  102 #>  [5344,]  102 #>  [5345,]  102 #>  [5346,]  102 #>  [5347,]  102 #>  [5348,]  101 #>  [5349,]  102 #>  [5350,]  102 #>  [5351,]  102 #>  [5352,]  102 #>  [5353,]  102 #>  [5354,]  102 #>  [5355,]  102 #>  [5356,]  102 #>  [5357,]  102 #>  [5358,]  102 #>  [5359,]  102 #>  [5360,]  102 #>  [5361,]  102 #>  [5362,]  102 #>  [5363,]  102 #>  [5364,]  102 #>  [5365,]  102 #>  [5366,]  102 #>  [5367,]  102 #>  [5368,]  102 #>  [5369,]  102 #>  [5370,]  101 #>  [5371,]  102 #>  [5372,]  102 #>  [5373,]  102 #>  [5374,]  101 #>  [5375,]  102 #>  [5376,]  102 #>  [5377,]  102 #>  [5378,]  102 #>  [5379,]  102 #>  [5380,]  102 #>  [5381,]  102 #>  [5382,]  101 #>  [5383,]  102 #>  [5384,]  102 #>  [5385,]  102 #>  [5386,]  102 #>  [5387,]  102 #>  [5388,]  102 #>  [5389,]  102 #>  [5390,]  102 #>  [5391,]  102 #>  [5392,]  102 #>  [5393,]  102 #>  [5394,]  102 #>  [5395,]  102 #>  [5396,]  102 #>  [5397,]  102 #>  [5398,]  101 #>  [5399,]  102 #>  [5400,]  102 #>  [5401,]  103 #>  [5402,]  103 #>  [5403,]  103 #>  [5404,]  104 #>  [5405,]  103 #>  [5406,]  103 #>  [5407,]  104 #>  [5408,]  103 #>  [5409,]  104 #>  [5410,]  104 #>  [5411,]  103 #>  [5412,]  103 #>  [5413,]  103 #>  [5414,]  104 #>  [5415,]  103 #>  [5416,]  104 #>  [5417,]  103 #>  [5418,]  103 #>  [5419,]  103 #>  [5420,]  104 #>  [5421,]  103 #>  [5422,]  104 #>  [5423,]  103 #>  [5424,]  104 #>  [5425,]  104 #>  [5426,]  103 #>  [5427,]  103 #>  [5428,]  104 #>  [5429,]  103 #>  [5430,]  103 #>  [5431,]  103 #>  [5432,]  103 #>  [5433,]  103 #>  [5434,]  103 #>  [5435,]  103 #>  [5436,]  104 #>  [5437,]  103 #>  [5438,]  103 #>  [5439,]  104 #>  [5440,]  103 #>  [5441,]  103 #>  [5442,]  103 #>  [5443,]  103 #>  [5444,]  103 #>  [5445,]  103 #>  [5446,]  103 #>  [5447,]  103 #>  [5448,]  103 #>  [5449,]  103 #>  [5450,]  104 #>  [5451,]  103 #>  [5452,]  104 #>  [5453,]  103 #>  [5454,]  104 #>  [5455,]  104 #>  [5456,]  103 #>  [5457,]  104 #>  [5458,]  103 #>  [5459,]  104 #>  [5460,]  103 #>  [5461,]  103 #>  [5462,]  103 #>  [5463,]  103 #>  [5464,]  103 #>  [5465,]  103 #>  [5466,]  103 #>  [5467,]  104 #>  [5468,]  103 #>  [5469,]  103 #>  [5470,]  103 #>  [5471,]  103 #>  [5472,]  103 #>  [5473,]  104 #>  [5474,]  103 #>  [5475,]  103 #>  [5476,]  104 #>  [5477,]  103 #>  [5478,]  103 #>  [5479,]  103 #>  [5480,]  103 #>  [5481,]  103 #>  [5482,]  103 #>  [5483,]  103 #>  [5484,]  103 #>  [5485,]  103 #>  [5486,]  104 #>  [5487,]  103 #>  [5488,]  103 #>  [5489,]  103 #>  [5490,]  104 #>  [5491,]  104 #>  [5492,]  103 #>  [5493,]  103 #>  [5494,]  103 #>  [5495,]  103 #>  [5496,]  103 #>  [5497,]  103 #>  [5498,]  103 #>  [5499,]  103 #>  [5500,]  103 #>  [5501,]  105 #>  [5502,]  106 #>  [5503,]  105 #>  [5504,]  105 #>  [5505,]  106 #>  [5506,]  105 #>  [5507,]  106 #>  [5508,]  105 #>  [5509,]  106 #>  [5510,]  106 #>  [5511,]  105 #>  [5512,]  106 #>  [5513,]  106 #>  [5514,]  105 #>  [5515,]  105 #>  [5516,]  105 #>  [5517,]  106 #>  [5518,]  106 #>  [5519,]  105 #>  [5520,]  106 #>  [5521,]  106 #>  [5522,]  106 #>  [5523,]  106 #>  [5524,]  106 #>  [5525,]  106 #>  [5526,]  105 #>  [5527,]  106 #>  [5528,]  105 #>  [5529,]  106 #>  [5530,]  106 #>  [5531,]  106 #>  [5532,]  106 #>  [5533,]  106 #>  [5534,]  105 #>  [5535,]  105 #>  [5536,]  106 #>  [5537,]  105 #>  [5538,]  105 #>  [5539,]  106 #>  [5540,]  106 #>  [5541,]  106 #>  [5542,]  105 #>  [5543,]  105 #>  [5544,]  106 #>  [5545,]  105 #>  [5546,]  105 #>  [5547,]  106 #>  [5548,]  106 #>  [5549,]  105 #>  [5550,]  106 #>  [5551,]  106 #>  [5552,]  105 #>  [5553,]  106 #>  [5554,]  106 #>  [5555,]  105 #>  [5556,]  105 #>  [5557,]  105 #>  [5558,]  106 #>  [5559,]  105 #>  [5560,]  106 #>  [5561,]  106 #>  [5562,]  105 #>  [5563,]  106 #>  [5564,]  105 #>  [5565,]  105 #>  [5566,]  106 #>  [5567,]  105 #>  [5568,]  105 #>  [5569,]  105 #>  [5570,]  106 #>  [5571,]  106 #>  [5572,]  105 #>  [5573,]  105 #>  [5574,]  106 #>  [5575,]  106 #>  [5576,]  106 #>  [5577,]  105 #>  [5578,]  106 #>  [5579,]  105 #>  [5580,]  106 #>  [5581,]  106 #>  [5582,]  105 #>  [5583,]  106 #>  [5584,]  106 #>  [5585,]  105 #>  [5586,]  106 #>  [5587,]  106 #>  [5588,]  106 #>  [5589,]  105 #>  [5590,]  106 #>  [5591,]  105 #>  [5592,]  106 #>  [5593,]  106 #>  [5594,]  105 #>  [5595,]  106 #>  [5596,]  105 #>  [5597,]  105 #>  [5598,]  105 #>  [5599,]  106 #>  [5600,]  105 #>  [5601,]  107 #>  [5602,]  107 #>  [5603,]  108 #>  [5604,]  107 #>  [5605,]  107 #>  [5606,]  108 #>  [5607,]  107 #>  [5608,]  107 #>  [5609,]  107 #>  [5610,]  107 #>  [5611,]  107 #>  [5612,]  108 #>  [5613,]  107 #>  [5614,]  107 #>  [5615,]  107 #>  [5616,]  107 #>  [5617,]  107 #>  [5618,]  107 #>  [5619,]  108 #>  [5620,]  107 #>  [5621,]  107 #>  [5622,]  107 #>  [5623,]  107 #>  [5624,]  107 #>  [5625,]  108 #>  [5626,]  107 #>  [5627,]  107 #>  [5628,]  108 #>  [5629,]  107 #>  [5630,]  107 #>  [5631,]  107 #>  [5632,]  107 #>  [5633,]  108 #>  [5634,]  108 #>  [5635,]  107 #>  [5636,]  107 #>  [5637,]  107 #>  [5638,]  107 #>  [5639,]  107 #>  [5640,]  107 #>  [5641,]  107 #>  [5642,]  107 #>  [5643,]  107 #>  [5644,]  107 #>  [5645,]  107 #>  [5646,]  107 #>  [5647,]  107 #>  [5648,]  107 #>  [5649,]  107 #>  [5650,]  107 #>  [5651,]  107 #>  [5652,]  107 #>  [5653,]  107 #>  [5654,]  107 #>  [5655,]  107 #>  [5656,]  107 #>  [5657,]  107 #>  [5658,]  107 #>  [5659,]  107 #>  [5660,]  108 #>  [5661,]  107 #>  [5662,]  107 #>  [5663,]  107 #>  [5664,]  107 #>  [5665,]  108 #>  [5666,]  107 #>  [5667,]  107 #>  [5668,]  107 #>  [5669,]  107 #>  [5670,]  108 #>  [5671,]  107 #>  [5672,]  107 #>  [5673,]  108 #>  [5674,]  107 #>  [5675,]  107 #>  [5676,]  107 #>  [5677,]  107 #>  [5678,]  107 #>  [5679,]  107 #>  [5680,]  107 #>  [5681,]  107 #>  [5682,]  107 #>  [5683,]  107 #>  [5684,]  107 #>  [5685,]  107 #>  [5686,]  107 #>  [5687,]  107 #>  [5688,]  107 #>  [5689,]  107 #>  [5690,]  107 #>  [5691,]  107 #>  [5692,]  107 #>  [5693,]  108 #>  [5694,]  107 #>  [5695,]  107 #>  [5696,]  107 #>  [5697,]  108 #>  [5698,]  108 #>  [5699,]  107 #>  [5700,]  107 #>  [5701,]  110 #>  [5702,]  110 #>  [5703,]  110 #>  [5704,]  109 #>  [5705,]  110 #>  [5706,]  110 #>  [5707,]  110 #>  [5708,]  109 #>  [5709,]  109 #>  [5710,]  109 #>  [5711,]  110 #>  [5712,]  110 #>  [5713,]  110 #>  [5714,]  110 #>  [5715,]  110 #>  [5716,]  110 #>  [5717,]  110 #>  [5718,]  110 #>  [5719,]  110 #>  [5720,]  110 #>  [5721,]  110 #>  [5722,]  110 #>  [5723,]  110 #>  [5724,]  110 #>  [5725,]  110 #>  [5726,]  110 #>  [5727,]  110 #>  [5728,]  110 #>  [5729,]  110 #>  [5730,]  110 #>  [5731,]  110 #>  [5732,]  110 #>  [5733,]  110 #>  [5734,]  110 #>  [5735,]  110 #>  [5736,]  110 #>  [5737,]  110 #>  [5738,]  110 #>  [5739,]  110 #>  [5740,]  110 #>  [5741,]  110 #>  [5742,]  110 #>  [5743,]  109 #>  [5744,]  110 #>  [5745,]  110 #>  [5746,]  110 #>  [5747,]  110 #>  [5748,]  110 #>  [5749,]  110 #>  [5750,]  110 #>  [5751,]  109 #>  [5752,]  110 #>  [5753,]  110 #>  [5754,]  110 #>  [5755,]  110 #>  [5756,]  110 #>  [5757,]  110 #>  [5758,]  110 #>  [5759,]  110 #>  [5760,]  109 #>  [5761,]  110 #>  [5762,]  110 #>  [5763,]  110 #>  [5764,]  109 #>  [5765,]  110 #>  [5766,]  110 #>  [5767,]  109 #>  [5768,]  110 #>  [5769,]  110 #>  [5770,]  110 #>  [5771,]  110 #>  [5772,]  110 #>  [5773,]  110 #>  [5774,]  110 #>  [5775,]  110 #>  [5776,]  110 #>  [5777,]  110 #>  [5778,]  109 #>  [5779,]  110 #>  [5780,]  110 #>  [5781,]  110 #>  [5782,]  110 #>  [5783,]  110 #>  [5784,]  110 #>  [5785,]  109 #>  [5786,]  110 #>  [5787,]  110 #>  [5788,]  110 #>  [5789,]  109 #>  [5790,]  110 #>  [5791,]  109 #>  [5792,]  110 #>  [5793,]  110 #>  [5794,]  110 #>  [5795,]  109 #>  [5796,]  110 #>  [5797,]  110 #>  [5798,]  110 #>  [5799,]  110 #>  [5800,]  110 #>  [5801,]  112 #>  [5802,]  111 #>  [5803,]  111 #>  [5804,]  111 #>  [5805,]  112 #>  [5806,]  112 #>  [5807,]  111 #>  [5808,]  112 #>  [5809,]  112 #>  [5810,]  111 #>  [5811,]  111 #>  [5812,]  112 #>  [5813,]  111 #>  [5814,]  112 #>  [5815,]  112 #>  [5816,]  111 #>  [5817,]  111 #>  [5818,]  111 #>  [5819,]  111 #>  [5820,]  112 #>  [5821,]  111 #>  [5822,]  111 #>  [5823,]  111 #>  [5824,]  111 #>  [5825,]  111 #>  [5826,]  112 #>  [5827,]  111 #>  [5828,]  112 #>  [5829,]  111 #>  [5830,]  111 #>  [5831,]  111 #>  [5832,]  111 #>  [5833,]  112 #>  [5834,]  111 #>  [5835,]  111 #>  [5836,]  111 #>  [5837,]  111 #>  [5838,]  112 #>  [5839,]  111 #>  [5840,]  111 #>  [5841,]  112 #>  [5842,]  112 #>  [5843,]  112 #>  [5844,]  111 #>  [5845,]  112 #>  [5846,]  112 #>  [5847,]  111 #>  [5848,]  111 #>  [5849,]  111 #>  [5850,]  112 #>  [5851,]  112 #>  [5852,]  111 #>  [5853,]  112 #>  [5854,]  111 #>  [5855,]  112 #>  [5856,]  112 #>  [5857,]  112 #>  [5858,]  112 #>  [5859,]  111 #>  [5860,]  112 #>  [5861,]  112 #>  [5862,]  111 #>  [5863,]  112 #>  [5864,]  112 #>  [5865,]  112 #>  [5866,]  112 #>  [5867,]  111 #>  [5868,]  112 #>  [5869,]  111 #>  [5870,]  111 #>  [5871,]  112 #>  [5872,]  112 #>  [5873,]  112 #>  [5874,]  112 #>  [5875,]  112 #>  [5876,]  112 #>  [5877,]  111 #>  [5878,]  112 #>  [5879,]  111 #>  [5880,]  111 #>  [5881,]  112 #>  [5882,]  111 #>  [5883,]  111 #>  [5884,]  112 #>  [5885,]  111 #>  [5886,]  111 #>  [5887,]  112 #>  [5888,]  111 #>  [5889,]  111 #>  [5890,]  112 #>  [5891,]  112 #>  [5892,]  112 #>  [5893,]  111 #>  [5894,]  112 #>  [5895,]  111 #>  [5896,]  112 #>  [5897,]  112 #>  [5898,]  111 #>  [5899,]  111 #>  [5900,]  111 #>  [5901,]  113 #>  [5902,]  113 #>  [5903,]  113 #>  [5904,]  113 #>  [5905,]  113 #>  [5906,]  114 #>  [5907,]  113 #>  [5908,]  114 #>  [5909,]  114 #>  [5910,]  113 #>  [5911,]  113 #>  [5912,]  114 #>  [5913,]  113 #>  [5914,]  113 #>  [5915,]  114 #>  [5916,]  113 #>  [5917,]  113 #>  [5918,]  113 #>  [5919,]  113 #>  [5920,]  113 #>  [5921,]  113 #>  [5922,]  113 #>  [5923,]  113 #>  [5924,]  113 #>  [5925,]  113 #>  [5926,]  114 #>  [5927,]  113 #>  [5928,]  113 #>  [5929,]  113 #>  [5930,]  113 #>  [5931,]  113 #>  [5932,]  113 #>  [5933,]  114 #>  [5934,]  113 #>  [5935,]  113 #>  [5936,]  113 #>  [5937,]  113 #>  [5938,]  113 #>  [5939,]  113 #>  [5940,]  113 #>  [5941,]  113 #>  [5942,]  113 #>  [5943,]  114 #>  [5944,]  113 #>  [5945,]  113 #>  [5946,]  114 #>  [5947,]  113 #>  [5948,]  113 #>  [5949,]  113 #>  [5950,]  113 #>  [5951,]  114 #>  [5952,]  113 #>  [5953,]  113 #>  [5954,]  113 #>  [5955,]  113 #>  [5956,]  114 #>  [5957,]  114 #>  [5958,]  113 #>  [5959,]  113 #>  [5960,]  113 #>  [5961,]  114 #>  [5962,]  113 #>  [5963,]  113 #>  [5964,]  114 #>  [5965,]  113 #>  [5966,]  114 #>  [5967,]  113 #>  [5968,]  114 #>  [5969,]  113 #>  [5970,]  113 #>  [5971,]  113 #>  [5972,]  113 #>  [5973,]  113 #>  [5974,]  113 #>  [5975,]  113 #>  [5976,]  114 #>  [5977,]  113 #>  [5978,]  113 #>  [5979,]  113 #>  [5980,]  113 #>  [5981,]  113 #>  [5982,]  113 #>  [5983,]  113 #>  [5984,]  113 #>  [5985,]  113 #>  [5986,]  113 #>  [5987,]  113 #>  [5988,]  113 #>  [5989,]  113 #>  [5990,]  113 #>  [5991,]  113 #>  [5992,]  113 #>  [5993,]  113 #>  [5994,]  114 #>  [5995,]  113 #>  [5996,]  113 #>  [5997,]  113 #>  [5998,]  113 #>  [5999,]  113 #>  [6000,]  113 #>  [6001,]  115 #>  [6002,]  116 #>  [6003,]  116 #>  [6004,]  115 #>  [6005,]  115 #>  [6006,]  116 #>  [6007,]  116 #>  [6008,]  115 #>  [6009,]  115 #>  [6010,]  115 #>  [6011,]  115 #>  [6012,]  116 #>  [6013,]  115 #>  [6014,]  115 #>  [6015,]  115 #>  [6016,]  115 #>  [6017,]  115 #>  [6018,]  116 #>  [6019,]  116 #>  [6020,]  116 #>  [6021,]  115 #>  [6022,]  115 #>  [6023,]  116 #>  [6024,]  115 #>  [6025,]  116 #>  [6026,]  115 #>  [6027,]  115 #>  [6028,]  116 #>  [6029,]  115 #>  [6030,]  115 #>  [6031,]  116 #>  [6032,]  116 #>  [6033,]  116 #>  [6034,]  116 #>  [6035,]  115 #>  [6036,]  115 #>  [6037,]  115 #>  [6038,]  115 #>  [6039,]  115 #>  [6040,]  116 #>  [6041,]  115 #>  [6042,]  116 #>  [6043,]  115 #>  [6044,]  115 #>  [6045,]  115 #>  [6046,]  115 #>  [6047,]  115 #>  [6048,]  116 #>  [6049,]  115 #>  [6050,]  115 #>  [6051,]  115 #>  [6052,]  115 #>  [6053,]  115 #>  [6054,]  115 #>  [6055,]  115 #>  [6056,]  116 #>  [6057,]  115 #>  [6058,]  115 #>  [6059,]  115 #>  [6060,]  116 #>  [6061,]  116 #>  [6062,]  115 #>  [6063,]  115 #>  [6064,]  116 #>  [6065,]  116 #>  [6066,]  115 #>  [6067,]  115 #>  [6068,]  115 #>  [6069,]  115 #>  [6070,]  116 #>  [6071,]  116 #>  [6072,]  115 #>  [6073,]  116 #>  [6074,]  115 #>  [6075,]  115 #>  [6076,]  115 #>  [6077,]  115 #>  [6078,]  116 #>  [6079,]  115 #>  [6080,]  115 #>  [6081,]  115 #>  [6082,]  115 #>  [6083,]  115 #>  [6084,]  116 #>  [6085,]  115 #>  [6086,]  115 #>  [6087,]  115 #>  [6088,]  115 #>  [6089,]  115 #>  [6090,]  115 #>  [6091,]  115 #>  [6092,]  115 #>  [6093,]  116 #>  [6094,]  115 #>  [6095,]  115 #>  [6096,]  115 #>  [6097,]  116 #>  [6098,]  116 #>  [6099,]  115 #>  [6100,]  116 #>  [6101,]  118 #>  [6102,]  118 #>  [6103,]  118 #>  [6104,]  117 #>  [6105,]  118 #>  [6106,]  118 #>  [6107,]  118 #>  [6108,]  117 #>  [6109,]  117 #>  [6110,]  118 #>  [6111,]  117 #>  [6112,]  118 #>  [6113,]  117 #>  [6114,]  118 #>  [6115,]  118 #>  [6116,]  118 #>  [6117,]  117 #>  [6118,]  118 #>  [6119,]  118 #>  [6120,]  118 #>  [6121,]  118 #>  [6122,]  117 #>  [6123,]  118 #>  [6124,]  118 #>  [6125,]  118 #>  [6126,]  118 #>  [6127,]  117 #>  [6128,]  118 #>  [6129,]  118 #>  [6130,]  118 #>  [6131,]  118 #>  [6132,]  118 #>  [6133,]  118 #>  [6134,]  118 #>  [6135,]  117 #>  [6136,]  118 #>  [6137,]  118 #>  [6138,]  118 #>  [6139,]  118 #>  [6140,]  118 #>  [6141,]  118 #>  [6142,]  118 #>  [6143,]  117 #>  [6144,]  117 #>  [6145,]  118 #>  [6146,]  118 #>  [6147,]  118 #>  [6148,]  118 #>  [6149,]  117 #>  [6150,]  118 #>  [6151,]  118 #>  [6152,]  117 #>  [6153,]  118 #>  [6154,]  118 #>  [6155,]  117 #>  [6156,]  118 #>  [6157,]  118 #>  [6158,]  117 #>  [6159,]  118 #>  [6160,]  118 #>  [6161,]  118 #>  [6162,]  118 #>  [6163,]  118 #>  [6164,]  118 #>  [6165,]  118 #>  [6166,]  117 #>  [6167,]  118 #>  [6168,]  118 #>  [6169,]  118 #>  [6170,]  118 #>  [6171,]  118 #>  [6172,]  118 #>  [6173,]  118 #>  [6174,]  118 #>  [6175,]  118 #>  [6176,]  118 #>  [6177,]  118 #>  [6178,]  118 #>  [6179,]  117 #>  [6180,]  117 #>  [6181,]  117 #>  [6182,]  117 #>  [6183,]  117 #>  [6184,]  118 #>  [6185,]  118 #>  [6186,]  118 #>  [6187,]  117 #>  [6188,]  117 #>  [6189,]  117 #>  [6190,]  117 #>  [6191,]  118 #>  [6192,]  117 #>  [6193,]  118 #>  [6194,]  118 #>  [6195,]  117 #>  [6196,]  118 #>  [6197,]  118 #>  [6198,]  118 #>  [6199,]  117 #>  [6200,]  118 #>  [6201,]  120 #>  [6202,]  120 #>  [6203,]  120 #>  [6204,]  120 #>  [6205,]  120 #>  [6206,]  120 #>  [6207,]  120 #>  [6208,]  120 #>  [6209,]  120 #>  [6210,]  119 #>  [6211,]  119 #>  [6212,]  120 #>  [6213,]  120 #>  [6214,]  119 #>  [6215,]  120 #>  [6216,]  120 #>  [6217,]  120 #>  [6218,]  120 #>  [6219,]  120 #>  [6220,]  120 #>  [6221,]  120 #>  [6222,]  120 #>  [6223,]  120 #>  [6224,]  120 #>  [6225,]  120 #>  [6226,]  120 #>  [6227,]  120 #>  [6228,]  120 #>  [6229,]  120 #>  [6230,]  120 #>  [6231,]  120 #>  [6232,]  120 #>  [6233,]  120 #>  [6234,]  120 #>  [6235,]  120 #>  [6236,]  120 #>  [6237,]  120 #>  [6238,]  120 #>  [6239,]  120 #>  [6240,]  119 #>  [6241,]  120 #>  [6242,]  120 #>  [6243,]  120 #>  [6244,]  120 #>  [6245,]  120 #>  [6246,]  120 #>  [6247,]  120 #>  [6248,]  119 #>  [6249,]  120 #>  [6250,]  120 #>  [6251,]  120 #>  [6252,]  120 #>  [6253,]  120 #>  [6254,]  120 #>  [6255,]  120 #>  [6256,]  120 #>  [6257,]  120 #>  [6258,]  120 #>  [6259,]  120 #>  [6260,]  120 #>  [6261,]  120 #>  [6262,]  120 #>  [6263,]  120 #>  [6264,]  120 #>  [6265,]  120 #>  [6266,]  120 #>  [6267,]  120 #>  [6268,]  120 #>  [6269,]  120 #>  [6270,]  119 #>  [6271,]  120 #>  [6272,]  120 #>  [6273,]  120 #>  [6274,]  120 #>  [6275,]  120 #>  [6276,]  120 #>  [6277,]  120 #>  [6278,]  120 #>  [6279,]  120 #>  [6280,]  120 #>  [6281,]  120 #>  [6282,]  120 #>  [6283,]  120 #>  [6284,]  120 #>  [6285,]  120 #>  [6286,]  120 #>  [6287,]  120 #>  [6288,]  120 #>  [6289,]  120 #>  [6290,]  120 #>  [6291,]  120 #>  [6292,]  120 #>  [6293,]  120 #>  [6294,]  120 #>  [6295,]  120 #>  [6296,]  120 #>  [6297,]  120 #>  [6298,]  120 #>  [6299,]  120 #>  [6300,]  120 #>  [6301,]  122 #>  [6302,]  121 #>  [6303,]  122 #>  [6304,]  122 #>  [6305,]  121 #>  [6306,]  121 #>  [6307,]  122 #>  [6308,]  121 #>  [6309,]  122 #>  [6310,]  122 #>  [6311,]  121 #>  [6312,]  121 #>  [6313,]  122 #>  [6314,]  122 #>  [6315,]  121 #>  [6316,]  122 #>  [6317,]  121 #>  [6318,]  121 #>  [6319,]  121 #>  [6320,]  122 #>  [6321,]  121 #>  [6322,]  122 #>  [6323,]  121 #>  [6324,]  122 #>  [6325,]  122 #>  [6326,]  121 #>  [6327,]  122 #>  [6328,]  122 #>  [6329,]  121 #>  [6330,]  121 #>  [6331,]  121 #>  [6332,]  121 #>  [6333,]  121 #>  [6334,]  121 #>  [6335,]  121 #>  [6336,]  122 #>  [6337,]  121 #>  [6338,]  121 #>  [6339,]  122 #>  [6340,]  121 #>  [6341,]  122 #>  [6342,]  121 #>  [6343,]  121 #>  [6344,]  121 #>  [6345,]  122 #>  [6346,]  121 #>  [6347,]  121 #>  [6348,]  121 #>  [6349,]  122 #>  [6350,]  122 #>  [6351,]  121 #>  [6352,]  122 #>  [6353,]  122 #>  [6354,]  122 #>  [6355,]  122 #>  [6356,]  121 #>  [6357,]  122 #>  [6358,]  122 #>  [6359,]  122 #>  [6360,]  121 #>  [6361,]  121 #>  [6362,]  121 #>  [6363,]  121 #>  [6364,]  121 #>  [6365,]  121 #>  [6366,]  121 #>  [6367,]  122 #>  [6368,]  121 #>  [6369,]  121 #>  [6370,]  121 #>  [6371,]  122 #>  [6372,]  122 #>  [6373,]  122 #>  [6374,]  122 #>  [6375,]  121 #>  [6376,]  122 #>  [6377,]  121 #>  [6378,]  121 #>  [6379,]  121 #>  [6380,]  122 #>  [6381,]  121 #>  [6382,]  121 #>  [6383,]  121 #>  [6384,]  121 #>  [6385,]  122 #>  [6386,]  122 #>  [6387,]  122 #>  [6388,]  122 #>  [6389,]  121 #>  [6390,]  122 #>  [6391,]  122 #>  [6392,]  121 #>  [6393,]  121 #>  [6394,]  121 #>  [6395,]  121 #>  [6396,]  121 #>  [6397,]  121 #>  [6398,]  121 #>  [6399,]  121 #>  [6400,]  121 #>  [6401,]  123 #>  [6402,]  123 #>  [6403,]  123 #>  [6404,]  123 #>  [6405,]  123 #>  [6406,]  123 #>  [6407,]  123 #>  [6408,]  123 #>  [6409,]  123 #>  [6410,]  123 #>  [6411,]  123 #>  [6412,]  123 #>  [6413,]  123 #>  [6414,]  123 #>  [6415,]  123 #>  [6416,]  123 #>  [6417,]  123 #>  [6418,]  123 #>  [6419,]  123 #>  [6420,]  123 #>  [6421,]  123 #>  [6422,]  123 #>  [6423,]  123 #>  [6424,]  123 #>  [6425,]  123 #>  [6426,]  123 #>  [6427,]  123 #>  [6428,]  123 #>  [6429,]  123 #>  [6430,]  123 #>  [6431,]  123 #>  [6432,]  123 #>  [6433,]  123 #>  [6434,]  123 #>  [6435,]  123 #>  [6436,]  123 #>  [6437,]  123 #>  [6438,]  123 #>  [6439,]  123 #>  [6440,]  123 #>  [6441,]  123 #>  [6442,]  123 #>  [6443,]  123 #>  [6444,]  123 #>  [6445,]  123 #>  [6446,]  123 #>  [6447,]  123 #>  [6448,]  123 #>  [6449,]  123 #>  [6450,]  123 #>  [6451,]  123 #>  [6452,]  123 #>  [6453,]  123 #>  [6454,]  123 #>  [6455,]  123 #>  [6456,]  123 #>  [6457,]  123 #>  [6458,]  123 #>  [6459,]  123 #>  [6460,]  123 #>  [6461,]  123 #>  [6462,]  123 #>  [6463,]  123 #>  [6464,]  123 #>  [6465,]  123 #>  [6466,]  123 #>  [6467,]  123 #>  [6468,]  123 #>  [6469,]  123 #>  [6470,]  123 #>  [6471,]  123 #>  [6472,]  123 #>  [6473,]  123 #>  [6474,]  123 #>  [6475,]  123 #>  [6476,]  123 #>  [6477,]  123 #>  [6478,]  123 #>  [6479,]  123 #>  [6480,]  123 #>  [6481,]  123 #>  [6482,]  123 #>  [6483,]  123 #>  [6484,]  123 #>  [6485,]  123 #>  [6486,]  123 #>  [6487,]  123 #>  [6488,]  123 #>  [6489,]  123 #>  [6490,]  123 #>  [6491,]  123 #>  [6492,]  123 #>  [6493,]  123 #>  [6494,]  123 #>  [6495,]  123 #>  [6496,]  123 #>  [6497,]  123 #>  [6498,]  123 #>  [6499,]  123 #>  [6500,]  123 #>  [6501,]  124 #>  [6502,]  125 #>  [6503,]  124 #>  [6504,]  125 #>  [6505,]  125 #>  [6506,]  124 #>  [6507,]  125 #>  [6508,]  125 #>  [6509,]  125 #>  [6510,]  125 #>  [6511,]  124 #>  [6512,]  125 #>  [6513,]  125 #>  [6514,]  124 #>  [6515,]  125 #>  [6516,]  124 #>  [6517,]  125 #>  [6518,]  125 #>  [6519,]  124 #>  [6520,]  125 #>  [6521,]  125 #>  [6522,]  125 #>  [6523,]  125 #>  [6524,]  125 #>  [6525,]  125 #>  [6526,]  125 #>  [6527,]  125 #>  [6528,]  124 #>  [6529,]  125 #>  [6530,]  125 #>  [6531,]  125 #>  [6532,]  125 #>  [6533,]  125 #>  [6534,]  124 #>  [6535,]  124 #>  [6536,]  125 #>  [6537,]  124 #>  [6538,]  124 #>  [6539,]  125 #>  [6540,]  125 #>  [6541,]  125 #>  [6542,]  124 #>  [6543,]  125 #>  [6544,]  125 #>  [6545,]  124 #>  [6546,]  125 #>  [6547,]  125 #>  [6548,]  125 #>  [6549,]  124 #>  [6550,]  125 #>  [6551,]  125 #>  [6552,]  124 #>  [6553,]  125 #>  [6554,]  125 #>  [6555,]  125 #>  [6556,]  125 #>  [6557,]  125 #>  [6558,]  125 #>  [6559,]  125 #>  [6560,]  125 #>  [6561,]  125 #>  [6562,]  125 #>  [6563,]  125 #>  [6564,]  124 #>  [6565,]  125 #>  [6566,]  125 #>  [6567,]  125 #>  [6568,]  124 #>  [6569,]  125 #>  [6570,]  125 #>  [6571,]  125 #>  [6572,]  124 #>  [6573,]  124 #>  [6574,]  125 #>  [6575,]  125 #>  [6576,]  125 #>  [6577,]  124 #>  [6578,]  125 #>  [6579,]  125 #>  [6580,]  125 #>  [6581,]  125 #>  [6582,]  125 #>  [6583,]  125 #>  [6584,]  125 #>  [6585,]  125 #>  [6586,]  125 #>  [6587,]  125 #>  [6588,]  125 #>  [6589,]  124 #>  [6590,]  125 #>  [6591,]  125 #>  [6592,]  125 #>  [6593,]  125 #>  [6594,]  124 #>  [6595,]  125 #>  [6596,]  124 #>  [6597,]  124 #>  [6598,]  125 #>  [6599,]  125 #>  [6600,]  124 #>  [6601,]  127 #>  [6602,]  126 #>  [6603,]  127 #>  [6604,]  127 #>  [6605,]  127 #>  [6606,]  126 #>  [6607,]  127 #>  [6608,]  127 #>  [6609,]  127 #>  [6610,]  127 #>  [6611,]  126 #>  [6612,]  126 #>  [6613,]  127 #>  [6614,]  127 #>  [6615,]  126 #>  [6616,]  127 #>  [6617,]  126 #>  [6618,]  127 #>  [6619,]  126 #>  [6620,]  127 #>  [6621,]  127 #>  [6622,]  127 #>  [6623,]  126 #>  [6624,]  127 #>  [6625,]  127 #>  [6626,]  126 #>  [6627,]  127 #>  [6628,]  127 #>  [6629,]  126 #>  [6630,]  126 #>  [6631,]  126 #>  [6632,]  127 #>  [6633,]  127 #>  [6634,]  126 #>  [6635,]  126 #>  [6636,]  127 #>  [6637,]  126 #>  [6638,]  127 #>  [6639,]  127 #>  [6640,]  127 #>  [6641,]  127 #>  [6642,]  126 #>  [6643,]  126 #>  [6644,]  126 #>  [6645,]  127 #>  [6646,]  126 #>  [6647,]  126 #>  [6648,]  126 #>  [6649,]  127 #>  [6650,]  127 #>  [6651,]  127 #>  [6652,]  127 #>  [6653,]  127 #>  [6654,]  127 #>  [6655,]  127 #>  [6656,]  126 #>  [6657,]  127 #>  [6658,]  127 #>  [6659,]  127 #>  [6660,]  126 #>  [6661,]  126 #>  [6662,]  127 #>  [6663,]  126 #>  [6664,]  126 #>  [6665,]  126 #>  [6666,]  126 #>  [6667,]  127 #>  [6668,]  126 #>  [6669,]  127 #>  [6670,]  126 #>  [6671,]  127 #>  [6672,]  127 #>  [6673,]  127 #>  [6674,]  127 #>  [6675,]  126 #>  [6676,]  127 #>  [6677,]  127 #>  [6678,]  126 #>  [6679,]  126 #>  [6680,]  127 #>  [6681,]  126 #>  [6682,]  127 #>  [6683,]  127 #>  [6684,]  127 #>  [6685,]  127 #>  [6686,]  127 #>  [6687,]  127 #>  [6688,]  127 #>  [6689,]  127 #>  [6690,]  127 #>  [6691,]  127 #>  [6692,]  126 #>  [6693,]  126 #>  [6694,]  126 #>  [6695,]  126 #>  [6696,]  126 #>  [6697,]  127 #>  [6698,]  127 #>  [6699,]  127 #>  [6700,]  126 #>  [6701,]  128 #>  [6702,]  128 #>  [6703,]  128 #>  [6704,]  128 #>  [6705,]  128 #>  [6706,]  128 #>  [6707,]  128 #>  [6708,]  128 #>  [6709,]  129 #>  [6710,]  128 #>  [6711,]  128 #>  [6712,]  128 #>  [6713,]  129 #>  [6714,]  128 #>  [6715,]  128 #>  [6716,]  128 #>  [6717,]  129 #>  [6718,]  129 #>  [6719,]  128 #>  [6720,]  128 #>  [6721,]  128 #>  [6722,]  128 #>  [6723,]  128 #>  [6724,]  128 #>  [6725,]  128 #>  [6726,]  128 #>  [6727,]  129 #>  [6728,]  128 #>  [6729,]  128 #>  [6730,]  128 #>  [6731,]  128 #>  [6732,]  128 #>  [6733,]  128 #>  [6734,]  128 #>  [6735,]  128 #>  [6736,]  128 #>  [6737,]  128 #>  [6738,]  128 #>  [6739,]  128 #>  [6740,]  128 #>  [6741,]  128 #>  [6742,]  129 #>  [6743,]  128 #>  [6744,]  128 #>  [6745,]  128 #>  [6746,]  128 #>  [6747,]  128 #>  [6748,]  128 #>  [6749,]  128 #>  [6750,]  128 #>  [6751,]  129 #>  [6752,]  128 #>  [6753,]  129 #>  [6754,]  128 #>  [6755,]  128 #>  [6756,]  128 #>  [6757,]  128 #>  [6758,]  128 #>  [6759,]  128 #>  [6760,]  128 #>  [6761,]  128 #>  [6762,]  128 #>  [6763,]  128 #>  [6764,]  128 #>  [6765,]  129 #>  [6766,]  129 #>  [6767,]  128 #>  [6768,]  128 #>  [6769,]  128 #>  [6770,]  128 #>  [6771,]  128 #>  [6772,]  128 #>  [6773,]  128 #>  [6774,]  128 #>  [6775,]  128 #>  [6776,]  128 #>  [6777,]  128 #>  [6778,]  128 #>  [6779,]  129 #>  [6780,]  128 #>  [6781,]  128 #>  [6782,]  129 #>  [6783,]  128 #>  [6784,]  129 #>  [6785,]  128 #>  [6786,]  128 #>  [6787,]  128 #>  [6788,]  128 #>  [6789,]  128 #>  [6790,]  128 #>  [6791,]  129 #>  [6792,]  128 #>  [6793,]  129 #>  [6794,]  129 #>  [6795,]  128 #>  [6796,]  128 #>  [6797,]  128 #>  [6798,]  128 #>  [6799,]  128 #>  [6800,]  128 #>  [6801,]  130 #>  [6802,]  130 #>  [6803,]  130 #>  [6804,]  131 #>  [6805,]  130 #>  [6806,]  130 #>  [6807,]  130 #>  [6808,]  130 #>  [6809,]  130 #>  [6810,]  131 #>  [6811,]  130 #>  [6812,]  130 #>  [6813,]  130 #>  [6814,]  130 #>  [6815,]  130 #>  [6816,]  130 #>  [6817,]  130 #>  [6818,]  131 #>  [6819,]  130 #>  [6820,]  130 #>  [6821,]  131 #>  [6822,]  130 #>  [6823,]  130 #>  [6824,]  130 #>  [6825,]  131 #>  [6826,]  130 #>  [6827,]  130 #>  [6828,]  130 #>  [6829,]  130 #>  [6830,]  130 #>  [6831,]  130 #>  [6832,]  130 #>  [6833,]  130 #>  [6834,]  130 #>  [6835,]  130 #>  [6836,]  130 #>  [6837,]  130 #>  [6838,]  130 #>  [6839,]  131 #>  [6840,]  130 #>  [6841,]  130 #>  [6842,]  130 #>  [6843,]  131 #>  [6844,]  130 #>  [6845,]  131 #>  [6846,]  130 #>  [6847,]  130 #>  [6848,]  130 #>  [6849,]  130 #>  [6850,]  130 #>  [6851,]  130 #>  [6852,]  130 #>  [6853,]  131 #>  [6854,]  130 #>  [6855,]  130 #>  [6856,]  130 #>  [6857,]  130 #>  [6858,]  130 #>  [6859,]  130 #>  [6860,]  130 #>  [6861,]  131 #>  [6862,]  130 #>  [6863,]  130 #>  [6864,]  130 #>  [6865,]  130 #>  [6866,]  130 #>  [6867,]  130 #>  [6868,]  130 #>  [6869,]  130 #>  [6870,]  130 #>  [6871,]  130 #>  [6872,]  131 #>  [6873,]  131 #>  [6874,]  131 #>  [6875,]  131 #>  [6876,]  131 #>  [6877,]  131 #>  [6878,]  130 #>  [6879,]  130 #>  [6880,]  130 #>  [6881,]  130 #>  [6882,]  130 #>  [6883,]  130 #>  [6884,]  131 #>  [6885,]  130 #>  [6886,]  130 #>  [6887,]  130 #>  [6888,]  130 #>  [6889,]  130 #>  [6890,]  130 #>  [6891,]  130 #>  [6892,]  130 #>  [6893,]  130 #>  [6894,]  131 #>  [6895,]  131 #>  [6896,]  130 #>  [6897,]  130 #>  [6898,]  130 #>  [6899,]  130 #>  [6900,]  131 #>  [6901,]  132 #>  [6902,]  133 #>  [6903,]  133 #>  [6904,]  132 #>  [6905,]  133 #>  [6906,]  133 #>  [6907,]  133 #>  [6908,]  132 #>  [6909,]  132 #>  [6910,]  133 #>  [6911,]  132 #>  [6912,]  133 #>  [6913,]  132 #>  [6914,]  132 #>  [6915,]  132 #>  [6916,]  132 #>  [6917,]  132 #>  [6918,]  133 #>  [6919,]  133 #>  [6920,]  133 #>  [6921,]  132 #>  [6922,]  132 #>  [6923,]  133 #>  [6924,]  133 #>  [6925,]  133 #>  [6926,]  133 #>  [6927,]  132 #>  [6928,]  133 #>  [6929,]  133 #>  [6930,]  132 #>  [6931,]  133 #>  [6932,]  133 #>  [6933,]  133 #>  [6934,]  133 #>  [6935,]  132 #>  [6936,]  133 #>  [6937,]  132 #>  [6938,]  133 #>  [6939,]  133 #>  [6940,]  133 #>  [6941,]  132 #>  [6942,]  133 #>  [6943,]  132 #>  [6944,]  132 #>  [6945,]  132 #>  [6946,]  132 #>  [6947,]  133 #>  [6948,]  133 #>  [6949,]  132 #>  [6950,]  133 #>  [6951,]  133 #>  [6952,]  132 #>  [6953,]  133 #>  [6954,]  132 #>  [6955,]  132 #>  [6956,]  133 #>  [6957,]  133 #>  [6958,]  132 #>  [6959,]  133 #>  [6960,]  133 #>  [6961,]  133 #>  [6962,]  132 #>  [6963,]  133 #>  [6964,]  133 #>  [6965,]  133 #>  [6966,]  132 #>  [6967,]  132 #>  [6968,]  132 #>  [6969,]  132 #>  [6970,]  133 #>  [6971,]  133 #>  [6972,]  133 #>  [6973,]  133 #>  [6974,]  132 #>  [6975,]  133 #>  [6976,]  133 #>  [6977,]  133 #>  [6978,]  133 #>  [6979,]  132 #>  [6980,]  132 #>  [6981,]  132 #>  [6982,]  132 #>  [6983,]  132 #>  [6984,]  133 #>  [6985,]  132 #>  [6986,]  133 #>  [6987,]  132 #>  [6988,]  132 #>  [6989,]  132 #>  [6990,]  132 #>  [6991,]  132 #>  [6992,]  132 #>  [6993,]  133 #>  [6994,]  133 #>  [6995,]  132 #>  [6996,]  132 #>  [6997,]  133 #>  [6998,]  133 #>  [6999,]  132 #>  [7000,]  133 #>  [7001,]  135 #>  [7002,]  134 #>  [7003,]  134 #>  [7004,]  134 #>  [7005,]  134 #>  [7006,]  134 #>  [7007,]  134 #>  [7008,]  134 #>  [7009,]  134 #>  [7010,]  134 #>  [7011,]  134 #>  [7012,]  134 #>  [7013,]  134 #>  [7014,]  135 #>  [7015,]  135 #>  [7016,]  135 #>  [7017,]  134 #>  [7018,]  134 #>  [7019,]  134 #>  [7020,]  134 #>  [7021,]  134 #>  [7022,]  134 #>  [7023,]  134 #>  [7024,]  134 #>  [7025,]  134 #>  [7026,]  134 #>  [7027,]  134 #>  [7028,]  134 #>  [7029,]  134 #>  [7030,]  134 #>  [7031,]  134 #>  [7032,]  134 #>  [7033,]  134 #>  [7034,]  134 #>  [7035,]  134 #>  [7036,]  134 #>  [7037,]  134 #>  [7038,]  134 #>  [7039,]  134 #>  [7040,]  134 #>  [7041,]  135 #>  [7042,]  134 #>  [7043,]  134 #>  [7044,]  135 #>  [7045,]  134 #>  [7046,]  134 #>  [7047,]  134 #>  [7048,]  134 #>  [7049,]  134 #>  [7050,]  135 #>  [7051,]  134 #>  [7052,]  134 #>  [7053,]  134 #>  [7054,]  134 #>  [7055,]  134 #>  [7056,]  134 #>  [7057,]  134 #>  [7058,]  134 #>  [7059,]  135 #>  [7060,]  134 #>  [7061,]  134 #>  [7062,]  134 #>  [7063,]  134 #>  [7064,]  134 #>  [7065,]  134 #>  [7066,]  134 #>  [7067,]  134 #>  [7068,]  134 #>  [7069,]  134 #>  [7070,]  135 #>  [7071,]  134 #>  [7072,]  134 #>  [7073,]  135 #>  [7074,]  134 #>  [7075,]  134 #>  [7076,]  134 #>  [7077,]  134 #>  [7078,]  134 #>  [7079,]  134 #>  [7080,]  134 #>  [7081,]  134 #>  [7082,]  134 #>  [7083,]  134 #>  [7084,]  134 #>  [7085,]  134 #>  [7086,]  134 #>  [7087,]  134 #>  [7088,]  134 #>  [7089,]  134 #>  [7090,]  134 #>  [7091,]  134 #>  [7092,]  134 #>  [7093,]  134 #>  [7094,]  134 #>  [7095,]  134 #>  [7096,]  135 #>  [7097,]  134 #>  [7098,]  134 #>  [7099,]  135 #>  [7100,]  134 #>  [7101,]  137 #>  [7102,]  137 #>  [7103,]  136 #>  [7104,]  137 #>  [7105,]  137 #>  [7106,]  137 #>  [7107,]  137 #>  [7108,]  137 #>  [7109,]  137 #>  [7110,]  137 #>  [7111,]  136 #>  [7112,]  136 #>  [7113,]  137 #>  [7114,]  136 #>  [7115,]  137 #>  [7116,]  137 #>  [7117,]  137 #>  [7118,]  137 #>  [7119,]  136 #>  [7120,]  136 #>  [7121,]  137 #>  [7122,]  136 #>  [7123,]  137 #>  [7124,]  137 #>  [7125,]  137 #>  [7126,]  136 #>  [7127,]  137 #>  [7128,]  137 #>  [7129,]  136 #>  [7130,]  136 #>  [7131,]  137 #>  [7132,]  136 #>  [7133,]  137 #>  [7134,]  137 #>  [7135,]  137 #>  [7136,]  136 #>  [7137,]  137 #>  [7138,]  137 #>  [7139,]  137 #>  [7140,]  136 #>  [7141,]  136 #>  [7142,]  136 #>  [7143,]  137 #>  [7144,]  137 #>  [7145,]  137 #>  [7146,]  137 #>  [7147,]  137 #>  [7148,]  136 #>  [7149,]  137 #>  [7150,]  137 #>  [7151,]  136 #>  [7152,]  137 #>  [7153,]  137 #>  [7154,]  136 #>  [7155,]  137 #>  [7156,]  137 #>  [7157,]  137 #>  [7158,]  137 #>  [7159,]  137 #>  [7160,]  136 #>  [7161,]  137 #>  [7162,]  136 #>  [7163,]  136 #>  [7164,]  137 #>  [7165,]  137 #>  [7166,]  136 #>  [7167,]  137 #>  [7168,]  136 #>  [7169,]  136 #>  [7170,]  137 #>  [7171,]  137 #>  [7172,]  137 #>  [7173,]  137 #>  [7174,]  137 #>  [7175,]  137 #>  [7176,]  137 #>  [7177,]  137 #>  [7178,]  137 #>  [7179,]  137 #>  [7180,]  136 #>  [7181,]  136 #>  [7182,]  137 #>  [7183,]  136 #>  [7184,]  137 #>  [7185,]  137 #>  [7186,]  137 #>  [7187,]  137 #>  [7188,]  137 #>  [7189,]  136 #>  [7190,]  137 #>  [7191,]  136 #>  [7192,]  137 #>  [7193,]  137 #>  [7194,]  137 #>  [7195,]  137 #>  [7196,]  137 #>  [7197,]  137 #>  [7198,]  137 #>  [7199,]  137 #>  [7200,]  137 #>  [7201,]  138 #>  [7202,]  139 #>  [7203,]  139 #>  [7204,]  138 #>  [7205,]  138 #>  [7206,]  139 #>  [7207,]  139 #>  [7208,]  138 #>  [7209,]  138 #>  [7210,]  139 #>  [7211,]  138 #>  [7212,]  139 #>  [7213,]  138 #>  [7214,]  138 #>  [7215,]  138 #>  [7216,]  138 #>  [7217,]  138 #>  [7218,]  139 #>  [7219,]  139 #>  [7220,]  139 #>  [7221,]  138 #>  [7222,]  138 #>  [7223,]  139 #>  [7224,]  138 #>  [7225,]  139 #>  [7226,]  138 #>  [7227,]  138 #>  [7228,]  139 #>  [7229,]  139 #>  [7230,]  138 #>  [7231,]  139 #>  [7232,]  139 #>  [7233,]  139 #>  [7234,]  139 #>  [7235,]  138 #>  [7236,]  139 #>  [7237,]  138 #>  [7238,]  138 #>  [7239,]  139 #>  [7240,]  139 #>  [7241,]  138 #>  [7242,]  139 #>  [7243,]  138 #>  [7244,]  138 #>  [7245,]  138 #>  [7246,]  138 #>  [7247,]  139 #>  [7248,]  139 #>  [7249,]  138 #>  [7250,]  139 #>  [7251,]  138 #>  [7252,]  138 #>  [7253,]  139 #>  [7254,]  138 #>  [7255,]  138 #>  [7256,]  139 #>  [7257,]  139 #>  [7258,]  138 #>  [7259,]  138 #>  [7260,]  139 #>  [7261,]  139 #>  [7262,]  138 #>  [7263,]  139 #>  [7264,]  139 #>  [7265,]  139 #>  [7266,]  138 #>  [7267,]  138 #>  [7268,]  138 #>  [7269,]  138 #>  [7270,]  139 #>  [7271,]  139 #>  [7272,]  139 #>  [7273,]  139 #>  [7274,]  138 #>  [7275,]  139 #>  [7276,]  139 #>  [7277,]  139 #>  [7278,]  139 #>  [7279,]  138 #>  [7280,]  138 #>  [7281,]  138 #>  [7282,]  138 #>  [7283,]  138 #>  [7284,]  139 #>  [7285,]  138 #>  [7286,]  139 #>  [7287,]  138 #>  [7288,]  138 #>  [7289,]  138 #>  [7290,]  138 #>  [7291,]  138 #>  [7292,]  138 #>  [7293,]  139 #>  [7294,]  139 #>  [7295,]  138 #>  [7296,]  138 #>  [7297,]  139 #>  [7298,]  139 #>  [7299,]  138 #>  [7300,]  139 #>  [7301,]  141 #>  [7302,]  141 #>  [7303,]  141 #>  [7304,]  141 #>  [7305,]  141 #>  [7306,]  141 #>  [7307,]  141 #>  [7308,]  141 #>  [7309,]  141 #>  [7310,]  141 #>  [7311,]  141 #>  [7312,]  141 #>  [7313,]  141 #>  [7314,]  141 #>  [7315,]  140 #>  [7316,]  141 #>  [7317,]  141 #>  [7318,]  141 #>  [7319,]  141 #>  [7320,]  141 #>  [7321,]  141 #>  [7322,]  141 #>  [7323,]  141 #>  [7324,]  141 #>  [7325,]  141 #>  [7326,]  141 #>  [7327,]  141 #>  [7328,]  141 #>  [7329,]  141 #>  [7330,]  141 #>  [7331,]  140 #>  [7332,]  141 #>  [7333,]  141 #>  [7334,]  140 #>  [7335,]  141 #>  [7336,]  141 #>  [7337,]  141 #>  [7338,]  141 #>  [7339,]  141 #>  [7340,]  141 #>  [7341,]  141 #>  [7342,]  140 #>  [7343,]  140 #>  [7344,]  140 #>  [7345,]  141 #>  [7346,]  141 #>  [7347,]  141 #>  [7348,]  141 #>  [7349,]  141 #>  [7350,]  141 #>  [7351,]  141 #>  [7352,]  141 #>  [7353,]  141 #>  [7354,]  141 #>  [7355,]  141 #>  [7356,]  141 #>  [7357,]  141 #>  [7358,]  141 #>  [7359,]  141 #>  [7360,]  141 #>  [7361,]  141 #>  [7362,]  141 #>  [7363,]  140 #>  [7364,]  141 #>  [7365,]  141 #>  [7366,]  141 #>  [7367,]  141 #>  [7368,]  141 #>  [7369,]  141 #>  [7370,]  141 #>  [7371,]  141 #>  [7372,]  141 #>  [7373,]  141 #>  [7374,]  141 #>  [7375,]  140 #>  [7376,]  141 #>  [7377,]  141 #>  [7378,]  140 #>  [7379,]  141 #>  [7380,]  141 #>  [7381,]  141 #>  [7382,]  141 #>  [7383,]  141 #>  [7384,]  141 #>  [7385,]  141 #>  [7386,]  141 #>  [7387,]  141 #>  [7388,]  141 #>  [7389,]  141 #>  [7390,]  141 #>  [7391,]  141 #>  [7392,]  141 #>  [7393,]  141 #>  [7394,]  141 #>  [7395,]  140 #>  [7396,]  141 #>  [7397,]  141 #>  [7398,]  141 #>  [7399,]  141 #>  [7400,]  141 #>  [7401,]  142 #>  [7402,]  143 #>  [7403,]  142 #>  [7404,]  142 #>  [7405,]  142 #>  [7406,]  142 #>  [7407,]  142 #>  [7408,]  142 #>  [7409,]  143 #>  [7410,]  143 #>  [7411,]  142 #>  [7412,]  143 #>  [7413,]  142 #>  [7414,]  142 #>  [7415,]  142 #>  [7416,]  142 #>  [7417,]  142 #>  [7418,]  142 #>  [7419,]  142 #>  [7420,]  142 #>  [7421,]  143 #>  [7422,]  142 #>  [7423,]  142 #>  [7424,]  142 #>  [7425,]  142 #>  [7426,]  142 #>  [7427,]  142 #>  [7428,]  142 #>  [7429,]  143 #>  [7430,]  142 #>  [7431,]  142 #>  [7432,]  142 #>  [7433,]  143 #>  [7434,]  142 #>  [7435,]  142 #>  [7436,]  142 #>  [7437,]  142 #>  [7438,]  142 #>  [7439,]  142 #>  [7440,]  142 #>  [7441,]  142 #>  [7442,]  142 #>  [7443,]  142 #>  [7444,]  142 #>  [7445,]  142 #>  [7446,]  142 #>  [7447,]  142 #>  [7448,]  142 #>  [7449,]  142 #>  [7450,]  142 #>  [7451,]  142 #>  [7452,]  142 #>  [7453,]  142 #>  [7454,]  142 #>  [7455,]  142 #>  [7456,]  142 #>  [7457,]  142 #>  [7458,]  142 #>  [7459,]  142 #>  [7460,]  143 #>  [7461,]  142 #>  [7462,]  142 #>  [7463,]  142 #>  [7464,]  142 #>  [7465,]  142 #>  [7466,]  142 #>  [7467,]  142 #>  [7468,]  142 #>  [7469,]  142 #>  [7470,]  143 #>  [7471,]  142 #>  [7472,]  142 #>  [7473,]  142 #>  [7474,]  142 #>  [7475,]  142 #>  [7476,]  142 #>  [7477,]  142 #>  [7478,]  142 #>  [7479,]  142 #>  [7480,]  142 #>  [7481,]  142 #>  [7482,]  142 #>  [7483,]  142 #>  [7484,]  142 #>  [7485,]  142 #>  [7486,]  143 #>  [7487,]  142 #>  [7488,]  142 #>  [7489,]  142 #>  [7490,]  142 #>  [7491,]  142 #>  [7492,]  142 #>  [7493,]  142 #>  [7494,]  142 #>  [7495,]  142 #>  [7496,]  142 #>  [7497,]  142 #>  [7498,]  142 #>  [7499,]  142 #>  [7500,]  142 #>  [7501,]  144 #>  [7502,]  144 #>  [7503,]  144 #>  [7504,]  144 #>  [7505,]  144 #>  [7506,]  145 #>  [7507,]  144 #>  [7508,]  145 #>  [7509,]  145 #>  [7510,]  144 #>  [7511,]  144 #>  [7512,]  145 #>  [7513,]  144 #>  [7514,]  144 #>  [7515,]  145 #>  [7516,]  144 #>  [7517,]  144 #>  [7518,]  144 #>  [7519,]  144 #>  [7520,]  144 #>  [7521,]  144 #>  [7522,]  144 #>  [7523,]  144 #>  [7524,]  144 #>  [7525,]  144 #>  [7526,]  145 #>  [7527,]  144 #>  [7528,]  144 #>  [7529,]  144 #>  [7530,]  144 #>  [7531,]  144 #>  [7532,]  144 #>  [7533,]  145 #>  [7534,]  144 #>  [7535,]  144 #>  [7536,]  144 #>  [7537,]  144 #>  [7538,]  144 #>  [7539,]  144 #>  [7540,]  144 #>  [7541,]  144 #>  [7542,]  144 #>  [7543,]  145 #>  [7544,]  144 #>  [7545,]  144 #>  [7546,]  145 #>  [7547,]  144 #>  [7548,]  144 #>  [7549,]  144 #>  [7550,]  144 #>  [7551,]  145 #>  [7552,]  144 #>  [7553,]  144 #>  [7554,]  144 #>  [7555,]  144 #>  [7556,]  145 #>  [7557,]  145 #>  [7558,]  144 #>  [7559,]  144 #>  [7560,]  144 #>  [7561,]  145 #>  [7562,]  144 #>  [7563,]  144 #>  [7564,]  145 #>  [7565,]  144 #>  [7566,]  145 #>  [7567,]  144 #>  [7568,]  145 #>  [7569,]  144 #>  [7570,]  144 #>  [7571,]  144 #>  [7572,]  144 #>  [7573,]  144 #>  [7574,]  144 #>  [7575,]  144 #>  [7576,]  145 #>  [7577,]  144 #>  [7578,]  144 #>  [7579,]  144 #>  [7580,]  144 #>  [7581,]  144 #>  [7582,]  144 #>  [7583,]  144 #>  [7584,]  144 #>  [7585,]  144 #>  [7586,]  144 #>  [7587,]  144 #>  [7588,]  144 #>  [7589,]  144 #>  [7590,]  144 #>  [7591,]  144 #>  [7592,]  144 #>  [7593,]  144 #>  [7594,]  145 #>  [7595,]  144 #>  [7596,]  144 #>  [7597,]  144 #>  [7598,]  144 #>  [7599,]  144 #>  [7600,]  144 #>  [7601,]  147 #>  [7602,]  147 #>  [7603,]  147 #>  [7604,]  147 #>  [7605,]  147 #>  [7606,]  147 #>  [7607,]  147 #>  [7608,]  147 #>  [7609,]  147 #>  [7610,]  147 #>  [7611,]  147 #>  [7612,]  147 #>  [7613,]  147 #>  [7614,]  147 #>  [7615,]  146 #>  [7616,]  147 #>  [7617,]  147 #>  [7618,]  147 #>  [7619,]  147 #>  [7620,]  147 #>  [7621,]  147 #>  [7622,]  147 #>  [7623,]  147 #>  [7624,]  147 #>  [7625,]  147 #>  [7626,]  147 #>  [7627,]  147 #>  [7628,]  147 #>  [7629,]  147 #>  [7630,]  147 #>  [7631,]  146 #>  [7632,]  147 #>  [7633,]  147 #>  [7634,]  146 #>  [7635,]  147 #>  [7636,]  147 #>  [7637,]  147 #>  [7638,]  147 #>  [7639,]  147 #>  [7640,]  147 #>  [7641,]  147 #>  [7642,]  146 #>  [7643,]  146 #>  [7644,]  146 #>  [7645,]  147 #>  [7646,]  147 #>  [7647,]  147 #>  [7648,]  147 #>  [7649,]  147 #>  [7650,]  147 #>  [7651,]  147 #>  [7652,]  147 #>  [7653,]  147 #>  [7654,]  147 #>  [7655,]  147 #>  [7656,]  147 #>  [7657,]  147 #>  [7658,]  147 #>  [7659,]  147 #>  [7660,]  147 #>  [7661,]  147 #>  [7662,]  147 #>  [7663,]  146 #>  [7664,]  147 #>  [7665,]  147 #>  [7666,]  147 #>  [7667,]  147 #>  [7668,]  147 #>  [7669,]  147 #>  [7670,]  147 #>  [7671,]  147 #>  [7672,]  147 #>  [7673,]  147 #>  [7674,]  147 #>  [7675,]  146 #>  [7676,]  147 #>  [7677,]  147 #>  [7678,]  147 #>  [7679,]  147 #>  [7680,]  147 #>  [7681,]  147 #>  [7682,]  147 #>  [7683,]  147 #>  [7684,]  147 #>  [7685,]  147 #>  [7686,]  147 #>  [7687,]  147 #>  [7688,]  147 #>  [7689,]  147 #>  [7690,]  147 #>  [7691,]  147 #>  [7692,]  147 #>  [7693,]  147 #>  [7694,]  147 #>  [7695,]  147 #>  [7696,]  147 #>  [7697,]  147 #>  [7698,]  147 #>  [7699,]  147 #>  [7700,]  147 #>  [7701,]  148 #>  [7702,]  148 #>  [7703,]  148 #>  [7704,]  148 #>  [7705,]  148 #>  [7706,]  149 #>  [7707,]  148 #>  [7708,]  149 #>  [7709,]  149 #>  [7710,]  148 #>  [7711,]  148 #>  [7712,]  149 #>  [7713,]  148 #>  [7714,]  148 #>  [7715,]  149 #>  [7716,]  148 #>  [7717,]  148 #>  [7718,]  148 #>  [7719,]  148 #>  [7720,]  148 #>  [7721,]  148 #>  [7722,]  148 #>  [7723,]  148 #>  [7724,]  148 #>  [7725,]  148 #>  [7726,]  149 #>  [7727,]  148 #>  [7728,]  148 #>  [7729,]  148 #>  [7730,]  148 #>  [7731,]  148 #>  [7732,]  148 #>  [7733,]  149 #>  [7734,]  148 #>  [7735,]  148 #>  [7736,]  148 #>  [7737,]  148 #>  [7738,]  148 #>  [7739,]  148 #>  [7740,]  148 #>  [7741,]  148 #>  [7742,]  148 #>  [7743,]  149 #>  [7744,]  148 #>  [7745,]  149 #>  [7746,]  149 #>  [7747,]  148 #>  [7748,]  148 #>  [7749,]  148 #>  [7750,]  148 #>  [7751,]  149 #>  [7752,]  148 #>  [7753,]  148 #>  [7754,]  148 #>  [7755,]  148 #>  [7756,]  149 #>  [7757,]  149 #>  [7758,]  148 #>  [7759,]  148 #>  [7760,]  148 #>  [7761,]  149 #>  [7762,]  148 #>  [7763,]  148 #>  [7764,]  149 #>  [7765,]  148 #>  [7766,]  149 #>  [7767,]  148 #>  [7768,]  149 #>  [7769,]  148 #>  [7770,]  148 #>  [7771,]  148 #>  [7772,]  148 #>  [7773,]  148 #>  [7774,]  148 #>  [7775,]  148 #>  [7776,]  149 #>  [7777,]  148 #>  [7778,]  148 #>  [7779,]  148 #>  [7780,]  148 #>  [7781,]  148 #>  [7782,]  148 #>  [7783,]  148 #>  [7784,]  148 #>  [7785,]  148 #>  [7786,]  148 #>  [7787,]  148 #>  [7788,]  148 #>  [7789,]  148 #>  [7790,]  148 #>  [7791,]  148 #>  [7792,]  148 #>  [7793,]  148 #>  [7794,]  149 #>  [7795,]  148 #>  [7796,]  148 #>  [7797,]  148 #>  [7798,]  148 #>  [7799,]  148 #>  [7800,]  148 #>  [7801,]  151 #>  [7802,]  151 #>  [7803,]  150 #>  [7804,]  151 #>  [7805,]  151 #>  [7806,]  151 #>  [7807,]  150 #>  [7808,]  150 #>  [7809,]  151 #>  [7810,]  151 #>  [7811,]  151 #>  [7812,]  151 #>  [7813,]  150 #>  [7814,]  151 #>  [7815,]  151 #>  [7816,]  150 #>  [7817,]  150 #>  [7818,]  151 #>  [7819,]  151 #>  [7820,]  150 #>  [7821,]  151 #>  [7822,]  150 #>  [7823,]  151 #>  [7824,]  150 #>  [7825,]  150 #>  [7826,]  151 #>  [7827,]  151 #>  [7828,]  151 #>  [7829,]  151 #>  [7830,]  151 #>  [7831,]  151 #>  [7832,]  151 #>  [7833,]  151 #>  [7834,]  151 #>  [7835,]  151 #>  [7836,]  151 #>  [7837,]  151 #>  [7838,]  151 #>  [7839,]  150 #>  [7840,]  150 #>  [7841,]  151 #>  [7842,]  151 #>  [7843,]  150 #>  [7844,]  150 #>  [7845,]  150 #>  [7846,]  150 #>  [7847,]  150 #>  [7848,]  151 #>  [7849,]  150 #>  [7850,]  150 #>  [7851,]  151 #>  [7852,]  151 #>  [7853,]  150 #>  [7854,]  150 #>  [7855,]  150 #>  [7856,]  150 #>  [7857,]  151 #>  [7858,]  151 #>  [7859,]  150 #>  [7860,]  151 #>  [7861,]  151 #>  [7862,]  151 #>  [7863,]  150 #>  [7864,]  151 #>  [7865,]  150 #>  [7866,]  150 #>  [7867,]  151 #>  [7868,]  151 #>  [7869,]  151 #>  [7870,]  150 #>  [7871,]  151 #>  [7872,]  150 #>  [7873,]  151 #>  [7874,]  151 #>  [7875,]  151 #>  [7876,]  151 #>  [7877,]  150 #>  [7878,]  150 #>  [7879,]  150 #>  [7880,]  151 #>  [7881,]  151 #>  [7882,]  151 #>  [7883,]  151 #>  [7884,]  150 #>  [7885,]  151 #>  [7886,]  150 #>  [7887,]  151 #>  [7888,]  151 #>  [7889,]  150 #>  [7890,]  150 #>  [7891,]  151 #>  [7892,]  151 #>  [7893,]  151 #>  [7894,]  150 #>  [7895,]  151 #>  [7896,]  151 #>  [7897,]  151 #>  [7898,]  150 #>  [7899,]  151 #>  [7900,]  150 #>  [7901,]  152 #>  [7902,]  152 #>  [7903,]  152 #>  [7904,]  153 #>  [7905,]  152 #>  [7906,]  152 #>  [7907,]  152 #>  [7908,]  152 #>  [7909,]  152 #>  [7910,]  153 #>  [7911,]  152 #>  [7912,]  152 #>  [7913,]  152 #>  [7914,]  152 #>  [7915,]  152 #>  [7916,]  152 #>  [7917,]  152 #>  [7918,]  153 #>  [7919,]  152 #>  [7920,]  152 #>  [7921,]  153 #>  [7922,]  152 #>  [7923,]  152 #>  [7924,]  152 #>  [7925,]  153 #>  [7926,]  152 #>  [7927,]  152 #>  [7928,]  152 #>  [7929,]  152 #>  [7930,]  152 #>  [7931,]  152 #>  [7932,]  152 #>  [7933,]  152 #>  [7934,]  152 #>  [7935,]  152 #>  [7936,]  152 #>  [7937,]  152 #>  [7938,]  152 #>  [7939,]  153 #>  [7940,]  152 #>  [7941,]  152 #>  [7942,]  152 #>  [7943,]  153 #>  [7944,]  152 #>  [7945,]  153 #>  [7946,]  152 #>  [7947,]  152 #>  [7948,]  152 #>  [7949,]  152 #>  [7950,]  152 #>  [7951,]  152 #>  [7952,]  152 #>  [7953,]  153 #>  [7954,]  152 #>  [7955,]  152 #>  [7956,]  152 #>  [7957,]  152 #>  [7958,]  152 #>  [7959,]  152 #>  [7960,]  152 #>  [7961,]  153 #>  [7962,]  152 #>  [7963,]  152 #>  [7964,]  152 #>  [7965,]  152 #>  [7966,]  152 #>  [7967,]  152 #>  [7968,]  152 #>  [7969,]  152 #>  [7970,]  152 #>  [7971,]  152 #>  [7972,]  153 #>  [7973,]  153 #>  [7974,]  153 #>  [7975,]  153 #>  [7976,]  153 #>  [7977,]  153 #>  [7978,]  152 #>  [7979,]  152 #>  [7980,]  152 #>  [7981,]  152 #>  [7982,]  152 #>  [7983,]  152 #>  [7984,]  153 #>  [7985,]  152 #>  [7986,]  152 #>  [7987,]  152 #>  [7988,]  152 #>  [7989,]  152 #>  [7990,]  152 #>  [7991,]  152 #>  [7992,]  152 #>  [7993,]  152 #>  [7994,]  153 #>  [7995,]  153 #>  [7996,]  152 #>  [7997,]  152 #>  [7998,]  152 #>  [7999,]  152 #>  [8000,]  153 #>  [8001,]  155 #>  [8002,]  155 #>  [8003,]  154 #>  [8004,]  155 #>  [8005,]  154 #>  [8006,]  155 #>  [8007,]  155 #>  [8008,]  155 #>  [8009,]  154 #>  [8010,]  154 #>  [8011,]  154 #>  [8012,]  155 #>  [8013,]  155 #>  [8014,]  154 #>  [8015,]  155 #>  [8016,]  155 #>  [8017,]  155 #>  [8018,]  155 #>  [8019,]  155 #>  [8020,]  155 #>  [8021,]  154 #>  [8022,]  155 #>  [8023,]  155 #>  [8024,]  154 #>  [8025,]  154 #>  [8026,]  155 #>  [8027,]  155 #>  [8028,]  154 #>  [8029,]  155 #>  [8030,]  155 #>  [8031,]  154 #>  [8032,]  154 #>  [8033,]  155 #>  [8034,]  154 #>  [8035,]  154 #>  [8036,]  155 #>  [8037,]  155 #>  [8038,]  155 #>  [8039,]  154 #>  [8040,]  154 #>  [8041,]  155 #>  [8042,]  155 #>  [8043,]  155 #>  [8044,]  155 #>  [8045,]  155 #>  [8046,]  155 #>  [8047,]  154 #>  [8048,]  154 #>  [8049,]  155 #>  [8050,]  155 #>  [8051,]  155 #>  [8052,]  154 #>  [8053,]  155 #>  [8054,]  154 #>  [8055,]  155 #>  [8056,]  155 #>  [8057,]  155 #>  [8058,]  155 #>  [8059,]  155 #>  [8060,]  155 #>  [8061,]  155 #>  [8062,]  154 #>  [8063,]  155 #>  [8064,]  155 #>  [8065,]  154 #>  [8066,]  155 #>  [8067,]  155 #>  [8068,]  155 #>  [8069,]  155 #>  [8070,]  154 #>  [8071,]  155 #>  [8072,]  154 #>  [8073,]  155 #>  [8074,]  154 #>  [8075,]  155 #>  [8076,]  154 #>  [8077,]  155 #>  [8078,]  155 #>  [8079,]  155 #>  [8080,]  155 #>  [8081,]  155 #>  [8082,]  154 #>  [8083,]  155 #>  [8084,]  155 #>  [8085,]  155 #>  [8086,]  155 #>  [8087,]  155 #>  [8088,]  155 #>  [8089,]  155 #>  [8090,]  155 #>  [8091,]  154 #>  [8092,]  155 #>  [8093,]  155 #>  [8094,]  155 #>  [8095,]  155 #>  [8096,]  155 #>  [8097,]  155 #>  [8098,]  154 #>  [8099,]  155 #>  [8100,]  155 #>  [8101,]  156 #>  [8102,]  156 #>  [8103,]  156 #>  [8104,]  157 #>  [8105,]  156 #>  [8106,]  156 #>  [8107,]  157 #>  [8108,]  156 #>  [8109,]  156 #>  [8110,]  157 #>  [8111,]  156 #>  [8112,]  156 #>  [8113,]  156 #>  [8114,]  156 #>  [8115,]  157 #>  [8116,]  157 #>  [8117,]  156 #>  [8118,]  157 #>  [8119,]  156 #>  [8120,]  156 #>  [8121,]  157 #>  [8122,]  156 #>  [8123,]  157 #>  [8124,]  156 #>  [8125,]  157 #>  [8126,]  156 #>  [8127,]  157 #>  [8128,]  157 #>  [8129,]  156 #>  [8130,]  156 #>  [8131,]  156 #>  [8132,]  156 #>  [8133,]  156 #>  [8134,]  156 #>  [8135,]  156 #>  [8136,]  156 #>  [8137,]  156 #>  [8138,]  156 #>  [8139,]  157 #>  [8140,]  156 #>  [8141,]  156 #>  [8142,]  156 #>  [8143,]  157 #>  [8144,]  156 #>  [8145,]  157 #>  [8146,]  156 #>  [8147,]  157 #>  [8148,]  156 #>  [8149,]  156 #>  [8150,]  156 #>  [8151,]  156 #>  [8152,]  156 #>  [8153,]  157 #>  [8154,]  156 #>  [8155,]  156 #>  [8156,]  156 #>  [8157,]  156 #>  [8158,]  156 #>  [8159,]  156 #>  [8160,]  156 #>  [8161,]  157 #>  [8162,]  156 #>  [8163,]  156 #>  [8164,]  156 #>  [8165,]  156 #>  [8166,]  156 #>  [8167,]  156 #>  [8168,]  156 #>  [8169,]  156 #>  [8170,]  156 #>  [8171,]  157 #>  [8172,]  157 #>  [8173,]  157 #>  [8174,]  157 #>  [8175,]  157 #>  [8176,]  157 #>  [8177,]  157 #>  [8178,]  156 #>  [8179,]  156 #>  [8180,]  156 #>  [8181,]  156 #>  [8182,]  156 #>  [8183,]  156 #>  [8184,]  157 #>  [8185,]  156 #>  [8186,]  156 #>  [8187,]  156 #>  [8188,]  157 #>  [8189,]  156 #>  [8190,]  156 #>  [8191,]  156 #>  [8192,]  156 #>  [8193,]  156 #>  [8194,]  157 #>  [8195,]  157 #>  [8196,]  156 #>  [8197,]  156 #>  [8198,]  156 #>  [8199,]  156 #>  [8200,]  157 #>  [8201,]  159 #>  [8202,]  159 #>  [8203,]  158 #>  [8204,]  159 #>  [8205,]  159 #>  [8206,]  159 #>  [8207,]  158 #>  [8208,]  159 #>  [8209,]  159 #>  [8210,]  159 #>  [8211,]  159 #>  [8212,]  159 #>  [8213,]  159 #>  [8214,]  159 #>  [8215,]  159 #>  [8216,]  159 #>  [8217,]  159 #>  [8218,]  159 #>  [8219,]  159 #>  [8220,]  158 #>  [8221,]  159 #>  [8222,]  159 #>  [8223,]  159 #>  [8224,]  159 #>  [8225,]  158 #>  [8226,]  159 #>  [8227,]  159 #>  [8228,]  159 #>  [8229,]  159 #>  [8230,]  159 #>  [8231,]  159 #>  [8232,]  159 #>  [8233,]  159 #>  [8234,]  159 #>  [8235,]  159 #>  [8236,]  159 #>  [8237,]  159 #>  [8238,]  159 #>  [8239,]  158 #>  [8240,]  159 #>  [8241,]  159 #>  [8242,]  159 #>  [8243,]  159 #>  [8244,]  159 #>  [8245,]  159 #>  [8246,]  159 #>  [8247,]  159 #>  [8248,]  159 #>  [8249,]  158 #>  [8250,]  159 #>  [8251,]  159 #>  [8252,]  159 #>  [8253,]  158 #>  [8254,]  159 #>  [8255,]  158 #>  [8256,]  158 #>  [8257,]  159 #>  [8258,]  159 #>  [8259,]  159 #>  [8260,]  159 #>  [8261,]  159 #>  [8262,]  159 #>  [8263,]  159 #>  [8264,]  159 #>  [8265,]  158 #>  [8266,]  158 #>  [8267,]  159 #>  [8268,]  159 #>  [8269,]  159 #>  [8270,]  159 #>  [8271,]  159 #>  [8272,]  159 #>  [8273,]  159 #>  [8274,]  159 #>  [8275,]  159 #>  [8276,]  159 #>  [8277,]  159 #>  [8278,]  159 #>  [8279,]  159 #>  [8280,]  159 #>  [8281,]  159 #>  [8282,]  159 #>  [8283,]  159 #>  [8284,]  159 #>  [8285,]  159 #>  [8286,]  159 #>  [8287,]  159 #>  [8288,]  159 #>  [8289,]  159 #>  [8290,]  158 #>  [8291,]  159 #>  [8292,]  159 #>  [8293,]  159 #>  [8294,]  159 #>  [8295,]  159 #>  [8296,]  159 #>  [8297,]  159 #>  [8298,]  159 #>  [8299,]  159 #>  [8300,]  158 #>  [8301,]  161 #>  [8302,]  161 #>  [8303,]  161 #>  [8304,]  161 #>  [8305,]  161 #>  [8306,]  160 #>  [8307,]  160 #>  [8308,]  161 #>  [8309,]  161 #>  [8310,]  161 #>  [8311,]  161 #>  [8312,]  161 #>  [8313,]  161 #>  [8314,]  161 #>  [8315,]  161 #>  [8316,]  161 #>  [8317,]  161 #>  [8318,]  161 #>  [8319,]  161 #>  [8320,]  160 #>  [8321,]  160 #>  [8322,]  161 #>  [8323,]  161 #>  [8324,]  161 #>  [8325,]  160 #>  [8326,]  161 #>  [8327,]  161 #>  [8328,]  161 #>  [8329,]  161 #>  [8330,]  161 #>  [8331,]  161 #>  [8332,]  161 #>  [8333,]  161 #>  [8334,]  161 #>  [8335,]  160 #>  [8336,]  161 #>  [8337,]  160 #>  [8338,]  161 #>  [8339,]  161 #>  [8340,]  161 #>  [8341,]  161 #>  [8342,]  160 #>  [8343,]  161 #>  [8344,]  160 #>  [8345,]  161 #>  [8346,]  161 #>  [8347,]  161 #>  [8348,]  161 #>  [8349,]  161 #>  [8350,]  161 #>  [8351,]  161 #>  [8352,]  161 #>  [8353,]  160 #>  [8354,]  161 #>  [8355,]  161 #>  [8356,]  160 #>  [8357,]  160 #>  [8358,]  161 #>  [8359,]  161 #>  [8360,]  161 #>  [8361,]  161 #>  [8362,]  161 #>  [8363,]  161 #>  [8364,]  161 #>  [8365,]  160 #>  [8366,]  161 #>  [8367,]  161 #>  [8368,]  161 #>  [8369,]  161 #>  [8370,]  161 #>  [8371,]  161 #>  [8372,]  161 #>  [8373,]  160 #>  [8374,]  160 #>  [8375,]  161 #>  [8376,]  161 #>  [8377,]  161 #>  [8378,]  161 #>  [8379,]  161 #>  [8380,]  160 #>  [8381,]  161 #>  [8382,]  160 #>  [8383,]  161 #>  [8384,]  160 #>  [8385,]  160 #>  [8386,]  160 #>  [8387,]  161 #>  [8388,]  161 #>  [8389,]  160 #>  [8390,]  161 #>  [8391,]  161 #>  [8392,]  161 #>  [8393,]  161 #>  [8394,]  160 #>  [8395,]  161 #>  [8396,]  161 #>  [8397,]  161 #>  [8398,]  161 #>  [8399,]  160 #>  [8400,]  161 #>  [8401,]  163 #>  [8402,]  162 #>  [8403,]  162 #>  [8404,]  162 #>  [8405,]  163 #>  [8406,]  162 #>  [8407,]  162 #>  [8408,]  162 #>  [8409,]  162 #>  [8410,]  163 #>  [8411,]  163 #>  [8412,]  163 #>  [8413,]  162 #>  [8414,]  163 #>  [8415,]  163 #>  [8416,]  162 #>  [8417,]  163 #>  [8418,]  163 #>  [8419,]  163 #>  [8420,]  162 #>  [8421,]  162 #>  [8422,]  163 #>  [8423,]  162 #>  [8424,]  162 #>  [8425,]  162 #>  [8426,]  163 #>  [8427,]  163 #>  [8428,]  162 #>  [8429,]  162 #>  [8430,]  162 #>  [8431,]  163 #>  [8432,]  163 #>  [8433,]  162 #>  [8434,]  162 #>  [8435,]  162 #>  [8436,]  162 #>  [8437,]  162 #>  [8438,]  163 #>  [8439,]  163 #>  [8440,]  162 #>  [8441,]  162 #>  [8442,]  162 #>  [8443,]  163 #>  [8444,]  162 #>  [8445,]  162 #>  [8446,]  162 #>  [8447,]  163 #>  [8448,]  162 #>  [8449,]  162 #>  [8450,]  162 #>  [8451,]  162 #>  [8452,]  163 #>  [8453,]  162 #>  [8454,]  162 #>  [8455,]  162 #>  [8456,]  162 #>  [8457,]  162 #>  [8458,]  163 #>  [8459,]  163 #>  [8460,]  162 #>  [8461,]  163 #>  [8462,]  162 #>  [8463,]  162 #>  [8464,]  162 #>  [8465,]  162 #>  [8466,]  163 #>  [8467,]  162 #>  [8468,]  163 #>  [8469,]  162 #>  [8470,]  163 #>  [8471,]  163 #>  [8472,]  162 #>  [8473,]  162 #>  [8474,]  162 #>  [8475,]  163 #>  [8476,]  162 #>  [8477,]  163 #>  [8478,]  162 #>  [8479,]  163 #>  [8480,]  162 #>  [8481,]  162 #>  [8482,]  162 #>  [8483,]  163 #>  [8484,]  162 #>  [8485,]  162 #>  [8486,]  162 #>  [8487,]  163 #>  [8488,]  162 #>  [8489,]  162 #>  [8490,]  163 #>  [8491,]  163 #>  [8492,]  163 #>  [8493,]  162 #>  [8494,]  162 #>  [8495,]  163 #>  [8496,]  163 #>  [8497,]  162 #>  [8498,]  162 #>  [8499,]  162 #>  [8500,]  163 #>  [8501,]  164 #>  [8502,]  165 #>  [8503,]  164 #>  [8504,]  164 #>  [8505,]  164 #>  [8506,]  164 #>  [8507,]  164 #>  [8508,]  165 #>  [8509,]  164 #>  [8510,]  164 #>  [8511,]  164 #>  [8512,]  164 #>  [8513,]  165 #>  [8514,]  164 #>  [8515,]  165 #>  [8516,]  165 #>  [8517,]  164 #>  [8518,]  164 #>  [8519,]  165 #>  [8520,]  165 #>  [8521,]  164 #>  [8522,]  165 #>  [8523,]  164 #>  [8524,]  164 #>  [8525,]  164 #>  [8526,]  165 #>  [8527,]  165 #>  [8528,]  164 #>  [8529,]  165 #>  [8530,]  165 #>  [8531,]  164 #>  [8532,]  164 #>  [8533,]  165 #>  [8534,]  164 #>  [8535,]  164 #>  [8536,]  165 #>  [8537,]  165 #>  [8538,]  165 #>  [8539,]  164 #>  [8540,]  164 #>  [8541,]  165 #>  [8542,]  164 #>  [8543,]  165 #>  [8544,]  165 #>  [8545,]  164 #>  [8546,]  165 #>  [8547,]  164 #>  [8548,]  164 #>  [8549,]  164 #>  [8550,]  165 #>  [8551,]  165 #>  [8552,]  164 #>  [8553,]  165 #>  [8554,]  164 #>  [8555,]  165 #>  [8556,]  165 #>  [8557,]  164 #>  [8558,]  165 #>  [8559,]  165 #>  [8560,]  165 #>  [8561,]  165 #>  [8562,]  164 #>  [8563,]  165 #>  [8564,]  165 #>  [8565,]  164 #>  [8566,]  165 #>  [8567,]  164 #>  [8568,]  165 #>  [8569,]  165 #>  [8570,]  164 #>  [8571,]  165 #>  [8572,]  164 #>  [8573,]  164 #>  [8574,]  164 #>  [8575,]  165 #>  [8576,]  164 #>  [8577,]  165 #>  [8578,]  165 #>  [8579,]  164 #>  [8580,]  165 #>  [8581,]  165 #>  [8582,]  164 #>  [8583,]  165 #>  [8584,]  165 #>  [8585,]  165 #>  [8586,]  164 #>  [8587,]  165 #>  [8588,]  164 #>  [8589,]  164 #>  [8590,]  165 #>  [8591,]  164 #>  [8592,]  164 #>  [8593,]  165 #>  [8594,]  164 #>  [8595,]  165 #>  [8596,]  165 #>  [8597,]  165 #>  [8598,]  164 #>  [8599,]  164 #>  [8600,]  165 #>  [8601,]  166 #>  [8602,]  166 #>  [8603,]  166 #>  [8604,]  166 #>  [8605,]  166 #>  [8606,]  166 #>  [8607,]  166 #>  [8608,]  166 #>  [8609,]  166 #>  [8610,]  166 #>  [8611,]  166 #>  [8612,]  166 #>  [8613,]  166 #>  [8614,]  166 #>  [8615,]  166 #>  [8616,]  166 #>  [8617,]  166 #>  [8618,]  167 #>  [8619,]  166 #>  [8620,]  166 #>  [8621,]  166 #>  [8622,]  166 #>  [8623,]  166 #>  [8624,]  166 #>  [8625,]  166 #>  [8626,]  166 #>  [8627,]  166 #>  [8628,]  166 #>  [8629,]  166 #>  [8630,]  166 #>  [8631,]  166 #>  [8632,]  166 #>  [8633,]  166 #>  [8634,]  166 #>  [8635,]  166 #>  [8636,]  166 #>  [8637,]  166 #>  [8638,]  166 #>  [8639,]  166 #>  [8640,]  166 #>  [8641,]  166 #>  [8642,]  166 #>  [8643,]  166 #>  [8644,]  166 #>  [8645,]  166 #>  [8646,]  166 #>  [8647,]  166 #>  [8648,]  166 #>  [8649,]  166 #>  [8650,]  166 #>  [8651,]  167 #>  [8652,]  166 #>  [8653,]  167 #>  [8654,]  166 #>  [8655,]  166 #>  [8656,]  166 #>  [8657,]  166 #>  [8658,]  166 #>  [8659,]  166 #>  [8660,]  166 #>  [8661,]  166 #>  [8662,]  166 #>  [8663,]  166 #>  [8664,]  166 #>  [8665,]  166 #>  [8666,]  166 #>  [8667,]  166 #>  [8668,]  166 #>  [8669,]  166 #>  [8670,]  166 #>  [8671,]  166 #>  [8672,]  166 #>  [8673,]  166 #>  [8674,]  166 #>  [8675,]  166 #>  [8676,]  166 #>  [8677,]  166 #>  [8678,]  166 #>  [8679,]  166 #>  [8680,]  166 #>  [8681,]  166 #>  [8682,]  166 #>  [8683,]  166 #>  [8684,]  167 #>  [8685,]  166 #>  [8686,]  166 #>  [8687,]  166 #>  [8688,]  166 #>  [8689,]  166 #>  [8690,]  166 #>  [8691,]  166 #>  [8692,]  166 #>  [8693,]  166 #>  [8694,]  167 #>  [8695,]  166 #>  [8696,]  166 #>  [8697,]  166 #>  [8698,]  166 #>  [8699,]  166 #>  [8700,]  166 #>  [8701,]  169 #>  [8702,]  168 #>  [8703,]  168 #>  [8704,]  168 #>  [8705,]  169 #>  [8706,]  168 #>  [8707,]  168 #>  [8708,]  168 #>  [8709,]  168 #>  [8710,]  168 #>  [8711,]  168 #>  [8712,]  168 #>  [8713,]  168 #>  [8714,]  169 #>  [8715,]  169 #>  [8716,]  168 #>  [8717,]  168 #>  [8718,]  169 #>  [8719,]  168 #>  [8720,]  168 #>  [8721,]  168 #>  [8722,]  169 #>  [8723,]  168 #>  [8724,]  168 #>  [8725,]  168 #>  [8726,]  169 #>  [8727,]  169 #>  [8728,]  168 #>  [8729,]  168 #>  [8730,]  168 #>  [8731,]  169 #>  [8732,]  169 #>  [8733,]  168 #>  [8734,]  168 #>  [8735,]  168 #>  [8736,]  168 #>  [8737,]  168 #>  [8738,]  168 #>  [8739,]  168 #>  [8740,]  168 #>  [8741,]  168 #>  [8742,]  168 #>  [8743,]  169 #>  [8744,]  168 #>  [8745,]  168 #>  [8746,]  168 #>  [8747,]  169 #>  [8748,]  168 #>  [8749,]  168 #>  [8750,]  168 #>  [8751,]  168 #>  [8752,]  168 #>  [8753,]  168 #>  [8754,]  168 #>  [8755,]  168 #>  [8756,]  168 #>  [8757,]  168 #>  [8758,]  169 #>  [8759,]  169 #>  [8760,]  168 #>  [8761,]  169 #>  [8762,]  168 #>  [8763,]  168 #>  [8764,]  168 #>  [8765,]  168 #>  [8766,]  169 #>  [8767,]  168 #>  [8768,]  168 #>  [8769,]  168 #>  [8770,]  169 #>  [8771,]  169 #>  [8772,]  168 #>  [8773,]  168 #>  [8774,]  168 #>  [8775,]  169 #>  [8776,]  168 #>  [8777,]  169 #>  [8778,]  168 #>  [8779,]  169 #>  [8780,]  168 #>  [8781,]  168 #>  [8782,]  168 #>  [8783,]  168 #>  [8784,]  168 #>  [8785,]  168 #>  [8786,]  168 #>  [8787,]  169 #>  [8788,]  168 #>  [8789,]  168 #>  [8790,]  168 #>  [8791,]  169 #>  [8792,]  168 #>  [8793,]  168 #>  [8794,]  168 #>  [8795,]  169 #>  [8796,]  168 #>  [8797,]  168 #>  [8798,]  168 #>  [8799,]  168 #>  [8800,]  169 #>  [8801,]  170 #>  [8802,]  170 #>  [8803,]  170 #>  [8804,]  170 #>  [8805,]  170 #>  [8806,]  170 #>  [8807,]  170 #>  [8808,]  170 #>  [8809,]  170 #>  [8810,]  170 #>  [8811,]  170 #>  [8812,]  170 #>  [8813,]  170 #>  [8814,]  170 #>  [8815,]  170 #>  [8816,]  170 #>  [8817,]  170 #>  [8818,]  170 #>  [8819,]  170 #>  [8820,]  170 #>  [8821,]  170 #>  [8822,]  170 #>  [8823,]  170 #>  [8824,]  170 #>  [8825,]  170 #>  [8826,]  170 #>  [8827,]  170 #>  [8828,]  170 #>  [8829,]  170 #>  [8830,]  170 #>  [8831,]  170 #>  [8832,]  170 #>  [8833,]  170 #>  [8834,]  170 #>  [8835,]  170 #>  [8836,]  170 #>  [8837,]  170 #>  [8838,]  170 #>  [8839,]  170 #>  [8840,]  170 #>  [8841,]  170 #>  [8842,]  170 #>  [8843,]  170 #>  [8844,]  170 #>  [8845,]  170 #>  [8846,]  170 #>  [8847,]  170 #>  [8848,]  170 #>  [8849,]  170 #>  [8850,]  170 #>  [8851,]  170 #>  [8852,]  170 #>  [8853,]  170 #>  [8854,]  170 #>  [8855,]  170 #>  [8856,]  170 #>  [8857,]  170 #>  [8858,]  170 #>  [8859,]  170 #>  [8860,]  170 #>  [8861,]  170 #>  [8862,]  170 #>  [8863,]  170 #>  [8864,]  170 #>  [8865,]  170 #>  [8866,]  170 #>  [8867,]  170 #>  [8868,]  170 #>  [8869,]  170 #>  [8870,]  170 #>  [8871,]  170 #>  [8872,]  170 #>  [8873,]  170 #>  [8874,]  170 #>  [8875,]  170 #>  [8876,]  170 #>  [8877,]  170 #>  [8878,]  170 #>  [8879,]  170 #>  [8880,]  170 #>  [8881,]  170 #>  [8882,]  170 #>  [8883,]  170 #>  [8884,]  170 #>  [8885,]  170 #>  [8886,]  170 #>  [8887,]  170 #>  [8888,]  170 #>  [8889,]  170 #>  [8890,]  170 #>  [8891,]  170 #>  [8892,]  170 #>  [8893,]  170 #>  [8894,]  170 #>  [8895,]  170 #>  [8896,]  170 #>  [8897,]  170 #>  [8898,]  170 #>  [8899,]  170 #>  [8900,]  170 #>  [8901,]  172 #>  [8902,]  172 #>  [8903,]  171 #>  [8904,]  172 #>  [8905,]  172 #>  [8906,]  172 #>  [8907,]  171 #>  [8908,]  172 #>  [8909,]  172 #>  [8910,]  172 #>  [8911,]  172 #>  [8912,]  172 #>  [8913,]  171 #>  [8914,]  172 #>  [8915,]  172 #>  [8916,]  171 #>  [8917,]  172 #>  [8918,]  172 #>  [8919,]  172 #>  [8920,]  172 #>  [8921,]  171 #>  [8922,]  172 #>  [8923,]  171 #>  [8924,]  172 #>  [8925,]  172 #>  [8926,]  172 #>  [8927,]  172 #>  [8928,]  172 #>  [8929,]  172 #>  [8930,]  171 #>  [8931,]  171 #>  [8932,]  172 #>  [8933,]  172 #>  [8934,]  172 #>  [8935,]  172 #>  [8936,]  171 #>  [8937,]  172 #>  [8938,]  172 #>  [8939,]  171 #>  [8940,]  171 #>  [8941,]  172 #>  [8942,]  172 #>  [8943,]  172 #>  [8944,]  172 #>  [8945,]  172 #>  [8946,]  172 #>  [8947,]  171 #>  [8948,]  172 #>  [8949,]  171 #>  [8950,]  172 #>  [8951,]  172 #>  [8952,]  172 #>  [8953,]  172 #>  [8954,]  171 #>  [8955,]  172 #>  [8956,]  172 #>  [8957,]  172 #>  [8958,]  172 #>  [8959,]  172 #>  [8960,]  172 #>  [8961,]  172 #>  [8962,]  171 #>  [8963,]  172 #>  [8964,]  172 #>  [8965,]  172 #>  [8966,]  172 #>  [8967,]  172 #>  [8968,]  172 #>  [8969,]  172 #>  [8970,]  171 #>  [8971,]  172 #>  [8972,]  172 #>  [8973,]  172 #>  [8974,]  172 #>  [8975,]  172 #>  [8976,]  172 #>  [8977,]  171 #>  [8978,]  172 #>  [8979,]  171 #>  [8980,]  171 #>  [8981,]  172 #>  [8982,]  172 #>  [8983,]  171 #>  [8984,]  172 #>  [8985,]  172 #>  [8986,]  172 #>  [8987,]  172 #>  [8988,]  172 #>  [8989,]  172 #>  [8990,]  172 #>  [8991,]  172 #>  [8992,]  172 #>  [8993,]  172 #>  [8994,]  172 #>  [8995,]  171 #>  [8996,]  172 #>  [8997,]  172 #>  [8998,]  171 #>  [8999,]  172 #>  [9000,]  172 #>  [9001,]  174 #>  [9002,]  174 #>  [9003,]  173 #>  [9004,]  173 #>  [9005,]  173 #>  [9006,]  174 #>  [9007,]  174 #>  [9008,]  173 #>  [9009,]  173 #>  [9010,]  173 #>  [9011,]  174 #>  [9012,]  173 #>  [9013,]  174 #>  [9014,]  174 #>  [9015,]  174 #>  [9016,]  174 #>  [9017,]  174 #>  [9018,]  173 #>  [9019,]  174 #>  [9020,]  173 #>  [9021,]  174 #>  [9022,]  174 #>  [9023,]  173 #>  [9024,]  173 #>  [9025,]  173 #>  [9026,]  174 #>  [9027,]  174 #>  [9028,]  173 #>  [9029,]  174 #>  [9030,]  173 #>  [9031,]  173 #>  [9032,]  173 #>  [9033,]  174 #>  [9034,]  173 #>  [9035,]  174 #>  [9036,]  173 #>  [9037,]  174 #>  [9038,]  173 #>  [9039,]  173 #>  [9040,]  174 #>  [9041,]  174 #>  [9042,]  173 #>  [9043,]  173 #>  [9044,]  174 #>  [9045,]  173 #>  [9046,]  173 #>  [9047,]  174 #>  [9048,]  173 #>  [9049,]  173 #>  [9050,]  174 #>  [9051,]  173 #>  [9052,]  174 #>  [9053,]  173 #>  [9054,]  173 #>  [9055,]  174 #>  [9056,]  173 #>  [9057,]  173 #>  [9058,]  174 #>  [9059,]  174 #>  [9060,]  173 #>  [9061,]  174 #>  [9062,]  173 #>  [9063,]  173 #>  [9064,]  173 #>  [9065,]  173 #>  [9066,]  173 #>  [9067,]  173 #>  [9068,]  174 #>  [9069,]  174 #>  [9070,]  174 #>  [9071,]  174 #>  [9072,]  173 #>  [9073,]  174 #>  [9074,]  174 #>  [9075,]  174 #>  [9076,]  174 #>  [9077,]  174 #>  [9078,]  173 #>  [9079,]  174 #>  [9080,]  173 #>  [9081,]  174 #>  [9082,]  173 #>  [9083,]  174 #>  [9084,]  174 #>  [9085,]  173 #>  [9086,]  174 #>  [9087,]  174 #>  [9088,]  173 #>  [9089,]  173 #>  [9090,]  174 #>  [9091,]  173 #>  [9092,]  174 #>  [9093,]  174 #>  [9094,]  174 #>  [9095,]  173 #>  [9096,]  174 #>  [9097,]  174 #>  [9098,]  174 #>  [9099,]  174 #>  [9100,]  174 #>  [9101,]  175 #>  [9102,]  175 #>  [9103,]  175 #>  [9104,]  176 #>  [9105,]  175 #>  [9106,]  176 #>  [9107,]  175 #>  [9108,]  175 #>  [9109,]  176 #>  [9110,]  176 #>  [9111,]  176 #>  [9112,]  176 #>  [9113,]  175 #>  [9114,]  176 #>  [9115,]  176 #>  [9116,]  175 #>  [9117,]  175 #>  [9118,]  176 #>  [9119,]  176 #>  [9120,]  175 #>  [9121,]  176 #>  [9122,]  175 #>  [9123,]  175 #>  [9124,]  175 #>  [9125,]  175 #>  [9126,]  176 #>  [9127,]  176 #>  [9128,]  175 #>  [9129,]  175 #>  [9130,]  176 #>  [9131,]  176 #>  [9132,]  176 #>  [9133,]  176 #>  [9134,]  175 #>  [9135,]  175 #>  [9136,]  176 #>  [9137,]  175 #>  [9138,]  176 #>  [9139,]  175 #>  [9140,]  175 #>  [9141,]  176 #>  [9142,]  176 #>  [9143,]  175 #>  [9144,]  175 #>  [9145,]  175 #>  [9146,]  175 #>  [9147,]  175 #>  [9148,]  176 #>  [9149,]  175 #>  [9150,]  175 #>  [9151,]  175 #>  [9152,]  175 #>  [9153,]  175 #>  [9154,]  175 #>  [9155,]  175 #>  [9156,]  175 #>  [9157,]  175 #>  [9158,]  176 #>  [9159,]  175 #>  [9160,]  176 #>  [9161,]  176 #>  [9162,]  176 #>  [9163,]  175 #>  [9164,]  176 #>  [9165,]  175 #>  [9166,]  175 #>  [9167,]  175 #>  [9168,]  176 #>  [9169,]  176 #>  [9170,]  175 #>  [9171,]  175 #>  [9172,]  175 #>  [9173,]  175 #>  [9174,]  176 #>  [9175,]  176 #>  [9176,]  175 #>  [9177,]  175 #>  [9178,]  175 #>  [9179,]  175 #>  [9180,]  175 #>  [9181,]  175 #>  [9182,]  176 #>  [9183,]  175 #>  [9184,]  175 #>  [9185,]  176 #>  [9186,]  175 #>  [9187,]  175 #>  [9188,]  175 #>  [9189,]  175 #>  [9190,]  175 #>  [9191,]  175 #>  [9192,]  176 #>  [9193,]  176 #>  [9194,]  175 #>  [9195,]  175 #>  [9196,]  176 #>  [9197,]  176 #>  [9198,]  175 #>  [9199,]  176 #>  [9200,]  175 #>  [9201,]  177 #>  [9202,]  178 #>  [9203,]  177 #>  [9204,]  177 #>  [9205,]  177 #>  [9206,]  177 #>  [9207,]  177 #>  [9208,]  177 #>  [9209,]  178 #>  [9210,]  178 #>  [9211,]  177 #>  [9212,]  178 #>  [9213,]  178 #>  [9214,]  177 #>  [9215,]  177 #>  [9216,]  177 #>  [9217,]  178 #>  [9218,]  177 #>  [9219,]  177 #>  [9220,]  177 #>  [9221,]  178 #>  [9222,]  177 #>  [9223,]  177 #>  [9224,]  178 #>  [9225,]  177 #>  [9226,]  177 #>  [9227,]  177 #>  [9228,]  177 #>  [9229,]  178 #>  [9230,]  177 #>  [9231,]  177 #>  [9232,]  178 #>  [9233,]  178 #>  [9234,]  177 #>  [9235,]  177 #>  [9236,]  177 #>  [9237,]  177 #>  [9238,]  177 #>  [9239,]  177 #>  [9240,]  178 #>  [9241,]  177 #>  [9242,]  177 #>  [9243,]  177 #>  [9244,]  177 #>  [9245,]  177 #>  [9246,]  177 #>  [9247,]  177 #>  [9248,]  177 #>  [9249,]  177 #>  [9250,]  177 #>  [9251,]  177 #>  [9252,]  177 #>  [9253,]  178 #>  [9254,]  177 #>  [9255,]  177 #>  [9256,]  177 #>  [9257,]  177 #>  [9258,]  177 #>  [9259,]  177 #>  [9260,]  178 #>  [9261,]  178 #>  [9262,]  177 #>  [9263,]  178 #>  [9264,]  177 #>  [9265,]  177 #>  [9266,]  177 #>  [9267,]  177 #>  [9268,]  177 #>  [9269,]  177 #>  [9270,]  178 #>  [9271,]  177 #>  [9272,]  177 #>  [9273,]  177 #>  [9274,]  177 #>  [9275,]  178 #>  [9276,]  177 #>  [9277,]  177 #>  [9278,]  177 #>  [9279,]  177 #>  [9280,]  178 #>  [9281,]  178 #>  [9282,]  177 #>  [9283,]  178 #>  [9284,]  177 #>  [9285,]  177 #>  [9286,]  178 #>  [9287,]  177 #>  [9288,]  177 #>  [9289,]  177 #>  [9290,]  177 #>  [9291,]  177 #>  [9292,]  177 #>  [9293,]  177 #>  [9294,]  177 #>  [9295,]  177 #>  [9296,]  177 #>  [9297,]  177 #>  [9298,]  177 #>  [9299,]  177 #>  [9300,]  177 #>  [9301,]  179 #>  [9302,]  180 #>  [9303,]  179 #>  [9304,]  179 #>  [9305,]  179 #>  [9306,]  179 #>  [9307,]  179 #>  [9308,]  179 #>  [9309,]  180 #>  [9310,]  180 #>  [9311,]  179 #>  [9312,]  180 #>  [9313,]  179 #>  [9314,]  179 #>  [9315,]  179 #>  [9316,]  179 #>  [9317,]  179 #>  [9318,]  179 #>  [9319,]  179 #>  [9320,]  179 #>  [9321,]  180 #>  [9322,]  179 #>  [9323,]  179 #>  [9324,]  179 #>  [9325,]  179 #>  [9326,]  179 #>  [9327,]  179 #>  [9328,]  179 #>  [9329,]  180 #>  [9330,]  179 #>  [9331,]  179 #>  [9332,]  179 #>  [9333,]  180 #>  [9334,]  179 #>  [9335,]  179 #>  [9336,]  179 #>  [9337,]  179 #>  [9338,]  179 #>  [9339,]  179 #>  [9340,]  179 #>  [9341,]  179 #>  [9342,]  179 #>  [9343,]  179 #>  [9344,]  179 #>  [9345,]  179 #>  [9346,]  179 #>  [9347,]  179 #>  [9348,]  179 #>  [9349,]  179 #>  [9350,]  179 #>  [9351,]  179 #>  [9352,]  179 #>  [9353,]  179 #>  [9354,]  179 #>  [9355,]  179 #>  [9356,]  179 #>  [9357,]  179 #>  [9358,]  179 #>  [9359,]  179 #>  [9360,]  180 #>  [9361,]  179 #>  [9362,]  179 #>  [9363,]  179 #>  [9364,]  179 #>  [9365,]  179 #>  [9366,]  179 #>  [9367,]  179 #>  [9368,]  179 #>  [9369,]  179 #>  [9370,]  180 #>  [9371,]  179 #>  [9372,]  179 #>  [9373,]  179 #>  [9374,]  179 #>  [9375,]  179 #>  [9376,]  179 #>  [9377,]  179 #>  [9378,]  179 #>  [9379,]  179 #>  [9380,]  179 #>  [9381,]  179 #>  [9382,]  179 #>  [9383,]  179 #>  [9384,]  179 #>  [9385,]  179 #>  [9386,]  180 #>  [9387,]  179 #>  [9388,]  179 #>  [9389,]  179 #>  [9390,]  179 #>  [9391,]  179 #>  [9392,]  179 #>  [9393,]  179 #>  [9394,]  179 #>  [9395,]  179 #>  [9396,]  179 #>  [9397,]  179 #>  [9398,]  179 #>  [9399,]  179 #>  [9400,]  179 #>  [9401,]  182 #>  [9402,]  182 #>  [9403,]  181 #>  [9404,]  182 #>  [9405,]  182 #>  [9406,]  181 #>  [9407,]  182 #>  [9408,]  182 #>  [9409,]  182 #>  [9410,]  182 #>  [9411,]  182 #>  [9412,]  182 #>  [9413,]  182 #>  [9414,]  182 #>  [9415,]  182 #>  [9416,]  182 #>  [9417,]  182 #>  [9418,]  182 #>  [9419,]  181 #>  [9420,]  182 #>  [9421,]  182 #>  [9422,]  182 #>  [9423,]  182 #>  [9424,]  182 #>  [9425,]  182 #>  [9426,]  182 #>  [9427,]  182 #>  [9428,]  182 #>  [9429,]  182 #>  [9430,]  182 #>  [9431,]  182 #>  [9432,]  182 #>  [9433,]  182 #>  [9434,]  181 #>  [9435,]  182 #>  [9436,]  182 #>  [9437,]  181 #>  [9438,]  181 #>  [9439,]  182 #>  [9440,]  182 #>  [9441,]  182 #>  [9442,]  182 #>  [9443,]  182 #>  [9444,]  182 #>  [9445,]  181 #>  [9446,]  182 #>  [9447,]  182 #>  [9448,]  182 #>  [9449,]  181 #>  [9450,]  182 #>  [9451,]  182 #>  [9452,]  181 #>  [9453,]  182 #>  [9454,]  182 #>  [9455,]  182 #>  [9456,]  182 #>  [9457,]  182 #>  [9458,]  182 #>  [9459,]  182 #>  [9460,]  182 #>  [9461,]  182 #>  [9462,]  182 #>  [9463,]  182 #>  [9464,]  181 #>  [9465,]  182 #>  [9466,]  182 #>  [9467,]  182 #>  [9468,]  181 #>  [9469,]  182 #>  [9470,]  182 #>  [9471,]  182 #>  [9472,]  181 #>  [9473,]  182 #>  [9474,]  182 #>  [9475,]  182 #>  [9476,]  182 #>  [9477,]  182 #>  [9478,]  182 #>  [9479,]  182 #>  [9480,]  182 #>  [9481,]  182 #>  [9482,]  182 #>  [9483,]  182 #>  [9484,]  182 #>  [9485,]  182 #>  [9486,]  182 #>  [9487,]  182 #>  [9488,]  182 #>  [9489,]  182 #>  [9490,]  182 #>  [9491,]  182 #>  [9492,]  182 #>  [9493,]  182 #>  [9494,]  182 #>  [9495,]  182 #>  [9496,]  181 #>  [9497,]  181 #>  [9498,]  182 #>  [9499,]  182 #>  [9500,]  182 #>  [9501,]  183 #>  [9502,]  183 #>  [9503,]  183 #>  [9504,]  184 #>  [9505,]  183 #>  [9506,]  184 #>  [9507,]  183 #>  [9508,]  183 #>  [9509,]  184 #>  [9510,]  184 #>  [9511,]  184 #>  [9512,]  184 #>  [9513,]  183 #>  [9514,]  184 #>  [9515,]  184 #>  [9516,]  183 #>  [9517,]  183 #>  [9518,]  184 #>  [9519,]  184 #>  [9520,]  183 #>  [9521,]  184 #>  [9522,]  183 #>  [9523,]  184 #>  [9524,]  183 #>  [9525,]  183 #>  [9526,]  184 #>  [9527,]  184 #>  [9528,]  183 #>  [9529,]  183 #>  [9530,]  184 #>  [9531,]  184 #>  [9532,]  184 #>  [9533,]  184 #>  [9534,]  184 #>  [9535,]  183 #>  [9536,]  184 #>  [9537,]  183 #>  [9538,]  184 #>  [9539,]  183 #>  [9540,]  183 #>  [9541,]  184 #>  [9542,]  184 #>  [9543,]  183 #>  [9544,]  183 #>  [9545,]  183 #>  [9546,]  183 #>  [9547,]  183 #>  [9548,]  184 #>  [9549,]  183 #>  [9550,]  183 #>  [9551,]  183 #>  [9552,]  184 #>  [9553,]  183 #>  [9554,]  183 #>  [9555,]  183 #>  [9556,]  183 #>  [9557,]  183 #>  [9558,]  184 #>  [9559,]  183 #>  [9560,]  184 #>  [9561,]  184 #>  [9562,]  184 #>  [9563,]  183 #>  [9564,]  184 #>  [9565,]  183 #>  [9566,]  183 #>  [9567,]  184 #>  [9568,]  184 #>  [9569,]  184 #>  [9570,]  183 #>  [9571,]  183 #>  [9572,]  183 #>  [9573,]  184 #>  [9574,]  184 #>  [9575,]  184 #>  [9576,]  183 #>  [9577,]  183 #>  [9578,]  183 #>  [9579,]  183 #>  [9580,]  184 #>  [9581,]  183 #>  [9582,]  184 #>  [9583,]  183 #>  [9584,]  183 #>  [9585,]  184 #>  [9586,]  183 #>  [9587,]  183 #>  [9588,]  183 #>  [9589,]  183 #>  [9590,]  183 #>  [9591,]  183 #>  [9592,]  184 #>  [9593,]  184 #>  [9594,]  183 #>  [9595,]  183 #>  [9596,]  184 #>  [9597,]  184 #>  [9598,]  183 #>  [9599,]  184 #>  [9600,]  183 #>  [9601,]  186 #>  [9602,]  186 #>  [9603,]  185 #>  [9604,]  185 #>  [9605,]  186 #>  [9606,]  186 #>  [9607,]  185 #>  [9608,]  185 #>  [9609,]  186 #>  [9610,]  185 #>  [9611,]  186 #>  [9612,]  185 #>  [9613,]  186 #>  [9614,]  185 #>  [9615,]  186 #>  [9616,]  185 #>  [9617,]  186 #>  [9618,]  186 #>  [9619,]  186 #>  [9620,]  186 #>  [9621,]  186 #>  [9622,]  186 #>  [9623,]  185 #>  [9624,]  186 #>  [9625,]  185 #>  [9626,]  185 #>  [9627,]  186 #>  [9628,]  186 #>  [9629,]  186 #>  [9630,]  186 #>  [9631,]  185 #>  [9632,]  185 #>  [9633,]  186 #>  [9634,]  186 #>  [9635,]  185 #>  [9636,]  186 #>  [9637,]  185 #>  [9638,]  186 #>  [9639,]  186 #>  [9640,]  185 #>  [9641,]  186 #>  [9642,]  186 #>  [9643,]  186 #>  [9644,]  185 #>  [9645,]  185 #>  [9646,]  185 #>  [9647,]  185 #>  [9648,]  186 #>  [9649,]  186 #>  [9650,]  186 #>  [9651,]  186 #>  [9652,]  185 #>  [9653,]  186 #>  [9654,]  186 #>  [9655,]  185 #>  [9656,]  186 #>  [9657,]  185 #>  [9658,]  186 #>  [9659,]  185 #>  [9660,]  185 #>  [9661,]  186 #>  [9662,]  186 #>  [9663,]  186 #>  [9664,]  186 #>  [9665,]  186 #>  [9666,]  186 #>  [9667,]  185 #>  [9668,]  185 #>  [9669,]  186 #>  [9670,]  186 #>  [9671,]  186 #>  [9672,]  185 #>  [9673,]  186 #>  [9674,]  185 #>  [9675,]  185 #>  [9676,]  185 #>  [9677,]  186 #>  [9678,]  185 #>  [9679,]  186 #>  [9680,]  185 #>  [9681,]  186 #>  [9682,]  186 #>  [9683,]  186 #>  [9684,]  186 #>  [9685,]  186 #>  [9686,]  185 #>  [9687,]  186 #>  [9688,]  185 #>  [9689,]  186 #>  [9690,]  186 #>  [9691,]  186 #>  [9692,]  185 #>  [9693,]  186 #>  [9694,]  186 #>  [9695,]  185 #>  [9696,]  185 #>  [9697,]  185 #>  [9698,]  185 #>  [9699,]  186 #>  [9700,]  186 #>  [9701,]  187 #>  [9702,]  188 #>  [9703,]  187 #>  [9704,]  187 #>  [9705,]  188 #>  [9706,]  187 #>  [9707,]  187 #>  [9708,]  187 #>  [9709,]  188 #>  [9710,]  188 #>  [9711,]  187 #>  [9712,]  188 #>  [9713,]  188 #>  [9714,]  187 #>  [9715,]  187 #>  [9716,]  187 #>  [9717,]  188 #>  [9718,]  188 #>  [9719,]  187 #>  [9720,]  188 #>  [9721,]  188 #>  [9722,]  187 #>  [9723,]  188 #>  [9724,]  188 #>  [9725,]  187 #>  [9726,]  187 #>  [9727,]  188 #>  [9728,]  187 #>  [9729,]  188 #>  [9730,]  187 #>  [9731,]  188 #>  [9732,]  188 #>  [9733,]  188 #>  [9734,]  187 #>  [9735,]  187 #>  [9736,]  188 #>  [9737,]  187 #>  [9738,]  187 #>  [9739,]  187 #>  [9740,]  188 #>  [9741,]  187 #>  [9742,]  187 #>  [9743,]  187 #>  [9744,]  187 #>  [9745,]  187 #>  [9746,]  187 #>  [9747,]  187 #>  [9748,]  187 #>  [9749,]  187 #>  [9750,]  187 #>  [9751,]  187 #>  [9752,]  187 #>  [9753,]  188 #>  [9754,]  187 #>  [9755,]  187 #>  [9756,]  187 #>  [9757,]  187 #>  [9758,]  187 #>  [9759,]  187 #>  [9760,]  188 #>  [9761,]  188 #>  [9762,]  187 #>  [9763,]  188 #>  [9764,]  187 #>  [9765,]  187 #>  [9766,]  187 #>  [9767,]  187 #>  [9768,]  187 #>  [9769,]  187 #>  [9770,]  188 #>  [9771,]  187 #>  [9772,]  187 #>  [9773,]  187 #>  [9774,]  187 #>  [9775,]  188 #>  [9776,]  187 #>  [9777,]  187 #>  [9778,]  187 #>  [9779,]  187 #>  [9780,]  188 #>  [9781,]  188 #>  [9782,]  187 #>  [9783,]  188 #>  [9784,]  188 #>  [9785,]  187 #>  [9786,]  188 #>  [9787,]  187 #>  [9788,]  188 #>  [9789,]  187 #>  [9790,]  187 #>  [9791,]  187 #>  [9792,]  187 #>  [9793,]  187 #>  [9794,]  187 #>  [9795,]  187 #>  [9796,]  187 #>  [9797,]  187 #>  [9798,]  187 #>  [9799,]  187 #>  [9800,]  187 #>  [9801,]  190 #>  [9802,]  190 #>  [9803,]  189 #>  [9804,]  189 #>  [9805,]  190 #>  [9806,]  190 #>  [9807,]  189 #>  [9808,]  189 #>  [9809,]  190 #>  [9810,]  190 #>  [9811,]  190 #>  [9812,]  189 #>  [9813,]  190 #>  [9814,]  190 #>  [9815,]  190 #>  [9816,]  190 #>  [9817,]  190 #>  [9818,]  190 #>  [9819,]  190 #>  [9820,]  190 #>  [9821,]  190 #>  [9822,]  190 #>  [9823,]  189 #>  [9824,]  190 #>  [9825,]  189 #>  [9826,]  190 #>  [9827,]  190 #>  [9828,]  190 #>  [9829,]  190 #>  [9830,]  190 #>  [9831,]  189 #>  [9832,]  190 #>  [9833,]  190 #>  [9834,]  190 #>  [9835,]  190 #>  [9836,]  190 #>  [9837,]  189 #>  [9838,]  190 #>  [9839,]  190 #>  [9840,]  189 #>  [9841,]  190 #>  [9842,]  190 #>  [9843,]  190 #>  [9844,]  190 #>  [9845,]  190 #>  [9846,]  189 #>  [9847,]  189 #>  [9848,]  190 #>  [9849,]  190 #>  [9850,]  190 #>  [9851,]  190 #>  [9852,]  189 #>  [9853,]  190 #>  [9854,]  190 #>  [9855,]  189 #>  [9856,]  190 #>  [9857,]  189 #>  [9858,]  190 #>  [9859,]  189 #>  [9860,]  189 #>  [9861,]  190 #>  [9862,]  190 #>  [9863,]  190 #>  [9864,]  190 #>  [9865,]  190 #>  [9866,]  190 #>  [9867,]  190 #>  [9868,]  189 #>  [9869,]  190 #>  [9870,]  190 #>  [9871,]  190 #>  [9872,]  190 #>  [9873,]  190 #>  [9874,]  189 #>  [9875,]  190 #>  [9876,]  190 #>  [9877,]  190 #>  [9878,]  190 #>  [9879,]  190 #>  [9880,]  189 #>  [9881,]  190 #>  [9882,]  190 #>  [9883,]  190 #>  [9884,]  190 #>  [9885,]  190 #>  [9886,]  189 #>  [9887,]  190 #>  [9888,]  190 #>  [9889,]  190 #>  [9890,]  190 #>  [9891,]  190 #>  [9892,]  189 #>  [9893,]  190 #>  [9894,]  190 #>  [9895,]  190 #>  [9896,]  189 #>  [9897,]  189 #>  [9898,]  189 #>  [9899,]  190 #>  [9900,]  190 #>  [9901,]  191 #>  [9902,]  191 #>  [9903,]  191 #>  [9904,]  191 #>  [9905,]  192 #>  [9906,]  191 #>  [9907,]  191 #>  [9908,]  191 #>  [9909,]  191 #>  [9910,]  191 #>  [9911,]  191 #>  [9912,]  191 #>  [9913,]  191 #>  [9914,]  191 #>  [9915,]  191 #>  [9916,]  191 #>  [9917,]  191 #>  [9918,]  192 #>  [9919,]  191 #>  [9920,]  191 #>  [9921,]  191 #>  [9922,]  191 #>  [9923,]  191 #>  [9924,]  191 #>  [9925,]  191 #>  [9926,]  191 #>  [9927,]  191 #>  [9928,]  191 #>  [9929,]  191 #>  [9930,]  191 #>  [9931,]  191 #>  [9932,]  191 #>  [9933,]  191 #>  [9934,]  191 #>  [9935,]  191 #>  [9936,]  191 #>  [9937,]  191 #>  [9938,]  191 #>  [9939,]  191 #>  [9940,]  191 #>  [9941,]  191 #>  [9942,]  191 #>  [9943,]  191 #>  [9944,]  191 #>  [9945,]  191 #>  [9946,]  191 #>  [9947,]  191 #>  [9948,]  191 #>  [9949,]  191 #>  [9950,]  191 #>  [9951,]  191 #>  [9952,]  191 #>  [9953,]  191 #>  [9954,]  191 #>  [9955,]  191 #>  [9956,]  191 #>  [9957,]  191 #>  [9958,]  191 #>  [9959,]  191 #>  [9960,]  191 #>  [9961,]  191 #>  [9962,]  191 #>  [9963,]  191 #>  [9964,]  191 #>  [9965,]  191 #>  [9966,]  191 #>  [9967,]  191 #>  [9968,]  191 #>  [9969,]  191 #>  [9970,]  191 #>  [9971,]  192 #>  [9972,]  191 #>  [9973,]  191 #>  [9974,]  191 #>  [9975,]  192 #>  [9976,]  191 #>  [9977,]  191 #>  [9978,]  191 #>  [9979,]  191 #>  [9980,]  191 #>  [9981,]  191 #>  [9982,]  191 #>  [9983,]  191 #>  [9984,]  191 #>  [9985,]  191 #>  [9986,]  191 #>  [9987,]  191 #>  [9988,]  191 #>  [9989,]  191 #>  [9990,]  191 #>  [9991,]  191 #>  [9992,]  191 #>  [9993,]  191 #>  [9994,]  191 #>  [9995,]  192 #>  [9996,]  191 #>  [9997,]  191 #>  [9998,]  191 #>  [9999,]  191 #> [10000,]  192 #> [10001,]  194 #> [10002,]  194 #> [10003,]  193 #> [10004,]  194 #> [10005,]  194 #> [10006,]  194 #> [10007,]  193 #> [10008,]  193 #> [10009,]  194 #> [10010,]  194 #> [10011,]  194 #> [10012,]  194 #> [10013,]  193 #> [10014,]  194 #> [10015,]  194 #> [10016,]  193 #> [10017,]  193 #> [10018,]  194 #> [10019,]  194 #> [10020,]  193 #> [10021,]  194 #> [10022,]  193 #> [10023,]  194 #> [10024,]  193 #> [10025,]  193 #> [10026,]  194 #> [10027,]  194 #> [10028,]  194 #> [10029,]  194 #> [10030,]  194 #> [10031,]  194 #> [10032,]  194 #> [10033,]  194 #> [10034,]  194 #> [10035,]  194 #> [10036,]  194 #> [10037,]  194 #> [10038,]  194 #> [10039,]  193 #> [10040,]  193 #> [10041,]  194 #> [10042,]  194 #> [10043,]  193 #> [10044,]  193 #> [10045,]  193 #> [10046,]  193 #> [10047,]  193 #> [10048,]  194 #> [10049,]  193 #> [10050,]  193 #> [10051,]  194 #> [10052,]  194 #> [10053,]  193 #> [10054,]  193 #> [10055,]  193 #> [10056,]  193 #> [10057,]  194 #> [10058,]  194 #> [10059,]  193 #> [10060,]  194 #> [10061,]  194 #> [10062,]  194 #> [10063,]  193 #> [10064,]  194 #> [10065,]  193 #> [10066,]  193 #> [10067,]  194 #> [10068,]  194 #> [10069,]  194 #> [10070,]  193 #> [10071,]  194 #> [10072,]  193 #> [10073,]  194 #> [10074,]  194 #> [10075,]  194 #> [10076,]  194 #> [10077,]  193 #> [10078,]  193 #> [10079,]  193 #> [10080,]  194 #> [10081,]  194 #> [10082,]  194 #> [10083,]  194 #> [10084,]  193 #> [10085,]  194 #> [10086,]  193 #> [10087,]  194 #> [10088,]  194 #> [10089,]  193 #> [10090,]  193 #> [10091,]  194 #> [10092,]  194 #> [10093,]  194 #> [10094,]  193 #> [10095,]  194 #> [10096,]  194 #> [10097,]  194 #> [10098,]  193 #> [10099,]  194 #> [10100,]  193 #> [10101,]  196 #> [10102,]  196 #> [10103,]  195 #> [10104,]  195 #> [10105,]  195 #> [10106,]  196 #> [10107,]  195 #> [10108,]  195 #> [10109,]  195 #> [10110,]  195 #> [10111,]  195 #> [10112,]  195 #> [10113,]  196 #> [10114,]  196 #> [10115,]  196 #> [10116,]  196 #> [10117,]  196 #> [10118,]  195 #> [10119,]  195 #> [10120,]  195 #> [10121,]  196 #> [10122,]  195 #> [10123,]  195 #> [10124,]  195 #> [10125,]  195 #> [10126,]  196 #> [10127,]  196 #> [10128,]  195 #> [10129,]  196 #> [10130,]  195 #> [10131,]  195 #> [10132,]  195 #> [10133,]  196 #> [10134,]  195 #> [10135,]  196 #> [10136,]  195 #> [10137,]  195 #> [10138,]  195 #> [10139,]  195 #> [10140,]  195 #> [10141,]  196 #> [10142,]  195 #> [10143,]  195 #> [10144,]  196 #> [10145,]  195 #> [10146,]  195 #> [10147,]  195 #> [10148,]  195 #> [10149,]  195 #> [10150,]  196 #> [10151,]  195 #> [10152,]  195 #> [10153,]  195 #> [10154,]  195 #> [10155,]  195 #> [10156,]  195 #> [10157,]  195 #> [10158,]  195 #> [10159,]  196 #> [10160,]  195 #> [10161,]  196 #> [10162,]  195 #> [10163,]  195 #> [10164,]  195 #> [10165,]  195 #> [10166,]  195 #> [10167,]  195 #> [10168,]  196 #> [10169,]  195 #> [10170,]  196 #> [10171,]  196 #> [10172,]  195 #> [10173,]  196 #> [10174,]  195 #> [10175,]  195 #> [10176,]  196 #> [10177,]  196 #> [10178,]  195 #> [10179,]  196 #> [10180,]  195 #> [10181,]  196 #> [10182,]  195 #> [10183,]  196 #> [10184,]  195 #> [10185,]  195 #> [10186,]  196 #> [10187,]  195 #> [10188,]  195 #> [10189,]  195 #> [10190,]  195 #> [10191,]  195 #> [10192,]  195 #> [10193,]  196 #> [10194,]  196 #> [10195,]  195 #> [10196,]  196 #> [10197,]  195 #> [10198,]  195 #> [10199,]  196 #> [10200,]  195 #> [10201,]  198 #> [10202,]  198 #> [10203,]  197 #> [10204,]  198 #> [10205,]  198 #> [10206,]  197 #> [10207,]  197 #> [10208,]  198 #> [10209,]  198 #> [10210,]  198 #> [10211,]  198 #> [10212,]  198 #> [10213,]  198 #> [10214,]  198 #> [10215,]  198 #> [10216,]  198 #> [10217,]  198 #> [10218,]  198 #> [10219,]  198 #> [10220,]  197 #> [10221,]  197 #> [10222,]  198 #> [10223,]  197 #> [10224,]  198 #> [10225,]  197 #> [10226,]  198 #> [10227,]  198 #> [10228,]  198 #> [10229,]  197 #> [10230,]  198 #> [10231,]  198 #> [10232,]  198 #> [10233,]  198 #> [10234,]  197 #> [10235,]  197 #> [10236,]  197 #> [10237,]  197 #> [10238,]  198 #> [10239,]  198 #> [10240,]  198 #> [10241,]  197 #> [10242,]  197 #> [10243,]  198 #> [10244,]  197 #> [10245,]  197 #> [10246,]  198 #> [10247,]  198 #> [10248,]  198 #> [10249,]  198 #> [10250,]  197 #> [10251,]  198 #> [10252,]  198 #> [10253,]  197 #> [10254,]  197 #> [10255,]  197 #> [10256,]  197 #> [10257,]  197 #> [10258,]  198 #> [10259,]  198 #> [10260,]  197 #> [10261,]  198 #> [10262,]  198 #> [10263,]  198 #> [10264,]  197 #> [10265,]  197 #> [10266,]  198 #> [10267,]  198 #> [10268,]  198 #> [10269,]  198 #> [10270,]  198 #> [10271,]  198 #> [10272,]  198 #> [10273,]  197 #> [10274,]  197 #> [10275,]  198 #> [10276,]  198 #> [10277,]  198 #> [10278,]  198 #> [10279,]  198 #> [10280,]  197 #> [10281,]  197 #> [10282,]  197 #> [10283,]  198 #> [10284,]  197 #> [10285,]  197 #> [10286,]  197 #> [10287,]  198 #> [10288,]  197 #> [10289,]  197 #> [10290,]  198 #> [10291,]  198 #> [10292,]  198 #> [10293,]  198 #> [10294,]  197 #> [10295,]  198 #> [10296,]  198 #> [10297,]  197 #> [10298,]  197 #> [10299,]  197 #> [10300,]  198 #> [10301,]  200 #> [10302,]  200 #> [10303,]  200 #> [10304,]  199 #> [10305,]  200 #> [10306,]  200 #> [10307,]  200 #> [10308,]  199 #> [10309,]  199 #> [10310,]  200 #> [10311,]  199 #> [10312,]  200 #> [10313,]  200 #> [10314,]  200 #> [10315,]  200 #> [10316,]  200 #> [10317,]  199 #> [10318,]  200 #> [10319,]  200 #> [10320,]  200 #> [10321,]  200 #> [10322,]  199 #> [10323,]  200 #> [10324,]  200 #> [10325,]  200 #> [10326,]  200 #> [10327,]  199 #> [10328,]  200 #> [10329,]  200 #> [10330,]  200 #> [10331,]  200 #> [10332,]  200 #> [10333,]  200 #> [10334,]  200 #> [10335,]  199 #> [10336,]  200 #> [10337,]  200 #> [10338,]  200 #> [10339,]  200 #> [10340,]  200 #> [10341,]  200 #> [10342,]  200 #> [10343,]  200 #> [10344,]  199 #> [10345,]  200 #> [10346,]  200 #> [10347,]  200 #> [10348,]  200 #> [10349,]  200 #> [10350,]  200 #> [10351,]  200 #> [10352,]  199 #> [10353,]  200 #> [10354,]  200 #> [10355,]  200 #> [10356,]  200 #> [10357,]  200 #> [10358,]  199 #> [10359,]  200 #> [10360,]  200 #> [10361,]  200 #> [10362,]  200 #> [10363,]  200 #> [10364,]  200 #> [10365,]  200 #> [10366,]  199 #> [10367,]  200 #> [10368,]  200 #> [10369,]  200 #> [10370,]  200 #> [10371,]  200 #> [10372,]  200 #> [10373,]  200 #> [10374,]  200 #> [10375,]  200 #> [10376,]  200 #> [10377,]  200 #> [10378,]  200 #> [10379,]  200 #> [10380,]  200 #> [10381,]  199 #> [10382,]  199 #> [10383,]  200 #> [10384,]  200 #> [10385,]  200 #> [10386,]  200 #> [10387,]  199 #> [10388,]  200 #> [10389,]  200 #> [10390,]  199 #> [10391,]  200 #> [10392,]  199 #> [10393,]  200 #> [10394,]  200 #> [10395,]  199 #> [10396,]  200 #> [10397,]  200 #> [10398,]  200 #> [10399,]  199 #> [10400,]  200 #> [10401,]  202 #> [10402,]  201 #> [10403,]  201 #> [10404,]  202 #> [10405,]  201 #> [10406,]  201 #> [10407,]  202 #> [10408,]  202 #> [10409,]  201 #> [10410,]  202 #> [10411,]  201 #> [10412,]  201 #> [10413,]  202 #> [10414,]  201 #> [10415,]  202 #> [10416,]  202 #> [10417,]  202 #> [10418,]  202 #> [10419,]  201 #> [10420,]  201 #> [10421,]  202 #> [10422,]  201 #> [10423,]  202 #> [10424,]  201 #> [10425,]  202 #> [10426,]  201 #> [10427,]  202 #> [10428,]  202 #> [10429,]  201 #> [10430,]  201 #> [10431,]  201 #> [10432,]  201 #> [10433,]  201 #> [10434,]  201 #> [10435,]  201 #> [10436,]  201 #> [10437,]  201 #> [10438,]  201 #> [10439,]  202 #> [10440,]  201 #> [10441,]  201 #> [10442,]  201 #> [10443,]  202 #> [10444,]  201 #> [10445,]  202 #> [10446,]  202 #> [10447,]  202 #> [10448,]  201 #> [10449,]  201 #> [10450,]  201 #> [10451,]  201 #> [10452,]  201 #> [10453,]  202 #> [10454,]  201 #> [10455,]  201 #> [10456,]  202 #> [10457,]  201 #> [10458,]  201 #> [10459,]  201 #> [10460,]  201 #> [10461,]  202 #> [10462,]  201 #> [10463,]  201 #> [10464,]  202 #> [10465,]  201 #> [10466,]  201 #> [10467,]  201 #> [10468,]  201 #> [10469,]  201 #> [10470,]  202 #> [10471,]  202 #> [10472,]  202 #> [10473,]  202 #> [10474,]  202 #> [10475,]  202 #> [10476,]  202 #> [10477,]  202 #> [10478,]  201 #> [10479,]  201 #> [10480,]  201 #> [10481,]  201 #> [10482,]  202 #> [10483,]  201 #> [10484,]  202 #> [10485,]  201 #> [10486,]  201 #> [10487,]  201 #> [10488,]  202 #> [10489,]  201 #> [10490,]  201 #> [10491,]  201 #> [10492,]  201 #> [10493,]  201 #> [10494,]  202 #> [10495,]  202 #> [10496,]  201 #> [10497,]  201 #> [10498,]  201 #> [10499,]  201 #> [10500,]  202 #> [10501,]  204 #> [10502,]  204 #> [10503,]  204 #> [10504,]  203 #> [10505,]  204 #> [10506,]  204 #> [10507,]  204 #> [10508,]  203 #> [10509,]  203 #> [10510,]  203 #> [10511,]  204 #> [10512,]  204 #> [10513,]  204 #> [10514,]  204 #> [10515,]  204 #> [10516,]  204 #> [10517,]  204 #> [10518,]  204 #> [10519,]  204 #> [10520,]  204 #> [10521,]  204 #> [10522,]  204 #> [10523,]  204 #> [10524,]  204 #> [10525,]  204 #> [10526,]  204 #> [10527,]  204 #> [10528,]  204 #> [10529,]  204 #> [10530,]  204 #> [10531,]  204 #> [10532,]  204 #> [10533,]  204 #> [10534,]  204 #> [10535,]  204 #> [10536,]  204 #> [10537,]  204 #> [10538,]  204 #> [10539,]  204 #> [10540,]  204 #> [10541,]  204 #> [10542,]  204 #> [10543,]  204 #> [10544,]  204 #> [10545,]  204 #> [10546,]  204 #> [10547,]  204 #> [10548,]  204 #> [10549,]  204 #> [10550,]  204 #> [10551,]  203 #> [10552,]  204 #> [10553,]  204 #> [10554,]  204 #> [10555,]  204 #> [10556,]  204 #> [10557,]  204 #> [10558,]  204 #> [10559,]  204 #> [10560,]  204 #> [10561,]  204 #> [10562,]  204 #> [10563,]  204 #> [10564,]  204 #> [10565,]  204 #> [10566,]  204 #> [10567,]  204 #> [10568,]  204 #> [10569,]  204 #> [10570,]  204 #> [10571,]  204 #> [10572,]  204 #> [10573,]  204 #> [10574,]  204 #> [10575,]  204 #> [10576,]  204 #> [10577,]  204 #> [10578,]  204 #> [10579,]  204 #> [10580,]  204 #> [10581,]  204 #> [10582,]  204 #> [10583,]  204 #> [10584,]  204 #> [10585,]  203 #> [10586,]  204 #> [10587,]  204 #> [10588,]  204 #> [10589,]  204 #> [10590,]  204 #> [10591,]  203 #> [10592,]  204 #> [10593,]  204 #> [10594,]  204 #> [10595,]  203 #> [10596,]  204 #> [10597,]  204 #> [10598,]  204 #> [10599,]  204 #> [10600,]  204 #> [10601,]  206 #> [10602,]  205 #> [10603,]  205 #> [10604,]  205 #> [10605,]  206 #> [10606,]  205 #> [10607,]  205 #> [10608,]  205 #> [10609,]  205 #> [10610,]  206 #> [10611,]  206 #> [10612,]  206 #> [10613,]  205 #> [10614,]  206 #> [10615,]  206 #> [10616,]  205 #> [10617,]  206 #> [10618,]  206 #> [10619,]  206 #> [10620,]  205 #> [10621,]  205 #> [10622,]  206 #> [10623,]  205 #> [10624,]  206 #> [10625,]  205 #> [10626,]  206 #> [10627,]  206 #> [10628,]  205 #> [10629,]  205 #> [10630,]  205 #> [10631,]  206 #> [10632,]  206 #> [10633,]  205 #> [10634,]  205 #> [10635,]  205 #> [10636,]  205 #> [10637,]  205 #> [10638,]  206 #> [10639,]  206 #> [10640,]  205 #> [10641,]  205 #> [10642,]  205 #> [10643,]  206 #> [10644,]  205 #> [10645,]  205 #> [10646,]  205 #> [10647,]  206 #> [10648,]  205 #> [10649,]  205 #> [10650,]  205 #> [10651,]  206 #> [10652,]  206 #> [10653,]  205 #> [10654,]  205 #> [10655,]  205 #> [10656,]  205 #> [10657,]  205 #> [10658,]  206 #> [10659,]  206 #> [10660,]  205 #> [10661,]  206 #> [10662,]  205 #> [10663,]  205 #> [10664,]  205 #> [10665,]  205 #> [10666,]  206 #> [10667,]  205 #> [10668,]  206 #> [10669,]  205 #> [10670,]  206 #> [10671,]  206 #> [10672,]  205 #> [10673,]  205 #> [10674,]  205 #> [10675,]  206 #> [10676,]  205 #> [10677,]  206 #> [10678,]  205 #> [10679,]  206 #> [10680,]  205 #> [10681,]  205 #> [10682,]  205 #> [10683,]  206 #> [10684,]  205 #> [10685,]  205 #> [10686,]  205 #> [10687,]  206 #> [10688,]  205 #> [10689,]  205 #> [10690,]  206 #> [10691,]  206 #> [10692,]  206 #> [10693,]  205 #> [10694,]  205 #> [10695,]  206 #> [10696,]  206 #> [10697,]  205 #> [10698,]  205 #> [10699,]  205 #> [10700,]  206 #> [10701,]  208 #> [10702,]  208 #> [10703,]  207 #> [10704,]  207 #> [10705,]  208 #> [10706,]  208 #> [10707,]  207 #> [10708,]  207 #> [10709,]  208 #> [10710,]  208 #> [10711,]  208 #> [10712,]  207 #> [10713,]  208 #> [10714,]  208 #> [10715,]  208 #> [10716,]  208 #> [10717,]  208 #> [10718,]  208 #> [10719,]  208 #> [10720,]  208 #> [10721,]  208 #> [10722,]  208 #> [10723,]  207 #> [10724,]  208 #> [10725,]  207 #> [10726,]  208 #> [10727,]  208 #> [10728,]  208 #> [10729,]  208 #> [10730,]  208 #> [10731,]  207 #> [10732,]  208 #> [10733,]  208 #> [10734,]  208 #> [10735,]  208 #> [10736,]  208 #> [10737,]  207 #> [10738,]  208 #> [10739,]  208 #> [10740,]  207 #> [10741,]  208 #> [10742,]  208 #> [10743,]  208 #> [10744,]  208 #> [10745,]  208 #> [10746,]  207 #> [10747,]  207 #> [10748,]  208 #> [10749,]  208 #> [10750,]  208 #> [10751,]  208 #> [10752,]  207 #> [10753,]  208 #> [10754,]  208 #> [10755,]  207 #> [10756,]  208 #> [10757,]  207 #> [10758,]  208 #> [10759,]  207 #> [10760,]  207 #> [10761,]  208 #> [10762,]  208 #> [10763,]  208 #> [10764,]  208 #> [10765,]  208 #> [10766,]  208 #> [10767,]  208 #> [10768,]  207 #> [10769,]  208 #> [10770,]  208 #> [10771,]  208 #> [10772,]  208 #> [10773,]  208 #> [10774,]  207 #> [10775,]  208 #> [10776,]  208 #> [10777,]  208 #> [10778,]  208 #> [10779,]  208 #> [10780,]  207 #> [10781,]  208 #> [10782,]  208 #> [10783,]  208 #> [10784,]  208 #> [10785,]  208 #> [10786,]  207 #> [10787,]  208 #> [10788,]  208 #> [10789,]  208 #> [10790,]  208 #> [10791,]  208 #> [10792,]  208 #> [10793,]  208 #> [10794,]  208 #> [10795,]  208 #> [10796,]  207 #> [10797,]  207 #> [10798,]  207 #> [10799,]  208 #> [10800,]  208 #> [10801,]  210 #> [10802,]  210 #> [10803,]  209 #> [10804,]  210 #> [10805,]  210 #> [10806,]  210 #> [10807,]  209 #> [10808,]  209 #> [10809,]  210 #> [10810,]  210 #> [10811,]  210 #> [10812,]  210 #> [10813,]  209 #> [10814,]  210 #> [10815,]  210 #> [10816,]  209 #> [10817,]  210 #> [10818,]  210 #> [10819,]  210 #> [10820,]  209 #> [10821,]  210 #> [10822,]  209 #> [10823,]  210 #> [10824,]  209 #> [10825,]  209 #> [10826,]  210 #> [10827,]  210 #> [10828,]  210 #> [10829,]  210 #> [10830,]  210 #> [10831,]  210 #> [10832,]  210 #> [10833,]  210 #> [10834,]  210 #> [10835,]  210 #> [10836,]  210 #> [10837,]  210 #> [10838,]  210 #> [10839,]  209 #> [10840,]  209 #> [10841,]  210 #> [10842,]  210 #> [10843,]  210 #> [10844,]  209 #> [10845,]  210 #> [10846,]  209 #> [10847,]  210 #> [10848,]  210 #> [10849,]  209 #> [10850,]  209 #> [10851,]  210 #> [10852,]  210 #> [10853,]  209 #> [10854,]  210 #> [10855,]  209 #> [10856,]  209 #> [10857,]  210 #> [10858,]  210 #> [10859,]  209 #> [10860,]  210 #> [10861,]  210 #> [10862,]  210 #> [10863,]  209 #> [10864,]  210 #> [10865,]  209 #> [10866,]  209 #> [10867,]  210 #> [10868,]  210 #> [10869,]  210 #> [10870,]  209 #> [10871,]  210 #> [10872,]  209 #> [10873,]  210 #> [10874,]  210 #> [10875,]  210 #> [10876,]  210 #> [10877,]  210 #> [10878,]  210 #> [10879,]  210 #> [10880,]  210 #> [10881,]  210 #> [10882,]  210 #> [10883,]  210 #> [10884,]  209 #> [10885,]  210 #> [10886,]  209 #> [10887,]  210 #> [10888,]  210 #> [10889,]  209 #> [10890,]  209 #> [10891,]  210 #> [10892,]  210 #> [10893,]  210 #> [10894,]  210 #> [10895,]  210 #> [10896,]  210 #> [10897,]  210 #> [10898,]  209 #> [10899,]  210 #> [10900,]  209 #> [10901,]  212 #> [10902,]  211 #> [10903,]  211 #> [10904,]  211 #> [10905,]  211 #> [10906,]  211 #> [10907,]  211 #> [10908,]  211 #> [10909,]  212 #> [10910,]  211 #> [10911,]  211 #> [10912,]  211 #> [10913,]  212 #> [10914,]  211 #> [10915,]  211 #> [10916,]  211 #> [10917,]  212 #> [10918,]  212 #> [10919,]  211 #> [10920,]  211 #> [10921,]  211 #> [10922,]  211 #> [10923,]  211 #> [10924,]  211 #> [10925,]  211 #> [10926,]  211 #> [10927,]  212 #> [10928,]  211 #> [10929,]  211 #> [10930,]  211 #> [10931,]  211 #> [10932,]  211 #> [10933,]  211 #> [10934,]  211 #> [10935,]  211 #> [10936,]  212 #> [10937,]  211 #> [10938,]  212 #> [10939,]  211 #> [10940,]  211 #> [10941,]  211 #> [10942,]  212 #> [10943,]  211 #> [10944,]  211 #> [10945,]  211 #> [10946,]  211 #> [10947,]  211 #> [10948,]  211 #> [10949,]  211 #> [10950,]  211 #> [10951,]  212 #> [10952,]  211 #> [10953,]  212 #> [10954,]  212 #> [10955,]  211 #> [10956,]  212 #> [10957,]  211 #> [10958,]  211 #> [10959,]  211 #> [10960,]  211 #> [10961,]  211 #> [10962,]  211 #> [10963,]  211 #> [10964,]  211 #> [10965,]  212 #> [10966,]  212 #> [10967,]  211 #> [10968,]  211 #> [10969,]  211 #> [10970,]  211 #> [10971,]  211 #> [10972,]  211 #> [10973,]  211 #> [10974,]  211 #> [10975,]  211 #> [10976,]  211 #> [10977,]  212 #> [10978,]  211 #> [10979,]  212 #> [10980,]  211 #> [10981,]  211 #> [10982,]  212 #> [10983,]  212 #> [10984,]  212 #> [10985,]  211 #> [10986,]  211 #> [10987,]  212 #> [10988,]  211 #> [10989,]  211 #> [10990,]  211 #> [10991,]  212 #> [10992,]  211 #> [10993,]  212 #> [10994,]  212 #> [10995,]  211 #> [10996,]  211 #> [10997,]  211 #> [10998,]  211 #> [10999,]  211 #> [11000,]  211 #> [11001,]  214 #> [11002,]  214 #> [11003,]  213 #> [11004,]  214 #> [11005,]  213 #> [11006,]  213 #> [11007,]  214 #> [11008,]  214 #> [11009,]  214 #> [11010,]  214 #> [11011,]  213 #> [11012,]  213 #> [11013,]  214 #> [11014,]  213 #> [11015,]  214 #> [11016,]  214 #> [11017,]  214 #> [11018,]  214 #> [11019,]  213 #> [11020,]  213 #> [11021,]  214 #> [11022,]  213 #> [11023,]  214 #> [11024,]  213 #> [11025,]  214 #> [11026,]  213 #> [11027,]  214 #> [11028,]  214 #> [11029,]  213 #> [11030,]  213 #> [11031,]  214 #> [11032,]  213 #> [11033,]  213 #> [11034,]  213 #> [11035,]  213 #> [11036,]  213 #> [11037,]  214 #> [11038,]  214 #> [11039,]  214 #> [11040,]  213 #> [11041,]  213 #> [11042,]  213 #> [11043,]  214 #> [11044,]  214 #> [11045,]  214 #> [11046,]  214 #> [11047,]  214 #> [11048,]  213 #> [11049,]  214 #> [11050,]  214 #> [11051,]  213 #> [11052,]  213 #> [11053,]  214 #> [11054,]  213 #> [11055,]  213 #> [11056,]  214 #> [11057,]  213 #> [11058,]  213 #> [11059,]  214 #> [11060,]  213 #> [11061,]  214 #> [11062,]  213 #> [11063,]  213 #> [11064,]  214 #> [11065,]  214 #> [11066,]  213 #> [11067,]  213 #> [11068,]  213 #> [11069,]  213 #> [11070,]  214 #> [11071,]  214 #> [11072,]  214 #> [11073,]  214 #> [11074,]  214 #> [11075,]  214 #> [11076,]  214 #> [11077,]  214 #> [11078,]  213 #> [11079,]  214 #> [11080,]  213 #> [11081,]  213 #> [11082,]  214 #> [11083,]  213 #> [11084,]  214 #> [11085,]  214 #> [11086,]  214 #> [11087,]  214 #> [11088,]  214 #> [11089,]  213 #> [11090,]  214 #> [11091,]  213 #> [11092,]  214 #> [11093,]  213 #> [11094,]  214 #> [11095,]  214 #> [11096,]  214 #> [11097,]  214 #> [11098,]  213 #> [11099,]  213 #> [11100,]  214 #> [11101,]  216 #> [11102,]  215 #> [11103,]  216 #> [11104,]  216 #> [11105,]  216 #> [11106,]  215 #> [11107,]  216 #> [11108,]  216 #> [11109,]  216 #> [11110,]  216 #> [11111,]  215 #> [11112,]  215 #> [11113,]  216 #> [11114,]  216 #> [11115,]  215 #> [11116,]  216 #> [11117,]  215 #> [11118,]  216 #> [11119,]  215 #> [11120,]  216 #> [11121,]  216 #> [11122,]  216 #> [11123,]  215 #> [11124,]  216 #> [11125,]  216 #> [11126,]  215 #> [11127,]  216 #> [11128,]  216 #> [11129,]  215 #> [11130,]  215 #> [11131,]  215 #> [11132,]  216 #> [11133,]  216 #> [11134,]  215 #> [11135,]  215 #> [11136,]  216 #> [11137,]  215 #> [11138,]  216 #> [11139,]  216 #> [11140,]  216 #> [11141,]  216 #> [11142,]  215 #> [11143,]  215 #> [11144,]  215 #> [11145,]  216 #> [11146,]  215 #> [11147,]  215 #> [11148,]  215 #> [11149,]  216 #> [11150,]  216 #> [11151,]  216 #> [11152,]  216 #> [11153,]  216 #> [11154,]  216 #> [11155,]  216 #> [11156,]  215 #> [11157,]  216 #> [11158,]  216 #> [11159,]  216 #> [11160,]  215 #> [11161,]  215 #> [11162,]  216 #> [11163,]  215 #> [11164,]  215 #> [11165,]  215 #> [11166,]  215 #> [11167,]  216 #> [11168,]  215 #> [11169,]  216 #> [11170,]  215 #> [11171,]  216 #> [11172,]  216 #> [11173,]  216 #> [11174,]  216 #> [11175,]  215 #> [11176,]  216 #> [11177,]  216 #> [11178,]  215 #> [11179,]  215 #> [11180,]  216 #> [11181,]  215 #> [11182,]  216 #> [11183,]  216 #> [11184,]  216 #> [11185,]  216 #> [11186,]  216 #> [11187,]  216 #> [11188,]  216 #> [11189,]  216 #> [11190,]  216 #> [11191,]  216 #> [11192,]  215 #> [11193,]  216 #> [11194,]  215 #> [11195,]  215 #> [11196,]  215 #> [11197,]  216 #> [11198,]  216 #> [11199,]  216 #> [11200,]  215 #> [11201,]  217 #> [11202,]  218 #> [11203,]  217 #> [11204,]  217 #> [11205,]  218 #> [11206,]  217 #> [11207,]  218 #> [11208,]  217 #> [11209,]  218 #> [11210,]  218 #> [11211,]  217 #> [11212,]  218 #> [11213,]  218 #> [11214,]  217 #> [11215,]  217 #> [11216,]  217 #> [11217,]  218 #> [11218,]  218 #> [11219,]  217 #> [11220,]  218 #> [11221,]  218 #> [11222,]  218 #> [11223,]  218 #> [11224,]  218 #> [11225,]  218 #> [11226,]  217 #> [11227,]  218 #> [11228,]  217 #> [11229,]  218 #> [11230,]  218 #> [11231,]  218 #> [11232,]  218 #> [11233,]  218 #> [11234,]  217 #> [11235,]  217 #> [11236,]  218 #> [11237,]  217 #> [11238,]  217 #> [11239,]  218 #> [11240,]  218 #> [11241,]  218 #> [11242,]  217 #> [11243,]  218 #> [11244,]  218 #> [11245,]  217 #> [11246,]  217 #> [11247,]  218 #> [11248,]  218 #> [11249,]  217 #> [11250,]  218 #> [11251,]  218 #> [11252,]  217 #> [11253,]  218 #> [11254,]  218 #> [11255,]  217 #> [11256,]  217 #> [11257,]  217 #> [11258,]  218 #> [11259,]  217 #> [11260,]  218 #> [11261,]  218 #> [11262,]  217 #> [11263,]  218 #> [11264,]  217 #> [11265,]  217 #> [11266,]  218 #> [11267,]  218 #> [11268,]  217 #> [11269,]  217 #> [11270,]  218 #> [11271,]  218 #> [11272,]  217 #> [11273,]  217 #> [11274,]  218 #> [11275,]  218 #> [11276,]  218 #> [11277,]  217 #> [11278,]  218 #> [11279,]  217 #> [11280,]  218 #> [11281,]  218 #> [11282,]  217 #> [11283,]  218 #> [11284,]  218 #> [11285,]  218 #> [11286,]  218 #> [11287,]  218 #> [11288,]  218 #> [11289,]  217 #> [11290,]  218 #> [11291,]  217 #> [11292,]  218 #> [11293,]  218 #> [11294,]  217 #> [11295,]  218 #> [11296,]  217 #> [11297,]  217 #> [11298,]  218 #> [11299,]  218 #> [11300,]  217 #> [11301,]  220 #> [11302,]  219 #> [11303,]  219 #> [11304,]  219 #> [11305,]  219 #> [11306,]  219 #> [11307,]  219 #> [11308,]  219 #> [11309,]  220 #> [11310,]  219 #> [11311,]  220 #> [11312,]  219 #> [11313,]  220 #> [11314,]  219 #> [11315,]  219 #> [11316,]  219 #> [11317,]  220 #> [11318,]  220 #> [11319,]  219 #> [11320,]  220 #> [11321,]  219 #> [11322,]  219 #> [11323,]  219 #> [11324,]  219 #> [11325,]  219 #> [11326,]  219 #> [11327,]  220 #> [11328,]  220 #> [11329,]  220 #> [11330,]  219 #> [11331,]  219 #> [11332,]  219 #> [11333,]  220 #> [11334,]  219 #> [11335,]  219 #> [11336,]  220 #> [11337,]  219 #> [11338,]  220 #> [11339,]  220 #> [11340,]  219 #> [11341,]  220 #> [11342,]  220 #> [11343,]  219 #> [11344,]  219 #> [11345,]  219 #> [11346,]  219 #> [11347,]  219 #> [11348,]  219 #> [11349,]  219 #> [11350,]  219 #> [11351,]  220 #> [11352,]  219 #> [11353,]  220 #> [11354,]  220 #> [11355,]  219 #> [11356,]  220 #> [11357,]  219 #> [11358,]  220 #> [11359,]  219 #> [11360,]  219 #> [11361,]  219 #> [11362,]  220 #> [11363,]  219 #> [11364,]  219 #> [11365,]  220 #> [11366,]  220 #> [11367,]  219 #> [11368,]  219 #> [11369,]  219 #> [11370,]  220 #> [11371,]  219 #> [11372,]  219 #> [11373,]  219 #> [11374,]  219 #> [11375,]  219 #> [11376,]  219 #> [11377,]  220 #> [11378,]  219 #> [11379,]  220 #> [11380,]  219 #> [11381,]  219 #> [11382,]  220 #> [11383,]  220 #> [11384,]  220 #> [11385,]  220 #> [11386,]  219 #> [11387,]  220 #> [11388,]  219 #> [11389,]  220 #> [11390,]  220 #> [11391,]  220 #> [11392,]  219 #> [11393,]  220 #> [11394,]  220 #> [11395,]  219 #> [11396,]  219 #> [11397,]  219 #> [11398,]  219 #> [11399,]  219 #> [11400,]  219 #> [11401,]  222 #> [11402,]  222 #> [11403,]  221 #> [11404,]  222 #> [11405,]  222 #> [11406,]  222 #> [11407,]  221 #> [11408,]  221 #> [11409,]  222 #> [11410,]  222 #> [11411,]  222 #> [11412,]  222 #> [11413,]  221 #> [11414,]  222 #> [11415,]  222 #> [11416,]  221 #> [11417,]  222 #> [11418,]  222 #> [11419,]  222 #> [11420,]  221 #> [11421,]  222 #> [11422,]  221 #> [11423,]  222 #> [11424,]  221 #> [11425,]  221 #> [11426,]  222 #> [11427,]  222 #> [11428,]  222 #> [11429,]  222 #> [11430,]  222 #> [11431,]  222 #> [11432,]  222 #> [11433,]  222 #> [11434,]  222 #> [11435,]  222 #> [11436,]  222 #> [11437,]  222 #> [11438,]  222 #> [11439,]  221 #> [11440,]  221 #> [11441,]  222 #> [11442,]  222 #> [11443,]  222 #> [11444,]  221 #> [11445,]  222 #> [11446,]  221 #> [11447,]  222 #> [11448,]  222 #> [11449,]  221 #> [11450,]  221 #> [11451,]  222 #> [11452,]  222 #> [11453,]  221 #> [11454,]  222 #> [11455,]  221 #> [11456,]  221 #> [11457,]  222 #> [11458,]  222 #> [11459,]  221 #> [11460,]  222 #> [11461,]  222 #> [11462,]  222 #> [11463,]  222 #> [11464,]  222 #> [11465,]  221 #> [11466,]  221 #> [11467,]  222 #> [11468,]  222 #> [11469,]  222 #> [11470,]  221 #> [11471,]  222 #> [11472,]  221 #> [11473,]  222 #> [11474,]  222 #> [11475,]  222 #> [11476,]  222 #> [11477,]  222 #> [11478,]  222 #> [11479,]  222 #> [11480,]  222 #> [11481,]  222 #> [11482,]  222 #> [11483,]  222 #> [11484,]  221 #> [11485,]  222 #> [11486,]  221 #> [11487,]  222 #> [11488,]  222 #> [11489,]  221 #> [11490,]  221 #> [11491,]  222 #> [11492,]  222 #> [11493,]  222 #> [11494,]  222 #> [11495,]  222 #> [11496,]  222 #> [11497,]  222 #> [11498,]  221 #> [11499,]  222 #> [11500,]  221 #> [11501,]  223 #> [11502,]  223 #> [11503,]  224 #> [11504,]  223 #> [11505,]  223 #> [11506,]  224 #> [11507,]  223 #> [11508,]  223 #> [11509,]  223 #> [11510,]  223 #> [11511,]  223 #> [11512,]  223 #> [11513,]  223 #> [11514,]  223 #> [11515,]  223 #> [11516,]  223 #> [11517,]  223 #> [11518,]  223 #> [11519,]  224 #> [11520,]  223 #> [11521,]  223 #> [11522,]  223 #> [11523,]  223 #> [11524,]  223 #> [11525,]  224 #> [11526,]  223 #> [11527,]  223 #> [11528,]  223 #> [11529,]  223 #> [11530,]  223 #> [11531,]  223 #> [11532,]  223 #> [11533,]  224 #> [11534,]  224 #> [11535,]  223 #> [11536,]  223 #> [11537,]  223 #> [11538,]  223 #> [11539,]  223 #> [11540,]  223 #> [11541,]  223 #> [11542,]  223 #> [11543,]  223 #> [11544,]  223 #> [11545,]  223 #> [11546,]  223 #> [11547,]  223 #> [11548,]  223 #> [11549,]  223 #> [11550,]  223 #> [11551,]  223 #> [11552,]  223 #> [11553,]  223 #> [11554,]  223 #> [11555,]  223 #> [11556,]  223 #> [11557,]  223 #> [11558,]  223 #> [11559,]  223 #> [11560,]  224 #> [11561,]  223 #> [11562,]  223 #> [11563,]  223 #> [11564,]  223 #> [11565,]  224 #> [11566,]  223 #> [11567,]  223 #> [11568,]  223 #> [11569,]  223 #> [11570,]  224 #> [11571,]  223 #> [11572,]  223 #> [11573,]  224 #> [11574,]  223 #> [11575,]  223 #> [11576,]  223 #> [11577,]  223 #> [11578,]  223 #> [11579,]  223 #> [11580,]  223 #> [11581,]  223 #> [11582,]  223 #> [11583,]  223 #> [11584,]  223 #> [11585,]  223 #> [11586,]  223 #> [11587,]  223 #> [11588,]  223 #> [11589,]  223 #> [11590,]  223 #> [11591,]  223 #> [11592,]  223 #> [11593,]  224 #> [11594,]  223 #> [11595,]  223 #> [11596,]  223 #> [11597,]  223 #> [11598,]  224 #> [11599,]  223 #> [11600,]  223 #> [11601,]  225 #> [11602,]  225 #> [11603,]  225 #> [11604,]  226 #> [11605,]  225 #> [11606,]  225 #> [11607,]  225 #> [11608,]  225 #> [11609,]  225 #> [11610,]  226 #> [11611,]  225 #> [11612,]  225 #> [11613,]  225 #> [11614,]  225 #> [11615,]  225 #> [11616,]  225 #> [11617,]  225 #> [11618,]  226 #> [11619,]  225 #> [11620,]  225 #> [11621,]  226 #> [11622,]  225 #> [11623,]  225 #> [11624,]  225 #> [11625,]  226 #> [11626,]  225 #> [11627,]  225 #> [11628,]  225 #> [11629,]  225 #> [11630,]  225 #> [11631,]  225 #> [11632,]  225 #> [11633,]  225 #> [11634,]  225 #> [11635,]  225 #> [11636,]  225 #> [11637,]  225 #> [11638,]  225 #> [11639,]  226 #> [11640,]  225 #> [11641,]  225 #> [11642,]  225 #> [11643,]  226 #> [11644,]  225 #> [11645,]  226 #> [11646,]  225 #> [11647,]  225 #> [11648,]  225 #> [11649,]  225 #> [11650,]  225 #> [11651,]  225 #> [11652,]  225 #> [11653,]  226 #> [11654,]  225 #> [11655,]  225 #> [11656,]  225 #> [11657,]  225 #> [11658,]  225 #> [11659,]  225 #> [11660,]  225 #> [11661,]  226 #> [11662,]  225 #> [11663,]  225 #> [11664,]  225 #> [11665,]  225 #> [11666,]  225 #> [11667,]  225 #> [11668,]  225 #> [11669,]  225 #> [11670,]  225 #> [11671,]  225 #> [11672,]  226 #> [11673,]  226 #> [11674,]  226 #> [11675,]  226 #> [11676,]  226 #> [11677,]  226 #> [11678,]  225 #> [11679,]  225 #> [11680,]  225 #> [11681,]  225 #> [11682,]  225 #> [11683,]  225 #> [11684,]  226 #> [11685,]  225 #> [11686,]  225 #> [11687,]  225 #> [11688,]  225 #> [11689,]  225 #> [11690,]  225 #> [11691,]  225 #> [11692,]  225 #> [11693,]  225 #> [11694,]  226 #> [11695,]  226 #> [11696,]  225 #> [11697,]  225 #> [11698,]  225 #> [11699,]  225 #> [11700,]  226 #> [11701,]  227 #> [11702,]  227 #> [11703,]  227 #> [11704,]  227 #> [11705,]  227 #> [11706,]  227 #> [11707,]  228 #> [11708,]  227 #> [11709,]  227 #> [11710,]  227 #> [11711,]  227 #> [11712,]  227 #> [11713,]  227 #> [11714,]  227 #> [11715,]  227 #> [11716,]  228 #> [11717,]  227 #> [11718,]  227 #> [11719,]  227 #> [11720,]  228 #> [11721,]  227 #> [11722,]  227 #> [11723,]  227 #> [11724,]  228 #> [11725,]  227 #> [11726,]  227 #> [11727,]  227 #> [11728,]  228 #> [11729,]  227 #> [11730,]  227 #> [11731,]  227 #> [11732,]  227 #> [11733,]  227 #> [11734,]  227 #> [11735,]  227 #> [11736,]  227 #> [11737,]  227 #> [11738,]  227 #> [11739,]  227 #> [11740,]  227 #> [11741,]  227 #> [11742,]  227 #> [11743,]  227 #> [11744,]  227 #> [11745,]  227 #> [11746,]  227 #> [11747,]  227 #> [11748,]  227 #> [11749,]  227 #> [11750,]  228 #> [11751,]  227 #> [11752,]  228 #> [11753,]  227 #> [11754,]  227 #> [11755,]  227 #> [11756,]  227 #> [11757,]  227 #> [11758,]  227 #> [11759,]  227 #> [11760,]  227 #> [11761,]  227 #> [11762,]  227 #> [11763,]  227 #> [11764,]  227 #> [11765,]  227 #> [11766,]  227 #> [11767,]  227 #> [11768,]  227 #> [11769,]  227 #> [11770,]  227 #> [11771,]  227 #> [11772,]  227 #> [11773,]  227 #> [11774,]  227 #> [11775,]  227 #> [11776,]  228 #> [11777,]  227 #> [11778,]  227 #> [11779,]  227 #> [11780,]  227 #> [11781,]  227 #> [11782,]  227 #> [11783,]  227 #> [11784,]  227 #> [11785,]  227 #> [11786,]  228 #> [11787,]  227 #> [11788,]  227 #> [11789,]  227 #> [11790,]  227 #> [11791,]  228 #> [11792,]  227 #> [11793,]  227 #> [11794,]  227 #> [11795,]  227 #> [11796,]  227 #> [11797,]  227 #> [11798,]  227 #> [11799,]  227 #> [11800,]  227 #> [11801,]  229 #> [11802,]  230 #> [11803,]  229 #> [11804,]  229 #> [11805,]  230 #> [11806,]  229 #> [11807,]  229 #> [11808,]  229 #> [11809,]  230 #> [11810,]  230 #> [11811,]  229 #> [11812,]  230 #> [11813,]  230 #> [11814,]  229 #> [11815,]  229 #> [11816,]  229 #> [11817,]  230 #> [11818,]  230 #> [11819,]  229 #> [11820,]  230 #> [11821,]  230 #> [11822,]  230 #> [11823,]  230 #> [11824,]  230 #> [11825,]  229 #> [11826,]  229 #> [11827,]  230 #> [11828,]  229 #> [11829,]  230 #> [11830,]  229 #> [11831,]  230 #> [11832,]  230 #> [11833,]  230 #> [11834,]  229 #> [11835,]  229 #> [11836,]  230 #> [11837,]  229 #> [11838,]  229 #> [11839,]  229 #> [11840,]  230 #> [11841,]  229 #> [11842,]  229 #> [11843,]  229 #> [11844,]  230 #> [11845,]  229 #> [11846,]  229 #> [11847,]  229 #> [11848,]  229 #> [11849,]  229 #> [11850,]  229 #> [11851,]  229 #> [11852,]  229 #> [11853,]  230 #> [11854,]  229 #> [11855,]  229 #> [11856,]  229 #> [11857,]  229 #> [11858,]  229 #> [11859,]  229 #> [11860,]  230 #> [11861,]  230 #> [11862,]  229 #> [11863,]  230 #> [11864,]  229 #> [11865,]  229 #> [11866,]  229 #> [11867,]  229 #> [11868,]  229 #> [11869,]  229 #> [11870,]  230 #> [11871,]  229 #> [11872,]  229 #> [11873,]  229 #> [11874,]  229 #> [11875,]  230 #> [11876,]  229 #> [11877,]  229 #> [11878,]  229 #> [11879,]  229 #> [11880,]  230 #> [11881,]  230 #> [11882,]  229 #> [11883,]  230 #> [11884,]  230 #> [11885,]  229 #> [11886,]  230 #> [11887,]  229 #> [11888,]  230 #> [11889,]  229 #> [11890,]  229 #> [11891,]  229 #> [11892,]  230 #> [11893,]  230 #> [11894,]  229 #> [11895,]  229 #> [11896,]  229 #> [11897,]  229 #> [11898,]  229 #> [11899,]  229 #> [11900,]  229 #> [11901,]  232 #> [11902,]  231 #> [11903,]  231 #> [11904,]  231 #> [11905,]  232 #> [11906,]  231 #> [11907,]  231 #> [11908,]  231 #> [11909,]  232 #> [11910,]  231 #> [11911,]  232 #> [11912,]  231 #> [11913,]  232 #> [11914,]  231 #> [11915,]  231 #> [11916,]  231 #> [11917,]  232 #> [11918,]  232 #> [11919,]  232 #> [11920,]  232 #> [11921,]  232 #> [11922,]  232 #> [11923,]  231 #> [11924,]  232 #> [11925,]  231 #> [11926,]  231 #> [11927,]  232 #> [11928,]  232 #> [11929,]  232 #> [11930,]  231 #> [11931,]  231 #> [11932,]  231 #> [11933,]  232 #> [11934,]  231 #> [11935,]  231 #> [11936,]  232 #> [11937,]  231 #> [11938,]  232 #> [11939,]  232 #> [11940,]  231 #> [11941,]  232 #> [11942,]  232 #> [11943,]  231 #> [11944,]  231 #> [11945,]  231 #> [11946,]  231 #> [11947,]  231 #> [11948,]  231 #> [11949,]  231 #> [11950,]  232 #> [11951,]  232 #> [11952,]  231 #> [11953,]  232 #> [11954,]  232 #> [11955,]  231 #> [11956,]  232 #> [11957,]  231 #> [11958,]  232 #> [11959,]  231 #> [11960,]  231 #> [11961,]  232 #> [11962,]  232 #> [11963,]  231 #> [11964,]  232 #> [11965,]  232 #> [11966,]  232 #> [11967,]  231 #> [11968,]  231 #> [11969,]  231 #> [11970,]  232 #> [11971,]  231 #> [11972,]  231 #> [11973,]  232 #> [11974,]  231 #> [11975,]  231 #> [11976,]  231 #> [11977,]  232 #> [11978,]  231 #> [11979,]  232 #> [11980,]  231 #> [11981,]  232 #> [11982,]  232 #> [11983,]  232 #> [11984,]  232 #> [11985,]  232 #> [11986,]  231 #> [11987,]  232 #> [11988,]  231 #> [11989,]  232 #> [11990,]  232 #> [11991,]  232 #> [11992,]  231 #> [11993,]  232 #> [11994,]  232 #> [11995,]  231 #> [11996,]  231 #> [11997,]  231 #> [11998,]  231 #> [11999,]  232 #> [12000,]  232 #> [12001,]  234 #> [12002,]  234 #> [12003,]  234 #> [12004,]  233 #> [12005,]  234 #> [12006,]  234 #> [12007,]  234 #> [12008,]  233 #> [12009,]  233 #> [12010,]  234 #> [12011,]  233 #> [12012,]  234 #> [12013,]  233 #> [12014,]  234 #> [12015,]  234 #> [12016,]  234 #> [12017,]  233 #> [12018,]  234 #> [12019,]  234 #> [12020,]  234 #> [12021,]  234 #> [12022,]  233 #> [12023,]  234 #> [12024,]  234 #> [12025,]  234 #> [12026,]  234 #> [12027,]  233 #> [12028,]  234 #> [12029,]  234 #> [12030,]  233 #> [12031,]  234 #> [12032,]  234 #> [12033,]  234 #> [12034,]  234 #> [12035,]  233 #> [12036,]  234 #> [12037,]  234 #> [12038,]  234 #> [12039,]  234 #> [12040,]  234 #> [12041,]  234 #> [12042,]  234 #> [12043,]  233 #> [12044,]  233 #> [12045,]  234 #> [12046,]  234 #> [12047,]  234 #> [12048,]  234 #> [12049,]  233 #> [12050,]  234 #> [12051,]  234 #> [12052,]  233 #> [12053,]  234 #> [12054,]  233 #> [12055,]  233 #> [12056,]  234 #> [12057,]  234 #> [12058,]  233 #> [12059,]  234 #> [12060,]  234 #> [12061,]  234 #> [12062,]  234 #> [12063,]  234 #> [12064,]  234 #> [12065,]  234 #> [12066,]  233 #> [12067,]  234 #> [12068,]  234 #> [12069,]  233 #> [12070,]  234 #> [12071,]  234 #> [12072,]  234 #> [12073,]  234 #> [12074,]  234 #> [12075,]  234 #> [12076,]  234 #> [12077,]  234 #> [12078,]  234 #> [12079,]  233 #> [12080,]  233 #> [12081,]  233 #> [12082,]  233 #> [12083,]  233 #> [12084,]  234 #> [12085,]  234 #> [12086,]  234 #> [12087,]  233 #> [12088,]  233 #> [12089,]  233 #> [12090,]  233 #> [12091,]  234 #> [12092,]  233 #> [12093,]  234 #> [12094,]  234 #> [12095,]  233 #> [12096,]  233 #> [12097,]  234 #> [12098,]  234 #> [12099,]  233 #> [12100,]  234 #> [12101,]  235 #> [12102,]  235 #> [12103,]  235 #> [12104,]  235 #> [12105,]  235 #> [12106,]  235 #> [12107,]  235 #> [12108,]  236 #> [12109,]  235 #> [12110,]  235 #> [12111,]  235 #> [12112,]  235 #> [12113,]  236 #> [12114,]  235 #> [12115,]  236 #> [12116,]  236 #> [12117,]  235 #> [12118,]  235 #> [12119,]  236 #> [12120,]  236 #> [12121,]  235 #> [12122,]  236 #> [12123,]  235 #> [12124,]  235 #> [12125,]  235 #> [12126,]  236 #> [12127,]  236 #> [12128,]  235 #> [12129,]  236 #> [12130,]  236 #> [12131,]  235 #> [12132,]  235 #> [12133,]  235 #> [12134,]  235 #> [12135,]  235 #> [12136,]  236 #> [12137,]  236 #> [12138,]  236 #> [12139,]  235 #> [12140,]  235 #> [12141,]  236 #> [12142,]  235 #> [12143,]  236 #> [12144,]  236 #> [12145,]  235 #> [12146,]  236 #> [12147,]  235 #> [12148,]  235 #> [12149,]  235 #> [12150,]  236 #> [12151,]  236 #> [12152,]  235 #> [12153,]  236 #> [12154,]  235 #> [12155,]  236 #> [12156,]  236 #> [12157,]  235 #> [12158,]  236 #> [12159,]  236 #> [12160,]  236 #> [12161,]  235 #> [12162,]  235 #> [12163,]  235 #> [12164,]  236 #> [12165,]  235 #> [12166,]  236 #> [12167,]  235 #> [12168,]  235 #> [12169,]  236 #> [12170,]  235 #> [12171,]  236 #> [12172,]  235 #> [12173,]  235 #> [12174,]  235 #> [12175,]  235 #> [12176,]  235 #> [12177,]  236 #> [12178,]  236 #> [12179,]  235 #> [12180,]  236 #> [12181,]  236 #> [12182,]  235 #> [12183,]  236 #> [12184,]  236 #> [12185,]  236 #> [12186,]  235 #> [12187,]  236 #> [12188,]  235 #> [12189,]  235 #> [12190,]  236 #> [12191,]  235 #> [12192,]  235 #> [12193,]  235 #> [12194,]  235 #> [12195,]  236 #> [12196,]  236 #> [12197,]  236 #> [12198,]  235 #> [12199,]  235 #> [12200,]  236 #> [12201,]  238 #> [12202,]  238 #> [12203,]  237 #> [12204,]  238 #> [12205,]  238 #> [12206,]  238 #> [12207,]  237 #> [12208,]  237 #> [12209,]  238 #> [12210,]  238 #> [12211,]  238 #> [12212,]  238 #> [12213,]  237 #> [12214,]  238 #> [12215,]  238 #> [12216,]  237 #> [12217,]  237 #> [12218,]  238 #> [12219,]  238 #> [12220,]  237 #> [12221,]  238 #> [12222,]  237 #> [12223,]  238 #> [12224,]  237 #> [12225,]  237 #> [12226,]  238 #> [12227,]  238 #> [12228,]  238 #> [12229,]  238 #> [12230,]  238 #> [12231,]  238 #> [12232,]  238 #> [12233,]  238 #> [12234,]  238 #> [12235,]  238 #> [12236,]  238 #> [12237,]  238 #> [12238,]  238 #> [12239,]  237 #> [12240,]  237 #> [12241,]  238 #> [12242,]  238 #> [12243,]  238 #> [12244,]  237 #> [12245,]  237 #> [12246,]  237 #> [12247,]  237 #> [12248,]  238 #> [12249,]  237 #> [12250,]  237 #> [12251,]  238 #> [12252,]  238 #> [12253,]  237 #> [12254,]  237 #> [12255,]  237 #> [12256,]  237 #> [12257,]  238 #> [12258,]  238 #> [12259,]  237 #> [12260,]  238 #> [12261,]  238 #> [12262,]  238 #> [12263,]  237 #> [12264,]  238 #> [12265,]  237 #> [12266,]  237 #> [12267,]  238 #> [12268,]  238 #> [12269,]  238 #> [12270,]  237 #> [12271,]  238 #> [12272,]  237 #> [12273,]  238 #> [12274,]  238 #> [12275,]  238 #> [12276,]  238 #> [12277,]  238 #> [12278,]  237 #> [12279,]  237 #> [12280,]  238 #> [12281,]  238 #> [12282,]  238 #> [12283,]  238 #> [12284,]  237 #> [12285,]  238 #> [12286,]  237 #> [12287,]  238 #> [12288,]  238 #> [12289,]  237 #> [12290,]  237 #> [12291,]  238 #> [12292,]  238 #> [12293,]  238 #> [12294,]  237 #> [12295,]  238 #> [12296,]  238 #> [12297,]  238 #> [12298,]  237 #> [12299,]  238 #> [12300,]  237 #> [12301,]  240 #> [12302,]  239 #> [12303,]  239 #> [12304,]  240 #> [12305,]  239 #> [12306,]  239 #> [12307,]  240 #> [12308,]  240 #> [12309,]  240 #> [12310,]  240 #> [12311,]  239 #> [12312,]  239 #> [12313,]  240 #> [12314,]  239 #> [12315,]  240 #> [12316,]  240 #> [12317,]  240 #> [12318,]  240 #> [12319,]  239 #> [12320,]  239 #> [12321,]  240 #> [12322,]  239 #> [12323,]  240 #> [12324,]  239 #> [12325,]  240 #> [12326,]  239 #> [12327,]  240 #> [12328,]  240 #> [12329,]  239 #> [12330,]  239 #> [12331,]  239 #> [12332,]  239 #> [12333,]  239 #> [12334,]  239 #> [12335,]  239 #> [12336,]  239 #> [12337,]  240 #> [12338,]  240 #> [12339,]  240 #> [12340,]  239 #> [12341,]  239 #> [12342,]  239 #> [12343,]  240 #> [12344,]  240 #> [12345,]  240 #> [12346,]  240 #> [12347,]  240 #> [12348,]  239 #> [12349,]  239 #> [12350,]  239 #> [12351,]  239 #> [12352,]  239 #> [12353,]  240 #> [12354,]  239 #> [12355,]  239 #> [12356,]  240 #> [12357,]  239 #> [12358,]  239 #> [12359,]  239 #> [12360,]  239 #> [12361,]  240 #> [12362,]  239 #> [12363,]  239 #> [12364,]  240 #> [12365,]  239 #> [12366,]  239 #> [12367,]  239 #> [12368,]  239 #> [12369,]  239 #> [12370,]  240 #> [12371,]  240 #> [12372,]  240 #> [12373,]  240 #> [12374,]  240 #> [12375,]  240 #> [12376,]  240 #> [12377,]  240 #> [12378,]  239 #> [12379,]  240 #> [12380,]  239 #> [12381,]  239 #> [12382,]  240 #> [12383,]  239 #> [12384,]  240 #> [12385,]  239 #> [12386,]  239 #> [12387,]  240 #> [12388,]  240 #> [12389,]  239 #> [12390,]  240 #> [12391,]  239 #> [12392,]  239 #> [12393,]  239 #> [12394,]  240 #> [12395,]  240 #> [12396,]  240 #> [12397,]  239 #> [12398,]  239 #> [12399,]  239 #> [12400,]  240 #> [12401,]  242 #> [12402,]  242 #> [12403,]  241 #> [12404,]  242 #> [12405,]  242 #> [12406,]  241 #> [12407,]  241 #> [12408,]  242 #> [12409,]  242 #> [12410,]  242 #> [12411,]  242 #> [12412,]  242 #> [12413,]  242 #> [12414,]  242 #> [12415,]  242 #> [12416,]  242 #> [12417,]  242 #> [12418,]  242 #> [12419,]  242 #> [12420,]  241 #> [12421,]  241 #> [12422,]  242 #> [12423,]  241 #> [12424,]  242 #> [12425,]  241 #> [12426,]  242 #> [12427,]  242 #> [12428,]  242 #> [12429,]  241 #> [12430,]  242 #> [12431,]  242 #> [12432,]  242 #> [12433,]  242 #> [12434,]  241 #> [12435,]  241 #> [12436,]  241 #> [12437,]  241 #> [12438,]  242 #> [12439,]  242 #> [12440,]  242 #> [12441,]  241 #> [12442,]  241 #> [12443,]  242 #> [12444,]  241 #> [12445,]  241 #> [12446,]  242 #> [12447,]  242 #> [12448,]  242 #> [12449,]  242 #> [12450,]  241 #> [12451,]  242 #> [12452,]  242 #> [12453,]  241 #> [12454,]  241 #> [12455,]  241 #> [12456,]  241 #> [12457,]  241 #> [12458,]  242 #> [12459,]  242 #> [12460,]  241 #> [12461,]  242 #> [12462,]  242 #> [12463,]  242 #> [12464,]  241 #> [12465,]  241 #> [12466,]  242 #> [12467,]  242 #> [12468,]  242 #> [12469,]  242 #> [12470,]  242 #> [12471,]  242 #> [12472,]  242 #> [12473,]  241 #> [12474,]  241 #> [12475,]  242 #> [12476,]  241 #> [12477,]  242 #> [12478,]  242 #> [12479,]  242 #> [12480,]  241 #> [12481,]  241 #> [12482,]  241 #> [12483,]  242 #> [12484,]  241 #> [12485,]  241 #> [12486,]  241 #> [12487,]  242 #> [12488,]  241 #> [12489,]  241 #> [12490,]  242 #> [12491,]  242 #> [12492,]  242 #> [12493,]  242 #> [12494,]  241 #> [12495,]  242 #> [12496,]  242 #> [12497,]  241 #> [12498,]  241 #> [12499,]  241 #> [12500,]  242 #> [12501,]  244 #> [12502,]  244 #> [12503,]  243 #> [12504,]  244 #> [12505,]  243 #> [12506,]  243 #> [12507,]  244 #> [12508,]  244 #> [12509,]  244 #> [12510,]  244 #> [12511,]  243 #> [12512,]  243 #> [12513,]  244 #> [12514,]  243 #> [12515,]  244 #> [12516,]  244 #> [12517,]  244 #> [12518,]  244 #> [12519,]  243 #> [12520,]  243 #> [12521,]  244 #> [12522,]  243 #> [12523,]  244 #> [12524,]  243 #> [12525,]  244 #> [12526,]  243 #> [12527,]  244 #> [12528,]  244 #> [12529,]  243 #> [12530,]  243 #> [12531,]  244 #> [12532,]  243 #> [12533,]  243 #> [12534,]  243 #> [12535,]  243 #> [12536,]  243 #> [12537,]  244 #> [12538,]  244 #> [12539,]  244 #> [12540,]  243 #> [12541,]  243 #> [12542,]  243 #> [12543,]  244 #> [12544,]  244 #> [12545,]  244 #> [12546,]  244 #> [12547,]  244 #> [12548,]  243 #> [12549,]  244 #> [12550,]  244 #> [12551,]  243 #> [12552,]  243 #> [12553,]  244 #> [12554,]  243 #> [12555,]  243 #> [12556,]  244 #> [12557,]  243 #> [12558,]  243 #> [12559,]  244 #> [12560,]  243 #> [12561,]  244 #> [12562,]  243 #> [12563,]  243 #> [12564,]  244 #> [12565,]  244 #> [12566,]  243 #> [12567,]  243 #> [12568,]  243 #> [12569,]  243 #> [12570,]  244 #> [12571,]  244 #> [12572,]  244 #> [12573,]  244 #> [12574,]  244 #> [12575,]  244 #> [12576,]  244 #> [12577,]  244 #> [12578,]  243 #> [12579,]  244 #> [12580,]  243 #> [12581,]  243 #> [12582,]  244 #> [12583,]  243 #> [12584,]  244 #> [12585,]  244 #> [12586,]  244 #> [12587,]  244 #> [12588,]  244 #> [12589,]  243 #> [12590,]  244 #> [12591,]  243 #> [12592,]  244 #> [12593,]  243 #> [12594,]  244 #> [12595,]  244 #> [12596,]  244 #> [12597,]  243 #> [12598,]  243 #> [12599,]  243 #> [12600,]  244 #> [12601,]  245 #> [12602,]  245 #> [12603,]  245 #> [12604,]  245 #> [12605,]  245 #> [12606,]  245 #> [12607,]  245 #> [12608,]  245 #> [12609,]  245 #> [12610,]  245 #> [12611,]  245 #> [12612,]  245 #> [12613,]  245 #> [12614,]  245 #> [12615,]  245 #> [12616,]  245 #> [12617,]  245 #> [12618,]  245 #> [12619,]  245 #> [12620,]  245 #> [12621,]  245 #> [12622,]  245 #> [12623,]  245 #> [12624,]  245 #> [12625,]  245 #> [12626,]  245 #> [12627,]  245 #> [12628,]  245 #> [12629,]  245 #> [12630,]  245 #> [12631,]  245 #> [12632,]  245 #> [12633,]  245 #> [12634,]  245 #> [12635,]  245 #> [12636,]  245 #> [12637,]  245 #> [12638,]  245 #> [12639,]  245 #> [12640,]  245 #> [12641,]  245 #> [12642,]  245 #> [12643,]  245 #> [12644,]  245 #> [12645,]  245 #> [12646,]  245 #> [12647,]  245 #> [12648,]  245 #> [12649,]  245 #> [12650,]  245 #> [12651,]  245 #> [12652,]  245 #> [12653,]  245 #> [12654,]  245 #> [12655,]  245 #> [12656,]  245 #> [12657,]  245 #> [12658,]  245 #> [12659,]  245 #> [12660,]  245 #> [12661,]  245 #> [12662,]  245 #> [12663,]  245 #> [12664,]  245 #> [12665,]  245 #> [12666,]  245 #> [12667,]  245 #> [12668,]  245 #> [12669,]  245 #> [12670,]  245 #> [12671,]  245 #> [12672,]  245 #> [12673,]  245 #> [12674,]  245 #> [12675,]  245 #> [12676,]  245 #> [12677,]  245 #> [12678,]  245 #> [12679,]  245 #> [12680,]  245 #> [12681,]  245 #> [12682,]  245 #> [12683,]  245 #> [12684,]  245 #> [12685,]  245 #> [12686,]  245 #> [12687,]  245 #> [12688,]  245 #> [12689,]  245 #> [12690,]  245 #> [12691,]  245 #> [12692,]  245 #> [12693,]  245 #> [12694,]  245 #> [12695,]  245 #> [12696,]  245 #> [12697,]  245 #> [12698,]  245 #> [12699,]  245 #> [12700,]  245 #> [12701,]  247 #> [12702,]  247 #> [12703,]  246 #> [12704,]  247 #> [12705,]  247 #> [12706,]  247 #> [12707,]  246 #> [12708,]  247 #> [12709,]  247 #> [12710,]  247 #> [12711,]  247 #> [12712,]  247 #> [12713,]  246 #> [12714,]  247 #> [12715,]  247 #> [12716,]  246 #> [12717,]  247 #> [12718,]  247 #> [12719,]  247 #> [12720,]  247 #> [12721,]  246 #> [12722,]  247 #> [12723,]  246 #> [12724,]  247 #> [12725,]  247 #> [12726,]  247 #> [12727,]  247 #> [12728,]  247 #> [12729,]  247 #> [12730,]  246 #> [12731,]  246 #> [12732,]  247 #> [12733,]  247 #> [12734,]  247 #> [12735,]  247 #> [12736,]  246 #> [12737,]  246 #> [12738,]  247 #> [12739,]  246 #> [12740,]  246 #> [12741,]  247 #> [12742,]  247 #> [12743,]  247 #> [12744,]  247 #> [12745,]  247 #> [12746,]  247 #> [12747,]  246 #> [12748,]  247 #> [12749,]  246 #> [12750,]  247 #> [12751,]  247 #> [12752,]  247 #> [12753,]  247 #> [12754,]  246 #> [12755,]  247 #> [12756,]  247 #> [12757,]  247 #> [12758,]  247 #> [12759,]  247 #> [12760,]  247 #> [12761,]  247 #> [12762,]  246 #> [12763,]  247 #> [12764,]  247 #> [12765,]  247 #> [12766,]  247 #> [12767,]  247 #> [12768,]  247 #> [12769,]  247 #> [12770,]  246 #> [12771,]  247 #> [12772,]  247 #> [12773,]  247 #> [12774,]  247 #> [12775,]  247 #> [12776,]  247 #> [12777,]  246 #> [12778,]  247 #> [12779,]  246 #> [12780,]  246 #> [12781,]  247 #> [12782,]  247 #> [12783,]  246 #> [12784,]  247 #> [12785,]  247 #> [12786,]  247 #> [12787,]  247 #> [12788,]  247 #> [12789,]  247 #> [12790,]  247 #> [12791,]  247 #> [12792,]  247 #> [12793,]  247 #> [12794,]  247 #> [12795,]  246 #> [12796,]  247 #> [12797,]  247 #> [12798,]  246 #> [12799,]  247 #> [12800,]  247 #> [12801,]  249 #> [12802,]  249 #> [12803,]  248 #> [12804,]  249 #> [12805,]  249 #> [12806,]  249 #> [12807,]  249 #> [12808,]  249 #> [12809,]  249 #> [12810,]  249 #> [12811,]  248 #> [12812,]  248 #> [12813,]  249 #> [12814,]  248 #> [12815,]  249 #> [12816,]  249 #> [12817,]  249 #> [12818,]  249 #> [12819,]  248 #> [12820,]  248 #> [12821,]  249 #> [12822,]  248 #> [12823,]  249 #> [12824,]  248 #> [12825,]  249 #> [12826,]  248 #> [12827,]  249 #> [12828,]  249 #> [12829,]  248 #> [12830,]  248 #> [12831,]  249 #> [12832,]  248 #> [12833,]  249 #> [12834,]  248 #> [12835,]  249 #> [12836,]  248 #> [12837,]  249 #> [12838,]  249 #> [12839,]  249 #> [12840,]  248 #> [12841,]  248 #> [12842,]  248 #> [12843,]  249 #> [12844,]  249 #> [12845,]  249 #> [12846,]  249 #> [12847,]  249 #> [12848,]  248 #> [12849,]  249 #> [12850,]  249 #> [12851,]  248 #> [12852,]  249 #> [12853,]  249 #> [12854,]  248 #> [12855,]  249 #> [12856,]  249 #> [12857,]  249 #> [12858,]  249 #> [12859,]  249 #> [12860,]  248 #> [12861,]  249 #> [12862,]  248 #> [12863,]  248 #> [12864,]  249 #> [12865,]  249 #> [12866,]  248 #> [12867,]  248 #> [12868,]  248 #> [12869,]  248 #> [12870,]  249 #> [12871,]  249 #> [12872,]  249 #> [12873,]  249 #> [12874,]  249 #> [12875,]  249 #> [12876,]  249 #> [12877,]  249 #> [12878,]  248 #> [12879,]  249 #> [12880,]  248 #> [12881,]  248 #> [12882,]  249 #> [12883,]  248 #> [12884,]  249 #> [12885,]  249 #> [12886,]  249 #> [12887,]  249 #> [12888,]  249 #> [12889,]  248 #> [12890,]  249 #> [12891,]  248 #> [12892,]  249 #> [12893,]  248 #> [12894,]  249 #> [12895,]  249 #> [12896,]  249 #> [12897,]  249 #> [12898,]  249 #> [12899,]  249 #> [12900,]  249 #> [12901,]  251 #> [12902,]  250 #> [12903,]  250 #> [12904,]  250 #> [12905,]  251 #> [12906,]  250 #> [12907,]  250 #> [12908,]  250 #> [12909,]  250 #> [12910,]  251 #> [12911,]  251 #> [12912,]  251 #> [12913,]  250 #> [12914,]  251 #> [12915,]  251 #> [12916,]  250 #> [12917,]  251 #> [12918,]  251 #> [12919,]  251 #> [12920,]  250 #> [12921,]  250 #> [12922,]  251 #> [12923,]  250 #> [12924,]  251 #> [12925,]  250 #> [12926,]  251 #> [12927,]  251 #> [12928,]  250 #> [12929,]  250 #> [12930,]  250 #> [12931,]  251 #> [12932,]  251 #> [12933,]  250 #> [12934,]  250 #> [12935,]  250 #> [12936,]  250 #> [12937,]  250 #> [12938,]  251 #> [12939,]  251 #> [12940,]  250 #> [12941,]  250 #> [12942,]  250 #> [12943,]  251 #> [12944,]  250 #> [12945,]  250 #> [12946,]  250 #> [12947,]  251 #> [12948,]  250 #> [12949,]  250 #> [12950,]  250 #> [12951,]  251 #> [12952,]  251 #> [12953,]  250 #> [12954,]  250 #> [12955,]  250 #> [12956,]  250 #> [12957,]  250 #> [12958,]  251 #> [12959,]  251 #> [12960,]  250 #> [12961,]  251 #> [12962,]  250 #> [12963,]  250 #> [12964,]  250 #> [12965,]  250 #> [12966,]  251 #> [12967,]  250 #> [12968,]  251 #> [12969,]  250 #> [12970,]  251 #> [12971,]  251 #> [12972,]  250 #> [12973,]  250 #> [12974,]  250 #> [12975,]  251 #> [12976,]  250 #> [12977,]  251 #> [12978,]  250 #> [12979,]  251 #> [12980,]  250 #> [12981,]  250 #> [12982,]  250 #> [12983,]  251 #> [12984,]  250 #> [12985,]  250 #> [12986,]  250 #> [12987,]  251 #> [12988,]  250 #> [12989,]  250 #> [12990,]  251 #> [12991,]  251 #> [12992,]  251 #> [12993,]  250 #> [12994,]  250 #> [12995,]  251 #> [12996,]  251 #> [12997,]  250 #> [12998,]  250 #> [12999,]  250 #> [13000,]  251 #> [13001,]  253 #> [13002,]  253 #> [13003,]  252 #> [13004,]  253 #> [13005,]  252 #> [13006,]  252 #> [13007,]  253 #> [13008,]  253 #> [13009,]  253 #> [13010,]  253 #> [13011,]  252 #> [13012,]  252 #> [13013,]  253 #> [13014,]  252 #> [13015,]  253 #> [13016,]  253 #> [13017,]  253 #> [13018,]  253 #> [13019,]  252 #> [13020,]  252 #> [13021,]  253 #> [13022,]  252 #> [13023,]  253 #> [13024,]  252 #> [13025,]  253 #> [13026,]  252 #> [13027,]  253 #> [13028,]  253 #> [13029,]  252 #> [13030,]  252 #> [13031,]  253 #> [13032,]  252 #> [13033,]  253 #> [13034,]  252 #> [13035,]  252 #> [13036,]  252 #> [13037,]  253 #> [13038,]  253 #> [13039,]  253 #> [13040,]  252 #> [13041,]  252 #> [13042,]  252 #> [13043,]  253 #> [13044,]  253 #> [13045,]  253 #> [13046,]  253 #> [13047,]  253 #> [13048,]  252 #> [13049,]  253 #> [13050,]  253 #> [13051,]  252 #> [13052,]  252 #> [13053,]  253 #> [13054,]  252 #> [13055,]  252 #> [13056,]  253 #> [13057,]  252 #> [13058,]  253 #> [13059,]  253 #> [13060,]  252 #> [13061,]  253 #> [13062,]  252 #> [13063,]  252 #> [13064,]  253 #> [13065,]  253 #> [13066,]  252 #> [13067,]  252 #> [13068,]  252 #> [13069,]  252 #> [13070,]  253 #> [13071,]  253 #> [13072,]  253 #> [13073,]  253 #> [13074,]  253 #> [13075,]  253 #> [13076,]  253 #> [13077,]  253 #> [13078,]  252 #> [13079,]  253 #> [13080,]  252 #> [13081,]  252 #> [13082,]  253 #> [13083,]  252 #> [13084,]  253 #> [13085,]  253 #> [13086,]  253 #> [13087,]  253 #> [13088,]  253 #> [13089,]  252 #> [13090,]  253 #> [13091,]  252 #> [13092,]  253 #> [13093,]  252 #> [13094,]  253 #> [13095,]  253 #> [13096,]  253 #> [13097,]  253 #> [13098,]  252 #> [13099,]  252 #> [13100,]  253 #> [13101,]  254 #> [13102,]  254 #> [13103,]  254 #> [13104,]  254 #> [13105,]  254 #> [13106,]  254 #> [13107,]  255 #> [13108,]  254 #> [13109,]  254 #> [13110,]  254 #> [13111,]  254 #> [13112,]  254 #> [13113,]  254 #> [13114,]  254 #> [13115,]  254 #> [13116,]  255 #> [13117,]  254 #> [13118,]  254 #> [13119,]  254 #> [13120,]  255 #> [13121,]  254 #> [13122,]  254 #> [13123,]  254 #> [13124,]  255 #> [13125,]  254 #> [13126,]  254 #> [13127,]  254 #> [13128,]  255 #> [13129,]  254 #> [13130,]  254 #> [13131,]  254 #> [13132,]  254 #> [13133,]  254 #> [13134,]  254 #> [13135,]  254 #> [13136,]  254 #> [13137,]  254 #> [13138,]  254 #> [13139,]  254 #> [13140,]  254 #> [13141,]  254 #> [13142,]  254 #> [13143,]  254 #> [13144,]  254 #> [13145,]  254 #> [13146,]  254 #> [13147,]  254 #> [13148,]  254 #> [13149,]  254 #> [13150,]  255 #> [13151,]  254 #> [13152,]  255 #> [13153,]  254 #> [13154,]  254 #> [13155,]  254 #> [13156,]  254 #> [13157,]  254 #> [13158,]  254 #> [13159,]  254 #> [13160,]  254 #> [13161,]  254 #> [13162,]  254 #> [13163,]  254 #> [13164,]  254 #> [13165,]  254 #> [13166,]  254 #> [13167,]  254 #> [13168,]  254 #> [13169,]  254 #> [13170,]  254 #> [13171,]  254 #> [13172,]  254 #> [13173,]  254 #> [13174,]  254 #> [13175,]  254 #> [13176,]  255 #> [13177,]  254 #> [13178,]  254 #> [13179,]  254 #> [13180,]  254 #> [13181,]  254 #> [13182,]  254 #> [13183,]  254 #> [13184,]  254 #> [13185,]  254 #> [13186,]  255 #> [13187,]  254 #> [13188,]  254 #> [13189,]  254 #> [13190,]  254 #> [13191,]  255 #> [13192,]  254 #> [13193,]  254 #> [13194,]  254 #> [13195,]  254 #> [13196,]  254 #> [13197,]  254 #> [13198,]  254 #> [13199,]  254 #> [13200,]  254 #> [13201,]  257 #> [13202,]  256 #> [13203,]  256 #> [13204,]  257 #> [13205,]  256 #> [13206,]  256 #> [13207,]  257 #> [13208,]  257 #> [13209,]  257 #> [13210,]  257 #> [13211,]  256 #> [13212,]  256 #> [13213,]  257 #> [13214,]  256 #> [13215,]  257 #> [13216,]  257 #> [13217,]  257 #> [13218,]  257 #> [13219,]  256 #> [13220,]  256 #> [13221,]  257 #> [13222,]  256 #> [13223,]  257 #> [13224,]  256 #> [13225,]  257 #> [13226,]  256 #> [13227,]  257 #> [13228,]  257 #> [13229,]  256 #> [13230,]  256 #> [13231,]  256 #> [13232,]  256 #> [13233,]  256 #> [13234,]  256 #> [13235,]  256 #> [13236,]  256 #> [13237,]  257 #> [13238,]  257 #> [13239,]  257 #> [13240,]  256 #> [13241,]  256 #> [13242,]  256 #> [13243,]  257 #> [13244,]  257 #> [13245,]  257 #> [13246,]  257 #> [13247,]  257 #> [13248,]  256 #> [13249,]  256 #> [13250,]  256 #> [13251,]  256 #> [13252,]  256 #> [13253,]  257 #> [13254,]  256 #> [13255,]  256 #> [13256,]  257 #> [13257,]  256 #> [13258,]  256 #> [13259,]  256 #> [13260,]  256 #> [13261,]  257 #> [13262,]  256 #> [13263,]  256 #> [13264,]  257 #> [13265,]  256 #> [13266,]  256 #> [13267,]  256 #> [13268,]  256 #> [13269,]  256 #> [13270,]  257 #> [13271,]  257 #> [13272,]  257 #> [13273,]  257 #> [13274,]  257 #> [13275,]  257 #> [13276,]  257 #> [13277,]  257 #> [13278,]  256 #> [13279,]  257 #> [13280,]  256 #> [13281,]  256 #> [13282,]  257 #> [13283,]  256 #> [13284,]  257 #> [13285,]  256 #> [13286,]  257 #> [13287,]  257 #> [13288,]  257 #> [13289,]  256 #> [13290,]  257 #> [13291,]  256 #> [13292,]  256 #> [13293,]  256 #> [13294,]  257 #> [13295,]  257 #> [13296,]  257 #> [13297,]  256 #> [13298,]  256 #> [13299,]  256 #> [13300,]  257 #> [13301,]  259 #> [13302,]  258 #> [13303,]  258 #> [13304,]  258 #> [13305,]  259 #> [13306,]  258 #> [13307,]  258 #> [13308,]  258 #> [13309,]  258 #> [13310,]  259 #> [13311,]  259 #> [13312,]  259 #> [13313,]  258 #> [13314,]  259 #> [13315,]  259 #> [13316,]  259 #> [13317,]  259 #> [13318,]  259 #> [13319,]  259 #> [13320,]  258 #> [13321,]  258 #> [13322,]  259 #> [13323,]  258 #> [13324,]  259 #> [13325,]  258 #> [13326,]  259 #> [13327,]  259 #> [13328,]  258 #> [13329,]  258 #> [13330,]  258 #> [13331,]  259 #> [13332,]  259 #> [13333,]  258 #> [13334,]  258 #> [13335,]  258 #> [13336,]  258 #> [13337,]  258 #> [13338,]  259 #> [13339,]  259 #> [13340,]  258 #> [13341,]  258 #> [13342,]  258 #> [13343,]  259 #> [13344,]  258 #> [13345,]  258 #> [13346,]  258 #> [13347,]  259 #> [13348,]  258 #> [13349,]  258 #> [13350,]  258 #> [13351,]  259 #> [13352,]  259 #> [13353,]  258 #> [13354,]  258 #> [13355,]  258 #> [13356,]  258 #> [13357,]  258 #> [13358,]  259 #> [13359,]  259 #> [13360,]  258 #> [13361,]  259 #> [13362,]  258 #> [13363,]  258 #> [13364,]  258 #> [13365,]  258 #> [13366,]  259 #> [13367,]  258 #> [13368,]  259 #> [13369,]  258 #> [13370,]  259 #> [13371,]  259 #> [13372,]  258 #> [13373,]  258 #> [13374,]  258 #> [13375,]  259 #> [13376,]  258 #> [13377,]  259 #> [13378,]  258 #> [13379,]  259 #> [13380,]  258 #> [13381,]  258 #> [13382,]  258 #> [13383,]  259 #> [13384,]  258 #> [13385,]  258 #> [13386,]  258 #> [13387,]  259 #> [13388,]  258 #> [13389,]  258 #> [13390,]  259 #> [13391,]  259 #> [13392,]  259 #> [13393,]  258 #> [13394,]  258 #> [13395,]  259 #> [13396,]  259 #> [13397,]  258 #> [13398,]  258 #> [13399,]  258 #> [13400,]  259 #> [13401,]  261 #> [13402,]  260 #> [13403,]  261 #> [13404,]  261 #> [13405,]  261 #> [13406,]  260 #> [13407,]  261 #> [13408,]  261 #> [13409,]  261 #> [13410,]  261 #> [13411,]  260 #> [13412,]  260 #> [13413,]  261 #> [13414,]  261 #> [13415,]  260 #> [13416,]  261 #> [13417,]  260 #> [13418,]  261 #> [13419,]  260 #> [13420,]  261 #> [13421,]  261 #> [13422,]  261 #> [13423,]  260 #> [13424,]  261 #> [13425,]  261 #> [13426,]  260 #> [13427,]  261 #> [13428,]  261 #> [13429,]  260 #> [13430,]  260 #> [13431,]  260 #> [13432,]  261 #> [13433,]  261 #> [13434,]  260 #> [13435,]  260 #> [13436,]  261 #> [13437,]  260 #> [13438,]  261 #> [13439,]  261 #> [13440,]  261 #> [13441,]  261 #> [13442,]  260 #> [13443,]  260 #> [13444,]  260 #> [13445,]  261 #> [13446,]  260 #> [13447,]  260 #> [13448,]  260 #> [13449,]  261 #> [13450,]  261 #> [13451,]  261 #> [13452,]  261 #> [13453,]  261 #> [13454,]  261 #> [13455,]  261 #> [13456,]  260 #> [13457,]  261 #> [13458,]  261 #> [13459,]  261 #> [13460,]  260 #> [13461,]  260 #> [13462,]  261 #> [13463,]  260 #> [13464,]  260 #> [13465,]  260 #> [13466,]  260 #> [13467,]  261 #> [13468,]  260 #> [13469,]  261 #> [13470,]  260 #> [13471,]  261 #> [13472,]  261 #> [13473,]  261 #> [13474,]  261 #> [13475,]  260 #> [13476,]  261 #> [13477,]  261 #> [13478,]  260 #> [13479,]  260 #> [13480,]  261 #> [13481,]  260 #> [13482,]  261 #> [13483,]  261 #> [13484,]  261 #> [13485,]  261 #> [13486,]  261 #> [13487,]  261 #> [13488,]  261 #> [13489,]  261 #> [13490,]  261 #> [13491,]  261 #> [13492,]  260 #> [13493,]  260 #> [13494,]  260 #> [13495,]  260 #> [13496,]  260 #> [13497,]  261 #> [13498,]  261 #> [13499,]  261 #> [13500,]  260 #> [13501,]  262 #> [13502,]  263 #> [13503,]  263 #> [13504,]  262 #> [13505,]  262 #> [13506,]  263 #> [13507,]  263 #> [13508,]  262 #> [13509,]  262 #> [13510,]  262 #> [13511,]  262 #> [13512,]  263 #> [13513,]  262 #> [13514,]  262 #> [13515,]  262 #> [13516,]  262 #> [13517,]  262 #> [13518,]  263 #> [13519,]  263 #> [13520,]  263 #> [13521,]  262 #> [13522,]  262 #> [13523,]  262 #> [13524,]  262 #> [13525,]  263 #> [13526,]  262 #> [13527,]  262 #> [13528,]  263 #> [13529,]  262 #> [13530,]  262 #> [13531,]  263 #> [13532,]  263 #> [13533,]  263 #> [13534,]  263 #> [13535,]  262 #> [13536,]  262 #> [13537,]  262 #> [13538,]  262 #> [13539,]  262 #> [13540,]  262 #> [13541,]  262 #> [13542,]  263 #> [13543,]  262 #> [13544,]  262 #> [13545,]  262 #> [13546,]  262 #> [13547,]  262 #> [13548,]  262 #> [13549,]  262 #> [13550,]  262 #> [13551,]  262 #> [13552,]  262 #> [13553,]  262 #> [13554,]  262 #> [13555,]  262 #> [13556,]  262 #> [13557,]  262 #> [13558,]  262 #> [13559,]  262 #> [13560,]  263 #> [13561,]  262 #> [13562,]  262 #> [13563,]  262 #> [13564,]  263 #> [13565,]  263 #> [13566,]  262 #> [13567,]  262 #> [13568,]  262 #> [13569,]  262 #> [13570,]  263 #> [13571,]  263 #> [13572,]  262 #> [13573,]  263 #> [13574,]  262 #> [13575,]  262 #> [13576,]  262 #> [13577,]  262 #> [13578,]  262 #> [13579,]  262 #> [13580,]  262 #> [13581,]  262 #> [13582,]  262 #> [13583,]  262 #> [13584,]  263 #> [13585,]  262 #> [13586,]  262 #> [13587,]  262 #> [13588,]  262 #> [13589,]  262 #> [13590,]  262 #> [13591,]  262 #> [13592,]  262 #> [13593,]  263 #> [13594,]  262 #> [13595,]  262 #> [13596,]  262 #> [13597,]  263 #> [13598,]  263 #> [13599,]  262 #> [13600,]  263 #> [13601,]  265 #> [13602,]  264 #> [13603,]  264 #> [13604,]  265 #> [13605,]  264 #> [13606,]  264 #> [13607,]  265 #> [13608,]  264 #> [13609,]  265 #> [13610,]  265 #> [13611,]  264 #> [13612,]  264 #> [13613,]  265 #> [13614,]  265 #> [13615,]  264 #> [13616,]  265 #> [13617,]  264 #> [13618,]  264 #> [13619,]  264 #> [13620,]  265 #> [13621,]  264 #> [13622,]  265 #> [13623,]  264 #> [13624,]  265 #> [13625,]  265 #> [13626,]  264 #> [13627,]  264 #> [13628,]  265 #> [13629,]  264 #> [13630,]  264 #> [13631,]  264 #> [13632,]  264 #> [13633,]  264 #> [13634,]  264 #> [13635,]  264 #> [13636,]  265 #> [13637,]  264 #> [13638,]  264 #> [13639,]  265 #> [13640,]  264 #> [13641,]  264 #> [13642,]  264 #> [13643,]  264 #> [13644,]  264 #> [13645,]  265 #> [13646,]  264 #> [13647,]  264 #> [13648,]  264 #> [13649,]  265 #> [13650,]  265 #> [13651,]  264 #> [13652,]  265 #> [13653,]  265 #> [13654,]  265 #> [13655,]  265 #> [13656,]  264 #> [13657,]  265 #> [13658,]  265 #> [13659,]  265 #> [13660,]  264 #> [13661,]  264 #> [13662,]  264 #> [13663,]  264 #> [13664,]  264 #> [13665,]  264 #> [13666,]  264 #> [13667,]  265 #> [13668,]  264 #> [13669,]  264 #> [13670,]  264 #> [13671,]  264 #> [13672,]  265 #> [13673,]  265 #> [13674,]  264 #> [13675,]  264 #> [13676,]  265 #> [13677,]  264 #> [13678,]  264 #> [13679,]  264 #> [13680,]  264 #> [13681,]  264 #> [13682,]  264 #> [13683,]  264 #> [13684,]  264 #> [13685,]  265 #> [13686,]  265 #> [13687,]  265 #> [13688,]  264 #> [13689,]  264 #> [13690,]  265 #> [13691,]  265 #> [13692,]  264 #> [13693,]  264 #> [13694,]  264 #> [13695,]  264 #> [13696,]  264 #> [13697,]  264 #> [13698,]  264 #> [13699,]  264 #> [13700,]  264 #> [13701,]  267 #> [13702,]  266 #> [13703,]  266 #> [13704,]  267 #> [13705,]  267 #> [13706,]  266 #> [13707,]  266 #> [13708,]  266 #> [13709,]  266 #> [13710,]  267 #> [13711,]  267 #> [13712,]  267 #> [13713,]  267 #> [13714,]  267 #> [13715,]  267 #> [13716,]  267 #> [13717,]  267 #> [13718,]  267 #> [13719,]  267 #> [13720,]  266 #> [13721,]  266 #> [13722,]  267 #> [13723,]  266 #> [13724,]  267 #> [13725,]  266 #> [13726,]  267 #> [13727,]  267 #> [13728,]  267 #> [13729,]  266 #> [13730,]  267 #> [13731,]  267 #> [13732,]  267 #> [13733,]  267 #> [13734,]  266 #> [13735,]  266 #> [13736,]  266 #> [13737,]  266 #> [13738,]  267 #> [13739,]  267 #> [13740,]  266 #> [13741,]  266 #> [13742,]  266 #> [13743,]  267 #> [13744,]  266 #> [13745,]  266 #> [13746,]  267 #> [13747,]  267 #> [13748,]  267 #> [13749,]  266 #> [13750,]  266 #> [13751,]  267 #> [13752,]  267 #> [13753,]  266 #> [13754,]  266 #> [13755,]  266 #> [13756,]  266 #> [13757,]  266 #> [13758,]  267 #> [13759,]  267 #> [13760,]  266 #> [13761,]  267 #> [13762,]  266 #> [13763,]  267 #> [13764,]  266 #> [13765,]  266 #> [13766,]  267 #> [13767,]  266 #> [13768,]  267 #> [13769,]  267 #> [13770,]  267 #> [13771,]  267 #> [13772,]  266 #> [13773,]  266 #> [13774,]  266 #> [13775,]  267 #> [13776,]  266 #> [13777,]  267 #> [13778,]  267 #> [13779,]  267 #> [13780,]  266 #> [13781,]  266 #> [13782,]  266 #> [13783,]  267 #> [13784,]  266 #> [13785,]  266 #> [13786,]  266 #> [13787,]  267 #> [13788,]  266 #> [13789,]  266 #> [13790,]  267 #> [13791,]  267 #> [13792,]  267 #> [13793,]  267 #> [13794,]  266 #> [13795,]  267 #> [13796,]  267 #> [13797,]  266 #> [13798,]  266 #> [13799,]  266 #> [13800,]  267 #> [13801,]  268 #> [13802,]  268 #> [13803,]  268 #> [13804,]  269 #> [13805,]  268 #> [13806,]  268 #> [13807,]  269 #> [13808,]  268 #> [13809,]  268 #> [13810,]  269 #> [13811,]  268 #> [13812,]  268 #> [13813,]  268 #> [13814,]  268 #> [13815,]  269 #> [13816,]  269 #> [13817,]  268 #> [13818,]  269 #> [13819,]  268 #> [13820,]  268 #> [13821,]  269 #> [13822,]  268 #> [13823,]  269 #> [13824,]  268 #> [13825,]  269 #> [13826,]  268 #> [13827,]  269 #> [13828,]  269 #> [13829,]  268 #> [13830,]  268 #> [13831,]  268 #> [13832,]  268 #> [13833,]  268 #> [13834,]  268 #> [13835,]  268 #> [13836,]  268 #> [13837,]  268 #> [13838,]  268 #> [13839,]  269 #> [13840,]  268 #> [13841,]  268 #> [13842,]  268 #> [13843,]  269 #> [13844,]  268 #> [13845,]  269 #> [13846,]  268 #> [13847,]  269 #> [13848,]  268 #> [13849,]  268 #> [13850,]  268 #> [13851,]  268 #> [13852,]  268 #> [13853,]  269 #> [13854,]  268 #> [13855,]  268 #> [13856,]  268 #> [13857,]  268 #> [13858,]  268 #> [13859,]  268 #> [13860,]  268 #> [13861,]  269 #> [13862,]  268 #> [13863,]  268 #> [13864,]  269 #> [13865,]  268 #> [13866,]  268 #> [13867,]  268 #> [13868,]  268 #> [13869,]  268 #> [13870,]  268 #> [13871,]  269 #> [13872,]  269 #> [13873,]  269 #> [13874,]  269 #> [13875,]  269 #> [13876,]  269 #> [13877,]  269 #> [13878,]  268 #> [13879,]  268 #> [13880,]  268 #> [13881,]  268 #> [13882,]  268 #> [13883,]  268 #> [13884,]  269 #> [13885,]  268 #> [13886,]  268 #> [13887,]  268 #> [13888,]  269 #> [13889,]  268 #> [13890,]  268 #> [13891,]  268 #> [13892,]  268 #> [13893,]  268 #> [13894,]  269 #> [13895,]  269 #> [13896,]  268 #> [13897,]  268 #> [13898,]  268 #> [13899,]  268 #> [13900,]  269 #> [13901,]  271 #> [13902,]  270 #> [13903,]  271 #> [13904,]  271 #> [13905,]  271 #> [13906,]  270 #> [13907,]  271 #> [13908,]  271 #> [13909,]  271 #> [13910,]  271 #> [13911,]  270 #> [13912,]  270 #> [13913,]  271 #> [13914,]  271 #> [13915,]  270 #> [13916,]  271 #> [13917,]  270 #> [13918,]  271 #> [13919,]  270 #> [13920,]  271 #> [13921,]  271 #> [13922,]  271 #> [13923,]  270 #> [13924,]  271 #> [13925,]  271 #> [13926,]  270 #> [13927,]  271 #> [13928,]  271 #> [13929,]  270 #> [13930,]  270 #> [13931,]  270 #> [13932,]  271 #> [13933,]  271 #> [13934,]  270 #> [13935,]  270 #> [13936,]  271 #> [13937,]  270 #> [13938,]  271 #> [13939,]  271 #> [13940,]  271 #> [13941,]  271 #> [13942,]  270 #> [13943,]  270 #> [13944,]  270 #> [13945,]  271 #> [13946,]  271 #> [13947,]  270 #> [13948,]  270 #> [13949,]  271 #> [13950,]  271 #> [13951,]  271 #> [13952,]  271 #> [13953,]  271 #> [13954,]  271 #> [13955,]  271 #> [13956,]  270 #> [13957,]  271 #> [13958,]  271 #> [13959,]  271 #> [13960,]  270 #> [13961,]  270 #> [13962,]  271 #> [13963,]  270 #> [13964,]  270 #> [13965,]  270 #> [13966,]  270 #> [13967,]  271 #> [13968,]  270 #> [13969,]  271 #> [13970,]  270 #> [13971,]  271 #> [13972,]  271 #> [13973,]  271 #> [13974,]  271 #> [13975,]  270 #> [13976,]  271 #> [13977,]  271 #> [13978,]  270 #> [13979,]  270 #> [13980,]  271 #> [13981,]  270 #> [13982,]  271 #> [13983,]  271 #> [13984,]  271 #> [13985,]  271 #> [13986,]  271 #> [13987,]  271 #> [13988,]  271 #> [13989,]  271 #> [13990,]  271 #> [13991,]  271 #> [13992,]  270 #> [13993,]  271 #> [13994,]  270 #> [13995,]  270 #> [13996,]  270 #> [13997,]  271 #> [13998,]  271 #> [13999,]  271 #> [14000,]  270 #> [14001,]  273 #> [14002,]  272 #> [14003,]  272 #> [14004,]  272 #> [14005,]  273 #> [14006,]  272 #> [14007,]  272 #> [14008,]  272 #> [14009,]  272 #> [14010,]  273 #> [14011,]  273 #> [14012,]  273 #> [14013,]  272 #> [14014,]  273 #> [14015,]  273 #> [14016,]  272 #> [14017,]  273 #> [14018,]  273 #> [14019,]  272 #> [14020,]  272 #> [14021,]  272 #> [14022,]  273 #> [14023,]  272 #> [14024,]  272 #> [14025,]  272 #> [14026,]  273 #> [14027,]  273 #> [14028,]  272 #> [14029,]  272 #> [14030,]  272 #> [14031,]  273 #> [14032,]  273 #> [14033,]  272 #> [14034,]  272 #> [14035,]  272 #> [14036,]  272 #> [14037,]  272 #> [14038,]  273 #> [14039,]  272 #> [14040,]  272 #> [14041,]  272 #> [14042,]  272 #> [14043,]  273 #> [14044,]  272 #> [14045,]  272 #> [14046,]  272 #> [14047,]  273 #> [14048,]  272 #> [14049,]  272 #> [14050,]  272 #> [14051,]  272 #> [14052,]  273 #> [14053,]  272 #> [14054,]  272 #> [14055,]  272 #> [14056,]  272 #> [14057,]  272 #> [14058,]  273 #> [14059,]  273 #> [14060,]  272 #> [14061,]  273 #> [14062,]  272 #> [14063,]  272 #> [14064,]  272 #> [14065,]  272 #> [14066,]  273 #> [14067,]  272 #> [14068,]  272 #> [14069,]  272 #> [14070,]  273 #> [14071,]  273 #> [14072,]  272 #> [14073,]  272 #> [14074,]  272 #> [14075,]  273 #> [14076,]  272 #> [14077,]  273 #> [14078,]  272 #> [14079,]  273 #> [14080,]  272 #> [14081,]  272 #> [14082,]  272 #> [14083,]  272 #> [14084,]  272 #> [14085,]  272 #> [14086,]  272 #> [14087,]  273 #> [14088,]  272 #> [14089,]  272 #> [14090,]  273 #> [14091,]  273 #> [14092,]  272 #> [14093,]  272 #> [14094,]  272 #> [14095,]  273 #> [14096,]  272 #> [14097,]  272 #> [14098,]  272 #> [14099,]  272 #> [14100,]  273 #> [14101,]  275 #> [14102,]  275 #> [14103,]  274 #> [14104,]  275 #> [14105,]  275 #> [14106,]  275 #> [14107,]  274 #> [14108,]  275 #> [14109,]  275 #> [14110,]  275 #> [14111,]  275 #> [14112,]  275 #> [14113,]  274 #> [14114,]  275 #> [14115,]  275 #> [14116,]  274 #> [14117,]  275 #> [14118,]  275 #> [14119,]  274 #> [14120,]  275 #> [14121,]  274 #> [14122,]  275 #> [14123,]  274 #> [14124,]  275 #> [14125,]  275 #> [14126,]  275 #> [14127,]  275 #> [14128,]  275 #> [14129,]  275 #> [14130,]  274 #> [14131,]  274 #> [14132,]  275 #> [14133,]  275 #> [14134,]  274 #> [14135,]  274 #> [14136,]  274 #> [14137,]  274 #> [14138,]  275 #> [14139,]  274 #> [14140,]  274 #> [14141,]  275 #> [14142,]  275 #> [14143,]  275 #> [14144,]  275 #> [14145,]  275 #> [14146,]  275 #> [14147,]  274 #> [14148,]  275 #> [14149,]  274 #> [14150,]  275 #> [14151,]  275 #> [14152,]  275 #> [14153,]  275 #> [14154,]  274 #> [14155,]  275 #> [14156,]  275 #> [14157,]  275 #> [14158,]  275 #> [14159,]  275 #> [14160,]  275 #> [14161,]  275 #> [14162,]  274 #> [14163,]  275 #> [14164,]  275 #> [14165,]  275 #> [14166,]  275 #> [14167,]  275 #> [14168,]  275 #> [14169,]  275 #> [14170,]  274 #> [14171,]  275 #> [14172,]  275 #> [14173,]  275 #> [14174,]  275 #> [14175,]  275 #> [14176,]  275 #> [14177,]  274 #> [14178,]  275 #> [14179,]  274 #> [14180,]  274 #> [14181,]  275 #> [14182,]  275 #> [14183,]  274 #> [14184,]  275 #> [14185,]  275 #> [14186,]  275 #> [14187,]  275 #> [14188,]  275 #> [14189,]  275 #> [14190,]  275 #> [14191,]  275 #> [14192,]  275 #> [14193,]  274 #> [14194,]  275 #> [14195,]  274 #> [14196,]  275 #> [14197,]  275 #> [14198,]  274 #> [14199,]  275 #> [14200,]  274 #> [14201,]  277 #> [14202,]  277 #> [14203,]  276 #> [14204,]  277 #> [14205,]  276 #> [14206,]  276 #> [14207,]  277 #> [14208,]  277 #> [14209,]  277 #> [14210,]  277 #> [14211,]  276 #> [14212,]  276 #> [14213,]  277 #> [14214,]  276 #> [14215,]  277 #> [14216,]  277 #> [14217,]  277 #> [14218,]  277 #> [14219,]  276 #> [14220,]  276 #> [14221,]  277 #> [14222,]  276 #> [14223,]  277 #> [14224,]  276 #> [14225,]  277 #> [14226,]  276 #> [14227,]  277 #> [14228,]  277 #> [14229,]  276 #> [14230,]  276 #> [14231,]  277 #> [14232,]  276 #> [14233,]  276 #> [14234,]  276 #> [14235,]  276 #> [14236,]  276 #> [14237,]  277 #> [14238,]  277 #> [14239,]  277 #> [14240,]  276 #> [14241,]  276 #> [14242,]  276 #> [14243,]  277 #> [14244,]  277 #> [14245,]  277 #> [14246,]  277 #> [14247,]  277 #> [14248,]  276 #> [14249,]  277 #> [14250,]  277 #> [14251,]  276 #> [14252,]  276 #> [14253,]  277 #> [14254,]  276 #> [14255,]  276 #> [14256,]  277 #> [14257,]  276 #> [14258,]  276 #> [14259,]  277 #> [14260,]  276 #> [14261,]  277 #> [14262,]  276 #> [14263,]  276 #> [14264,]  277 #> [14265,]  276 #> [14266,]  276 #> [14267,]  276 #> [14268,]  276 #> [14269,]  276 #> [14270,]  277 #> [14271,]  277 #> [14272,]  277 #> [14273,]  277 #> [14274,]  277 #> [14275,]  277 #> [14276,]  277 #> [14277,]  277 #> [14278,]  276 #> [14279,]  277 #> [14280,]  276 #> [14281,]  276 #> [14282,]  277 #> [14283,]  276 #> [14284,]  277 #> [14285,]  276 #> [14286,]  277 #> [14287,]  277 #> [14288,]  277 #> [14289,]  276 #> [14290,]  277 #> [14291,]  276 #> [14292,]  277 #> [14293,]  276 #> [14294,]  277 #> [14295,]  277 #> [14296,]  277 #> [14297,]  276 #> [14298,]  276 #> [14299,]  276 #> [14300,]  277 #> [14301,]  278 #> [14302,]  278 #> [14303,]  278 #> [14304,]  279 #> [14305,]  278 #> [14306,]  278 #> [14307,]  278 #> [14308,]  278 #> [14309,]  278 #> [14310,]  279 #> [14311,]  278 #> [14312,]  278 #> [14313,]  278 #> [14314,]  278 #> [14315,]  279 #> [14316,]  279 #> [14317,]  278 #> [14318,]  279 #> [14319,]  278 #> [14320,]  278 #> [14321,]  279 #> [14322,]  278 #> [14323,]  279 #> [14324,]  278 #> [14325,]  279 #> [14326,]  278 #> [14327,]  279 #> [14328,]  278 #> [14329,]  278 #> [14330,]  278 #> [14331,]  278 #> [14332,]  278 #> [14333,]  278 #> [14334,]  278 #> [14335,]  278 #> [14336,]  278 #> [14337,]  278 #> [14338,]  278 #> [14339,]  279 #> [14340,]  278 #> [14341,]  278 #> [14342,]  278 #> [14343,]  279 #> [14344,]  278 #> [14345,]  279 #> [14346,]  278 #> [14347,]  278 #> [14348,]  278 #> [14349,]  278 #> [14350,]  278 #> [14351,]  278 #> [14352,]  278 #> [14353,]  279 #> [14354,]  278 #> [14355,]  278 #> [14356,]  278 #> [14357,]  278 #> [14358,]  278 #> [14359,]  278 #> [14360,]  278 #> [14361,]  279 #> [14362,]  278 #> [14363,]  278 #> [14364,]  278 #> [14365,]  278 #> [14366,]  278 #> [14367,]  278 #> [14368,]  278 #> [14369,]  278 #> [14370,]  278 #> [14371,]  278 #> [14372,]  279 #> [14373,]  279 #> [14374,]  279 #> [14375,]  279 #> [14376,]  279 #> [14377,]  279 #> [14378,]  278 #> [14379,]  278 #> [14380,]  278 #> [14381,]  278 #> [14382,]  278 #> [14383,]  278 #> [14384,]  279 #> [14385,]  278 #> [14386,]  278 #> [14387,]  278 #> [14388,]  278 #> [14389,]  278 #> [14390,]  278 #> [14391,]  278 #> [14392,]  278 #> [14393,]  278 #> [14394,]  279 #> [14395,]  279 #> [14396,]  278 #> [14397,]  278 #> [14398,]  278 #> [14399,]  278 #> [14400,]  279 #> [14401,]  281 #> [14402,]  281 #> [14403,]  281 #> [14404,]  281 #> [14405,]  281 #> [14406,]  281 #> [14407,]  281 #> [14408,]  281 #> [14409,]  281 #> [14410,]  281 #> [14411,]  281 #> [14412,]  281 #> [14413,]  281 #> [14414,]  281 #> [14415,]  281 #> [14416,]  281 #> [14417,]  281 #> [14418,]  281 #> [14419,]  281 #> [14420,]  281 #> [14421,]  281 #> [14422,]  281 #> [14423,]  281 #> [14424,]  281 #> [14425,]  280 #> [14426,]  281 #> [14427,]  281 #> [14428,]  281 #> [14429,]  281 #> [14430,]  281 #> [14431,]  281 #> [14432,]  281 #> [14433,]  281 #> [14434,]  281 #> [14435,]  281 #> [14436,]  281 #> [14437,]  281 #> [14438,]  281 #> [14439,]  281 #> [14440,]  281 #> [14441,]  281 #> [14442,]  281 #> [14443,]  281 #> [14444,]  281 #> [14445,]  281 #> [14446,]  281 #> [14447,]  281 #> [14448,]  281 #> [14449,]  281 #> [14450,]  281 #> [14451,]  281 #> [14452,]  281 #> [14453,]  281 #> [14454,]  281 #> [14455,]  281 #> [14456,]  280 #> [14457,]  281 #> [14458,]  281 #> [14459,]  281 #> [14460,]  281 #> [14461,]  281 #> [14462,]  281 #> [14463,]  281 #> [14464,]  281 #> [14465,]  280 #> [14466,]  281 #> [14467,]  281 #> [14468,]  281 #> [14469,]  281 #> [14470,]  281 #> [14471,]  281 #> [14472,]  281 #> [14473,]  281 #> [14474,]  281 #> [14475,]  281 #> [14476,]  281 #> [14477,]  281 #> [14478,]  281 #> [14479,]  281 #> [14480,]  280 #> [14481,]  281 #> [14482,]  281 #> [14483,]  281 #> [14484,]  281 #> [14485,]  280 #> [14486,]  281 #> [14487,]  281 #> [14488,]  281 #> [14489,]  281 #> [14490,]  281 #> [14491,]  281 #> [14492,]  281 #> [14493,]  281 #> [14494,]  281 #> [14495,]  281 #> [14496,]  281 #> [14497,]  281 #> [14498,]  281 #> [14499,]  281 #> [14500,]  281 #> [14501,]  283 #> [14502,]  283 #> [14503,]  282 #> [14504,]  283 #> [14505,]  283 #> [14506,]  282 #> [14507,]  282 #> [14508,]  283 #> [14509,]  283 #> [14510,]  283 #> [14511,]  283 #> [14512,]  283 #> [14513,]  283 #> [14514,]  283 #> [14515,]  283 #> [14516,]  283 #> [14517,]  283 #> [14518,]  283 #> [14519,]  283 #> [14520,]  282 #> [14521,]  282 #> [14522,]  283 #> [14523,]  282 #> [14524,]  283 #> [14525,]  282 #> [14526,]  283 #> [14527,]  283 #> [14528,]  283 #> [14529,]  283 #> [14530,]  283 #> [14531,]  283 #> [14532,]  283 #> [14533,]  283 #> [14534,]  282 #> [14535,]  282 #> [14536,]  283 #> [14537,]  282 #> [14538,]  283 #> [14539,]  283 #> [14540,]  283 #> [14541,]  283 #> [14542,]  282 #> [14543,]  283 #> [14544,]  282 #> [14545,]  283 #> [14546,]  283 #> [14547,]  283 #> [14548,]  283 #> [14549,]  283 #> [14550,]  282 #> [14551,]  283 #> [14552,]  283 #> [14553,]  282 #> [14554,]  282 #> [14555,]  282 #> [14556,]  282 #> [14557,]  282 #> [14558,]  283 #> [14559,]  283 #> [14560,]  283 #> [14561,]  283 #> [14562,]  283 #> [14563,]  283 #> [14564,]  282 #> [14565,]  282 #> [14566,]  283 #> [14567,]  283 #> [14568,]  283 #> [14569,]  283 #> [14570,]  283 #> [14571,]  283 #> [14572,]  283 #> [14573,]  282 #> [14574,]  282 #> [14575,]  283 #> [14576,]  283 #> [14577,]  283 #> [14578,]  283 #> [14579,]  283 #> [14580,]  282 #> [14581,]  283 #> [14582,]  282 #> [14583,]  283 #> [14584,]  282 #> [14585,]  282 #> [14586,]  282 #> [14587,]  283 #> [14588,]  282 #> [14589,]  282 #> [14590,]  283 #> [14591,]  283 #> [14592,]  283 #> [14593,]  283 #> [14594,]  282 #> [14595,]  283 #> [14596,]  283 #> [14597,]  283 #> [14598,]  282 #> [14599,]  282 #> [14600,]  283 #> [14601,]  284 #> [14602,]  284 #> [14603,]  284 #> [14604,]  285 #> [14605,]  284 #> [14606,]  284 #> [14607,]  284 #> [14608,]  284 #> [14609,]  285 #> [14610,]  284 #> [14611,]  285 #> [14612,]  285 #> [14613,]  284 #> [14614,]  285 #> [14615,]  285 #> [14616,]  284 #> [14617,]  284 #> [14618,]  285 #> [14619,]  285 #> [14620,]  284 #> [14621,]  285 #> [14622,]  284 #> [14623,]  284 #> [14624,]  284 #> [14625,]  284 #> [14626,]  285 #> [14627,]  285 #> [14628,]  284 #> [14629,]  284 #> [14630,]  284 #> [14631,]  285 #> [14632,]  284 #> [14633,]  285 #> [14634,]  284 #> [14635,]  284 #> [14636,]  285 #> [14637,]  284 #> [14638,]  285 #> [14639,]  284 #> [14640,]  284 #> [14641,]  285 #> [14642,]  285 #> [14643,]  284 #> [14644,]  284 #> [14645,]  284 #> [14646,]  284 #> [14647,]  284 #> [14648,]  285 #> [14649,]  284 #> [14650,]  284 #> [14651,]  284 #> [14652,]  284 #> [14653,]  284 #> [14654,]  284 #> [14655,]  284 #> [14656,]  284 #> [14657,]  284 #> [14658,]  285 #> [14659,]  284 #> [14660,]  284 #> [14661,]  285 #> [14662,]  284 #> [14663,]  284 #> [14664,]  284 #> [14665,]  284 #> [14666,]  284 #> [14667,]  284 #> [14668,]  285 #> [14669,]  285 #> [14670,]  284 #> [14671,]  284 #> [14672,]  284 #> [14673,]  284 #> [14674,]  285 #> [14675,]  285 #> [14676,]  284 #> [14677,]  284 #> [14678,]  284 #> [14679,]  284 #> [14680,]  284 #> [14681,]  284 #> [14682,]  285 #> [14683,]  284 #> [14684,]  284 #> [14685,]  285 #> [14686,]  284 #> [14687,]  284 #> [14688,]  284 #> [14689,]  284 #> [14690,]  284 #> [14691,]  284 #> [14692,]  285 #> [14693,]  285 #> [14694,]  284 #> [14695,]  284 #> [14696,]  285 #> [14697,]  285 #> [14698,]  284 #> [14699,]  284 #> [14700,]  284 #> [14701,]  287 #> [14702,]  287 #> [14703,]  287 #> [14704,]  287 #> [14705,]  287 #> [14706,]  286 #> [14707,]  287 #> [14708,]  287 #> [14709,]  287 #> [14710,]  287 #> [14711,]  287 #> [14712,]  287 #> [14713,]  287 #> [14714,]  287 #> [14715,]  287 #> [14716,]  287 #> [14717,]  287 #> [14718,]  287 #> [14719,]  286 #> [14720,]  287 #> [14721,]  287 #> [14722,]  287 #> [14723,]  287 #> [14724,]  287 #> [14725,]  287 #> [14726,]  287 #> [14727,]  287 #> [14728,]  287 #> [14729,]  287 #> [14730,]  287 #> [14731,]  287 #> [14732,]  287 #> [14733,]  287 #> [14734,]  286 #> [14735,]  287 #> [14736,]  287 #> [14737,]  287 #> [14738,]  286 #> [14739,]  287 #> [14740,]  287 #> [14741,]  287 #> [14742,]  287 #> [14743,]  287 #> [14744,]  287 #> [14745,]  286 #> [14746,]  287 #> [14747,]  287 #> [14748,]  287 #> [14749,]  286 #> [14750,]  287 #> [14751,]  287 #> [14752,]  286 #> [14753,]  287 #> [14754,]  287 #> [14755,]  287 #> [14756,]  287 #> [14757,]  287 #> [14758,]  287 #> [14759,]  287 #> [14760,]  287 #> [14761,]  287 #> [14762,]  287 #> [14763,]  287 #> [14764,]  287 #> [14765,]  287 #> [14766,]  287 #> [14767,]  287 #> [14768,]  286 #> [14769,]  287 #> [14770,]  287 #> [14771,]  287 #> [14772,]  286 #> [14773,]  287 #> [14774,]  287 #> [14775,]  287 #> [14776,]  287 #> [14777,]  287 #> [14778,]  287 #> [14779,]  287 #> [14780,]  287 #> [14781,]  287 #> [14782,]  287 #> [14783,]  287 #> [14784,]  287 #> [14785,]  287 #> [14786,]  287 #> [14787,]  287 #> [14788,]  287 #> [14789,]  287 #> [14790,]  287 #> [14791,]  287 #> [14792,]  287 #> [14793,]  287 #> [14794,]  287 #> [14795,]  287 #> [14796,]  286 #> [14797,]  287 #> [14798,]  287 #> [14799,]  287 #> [14800,]  287 #> [14801,]  288 #> [14802,]  288 #> [14803,]  288 #> [14804,]  288 #> [14805,]  289 #> [14806,]  288 #> [14807,]  288 #> [14808,]  288 #> [14809,]  288 #> [14810,]  288 #> [14811,]  288 #> [14812,]  288 #> [14813,]  288 #> [14814,]  288 #> [14815,]  288 #> [14816,]  288 #> [14817,]  288 #> [14818,]  289 #> [14819,]  288 #> [14820,]  288 #> [14821,]  288 #> [14822,]  288 #> [14823,]  288 #> [14824,]  288 #> [14825,]  288 #> [14826,]  288 #> [14827,]  288 #> [14828,]  288 #> [14829,]  288 #> [14830,]  288 #> [14831,]  288 #> [14832,]  288 #> [14833,]  288 #> [14834,]  288 #> [14835,]  288 #> [14836,]  288 #> [14837,]  288 #> [14838,]  288 #> [14839,]  288 #> [14840,]  288 #> [14841,]  288 #> [14842,]  288 #> [14843,]  288 #> [14844,]  288 #> [14845,]  288 #> [14846,]  288 #> [14847,]  288 #> [14848,]  288 #> [14849,]  288 #> [14850,]  288 #> [14851,]  288 #> [14852,]  288 #> [14853,]  288 #> [14854,]  288 #> [14855,]  288 #> [14856,]  288 #> [14857,]  288 #> [14858,]  288 #> [14859,]  288 #> [14860,]  288 #> [14861,]  288 #> [14862,]  288 #> [14863,]  288 #> [14864,]  288 #> [14865,]  288 #> [14866,]  288 #> [14867,]  288 #> [14868,]  288 #> [14869,]  288 #> [14870,]  288 #> [14871,]  289 #> [14872,]  288 #> [14873,]  288 #> [14874,]  288 #> [14875,]  289 #> [14876,]  288 #> [14877,]  288 #> [14878,]  288 #> [14879,]  288 #> [14880,]  288 #> [14881,]  288 #> [14882,]  288 #> [14883,]  288 #> [14884,]  288 #> [14885,]  288 #> [14886,]  288 #> [14887,]  288 #> [14888,]  288 #> [14889,]  288 #> [14890,]  288 #> [14891,]  288 #> [14892,]  288 #> [14893,]  288 #> [14894,]  288 #> [14895,]  288 #> [14896,]  288 #> [14897,]  288 #> [14898,]  288 #> [14899,]  288 #> [14900,]  289 #> [14901,]  290 #> [14902,]  291 #> [14903,]  291 #> [14904,]  290 #> [14905,]  291 #> [14906,]  291 #> [14907,]  291 #> [14908,]  290 #> [14909,]  290 #> [14910,]  291 #> [14911,]  290 #> [14912,]  291 #> [14913,]  290 #> [14914,]  291 #> [14915,]  291 #> [14916,]  291 #> [14917,]  290 #> [14918,]  291 #> [14919,]  291 #> [14920,]  291 #> [14921,]  291 #> [14922,]  290 #> [14923,]  291 #> [14924,]  291 #> [14925,]  291 #> [14926,]  291 #> [14927,]  290 #> [14928,]  291 #> [14929,]  291 #> [14930,]  290 #> [14931,]  291 #> [14932,]  291 #> [14933,]  291 #> [14934,]  291 #> [14935,]  290 #> [14936,]  291 #> [14937,]  291 #> [14938,]  291 #> [14939,]  291 #> [14940,]  291 #> [14941,]  291 #> [14942,]  291 #> [14943,]  290 #> [14944,]  290 #> [14945,]  291 #> [14946,]  290 #> [14947,]  291 #> [14948,]  291 #> [14949,]  290 #> [14950,]  291 #> [14951,]  291 #> [14952,]  290 #> [14953,]  291 #> [14954,]  290 #> [14955,]  290 #> [14956,]  291 #> [14957,]  291 #> [14958,]  290 #> [14959,]  291 #> [14960,]  291 #> [14961,]  291 #> [14962,]  291 #> [14963,]  291 #> [14964,]  291 #> [14965,]  291 #> [14966,]  290 #> [14967,]  291 #> [14968,]  291 #> [14969,]  290 #> [14970,]  291 #> [14971,]  291 #> [14972,]  291 #> [14973,]  291 #> [14974,]  291 #> [14975,]  291 #> [14976,]  291 #> [14977,]  291 #> [14978,]  291 #> [14979,]  290 #> [14980,]  290 #> [14981,]  290 #> [14982,]  290 #> [14983,]  290 #> [14984,]  291 #> [14985,]  291 #> [14986,]  291 #> [14987,]  290 #> [14988,]  290 #> [14989,]  290 #> [14990,]  290 #> [14991,]  291 #> [14992,]  290 #> [14993,]  291 #> [14994,]  291 #> [14995,]  290 #> [14996,]  290 #> [14997,]  291 #> [14998,]  291 #> [14999,]  290 #> [15000,]  291 #> [15001,]  292 #> [15002,]  292 #> [15003,]  292 #> [15004,]  292 #> [15005,]  292 #> [15006,]  292 #> [15007,]  292 #> [15008,]  292 #> [15009,]  292 #> [15010,]  292 #> [15011,]  292 #> [15012,]  292 #> [15013,]  292 #> [15014,]  292 #> [15015,]  292 #> [15016,]  292 #> [15017,]  292 #> [15018,]  292 #> [15019,]  292 #> [15020,]  292 #> [15021,]  292 #> [15022,]  292 #> [15023,]  292 #> [15024,]  292 #> [15025,]  292 #> [15026,]  292 #> [15027,]  292 #> [15028,]  292 #> [15029,]  292 #> [15030,]  292 #> [15031,]  292 #> [15032,]  292 #> [15033,]  292 #> [15034,]  292 #> [15035,]  292 #> [15036,]  292 #> [15037,]  292 #> [15038,]  292 #> [15039,]  292 #> [15040,]  292 #> [15041,]  292 #> [15042,]  292 #> [15043,]  292 #> [15044,]  292 #> [15045,]  292 #> [15046,]  292 #> [15047,]  292 #> [15048,]  292 #> [15049,]  292 #> [15050,]  292 #> [15051,]  292 #> [15052,]  292 #> [15053,]  292 #> [15054,]  292 #> [15055,]  292 #> [15056,]  292 #> [15057,]  292 #> [15058,]  292 #> [15059,]  292 #> [15060,]  292 #> [15061,]  292 #> [15062,]  292 #> [15063,]  292 #> [15064,]  292 #> [15065,]  292 #> [15066,]  292 #> [15067,]  292 #> [15068,]  292 #> [15069,]  292 #> [15070,]  292 #> [15071,]  292 #> [15072,]  292 #> [15073,]  292 #> [15074,]  292 #> [15075,]  292 #> [15076,]  292 #> [15077,]  292 #> [15078,]  292 #> [15079,]  292 #> [15080,]  292 #> [15081,]  292 #> [15082,]  292 #> [15083,]  292 #> [15084,]  292 #> [15085,]  292 #> [15086,]  292 #> [15087,]  292 #> [15088,]  292 #> [15089,]  292 #> [15090,]  292 #> [15091,]  292 #> [15092,]  292 #> [15093,]  292 #> [15094,]  292 #> [15095,]  292 #> [15096,]  292 #> [15097,]  292 #> [15098,]  292 #> [15099,]  292 #> [15100,]  292 #> [15101,]  293 #> [15102,]  293 #> [15103,]  293 #> [15104,]  293 #> [15105,]  293 #> [15106,]  294 #> [15107,]  293 #> [15108,]  294 #> [15109,]  294 #> [15110,]  293 #> [15111,]  293 #> [15112,]  294 #> [15113,]  293 #> [15114,]  293 #> [15115,]  294 #> [15116,]  293 #> [15117,]  293 #> [15118,]  293 #> [15119,]  293 #> [15120,]  294 #> [15121,]  293 #> [15122,]  293 #> [15123,]  293 #> [15124,]  293 #> [15125,]  293 #> [15126,]  294 #> [15127,]  293 #> [15128,]  293 #> [15129,]  293 #> [15130,]  293 #> [15131,]  293 #> [15132,]  293 #> [15133,]  294 #> [15134,]  293 #> [15135,]  293 #> [15136,]  293 #> [15137,]  293 #> [15138,]  293 #> [15139,]  293 #> [15140,]  293 #> [15141,]  293 #> [15142,]  293 #> [15143,]  294 #> [15144,]  293 #> [15145,]  294 #> [15146,]  294 #> [15147,]  293 #> [15148,]  293 #> [15149,]  293 #> [15150,]  294 #> [15151,]  294 #> [15152,]  293 #> [15153,]  294 #> [15154,]  293 #> [15155,]  293 #> [15156,]  294 #> [15157,]  294 #> [15158,]  294 #> [15159,]  293 #> [15160,]  293 #> [15161,]  294 #> [15162,]  293 #> [15163,]  293 #> [15164,]  294 #> [15165,]  294 #> [15166,]  294 #> [15167,]  293 #> [15168,]  294 #> [15169,]  293 #> [15170,]  293 #> [15171,]  293 #> [15172,]  294 #> [15173,]  293 #> [15174,]  293 #> [15175,]  293 #> [15176,]  294 #> [15177,]  293 #> [15178,]  294 #> [15179,]  293 #> [15180,]  293 #> [15181,]  294 #> [15182,]  293 #> [15183,]  293 #> [15184,]  293 #> [15185,]  293 #> [15186,]  293 #> [15187,]  293 #> [15188,]  293 #> [15189,]  293 #> [15190,]  293 #> [15191,]  293 #> [15192,]  294 #> [15193,]  293 #> [15194,]  294 #> [15195,]  293 #> [15196,]  294 #> [15197,]  294 #> [15198,]  293 #> [15199,]  293 #> [15200,]  293 #> [15201,]  296 #> [15202,]  296 #> [15203,]  295 #> [15204,]  296 #> [15205,]  296 #> [15206,]  296 #> [15207,]  295 #> [15208,]  296 #> [15209,]  296 #> [15210,]  296 #> [15211,]  296 #> [15212,]  296 #> [15213,]  295 #> [15214,]  296 #> [15215,]  296 #> [15216,]  295 #> [15217,]  296 #> [15218,]  296 #> [15219,]  295 #> [15220,]  296 #> [15221,]  295 #> [15222,]  296 #> [15223,]  295 #> [15224,]  295 #> [15225,]  296 #> [15226,]  296 #> [15227,]  296 #> [15228,]  296 #> [15229,]  296 #> [15230,]  295 #> [15231,]  295 #> [15232,]  296 #> [15233,]  296 #> [15234,]  295 #> [15235,]  295 #> [15236,]  295 #> [15237,]  295 #> [15238,]  296 #> [15239,]  295 #> [15240,]  295 #> [15241,]  296 #> [15242,]  296 #> [15243,]  296 #> [15244,]  295 #> [15245,]  296 #> [15246,]  296 #> [15247,]  295 #> [15248,]  296 #> [15249,]  295 #> [15250,]  296 #> [15251,]  296 #> [15252,]  296 #> [15253,]  296 #> [15254,]  295 #> [15255,]  296 #> [15256,]  296 #> [15257,]  296 #> [15258,]  296 #> [15259,]  296 #> [15260,]  296 #> [15261,]  296 #> [15262,]  295 #> [15263,]  296 #> [15264,]  296 #> [15265,]  296 #> [15266,]  296 #> [15267,]  296 #> [15268,]  296 #> [15269,]  296 #> [15270,]  295 #> [15271,]  296 #> [15272,]  296 #> [15273,]  296 #> [15274,]  296 #> [15275,]  296 #> [15276,]  296 #> [15277,]  295 #> [15278,]  296 #> [15279,]  295 #> [15280,]  295 #> [15281,]  296 #> [15282,]  296 #> [15283,]  295 #> [15284,]  296 #> [15285,]  296 #> [15286,]  296 #> [15287,]  296 #> [15288,]  296 #> [15289,]  296 #> [15290,]  296 #> [15291,]  296 #> [15292,]  296 #> [15293,]  295 #> [15294,]  296 #> [15295,]  295 #> [15296,]  296 #> [15297,]  296 #> [15298,]  295 #> [15299,]  296 #> [15300,]  295 #> [15301,]  297 #> [15302,]  297 #> [15303,]  297 #> [15304,]  298 #> [15305,]  297 #> [15306,]  298 #> [15307,]  297 #> [15308,]  297 #> [15309,]  298 #> [15310,]  298 #> [15311,]  298 #> [15312,]  298 #> [15313,]  297 #> [15314,]  298 #> [15315,]  298 #> [15316,]  297 #> [15317,]  297 #> [15318,]  298 #> [15319,]  298 #> [15320,]  297 #> [15321,]  298 #> [15322,]  297 #> [15323,]  297 #> [15324,]  297 #> [15325,]  297 #> [15326,]  298 #> [15327,]  298 #> [15328,]  297 #> [15329,]  297 #> [15330,]  298 #> [15331,]  298 #> [15332,]  298 #> [15333,]  298 #> [15334,]  297 #> [15335,]  297 #> [15336,]  298 #> [15337,]  297 #> [15338,]  298 #> [15339,]  297 #> [15340,]  297 #> [15341,]  298 #> [15342,]  298 #> [15343,]  297 #> [15344,]  297 #> [15345,]  297 #> [15346,]  297 #> [15347,]  297 #> [15348,]  298 #> [15349,]  297 #> [15350,]  297 #> [15351,]  297 #> [15352,]  298 #> [15353,]  297 #> [15354,]  297 #> [15355,]  297 #> [15356,]  297 #> [15357,]  297 #> [15358,]  298 #> [15359,]  297 #> [15360,]  298 #> [15361,]  298 #> [15362,]  298 #> [15363,]  297 #> [15364,]  298 #> [15365,]  297 #> [15366,]  297 #> [15367,]  298 #> [15368,]  298 #> [15369,]  298 #> [15370,]  297 #> [15371,]  297 #> [15372,]  297 #> [15373,]  298 #> [15374,]  298 #> [15375,]  298 #> [15376,]  297 #> [15377,]  297 #> [15378,]  297 #> [15379,]  297 #> [15380,]  297 #> [15381,]  297 #> [15382,]  298 #> [15383,]  297 #> [15384,]  297 #> [15385,]  298 #> [15386,]  297 #> [15387,]  297 #> [15388,]  297 #> [15389,]  297 #> [15390,]  297 #> [15391,]  297 #> [15392,]  298 #> [15393,]  298 #> [15394,]  297 #> [15395,]  297 #> [15396,]  298 #> [15397,]  298 #> [15398,]  297 #> [15399,]  298 #> [15400,]  297 #> [15401,]  300 #> [15402,]  299 #> [15403,]  300 #> [15404,]  300 #> [15405,]  300 #> [15406,]  299 #> [15407,]  300 #> [15408,]  300 #> [15409,]  300 #> [15410,]  300 #> [15411,]  299 #> [15412,]  299 #> [15413,]  300 #> [15414,]  300 #> [15415,]  299 #> [15416,]  300 #> [15417,]  299 #> [15418,]  299 #> [15419,]  299 #> [15420,]  300 #> [15421,]  299 #> [15422,]  300 #> [15423,]  299 #> [15424,]  300 #> [15425,]  300 #> [15426,]  299 #> [15427,]  300 #> [15428,]  300 #> [15429,]  299 #> [15430,]  299 #> [15431,]  299 #> [15432,]  299 #> [15433,]  300 #> [15434,]  299 #> [15435,]  299 #> [15436,]  300 #> [15437,]  299 #> [15438,]  299 #> [15439,]  300 #> [15440,]  299 #> [15441,]  300 #> [15442,]  299 #> [15443,]  299 #> [15444,]  299 #> [15445,]  300 #> [15446,]  299 #> [15447,]  299 #> [15448,]  299 #> [15449,]  300 #> [15450,]  300 #> [15451,]  299 #> [15452,]  300 #> [15453,]  300 #> [15454,]  300 #> [15455,]  300 #> [15456,]  299 #> [15457,]  300 #> [15458,]  300 #> [15459,]  300 #> [15460,]  299 #> [15461,]  299 #> [15462,]  299 #> [15463,]  299 #> [15464,]  299 #> [15465,]  299 #> [15466,]  299 #> [15467,]  300 #> [15468,]  299 #> [15469,]  299 #> [15470,]  299 #> [15471,]  300 #> [15472,]  300 #> [15473,]  300 #> [15474,]  300 #> [15475,]  299 #> [15476,]  300 #> [15477,]  300 #> [15478,]  299 #> [15479,]  299 #> [15480,]  300 #> [15481,]  299 #> [15482,]  299 #> [15483,]  299 #> [15484,]  300 #> [15485,]  300 #> [15486,]  300 #> [15487,]  300 #> [15488,]  300 #> [15489,]  299 #> [15490,]  300 #> [15491,]  300 #> [15492,]  299 #> [15493,]  299 #> [15494,]  299 #> [15495,]  299 #> [15496,]  299 #> [15497,]  299 #> [15498,]  299 #> [15499,]  299 #> [15500,]  299 #> [15501,]  301 #> [15502,]  301 #> [15503,]  301 #> [15504,]  302 #> [15505,]  301 #> [15506,]  301 #> [15507,]  302 #> [15508,]  301 #> [15509,]  301 #> [15510,]  302 #> [15511,]  301 #> [15512,]  301 #> [15513,]  301 #> [15514,]  301 #> [15515,]  302 #> [15516,]  302 #> [15517,]  301 #> [15518,]  302 #> [15519,]  301 #> [15520,]  301 #> [15521,]  302 #> [15522,]  301 #> [15523,]  302 #> [15524,]  301 #> [15525,]  302 #> [15526,]  301 #> [15527,]  302 #> [15528,]  302 #> [15529,]  301 #> [15530,]  301 #> [15531,]  301 #> [15532,]  301 #> [15533,]  301 #> [15534,]  301 #> [15535,]  301 #> [15536,]  301 #> [15537,]  301 #> [15538,]  301 #> [15539,]  302 #> [15540,]  301 #> [15541,]  301 #> [15542,]  301 #> [15543,]  302 #> [15544,]  301 #> [15545,]  302 #> [15546,]  301 #> [15547,]  302 #> [15548,]  301 #> [15549,]  301 #> [15550,]  301 #> [15551,]  301 #> [15552,]  301 #> [15553,]  302 #> [15554,]  301 #> [15555,]  301 #> [15556,]  301 #> [15557,]  301 #> [15558,]  301 #> [15559,]  301 #> [15560,]  301 #> [15561,]  302 #> [15562,]  301 #> [15563,]  301 #> [15564,]  302 #> [15565,]  301 #> [15566,]  301 #> [15567,]  301 #> [15568,]  301 #> [15569,]  301 #> [15570,]  301 #> [15571,]  302 #> [15572,]  302 #> [15573,]  302 #> [15574,]  302 #> [15575,]  302 #> [15576,]  302 #> [15577,]  302 #> [15578,]  301 #> [15579,]  301 #> [15580,]  301 #> [15581,]  301 #> [15582,]  301 #> [15583,]  301 #> [15584,]  302 #> [15585,]  301 #> [15586,]  301 #> [15587,]  301 #> [15588,]  302 #> [15589,]  301 #> [15590,]  301 #> [15591,]  301 #> [15592,]  301 #> [15593,]  301 #> [15594,]  302 #> [15595,]  302 #> [15596,]  301 #> [15597,]  301 #> [15598,]  301 #> [15599,]  301 #> [15600,]  302 #> [15601,]  303 #> [15602,]  303 #> [15603,]  303 #> [15604,]  304 #> [15605,]  303 #> [15606,]  303 #> [15607,]  304 #> [15608,]  303 #> [15609,]  303 #> [15610,]  304 #> [15611,]  303 #> [15612,]  303 #> [15613,]  303 #> [15614,]  303 #> [15615,]  304 #> [15616,]  304 #> [15617,]  304 #> [15618,]  304 #> [15619,]  303 #> [15620,]  303 #> [15621,]  304 #> [15622,]  303 #> [15623,]  304 #> [15624,]  303 #> [15625,]  304 #> [15626,]  303 #> [15627,]  304 #> [15628,]  304 #> [15629,]  303 #> [15630,]  303 #> [15631,]  303 #> [15632,]  303 #> [15633,]  303 #> [15634,]  303 #> [15635,]  303 #> [15636,]  303 #> [15637,]  303 #> [15638,]  303 #> [15639,]  304 #> [15640,]  303 #> [15641,]  303 #> [15642,]  303 #> [15643,]  304 #> [15644,]  303 #> [15645,]  304 #> [15646,]  304 #> [15647,]  304 #> [15648,]  303 #> [15649,]  303 #> [15650,]  303 #> [15651,]  303 #> [15652,]  303 #> [15653,]  304 #> [15654,]  303 #> [15655,]  303 #> [15656,]  304 #> [15657,]  303 #> [15658,]  303 #> [15659,]  303 #> [15660,]  303 #> [15661,]  304 #> [15662,]  303 #> [15663,]  303 #> [15664,]  304 #> [15665,]  303 #> [15666,]  303 #> [15667,]  303 #> [15668,]  303 #> [15669,]  303 #> [15670,]  303 #> [15671,]  304 #> [15672,]  304 #> [15673,]  304 #> [15674,]  304 #> [15675,]  304 #> [15676,]  304 #> [15677,]  304 #> [15678,]  303 #> [15679,]  303 #> [15680,]  303 #> [15681,]  303 #> [15682,]  304 #> [15683,]  303 #> [15684,]  304 #> [15685,]  303 #> [15686,]  303 #> [15687,]  303 #> [15688,]  304 #> [15689,]  303 #> [15690,]  303 #> [15691,]  303 #> [15692,]  303 #> [15693,]  303 #> [15694,]  304 #> [15695,]  304 #> [15696,]  303 #> [15697,]  303 #> [15698,]  303 #> [15699,]  303 #> [15700,]  304 #> [15701,]  305 #> [15702,]  305 #> [15703,]  305 #> [15704,]  305 #> [15705,]  305 #> [15706,]  305 #> [15707,]  305 #> [15708,]  305 #> [15709,]  306 #> [15710,]  305 #> [15711,]  305 #> [15712,]  305 #> [15713,]  306 #> [15714,]  305 #> [15715,]  305 #> [15716,]  305 #> [15717,]  306 #> [15718,]  306 #> [15719,]  305 #> [15720,]  305 #> [15721,]  305 #> [15722,]  305 #> [15723,]  305 #> [15724,]  305 #> [15725,]  305 #> [15726,]  305 #> [15727,]  305 #> [15728,]  305 #> [15729,]  305 #> [15730,]  305 #> [15731,]  305 #> [15732,]  305 #> [15733,]  305 #> [15734,]  305 #> [15735,]  305 #> [15736,]  305 #> [15737,]  305 #> [15738,]  305 #> [15739,]  305 #> [15740,]  305 #> [15741,]  305 #> [15742,]  306 #> [15743,]  305 #> [15744,]  305 #> [15745,]  305 #> [15746,]  305 #> [15747,]  305 #> [15748,]  305 #> [15749,]  305 #> [15750,]  305 #> [15751,]  306 #> [15752,]  305 #> [15753,]  306 #> [15754,]  305 #> [15755,]  305 #> [15756,]  305 #> [15757,]  305 #> [15758,]  305 #> [15759,]  305 #> [15760,]  305 #> [15761,]  305 #> [15762,]  305 #> [15763,]  305 #> [15764,]  305 #> [15765,]  306 #> [15766,]  305 #> [15767,]  305 #> [15768,]  305 #> [15769,]  305 #> [15770,]  305 #> [15771,]  305 #> [15772,]  305 #> [15773,]  305 #> [15774,]  305 #> [15775,]  305 #> [15776,]  305 #> [15777,]  305 #> [15778,]  305 #> [15779,]  306 #> [15780,]  305 #> [15781,]  305 #> [15782,]  306 #> [15783,]  305 #> [15784,]  306 #> [15785,]  305 #> [15786,]  305 #> [15787,]  305 #> [15788,]  305 #> [15789,]  305 #> [15790,]  305 #> [15791,]  306 #> [15792,]  305 #> [15793,]  306 #> [15794,]  306 #> [15795,]  305 #> [15796,]  305 #> [15797,]  305 #> [15798,]  305 #> [15799,]  305 #> [15800,]  305 #> [15801,]  308 #> [15802,]  308 #> [15803,]  307 #> [15804,]  308 #> [15805,]  308 #> [15806,]  308 #> [15807,]  308 #> [15808,]  308 #> [15809,]  308 #> [15810,]  307 #> [15811,]  307 #> [15812,]  308 #> [15813,]  308 #> [15814,]  307 #> [15815,]  308 #> [15816,]  308 #> [15817,]  308 #> [15818,]  308 #> [15819,]  308 #> [15820,]  308 #> [15821,]  307 #> [15822,]  308 #> [15823,]  308 #> [15824,]  308 #> [15825,]  308 #> [15826,]  308 #> [15827,]  308 #> [15828,]  308 #> [15829,]  308 #> [15830,]  308 #> [15831,]  307 #> [15832,]  307 #> [15833,]  308 #> [15834,]  307 #> [15835,]  308 #> [15836,]  308 #> [15837,]  308 #> [15838,]  308 #> [15839,]  308 #> [15840,]  307 #> [15841,]  308 #> [15842,]  308 #> [15843,]  308 #> [15844,]  308 #> [15845,]  308 #> [15846,]  308 #> [15847,]  308 #> [15848,]  307 #> [15849,]  308 #> [15850,]  308 #> [15851,]  308 #> [15852,]  308 #> [15853,]  308 #> [15854,]  308 #> [15855,]  308 #> [15856,]  308 #> [15857,]  308 #> [15858,]  308 #> [15859,]  308 #> [15860,]  308 #> [15861,]  308 #> [15862,]  308 #> [15863,]  308 #> [15864,]  308 #> [15865,]  308 #> [15866,]  308 #> [15867,]  308 #> [15868,]  308 #> [15869,]  308 #> [15870,]  307 #> [15871,]  308 #> [15872,]  308 #> [15873,]  308 #> [15874,]  307 #> [15875,]  308 #> [15876,]  308 #> [15877,]  308 #> [15878,]  308 #> [15879,]  308 #> [15880,]  308 #> [15881,]  308 #> [15882,]  307 #> [15883,]  308 #> [15884,]  308 #> [15885,]  308 #> [15886,]  308 #> [15887,]  308 #> [15888,]  308 #> [15889,]  308 #> [15890,]  308 #> [15891,]  308 #> [15892,]  308 #> [15893,]  308 #> [15894,]  308 #> [15895,]  308 #> [15896,]  308 #> [15897,]  308 #> [15898,]  307 #> [15899,]  308 #> [15900,]  308 #> [15901,]  309 #> [15902,]  310 #> [15903,]  309 #> [15904,]  309 #> [15905,]  309 #> [15906,]  309 #> [15907,]  309 #> [15908,]  309 #> [15909,]  310 #> [15910,]  310 #> [15911,]  309 #> [15912,]  310 #> [15913,]  310 #> [15914,]  309 #> [15915,]  309 #> [15916,]  309 #> [15917,]  310 #> [15918,]  309 #> [15919,]  309 #> [15920,]  309 #> [15921,]  310 #> [15922,]  309 #> [15923,]  309 #> [15924,]  310 #> [15925,]  309 #> [15926,]  309 #> [15927,]  309 #> [15928,]  309 #> [15929,]  310 #> [15930,]  309 #> [15931,]  309 #> [15932,]  310 #> [15933,]  310 #> [15934,]  309 #> [15935,]  309 #> [15936,]  309 #> [15937,]  309 #> [15938,]  309 #> [15939,]  309 #> [15940,]  310 #> [15941,]  309 #> [15942,]  309 #> [15943,]  309 #> [15944,]  309 #> [15945,]  309 #> [15946,]  309 #> [15947,]  309 #> [15948,]  309 #> [15949,]  309 #> [15950,]  309 #> [15951,]  309 #> [15952,]  309 #> [15953,]  310 #> [15954,]  309 #> [15955,]  309 #> [15956,]  309 #> [15957,]  309 #> [15958,]  309 #> [15959,]  309 #> [15960,]  310 #> [15961,]  309 #> [15962,]  309 #> [15963,]  310 #> [15964,]  309 #> [15965,]  309 #> [15966,]  309 #> [15967,]  309 #> [15968,]  309 #> [15969,]  309 #> [15970,]  310 #> [15971,]  309 #> [15972,]  309 #> [15973,]  309 #> [15974,]  309 #> [15975,]  310 #> [15976,]  309 #> [15977,]  309 #> [15978,]  309 #> [15979,]  309 #> [15980,]  310 #> [15981,]  310 #> [15982,]  309 #> [15983,]  309 #> [15984,]  309 #> [15985,]  309 #> [15986,]  310 #> [15987,]  309 #> [15988,]  309 #> [15989,]  309 #> [15990,]  309 #> [15991,]  309 #> [15992,]  309 #> [15993,]  309 #> [15994,]  309 #> [15995,]  309 #> [15996,]  309 #> [15997,]  309 #> [15998,]  309 #> [15999,]  309 #> [16000,]  309 #> [16001,]  311 #> [16002,]  311 #> [16003,]  311 #> [16004,]  312 #> [16005,]  311 #> [16006,]  311 #> [16007,]  311 #> [16008,]  311 #> [16009,]  311 #> [16010,]  311 #> [16011,]  312 #> [16012,]  312 #> [16013,]  311 #> [16014,]  312 #> [16015,]  312 #> [16016,]  311 #> [16017,]  311 #> [16018,]  311 #> [16019,]  312 #> [16020,]  311 #> [16021,]  312 #> [16022,]  311 #> [16023,]  311 #> [16024,]  311 #> [16025,]  311 #> [16026,]  311 #> [16027,]  312 #> [16028,]  311 #> [16029,]  311 #> [16030,]  311 #> [16031,]  311 #> [16032,]  311 #> [16033,]  311 #> [16034,]  311 #> [16035,]  311 #> [16036,]  311 #> [16037,]  311 #> [16038,]  312 #> [16039,]  311 #> [16040,]  311 #> [16041,]  312 #> [16042,]  312 #> [16043,]  311 #> [16044,]  311 #> [16045,]  311 #> [16046,]  311 #> [16047,]  311 #> [16048,]  312 #> [16049,]  311 #> [16050,]  311 #> [16051,]  311 #> [16052,]  311 #> [16053,]  311 #> [16054,]  311 #> [16055,]  311 #> [16056,]  311 #> [16057,]  311 #> [16058,]  311 #> [16059,]  311 #> [16060,]  311 #> [16061,]  312 #> [16062,]  311 #> [16063,]  311 #> [16064,]  311 #> [16065,]  311 #> [16066,]  311 #> [16067,]  311 #> [16068,]  312 #> [16069,]  312 #> [16070,]  311 #> [16071,]  311 #> [16072,]  311 #> [16073,]  311 #> [16074,]  312 #> [16075,]  312 #> [16076,]  311 #> [16077,]  311 #> [16078,]  311 #> [16079,]  311 #> [16080,]  311 #> [16081,]  311 #> [16082,]  312 #> [16083,]  311 #> [16084,]  311 #> [16085,]  311 #> [16086,]  311 #> [16087,]  311 #> [16088,]  311 #> [16089,]  311 #> [16090,]  311 #> [16091,]  311 #> [16092,]  312 #> [16093,]  312 #> [16094,]  311 #> [16095,]  311 #> [16096,]  312 #> [16097,]  312 #> [16098,]  311 #> [16099,]  311 #> [16100,]  311 #> [16101,]  314 #> [16102,]  314 #> [16103,]  313 #> [16104,]  314 #> [16105,]  314 #> [16106,]  314 #> [16107,]  313 #> [16108,]  313 #> [16109,]  314 #> [16110,]  314 #> [16111,]  314 #> [16112,]  314 #> [16113,]  313 #> [16114,]  314 #> [16115,]  314 #> [16116,]  313 #> [16117,]  314 #> [16118,]  314 #> [16119,]  314 #> [16120,]  313 #> [16121,]  314 #> [16122,]  313 #> [16123,]  314 #> [16124,]  313 #> [16125,]  313 #> [16126,]  314 #> [16127,]  314 #> [16128,]  314 #> [16129,]  314 #> [16130,]  314 #> [16131,]  314 #> [16132,]  314 #> [16133,]  314 #> [16134,]  314 #> [16135,]  314 #> [16136,]  314 #> [16137,]  314 #> [16138,]  314 #> [16139,]  313 #> [16140,]  313 #> [16141,]  314 #> [16142,]  314 #> [16143,]  314 #> [16144,]  313 #> [16145,]  314 #> [16146,]  313 #> [16147,]  314 #> [16148,]  314 #> [16149,]  313 #> [16150,]  313 #> [16151,]  314 #> [16152,]  314 #> [16153,]  313 #> [16154,]  314 #> [16155,]  313 #> [16156,]  313 #> [16157,]  314 #> [16158,]  314 #> [16159,]  313 #> [16160,]  314 #> [16161,]  314 #> [16162,]  314 #> [16163,]  313 #> [16164,]  314 #> [16165,]  313 #> [16166,]  313 #> [16167,]  314 #> [16168,]  314 #> [16169,]  314 #> [16170,]  313 #> [16171,]  314 #> [16172,]  313 #> [16173,]  314 #> [16174,]  314 #> [16175,]  314 #> [16176,]  314 #> [16177,]  314 #> [16178,]  314 #> [16179,]  314 #> [16180,]  314 #> [16181,]  314 #> [16182,]  314 #> [16183,]  314 #> [16184,]  313 #> [16185,]  314 #> [16186,]  313 #> [16187,]  314 #> [16188,]  314 #> [16189,]  313 #> [16190,]  313 #> [16191,]  314 #> [16192,]  314 #> [16193,]  314 #> [16194,]  314 #> [16195,]  314 #> [16196,]  314 #> [16197,]  314 #> [16198,]  313 #> [16199,]  314 #> [16200,]  313 #> [16201,]  316 #> [16202,]  315 #> [16203,]  315 #> [16204,]  315 #> [16205,]  316 #> [16206,]  315 #> [16207,]  315 #> [16208,]  315 #> [16209,]  315 #> [16210,]  316 #> [16211,]  316 #> [16212,]  316 #> [16213,]  315 #> [16214,]  316 #> [16215,]  316 #> [16216,]  315 #> [16217,]  316 #> [16218,]  316 #> [16219,]  315 #> [16220,]  315 #> [16221,]  315 #> [16222,]  316 #> [16223,]  315 #> [16224,]  315 #> [16225,]  315 #> [16226,]  316 #> [16227,]  316 #> [16228,]  315 #> [16229,]  315 #> [16230,]  315 #> [16231,]  316 #> [16232,]  316 #> [16233,]  315 #> [16234,]  315 #> [16235,]  315 #> [16236,]  315 #> [16237,]  315 #> [16238,]  316 #> [16239,]  316 #> [16240,]  315 #> [16241,]  315 #> [16242,]  315 #> [16243,]  316 #> [16244,]  315 #> [16245,]  315 #> [16246,]  315 #> [16247,]  316 #> [16248,]  315 #> [16249,]  315 #> [16250,]  315 #> [16251,]  315 #> [16252,]  316 #> [16253,]  315 #> [16254,]  315 #> [16255,]  315 #> [16256,]  315 #> [16257,]  315 #> [16258,]  316 #> [16259,]  316 #> [16260,]  315 #> [16261,]  316 #> [16262,]  315 #> [16263,]  315 #> [16264,]  315 #> [16265,]  315 #> [16266,]  316 #> [16267,]  315 #> [16268,]  316 #> [16269,]  315 #> [16270,]  316 #> [16271,]  316 #> [16272,]  315 #> [16273,]  315 #> [16274,]  315 #> [16275,]  316 #> [16276,]  315 #> [16277,]  316 #> [16278,]  315 #> [16279,]  316 #> [16280,]  315 #> [16281,]  315 #> [16282,]  315 #> [16283,]  315 #> [16284,]  315 #> [16285,]  315 #> [16286,]  315 #> [16287,]  316 #> [16288,]  315 #> [16289,]  315 #> [16290,]  316 #> [16291,]  316 #> [16292,]  316 #> [16293,]  315 #> [16294,]  315 #> [16295,]  316 #> [16296,]  316 #> [16297,]  315 #> [16298,]  315 #> [16299,]  315 #> [16300,]  316 #> [16301,]  317 #> [16302,]  318 #> [16303,]  318 #> [16304,]  317 #> [16305,]  317 #> [16306,]  318 #> [16307,]  318 #> [16308,]  317 #> [16309,]  317 #> [16310,]  318 #> [16311,]  317 #> [16312,]  318 #> [16313,]  317 #> [16314,]  317 #> [16315,]  317 #> [16316,]  317 #> [16317,]  317 #> [16318,]  318 #> [16319,]  318 #> [16320,]  318 #> [16321,]  317 #> [16322,]  317 #> [16323,]  318 #> [16324,]  317 #> [16325,]  318 #> [16326,]  317 #> [16327,]  317 #> [16328,]  318 #> [16329,]  318 #> [16330,]  317 #> [16331,]  318 #> [16332,]  318 #> [16333,]  318 #> [16334,]  318 #> [16335,]  317 #> [16336,]  317 #> [16337,]  317 #> [16338,]  317 #> [16339,]  318 #> [16340,]  318 #> [16341,]  317 #> [16342,]  318 #> [16343,]  317 #> [16344,]  317 #> [16345,]  317 #> [16346,]  317 #> [16347,]  318 #> [16348,]  318 #> [16349,]  317 #> [16350,]  318 #> [16351,]  317 #> [16352,]  317 #> [16353,]  318 #> [16354,]  317 #> [16355,]  317 #> [16356,]  318 #> [16357,]  318 #> [16358,]  317 #> [16359,]  317 #> [16360,]  318 #> [16361,]  318 #> [16362,]  317 #> [16363,]  318 #> [16364,]  318 #> [16365,]  318 #> [16366,]  317 #> [16367,]  317 #> [16368,]  317 #> [16369,]  317 #> [16370,]  318 #> [16371,]  318 #> [16372,]  318 #> [16373,]  318 #> [16374,]  317 #> [16375,]  318 #> [16376,]  318 #> [16377,]  318 #> [16378,]  318 #> [16379,]  317 #> [16380,]  317 #> [16381,]  317 #> [16382,]  317 #> [16383,]  317 #> [16384,]  318 #> [16385,]  317 #> [16386,]  318 #> [16387,]  317 #> [16388,]  317 #> [16389,]  317 #> [16390,]  317 #> [16391,]  317 #> [16392,]  317 #> [16393,]  318 #> [16394,]  318 #> [16395,]  317 #> [16396,]  317 #> [16397,]  318 #> [16398,]  318 #> [16399,]  317 #> [16400,]  318 #> [16401,]  320 #> [16402,]  320 #> [16403,]  320 #> [16404,]  320 #> [16405,]  320 #> [16406,]  320 #> [16407,]  319 #> [16408,]  320 #> [16409,]  320 #> [16410,]  320 #> [16411,]  320 #> [16412,]  320 #> [16413,]  320 #> [16414,]  320 #> [16415,]  320 #> [16416,]  320 #> [16417,]  320 #> [16418,]  320 #> [16419,]  320 #> [16420,]  320 #> [16421,]  319 #> [16422,]  320 #> [16423,]  319 #> [16424,]  320 #> [16425,]  320 #> [16426,]  320 #> [16427,]  320 #> [16428,]  320 #> [16429,]  320 #> [16430,]  319 #> [16431,]  320 #> [16432,]  320 #> [16433,]  320 #> [16434,]  320 #> [16435,]  320 #> [16436,]  320 #> [16437,]  320 #> [16438,]  320 #> [16439,]  319 #> [16440,]  320 #> [16441,]  320 #> [16442,]  320 #> [16443,]  320 #> [16444,]  320 #> [16445,]  320 #> [16446,]  320 #> [16447,]  320 #> [16448,]  320 #> [16449,]  319 #> [16450,]  320 #> [16451,]  320 #> [16452,]  320 #> [16453,]  320 #> [16454,]  319 #> [16455,]  320 #> [16456,]  320 #> [16457,]  320 #> [16458,]  320 #> [16459,]  320 #> [16460,]  320 #> [16461,]  320 #> [16462,]  319 #> [16463,]  320 #> [16464,]  320 #> [16465,]  320 #> [16466,]  320 #> [16467,]  320 #> [16468,]  320 #> [16469,]  320 #> [16470,]  319 #> [16471,]  320 #> [16472,]  320 #> [16473,]  320 #> [16474,]  320 #> [16475,]  320 #> [16476,]  320 #> [16477,]  320 #> [16478,]  320 #> [16479,]  320 #> [16480,]  319 #> [16481,]  320 #> [16482,]  320 #> [16483,]  320 #> [16484,]  320 #> [16485,]  320 #> [16486,]  320 #> [16487,]  320 #> [16488,]  320 #> [16489,]  320 #> [16490,]  320 #> [16491,]  320 #> [16492,]  320 #> [16493,]  320 #> [16494,]  320 #> [16495,]  319 #> [16496,]  320 #> [16497,]  320 #> [16498,]  319 #> [16499,]  320 #> [16500,]  320 #> [16501,]  322 #> [16502,]  322 #> [16503,]  321 #> [16504,]  321 #> [16505,]  321 #> [16506,]  322 #> [16507,]  321 #> [16508,]  321 #> [16509,]  321 #> [16510,]  321 #> [16511,]  321 #> [16512,]  321 #> [16513,]  322 #> [16514,]  322 #> [16515,]  322 #> [16516,]  322 #> [16517,]  322 #> [16518,]  321 #> [16519,]  321 #> [16520,]  321 #> [16521,]  322 #> [16522,]  321 #> [16523,]  321 #> [16524,]  321 #> [16525,]  321 #> [16526,]  322 #> [16527,]  322 #> [16528,]  321 #> [16529,]  322 #> [16530,]  321 #> [16531,]  321 #> [16532,]  321 #> [16533,]  322 #> [16534,]  321 #> [16535,]  322 #> [16536,]  321 #> [16537,]  322 #> [16538,]  321 #> [16539,]  321 #> [16540,]  321 #> [16541,]  322 #> [16542,]  321 #> [16543,]  321 #> [16544,]  322 #> [16545,]  321 #> [16546,]  321 #> [16547,]  321 #> [16548,]  321 #> [16549,]  321 #> [16550,]  322 #> [16551,]  321 #> [16552,]  322 #> [16553,]  321 #> [16554,]  321 #> [16555,]  321 #> [16556,]  321 #> [16557,]  321 #> [16558,]  322 #> [16559,]  322 #> [16560,]  321 #> [16561,]  322 #> [16562,]  321 #> [16563,]  321 #> [16564,]  321 #> [16565,]  321 #> [16566,]  321 #> [16567,]  321 #> [16568,]  322 #> [16569,]  321 #> [16570,]  322 #> [16571,]  322 #> [16572,]  321 #> [16573,]  322 #> [16574,]  321 #> [16575,]  321 #> [16576,]  322 #> [16577,]  322 #> [16578,]  321 #> [16579,]  322 #> [16580,]  321 #> [16581,]  322 #> [16582,]  321 #> [16583,]  322 #> [16584,]  321 #> [16585,]  321 #> [16586,]  322 #> [16587,]  321 #> [16588,]  321 #> [16589,]  321 #> [16590,]  322 #> [16591,]  321 #> [16592,]  321 #> [16593,]  322 #> [16594,]  322 #> [16595,]  321 #> [16596,]  322 #> [16597,]  321 #> [16598,]  321 #> [16599,]  322 #> [16600,]  322 #> [16601,]  324 #> [16602,]  324 #> [16603,]  323 #> [16604,]  324 #> [16605,]  324 #> [16606,]  324 #> [16607,]  323 #> [16608,]  323 #> [16609,]  324 #> [16610,]  324 #> [16611,]  324 #> [16612,]  324 #> [16613,]  323 #> [16614,]  324 #> [16615,]  324 #> [16616,]  323 #> [16617,]  323 #> [16618,]  324 #> [16619,]  324 #> [16620,]  323 #> [16621,]  324 #> [16622,]  323 #> [16623,]  324 #> [16624,]  323 #> [16625,]  323 #> [16626,]  324 #> [16627,]  324 #> [16628,]  324 #> [16629,]  324 #> [16630,]  324 #> [16631,]  324 #> [16632,]  324 #> [16633,]  324 #> [16634,]  324 #> [16635,]  324 #> [16636,]  324 #> [16637,]  324 #> [16638,]  324 #> [16639,]  323 #> [16640,]  323 #> [16641,]  324 #> [16642,]  324 #> [16643,]  323 #> [16644,]  323 #> [16645,]  323 #> [16646,]  323 #> [16647,]  323 #> [16648,]  324 #> [16649,]  323 #> [16650,]  323 #> [16651,]  323 #> [16652,]  324 #> [16653,]  323 #> [16654,]  323 #> [16655,]  323 #> [16656,]  323 #> [16657,]  324 #> [16658,]  324 #> [16659,]  323 #> [16660,]  324 #> [16661,]  324 #> [16662,]  324 #> [16663,]  323 #> [16664,]  324 #> [16665,]  323 #> [16666,]  323 #> [16667,]  324 #> [16668,]  324 #> [16669,]  324 #> [16670,]  323 #> [16671,]  324 #> [16672,]  323 #> [16673,]  324 #> [16674,]  324 #> [16675,]  324 #> [16676,]  323 #> [16677,]  323 #> [16678,]  323 #> [16679,]  323 #> [16680,]  324 #> [16681,]  324 #> [16682,]  324 #> [16683,]  323 #> [16684,]  323 #> [16685,]  324 #> [16686,]  323 #> [16687,]  324 #> [16688,]  324 #> [16689,]  323 #> [16690,]  323 #> [16691,]  324 #> [16692,]  324 #> [16693,]  324 #> [16694,]  323 #> [16695,]  324 #> [16696,]  324 #> [16697,]  324 #> [16698,]  323 #> [16699,]  324 #> [16700,]  323 #> [16701,]  325 #> [16702,]  325 #> [16703,]  325 #> [16704,]  325 #> [16705,]  325 #> [16706,]  325 #> [16707,]  325 #> [16708,]  325 #> [16709,]  325 #> [16710,]  325 #> [16711,]  325 #> [16712,]  325 #> [16713,]  325 #> [16714,]  325 #> [16715,]  325 #> [16716,]  325 #> [16717,]  325 #> [16718,]  325 #> [16719,]  325 #> [16720,]  325 #> [16721,]  325 #> [16722,]  325 #> [16723,]  325 #> [16724,]  325 #> [16725,]  325 #> [16726,]  325 #> [16727,]  325 #> [16728,]  325 #> [16729,]  325 #> [16730,]  325 #> [16731,]  325 #> [16732,]  325 #> [16733,]  325 #> [16734,]  325 #> [16735,]  325 #> [16736,]  325 #> [16737,]  325 #> [16738,]  325 #> [16739,]  325 #> [16740,]  325 #> [16741,]  325 #> [16742,]  325 #> [16743,]  325 #> [16744,]  325 #> [16745,]  325 #> [16746,]  325 #> [16747,]  325 #> [16748,]  325 #> [16749,]  325 #> [16750,]  325 #> [16751,]  325 #> [16752,]  325 #> [16753,]  325 #> [16754,]  325 #> [16755,]  325 #> [16756,]  325 #> [16757,]  325 #> [16758,]  325 #> [16759,]  325 #> [16760,]  325 #> [16761,]  325 #> [16762,]  325 #> [16763,]  325 #> [16764,]  325 #> [16765,]  325 #> [16766,]  325 #> [16767,]  325 #> [16768,]  325 #> [16769,]  325 #> [16770,]  325 #> [16771,]  325 #> [16772,]  325 #> [16773,]  325 #> [16774,]  325 #> [16775,]  325 #> [16776,]  325 #> [16777,]  325 #> [16778,]  325 #> [16779,]  325 #> [16780,]  325 #> [16781,]  325 #> [16782,]  325 #> [16783,]  325 #> [16784,]  325 #> [16785,]  325 #> [16786,]  325 #> [16787,]  325 #> [16788,]  325 #> [16789,]  325 #> [16790,]  325 #> [16791,]  325 #> [16792,]  325 #> [16793,]  325 #> [16794,]  325 #> [16795,]  325 #> [16796,]  325 #> [16797,]  325 #> [16798,]  325 #> [16799,]  325 #> [16800,]  325 #> [16801,]  327 #> [16802,]  327 #> [16803,]  326 #> [16804,]  326 #> [16805,]  327 #> [16806,]  327 #> [16807,]  326 #> [16808,]  326 #> [16809,]  327 #> [16810,]  327 #> [16811,]  327 #> [16812,]  326 #> [16813,]  327 #> [16814,]  327 #> [16815,]  327 #> [16816,]  327 #> [16817,]  327 #> [16818,]  327 #> [16819,]  327 #> [16820,]  327 #> [16821,]  327 #> [16822,]  327 #> [16823,]  326 #> [16824,]  327 #> [16825,]  326 #> [16826,]  327 #> [16827,]  327 #> [16828,]  327 #> [16829,]  327 #> [16830,]  327 #> [16831,]  326 #> [16832,]  326 #> [16833,]  327 #> [16834,]  327 #> [16835,]  327 #> [16836,]  327 #> [16837,]  326 #> [16838,]  327 #> [16839,]  327 #> [16840,]  326 #> [16841,]  327 #> [16842,]  327 #> [16843,]  327 #> [16844,]  327 #> [16845,]  327 #> [16846,]  326 #> [16847,]  326 #> [16848,]  327 #> [16849,]  327 #> [16850,]  327 #> [16851,]  327 #> [16852,]  326 #> [16853,]  327 #> [16854,]  327 #> [16855,]  326 #> [16856,]  327 #> [16857,]  326 #> [16858,]  327 #> [16859,]  326 #> [16860,]  326 #> [16861,]  327 #> [16862,]  327 #> [16863,]  327 #> [16864,]  327 #> [16865,]  327 #> [16866,]  327 #> [16867,]  327 #> [16868,]  326 #> [16869,]  327 #> [16870,]  327 #> [16871,]  327 #> [16872,]  326 #> [16873,]  327 #> [16874,]  326 #> [16875,]  327 #> [16876,]  326 #> [16877,]  327 #> [16878,]  326 #> [16879,]  327 #> [16880,]  326 #> [16881,]  327 #> [16882,]  327 #> [16883,]  327 #> [16884,]  327 #> [16885,]  327 #> [16886,]  326 #> [16887,]  327 #> [16888,]  327 #> [16889,]  327 #> [16890,]  327 #> [16891,]  327 #> [16892,]  326 #> [16893,]  327 #> [16894,]  327 #> [16895,]  327 #> [16896,]  326 #> [16897,]  326 #> [16898,]  326 #> [16899,]  327 #> [16900,]  327 #> [16901,]  329 #> [16902,]  329 #> [16903,]  328 #> [16904,]  329 #> [16905,]  328 #> [16906,]  328 #> [16907,]  329 #> [16908,]  329 #> [16909,]  329 #> [16910,]  329 #> [16911,]  328 #> [16912,]  328 #> [16913,]  329 #> [16914,]  328 #> [16915,]  329 #> [16916,]  329 #> [16917,]  329 #> [16918,]  329 #> [16919,]  328 #> [16920,]  328 #> [16921,]  329 #> [16922,]  328 #> [16923,]  329 #> [16924,]  328 #> [16925,]  329 #> [16926,]  328 #> [16927,]  329 #> [16928,]  329 #> [16929,]  328 #> [16930,]  328 #> [16931,]  329 #> [16932,]  328 #> [16933,]  328 #> [16934,]  328 #> [16935,]  328 #> [16936,]  328 #> [16937,]  329 #> [16938,]  329 #> [16939,]  329 #> [16940,]  328 #> [16941,]  328 #> [16942,]  328 #> [16943,]  329 #> [16944,]  329 #> [16945,]  329 #> [16946,]  329 #> [16947,]  329 #> [16948,]  328 #> [16949,]  328 #> [16950,]  328 #> [16951,]  328 #> [16952,]  328 #> [16953,]  329 #> [16954,]  328 #> [16955,]  328 #> [16956,]  329 #> [16957,]  328 #> [16958,]  328 #> [16959,]  328 #> [16960,]  328 #> [16961,]  329 #> [16962,]  328 #> [16963,]  328 #> [16964,]  329 #> [16965,]  328 #> [16966,]  328 #> [16967,]  328 #> [16968,]  328 #> [16969,]  328 #> [16970,]  329 #> [16971,]  329 #> [16972,]  329 #> [16973,]  329 #> [16974,]  329 #> [16975,]  329 #> [16976,]  329 #> [16977,]  329 #> [16978,]  328 #> [16979,]  329 #> [16980,]  328 #> [16981,]  328 #> [16982,]  329 #> [16983,]  328 #> [16984,]  329 #> [16985,]  328 #> [16986,]  329 #> [16987,]  329 #> [16988,]  329 #> [16989,]  328 #> [16990,]  329 #> [16991,]  328 #> [16992,]  328 #> [16993,]  328 #> [16994,]  329 #> [16995,]  329 #> [16996,]  329 #> [16997,]  328 #> [16998,]  328 #> [16999,]  328 #> [17000,]  329 #> [17001,]  331 #> [17002,]  330 #> [17003,]  330 #> [17004,]  330 #> [17005,]  331 #> [17006,]  330 #> [17007,]  330 #> [17008,]  330 #> [17009,]  331 #> [17010,]  330 #> [17011,]  331 #> [17012,]  330 #> [17013,]  331 #> [17014,]  330 #> [17015,]  330 #> [17016,]  330 #> [17017,]  331 #> [17018,]  331 #> [17019,]  331 #> [17020,]  331 #> [17021,]  331 #> [17022,]  331 #> [17023,]  330 #> [17024,]  331 #> [17025,]  330 #> [17026,]  330 #> [17027,]  331 #> [17028,]  331 #> [17029,]  331 #> [17030,]  330 #> [17031,]  330 #> [17032,]  330 #> [17033,]  331 #> [17034,]  330 #> [17035,]  330 #> [17036,]  331 #> [17037,]  330 #> [17038,]  331 #> [17039,]  331 #> [17040,]  330 #> [17041,]  331 #> [17042,]  331 #> [17043,]  330 #> [17044,]  330 #> [17045,]  330 #> [17046,]  330 #> [17047,]  330 #> [17048,]  330 #> [17049,]  330 #> [17050,]  331 #> [17051,]  331 #> [17052,]  330 #> [17053,]  331 #> [17054,]  331 #> [17055,]  330 #> [17056,]  331 #> [17057,]  330 #> [17058,]  331 #> [17059,]  330 #> [17060,]  330 #> [17061,]  331 #> [17062,]  331 #> [17063,]  330 #> [17064,]  331 #> [17065,]  331 #> [17066,]  331 #> [17067,]  330 #> [17068,]  330 #> [17069,]  330 #> [17070,]  331 #> [17071,]  330 #> [17072,]  330 #> [17073,]  331 #> [17074,]  330 #> [17075,]  330 #> [17076,]  330 #> [17077,]  331 #> [17078,]  330 #> [17079,]  331 #> [17080,]  330 #> [17081,]  331 #> [17082,]  331 #> [17083,]  331 #> [17084,]  331 #> [17085,]  331 #> [17086,]  330 #> [17087,]  331 #> [17088,]  330 #> [17089,]  331 #> [17090,]  331 #> [17091,]  331 #> [17092,]  330 #> [17093,]  331 #> [17094,]  331 #> [17095,]  330 #> [17096,]  330 #> [17097,]  330 #> [17098,]  330 #> [17099,]  331 #> [17100,]  331 #> [17101,]  332 #> [17102,]  332 #> [17103,]  332 #> [17104,]  332 #> [17105,]  332 #> [17106,]  332 #> [17107,]  332 #> [17108,]  332 #> [17109,]  332 #> [17110,]  333 #> [17111,]  332 #> [17112,]  332 #> [17113,]  332 #> [17114,]  332 #> [17115,]  332 #> [17116,]  332 #> [17117,]  332 #> [17118,]  333 #> [17119,]  332 #> [17120,]  332 #> [17121,]  332 #> [17122,]  332 #> [17123,]  332 #> [17124,]  332 #> [17125,]  333 #> [17126,]  332 #> [17127,]  332 #> [17128,]  332 #> [17129,]  332 #> [17130,]  332 #> [17131,]  332 #> [17132,]  332 #> [17133,]  332 #> [17134,]  332 #> [17135,]  332 #> [17136,]  332 #> [17137,]  332 #> [17138,]  332 #> [17139,]  333 #> [17140,]  332 #> [17141,]  332 #> [17142,]  332 #> [17143,]  333 #> [17144,]  332 #> [17145,]  333 #> [17146,]  332 #> [17147,]  332 #> [17148,]  332 #> [17149,]  332 #> [17150,]  332 #> [17151,]  332 #> [17152,]  332 #> [17153,]  332 #> [17154,]  332 #> [17155,]  332 #> [17156,]  332 #> [17157,]  332 #> [17158,]  332 #> [17159,]  332 #> [17160,]  332 #> [17161,]  332 #> [17162,]  332 #> [17163,]  332 #> [17164,]  332 #> [17165,]  332 #> [17166,]  332 #> [17167,]  332 #> [17168,]  332 #> [17169,]  332 #> [17170,]  332 #> [17171,]  332 #> [17172,]  332 #> [17173,]  333 #> [17174,]  332 #> [17175,]  333 #> [17176,]  332 #> [17177,]  333 #> [17178,]  332 #> [17179,]  332 #> [17180,]  332 #> [17181,]  332 #> [17182,]  332 #> [17183,]  332 #> [17184,]  332 #> [17185,]  332 #> [17186,]  332 #> [17187,]  332 #> [17188,]  332 #> [17189,]  332 #> [17190,]  332 #> [17191,]  332 #> [17192,]  332 #> [17193,]  332 #> [17194,]  332 #> [17195,]  332 #> [17196,]  332 #> [17197,]  332 #> [17198,]  332 #> [17199,]  332 #> [17200,]  332 #> [17201,]  335 #> [17202,]  335 #> [17203,]  334 #> [17204,]  334 #> [17205,]  334 #> [17206,]  335 #> [17207,]  335 #> [17208,]  334 #> [17209,]  334 #> [17210,]  334 #> [17211,]  335 #> [17212,]  334 #> [17213,]  335 #> [17214,]  335 #> [17215,]  335 #> [17216,]  335 #> [17217,]  335 #> [17218,]  334 #> [17219,]  335 #> [17220,]  334 #> [17221,]  335 #> [17222,]  335 #> [17223,]  334 #> [17224,]  334 #> [17225,]  335 #> [17226,]  335 #> [17227,]  335 #> [17228,]  335 #> [17229,]  335 #> [17230,]  334 #> [17231,]  334 #> [17232,]  334 #> [17233,]  335 #> [17234,]  334 #> [17235,]  335 #> [17236,]  334 #> [17237,]  335 #> [17238,]  334 #> [17239,]  334 #> [17240,]  335 #> [17241,]  335 #> [17242,]  334 #> [17243,]  334 #> [17244,]  335 #> [17245,]  334 #> [17246,]  335 #> [17247,]  335 #> [17248,]  334 #> [17249,]  334 #> [17250,]  335 #> [17251,]  334 #> [17252,]  335 #> [17253,]  334 #> [17254,]  335 #> [17255,]  335 #> [17256,]  334 #> [17257,]  335 #> [17258,]  335 #> [17259,]  335 #> [17260,]  334 #> [17261,]  335 #> [17262,]  334 #> [17263,]  335 #> [17264,]  334 #> [17265,]  334 #> [17266,]  334 #> [17267,]  334 #> [17268,]  335 #> [17269,]  335 #> [17270,]  335 #> [17271,]  335 #> [17272,]  334 #> [17273,]  335 #> [17274,]  335 #> [17275,]  335 #> [17276,]  335 #> [17277,]  335 #> [17278,]  334 #> [17279,]  335 #> [17280,]  335 #> [17281,]  335 #> [17282,]  335 #> [17283,]  335 #> [17284,]  335 #> [17285,]  334 #> [17286,]  335 #> [17287,]  335 #> [17288,]  334 #> [17289,]  334 #> [17290,]  335 #> [17291,]  334 #> [17292,]  335 #> [17293,]  335 #> [17294,]  335 #> [17295,]  334 #> [17296,]  335 #> [17297,]  335 #> [17298,]  335 #> [17299,]  335 #> [17300,]  335 #> [17301,]  337 #> [17302,]  337 #> [17303,]  336 #> [17304,]  337 #> [17305,]  337 #> [17306,]  337 #> [17307,]  336 #> [17308,]  336 #> [17309,]  337 #> [17310,]  337 #> [17311,]  337 #> [17312,]  337 #> [17313,]  336 #> [17314,]  337 #> [17315,]  337 #> [17316,]  336 #> [17317,]  336 #> [17318,]  337 #> [17319,]  337 #> [17320,]  336 #> [17321,]  337 #> [17322,]  336 #> [17323,]  337 #> [17324,]  336 #> [17325,]  336 #> [17326,]  337 #> [17327,]  337 #> [17328,]  337 #> [17329,]  337 #> [17330,]  337 #> [17331,]  337 #> [17332,]  337 #> [17333,]  337 #> [17334,]  337 #> [17335,]  337 #> [17336,]  337 #> [17337,]  337 #> [17338,]  337 #> [17339,]  336 #> [17340,]  336 #> [17341,]  337 #> [17342,]  337 #> [17343,]  336 #> [17344,]  336 #> [17345,]  336 #> [17346,]  336 #> [17347,]  336 #> [17348,]  337 #> [17349,]  336 #> [17350,]  336 #> [17351,]  336 #> [17352,]  337 #> [17353,]  336 #> [17354,]  336 #> [17355,]  336 #> [17356,]  336 #> [17357,]  337 #> [17358,]  337 #> [17359,]  336 #> [17360,]  337 #> [17361,]  337 #> [17362,]  337 #> [17363,]  336 #> [17364,]  337 #> [17365,]  336 #> [17366,]  336 #> [17367,]  337 #> [17368,]  337 #> [17369,]  337 #> [17370,]  336 #> [17371,]  337 #> [17372,]  336 #> [17373,]  337 #> [17374,]  337 #> [17375,]  337 #> [17376,]  336 #> [17377,]  336 #> [17378,]  336 #> [17379,]  336 #> [17380,]  337 #> [17381,]  337 #> [17382,]  337 #> [17383,]  336 #> [17384,]  336 #> [17385,]  337 #> [17386,]  336 #> [17387,]  337 #> [17388,]  337 #> [17389,]  336 #> [17390,]  336 #> [17391,]  337 #> [17392,]  337 #> [17393,]  337 #> [17394,]  336 #> [17395,]  337 #> [17396,]  337 #> [17397,]  337 #> [17398,]  336 #> [17399,]  337 #> [17400,]  336 #> [17401,]  338 #> [17402,]  338 #> [17403,]  338 #> [17404,]  339 #> [17405,]  338 #> [17406,]  338 #> [17407,]  338 #> [17408,]  338 #> [17409,]  338 #> [17410,]  338 #> [17411,]  338 #> [17412,]  338 #> [17413,]  338 #> [17414,]  339 #> [17415,]  338 #> [17416,]  338 #> [17417,]  338 #> [17418,]  338 #> [17419,]  338 #> [17420,]  338 #> [17421,]  338 #> [17422,]  338 #> [17423,]  338 #> [17424,]  338 #> [17425,]  338 #> [17426,]  338 #> [17427,]  339 #> [17428,]  338 #> [17429,]  338 #> [17430,]  338 #> [17431,]  338 #> [17432,]  338 #> [17433,]  338 #> [17434,]  338 #> [17435,]  338 #> [17436,]  338 #> [17437,]  338 #> [17438,]  338 #> [17439,]  338 #> [17440,]  338 #> [17441,]  338 #> [17442,]  338 #> [17443,]  338 #> [17444,]  338 #> [17445,]  338 #> [17446,]  338 #> [17447,]  338 #> [17448,]  338 #> [17449,]  338 #> [17450,]  338 #> [17451,]  338 #> [17452,]  338 #> [17453,]  338 #> [17454,]  338 #> [17455,]  338 #> [17456,]  338 #> [17457,]  338 #> [17458,]  338 #> [17459,]  338 #> [17460,]  338 #> [17461,]  339 #> [17462,]  338 #> [17463,]  338 #> [17464,]  338 #> [17465,]  338 #> [17466,]  338 #> [17467,]  338 #> [17468,]  338 #> [17469,]  338 #> [17470,]  338 #> [17471,]  338 #> [17472,]  338 #> [17473,]  338 #> [17474,]  338 #> [17475,]  338 #> [17476,]  338 #> [17477,]  338 #> [17478,]  338 #> [17479,]  338 #> [17480,]  338 #> [17481,]  338 #> [17482,]  339 #> [17483,]  338 #> [17484,]  338 #> [17485,]  338 #> [17486,]  338 #> [17487,]  338 #> [17488,]  338 #> [17489,]  338 #> [17490,]  338 #> [17491,]  338 #> [17492,]  339 #> [17493,]  339 #> [17494,]  338 #> [17495,]  338 #> [17496,]  339 #> [17497,]  339 #> [17498,]  338 #> [17499,]  338 #> [17500,]  338 #> [17501,]  341 #> [17502,]  341 #> [17503,]  340 #> [17504,]  341 #> [17505,]  341 #> [17506,]  341 #> [17507,]  341 #> [17508,]  341 #> [17509,]  341 #> [17510,]  341 #> [17511,]  341 #> [17512,]  340 #> [17513,]  341 #> [17514,]  340 #> [17515,]  341 #> [17516,]  341 #> [17517,]  341 #> [17518,]  341 #> [17519,]  341 #> [17520,]  341 #> [17521,]  341 #> [17522,]  341 #> [17523,]  341 #> [17524,]  341 #> [17525,]  341 #> [17526,]  340 #> [17527,]  341 #> [17528,]  341 #> [17529,]  341 #> [17530,]  341 #> [17531,]  341 #> [17532,]  340 #> [17533,]  341 #> [17534,]  341 #> [17535,]  341 #> [17536,]  341 #> [17537,]  341 #> [17538,]  341 #> [17539,]  341 #> [17540,]  341 #> [17541,]  341 #> [17542,]  341 #> [17543,]  341 #> [17544,]  341 #> [17545,]  341 #> [17546,]  341 #> [17547,]  341 #> [17548,]  341 #> [17549,]  341 #> [17550,]  341 #> [17551,]  340 #> [17552,]  341 #> [17553,]  341 #> [17554,]  340 #> [17555,]  341 #> [17556,]  341 #> [17557,]  341 #> [17558,]  341 #> [17559,]  341 #> [17560,]  341 #> [17561,]  341 #> [17562,]  341 #> [17563,]  341 #> [17564,]  341 #> [17565,]  341 #> [17566,]  340 #> [17567,]  341 #> [17568,]  341 #> [17569,]  340 #> [17570,]  341 #> [17571,]  341 #> [17572,]  341 #> [17573,]  341 #> [17574,]  341 #> [17575,]  341 #> [17576,]  341 #> [17577,]  341 #> [17578,]  341 #> [17579,]  341 #> [17580,]  340 #> [17581,]  341 #> [17582,]  341 #> [17583,]  341 #> [17584,]  341 #> [17585,]  341 #> [17586,]  341 #> [17587,]  341 #> [17588,]  341 #> [17589,]  340 #> [17590,]  341 #> [17591,]  341 #> [17592,]  341 #> [17593,]  341 #> [17594,]  341 #> [17595,]  341 #> [17596,]  341 #> [17597,]  341 #> [17598,]  341 #> [17599,]  341 #> [17600,]  341 #> [17601,]  343 #> [17602,]  342 #> [17603,]  342 #> [17604,]  342 #> [17605,]  343 #> [17606,]  342 #> [17607,]  342 #> [17608,]  342 #> [17609,]  342 #> [17610,]  343 #> [17611,]  343 #> [17612,]  343 #> [17613,]  342 #> [17614,]  343 #> [17615,]  343 #> [17616,]  342 #> [17617,]  343 #> [17618,]  343 #> [17619,]  342 #> [17620,]  342 #> [17621,]  342 #> [17622,]  343 #> [17623,]  342 #> [17624,]  342 #> [17625,]  342 #> [17626,]  343 #> [17627,]  343 #> [17628,]  342 #> [17629,]  342 #> [17630,]  342 #> [17631,]  343 #> [17632,]  343 #> [17633,]  342 #> [17634,]  342 #> [17635,]  342 #> [17636,]  342 #> [17637,]  342 #> [17638,]  343 #> [17639,]  342 #> [17640,]  342 #> [17641,]  342 #> [17642,]  342 #> [17643,]  343 #> [17644,]  342 #> [17645,]  342 #> [17646,]  342 #> [17647,]  343 #> [17648,]  342 #> [17649,]  342 #> [17650,]  342 #> [17651,]  342 #> [17652,]  343 #> [17653,]  342 #> [17654,]  342 #> [17655,]  342 #> [17656,]  342 #> [17657,]  342 #> [17658,]  343 #> [17659,]  343 #> [17660,]  342 #> [17661,]  343 #> [17662,]  342 #> [17663,]  342 #> [17664,]  342 #> [17665,]  342 #> [17666,]  343 #> [17667,]  342 #> [17668,]  342 #> [17669,]  342 #> [17670,]  343 #> [17671,]  343 #> [17672,]  342 #> [17673,]  342 #> [17674,]  342 #> [17675,]  343 #> [17676,]  342 #> [17677,]  343 #> [17678,]  342 #> [17679,]  343 #> [17680,]  342 #> [17681,]  342 #> [17682,]  342 #> [17683,]  342 #> [17684,]  342 #> [17685,]  342 #> [17686,]  342 #> [17687,]  343 #> [17688,]  342 #> [17689,]  342 #> [17690,]  343 #> [17691,]  343 #> [17692,]  343 #> [17693,]  342 #> [17694,]  342 #> [17695,]  343 #> [17696,]  342 #> [17697,]  342 #> [17698,]  342 #> [17699,]  342 #> [17700,]  343 #> [17701,]  344 #> [17702,]  345 #> [17703,]  344 #> [17704,]  345 #> [17705,]  345 #> [17706,]  344 #> [17707,]  345 #> [17708,]  345 #> [17709,]  345 #> [17710,]  345 #> [17711,]  344 #> [17712,]  345 #> [17713,]  345 #> [17714,]  345 #> [17715,]  345 #> [17716,]  344 #> [17717,]  345 #> [17718,]  345 #> [17719,]  344 #> [17720,]  345 #> [17721,]  345 #> [17722,]  345 #> [17723,]  345 #> [17724,]  345 #> [17725,]  345 #> [17726,]  345 #> [17727,]  345 #> [17728,]  344 #> [17729,]  345 #> [17730,]  345 #> [17731,]  345 #> [17732,]  345 #> [17733,]  345 #> [17734,]  344 #> [17735,]  344 #> [17736,]  345 #> [17737,]  344 #> [17738,]  344 #> [17739,]  345 #> [17740,]  345 #> [17741,]  345 #> [17742,]  345 #> [17743,]  345 #> [17744,]  345 #> [17745,]  344 #> [17746,]  345 #> [17747,]  345 #> [17748,]  345 #> [17749,]  344 #> [17750,]  345 #> [17751,]  345 #> [17752,]  344 #> [17753,]  345 #> [17754,]  345 #> [17755,]  345 #> [17756,]  345 #> [17757,]  345 #> [17758,]  345 #> [17759,]  345 #> [17760,]  345 #> [17761,]  345 #> [17762,]  345 #> [17763,]  345 #> [17764,]  344 #> [17765,]  345 #> [17766,]  345 #> [17767,]  345 #> [17768,]  344 #> [17769,]  345 #> [17770,]  345 #> [17771,]  345 #> [17772,]  344 #> [17773,]  344 #> [17774,]  345 #> [17775,]  345 #> [17776,]  345 #> [17777,]  344 #> [17778,]  345 #> [17779,]  345 #> [17780,]  345 #> [17781,]  345 #> [17782,]  345 #> [17783,]  345 #> [17784,]  345 #> [17785,]  345 #> [17786,]  345 #> [17787,]  345 #> [17788,]  345 #> [17789,]  345 #> [17790,]  345 #> [17791,]  345 #> [17792,]  345 #> [17793,]  345 #> [17794,]  344 #> [17795,]  345 #> [17796,]  344 #> [17797,]  344 #> [17798,]  345 #> [17799,]  345 #> [17800,]  344 #> [17801,]  347 #> [17802,]  347 #> [17803,]  346 #> [17804,]  347 #> [17805,]  347 #> [17806,]  347 #> [17807,]  347 #> [17808,]  347 #> [17809,]  347 #> [17810,]  347 #> [17811,]  347 #> [17812,]  346 #> [17813,]  347 #> [17814,]  346 #> [17815,]  347 #> [17816,]  347 #> [17817,]  347 #> [17818,]  347 #> [17819,]  347 #> [17820,]  347 #> [17821,]  347 #> [17822,]  347 #> [17823,]  347 #> [17824,]  347 #> [17825,]  347 #> [17826,]  346 #> [17827,]  347 #> [17828,]  347 #> [17829,]  347 #> [17830,]  347 #> [17831,]  347 #> [17832,]  346 #> [17833,]  347 #> [17834,]  347 #> [17835,]  347 #> [17836,]  347 #> [17837,]  347 #> [17838,]  347 #> [17839,]  347 #> [17840,]  347 #> [17841,]  347 #> [17842,]  347 #> [17843,]  347 #> [17844,]  347 #> [17845,]  347 #> [17846,]  347 #> [17847,]  347 #> [17848,]  347 #> [17849,]  347 #> [17850,]  347 #> [17851,]  347 #> [17852,]  347 #> [17853,]  347 #> [17854,]  347 #> [17855,]  347 #> [17856,]  347 #> [17857,]  347 #> [17858,]  347 #> [17859,]  347 #> [17860,]  347 #> [17861,]  347 #> [17862,]  347 #> [17863,]  347 #> [17864,]  347 #> [17865,]  347 #> [17866,]  347 #> [17867,]  347 #> [17868,]  347 #> [17869,]  346 #> [17870,]  347 #> [17871,]  347 #> [17872,]  347 #> [17873,]  347 #> [17874,]  347 #> [17875,]  347 #> [17876,]  347 #> [17877,]  347 #> [17878,]  347 #> [17879,]  347 #> [17880,]  346 #> [17881,]  347 #> [17882,]  347 #> [17883,]  347 #> [17884,]  347 #> [17885,]  347 #> [17886,]  347 #> [17887,]  347 #> [17888,]  347 #> [17889,]  347 #> [17890,]  347 #> [17891,]  347 #> [17892,]  347 #> [17893,]  347 #> [17894,]  347 #> [17895,]  347 #> [17896,]  347 #> [17897,]  347 #> [17898,]  347 #> [17899,]  347 #> [17900,]  347 #> [17901,]  349 #> [17902,]  349 #> [17903,]  349 #> [17904,]  348 #> [17905,]  349 #> [17906,]  349 #> [17907,]  349 #> [17908,]  348 #> [17909,]  348 #> [17910,]  348 #> [17911,]  349 #> [17912,]  349 #> [17913,]  349 #> [17914,]  349 #> [17915,]  349 #> [17916,]  349 #> [17917,]  349 #> [17918,]  349 #> [17919,]  349 #> [17920,]  349 #> [17921,]  349 #> [17922,]  349 #> [17923,]  349 #> [17924,]  349 #> [17925,]  349 #> [17926,]  349 #> [17927,]  349 #> [17928,]  349 #> [17929,]  349 #> [17930,]  349 #> [17931,]  349 #> [17932,]  349 #> [17933,]  349 #> [17934,]  349 #> [17935,]  349 #> [17936,]  349 #> [17937,]  349 #> [17938,]  349 #> [17939,]  349 #> [17940,]  349 #> [17941,]  349 #> [17942,]  349 #> [17943,]  348 #> [17944,]  349 #> [17945,]  349 #> [17946,]  349 #> [17947,]  349 #> [17948,]  349 #> [17949,]  349 #> [17950,]  349 #> [17951,]  348 #> [17952,]  349 #> [17953,]  349 #> [17954,]  349 #> [17955,]  349 #> [17956,]  349 #> [17957,]  349 #> [17958,]  349 #> [17959,]  349 #> [17960,]  348 #> [17961,]  349 #> [17962,]  349 #> [17963,]  349 #> [17964,]  348 #> [17965,]  349 #> [17966,]  349 #> [17967,]  348 #> [17968,]  349 #> [17969,]  349 #> [17970,]  349 #> [17971,]  349 #> [17972,]  349 #> [17973,]  349 #> [17974,]  349 #> [17975,]  349 #> [17976,]  349 #> [17977,]  349 #> [17978,]  348 #> [17979,]  349 #> [17980,]  349 #> [17981,]  349 #> [17982,]  349 #> [17983,]  349 #> [17984,]  349 #> [17985,]  348 #> [17986,]  349 #> [17987,]  349 #> [17988,]  349 #> [17989,]  348 #> [17990,]  349 #> [17991,]  348 #> [17992,]  349 #> [17993,]  349 #> [17994,]  349 #> [17995,]  348 #> [17996,]  349 #> [17997,]  349 #> [17998,]  349 #> [17999,]  349 #> [18000,]  349 #> [18001,]  351 #> [18002,]  350 #> [18003,]  350 #> [18004,]  350 #> [18005,]  351 #> [18006,]  350 #> [18007,]  350 #> [18008,]  350 #> [18009,]  350 #> [18010,]  350 #> [18011,]  350 #> [18012,]  350 #> [18013,]  350 #> [18014,]  351 #> [18015,]  351 #> [18016,]  350 #> [18017,]  350 #> [18018,]  351 #> [18019,]  350 #> [18020,]  350 #> [18021,]  350 #> [18022,]  350 #> [18023,]  350 #> [18024,]  350 #> [18025,]  350 #> [18026,]  351 #> [18027,]  351 #> [18028,]  350 #> [18029,]  350 #> [18030,]  350 #> [18031,]  350 #> [18032,]  351 #> [18033,]  350 #> [18034,]  350 #> [18035,]  350 #> [18036,]  350 #> [18037,]  350 #> [18038,]  350 #> [18039,]  350 #> [18040,]  350 #> [18041,]  350 #> [18042,]  350 #> [18043,]  351 #> [18044,]  350 #> [18045,]  350 #> [18046,]  350 #> [18047,]  350 #> [18048,]  350 #> [18049,]  350 #> [18050,]  350 #> [18051,]  350 #> [18052,]  350 #> [18053,]  350 #> [18054,]  350 #> [18055,]  350 #> [18056,]  350 #> [18057,]  350 #> [18058,]  351 #> [18059,]  351 #> [18060,]  350 #> [18061,]  351 #> [18062,]  350 #> [18063,]  350 #> [18064,]  350 #> [18065,]  350 #> [18066,]  351 #> [18067,]  350 #> [18068,]  350 #> [18069,]  350 #> [18070,]  351 #> [18071,]  351 #> [18072,]  350 #> [18073,]  350 #> [18074,]  350 #> [18075,]  351 #> [18076,]  350 #> [18077,]  350 #> [18078,]  350 #> [18079,]  351 #> [18080,]  350 #> [18081,]  350 #> [18082,]  350 #> [18083,]  350 #> [18084,]  350 #> [18085,]  350 #> [18086,]  350 #> [18087,]  351 #> [18088,]  350 #> [18089,]  350 #> [18090,]  350 #> [18091,]  351 #> [18092,]  350 #> [18093,]  350 #> [18094,]  350 #> [18095,]  351 #> [18096,]  350 #> [18097,]  350 #> [18098,]  350 #> [18099,]  350 #> [18100,]  351 #> [18101,]  352 #> [18102,]  352 #> [18103,]  352 #> [18104,]  352 #> [18105,]  352 #> [18106,]  352 #> [18107,]  352 #> [18108,]  353 #> [18109,]  352 #> [18110,]  352 #> [18111,]  352 #> [18112,]  352 #> [18113,]  353 #> [18114,]  352 #> [18115,]  353 #> [18116,]  352 #> [18117,]  352 #> [18118,]  352 #> [18119,]  353 #> [18120,]  353 #> [18121,]  352 #> [18122,]  353 #> [18123,]  352 #> [18124,]  352 #> [18125,]  352 #> [18126,]  352 #> [18127,]  353 #> [18128,]  352 #> [18129,]  353 #> [18130,]  352 #> [18131,]  352 #> [18132,]  352 #> [18133,]  352 #> [18134,]  352 #> [18135,]  352 #> [18136,]  353 #> [18137,]  353 #> [18138,]  353 #> [18139,]  352 #> [18140,]  352 #> [18141,]  353 #> [18142,]  352 #> [18143,]  352 #> [18144,]  352 #> [18145,]  352 #> [18146,]  353 #> [18147,]  352 #> [18148,]  352 #> [18149,]  352 #> [18150,]  353 #> [18151,]  353 #> [18152,]  352 #> [18153,]  353 #> [18154,]  352 #> [18155,]  353 #> [18156,]  352 #> [18157,]  352 #> [18158,]  353 #> [18159,]  352 #> [18160,]  353 #> [18161,]  352 #> [18162,]  352 #> [18163,]  352 #> [18164,]  353 #> [18165,]  352 #> [18166,]  353 #> [18167,]  352 #> [18168,]  352 #> [18169,]  353 #> [18170,]  352 #> [18171,]  353 #> [18172,]  352 #> [18173,]  352 #> [18174,]  352 #> [18175,]  352 #> [18176,]  352 #> [18177,]  353 #> [18178,]  352 #> [18179,]  352 #> [18180,]  353 #> [18181,]  353 #> [18182,]  352 #> [18183,]  353 #> [18184,]  352 #> [18185,]  352 #> [18186,]  352 #> [18187,]  353 #> [18188,]  352 #> [18189,]  352 #> [18190,]  353 #> [18191,]  352 #> [18192,]  352 #> [18193,]  352 #> [18194,]  352 #> [18195,]  352 #> [18196,]  353 #> [18197,]  353 #> [18198,]  352 #> [18199,]  352 #> [18200,]  353 #> [18201,]  354 #> [18202,]  354 #> [18203,]  354 #> [18204,]  354 #> [18205,]  354 #> [18206,]  354 #> [18207,]  354 #> [18208,]  354 #> [18209,]  354 #> [18210,]  354 #> [18211,]  354 #> [18212,]  354 #> [18213,]  354 #> [18214,]  354 #> [18215,]  354 #> [18216,]  354 #> [18217,]  354 #> [18218,]  354 #> [18219,]  354 #> [18220,]  354 #> [18221,]  354 #> [18222,]  354 #> [18223,]  354 #> [18224,]  354 #> [18225,]  354 #> [18226,]  354 #> [18227,]  354 #> [18228,]  354 #> [18229,]  354 #> [18230,]  354 #> [18231,]  354 #> [18232,]  354 #> [18233,]  354 #> [18234,]  354 #> [18235,]  354 #> [18236,]  354 #> [18237,]  354 #> [18238,]  354 #> [18239,]  354 #> [18240,]  354 #> [18241,]  354 #> [18242,]  354 #> [18243,]  354 #> [18244,]  354 #> [18245,]  354 #> [18246,]  354 #> [18247,]  354 #> [18248,]  354 #> [18249,]  354 #> [18250,]  354 #> [18251,]  354 #> [18252,]  354 #> [18253,]  354 #> [18254,]  354 #> [18255,]  354 #> [18256,]  354 #> [18257,]  354 #> [18258,]  354 #> [18259,]  354 #> [18260,]  354 #> [18261,]  354 #> [18262,]  354 #> [18263,]  354 #> [18264,]  354 #> [18265,]  354 #> [18266,]  354 #> [18267,]  354 #> [18268,]  354 #> [18269,]  354 #> [18270,]  354 #> [18271,]  354 #> [18272,]  354 #> [18273,]  354 #> [18274,]  354 #> [18275,]  354 #> [18276,]  354 #> [18277,]  354 #> [18278,]  354 #> [18279,]  354 #> [18280,]  354 #> [18281,]  354 #> [18282,]  354 #> [18283,]  354 #> [18284,]  354 #> [18285,]  354 #> [18286,]  354 #> [18287,]  354 #> [18288,]  354 #> [18289,]  354 #> [18290,]  354 #> [18291,]  354 #> [18292,]  354 #> [18293,]  354 #> [18294,]  354 #> [18295,]  354 #> [18296,]  354 #> [18297,]  354 #> [18298,]  354 #> [18299,]  354 #> [18300,]  354 #> [18301,]  356 #> [18302,]  355 #> [18303,]  355 #> [18304,]  356 #> [18305,]  356 #> [18306,]  356 #> [18307,]  355 #> [18308,]  356 #> [18309,]  356 #> [18310,]  356 #> [18311,]  356 #> [18312,]  356 #> [18313,]  355 #> [18314,]  356 #> [18315,]  356 #> [18316,]  355 #> [18317,]  356 #> [18318,]  355 #> [18319,]  355 #> [18320,]  356 #> [18321,]  355 #> [18322,]  355 #> [18323,]  355 #> [18324,]  355 #> [18325,]  356 #> [18326,]  356 #> [18327,]  356 #> [18328,]  356 #> [18329,]  356 #> [18330,]  355 #> [18331,]  355 #> [18332,]  355 #> [18333,]  356 #> [18334,]  355 #> [18335,]  355 #> [18336,]  355 #> [18337,]  355 #> [18338,]  356 #> [18339,]  355 #> [18340,]  355 #> [18341,]  356 #> [18342,]  356 #> [18343,]  356 #> [18344,]  355 #> [18345,]  356 #> [18346,]  356 #> [18347,]  355 #> [18348,]  356 #> [18349,]  355 #> [18350,]  356 #> [18351,]  356 #> [18352,]  356 #> [18353,]  356 #> [18354,]  355 #> [18355,]  356 #> [18356,]  356 #> [18357,]  356 #> [18358,]  356 #> [18359,]  355 #> [18360,]  356 #> [18361,]  356 #> [18362,]  355 #> [18363,]  356 #> [18364,]  356 #> [18365,]  356 #> [18366,]  356 #> [18367,]  356 #> [18368,]  356 #> [18369,]  356 #> [18370,]  355 #> [18371,]  356 #> [18372,]  356 #> [18373,]  356 #> [18374,]  356 #> [18375,]  356 #> [18376,]  356 #> [18377,]  355 #> [18378,]  356 #> [18379,]  355 #> [18380,]  355 #> [18381,]  356 #> [18382,]  356 #> [18383,]  355 #> [18384,]  356 #> [18385,]  356 #> [18386,]  355 #> [18387,]  356 #> [18388,]  356 #> [18389,]  356 #> [18390,]  356 #> [18391,]  356 #> [18392,]  356 #> [18393,]  355 #> [18394,]  356 #> [18395,]  355 #> [18396,]  356 #> [18397,]  356 #> [18398,]  355 #> [18399,]  356 #> [18400,]  355 #> [18401,]  357 #> [18402,]  358 #> [18403,]  358 #> [18404,]  357 #> [18405,]  358 #> [18406,]  358 #> [18407,]  358 #> [18408,]  357 #> [18409,]  357 #> [18410,]  358 #> [18411,]  357 #> [18412,]  358 #> [18413,]  357 #> [18414,]  358 #> [18415,]  358 #> [18416,]  358 #> [18417,]  357 #> [18418,]  358 #> [18419,]  358 #> [18420,]  358 #> [18421,]  358 #> [18422,]  357 #> [18423,]  358 #> [18424,]  358 #> [18425,]  358 #> [18426,]  358 #> [18427,]  357 #> [18428,]  358 #> [18429,]  358 #> [18430,]  357 #> [18431,]  358 #> [18432,]  358 #> [18433,]  358 #> [18434,]  358 #> [18435,]  357 #> [18436,]  358 #> [18437,]  358 #> [18438,]  358 #> [18439,]  358 #> [18440,]  358 #> [18441,]  358 #> [18442,]  358 #> [18443,]  357 #> [18444,]  357 #> [18445,]  358 #> [18446,]  358 #> [18447,]  358 #> [18448,]  358 #> [18449,]  357 #> [18450,]  358 #> [18451,]  358 #> [18452,]  357 #> [18453,]  358 #> [18454,]  357 #> [18455,]  357 #> [18456,]  358 #> [18457,]  358 #> [18458,]  357 #> [18459,]  358 #> [18460,]  358 #> [18461,]  358 #> [18462,]  358 #> [18463,]  358 #> [18464,]  358 #> [18465,]  358 #> [18466,]  357 #> [18467,]  358 #> [18468,]  358 #> [18469,]  357 #> [18470,]  358 #> [18471,]  358 #> [18472,]  358 #> [18473,]  358 #> [18474,]  358 #> [18475,]  358 #> [18476,]  358 #> [18477,]  358 #> [18478,]  358 #> [18479,]  357 #> [18480,]  357 #> [18481,]  357 #> [18482,]  357 #> [18483,]  357 #> [18484,]  358 #> [18485,]  358 #> [18486,]  358 #> [18487,]  357 #> [18488,]  357 #> [18489,]  357 #> [18490,]  357 #> [18491,]  358 #> [18492,]  357 #> [18493,]  358 #> [18494,]  358 #> [18495,]  357 #> [18496,]  357 #> [18497,]  358 #> [18498,]  358 #> [18499,]  357 #> [18500,]  358 #> [18501,]  359 #> [18502,]  360 #> [18503,]  359 #> [18504,]  359 #> [18505,]  359 #> [18506,]  359 #> [18507,]  359 #> [18508,]  359 #> [18509,]  360 #> [18510,]  360 #> [18511,]  359 #> [18512,]  360 #> [18513,]  359 #> [18514,]  359 #> [18515,]  359 #> [18516,]  359 #> [18517,]  360 #> [18518,]  359 #> [18519,]  359 #> [18520,]  359 #> [18521,]  360 #> [18522,]  359 #> [18523,]  359 #> [18524,]  359 #> [18525,]  359 #> [18526,]  359 #> [18527,]  359 #> [18528,]  359 #> [18529,]  360 #> [18530,]  359 #> [18531,]  359 #> [18532,]  359 #> [18533,]  360 #> [18534,]  359 #> [18535,]  359 #> [18536,]  359 #> [18537,]  359 #> [18538,]  359 #> [18539,]  359 #> [18540,]  359 #> [18541,]  359 #> [18542,]  359 #> [18543,]  359 #> [18544,]  359 #> [18545,]  359 #> [18546,]  359 #> [18547,]  359 #> [18548,]  359 #> [18549,]  359 #> [18550,]  359 #> [18551,]  359 #> [18552,]  359 #> [18553,]  360 #> [18554,]  359 #> [18555,]  359 #> [18556,]  359 #> [18557,]  359 #> [18558,]  359 #> [18559,]  359 #> [18560,]  360 #> [18561,]  359 #> [18562,]  359 #> [18563,]  360 #> [18564,]  359 #> [18565,]  359 #> [18566,]  359 #> [18567,]  359 #> [18568,]  359 #> [18569,]  359 #> [18570,]  360 #> [18571,]  359 #> [18572,]  359 #> [18573,]  359 #> [18574,]  359 #> [18575,]  359 #> [18576,]  359 #> [18577,]  359 #> [18578,]  359 #> [18579,]  359 #> [18580,]  360 #> [18581,]  360 #> [18582,]  359 #> [18583,]  359 #> [18584,]  359 #> [18585,]  359 #> [18586,]  360 #> [18587,]  359 #> [18588,]  359 #> [18589,]  359 #> [18590,]  359 #> [18591,]  359 #> [18592,]  359 #> [18593,]  359 #> [18594,]  359 #> [18595,]  359 #> [18596,]  359 #> [18597,]  359 #> [18598,]  359 #> [18599,]  359 #> [18600,]  359 #> [18601,]  362 #> [18602,]  362 #> [18603,]  362 #> [18604,]  362 #> [18605,]  362 #> [18606,]  362 #> [18607,]  361 #> [18608,]  362 #> [18609,]  362 #> [18610,]  362 #> [18611,]  362 #> [18612,]  362 #> [18613,]  362 #> [18614,]  362 #> [18615,]  362 #> [18616,]  362 #> [18617,]  362 #> [18618,]  362 #> [18619,]  362 #> [18620,]  362 #> [18621,]  361 #> [18622,]  362 #> [18623,]  361 #> [18624,]  362 #> [18625,]  362 #> [18626,]  362 #> [18627,]  362 #> [18628,]  362 #> [18629,]  362 #> [18630,]  361 #> [18631,]  362 #> [18632,]  362 #> [18633,]  362 #> [18634,]  362 #> [18635,]  362 #> [18636,]  362 #> [18637,]  362 #> [18638,]  362 #> [18639,]  361 #> [18640,]  362 #> [18641,]  362 #> [18642,]  362 #> [18643,]  362 #> [18644,]  362 #> [18645,]  362 #> [18646,]  362 #> [18647,]  362 #> [18648,]  362 #> [18649,]  361 #> [18650,]  362 #> [18651,]  362 #> [18652,]  362 #> [18653,]  362 #> [18654,]  361 #> [18655,]  362 #> [18656,]  362 #> [18657,]  362 #> [18658,]  362 #> [18659,]  362 #> [18660,]  362 #> [18661,]  362 #> [18662,]  361 #> [18663,]  362 #> [18664,]  362 #> [18665,]  362 #> [18666,]  362 #> [18667,]  362 #> [18668,]  362 #> [18669,]  362 #> [18670,]  361 #> [18671,]  362 #> [18672,]  362 #> [18673,]  362 #> [18674,]  362 #> [18675,]  362 #> [18676,]  362 #> [18677,]  362 #> [18678,]  362 #> [18679,]  362 #> [18680,]  361 #> [18681,]  362 #> [18682,]  362 #> [18683,]  361 #> [18684,]  362 #> [18685,]  362 #> [18686,]  362 #> [18687,]  362 #> [18688,]  362 #> [18689,]  362 #> [18690,]  362 #> [18691,]  362 #> [18692,]  362 #> [18693,]  362 #> [18694,]  362 #> [18695,]  361 #> [18696,]  362 #> [18697,]  362 #> [18698,]  361 #> [18699,]  362 #> [18700,]  362 #> [18701,]  364 #> [18702,]  363 #> [18703,]  363 #> [18704,]  364 #> [18705,]  364 #> [18706,]  364 #> [18707,]  363 #> [18708,]  364 #> [18709,]  364 #> [18710,]  364 #> [18711,]  364 #> [18712,]  364 #> [18713,]  363 #> [18714,]  364 #> [18715,]  364 #> [18716,]  363 #> [18717,]  364 #> [18718,]  363 #> [18719,]  363 #> [18720,]  364 #> [18721,]  363 #> [18722,]  363 #> [18723,]  363 #> [18724,]  363 #> [18725,]  364 #> [18726,]  364 #> [18727,]  364 #> [18728,]  364 #> [18729,]  364 #> [18730,]  363 #> [18731,]  363 #> [18732,]  363 #> [18733,]  364 #> [18734,]  363 #> [18735,]  363 #> [18736,]  363 #> [18737,]  363 #> [18738,]  364 #> [18739,]  363 #> [18740,]  363 #> [18741,]  364 #> [18742,]  364 #> [18743,]  364 #> [18744,]  363 #> [18745,]  364 #> [18746,]  364 #> [18747,]  363 #> [18748,]  364 #> [18749,]  363 #> [18750,]  364 #> [18751,]  364 #> [18752,]  364 #> [18753,]  364 #> [18754,]  363 #> [18755,]  364 #> [18756,]  364 #> [18757,]  364 #> [18758,]  364 #> [18759,]  363 #> [18760,]  364 #> [18761,]  364 #> [18762,]  363 #> [18763,]  364 #> [18764,]  364 #> [18765,]  364 #> [18766,]  364 #> [18767,]  364 #> [18768,]  364 #> [18769,]  364 #> [18770,]  363 #> [18771,]  364 #> [18772,]  364 #> [18773,]  364 #> [18774,]  364 #> [18775,]  364 #> [18776,]  364 #> [18777,]  363 #> [18778,]  364 #> [18779,]  363 #> [18780,]  363 #> [18781,]  364 #> [18782,]  364 #> [18783,]  363 #> [18784,]  364 #> [18785,]  364 #> [18786,]  363 #> [18787,]  364 #> [18788,]  364 #> [18789,]  364 #> [18790,]  364 #> [18791,]  364 #> [18792,]  364 #> [18793,]  363 #> [18794,]  364 #> [18795,]  363 #> [18796,]  364 #> [18797,]  364 #> [18798,]  363 #> [18799,]  364 #> [18800,]  363 #> [18801,]  365 #> [18802,]  365 #> [18803,]  365 #> [18804,]  366 #> [18805,]  365 #> [18806,]  365 #> [18807,]  365 #> [18808,]  365 #> [18809,]  365 #> [18810,]  365 #> [18811,]  365 #> [18812,]  365 #> [18813,]  365 #> [18814,]  366 #> [18815,]  365 #> [18816,]  365 #> [18817,]  365 #> [18818,]  365 #> [18819,]  366 #> [18820,]  365 #> [18821,]  365 #> [18822,]  365 #> [18823,]  365 #> [18824,]  365 #> [18825,]  365 #> [18826,]  365 #> [18827,]  366 #> [18828,]  365 #> [18829,]  365 #> [18830,]  365 #> [18831,]  365 #> [18832,]  365 #> [18833,]  365 #> [18834,]  365 #> [18835,]  365 #> [18836,]  365 #> [18837,]  365 #> [18838,]  365 #> [18839,]  365 #> [18840,]  365 #> [18841,]  365 #> [18842,]  365 #> [18843,]  365 #> [18844,]  365 #> [18845,]  365 #> [18846,]  365 #> [18847,]  365 #> [18848,]  366 #> [18849,]  365 #> [18850,]  365 #> [18851,]  365 #> [18852,]  365 #> [18853,]  365 #> [18854,]  365 #> [18855,]  365 #> [18856,]  365 #> [18857,]  365 #> [18858,]  365 #> [18859,]  365 #> [18860,]  365 #> [18861,]  366 #> [18862,]  365 #> [18863,]  365 #> [18864,]  365 #> [18865,]  365 #> [18866,]  365 #> [18867,]  365 #> [18868,]  365 #> [18869,]  366 #> [18870,]  365 #> [18871,]  365 #> [18872,]  365 #> [18873,]  365 #> [18874,]  365 #> [18875,]  365 #> [18876,]  365 #> [18877,]  365 #> [18878,]  365 #> [18879,]  365 #> [18880,]  365 #> [18881,]  365 #> [18882,]  366 #> [18883,]  365 #> [18884,]  365 #> [18885,]  365 #> [18886,]  365 #> [18887,]  365 #> [18888,]  365 #> [18889,]  365 #> [18890,]  365 #> [18891,]  365 #> [18892,]  366 #> [18893,]  366 #> [18894,]  365 #> [18895,]  365 #> [18896,]  366 #> [18897,]  366 #> [18898,]  365 #> [18899,]  365 #> [18900,]  365 #> [18901,]  367 #> [18902,]  368 #> [18903,]  367 #> [18904,]  368 #> [18905,]  368 #> [18906,]  367 #> [18907,]  368 #> [18908,]  368 #> [18909,]  368 #> [18910,]  368 #> [18911,]  367 #> [18912,]  368 #> [18913,]  368 #> [18914,]  367 #> [18915,]  368 #> [18916,]  367 #> [18917,]  368 #> [18918,]  368 #> [18919,]  367 #> [18920,]  368 #> [18921,]  368 #> [18922,]  368 #> [18923,]  368 #> [18924,]  368 #> [18925,]  368 #> [18926,]  367 #> [18927,]  368 #> [18928,]  367 #> [18929,]  368 #> [18930,]  368 #> [18931,]  368 #> [18932,]  368 #> [18933,]  368 #> [18934,]  367 #> [18935,]  367 #> [18936,]  368 #> [18937,]  367 #> [18938,]  367 #> [18939,]  368 #> [18940,]  368 #> [18941,]  368 #> [18942,]  367 #> [18943,]  368 #> [18944,]  368 #> [18945,]  367 #> [18946,]  368 #> [18947,]  368 #> [18948,]  368 #> [18949,]  367 #> [18950,]  368 #> [18951,]  368 #> [18952,]  367 #> [18953,]  368 #> [18954,]  368 #> [18955,]  368 #> [18956,]  367 #> [18957,]  368 #> [18958,]  368 #> [18959,]  367 #> [18960,]  368 #> [18961,]  368 #> [18962,]  368 #> [18963,]  368 #> [18964,]  367 #> [18965,]  367 #> [18966,]  368 #> [18967,]  368 #> [18968,]  367 #> [18969,]  367 #> [18970,]  368 #> [18971,]  368 #> [18972,]  367 #> [18973,]  367 #> [18974,]  368 #> [18975,]  368 #> [18976,]  368 #> [18977,]  367 #> [18978,]  368 #> [18979,]  367 #> [18980,]  368 #> [18981,]  368 #> [18982,]  368 #> [18983,]  368 #> [18984,]  368 #> [18985,]  368 #> [18986,]  368 #> [18987,]  368 #> [18988,]  368 #> [18989,]  367 #> [18990,]  368 #> [18991,]  368 #> [18992,]  368 #> [18993,]  368 #> [18994,]  367 #> [18995,]  368 #> [18996,]  367 #> [18997,]  367 #> [18998,]  368 #> [18999,]  368 #> [19000,]  367 #> [19001,]  369 #> [19002,]  370 #> [19003,]  370 #> [19004,]  369 #> [19005,]  370 #> [19006,]  370 #> [19007,]  370 #> [19008,]  369 #> [19009,]  369 #> [19010,]  370 #> [19011,]  369 #> [19012,]  370 #> [19013,]  369 #> [19014,]  369 #> [19015,]  369 #> [19016,]  369 #> [19017,]  369 #> [19018,]  370 #> [19019,]  370 #> [19020,]  370 #> [19021,]  369 #> [19022,]  369 #> [19023,]  370 #> [19024,]  370 #> [19025,]  370 #> [19026,]  370 #> [19027,]  369 #> [19028,]  370 #> [19029,]  370 #> [19030,]  369 #> [19031,]  370 #> [19032,]  370 #> [19033,]  370 #> [19034,]  370 #> [19035,]  369 #> [19036,]  370 #> [19037,]  369 #> [19038,]  370 #> [19039,]  370 #> [19040,]  370 #> [19041,]  369 #> [19042,]  370 #> [19043,]  369 #> [19044,]  369 #> [19045,]  369 #> [19046,]  369 #> [19047,]  370 #> [19048,]  370 #> [19049,]  369 #> [19050,]  370 #> [19051,]  370 #> [19052,]  369 #> [19053,]  370 #> [19054,]  369 #> [19055,]  369 #> [19056,]  370 #> [19057,]  370 #> [19058,]  369 #> [19059,]  370 #> [19060,]  370 #> [19061,]  370 #> [19062,]  369 #> [19063,]  370 #> [19064,]  370 #> [19065,]  370 #> [19066,]  369 #> [19067,]  369 #> [19068,]  369 #> [19069,]  369 #> [19070,]  370 #> [19071,]  370 #> [19072,]  370 #> [19073,]  370 #> [19074,]  369 #> [19075,]  370 #> [19076,]  370 #> [19077,]  370 #> [19078,]  370 #> [19079,]  369 #> [19080,]  369 #> [19081,]  369 #> [19082,]  369 #> [19083,]  369 #> [19084,]  370 #> [19085,]  369 #> [19086,]  370 #> [19087,]  369 #> [19088,]  369 #> [19089,]  369 #> [19090,]  369 #> [19091,]  369 #> [19092,]  369 #> [19093,]  370 #> [19094,]  370 #> [19095,]  369 #> [19096,]  369 #> [19097,]  370 #> [19098,]  370 #> [19099,]  369 #> [19100,]  370 #> [19101,]  371 #> [19102,]  372 #> [19103,]  371 #> [19104,]  371 #> [19105,]  371 #> [19106,]  371 #> [19107,]  371 #> [19108,]  371 #> [19109,]  372 #> [19110,]  372 #> [19111,]  371 #> [19112,]  372 #> [19113,]  371 #> [19114,]  371 #> [19115,]  371 #> [19116,]  371 #> [19117,]  371 #> [19118,]  371 #> [19119,]  371 #> [19120,]  371 #> [19121,]  372 #> [19122,]  371 #> [19123,]  371 #> [19124,]  371 #> [19125,]  371 #> [19126,]  371 #> [19127,]  371 #> [19128,]  371 #> [19129,]  372 #> [19130,]  371 #> [19131,]  371 #> [19132,]  371 #> [19133,]  372 #> [19134,]  371 #> [19135,]  371 #> [19136,]  371 #> [19137,]  371 #> [19138,]  371 #> [19139,]  371 #> [19140,]  371 #> [19141,]  371 #> [19142,]  371 #> [19143,]  371 #> [19144,]  371 #> [19145,]  371 #> [19146,]  371 #> [19147,]  371 #> [19148,]  371 #> [19149,]  371 #> [19150,]  371 #> [19151,]  371 #> [19152,]  371 #> [19153,]  371 #> [19154,]  371 #> [19155,]  371 #> [19156,]  371 #> [19157,]  371 #> [19158,]  371 #> [19159,]  371 #> [19160,]  371 #> [19161,]  371 #> [19162,]  371 #> [19163,]  371 #> [19164,]  371 #> [19165,]  371 #> [19166,]  371 #> [19167,]  371 #> [19168,]  371 #> [19169,]  371 #> [19170,]  371 #> [19171,]  371 #> [19172,]  371 #> [19173,]  371 #> [19174,]  371 #> [19175,]  371 #> [19176,]  371 #> [19177,]  371 #> [19178,]  371 #> [19179,]  371 #> [19180,]  371 #> [19181,]  371 #> [19182,]  371 #> [19183,]  371 #> [19184,]  371 #> [19185,]  371 #> [19186,]  372 #> [19187,]  371 #> [19188,]  371 #> [19189,]  371 #> [19190,]  371 #> [19191,]  371 #> [19192,]  371 #> [19193,]  371 #> [19194,]  371 #> [19195,]  371 #> [19196,]  371 #> [19197,]  371 #> [19198,]  371 #> [19199,]  371 #> [19200,]  371 #> [19201,]  374 #> [19202,]  374 #> [19203,]  373 #> [19204,]  373 #> [19205,]  373 #> [19206,]  373 #> [19207,]  374 #> [19208,]  374 #> [19209,]  373 #> [19210,]  373 #> [19211,]  373 #> [19212,]  374 #> [19213,]  374 #> [19214,]  373 #> [19215,]  374 #> [19216,]  374 #> [19217,]  374 #> [19218,]  374 #> [19219,]  374 #> [19220,]  374 #> [19221,]  373 #> [19222,]  374 #> [19223,]  374 #> [19224,]  373 #> [19225,]  373 #> [19226,]  374 #> [19227,]  374 #> [19228,]  373 #> [19229,]  374 #> [19230,]  374 #> [19231,]  373 #> [19232,]  373 #> [19233,]  374 #> [19234,]  373 #> [19235,]  373 #> [19236,]  374 #> [19237,]  374 #> [19238,]  374 #> [19239,]  373 #> [19240,]  373 #> [19241,]  374 #> [19242,]  373 #> [19243,]  374 #> [19244,]  374 #> [19245,]  374 #> [19246,]  374 #> [19247,]  373 #> [19248,]  373 #> [19249,]  374 #> [19250,]  374 #> [19251,]  374 #> [19252,]  373 #> [19253,]  374 #> [19254,]  373 #> [19255,]  374 #> [19256,]  374 #> [19257,]  373 #> [19258,]  374 #> [19259,]  374 #> [19260,]  374 #> [19261,]  374 #> [19262,]  373 #> [19263,]  374 #> [19264,]  374 #> [19265,]  373 #> [19266,]  374 #> [19267,]  374 #> [19268,]  374 #> [19269,]  374 #> [19270,]  373 #> [19271,]  374 #> [19272,]  373 #> [19273,]  373 #> [19274,]  373 #> [19275,]  374 #> [19276,]  373 #> [19277,]  374 #> [19278,]  374 #> [19279,]  373 #> [19280,]  374 #> [19281,]  374 #> [19282,]  373 #> [19283,]  374 #> [19284,]  374 #> [19285,]  374 #> [19286,]  374 #> [19287,]  374 #> [19288,]  374 #> [19289,]  374 #> [19290,]  374 #> [19291,]  373 #> [19292,]  374 #> [19293,]  374 #> [19294,]  374 #> [19295,]  374 #> [19296,]  374 #> [19297,]  374 #> [19298,]  373 #> [19299,]  374 #> [19300,]  374 #> [19301,]  375 #> [19302,]  375 #> [19303,]  375 #> [19304,]  375 #> [19305,]  375 #> [19306,]  375 #> [19307,]  375 #> [19308,]  376 #> [19309,]  375 #> [19310,]  375 #> [19311,]  375 #> [19312,]  375 #> [19313,]  376 #> [19314,]  375 #> [19315,]  376 #> [19316,]  375 #> [19317,]  375 #> [19318,]  375 #> [19319,]  376 #> [19320,]  376 #> [19321,]  375 #> [19322,]  376 #> [19323,]  375 #> [19324,]  375 #> [19325,]  375 #> [19326,]  375 #> [19327,]  376 #> [19328,]  375 #> [19329,]  376 #> [19330,]  375 #> [19331,]  375 #> [19332,]  375 #> [19333,]  375 #> [19334,]  375 #> [19335,]  375 #> [19336,]  376 #> [19337,]  376 #> [19338,]  376 #> [19339,]  375 #> [19340,]  375 #> [19341,]  376 #> [19342,]  375 #> [19343,]  375 #> [19344,]  375 #> [19345,]  375 #> [19346,]  376 #> [19347,]  375 #> [19348,]  375 #> [19349,]  375 #> [19350,]  376 #> [19351,]  376 #> [19352,]  375 #> [19353,]  376 #> [19354,]  375 #> [19355,]  376 #> [19356,]  375 #> [19357,]  375 #> [19358,]  376 #> [19359,]  375 #> [19360,]  376 #> [19361,]  375 #> [19362,]  375 #> [19363,]  375 #> [19364,]  376 #> [19365,]  375 #> [19366,]  376 #> [19367,]  375 #> [19368,]  375 #> [19369,]  376 #> [19370,]  375 #> [19371,]  376 #> [19372,]  375 #> [19373,]  375 #> [19374,]  375 #> [19375,]  375 #> [19376,]  375 #> [19377,]  376 #> [19378,]  375 #> [19379,]  375 #> [19380,]  376 #> [19381,]  376 #> [19382,]  375 #> [19383,]  376 #> [19384,]  376 #> [19385,]  376 #> [19386,]  375 #> [19387,]  376 #> [19388,]  375 #> [19389,]  375 #> [19390,]  376 #> [19391,]  375 #> [19392,]  375 #> [19393,]  375 #> [19394,]  375 #> [19395,]  375 #> [19396,]  376 #> [19397,]  376 #> [19398,]  375 #> [19399,]  375 #> [19400,]  376 #> [19401,]  378 #> [19402,]  377 #> [19403,]  378 #> [19404,]  378 #> [19405,]  378 #> [19406,]  377 #> [19407,]  378 #> [19408,]  378 #> [19409,]  378 #> [19410,]  378 #> [19411,]  377 #> [19412,]  377 #> [19413,]  378 #> [19414,]  378 #> [19415,]  377 #> [19416,]  378 #> [19417,]  377 #> [19418,]  377 #> [19419,]  377 #> [19420,]  378 #> [19421,]  377 #> [19422,]  378 #> [19423,]  377 #> [19424,]  378 #> [19425,]  378 #> [19426,]  377 #> [19427,]  378 #> [19428,]  378 #> [19429,]  377 #> [19430,]  377 #> [19431,]  377 #> [19432,]  377 #> [19433,]  378 #> [19434,]  377 #> [19435,]  377 #> [19436,]  378 #> [19437,]  377 #> [19438,]  377 #> [19439,]  378 #> [19440,]  377 #> [19441,]  378 #> [19442,]  377 #> [19443,]  377 #> [19444,]  377 #> [19445,]  378 #> [19446,]  377 #> [19447,]  377 #> [19448,]  377 #> [19449,]  378 #> [19450,]  378 #> [19451,]  377 #> [19452,]  378 #> [19453,]  378 #> [19454,]  378 #> [19455,]  378 #> [19456,]  377 #> [19457,]  378 #> [19458,]  378 #> [19459,]  378 #> [19460,]  377 #> [19461,]  377 #> [19462,]  377 #> [19463,]  377 #> [19464,]  377 #> [19465,]  377 #> [19466,]  377 #> [19467,]  378 #> [19468,]  377 #> [19469,]  377 #> [19470,]  377 #> [19471,]  378 #> [19472,]  378 #> [19473,]  378 #> [19474,]  378 #> [19475,]  377 #> [19476,]  378 #> [19477,]  378 #> [19478,]  377 #> [19479,]  377 #> [19480,]  378 #> [19481,]  377 #> [19482,]  377 #> [19483,]  377 #> [19484,]  378 #> [19485,]  378 #> [19486,]  378 #> [19487,]  378 #> [19488,]  378 #> [19489,]  377 #> [19490,]  378 #> [19491,]  378 #> [19492,]  377 #> [19493,]  377 #> [19494,]  377 #> [19495,]  377 #> [19496,]  377 #> [19497,]  377 #> [19498,]  377 #> [19499,]  377 #> [19500,]  377 #> [19501,]  379 #> [19502,]  380 #> [19503,]  380 #> [19504,]  379 #> [19505,]  379 #> [19506,]  380 #> [19507,]  380 #> [19508,]  379 #> [19509,]  379 #> [19510,]  379 #> [19511,]  379 #> [19512,]  380 #> [19513,]  379 #> [19514,]  379 #> [19515,]  379 #> [19516,]  379 #> [19517,]  379 #> [19518,]  380 #> [19519,]  380 #> [19520,]  380 #> [19521,]  379 #> [19522,]  379 #> [19523,]  380 #> [19524,]  379 #> [19525,]  380 #> [19526,]  379 #> [19527,]  379 #> [19528,]  380 #> [19529,]  380 #> [19530,]  379 #> [19531,]  380 #> [19532,]  380 #> [19533,]  380 #> [19534,]  380 #> [19535,]  379 #> [19536,]  379 #> [19537,]  379 #> [19538,]  379 #> [19539,]  379 #> [19540,]  380 #> [19541,]  379 #> [19542,]  380 #> [19543,]  379 #> [19544,]  379 #> [19545,]  379 #> [19546,]  379 #> [19547,]  379 #> [19548,]  380 #> [19549,]  379 #> [19550,]  379 #> [19551,]  379 #> [19552,]  379 #> [19553,]  379 #> [19554,]  379 #> [19555,]  379 #> [19556,]  380 #> [19557,]  380 #> [19558,]  379 #> [19559,]  379 #> [19560,]  380 #> [19561,]  380 #> [19562,]  379 #> [19563,]  379 #> [19564,]  380 #> [19565,]  380 #> [19566,]  379 #> [19567,]  379 #> [19568,]  379 #> [19569,]  379 #> [19570,]  380 #> [19571,]  380 #> [19572,]  379 #> [19573,]  380 #> [19574,]  379 #> [19575,]  380 #> [19576,]  379 #> [19577,]  380 #> [19578,]  380 #> [19579,]  379 #> [19580,]  379 #> [19581,]  379 #> [19582,]  379 #> [19583,]  379 #> [19584,]  380 #> [19585,]  379 #> [19586,]  380 #> [19587,]  379 #> [19588,]  379 #> [19589,]  379 #> [19590,]  379 #> [19591,]  379 #> [19592,]  379 #> [19593,]  380 #> [19594,]  379 #> [19595,]  379 #> [19596,]  379 #> [19597,]  380 #> [19598,]  380 #> [19599,]  379 #> [19600,]  380 #> [19601,]  382 #> [19602,]  381 #> [19603,]  382 #> [19604,]  382 #> [19605,]  382 #> [19606,]  381 #> [19607,]  382 #> [19608,]  382 #> [19609,]  382 #> [19610,]  382 #> [19611,]  381 #> [19612,]  381 #> [19613,]  382 #> [19614,]  382 #> [19615,]  381 #> [19616,]  382 #> [19617,]  381 #> [19618,]  381 #> [19619,]  381 #> [19620,]  382 #> [19621,]  381 #> [19622,]  382 #> [19623,]  381 #> [19624,]  382 #> [19625,]  382 #> [19626,]  381 #> [19627,]  382 #> [19628,]  382 #> [19629,]  381 #> [19630,]  381 #> [19631,]  381 #> [19632,]  381 #> [19633,]  382 #> [19634,]  381 #> [19635,]  381 #> [19636,]  382 #> [19637,]  381 #> [19638,]  381 #> [19639,]  382 #> [19640,]  382 #> [19641,]  382 #> [19642,]  381 #> [19643,]  381 #> [19644,]  381 #> [19645,]  382 #> [19646,]  381 #> [19647,]  381 #> [19648,]  381 #> [19649,]  382 #> [19650,]  382 #> [19651,]  381 #> [19652,]  382 #> [19653,]  382 #> [19654,]  382 #> [19655,]  382 #> [19656,]  381 #> [19657,]  382 #> [19658,]  382 #> [19659,]  382 #> [19660,]  381 #> [19661,]  381 #> [19662,]  381 #> [19663,]  381 #> [19664,]  381 #> [19665,]  381 #> [19666,]  381 #> [19667,]  382 #> [19668,]  381 #> [19669,]  381 #> [19670,]  381 #> [19671,]  382 #> [19672,]  382 #> [19673,]  382 #> [19674,]  382 #> [19675,]  381 #> [19676,]  382 #> [19677,]  382 #> [19678,]  381 #> [19679,]  381 #> [19680,]  382 #> [19681,]  381 #> [19682,]  381 #> [19683,]  381 #> [19684,]  382 #> [19685,]  382 #> [19686,]  382 #> [19687,]  382 #> [19688,]  382 #> [19689,]  381 #> [19690,]  382 #> [19691,]  382 #> [19692,]  381 #> [19693,]  381 #> [19694,]  381 #> [19695,]  381 #> [19696,]  381 #> [19697,]  381 #> [19698,]  381 #> [19699,]  382 #> [19700,]  381 #> [19701,]  384 #> [19702,]  383 #> [19703,]  383 #> [19704,]  383 #> [19705,]  383 #> [19706,]  384 #> [19707,]  383 #> [19708,]  383 #> [19709,]  383 #> [19710,]  383 #> [19711,]  383 #> [19712,]  383 #> [19713,]  384 #> [19714,]  384 #> [19715,]  384 #> [19716,]  384 #> [19717,]  384 #> [19718,]  383 #> [19719,]  383 #> [19720,]  383 #> [19721,]  384 #> [19722,]  383 #> [19723,]  383 #> [19724,]  383 #> [19725,]  383 #> [19726,]  383 #> [19727,]  383 #> [19728,]  383 #> [19729,]  384 #> [19730,]  383 #> [19731,]  383 #> [19732,]  383 #> [19733,]  384 #> [19734,]  383 #> [19735,]  383 #> [19736,]  383 #> [19737,]  383 #> [19738,]  383 #> [19739,]  383 #> [19740,]  383 #> [19741,]  384 #> [19742,]  383 #> [19743,]  383 #> [19744,]  384 #> [19745,]  383 #> [19746,]  383 #> [19747,]  383 #> [19748,]  383 #> [19749,]  383 #> [19750,]  384 #> [19751,]  383 #> [19752,]  383 #> [19753,]  383 #> [19754,]  383 #> [19755,]  383 #> [19756,]  383 #> [19757,]  383 #> [19758,]  383 #> [19759,]  384 #> [19760,]  383 #> [19761,]  384 #> [19762,]  383 #> [19763,]  383 #> [19764,]  383 #> [19765,]  383 #> [19766,]  383 #> [19767,]  383 #> [19768,]  384 #> [19769,]  383 #> [19770,]  384 #> [19771,]  383 #> [19772,]  383 #> [19773,]  384 #> [19774,]  383 #> [19775,]  383 #> [19776,]  384 #> [19777,]  383 #> [19778,]  383 #> [19779,]  383 #> [19780,]  383 #> [19781,]  384 #> [19782,]  383 #> [19783,]  384 #> [19784,]  383 #> [19785,]  383 #> [19786,]  384 #> [19787,]  383 #> [19788,]  383 #> [19789,]  383 #> [19790,]  383 #> [19791,]  383 #> [19792,]  383 #> [19793,]  384 #> [19794,]  383 #> [19795,]  383 #> [19796,]  384 #> [19797,]  383 #> [19798,]  383 #> [19799,]  384 #> [19800,]  383 #> [19801,]  386 #> [19802,]  386 #> [19803,]  385 #> [19804,]  386 #> [19805,]  386 #> [19806,]  386 #> [19807,]  385 #> [19808,]  385 #> [19809,]  386 #> [19810,]  386 #> [19811,]  386 #> [19812,]  386 #> [19813,]  385 #> [19814,]  386 #> [19815,]  386 #> [19816,]  385 #> [19817,]  385 #> [19818,]  386 #> [19819,]  386 #> [19820,]  385 #> [19821,]  386 #> [19822,]  385 #> [19823,]  386 #> [19824,]  385 #> [19825,]  385 #> [19826,]  386 #> [19827,]  386 #> [19828,]  386 #> [19829,]  386 #> [19830,]  386 #> [19831,]  386 #> [19832,]  386 #> [19833,]  386 #> [19834,]  386 #> [19835,]  386 #> [19836,]  386 #> [19837,]  386 #> [19838,]  386 #> [19839,]  385 #> [19840,]  385 #> [19841,]  386 #> [19842,]  386 #> [19843,]  385 #> [19844,]  385 #> [19845,]  385 #> [19846,]  385 #> [19847,]  385 #> [19848,]  386 #> [19849,]  385 #> [19850,]  385 #> [19851,]  386 #> [19852,]  386 #> [19853,]  385 #> [19854,]  385 #> [19855,]  385 #> [19856,]  385 #> [19857,]  386 #> [19858,]  386 #> [19859,]  385 #> [19860,]  386 #> [19861,]  386 #> [19862,]  386 #> [19863,]  385 #> [19864,]  386 #> [19865,]  385 #> [19866,]  385 #> [19867,]  386 #> [19868,]  386 #> [19869,]  386 #> [19870,]  385 #> [19871,]  386 #> [19872,]  385 #> [19873,]  386 #> [19874,]  386 #> [19875,]  386 #> [19876,]  386 #> [19877,]  385 #> [19878,]  385 #> [19879,]  385 #> [19880,]  386 #> [19881,]  386 #> [19882,]  386 #> [19883,]  386 #> [19884,]  385 #> [19885,]  386 #> [19886,]  385 #> [19887,]  386 #> [19888,]  386 #> [19889,]  385 #> [19890,]  385 #> [19891,]  386 #> [19892,]  386 #> [19893,]  386 #> [19894,]  385 #> [19895,]  386 #> [19896,]  386 #> [19897,]  386 #> [19898,]  385 #> [19899,]  386 #> [19900,]  385 #> [19901,]  388 #> [19902,]  388 #> [19903,]  388 #> [19904,]  387 #> [19905,]  388 #> [19906,]  388 #> [19907,]  388 #> [19908,]  387 #> [19909,]  387 #> [19910,]  387 #> [19911,]  388 #> [19912,]  388 #> [19913,]  388 #> [19914,]  388 #> [19915,]  388 #> [19916,]  388 #> [19917,]  388 #> [19918,]  387 #> [19919,]  388 #> [19920,]  387 #> [19921,]  388 #> [19922,]  388 #> [19923,]  388 #> [19924,]  388 #> [19925,]  388 #> [19926,]  388 #> [19927,]  388 #> [19928,]  388 #> [19929,]  388 #> [19930,]  387 #> [19931,]  388 #> [19932,]  388 #> [19933,]  388 #> [19934,]  388 #> [19935,]  388 #> [19936,]  388 #> [19937,]  388 #> [19938,]  388 #> [19939,]  387 #> [19940,]  388 #> [19941,]  388 #> [19942,]  388 #> [19943,]  387 #> [19944,]  388 #> [19945,]  387 #> [19946,]  388 #> [19947,]  388 #> [19948,]  388 #> [19949,]  387 #> [19950,]  388 #> [19951,]  387 #> [19952,]  388 #> [19953,]  387 #> [19954,]  388 #> [19955,]  388 #> [19956,]  387 #> [19957,]  388 #> [19958,]  388 #> [19959,]  388 #> [19960,]  387 #> [19961,]  388 #> [19962,]  388 #> [19963,]  388 #> [19964,]  387 #> [19965,]  387 #> [19966,]  387 #> [19967,]  387 #> [19968,]  388 #> [19969,]  388 #> [19970,]  388 #> [19971,]  388 #> [19972,]  388 #> [19973,]  388 #> [19974,]  388 #> [19975,]  388 #> [19976,]  388 #> [19977,]  388 #> [19978,]  387 #> [19979,]  388 #> [19980,]  388 #> [19981,]  388 #> [19982,]  388 #> [19983,]  388 #> [19984,]  388 #> [19985,]  387 #> [19986,]  388 #> [19987,]  388 #> [19988,]  388 #> [19989,]  387 #> [19990,]  388 #> [19991,]  387 #> [19992,]  388 #> [19993,]  388 #> [19994,]  388 #> [19995,]  387 #> [19996,]  388 #> [19997,]  388 #> [19998,]  388 #> [19999,]  388 #> [20000,]  388 computeForestLeafIndices(bart_model, X, \"mean\", c(1,3,9)) #>          [,1] [,2] [,3] #>     [1,]    1    1    1 #>     [2,]    0    0    0 #>     [3,]    1    1    1 #>     [4,]    1    1    1 #>     [5,]    1    1    1 #>     [6,]    0    0    0 #>     [7,]    1    1    1 #>     [8,]    1    1    1 #>     [9,]    1    1    1 #>    [10,]    1    1    1 #>    [11,]    0    0    0 #>    [12,]    0    0    0 #>    [13,]    1    1    1 #>    [14,]    1    1    1 #>    [15,]    0    0    0 #>    [16,]    1    1    1 #>    [17,]    0    0    0 #>    [18,]    0    0    0 #>    [19,]    0    0    0 #>    [20,]    1    1    1 #>    [21,]    0    0    0 #>    [22,]    1    1    1 #>    [23,]    0    0    0 #>    [24,]    1    1    1 #>    [25,]    1    1    1 #>    [26,]    0    0    0 #>    [27,]    1    1    1 #>    [28,]    1    1    1 #>    [29,]    0    0    0 #>    [30,]    0    0    0 #>    [31,]    0    0    0 #>    [32,]    0    0    0 #>    [33,]    1    1    1 #>    [34,]    0    0    0 #>    [35,]    0    0    0 #>    [36,]    1    1    1 #>    [37,]    0    0    0 #>    [38,]    1    1    1 #>    [39,]    1    1    1 #>    [40,]    1    1    1 #>    [41,]    1    1    1 #>    [42,]    0    0    0 #>    [43,]    0    0    0 #>    [44,]    0    0    0 #>    [45,]    1    1    1 #>    [46,]    0    0    0 #>    [47,]    0    0    0 #>    [48,]    0    0    0 #>    [49,]    1    1    1 #>    [50,]    1    1    1 #>    [51,]    0    0    0 #>    [52,]    1    1    1 #>    [53,]    1    1    1 #>    [54,]    1    1    1 #>    [55,]    1    1    1 #>    [56,]    0    0    0 #>    [57,]    1    1    1 #>    [58,]    1    1    1 #>    [59,]    1    1    1 #>    [60,]    0    0    0 #>    [61,]    0    0    0 #>    [62,]    0    0    0 #>    [63,]    0    0    0 #>    [64,]    0    0    0 #>    [65,]    0    0    0 #>    [66,]    0    0    0 #>    [67,]    1    1    1 #>    [68,]    0    0    0 #>    [69,]    0    0    0 #>    [70,]    0    0    0 #>    [71,]    1    1    1 #>    [72,]    1    1    1 #>    [73,]    1    1    1 #>    [74,]    1    1    1 #>    [75,]    0    0    0 #>    [76,]    1    1    1 #>    [77,]    1    1    1 #>    [78,]    0    0    0 #>    [79,]    0    0    0 #>    [80,]    1    1    1 #>    [81,]    0    0    0 #>    [82,]    0    0    0 #>    [83,]    1    1    1 #>    [84,]    1    1    1 #>    [85,]    1    1    1 #>    [86,]    1    1    1 #>    [87,]    1    1    1 #>    [88,]    1    1    1 #>    [89,]    0    0    0 #>    [90,]    1    1    1 #>    [91,]    1    1    1 #>    [92,]    0    0    0 #>    [93,]    0    0    0 #>    [94,]    0    0    0 #>    [95,]    0    0    0 #>    [96,]    0    0    0 #>    [97,]    0    0    0 #>    [98,]    0    0    0 #>    [99,]    1    1    1 #>   [100,]    0    0    0 #>   [101,]    3    3    3 #>   [102,]    2    2    2 #>   [103,]    2    2    2 #>   [104,]    2    2    2 #>   [105,]    3    3    3 #>   [106,]    3    3    3 #>   [107,]    2    2    2 #>   [108,]    3    3    3 #>   [109,]    3    3    3 #>   [110,]    2    2    2 #>   [111,]    2    2    2 #>   [112,]    3    3    3 #>   [113,]    2    2    2 #>   [114,]    3    3    3 #>   [115,]    3    3    3 #>   [116,]    2    2    2 #>   [117,]    2    2    2 #>   [118,]    2    2    2 #>   [119,]    2    2    2 #>   [120,]    3    3    3 #>   [121,]    2    2    2 #>   [122,]    2    2    2 #>   [123,]    2    2    2 #>   [124,]    2    2    2 #>   [125,]    2    2    2 #>   [126,]    3    3    3 #>   [127,]    2    2    2 #>   [128,]    2    2    2 #>   [129,]    2    2    2 #>   [130,]    2    2    2 #>   [131,]    2    2    2 #>   [132,]    2    2    2 #>   [133,]    3    3    3 #>   [134,]    2    2    2 #>   [135,]    2    2    2 #>   [136,]    2    2    2 #>   [137,]    2    2    2 #>   [138,]    2    2    2 #>   [139,]    2    2    2 #>   [140,]    2    2    2 #>   [141,]    2    2    2 #>   [142,]    2    2    2 #>   [143,]    3    3    3 #>   [144,]    2    2    2 #>   [145,]    3    3    3 #>   [146,]    3    3    3 #>   [147,]    2    2    2 #>   [148,]    2    2    2 #>   [149,]    2    2    2 #>   [150,]    3    3    3 #>   [151,]    3    3    3 #>   [152,]    2    2    2 #>   [153,]    3    3    3 #>   [154,]    2    2    2 #>   [155,]    3    3    3 #>   [156,]    3    3    3 #>   [157,]    3    3    3 #>   [158,]    3    3    3 #>   [159,]    2    2    2 #>   [160,]    3    3    3 #>   [161,]    3    3    3 #>   [162,]    2    2    2 #>   [163,]    2    2    2 #>   [164,]    3    3    3 #>   [165,]    3    3    3 #>   [166,]    3    3    3 #>   [167,]    2    2    2 #>   [168,]    3    3    3 #>   [169,]    2    2    2 #>   [170,]    2    2    2 #>   [171,]    3    3    3 #>   [172,]    3    3    3 #>   [173,]    3    3    3 #>   [174,]    3    3    3 #>   [175,]    3    3    3 #>   [176,]    3    3    3 #>   [177,]    2    2    2 #>   [178,]    3    3    3 #>   [179,]    2    2    2 #>   [180,]    2    2    2 #>   [181,]    3    3    3 #>   [182,]    2    2    2 #>   [183,]    2    2    2 #>   [184,]    2    2    2 #>   [185,]    2    2    2 #>   [186,]    2    2    2 #>   [187,]    2    2    2 #>   [188,]    2    2    2 #>   [189,]    2    2    2 #>   [190,]    2    2    2 #>   [191,]    2    2    2 #>   [192,]    3    3    3 #>   [193,]    2    2    2 #>   [194,]    3    3    3 #>   [195,]    2    2    2 #>   [196,]    3    3    3 #>   [197,]    3    3    3 #>   [198,]    2    2    2 #>   [199,]    2    2    2 #>   [200,]    2    2    2 #>   [201,]    4    4    4 #>   [202,]    4    4    4 #>   [203,]    5    5    5 #>   [204,]    4    4    4 #>   [205,]    4    4    4 #>   [206,]    5    5    5 #>   [207,]    4    4    4 #>   [208,]    4    4    4 #>   [209,]    4    4    4 #>   [210,]    4    4    4 #>   [211,]    4    4    4 #>   [212,]    4    4    4 #>   [213,]    4    4    4 #>   [214,]    4    4    4 #>   [215,]    4    4    4 #>   [216,]    4    4    4 #>   [217,]    4    4    4 #>   [218,]    4    4    4 #>   [219,]    4    4    4 #>   [220,]    4    4    4 #>   [221,]    4    4    4 #>   [222,]    4    4    4 #>   [223,]    4    4    4 #>   [224,]    4    4    4 #>   [225,]    4    4    4 #>   [226,]    4    4    4 #>   [227,]    4    4    4 #>   [228,]    4    4    4 #>   [229,]    4    4    4 #>   [230,]    4    4    4 #>   [231,]    4    4    4 #>   [232,]    4    4    4 #>   [233,]    4    4    4 #>   [234,]    5    5    5 #>   [235,]    4    4    4 #>   [236,]    4    4    4 #>   [237,]    4    4    4 #>   [238,]    4    4    4 #>   [239,]    4    4    4 #>   [240,]    4    4    4 #>   [241,]    4    4    4 #>   [242,]    4    4    4 #>   [243,]    4    4    4 #>   [244,]    4    4    4 #>   [245,]    4    4    4 #>   [246,]    4    4    4 #>   [247,]    4    4    4 #>   [248,]    4    4    4 #>   [249,]    4    4    4 #>   [250,]    4    4    4 #>   [251,]    4    4    4 #>   [252,]    4    4    4 #>   [253,]    4    4    4 #>   [254,]    4    4    4 #>   [255,]    4    4    4 #>   [256,]    4    4    4 #>   [257,]    4    4    4 #>   [258,]    4    4    4 #>   [259,]    4    4    4 #>   [260,]    5    5    5 #>   [261,]    4    4    4 #>   [262,]    4    4    4 #>   [263,]    4    4    4 #>   [264,]    4    4    4 #>   [265,]    5    5    5 #>   [266,]    4    4    4 #>   [267,]    4    4    4 #>   [268,]    4    4    4 #>   [269,]    4    4    4 #>   [270,]    4    4    4 #>   [271,]    4    4    4 #>   [272,]    4    4    4 #>   [273,]    4    4    4 #>   [274,]    4    4    4 #>   [275,]    4    4    4 #>   [276,]    4    4    4 #>   [277,]    4    4    4 #>   [278,]    4    4    4 #>   [279,]    4    4    4 #>   [280,]    4    4    4 #>   [281,]    4    4    4 #>   [282,]    4    4    4 #>   [283,]    4    4    4 #>   [284,]    4    4    4 #>   [285,]    4    4    4 #>   [286,]    4    4    4 #>   [287,]    4    4    4 #>   [288,]    4    4    4 #>   [289,]    4    4    4 #>   [290,]    4    4    4 #>   [291,]    4    4    4 #>   [292,]    4    4    4 #>   [293,]    5    5    5 #>   [294,]    4    4    4 #>   [295,]    4    4    4 #>   [296,]    4    4    4 #>   [297,]    4    4    4 #>   [298,]    4    4    4 #>   [299,]    4    4    4 #>   [300,]    4    4    4 #>   [301,]    7    8    9 #>   [302,]    7    8    8 #>   [303,]    7    7    8 #>   [304,]    7    8    9 #>   [305,]    7    8    8 #>   [306,]    7    8    8 #>   [307,]    6    6    7 #>   [308,]    7    7    9 #>   [309,]    7    8    8 #>   [310,]    7    8    9 #>   [311,]    7    8    8 #>   [312,]    7    8    8 #>   [313,]    7    7    9 #>   [314,]    7    8    8 #>   [315,]    7    8    9 #>   [316,]    7    7    9 #>   [317,]    7    7    9 #>   [318,]    7    8    9 #>   [319,]    7    8    8 #>   [320,]    7    7    8 #>   [321,]    6    6    7 #>   [322,]    7    7    8 #>   [323,]    7    8    9 #>   [324,]    7    7    8 #>   [325,]    7    7    9 #>   [326,]    7    8    8 #>   [327,]    7    8    9 #>   [328,]    7    8    9 #>   [329,]    7    8    8 #>   [330,]    6    6    6 #>   [331,]    7    8    8 #>   [332,]    7    8    8 #>   [333,]    7    8    8 #>   [334,]    7    8    8 #>   [335,]    7    8    8 #>   [336,]    7    8    8 #>   [337,]    7    8    8 #>   [338,]    7    8    8 #>   [339,]    6    6    7 #>   [340,]    7    7    8 #>   [341,]    7    8    8 #>   [342,]    7    8    8 #>   [343,]    7    8    9 #>   [344,]    7    7    8 #>   [345,]    7    7    9 #>   [346,]    7    7    9 #>   [347,]    7    7    9 #>   [348,]    7    8    8 #>   [349,]    6    6    6 #>   [350,]    7    7    8 #>   [351,]    7    8    8 #>   [352,]    7    8    8 #>   [353,]    7    7    9 #>   [354,]    6    6    6 #>   [355,]    7    7    8 #>   [356,]    7    7    9 #>   [357,]    7    8    8 #>   [358,]    7    8    8 #>   [359,]    7    7    8 #>   [360,]    7    8    8 #>   [361,]    7    8    9 #>   [362,]    6    6    6 #>   [363,]    7    7    8 #>   [364,]    7    8    9 #>   [365,]    7    7    8 #>   [366,]    7    7    8 #>   [367,]    7    8    8 #>   [368,]    7    8    8 #>   [369,]    7    8    8 #>   [370,]    6    6    7 #>   [371,]    7    8    9 #>   [372,]    7    7    9 #>   [373,]    7    8    9 #>   [374,]    7    8    9 #>   [375,]    7    8    9 #>   [376,]    7    8    9 #>   [377,]    7    8    9 #>   [378,]    7    7    8 #>   [379,]    7    8    8 #>   [380,]    6    6    6 #>   [381,]    7    8    8 #>   [382,]    7    8    9 #>   [383,]    7    8    8 #>   [384,]    7    7    9 #>   [385,]    7    8    8 #>   [386,]    7    7    8 #>   [387,]    7    8    8 #>   [388,]    7    8    9 #>   [389,]    7    7    8 #>   [390,]    7    7    8 #>   [391,]    7    8    8 #>   [392,]    7    8    8 #>   [393,]    7    8    8 #>   [394,]    7    7    9 #>   [395,]    6    6    7 #>   [396,]    7    8    8 #>   [397,]    7    8    8 #>   [398,]    6    6    6 #>   [399,]    7    8    8 #>   [400,]    7    7    9 #>   [401,]    9   10   11 #>   [402,]    8    9   10 #>   [403,]    8    9   10 #>   [404,]    9   10   11 #>   [405,]    9   10   11 #>   [406,]    9   10   11 #>   [407,]    8    9   10 #>   [408,]    9   10   11 #>   [409,]    9   11   11 #>   [410,]    8    9   10 #>   [411,]    9   10   11 #>   [412,]    9   11   11 #>   [413,]    8    9   10 #>   [414,]    9   10   11 #>   [415,]    9   10   11 #>   [416,]    8    9   10 #>   [417,]    8    9   10 #>   [418,]    8    9   10 #>   [419,]    8    9   10 #>   [420,]    9   10   11 #>   [421,]    8    9   10 #>   [422,]    8    9   10 #>   [423,]    8    9   10 #>   [424,]    8    9   10 #>   [425,]    8    9   10 #>   [426,]    9   10   11 #>   [427,]    8    9   10 #>   [428,]    9   10   11 #>   [429,]    8    9   10 #>   [430,]    8    9   10 #>   [431,]    8    9   10 #>   [432,]    8    9   10 #>   [433,]    9   11   11 #>   [434,]    8    9   10 #>   [435,]    8    9   10 #>   [436,]    8    9   10 #>   [437,]    8    9   10 #>   [438,]    9   10   11 #>   [439,]    8    9   10 #>   [440,]    8    9   10 #>   [441,]    9   10   11 #>   [442,]    9   10   11 #>   [443,]    9   10   11 #>   [444,]    8    9   10 #>   [445,]    9   10   11 #>   [446,]    9   10   11 #>   [447,]    8    9   10 #>   [448,]    8    9   10 #>   [449,]    8    9   10 #>   [450,]    9   10   11 #>   [451,]    9   10   11 #>   [452,]    9   10   11 #>   [453,]    9   11   11 #>   [454,]    8    9   10 #>   [455,]    9   10   11 #>   [456,]    9   10   11 #>   [457,]    9   10   11 #>   [458,]    9   10   11 #>   [459,]    8    9   10 #>   [460,]    9   11   11 #>   [461,]    9   10   11 #>   [462,]    8    9   10 #>   [463,]    9   11   11 #>   [464,]    9   10   11 #>   [465,]    9   10   11 #>   [466,]    9   10   11 #>   [467,]    9   10   11 #>   [468,]    9   10   11 #>   [469,]    8    9   10 #>   [470,]    8    9   10 #>   [471,]    9   10   11 #>   [472,]    9   10   11 #>   [473,]    9   10   11 #>   [474,]    9   10   11 #>   [475,]    9   11   11 #>   [476,]    9   10   11 #>   [477,]    8    9   10 #>   [478,]    9   10   11 #>   [479,]    8    9   10 #>   [480,]    8    9   10 #>   [481,]    9   11   11 #>   [482,]    8    9   10 #>   [483,]    8    9   10 #>   [484,]    9   10   11 #>   [485,]    8    9   10 #>   [486,]    8    9   10 #>   [487,]    9   10   11 #>   [488,]    9   10   11 #>   [489,]    9   10   11 #>   [490,]    9   10   11 #>   [491,]    9   10   11 #>   [492,]    9   10   11 #>   [493,]    8    9   10 #>   [494,]    9   10   11 #>   [495,]    8    9   10 #>   [496,]    9   10   11 #>   [497,]    9   10   11 #>   [498,]    8    9   10 #>   [499,]    8    9   10 #>   [500,]    8    9   10 #>   [501,]   10   12   12 #>   [502,]   10   12   12 #>   [503,]   11   13   13 #>   [504,]   10   12   12 #>   [505,]   10   12   12 #>   [506,]   11   13   13 #>   [507,]   10   12   12 #>   [508,]   10   12   12 #>   [509,]   10   12   12 #>   [510,]   10   12   12 #>   [511,]   10   12   12 #>   [512,]   10   12   12 #>   [513,]   10   12   12 #>   [514,]   10   12   12 #>   [515,]   10   12   12 #>   [516,]   10   12   12 #>   [517,]   10   12   12 #>   [518,]   10   12   12 #>   [519,]   11   13   13 #>   [520,]   10   12   12 #>   [521,]   10   12   12 #>   [522,]   10   12   12 #>   [523,]   10   12   12 #>   [524,]   10   12   12 #>   [525,]   11   13   13 #>   [526,]   10   12   12 #>   [527,]   10   12   12 #>   [528,]   10   12   12 #>   [529,]   10   12   12 #>   [530,]   10   12   12 #>   [531,]   10   12   12 #>   [532,]   10   12   12 #>   [533,]   10   12   12 #>   [534,]   11   13   13 #>   [535,]   10   12   12 #>   [536,]   10   12   12 #>   [537,]   10   12   12 #>   [538,]   10   12   12 #>   [539,]   10   12   12 #>   [540,]   10   12   12 #>   [541,]   10   12   12 #>   [542,]   10   12   12 #>   [543,]   10   12   12 #>   [544,]   10   12   12 #>   [545,]   10   12   12 #>   [546,]   10   12   12 #>   [547,]   10   12   12 #>   [548,]   10   12   12 #>   [549,]   10   12   12 #>   [550,]   10   12   12 #>   [551,]   10   12   12 #>   [552,]   10   12   12 #>   [553,]   10   12   12 #>   [554,]   10   12   12 #>   [555,]   10   12   12 #>   [556,]   10   12   12 #>   [557,]   10   12   12 #>   [558,]   10   12   12 #>   [559,]   10   12   12 #>   [560,]   11   13   13 #>   [561,]   10   12   12 #>   [562,]   10   12   12 #>   [563,]   10   12   12 #>   [564,]   10   12   12 #>   [565,]   11   13   13 #>   [566,]   10   12   12 #>   [567,]   10   12   12 #>   [568,]   10   12   12 #>   [569,]   10   12   12 #>   [570,]   11   13   13 #>   [571,]   10   12   12 #>   [572,]   10   12   12 #>   [573,]   11   13   13 #>   [574,]   10   12   12 #>   [575,]   10   12   12 #>   [576,]   10   12   12 #>   [577,]   10   12   12 #>   [578,]   10   12   12 #>   [579,]   10   12   12 #>   [580,]   10   12   12 #>   [581,]   10   12   12 #>   [582,]   10   12   12 #>   [583,]   10   12   12 #>   [584,]   10   12   12 #>   [585,]   10   12   12 #>   [586,]   10   12   12 #>   [587,]   10   12   12 #>   [588,]   10   12   12 #>   [589,]   10   12   12 #>   [590,]   10   12   12 #>   [591,]   10   12   12 #>   [592,]   10   12   12 #>   [593,]   11   13   13 #>   [594,]   10   12   12 #>   [595,]   10   12   12 #>   [596,]   10   12   12 #>   [597,]   10   12   12 #>   [598,]   10   12   12 #>   [599,]   10   12   12 #>   [600,]   10   12   12 #>   [601,]   13   15   15 #>   [602,]   13   15   15 #>   [603,]   13   15   15 #>   [604,]   12   14   14 #>   [605,]   13   15   15 #>   [606,]   13   15   15 #>   [607,]   13   15   15 #>   [608,]   12   14   14 #>   [609,]   12   14   14 #>   [610,]   12   14   14 #>   [611,]   13   15   15 #>   [612,]   13   15   15 #>   [613,]   13   15   15 #>   [614,]   13   15   15 #>   [615,]   13   15   15 #>   [616,]   13   15   15 #>   [617,]   13   15   15 #>   [618,]   12   14   14 #>   [619,]   13   15   15 #>   [620,]   12   14   14 #>   [621,]   13   15   15 #>   [622,]   13   15   15 #>   [623,]   13   15   15 #>   [624,]   12   14   14 #>   [625,]   13   15   15 #>   [626,]   13   15   15 #>   [627,]   13   15   15 #>   [628,]   13   15   15 #>   [629,]   13   15   15 #>   [630,]   12   14   14 #>   [631,]   13   15   15 #>   [632,]   13   15   15 #>   [633,]   13   15   15 #>   [634,]   13   15   15 #>   [635,]   13   15   15 #>   [636,]   13   15   15 #>   [637,]   13   15   15 #>   [638,]   13   15   15 #>   [639,]   12   14   14 #>   [640,]   13   15   15 #>   [641,]   13   15   15 #>   [642,]   13   15   15 #>   [643,]   12   14   14 #>   [644,]   13   15   15 #>   [645,]   12   14   14 #>   [646,]   13   15   15 #>   [647,]   13   15   15 #>   [648,]   13   15   15 #>   [649,]   12   14   14 #>   [650,]   13   15   15 #>   [651,]   12   14   14 #>   [652,]   13   15   15 #>   [653,]   12   14   14 #>   [654,]   13   15   15 #>   [655,]   13   15   15 #>   [656,]   12   14   14 #>   [657,]   13   15   15 #>   [658,]   13   15   15 #>   [659,]   13   15   15 #>   [660,]   12   14   14 #>   [661,]   13   15   15 #>   [662,]   13   15   15 #>   [663,]   13   15   15 #>   [664,]   12   14   14 #>   [665,]   12   14   14 #>   [666,]   12   14   14 #>   [667,]   12   14   14 #>   [668,]   13   15   15 #>   [669,]   13   15   15 #>   [670,]   13   15   15 #>   [671,]   13   15   15 #>   [672,]   13   15   15 #>   [673,]   13   15   15 #>   [674,]   13   15   15 #>   [675,]   13   15   15 #>   [676,]   13   15   15 #>   [677,]   13   15   15 #>   [678,]   12   14   14 #>   [679,]   13   15   15 #>   [680,]   13   15   15 #>   [681,]   13   15   15 #>   [682,]   13   15   15 #>   [683,]   13   15   15 #>   [684,]   13   15   15 #>   [685,]   12   14   14 #>   [686,]   13   15   15 #>   [687,]   13   15   15 #>   [688,]   13   15   15 #>   [689,]   12   14   14 #>   [690,]   13   15   15 #>   [691,]   12   14   14 #>   [692,]   13   15   15 #>   [693,]   13   15   15 #>   [694,]   13   15   15 #>   [695,]   12   14   14 #>   [696,]   13   15   15 #>   [697,]   13   15   15 #>   [698,]   13   15   15 #>   [699,]   13   15   15 #>   [700,]   13   15   15 #>   [701,]   15   17   17 #>   [702,]   14   16   16 #>   [703,]   14   16   16 #>   [704,]   14   16   17 #>   [705,]   15   17   17 #>   [706,]   14   16   17 #>   [707,]   14   16   16 #>   [708,]   14   16   17 #>   [709,]   14   16   17 #>   [710,]   15   17   16 #>   [711,]   15   17   17 #>   [712,]   15   17   17 #>   [713,]   14   16   16 #>   [714,]   15   17   17 #>   [715,]   15   17   17 #>   [716,]   14   16   16 #>   [717,]   15   17   17 #>   [718,]   15   17   16 #>   [719,]   14   16   16 #>   [720,]   14   16   17 #>   [721,]   14   16   16 #>   [722,]   15   17   16 #>   [723,]   14   16   16 #>   [724,]   14   16   16 #>   [725,]   14   16   17 #>   [726,]   15   17   17 #>   [727,]   15   17   17 #>   [728,]   14   16   17 #>   [729,]   14   16   16 #>   [730,]   14   16   16 #>   [731,]   15   17   16 #>   [732,]   15   17   16 #>   [733,]   14   16   17 #>   [734,]   14   16   16 #>   [735,]   14   16   16 #>   [736,]   14   16   16 #>   [737,]   14   16   16 #>   [738,]   15   17   17 #>   [739,]   14   16   16 #>   [740,]   14   16   16 #>   [741,]   14   16   17 #>   [742,]   14   16   17 #>   [743,]   15   17   17 #>   [744,]   14   16   16 #>   [745,]   14   16   17 #>   [746,]   14   16   17 #>   [747,]   15   17   16 #>   [748,]   14   16   16 #>   [749,]   14   16   16 #>   [750,]   14   16   17 #>   [751,]   14   16   17 #>   [752,]   15   17   17 #>   [753,]   14   16   17 #>   [754,]   14   16   16 #>   [755,]   14   16   17 #>   [756,]   14   16   17 #>   [757,]   14   16   17 #>   [758,]   15   17   17 #>   [759,]   15   17   16 #>   [760,]   14   16   17 #>   [761,]   15   17   17 #>   [762,]   14   16   16 #>   [763,]   14   16   17 #>   [764,]   14   16   17 #>   [765,]   14   16   17 #>   [766,]   15   17   17 #>   [767,]   14   16   17 #>   [768,]   14   16   17 #>   [769,]   14   16   17 #>   [770,]   15   17   16 #>   [771,]   15   17   17 #>   [772,]   14   16   17 #>   [773,]   14   16   17 #>   [774,]   14   16   17 #>   [775,]   15   17   17 #>   [776,]   14   16   17 #>   [777,]   15   17   16 #>   [778,]   14   16   17 #>   [779,]   15   17   16 #>   [780,]   14   16   16 #>   [781,]   14   16   17 #>   [782,]   14   16   17 #>   [783,]   14   16   16 #>   [784,]   14   16   17 #>   [785,]   14   16   16 #>   [786,]   14   16   16 #>   [787,]   15   17   17 #>   [788,]   14   16   17 #>   [789,]   14   16   17 #>   [790,]   15   17   17 #>   [791,]   15   17   17 #>   [792,]   15   17   17 #>   [793,]   14   16   16 #>   [794,]   14   16   17 #>   [795,]   15   17   16 #>   [796,]   14   16   17 #>   [797,]   14   16   17 #>   [798,]   14   16   16 #>   [799,]   14   16   17 #>   [800,]   15   17   16 #>   [801,]   16   19   19 #>   [802,]   16   18   18 #>   [803,]   16   18   18 #>   [804,]   16   19   19 #>   [805,]   16   19   19 #>   [806,]   16   18   18 #>   [807,]   16   18   18 #>   [808,]   16   18   18 #>   [809,]   16   18   18 #>   [810,]   16   19   19 #>   [811,]   16   19   19 #>   [812,]   16   19   19 #>   [813,]   16   19   19 #>   [814,]   16   19   19 #>   [815,]   16   19   19 #>   [816,]   16   19   19 #>   [817,]   16   19   19 #>   [818,]   16   19   19 #>   [819,]   16   19   19 #>   [820,]   16   18   18 #>   [821,]   16   18   18 #>   [822,]   16   19   19 #>   [823,]   16   18   18 #>   [824,]   16   19   19 #>   [825,]   16   18   18 #>   [826,]   16   19   19 #>   [827,]   16   19   19 #>   [828,]   16   19   19 #>   [829,]   16   18   18 #>   [830,]   16   18   18 #>   [831,]   16   19   19 #>   [832,]   16   19   19 #>   [833,]   16   19   19 #>   [834,]   16   18   18 #>   [835,]   16   18   18 #>   [836,]   16   18   18 #>   [837,]   16   18   18 #>   [838,]   16   19   19 #>   [839,]   16   19   19 #>   [840,]   16   18   18 #>   [841,]   16   18   18 #>   [842,]   16   18   18 #>   [843,]   16   19   19 #>   [844,]   16   18   18 #>   [845,]   16   18   18 #>   [846,]   16   19   19 #>   [847,]   16   19   19 #>   [848,]   16   19   19 #>   [849,]   16   18   18 #>   [850,]   16   18   18 #>   [851,]   16   19   19 #>   [852,]   16   19   19 #>   [853,]   16   18   18 #>   [854,]   16   18   18 #>   [855,]   16   18   18 #>   [856,]   16   18   18 #>   [857,]   16   18   18 #>   [858,]   16   19   19 #>   [859,]   16   19   19 #>   [860,]   16   18   18 #>   [861,]   16   19   19 #>   [862,]   16   18   18 #>   [863,]   16   19   19 #>   [864,]   16   18   18 #>   [865,]   16   18   18 #>   [866,]   16   19   19 #>   [867,]   16   18   18 #>   [868,]   16   19   19 #>   [869,]   16   19   19 #>   [870,]   16   19   19 #>   [871,]   16   19   19 #>   [872,]   16   18   18 #>   [873,]   16   18   18 #>   [874,]   16   18   18 #>   [875,]   16   19   19 #>   [876,]   16   18   18 #>   [877,]   16   19   19 #>   [878,]   16   19   19 #>   [879,]   16   19   19 #>   [880,]   16   18   18 #>   [881,]   16   18   18 #>   [882,]   16   18   18 #>   [883,]   16   19   19 #>   [884,]   16   18   18 #>   [885,]   16   18   18 #>   [886,]   16   18   18 #>   [887,]   16   19   19 #>   [888,]   16   18   18 #>   [889,]   16   18   18 #>   [890,]   16   19   19 #>   [891,]   16   19   19 #>   [892,]   16   19   19 #>   [893,]   16   18   18 #>   [894,]   16   18   18 #>   [895,]   16   19   19 #>   [896,]   16   19   19 #>   [897,]   16   18   18 #>   [898,]   16   18   18 #>   [899,]   16   18   18 #>   [900,]   16   19   19 #>   [901,]   17   20   22 #>   [902,]   18   20   22 #>   [903,]   18   20   21 #>   [904,]   17   20   20 #>   [905,]   17   20   22 #>   [906,]   18   20   20 #>   [907,]   17   20   21 #>   [908,]   17   20   22 #>   [909,]   17   20   20 #>   [910,]   17   20   20 #>   [911,]   17   20   20 #>   [912,]   18   20   20 #>   [913,]   17   20   22 #>   [914,]   17   20   20 #>   [915,]   17   20   20 #>   [916,]   17   20   22 #>   [917,]   17   20   22 #>   [918,]   18   20   20 #>   [919,]   18   20   20 #>   [920,]   18   20   22 #>   [921,]   17   20   20 #>   [922,]   17   20   22 #>   [923,]   17   20   20 #>   [924,]   17   20   22 #>   [925,]   18   20   22 #>   [926,]   17   20   20 #>   [927,]   17   20   20 #>   [928,]   18   20   22 #>   [929,]   17   20   22 #>   [930,]   17   20   20 #>   [931,]   17   20   20 #>   [932,]   17   20   20 #>   [933,]   18   20   20 #>   [934,]   18   20   20 #>   [935,]   17   20   20 #>   [936,]   17   20   20 #>   [937,]   17   20   22 #>   [938,]   17   20   20 #>   [939,]   17   20   21 #>   [940,]   17   20   22 #>   [941,]   17   20   20 #>   [942,]   17   20   20 #>   [943,]   17   20   22 #>   [944,]   17   20   22 #>   [945,]   17   20   22 #>   [946,]   17   20   22 #>   [947,]   17   20   21 #>   [948,]   17   20   20 #>   [949,]   17   20   21 #>   [950,]   17   20   22 #>   [951,]   17   20   22 #>   [952,]   17   20   20 #>   [953,]   17   20   22 #>   [954,]   17   20   21 #>   [955,]   17   20   22 #>   [956,]   17   20   22 #>   [957,]   17   20   22 #>   [958,]   17   20   20 #>   [959,]   17   20   22 #>   [960,]   18   20   20 #>   [961,]   17   20   20 #>   [962,]   17   20   20 #>   [963,]   17   20   22 #>   [964,]   17   20   20 #>   [965,]   18   20   22 #>   [966,]   17   20   22 #>   [967,]   17   20   20 #>   [968,]   17   20   20 #>   [969,]   17   20   20 #>   [970,]   18   20   21 #>   [971,]   17   20   22 #>   [972,]   17   20   22 #>   [973,]   18   20   20 #>   [974,]   17   20   20 #>   [975,]   17   20   20 #>   [976,]   17   20   22 #>   [977,]   17   20   21 #>   [978,]   17   20   22 #>   [979,]   17   20   21 #>   [980,]   17   20   20 #>   [981,]   17   20   22 #>   [982,]   17   20   20 #>   [983,]   17   20   21 #>   [984,]   18   20   22 #>   [985,]   17   20   20 #>   [986,]   17   20   22 #>   [987,]   17   20   22 #>   [988,]   17   20   22 #>   [989,]   17   20   22 #>   [990,]   17   20   22 #>   [991,]   17   20   20 #>   [992,]   17   20   20 #>   [993,]   18   20   20 #>   [994,]   17   20   22 #>   [995,]   17   20   20 #>   [996,]   17   20   20 #>   [997,]   18   20   20 #>   [998,]   18   20   21 #>   [999,]   17   20   20 #>  [1000,]   17   20   22 #>  [1001,]   20   22   24 #>  [1002,]   20   22   24 #>  [1003,]   20   22   24 #>  [1004,]   20   22   24 #>  [1005,]   20   22   24 #>  [1006,]   20   22   24 #>  [1007,]   20   22   24 #>  [1008,]   20   22   24 #>  [1009,]   20   22   24 #>  [1010,]   20   22   24 #>  [1011,]   20   22   24 #>  [1012,]   20   22   24 #>  [1013,]   20   22   24 #>  [1014,]   20   22   24 #>  [1015,]   20   22   24 #>  [1016,]   20   22   24 #>  [1017,]   20   22   24 #>  [1018,]   20   22   24 #>  [1019,]   20   22   24 #>  [1020,]   19   21   23 #>  [1021,]   19   21   23 #>  [1022,]   20   22   24 #>  [1023,]   20   22   24 #>  [1024,]   20   22   24 #>  [1025,]   19   21   23 #>  [1026,]   20   22   24 #>  [1027,]   20   22   24 #>  [1028,]   20   22   24 #>  [1029,]   20   22   24 #>  [1030,]   20   22   24 #>  [1031,]   20   22   24 #>  [1032,]   20   22   24 #>  [1033,]   20   22   24 #>  [1034,]   20   22   24 #>  [1035,]   19   21   23 #>  [1036,]   20   22   24 #>  [1037,]   20   22   24 #>  [1038,]   20   22   24 #>  [1039,]   20   22   24 #>  [1040,]   20   22   24 #>  [1041,]   20   22   24 #>  [1042,]   20   22   24 #>  [1043,]   20   22   24 #>  [1044,]   19   21   23 #>  [1045,]   20   22   24 #>  [1046,]   20   22   24 #>  [1047,]   20   22   24 #>  [1048,]   20   22   24 #>  [1049,]   20   22   24 #>  [1050,]   20   22   24 #>  [1051,]   20   22   24 #>  [1052,]   20   22   24 #>  [1053,]   19   21   23 #>  [1054,]   20   22   24 #>  [1055,]   20   22   24 #>  [1056,]   19   21   23 #>  [1057,]   20   22   24 #>  [1058,]   20   22   24 #>  [1059,]   20   22   24 #>  [1060,]   20   22   24 #>  [1061,]   20   22   24 #>  [1062,]   20   22   24 #>  [1063,]   20   22   24 #>  [1064,]   20   22   24 #>  [1065,]   19   21   23 #>  [1066,]   20   22   24 #>  [1067,]   20   22   24 #>  [1068,]   20   22   24 #>  [1069,]   20   22   24 #>  [1070,]   20   22   24 #>  [1071,]   20   22   24 #>  [1072,]   20   22   24 #>  [1073,]   20   22   24 #>  [1074,]   19   21   23 #>  [1075,]   20   22   24 #>  [1076,]   20   22   24 #>  [1077,]   20   22   24 #>  [1078,]   20   22   24 #>  [1079,]   20   22   24 #>  [1080,]   19   21   23 #>  [1081,]   20   22   24 #>  [1082,]   20   22   24 #>  [1083,]   20   22   24 #>  [1084,]   20   22   24 #>  [1085,]   19   21   23 #>  [1086,]   19   21   23 #>  [1087,]   20   22   24 #>  [1088,]   20   22   24 #>  [1089,]   19   21   23 #>  [1090,]   20   22   24 #>  [1091,]   20   22   24 #>  [1092,]   20   22   24 #>  [1093,]   20   22   24 #>  [1094,]   20   22   24 #>  [1095,]   20   22   24 #>  [1096,]   20   22   24 #>  [1097,]   20   22   24 #>  [1098,]   20   22   24 #>  [1099,]   20   22   24 #>  [1100,]   20   22   24 #>  [1101,]   23   24   27 #>  [1102,]   23   24   26 #>  [1103,]   21   23   25 #>  [1104,]   21   23   25 #>  [1105,]   21   23   25 #>  [1106,]   21   23   25 #>  [1107,]   23   24   27 #>  [1108,]   23   24   26 #>  [1109,]   21   23   25 #>  [1110,]   21   23   25 #>  [1111,]   21   23   25 #>  [1112,]   23   24   26 #>  [1113,]   23   24   27 #>  [1114,]   21   23   25 #>  [1115,]   22   24   26 #>  [1116,]   23   24   27 #>  [1117,]   22   24   26 #>  [1118,]   23   24   26 #>  [1119,]   23   24   26 #>  [1120,]   23   24   27 #>  [1121,]   21   23   25 #>  [1122,]   23   24   27 #>  [1123,]   23   24   26 #>  [1124,]   21   23   25 #>  [1125,]   21   23   25 #>  [1126,]   23   24   26 #>  [1127,]   23   24   26 #>  [1128,]   21   23   25 #>  [1129,]   23   24   26 #>  [1130,]   23   24   26 #>  [1131,]   21   23   25 #>  [1132,]   21   23   25 #>  [1133,]   23   24   26 #>  [1134,]   21   23   25 #>  [1135,]   21   23   25 #>  [1136,]   23   24   27 #>  [1137,]   22   24   26 #>  [1138,]   23   24   26 #>  [1139,]   21   23   25 #>  [1140,]   21   23   25 #>  [1141,]   23   24   26 #>  [1142,]   21   23   25 #>  [1143,]   22   24   26 #>  [1144,]   22   24   26 #>  [1145,]   23   24   26 #>  [1146,]   23   24   26 #>  [1147,]   21   23   25 #>  [1148,]   21   23   25 #>  [1149,]   23   24   26 #>  [1150,]   23   24   27 #>  [1151,]   23   24   26 #>  [1152,]   21   23   25 #>  [1153,]   23   24   27 #>  [1154,]   21   23   25 #>  [1155,]   23   24   27 #>  [1156,]   23   24   26 #>  [1157,]   21   23   25 #>  [1158,]   23   24   27 #>  [1159,]   23   24   27 #>  [1160,]   23   24   26 #>  [1161,]   23   24   26 #>  [1162,]   21   23   25 #>  [1163,]   22   24   26 #>  [1164,]   23   24   26 #>  [1165,]   21   23   25 #>  [1166,]   23   24   26 #>  [1167,]   21   23   25 #>  [1168,]   23   24   26 #>  [1169,]   23   24   26 #>  [1170,]   21   23   25 #>  [1171,]   23   24   26 #>  [1172,]   21   23   25 #>  [1173,]   21   23   25 #>  [1174,]   21   23   25 #>  [1175,]   22   24   26 #>  [1176,]   21   23   25 #>  [1177,]   23   24   26 #>  [1178,]   22   24   26 #>  [1179,]   21   23   25 #>  [1180,]   23   24   26 #>  [1181,]   23   24   26 #>  [1182,]   21   23   25 #>  [1183,]   23   24   26 #>  [1184,]   23   24   26 #>  [1185,]   23   24   27 #>  [1186,]   21   23   25 #>  [1187,]   23   24   26 #>  [1188,]   21   23   25 #>  [1189,]   21   23   25 #>  [1190,]   23   24   27 #>  [1191,]   21   23   25 #>  [1192,]   23   24   26 #>  [1193,]   23   24   26 #>  [1194,]   21   23   25 #>  [1195,]   22   24   26 #>  [1196,]   23   24   26 #>  [1197,]   23   24   26 #>  [1198,]   21   23   25 #>  [1199,]   23   24   26 #>  [1200,]   22   24   26 #>  [1201,]   25   26   29 #>  [1202,]   25   26   29 #>  [1203,]   25   26   29 #>  [1204,]   24   25   28 #>  [1205,]   25   26   29 #>  [1206,]   25   26   29 #>  [1207,]   25   26   29 #>  [1208,]   24   25   28 #>  [1209,]   24   25   28 #>  [1210,]   25   26   29 #>  [1211,]   24   25   28 #>  [1212,]   25   26   29 #>  [1213,]   24   25   28 #>  [1214,]   25   26   29 #>  [1215,]   25   26   29 #>  [1216,]   25   26   29 #>  [1217,]   24   25   28 #>  [1218,]   25   26   29 #>  [1219,]   25   26   29 #>  [1220,]   25   26   29 #>  [1221,]   25   26   29 #>  [1222,]   24   25   28 #>  [1223,]   25   26   29 #>  [1224,]   25   26   29 #>  [1225,]   25   26   29 #>  [1226,]   25   26   29 #>  [1227,]   24   25   28 #>  [1228,]   25   26   29 #>  [1229,]   25   26   29 #>  [1230,]   25   26   29 #>  [1231,]   25   26   29 #>  [1232,]   25   26   29 #>  [1233,]   25   26   29 #>  [1234,]   25   26   29 #>  [1235,]   24   25   28 #>  [1236,]   25   26   29 #>  [1237,]   25   26   29 #>  [1238,]   25   26   29 #>  [1239,]   25   26   29 #>  [1240,]   25   26   29 #>  [1241,]   25   26   29 #>  [1242,]   25   26   29 #>  [1243,]   24   25   28 #>  [1244,]   24   25   28 #>  [1245,]   25   26   29 #>  [1246,]   25   26   29 #>  [1247,]   25   26   29 #>  [1248,]   25   26   29 #>  [1249,]   24   25   28 #>  [1250,]   25   26   29 #>  [1251,]   25   26   29 #>  [1252,]   24   25   28 #>  [1253,]   25   26   29 #>  [1254,]   25   26   29 #>  [1255,]   24   25   28 #>  [1256,]   25   26   29 #>  [1257,]   25   26   29 #>  [1258,]   24   25   28 #>  [1259,]   25   26   29 #>  [1260,]   25   26   29 #>  [1261,]   25   26   29 #>  [1262,]   25   26   29 #>  [1263,]   25   26   29 #>  [1264,]   25   26   29 #>  [1265,]   25   26   29 #>  [1266,]   24   25   28 #>  [1267,]   25   26   29 #>  [1268,]   25   26   29 #>  [1269,]   24   25   28 #>  [1270,]   25   26   29 #>  [1271,]   25   26   29 #>  [1272,]   25   26   29 #>  [1273,]   25   26   29 #>  [1274,]   25   26   29 #>  [1275,]   25   26   29 #>  [1276,]   25   26   29 #>  [1277,]   25   26   29 #>  [1278,]   25   26   29 #>  [1279,]   24   25   28 #>  [1280,]   24   25   28 #>  [1281,]   24   25   28 #>  [1282,]   24   25   28 #>  [1283,]   24   25   28 #>  [1284,]   25   26   29 #>  [1285,]   25   26   29 #>  [1286,]   25   26   29 #>  [1287,]   24   25   28 #>  [1288,]   24   25   28 #>  [1289,]   24   25   28 #>  [1290,]   24   25   28 #>  [1291,]   25   26   29 #>  [1292,]   24   25   28 #>  [1293,]   25   26   29 #>  [1294,]   25   26   29 #>  [1295,]   24   25   28 #>  [1296,]   25   26   29 #>  [1297,]   25   26   29 #>  [1298,]   25   26   29 #>  [1299,]   24   25   28 #>  [1300,]   25   26   29 #>  [1301,]   26   27   30 #>  [1302,]   27   28   31 #>  [1303,]   27   28   31 #>  [1304,]   26   27   30 #>  [1305,]   26   27   30 #>  [1306,]   27   28   31 #>  [1307,]   27   28   31 #>  [1308,]   26   27   30 #>  [1309,]   26   27   30 #>  [1310,]   26   27   30 #>  [1311,]   26   27   30 #>  [1312,]   27   28   31 #>  [1313,]   26   27   30 #>  [1314,]   26   27   30 #>  [1315,]   26   27   30 #>  [1316,]   26   27   30 #>  [1317,]   26   27   30 #>  [1318,]   27   28   31 #>  [1319,]   27   28   31 #>  [1320,]   27   28   31 #>  [1321,]   26   27   30 #>  [1322,]   26   27   30 #>  [1323,]   27   28   31 #>  [1324,]   26   27   30 #>  [1325,]   27   28   31 #>  [1326,]   26   27   30 #>  [1327,]   26   27   30 #>  [1328,]   27   28   31 #>  [1329,]   27   28   31 #>  [1330,]   26   27   30 #>  [1331,]   27   28   31 #>  [1332,]   27   28   31 #>  [1333,]   27   28   31 #>  [1334,]   27   28   31 #>  [1335,]   26   27   30 #>  [1336,]   26   27   30 #>  [1337,]   26   27   30 #>  [1338,]   26   27   30 #>  [1339,]   26   27   30 #>  [1340,]   27   28   31 #>  [1341,]   26   27   30 #>  [1342,]   27   28   31 #>  [1343,]   26   27   30 #>  [1344,]   26   27   30 #>  [1345,]   26   27   30 #>  [1346,]   26   27   30 #>  [1347,]   26   27   30 #>  [1348,]   27   28   31 #>  [1349,]   26   27   30 #>  [1350,]   26   27   30 #>  [1351,]   26   27   30 #>  [1352,]   26   27   30 #>  [1353,]   26   27   30 #>  [1354,]   26   27   30 #>  [1355,]   26   27   30 #>  [1356,]   27   28   31 #>  [1357,]   27   28   31 #>  [1358,]   26   27   30 #>  [1359,]   26   27   30 #>  [1360,]   27   28   31 #>  [1361,]   27   28   31 #>  [1362,]   26   27   30 #>  [1363,]   26   27   30 #>  [1364,]   27   28   31 #>  [1365,]   27   28   31 #>  [1366,]   26   27   30 #>  [1367,]   26   27   30 #>  [1368,]   26   27   30 #>  [1369,]   26   27   30 #>  [1370,]   27   28   31 #>  [1371,]   27   28   31 #>  [1372,]   26   27   30 #>  [1373,]   27   28   31 #>  [1374,]   26   27   30 #>  [1375,]   27   28   31 #>  [1376,]   26   27   30 #>  [1377,]   27   28   31 #>  [1378,]   27   28   31 #>  [1379,]   26   27   30 #>  [1380,]   26   27   30 #>  [1381,]   26   27   30 #>  [1382,]   26   27   30 #>  [1383,]   26   27   30 #>  [1384,]   27   28   31 #>  [1385,]   26   27   30 #>  [1386,]   27   28   31 #>  [1387,]   26   27   30 #>  [1388,]   26   27   30 #>  [1389,]   26   27   30 #>  [1390,]   26   27   30 #>  [1391,]   26   27   30 #>  [1392,]   26   27   30 #>  [1393,]   27   28   31 #>  [1394,]   26   27   30 #>  [1395,]   26   27   30 #>  [1396,]   26   27   30 #>  [1397,]   27   28   31 #>  [1398,]   27   28   31 #>  [1399,]   26   27   30 #>  [1400,]   27   28   31 #>  [1401,]   28   29   34 #>  [1402,]   28   30   32 #>  [1403,]   28   29   34 #>  [1404,]   28   29   34 #>  [1405,]   28   30   32 #>  [1406,]   28   29   34 #>  [1407,]   28   30   32 #>  [1408,]   28   29   34 #>  [1409,]   28   30   32 #>  [1410,]   28   30   32 #>  [1411,]   28   29   34 #>  [1412,]   28   30   32 #>  [1413,]   28   30   32 #>  [1414,]   28   29   34 #>  [1415,]   28   29   33 #>  [1416,]   28   29   34 #>  [1417,]   28   30   32 #>  [1418,]   28   30   32 #>  [1419,]   28   29   34 #>  [1420,]   28   30   32 #>  [1421,]   28   30   32 #>  [1422,]   28   30   32 #>  [1423,]   28   30   32 #>  [1424,]   28   30   32 #>  [1425,]   28   29   34 #>  [1426,]   28   29   34 #>  [1427,]   28   30   32 #>  [1428,]   28   29   34 #>  [1429,]   28   30   32 #>  [1430,]   28   30   32 #>  [1431,]   28   30   32 #>  [1432,]   28   30   32 #>  [1433,]   28   30   32 #>  [1434,]   28   29   33 #>  [1435,]   28   29   34 #>  [1436,]   28   30   32 #>  [1437,]   28   29   33 #>  [1438,]   28   29   34 #>  [1439,]   28   30   32 #>  [1440,]   28   30   32 #>  [1441,]   28   30   32 #>  [1442,]   28   29   33 #>  [1443,]   28   29   33 #>  [1444,]   28   30   32 #>  [1445,]   28   29   34 #>  [1446,]   28   29   34 #>  [1447,]   28   30   32 #>  [1448,]   28   30   32 #>  [1449,]   28   29   34 #>  [1450,]   28   30   32 #>  [1451,]   28   30   32 #>  [1452,]   28   29   34 #>  [1453,]   28   30   32 #>  [1454,]   28   30   32 #>  [1455,]   28   29   34 #>  [1456,]   28   29   34 #>  [1457,]   28   29   34 #>  [1458,]   28   30   32 #>  [1459,]   28   29   34 #>  [1460,]   28   30   32 #>  [1461,]   28   30   32 #>  [1462,]   28   29   34 #>  [1463,]   28   30   32 #>  [1464,]   28   29   34 #>  [1465,]   28   29   34 #>  [1466,]   28   29   34 #>  [1467,]   28   29   34 #>  [1468,]   28   29   34 #>  [1469,]   28   29   34 #>  [1470,]   28   30   32 #>  [1471,]   28   30   32 #>  [1472,]   28   29   34 #>  [1473,]   28   29   34 #>  [1474,]   28   30   32 #>  [1475,]   28   30   32 #>  [1476,]   28   30   32 #>  [1477,]   28   29   34 #>  [1478,]   28   30   32 #>  [1479,]   28   29   33 #>  [1480,]   28   30   32 #>  [1481,]   28   30   32 #>  [1482,]   28   29   34 #>  [1483,]   28   30   32 #>  [1484,]   28   30   32 #>  [1485,]   28   29   34 #>  [1486,]   28   30   32 #>  [1487,]   28   30   32 #>  [1488,]   28   30   32 #>  [1489,]   28   29   34 #>  [1490,]   28   30   32 #>  [1491,]   28   29   34 #>  [1492,]   28   30   32 #>  [1493,]   28   30   32 #>  [1494,]   28   29   33 #>  [1495,]   28   30   32 #>  [1496,]   28   29   34 #>  [1497,]   28   29   34 #>  [1498,]   28   29   34 #>  [1499,]   28   29   34 #>  [1500,]   28   29   33 #>  [1501,]   30   32   35 #>  [1502,]   30   32   35 #>  [1503,]   29   31   36 #>  [1504,]   29   31   36 #>  [1505,]   29   31   36 #>  [1506,]   30   32   35 #>  [1507,]   29   31   36 #>  [1508,]   29   31   36 #>  [1509,]   29   31   36 #>  [1510,]   29   31   36 #>  [1511,]   30   32   35 #>  [1512,]   29   31   36 #>  [1513,]   30   32   35 #>  [1514,]   30   32   35 #>  [1515,]   30   32   35 #>  [1516,]   30   32   35 #>  [1517,]   30   32   35 #>  [1518,]   29   31   36 #>  [1519,]   29   31   36 #>  [1520,]   29   31   36 #>  [1521,]   30   32   35 #>  [1522,]   30   32   35 #>  [1523,]   29   31   36 #>  [1524,]   29   31   36 #>  [1525,]   29   31   36 #>  [1526,]   30   32   35 #>  [1527,]   30   32   35 #>  [1528,]   29   31   36 #>  [1529,]   30   32   35 #>  [1530,]   29   31   36 #>  [1531,]   29   31   36 #>  [1532,]   29   31   36 #>  [1533,]   30   32   35 #>  [1534,]   29   31   36 #>  [1535,]   30   32   35 #>  [1536,]   29   31   36 #>  [1537,]   30   32   35 #>  [1538,]   29   31   36 #>  [1539,]   29   31   36 #>  [1540,]   29   31   36 #>  [1541,]   30   32   35 #>  [1542,]   29   31   36 #>  [1543,]   29   31   36 #>  [1544,]   30   32   35 #>  [1545,]   29   31   36 #>  [1546,]   29   31   36 #>  [1547,]   30   32   35 #>  [1548,]   29   31   36 #>  [1549,]   29   31   36 #>  [1550,]   30   32   35 #>  [1551,]   29   31   36 #>  [1552,]   30   32   35 #>  [1553,]   29   31   36 #>  [1554,]   29   31   36 #>  [1555,]   29   31   36 #>  [1556,]   29   31   36 #>  [1557,]   29   31   36 #>  [1558,]   30   32   35 #>  [1559,]   30   32   35 #>  [1560,]   29   31   36 #>  [1561,]   30   32   35 #>  [1562,]   29   31   36 #>  [1563,]   29   31   36 #>  [1564,]   29   31   36 #>  [1565,]   29   31   36 #>  [1566,]   29   31   36 #>  [1567,]   29   31   36 #>  [1568,]   30   32   35 #>  [1569,]   29   31   36 #>  [1570,]   30   32   35 #>  [1571,]   30   32   35 #>  [1572,]   29   31   36 #>  [1573,]   30   32   35 #>  [1574,]   29   31   36 #>  [1575,]   29   31   36 #>  [1576,]   30   32   35 #>  [1577,]   30   32   35 #>  [1578,]   29   31   36 #>  [1579,]   30   32   35 #>  [1580,]   29   31   36 #>  [1581,]   30   32   35 #>  [1582,]   29   31   36 #>  [1583,]   30   32   35 #>  [1584,]   30   32   35 #>  [1585,]   29   31   36 #>  [1586,]   30   32   35 #>  [1587,]   29   31   36 #>  [1588,]   29   31   36 #>  [1589,]   29   31   36 #>  [1590,]   30   32   35 #>  [1591,]   29   31   36 #>  [1592,]   29   31   36 #>  [1593,]   30   32   35 #>  [1594,]   30   32   35 #>  [1595,]   29   31   36 #>  [1596,]   30   32   35 #>  [1597,]   29   31   36 #>  [1598,]   29   31   36 #>  [1599,]   30   32   35 #>  [1600,]   30   32   35 #>  [1601,]   31   33   38 #>  [1602,]   33   34   37 #>  [1603,]   32   34   37 #>  [1604,]   31   33   38 #>  [1605,]   32   34   37 #>  [1606,]   32   34   37 #>  [1607,]   33   34   37 #>  [1608,]   31   33   38 #>  [1609,]   31   33   38 #>  [1610,]   33   34   37 #>  [1611,]   31   33   38 #>  [1612,]   32   34   37 #>  [1613,]   31   33   38 #>  [1614,]   31   33   38 #>  [1615,]   33   34   37 #>  [1616,]   33   34   37 #>  [1617,]   31   33   38 #>  [1618,]   33   34   37 #>  [1619,]   32   34   37 #>  [1620,]   32   34   37 #>  [1621,]   31   33   38 #>  [1622,]   31   33   38 #>  [1623,]   33   34   37 #>  [1624,]   32   34   37 #>  [1625,]   33   34   37 #>  [1626,]   32   34   37 #>  [1627,]   31   33   38 #>  [1628,]   33   34   37 #>  [1629,]   32   34   37 #>  [1630,]   31   33   38 #>  [1631,]   33   34   37 #>  [1632,]   32   34   37 #>  [1633,]   32   34   37 #>  [1634,]   32   34   37 #>  [1635,]   31   33   38 #>  [1636,]   32   34   37 #>  [1637,]   33   34   37 #>  [1638,]   33   34   37 #>  [1639,]   33   34   37 #>  [1640,]   32   34   37 #>  [1641,]   32   34   37 #>  [1642,]   32   34   37 #>  [1643,]   31   33   38 #>  [1644,]   31   33   38 #>  [1645,]   31   33   38 #>  [1646,]   31   33   38 #>  [1647,]   33   34   37 #>  [1648,]   32   34   37 #>  [1649,]   31   33   38 #>  [1650,]   33   34   37 #>  [1651,]   32   34   37 #>  [1652,]   31   33   38 #>  [1653,]   33   34   37 #>  [1654,]   31   33   38 #>  [1655,]   31   33   38 #>  [1656,]   33   34   37 #>  [1657,]   32   34   37 #>  [1658,]   31   33   38 #>  [1659,]   33   34   37 #>  [1660,]   32   34   37 #>  [1661,]   33   34   37 #>  [1662,]   32   34   37 #>  [1663,]   32   34   37 #>  [1664,]   33   34   37 #>  [1665,]   33   34   37 #>  [1666,]   31   33   38 #>  [1667,]   32   34   37 #>  [1668,]   31   33   38 #>  [1669,]   31   33   38 #>  [1670,]   33   34   37 #>  [1671,]   33   34   37 #>  [1672,]   33   34   37 #>  [1673,]   33   34   37 #>  [1674,]   33   34   37 #>  [1675,]   33   34   37 #>  [1676,]   33   34   37 #>  [1677,]   33   34   37 #>  [1678,]   32   34   37 #>  [1679,]   31   33   38 #>  [1680,]   31   33   38 #>  [1681,]   31   33   38 #>  [1682,]   31   33   38 #>  [1683,]   31   33   38 #>  [1684,]   33   34   37 #>  [1685,]   33   34   37 #>  [1686,]   33   34   37 #>  [1687,]   31   33   38 #>  [1688,]   31   33   38 #>  [1689,]   31   33   38 #>  [1690,]   31   33   38 #>  [1691,]   31   33   38 #>  [1692,]   31   33   38 #>  [1693,]   32   34   37 #>  [1694,]   33   34   37 #>  [1695,]   31   33   38 #>  [1696,]   31   33   38 #>  [1697,]   32   34   37 #>  [1698,]   32   34   37 #>  [1699,]   31   33   38 #>  [1700,]   33   34   37 #>  [1701,]   35   36   40 #>  [1702,]   34   35   39 #>  [1703,]   34   35   39 #>  [1704,]   35   36   40 #>  [1705,]   35   36   40 #>  [1706,]   34   35   39 #>  [1707,]   34   35   39 #>  [1708,]   34   35   39 #>  [1709,]   34   35   39 #>  [1710,]   35   36   40 #>  [1711,]   35   36   40 #>  [1712,]   35   36   40 #>  [1713,]   35   36   40 #>  [1714,]   35   36   40 #>  [1715,]   35   36   40 #>  [1716,]   35   36   40 #>  [1717,]   35   36   40 #>  [1718,]   35   36   40 #>  [1719,]   35   36   40 #>  [1720,]   34   35   39 #>  [1721,]   34   35   39 #>  [1722,]   35   36   40 #>  [1723,]   34   35   39 #>  [1724,]   35   36   40 #>  [1725,]   34   35   39 #>  [1726,]   35   36   40 #>  [1727,]   35   36   40 #>  [1728,]   35   36   40 #>  [1729,]   34   35   39 #>  [1730,]   35   36   40 #>  [1731,]   35   36   40 #>  [1732,]   35   36   40 #>  [1733,]   35   36   40 #>  [1734,]   34   35   39 #>  [1735,]   34   35   39 #>  [1736,]   34   35   39 #>  [1737,]   34   35   39 #>  [1738,]   35   36   40 #>  [1739,]   35   36   40 #>  [1740,]   35   36   40 #>  [1741,]   34   35   39 #>  [1742,]   34   35   39 #>  [1743,]   35   36   40 #>  [1744,]   34   35   39 #>  [1745,]   34   35   39 #>  [1746,]   35   36   40 #>  [1747,]   35   36   40 #>  [1748,]   35   36   40 #>  [1749,]   35   36   40 #>  [1750,]   34   35   39 #>  [1751,]   35   36   40 #>  [1752,]   35   36   40 #>  [1753,]   34   35   39 #>  [1754,]   34   35   39 #>  [1755,]   34   35   39 #>  [1756,]   34   35   39 #>  [1757,]   34   35   39 #>  [1758,]   35   36   40 #>  [1759,]   35   36   40 #>  [1760,]   34   35   39 #>  [1761,]   35   36   40 #>  [1762,]   34   35   39 #>  [1763,]   35   36   40 #>  [1764,]   34   35   39 #>  [1765,]   34   35   39 #>  [1766,]   35   36   40 #>  [1767,]   34   35   39 #>  [1768,]   35   36   40 #>  [1769,]   35   36   40 #>  [1770,]   35   36   40 #>  [1771,]   35   36   40 #>  [1772,]   34   35   39 #>  [1773,]   34   35   39 #>  [1774,]   34   35   39 #>  [1775,]   35   36   40 #>  [1776,]   34   35   39 #>  [1777,]   35   36   40 #>  [1778,]   35   36   40 #>  [1779,]   35   36   40 #>  [1780,]   34   35   39 #>  [1781,]   34   35   39 #>  [1782,]   34   35   39 #>  [1783,]   35   36   40 #>  [1784,]   34   35   39 #>  [1785,]   34   35   39 #>  [1786,]   34   35   39 #>  [1787,]   35   36   40 #>  [1788,]   34   35   39 #>  [1789,]   34   35   39 #>  [1790,]   35   36   40 #>  [1791,]   35   36   40 #>  [1792,]   35   36   40 #>  [1793,]   35   36   40 #>  [1794,]   34   35   39 #>  [1795,]   35   36   40 #>  [1796,]   35   36   40 #>  [1797,]   34   35   39 #>  [1798,]   34   35   39 #>  [1799,]   34   35   39 #>  [1800,]   35   36   40 #>  [1801,]   36   37   42 #>  [1802,]   37   39   41 #>  [1803,]   36   37   42 #>  [1804,]   36   38   42 #>  [1805,]   37   39   41 #>  [1806,]   36   37   42 #>  [1807,]   37   39   41 #>  [1808,]   36   38   42 #>  [1809,]   37   40   41 #>  [1810,]   37   39   41 #>  [1811,]   36   37   42 #>  [1812,]   37   40   41 #>  [1813,]   37   39   41 #>  [1814,]   36   37   42 #>  [1815,]   36   38   42 #>  [1816,]   36   37   42 #>  [1817,]   37   39   41 #>  [1818,]   37   39   41 #>  [1819,]   36   37   42 #>  [1820,]   37   39   41 #>  [1821,]   37   39   41 #>  [1822,]   37   39   41 #>  [1823,]   37   39   41 #>  [1824,]   37   39   41 #>  [1825,]   37   39   41 #>  [1826,]   36   37   42 #>  [1827,]   37   39   41 #>  [1828,]   36   37   42 #>  [1829,]   37   39   41 #>  [1830,]   37   39   41 #>  [1831,]   37   39   41 #>  [1832,]   37   39   41 #>  [1833,]   37   40   41 #>  [1834,]   36   37   42 #>  [1835,]   36   37   42 #>  [1836,]   37   39   41 #>  [1837,]   36   37   42 #>  [1838,]   36   37   42 #>  [1839,]   37   39   41 #>  [1840,]   37   39   41 #>  [1841,]   37   39   41 #>  [1842,]   36   37   42 #>  [1843,]   37   40   41 #>  [1844,]   37   39   41 #>  [1845,]   36   37   42 #>  [1846,]   36   38   42 #>  [1847,]   37   39   41 #>  [1848,]   37   39   41 #>  [1849,]   36   37   42 #>  [1850,]   37   39   41 #>  [1851,]   37   40   41 #>  [1852,]   36   37   42 #>  [1853,]   37   39   41 #>  [1854,]   37   39   41 #>  [1855,]   36   38   42 #>  [1856,]   36   37   42 #>  [1857,]   36   38   42 #>  [1858,]   37   39   41 #>  [1859,]   36   37   42 #>  [1860,]   37   39   41 #>  [1861,]   37   40   41 #>  [1862,]   36   38   42 #>  [1863,]   37   39   41 #>  [1864,]   36   37   42 #>  [1865,]   36   37   42 #>  [1866,]   37   40   41 #>  [1867,]   36   38   42 #>  [1868,]   36   37   42 #>  [1869,]   36   37   42 #>  [1870,]   37   39   41 #>  [1871,]   37   39   41 #>  [1872,]   36   37   42 #>  [1873,]   36   37   42 #>  [1874,]   37   39   41 #>  [1875,]   37   39   41 #>  [1876,]   37   40   41 #>  [1877,]   36   37   42 #>  [1878,]   37   39   41 #>  [1879,]   36   37   42 #>  [1880,]   37   39   41 #>  [1881,]   37   40   41 #>  [1882,]   36   38   42 #>  [1883,]   37   39   41 #>  [1884,]   37   39   41 #>  [1885,]   36   38   42 #>  [1886,]   37   39   41 #>  [1887,]   37   39   41 #>  [1888,]   37   39   41 #>  [1889,]   36   37   42 #>  [1890,]   37   39   41 #>  [1891,]   36   38   42 #>  [1892,]   37   39   41 #>  [1893,]   37   39   41 #>  [1894,]   36   37   42 #>  [1895,]   37   39   41 #>  [1896,]   36   37   42 #>  [1897,]   36   37   42 #>  [1898,]   36   38   42 #>  [1899,]   37   39   41 #>  [1900,]   36   37   42 #>  [1901,]   38   41   44 #>  [1902,]   39   42   43 #>  [1903,]   38   41   44 #>  [1904,]   38   41   44 #>  [1905,]   38   41   44 #>  [1906,]   38   41   44 #>  [1907,]   38   41   44 #>  [1908,]   38   41   44 #>  [1909,]   39   42   43 #>  [1910,]   39   42   43 #>  [1911,]   38   41   44 #>  [1912,]   39   42   43 #>  [1913,]   39   42   43 #>  [1914,]   38   41   44 #>  [1915,]   38   41   44 #>  [1916,]   38   41   44 #>  [1917,]   39   42   43 #>  [1918,]   38   41   44 #>  [1919,]   38   41   44 #>  [1920,]   38   41   44 #>  [1921,]   39   42   43 #>  [1922,]   38   41   44 #>  [1923,]   38   41   44 #>  [1924,]   39   42   43 #>  [1925,]   38   41   44 #>  [1926,]   38   41   44 #>  [1927,]   38   41   44 #>  [1928,]   38   41   44 #>  [1929,]   39   42   43 #>  [1930,]   38   41   44 #>  [1931,]   38   41   44 #>  [1932,]   39   42   43 #>  [1933,]   39   42   43 #>  [1934,]   38   41   44 #>  [1935,]   38   41   44 #>  [1936,]   38   41   44 #>  [1937,]   38   41   44 #>  [1938,]   38   41   44 #>  [1939,]   38   41   44 #>  [1940,]   39   42   43 #>  [1941,]   38   41   44 #>  [1942,]   38   41   44 #>  [1943,]   38   41   44 #>  [1944,]   38   41   44 #>  [1945,]   38   41   44 #>  [1946,]   38   41   44 #>  [1947,]   38   41   44 #>  [1948,]   38   41   44 #>  [1949,]   38   41   44 #>  [1950,]   38   41   44 #>  [1951,]   38   41   44 #>  [1952,]   38   41   44 #>  [1953,]   39   42   43 #>  [1954,]   38   41   44 #>  [1955,]   38   41   44 #>  [1956,]   38   41   44 #>  [1957,]   38   41   44 #>  [1958,]   38   41   44 #>  [1959,]   38   41   44 #>  [1960,]   39   42   43 #>  [1961,]   39   42   43 #>  [1962,]   38   41   44 #>  [1963,]   39   42   43 #>  [1964,]   38   41   44 #>  [1965,]   38   41   44 #>  [1966,]   38   41   44 #>  [1967,]   38   41   44 #>  [1968,]   38   41   44 #>  [1969,]   38   41   44 #>  [1970,]   39   42   43 #>  [1971,]   38   41   44 #>  [1972,]   38   41   44 #>  [1973,]   38   41   44 #>  [1974,]   38   41   44 #>  [1975,]   39   42   43 #>  [1976,]   38   41   44 #>  [1977,]   38   41   44 #>  [1978,]   38   41   44 #>  [1979,]   38   41   44 #>  [1980,]   39   42   43 #>  [1981,]   39   42   43 #>  [1982,]   38   41   44 #>  [1983,]   39   42   43 #>  [1984,]   38   41   44 #>  [1985,]   38   41   44 #>  [1986,]   39   42   43 #>  [1987,]   38   41   44 #>  [1988,]   38   41   44 #>  [1989,]   38   41   44 #>  [1990,]   38   41   44 #>  [1991,]   38   41   44 #>  [1992,]   38   41   44 #>  [1993,]   38   41   44 #>  [1994,]   38   41   44 #>  [1995,]   38   41   44 #>  [1996,]   38   41   44 #>  [1997,]   38   41   44 #>  [1998,]   38   41   44 #>  [1999,]   38   41   44 #>  [2000,]   38   41   44 #>  [2001,]   40   44   45 #>  [2002,]   40   43   46 #>  [2003,]   40   43   46 #>  [2004,]   40   45   45 #>  [2005,]   40   43   46 #>  [2006,]   40   43   46 #>  [2007,]   40   44   45 #>  [2008,]   40   44   45 #>  [2009,]   40   44   45 #>  [2010,]   40   45   45 #>  [2011,]   40   43   46 #>  [2012,]   40   43   46 #>  [2013,]   40   44   45 #>  [2014,]   40   43   46 #>  [2015,]   40   44   45 #>  [2016,]   40   44   45 #>  [2017,]   40   44   45 #>  [2018,]   40   45   45 #>  [2019,]   40   43   46 #>  [2020,]   40   43   47 #>  [2021,]   40   44   45 #>  [2022,]   40   43   46 #>  [2023,]   40   44   45 #>  [2024,]   40   43   46 #>  [2025,]   40   45   45 #>  [2026,]   40   43   46 #>  [2027,]   40   44   45 #>  [2028,]   40   44   45 #>  [2029,]   40   43   46 #>  [2030,]   40   43   46 #>  [2031,]   40   43   46 #>  [2032,]   40   43   46 #>  [2033,]   40   43   47 #>  [2034,]   40   43   46 #>  [2035,]   40   43   46 #>  [2036,]   40   43   47 #>  [2037,]   40   44   45 #>  [2038,]   40   44   45 #>  [2039,]   40   45   45 #>  [2040,]   40   43   46 #>  [2041,]   40   43   46 #>  [2042,]   40   43   47 #>  [2043,]   40   45   45 #>  [2044,]   40   44   45 #>  [2045,]   40   45   45 #>  [2046,]   40   44   45 #>  [2047,]   40   44   45 #>  [2048,]   40   43   46 #>  [2049,]   40   43   46 #>  [2050,]   40   43   46 #>  [2051,]   40   43   47 #>  [2052,]   40   43   46 #>  [2053,]   40   45   45 #>  [2054,]   40   43   47 #>  [2055,]   40   43   46 #>  [2056,]   40   44   45 #>  [2057,]   40   43   46 #>  [2058,]   40   43   46 #>  [2059,]   40   43   46 #>  [2060,]   40   43   46 #>  [2061,]   40   44   45 #>  [2062,]   40   43   46 #>  [2063,]   40   43   46 #>  [2064,]   40   44   45 #>  [2065,]   40   43   47 #>  [2066,]   40   43   47 #>  [2067,]   40   43   46 #>  [2068,]   40   43   46 #>  [2069,]   40   43   46 #>  [2070,]   40   44   45 #>  [2071,]   40   44   45 #>  [2072,]   40   44   45 #>  [2073,]   40   45   45 #>  [2074,]   40   45   45 #>  [2075,]   40   45   45 #>  [2076,]   40   45   45 #>  [2077,]   40   45   45 #>  [2078,]   40   43   46 #>  [2079,]   40   44   45 #>  [2080,]   40   43   46 #>  [2081,]   40   43   46 #>  [2082,]   40   44   45 #>  [2083,]   40   43   47 #>  [2084,]   40   44   45 #>  [2085,]   40   43   47 #>  [2086,]   40   44   45 #>  [2087,]   40   44   45 #>  [2088,]   40   44   45 #>  [2089,]   40   43   46 #>  [2090,]   40   44   45 #>  [2091,]   40   43   47 #>  [2092,]   40   43   46 #>  [2093,]   40   43   47 #>  [2094,]   40   44   45 #>  [2095,]   40   45   45 #>  [2096,]   40   44   45 #>  [2097,]   40   43   46 #>  [2098,]   40   43   46 #>  [2099,]   40   43   46 #>  [2100,]   40   44   45 #>  [2101,]   41   46   48 #>  [2102,]   42   47   49 #>  [2103,]   41   46   48 #>  [2104,]   41   46   48 #>  [2105,]   41   46   48 #>  [2106,]   41   46   48 #>  [2107,]   41   46   48 #>  [2108,]   41   46   48 #>  [2109,]   42   47   49 #>  [2110,]   42   47   49 #>  [2111,]   41   46   48 #>  [2112,]   42   47   49 #>  [2113,]   42   47   49 #>  [2114,]   41   46   48 #>  [2115,]   41   46   48 #>  [2116,]   41   46   48 #>  [2117,]   42   47   49 #>  [2118,]   41   46   48 #>  [2119,]   41   46   48 #>  [2120,]   41   46   48 #>  [2121,]   42   47   49 #>  [2122,]   41   46   48 #>  [2123,]   41   46   48 #>  [2124,]   41   46   48 #>  [2125,]   41   46   48 #>  [2126,]   41   46   48 #>  [2127,]   41   46   48 #>  [2128,]   41   46   48 #>  [2129,]   42   47   49 #>  [2130,]   41   46   48 #>  [2131,]   41   46   48 #>  [2132,]   42   47   49 #>  [2133,]   42   47   49 #>  [2134,]   41   46   48 #>  [2135,]   41   46   48 #>  [2136,]   41   46   48 #>  [2137,]   41   46   48 #>  [2138,]   41   46   48 #>  [2139,]   41   46   48 #>  [2140,]   42   47   49 #>  [2141,]   41   46   48 #>  [2142,]   41   46   48 #>  [2143,]   41   46   48 #>  [2144,]   41   46   48 #>  [2145,]   41   46   48 #>  [2146,]   41   46   48 #>  [2147,]   41   46   48 #>  [2148,]   41   46   48 #>  [2149,]   41   46   48 #>  [2150,]   41   46   48 #>  [2151,]   41   46   48 #>  [2152,]   41   46   48 #>  [2153,]   42   47   49 #>  [2154,]   41   46   48 #>  [2155,]   41   46   48 #>  [2156,]   41   46   48 #>  [2157,]   41   46   48 #>  [2158,]   41   46   48 #>  [2159,]   41   46   48 #>  [2160,]   42   47   49 #>  [2161,]   41   46   48 #>  [2162,]   41   46   48 #>  [2163,]   42   47   49 #>  [2164,]   41   46   48 #>  [2165,]   41   46   48 #>  [2166,]   41   46   48 #>  [2167,]   41   46   48 #>  [2168,]   41   46   48 #>  [2169,]   41   46   48 #>  [2170,]   42   47   49 #>  [2171,]   41   46   48 #>  [2172,]   41   46   48 #>  [2173,]   41   46   48 #>  [2174,]   41   46   48 #>  [2175,]   42   47   49 #>  [2176,]   41   46   48 #>  [2177,]   41   46   48 #>  [2178,]   41   46   48 #>  [2179,]   41   46   48 #>  [2180,]   42   47   49 #>  [2181,]   42   47   49 #>  [2182,]   41   46   48 #>  [2183,]   41   46   48 #>  [2184,]   41   46   48 #>  [2185,]   41   46   48 #>  [2186,]   42   47   49 #>  [2187,]   41   46   48 #>  [2188,]   41   46   48 #>  [2189,]   41   46   48 #>  [2190,]   41   46   48 #>  [2191,]   41   46   48 #>  [2192,]   41   46   48 #>  [2193,]   41   46   48 #>  [2194,]   41   46   48 #>  [2195,]   41   46   48 #>  [2196,]   41   46   48 #>  [2197,]   41   46   48 #>  [2198,]   41   46   48 #>  [2199,]   41   46   48 #>  [2200,]   41   46   48 #>  [2201,]   44   49   51 #>  [2202,]   43   48   50 #>  [2203,]   44   49   51 #>  [2204,]   45   49   51 #>  [2205,]   44   49   51 #>  [2206,]   44   49   51 #>  [2207,]   44   49   51 #>  [2208,]   44   49   51 #>  [2209,]   43   48   50 #>  [2210,]   43   48   50 #>  [2211,]   45   49   51 #>  [2212,]   43   48   50 #>  [2213,]   43   48   50 #>  [2214,]   45   49   51 #>  [2215,]   45   49   51 #>  [2216,]   44   49   51 #>  [2217,]   43   48   50 #>  [2218,]   43   48   50 #>  [2219,]   45   49   51 #>  [2220,]   43   48   50 #>  [2221,]   43   48   50 #>  [2222,]   44   49   51 #>  [2223,]   43   48   50 #>  [2224,]   43   48   50 #>  [2225,]   44   49   51 #>  [2226,]   44   49   51 #>  [2227,]   43   48   50 #>  [2228,]   44   49   51 #>  [2229,]   43   48   50 #>  [2230,]   44   49   51 #>  [2231,]   43   48   50 #>  [2232,]   43   48   50 #>  [2233,]   43   48   50 #>  [2234,]   44   49   51 #>  [2235,]   44   49   51 #>  [2236,]   43   48   50 #>  [2237,]   44   49   51 #>  [2238,]   45   49   51 #>  [2239,]   44   49   51 #>  [2240,]   43   48   50 #>  [2241,]   45   49   51 #>  [2242,]   45   49   51 #>  [2243,]   44   49   51 #>  [2244,]   44   49   51 #>  [2245,]   44   49   51 #>  [2246,]   44   49   51 #>  [2247,]   44   49   51 #>  [2248,]   45   49   51 #>  [2249,]   44   49   51 #>  [2250,]   44   49   51 #>  [2251,]   44   49   51 #>  [2252,]   44   49   51 #>  [2253,]   43   48   50 #>  [2254,]   44   49   51 #>  [2255,]   44   49   51 #>  [2256,]   44   49   51 #>  [2257,]   44   49   51 #>  [2258,]   45   49   51 #>  [2259,]   44   49   51 #>  [2260,]   43   48   50 #>  [2261,]   43   48   50 #>  [2262,]   44   49   51 #>  [2263,]   43   48   50 #>  [2264,]   44   49   51 #>  [2265,]   44   49   51 #>  [2266,]   44   49   51 #>  [2267,]   44   49   51 #>  [2268,]   45   49   51 #>  [2269,]   45   49   51 #>  [2270,]   43   48   50 #>  [2271,]   44   49   51 #>  [2272,]   44   49   51 #>  [2273,]   44   49   51 #>  [2274,]   45   49   51 #>  [2275,]   43   48   50 #>  [2276,]   44   49   51 #>  [2277,]   44   49   51 #>  [2278,]   44   49   51 #>  [2279,]   44   49   51 #>  [2280,]   43   48   50 #>  [2281,]   43   48   50 #>  [2282,]   45   49   51 #>  [2283,]   43   48   50 #>  [2284,]   43   48   50 #>  [2285,]   44   49   51 #>  [2286,]   43   48   50 #>  [2287,]   44   49   51 #>  [2288,]   43   48   50 #>  [2289,]   44   49   51 #>  [2290,]   44   49   51 #>  [2291,]   44   49   51 #>  [2292,]   45   49   51 #>  [2293,]   45   49   51 #>  [2294,]   44   49   51 #>  [2295,]   44   49   51 #>  [2296,]   45   49   51 #>  [2297,]   45   49   51 #>  [2298,]   44   49   51 #>  [2299,]   44   49   51 #>  [2300,]   44   49   51 #>  [2301,]   47   53   53 #>  [2302,]   46   50   52 #>  [2303,]   46   50   52 #>  [2304,]   47   53   53 #>  [2305,]   47   52   53 #>  [2306,]   46   51   52 #>  [2307,]   46   50   52 #>  [2308,]   46   51   52 #>  [2309,]   46   51   52 #>  [2310,]   47   53   53 #>  [2311,]   47   52   53 #>  [2312,]   47   52   53 #>  [2313,]   47   53   53 #>  [2314,]   47   52   53 #>  [2315,]   47   53   53 #>  [2316,]   47   53   53 #>  [2317,]   47   53   53 #>  [2318,]   47   53   53 #>  [2319,]   47   52   53 #>  [2320,]   46   50   52 #>  [2321,]   46   50   52 #>  [2322,]   47   52   53 #>  [2323,]   46   50   52 #>  [2324,]   47   52   53 #>  [2325,]   46   50   52 #>  [2326,]   47   52   53 #>  [2327,]   47   53   53 #>  [2328,]   47   53   53 #>  [2329,]   46   50   52 #>  [2330,]   47   52   53 #>  [2331,]   47   52   53 #>  [2332,]   47   52   53 #>  [2333,]   47   52   53 #>  [2334,]   46   50   52 #>  [2335,]   46   50   52 #>  [2336,]   46   50   52 #>  [2337,]   46   50   52 #>  [2338,]   47   52   53 #>  [2339,]   47   53   53 #>  [2340,]   47   52   53 #>  [2341,]   46   50   52 #>  [2342,]   46   50   52 #>  [2343,]   47   53   53 #>  [2344,]   46   50   52 #>  [2345,]   46   51   52 #>  [2346,]   47   53   53 #>  [2347,]   47   53   53 #>  [2348,]   47   52   53 #>  [2349,]   47   52   53 #>  [2350,]   46   50   52 #>  [2351,]   47   52   53 #>  [2352,]   47   52   53 #>  [2353,]   46   50   52 #>  [2354,]   46   50   52 #>  [2355,]   46   50   52 #>  [2356,]   46   51   52 #>  [2357,]   46   51   52 #>  [2358,]   47   52   53 #>  [2359,]   47   52   53 #>  [2360,]   46   50   52 #>  [2361,]   47   53   53 #>  [2362,]   47   52   53 #>  [2363,]   47   52   53 #>  [2364,]   46   51   52 #>  [2365,]   46   50   52 #>  [2366,]   47   52   53 #>  [2367,]   46   50   52 #>  [2368,]   47   52   53 #>  [2369,]   47   52   53 #>  [2370,]   47   53   53 #>  [2371,]   47   53   53 #>  [2372,]   47   53   53 #>  [2373,]   46   50   52 #>  [2374,]   46   50   52 #>  [2375,]   47   53   53 #>  [2376,]   46   51   52 #>  [2377,]   47   53   53 #>  [2378,]   47   52   53 #>  [2379,]   47   52   53 #>  [2380,]   46   50   52 #>  [2381,]   46   50   52 #>  [2382,]   46   50   52 #>  [2383,]   47   52   53 #>  [2384,]   46   50   52 #>  [2385,]   46   50   52 #>  [2386,]   46   50   52 #>  [2387,]   47   53   53 #>  [2388,]   46   50   52 #>  [2389,]   46   50   52 #>  [2390,]   47   53   53 #>  [2391,]   47   52   53 #>  [2392,]   47   52   53 #>  [2393,]   47   52   53 #>  [2394,]   46   51   52 #>  [2395,]   47   53   53 #>  [2396,]   47   53   53 #>  [2397,]   46   50   52 #>  [2398,]   46   50   52 #>  [2399,]   46   50   52 #>  [2400,]   47   53   53 #>  [2401,]   49   55   54 #>  [2402,]   48   54   56 #>  [2403,]   48   54   56 #>  [2404,]   49   55   54 #>  [2405,]   49   55   54 #>  [2406,]   49   55   54 #>  [2407,]   48   54   56 #>  [2408,]   49   55   54 #>  [2409,]   49   55   54 #>  [2410,]   49   55   54 #>  [2411,]   49   55   54 #>  [2412,]   49   55   54 #>  [2413,]   48   54   55 #>  [2414,]   49   55   54 #>  [2415,]   49   55   54 #>  [2416,]   48   54   55 #>  [2417,]   49   55   54 #>  [2418,]   48   54   56 #>  [2419,]   48   54   56 #>  [2420,]   49   55   54 #>  [2421,]   48   54   55 #>  [2422,]   48   54   55 #>  [2423,]   48   54   56 #>  [2424,]   48   54   55 #>  [2425,]   49   55   54 #>  [2426,]   49   55   54 #>  [2427,]   49   55   54 #>  [2428,]   49   55   54 #>  [2429,]   49   55   54 #>  [2430,]   48   54   55 #>  [2431,]   48   54   56 #>  [2432,]   48   54   56 #>  [2433,]   49   55   54 #>  [2434,]   48   54   56 #>  [2435,]   48   54   55 #>  [2436,]   48   54   55 #>  [2437,]   48   54   55 #>  [2438,]   49   55   54 #>  [2439,]   48   54   55 #>  [2440,]   48   54   56 #>  [2441,]   49   55   54 #>  [2442,]   49   55   54 #>  [2443,]   49   55   54 #>  [2444,]   48   54   55 #>  [2445,]   49   55   54 #>  [2446,]   49   55   54 #>  [2447,]   48   54   55 #>  [2448,]   49   55   54 #>  [2449,]   48   54   55 #>  [2450,]   49   55   54 #>  [2451,]   49   55   54 #>  [2452,]   49   55   54 #>  [2453,]   49   55   54 #>  [2454,]   48   54   55 #>  [2455,]   49   55   54 #>  [2456,]   49   55   54 #>  [2457,]   49   55   54 #>  [2458,]   49   55   54 #>  [2459,]   48   54   55 #>  [2460,]   49   55   54 #>  [2461,]   49   55   54 #>  [2462,]   48   54   55 #>  [2463,]   49   55   54 #>  [2464,]   49   55   54 #>  [2465,]   49   55   54 #>  [2466,]   49   55   54 #>  [2467,]   49   55   54 #>  [2468,]   49   55   54 #>  [2469,]   49   55   54 #>  [2470,]   48   54   56 #>  [2471,]   49   55   54 #>  [2472,]   49   55   54 #>  [2473,]   49   55   54 #>  [2474,]   49   55   54 #>  [2475,]   49   55   54 #>  [2476,]   49   55   54 #>  [2477,]   48   54   56 #>  [2478,]   49   55   54 #>  [2479,]   48   54   55 #>  [2480,]   48   54   55 #>  [2481,]   49   55   54 #>  [2482,]   49   55   54 #>  [2483,]   48   54   55 #>  [2484,]   49   55   54 #>  [2485,]   49   55   54 #>  [2486,]   48   54   56 #>  [2487,]   49   55   54 #>  [2488,]   49   55   54 #>  [2489,]   49   55   54 #>  [2490,]   49   55   54 #>  [2491,]   49   55   54 #>  [2492,]   49   55   54 #>  [2493,]   48   54   56 #>  [2494,]   49   55   54 #>  [2495,]   48   54   55 #>  [2496,]   49   55   54 #>  [2497,]   49   55   54 #>  [2498,]   48   54   56 #>  [2499,]   49   55   54 #>  [2500,]   48   54   56 #>  [2501,]   51   57   58 #>  [2502,]   51   57   58 #>  [2503,]   50   56   57 #>  [2504,]   51   57   58 #>  [2505,]   51   57   58 #>  [2506,]   51   57   58 #>  [2507,]   50   56   57 #>  [2508,]   50   56   57 #>  [2509,]   51   57   58 #>  [2510,]   51   57   58 #>  [2511,]   51   57   58 #>  [2512,]   51   57   58 #>  [2513,]   50   56   57 #>  [2514,]   51   57   58 #>  [2515,]   51   57   58 #>  [2516,]   50   56   57 #>  [2517,]   51   57   58 #>  [2518,]   51   57   58 #>  [2519,]   51   57   58 #>  [2520,]   50   56   57 #>  [2521,]   51   57   58 #>  [2522,]   50   56   57 #>  [2523,]   51   57   58 #>  [2524,]   50   56   57 #>  [2525,]   50   56   57 #>  [2526,]   51   57   58 #>  [2527,]   51   57   58 #>  [2528,]   51   57   58 #>  [2529,]   51   57   58 #>  [2530,]   51   57   58 #>  [2531,]   51   57   58 #>  [2532,]   51   57   58 #>  [2533,]   51   57   58 #>  [2534,]   51   57   58 #>  [2535,]   51   57   58 #>  [2536,]   51   57   58 #>  [2537,]   51   57   58 #>  [2538,]   51   57   58 #>  [2539,]   50   56   57 #>  [2540,]   50   56   57 #>  [2541,]   51   57   58 #>  [2542,]   51   57   58 #>  [2543,]   51   57   58 #>  [2544,]   50   56   57 #>  [2545,]   51   57   58 #>  [2546,]   50   56   57 #>  [2547,]   51   57   58 #>  [2548,]   51   57   58 #>  [2549,]   50   56   57 #>  [2550,]   50   56   57 #>  [2551,]   51   57   58 #>  [2552,]   51   57   58 #>  [2553,]   50   56   57 #>  [2554,]   51   57   58 #>  [2555,]   50   56   57 #>  [2556,]   50   56   57 #>  [2557,]   51   57   58 #>  [2558,]   51   57   58 #>  [2559,]   50   56   57 #>  [2560,]   51   57   58 #>  [2561,]   51   57   58 #>  [2562,]   51   57   58 #>  [2563,]   50   56   57 #>  [2564,]   51   57   58 #>  [2565,]   50   56   57 #>  [2566,]   50   56   57 #>  [2567,]   51   57   58 #>  [2568,]   51   57   58 #>  [2569,]   51   57   58 #>  [2570,]   50   56   57 #>  [2571,]   51   57   58 #>  [2572,]   50   56   57 #>  [2573,]   51   57   58 #>  [2574,]   51   57   58 #>  [2575,]   51   57   58 #>  [2576,]   51   57   58 #>  [2577,]   51   57   58 #>  [2578,]   51   57   58 #>  [2579,]   51   57   58 #>  [2580,]   51   57   58 #>  [2581,]   51   57   58 #>  [2582,]   51   57   58 #>  [2583,]   51   57   58 #>  [2584,]   50   56   57 #>  [2585,]   51   57   58 #>  [2586,]   50   56   57 #>  [2587,]   51   57   58 #>  [2588,]   51   57   58 #>  [2589,]   50   56   57 #>  [2590,]   50   56   57 #>  [2591,]   51   57   58 #>  [2592,]   51   57   58 #>  [2593,]   51   57   58 #>  [2594,]   51   57   58 #>  [2595,]   51   57   58 #>  [2596,]   51   57   58 #>  [2597,]   51   57   58 #>  [2598,]   50   56   57 #>  [2599,]   51   57   58 #>  [2600,]   50   56   57 #>  [2601,]   53   59   60 #>  [2602,]   52   58   59 #>  [2603,]   52   58   59 #>  [2604,]   52   58   59 #>  [2605,]   53   59   60 #>  [2606,]   52   58   59 #>  [2607,]   52   58   59 #>  [2608,]   52   58   59 #>  [2609,]   53   59   60 #>  [2610,]   52   58   59 #>  [2611,]   53   59   60 #>  [2612,]   52   58   59 #>  [2613,]   53   59   60 #>  [2614,]   52   58   59 #>  [2615,]   52   58   59 #>  [2616,]   52   58   59 #>  [2617,]   53   59   60 #>  [2618,]   53   59   60 #>  [2619,]   53   59   60 #>  [2620,]   53   59   60 #>  [2621,]   53   59   60 #>  [2622,]   53   59   60 #>  [2623,]   52   58   59 #>  [2624,]   53   59   60 #>  [2625,]   52   58   59 #>  [2626,]   52   58   59 #>  [2627,]   53   59   60 #>  [2628,]   53   59   60 #>  [2629,]   53   59   60 #>  [2630,]   52   58   59 #>  [2631,]   52   58   59 #>  [2632,]   52   58   59 #>  [2633,]   53   59   60 #>  [2634,]   52   58   59 #>  [2635,]   52   58   59 #>  [2636,]   53   59   60 #>  [2637,]   52   58   59 #>  [2638,]   53   59   60 #>  [2639,]   53   59   60 #>  [2640,]   52   58   59 #>  [2641,]   53   59   60 #>  [2642,]   53   59   60 #>  [2643,]   52   58   59 #>  [2644,]   52   58   59 #>  [2645,]   52   58   59 #>  [2646,]   52   58   59 #>  [2647,]   52   58   59 #>  [2648,]   52   58   59 #>  [2649,]   52   58   59 #>  [2650,]   53   59   60 #>  [2651,]   53   59   60 #>  [2652,]   52   58   59 #>  [2653,]   53   59   60 #>  [2654,]   53   59   60 #>  [2655,]   52   58   59 #>  [2656,]   53   59   60 #>  [2657,]   52   58   59 #>  [2658,]   53   59   60 #>  [2659,]   52   58   59 #>  [2660,]   52   58   59 #>  [2661,]   53   59   60 #>  [2662,]   53   59   60 #>  [2663,]   52   58   59 #>  [2664,]   53   59   60 #>  [2665,]   53   59   60 #>  [2666,]   53   59   60 #>  [2667,]   52   58   59 #>  [2668,]   52   58   59 #>  [2669,]   52   58   59 #>  [2670,]   53   59   60 #>  [2671,]   52   58   59 #>  [2672,]   52   58   59 #>  [2673,]   53   59   60 #>  [2674,]   52   58   59 #>  [2675,]   52   58   59 #>  [2676,]   52   58   59 #>  [2677,]   53   59   60 #>  [2678,]   52   58   59 #>  [2679,]   53   59   60 #>  [2680,]   52   58   59 #>  [2681,]   53   59   60 #>  [2682,]   53   59   60 #>  [2683,]   53   59   60 #>  [2684,]   53   59   60 #>  [2685,]   53   59   60 #>  [2686,]   52   58   59 #>  [2687,]   53   59   60 #>  [2688,]   52   58   59 #>  [2689,]   53   59   60 #>  [2690,]   53   59   60 #>  [2691,]   53   59   60 #>  [2692,]   52   58   59 #>  [2693,]   53   59   60 #>  [2694,]   53   59   60 #>  [2695,]   52   58   59 #>  [2696,]   52   58   59 #>  [2697,]   52   58   59 #>  [2698,]   52   58   59 #>  [2699,]   53   59   60 #>  [2700,]   53   59   60 #>  [2701,]   54   60   61 #>  [2702,]   54   60   61 #>  [2703,]   54   60   61 #>  [2704,]   55   61   62 #>  [2705,]   54   60   61 #>  [2706,]   54   60   61 #>  [2707,]   54   60   61 #>  [2708,]   54   60   61 #>  [2709,]   54   60   61 #>  [2710,]   54   60   61 #>  [2711,]   55   61   62 #>  [2712,]   55   61   62 #>  [2713,]   54   60   61 #>  [2714,]   55   61   62 #>  [2715,]   55   61   62 #>  [2716,]   54   60   61 #>  [2717,]   54   60   61 #>  [2718,]   54   60   61 #>  [2719,]   55   61   62 #>  [2720,]   54   60   61 #>  [2721,]   55   61   62 #>  [2722,]   54   60   61 #>  [2723,]   54   60   61 #>  [2724,]   54   60   61 #>  [2725,]   54   60   61 #>  [2726,]   54   60   61 #>  [2727,]   55   61   62 #>  [2728,]   54   60   61 #>  [2729,]   54   60   61 #>  [2730,]   54   60   61 #>  [2731,]   54   60   61 #>  [2732,]   54   60   61 #>  [2733,]   54   60   61 #>  [2734,]   54   60   61 #>  [2735,]   54   60   61 #>  [2736,]   54   60   61 #>  [2737,]   54   60   61 #>  [2738,]   55   61   62 #>  [2739,]   54   60   61 #>  [2740,]   54   60   61 #>  [2741,]   55   61   62 #>  [2742,]   55   61   62 #>  [2743,]   54   60   61 #>  [2744,]   54   60   61 #>  [2745,]   54   60   61 #>  [2746,]   54   60   61 #>  [2747,]   54   60   61 #>  [2748,]   55   61   62 #>  [2749,]   54   60   61 #>  [2750,]   54   60   61 #>  [2751,]   54   60   61 #>  [2752,]   54   60   61 #>  [2753,]   54   60   61 #>  [2754,]   54   60   61 #>  [2755,]   54   60   61 #>  [2756,]   54   60   61 #>  [2757,]   54   60   61 #>  [2758,]   54   60   61 #>  [2759,]   54   60   61 #>  [2760,]   54   60   61 #>  [2761,]   55   61   62 #>  [2762,]   54   60   61 #>  [2763,]   54   60   61 #>  [2764,]   54   60   61 #>  [2765,]   54   60   61 #>  [2766,]   54   60   61 #>  [2767,]   54   60   61 #>  [2768,]   55   61   62 #>  [2769,]   55   61   62 #>  [2770,]   54   60   61 #>  [2771,]   54   60   61 #>  [2772,]   54   60   61 #>  [2773,]   54   60   61 #>  [2774,]   55   61   62 #>  [2775,]   55   61   62 #>  [2776,]   54   60   61 #>  [2777,]   54   60   61 #>  [2778,]   54   60   61 #>  [2779,]   54   60   61 #>  [2780,]   54   60   61 #>  [2781,]   54   60   61 #>  [2782,]   55   61   62 #>  [2783,]   54   60   61 #>  [2784,]   54   60   61 #>  [2785,]   54   60   61 #>  [2786,]   54   60   61 #>  [2787,]   54   60   61 #>  [2788,]   54   60   61 #>  [2789,]   54   60   61 #>  [2790,]   54   60   61 #>  [2791,]   54   60   61 #>  [2792,]   55   61   62 #>  [2793,]   55   61   62 #>  [2794,]   54   60   61 #>  [2795,]   54   60   61 #>  [2796,]   55   61   62 #>  [2797,]   55   61   62 #>  [2798,]   54   60   61 #>  [2799,]   54   60   61 #>  [2800,]   54   60   61 #>  [2801,]   56   62   63 #>  [2802,]   56   62   63 #>  [2803,]   57   63   64 #>  [2804,]   56   62   63 #>  [2805,]   56   62   63 #>  [2806,]   57   63   64 #>  [2807,]   56   62   63 #>  [2808,]   56   62   63 #>  [2809,]   56   62   63 #>  [2810,]   56   62   63 #>  [2811,]   56   62   63 #>  [2812,]   56   62   63 #>  [2813,]   56   62   63 #>  [2814,]   56   62   63 #>  [2815,]   56   62   63 #>  [2816,]   56   62   63 #>  [2817,]   56   62   63 #>  [2818,]   56   62   63 #>  [2819,]   57   63   64 #>  [2820,]   56   62   63 #>  [2821,]   56   62   63 #>  [2822,]   56   62   63 #>  [2823,]   56   62   63 #>  [2824,]   56   62   63 #>  [2825,]   57   63   64 #>  [2826,]   56   62   63 #>  [2827,]   56   62   63 #>  [2828,]   56   62   63 #>  [2829,]   56   62   63 #>  [2830,]   56   62   63 #>  [2831,]   56   62   63 #>  [2832,]   56   62   63 #>  [2833,]   57   63   64 #>  [2834,]   57   63   64 #>  [2835,]   56   62   63 #>  [2836,]   56   62   63 #>  [2837,]   56   62   63 #>  [2838,]   56   62   63 #>  [2839,]   56   62   63 #>  [2840,]   56   62   63 #>  [2841,]   56   62   63 #>  [2842,]   56   62   63 #>  [2843,]   56   62   63 #>  [2844,]   56   62   63 #>  [2845,]   56   62   63 #>  [2846,]   56   62   63 #>  [2847,]   56   62   63 #>  [2848,]   56   62   63 #>  [2849,]   56   62   63 #>  [2850,]   56   62   63 #>  [2851,]   56   62   63 #>  [2852,]   56   62   63 #>  [2853,]   56   62   63 #>  [2854,]   56   62   63 #>  [2855,]   56   62   63 #>  [2856,]   56   62   63 #>  [2857,]   56   62   63 #>  [2858,]   56   62   63 #>  [2859,]   56   62   63 #>  [2860,]   57   63   64 #>  [2861,]   56   62   63 #>  [2862,]   56   62   63 #>  [2863,]   56   62   63 #>  [2864,]   56   62   63 #>  [2865,]   57   63   64 #>  [2866,]   56   62   63 #>  [2867,]   56   62   63 #>  [2868,]   56   62   63 #>  [2869,]   56   62   63 #>  [2870,]   57   63   64 #>  [2871,]   56   62   63 #>  [2872,]   56   62   63 #>  [2873,]   57   63   64 #>  [2874,]   56   62   63 #>  [2875,]   56   62   63 #>  [2876,]   56   62   63 #>  [2877,]   56   62   63 #>  [2878,]   56   62   63 #>  [2879,]   56   62   63 #>  [2880,]   56   62   63 #>  [2881,]   56   62   63 #>  [2882,]   56   62   63 #>  [2883,]   56   62   63 #>  [2884,]   56   62   63 #>  [2885,]   56   62   63 #>  [2886,]   56   62   63 #>  [2887,]   56   62   63 #>  [2888,]   56   62   63 #>  [2889,]   56   62   63 #>  [2890,]   56   62   63 #>  [2891,]   56   62   63 #>  [2892,]   56   62   63 #>  [2893,]   57   63   64 #>  [2894,]   56   62   63 #>  [2895,]   56   62   63 #>  [2896,]   56   62   63 #>  [2897,]   56   62   63 #>  [2898,]   57   63   64 #>  [2899,]   56   62   63 #>  [2900,]   56   62   63 #>  [2901,]   58   64   65 #>  [2902,]   58   64   65 #>  [2903,]   58   64   65 #>  [2904,]   58   64   65 #>  [2905,]   58   64   65 #>  [2906,]   58   64   65 #>  [2907,]   58   64   65 #>  [2908,]   58   64   65 #>  [2909,]   58   64   65 #>  [2910,]   58   64   65 #>  [2911,]   58   64   65 #>  [2912,]   58   64   65 #>  [2913,]   58   64   65 #>  [2914,]   58   64   65 #>  [2915,]   58   64   65 #>  [2916,]   58   64   65 #>  [2917,]   58   64   65 #>  [2918,]   58   64   65 #>  [2919,]   59   65   66 #>  [2920,]   59   65   66 #>  [2921,]   58   64   65 #>  [2922,]   59   65   66 #>  [2923,]   58   64   65 #>  [2924,]   58   64   65 #>  [2925,]   58   64   65 #>  [2926,]   58   64   65 #>  [2927,]   59   65   66 #>  [2928,]   58   64   65 #>  [2929,]   59   65   66 #>  [2930,]   58   64   65 #>  [2931,]   58   64   65 #>  [2932,]   58   64   65 #>  [2933,]   58   64   65 #>  [2934,]   58   64   65 #>  [2935,]   58   64   65 #>  [2936,]   59   65   66 #>  [2937,]   58   64   65 #>  [2938,]   58   64   65 #>  [2939,]   58   64   65 #>  [2940,]   58   64   65 #>  [2941,]   58   64   65 #>  [2942,]   58   64   65 #>  [2943,]   58   64   65 #>  [2944,]   58   64   65 #>  [2945,]   58   64   65 #>  [2946,]   58   64   65 #>  [2947,]   58   64   65 #>  [2948,]   58   64   65 #>  [2949,]   58   64   65 #>  [2950,]   58   64   65 #>  [2951,]   58   64   65 #>  [2952,]   58   64   65 #>  [2953,]   58   64   65 #>  [2954,]   58   64   65 #>  [2955,]   58   64   65 #>  [2956,]   58   64   65 #>  [2957,]   58   64   65 #>  [2958,]   59   65   66 #>  [2959,]   58   64   65 #>  [2960,]   58   64   65 #>  [2961,]   58   64   65 #>  [2962,]   58   64   65 #>  [2963,]   58   64   65 #>  [2964,]   59   65   66 #>  [2965,]   58   64   65 #>  [2966,]   59   65   66 #>  [2967,]   58   64   65 #>  [2968,]   58   64   65 #>  [2969,]   58   64   65 #>  [2970,]   58   64   65 #>  [2971,]   58   64   65 #>  [2972,]   58   64   65 #>  [2973,]   58   64   65 #>  [2974,]   58   64   65 #>  [2975,]   58   64   65 #>  [2976,]   58   64   65 #>  [2977,]   59   65   66 #>  [2978,]   58   64   65 #>  [2979,]   58   64   65 #>  [2980,]   58   64   65 #>  [2981,]   59   65   66 #>  [2982,]   58   64   65 #>  [2983,]   58   64   65 #>  [2984,]   58   64   65 #>  [2985,]   58   64   65 #>  [2986,]   58   64   65 #>  [2987,]   59   65   66 #>  [2988,]   58   64   65 #>  [2989,]   58   64   65 #>  [2990,]   58   64   65 #>  [2991,]   58   64   65 #>  [2992,]   58   64   65 #>  [2993,]   58   64   65 #>  [2994,]   58   64   65 #>  [2995,]   58   64   65 #>  [2996,]   58   64   65 #>  [2997,]   59   65   66 #>  [2998,]   58   64   65 #>  [2999,]   58   64   65 #>  [3000,]   59   65   66 #>  [3001,]   61   67   67 #>  [3002,]   61   67   67 #>  [3003,]   60   66   68 #>  [3004,]   61   67   67 #>  [3005,]   61   67   67 #>  [3006,]   61   67   67 #>  [3007,]   60   66   68 #>  [3008,]   60   66   68 #>  [3009,]   61   67   67 #>  [3010,]   61   67   67 #>  [3011,]   61   67   67 #>  [3012,]   61   67   67 #>  [3013,]   61   67   67 #>  [3014,]   61   67   67 #>  [3015,]   61   67   67 #>  [3016,]   61   67   67 #>  [3017,]   61   67   67 #>  [3018,]   61   67   67 #>  [3019,]   61   67   67 #>  [3020,]   60   66   68 #>  [3021,]   61   67   67 #>  [3022,]   61   67   67 #>  [3023,]   61   67   67 #>  [3024,]   61   67   67 #>  [3025,]   60   66   68 #>  [3026,]   61   67   67 #>  [3027,]   61   67   67 #>  [3028,]   61   67   67 #>  [3029,]   61   67   67 #>  [3030,]   61   67   67 #>  [3031,]   61   67   67 #>  [3032,]   61   67   67 #>  [3033,]   61   67   67 #>  [3034,]   61   67   67 #>  [3035,]   61   67   67 #>  [3036,]   61   67   67 #>  [3037,]   61   67   67 #>  [3038,]   61   67   67 #>  [3039,]   60   66   68 #>  [3040,]   61   67   67 #>  [3041,]   61   67   67 #>  [3042,]   61   67   67 #>  [3043,]   61   67   67 #>  [3044,]   60   66   68 #>  [3045,]   61   67   67 #>  [3046,]   60   66   68 #>  [3047,]   61   67   67 #>  [3048,]   61   67   67 #>  [3049,]   60   66   68 #>  [3050,]   60   66   68 #>  [3051,]   61   67   67 #>  [3052,]   61   67   67 #>  [3053,]   60   66   68 #>  [3054,]   61   67   67 #>  [3055,]   60   66   68 #>  [3056,]   60   66   68 #>  [3057,]   61   67   67 #>  [3058,]   61   67   67 #>  [3059,]   60   66   68 #>  [3060,]   61   67   67 #>  [3061,]   61   67   67 #>  [3062,]   61   67   67 #>  [3063,]   61   67   67 #>  [3064,]   61   67   67 #>  [3065,]   60   66   68 #>  [3066,]   60   66   68 #>  [3067,]   61   67   67 #>  [3068,]   61   67   67 #>  [3069,]   61   67   67 #>  [3070,]   60   66   68 #>  [3071,]   61   67   67 #>  [3072,]   60   66   68 #>  [3073,]   61   67   67 #>  [3074,]   61   67   67 #>  [3075,]   61   67   67 #>  [3076,]   61   67   67 #>  [3077,]   61   67   67 #>  [3078,]   61   67   67 #>  [3079,]   61   67   67 #>  [3080,]   61   67   67 #>  [3081,]   61   67   67 #>  [3082,]   61   67   67 #>  [3083,]   61   67   67 #>  [3084,]   60   66   68 #>  [3085,]   61   67   67 #>  [3086,]   60   66   68 #>  [3087,]   61   67   67 #>  [3088,]   61   67   67 #>  [3089,]   61   67   67 #>  [3090,]   60   66   68 #>  [3091,]   61   67   67 #>  [3092,]   61   67   67 #>  [3093,]   61   67   67 #>  [3094,]   61   67   67 #>  [3095,]   61   67   67 #>  [3096,]   61   67   67 #>  [3097,]   61   67   67 #>  [3098,]   60   66   68 #>  [3099,]   61   67   67 #>  [3100,]   60   66   68 #>  [3101,]   63   69   70 #>  [3102,]   63   69   69 #>  [3103,]   62   68   69 #>  [3104,]   62   68   70 #>  [3105,]   63   69   70 #>  [3106,]   63   69   69 #>  [3107,]   62   68   69 #>  [3108,]   62   68   69 #>  [3109,]   63   69   69 #>  [3110,]   63   69   70 #>  [3111,]   63   69   70 #>  [3112,]   62   68   70 #>  [3113,]   63   69   70 #>  [3114,]   63   69   70 #>  [3115,]   63   69   70 #>  [3116,]   63   69   70 #>  [3117,]   63   69   70 #>  [3118,]   63   69   70 #>  [3119,]   63   69   70 #>  [3120,]   63   69   69 #>  [3121,]   63   69   69 #>  [3122,]   63   69   70 #>  [3123,]   63   69   69 #>  [3124,]   63   69   70 #>  [3125,]   62   68   69 #>  [3126,]   63   69   70 #>  [3127,]   63   69   70 #>  [3128,]   63   69   70 #>  [3129,]   63   69   69 #>  [3130,]   63   69   69 #>  [3131,]   62   68   70 #>  [3132,]   63   69   70 #>  [3133,]   63   69   70 #>  [3134,]   63   69   69 #>  [3135,]   63   69   69 #>  [3136,]   63   69   69 #>  [3137,]   63   69   69 #>  [3138,]   63   69   70 #>  [3139,]   63   69   70 #>  [3140,]   63   69   69 #>  [3141,]   63   69   69 #>  [3142,]   63   69   69 #>  [3143,]   63   69   70 #>  [3144,]   63   69   69 #>  [3145,]   63   69   69 #>  [3146,]   63   69   70 #>  [3147,]   63   69   70 #>  [3148,]   63   69   70 #>  [3149,]   63   69   69 #>  [3150,]   63   69   69 #>  [3151,]   63   69   70 #>  [3152,]   62   68   70 #>  [3153,]   63   69   69 #>  [3154,]   63   69   69 #>  [3155,]   63   69   69 #>  [3156,]   63   69   69 #>  [3157,]   63   69   69 #>  [3158,]   63   69   70 #>  [3159,]   62   68   70 #>  [3160,]   62   68   69 #>  [3161,]   63   69   70 #>  [3162,]   63   69   69 #>  [3163,]   63   69   70 #>  [3164,]   63   69   69 #>  [3165,]   63   69   69 #>  [3166,]   63   69   70 #>  [3167,]   63   69   69 #>  [3168,]   63   69   70 #>  [3169,]   63   69   70 #>  [3170,]   63   69   70 #>  [3171,]   63   69   70 #>  [3172,]   63   69   69 #>  [3173,]   63   69   69 #>  [3174,]   63   69   69 #>  [3175,]   63   69   70 #>  [3176,]   63   69   69 #>  [3177,]   63   69   70 #>  [3178,]   63   69   70 #>  [3179,]   63   69   70 #>  [3180,]   63   69   69 #>  [3181,]   63   69   69 #>  [3182,]   63   69   69 #>  [3183,]   63   69   70 #>  [3184,]   63   69   69 #>  [3185,]   63   69   69 #>  [3186,]   63   69   69 #>  [3187,]   63   69   70 #>  [3188,]   63   69   69 #>  [3189,]   63   69   69 #>  [3190,]   63   69   70 #>  [3191,]   63   69   70 #>  [3192,]   63   69   70 #>  [3193,]   63   69   70 #>  [3194,]   63   69   69 #>  [3195,]   63   69   70 #>  [3196,]   62   68   70 #>  [3197,]   62   68   69 #>  [3198,]   63   69   69 #>  [3199,]   63   69   69 #>  [3200,]   63   69   70 #>  [3201,]   65   71   71 #>  [3202,]   65   71   71 #>  [3203,]   65   71   71 #>  [3204,]   65   71   71 #>  [3205,]   65   71   71 #>  [3206,]   65   71   71 #>  [3207,]   65   71   71 #>  [3208,]   65   71   71 #>  [3209,]   65   71   71 #>  [3210,]   65   71   71 #>  [3211,]   65   71   71 #>  [3212,]   64   70   72 #>  [3213,]   65   71   71 #>  [3214,]   65   71   71 #>  [3215,]   64   70   72 #>  [3216,]   65   71   71 #>  [3217,]   64   70   72 #>  [3218,]   65   71   71 #>  [3219,]   65   71   71 #>  [3220,]   65   71   71 #>  [3221,]   65   71   71 #>  [3222,]   65   71   71 #>  [3223,]   64   70   72 #>  [3224,]   65   71   71 #>  [3225,]   65   71   71 #>  [3226,]   65   71   71 #>  [3227,]   65   71   71 #>  [3228,]   65   71   71 #>  [3229,]   64   70   72 #>  [3230,]   65   71   71 #>  [3231,]   64   70   72 #>  [3232,]   65   71   71 #>  [3233,]   65   71   71 #>  [3234,]   64   70   72 #>  [3235,]   65   71   71 #>  [3236,]   65   71   71 #>  [3237,]   64   70   72 #>  [3238,]   65   71   71 #>  [3239,]   65   71   71 #>  [3240,]   65   71   71 #>  [3241,]   65   71   71 #>  [3242,]   64   70   72 #>  [3243,]   64   70   72 #>  [3244,]   64   70   72 #>  [3245,]   65   71   71 #>  [3246,]   65   71   71 #>  [3247,]   65   71   71 #>  [3248,]   64   70   72 #>  [3249,]   65   71   71 #>  [3250,]   65   71   71 #>  [3251,]   65   71   71 #>  [3252,]   65   71   71 #>  [3253,]   65   71   71 #>  [3254,]   65   71   71 #>  [3255,]   65   71   71 #>  [3256,]   65   71   71 #>  [3257,]   65   71   71 #>  [3258,]   65   71   71 #>  [3259,]   65   71   71 #>  [3260,]   65   71   71 #>  [3261,]   65   71   71 #>  [3262,]   65   71   71 #>  [3263,]   64   70   72 #>  [3264,]   64   70   72 #>  [3265,]   65   71   71 #>  [3266,]   65   71   71 #>  [3267,]   65   71   71 #>  [3268,]   65   71   71 #>  [3269,]   65   71   71 #>  [3270,]   64   70   72 #>  [3271,]   65   71   71 #>  [3272,]   65   71   71 #>  [3273,]   65   71   71 #>  [3274,]   65   71   71 #>  [3275,]   64   70   72 #>  [3276,]   65   71   71 #>  [3277,]   65   71   71 #>  [3278,]   64   70   72 #>  [3279,]   64   70   72 #>  [3280,]   65   71   71 #>  [3281,]   64   70   72 #>  [3282,]   65   71   71 #>  [3283,]   65   71   71 #>  [3284,]   65   71   71 #>  [3285,]   65   71   71 #>  [3286,]   65   71   71 #>  [3287,]   65   71   71 #>  [3288,]   65   71   71 #>  [3289,]   65   71   71 #>  [3290,]   65   71   71 #>  [3291,]   65   71   71 #>  [3292,]   65   71   71 #>  [3293,]   65   71   71 #>  [3294,]   64   70   72 #>  [3295,]   64   70   72 #>  [3296,]   65   71   71 #>  [3297,]   65   71   71 #>  [3298,]   65   71   71 #>  [3299,]   65   71   71 #>  [3300,]   64   70   72 #>  [3301,]   67   72   74 #>  [3302,]   67   72   73 #>  [3303,]   66   72   73 #>  [3304,]   67   72   74 #>  [3305,]   66   72   74 #>  [3306,]   66   72   74 #>  [3307,]   67   72   73 #>  [3308,]   67   72   74 #>  [3309,]   67   72   74 #>  [3310,]   67   72   73 #>  [3311,]   66   72   74 #>  [3312,]   66   72   74 #>  [3313,]   67   72   73 #>  [3314,]   66   72   74 #>  [3315,]   67   72   74 #>  [3316,]   67   72   73 #>  [3317,]   67   72   73 #>  [3318,]   67   72   73 #>  [3319,]   66   72   73 #>  [3320,]   66   72   74 #>  [3321,]   67   72   73 #>  [3322,]   66   72   73 #>  [3323,]   67   72   73 #>  [3324,]   66   72   73 #>  [3325,]   67   72   73 #>  [3326,]   66   72   74 #>  [3327,]   67   72   74 #>  [3328,]   67   72   74 #>  [3329,]   66   72   73 #>  [3330,]   66   72   73 #>  [3331,]   67   72   73 #>  [3332,]   66   72   73 #>  [3333,]   66   72   74 #>  [3334,]   66   72   73 #>  [3335,]   66   72   73 #>  [3336,]   66   72   73 #>  [3337,]   67   72   73 #>  [3338,]   67   72   74 #>  [3339,]   67   72   73 #>  [3340,]   66   72   73 #>  [3341,]   66   72   74 #>  [3342,]   66   72   74 #>  [3343,]   67   72   74 #>  [3344,]   67   72   73 #>  [3345,]   67   72   74 #>  [3346,]   67   72   74 #>  [3347,]   67   72   73 #>  [3348,]   66   72   73 #>  [3349,]   67   72   73 #>  [3350,]   67   72   74 #>  [3351,]   66   72   74 #>  [3352,]   66   72   74 #>  [3353,]   67   72   74 #>  [3354,]   66   72   73 #>  [3355,]   66   72   74 #>  [3356,]   67   72   74 #>  [3357,]   66   72   74 #>  [3358,]   66   72   74 #>  [3359,]   67   72   73 #>  [3360,]   66   72   74 #>  [3361,]   67   72   74 #>  [3362,]   66   72   73 #>  [3363,]   66   72   74 #>  [3364,]   67   72   74 #>  [3365,]   67   72   74 #>  [3366,]   66   72   74 #>  [3367,]   66   72   74 #>  [3368,]   66   72   74 #>  [3369,]   66   72   74 #>  [3370,]   67   72   73 #>  [3371,]   67   72   74 #>  [3372,]   67   72   74 #>  [3373,]   67   72   74 #>  [3374,]   67   72   74 #>  [3375,]   67   72   74 #>  [3376,]   67   72   74 #>  [3377,]   67   72   73 #>  [3378,]   66   72   74 #>  [3379,]   67   72   73 #>  [3380,]   66   72   73 #>  [3381,]   66   72   74 #>  [3382,]   67   72   74 #>  [3383,]   66   72   73 #>  [3384,]   67   72   74 #>  [3385,]   67   72   73 #>  [3386,]   67   72   73 #>  [3387,]   67   72   74 #>  [3388,]   67   72   74 #>  [3389,]   66   72   74 #>  [3390,]   67   72   74 #>  [3391,]   66   72   74 #>  [3392,]   67   72   74 #>  [3393,]   66   72   73 #>  [3394,]   67   72   74 #>  [3395,]   67   72   73 #>  [3396,]   67   72   74 #>  [3397,]   67   72   74 #>  [3398,]   66   72   73 #>  [3399,]   66   72   74 #>  [3400,]   67   72   73 #>  [3401,]   68   74   75 #>  [3402,]   68   74   75 #>  [3403,]   69   73   76 #>  [3404,]   68   74   75 #>  [3405,]   68   74   75 #>  [3406,]   69   73   76 #>  [3407,]   68   74   75 #>  [3408,]   68   74   75 #>  [3409,]   68   74   75 #>  [3410,]   68   74   75 #>  [3411,]   68   74   75 #>  [3412,]   69   73   76 #>  [3413,]   68   74   75 #>  [3414,]   68   74   75 #>  [3415,]   68   74   75 #>  [3416,]   68   74   75 #>  [3417,]   68   74   75 #>  [3418,]   68   74   75 #>  [3419,]   69   73   76 #>  [3420,]   68   74   75 #>  [3421,]   68   74   75 #>  [3422,]   68   74   75 #>  [3423,]   68   74   75 #>  [3424,]   68   74   75 #>  [3425,]   69   73   76 #>  [3426,]   68   74   75 #>  [3427,]   68   74   75 #>  [3428,]   69   73   76 #>  [3429,]   68   74   75 #>  [3430,]   68   74   75 #>  [3431,]   68   74   75 #>  [3432,]   68   74   75 #>  [3433,]   69   73   76 #>  [3434,]   69   73   76 #>  [3435,]   68   74   75 #>  [3436,]   68   74   75 #>  [3437,]   68   74   75 #>  [3438,]   68   74   75 #>  [3439,]   68   74   75 #>  [3440,]   68   74   75 #>  [3441,]   68   74   75 #>  [3442,]   68   74   75 #>  [3443,]   68   74   75 #>  [3444,]   68   74   75 #>  [3445,]   68   74   75 #>  [3446,]   68   74   75 #>  [3447,]   68   74   75 #>  [3448,]   68   74   75 #>  [3449,]   68   74   75 #>  [3450,]   68   74   75 #>  [3451,]   68   74   75 #>  [3452,]   68   74   75 #>  [3453,]   68   74   75 #>  [3454,]   68   74   75 #>  [3455,]   68   74   75 #>  [3456,]   68   74   75 #>  [3457,]   68   74   75 #>  [3458,]   68   74   75 #>  [3459,]   68   74   75 #>  [3460,]   69   73   76 #>  [3461,]   68   74   75 #>  [3462,]   68   74   75 #>  [3463,]   68   74   75 #>  [3464,]   68   74   75 #>  [3465,]   69   73   76 #>  [3466,]   68   74   75 #>  [3467,]   68   74   75 #>  [3468,]   68   74   75 #>  [3469,]   68   74   75 #>  [3470,]   69   73   76 #>  [3471,]   68   74   75 #>  [3472,]   68   74   75 #>  [3473,]   69   73   76 #>  [3474,]   68   74   75 #>  [3475,]   68   74   75 #>  [3476,]   68   74   75 #>  [3477,]   68   74   75 #>  [3478,]   68   74   75 #>  [3479,]   68   74   75 #>  [3480,]   68   74   75 #>  [3481,]   68   74   75 #>  [3482,]   68   74   75 #>  [3483,]   68   74   75 #>  [3484,]   68   74   75 #>  [3485,]   68   74   75 #>  [3486,]   68   74   75 #>  [3487,]   68   74   75 #>  [3488,]   68   74   75 #>  [3489,]   68   74   75 #>  [3490,]   68   74   75 #>  [3491,]   68   74   75 #>  [3492,]   68   74   75 #>  [3493,]   69   73   76 #>  [3494,]   68   74   75 #>  [3495,]   68   74   75 #>  [3496,]   68   74   75 #>  [3497,]   69   73   76 #>  [3498,]   69   73   76 #>  [3499,]   68   74   75 #>  [3500,]   68   74   75 #>  [3501,]   70   76   78 #>  [3502,]   70   76   78 #>  [3503,]   71   75   77 #>  [3504,]   70   75   77 #>  [3505,]   70   75   77 #>  [3506,]   71   75   77 #>  [3507,]   70   76   78 #>  [3508,]   70   76   78 #>  [3509,]   70   75   77 #>  [3510,]   70   75   77 #>  [3511,]   70   75   77 #>  [3512,]   71   76   78 #>  [3513,]   70   76   78 #>  [3514,]   70   75   77 #>  [3515,]   70   76   78 #>  [3516,]   70   76   78 #>  [3517,]   70   76   78 #>  [3518,]   70   76   78 #>  [3519,]   71   76   78 #>  [3520,]   71   76   78 #>  [3521,]   70   75   77 #>  [3522,]   70   76   78 #>  [3523,]   70   76   78 #>  [3524,]   70   75   77 #>  [3525,]   71   75   77 #>  [3526,]   70   76   78 #>  [3527,]   70   76   78 #>  [3528,]   71   75   77 #>  [3529,]   70   76   78 #>  [3530,]   70   76   78 #>  [3531,]   70   75   77 #>  [3532,]   70   75   77 #>  [3533,]   71   76   78 #>  [3534,]   71   75   77 #>  [3535,]   70   75   77 #>  [3536,]   70   76   78 #>  [3537,]   70   76   78 #>  [3538,]   70   76   78 #>  [3539,]   70   75   77 #>  [3540,]   70   75   77 #>  [3541,]   70   76   78 #>  [3542,]   70   75   77 #>  [3543,]   70   76   78 #>  [3544,]   70   76   78 #>  [3545,]   70   76   78 #>  [3546,]   70   76   78 #>  [3547,]   70   75   77 #>  [3548,]   70   75   77 #>  [3549,]   70   76   78 #>  [3550,]   70   76   78 #>  [3551,]   70   76   78 #>  [3552,]   70   75   77 #>  [3553,]   70   76   78 #>  [3554,]   70   75   77 #>  [3555,]   70   76   78 #>  [3556,]   70   76   78 #>  [3557,]   70   75   77 #>  [3558,]   70   76   78 #>  [3559,]   70   76   78 #>  [3560,]   71   76   78 #>  [3561,]   70   76   78 #>  [3562,]   70   75   77 #>  [3563,]   70   76   78 #>  [3564,]   70   76   78 #>  [3565,]   71   75   77 #>  [3566,]   70   76   78 #>  [3567,]   70   76   78 #>  [3568,]   70   76   78 #>  [3569,]   70   76   78 #>  [3570,]   71   75   77 #>  [3571,]   70   76   78 #>  [3572,]   70   75   77 #>  [3573,]   71   76   78 #>  [3574,]   70   75   77 #>  [3575,]   70   76   78 #>  [3576,]   70   75   77 #>  [3577,]   70   76   78 #>  [3578,]   70   76   78 #>  [3579,]   70   76   78 #>  [3580,]   70   76   78 #>  [3581,]   70   76   78 #>  [3582,]   70   75   77 #>  [3583,]   70   76   78 #>  [3584,]   70   76   78 #>  [3585,]   70   76   78 #>  [3586,]   70   76   78 #>  [3587,]   70   76   78 #>  [3588,]   70   76   78 #>  [3589,]   70   76   78 #>  [3590,]   70   76   78 #>  [3591,]   70   75   77 #>  [3592,]   70   76   78 #>  [3593,]   71   76   78 #>  [3594,]   70   76   78 #>  [3595,]   70   76   78 #>  [3596,]   70   76   78 #>  [3597,]   71   76   78 #>  [3598,]   71   75   77 #>  [3599,]   70   76   78 #>  [3600,]   70   76   78 #>  [3601,]   73   78   80 #>  [3602,]   73   78   80 #>  [3603,]   72   77   79 #>  [3604,]   72   77   79 #>  [3605,]   72   77   79 #>  [3606,]   72   77   79 #>  [3607,]   73   78   80 #>  [3608,]   73   78   80 #>  [3609,]   72   77   79 #>  [3610,]   72   77   79 #>  [3611,]   72   77   79 #>  [3612,]   73   78   80 #>  [3613,]   73   78   80 #>  [3614,]   72   77   79 #>  [3615,]   73   78   80 #>  [3616,]   73   78   80 #>  [3617,]   73   78   80 #>  [3618,]   73   78   80 #>  [3619,]   73   78   80 #>  [3620,]   73   78   80 #>  [3621,]   72   77   79 #>  [3622,]   73   78   80 #>  [3623,]   73   78   80 #>  [3624,]   72   77   79 #>  [3625,]   72   77   79 #>  [3626,]   73   78   80 #>  [3627,]   73   78   80 #>  [3628,]   72   77   79 #>  [3629,]   73   78   80 #>  [3630,]   73   78   80 #>  [3631,]   72   77   79 #>  [3632,]   72   77   79 #>  [3633,]   73   78   80 #>  [3634,]   72   77   79 #>  [3635,]   72   77   79 #>  [3636,]   73   78   80 #>  [3637,]   73   78   80 #>  [3638,]   73   78   80 #>  [3639,]   72   77   79 #>  [3640,]   72   77   79 #>  [3641,]   73   78   80 #>  [3642,]   72   77   79 #>  [3643,]   73   78   80 #>  [3644,]   73   78   80 #>  [3645,]   73   78   80 #>  [3646,]   73   78   80 #>  [3647,]   72   77   79 #>  [3648,]   72   77   79 #>  [3649,]   73   78   80 #>  [3650,]   73   78   80 #>  [3651,]   73   78   80 #>  [3652,]   72   77   79 #>  [3653,]   73   78   80 #>  [3654,]   72   77   79 #>  [3655,]   73   78   80 #>  [3656,]   73   78   80 #>  [3657,]   72   77   79 #>  [3658,]   73   78   80 #>  [3659,]   73   78   80 #>  [3660,]   73   78   80 #>  [3661,]   73   78   80 #>  [3662,]   72   77   79 #>  [3663,]   73   78   80 #>  [3664,]   73   78   80 #>  [3665,]   72   77   79 #>  [3666,]   73   78   80 #>  [3667,]   72   77   79 #>  [3668,]   73   78   80 #>  [3669,]   73   78   80 #>  [3670,]   72   77   79 #>  [3671,]   73   78   80 #>  [3672,]   72   77   79 #>  [3673,]   72   77   79 #>  [3674,]   72   77   79 #>  [3675,]   73   78   80 #>  [3676,]   72   77   79 #>  [3677,]   73   78   80 #>  [3678,]   73   78   80 #>  [3679,]   72   77   79 #>  [3680,]   73   78   80 #>  [3681,]   73   78   80 #>  [3682,]   72   77   79 #>  [3683,]   73   78   80 #>  [3684,]   73   78   80 #>  [3685,]   73   78   80 #>  [3686,]   72   77   79 #>  [3687,]   73   78   80 #>  [3688,]   72   77   79 #>  [3689,]   72   77   79 #>  [3690,]   73   78   80 #>  [3691,]   72   77   79 #>  [3692,]   72   77   79 #>  [3693,]   73   78   80 #>  [3694,]   72   77   79 #>  [3695,]   73   78   80 #>  [3696,]   73   78   80 #>  [3697,]   73   78   80 #>  [3698,]   72   77   79 #>  [3699,]   72   77   79 #>  [3700,]   73   78   80 #>  [3701,]   74   79   81 #>  [3702,]   75   80   82 #>  [3703,]   74   79   81 #>  [3704,]   74   79   81 #>  [3705,]   74   79   81 #>  [3706,]   75   80   82 #>  [3707,]   74   79   81 #>  [3708,]   74   79   81 #>  [3709,]   74   79   81 #>  [3710,]   74   79   81 #>  [3711,]   76   81   83 #>  [3712,]   76   81   83 #>  [3713,]   74   79   81 #>  [3714,]   74   79   81 #>  [3715,]   76   81   83 #>  [3716,]   74   79   81 #>  [3717,]   76   81   83 #>  [3718,]   74   79   81 #>  [3719,]   76   81   83 #>  [3720,]   74   79   81 #>  [3721,]   74   79   81 #>  [3722,]   74   79   81 #>  [3723,]   75   80   82 #>  [3724,]   74   79   81 #>  [3725,]   74   79   81 #>  [3726,]   76   81   83 #>  [3727,]   74   79   81 #>  [3728,]   74   79   81 #>  [3729,]   75   80   82 #>  [3730,]   75   80   82 #>  [3731,]   76   81   83 #>  [3732,]   74   79   81 #>  [3733,]   74   79   81 #>  [3734,]   75   80   82 #>  [3735,]   75   80   82 #>  [3736,]   74   79   81 #>  [3737,]   75   80   82 #>  [3738,]   74   79   81 #>  [3739,]   74   79   81 #>  [3740,]   74   79   81 #>  [3741,]   74   79   81 #>  [3742,]   75   80   82 #>  [3743,]   76   81   83 #>  [3744,]   75   80   82 #>  [3745,]   74   79   81 #>  [3746,]   75   80   82 #>  [3747,]   76   81   83 #>  [3748,]   75   80   82 #>  [3749,]   74   79   81 #>  [3750,]   74   79   81 #>  [3751,]   74   79   81 #>  [3752,]   74   79   81 #>  [3753,]   74   79   81 #>  [3754,]   74   79   81 #>  [3755,]   74   79   81 #>  [3756,]   75   80   82 #>  [3757,]   74   79   81 #>  [3758,]   74   79   81 #>  [3759,]   74   79   81 #>  [3760,]   75   80   82 #>  [3761,]   76   81   83 #>  [3762,]   74   79   81 #>  [3763,]   75   80   82 #>  [3764,]   75   80   82 #>  [3765,]   75   80   82 #>  [3766,]   76   81   83 #>  [3767,]   74   79   81 #>  [3768,]   76   81   83 #>  [3769,]   74   79   81 #>  [3770,]   76   81   83 #>  [3771,]   74   79   81 #>  [3772,]   74   79   81 #>  [3773,]   74   79   81 #>  [3774,]   74   79   81 #>  [3775,]   76   81   83 #>  [3776,]   74   79   81 #>  [3777,]   74   79   81 #>  [3778,]   75   80   82 #>  [3779,]   76   81   83 #>  [3780,]   74   79   81 #>  [3781,]   75   80   82 #>  [3782,]   74   79   81 #>  [3783,]   74   79   81 #>  [3784,]   74   79   81 #>  [3785,]   74   79   81 #>  [3786,]   74   79   81 #>  [3787,]   74   79   81 #>  [3788,]   74   79   81 #>  [3789,]   74   79   81 #>  [3790,]   74   79   81 #>  [3791,]   74   79   81 #>  [3792,]   76   81   83 #>  [3793,]   75   80   82 #>  [3794,]   75   80   82 #>  [3795,]   76   81   83 #>  [3796,]   76   81   83 #>  [3797,]   74   79   81 #>  [3798,]   74   79   81 #>  [3799,]   74   79   81 #>  [3800,]   76   81   83 #>  [3801,]   78   83   84 #>  [3802,]   77   82   84 #>  [3803,]   77   82   84 #>  [3804,]   77   82   84 #>  [3805,]   77   82   84 #>  [3806,]   77   82   84 #>  [3807,]   77   82   84 #>  [3808,]   77   82   84 #>  [3809,]   78   83   84 #>  [3810,]   77   82   84 #>  [3811,]   77   82   84 #>  [3812,]   77   82   84 #>  [3813,]   78   83   84 #>  [3814,]   77   82   84 #>  [3815,]   77   82   84 #>  [3816,]   77   82   84 #>  [3817,]   78   83   84 #>  [3818,]   78   83   84 #>  [3819,]   77   82   84 #>  [3820,]   78   83   84 #>  [3821,]   77   82   84 #>  [3822,]   77   82   84 #>  [3823,]   77   82   84 #>  [3824,]   77   82   84 #>  [3825,]   77   82   84 #>  [3826,]   77   82   84 #>  [3827,]   78   83   84 #>  [3828,]   77   82   84 #>  [3829,]   77   82   84 #>  [3830,]   77   82   84 #>  [3831,]   77   82   84 #>  [3832,]   77   82   84 #>  [3833,]   78   83   84 #>  [3834,]   77   82   84 #>  [3835,]   77   82   84 #>  [3836,]   78   83   84 #>  [3837,]   77   82   84 #>  [3838,]   78   83   84 #>  [3839,]   77   82   84 #>  [3840,]   77   82   84 #>  [3841,]   77   82   84 #>  [3842,]   78   83   84 #>  [3843,]   77   82   84 #>  [3844,]   77   82   84 #>  [3845,]   77   82   84 #>  [3846,]   77   82   84 #>  [3847,]   77   82   84 #>  [3848,]   77   82   84 #>  [3849,]   77   82   84 #>  [3850,]   77   82   84 #>  [3851,]   78   83   84 #>  [3852,]   77   82   84 #>  [3853,]   78   83   84 #>  [3854,]   78   83   84 #>  [3855,]   77   82   84 #>  [3856,]   78   83   84 #>  [3857,]   77   82   84 #>  [3858,]   77   82   84 #>  [3859,]   77   82   84 #>  [3860,]   77   82   84 #>  [3861,]   77   82   84 #>  [3862,]   77   82   84 #>  [3863,]   77   82   84 #>  [3864,]   77   82   84 #>  [3865,]   78   83   84 #>  [3866,]   78   83   84 #>  [3867,]   77   82   84 #>  [3868,]   77   82   84 #>  [3869,]   77   82   84 #>  [3870,]   77   82   84 #>  [3871,]   77   82   84 #>  [3872,]   77   82   84 #>  [3873,]   77   82   84 #>  [3874,]   77   82   84 #>  [3875,]   77   82   84 #>  [3876,]   77   82   84 #>  [3877,]   78   83   84 #>  [3878,]   77   82   84 #>  [3879,]   78   83   84 #>  [3880,]   77   82   84 #>  [3881,]   77   82   84 #>  [3882,]   78   83   84 #>  [3883,]   78   83   84 #>  [3884,]   78   83   84 #>  [3885,]   77   82   84 #>  [3886,]   77   82   84 #>  [3887,]   78   83   84 #>  [3888,]   77   82   84 #>  [3889,]   77   82   84 #>  [3890,]   77   82   84 #>  [3891,]   78   83   84 #>  [3892,]   77   82   84 #>  [3893,]   78   83   84 #>  [3894,]   78   83   84 #>  [3895,]   77   82   84 #>  [3896,]   77   82   84 #>  [3897,]   77   82   84 #>  [3898,]   77   82   84 #>  [3899,]   77   82   84 #>  [3900,]   77   82   84 #>  [3901,]   79   85   87 #>  [3902,]   80   84   85 #>  [3903,]   79   85   86 #>  [3904,]   79   86   87 #>  [3905,]   79   85   87 #>  [3906,]   79   85   87 #>  [3907,]   79   86   87 #>  [3908,]   79   85   87 #>  [3909,]   80   84   85 #>  [3910,]   80   84   85 #>  [3911,]   79   85   87 #>  [3912,]   80   84   85 #>  [3913,]   80   84   85 #>  [3914,]   79   86   86 #>  [3915,]   79   85   87 #>  [3916,]   79   86   87 #>  [3917,]   80   84   85 #>  [3918,]   79   85   87 #>  [3919,]   79   85   87 #>  [3920,]   79   86   87 #>  [3921,]   80   84   85 #>  [3922,]   79   86   87 #>  [3923,]   79   85   87 #>  [3924,]   79   86   87 #>  [3925,]   79   86   87 #>  [3926,]   79   85   86 #>  [3927,]   79   85   87 #>  [3928,]   79   86   87 #>  [3929,]   80   84   85 #>  [3930,]   79   85   87 #>  [3931,]   79   85   87 #>  [3932,]   79   85   86 #>  [3933,]   80   84   85 #>  [3934,]   79   85   87 #>  [3935,]   79   85   87 #>  [3936,]   79   86   87 #>  [3937,]   79   85   87 #>  [3938,]   79   85   87 #>  [3939,]   79   86   87 #>  [3940,]   79   85   87 #>  [3941,]   79   85   87 #>  [3942,]   79   85   86 #>  [3943,]   79   85   87 #>  [3944,]   79   85   87 #>  [3945,]   79   85   87 #>  [3946,]   79   85   87 #>  [3947,]   79   85   87 #>  [3948,]   79   85   86 #>  [3949,]   79   85   87 #>  [3950,]   79   86   87 #>  [3951,]   79   85   86 #>  [3952,]   79   86   87 #>  [3953,]   80   84   85 #>  [3954,]   79   86   86 #>  [3955,]   79   86   87 #>  [3956,]   79   85   87 #>  [3957,]   79   86   87 #>  [3958,]   79   85   87 #>  [3959,]   79   86   87 #>  [3960,]   80   84   85 #>  [3961,]   79   85   87 #>  [3962,]   79   85   86 #>  [3963,]   80   84   85 #>  [3964,]   79   85   87 #>  [3965,]   79   85   87 #>  [3966,]   79   85   86 #>  [3967,]   79   86   87 #>  [3968,]   79   85   87 #>  [3969,]   79   85   86 #>  [3970,]   80   84   85 #>  [3971,]   79   85   87 #>  [3972,]   79   85   87 #>  [3973,]   79   86   87 #>  [3974,]   79   85   87 #>  [3975,]   80   84   85 #>  [3976,]   79   86   87 #>  [3977,]   79   85   87 #>  [3978,]   79   85   87 #>  [3979,]   79   85   87 #>  [3980,]   80   84   85 #>  [3981,]   80   84   85 #>  [3982,]   79   85   87 #>  [3983,]   79   85   87 #>  [3984,]   79   85   87 #>  [3985,]   79   85   87 #>  [3986,]   80   84   85 #>  [3987,]   79   85   87 #>  [3988,]   79   85   87 #>  [3989,]   79   85   86 #>  [3990,]   79   86   87 #>  [3991,]   79   86   87 #>  [3992,]   79   85   87 #>  [3993,]   79   85   87 #>  [3994,]   79   85   87 #>  [3995,]   79   85   87 #>  [3996,]   79   85   87 #>  [3997,]   79   85   87 #>  [3998,]   79   85   87 #>  [3999,]   79   85   87 #>  [4000,]   79   85   87 #>  [4001,]   81   88   88 #>  [4002,]   81   87   89 #>  [4003,]   81   87   89 #>  [4004,]   81   87   89 #>  [4005,]   81   88   88 #>  [4006,]   81   88   88 #>  [4007,]   81   87   89 #>  [4008,]   81   88   88 #>  [4009,]   81   88   88 #>  [4010,]   81   87   89 #>  [4011,]   81   88   88 #>  [4012,]   81   88   88 #>  [4013,]   81   87   89 #>  [4014,]   81   88   88 #>  [4015,]   81   88   88 #>  [4016,]   81   87   89 #>  [4017,]   81   87   89 #>  [4018,]   81   87   89 #>  [4019,]   81   87   89 #>  [4020,]   81   88   88 #>  [4021,]   81   87   89 #>  [4022,]   81   87   89 #>  [4023,]   81   87   89 #>  [4024,]   81   87   89 #>  [4025,]   81   87   89 #>  [4026,]   81   88   88 #>  [4027,]   81   87   89 #>  [4028,]   81   88   88 #>  [4029,]   81   87   89 #>  [4030,]   81   87   89 #>  [4031,]   81   87   89 #>  [4032,]   81   87   89 #>  [4033,]   81   88   88 #>  [4034,]   81   87   89 #>  [4035,]   81   87   89 #>  [4036,]   81   87   89 #>  [4037,]   81   87   89 #>  [4038,]   81   88   88 #>  [4039,]   81   87   89 #>  [4040,]   81   87   89 #>  [4041,]   81   88   88 #>  [4042,]   81   88   88 #>  [4043,]   81   88   88 #>  [4044,]   81   87   89 #>  [4045,]   81   88   88 #>  [4046,]   81   88   88 #>  [4047,]   81   87   89 #>  [4048,]   81   87   89 #>  [4049,]   81   87   89 #>  [4050,]   81   88   88 #>  [4051,]   81   88   88 #>  [4052,]   81   88   88 #>  [4053,]   81   88   88 #>  [4054,]   81   87   89 #>  [4055,]   81   88   88 #>  [4056,]   81   88   88 #>  [4057,]   81   88   88 #>  [4058,]   81   88   88 #>  [4059,]   81   87   89 #>  [4060,]   81   88   88 #>  [4061,]   81   88   88 #>  [4062,]   81   87   89 #>  [4063,]   81   88   88 #>  [4064,]   81   88   88 #>  [4065,]   81   88   88 #>  [4066,]   81   88   88 #>  [4067,]   81   88   88 #>  [4068,]   81   88   88 #>  [4069,]   81   87   89 #>  [4070,]   81   87   89 #>  [4071,]   81   88   88 #>  [4072,]   81   88   88 #>  [4073,]   81   88   88 #>  [4074,]   81   88   88 #>  [4075,]   81   88   88 #>  [4076,]   81   88   88 #>  [4077,]   81   87   89 #>  [4078,]   81   88   88 #>  [4079,]   81   87   89 #>  [4080,]   81   87   89 #>  [4081,]   81   88   88 #>  [4082,]   81   87   89 #>  [4083,]   81   87   89 #>  [4084,]   81   88   88 #>  [4085,]   81   87   89 #>  [4086,]   81   87   89 #>  [4087,]   81   88   88 #>  [4088,]   81   88   88 #>  [4089,]   81   87   89 #>  [4090,]   81   88   88 #>  [4091,]   81   88   88 #>  [4092,]   81   88   88 #>  [4093,]   81   87   89 #>  [4094,]   81   88   88 #>  [4095,]   81   87   89 #>  [4096,]   81   88   88 #>  [4097,]   81   88   88 #>  [4098,]   81   87   89 #>  [4099,]   81   87   89 #>  [4100,]   81   87   89 #>  [4101,]   82   89   90 #>  [4102,]   82   89   90 #>  [4103,]   82   89   90 #>  [4104,]   82   89   90 #>  [4105,]   82   89   90 #>  [4106,]   82   89   90 #>  [4107,]   82   89   90 #>  [4108,]   82   89   90 #>  [4109,]   82   89   90 #>  [4110,]   82   89   90 #>  [4111,]   82   89   90 #>  [4112,]   82   89   90 #>  [4113,]   82   89   90 #>  [4114,]   82   89   90 #>  [4115,]   82   89   90 #>  [4116,]   82   89   90 #>  [4117,]   82   89   90 #>  [4118,]   82   89   90 #>  [4119,]   82   89   90 #>  [4120,]   82   89   91 #>  [4121,]   82   89   90 #>  [4122,]   82   89   91 #>  [4123,]   82   89   90 #>  [4124,]   82   89   90 #>  [4125,]   82   89   90 #>  [4126,]   82   89   90 #>  [4127,]   82   89   90 #>  [4128,]   82   89   90 #>  [4129,]   82   89   91 #>  [4130,]   82   89   90 #>  [4131,]   82   89   90 #>  [4132,]   82   89   90 #>  [4133,]   82   89   90 #>  [4134,]   82   89   90 #>  [4135,]   82   89   90 #>  [4136,]   82   89   90 #>  [4137,]   82   89   90 #>  [4138,]   82   89   90 #>  [4139,]   82   89   90 #>  [4140,]   82   89   90 #>  [4141,]   82   89   90 #>  [4142,]   82   89   90 #>  [4143,]   82   89   90 #>  [4144,]   82   89   90 #>  [4145,]   82   89   90 #>  [4146,]   82   89   90 #>  [4147,]   82   89   90 #>  [4148,]   82   89   90 #>  [4149,]   82   89   90 #>  [4150,]   82   89   90 #>  [4151,]   82   89   90 #>  [4152,]   82   89   90 #>  [4153,]   82   89   90 #>  [4154,]   82   89   90 #>  [4155,]   82   89   90 #>  [4156,]   82   89   90 #>  [4157,]   82   89   90 #>  [4158,]   82   89   91 #>  [4159,]   82   89   90 #>  [4160,]   82   89   90 #>  [4161,]   82   89   90 #>  [4162,]   82   89   90 #>  [4163,]   82   89   90 #>  [4164,]   82   89   91 #>  [4165,]   82   89   90 #>  [4166,]   82   89   90 #>  [4167,]   82   89   90 #>  [4168,]   82   89   90 #>  [4169,]   82   89   90 #>  [4170,]   82   89   90 #>  [4171,]   82   89   90 #>  [4172,]   82   89   90 #>  [4173,]   82   89   90 #>  [4174,]   82   89   90 #>  [4175,]   82   89   90 #>  [4176,]   82   89   90 #>  [4177,]   82   89   91 #>  [4178,]   82   89   90 #>  [4179,]   82   89   90 #>  [4180,]   82   89   90 #>  [4181,]   82   89   90 #>  [4182,]   82   89   90 #>  [4183,]   82   89   90 #>  [4184,]   82   89   90 #>  [4185,]   82   89   90 #>  [4186,]   82   89   90 #>  [4187,]   82   89   91 #>  [4188,]   82   89   90 #>  [4189,]   82   89   90 #>  [4190,]   82   89   90 #>  [4191,]   82   89   90 #>  [4192,]   82   89   90 #>  [4193,]   82   89   90 #>  [4194,]   82   89   90 #>  [4195,]   82   89   90 #>  [4196,]   82   89   90 #>  [4197,]   82   89   90 #>  [4198,]   82   89   90 #>  [4199,]   82   89   90 #>  [4200,]   82   89   90 #>  [4201,]   84   91   93 #>  [4202,]   84   91   93 #>  [4203,]   83   90   92 #>  [4204,]   83   90   92 #>  [4205,]   83   90   92 #>  [4206,]   84   91   93 #>  [4207,]   84   91   93 #>  [4208,]   83   90   92 #>  [4209,]   83   90   92 #>  [4210,]   83   90   92 #>  [4211,]   84   91   93 #>  [4212,]   83   90   92 #>  [4213,]   84   91   93 #>  [4214,]   84   91   93 #>  [4215,]   84   91   93 #>  [4216,]   84   91   93 #>  [4217,]   84   91   93 #>  [4218,]   83   90   92 #>  [4219,]   84   91   93 #>  [4220,]   83   90   92 #>  [4221,]   84   91   93 #>  [4222,]   84   91   93 #>  [4223,]   83   90   92 #>  [4224,]   83   90   92 #>  [4225,]   83   90   92 #>  [4226,]   84   91   93 #>  [4227,]   84   91   93 #>  [4228,]   83   90   92 #>  [4229,]   84   91   93 #>  [4230,]   83   90   92 #>  [4231,]   83   90   92 #>  [4232,]   83   90   92 #>  [4233,]   84   91   93 #>  [4234,]   83   90   92 #>  [4235,]   84   91   93 #>  [4236,]   83   90   92 #>  [4237,]   84   91   93 #>  [4238,]   83   90   92 #>  [4239,]   83   90   92 #>  [4240,]   84   91   93 #>  [4241,]   84   91   93 #>  [4242,]   83   90   92 #>  [4243,]   83   90   92 #>  [4244,]   84   91   93 #>  [4245,]   83   90   92 #>  [4246,]   84   91   93 #>  [4247,]   84   91   93 #>  [4248,]   83   90   92 #>  [4249,]   83   90   92 #>  [4250,]   84   91   93 #>  [4251,]   83   90   92 #>  [4252,]   84   91   93 #>  [4253,]   83   90   92 #>  [4254,]   83   90   92 #>  [4255,]   84   91   93 #>  [4256,]   83   90   92 #>  [4257,]   83   90   92 #>  [4258,]   84   91   93 #>  [4259,]   84   91   93 #>  [4260,]   83   90   92 #>  [4261,]   84   91   93 #>  [4262,]   83   90   92 #>  [4263,]   84   91   93 #>  [4264,]   83   90   92 #>  [4265,]   83   90   92 #>  [4266,]   83   90   92 #>  [4267,]   83   90   92 #>  [4268,]   84   91   93 #>  [4269,]   84   91   93 #>  [4270,]   84   91   93 #>  [4271,]   84   91   93 #>  [4272,]   83   90   92 #>  [4273,]   84   91   93 #>  [4274,]   84   91   93 #>  [4275,]   84   91   93 #>  [4276,]   84   91   93 #>  [4277,]   84   91   93 #>  [4278,]   83   90   92 #>  [4279,]   84   91   93 #>  [4280,]   84   91   93 #>  [4281,]   84   91   93 #>  [4282,]   84   91   93 #>  [4283,]   84   91   93 #>  [4284,]   84   91   93 #>  [4285,]   83   90   92 #>  [4286,]   84   91   93 #>  [4287,]   84   91   93 #>  [4288,]   83   90   92 #>  [4289,]   83   90   92 #>  [4290,]   84   91   93 #>  [4291,]   83   90   92 #>  [4292,]   84   91   93 #>  [4293,]   84   91   93 #>  [4294,]   84   91   93 #>  [4295,]   83   90   92 #>  [4296,]   84   91   93 #>  [4297,]   84   91   93 #>  [4298,]   84   91   93 #>  [4299,]   84   91   93 #>  [4300,]   84   91   93 #>  [4301,]   85   92   94 #>  [4302,]   86   93   95 #>  [4303,]   85   92   94 #>  [4304,]   85   92   94 #>  [4305,]   85   92   94 #>  [4306,]   85   92   94 #>  [4307,]   85   92   94 #>  [4308,]   85   92   94 #>  [4309,]   86   93   95 #>  [4310,]   86   93   95 #>  [4311,]   85   92   94 #>  [4312,]   86   93   95 #>  [4313,]   85   92   94 #>  [4314,]   85   92   94 #>  [4315,]   85   92   94 #>  [4316,]   85   92   94 #>  [4317,]   85   92   94 #>  [4318,]   85   92   94 #>  [4319,]   85   92   94 #>  [4320,]   85   92   94 #>  [4321,]   86   93   95 #>  [4322,]   85   92   94 #>  [4323,]   85   92   94 #>  [4324,]   85   92   94 #>  [4325,]   85   92   94 #>  [4326,]   85   92   94 #>  [4327,]   85   92   94 #>  [4328,]   85   92   94 #>  [4329,]   86   93   95 #>  [4330,]   85   92   94 #>  [4331,]   85   92   94 #>  [4332,]   85   92   94 #>  [4333,]   86   93   95 #>  [4334,]   85   92   94 #>  [4335,]   85   92   94 #>  [4336,]   85   92   94 #>  [4337,]   85   92   94 #>  [4338,]   85   92   94 #>  [4339,]   85   92   94 #>  [4340,]   85   92   94 #>  [4341,]   85   92   94 #>  [4342,]   85   92   94 #>  [4343,]   85   92   94 #>  [4344,]   85   92   94 #>  [4345,]   85   92   94 #>  [4346,]   85   92   94 #>  [4347,]   85   92   94 #>  [4348,]   85   92   94 #>  [4349,]   85   92   94 #>  [4350,]   85   92   94 #>  [4351,]   85   92   94 #>  [4352,]   85   92   94 #>  [4353,]   85   92   94 #>  [4354,]   85   92   94 #>  [4355,]   85   92   94 #>  [4356,]   85   92   94 #>  [4357,]   85   92   94 #>  [4358,]   85   92   94 #>  [4359,]   85   92   94 #>  [4360,]   85   92   94 #>  [4361,]   85   92   94 #>  [4362,]   85   92   94 #>  [4363,]   85   92   94 #>  [4364,]   85   92   94 #>  [4365,]   85   92   94 #>  [4366,]   85   92   94 #>  [4367,]   85   92   94 #>  [4368,]   85   92   94 #>  [4369,]   85   92   94 #>  [4370,]   86   93   95 #>  [4371,]   85   92   94 #>  [4372,]   85   92   94 #>  [4373,]   85   92   94 #>  [4374,]   85   92   94 #>  [4375,]   85   92   94 #>  [4376,]   85   92   94 #>  [4377,]   85   92   94 #>  [4378,]   85   92   94 #>  [4379,]   85   92   94 #>  [4380,]   85   92   94 #>  [4381,]   85   92   94 #>  [4382,]   85   92   94 #>  [4383,]   85   92   94 #>  [4384,]   85   92   94 #>  [4385,]   85   92   94 #>  [4386,]   86   93   95 #>  [4387,]   85   92   94 #>  [4388,]   85   92   94 #>  [4389,]   85   92   94 #>  [4390,]   85   92   94 #>  [4391,]   85   92   94 #>  [4392,]   85   92   94 #>  [4393,]   85   92   94 #>  [4394,]   85   92   94 #>  [4395,]   85   92   94 #>  [4396,]   85   92   94 #>  [4397,]   85   92   94 #>  [4398,]   85   92   94 #>  [4399,]   85   92   94 #>  [4400,]   85   92   94 #>  [4401,]   87   94   96 #>  [4402,]   88   95   97 #>  [4403,]   88   95   97 #>  [4404,]   87   94   96 #>  [4405,]   88   95   97 #>  [4406,]   88   95   97 #>  [4407,]   88   95   97 #>  [4408,]   87   94   96 #>  [4409,]   87   94   96 #>  [4410,]   88   95   97 #>  [4411,]   87   94   96 #>  [4412,]   88   95   97 #>  [4413,]   87   94   96 #>  [4414,]   87   94   96 #>  [4415,]   87   94   96 #>  [4416,]   87   94   96 #>  [4417,]   87   94   96 #>  [4418,]   88   95   97 #>  [4419,]   88   95   97 #>  [4420,]   88   95   97 #>  [4421,]   87   94   96 #>  [4422,]   87   94   96 #>  [4423,]   88   95   97 #>  [4424,]   87   94   96 #>  [4425,]   88   95   97 #>  [4426,]   88   95   97 #>  [4427,]   87   94   96 #>  [4428,]   88   95   97 #>  [4429,]   88   95   97 #>  [4430,]   87   94   96 #>  [4431,]   88   95   97 #>  [4432,]   88   95   97 #>  [4433,]   88   95   97 #>  [4434,]   88   95   97 #>  [4435,]   87   94   96 #>  [4436,]   88   95   97 #>  [4437,]   87   94   96 #>  [4438,]   87   94   96 #>  [4439,]   88   95   97 #>  [4440,]   88   95   97 #>  [4441,]   87   94   96 #>  [4442,]   88   95   97 #>  [4443,]   87   94   96 #>  [4444,]   87   94   96 #>  [4445,]   87   94   96 #>  [4446,]   87   94   96 #>  [4447,]   88   95   97 #>  [4448,]   88   95   97 #>  [4449,]   87   94   96 #>  [4450,]   88   95   97 #>  [4451,]   87   94   96 #>  [4452,]   87   94   96 #>  [4453,]   88   95   97 #>  [4454,]   87   94   96 #>  [4455,]   87   94   96 #>  [4456,]   88   95   97 #>  [4457,]   88   95   97 #>  [4458,]   87   94   96 #>  [4459,]   87   94   96 #>  [4460,]   88   95   97 #>  [4461,]   88   95   97 #>  [4462,]   87   94   96 #>  [4463,]   88   95   97 #>  [4464,]   88   95   97 #>  [4465,]   88   95   97 #>  [4466,]   87   94   96 #>  [4467,]   87   94   96 #>  [4468,]   87   94   96 #>  [4469,]   87   94   96 #>  [4470,]   88   95   97 #>  [4471,]   88   95   97 #>  [4472,]   88   95   97 #>  [4473,]   88   95   97 #>  [4474,]   87   94   96 #>  [4475,]   88   95   97 #>  [4476,]   88   95   97 #>  [4477,]   88   95   97 #>  [4478,]   88   95   97 #>  [4479,]   87   94   96 #>  [4480,]   87   94   96 #>  [4481,]   87   94   96 #>  [4482,]   87   94   96 #>  [4483,]   87   94   96 #>  [4484,]   88   95   97 #>  [4485,]   87   94   96 #>  [4486,]   88   95   97 #>  [4487,]   87   94   96 #>  [4488,]   87   94   96 #>  [4489,]   87   94   96 #>  [4490,]   87   94   96 #>  [4491,]   87   94   96 #>  [4492,]   87   94   96 #>  [4493,]   88   95   97 #>  [4494,]   88   95   97 #>  [4495,]   87   94   96 #>  [4496,]   87   94   96 #>  [4497,]   88   95   97 #>  [4498,]   88   95   97 #>  [4499,]   87   94   96 #>  [4500,]   88   95   97 #>  [4501,]   90   96  100 #>  [4502,]   90   96  100 #>  [4503,]   89   96   98 #>  [4504,]   89   96  100 #>  [4505,]   89   96   98 #>  [4506,]   89   96  100 #>  [4507,]   89   96  100 #>  [4508,]   90   96  100 #>  [4509,]   89   96   98 #>  [4510,]   89   96   98 #>  [4511,]   89   96   98 #>  [4512,]   89   96  100 #>  [4513,]   90   96  100 #>  [4514,]   89   96   98 #>  [4515,]   90   96  100 #>  [4516,]   90   96  100 #>  [4517,]   89   96  100 #>  [4518,]   89   96  100 #>  [4519,]   90   96  100 #>  [4520,]   90   96   99 #>  [4521,]   89   96   98 #>  [4522,]   90   96  100 #>  [4523,]   90   96  100 #>  [4524,]   89   96  100 #>  [4525,]   89   96   99 #>  [4526,]   90   96  100 #>  [4527,]   90   96  100 #>  [4528,]   89   96   98 #>  [4529,]   90   96  100 #>  [4530,]   90   96  100 #>  [4531,]   89   96   98 #>  [4532,]   89   96   98 #>  [4533,]   90   96  100 #>  [4534,]   89   96   98 #>  [4535,]   89   96   98 #>  [4536,]   90   96  100 #>  [4537,]   90   96  100 #>  [4538,]   90   96  100 #>  [4539,]   89   96   98 #>  [4540,]   89   96   98 #>  [4541,]   90   96  100 #>  [4542,]   89   96  100 #>  [4543,]   90   96  100 #>  [4544,]   90   96   99 #>  [4545,]   90   96  100 #>  [4546,]   90   96  100 #>  [4547,]   89   96   98 #>  [4548,]   89   96   98 #>  [4549,]   89   96  100 #>  [4550,]   90   96  100 #>  [4551,]   90   96  100 #>  [4552,]   89   96   98 #>  [4553,]   90   96   99 #>  [4554,]   89   96  100 #>  [4555,]   90   96  100 #>  [4556,]   90   96   99 #>  [4557,]   89   96  100 #>  [4558,]   90   96  100 #>  [4559,]   90   96  100 #>  [4560,]   90   96  100 #>  [4561,]   90   96  100 #>  [4562,]   89   96   98 #>  [4563,]   90   96  100 #>  [4564,]   90   96  100 #>  [4565,]   89   96   98 #>  [4566,]   90   96  100 #>  [4567,]   89   96  100 #>  [4568,]   90   96  100 #>  [4569,]   90   96  100 #>  [4570,]   89   96   98 #>  [4571,]   90   96  100 #>  [4572,]   89   96   98 #>  [4573,]   89   96  100 #>  [4574,]   89   96   98 #>  [4575,]   90   96  100 #>  [4576,]   89   96   98 #>  [4577,]   90   96  100 #>  [4578,]   90   96  100 #>  [4579,]   89   96  100 #>  [4580,]   90   96   99 #>  [4581,]   90   96  100 #>  [4582,]   89   96   98 #>  [4583,]   90   96  100 #>  [4584,]   90   96  100 #>  [4585,]   90   96   99 #>  [4586,]   89   96   99 #>  [4587,]   90   96  100 #>  [4588,]   89   96  100 #>  [4589,]   89   96   99 #>  [4590,]   90   96  100 #>  [4591,]   89   96   98 #>  [4592,]   89   96  100 #>  [4593,]   90   96  100 #>  [4594,]   89   96  100 #>  [4595,]   90   96  100 #>  [4596,]   90   96  100 #>  [4597,]   90   96  100 #>  [4598,]   89   96   98 #>  [4599,]   89   96  100 #>  [4600,]   90   96  100 #>  [4601,]   92   98  101 #>  [4602,]   92   98  101 #>  [4603,]   91   97  102 #>  [4604,]   91   97  102 #>  [4605,]   91   97  102 #>  [4606,]   91   97  102 #>  [4607,]   91   97  102 #>  [4608,]   92   98  101 #>  [4609,]   91   97  102 #>  [4610,]   91   97  102 #>  [4611,]   91   97  102 #>  [4612,]   91   97  102 #>  [4613,]   92   98  101 #>  [4614,]   91   97  102 #>  [4615,]   92   98  101 #>  [4616,]   92   98  101 #>  [4617,]   91   97  102 #>  [4618,]   91   97  102 #>  [4619,]   92   98  101 #>  [4620,]   92   98  101 #>  [4621,]   91   97  102 #>  [4622,]   92   98  101 #>  [4623,]   92   98  101 #>  [4624,]   91   97  102 #>  [4625,]   91   97  102 #>  [4626,]   92   98  101 #>  [4627,]   92   98  101 #>  [4628,]   91   97  102 #>  [4629,]   92   98  101 #>  [4630,]   92   98  101 #>  [4631,]   91   97  102 #>  [4632,]   91   97  102 #>  [4633,]   92   98  101 #>  [4634,]   91   97  102 #>  [4635,]   91   97  102 #>  [4636,]   92   98  101 #>  [4637,]   92   98  101 #>  [4638,]   92   98  101 #>  [4639,]   91   97  102 #>  [4640,]   91   97  102 #>  [4641,]   92   98  101 #>  [4642,]   91   97  102 #>  [4643,]   92   98  101 #>  [4644,]   92   98  101 #>  [4645,]   91   97  102 #>  [4646,]   92   98  101 #>  [4647,]   91   97  102 #>  [4648,]   91   97  102 #>  [4649,]   91   97  102 #>  [4650,]   92   98  101 #>  [4651,]   92   98  101 #>  [4652,]   91   97  102 #>  [4653,]   92   98  101 #>  [4654,]   91   97  102 #>  [4655,]   92   98  101 #>  [4656,]   92   98  101 #>  [4657,]   91   97  102 #>  [4658,]   92   98  101 #>  [4659,]   92   98  101 #>  [4660,]   92   98  101 #>  [4661,]   92   98  101 #>  [4662,]   91   97  102 #>  [4663,]   92   98  101 #>  [4664,]   92   98  101 #>  [4665,]   91   97  102 #>  [4666,]   92   98  101 #>  [4667,]   91   97  102 #>  [4668,]   92   98  101 #>  [4669,]   92   98  101 #>  [4670,]   91   97  102 #>  [4671,]   92   98  101 #>  [4672,]   91   97  102 #>  [4673,]   91   97  102 #>  [4674,]   91   97  102 #>  [4675,]   92   98  101 #>  [4676,]   91   97  102 #>  [4677,]   92   98  101 #>  [4678,]   92   98  101 #>  [4679,]   91   97  102 #>  [4680,]   92   98  101 #>  [4681,]   92   98  101 #>  [4682,]   91   97  102 #>  [4683,]   92   98  101 #>  [4684,]   92   98  101 #>  [4685,]   92   98  101 #>  [4686,]   91   97  102 #>  [4687,]   92   98  101 #>  [4688,]   91   97  102 #>  [4689,]   91   97  102 #>  [4690,]   92   98  101 #>  [4691,]   91   97  102 #>  [4692,]   91   97  102 #>  [4693,]   92   98  101 #>  [4694,]   91   97  102 #>  [4695,]   92   98  101 #>  [4696,]   92   98  101 #>  [4697,]   92   98  101 #>  [4698,]   91   97  102 #>  [4699,]   91   97  102 #>  [4700,]   92   98  101 #>  [4701,]   93   99  103 #>  [4702,]   93   99  103 #>  [4703,]   93   99  103 #>  [4704,]   93   99  103 #>  [4705,]   93   99  103 #>  [4706,]   93   99  103 #>  [4707,]   93   99  103 #>  [4708,]   94  100  104 #>  [4709,]   93   99  103 #>  [4710,]   93   99  103 #>  [4711,]   93   99  103 #>  [4712,]   93   99  103 #>  [4713,]   94  100  104 #>  [4714,]   93   99  103 #>  [4715,]   94  100  104 #>  [4716,]   94  100  104 #>  [4717,]   93   99  103 #>  [4718,]   93   99  103 #>  [4719,]   94  100  104 #>  [4720,]   94  100  104 #>  [4721,]   93   99  103 #>  [4722,]   94  100  104 #>  [4723,]   93   99  103 #>  [4724,]   93   99  103 #>  [4725,]   93   99  103 #>  [4726,]   94  100  104 #>  [4727,]   94  100  104 #>  [4728,]   93   99  103 #>  [4729,]   94  100  104 #>  [4730,]   94  100  104 #>  [4731,]   93   99  103 #>  [4732,]   93   99  103 #>  [4733,]   93   99  103 #>  [4734,]   93   99  103 #>  [4735,]   93   99  103 #>  [4736,]   94  100  104 #>  [4737,]   94  100  104 #>  [4738,]   94  100  104 #>  [4739,]   93   99  103 #>  [4740,]   93   99  103 #>  [4741,]   94  100  104 #>  [4742,]   93   99  103 #>  [4743,]   94  100  104 #>  [4744,]   94  100  104 #>  [4745,]   93   99  103 #>  [4746,]   94  100  104 #>  [4747,]   93   99  103 #>  [4748,]   93   99  103 #>  [4749,]   93   99  103 #>  [4750,]   94  100  104 #>  [4751,]   94  100  104 #>  [4752,]   93   99  103 #>  [4753,]   94  100  104 #>  [4754,]   93   99  103 #>  [4755,]   94  100  104 #>  [4756,]   94  100  104 #>  [4757,]   93   99  103 #>  [4758,]   94  100  104 #>  [4759,]   94  100  104 #>  [4760,]   94  100  104 #>  [4761,]   93   99  103 #>  [4762,]   93   99  103 #>  [4763,]   93   99  103 #>  [4764,]   94  100  104 #>  [4765,]   93   99  103 #>  [4766,]   94  100  104 #>  [4767,]   93   99  103 #>  [4768,]   93   99  103 #>  [4769,]   94  100  104 #>  [4770,]   93   99  103 #>  [4771,]   94  100  104 #>  [4772,]   93   99  103 #>  [4773,]   93   99  103 #>  [4774,]   93   99  103 #>  [4775,]   93   99  103 #>  [4776,]   93   99  103 #>  [4777,]   94  100  104 #>  [4778,]   93   99  103 #>  [4779,]   93   99  103 #>  [4780,]   94  100  104 #>  [4781,]   94  100  104 #>  [4782,]   93   99  103 #>  [4783,]   94  100  104 #>  [4784,]   94  100  104 #>  [4785,]   94  100  104 #>  [4786,]   93   99  103 #>  [4787,]   94  100  104 #>  [4788,]   93   99  103 #>  [4789,]   93   99  103 #>  [4790,]   94  100  104 #>  [4791,]   93   99  103 #>  [4792,]   93   99  103 #>  [4793,]   93   99  103 #>  [4794,]   93   99  103 #>  [4795,]   94  100  104 #>  [4796,]   94  100  104 #>  [4797,]   94  100  104 #>  [4798,]   93   99  103 #>  [4799,]   93   99  103 #>  [4800,]   94  100  104 #>  [4801,]   95  102  106 #>  [4802,]   95  103  107 #>  [4803,]   95  102  106 #>  [4804,]   95  102  106 #>  [4805,]   95  103  107 #>  [4806,]   95  102  106 #>  [4807,]   95  102  106 #>  [4808,]   96  101  105 #>  [4809,]   96  101  105 #>  [4810,]   95  103  107 #>  [4811,]   95  102  106 #>  [4812,]   95  103  107 #>  [4813,]   95  103  107 #>  [4814,]   95  102  106 #>  [4815,]   95  102  106 #>  [4816,]   95  102  106 #>  [4817,]   95  103  107 #>  [4818,]   95  103  107 #>  [4819,]   95  102  106 #>  [4820,]   95  103  107 #>  [4821,]   95  103  107 #>  [4822,]   95  102  106 #>  [4823,]   95  103  107 #>  [4824,]   95  103  107 #>  [4825,]   95  102  106 #>  [4826,]   96  101  105 #>  [4827,]   95  103  107 #>  [4828,]   95  102  106 #>  [4829,]   95  103  107 #>  [4830,]   95  102  106 #>  [4831,]   95  103  107 #>  [4832,]   95  103  107 #>  [4833,]   95  103  107 #>  [4834,]   95  102  106 #>  [4835,]   95  102  106 #>  [4836,]   95  103  107 #>  [4837,]   95  102  106 #>  [4838,]   95  102  106 #>  [4839,]   95  102  106 #>  [4840,]   95  103  107 #>  [4841,]   95  102  106 #>  [4842,]   95  102  106 #>  [4843,]   95  102  106 #>  [4844,]   95  103  107 #>  [4845,]   95  102  106 #>  [4846,]   95  102  106 #>  [4847,]   95  102  106 #>  [4848,]   95  102  106 #>  [4849,]   95  102  106 #>  [4850,]   95  102  106 #>  [4851,]   95  102  106 #>  [4852,]   95  102  106 #>  [4853,]   95  103  107 #>  [4854,]   95  102  106 #>  [4855,]   95  102  106 #>  [4856,]   96  101  105 #>  [4857,]   95  102  106 #>  [4858,]   95  102  106 #>  [4859,]   95  102  106 #>  [4860,]   95  103  107 #>  [4861,]   96  101  105 #>  [4862,]   95  102  106 #>  [4863,]   95  103  107 #>  [4864,]   95  102  106 #>  [4865,]   95  102  106 #>  [4866,]   95  102  106 #>  [4867,]   95  102  106 #>  [4868,]   95  102  106 #>  [4869,]   95  102  106 #>  [4870,]   95  103  107 #>  [4871,]   95  102  106 #>  [4872,]   95  102  106 #>  [4873,]   95  102  106 #>  [4874,]   95  102  106 #>  [4875,]   95  103  107 #>  [4876,]   96  101  105 #>  [4877,]   95  102  106 #>  [4878,]   95  102  106 #>  [4879,]   95  102  106 #>  [4880,]   95  103  107 #>  [4881,]   95  103  107 #>  [4882,]   95  102  106 #>  [4883,]   95  103  107 #>  [4884,]   95  103  107 #>  [4885,]   95  102  106 #>  [4886,]   95  103  107 #>  [4887,]   95  102  106 #>  [4888,]   95  103  107 #>  [4889,]   95  102  106 #>  [4890,]   95  102  106 #>  [4891,]   95  102  106 #>  [4892,]   95  102  106 #>  [4893,]   95  102  106 #>  [4894,]   95  102  106 #>  [4895,]   95  102  106 #>  [4896,]   95  102  106 #>  [4897,]   95  102  106 #>  [4898,]   95  102  106 #>  [4899,]   95  102  106 #>  [4900,]   95  102  106 #>  [4901,]   97  105  109 #>  [4902,]   97  105  109 #>  [4903,]   97  104  108 #>  [4904,]   97  105  109 #>  [4905,]   97  105  109 #>  [4906,]   97  105  109 #>  [4907,]   97  104  108 #>  [4908,]   97  104  108 #>  [4909,]   97  105  109 #>  [4910,]   97  105  109 #>  [4911,]   97  105  109 #>  [4912,]   97  105  109 #>  [4913,]   97  104  108 #>  [4914,]   97  105  109 #>  [4915,]   97  105  109 #>  [4916,]   97  104  108 #>  [4917,]   97  104  108 #>  [4918,]   97  105  109 #>  [4919,]   97  105  109 #>  [4920,]   97  104  108 #>  [4921,]   97  105  109 #>  [4922,]   97  104  108 #>  [4923,]   97  105  109 #>  [4924,]   97  104  108 #>  [4925,]   97  104  108 #>  [4926,]   97  105  109 #>  [4927,]   97  105  109 #>  [4928,]   97  105  109 #>  [4929,]   97  105  109 #>  [4930,]   97  105  109 #>  [4931,]   97  105  109 #>  [4932,]   97  105  109 #>  [4933,]   97  105  109 #>  [4934,]   97  105  109 #>  [4935,]   97  105  109 #>  [4936,]   97  105  109 #>  [4937,]   97  105  109 #>  [4938,]   97  105  109 #>  [4939,]   97  104  108 #>  [4940,]   97  104  108 #>  [4941,]   97  105  109 #>  [4942,]   97  105  109 #>  [4943,]   97  104  108 #>  [4944,]   97  104  108 #>  [4945,]   97  104  108 #>  [4946,]   97  104  108 #>  [4947,]   97  104  108 #>  [4948,]   97  105  109 #>  [4949,]   97  104  108 #>  [4950,]   97  104  108 #>  [4951,]   97  105  109 #>  [4952,]   97  105  109 #>  [4953,]   97  104  108 #>  [4954,]   97  104  108 #>  [4955,]   97  104  108 #>  [4956,]   97  104  108 #>  [4957,]   97  105  109 #>  [4958,]   97  105  109 #>  [4959,]   97  104  108 #>  [4960,]   97  105  109 #>  [4961,]   97  105  109 #>  [4962,]   97  105  109 #>  [4963,]   97  104  108 #>  [4964,]   97  105  109 #>  [4965,]   97  104  108 #>  [4966,]   97  104  108 #>  [4967,]   97  105  109 #>  [4968,]   97  105  109 #>  [4969,]   97  105  109 #>  [4970,]   97  104  108 #>  [4971,]   97  105  109 #>  [4972,]   97  104  108 #>  [4973,]   97  105  109 #>  [4974,]   97  105  109 #>  [4975,]   97  105  109 #>  [4976,]   97  105  109 #>  [4977,]   97  104  108 #>  [4978,]   97  104  108 #>  [4979,]   97  104  108 #>  [4980,]   97  105  109 #>  [4981,]   97  105  109 #>  [4982,]   97  105  109 #>  [4983,]   97  105  109 #>  [4984,]   97  104  108 #>  [4985,]   97  105  109 #>  [4986,]   97  104  108 #>  [4987,]   97  105  109 #>  [4988,]   97  105  109 #>  [4989,]   97  104  108 #>  [4990,]   97  104  108 #>  [4991,]   97  105  109 #>  [4992,]   97  105  109 #>  [4993,]   97  105  109 #>  [4994,]   97  104  108 #>  [4995,]   97  105  109 #>  [4996,]   97  105  109 #>  [4997,]   97  105  109 #>  [4998,]   97  104  108 #>  [4999,]   97  105  109 #>  [5000,]   97  104  108 #>  [5001,]   99  107  111 #>  [5002,]   99  107  111 #>  [5003,]   99  107  111 #>  [5004,]   98  106  110 #>  [5005,]   99  107  111 #>  [5006,]   99  107  111 #>  [5007,]   99  107  111 #>  [5008,]   98  106  110 #>  [5009,]   98  106  110 #>  [5010,]   98  106  110 #>  [5011,]   99  107  111 #>  [5012,]   99  107  111 #>  [5013,]   99  107  111 #>  [5014,]   99  107  111 #>  [5015,]   99  107  111 #>  [5016,]   99  107  111 #>  [5017,]   99  107  111 #>  [5018,]   99  107  111 #>  [5019,]   99  107  111 #>  [5020,]   99  107  111 #>  [5021,]   99  107  111 #>  [5022,]   99  107  111 #>  [5023,]   99  107  111 #>  [5024,]   99  107  111 #>  [5025,]   99  107  111 #>  [5026,]   99  107  111 #>  [5027,]   99  107  111 #>  [5028,]   99  107  111 #>  [5029,]   99  107  111 #>  [5030,]   99  107  111 #>  [5031,]   99  107  111 #>  [5032,]   99  107  111 #>  [5033,]   99  107  111 #>  [5034,]   99  107  111 #>  [5035,]   99  107  111 #>  [5036,]   99  107  111 #>  [5037,]   99  107  111 #>  [5038,]   99  107  111 #>  [5039,]   99  107  111 #>  [5040,]   99  107  111 #>  [5041,]   99  107  111 #>  [5042,]   99  107  111 #>  [5043,]   98  106  110 #>  [5044,]   99  107  111 #>  [5045,]   99  107  111 #>  [5046,]   99  107  111 #>  [5047,]   99  107  111 #>  [5048,]   99  107  111 #>  [5049,]   99  107  111 #>  [5050,]   99  107  111 #>  [5051,]   98  106  110 #>  [5052,]   99  107  111 #>  [5053,]   99  107  111 #>  [5054,]   99  107  111 #>  [5055,]   99  107  111 #>  [5056,]   99  107  111 #>  [5057,]   99  107  111 #>  [5058,]   99  107  111 #>  [5059,]   99  107  111 #>  [5060,]   98  106  110 #>  [5061,]   99  107  111 #>  [5062,]   99  107  111 #>  [5063,]   99  107  111 #>  [5064,]   99  107  111 #>  [5065,]   99  107  111 #>  [5066,]   99  107  111 #>  [5067,]   98  106  110 #>  [5068,]   99  107  111 #>  [5069,]   99  107  111 #>  [5070,]   99  107  111 #>  [5071,]   99  107  111 #>  [5072,]   99  107  111 #>  [5073,]   99  107  111 #>  [5074,]   99  107  111 #>  [5075,]   99  107  111 #>  [5076,]   99  107  111 #>  [5077,]   99  107  111 #>  [5078,]   99  107  111 #>  [5079,]   99  107  111 #>  [5080,]   99  107  111 #>  [5081,]   99  107  111 #>  [5082,]   99  107  111 #>  [5083,]   99  107  111 #>  [5084,]   99  107  111 #>  [5085,]   98  106  110 #>  [5086,]   99  107  111 #>  [5087,]   99  107  111 #>  [5088,]   99  107  111 #>  [5089,]   99  107  111 #>  [5090,]   99  107  111 #>  [5091,]   98  106  110 #>  [5092,]   99  107  111 #>  [5093,]   99  107  111 #>  [5094,]   99  107  111 #>  [5095,]   98  106  110 #>  [5096,]   99  107  111 #>  [5097,]   99  107  111 #>  [5098,]   99  107  111 #>  [5099,]   99  107  111 #>  [5100,]   99  107  111 #>  [5101,]  101  109  112 #>  [5102,]  100  108  113 #>  [5103,]  100  108  113 #>  [5104,]  100  108  113 #>  [5105,]  100  108  113 #>  [5106,]  100  108  113 #>  [5107,]  100  108  113 #>  [5108,]  100  108  113 #>  [5109,]  100  108  113 #>  [5110,]  100  108  113 #>  [5111,]  100  108  113 #>  [5112,]  100  108  113 #>  [5113,]  100  108  113 #>  [5114,]  101  109  112 #>  [5115,]  101  109  112 #>  [5116,]  101  109  112 #>  [5117,]  100  108  113 #>  [5118,]  100  108  113 #>  [5119,]  100  108  113 #>  [5120,]  100  108  113 #>  [5121,]  100  108  113 #>  [5122,]  100  108  113 #>  [5123,]  100  108  113 #>  [5124,]  100  108  113 #>  [5125,]  100  108  113 #>  [5126,]  100  108  113 #>  [5127,]  100  108  113 #>  [5128,]  100  108  113 #>  [5129,]  100  108  113 #>  [5130,]  100  108  113 #>  [5131,]  100  108  113 #>  [5132,]  100  108  113 #>  [5133,]  100  108  113 #>  [5134,]  100  108  113 #>  [5135,]  100  108  113 #>  [5136,]  100  108  113 #>  [5137,]  100  108  113 #>  [5138,]  100  108  113 #>  [5139,]  100  108  113 #>  [5140,]  100  108  113 #>  [5141,]  101  109  112 #>  [5142,]  100  108  113 #>  [5143,]  100  108  113 #>  [5144,]  101  109  112 #>  [5145,]  100  108  113 #>  [5146,]  100  108  113 #>  [5147,]  100  108  113 #>  [5148,]  100  108  113 #>  [5149,]  100  108  113 #>  [5150,]  101  109  112 #>  [5151,]  100  108  113 #>  [5152,]  100  108  113 #>  [5153,]  100  108  113 #>  [5154,]  100  108  113 #>  [5155,]  100  108  113 #>  [5156,]  100  108  113 #>  [5157,]  100  108  113 #>  [5158,]  100  108  113 #>  [5159,]  101  109  112 #>  [5160,]  100  108  113 #>  [5161,]  100  108  113 #>  [5162,]  100  108  113 #>  [5163,]  100  108  113 #>  [5164,]  100  108  113 #>  [5165,]  100  108  113 #>  [5166,]  100  108  113 #>  [5167,]  100  108  113 #>  [5168,]  100  108  113 #>  [5169,]  100  108  113 #>  [5170,]  100  108  113 #>  [5171,]  100  108  113 #>  [5172,]  100  108  113 #>  [5173,]  101  109  112 #>  [5174,]  100  108  113 #>  [5175,]  100  108  113 #>  [5176,]  100  108  113 #>  [5177,]  100  108  113 #>  [5178,]  100  108  113 #>  [5179,]  100  108  113 #>  [5180,]  100  108  113 #>  [5181,]  100  108  113 #>  [5182,]  100  108  113 #>  [5183,]  100  108  113 #>  [5184,]  100  108  113 #>  [5185,]  100  108  113 #>  [5186,]  100  108  113 #>  [5187,]  100  108  113 #>  [5188,]  100  108  113 #>  [5189,]  100  108  113 #>  [5190,]  100  108  113 #>  [5191,]  100  108  113 #>  [5192,]  100  108  113 #>  [5193,]  100  108  113 #>  [5194,]  100  108  113 #>  [5195,]  100  108  113 #>  [5196,]  100  108  113 #>  [5197,]  100  108  113 #>  [5198,]  100  108  113 #>  [5199,]  101  109  112 #>  [5200,]  100  108  113 #>  [5201,]  103  113  115 #>  [5202,]  103  113  114 #>  [5203,]  102  111  114 #>  [5204,]  102  110  115 #>  [5205,]  102  110  114 #>  [5206,]  102  111  114 #>  [5207,]  102  111  115 #>  [5208,]  103  112  114 #>  [5209,]  102  110  115 #>  [5210,]  102  110  115 #>  [5211,]  102  110  114 #>  [5212,]  102  111  114 #>  [5213,]  103  113  115 #>  [5214,]  102  110  115 #>  [5215,]  103  113  114 #>  [5216,]  103  113  115 #>  [5217,]  102  110  114 #>  [5218,]  102  111  114 #>  [5219,]  103  113  114 #>  [5220,]  103  113  115 #>  [5221,]  102  110  114 #>  [5222,]  103  113  115 #>  [5223,]  102  111  114 #>  [5224,]  102  110  115 #>  [5225,]  102  111  115 #>  [5226,]  103  113  114 #>  [5227,]  103  113  114 #>  [5228,]  102  111  115 #>  [5229,]  103  113  114 #>  [5230,]  103  113  114 #>  [5231,]  102  111  114 #>  [5232,]  102  111  114 #>  [5233,]  103  113  114 #>  [5234,]  102  111  114 #>  [5235,]  102  110  114 #>  [5236,]  103  113  115 #>  [5237,]  103  113  114 #>  [5238,]  103  113  114 #>  [5239,]  102  110  115 #>  [5240,]  102  111  114 #>  [5241,]  103  113  114 #>  [5242,]  102  111  114 #>  [5243,]  103  113  114 #>  [5244,]  103  113  114 #>  [5245,]  102  110  114 #>  [5246,]  103  113  114 #>  [5247,]  102  110  114 #>  [5248,]  102  111  114 #>  [5249,]  102  110  114 #>  [5250,]  103  113  115 #>  [5251,]  103  113  114 #>  [5252,]  102  110  115 #>  [5253,]  103  113  114 #>  [5254,]  102  110  115 #>  [5255,]  103  113  115 #>  [5256,]  103  113  114 #>  [5257,]  102  111  115 #>  [5258,]  103  113  115 #>  [5259,]  103  112  115 #>  [5260,]  103  112  114 #>  [5261,]  103  113  114 #>  [5262,]  102  110  114 #>  [5263,]  103  113  114 #>  [5264,]  103  113  114 #>  [5265,]  102  111  114 #>  [5266,]  103  113  114 #>  [5267,]  102  110  115 #>  [5268,]  103  112  114 #>  [5269,]  103  113  114 #>  [5270,]  102  111  114 #>  [5271,]  103  113  114 #>  [5272,]  102  110  115 #>  [5273,]  102  111  115 #>  [5274,]  102  110  114 #>  [5275,]  103  113  114 #>  [5276,]  102  110  115 #>  [5277,]  103  113  114 #>  [5278,]  103  113  114 #>  [5279,]  102  110  114 #>  [5280,]  103  112  114 #>  [5281,]  103  113  114 #>  [5282,]  102  110  114 #>  [5283,]  103  113  114 #>  [5284,]  103  113  114 #>  [5285,]  103  113  115 #>  [5286,]  102  111  115 #>  [5287,]  103  113  114 #>  [5288,]  102  110  114 #>  [5289,]  102  110  114 #>  [5290,]  103  113  115 #>  [5291,]  102  110  115 #>  [5292,]  102  110  114 #>  [5293,]  103  113  114 #>  [5294,]  102  110  114 #>  [5295,]  103  113  114 #>  [5296,]  103  112  114 #>  [5297,]  103  112  114 #>  [5298,]  102  111  114 #>  [5299,]  102  110  114 #>  [5300,]  103  113  114 #>  [5301,]  104  114  119 #>  [5302,]  104  114  117 #>  [5303,]  105  115  116 #>  [5304,]  104  114  118 #>  [5305,]  104  114  117 #>  [5306,]  104  114  119 #>  [5307,]  104  114  117 #>  [5308,]  104  114  118 #>  [5309,]  104  114  117 #>  [5310,]  106  115  116 #>  [5311,]  106  115  116 #>  [5312,]  104  114  117 #>  [5313,]  104  114  117 #>  [5314,]  106  115  116 #>  [5315,]  104  114  119 #>  [5316,]  104  114  119 #>  [5317,]  104  114  117 #>  [5318,]  104  114  117 #>  [5319,]  104  114  118 #>  [5320,]  104  114  117 #>  [5321,]  105  115  116 #>  [5322,]  104  114  117 #>  [5323,]  104  114  117 #>  [5324,]  104  114  117 #>  [5325,]  104  114  117 #>  [5326,]  104  114  119 #>  [5327,]  104  114  117 #>  [5328,]  106  115  116 #>  [5329,]  104  114  117 #>  [5330,]  104  114  117 #>  [5331,]  105  115  116 #>  [5332,]  106  115  116 #>  [5333,]  104  114  117 #>  [5334,]  105  115  116 #>  [5335,]  104  114  119 #>  [5336,]  104  114  117 #>  [5337,]  104  114  118 #>  [5338,]  104  114  118 #>  [5339,]  104  114  117 #>  [5340,]  105  115  116 #>  [5341,]  104  114  117 #>  [5342,]  104  114  118 #>  [5343,]  104  114  118 #>  [5344,]  104  114  117 #>  [5345,]  104  114  118 #>  [5346,]  104  114  118 #>  [5347,]  104  114  117 #>  [5348,]  106  115  116 #>  [5349,]  104  114  118 #>  [5350,]  104  114  117 #>  [5351,]  104  114  117 #>  [5352,]  104  114  118 #>  [5353,]  104  114  117 #>  [5354,]  104  114  117 #>  [5355,]  104  114  118 #>  [5356,]  104  114  118 #>  [5357,]  104  114  118 #>  [5358,]  104  114  117 #>  [5359,]  104  114  119 #>  [5360,]  104  114  117 #>  [5361,]  104  114  117 #>  [5362,]  104  114  118 #>  [5363,]  104  114  117 #>  [5364,]  104  114  118 #>  [5365,]  104  114  118 #>  [5366,]  104  114  117 #>  [5367,]  104  114  118 #>  [5368,]  104  114  119 #>  [5369,]  104  114  118 #>  [5370,]  105  115  116 #>  [5371,]  104  114  117 #>  [5372,]  104  114  118 #>  [5373,]  104  114  119 #>  [5374,]  106  115  116 #>  [5375,]  104  114  117 #>  [5376,]  104  114  117 #>  [5377,]  104  114  119 #>  [5378,]  104  114  117 #>  [5379,]  104  114  119 #>  [5380,]  104  114  117 #>  [5381,]  104  114  117 #>  [5382,]  106  115  116 #>  [5383,]  104  114  117 #>  [5384,]  104  114  117 #>  [5385,]  104  114  118 #>  [5386,]  104  114  117 #>  [5387,]  104  114  117 #>  [5388,]  104  114  117 #>  [5389,]  104  114  118 #>  [5390,]  104  114  117 #>  [5391,]  104  114  118 #>  [5392,]  104  114  117 #>  [5393,]  104  114  117 #>  [5394,]  104  114  119 #>  [5395,]  104  114  117 #>  [5396,]  104  114  119 #>  [5397,]  104  114  118 #>  [5398,]  105  115  116 #>  [5399,]  104  114  117 #>  [5400,]  104  114  118 #>  [5401,]  107  116  121 #>  [5402,]  107  116  121 #>  [5403,]  107  116  121 #>  [5404,]  108  117  120 #>  [5405,]  107  116  121 #>  [5406,]  107  116  121 #>  [5407,]  108  117  120 #>  [5408,]  107  116  121 #>  [5409,]  108  117  120 #>  [5410,]  108  117  120 #>  [5411,]  107  116  121 #>  [5412,]  107  116  121 #>  [5413,]  107  116  121 #>  [5414,]  108  117  120 #>  [5415,]  107  116  121 #>  [5416,]  108  117  120 #>  [5417,]  107  116  121 #>  [5418,]  107  116  121 #>  [5419,]  107  116  121 #>  [5420,]  108  117  120 #>  [5421,]  107  116  121 #>  [5422,]  108  117  120 #>  [5423,]  107  116  121 #>  [5424,]  108  117  120 #>  [5425,]  108  117  120 #>  [5426,]  107  116  121 #>  [5427,]  107  116  121 #>  [5428,]  108  117  120 #>  [5429,]  107  116  121 #>  [5430,]  107  116  121 #>  [5431,]  107  116  121 #>  [5432,]  107  116  121 #>  [5433,]  107  116  121 #>  [5434,]  107  116  121 #>  [5435,]  107  116  121 #>  [5436,]  108  117  120 #>  [5437,]  107  116  121 #>  [5438,]  107  116  121 #>  [5439,]  108  117  120 #>  [5440,]  107  116  121 #>  [5441,]  107  116  121 #>  [5442,]  107  116  121 #>  [5443,]  107  116  121 #>  [5444,]  107  116  121 #>  [5445,]  107  116  121 #>  [5446,]  107  116  121 #>  [5447,]  107  116  121 #>  [5448,]  107  116  121 #>  [5449,]  107  116  121 #>  [5450,]  108  117  120 #>  [5451,]  107  116  121 #>  [5452,]  108  117  120 #>  [5453,]  107  116  121 #>  [5454,]  108  117  120 #>  [5455,]  108  117  120 #>  [5456,]  107  116  121 #>  [5457,]  108  117  120 #>  [5458,]  107  116  121 #>  [5459,]  108  117  120 #>  [5460,]  107  116  121 #>  [5461,]  107  116  121 #>  [5462,]  107  116  121 #>  [5463,]  107  116  121 #>  [5464,]  107  116  121 #>  [5465,]  107  116  121 #>  [5466,]  107  116  121 #>  [5467,]  108  117  120 #>  [5468,]  107  116  121 #>  [5469,]  107  116  121 #>  [5470,]  107  116  121 #>  [5471,]  107  116  121 #>  [5472,]  107  116  121 #>  [5473,]  108  117  120 #>  [5474,]  107  116  121 #>  [5475,]  107  116  121 #>  [5476,]  108  117  120 #>  [5477,]  107  116  121 #>  [5478,]  107  116  121 #>  [5479,]  107  116  121 #>  [5480,]  107  116  121 #>  [5481,]  107  116  121 #>  [5482,]  107  116  121 #>  [5483,]  107  116  121 #>  [5484,]  107  116  121 #>  [5485,]  107  116  121 #>  [5486,]  108  117  120 #>  [5487,]  107  116  121 #>  [5488,]  107  116  121 #>  [5489,]  107  116  121 #>  [5490,]  108  117  120 #>  [5491,]  108  117  120 #>  [5492,]  107  116  121 #>  [5493,]  107  116  121 #>  [5494,]  107  116  121 #>  [5495,]  107  116  121 #>  [5496,]  107  116  121 #>  [5497,]  107  116  121 #>  [5498,]  107  116  121 #>  [5499,]  107  116  121 #>  [5500,]  107  116  121 #>  [5501,]  109  118  122 #>  [5502,]  110  119  123 #>  [5503,]  109  118  122 #>  [5504,]  109  118  122 #>  [5505,]  110  119  123 #>  [5506,]  109  118  122 #>  [5507,]  110  119  123 #>  [5508,]  109  118  122 #>  [5509,]  110  119  123 #>  [5510,]  110  119  123 #>  [5511,]  109  118  122 #>  [5512,]  110  119  123 #>  [5513,]  110  119  123 #>  [5514,]  109  118  122 #>  [5515,]  109  118  122 #>  [5516,]  109  118  122 #>  [5517,]  110  119  123 #>  [5518,]  110  119  123 #>  [5519,]  109  118  122 #>  [5520,]  110  119  123 #>  [5521,]  110  119  123 #>  [5522,]  110  119  123 #>  [5523,]  110  119  123 #>  [5524,]  110  119  123 #>  [5525,]  110  119  123 #>  [5526,]  109  118  122 #>  [5527,]  110  119  123 #>  [5528,]  109  118  122 #>  [5529,]  110  119  123 #>  [5530,]  110  119  123 #>  [5531,]  110  119  123 #>  [5532,]  110  119  123 #>  [5533,]  110  119  123 #>  [5534,]  109  118  122 #>  [5535,]  109  118  122 #>  [5536,]  110  119  123 #>  [5537,]  109  118  122 #>  [5538,]  109  118  122 #>  [5539,]  110  119  123 #>  [5540,]  110  119  123 #>  [5541,]  110  119  123 #>  [5542,]  109  118  122 #>  [5543,]  109  118  122 #>  [5544,]  110  119  123 #>  [5545,]  109  118  122 #>  [5546,]  109  118  122 #>  [5547,]  110  119  123 #>  [5548,]  110  119  123 #>  [5549,]  109  118  122 #>  [5550,]  110  119  123 #>  [5551,]  110  119  123 #>  [5552,]  109  118  122 #>  [5553,]  110  119  123 #>  [5554,]  110  119  123 #>  [5555,]  109  118  122 #>  [5556,]  109  118  122 #>  [5557,]  109  118  122 #>  [5558,]  110  119  123 #>  [5559,]  109  118  122 #>  [5560,]  110  119  123 #>  [5561,]  110  119  123 #>  [5562,]  109  118  122 #>  [5563,]  110  119  123 #>  [5564,]  109  118  122 #>  [5565,]  109  118  122 #>  [5566,]  110  119  123 #>  [5567,]  109  118  122 #>  [5568,]  109  118  122 #>  [5569,]  109  118  122 #>  [5570,]  110  119  123 #>  [5571,]  110  119  123 #>  [5572,]  109  118  122 #>  [5573,]  109  118  122 #>  [5574,]  110  119  123 #>  [5575,]  110  119  123 #>  [5576,]  110  119  123 #>  [5577,]  109  118  122 #>  [5578,]  110  119  123 #>  [5579,]  109  118  122 #>  [5580,]  110  119  123 #>  [5581,]  110  119  123 #>  [5582,]  109  118  122 #>  [5583,]  110  119  123 #>  [5584,]  110  119  123 #>  [5585,]  109  118  122 #>  [5586,]  110  119  123 #>  [5587,]  110  119  123 #>  [5588,]  110  119  123 #>  [5589,]  109  118  122 #>  [5590,]  110  119  123 #>  [5591,]  109  118  122 #>  [5592,]  110  119  123 #>  [5593,]  110  119  123 #>  [5594,]  109  118  122 #>  [5595,]  110  119  123 #>  [5596,]  109  118  122 #>  [5597,]  109  118  122 #>  [5598,]  109  118  122 #>  [5599,]  110  119  123 #>  [5600,]  109  118  122 #>  [5601,]  111  120  125 #>  [5602,]  111  120  125 #>  [5603,]  112  121  124 #>  [5604,]  111  120  125 #>  [5605,]  111  120  125 #>  [5606,]  112  121  124 #>  [5607,]  111  120  125 #>  [5608,]  111  120  125 #>  [5609,]  111  120  125 #>  [5610,]  111  120  125 #>  [5611,]  111  120  125 #>  [5612,]  112  121  124 #>  [5613,]  111  120  125 #>  [5614,]  111  120  125 #>  [5615,]  111  120  125 #>  [5616,]  111  120  125 #>  [5617,]  111  120  125 #>  [5618,]  111  120  125 #>  [5619,]  112  121  124 #>  [5620,]  111  120  125 #>  [5621,]  111  120  125 #>  [5622,]  111  120  125 #>  [5623,]  111  120  125 #>  [5624,]  111  120  125 #>  [5625,]  112  121  124 #>  [5626,]  111  120  125 #>  [5627,]  111  120  125 #>  [5628,]  112  121  124 #>  [5629,]  111  120  125 #>  [5630,]  111  120  125 #>  [5631,]  111  120  125 #>  [5632,]  111  120  125 #>  [5633,]  112  121  124 #>  [5634,]  112  121  124 #>  [5635,]  111  120  125 #>  [5636,]  111  120  125 #>  [5637,]  111  120  125 #>  [5638,]  111  120  125 #>  [5639,]  111  120  125 #>  [5640,]  111  120  125 #>  [5641,]  111  120  125 #>  [5642,]  111  120  125 #>  [5643,]  111  120  125 #>  [5644,]  111  120  125 #>  [5645,]  111  120  125 #>  [5646,]  111  120  125 #>  [5647,]  111  120  125 #>  [5648,]  111  120  125 #>  [5649,]  111  120  125 #>  [5650,]  111  120  125 #>  [5651,]  111  120  125 #>  [5652,]  111  120  125 #>  [5653,]  111  120  125 #>  [5654,]  111  120  125 #>  [5655,]  111  120  125 #>  [5656,]  111  120  125 #>  [5657,]  111  120  125 #>  [5658,]  111  120  125 #>  [5659,]  111  120  125 #>  [5660,]  112  121  124 #>  [5661,]  111  120  125 #>  [5662,]  111  120  125 #>  [5663,]  111  120  125 #>  [5664,]  111  120  125 #>  [5665,]  112  121  124 #>  [5666,]  111  120  125 #>  [5667,]  111  120  125 #>  [5668,]  111  120  125 #>  [5669,]  111  120  125 #>  [5670,]  112  121  124 #>  [5671,]  111  120  125 #>  [5672,]  111  120  125 #>  [5673,]  112  121  124 #>  [5674,]  111  120  125 #>  [5675,]  111  120  125 #>  [5676,]  111  120  125 #>  [5677,]  111  120  125 #>  [5678,]  111  120  125 #>  [5679,]  111  120  125 #>  [5680,]  111  120  125 #>  [5681,]  111  120  125 #>  [5682,]  111  120  125 #>  [5683,]  111  120  125 #>  [5684,]  111  120  125 #>  [5685,]  111  120  125 #>  [5686,]  111  120  125 #>  [5687,]  111  120  125 #>  [5688,]  111  120  125 #>  [5689,]  111  120  125 #>  [5690,]  111  120  125 #>  [5691,]  111  120  125 #>  [5692,]  111  120  125 #>  [5693,]  112  121  124 #>  [5694,]  111  120  125 #>  [5695,]  111  120  125 #>  [5696,]  111  120  125 #>  [5697,]  112  121  124 #>  [5698,]  112  121  124 #>  [5699,]  111  120  125 #>  [5700,]  111  120  125 #>  [5701,]  114  123  126 #>  [5702,]  114  123  126 #>  [5703,]  114  123  126 #>  [5704,]  113  122  126 #>  [5705,]  114  123  126 #>  [5706,]  114  123  126 #>  [5707,]  114  123  126 #>  [5708,]  113  122  126 #>  [5709,]  113  122  126 #>  [5710,]  113  122  126 #>  [5711,]  114  123  126 #>  [5712,]  114  123  126 #>  [5713,]  114  123  126 #>  [5714,]  114  123  126 #>  [5715,]  114  123  126 #>  [5716,]  114  123  126 #>  [5717,]  114  123  126 #>  [5718,]  114  123  126 #>  [5719,]  114  123  126 #>  [5720,]  114  123  126 #>  [5721,]  114  123  126 #>  [5722,]  114  123  126 #>  [5723,]  114  123  126 #>  [5724,]  114  123  126 #>  [5725,]  114  123  126 #>  [5726,]  114  123  126 #>  [5727,]  114  123  126 #>  [5728,]  114  123  126 #>  [5729,]  114  123  126 #>  [5730,]  114  123  126 #>  [5731,]  114  123  126 #>  [5732,]  114  123  126 #>  [5733,]  114  123  126 #>  [5734,]  114  123  126 #>  [5735,]  114  123  126 #>  [5736,]  114  123  126 #>  [5737,]  114  123  126 #>  [5738,]  114  123  126 #>  [5739,]  114  123  126 #>  [5740,]  114  123  126 #>  [5741,]  114  123  126 #>  [5742,]  114  123  126 #>  [5743,]  113  122  126 #>  [5744,]  114  123  126 #>  [5745,]  114  123  126 #>  [5746,]  114  123  126 #>  [5747,]  114  123  126 #>  [5748,]  114  123  126 #>  [5749,]  114  123  126 #>  [5750,]  114  123  126 #>  [5751,]  113  122  126 #>  [5752,]  114  123  126 #>  [5753,]  114  123  126 #>  [5754,]  114  123  126 #>  [5755,]  114  123  126 #>  [5756,]  114  123  126 #>  [5757,]  114  123  126 #>  [5758,]  114  123  126 #>  [5759,]  114  123  126 #>  [5760,]  113  122  126 #>  [5761,]  114  123  126 #>  [5762,]  114  123  126 #>  [5763,]  114  123  126 #>  [5764,]  113  122  126 #>  [5765,]  114  123  126 #>  [5766,]  114  123  126 #>  [5767,]  113  122  126 #>  [5768,]  114  123  126 #>  [5769,]  114  123  126 #>  [5770,]  114  123  126 #>  [5771,]  114  123  126 #>  [5772,]  114  123  126 #>  [5773,]  114  123  126 #>  [5774,]  114  123  126 #>  [5775,]  114  123  126 #>  [5776,]  114  123  126 #>  [5777,]  114  123  126 #>  [5778,]  113  122  126 #>  [5779,]  114  123  126 #>  [5780,]  114  123  126 #>  [5781,]  114  123  126 #>  [5782,]  114  123  126 #>  [5783,]  114  123  126 #>  [5784,]  114  123  126 #>  [5785,]  113  122  126 #>  [5786,]  114  123  126 #>  [5787,]  114  123  126 #>  [5788,]  114  123  126 #>  [5789,]  113  122  126 #>  [5790,]  114  123  126 #>  [5791,]  113  122  126 #>  [5792,]  114  123  126 #>  [5793,]  114  123  126 #>  [5794,]  114  123  126 #>  [5795,]  113  122  126 #>  [5796,]  114  123  126 #>  [5797,]  114  123  126 #>  [5798,]  114  123  126 #>  [5799,]  114  123  126 #>  [5800,]  114  123  126 #>  [5801,]  116  125  128 #>  [5802,]  115  124  127 #>  [5803,]  115  124  127 #>  [5804,]  115  124  127 #>  [5805,]  116  125  128 #>  [5806,]  116  125  128 #>  [5807,]  115  124  127 #>  [5808,]  116  125  128 #>  [5809,]  116  125  128 #>  [5810,]  115  124  127 #>  [5811,]  115  124  127 #>  [5812,]  116  125  128 #>  [5813,]  115  124  127 #>  [5814,]  116  125  128 #>  [5815,]  116  125  128 #>  [5816,]  115  124  127 #>  [5817,]  115  124  127 #>  [5818,]  115  124  127 #>  [5819,]  115  124  127 #>  [5820,]  116  125  128 #>  [5821,]  115  124  127 #>  [5822,]  115  124  127 #>  [5823,]  115  124  127 #>  [5824,]  115  124  127 #>  [5825,]  115  124  127 #>  [5826,]  116  125  128 #>  [5827,]  115  124  127 #>  [5828,]  116  125  128 #>  [5829,]  115  124  127 #>  [5830,]  115  124  127 #>  [5831,]  115  124  127 #>  [5832,]  115  124  127 #>  [5833,]  116  125  128 #>  [5834,]  115  124  127 #>  [5835,]  115  124  127 #>  [5836,]  115  124  127 #>  [5837,]  115  124  127 #>  [5838,]  116  125  128 #>  [5839,]  115  124  127 #>  [5840,]  115  124  127 #>  [5841,]  116  125  128 #>  [5842,]  116  125  128 #>  [5843,]  116  125  128 #>  [5844,]  115  124  127 #>  [5845,]  116  125  128 #>  [5846,]  116  125  128 #>  [5847,]  115  124  127 #>  [5848,]  115  124  127 #>  [5849,]  115  124  127 #>  [5850,]  116  125  128 #>  [5851,]  116  125  128 #>  [5852,]  115  124  127 #>  [5853,]  116  125  128 #>  [5854,]  115  124  127 #>  [5855,]  116  125  128 #>  [5856,]  116  125  128 #>  [5857,]  116  125  128 #>  [5858,]  116  125  128 #>  [5859,]  115  124  127 #>  [5860,]  116  125  128 #>  [5861,]  116  125  128 #>  [5862,]  115  124  127 #>  [5863,]  116  125  128 #>  [5864,]  116  125  128 #>  [5865,]  116  125  128 #>  [5866,]  116  125  128 #>  [5867,]  115  124  127 #>  [5868,]  116  125  128 #>  [5869,]  115  124  127 #>  [5870,]  115  124  127 #>  [5871,]  116  125  128 #>  [5872,]  116  125  128 #>  [5873,]  116  125  128 #>  [5874,]  116  125  128 #>  [5875,]  116  125  128 #>  [5876,]  116  125  128 #>  [5877,]  115  124  127 #>  [5878,]  116  125  128 #>  [5879,]  115  124  127 #>  [5880,]  115  124  127 #>  [5881,]  116  125  128 #>  [5882,]  115  124  127 #>  [5883,]  115  124  127 #>  [5884,]  116  125  128 #>  [5885,]  115  124  127 #>  [5886,]  115  124  127 #>  [5887,]  116  125  128 #>  [5888,]  115  124  127 #>  [5889,]  115  124  127 #>  [5890,]  116  125  128 #>  [5891,]  116  125  128 #>  [5892,]  116  125  128 #>  [5893,]  115  124  127 #>  [5894,]  116  125  128 #>  [5895,]  115  124  127 #>  [5896,]  116  125  128 #>  [5897,]  116  125  128 #>  [5898,]  115  124  127 #>  [5899,]  115  124  127 #>  [5900,]  115  124  127 #>  [5901,]  118  127  129 #>  [5902,]  118  127  130 #>  [5903,]  118  127  130 #>  [5904,]  119  127  129 #>  [5905,]  118  127  130 #>  [5906,]  117  126  130 #>  [5907,]  118  127  130 #>  [5908,]  117  126  129 #>  [5909,]  117  126  129 #>  [5910,]  118  127  130 #>  [5911,]  119  127  129 #>  [5912,]  117  126  130 #>  [5913,]  118  127  129 #>  [5914,]  119  127  129 #>  [5915,]  117  126  129 #>  [5916,]  118  127  129 #>  [5917,]  118  127  129 #>  [5918,]  119  127  130 #>  [5919,]  119  127  130 #>  [5920,]  118  127  130 #>  [5921,]  119  127  129 #>  [5922,]  118  127  129 #>  [5923,]  118  127  130 #>  [5924,]  118  127  129 #>  [5925,]  118  127  130 #>  [5926,]  117  126  130 #>  [5927,]  119  127  129 #>  [5928,]  118  127  130 #>  [5929,]  118  127  130 #>  [5930,]  119  127  129 #>  [5931,]  119  127  130 #>  [5932,]  118  127  130 #>  [5933,]  117  126  130 #>  [5934,]  118  127  130 #>  [5935,]  118  127  129 #>  [5936,]  119  127  130 #>  [5937,]  118  127  129 #>  [5938,]  119  127  129 #>  [5939,]  118  127  130 #>  [5940,]  118  127  130 #>  [5941,]  119  127  129 #>  [5942,]  119  127  130 #>  [5943,]  117  126  129 #>  [5944,]  118  127  129 #>  [5945,]  118  127  129 #>  [5946,]  117  126  129 #>  [5947,]  118  127  130 #>  [5948,]  119  127  130 #>  [5949,]  118  127  129 #>  [5950,]  118  127  130 #>  [5951,]  117  126  129 #>  [5952,]  118  127  129 #>  [5953,]  118  127  130 #>  [5954,]  118  127  129 #>  [5955,]  118  127  129 #>  [5956,]  117  126  130 #>  [5957,]  117  126  130 #>  [5958,]  119  127  129 #>  [5959,]  118  127  129 #>  [5960,]  119  127  130 #>  [5961,]  117  126  130 #>  [5962,]  119  127  129 #>  [5963,]  118  127  130 #>  [5964,]  117  126  130 #>  [5965,]  118  127  130 #>  [5966,]  117  126  129 #>  [5967,]  118  127  129 #>  [5968,]  117  126  129 #>  [5969,]  119  127  129 #>  [5970,]  118  127  130 #>  [5971,]  118  127  130 #>  [5972,]  118  127  130 #>  [5973,]  118  127  130 #>  [5974,]  119  127  129 #>  [5975,]  119  127  130 #>  [5976,]  117  126  130 #>  [5977,]  118  127  130 #>  [5978,]  118  127  130 #>  [5979,]  118  127  129 #>  [5980,]  118  127  129 #>  [5981,]  118  127  129 #>  [5982,]  119  127  129 #>  [5983,]  118  127  129 #>  [5984,]  118  127  130 #>  [5985,]  119  127  129 #>  [5986,]  118  127  130 #>  [5987,]  118  127  129 #>  [5988,]  118  127  129 #>  [5989,]  118  127  129 #>  [5990,]  118  127  129 #>  [5991,]  118  127  129 #>  [5992,]  119  127  129 #>  [5993,]  119  127  130 #>  [5994,]  117  126  130 #>  [5995,]  118  127  129 #>  [5996,]  119  127  129 #>  [5997,]  119  127  130 #>  [5998,]  118  127  130 #>  [5999,]  119  127  129 #>  [6000,]  118  127  130 #>  [6001,]  120  128  131 #>  [6002,]  121  129  132 #>  [6003,]  121  129  132 #>  [6004,]  120  128  131 #>  [6005,]  120  128  131 #>  [6006,]  121  129  132 #>  [6007,]  121  129  132 #>  [6008,]  120  128  131 #>  [6009,]  120  128  131 #>  [6010,]  120  128  131 #>  [6011,]  120  128  131 #>  [6012,]  121  129  132 #>  [6013,]  120  128  131 #>  [6014,]  120  128  131 #>  [6015,]  120  128  131 #>  [6016,]  120  128  131 #>  [6017,]  120  128  131 #>  [6018,]  121  129  132 #>  [6019,]  121  129  132 #>  [6020,]  121  129  132 #>  [6021,]  120  128  131 #>  [6022,]  120  128  131 #>  [6023,]  121  129  132 #>  [6024,]  120  128  131 #>  [6025,]  121  129  132 #>  [6026,]  120  128  131 #>  [6027,]  120  128  131 #>  [6028,]  121  129  132 #>  [6029,]  120  128  131 #>  [6030,]  120  128  131 #>  [6031,]  121  129  132 #>  [6032,]  121  129  132 #>  [6033,]  121  129  132 #>  [6034,]  121  129  132 #>  [6035,]  120  128  131 #>  [6036,]  120  128  131 #>  [6037,]  120  128  131 #>  [6038,]  120  128  131 #>  [6039,]  120  128  131 #>  [6040,]  121  129  132 #>  [6041,]  120  128  131 #>  [6042,]  121  129  132 #>  [6043,]  120  128  131 #>  [6044,]  120  128  131 #>  [6045,]  120  128  131 #>  [6046,]  120  128  131 #>  [6047,]  120  128  131 #>  [6048,]  121  129  132 #>  [6049,]  120  128  131 #>  [6050,]  120  128  131 #>  [6051,]  120  128  131 #>  [6052,]  120  128  131 #>  [6053,]  120  128  131 #>  [6054,]  120  128  131 #>  [6055,]  120  128  131 #>  [6056,]  121  129  132 #>  [6057,]  120  128  131 #>  [6058,]  120  128  131 #>  [6059,]  120  128  131 #>  [6060,]  121  129  132 #>  [6061,]  121  129  132 #>  [6062,]  120  128  131 #>  [6063,]  120  128  131 #>  [6064,]  121  129  132 #>  [6065,]  121  129  132 #>  [6066,]  120  128  131 #>  [6067,]  120  128  131 #>  [6068,]  120  128  131 #>  [6069,]  120  128  131 #>  [6070,]  121  129  132 #>  [6071,]  121  129  132 #>  [6072,]  120  128  131 #>  [6073,]  121  129  132 #>  [6074,]  120  128  131 #>  [6075,]  120  128  131 #>  [6076,]  120  128  131 #>  [6077,]  120  128  131 #>  [6078,]  121  129  132 #>  [6079,]  120  128  131 #>  [6080,]  120  128  131 #>  [6081,]  120  128  131 #>  [6082,]  120  128  131 #>  [6083,]  120  128  131 #>  [6084,]  121  129  132 #>  [6085,]  120  128  131 #>  [6086,]  120  128  131 #>  [6087,]  120  128  131 #>  [6088,]  120  128  131 #>  [6089,]  120  128  131 #>  [6090,]  120  128  131 #>  [6091,]  120  128  131 #>  [6092,]  120  128  131 #>  [6093,]  121  129  132 #>  [6094,]  120  128  131 #>  [6095,]  120  128  131 #>  [6096,]  120  128  131 #>  [6097,]  121  129  132 #>  [6098,]  121  129  132 #>  [6099,]  120  128  131 #>  [6100,]  121  129  132 #>  [6101,]  123  131  133 #>  [6102,]  123  131  133 #>  [6103,]  123  131  133 #>  [6104,]  122  130  134 #>  [6105,]  123  131  133 #>  [6106,]  123  131  133 #>  [6107,]  123  131  133 #>  [6108,]  122  130  135 #>  [6109,]  122  130  134 #>  [6110,]  123  131  133 #>  [6111,]  122  130  134 #>  [6112,]  123  131  133 #>  [6113,]  122  130  135 #>  [6114,]  123  131  133 #>  [6115,]  123  131  133 #>  [6116,]  123  131  133 #>  [6117,]  122  130  134 #>  [6118,]  123  131  133 #>  [6119,]  123  131  133 #>  [6120,]  123  131  133 #>  [6121,]  123  131  133 #>  [6122,]  122  130  135 #>  [6123,]  123  131  133 #>  [6124,]  123  131  133 #>  [6125,]  123  131  133 #>  [6126,]  123  131  133 #>  [6127,]  122  130  135 #>  [6128,]  123  131  133 #>  [6129,]  123  131  133 #>  [6130,]  123  131  133 #>  [6131,]  123  131  133 #>  [6132,]  123  131  133 #>  [6133,]  123  131  133 #>  [6134,]  123  131  133 #>  [6135,]  122  130  134 #>  [6136,]  123  131  133 #>  [6137,]  123  131  133 #>  [6138,]  123  131  133 #>  [6139,]  123  131  133 #>  [6140,]  123  131  133 #>  [6141,]  123  131  133 #>  [6142,]  123  131  133 #>  [6143,]  122  130  134 #>  [6144,]  122  130  134 #>  [6145,]  123  131  133 #>  [6146,]  123  131  133 #>  [6147,]  123  131  133 #>  [6148,]  123  131  133 #>  [6149,]  122  130  134 #>  [6150,]  123  131  133 #>  [6151,]  123  131  133 #>  [6152,]  122  130  134 #>  [6153,]  123  131  133 #>  [6154,]  123  131  133 #>  [6155,]  122  130  135 #>  [6156,]  123  131  133 #>  [6157,]  123  131  133 #>  [6158,]  122  130  135 #>  [6159,]  123  131  133 #>  [6160,]  123  131  133 #>  [6161,]  123  131  133 #>  [6162,]  123  131  133 #>  [6163,]  123  131  133 #>  [6164,]  123  131  133 #>  [6165,]  123  131  133 #>  [6166,]  122  130  135 #>  [6167,]  123  131  133 #>  [6168,]  123  131  133 #>  [6169,]  123  131  133 #>  [6170,]  123  131  133 #>  [6171,]  123  131  133 #>  [6172,]  123  131  133 #>  [6173,]  123  131  133 #>  [6174,]  123  131  133 #>  [6175,]  123  131  133 #>  [6176,]  123  131  133 #>  [6177,]  123  131  133 #>  [6178,]  123  131  133 #>  [6179,]  122  130  134 #>  [6180,]  122  130  135 #>  [6181,]  122  130  135 #>  [6182,]  122  130  134 #>  [6183,]  122  130  135 #>  [6184,]  123  131  133 #>  [6185,]  123  131  133 #>  [6186,]  123  131  133 #>  [6187,]  122  130  135 #>  [6188,]  122  130  134 #>  [6189,]  122  130  134 #>  [6190,]  122  130  135 #>  [6191,]  123  131  133 #>  [6192,]  122  130  134 #>  [6193,]  123  131  133 #>  [6194,]  123  131  133 #>  [6195,]  122  130  134 #>  [6196,]  123  131  133 #>  [6197,]  123  131  133 #>  [6198,]  123  131  133 #>  [6199,]  122  130  134 #>  [6200,]  123  131  133 #>  [6201,]  125  133  137 #>  [6202,]  125  133  137 #>  [6203,]  125  133  137 #>  [6204,]  125  133  137 #>  [6205,]  125  133  137 #>  [6206,]  125  133  137 #>  [6207,]  125  133  137 #>  [6208,]  125  133  137 #>  [6209,]  125  133  137 #>  [6210,]  124  132  136 #>  [6211,]  124  132  136 #>  [6212,]  125  133  137 #>  [6213,]  125  133  137 #>  [6214,]  124  132  136 #>  [6215,]  125  133  137 #>  [6216,]  125  133  137 #>  [6217,]  125  133  137 #>  [6218,]  125  133  137 #>  [6219,]  125  133  137 #>  [6220,]  125  133  137 #>  [6221,]  125  133  137 #>  [6222,]  125  133  137 #>  [6223,]  125  133  137 #>  [6224,]  125  133  137 #>  [6225,]  125  133  137 #>  [6226,]  125  133  137 #>  [6227,]  125  133  137 #>  [6228,]  125  133  137 #>  [6229,]  125  133  137 #>  [6230,]  125  133  137 #>  [6231,]  125  133  137 #>  [6232,]  125  133  137 #>  [6233,]  125  133  137 #>  [6234,]  125  133  137 #>  [6235,]  125  133  137 #>  [6236,]  125  133  137 #>  [6237,]  125  133  137 #>  [6238,]  125  133  137 #>  [6239,]  125  133  137 #>  [6240,]  124  132  136 #>  [6241,]  125  133  137 #>  [6242,]  125  133  137 #>  [6243,]  125  133  137 #>  [6244,]  125  133  137 #>  [6245,]  125  133  137 #>  [6246,]  125  133  137 #>  [6247,]  125  133  137 #>  [6248,]  124  132  136 #>  [6249,]  125  133  137 #>  [6250,]  125  133  137 #>  [6251,]  125  133  137 #>  [6252,]  125  133  137 #>  [6253,]  125  133  137 #>  [6254,]  125  133  137 #>  [6255,]  125  133  137 #>  [6256,]  125  133  137 #>  [6257,]  125  133  137 #>  [6258,]  125  133  137 #>  [6259,]  125  133  137 #>  [6260,]  125  133  137 #>  [6261,]  125  133  137 #>  [6262,]  125  133  137 #>  [6263,]  125  133  137 #>  [6264,]  125  133  137 #>  [6265,]  125  133  137 #>  [6266,]  125  133  137 #>  [6267,]  125  133  137 #>  [6268,]  125  133  137 #>  [6269,]  125  133  137 #>  [6270,]  124  132  136 #>  [6271,]  125  133  137 #>  [6272,]  125  133  137 #>  [6273,]  125  133  137 #>  [6274,]  125  133  137 #>  [6275,]  125  133  137 #>  [6276,]  125  133  137 #>  [6277,]  125  133  137 #>  [6278,]  125  133  137 #>  [6279,]  125  133  137 #>  [6280,]  125  133  137 #>  [6281,]  125  133  137 #>  [6282,]  125  133  137 #>  [6283,]  125  133  137 #>  [6284,]  125  133  137 #>  [6285,]  125  133  137 #>  [6286,]  125  133  137 #>  [6287,]  125  133  137 #>  [6288,]  125  133  137 #>  [6289,]  125  133  137 #>  [6290,]  125  133  137 #>  [6291,]  125  133  137 #>  [6292,]  125  133  137 #>  [6293,]  125  133  137 #>  [6294,]  125  133  137 #>  [6295,]  125  133  137 #>  [6296,]  125  133  137 #>  [6297,]  125  133  137 #>  [6298,]  125  133  137 #>  [6299,]  125  133  137 #>  [6300,]  125  133  137 #>  [6301,]  127  134  138 #>  [6302,]  126  136  139 #>  [6303,]  127  134  139 #>  [6304,]  127  134  138 #>  [6305,]  126  136  139 #>  [6306,]  126  135  139 #>  [6307,]  127  134  139 #>  [6308,]  126  135  138 #>  [6309,]  127  134  138 #>  [6310,]  127  134  139 #>  [6311,]  126  135  138 #>  [6312,]  126  136  139 #>  [6313,]  127  134  138 #>  [6314,]  127  134  138 #>  [6315,]  126  136  138 #>  [6316,]  127  134  138 #>  [6317,]  126  136  138 #>  [6318,]  126  136  139 #>  [6319,]  126  135  139 #>  [6320,]  127  134  139 #>  [6321,]  126  136  138 #>  [6322,]  127  134  138 #>  [6323,]  126  136  139 #>  [6324,]  127  134  139 #>  [6325,]  127  134  139 #>  [6326,]  126  135  139 #>  [6327,]  127  134  138 #>  [6328,]  127  134  139 #>  [6329,]  126  136  139 #>  [6330,]  126  136  138 #>  [6331,]  126  136  139 #>  [6332,]  126  136  139 #>  [6333,]  126  136  139 #>  [6334,]  126  135  139 #>  [6335,]  126  135  138 #>  [6336,]  127  134  139 #>  [6337,]  126  135  138 #>  [6338,]  126  135  139 #>  [6339,]  127  134  139 #>  [6340,]  126  136  139 #>  [6341,]  127  134  138 #>  [6342,]  126  135  139 #>  [6343,]  126  136  138 #>  [6344,]  126  136  138 #>  [6345,]  127  134  138 #>  [6346,]  126  136  138 #>  [6347,]  126  136  139 #>  [6348,]  126  136  139 #>  [6349,]  127  134  138 #>  [6350,]  127  134  139 #>  [6351,]  126  136  139 #>  [6352,]  127  134  138 #>  [6353,]  127  134  139 #>  [6354,]  127  134  138 #>  [6355,]  127  134  138 #>  [6356,]  126  135  139 #>  [6357,]  127  134  139 #>  [6358,]  127  134  138 #>  [6359,]  127  134  139 #>  [6360,]  126  136  139 #>  [6361,]  126  136  139 #>  [6362,]  126  135  138 #>  [6363,]  126  136  139 #>  [6364,]  126  135  139 #>  [6365,]  126  135  139 #>  [6366,]  126  136  138 #>  [6367,]  127  134  138 #>  [6368,]  126  135  138 #>  [6369,]  126  135  138 #>  [6370,]  126  136  139 #>  [6371,]  127  134  139 #>  [6372,]  127  134  139 #>  [6373,]  127  134  139 #>  [6374,]  127  134  138 #>  [6375,]  126  136  139 #>  [6376,]  127  134  139 #>  [6377,]  126  135  139 #>  [6378,]  126  136  139 #>  [6379,]  126  135  138 #>  [6380,]  127  134  138 #>  [6381,]  126  136  138 #>  [6382,]  126  136  138 #>  [6383,]  126  136  138 #>  [6384,]  126  136  139 #>  [6385,]  127  134  138 #>  [6386,]  127  134  139 #>  [6387,]  127  134  138 #>  [6388,]  127  134  138 #>  [6389,]  126  135  138 #>  [6390,]  127  134  138 #>  [6391,]  127  134  138 #>  [6392,]  126  136  138 #>  [6393,]  126  136  139 #>  [6394,]  126  135  139 #>  [6395,]  126  136  138 #>  [6396,]  126  135  138 #>  [6397,]  126  135  139 #>  [6398,]  126  136  139 #>  [6399,]  126  136  138 #>  [6400,]  126  135  139 #>  [6401,]  128  138  141 #>  [6402,]  128  137  142 #>  [6403,]  128  137  142 #>  [6404,]  128  137  143 #>  [6405,]  128  137  143 #>  [6406,]  128  137  142 #>  [6407,]  128  137  142 #>  [6408,]  128  137  142 #>  [6409,]  128  138  141 #>  [6410,]  128  137  143 #>  [6411,]  128  138  141 #>  [6412,]  128  137  143 #>  [6413,]  128  138  141 #>  [6414,]  128  137  143 #>  [6415,]  128  137  143 #>  [6416,]  128  137  143 #>  [6417,]  128  138  141 #>  [6418,]  128  138  141 #>  [6419,]  128  137  143 #>  [6420,]  128  138  140 #>  [6421,]  128  137  142 #>  [6422,]  128  137  143 #>  [6423,]  128  137  142 #>  [6424,]  128  137  143 #>  [6425,]  128  137  142 #>  [6426,]  128  137  143 #>  [6427,]  128  138  141 #>  [6428,]  128  138  141 #>  [6429,]  128  138  141 #>  [6430,]  128  137  142 #>  [6431,]  128  137  143 #>  [6432,]  128  137  143 #>  [6433,]  128  138  141 #>  [6434,]  128  137  142 #>  [6435,]  128  137  142 #>  [6436,]  128  138  141 #>  [6437,]  128  137  142 #>  [6438,]  128  138  141 #>  [6439,]  128  138  141 #>  [6440,]  128  137  142 #>  [6441,]  128  137  142 #>  [6442,]  128  138  140 #>  [6443,]  128  137  143 #>  [6444,]  128  137  142 #>  [6445,]  128  137  142 #>  [6446,]  128  137  143 #>  [6447,]  128  137  143 #>  [6448,]  128  137  143 #>  [6449,]  128  137  142 #>  [6450,]  128  137  142 #>  [6451,]  128  138  141 #>  [6452,]  128  137  143 #>  [6453,]  128  138  140 #>  [6454,]  128  138  141 #>  [6455,]  128  137  142 #>  [6456,]  128  138  140 #>  [6457,]  128  137  142 #>  [6458,]  128  138  141 #>  [6459,]  128  137  143 #>  [6460,]  128  137  142 #>  [6461,]  128  137  143 #>  [6462,]  128  138  141 #>  [6463,]  128  137  143 #>  [6464,]  128  137  142 #>  [6465,]  128  138  140 #>  [6466,]  128  138  141 #>  [6467,]  128  137  142 #>  [6468,]  128  137  143 #>  [6469,]  128  137  143 #>  [6470,]  128  137  143 #>  [6471,]  128  137  143 #>  [6472,]  128  137  142 #>  [6473,]  128  137  142 #>  [6474,]  128  137  142 #>  [6475,]  128  137  143 #>  [6476,]  128  137  142 #>  [6477,]  128  138  141 #>  [6478,]  128  137  143 #>  [6479,]  128  138  141 #>  [6480,]  128  137  142 #>  [6481,]  128  137  142 #>  [6482,]  128  138  140 #>  [6483,]  128  138  141 #>  [6484,]  128  138  140 #>  [6485,]  128  138  140 #>  [6486,]  128  137  142 #>  [6487,]  128  138  141 #>  [6488,]  128  137  142 #>  [6489,]  128  138  140 #>  [6490,]  128  138  141 #>  [6491,]  128  138  141 #>  [6492,]  128  137  143 #>  [6493,]  128  138  141 #>  [6494,]  128  138  140 #>  [6495,]  128  137  143 #>  [6496,]  128  137  143 #>  [6497,]  128  137  142 #>  [6498,]  128  137  142 #>  [6499,]  128  137  142 #>  [6500,]  128  137  143 #>  [6501,]  129  139  147 #>  [6502,]  130  140  144 #>  [6503,]  129  139  146 #>  [6504,]  130  140  144 #>  [6505,]  130  140  144 #>  [6506,]  129  139  146 #>  [6507,]  130  140  144 #>  [6508,]  130  140  144 #>  [6509,]  130  140  144 #>  [6510,]  130  140  144 #>  [6511,]  129  139  145 #>  [6512,]  130  140  144 #>  [6513,]  130  140  144 #>  [6514,]  129  139  145 #>  [6515,]  130  140  144 #>  [6516,]  129  139  147 #>  [6517,]  130  140  144 #>  [6518,]  130  140  144 #>  [6519,]  129  139  145 #>  [6520,]  130  140  144 #>  [6521,]  130  140  144 #>  [6522,]  130  140  144 #>  [6523,]  130  140  144 #>  [6524,]  130  140  144 #>  [6525,]  130  140  144 #>  [6526,]  130  140  144 #>  [6527,]  130  140  144 #>  [6528,]  129  139  146 #>  [6529,]  130  140  144 #>  [6530,]  130  140  144 #>  [6531,]  130  140  144 #>  [6532,]  130  140  144 #>  [6533,]  130  140  144 #>  [6534,]  129  139  146 #>  [6535,]  129  139  146 #>  [6536,]  130  140  144 #>  [6537,]  129  139  147 #>  [6538,]  129  139  145 #>  [6539,]  130  140  144 #>  [6540,]  130  140  144 #>  [6541,]  130  140  144 #>  [6542,]  129  139  145 #>  [6543,]  130  140  144 #>  [6544,]  130  140  144 #>  [6545,]  129  139  147 #>  [6546,]  130  140  144 #>  [6547,]  130  140  144 #>  [6548,]  130  140  144 #>  [6549,]  129  139  147 #>  [6550,]  130  140  144 #>  [6551,]  130  140  144 #>  [6552,]  129  139  146 #>  [6553,]  130  140  144 #>  [6554,]  130  140  144 #>  [6555,]  130  140  144 #>  [6556,]  130  140  144 #>  [6557,]  130  140  144 #>  [6558,]  130  140  144 #>  [6559,]  130  140  144 #>  [6560,]  130  140  144 #>  [6561,]  130  140  144 #>  [6562,]  130  140  144 #>  [6563,]  130  140  144 #>  [6564,]  129  139  147 #>  [6565,]  130  140  144 #>  [6566,]  130  140  144 #>  [6567,]  130  140  144 #>  [6568,]  129  139  145 #>  [6569,]  130  140  144 #>  [6570,]  130  140  144 #>  [6571,]  130  140  144 #>  [6572,]  129  139  146 #>  [6573,]  129  139  146 #>  [6574,]  130  140  144 #>  [6575,]  130  140  144 #>  [6576,]  130  140  144 #>  [6577,]  129  139  147 #>  [6578,]  130  140  144 #>  [6579,]  130  140  144 #>  [6580,]  130  140  144 #>  [6581,]  130  140  144 #>  [6582,]  130  140  144 #>  [6583,]  130  140  144 #>  [6584,]  130  140  144 #>  [6585,]  130  140  144 #>  [6586,]  130  140  144 #>  [6587,]  130  140  144 #>  [6588,]  130  140  144 #>  [6589,]  129  139  146 #>  [6590,]  130  140  144 #>  [6591,]  130  140  144 #>  [6592,]  130  140  144 #>  [6593,]  130  140  144 #>  [6594,]  129  139  146 #>  [6595,]  130  140  144 #>  [6596,]  129  139  145 #>  [6597,]  129  139  145 #>  [6598,]  130  140  144 #>  [6599,]  130  140  144 #>  [6600,]  129  139  147 #>  [6601,]  132  143  149 #>  [6602,]  131  141  148 #>  [6603,]  132  142  149 #>  [6604,]  132  142  149 #>  [6605,]  132  143  149 #>  [6606,]  131  141  148 #>  [6607,]  132  142  149 #>  [6608,]  132  142  149 #>  [6609,]  132  143  149 #>  [6610,]  132  143  149 #>  [6611,]  131  141  148 #>  [6612,]  131  141  148 #>  [6613,]  132  143  149 #>  [6614,]  132  143  149 #>  [6615,]  131  141  148 #>  [6616,]  132  143  149 #>  [6617,]  131  141  148 #>  [6618,]  132  143  149 #>  [6619,]  131  141  148 #>  [6620,]  132  143  149 #>  [6621,]  132  143  149 #>  [6622,]  132  143  149 #>  [6623,]  131  141  148 #>  [6624,]  132  143  149 #>  [6625,]  132  142  149 #>  [6626,]  131  141  148 #>  [6627,]  132  143  149 #>  [6628,]  132  143  149 #>  [6629,]  131  141  148 #>  [6630,]  131  141  148 #>  [6631,]  131  141  148 #>  [6632,]  132  143  149 #>  [6633,]  132  143  149 #>  [6634,]  131  141  148 #>  [6635,]  131  141  148 #>  [6636,]  132  143  149 #>  [6637,]  131  141  148 #>  [6638,]  132  143  149 #>  [6639,]  132  143  149 #>  [6640,]  132  142  149 #>  [6641,]  132  143  149 #>  [6642,]  131  141  148 #>  [6643,]  131  141  148 #>  [6644,]  131  141  148 #>  [6645,]  132  143  149 #>  [6646,]  131  141  148 #>  [6647,]  131  141  148 #>  [6648,]  131  141  148 #>  [6649,]  132  143  149 #>  [6650,]  132  143  149 #>  [6651,]  132  143  149 #>  [6652,]  132  142  149 #>  [6653,]  132  143  149 #>  [6654,]  132  143  149 #>  [6655,]  132  142  149 #>  [6656,]  131  141  148 #>  [6657,]  132  142  149 #>  [6658,]  132  143  149 #>  [6659,]  132  142  149 #>  [6660,]  131  141  148 #>  [6661,]  131  141  148 #>  [6662,]  132  143  149 #>  [6663,]  131  141  148 #>  [6664,]  131  141  148 #>  [6665,]  131  141  148 #>  [6666,]  131  141  148 #>  [6667,]  132  143  149 #>  [6668,]  131  141  148 #>  [6669,]  132  143  149 #>  [6670,]  131  141  148 #>  [6671,]  132  143  149 #>  [6672,]  132  143  149 #>  [6673,]  132  143  149 #>  [6674,]  132  142  149 #>  [6675,]  131  141  148 #>  [6676,]  132  143  149 #>  [6677,]  132  143  149 #>  [6678,]  131  141  148 #>  [6679,]  131  141  148 #>  [6680,]  132  142  149 #>  [6681,]  131  141  148 #>  [6682,]  132  143  149 #>  [6683,]  132  143  149 #>  [6684,]  132  143  149 #>  [6685,]  132  143  149 #>  [6686,]  132  142  149 #>  [6687,]  132  143  149 #>  [6688,]  132  143  149 #>  [6689,]  132  143  149 #>  [6690,]  132  143  149 #>  [6691,]  132  143  149 #>  [6692,]  131  141  148 #>  [6693,]  131  141  148 #>  [6694,]  131  141  148 #>  [6695,]  131  141  148 #>  [6696,]  131  141  148 #>  [6697,]  132  142  149 #>  [6698,]  132  142  149 #>  [6699,]  132  143  149 #>  [6700,]  131  141  148 #>  [6701,]  133  144  150 #>  [6702,]  133  144  150 #>  [6703,]  133  144  150 #>  [6704,]  133  144  150 #>  [6705,]  133  144  150 #>  [6706,]  133  144  150 #>  [6707,]  133  144  150 #>  [6708,]  133  144  150 #>  [6709,]  134  145  151 #>  [6710,]  133  144  150 #>  [6711,]  133  144  150 #>  [6712,]  133  144  150 #>  [6713,]  134  145  151 #>  [6714,]  133  144  150 #>  [6715,]  133  144  150 #>  [6716,]  133  144  150 #>  [6717,]  134  145  151 #>  [6718,]  134  145  151 #>  [6719,]  133  144  150 #>  [6720,]  133  144  150 #>  [6721,]  133  144  150 #>  [6722,]  133  144  150 #>  [6723,]  133  144  150 #>  [6724,]  133  144  150 #>  [6725,]  133  144  150 #>  [6726,]  133  144  150 #>  [6727,]  134  145  151 #>  [6728,]  133  144  150 #>  [6729,]  133  144  150 #>  [6730,]  133  144  150 #>  [6731,]  133  144  150 #>  [6732,]  133  144  150 #>  [6733,]  133  144  150 #>  [6734,]  133  144  150 #>  [6735,]  133  144  150 #>  [6736,]  133  144  150 #>  [6737,]  133  144  150 #>  [6738,]  133  144  150 #>  [6739,]  133  144  150 #>  [6740,]  133  144  150 #>  [6741,]  133  144  150 #>  [6742,]  134  145  151 #>  [6743,]  133  144  150 #>  [6744,]  133  144  150 #>  [6745,]  133  144  150 #>  [6746,]  133  144  150 #>  [6747,]  133  144  150 #>  [6748,]  133  144  150 #>  [6749,]  133  144  150 #>  [6750,]  133  144  150 #>  [6751,]  134  145  151 #>  [6752,]  133  144  150 #>  [6753,]  134  145  151 #>  [6754,]  133  144  150 #>  [6755,]  133  144  150 #>  [6756,]  133  144  150 #>  [6757,]  133  144  150 #>  [6758,]  133  144  150 #>  [6759,]  133  144  150 #>  [6760,]  133  144  150 #>  [6761,]  133  144  150 #>  [6762,]  133  144  150 #>  [6763,]  133  144  150 #>  [6764,]  133  144  150 #>  [6765,]  134  145  151 #>  [6766,]  134  145  151 #>  [6767,]  133  144  150 #>  [6768,]  133  144  150 #>  [6769,]  133  144  150 #>  [6770,]  133  144  150 #>  [6771,]  133  144  150 #>  [6772,]  133  144  150 #>  [6773,]  133  144  150 #>  [6774,]  133  144  150 #>  [6775,]  133  144  150 #>  [6776,]  133  144  150 #>  [6777,]  133  144  150 #>  [6778,]  133  144  150 #>  [6779,]  134  145  151 #>  [6780,]  133  144  150 #>  [6781,]  133  144  150 #>  [6782,]  134  145  151 #>  [6783,]  133  144  150 #>  [6784,]  134  145  151 #>  [6785,]  133  144  150 #>  [6786,]  133  144  150 #>  [6787,]  133  144  150 #>  [6788,]  133  144  150 #>  [6789,]  133  144  150 #>  [6790,]  133  144  150 #>  [6791,]  134  145  151 #>  [6792,]  133  144  150 #>  [6793,]  134  145  151 #>  [6794,]  134  145  151 #>  [6795,]  133  144  150 #>  [6796,]  133  144  150 #>  [6797,]  133  144  150 #>  [6798,]  133  144  150 #>  [6799,]  133  144  150 #>  [6800,]  133  144  150 #>  [6801,]  135  146  152 #>  [6802,]  135  146  152 #>  [6803,]  135  146  152 #>  [6804,]  136  147  153 #>  [6805,]  135  146  152 #>  [6806,]  135  146  152 #>  [6807,]  135  146  152 #>  [6808,]  135  146  152 #>  [6809,]  135  146  152 #>  [6810,]  136  147  153 #>  [6811,]  135  146  152 #>  [6812,]  135  146  152 #>  [6813,]  135  146  152 #>  [6814,]  135  146  152 #>  [6815,]  135  146  152 #>  [6816,]  135  146  152 #>  [6817,]  135  146  152 #>  [6818,]  136  147  153 #>  [6819,]  135  146  152 #>  [6820,]  135  146  152 #>  [6821,]  136  147  153 #>  [6822,]  135  146  152 #>  [6823,]  135  146  152 #>  [6824,]  135  146  152 #>  [6825,]  136  147  153 #>  [6826,]  135  146  152 #>  [6827,]  135  146  152 #>  [6828,]  135  146  152 #>  [6829,]  135  146  152 #>  [6830,]  135  146  152 #>  [6831,]  135  146  152 #>  [6832,]  135  146  152 #>  [6833,]  135  146  152 #>  [6834,]  135  146  152 #>  [6835,]  135  146  152 #>  [6836,]  135  146  152 #>  [6837,]  135  146  152 #>  [6838,]  135  146  152 #>  [6839,]  136  147  153 #>  [6840,]  135  146  152 #>  [6841,]  135  146  152 #>  [6842,]  135  146  152 #>  [6843,]  136  147  153 #>  [6844,]  135  146  152 #>  [6845,]  136  147  153 #>  [6846,]  135  146  152 #>  [6847,]  135  146  152 #>  [6848,]  135  146  152 #>  [6849,]  135  146  152 #>  [6850,]  135  146  152 #>  [6851,]  135  146  152 #>  [6852,]  135  146  152 #>  [6853,]  136  147  153 #>  [6854,]  135  146  152 #>  [6855,]  135  146  152 #>  [6856,]  135  146  152 #>  [6857,]  135  146  152 #>  [6858,]  135  146  152 #>  [6859,]  135  146  152 #>  [6860,]  135  146  152 #>  [6861,]  136  147  153 #>  [6862,]  135  146  152 #>  [6863,]  135  146  152 #>  [6864,]  135  146  152 #>  [6865,]  135  146  152 #>  [6866,]  135  146  152 #>  [6867,]  135  146  152 #>  [6868,]  135  146  152 #>  [6869,]  135  146  152 #>  [6870,]  135  146  152 #>  [6871,]  135  146  152 #>  [6872,]  136  147  153 #>  [6873,]  136  147  153 #>  [6874,]  136  147  153 #>  [6875,]  136  147  153 #>  [6876,]  136  147  153 #>  [6877,]  136  147  153 #>  [6878,]  135  146  152 #>  [6879,]  135  146  152 #>  [6880,]  135  146  152 #>  [6881,]  135  146  152 #>  [6882,]  135  146  152 #>  [6883,]  135  146  152 #>  [6884,]  136  147  153 #>  [6885,]  135  146  152 #>  [6886,]  135  146  152 #>  [6887,]  135  146  152 #>  [6888,]  135  146  152 #>  [6889,]  135  146  152 #>  [6890,]  135  146  152 #>  [6891,]  135  146  152 #>  [6892,]  135  146  152 #>  [6893,]  135  146  152 #>  [6894,]  136  147  153 #>  [6895,]  136  147  153 #>  [6896,]  135  146  152 #>  [6897,]  135  146  152 #>  [6898,]  135  146  152 #>  [6899,]  135  146  152 #>  [6900,]  136  147  153 #>  [6901,]  137  148  155 #>  [6902,]  138  149  154 #>  [6903,]  138  149  154 #>  [6904,]  137  148  155 #>  [6905,]  138  149  155 #>  [6906,]  138  149  155 #>  [6907,]  138  149  154 #>  [6908,]  137  148  155 #>  [6909,]  137  148  155 #>  [6910,]  138  149  155 #>  [6911,]  137  148  155 #>  [6912,]  138  149  155 #>  [6913,]  137  148  154 #>  [6914,]  137  148  155 #>  [6915,]  137  148  155 #>  [6916,]  137  148  154 #>  [6917,]  137  148  155 #>  [6918,]  138  149  154 #>  [6919,]  138  149  154 #>  [6920,]  138  149  155 #>  [6921,]  137  148  154 #>  [6922,]  137  148  154 #>  [6923,]  138  149  154 #>  [6924,]  138  149  154 #>  [6925,]  138  149  155 #>  [6926,]  138  149  155 #>  [6927,]  137  148  155 #>  [6928,]  138  149  155 #>  [6929,]  138  149  155 #>  [6930,]  137  148  154 #>  [6931,]  138  149  154 #>  [6932,]  138  149  155 #>  [6933,]  138  149  155 #>  [6934,]  138  149  154 #>  [6935,]  137  148  154 #>  [6936,]  138  149  154 #>  [6937,]  137  148  154 #>  [6938,]  138  149  155 #>  [6939,]  138  149  154 #>  [6940,]  138  149  154 #>  [6941,]  137  148  155 #>  [6942,]  138  149  155 #>  [6943,]  137  148  155 #>  [6944,]  137  148  154 #>  [6945,]  137  148  155 #>  [6946,]  137  148  155 #>  [6947,]  138  149  154 #>  [6948,]  138  149  155 #>  [6949,]  137  148  154 #>  [6950,]  138  149  155 #>  [6951,]  138  149  155 #>  [6952,]  137  148  155 #>  [6953,]  138  149  155 #>  [6954,]  137  148  154 #>  [6955,]  137  148  155 #>  [6956,]  138  149  155 #>  [6957,]  138  149  155 #>  [6958,]  137  148  155 #>  [6959,]  138  149  155 #>  [6960,]  138  149  155 #>  [6961,]  138  149  155 #>  [6962,]  137  148  154 #>  [6963,]  138  149  155 #>  [6964,]  138  149  155 #>  [6965,]  138  149  155 #>  [6966,]  137  148  155 #>  [6967,]  137  148  155 #>  [6968,]  137  148  155 #>  [6969,]  137  148  155 #>  [6970,]  138  149  154 #>  [6971,]  138  149  155 #>  [6972,]  138  149  155 #>  [6973,]  138  149  155 #>  [6974,]  137  148  155 #>  [6975,]  138  149  155 #>  [6976,]  138  149  155 #>  [6977,]  138  149  154 #>  [6978,]  138  149  155 #>  [6979,]  137  148  154 #>  [6980,]  137  148  154 #>  [6981,]  137  148  155 #>  [6982,]  137  148  155 #>  [6983,]  137  148  154 #>  [6984,]  138  149  155 #>  [6985,]  137  148  155 #>  [6986,]  138  149  155 #>  [6987,]  137  148  155 #>  [6988,]  137  148  155 #>  [6989,]  137  148  155 #>  [6990,]  137  148  155 #>  [6991,]  137  148  155 #>  [6992,]  137  148  155 #>  [6993,]  138  149  154 #>  [6994,]  138  149  155 #>  [6995,]  137  148  154 #>  [6996,]  137  148  155 #>  [6997,]  138  149  155 #>  [6998,]  138  149  154 #>  [6999,]  137  148  155 #>  [7000,]  138  149  154 #>  [7001,]  140  151  157 #>  [7002,]  139  150  157 #>  [7003,]  139  150  156 #>  [7004,]  139  150  157 #>  [7005,]  139  150  157 #>  [7006,]  139  150  157 #>  [7007,]  139  150  157 #>  [7008,]  139  150  157 #>  [7009,]  139  150  157 #>  [7010,]  139  150  156 #>  [7011,]  139  150  156 #>  [7012,]  139  150  157 #>  [7013,]  139  150  157 #>  [7014,]  140  151  156 #>  [7015,]  140  151  157 #>  [7016,]  140  151  157 #>  [7017,]  139  150  157 #>  [7018,]  139  150  157 #>  [7019,]  139  150  157 #>  [7020,]  139  150  157 #>  [7021,]  139  150  157 #>  [7022,]  139  150  157 #>  [7023,]  139  150  157 #>  [7024,]  139  150  157 #>  [7025,]  139  150  157 #>  [7026,]  139  150  157 #>  [7027,]  139  150  157 #>  [7028,]  139  150  157 #>  [7029,]  139  150  157 #>  [7030,]  139  150  157 #>  [7031,]  139  150  157 #>  [7032,]  139  150  156 #>  [7033,]  139  150  157 #>  [7034,]  139  150  157 #>  [7035,]  139  150  157 #>  [7036,]  139  150  157 #>  [7037,]  139  150  157 #>  [7038,]  139  150  157 #>  [7039,]  139  150  157 #>  [7040,]  139  150  156 #>  [7041,]  140  151  157 #>  [7042,]  139  150  157 #>  [7043,]  139  150  157 #>  [7044,]  140  151  157 #>  [7045,]  139  150  157 #>  [7046,]  139  150  157 #>  [7047,]  139  150  157 #>  [7048,]  139  150  156 #>  [7049,]  139  150  157 #>  [7050,]  140  151  157 #>  [7051,]  139  150  157 #>  [7052,]  139  150  157 #>  [7053,]  139  150  157 #>  [7054,]  139  150  157 #>  [7055,]  139  150  157 #>  [7056,]  139  150  157 #>  [7057,]  139  150  157 #>  [7058,]  139  150  157 #>  [7059,]  140  151  157 #>  [7060,]  139  150  157 #>  [7061,]  139  150  157 #>  [7062,]  139  150  157 #>  [7063,]  139  150  157 #>  [7064,]  139  150  157 #>  [7065,]  139  150  157 #>  [7066,]  139  150  157 #>  [7067,]  139  150  157 #>  [7068,]  139  150  157 #>  [7069,]  139  150  157 #>  [7070,]  140  151  156 #>  [7071,]  139  150  157 #>  [7072,]  139  150  157 #>  [7073,]  140  151  157 #>  [7074,]  139  150  157 #>  [7075,]  139  150  157 #>  [7076,]  139  150  157 #>  [7077,]  139  150  157 #>  [7078,]  139  150  157 #>  [7079,]  139  150  157 #>  [7080,]  139  150  157 #>  [7081,]  139  150  157 #>  [7082,]  139  150  157 #>  [7083,]  139  150  157 #>  [7084,]  139  150  157 #>  [7085,]  139  150  157 #>  [7086,]  139  150  157 #>  [7087,]  139  150  157 #>  [7088,]  139  150  157 #>  [7089,]  139  150  157 #>  [7090,]  139  150  157 #>  [7091,]  139  150  157 #>  [7092,]  139  150  157 #>  [7093,]  139  150  157 #>  [7094,]  139  150  157 #>  [7095,]  139  150  157 #>  [7096,]  140  151  157 #>  [7097,]  139  150  157 #>  [7098,]  139  150  157 #>  [7099,]  140  151  157 #>  [7100,]  139  150  157 #>  [7101,]  142  153  158 #>  [7102,]  142  153  158 #>  [7103,]  141  152  158 #>  [7104,]  142  153  159 #>  [7105,]  142  153  158 #>  [7106,]  142  153  159 #>  [7107,]  142  153  158 #>  [7108,]  142  153  158 #>  [7109,]  142  153  159 #>  [7110,]  142  153  159 #>  [7111,]  141  152  159 #>  [7112,]  141  152  159 #>  [7113,]  142  153  158 #>  [7114,]  141  152  159 #>  [7115,]  142  153  159 #>  [7116,]  142  153  158 #>  [7117,]  142  153  158 #>  [7118,]  142  153  159 #>  [7119,]  141  152  159 #>  [7120,]  141  152  158 #>  [7121,]  142  153  159 #>  [7122,]  141  152  158 #>  [7123,]  142  153  158 #>  [7124,]  142  153  158 #>  [7125,]  142  153  158 #>  [7126,]  141  152  159 #>  [7127,]  142  153  159 #>  [7128,]  142  153  158 #>  [7129,]  141  152  158 #>  [7130,]  141  152  159 #>  [7131,]  142  153  159 #>  [7132,]  141  152  159 #>  [7133,]  142  153  159 #>  [7134,]  142  153  159 #>  [7135,]  142  153  158 #>  [7136,]  141  152  159 #>  [7137,]  142  153  158 #>  [7138,]  142  153  159 #>  [7139,]  142  153  158 #>  [7140,]  141  152  158 #>  [7141,]  141  152  159 #>  [7142,]  141  152  159 #>  [7143,]  142  153  158 #>  [7144,]  142  153  158 #>  [7145,]  142  153  158 #>  [7146,]  142  153  158 #>  [7147,]  142  153  158 #>  [7148,]  141  152  159 #>  [7149,]  142  153  158 #>  [7150,]  142  153  158 #>  [7151,]  141  152  158 #>  [7152,]  142  153  159 #>  [7153,]  142  153  158 #>  [7154,]  141  152  158 #>  [7155,]  142  153  158 #>  [7156,]  142  153  158 #>  [7157,]  142  153  158 #>  [7158,]  142  153  159 #>  [7159,]  142  153  158 #>  [7160,]  141  152  159 #>  [7161,]  142  153  159 #>  [7162,]  141  152  159 #>  [7163,]  141  152  158 #>  [7164,]  142  153  159 #>  [7165,]  142  153  158 #>  [7166,]  141  152  158 #>  [7167,]  142  153  159 #>  [7168,]  141  152  159 #>  [7169,]  141  152  159 #>  [7170,]  142  153  158 #>  [7171,]  142  153  158 #>  [7172,]  142  153  158 #>  [7173,]  142  153  159 #>  [7174,]  142  153  159 #>  [7175,]  142  153  159 #>  [7176,]  142  153  158 #>  [7177,]  142  153  158 #>  [7178,]  142  153  158 #>  [7179,]  142  153  158 #>  [7180,]  141  152  159 #>  [7181,]  141  152  158 #>  [7182,]  142  153  159 #>  [7183,]  141  152  158 #>  [7184,]  142  153  158 #>  [7185,]  142  153  159 #>  [7186,]  142  153  158 #>  [7187,]  142  153  158 #>  [7188,]  142  153  158 #>  [7189,]  141  152  158 #>  [7190,]  142  153  158 #>  [7191,]  141  152  158 #>  [7192,]  142  153  159 #>  [7193,]  142  153  159 #>  [7194,]  142  153  158 #>  [7195,]  142  153  158 #>  [7196,]  142  153  159 #>  [7197,]  142  153  159 #>  [7198,]  142  153  158 #>  [7199,]  142  153  159 #>  [7200,]  142  153  158 #>  [7201,]  143  154  160 #>  [7202,]  144  155  161 #>  [7203,]  144  155  161 #>  [7204,]  143  154  160 #>  [7205,]  143  154  160 #>  [7206,]  144  155  161 #>  [7207,]  144  155  161 #>  [7208,]  143  154  160 #>  [7209,]  143  154  160 #>  [7210,]  144  155  161 #>  [7211,]  143  154  160 #>  [7212,]  144  155  161 #>  [7213,]  143  154  160 #>  [7214,]  143  154  160 #>  [7215,]  143  154  160 #>  [7216,]  143  154  160 #>  [7217,]  143  154  160 #>  [7218,]  144  155  161 #>  [7219,]  144  155  161 #>  [7220,]  144  155  161 #>  [7221,]  143  154  160 #>  [7222,]  143  154  160 #>  [7223,]  144  155  161 #>  [7224,]  143  154  160 #>  [7225,]  144  155  161 #>  [7226,]  143  154  160 #>  [7227,]  143  154  160 #>  [7228,]  144  155  161 #>  [7229,]  144  155  161 #>  [7230,]  143  154  160 #>  [7231,]  144  155  161 #>  [7232,]  144  155  161 #>  [7233,]  144  155  161 #>  [7234,]  144  155  161 #>  [7235,]  143  154  160 #>  [7236,]  144  155  161 #>  [7237,]  143  154  160 #>  [7238,]  143  154  160 #>  [7239,]  144  155  161 #>  [7240,]  144  155  161 #>  [7241,]  143  154  160 #>  [7242,]  144  155  161 #>  [7243,]  143  154  160 #>  [7244,]  143  154  160 #>  [7245,]  143  154  160 #>  [7246,]  143  154  160 #>  [7247,]  144  155  161 #>  [7248,]  144  155  161 #>  [7249,]  143  154  160 #>  [7250,]  144  155  161 #>  [7251,]  143  154  160 #>  [7252,]  143  154  160 #>  [7253,]  144  155  161 #>  [7254,]  143  154  160 #>  [7255,]  143  154  160 #>  [7256,]  144  155  161 #>  [7257,]  144  155  161 #>  [7258,]  143  154  160 #>  [7259,]  143  154  160 #>  [7260,]  144  155  161 #>  [7261,]  144  155  161 #>  [7262,]  143  154  160 #>  [7263,]  144  155  161 #>  [7264,]  144  155  161 #>  [7265,]  144  155  161 #>  [7266,]  143  154  160 #>  [7267,]  143  154  160 #>  [7268,]  143  154  160 #>  [7269,]  143  154  160 #>  [7270,]  144  155  161 #>  [7271,]  144  155  161 #>  [7272,]  144  155  161 #>  [7273,]  144  155  161 #>  [7274,]  143  154  160 #>  [7275,]  144  155  161 #>  [7276,]  144  155  161 #>  [7277,]  144  155  161 #>  [7278,]  144  155  161 #>  [7279,]  143  154  160 #>  [7280,]  143  154  160 #>  [7281,]  143  154  160 #>  [7282,]  143  154  160 #>  [7283,]  143  154  160 #>  [7284,]  144  155  161 #>  [7285,]  143  154  160 #>  [7286,]  144  155  161 #>  [7287,]  143  154  160 #>  [7288,]  143  154  160 #>  [7289,]  143  154  160 #>  [7290,]  143  154  160 #>  [7291,]  143  154  160 #>  [7292,]  143  154  160 #>  [7293,]  144  155  161 #>  [7294,]  144  155  161 #>  [7295,]  143  154  160 #>  [7296,]  143  154  160 #>  [7297,]  144  155  161 #>  [7298,]  144  155  161 #>  [7299,]  143  154  160 #>  [7300,]  144  155  161 #>  [7301,]  146  156  162 #>  [7302,]  146  157  163 #>  [7303,]  146  156  162 #>  [7304,]  146  157  163 #>  [7305,]  146  157  163 #>  [7306,]  146  156  162 #>  [7307,]  146  157  163 #>  [7308,]  146  157  163 #>  [7309,]  146  157  163 #>  [7310,]  146  157  163 #>  [7311,]  146  156  162 #>  [7312,]  146  157  163 #>  [7313,]  146  157  163 #>  [7314,]  146  156  162 #>  [7315,]  145  157  163 #>  [7316,]  146  156  162 #>  [7317,]  146  157  163 #>  [7318,]  146  157  163 #>  [7319,]  146  156  162 #>  [7320,]  146  157  163 #>  [7321,]  146  157  163 #>  [7322,]  146  157  163 #>  [7323,]  146  157  163 #>  [7324,]  146  157  163 #>  [7325,]  146  157  163 #>  [7326,]  146  156  162 #>  [7327,]  146  157  163 #>  [7328,]  146  156  162 #>  [7329,]  146  157  163 #>  [7330,]  146  157  163 #>  [7331,]  145  157  163 #>  [7332,]  146  157  163 #>  [7333,]  146  157  163 #>  [7334,]  145  156  162 #>  [7335,]  146  156  162 #>  [7336,]  146  157  163 #>  [7337,]  146  156  162 #>  [7338,]  146  156  162 #>  [7339,]  146  157  163 #>  [7340,]  146  157  163 #>  [7341,]  146  157  163 #>  [7342,]  145  156  162 #>  [7343,]  145  157  163 #>  [7344,]  145  157  163 #>  [7345,]  146  156  162 #>  [7346,]  146  157  163 #>  [7347,]  146  157  163 #>  [7348,]  146  157  163 #>  [7349,]  146  156  162 #>  [7350,]  146  157  163 #>  [7351,]  146  157  163 #>  [7352,]  146  156  162 #>  [7353,]  146  157  163 #>  [7354,]  146  157  163 #>  [7355,]  146  157  163 #>  [7356,]  146  156  162 #>  [7357,]  146  157  163 #>  [7358,]  146  157  163 #>  [7359,]  146  156  162 #>  [7360,]  146  157  163 #>  [7361,]  146  157  163 #>  [7362,]  146  157  163 #>  [7363,]  145  157  163 #>  [7364,]  146  156  162 #>  [7365,]  146  156  162 #>  [7366,]  146  157  163 #>  [7367,]  146  157  163 #>  [7368,]  146  156  162 #>  [7369,]  146  156  162 #>  [7370,]  146  157  163 #>  [7371,]  146  157  163 #>  [7372,]  146  156  162 #>  [7373,]  146  156  162 #>  [7374,]  146  157  163 #>  [7375,]  145  157  163 #>  [7376,]  146  157  163 #>  [7377,]  146  156  162 #>  [7378,]  145  157  163 #>  [7379,]  146  156  162 #>  [7380,]  146  157  163 #>  [7381,]  146  157  163 #>  [7382,]  146  157  163 #>  [7383,]  146  157  163 #>  [7384,]  146  157  163 #>  [7385,]  146  157  163 #>  [7386,]  146  157  163 #>  [7387,]  146  157  163 #>  [7388,]  146  157  163 #>  [7389,]  146  156  162 #>  [7390,]  146  157  163 #>  [7391,]  146  157  163 #>  [7392,]  146  157  163 #>  [7393,]  146  157  163 #>  [7394,]  146  156  162 #>  [7395,]  145  157  163 #>  [7396,]  146  156  162 #>  [7397,]  146  156  162 #>  [7398,]  146  157  163 #>  [7399,]  146  157  163 #>  [7400,]  146  156  162 #>  [7401,]  147  158  164 #>  [7402,]  147  158  164 #>  [7403,]  147  158  164 #>  [7404,]  147  159  165 #>  [7405,]  147  158  164 #>  [7406,]  147  158  164 #>  [7407,]  147  159  165 #>  [7408,]  147  158  164 #>  [7409,]  147  158  164 #>  [7410,]  147  159  165 #>  [7411,]  147  158  164 #>  [7412,]  147  158  164 #>  [7413,]  147  160  165 #>  [7414,]  147  158  164 #>  [7415,]  147  160  165 #>  [7416,]  147  160  165 #>  [7417,]  147  160  165 #>  [7418,]  147  159  165 #>  [7419,]  147  158  164 #>  [7420,]  147  158  164 #>  [7421,]  147  160  165 #>  [7422,]  147  158  164 #>  [7423,]  147  159  165 #>  [7424,]  147  158  164 #>  [7425,]  147  159  165 #>  [7426,]  147  158  164 #>  [7427,]  147  159  165 #>  [7428,]  147  159  165 #>  [7429,]  147  158  164 #>  [7430,]  147  158  164 #>  [7431,]  147  158  164 #>  [7432,]  147  158  164 #>  [7433,]  147  158  164 #>  [7434,]  147  158  164 #>  [7435,]  147  158  164 #>  [7436,]  147  158  164 #>  [7437,]  147  158  164 #>  [7438,]  147  158  164 #>  [7439,]  147  159  165 #>  [7440,]  147  158  164 #>  [7441,]  147  158  164 #>  [7442,]  147  158  164 #>  [7443,]  147  159  165 #>  [7444,]  147  158  164 #>  [7445,]  147  159  165 #>  [7446,]  147  159  165 #>  [7447,]  147  159  165 #>  [7448,]  147  158  164 #>  [7449,]  147  158  164 #>  [7450,]  147  158  164 #>  [7451,]  147  158  164 #>  [7452,]  147  158  164 #>  [7453,]  147  159  165 #>  [7454,]  147  158  164 #>  [7455,]  147  158  164 #>  [7456,]  147  159  165 #>  [7457,]  147  158  164 #>  [7458,]  147  158  164 #>  [7459,]  147  158  164 #>  [7460,]  147  158  164 #>  [7461,]  147  160  165 #>  [7462,]  147  158  164 #>  [7463,]  147  158  164 #>  [7464,]  147  159  165 #>  [7465,]  147  158  164 #>  [7466,]  147  158  164 #>  [7467,]  147  158  164 #>  [7468,]  147  158  164 #>  [7469,]  147  158  164 #>  [7470,]  147  158  164 #>  [7471,]  147  159  165 #>  [7472,]  147  159  165 #>  [7473,]  147  160  165 #>  [7474,]  147  159  165 #>  [7475,]  147  159  165 #>  [7476,]  147  160  165 #>  [7477,]  147  160  165 #>  [7478,]  147  158  164 #>  [7479,]  147  158  164 #>  [7480,]  147  158  164 #>  [7481,]  147  158  164 #>  [7482,]  147  159  165 #>  [7483,]  147  158  164 #>  [7484,]  147  159  165 #>  [7485,]  147  158  164 #>  [7486,]  147  158  164 #>  [7487,]  147  158  164 #>  [7488,]  147  159  165 #>  [7489,]  147  158  164 #>  [7490,]  147  158  164 #>  [7491,]  147  158  164 #>  [7492,]  147  158  164 #>  [7493,]  147  158  164 #>  [7494,]  147  159  165 #>  [7495,]  147  159  165 #>  [7496,]  147  158  164 #>  [7497,]  147  158  164 #>  [7498,]  147  158  164 #>  [7499,]  147  158  164 #>  [7500,]  147  159  165 #>  [7501,]  148  163  167 #>  [7502,]  148  163  167 #>  [7503,]  148  162  167 #>  [7504,]  148  162  167 #>  [7505,]  148  163  167 #>  [7506,]  149  161  166 #>  [7507,]  148  162  167 #>  [7508,]  149  161  166 #>  [7509,]  149  161  166 #>  [7510,]  148  163  167 #>  [7511,]  148  163  167 #>  [7512,]  149  161  166 #>  [7513,]  148  163  167 #>  [7514,]  148  163  167 #>  [7515,]  149  161  166 #>  [7516,]  148  163  167 #>  [7517,]  148  163  167 #>  [7518,]  148  163  167 #>  [7519,]  148  163  167 #>  [7520,]  148  163  167 #>  [7521,]  148  163  167 #>  [7522,]  148  163  167 #>  [7523,]  148  162  167 #>  [7524,]  148  163  167 #>  [7525,]  148  162  167 #>  [7526,]  149  161  166 #>  [7527,]  148  163  167 #>  [7528,]  148  163  167 #>  [7529,]  148  163  167 #>  [7530,]  148  163  167 #>  [7531,]  148  162  167 #>  [7532,]  148  162  167 #>  [7533,]  149  161  166 #>  [7534,]  148  163  167 #>  [7535,]  148  163  167 #>  [7536,]  148  163  167 #>  [7537,]  148  162  167 #>  [7538,]  148  163  167 #>  [7539,]  148  163  167 #>  [7540,]  148  162  167 #>  [7541,]  148  163  167 #>  [7542,]  148  163  167 #>  [7543,]  149  161  166 #>  [7544,]  148  163  167 #>  [7545,]  148  163  167 #>  [7546,]  149  161  166 #>  [7547,]  148  162  167 #>  [7548,]  148  163  167 #>  [7549,]  148  163  167 #>  [7550,]  148  163  167 #>  [7551,]  149  161  166 #>  [7552,]  148  162  167 #>  [7553,]  148  163  167 #>  [7554,]  148  163  167 #>  [7555,]  148  162  167 #>  [7556,]  149  161  166 #>  [7557,]  149  161  166 #>  [7558,]  148  163  167 #>  [7559,]  148  162  167 #>  [7560,]  148  162  167 #>  [7561,]  149  161  166 #>  [7562,]  148  163  167 #>  [7563,]  148  163  167 #>  [7564,]  149  161  166 #>  [7565,]  148  163  167 #>  [7566,]  149  161  166 #>  [7567,]  148  163  167 #>  [7568,]  149  161  166 #>  [7569,]  148  163  167 #>  [7570,]  148  163  167 #>  [7571,]  148  163  167 #>  [7572,]  148  162  167 #>  [7573,]  148  163  167 #>  [7574,]  148  162  167 #>  [7575,]  148  163  167 #>  [7576,]  149  161  166 #>  [7577,]  148  163  167 #>  [7578,]  148  163  167 #>  [7579,]  148  163  167 #>  [7580,]  148  162  167 #>  [7581,]  148  163  167 #>  [7582,]  148  163  167 #>  [7583,]  148  163  167 #>  [7584,]  148  163  167 #>  [7585,]  148  163  167 #>  [7586,]  148  162  167 #>  [7587,]  148  163  167 #>  [7588,]  148  163  167 #>  [7589,]  148  163  167 #>  [7590,]  148  163  167 #>  [7591,]  148  163  167 #>  [7592,]  148  162  167 #>  [7593,]  148  163  167 #>  [7594,]  149  161  166 #>  [7595,]  148  163  167 #>  [7596,]  148  162  167 #>  [7597,]  148  162  167 #>  [7598,]  148  162  167 #>  [7599,]  148  163  167 #>  [7600,]  148  163  167 #>  [7601,]  151  165  169 #>  [7602,]  151  165  168 #>  [7603,]  151  165  168 #>  [7604,]  151  165  168 #>  [7605,]  151  165  168 #>  [7606,]  151  165  168 #>  [7607,]  151  165  168 #>  [7608,]  151  165  168 #>  [7609,]  151  165  169 #>  [7610,]  151  165  168 #>  [7611,]  151  165  168 #>  [7612,]  151  165  168 #>  [7613,]  151  165  169 #>  [7614,]  151  165  168 #>  [7615,]  150  164  168 #>  [7616,]  151  165  168 #>  [7617,]  151  165  169 #>  [7618,]  151  165  169 #>  [7619,]  151  165  168 #>  [7620,]  151  165  168 #>  [7621,]  151  165  168 #>  [7622,]  151  165  168 #>  [7623,]  151  165  168 #>  [7624,]  151  165  168 #>  [7625,]  151  165  168 #>  [7626,]  151  165  168 #>  [7627,]  151  165  169 #>  [7628,]  151  165  168 #>  [7629,]  151  165  168 #>  [7630,]  151  165  168 #>  [7631,]  150  164  168 #>  [7632,]  151  165  168 #>  [7633,]  151  165  168 #>  [7634,]  150  164  168 #>  [7635,]  151  165  168 #>  [7636,]  151  165  169 #>  [7637,]  151  165  168 #>  [7638,]  151  165  168 #>  [7639,]  151  165  168 #>  [7640,]  151  165  168 #>  [7641,]  151  165  168 #>  [7642,]  150  164  169 #>  [7643,]  150  164  168 #>  [7644,]  150  164  168 #>  [7645,]  151  165  168 #>  [7646,]  151  165  168 #>  [7647,]  151  165  168 #>  [7648,]  151  165  168 #>  [7649,]  151  165  168 #>  [7650,]  151  165  168 #>  [7651,]  151  165  169 #>  [7652,]  151  165  168 #>  [7653,]  151  165  169 #>  [7654,]  151  165  168 #>  [7655,]  151  165  168 #>  [7656,]  151  165  169 #>  [7657,]  151  165  168 #>  [7658,]  151  165  168 #>  [7659,]  151  165  168 #>  [7660,]  151  165  168 #>  [7661,]  151  165  168 #>  [7662,]  151  165  168 #>  [7663,]  150  164  168 #>  [7664,]  151  165  168 #>  [7665,]  151  165  169 #>  [7666,]  151  165  169 #>  [7667,]  151  165  168 #>  [7668,]  151  165  168 #>  [7669,]  151  165  168 #>  [7670,]  151  165  168 #>  [7671,]  151  165  168 #>  [7672,]  151  165  168 #>  [7673,]  151  165  168 #>  [7674,]  151  165  168 #>  [7675,]  150  164  168 #>  [7676,]  151  165  168 #>  [7677,]  151  165  168 #>  [7678,]  151  165  168 #>  [7679,]  151  165  169 #>  [7680,]  151  165  168 #>  [7681,]  151  165  168 #>  [7682,]  151  165  169 #>  [7683,]  151  165  169 #>  [7684,]  151  165  169 #>  [7685,]  151  165  168 #>  [7686,]  151  165  168 #>  [7687,]  151  165  169 #>  [7688,]  151  165  168 #>  [7689,]  151  165  168 #>  [7690,]  151  165  168 #>  [7691,]  151  165  169 #>  [7692,]  151  165  168 #>  [7693,]  151  165  169 #>  [7694,]  151  165  169 #>  [7695,]  151  165  168 #>  [7696,]  151  165  168 #>  [7697,]  151  165  168 #>  [7698,]  151  165  168 #>  [7699,]  151  165  168 #>  [7700,]  151  165  168 #>  [7701,]  152  166  170 #>  [7702,]  152  166  170 #>  [7703,]  152  166  170 #>  [7704,]  152  166  170 #>  [7705,]  152  166  170 #>  [7706,]  153  167  171 #>  [7707,]  152  166  170 #>  [7708,]  153  167  171 #>  [7709,]  153  167  171 #>  [7710,]  152  166  170 #>  [7711,]  152  166  170 #>  [7712,]  153  167  171 #>  [7713,]  152  166  170 #>  [7714,]  152  166  170 #>  [7715,]  153  167  171 #>  [7716,]  152  166  170 #>  [7717,]  152  166  170 #>  [7718,]  152  166  170 #>  [7719,]  152  166  170 #>  [7720,]  152  166  170 #>  [7721,]  152  166  170 #>  [7722,]  152  166  170 #>  [7723,]  152  166  170 #>  [7724,]  152  166  170 #>  [7725,]  152  166  170 #>  [7726,]  153  167  171 #>  [7727,]  152  166  170 #>  [7728,]  152  166  170 #>  [7729,]  152  166  170 #>  [7730,]  152  166  170 #>  [7731,]  152  166  170 #>  [7732,]  152  166  170 #>  [7733,]  153  167  171 #>  [7734,]  152  166  170 #>  [7735,]  152  166  170 #>  [7736,]  152  166  170 #>  [7737,]  152  166  170 #>  [7738,]  152  166  170 #>  [7739,]  152  166  170 #>  [7740,]  152  166  170 #>  [7741,]  152  166  170 #>  [7742,]  152  166  170 #>  [7743,]  153  167  171 #>  [7744,]  152  166  170 #>  [7745,]  153  167  171 #>  [7746,]  153  167  171 #>  [7747,]  152  166  170 #>  [7748,]  152  166  170 #>  [7749,]  152  166  170 #>  [7750,]  152  166  170 #>  [7751,]  153  167  171 #>  [7752,]  152  166  170 #>  [7753,]  152  166  170 #>  [7754,]  152  166  170 #>  [7755,]  152  166  170 #>  [7756,]  153  167  171 #>  [7757,]  153  167  171 #>  [7758,]  152  166  170 #>  [7759,]  152  166  170 #>  [7760,]  152  166  170 #>  [7761,]  153  167  171 #>  [7762,]  152  166  170 #>  [7763,]  152  166  170 #>  [7764,]  153  167  171 #>  [7765,]  152  166  170 #>  [7766,]  153  167  171 #>  [7767,]  152  166  170 #>  [7768,]  153  167  171 #>  [7769,]  152  166  170 #>  [7770,]  152  166  170 #>  [7771,]  152  166  170 #>  [7772,]  152  166  170 #>  [7773,]  152  166  170 #>  [7774,]  152  166  170 #>  [7775,]  152  166  170 #>  [7776,]  153  167  171 #>  [7777,]  152  166  170 #>  [7778,]  152  166  170 #>  [7779,]  152  166  170 #>  [7780,]  152  166  170 #>  [7781,]  152  166  170 #>  [7782,]  152  166  170 #>  [7783,]  152  166  170 #>  [7784,]  152  166  170 #>  [7785,]  152  166  170 #>  [7786,]  152  166  170 #>  [7787,]  152  166  170 #>  [7788,]  152  166  170 #>  [7789,]  152  166  170 #>  [7790,]  152  166  170 #>  [7791,]  152  166  170 #>  [7792,]  152  166  170 #>  [7793,]  152  166  170 #>  [7794,]  153  167  171 #>  [7795,]  152  166  170 #>  [7796,]  152  166  170 #>  [7797,]  152  166  170 #>  [7798,]  152  166  170 #>  [7799,]  152  166  170 #>  [7800,]  152  166  170 #>  [7801,]  155  169  173 #>  [7802,]  155  169  173 #>  [7803,]  154  168  172 #>  [7804,]  155  169  173 #>  [7805,]  155  169  173 #>  [7806,]  155  169  173 #>  [7807,]  154  168  172 #>  [7808,]  154  168  172 #>  [7809,]  155  169  173 #>  [7810,]  155  169  173 #>  [7811,]  155  169  173 #>  [7812,]  155  169  173 #>  [7813,]  154  168  172 #>  [7814,]  155  169  173 #>  [7815,]  155  169  173 #>  [7816,]  154  168  172 #>  [7817,]  154  168  172 #>  [7818,]  155  169  173 #>  [7819,]  155  169  173 #>  [7820,]  154  168  172 #>  [7821,]  155  169  173 #>  [7822,]  154  168  172 #>  [7823,]  155  169  173 #>  [7824,]  154  168  172 #>  [7825,]  154  168  172 #>  [7826,]  155  169  173 #>  [7827,]  155  169  173 #>  [7828,]  155  169  173 #>  [7829,]  155  169  173 #>  [7830,]  155  169  173 #>  [7831,]  155  169  173 #>  [7832,]  155  169  173 #>  [7833,]  155  169  173 #>  [7834,]  155  169  173 #>  [7835,]  155  169  173 #>  [7836,]  155  169  173 #>  [7837,]  155  169  173 #>  [7838,]  155  169  173 #>  [7839,]  154  168  172 #>  [7840,]  154  168  172 #>  [7841,]  155  169  173 #>  [7842,]  155  169  173 #>  [7843,]  154  168  172 #>  [7844,]  154  168  172 #>  [7845,]  154  168  172 #>  [7846,]  154  168  172 #>  [7847,]  154  168  172 #>  [7848,]  155  169  173 #>  [7849,]  154  168  172 #>  [7850,]  154  168  172 #>  [7851,]  155  169  173 #>  [7852,]  155  169  173 #>  [7853,]  154  168  172 #>  [7854,]  154  168  172 #>  [7855,]  154  168  172 #>  [7856,]  154  168  172 #>  [7857,]  155  169  173 #>  [7858,]  155  169  173 #>  [7859,]  154  168  172 #>  [7860,]  155  169  173 #>  [7861,]  155  169  173 #>  [7862,]  155  169  173 #>  [7863,]  154  168  172 #>  [7864,]  155  169  173 #>  [7865,]  154  168  172 #>  [7866,]  154  168  172 #>  [7867,]  155  169  173 #>  [7868,]  155  169  173 #>  [7869,]  155  169  173 #>  [7870,]  154  168  172 #>  [7871,]  155  169  173 #>  [7872,]  154  168  172 #>  [7873,]  155  169  173 #>  [7874,]  155  169  173 #>  [7875,]  155  169  173 #>  [7876,]  155  169  173 #>  [7877,]  154  168  172 #>  [7878,]  154  168  172 #>  [7879,]  154  168  172 #>  [7880,]  155  169  173 #>  [7881,]  155  169  173 #>  [7882,]  155  169  173 #>  [7883,]  155  169  173 #>  [7884,]  154  168  172 #>  [7885,]  155  169  173 #>  [7886,]  154  168  172 #>  [7887,]  155  169  173 #>  [7888,]  155  169  173 #>  [7889,]  154  168  172 #>  [7890,]  154  168  172 #>  [7891,]  155  169  173 #>  [7892,]  155  169  173 #>  [7893,]  155  169  173 #>  [7894,]  154  168  172 #>  [7895,]  155  169  173 #>  [7896,]  155  169  173 #>  [7897,]  155  169  173 #>  [7898,]  154  168  172 #>  [7899,]  155  169  173 #>  [7900,]  154  168  172 #>  [7901,]  156  170  176 #>  [7902,]  156  170  176 #>  [7903,]  156  170  175 #>  [7904,]  157  171  174 #>  [7905,]  156  170  175 #>  [7906,]  156  170  175 #>  [7907,]  156  170  176 #>  [7908,]  156  170  176 #>  [7909,]  156  170  175 #>  [7910,]  157  171  174 #>  [7911,]  156  170  175 #>  [7912,]  156  170  176 #>  [7913,]  156  170  176 #>  [7914,]  156  170  175 #>  [7915,]  156  170  176 #>  [7916,]  156  170  176 #>  [7917,]  156  170  176 #>  [7918,]  157  171  174 #>  [7919,]  156  170  176 #>  [7920,]  156  170  176 #>  [7921,]  157  171  174 #>  [7922,]  156  170  176 #>  [7923,]  156  170  176 #>  [7924,]  156  170  175 #>  [7925,]  157  171  174 #>  [7926,]  156  170  176 #>  [7927,]  156  170  176 #>  [7928,]  156  170  175 #>  [7929,]  156  170  176 #>  [7930,]  156  170  176 #>  [7931,]  156  170  175 #>  [7932,]  156  170  175 #>  [7933,]  156  170  176 #>  [7934,]  156  170  175 #>  [7935,]  156  170  175 #>  [7936,]  156  170  176 #>  [7937,]  156  170  176 #>  [7938,]  156  170  176 #>  [7939,]  157  171  174 #>  [7940,]  156  170  175 #>  [7941,]  156  170  176 #>  [7942,]  156  170  175 #>  [7943,]  157  171  174 #>  [7944,]  156  170  176 #>  [7945,]  157  171  174 #>  [7946,]  156  170  176 #>  [7947,]  156  170  175 #>  [7948,]  156  170  175 #>  [7949,]  156  170  176 #>  [7950,]  156  170  176 #>  [7951,]  156  170  176 #>  [7952,]  156  170  175 #>  [7953,]  157  171  174 #>  [7954,]  156  170  175 #>  [7955,]  156  170  176 #>  [7956,]  156  170  176 #>  [7957,]  156  170  175 #>  [7958,]  156  170  176 #>  [7959,]  156  170  176 #>  [7960,]  156  170  176 #>  [7961,]  157  171  174 #>  [7962,]  156  170  175 #>  [7963,]  156  170  176 #>  [7964,]  156  170  176 #>  [7965,]  156  170  175 #>  [7966,]  156  170  176 #>  [7967,]  156  170  175 #>  [7968,]  156  170  176 #>  [7969,]  156  170  176 #>  [7970,]  156  170  175 #>  [7971,]  156  170  176 #>  [7972,]  157  171  174 #>  [7973,]  157  171  174 #>  [7974,]  157  171  174 #>  [7975,]  157  171  174 #>  [7976,]  157  171  174 #>  [7977,]  157  171  174 #>  [7978,]  156  170  176 #>  [7979,]  156  170  175 #>  [7980,]  156  170  176 #>  [7981,]  156  170  176 #>  [7982,]  156  170  175 #>  [7983,]  156  170  176 #>  [7984,]  157  171  174 #>  [7985,]  156  170  176 #>  [7986,]  156  170  175 #>  [7987,]  156  170  176 #>  [7988,]  156  170  175 #>  [7989,]  156  170  175 #>  [7990,]  156  170  176 #>  [7991,]  156  170  175 #>  [7992,]  156  170  176 #>  [7993,]  156  170  176 #>  [7994,]  157  171  174 #>  [7995,]  157  171  174 #>  [7996,]  156  170  176 #>  [7997,]  156  170  176 #>  [7998,]  156  170  175 #>  [7999,]  156  170  176 #>  [8000,]  157  171  174 #>  [8001,]  159  172  177 #>  [8002,]  159  172  177 #>  [8003,]  158  172  178 #>  [8004,]  159  172  177 #>  [8005,]  158  172  177 #>  [8006,]  159  172  177 #>  [8007,]  159  172  177 #>  [8008,]  159  172  177 #>  [8009,]  158  172  177 #>  [8010,]  158  172  177 #>  [8011,]  158  172  179 #>  [8012,]  159  172  179 #>  [8013,]  159  172  177 #>  [8014,]  158  172  179 #>  [8015,]  159  172  177 #>  [8016,]  159  172  177 #>  [8017,]  159  172  177 #>  [8018,]  159  172  177 #>  [8019,]  159  172  177 #>  [8020,]  159  172  178 #>  [8021,]  158  172  177 #>  [8022,]  159  172  178 #>  [8023,]  159  172  177 #>  [8024,]  158  172  177 #>  [8025,]  158  172  177 #>  [8026,]  159  172  179 #>  [8027,]  159  172  177 #>  [8028,]  158  172  177 #>  [8029,]  159  172  179 #>  [8030,]  159  172  177 #>  [8031,]  158  172  177 #>  [8032,]  158  172  179 #>  [8033,]  159  172  177 #>  [8034,]  158  172  177 #>  [8035,]  158  172  177 #>  [8036,]  159  172  179 #>  [8037,]  159  172  177 #>  [8038,]  159  172  177 #>  [8039,]  158  172  177 #>  [8040,]  158  172  178 #>  [8041,]  159  172  179 #>  [8042,]  159  172  179 #>  [8043,]  159  172  177 #>  [8044,]  159  172  177 #>  [8045,]  159  172  177 #>  [8046,]  159  172  177 #>  [8047,]  158  172  177 #>  [8048,]  158  172  179 #>  [8049,]  159  172  177 #>  [8050,]  159  172  177 #>  [8051,]  159  172  178 #>  [8052,]  158  172  177 #>  [8053,]  159  172  177 #>  [8054,]  158  172  178 #>  [8055,]  159  172  177 #>  [8056,]  159  172  177 #>  [8057,]  159  172  177 #>  [8058,]  159  172  177 #>  [8059,]  159  172  177 #>  [8060,]  159  172  179 #>  [8061,]  159  172  177 #>  [8062,]  158  172  179 #>  [8063,]  159  172  177 #>  [8064,]  159  172  177 #>  [8065,]  158  172  177 #>  [8066,]  159  172  178 #>  [8067,]  159  172  177 #>  [8068,]  159  172  179 #>  [8069,]  159  172  179 #>  [8070,]  158  172  177 #>  [8071,]  159  172  177 #>  [8072,]  158  172  177 #>  [8073,]  159  172  177 #>  [8074,]  158  172  177 #>  [8075,]  159  172  177 #>  [8076,]  158  172  177 #>  [8077,]  159  172  177 #>  [8078,]  159  172  177 #>  [8079,]  159  172  177 #>  [8080,]  159  172  179 #>  [8081,]  159  172  179 #>  [8082,]  158  172  177 #>  [8083,]  159  172  178 #>  [8084,]  159  172  177 #>  [8085,]  159  172  177 #>  [8086,]  159  172  177 #>  [8087,]  159  172  177 #>  [8088,]  159  172  177 #>  [8089,]  159  172  178 #>  [8090,]  159  172  177 #>  [8091,]  158  172  179 #>  [8092,]  159  172  177 #>  [8093,]  159  172  177 #>  [8094,]  159  172  177 #>  [8095,]  159  172  177 #>  [8096,]  159  172  177 #>  [8097,]  159  172  177 #>  [8098,]  158  172  177 #>  [8099,]  159  172  177 #>  [8100,]  159  172  177 #>  [8101,]  160  173  180 #>  [8102,]  160  173  180 #>  [8103,]  160  173  180 #>  [8104,]  161  174  181 #>  [8105,]  160  173  180 #>  [8106,]  160  173  180 #>  [8107,]  161  174  181 #>  [8108,]  160  173  180 #>  [8109,]  160  173  180 #>  [8110,]  161  174  181 #>  [8111,]  160  173  180 #>  [8112,]  160  173  180 #>  [8113,]  160  173  180 #>  [8114,]  160  173  180 #>  [8115,]  161  174  181 #>  [8116,]  161  174  181 #>  [8117,]  160  173  180 #>  [8118,]  161  174  181 #>  [8119,]  160  173  180 #>  [8120,]  160  173  180 #>  [8121,]  161  174  181 #>  [8122,]  160  173  180 #>  [8123,]  161  174  181 #>  [8124,]  160  173  180 #>  [8125,]  161  174  181 #>  [8126,]  160  173  180 #>  [8127,]  161  174  181 #>  [8128,]  161  174  181 #>  [8129,]  160  173  180 #>  [8130,]  160  173  180 #>  [8131,]  160  173  180 #>  [8132,]  160  173  180 #>  [8133,]  160  173  180 #>  [8134,]  160  173  180 #>  [8135,]  160  173  180 #>  [8136,]  160  173  180 #>  [8137,]  160  173  180 #>  [8138,]  160  173  180 #>  [8139,]  161  174  181 #>  [8140,]  160  173  180 #>  [8141,]  160  173  180 #>  [8142,]  160  173  180 #>  [8143,]  161  174  181 #>  [8144,]  160  173  180 #>  [8145,]  161  174  181 #>  [8146,]  160  173  180 #>  [8147,]  161  174  181 #>  [8148,]  160  173  180 #>  [8149,]  160  173  180 #>  [8150,]  160  173  180 #>  [8151,]  160  173  180 #>  [8152,]  160  173  180 #>  [8153,]  161  174  181 #>  [8154,]  160  173  180 #>  [8155,]  160  173  180 #>  [8156,]  160  173  180 #>  [8157,]  160  173  180 #>  [8158,]  160  173  180 #>  [8159,]  160  173  180 #>  [8160,]  160  173  180 #>  [8161,]  161  174  181 #>  [8162,]  160  173  180 #>  [8163,]  160  173  180 #>  [8164,]  160  173  180 #>  [8165,]  160  173  180 #>  [8166,]  160  173  180 #>  [8167,]  160  173  180 #>  [8168,]  160  173  180 #>  [8169,]  160  173  180 #>  [8170,]  160  173  180 #>  [8171,]  161  174  181 #>  [8172,]  161  174  181 #>  [8173,]  161  174  181 #>  [8174,]  161  174  181 #>  [8175,]  161  174  181 #>  [8176,]  161  174  181 #>  [8177,]  161  174  181 #>  [8178,]  160  173  180 #>  [8179,]  160  173  180 #>  [8180,]  160  173  180 #>  [8181,]  160  173  180 #>  [8182,]  160  173  180 #>  [8183,]  160  173  180 #>  [8184,]  161  174  181 #>  [8185,]  160  173  180 #>  [8186,]  160  173  180 #>  [8187,]  160  173  180 #>  [8188,]  161  174  181 #>  [8189,]  160  173  180 #>  [8190,]  160  173  180 #>  [8191,]  160  173  180 #>  [8192,]  160  173  180 #>  [8193,]  160  173  180 #>  [8194,]  161  174  181 #>  [8195,]  161  174  181 #>  [8196,]  160  173  180 #>  [8197,]  160  173  180 #>  [8198,]  160  173  180 #>  [8199,]  160  173  180 #>  [8200,]  161  174  181 #>  [8201,]  163  176  182 #>  [8202,]  163  176  182 #>  [8203,]  162  175  183 #>  [8204,]  163  176  182 #>  [8205,]  163  176  182 #>  [8206,]  163  176  182 #>  [8207,]  162  175  183 #>  [8208,]  163  176  182 #>  [8209,]  163  176  182 #>  [8210,]  163  176  182 #>  [8211,]  163  176  182 #>  [8212,]  163  176  182 #>  [8213,]  163  176  182 #>  [8214,]  163  176  182 #>  [8215,]  163  176  182 #>  [8216,]  163  176  182 #>  [8217,]  163  176  182 #>  [8218,]  163  176  182 #>  [8219,]  163  176  182 #>  [8220,]  162  175  183 #>  [8221,]  163  176  182 #>  [8222,]  163  176  182 #>  [8223,]  163  176  182 #>  [8224,]  163  176  182 #>  [8225,]  162  175  183 #>  [8226,]  163  176  182 #>  [8227,]  163  176  182 #>  [8228,]  163  176  182 #>  [8229,]  163  176  182 #>  [8230,]  163  176  182 #>  [8231,]  163  176  182 #>  [8232,]  163  176  182 #>  [8233,]  163  176  182 #>  [8234,]  163  176  182 #>  [8235,]  163  176  182 #>  [8236,]  163  176  182 #>  [8237,]  163  176  182 #>  [8238,]  163  176  182 #>  [8239,]  162  175  183 #>  [8240,]  163  176  182 #>  [8241,]  163  176  182 #>  [8242,]  163  176  182 #>  [8243,]  163  176  182 #>  [8244,]  163  176  182 #>  [8245,]  163  176  182 #>  [8246,]  163  176  182 #>  [8247,]  163  176  182 #>  [8248,]  163  176  182 #>  [8249,]  162  175  183 #>  [8250,]  163  176  182 #>  [8251,]  163  176  182 #>  [8252,]  163  176  182 #>  [8253,]  162  175  183 #>  [8254,]  163  176  182 #>  [8255,]  162  175  183 #>  [8256,]  162  175  183 #>  [8257,]  163  176  182 #>  [8258,]  163  176  182 #>  [8259,]  163  176  182 #>  [8260,]  163  176  182 #>  [8261,]  163  176  182 #>  [8262,]  163  176  182 #>  [8263,]  163  176  182 #>  [8264,]  163  176  182 #>  [8265,]  162  175  183 #>  [8266,]  162  175  183 #>  [8267,]  163  176  182 #>  [8268,]  163  176  182 #>  [8269,]  163  176  182 #>  [8270,]  163  176  182 #>  [8271,]  163  176  182 #>  [8272,]  163  176  182 #>  [8273,]  163  176  182 #>  [8274,]  163  176  182 #>  [8275,]  163  176  182 #>  [8276,]  163  176  182 #>  [8277,]  163  176  182 #>  [8278,]  163  176  182 #>  [8279,]  163  176  182 #>  [8280,]  163  176  182 #>  [8281,]  163  176  182 #>  [8282,]  163  176  182 #>  [8283,]  163  176  182 #>  [8284,]  163  176  182 #>  [8285,]  163  176  182 #>  [8286,]  163  176  182 #>  [8287,]  163  176  182 #>  [8288,]  163  176  182 #>  [8289,]  163  176  182 #>  [8290,]  162  175  183 #>  [8291,]  163  176  182 #>  [8292,]  163  176  182 #>  [8293,]  163  176  182 #>  [8294,]  163  176  182 #>  [8295,]  163  176  182 #>  [8296,]  163  176  182 #>  [8297,]  163  176  182 #>  [8298,]  163  176  182 #>  [8299,]  163  176  182 #>  [8300,]  162  175  183 #>  [8301,]  165  179  185 #>  [8302,]  165  179  185 #>  [8303,]  165  178  185 #>  [8304,]  165  178  186 #>  [8305,]  165  178  185 #>  [8306,]  164  177  184 #>  [8307,]  164  177  184 #>  [8308,]  165  179  185 #>  [8309,]  165  178  186 #>  [8310,]  165  178  185 #>  [8311,]  165  178  187 #>  [8312,]  165  179  186 #>  [8313,]  165  179  185 #>  [8314,]  165  178  187 #>  [8315,]  165  179  187 #>  [8316,]  165  179  185 #>  [8317,]  165  179  185 #>  [8318,]  165  179  187 #>  [8319,]  165  179  186 #>  [8320,]  164  177  184 #>  [8321,]  164  177  184 #>  [8322,]  165  179  185 #>  [8323,]  165  179  185 #>  [8324,]  165  178  185 #>  [8325,]  164  177  184 #>  [8326,]  165  179  187 #>  [8327,]  165  179  187 #>  [8328,]  165  178  185 #>  [8329,]  165  179  185 #>  [8330,]  165  179  186 #>  [8331,]  165  178  187 #>  [8332,]  165  178  185 #>  [8333,]  165  179  186 #>  [8334,]  165  178  185 #>  [8335,]  164  177  184 #>  [8336,]  165  179  186 #>  [8337,]  164  177  184 #>  [8338,]  165  179  186 #>  [8339,]  165  178  185 #>  [8340,]  165  178  185 #>  [8341,]  165  179  186 #>  [8342,]  164  177  184 #>  [8343,]  165  179  185 #>  [8344,]  164  177  184 #>  [8345,]  165  179  185 #>  [8346,]  165  179  185 #>  [8347,]  165  178  185 #>  [8348,]  165  178  186 #>  [8349,]  165  179  185 #>  [8350,]  165  179  185 #>  [8351,]  165  179  185 #>  [8352,]  165  178  185 #>  [8353,]  164  177  184 #>  [8354,]  165  178  185 #>  [8355,]  165  179  185 #>  [8356,]  164  177  184 #>  [8357,]  164  177  184 #>  [8358,]  165  179  187 #>  [8359,]  165  179  185 #>  [8360,]  165  179  186 #>  [8361,]  165  179  187 #>  [8362,]  165  178  186 #>  [8363,]  165  179  185 #>  [8364,]  165  179  185 #>  [8365,]  164  177  184 #>  [8366,]  165  179  185 #>  [8367,]  165  179  185 #>  [8368,]  165  179  186 #>  [8369,]  165  179  186 #>  [8370,]  165  178  185 #>  [8371,]  165  179  185 #>  [8372,]  165  178  185 #>  [8373,]  164  177  184 #>  [8374,]  164  177  184 #>  [8375,]  165  179  187 #>  [8376,]  165  178  185 #>  [8377,]  165  179  185 #>  [8378,]  165  179  185 #>  [8379,]  165  178  185 #>  [8380,]  164  177  184 #>  [8381,]  165  179  185 #>  [8382,]  164  177  184 #>  [8383,]  165  179  185 #>  [8384,]  164  177  184 #>  [8385,]  164  177  184 #>  [8386,]  164  177  184 #>  [8387,]  165  179  185 #>  [8388,]  165  179  185 #>  [8389,]  164  177  184 #>  [8390,]  165  179  185 #>  [8391,]  165  178  185 #>  [8392,]  165  179  186 #>  [8393,]  165  179  186 #>  [8394,]  164  177  184 #>  [8395,]  165  179  185 #>  [8396,]  165  179  186 #>  [8397,]  165  179  186 #>  [8398,]  165  178  185 #>  [8399,]  164  177  184 #>  [8400,]  165  179  185 #>  [8401,]  167  181  189 #>  [8402,]  166  180  188 #>  [8403,]  166  180  188 #>  [8404,]  166  180  188 #>  [8405,]  167  181  189 #>  [8406,]  166  180  188 #>  [8407,]  166  180  188 #>  [8408,]  166  180  188 #>  [8409,]  166  180  188 #>  [8410,]  167  181  189 #>  [8411,]  167  181  189 #>  [8412,]  167  181  189 #>  [8413,]  166  180  188 #>  [8414,]  167  181  189 #>  [8415,]  167  181  189 #>  [8416,]  166  180  188 #>  [8417,]  167  181  189 #>  [8418,]  167  181  189 #>  [8419,]  167  181  189 #>  [8420,]  166  180  188 #>  [8421,]  166  180  188 #>  [8422,]  167  181  189 #>  [8423,]  166  180  188 #>  [8424,]  166  180  188 #>  [8425,]  166  180  188 #>  [8426,]  167  181  189 #>  [8427,]  167  181  189 #>  [8428,]  166  180  188 #>  [8429,]  166  180  188 #>  [8430,]  166  180  188 #>  [8431,]  167  181  189 #>  [8432,]  167  181  189 #>  [8433,]  166  180  188 #>  [8434,]  166  180  188 #>  [8435,]  166  180  188 #>  [8436,]  166  180  188 #>  [8437,]  166  180  188 #>  [8438,]  167  181  189 #>  [8439,]  167  181  189 #>  [8440,]  166  180  188 #>  [8441,]  166  180  188 #>  [8442,]  166  180  188 #>  [8443,]  167  181  189 #>  [8444,]  166  180  188 #>  [8445,]  166  180  188 #>  [8446,]  166  180  188 #>  [8447,]  167  181  189 #>  [8448,]  166  180  188 #>  [8449,]  166  180  188 #>  [8450,]  166  180  188 #>  [8451,]  166  180  188 #>  [8452,]  167  181  189 #>  [8453,]  166  180  188 #>  [8454,]  166  180  188 #>  [8455,]  166  180  188 #>  [8456,]  166  180  188 #>  [8457,]  166  180  188 #>  [8458,]  167  181  189 #>  [8459,]  167  181  189 #>  [8460,]  166  180  188 #>  [8461,]  167  181  189 #>  [8462,]  166  180  188 #>  [8463,]  166  180  188 #>  [8464,]  166  180  188 #>  [8465,]  166  180  188 #>  [8466,]  167  181  189 #>  [8467,]  166  180  188 #>  [8468,]  167  181  189 #>  [8469,]  166  180  188 #>  [8470,]  167  181  189 #>  [8471,]  167  181  189 #>  [8472,]  166  180  188 #>  [8473,]  166  180  188 #>  [8474,]  166  180  188 #>  [8475,]  167  181  189 #>  [8476,]  166  180  188 #>  [8477,]  167  181  189 #>  [8478,]  166  180  188 #>  [8479,]  167  181  189 #>  [8480,]  166  180  188 #>  [8481,]  166  180  188 #>  [8482,]  166  180  188 #>  [8483,]  167  181  189 #>  [8484,]  166  180  188 #>  [8485,]  166  180  188 #>  [8486,]  166  180  188 #>  [8487,]  167  181  189 #>  [8488,]  166  180  188 #>  [8489,]  166  180  188 #>  [8490,]  167  181  189 #>  [8491,]  167  181  189 #>  [8492,]  167  181  189 #>  [8493,]  166  180  188 #>  [8494,]  166  180  188 #>  [8495,]  167  181  189 #>  [8496,]  167  181  189 #>  [8497,]  166  180  188 #>  [8498,]  166  180  188 #>  [8499,]  166  180  188 #>  [8500,]  167  181  189 #>  [8501,]  168  184  191 #>  [8502,]  169  182  190 #>  [8503,]  168  184  191 #>  [8504,]  168  184  191 #>  [8505,]  168  184  191 #>  [8506,]  168  183  191 #>  [8507,]  168  184  191 #>  [8508,]  169  182  190 #>  [8509,]  168  184  191 #>  [8510,]  168  184  191 #>  [8511,]  168  183  191 #>  [8512,]  168  183  191 #>  [8513,]  169  182  190 #>  [8514,]  168  184  191 #>  [8515,]  169  182  190 #>  [8516,]  169  182  190 #>  [8517,]  168  183  191 #>  [8518,]  168  184  191 #>  [8519,]  169  182  190 #>  [8520,]  169  182  190 #>  [8521,]  168  183  191 #>  [8522,]  169  182  190 #>  [8523,]  168  183  191 #>  [8524,]  168  184  191 #>  [8525,]  168  184  191 #>  [8526,]  169  182  190 #>  [8527,]  169  182  190 #>  [8528,]  168  184  191 #>  [8529,]  169  182  190 #>  [8530,]  169  182  190 #>  [8531,]  168  183  191 #>  [8532,]  168  183  191 #>  [8533,]  169  182  190 #>  [8534,]  168  183  191 #>  [8535,]  168  183  191 #>  [8536,]  169  182  190 #>  [8537,]  169  182  190 #>  [8538,]  169  182  190 #>  [8539,]  168  184  191 #>  [8540,]  168  184  191 #>  [8541,]  169  182  190 #>  [8542,]  168  183  191 #>  [8543,]  169  182  190 #>  [8544,]  169  182  190 #>  [8545,]  168  184  191 #>  [8546,]  169  182  190 #>  [8547,]  168  183  191 #>  [8548,]  168  183  191 #>  [8549,]  168  184  191 #>  [8550,]  169  182  190 #>  [8551,]  169  182  190 #>  [8552,]  168  184  191 #>  [8553,]  169  182  190 #>  [8554,]  168  184  191 #>  [8555,]  169  182  190 #>  [8556,]  169  182  190 #>  [8557,]  168  184  191 #>  [8558,]  169  182  190 #>  [8559,]  169  182  190 #>  [8560,]  169  182  190 #>  [8561,]  169  182  190 #>  [8562,]  168  183  191 #>  [8563,]  169  182  190 #>  [8564,]  169  182  190 #>  [8565,]  168  183  191 #>  [8566,]  169  182  190 #>  [8567,]  168  184  191 #>  [8568,]  169  182  190 #>  [8569,]  169  182  190 #>  [8570,]  168  183  191 #>  [8571,]  169  182  190 #>  [8572,]  168  184  191 #>  [8573,]  168  184  191 #>  [8574,]  168  184  191 #>  [8575,]  169  182  190 #>  [8576,]  168  184  191 #>  [8577,]  169  182  190 #>  [8578,]  169  182  190 #>  [8579,]  168  183  191 #>  [8580,]  169  182  190 #>  [8581,]  169  182  190 #>  [8582,]  168  183  191 #>  [8583,]  169  182  190 #>  [8584,]  169  182  190 #>  [8585,]  169  182  190 #>  [8586,]  168  184  191 #>  [8587,]  169  182  190 #>  [8588,]  168  184  191 #>  [8589,]  168  183  191 #>  [8590,]  169  182  190 #>  [8591,]  168  184  191 #>  [8592,]  168  183  191 #>  [8593,]  169  182  190 #>  [8594,]  168  183  191 #>  [8595,]  169  182  190 #>  [8596,]  169  182  190 #>  [8597,]  169  182  190 #>  [8598,]  168  184  191 #>  [8599,]  168  184  191 #>  [8600,]  169  182  190 #>  [8601,]  170  185  193 #>  [8602,]  170  185  193 #>  [8603,]  170  185  193 #>  [8604,]  170  185  193 #>  [8605,]  170  185  193 #>  [8606,]  170  185  193 #>  [8607,]  170  185  193 #>  [8608,]  170  185  193 #>  [8609,]  170  185  193 #>  [8610,]  170  185  193 #>  [8611,]  170  185  193 #>  [8612,]  170  185  193 #>  [8613,]  170  185  193 #>  [8614,]  170  185  193 #>  [8615,]  170  185  193 #>  [8616,]  170  185  193 #>  [8617,]  170  185  193 #>  [8618,]  171  186  192 #>  [8619,]  170  185  193 #>  [8620,]  170  185  193 #>  [8621,]  170  185  193 #>  [8622,]  170  185  193 #>  [8623,]  170  185  193 #>  [8624,]  170  185  193 #>  [8625,]  170  185  193 #>  [8626,]  170  185  193 #>  [8627,]  170  185  193 #>  [8628,]  170  185  193 #>  [8629,]  170  185  193 #>  [8630,]  170  185  193 #>  [8631,]  170  185  193 #>  [8632,]  170  185  193 #>  [8633,]  170  185  193 #>  [8634,]  170  185  193 #>  [8635,]  170  185  193 #>  [8636,]  170  185  193 #>  [8637,]  170  185  193 #>  [8638,]  170  185  193 #>  [8639,]  170  185  193 #>  [8640,]  170  185  193 #>  [8641,]  170  185  193 #>  [8642,]  170  185  193 #>  [8643,]  170  185  193 #>  [8644,]  170  185  193 #>  [8645,]  170  185  193 #>  [8646,]  170  185  193 #>  [8647,]  170  185  193 #>  [8648,]  170  185  193 #>  [8649,]  170  185  193 #>  [8650,]  170  185  193 #>  [8651,]  171  186  192 #>  [8652,]  170  185  193 #>  [8653,]  171  186  192 #>  [8654,]  170  185  193 #>  [8655,]  170  185  193 #>  [8656,]  170  185  193 #>  [8657,]  170  185  193 #>  [8658,]  170  185  193 #>  [8659,]  170  185  193 #>  [8660,]  170  185  193 #>  [8661,]  170  185  193 #>  [8662,]  170  185  193 #>  [8663,]  170  185  193 #>  [8664,]  170  185  193 #>  [8665,]  170  185  193 #>  [8666,]  170  185  193 #>  [8667,]  170  185  193 #>  [8668,]  170  185  193 #>  [8669,]  170  185  193 #>  [8670,]  170  185  193 #>  [8671,]  170  185  193 #>  [8672,]  170  185  193 #>  [8673,]  170  185  193 #>  [8674,]  170  185  193 #>  [8675,]  170  185  193 #>  [8676,]  170  185  193 #>  [8677,]  170  185  193 #>  [8678,]  170  185  193 #>  [8679,]  170  185  193 #>  [8680,]  170  185  193 #>  [8681,]  170  185  193 #>  [8682,]  170  185  193 #>  [8683,]  170  185  193 #>  [8684,]  171  186  192 #>  [8685,]  170  185  193 #>  [8686,]  170  185  193 #>  [8687,]  170  185  193 #>  [8688,]  170  185  193 #>  [8689,]  170  185  193 #>  [8690,]  170  185  193 #>  [8691,]  170  185  193 #>  [8692,]  170  185  193 #>  [8693,]  170  185  193 #>  [8694,]  171  186  192 #>  [8695,]  170  185  193 #>  [8696,]  170  185  193 #>  [8697,]  170  185  193 #>  [8698,]  170  185  193 #>  [8699,]  170  185  193 #>  [8700,]  170  185  193 #>  [8701,]  173  188  194 #>  [8702,]  172  187  194 #>  [8703,]  172  187  196 #>  [8704,]  172  187  195 #>  [8705,]  173  188  196 #>  [8706,]  172  187  194 #>  [8707,]  172  187  196 #>  [8708,]  172  187  195 #>  [8709,]  172  187  195 #>  [8710,]  172  187  195 #>  [8711,]  172  187  196 #>  [8712,]  172  187  196 #>  [8713,]  172  187  194 #>  [8714,]  173  188  194 #>  [8715,]  173  188  194 #>  [8716,]  172  187  194 #>  [8717,]  172  187  194 #>  [8718,]  173  188  196 #>  [8719,]  172  187  196 #>  [8720,]  172  187  196 #>  [8721,]  172  187  194 #>  [8722,]  173  188  194 #>  [8723,]  172  187  196 #>  [8724,]  172  187  196 #>  [8725,]  172  187  196 #>  [8726,]  173  188  194 #>  [8727,]  173  188  194 #>  [8728,]  172  187  196 #>  [8729,]  172  187  194 #>  [8730,]  172  187  196 #>  [8731,]  173  188  196 #>  [8732,]  173  188  196 #>  [8733,]  172  187  194 #>  [8734,]  172  187  196 #>  [8735,]  172  187  194 #>  [8736,]  172  187  196 #>  [8737,]  172  187  194 #>  [8738,]  172  187  196 #>  [8739,]  172  187  196 #>  [8740,]  172  187  196 #>  [8741,]  172  187  194 #>  [8742,]  172  187  196 #>  [8743,]  173  188  196 #>  [8744,]  172  187  194 #>  [8745,]  172  187  196 #>  [8746,]  172  187  196 #>  [8747,]  173  188  196 #>  [8748,]  172  187  196 #>  [8749,]  172  187  196 #>  [8750,]  172  187  194 #>  [8751,]  172  187  195 #>  [8752,]  172  187  194 #>  [8753,]  172  187  196 #>  [8754,]  172  187  196 #>  [8755,]  172  187  196 #>  [8756,]  172  187  196 #>  [8757,]  172  187  196 #>  [8758,]  173  188  194 #>  [8759,]  173  188  194 #>  [8760,]  172  187  196 #>  [8761,]  173  188  194 #>  [8762,]  172  187  196 #>  [8763,]  172  187  196 #>  [8764,]  172  187  196 #>  [8765,]  172  187  196 #>  [8766,]  173  188  196 #>  [8767,]  172  187  196 #>  [8768,]  172  187  194 #>  [8769,]  172  187  196 #>  [8770,]  173  188  194 #>  [8771,]  173  188  194 #>  [8772,]  172  187  196 #>  [8773,]  172  187  194 #>  [8774,]  172  187  196 #>  [8775,]  173  188  196 #>  [8776,]  172  187  194 #>  [8777,]  173  188  194 #>  [8778,]  172  187  196 #>  [8779,]  173  188  194 #>  [8780,]  172  187  196 #>  [8781,]  172  187  194 #>  [8782,]  172  187  196 #>  [8783,]  172  187  194 #>  [8784,]  172  187  196 #>  [8785,]  172  187  195 #>  [8786,]  172  187  194 #>  [8787,]  173  188  196 #>  [8788,]  172  187  196 #>  [8789,]  172  187  196 #>  [8790,]  172  187  194 #>  [8791,]  173  188  195 #>  [8792,]  172  187  196 #>  [8793,]  172  187  194 #>  [8794,]  172  187  194 #>  [8795,]  173  188  195 #>  [8796,]  172  187  194 #>  [8797,]  172  187  196 #>  [8798,]  172  187  196 #>  [8799,]  172  187  194 #>  [8800,]  173  188  194 #>  [8801,]  174  189  198 #>  [8802,]  174  189  197 #>  [8803,]  174  189  197 #>  [8804,]  174  189  198 #>  [8805,]  174  189  197 #>  [8806,]  174  189  197 #>  [8807,]  174  189  198 #>  [8808,]  174  189  197 #>  [8809,]  174  189  198 #>  [8810,]  174  189  198 #>  [8811,]  174  189  197 #>  [8812,]  174  189  197 #>  [8813,]  174  189  198 #>  [8814,]  174  189  198 #>  [8815,]  174  189  197 #>  [8816,]  174  189  198 #>  [8817,]  174  189  197 #>  [8818,]  174  189  197 #>  [8819,]  174  189  197 #>  [8820,]  174  189  198 #>  [8821,]  174  189  197 #>  [8822,]  174  189  198 #>  [8823,]  174  189  197 #>  [8824,]  174  189  198 #>  [8825,]  174  189  198 #>  [8826,]  174  189  197 #>  [8827,]  174  189  197 #>  [8828,]  174  189  198 #>  [8829,]  174  189  197 #>  [8830,]  174  189  197 #>  [8831,]  174  189  197 #>  [8832,]  174  189  197 #>  [8833,]  174  189  197 #>  [8834,]  174  189  197 #>  [8835,]  174  189  197 #>  [8836,]  174  189  198 #>  [8837,]  174  189  197 #>  [8838,]  174  189  197 #>  [8839,]  174  189  198 #>  [8840,]  174  189  197 #>  [8841,]  174  189  197 #>  [8842,]  174  189  197 #>  [8843,]  174  189  197 #>  [8844,]  174  189  197 #>  [8845,]  174  189  198 #>  [8846,]  174  189  197 #>  [8847,]  174  189  197 #>  [8848,]  174  189  197 #>  [8849,]  174  189  198 #>  [8850,]  174  189  198 #>  [8851,]  174  189  197 #>  [8852,]  174  189  198 #>  [8853,]  174  189  198 #>  [8854,]  174  189  198 #>  [8855,]  174  189  198 #>  [8856,]  174  189  197 #>  [8857,]  174  189  198 #>  [8858,]  174  189  198 #>  [8859,]  174  189  198 #>  [8860,]  174  189  197 #>  [8861,]  174  189  197 #>  [8862,]  174  189  197 #>  [8863,]  174  189  197 #>  [8864,]  174  189  197 #>  [8865,]  174  189  197 #>  [8866,]  174  189  197 #>  [8867,]  174  189  198 #>  [8868,]  174  189  197 #>  [8869,]  174  189  197 #>  [8870,]  174  189  197 #>  [8871,]  174  189  197 #>  [8872,]  174  189  198 #>  [8873,]  174  189  198 #>  [8874,]  174  189  197 #>  [8875,]  174  189  197 #>  [8876,]  174  189  198 #>  [8877,]  174  189  197 #>  [8878,]  174  189  197 #>  [8879,]  174  189  197 #>  [8880,]  174  189  197 #>  [8881,]  174  189  197 #>  [8882,]  174  189  197 #>  [8883,]  174  189  197 #>  [8884,]  174  189  197 #>  [8885,]  174  189  198 #>  [8886,]  174  189  198 #>  [8887,]  174  189  198 #>  [8888,]  174  189  198 #>  [8889,]  174  189  197 #>  [8890,]  174  189  198 #>  [8891,]  174  189  198 #>  [8892,]  174  189  197 #>  [8893,]  174  189  197 #>  [8894,]  174  189  197 #>  [8895,]  174  189  197 #>  [8896,]  174  189  197 #>  [8897,]  174  189  197 #>  [8898,]  174  189  197 #>  [8899,]  174  189  197 #>  [8900,]  174  189  197 #>  [8901,]  176  191  200 #>  [8902,]  176  191  200 #>  [8903,]  175  190  199 #>  [8904,]  176  191  200 #>  [8905,]  176  191  200 #>  [8906,]  176  191  200 #>  [8907,]  175  190  199 #>  [8908,]  176  191  200 #>  [8909,]  176  191  200 #>  [8910,]  176  191  200 #>  [8911,]  176  191  200 #>  [8912,]  176  191  200 #>  [8913,]  175  190  199 #>  [8914,]  176  191  200 #>  [8915,]  176  191  200 #>  [8916,]  175  190  199 #>  [8917,]  176  191  200 #>  [8918,]  176  191  200 #>  [8919,]  176  191  200 #>  [8920,]  176  191  200 #>  [8921,]  175  190  199 #>  [8922,]  176  191  200 #>  [8923,]  175  190  199 #>  [8924,]  176  191  200 #>  [8925,]  176  191  200 #>  [8926,]  176  191  200 #>  [8927,]  176  191  200 #>  [8928,]  176  191  200 #>  [8929,]  176  191  200 #>  [8930,]  175  190  199 #>  [8931,]  175  190  199 #>  [8932,]  176  191  200 #>  [8933,]  176  191  200 #>  [8934,]  176  191  200 #>  [8935,]  176  191  200 #>  [8936,]  175  190  199 #>  [8937,]  176  191  200 #>  [8938,]  176  191  200 #>  [8939,]  175  190  199 #>  [8940,]  175  190  199 #>  [8941,]  176  191  200 #>  [8942,]  176  191  200 #>  [8943,]  176  191  200 #>  [8944,]  176  191  200 #>  [8945,]  176  191  200 #>  [8946,]  176  191  200 #>  [8947,]  175  190  199 #>  [8948,]  176  191  200 #>  [8949,]  175  190  199 #>  [8950,]  176  191  200 #>  [8951,]  176  191  200 #>  [8952,]  176  191  200 #>  [8953,]  176  191  200 #>  [8954,]  175  190  199 #>  [8955,]  176  191  200 #>  [8956,]  176  191  200 #>  [8957,]  176  191  200 #>  [8958,]  176  191  200 #>  [8959,]  176  191  200 #>  [8960,]  176  191  200 #>  [8961,]  176  191  200 #>  [8962,]  175  190  199 #>  [8963,]  176  191  200 #>  [8964,]  176  191  200 #>  [8965,]  176  191  200 #>  [8966,]  176  191  200 #>  [8967,]  176  191  200 #>  [8968,]  176  191  200 #>  [8969,]  176  191  200 #>  [8970,]  175  190  199 #>  [8971,]  176  191  200 #>  [8972,]  176  191  200 #>  [8973,]  176  191  200 #>  [8974,]  176  191  200 #>  [8975,]  176  191  200 #>  [8976,]  176  191  200 #>  [8977,]  175  190  199 #>  [8978,]  176  191  200 #>  [8979,]  175  190  199 #>  [8980,]  175  190  199 #>  [8981,]  176  191  200 #>  [8982,]  176  191  200 #>  [8983,]  175  190  199 #>  [8984,]  176  191  200 #>  [8985,]  176  191  200 #>  [8986,]  176  191  200 #>  [8987,]  176  191  200 #>  [8988,]  176  191  200 #>  [8989,]  176  191  200 #>  [8990,]  176  191  200 #>  [8991,]  176  191  200 #>  [8992,]  176  191  200 #>  [8993,]  176  191  200 #>  [8994,]  176  191  200 #>  [8995,]  175  190  199 #>  [8996,]  176  191  200 #>  [8997,]  176  191  200 #>  [8998,]  175  190  199 #>  [8999,]  176  191  200 #>  [9000,]  176  191  200 #>  [9001,]  178  192  201 #>  [9002,]  178  192  201 #>  [9003,]  177  194  202 #>  [9004,]  177  193  202 #>  [9005,]  177  194  202 #>  [9006,]  178  192  201 #>  [9007,]  178  192  201 #>  [9008,]  177  193  202 #>  [9009,]  177  193  202 #>  [9010,]  177  193  202 #>  [9011,]  178  192  201 #>  [9012,]  177  194  202 #>  [9013,]  178  192  201 #>  [9014,]  178  192  201 #>  [9015,]  178  192  201 #>  [9016,]  178  192  201 #>  [9017,]  178  192  201 #>  [9018,]  177  193  202 #>  [9019,]  178  192  201 #>  [9020,]  177  193  202 #>  [9021,]  178  192  201 #>  [9022,]  178  192  201 #>  [9023,]  177  194  202 #>  [9024,]  177  194  202 #>  [9025,]  177  194  202 #>  [9026,]  178  192  201 #>  [9027,]  178  192  201 #>  [9028,]  177  194  202 #>  [9029,]  178  192  201 #>  [9030,]  177  193  202 #>  [9031,]  177  194  202 #>  [9032,]  177  194  202 #>  [9033,]  178  192  201 #>  [9034,]  177  194  202 #>  [9035,]  178  192  201 #>  [9036,]  177  194  202 #>  [9037,]  178  192  201 #>  [9038,]  177  194  202 #>  [9039,]  177  193  202 #>  [9040,]  178  192  201 #>  [9041,]  178  192  201 #>  [9042,]  177  194  202 #>  [9043,]  177  193  202 #>  [9044,]  178  192  201 #>  [9045,]  177  194  202 #>  [9046,]  177  194  202 #>  [9047,]  178  192  201 #>  [9048,]  177  194  202 #>  [9049,]  177  194  202 #>  [9050,]  178  192  201 #>  [9051,]  177  193  202 #>  [9052,]  178  192  201 #>  [9053,]  177  193  202 #>  [9054,]  177  194  202 #>  [9055,]  178  192  201 #>  [9056,]  177  193  202 #>  [9057,]  177  194  202 #>  [9058,]  178  192  201 #>  [9059,]  178  192  201 #>  [9060,]  177  193  202 #>  [9061,]  178  192  201 #>  [9062,]  177  194  202 #>  [9063,]  177  194  202 #>  [9064,]  177  193  202 #>  [9065,]  177  194  202 #>  [9066,]  177  193  202 #>  [9067,]  177  193  202 #>  [9068,]  178  192  201 #>  [9069,]  178  192  201 #>  [9070,]  178  192  201 #>  [9071,]  178  192  201 #>  [9072,]  177  194  202 #>  [9073,]  178  192  201 #>  [9074,]  178  192  201 #>  [9075,]  178  192  201 #>  [9076,]  178  192  201 #>  [9077,]  178  192  201 #>  [9078,]  177  193  202 #>  [9079,]  178  192  201 #>  [9080,]  177  194  202 #>  [9081,]  178  192  201 #>  [9082,]  177  194  202 #>  [9083,]  178  192  201 #>  [9084,]  178  192  201 #>  [9085,]  177  193  202 #>  [9086,]  178  192  201 #>  [9087,]  178  192  201 #>  [9088,]  177  194  202 #>  [9089,]  177  193  202 #>  [9090,]  178  192  201 #>  [9091,]  177  193  202 #>  [9092,]  178  192  201 #>  [9093,]  178  192  201 #>  [9094,]  178  192  201 #>  [9095,]  177  193  202 #>  [9096,]  178  192  201 #>  [9097,]  178  192  201 #>  [9098,]  178  192  201 #>  [9099,]  178  192  201 #>  [9100,]  178  192  201 #>  [9101,]  179  195  203 #>  [9102,]  179  195  203 #>  [9103,]  179  195  203 #>  [9104,]  180  196  204 #>  [9105,]  179  195  203 #>  [9106,]  180  196  204 #>  [9107,]  179  195  203 #>  [9108,]  179  195  203 #>  [9109,]  180  196  204 #>  [9110,]  180  196  204 #>  [9111,]  180  196  204 #>  [9112,]  180  196  204 #>  [9113,]  179  195  203 #>  [9114,]  180  196  204 #>  [9115,]  180  196  204 #>  [9116,]  179  195  203 #>  [9117,]  179  195  203 #>  [9118,]  180  196  204 #>  [9119,]  180  196  204 #>  [9120,]  179  195  203 #>  [9121,]  180  196  204 #>  [9122,]  179  195  203 #>  [9123,]  179  195  203 #>  [9124,]  179  195  203 #>  [9125,]  179  195  203 #>  [9126,]  180  196  204 #>  [9127,]  180  196  204 #>  [9128,]  179  195  203 #>  [9129,]  179  195  203 #>  [9130,]  180  196  204 #>  [9131,]  180  196  204 #>  [9132,]  180  196  204 #>  [9133,]  180  196  204 #>  [9134,]  179  195  203 #>  [9135,]  179  195  203 #>  [9136,]  180  196  204 #>  [9137,]  179  195  203 #>  [9138,]  180  196  204 #>  [9139,]  179  195  203 #>  [9140,]  179  195  203 #>  [9141,]  180  196  204 #>  [9142,]  180  196  204 #>  [9143,]  179  195  203 #>  [9144,]  179  195  203 #>  [9145,]  179  195  203 #>  [9146,]  179  195  203 #>  [9147,]  179  195  203 #>  [9148,]  180  196  204 #>  [9149,]  179  195  203 #>  [9150,]  179  195  203 #>  [9151,]  179  195  203 #>  [9152,]  179  195  203 #>  [9153,]  179  195  203 #>  [9154,]  179  195  203 #>  [9155,]  179  195  203 #>  [9156,]  179  195  203 #>  [9157,]  179  195  203 #>  [9158,]  180  196  204 #>  [9159,]  179  195  203 #>  [9160,]  180  196  204 #>  [9161,]  180  196  204 #>  [9162,]  180  196  204 #>  [9163,]  179  195  203 #>  [9164,]  180  196  204 #>  [9165,]  179  195  203 #>  [9166,]  179  195  203 #>  [9167,]  179  195  203 #>  [9168,]  180  196  204 #>  [9169,]  180  196  204 #>  [9170,]  179  195  203 #>  [9171,]  179  195  203 #>  [9172,]  179  195  203 #>  [9173,]  179  195  203 #>  [9174,]  180  196  204 #>  [9175,]  180  196  204 #>  [9176,]  179  195  203 #>  [9177,]  179  195  203 #>  [9178,]  179  195  203 #>  [9179,]  179  195  203 #>  [9180,]  179  195  203 #>  [9181,]  179  195  203 #>  [9182,]  180  196  204 #>  [9183,]  179  195  203 #>  [9184,]  179  195  203 #>  [9185,]  180  196  204 #>  [9186,]  179  195  203 #>  [9187,]  179  195  203 #>  [9188,]  179  195  203 #>  [9189,]  179  195  203 #>  [9190,]  179  195  203 #>  [9191,]  179  195  203 #>  [9192,]  180  196  204 #>  [9193,]  180  196  204 #>  [9194,]  179  195  203 #>  [9195,]  179  195  203 #>  [9196,]  180  196  204 #>  [9197,]  180  196  204 #>  [9198,]  179  195  203 #>  [9199,]  180  196  204 #>  [9200,]  179  195  203 #>  [9201,]  181  197  206 #>  [9202,]  182  198  205 #>  [9203,]  181  197  206 #>  [9204,]  181  197  206 #>  [9205,]  181  197  206 #>  [9206,]  181  197  206 #>  [9207,]  181  197  206 #>  [9208,]  181  197  206 #>  [9209,]  182  198  205 #>  [9210,]  182  198  205 #>  [9211,]  181  197  206 #>  [9212,]  182  198  205 #>  [9213,]  182  198  205 #>  [9214,]  181  197  206 #>  [9215,]  181  197  206 #>  [9216,]  181  197  206 #>  [9217,]  182  198  205 #>  [9218,]  181  197  206 #>  [9219,]  181  197  206 #>  [9220,]  181  197  206 #>  [9221,]  182  198  205 #>  [9222,]  181  197  206 #>  [9223,]  181  197  206 #>  [9224,]  182  198  205 #>  [9225,]  181  197  206 #>  [9226,]  181  197  206 #>  [9227,]  181  197  206 #>  [9228,]  181  197  206 #>  [9229,]  182  198  205 #>  [9230,]  181  197  206 #>  [9231,]  181  197  206 #>  [9232,]  182  198  205 #>  [9233,]  182  198  205 #>  [9234,]  181  197  206 #>  [9235,]  181  197  206 #>  [9236,]  181  197  206 #>  [9237,]  181  197  206 #>  [9238,]  181  197  206 #>  [9239,]  181  197  206 #>  [9240,]  182  198  205 #>  [9241,]  181  197  206 #>  [9242,]  181  197  206 #>  [9243,]  181  197  206 #>  [9244,]  181  197  206 #>  [9245,]  181  197  206 #>  [9246,]  181  197  206 #>  [9247,]  181  197  206 #>  [9248,]  181  197  206 #>  [9249,]  181  197  206 #>  [9250,]  181  197  206 #>  [9251,]  181  197  206 #>  [9252,]  181  197  206 #>  [9253,]  182  198  205 #>  [9254,]  181  197  206 #>  [9255,]  181  197  206 #>  [9256,]  181  197  206 #>  [9257,]  181  197  206 #>  [9258,]  181  197  206 #>  [9259,]  181  197  206 #>  [9260,]  182  198  205 #>  [9261,]  182  198  205 #>  [9262,]  181  197  206 #>  [9263,]  182  198  205 #>  [9264,]  181  197  206 #>  [9265,]  181  197  206 #>  [9266,]  181  197  206 #>  [9267,]  181  197  206 #>  [9268,]  181  197  206 #>  [9269,]  181  197  206 #>  [9270,]  182  198  205 #>  [9271,]  181  197  206 #>  [9272,]  181  197  206 #>  [9273,]  181  197  206 #>  [9274,]  181  197  206 #>  [9275,]  182  198  205 #>  [9276,]  181  197  206 #>  [9277,]  181  197  206 #>  [9278,]  181  197  206 #>  [9279,]  181  197  206 #>  [9280,]  182  198  205 #>  [9281,]  182  198  205 #>  [9282,]  181  197  206 #>  [9283,]  182  198  205 #>  [9284,]  181  197  206 #>  [9285,]  181  197  206 #>  [9286,]  182  198  205 #>  [9287,]  181  197  206 #>  [9288,]  181  197  206 #>  [9289,]  181  197  206 #>  [9290,]  181  197  206 #>  [9291,]  181  197  206 #>  [9292,]  181  197  206 #>  [9293,]  181  197  206 #>  [9294,]  181  197  206 #>  [9295,]  181  197  206 #>  [9296,]  181  197  206 #>  [9297,]  181  197  206 #>  [9298,]  181  197  206 #>  [9299,]  181  197  206 #>  [9300,]  181  197  206 #>  [9301,]  183  199  208 #>  [9302,]  184  200  208 #>  [9303,]  183  199  208 #>  [9304,]  183  199  207 #>  [9305,]  183  199  208 #>  [9306,]  183  199  208 #>  [9307,]  183  199  208 #>  [9308,]  183  199  207 #>  [9309,]  184  200  207 #>  [9310,]  184  200  208 #>  [9311,]  183  199  208 #>  [9312,]  184  200  208 #>  [9313,]  183  199  208 #>  [9314,]  183  199  208 #>  [9315,]  183  199  208 #>  [9316,]  183  199  208 #>  [9317,]  183  199  207 #>  [9318,]  183  199  208 #>  [9319,]  183  199  208 #>  [9320,]  183  199  208 #>  [9321,]  184  200  208 #>  [9322,]  183  199  208 #>  [9323,]  183  199  208 #>  [9324,]  183  199  208 #>  [9325,]  183  199  208 #>  [9326,]  183  199  208 #>  [9327,]  183  199  207 #>  [9328,]  183  199  208 #>  [9329,]  184  200  208 #>  [9330,]  183  199  208 #>  [9331,]  183  199  208 #>  [9332,]  183  199  208 #>  [9333,]  184  200  208 #>  [9334,]  183  199  208 #>  [9335,]  183  199  208 #>  [9336,]  183  199  208 #>  [9337,]  183  199  208 #>  [9338,]  183  199  208 #>  [9339,]  183  199  208 #>  [9340,]  183  199  208 #>  [9341,]  183  199  208 #>  [9342,]  183  199  208 #>  [9343,]  183  199  208 #>  [9344,]  183  199  207 #>  [9345,]  183  199  208 #>  [9346,]  183  199  208 #>  [9347,]  183  199  208 #>  [9348,]  183  199  208 #>  [9349,]  183  199  208 #>  [9350,]  183  199  208 #>  [9351,]  183  199  208 #>  [9352,]  183  199  207 #>  [9353,]  183  199  208 #>  [9354,]  183  199  208 #>  [9355,]  183  199  208 #>  [9356,]  183  199  208 #>  [9357,]  183  199  208 #>  [9358,]  183  199  208 #>  [9359,]  183  199  208 #>  [9360,]  184  200  208 #>  [9361,]  183  199  208 #>  [9362,]  183  199  208 #>  [9363,]  183  199  208 #>  [9364,]  183  199  208 #>  [9365,]  183  199  208 #>  [9366,]  183  199  207 #>  [9367,]  183  199  208 #>  [9368,]  183  199  208 #>  [9369,]  183  199  208 #>  [9370,]  184  200  208 #>  [9371,]  183  199  208 #>  [9372,]  183  199  208 #>  [9373,]  183  199  208 #>  [9374,]  183  199  208 #>  [9375,]  183  199  208 #>  [9376,]  183  199  208 #>  [9377,]  183  199  208 #>  [9378,]  183  199  208 #>  [9379,]  183  199  208 #>  [9380,]  183  199  208 #>  [9381,]  183  199  207 #>  [9382,]  183  199  207 #>  [9383,]  183  199  208 #>  [9384,]  183  199  208 #>  [9385,]  183  199  208 #>  [9386,]  184  200  208 #>  [9387,]  183  199  207 #>  [9388,]  183  199  208 #>  [9389,]  183  199  208 #>  [9390,]  183  199  207 #>  [9391,]  183  199  208 #>  [9392,]  183  199  207 #>  [9393,]  183  199  208 #>  [9394,]  183  199  208 #>  [9395,]  183  199  207 #>  [9396,]  183  199  208 #>  [9397,]  183  199  208 #>  [9398,]  183  199  208 #>  [9399,]  183  199  207 #>  [9400,]  183  199  208 #>  [9401,]  186  202  210 #>  [9402,]  186  202  210 #>  [9403,]  185  201  209 #>  [9404,]  186  202  210 #>  [9405,]  186  202  210 #>  [9406,]  185  201  209 #>  [9407,]  186  202  210 #>  [9408,]  186  202  210 #>  [9409,]  186  202  210 #>  [9410,]  186  202  210 #>  [9411,]  186  202  210 #>  [9412,]  186  202  210 #>  [9413,]  186  202  210 #>  [9414,]  186  202  210 #>  [9415,]  186  202  210 #>  [9416,]  186  202  210 #>  [9417,]  186  202  210 #>  [9418,]  186  202  210 #>  [9419,]  185  201  209 #>  [9420,]  186  202  210 #>  [9421,]  186  202  210 #>  [9422,]  186  202  210 #>  [9423,]  186  202  210 #>  [9424,]  186  202  210 #>  [9425,]  186  202  210 #>  [9426,]  186  202  210 #>  [9427,]  186  202  210 #>  [9428,]  186  202  210 #>  [9429,]  186  202  210 #>  [9430,]  186  202  210 #>  [9431,]  186  202  210 #>  [9432,]  186  202  210 #>  [9433,]  186  202  210 #>  [9434,]  185  201  209 #>  [9435,]  186  202  210 #>  [9436,]  186  202  210 #>  [9437,]  185  201  209 #>  [9438,]  185  201  209 #>  [9439,]  186  202  210 #>  [9440,]  186  202  210 #>  [9441,]  186  202  210 #>  [9442,]  186  202  210 #>  [9443,]  186  202  210 #>  [9444,]  186  202  210 #>  [9445,]  185  201  209 #>  [9446,]  186  202  210 #>  [9447,]  186  202  210 #>  [9448,]  186  202  210 #>  [9449,]  185  201  209 #>  [9450,]  186  202  210 #>  [9451,]  186  202  210 #>  [9452,]  185  201  209 #>  [9453,]  186  202  210 #>  [9454,]  186  202  210 #>  [9455,]  186  202  210 #>  [9456,]  186  202  210 #>  [9457,]  186  202  210 #>  [9458,]  186  202  210 #>  [9459,]  186  202  210 #>  [9460,]  186  202  210 #>  [9461,]  186  202  210 #>  [9462,]  186  202  210 #>  [9463,]  186  202  210 #>  [9464,]  185  201  209 #>  [9465,]  186  202  210 #>  [9466,]  186  202  210 #>  [9467,]  186  202  210 #>  [9468,]  185  201  209 #>  [9469,]  186  202  210 #>  [9470,]  186  202  210 #>  [9471,]  186  202  210 #>  [9472,]  185  201  209 #>  [9473,]  186  202  210 #>  [9474,]  186  202  210 #>  [9475,]  186  202  210 #>  [9476,]  186  202  210 #>  [9477,]  186  202  210 #>  [9478,]  186  202  210 #>  [9479,]  186  202  210 #>  [9480,]  186  202  210 #>  [9481,]  186  202  210 #>  [9482,]  186  202  210 #>  [9483,]  186  202  210 #>  [9484,]  186  202  210 #>  [9485,]  186  202  210 #>  [9486,]  186  202  210 #>  [9487,]  186  202  210 #>  [9488,]  186  202  210 #>  [9489,]  186  202  210 #>  [9490,]  186  202  210 #>  [9491,]  186  202  210 #>  [9492,]  186  202  210 #>  [9493,]  186  202  210 #>  [9494,]  186  202  210 #>  [9495,]  186  202  210 #>  [9496,]  185  201  209 #>  [9497,]  185  201  209 #>  [9498,]  186  202  210 #>  [9499,]  186  202  210 #>  [9500,]  186  202  210 #>  [9501,]  187  203  211 #>  [9502,]  187  203  211 #>  [9503,]  187  203  211 #>  [9504,]  188  204  212 #>  [9505,]  187  203  211 #>  [9506,]  188  204  212 #>  [9507,]  187  203  211 #>  [9508,]  187  203  211 #>  [9509,]  188  204  212 #>  [9510,]  188  204  212 #>  [9511,]  188  204  212 #>  [9512,]  188  204  212 #>  [9513,]  187  203  211 #>  [9514,]  188  204  212 #>  [9515,]  188  204  212 #>  [9516,]  187  203  211 #>  [9517,]  187  203  211 #>  [9518,]  188  204  212 #>  [9519,]  188  204  212 #>  [9520,]  187  203  211 #>  [9521,]  188  204  212 #>  [9522,]  187  203  211 #>  [9523,]  188  204  212 #>  [9524,]  187  203  211 #>  [9525,]  187  203  211 #>  [9526,]  188  204  212 #>  [9527,]  188  204  212 #>  [9528,]  187  203  211 #>  [9529,]  187  203  211 #>  [9530,]  188  204  212 #>  [9531,]  188  204  212 #>  [9532,]  188  204  212 #>  [9533,]  188  204  212 #>  [9534,]  188  204  212 #>  [9535,]  187  203  211 #>  [9536,]  188  204  212 #>  [9537,]  187  203  211 #>  [9538,]  188  204  212 #>  [9539,]  187  203  211 #>  [9540,]  187  203  211 #>  [9541,]  188  204  212 #>  [9542,]  188  204  212 #>  [9543,]  187  203  211 #>  [9544,]  187  203  211 #>  [9545,]  187  203  211 #>  [9546,]  187  203  211 #>  [9547,]  187  203  211 #>  [9548,]  188  204  212 #>  [9549,]  187  203  211 #>  [9550,]  187  203  211 #>  [9551,]  187  203  211 #>  [9552,]  188  204  212 #>  [9553,]  187  203  211 #>  [9554,]  187  203  211 #>  [9555,]  187  203  211 #>  [9556,]  187  203  211 #>  [9557,]  187  203  211 #>  [9558,]  188  204  212 #>  [9559,]  187  203  211 #>  [9560,]  188  204  212 #>  [9561,]  188  204  212 #>  [9562,]  188  204  212 #>  [9563,]  187  203  211 #>  [9564,]  188  204  212 #>  [9565,]  187  203  211 #>  [9566,]  187  203  211 #>  [9567,]  188  204  212 #>  [9568,]  188  204  212 #>  [9569,]  188  204  212 #>  [9570,]  187  203  211 #>  [9571,]  187  203  211 #>  [9572,]  187  203  211 #>  [9573,]  188  204  212 #>  [9574,]  188  204  212 #>  [9575,]  188  204  212 #>  [9576,]  187  203  211 #>  [9577,]  187  203  211 #>  [9578,]  187  203  211 #>  [9579,]  187  203  211 #>  [9580,]  188  204  212 #>  [9581,]  187  203  211 #>  [9582,]  188  204  212 #>  [9583,]  187  203  211 #>  [9584,]  187  203  211 #>  [9585,]  188  204  212 #>  [9586,]  187  203  211 #>  [9587,]  187  203  211 #>  [9588,]  187  203  211 #>  [9589,]  187  203  211 #>  [9590,]  187  203  211 #>  [9591,]  187  203  211 #>  [9592,]  188  204  212 #>  [9593,]  188  204  212 #>  [9594,]  187  203  211 #>  [9595,]  187  203  211 #>  [9596,]  188  204  212 #>  [9597,]  188  204  212 #>  [9598,]  187  203  211 #>  [9599,]  188  204  212 #>  [9600,]  187  203  211 #>  [9601,]  190  205  213 #>  [9602,]  190  205  213 #>  [9603,]  189  206  214 #>  [9604,]  189  206  214 #>  [9605,]  190  205  213 #>  [9606,]  190  205  213 #>  [9607,]  189  206  214 #>  [9608,]  189  206  214 #>  [9609,]  190  205  213 #>  [9610,]  189  206  214 #>  [9611,]  190  205  213 #>  [9612,]  189  206  214 #>  [9613,]  190  205  213 #>  [9614,]  189  206  214 #>  [9615,]  190  205  213 #>  [9616,]  189  206  214 #>  [9617,]  190  205  213 #>  [9618,]  190  205  213 #>  [9619,]  190  205  213 #>  [9620,]  190  205  213 #>  [9621,]  190  205  213 #>  [9622,]  190  205  213 #>  [9623,]  189  206  214 #>  [9624,]  190  205  213 #>  [9625,]  189  206  214 #>  [9626,]  189  206  214 #>  [9627,]  190  205  213 #>  [9628,]  190  205  213 #>  [9629,]  190  205  213 #>  [9630,]  190  205  213 #>  [9631,]  189  206  214 #>  [9632,]  189  206  214 #>  [9633,]  190  205  213 #>  [9634,]  190  205  213 #>  [9635,]  189  206  214 #>  [9636,]  190  205  213 #>  [9637,]  189  206  214 #>  [9638,]  190  205  213 #>  [9639,]  190  205  213 #>  [9640,]  189  206  214 #>  [9641,]  190  205  213 #>  [9642,]  190  205  213 #>  [9643,]  190  205  213 #>  [9644,]  189  206  214 #>  [9645,]  189  206  214 #>  [9646,]  189  206  214 #>  [9647,]  189  206  214 #>  [9648,]  190  205  213 #>  [9649,]  190  205  213 #>  [9650,]  190  205  213 #>  [9651,]  190  205  213 #>  [9652,]  189  206  214 #>  [9653,]  190  205  213 #>  [9654,]  190  205  213 #>  [9655,]  189  206  214 #>  [9656,]  190  205  213 #>  [9657,]  189  206  214 #>  [9658,]  190  205  213 #>  [9659,]  189  206  214 #>  [9660,]  189  206  214 #>  [9661,]  190  205  213 #>  [9662,]  190  205  213 #>  [9663,]  190  205  213 #>  [9664,]  190  205  213 #>  [9665,]  190  205  213 #>  [9666,]  190  205  213 #>  [9667,]  189  206  214 #>  [9668,]  189  206  214 #>  [9669,]  190  205  213 #>  [9670,]  190  205  213 #>  [9671,]  190  205  213 #>  [9672,]  189  206  214 #>  [9673,]  190  205  213 #>  [9674,]  189  206  214 #>  [9675,]  189  206  214 #>  [9676,]  189  206  214 #>  [9677,]  190  205  213 #>  [9678,]  189  206  214 #>  [9679,]  190  205  213 #>  [9680,]  189  206  214 #>  [9681,]  190  205  213 #>  [9682,]  190  205  213 #>  [9683,]  190  205  213 #>  [9684,]  190  205  213 #>  [9685,]  190  205  213 #>  [9686,]  189  206  214 #>  [9687,]  190  205  213 #>  [9688,]  189  206  214 #>  [9689,]  190  205  213 #>  [9690,]  190  205  213 #>  [9691,]  190  205  213 #>  [9692,]  189  206  214 #>  [9693,]  190  205  213 #>  [9694,]  190  205  213 #>  [9695,]  189  206  214 #>  [9696,]  189  206  214 #>  [9697,]  189  206  214 #>  [9698,]  189  206  214 #>  [9699,]  190  205  213 #>  [9700,]  190  205  213 #>  [9701,]  191  207  215 #>  [9702,]  192  208  216 #>  [9703,]  191  207  215 #>  [9704,]  191  207  215 #>  [9705,]  192  208  216 #>  [9706,]  191  207  215 #>  [9707,]  191  207  215 #>  [9708,]  191  207  215 #>  [9709,]  192  208  216 #>  [9710,]  192  208  216 #>  [9711,]  191  207  215 #>  [9712,]  192  208  216 #>  [9713,]  192  208  216 #>  [9714,]  191  207  215 #>  [9715,]  191  207  215 #>  [9716,]  191  207  215 #>  [9717,]  192  208  216 #>  [9718,]  192  208  216 #>  [9719,]  191  207  215 #>  [9720,]  192  208  216 #>  [9721,]  192  208  216 #>  [9722,]  191  207  215 #>  [9723,]  192  208  216 #>  [9724,]  192  208  216 #>  [9725,]  191  207  215 #>  [9726,]  191  207  215 #>  [9727,]  192  208  216 #>  [9728,]  191  207  215 #>  [9729,]  192  208  216 #>  [9730,]  191  207  215 #>  [9731,]  192  208  216 #>  [9732,]  192  208  216 #>  [9733,]  192  208  216 #>  [9734,]  191  207  215 #>  [9735,]  191  207  215 #>  [9736,]  192  208  216 #>  [9737,]  191  207  215 #>  [9738,]  191  207  215 #>  [9739,]  191  207  215 #>  [9740,]  192  208  216 #>  [9741,]  191  207  215 #>  [9742,]  191  207  215 #>  [9743,]  191  207  215 #>  [9744,]  191  207  215 #>  [9745,]  191  207  215 #>  [9746,]  191  207  215 #>  [9747,]  191  207  215 #>  [9748,]  191  207  215 #>  [9749,]  191  207  215 #>  [9750,]  191  207  215 #>  [9751,]  191  207  215 #>  [9752,]  191  207  215 #>  [9753,]  192  208  216 #>  [9754,]  191  207  215 #>  [9755,]  191  207  215 #>  [9756,]  191  207  215 #>  [9757,]  191  207  215 #>  [9758,]  191  207  215 #>  [9759,]  191  207  215 #>  [9760,]  192  208  216 #>  [9761,]  192  208  216 #>  [9762,]  191  207  215 #>  [9763,]  192  208  216 #>  [9764,]  191  207  215 #>  [9765,]  191  207  215 #>  [9766,]  191  207  215 #>  [9767,]  191  207  215 #>  [9768,]  191  207  215 #>  [9769,]  191  207  215 #>  [9770,]  192  208  216 #>  [9771,]  191  207  215 #>  [9772,]  191  207  215 #>  [9773,]  191  207  215 #>  [9774,]  191  207  215 #>  [9775,]  192  208  216 #>  [9776,]  191  207  215 #>  [9777,]  191  207  215 #>  [9778,]  191  207  215 #>  [9779,]  191  207  215 #>  [9780,]  192  208  216 #>  [9781,]  192  208  216 #>  [9782,]  191  207  215 #>  [9783,]  192  208  216 #>  [9784,]  192  208  216 #>  [9785,]  191  207  215 #>  [9786,]  192  208  216 #>  [9787,]  191  207  215 #>  [9788,]  192  208  216 #>  [9789,]  191  207  215 #>  [9790,]  191  207  215 #>  [9791,]  191  207  215 #>  [9792,]  191  207  215 #>  [9793,]  191  207  215 #>  [9794,]  191  207  215 #>  [9795,]  191  207  215 #>  [9796,]  191  207  215 #>  [9797,]  191  207  215 #>  [9798,]  191  207  215 #>  [9799,]  191  207  215 #>  [9800,]  191  207  215 #>  [9801,]  195  210  219 #>  [9802,]  194  210  219 #>  [9803,]  193  209  217 #>  [9804,]  193  209  219 #>  [9805,]  195  210  219 #>  [9806,]  194  210  219 #>  [9807,]  193  209  217 #>  [9808,]  193  209  219 #>  [9809,]  195  210  219 #>  [9810,]  195  210  219 #>  [9811,]  194  210  219 #>  [9812,]  193  209  217 #>  [9813,]  195  210  219 #>  [9814,]  195  210  218 #>  [9815,]  194  210  219 #>  [9816,]  195  210  219 #>  [9817,]  194  210  219 #>  [9818,]  195  210  219 #>  [9819,]  194  210  219 #>  [9820,]  195  210  219 #>  [9821,]  195  210  219 #>  [9822,]  195  210  219 #>  [9823,]  193  209  219 #>  [9824,]  195  210  219 #>  [9825,]  193  209  219 #>  [9826,]  194  210  218 #>  [9827,]  195  210  219 #>  [9828,]  195  210  219 #>  [9829,]  194  210  219 #>  [9830,]  194  210  219 #>  [9831,]  193  209  217 #>  [9832,]  195  210  218 #>  [9833,]  195  210  219 #>  [9834,]  194  210  219 #>  [9835,]  194  210  219 #>  [9836,]  195  210  219 #>  [9837,]  193  209  219 #>  [9838,]  195  210  219 #>  [9839,]  195  210  219 #>  [9840,]  193  209  219 #>  [9841,]  195  210  219 #>  [9842,]  194  210  218 #>  [9843,]  194  210  219 #>  [9844,]  194  210  219 #>  [9845,]  195  210  219 #>  [9846,]  193  209  219 #>  [9847,]  193  209  219 #>  [9848,]  194  210  218 #>  [9849,]  195  210  219 #>  [9850,]  195  210  219 #>  [9851,]  195  210  218 #>  [9852,]  193  209  217 #>  [9853,]  195  210  219 #>  [9854,]  195  210  218 #>  [9855,]  193  209  219 #>  [9856,]  194  210  219 #>  [9857,]  193  209  219 #>  [9858,]  195  210  219 #>  [9859,]  193  209  217 #>  [9860,]  193  209  217 #>  [9861,]  194  210  219 #>  [9862,]  195  210  218 #>  [9863,]  194  210  219 #>  [9864,]  194  210  219 #>  [9865,]  194  210  219 #>  [9866,]  194  210  218 #>  [9867,]  195  210  219 #>  [9868,]  193  209  219 #>  [9869,]  195  210  218 #>  [9870,]  194  210  219 #>  [9871,]  195  210  219 #>  [9872,]  195  210  219 #>  [9873,]  195  210  219 #>  [9874,]  193  209  219 #>  [9875,]  194  210  219 #>  [9876,]  195  210  219 #>  [9877,]  195  210  219 #>  [9878,]  194  210  219 #>  [9879,]  194  210  219 #>  [9880,]  193  209  218 #>  [9881,]  194  210  218 #>  [9882,]  195  210  219 #>  [9883,]  195  210  219 #>  [9884,]  195  210  219 #>  [9885,]  195  210  219 #>  [9886,]  193  209  219 #>  [9887,]  195  210  219 #>  [9888,]  195  210  219 #>  [9889,]  195  210  218 #>  [9890,]  195  210  219 #>  [9891,]  195  210  219 #>  [9892,]  193  209  219 #>  [9893,]  195  210  219 #>  [9894,]  194  210  219 #>  [9895,]  194  210  219 #>  [9896,]  193  209  219 #>  [9897,]  193  209  217 #>  [9898,]  193  209  219 #>  [9899,]  195  210  219 #>  [9900,]  194  210  219 #>  [9901,]  196  211  221 #>  [9902,]  196  211  221 #>  [9903,]  196  211  220 #>  [9904,]  196  211  221 #>  [9905,]  197  212  220 #>  [9906,]  196  211  221 #>  [9907,]  196  211  220 #>  [9908,]  196  211  220 #>  [9909,]  196  211  221 #>  [9910,]  196  211  221 #>  [9911,]  196  211  221 #>  [9912,]  196  211  221 #>  [9913,]  196  211  220 #>  [9914,]  196  211  221 #>  [9915,]  196  211  221 #>  [9916,]  196  211  220 #>  [9917,]  196  211  220 #>  [9918,]  197  212  221 #>  [9919,]  196  211  221 #>  [9920,]  196  211  220 #>  [9921,]  196  211  221 #>  [9922,]  196  211  220 #>  [9923,]  196  211  221 #>  [9924,]  196  211  220 #>  [9925,]  196  211  220 #>  [9926,]  196  211  221 #>  [9927,]  196  211  221 #>  [9928,]  196  211  221 #>  [9929,]  196  211  220 #>  [9930,]  196  211  221 #>  [9931,]  196  211  221 #>  [9932,]  196  211  221 #>  [9933,]  196  211  221 #>  [9934,]  196  211  221 #>  [9935,]  196  211  221 #>  [9936,]  196  211  221 #>  [9937,]  196  211  221 #>  [9938,]  196  211  221 #>  [9939,]  196  211  220 #>  [9940,]  196  211  220 #>  [9941,]  196  211  221 #>  [9942,]  196  211  221 #>  [9943,]  196  211  220 #>  [9944,]  196  211  220 #>  [9945,]  196  211  220 #>  [9946,]  196  211  220 #>  [9947,]  196  211  220 #>  [9948,]  196  211  221 #>  [9949,]  196  211  220 #>  [9950,]  196  211  220 #>  [9951,]  196  211  220 #>  [9952,]  196  211  221 #>  [9953,]  196  211  220 #>  [9954,]  196  211  220 #>  [9955,]  196  211  220 #>  [9956,]  196  211  220 #>  [9957,]  196  211  221 #>  [9958,]  196  211  221 #>  [9959,]  196  211  220 #>  [9960,]  196  211  221 #>  [9961,]  196  211  221 #>  [9962,]  196  211  221 #>  [9963,]  196  211  220 #>  [9964,]  196  211  221 #>  [9965,]  196  211  220 #>  [9966,]  196  211  220 #>  [9967,]  196  211  221 #>  [9968,]  196  211  221 #>  [9969,]  196  211  221 #>  [9970,]  196  211  220 #>  [9971,]  197  212  220 #>  [9972,]  196  211  220 #>  [9973,]  196  211  221 #>  [9974,]  196  211  221 #>  [9975,]  197  212  221 #>  [9976,]  196  211  220 #>  [9977,]  196  211  220 #>  [9978,]  196  211  220 #>  [9979,]  196  211  220 #>  [9980,]  196  211  221 #>  [9981,]  196  211  221 #>  [9982,]  196  211  221 #>  [9983,]  196  211  220 #>  [9984,]  196  211  220 #>  [9985,]  196  211  221 #>  [9986,]  196  211  220 #>  [9987,]  196  211  221 #>  [9988,]  196  211  221 #>  [9989,]  196  211  220 #>  [9990,]  196  211  220 #>  [9991,]  196  211  221 #>  [9992,]  196  211  221 #>  [9993,]  196  211  221 #>  [9994,]  196  211  220 #>  [9995,]  197  212  221 #>  [9996,]  196  211  221 #>  [9997,]  196  211  221 #>  [9998,]  196  211  220 #>  [9999,]  196  211  221 #> [10000,]  197  212  220 #> [10001,]  199  214  222 #> [10002,]  199  214  222 #> [10003,]  198  213  224 #> [10004,]  199  214  222 #> [10005,]  199  214  222 #> [10006,]  199  214  222 #> [10007,]  198  213  224 #> [10008,]  198  213  224 #> [10009,]  199  214  222 #> [10010,]  199  214  222 #> [10011,]  199  214  222 #> [10012,]  199  214  222 #> [10013,]  198  213  224 #> [10014,]  199  214  222 #> [10015,]  199  214  222 #> [10016,]  198  213  224 #> [10017,]  198  213  223 #> [10018,]  199  214  222 #> [10019,]  199  214  222 #> [10020,]  198  213  224 #> [10021,]  199  214  222 #> [10022,]  198  213  224 #> [10023,]  199  214  222 #> [10024,]  198  213  224 #> [10025,]  198  213  224 #> [10026,]  199  214  222 #> [10027,]  199  214  222 #> [10028,]  199  214  222 #> [10029,]  199  214  222 #> [10030,]  199  214  222 #> [10031,]  199  214  222 #> [10032,]  199  214  222 #> [10033,]  199  214  222 #> [10034,]  199  214  222 #> [10035,]  199  214  222 #> [10036,]  199  214  222 #> [10037,]  199  214  222 #> [10038,]  199  214  222 #> [10039,]  198  213  224 #> [10040,]  198  213  224 #> [10041,]  199  214  222 #> [10042,]  199  214  222 #> [10043,]  198  213  222 #> [10044,]  198  213  223 #> [10045,]  198  213  224 #> [10046,]  198  213  224 #> [10047,]  198  213  223 #> [10048,]  199  214  222 #> [10049,]  198  213  224 #> [10050,]  198  213  224 #> [10051,]  199  214  222 #> [10052,]  199  214  222 #> [10053,]  198  213  224 #> [10054,]  198  213  224 #> [10055,]  198  213  224 #> [10056,]  198  213  223 #> [10057,]  199  214  222 #> [10058,]  199  214  222 #> [10059,]  198  213  224 #> [10060,]  199  214  222 #> [10061,]  199  214  222 #> [10062,]  199  214  222 #> [10063,]  198  213  223 #> [10064,]  199  214  222 #> [10065,]  198  213  223 #> [10066,]  198  213  223 #> [10067,]  199  214  222 #> [10068,]  199  214  222 #> [10069,]  199  214  222 #> [10070,]  198  213  223 #> [10071,]  199  214  222 #> [10072,]  198  213  224 #> [10073,]  199  214  222 #> [10074,]  199  214  222 #> [10075,]  199  214  222 #> [10076,]  199  214  222 #> [10077,]  198  213  222 #> [10078,]  198  213  223 #> [10079,]  198  213  222 #> [10080,]  199  214  222 #> [10081,]  199  214  222 #> [10082,]  199  214  222 #> [10083,]  199  214  222 #> [10084,]  198  213  224 #> [10085,]  199  214  222 #> [10086,]  198  213  224 #> [10087,]  199  214  222 #> [10088,]  199  214  222 #> [10089,]  198  213  224 #> [10090,]  198  213  224 #> [10091,]  199  214  222 #> [10092,]  199  214  222 #> [10093,]  199  214  222 #> [10094,]  198  213  223 #> [10095,]  199  214  222 #> [10096,]  199  214  222 #> [10097,]  199  214  222 #> [10098,]  198  213  224 #> [10099,]  199  214  222 #> [10100,]  198  213  223 #> [10101,]  201  216  226 #> [10102,]  201  216  226 #> [10103,]  200  215  226 #> [10104,]  200  215  225 #> [10105,]  200  215  226 #> [10106,]  201  216  227 #> [10107,]  200  215  226 #> [10108,]  200  215  226 #> [10109,]  200  215  225 #> [10110,]  200  215  227 #> [10111,]  200  215  225 #> [10112,]  200  215  225 #> [10113,]  201  216  226 #> [10114,]  201  216  225 #> [10115,]  201  216  225 #> [10116,]  201  216  226 #> [10117,]  201  216  226 #> [10118,]  200  215  227 #> [10119,]  200  215  225 #> [10120,]  200  215  226 #> [10121,]  201  216  225 #> [10122,]  200  215  226 #> [10123,]  200  215  227 #> [10124,]  200  215  226 #> [10125,]  200  215  226 #> [10126,]  201  216  227 #> [10127,]  201  216  225 #> [10128,]  200  215  226 #> [10129,]  201  216  226 #> [10130,]  200  215  227 #> [10131,]  200  215  225 #> [10132,]  200  215  227 #> [10133,]  201  216  225 #> [10134,]  200  215  227 #> [10135,]  201  216  227 #> [10136,]  200  215  225 #> [10137,]  200  215  226 #> [10138,]  200  215  225 #> [10139,]  200  215  226 #> [10140,]  200  215  226 #> [10141,]  201  216  225 #> [10142,]  200  215  225 #> [10143,]  200  215  226 #> [10144,]  201  216  226 #> [10145,]  200  215  226 #> [10146,]  200  215  226 #> [10147,]  200  215  226 #> [10148,]  200  215  225 #> [10149,]  200  215  226 #> [10150,]  201  216  226 #> [10151,]  200  215  226 #> [10152,]  200  215  227 #> [10153,]  200  215  226 #> [10154,]  200  215  226 #> [10155,]  200  215  226 #> [10156,]  200  215  226 #> [10157,]  200  215  226 #> [10158,]  200  215  225 #> [10159,]  201  216  226 #> [10160,]  200  215  227 #> [10161,]  201  216  225 #> [10162,]  200  215  227 #> [10163,]  200  215  226 #> [10164,]  200  215  227 #> [10165,]  200  215  226 #> [10166,]  200  215  226 #> [10167,]  200  215  227 #> [10168,]  201  216  225 #> [10169,]  200  215  225 #> [10170,]  201  216  226 #> [10171,]  201  216  226 #> [10172,]  200  215  226 #> [10173,]  201  216  227 #> [10174,]  200  215  225 #> [10175,]  200  215  225 #> [10176,]  201  216  226 #> [10177,]  201  216  226 #> [10178,]  200  215  226 #> [10179,]  201  216  226 #> [10180,]  200  215  227 #> [10181,]  201  216  226 #> [10182,]  200  215  225 #> [10183,]  201  216  226 #> [10184,]  200  215  226 #> [10185,]  200  215  225 #> [10186,]  201  216  226 #> [10187,]  200  215  227 #> [10188,]  200  215  227 #> [10189,]  200  215  226 #> [10190,]  200  215  226 #> [10191,]  200  215  227 #> [10192,]  200  215  225 #> [10193,]  201  216  225 #> [10194,]  201  216  226 #> [10195,]  200  215  227 #> [10196,]  201  216  225 #> [10197,]  200  215  225 #> [10198,]  200  215  226 #> [10199,]  201  216  227 #> [10200,]  200  215  226 #> [10201,]  203  218  229 #> [10202,]  203  218  229 #> [10203,]  202  217  228 #> [10204,]  203  218  229 #> [10205,]  203  218  229 #> [10206,]  202  217  228 #> [10207,]  202  217  228 #> [10208,]  203  218  229 #> [10209,]  203  218  229 #> [10210,]  203  218  229 #> [10211,]  203  218  229 #> [10212,]  203  218  229 #> [10213,]  203  218  229 #> [10214,]  203  218  229 #> [10215,]  203  218  229 #> [10216,]  203  218  229 #> [10217,]  203  218  229 #> [10218,]  203  218  229 #> [10219,]  203  218  229 #> [10220,]  202  217  228 #> [10221,]  202  217  228 #> [10222,]  203  218  229 #> [10223,]  202  217  228 #> [10224,]  203  218  229 #> [10225,]  202  217  228 #> [10226,]  203  218  229 #> [10227,]  203  218  229 #> [10228,]  203  218  229 #> [10229,]  202  217  228 #> [10230,]  203  218  229 #> [10231,]  203  218  229 #> [10232,]  203  218  229 #> [10233,]  203  218  229 #> [10234,]  202  217  228 #> [10235,]  202  217  228 #> [10236,]  202  217  228 #> [10237,]  202  217  228 #> [10238,]  203  218  229 #> [10239,]  203  218  229 #> [10240,]  203  218  229 #> [10241,]  202  217  228 #> [10242,]  202  217  228 #> [10243,]  203  218  229 #> [10244,]  202  217  228 #> [10245,]  202  217  228 #> [10246,]  203  218  229 #> [10247,]  203  218  229 #> [10248,]  203  218  229 #> [10249,]  203  218  229 #> [10250,]  202  217  228 #> [10251,]  203  218  229 #> [10252,]  203  218  229 #> [10253,]  202  217  228 #> [10254,]  202  217  228 #> [10255,]  202  217  228 #> [10256,]  202  217  228 #> [10257,]  202  217  228 #> [10258,]  203  218  229 #> [10259,]  203  218  229 #> [10260,]  202  217  228 #> [10261,]  203  218  229 #> [10262,]  203  218  229 #> [10263,]  203  218  229 #> [10264,]  202  217  228 #> [10265,]  202  217  228 #> [10266,]  203  218  229 #> [10267,]  203  218  229 #> [10268,]  203  218  229 #> [10269,]  203  218  229 #> [10270,]  203  218  229 #> [10271,]  203  218  229 #> [10272,]  203  218  229 #> [10273,]  202  217  228 #> [10274,]  202  217  228 #> [10275,]  203  218  229 #> [10276,]  203  218  229 #> [10277,]  203  218  229 #> [10278,]  203  218  229 #> [10279,]  203  218  229 #> [10280,]  202  217  228 #> [10281,]  202  217  228 #> [10282,]  202  217  228 #> [10283,]  203  218  229 #> [10284,]  202  217  228 #> [10285,]  202  217  228 #> [10286,]  202  217  228 #> [10287,]  203  218  229 #> [10288,]  202  217  228 #> [10289,]  202  217  228 #> [10290,]  203  218  229 #> [10291,]  203  218  229 #> [10292,]  203  218  229 #> [10293,]  203  218  229 #> [10294,]  202  217  228 #> [10295,]  203  218  229 #> [10296,]  203  218  229 #> [10297,]  202  217  228 #> [10298,]  202  217  228 #> [10299,]  202  217  228 #> [10300,]  203  218  229 #> [10301,]  205  220  230 #> [10302,]  205  220  230 #> [10303,]  205  220  230 #> [10304,]  204  219  232 #> [10305,]  205  220  230 #> [10306,]  205  220  230 #> [10307,]  205  220  230 #> [10308,]  204  219  232 #> [10309,]  204  219  232 #> [10310,]  205  220  230 #> [10311,]  204  219  231 #> [10312,]  205  220  230 #> [10313,]  205  220  230 #> [10314,]  205  220  230 #> [10315,]  205  220  230 #> [10316,]  205  220  230 #> [10317,]  204  219  232 #> [10318,]  205  220  230 #> [10319,]  205  220  230 #> [10320,]  205  220  230 #> [10321,]  205  220  230 #> [10322,]  204  219  231 #> [10323,]  205  220  230 #> [10324,]  205  220  230 #> [10325,]  205  220  230 #> [10326,]  205  220  230 #> [10327,]  204  219  232 #> [10328,]  205  220  230 #> [10329,]  205  220  230 #> [10330,]  205  220  230 #> [10331,]  205  220  230 #> [10332,]  205  220  230 #> [10333,]  205  220  230 #> [10334,]  205  220  230 #> [10335,]  204  219  231 #> [10336,]  205  220  230 #> [10337,]  205  220  230 #> [10338,]  205  220  230 #> [10339,]  205  220  230 #> [10340,]  205  220  230 #> [10341,]  205  220  230 #> [10342,]  205  220  230 #> [10343,]  205  220  230 #> [10344,]  204  219  232 #> [10345,]  205  220  230 #> [10346,]  205  220  230 #> [10347,]  205  220  230 #> [10348,]  205  220  230 #> [10349,]  205  220  230 #> [10350,]  205  220  230 #> [10351,]  205  220  230 #> [10352,]  204  219  231 #> [10353,]  205  220  230 #> [10354,]  205  220  230 #> [10355,]  205  220  230 #> [10356,]  205  220  230 #> [10357,]  205  220  230 #> [10358,]  204  219  231 #> [10359,]  205  220  230 #> [10360,]  205  220  230 #> [10361,]  205  220  230 #> [10362,]  205  220  230 #> [10363,]  205  220  230 #> [10364,]  205  220  230 #> [10365,]  205  220  230 #> [10366,]  204  219  231 #> [10367,]  205  220  230 #> [10368,]  205  220  230 #> [10369,]  205  220  230 #> [10370,]  205  220  230 #> [10371,]  205  220  230 #> [10372,]  205  220  230 #> [10373,]  205  220  230 #> [10374,]  205  220  230 #> [10375,]  205  220  230 #> [10376,]  205  220  230 #> [10377,]  205  220  230 #> [10378,]  205  220  230 #> [10379,]  205  220  230 #> [10380,]  205  220  230 #> [10381,]  204  219  231 #> [10382,]  204  219  232 #> [10383,]  205  220  230 #> [10384,]  205  220  230 #> [10385,]  205  220  230 #> [10386,]  205  220  230 #> [10387,]  204  219  232 #> [10388,]  205  220  230 #> [10389,]  205  220  230 #> [10390,]  204  219  232 #> [10391,]  205  220  230 #> [10392,]  204  219  231 #> [10393,]  205  220  230 #> [10394,]  205  220  230 #> [10395,]  204  219  232 #> [10396,]  205  220  230 #> [10397,]  205  220  230 #> [10398,]  205  220  230 #> [10399,]  204  219  231 #> [10400,]  205  220  230 #> [10401,]  207  222  234 #> [10402,]  206  221  234 #> [10403,]  206  221  233 #> [10404,]  207  222  233 #> [10405,]  206  221  233 #> [10406,]  206  221  233 #> [10407,]  207  222  234 #> [10408,]  207  222  234 #> [10409,]  206  221  233 #> [10410,]  207  222  233 #> [10411,]  206  221  233 #> [10412,]  206  221  234 #> [10413,]  207  222  234 #> [10414,]  206  221  233 #> [10415,]  207  222  234 #> [10416,]  207  222  234 #> [10417,]  207  222  234 #> [10418,]  207  222  234 #> [10419,]  206  221  234 #> [10420,]  206  221  234 #> [10421,]  207  222  233 #> [10422,]  206  221  234 #> [10423,]  207  222  234 #> [10424,]  206  221  233 #> [10425,]  207  222  233 #> [10426,]  206  221  234 #> [10427,]  207  222  234 #> [10428,]  207  222  233 #> [10429,]  206  221  234 #> [10430,]  206  221  234 #> [10431,]  206  221  233 #> [10432,]  206  221  233 #> [10433,]  206  221  234 #> [10434,]  206  221  233 #> [10435,]  206  221  233 #> [10436,]  206  221  234 #> [10437,]  206  221  234 #> [10438,]  206  221  234 #> [10439,]  207  222  233 #> [10440,]  206  221  233 #> [10441,]  206  221  234 #> [10442,]  206  221  233 #> [10443,]  207  222  234 #> [10444,]  206  221  234 #> [10445,]  207  222  234 #> [10446,]  207  222  234 #> [10447,]  207  222  233 #> [10448,]  206  221  233 #> [10449,]  206  221  234 #> [10450,]  206  221  234 #> [10451,]  206  221  234 #> [10452,]  206  221  233 #> [10453,]  207  222  234 #> [10454,]  206  221  233 #> [10455,]  206  221  234 #> [10456,]  207  222  234 #> [10457,]  206  221  233 #> [10458,]  206  221  234 #> [10459,]  206  221  234 #> [10460,]  206  221  234 #> [10461,]  207  222  234 #> [10462,]  206  221  233 #> [10463,]  206  221  234 #> [10464,]  207  222  234 #> [10465,]  206  221  233 #> [10466,]  206  221  234 #> [10467,]  206  221  233 #> [10468,]  206  221  234 #> [10469,]  206  221  234 #> [10470,]  207  222  233 #> [10471,]  207  222  234 #> [10472,]  207  222  233 #> [10473,]  207  222  233 #> [10474,]  207  222  233 #> [10475,]  207  222  234 #> [10476,]  207  222  233 #> [10477,]  207  222  234 #> [10478,]  206  221  234 #> [10479,]  206  221  233 #> [10480,]  206  221  234 #> [10481,]  206  221  234 #> [10482,]  207  222  233 #> [10483,]  206  221  234 #> [10484,]  207  222  234 #> [10485,]  206  221  234 #> [10486,]  206  221  233 #> [10487,]  206  221  234 #> [10488,]  207  222  233 #> [10489,]  206  221  233 #> [10490,]  206  221  234 #> [10491,]  206  221  233 #> [10492,]  206  221  234 #> [10493,]  206  221  234 #> [10494,]  207  222  233 #> [10495,]  207  222  234 #> [10496,]  206  221  234 #> [10497,]  206  221  234 #> [10498,]  206  221  233 #> [10499,]  206  221  234 #> [10500,]  207  222  234 #> [10501,]  209  224  236 #> [10502,]  209  224  236 #> [10503,]  209  224  236 #> [10504,]  208  223  235 #> [10505,]  209  224  236 #> [10506,]  209  224  236 #> [10507,]  209  224  236 #> [10508,]  208  223  235 #> [10509,]  208  223  235 #> [10510,]  208  223  235 #> [10511,]  209  224  236 #> [10512,]  209  224  236 #> [10513,]  209  224  236 #> [10514,]  209  224  236 #> [10515,]  209  224  236 #> [10516,]  209  224  236 #> [10517,]  209  224  236 #> [10518,]  209  224  236 #> [10519,]  209  224  236 #> [10520,]  209  224  236 #> [10521,]  209  224  236 #> [10522,]  209  224  236 #> [10523,]  209  224  236 #> [10524,]  209  224  236 #> [10525,]  209  224  236 #> [10526,]  209  224  236 #> [10527,]  209  224  236 #> [10528,]  209  224  236 #> [10529,]  209  224  236 #> [10530,]  209  224  236 #> [10531,]  209  224  236 #> [10532,]  209  224  236 #> [10533,]  209  224  236 #> [10534,]  209  224  236 #> [10535,]  209  224  236 #> [10536,]  209  224  236 #> [10537,]  209  224  236 #> [10538,]  209  224  236 #> [10539,]  209  224  236 #> [10540,]  209  224  236 #> [10541,]  209  224  236 #> [10542,]  209  224  236 #> [10543,]  209  224  236 #> [10544,]  209  224  236 #> [10545,]  209  224  236 #> [10546,]  209  224  236 #> [10547,]  209  224  236 #> [10548,]  209  224  236 #> [10549,]  209  224  236 #> [10550,]  209  224  236 #> [10551,]  208  223  235 #> [10552,]  209  224  236 #> [10553,]  209  224  236 #> [10554,]  209  224  236 #> [10555,]  209  224  236 #> [10556,]  209  224  236 #> [10557,]  209  224  236 #> [10558,]  209  224  236 #> [10559,]  209  224  236 #> [10560,]  209  224  236 #> [10561,]  209  224  236 #> [10562,]  209  224  236 #> [10563,]  209  224  236 #> [10564,]  209  224  236 #> [10565,]  209  224  236 #> [10566,]  209  224  236 #> [10567,]  209  224  236 #> [10568,]  209  224  236 #> [10569,]  209  224  236 #> [10570,]  209  224  236 #> [10571,]  209  224  236 #> [10572,]  209  224  236 #> [10573,]  209  224  236 #> [10574,]  209  224  236 #> [10575,]  209  224  236 #> [10576,]  209  224  236 #> [10577,]  209  224  236 #> [10578,]  209  224  236 #> [10579,]  209  224  236 #> [10580,]  209  224  236 #> [10581,]  209  224  236 #> [10582,]  209  224  236 #> [10583,]  209  224  236 #> [10584,]  209  224  236 #> [10585,]  208  223  235 #> [10586,]  209  224  236 #> [10587,]  209  224  236 #> [10588,]  209  224  236 #> [10589,]  209  224  236 #> [10590,]  209  224  236 #> [10591,]  208  223  235 #> [10592,]  209  224  236 #> [10593,]  209  224  236 #> [10594,]  209  224  236 #> [10595,]  208  223  235 #> [10596,]  209  224  236 #> [10597,]  209  224  236 #> [10598,]  209  224  236 #> [10599,]  209  224  236 #> [10600,]  209  224  236 #> [10601,]  212  226  238 #> [10602,]  210  225  237 #> [10603,]  210  225  237 #> [10604,]  210  225  237 #> [10605,]  212  226  238 #> [10606,]  210  225  237 #> [10607,]  210  225  237 #> [10608,]  210  225  237 #> [10609,]  210  225  237 #> [10610,]  212  226  238 #> [10611,]  212  226  238 #> [10612,]  212  226  238 #> [10613,]  210  225  237 #> [10614,]  212  226  238 #> [10615,]  212  226  238 #> [10616,]  210  225  237 #> [10617,]  212  226  238 #> [10618,]  212  226  238 #> [10619,]  211  226  238 #> [10620,]  210  225  237 #> [10621,]  210  225  237 #> [10622,]  212  226  238 #> [10623,]  210  225  237 #> [10624,]  212  226  238 #> [10625,]  210  225  237 #> [10626,]  212  226  238 #> [10627,]  212  226  238 #> [10628,]  210  225  237 #> [10629,]  210  225  237 #> [10630,]  210  225  237 #> [10631,]  212  226  238 #> [10632,]  212  226  238 #> [10633,]  210  225  237 #> [10634,]  210  225  237 #> [10635,]  210  225  237 #> [10636,]  210  225  237 #> [10637,]  210  225  237 #> [10638,]  211  226  238 #> [10639,]  212  226  238 #> [10640,]  210  225  237 #> [10641,]  210  225  237 #> [10642,]  210  225  237 #> [10643,]  212  226  238 #> [10644,]  210  225  237 #> [10645,]  210  225  237 #> [10646,]  210  225  237 #> [10647,]  212  226  238 #> [10648,]  210  225  237 #> [10649,]  210  225  237 #> [10650,]  210  225  237 #> [10651,]  212  226  238 #> [10652,]  211  226  238 #> [10653,]  210  225  237 #> [10654,]  210  225  237 #> [10655,]  210  225  237 #> [10656,]  210  225  237 #> [10657,]  210  225  237 #> [10658,]  212  226  238 #> [10659,]  212  226  238 #> [10660,]  210  225  237 #> [10661,]  212  226  238 #> [10662,]  210  225  237 #> [10663,]  210  225  237 #> [10664,]  210  225  237 #> [10665,]  210  225  237 #> [10666,]  212  226  238 #> [10667,]  210  225  237 #> [10668,]  211  226  238 #> [10669,]  210  225  237 #> [10670,]  212  226  238 #> [10671,]  212  226  238 #> [10672,]  210  225  237 #> [10673,]  210  225  237 #> [10674,]  210  225  237 #> [10675,]  212  226  238 #> [10676,]  210  225  237 #> [10677,]  212  226  238 #> [10678,]  210  225  237 #> [10679,]  212  226  238 #> [10680,]  210  225  237 #> [10681,]  210  225  237 #> [10682,]  210  225  237 #> [10683,]  212  226  238 #> [10684,]  210  225  237 #> [10685,]  210  225  237 #> [10686,]  210  225  237 #> [10687,]  212  226  238 #> [10688,]  210  225  237 #> [10689,]  210  225  237 #> [10690,]  212  226  238 #> [10691,]  212  226  238 #> [10692,]  212  226  238 #> [10693,]  210  225  237 #> [10694,]  210  225  237 #> [10695,]  212  226  238 #> [10696,]  211  226  238 #> [10697,]  210  225  237 #> [10698,]  210  225  237 #> [10699,]  210  225  237 #> [10700,]  212  226  238 #> [10701,]  214  228  240 #> [10702,]  214  228  240 #> [10703,]  213  227  239 #> [10704,]  213  227  239 #> [10705,]  214  228  240 #> [10706,]  214  228  240 #> [10707,]  213  227  239 #> [10708,]  213  227  239 #> [10709,]  214  228  240 #> [10710,]  214  228  240 #> [10711,]  214  228  240 #> [10712,]  213  227  239 #> [10713,]  214  228  240 #> [10714,]  214  228  240 #> [10715,]  214  228  240 #> [10716,]  214  228  240 #> [10717,]  214  228  240 #> [10718,]  214  228  240 #> [10719,]  214  228  240 #> [10720,]  214  228  240 #> [10721,]  214  228  240 #> [10722,]  214  228  240 #> [10723,]  213  227  239 #> [10724,]  214  228  240 #> [10725,]  213  227  239 #> [10726,]  214  228  240 #> [10727,]  214  228  240 #> [10728,]  214  228  240 #> [10729,]  214  228  240 #> [10730,]  214  228  240 #> [10731,]  213  227  239 #> [10732,]  214  228  240 #> [10733,]  214  228  240 #> [10734,]  214  228  240 #> [10735,]  214  228  240 #> [10736,]  214  228  240 #> [10737,]  213  227  239 #> [10738,]  214  228  240 #> [10739,]  214  228  240 #> [10740,]  213  227  239 #> [10741,]  214  228  240 #> [10742,]  214  228  240 #> [10743,]  214  228  240 #> [10744,]  214  228  240 #> [10745,]  214  228  240 #> [10746,]  213  227  239 #> [10747,]  213  227  239 #> [10748,]  214  228  240 #> [10749,]  214  228  240 #> [10750,]  214  228  240 #> [10751,]  214  228  240 #> [10752,]  213  227  239 #> [10753,]  214  228  240 #> [10754,]  214  228  240 #> [10755,]  213  227  239 #> [10756,]  214  228  240 #> [10757,]  213  227  239 #> [10758,]  214  228  240 #> [10759,]  213  227  239 #> [10760,]  213  227  239 #> [10761,]  214  228  240 #> [10762,]  214  228  240 #> [10763,]  214  228  240 #> [10764,]  214  228  240 #> [10765,]  214  228  240 #> [10766,]  214  228  240 #> [10767,]  214  228  240 #> [10768,]  213  227  239 #> [10769,]  214  228  240 #> [10770,]  214  228  240 #> [10771,]  214  228  240 #> [10772,]  214  228  240 #> [10773,]  214  228  240 #> [10774,]  213  227  239 #> [10775,]  214  228  240 #> [10776,]  214  228  240 #> [10777,]  214  228  240 #> [10778,]  214  228  240 #> [10779,]  214  228  240 #> [10780,]  213  227  239 #> [10781,]  214  228  240 #> [10782,]  214  228  240 #> [10783,]  214  228  240 #> [10784,]  214  228  240 #> [10785,]  214  228  240 #> [10786,]  213  227  239 #> [10787,]  214  228  240 #> [10788,]  214  228  240 #> [10789,]  214  228  240 #> [10790,]  214  228  240 #> [10791,]  214  228  240 #> [10792,]  214  228  240 #> [10793,]  214  228  240 #> [10794,]  214  228  240 #> [10795,]  214  228  240 #> [10796,]  213  227  239 #> [10797,]  213  227  239 #> [10798,]  213  227  239 #> [10799,]  214  228  240 #> [10800,]  214  228  240 #> [10801,]  217  230  242 #> [10802,]  216  230  242 #> [10803,]  215  229  241 #> [10804,]  217  230  242 #> [10805,]  216  230  242 #> [10806,]  216  230  242 #> [10807,]  215  229  241 #> [10808,]  215  229  241 #> [10809,]  217  230  242 #> [10810,]  217  230  242 #> [10811,]  216  230  242 #> [10812,]  216  230  242 #> [10813,]  215  229  241 #> [10814,]  216  230  242 #> [10815,]  217  230  242 #> [10816,]  215  229  241 #> [10817,]  217  230  242 #> [10818,]  217  230  242 #> [10819,]  216  230  242 #> [10820,]  215  229  241 #> [10821,]  217  230  242 #> [10822,]  215  229  241 #> [10823,]  217  230  242 #> [10824,]  215  229  241 #> [10825,]  215  229  241 #> [10826,]  216  230  242 #> [10827,]  217  230  242 #> [10828,]  217  230  242 #> [10829,]  216  230  242 #> [10830,]  216  230  242 #> [10831,]  216  230  242 #> [10832,]  216  230  242 #> [10833,]  216  230  242 #> [10834,]  216  230  242 #> [10835,]  216  230  242 #> [10836,]  216  230  242 #> [10837,]  217  230  242 #> [10838,]  216  230  242 #> [10839,]  215  229  241 #> [10840,]  215  229  241 #> [10841,]  216  230  242 #> [10842,]  216  230  242 #> [10843,]  217  230  242 #> [10844,]  215  229  241 #> [10845,]  217  230  242 #> [10846,]  215  229  241 #> [10847,]  217  230  242 #> [10848,]  216  230  242 #> [10849,]  215  229  241 #> [10850,]  215  229  241 #> [10851,]  216  230  242 #> [10852,]  216  230  242 #> [10853,]  215  229  241 #> [10854,]  216  230  242 #> [10855,]  215  229  241 #> [10856,]  215  229  241 #> [10857,]  216  230  242 #> [10858,]  216  230  242 #> [10859,]  215  229  241 #> [10860,]  216  230  242 #> [10861,]  217  230  242 #> [10862,]  216  230  242 #> [10863,]  215  229  241 #> [10864,]  217  230  242 #> [10865,]  215  229  241 #> [10866,]  215  229  241 #> [10867,]  216  230  242 #> [10868,]  216  230  242 #> [10869,]  216  230  242 #> [10870,]  215  229  241 #> [10871,]  217  230  242 #> [10872,]  215  229  241 #> [10873,]  217  230  242 #> [10874,]  217  230  242 #> [10875,]  217  230  242 #> [10876,]  217  230  242 #> [10877,]  217  230  242 #> [10878,]  216  230  242 #> [10879,]  216  230  242 #> [10880,]  216  230  242 #> [10881,]  216  230  242 #> [10882,]  217  230  242 #> [10883,]  216  230  242 #> [10884,]  215  229  241 #> [10885,]  216  230  242 #> [10886,]  215  229  241 #> [10887,]  217  230  242 #> [10888,]  217  230  242 #> [10889,]  215  229  241 #> [10890,]  215  229  241 #> [10891,]  216  230  242 #> [10892,]  216  230  242 #> [10893,]  216  230  242 #> [10894,]  217  230  242 #> [10895,]  217  230  242 #> [10896,]  217  230  242 #> [10897,]  216  230  242 #> [10898,]  215  229  241 #> [10899,]  216  230  242 #> [10900,]  215  229  241 #> [10901,]  219  232  243 #> [10902,]  218  231  243 #> [10903,]  218  231  243 #> [10904,]  218  231  243 #> [10905,]  218  231  243 #> [10906,]  218  231  243 #> [10907,]  218  231  243 #> [10908,]  218  231  243 #> [10909,]  219  232  243 #> [10910,]  218  231  243 #> [10911,]  218  231  243 #> [10912,]  218  231  243 #> [10913,]  219  232  243 #> [10914,]  218  231  243 #> [10915,]  218  231  243 #> [10916,]  218  231  243 #> [10917,]  219  232  243 #> [10918,]  219  232  243 #> [10919,]  218  231  243 #> [10920,]  218  231  243 #> [10921,]  218  231  243 #> [10922,]  218  231  243 #> [10923,]  218  231  243 #> [10924,]  218  231  243 #> [10925,]  218  231  243 #> [10926,]  218  231  243 #> [10927,]  219  232  243 #> [10928,]  218  231  243 #> [10929,]  218  231  243 #> [10930,]  218  231  243 #> [10931,]  218  231  243 #> [10932,]  218  231  243 #> [10933,]  218  231  243 #> [10934,]  218  231  243 #> [10935,]  218  231  243 #> [10936,]  219  232  243 #> [10937,]  218  231  243 #> [10938,]  219  232  243 #> [10939,]  218  231  243 #> [10940,]  218  231  243 #> [10941,]  218  231  243 #> [10942,]  219  232  243 #> [10943,]  218  231  243 #> [10944,]  218  231  243 #> [10945,]  218  231  243 #> [10946,]  218  231  243 #> [10947,]  218  231  243 #> [10948,]  218  231  243 #> [10949,]  218  231  243 #> [10950,]  218  231  243 #> [10951,]  219  232  243 #> [10952,]  218  231  243 #> [10953,]  219  232  243 #> [10954,]  219  232  243 #> [10955,]  218  231  243 #> [10956,]  219  232  243 #> [10957,]  218  231  243 #> [10958,]  218  231  243 #> [10959,]  218  231  243 #> [10960,]  218  231  243 #> [10961,]  218  231  243 #> [10962,]  218  231  243 #> [10963,]  218  231  243 #> [10964,]  218  231  243 #> [10965,]  219  232  243 #> [10966,]  219  232  243 #> [10967,]  218  231  243 #> [10968,]  218  231  243 #> [10969,]  218  231  243 #> [10970,]  218  231  243 #> [10971,]  218  231  243 #> [10972,]  218  231  243 #> [10973,]  218  231  243 #> [10974,]  218  231  243 #> [10975,]  218  231  243 #> [10976,]  218  231  243 #> [10977,]  219  232  243 #> [10978,]  218  231  243 #> [10979,]  219  232  243 #> [10980,]  218  231  243 #> [10981,]  218  231  243 #> [10982,]  219  232  243 #> [10983,]  219  232  243 #> [10984,]  219  232  243 #> [10985,]  218  231  243 #> [10986,]  218  231  243 #> [10987,]  219  232  243 #> [10988,]  218  231  243 #> [10989,]  218  231  243 #> [10990,]  218  231  243 #> [10991,]  219  232  243 #> [10992,]  218  231  243 #> [10993,]  219  232  243 #> [10994,]  219  232  243 #> [10995,]  218  231  243 #> [10996,]  218  231  243 #> [10997,]  218  231  243 #> [10998,]  218  231  243 #> [10999,]  218  231  243 #> [11000,]  218  231  243 #> [11001,]  221  234  245 #> [11002,]  221  234  245 #> [11003,]  220  233  244 #> [11004,]  221  234  245 #> [11005,]  220  233  244 #> [11006,]  220  233  244 #> [11007,]  221  234  245 #> [11008,]  221  234  245 #> [11009,]  221  234  245 #> [11010,]  221  234  245 #> [11011,]  220  233  244 #> [11012,]  220  233  244 #> [11013,]  221  234  245 #> [11014,]  220  233  244 #> [11015,]  221  234  245 #> [11016,]  221  234  245 #> [11017,]  221  234  245 #> [11018,]  221  234  245 #> [11019,]  220  233  244 #> [11020,]  220  233  244 #> [11021,]  221  234  245 #> [11022,]  220  233  244 #> [11023,]  221  234  245 #> [11024,]  220  233  244 #> [11025,]  221  234  245 #> [11026,]  220  233  244 #> [11027,]  221  234  245 #> [11028,]  221  234  245 #> [11029,]  220  233  244 #> [11030,]  220  233  244 #> [11031,]  221  234  245 #> [11032,]  220  233  244 #> [11033,]  220  233  244 #> [11034,]  220  233  244 #> [11035,]  220  233  244 #> [11036,]  220  233  244 #> [11037,]  221  234  245 #> [11038,]  221  234  245 #> [11039,]  221  234  245 #> [11040,]  220  233  244 #> [11041,]  220  233  244 #> [11042,]  220  233  244 #> [11043,]  221  234  245 #> [11044,]  221  234  245 #> [11045,]  221  234  245 #> [11046,]  221  234  245 #> [11047,]  221  234  245 #> [11048,]  220  233  244 #> [11049,]  221  234  245 #> [11050,]  221  234  245 #> [11051,]  220  233  244 #> [11052,]  220  233  244 #> [11053,]  221  234  245 #> [11054,]  220  233  244 #> [11055,]  220  233  244 #> [11056,]  221  234  245 #> [11057,]  220  233  244 #> [11058,]  220  233  244 #> [11059,]  221  234  245 #> [11060,]  220  233  244 #> [11061,]  221  234  245 #> [11062,]  220  233  244 #> [11063,]  220  233  244 #> [11064,]  221  234  245 #> [11065,]  221  234  245 #> [11066,]  220  233  244 #> [11067,]  220  233  244 #> [11068,]  220  233  244 #> [11069,]  220  233  244 #> [11070,]  221  234  245 #> [11071,]  221  234  245 #> [11072,]  221  234  245 #> [11073,]  221  234  245 #> [11074,]  221  234  245 #> [11075,]  221  234  245 #> [11076,]  221  234  245 #> [11077,]  221  234  245 #> [11078,]  220  233  244 #> [11079,]  221  234  245 #> [11080,]  220  233  244 #> [11081,]  220  233  244 #> [11082,]  221  234  245 #> [11083,]  220  233  244 #> [11084,]  221  234  245 #> [11085,]  221  234  245 #> [11086,]  221  234  245 #> [11087,]  221  234  245 #> [11088,]  221  234  245 #> [11089,]  220  233  244 #> [11090,]  221  234  245 #> [11091,]  220  233  244 #> [11092,]  221  234  245 #> [11093,]  220  233  244 #> [11094,]  221  234  245 #> [11095,]  221  234  245 #> [11096,]  221  234  245 #> [11097,]  221  234  245 #> [11098,]  220  233  244 #> [11099,]  220  233  244 #> [11100,]  221  234  245 #> [11101,]  223  236  247 #> [11102,]  222  235  246 #> [11103,]  223  236  247 #> [11104,]  223  236  247 #> [11105,]  223  236  247 #> [11106,]  222  235  246 #> [11107,]  223  236  247 #> [11108,]  223  236  247 #> [11109,]  223  236  247 #> [11110,]  223  236  247 #> [11111,]  222  235  246 #> [11112,]  222  235  246 #> [11113,]  223  236  247 #> [11114,]  223  236  247 #> [11115,]  222  235  246 #> [11116,]  223  236  247 #> [11117,]  222  235  246 #> [11118,]  223  236  247 #> [11119,]  222  235  246 #> [11120,]  223  236  247 #> [11121,]  223  236  247 #> [11122,]  223  236  247 #> [11123,]  222  235  246 #> [11124,]  223  236  247 #> [11125,]  223  236  247 #> [11126,]  222  235  246 #> [11127,]  223  236  247 #> [11128,]  223  236  247 #> [11129,]  222  235  246 #> [11130,]  222  235  246 #> [11131,]  222  235  246 #> [11132,]  223  236  247 #> [11133,]  223  236  247 #> [11134,]  222  235  246 #> [11135,]  222  235  246 #> [11136,]  223  236  247 #> [11137,]  222  235  246 #> [11138,]  223  236  247 #> [11139,]  223  236  247 #> [11140,]  223  236  247 #> [11141,]  223  236  247 #> [11142,]  222  235  246 #> [11143,]  222  235  246 #> [11144,]  222  235  246 #> [11145,]  223  236  247 #> [11146,]  222  235  246 #> [11147,]  222  235  246 #> [11148,]  222  235  246 #> [11149,]  223  236  247 #> [11150,]  223  236  247 #> [11151,]  223  236  247 #> [11152,]  223  236  247 #> [11153,]  223  236  247 #> [11154,]  223  236  247 #> [11155,]  223  236  247 #> [11156,]  222  235  246 #> [11157,]  223  236  247 #> [11158,]  223  236  247 #> [11159,]  223  236  247 #> [11160,]  222  235  246 #> [11161,]  222  235  246 #> [11162,]  223  236  247 #> [11163,]  222  235  246 #> [11164,]  222  235  246 #> [11165,]  222  235  246 #> [11166,]  222  235  246 #> [11167,]  223  236  247 #> [11168,]  222  235  246 #> [11169,]  223  236  247 #> [11170,]  222  235  246 #> [11171,]  223  236  247 #> [11172,]  223  236  247 #> [11173,]  223  236  247 #> [11174,]  223  236  247 #> [11175,]  222  235  246 #> [11176,]  223  236  247 #> [11177,]  223  236  247 #> [11178,]  222  235  246 #> [11179,]  222  235  246 #> [11180,]  223  236  247 #> [11181,]  222  235  246 #> [11182,]  223  236  247 #> [11183,]  223  236  247 #> [11184,]  223  236  247 #> [11185,]  223  236  247 #> [11186,]  223  236  247 #> [11187,]  223  236  247 #> [11188,]  223  236  247 #> [11189,]  223  236  247 #> [11190,]  223  236  247 #> [11191,]  223  236  247 #> [11192,]  222  235  246 #> [11193,]  223  236  247 #> [11194,]  222  235  246 #> [11195,]  222  235  246 #> [11196,]  222  235  246 #> [11197,]  223  236  247 #> [11198,]  223  236  247 #> [11199,]  223  236  247 #> [11200,]  222  235  246 #> [11201,]  224  237  248 #> [11202,]  225  238  249 #> [11203,]  224  237  248 #> [11204,]  224  237  248 #> [11205,]  225  238  249 #> [11206,]  224  237  248 #> [11207,]  225  238  249 #> [11208,]  224  237  248 #> [11209,]  225  238  249 #> [11210,]  225  238  249 #> [11211,]  224  237  248 #> [11212,]  225  238  249 #> [11213,]  225  238  249 #> [11214,]  224  237  248 #> [11215,]  224  237  248 #> [11216,]  224  237  248 #> [11217,]  225  238  249 #> [11218,]  225  238  249 #> [11219,]  224  237  248 #> [11220,]  225  238  249 #> [11221,]  225  238  249 #> [11222,]  225  238  249 #> [11223,]  225  238  249 #> [11224,]  225  238  249 #> [11225,]  225  238  249 #> [11226,]  224  237  248 #> [11227,]  225  238  249 #> [11228,]  224  237  248 #> [11229,]  225  238  249 #> [11230,]  225  238  249 #> [11231,]  225  238  249 #> [11232,]  225  238  249 #> [11233,]  225  238  249 #> [11234,]  224  237  248 #> [11235,]  224  237  248 #> [11236,]  225  238  249 #> [11237,]  224  237  248 #> [11238,]  224  237  248 #> [11239,]  225  238  249 #> [11240,]  225  238  249 #> [11241,]  225  238  249 #> [11242,]  224  237  248 #> [11243,]  225  238  249 #> [11244,]  225  238  249 #> [11245,]  224  237  248 #> [11246,]  224  237  248 #> [11247,]  225  238  249 #> [11248,]  225  238  249 #> [11249,]  224  237  248 #> [11250,]  225  238  249 #> [11251,]  225  238  249 #> [11252,]  224  237  248 #> [11253,]  225  238  249 #> [11254,]  225  238  249 #> [11255,]  224  237  248 #> [11256,]  224  237  248 #> [11257,]  224  237  248 #> [11258,]  225  238  249 #> [11259,]  224  237  248 #> [11260,]  225  238  249 #> [11261,]  225  238  249 #> [11262,]  224  237  248 #> [11263,]  225  238  249 #> [11264,]  224  237  248 #> [11265,]  224  237  248 #> [11266,]  225  238  249 #> [11267,]  225  238  249 #> [11268,]  224  237  248 #> [11269,]  224  237  248 #> [11270,]  225  238  249 #> [11271,]  225  238  249 #> [11272,]  224  237  248 #> [11273,]  224  237  248 #> [11274,]  225  238  249 #> [11275,]  225  238  249 #> [11276,]  225  238  249 #> [11277,]  224  237  248 #> [11278,]  225  238  249 #> [11279,]  224  237  248 #> [11280,]  225  238  249 #> [11281,]  225  238  249 #> [11282,]  224  237  248 #> [11283,]  225  238  249 #> [11284,]  225  238  249 #> [11285,]  225  238  249 #> [11286,]  225  238  249 #> [11287,]  225  238  249 #> [11288,]  225  238  249 #> [11289,]  224  237  248 #> [11290,]  225  238  249 #> [11291,]  224  237  248 #> [11292,]  225  238  249 #> [11293,]  225  238  249 #> [11294,]  224  237  248 #> [11295,]  225  238  249 #> [11296,]  224  237  248 #> [11297,]  224  237  248 #> [11298,]  225  238  249 #> [11299,]  225  238  249 #> [11300,]  224  237  248 #> [11301,]  227  240  251 #> [11302,]  226  239  250 #> [11303,]  226  239  250 #> [11304,]  226  239  250 #> [11305,]  226  239  250 #> [11306,]  226  239  250 #> [11307,]  226  239  250 #> [11308,]  226  239  250 #> [11309,]  227  240  251 #> [11310,]  226  239  250 #> [11311,]  227  240  251 #> [11312,]  226  239  250 #> [11313,]  227  240  251 #> [11314,]  226  239  250 #> [11315,]  226  239  250 #> [11316,]  226  239  250 #> [11317,]  227  240  251 #> [11318,]  227  240  251 #> [11319,]  226  239  250 #> [11320,]  227  240  251 #> [11321,]  226  239  250 #> [11322,]  226  239  250 #> [11323,]  226  239  250 #> [11324,]  226  239  250 #> [11325,]  226  239  250 #> [11326,]  226  239  250 #> [11327,]  227  240  251 #> [11328,]  227  240  251 #> [11329,]  227  240  251 #> [11330,]  226  239  250 #> [11331,]  226  239  250 #> [11332,]  226  239  250 #> [11333,]  227  240  251 #> [11334,]  226  239  250 #> [11335,]  226  239  250 #> [11336,]  227  240  251 #> [11337,]  226  239  250 #> [11338,]  227  240  251 #> [11339,]  227  240  251 #> [11340,]  226  239  250 #> [11341,]  227  240  251 #> [11342,]  227  240  251 #> [11343,]  226  239  250 #> [11344,]  226  239  250 #> [11345,]  226  239  250 #> [11346,]  226  239  250 #> [11347,]  226  239  250 #> [11348,]  226  239  250 #> [11349,]  226  239  250 #> [11350,]  226  239  250 #> [11351,]  227  240  251 #> [11352,]  226  239  250 #> [11353,]  227  240  251 #> [11354,]  227  240  251 #> [11355,]  226  239  250 #> [11356,]  227  240  251 #> [11357,]  226  239  250 #> [11358,]  227  240  251 #> [11359,]  226  239  250 #> [11360,]  226  239  250 #> [11361,]  226  239  250 #> [11362,]  227  240  251 #> [11363,]  226  239  250 #> [11364,]  226  239  250 #> [11365,]  227  240  251 #> [11366,]  227  240  251 #> [11367,]  226  239  250 #> [11368,]  226  239  250 #> [11369,]  226  239  250 #> [11370,]  227  240  251 #> [11371,]  226  239  250 #> [11372,]  226  239  250 #> [11373,]  226  239  250 #> [11374,]  226  239  250 #> [11375,]  226  239  250 #> [11376,]  226  239  250 #> [11377,]  227  240  251 #> [11378,]  226  239  250 #> [11379,]  227  240  251 #> [11380,]  226  239  250 #> [11381,]  226  239  250 #> [11382,]  227  240  251 #> [11383,]  227  240  251 #> [11384,]  227  240  251 #> [11385,]  227  240  251 #> [11386,]  226  239  250 #> [11387,]  227  240  251 #> [11388,]  226  239  250 #> [11389,]  227  240  251 #> [11390,]  227  240  251 #> [11391,]  227  240  251 #> [11392,]  226  239  250 #> [11393,]  227  240  251 #> [11394,]  227  240  251 #> [11395,]  226  239  250 #> [11396,]  226  239  250 #> [11397,]  226  239  250 #> [11398,]  226  239  250 #> [11399,]  226  239  250 #> [11400,]  226  239  250 #> [11401,]  228  241  253 #> [11402,]  228  241  252 #> [11403,]  229  242  252 #> [11404,]  228  241  252 #> [11405,]  228  241  253 #> [11406,]  228  241  252 #> [11407,]  230  242  252 #> [11408,]  230  242  252 #> [11409,]  228  241  252 #> [11410,]  228  241  252 #> [11411,]  228  241  252 #> [11412,]  228  241  252 #> [11413,]  230  242  252 #> [11414,]  228  241  253 #> [11415,]  228  241  253 #> [11416,]  230  242  252 #> [11417,]  228  241  252 #> [11418,]  228  241  253 #> [11419,]  228  241  252 #> [11420,]  230  242  252 #> [11421,]  228  241  252 #> [11422,]  230  242  252 #> [11423,]  228  241  252 #> [11424,]  229  242  252 #> [11425,]  229  242  252 #> [11426,]  228  241  253 #> [11427,]  228  241  253 #> [11428,]  228  241  252 #> [11429,]  228  241  252 #> [11430,]  228  241  252 #> [11431,]  228  241  253 #> [11432,]  228  241  253 #> [11433,]  228  241  252 #> [11434,]  228  241  252 #> [11435,]  228  241  252 #> [11436,]  228  241  252 #> [11437,]  228  241  252 #> [11438,]  228  241  252 #> [11439,]  229  242  252 #> [11440,]  229  242  252 #> [11441,]  228  241  252 #> [11442,]  228  241  252 #> [11443,]  228  241  253 #> [11444,]  230  242  252 #> [11445,]  228  241  252 #> [11446,]  230  242  252 #> [11447,]  228  241  252 #> [11448,]  228  241  252 #> [11449,]  230  242  252 #> [11450,]  230  242  252 #> [11451,]  228  241  252 #> [11452,]  228  241  252 #> [11453,]  230  242  252 #> [11454,]  228  241  252 #> [11455,]  230  242  252 #> [11456,]  230  242  252 #> [11457,]  228  241  252 #> [11458,]  228  241  253 #> [11459,]  230  242  253 #> [11460,]  228  241  252 #> [11461,]  228  241  253 #> [11462,]  228  241  252 #> [11463,]  228  241  252 #> [11464,]  228  241  252 #> [11465,]  229  242  252 #> [11466,]  230  242  253 #> [11467,]  228  241  252 #> [11468,]  228  241  252 #> [11469,]  228  241  252 #> [11470,]  229  242  253 #> [11471,]  228  241  253 #> [11472,]  229  242  252 #> [11473,]  228  241  252 #> [11474,]  228  241  252 #> [11475,]  228  241  253 #> [11476,]  228  241  252 #> [11477,]  228  241  252 #> [11478,]  228  241  252 #> [11479,]  228  241  253 #> [11480,]  228  241  252 #> [11481,]  228  241  252 #> [11482,]  228  241  252 #> [11483,]  228  241  252 #> [11484,]  230  242  252 #> [11485,]  228  241  252 #> [11486,]  229  242  252 #> [11487,]  228  241  253 #> [11488,]  228  241  252 #> [11489,]  229  242  252 #> [11490,]  230  242  252 #> [11491,]  228  241  253 #> [11492,]  228  241  252 #> [11493,]  228  241  252 #> [11494,]  228  241  252 #> [11495,]  228  241  253 #> [11496,]  228  241  252 #> [11497,]  228  241  252 #> [11498,]  229  242  252 #> [11499,]  228  241  252 #> [11500,]  230  242  253 #> [11501,]  231  244  255 #> [11502,]  231  244  255 #> [11503,]  231  243  254 #> [11504,]  231  244  255 #> [11505,]  231  244  255 #> [11506,]  231  244  255 #> [11507,]  231  243  254 #> [11508,]  231  243  254 #> [11509,]  231  244  255 #> [11510,]  231  244  255 #> [11511,]  231  244  255 #> [11512,]  231  244  255 #> [11513,]  231  243  254 #> [11514,]  231  244  255 #> [11515,]  231  244  255 #> [11516,]  231  243  254 #> [11517,]  231  244  255 #> [11518,]  231  244  255 #> [11519,]  231  244  255 #> [11520,]  231  243  254 #> [11521,]  231  244  255 #> [11522,]  231  243  254 #> [11523,]  231  244  255 #> [11524,]  231  243  254 #> [11525,]  231  243  254 #> [11526,]  231  244  255 #> [11527,]  231  244  255 #> [11528,]  231  244  255 #> [11529,]  231  244  255 #> [11530,]  231  244  255 #> [11531,]  231  244  255 #> [11532,]  231  244  255 #> [11533,]  231  244  255 #> [11534,]  231  244  255 #> [11535,]  231  244  255 #> [11536,]  231  244  255 #> [11537,]  231  244  255 #> [11538,]  231  244  255 #> [11539,]  231  243  254 #> [11540,]  231  243  254 #> [11541,]  231  244  255 #> [11542,]  231  244  255 #> [11543,]  231  244  255 #> [11544,]  231  243  254 #> [11545,]  231  244  255 #> [11546,]  231  243  254 #> [11547,]  231  244  255 #> [11548,]  231  244  255 #> [11549,]  231  243  254 #> [11550,]  231  243  254 #> [11551,]  231  244  255 #> [11552,]  231  244  255 #> [11553,]  231  243  254 #> [11554,]  231  244  255 #> [11555,]  231  243  254 #> [11556,]  231  243  254 #> [11557,]  231  244  255 #> [11558,]  231  244  255 #> [11559,]  231  243  254 #> [11560,]  231  244  255 #> [11561,]  231  244  255 #> [11562,]  231  244  255 #> [11563,]  231  243  254 #> [11564,]  231  244  255 #> [11565,]  231  243  254 #> [11566,]  231  243  254 #> [11567,]  231  244  255 #> [11568,]  231  244  255 #> [11569,]  231  244  255 #> [11570,]  231  243  254 #> [11571,]  231  244  255 #> [11572,]  231  243  254 #> [11573,]  231  244  255 #> [11574,]  231  244  255 #> [11575,]  231  244  255 #> [11576,]  231  244  255 #> [11577,]  231  244  255 #> [11578,]  231  244  255 #> [11579,]  231  244  255 #> [11580,]  231  244  255 #> [11581,]  231  244  255 #> [11582,]  231  244  255 #> [11583,]  231  244  255 #> [11584,]  231  243  254 #> [11585,]  231  244  255 #> [11586,]  231  243  254 #> [11587,]  231  244  255 #> [11588,]  231  244  255 #> [11589,]  231  243  254 #> [11590,]  231  243  254 #> [11591,]  231  244  255 #> [11592,]  231  244  255 #> [11593,]  231  244  255 #> [11594,]  231  244  255 #> [11595,]  231  244  255 #> [11596,]  231  244  255 #> [11597,]  231  244  255 #> [11598,]  231  243  254 #> [11599,]  231  244  255 #> [11600,]  231  243  254 #> [11601,]  232  245  256 #> [11602,]  232  245  256 #> [11603,]  232  245  256 #> [11604,]  233  246  257 #> [11605,]  232  245  256 #> [11606,]  232  245  256 #> [11607,]  232  245  256 #> [11608,]  232  245  256 #> [11609,]  232  245  256 #> [11610,]  233  246  257 #> [11611,]  232  245  256 #> [11612,]  232  245  256 #> [11613,]  232  245  256 #> [11614,]  232  245  256 #> [11615,]  232  245  256 #> [11616,]  232  245  256 #> [11617,]  232  245  256 #> [11618,]  233  246  257 #> [11619,]  232  245  256 #> [11620,]  232  245  256 #> [11621,]  233  246  257 #> [11622,]  232  245  256 #> [11623,]  232  245  256 #> [11624,]  232  245  256 #> [11625,]  233  246  257 #> [11626,]  232  245  256 #> [11627,]  232  245  256 #> [11628,]  232  245  256 #> [11629,]  232  245  256 #> [11630,]  232  245  256 #> [11631,]  232  245  256 #> [11632,]  232  245  256 #> [11633,]  232  245  256 #> [11634,]  232  245  256 #> [11635,]  232  245  256 #> [11636,]  232  245  256 #> [11637,]  232  245  256 #> [11638,]  232  245  256 #> [11639,]  233  246  257 #> [11640,]  232  245  256 #> [11641,]  232  245  256 #> [11642,]  232  245  256 #> [11643,]  233  246  257 #> [11644,]  232  245  256 #> [11645,]  233  246  257 #> [11646,]  232  245  256 #> [11647,]  232  245  256 #> [11648,]  232  245  256 #> [11649,]  232  245  256 #> [11650,]  232  245  256 #> [11651,]  232  245  256 #> [11652,]  232  245  256 #> [11653,]  233  246  257 #> [11654,]  232  245  256 #> [11655,]  232  245  256 #> [11656,]  232  245  256 #> [11657,]  232  245  256 #> [11658,]  232  245  256 #> [11659,]  232  245  256 #> [11660,]  232  245  256 #> [11661,]  233  246  257 #> [11662,]  232  245  256 #> [11663,]  232  245  256 #> [11664,]  232  245  256 #> [11665,]  232  245  256 #> [11666,]  232  245  256 #> [11667,]  232  245  256 #> [11668,]  232  245  256 #> [11669,]  232  245  256 #> [11670,]  232  245  256 #> [11671,]  232  245  256 #> [11672,]  233  246  257 #> [11673,]  233  246  257 #> [11674,]  233  246  257 #> [11675,]  233  246  257 #> [11676,]  233  246  257 #> [11677,]  233  246  257 #> [11678,]  232  245  256 #> [11679,]  232  245  256 #> [11680,]  232  245  256 #> [11681,]  232  245  256 #> [11682,]  232  245  256 #> [11683,]  232  245  256 #> [11684,]  233  246  257 #> [11685,]  232  245  256 #> [11686,]  232  245  256 #> [11687,]  232  245  256 #> [11688,]  232  245  256 #> [11689,]  232  245  256 #> [11690,]  232  245  256 #> [11691,]  232  245  256 #> [11692,]  232  245  256 #> [11693,]  232  245  256 #> [11694,]  233  246  257 #> [11695,]  233  246  257 #> [11696,]  232  245  256 #> [11697,]  232  245  256 #> [11698,]  232  245  256 #> [11699,]  232  245  256 #> [11700,]  233  246  257 #> [11701,]  234  247  260 #> [11702,]  234  247  260 #> [11703,]  234  247  260 #> [11704,]  234  247  260 #> [11705,]  234  247  260 #> [11706,]  234  247  260 #> [11707,]  235  248  258 #> [11708,]  234  247  260 #> [11709,]  234  247  260 #> [11710,]  234  247  260 #> [11711,]  234  247  260 #> [11712,]  234  247  260 #> [11713,]  234  247  260 #> [11714,]  234  247  260 #> [11715,]  234  247  260 #> [11716,]  235  248  258 #> [11717,]  234  247  260 #> [11718,]  234  247  260 #> [11719,]  234  247  260 #> [11720,]  235  248  258 #> [11721,]  234  247  259 #> [11722,]  234  247  260 #> [11723,]  234  247  259 #> [11724,]  235  248  258 #> [11725,]  234  247  260 #> [11726,]  234  247  260 #> [11727,]  234  247  260 #> [11728,]  235  248  258 #> [11729,]  234  247  260 #> [11730,]  234  247  259 #> [11731,]  234  247  260 #> [11732,]  234  247  260 #> [11733,]  234  247  260 #> [11734,]  234  247  260 #> [11735,]  234  247  260 #> [11736,]  234  247  260 #> [11737,]  234  247  260 #> [11738,]  234  247  260 #> [11739,]  234  247  259 #> [11740,]  234  247  260 #> [11741,]  234  247  260 #> [11742,]  234  247  260 #> [11743,]  234  247  260 #> [11744,]  234  247  260 #> [11745,]  234  247  260 #> [11746,]  234  247  260 #> [11747,]  234  247  260 #> [11748,]  234  247  260 #> [11749,]  234  247  259 #> [11750,]  235  248  258 #> [11751,]  234  247  260 #> [11752,]  235  248  258 #> [11753,]  234  247  260 #> [11754,]  234  247  259 #> [11755,]  234  247  260 #> [11756,]  234  247  260 #> [11757,]  234  247  260 #> [11758,]  234  247  260 #> [11759,]  234  247  260 #> [11760,]  234  247  260 #> [11761,]  234  247  260 #> [11762,]  234  247  259 #> [11763,]  234  247  260 #> [11764,]  234  247  260 #> [11765,]  234  247  260 #> [11766,]  234  247  260 #> [11767,]  234  247  260 #> [11768,]  234  247  260 #> [11769,]  234  247  260 #> [11770,]  234  247  259 #> [11771,]  234  247  260 #> [11772,]  234  247  260 #> [11773,]  234  247  260 #> [11774,]  234  247  260 #> [11775,]  234  247  260 #> [11776,]  235  248  258 #> [11777,]  234  247  260 #> [11778,]  234  247  260 #> [11779,]  234  247  260 #> [11780,]  234  247  259 #> [11781,]  234  247  260 #> [11782,]  234  247  260 #> [11783,]  234  247  260 #> [11784,]  234  247  260 #> [11785,]  234  247  260 #> [11786,]  235  248  258 #> [11787,]  234  247  260 #> [11788,]  234  247  260 #> [11789,]  234  247  260 #> [11790,]  234  247  260 #> [11791,]  235  248  258 #> [11792,]  234  247  260 #> [11793,]  234  247  260 #> [11794,]  234  247  260 #> [11795,]  234  247  259 #> [11796,]  234  247  260 #> [11797,]  234  247  260 #> [11798,]  234  247  259 #> [11799,]  234  247  260 #> [11800,]  234  247  260 #> [11801,]  236  249  262 #> [11802,]  237  249  262 #> [11803,]  236  249  261 #> [11804,]  236  249  262 #> [11805,]  237  249  262 #> [11806,]  236  249  262 #> [11807,]  236  249  262 #> [11808,]  236  249  262 #> [11809,]  237  249  262 #> [11810,]  237  249  261 #> [11811,]  236  249  261 #> [11812,]  237  249  262 #> [11813,]  237  249  262 #> [11814,]  236  249  261 #> [11815,]  236  249  262 #> [11816,]  236  249  262 #> [11817,]  237  249  262 #> [11818,]  237  249  262 #> [11819,]  236  249  262 #> [11820,]  237  249  262 #> [11821,]  237  249  262 #> [11822,]  237  249  262 #> [11823,]  237  249  262 #> [11824,]  237  249  262 #> [11825,]  236  249  262 #> [11826,]  236  249  262 #> [11827,]  237  249  262 #> [11828,]  236  249  262 #> [11829,]  237  249  262 #> [11830,]  236  249  262 #> [11831,]  237  249  262 #> [11832,]  237  249  261 #> [11833,]  237  249  262 #> [11834,]  236  249  262 #> [11835,]  236  249  262 #> [11836,]  237  249  262 #> [11837,]  236  249  262 #> [11838,]  236  249  262 #> [11839,]  236  249  262 #> [11840,]  237  249  261 #> [11841,]  236  249  262 #> [11842,]  236  249  262 #> [11843,]  236  249  262 #> [11844,]  237  249  262 #> [11845,]  236  249  262 #> [11846,]  236  249  262 #> [11847,]  236  249  262 #> [11848,]  236  249  261 #> [11849,]  236  249  262 #> [11850,]  236  249  262 #> [11851,]  236  249  262 #> [11852,]  236  249  262 #> [11853,]  237  249  262 #> [11854,]  236  249  262 #> [11855,]  236  249  262 #> [11856,]  236  249  262 #> [11857,]  236  249  262 #> [11858,]  236  249  262 #> [11859,]  236  249  262 #> [11860,]  237  249  262 #> [11861,]  237  249  262 #> [11862,]  236  249  262 #> [11863,]  237  249  262 #> [11864,]  236  249  262 #> [11865,]  236  249  262 #> [11866,]  236  249  262 #> [11867,]  236  249  262 #> [11868,]  236  249  262 #> [11869,]  236  249  262 #> [11870,]  237  249  261 #> [11871,]  236  249  262 #> [11872,]  236  249  262 #> [11873,]  236  249  262 #> [11874,]  236  249  262 #> [11875,]  237  249  262 #> [11876,]  236  249  262 #> [11877,]  236  249  262 #> [11878,]  236  249  262 #> [11879,]  236  249  262 #> [11880,]  237  249  262 #> [11881,]  237  249  262 #> [11882,]  236  249  262 #> [11883,]  237  249  262 #> [11884,]  237  249  262 #> [11885,]  236  249  262 #> [11886,]  237  249  262 #> [11887,]  236  249  262 #> [11888,]  237  249  262 #> [11889,]  236  249  262 #> [11890,]  236  249  262 #> [11891,]  236  249  262 #> [11892,]  237  249  262 #> [11893,]  237  249  262 #> [11894,]  236  249  262 #> [11895,]  236  249  262 #> [11896,]  236  249  262 #> [11897,]  236  249  262 #> [11898,]  236  249  261 #> [11899,]  236  249  262 #> [11900,]  236  249  262 #> [11901,]  239  251  264 #> [11902,]  238  250  264 #> [11903,]  238  250  264 #> [11904,]  238  250  264 #> [11905,]  239  251  264 #> [11906,]  238  250  263 #> [11907,]  238  250  264 #> [11908,]  238  250  264 #> [11909,]  239  251  264 #> [11910,]  238  250  264 #> [11911,]  239  251  264 #> [11912,]  238  250  264 #> [11913,]  239  251  264 #> [11914,]  238  250  264 #> [11915,]  238  250  264 #> [11916,]  238  250  264 #> [11917,]  239  251  264 #> [11918,]  239  251  264 #> [11919,]  239  251  264 #> [11920,]  239  251  263 #> [11921,]  239  251  263 #> [11922,]  239  251  264 #> [11923,]  238  250  264 #> [11924,]  239  251  264 #> [11925,]  238  250  263 #> [11926,]  238  250  264 #> [11927,]  239  251  264 #> [11928,]  239  251  264 #> [11929,]  239  251  264 #> [11930,]  238  250  264 #> [11931,]  238  250  264 #> [11932,]  238  250  264 #> [11933,]  239  251  264 #> [11934,]  238  250  264 #> [11935,]  238  250  263 #> [11936,]  239  251  264 #> [11937,]  238  250  264 #> [11938,]  239  251  264 #> [11939,]  239  251  264 #> [11940,]  238  250  264 #> [11941,]  239  251  264 #> [11942,]  239  251  263 #> [11943,]  238  250  264 #> [11944,]  238  250  263 #> [11945,]  238  250  264 #> [11946,]  238  250  264 #> [11947,]  238  250  264 #> [11948,]  238  250  264 #> [11949,]  238  250  264 #> [11950,]  239  251  264 #> [11951,]  239  251  264 #> [11952,]  238  250  264 #> [11953,]  239  251  263 #> [11954,]  239  251  264 #> [11955,]  238  250  264 #> [11956,]  239  251  263 #> [11957,]  238  250  264 #> [11958,]  239  251  264 #> [11959,]  238  250  264 #> [11960,]  238  250  264 #> [11961,]  239  251  264 #> [11962,]  239  251  264 #> [11963,]  238  250  264 #> [11964,]  239  251  264 #> [11965,]  239  251  263 #> [11966,]  239  251  264 #> [11967,]  238  250  264 #> [11968,]  238  250  264 #> [11969,]  238  250  264 #> [11970,]  239  251  264 #> [11971,]  238  250  264 #> [11972,]  238  250  264 #> [11973,]  239  251  263 #> [11974,]  238  250  263 #> [11975,]  238  250  264 #> [11976,]  238  250  264 #> [11977,]  239  251  264 #> [11978,]  238  250  264 #> [11979,]  239  251  264 #> [11980,]  238  250  263 #> [11981,]  239  251  264 #> [11982,]  239  251  263 #> [11983,]  239  251  264 #> [11984,]  239  251  263 #> [11985,]  239  251  263 #> [11986,]  238  250  263 #> [11987,]  239  251  264 #> [11988,]  238  250  264 #> [11989,]  239  251  263 #> [11990,]  239  251  264 #> [11991,]  239  251  264 #> [11992,]  238  250  264 #> [11993,]  239  251  264 #> [11994,]  239  251  263 #> [11995,]  238  250  264 #> [11996,]  238  250  264 #> [11997,]  238  250  264 #> [11998,]  238  250  264 #> [11999,]  239  251  263 #> [12000,]  239  251  264 #> [12001,]  241  253  266 #> [12002,]  241  253  266 #> [12003,]  241  253  266 #> [12004,]  240  252  265 #> [12005,]  241  253  266 #> [12006,]  242  254  266 #> [12007,]  241  253  266 #> [12008,]  240  252  265 #> [12009,]  240  252  265 #> [12010,]  242  254  266 #> [12011,]  240  252  265 #> [12012,]  242  254  266 #> [12013,]  240  252  265 #> [12014,]  242  254  266 #> [12015,]  242  254  266 #> [12016,]  241  253  266 #> [12017,]  240  252  265 #> [12018,]  242  254  266 #> [12019,]  242  254  266 #> [12020,]  241  253  266 #> [12021,]  242  254  266 #> [12022,]  240  252  265 #> [12023,]  241  253  266 #> [12024,]  241  253  266 #> [12025,]  241  253  266 #> [12026,]  242  254  266 #> [12027,]  240  252  265 #> [12028,]  241  253  266 #> [12029,]  241  253  266 #> [12030,]  240  252  265 #> [12031,]  242  254  266 #> [12032,]  242  254  266 #> [12033,]  242  254  266 #> [12034,]  241  253  266 #> [12035,]  240  252  265 #> [12036,]  242  254  266 #> [12037,]  241  253  266 #> [12038,]  242  254  266 #> [12039,]  241  253  266 #> [12040,]  241  253  266 #> [12041,]  242  254  266 #> [12042,]  242  254  266 #> [12043,]  240  252  265 #> [12044,]  240  252  265 #> [12045,]  241  253  266 #> [12046,]  241  253  266 #> [12047,]  241  253  266 #> [12048,]  242  254  266 #> [12049,]  240  252  265 #> [12050,]  241  253  266 #> [12051,]  241  253  266 #> [12052,]  240  252  265 #> [12053,]  241  253  266 #> [12054,]  240  252  265 #> [12055,]  240  252  265 #> [12056,]  241  253  266 #> [12057,]  241  253  266 #> [12058,]  240  252  265 #> [12059,]  241  253  266 #> [12060,]  242  254  266 #> [12061,]  242  254  266 #> [12062,]  242  254  266 #> [12063,]  241  253  266 #> [12064,]  242  254  266 #> [12065,]  241  253  266 #> [12066,]  240  252  265 #> [12067,]  242  254  266 #> [12068,]  242  254  266 #> [12069,]  240  252  265 #> [12070,]  241  253  266 #> [12071,]  241  253  266 #> [12072,]  241  253  266 #> [12073,]  242  254  266 #> [12074,]  242  254  266 #> [12075,]  242  254  266 #> [12076,]  241  253  266 #> [12077,]  241  253  266 #> [12078,]  241  253  266 #> [12079,]  240  252  265 #> [12080,]  240  252  265 #> [12081,]  240  252  265 #> [12082,]  240  252  265 #> [12083,]  240  252  265 #> [12084,]  241  253  266 #> [12085,]  242  254  266 #> [12086,]  241  253  266 #> [12087,]  240  252  265 #> [12088,]  240  252  265 #> [12089,]  240  252  265 #> [12090,]  240  252  265 #> [12091,]  241  253  266 #> [12092,]  240  252  265 #> [12093,]  242  254  266 #> [12094,]  241  253  266 #> [12095,]  240  252  265 #> [12096,]  240  252  265 #> [12097,]  242  254  266 #> [12098,]  241  253  266 #> [12099,]  240  252  265 #> [12100,]  241  253  266 #> [12101,]  243  255  268 #> [12102,]  243  255  269 #> [12103,]  243  255  268 #> [12104,]  243  255  269 #> [12105,]  243  255  269 #> [12106,]  243  255  268 #> [12107,]  243  255  269 #> [12108,]  244  256  267 #> [12109,]  243  255  269 #> [12110,]  243  255  269 #> [12111,]  243  255  268 #> [12112,]  243  255  269 #> [12113,]  244  256  267 #> [12114,]  243  255  269 #> [12115,]  244  256  267 #> [12116,]  244  256  267 #> [12117,]  243  255  269 #> [12118,]  243  255  269 #> [12119,]  244  256  267 #> [12120,]  244  256  267 #> [12121,]  243  255  269 #> [12122,]  244  256  267 #> [12123,]  243  255  269 #> [12124,]  243  255  269 #> [12125,]  243  255  269 #> [12126,]  244  256  267 #> [12127,]  244  256  267 #> [12128,]  243  255  268 #> [12129,]  244  256  267 #> [12130,]  244  256  267 #> [12131,]  243  255  269 #> [12132,]  243  255  269 #> [12133,]  243  255  269 #> [12134,]  243  255  268 #> [12135,]  243  255  268 #> [12136,]  244  256  267 #> [12137,]  244  256  267 #> [12138,]  244  256  267 #> [12139,]  243  255  269 #> [12140,]  243  255  269 #> [12141,]  244  256  267 #> [12142,]  243  255  269 #> [12143,]  244  256  267 #> [12144,]  244  256  267 #> [12145,]  243  255  268 #> [12146,]  244  256  267 #> [12147,]  243  255  269 #> [12148,]  243  255  269 #> [12149,]  243  255  268 #> [12150,]  244  256  267 #> [12151,]  244  256  267 #> [12152,]  243  255  268 #> [12153,]  244  256  267 #> [12154,]  243  255  269 #> [12155,]  244  256  267 #> [12156,]  244  256  267 #> [12157,]  243  255  269 #> [12158,]  244  256  267 #> [12159,]  244  256  267 #> [12160,]  244  256  267 #> [12161,]  243  255  269 #> [12162,]  243  255  269 #> [12163,]  243  255  269 #> [12164,]  244  256  267 #> [12165,]  243  255  269 #> [12166,]  244  256  267 #> [12167,]  243  255  269 #> [12168,]  243  255  268 #> [12169,]  244  256  267 #> [12170,]  243  255  269 #> [12171,]  244  256  267 #> [12172,]  243  255  268 #> [12173,]  243  255  268 #> [12174,]  243  255  269 #> [12175,]  243  255  269 #> [12176,]  243  255  269 #> [12177,]  244  256  267 #> [12178,]  244  256  267 #> [12179,]  243  255  269 #> [12180,]  244  256  267 #> [12181,]  244  256  267 #> [12182,]  243  255  269 #> [12183,]  244  256  267 #> [12184,]  244  256  267 #> [12185,]  244  256  267 #> [12186,]  243  255  269 #> [12187,]  244  256  267 #> [12188,]  243  255  269 #> [12189,]  243  255  269 #> [12190,]  244  256  267 #> [12191,]  243  255  269 #> [12192,]  243  255  269 #> [12193,]  243  255  269 #> [12194,]  243  255  268 #> [12195,]  244  256  267 #> [12196,]  244  256  267 #> [12197,]  244  256  267 #> [12198,]  243  255  269 #> [12199,]  243  255  269 #> [12200,]  244  256  267 #> [12201,]  246  258  271 #> [12202,]  246  258  271 #> [12203,]  245  257  270 #> [12204,]  246  258  272 #> [12205,]  246  258  271 #> [12206,]  246  258  271 #> [12207,]  245  257  270 #> [12208,]  245  257  270 #> [12209,]  246  258  271 #> [12210,]  246  258  272 #> [12211,]  246  258  271 #> [12212,]  246  258  271 #> [12213,]  245  257  270 #> [12214,]  246  258  271 #> [12215,]  246  258  271 #> [12216,]  245  257  270 #> [12217,]  245  257  270 #> [12218,]  246  258  271 #> [12219,]  246  258  271 #> [12220,]  245  257  270 #> [12221,]  246  258  271 #> [12222,]  245  257  270 #> [12223,]  246  258  271 #> [12224,]  245  257  270 #> [12225,]  245  257  270 #> [12226,]  246  258  271 #> [12227,]  246  258  271 #> [12228,]  246  258  272 #> [12229,]  246  258  271 #> [12230,]  246  258  271 #> [12231,]  246  258  271 #> [12232,]  246  258  271 #> [12233,]  246  258  271 #> [12234,]  246  258  271 #> [12235,]  246  258  271 #> [12236,]  246  258  272 #> [12237,]  246  258  271 #> [12238,]  246  258  271 #> [12239,]  245  257  270 #> [12240,]  245  257  270 #> [12241,]  246  258  271 #> [12242,]  246  258  271 #> [12243,]  246  258  271 #> [12244,]  245  257  270 #> [12245,]  245  257  270 #> [12246,]  245  257  270 #> [12247,]  245  257  270 #> [12248,]  246  258  271 #> [12249,]  245  257  270 #> [12250,]  245  257  270 #> [12251,]  246  258  271 #> [12252,]  246  258  272 #> [12253,]  245  257  270 #> [12254,]  245  257  270 #> [12255,]  245  257  270 #> [12256,]  245  257  270 #> [12257,]  246  258  272 #> [12258,]  246  258  271 #> [12259,]  245  257  270 #> [12260,]  246  258  271 #> [12261,]  246  258  271 #> [12262,]  246  258  271 #> [12263,]  245  257  270 #> [12264,]  246  258  271 #> [12265,]  245  257  270 #> [12266,]  245  257  270 #> [12267,]  246  258  271 #> [12268,]  246  258  271 #> [12269,]  246  258  271 #> [12270,]  245  257  270 #> [12271,]  246  258  271 #> [12272,]  245  257  270 #> [12273,]  246  258  272 #> [12274,]  246  258  271 #> [12275,]  246  258  271 #> [12276,]  246  258  272 #> [12277,]  246  258  271 #> [12278,]  245  257  270 #> [12279,]  245  257  270 #> [12280,]  246  258  271 #> [12281,]  246  258  271 #> [12282,]  246  258  271 #> [12283,]  246  258  271 #> [12284,]  245  257  270 #> [12285,]  246  258  271 #> [12286,]  245  257  270 #> [12287,]  246  258  271 #> [12288,]  246  258  271 #> [12289,]  245  257  270 #> [12290,]  245  257  270 #> [12291,]  246  258  272 #> [12292,]  246  258  271 #> [12293,]  246  258  271 #> [12294,]  245  257  270 #> [12295,]  246  258  271 #> [12296,]  246  258  271 #> [12297,]  246  258  271 #> [12298,]  245  257  270 #> [12299,]  246  258  271 #> [12300,]  245  257  270 #> [12301,]  248  260  275 #> [12302,]  247  259  273 #> [12303,]  247  259  273 #> [12304,]  248  260  274 #> [12305,]  247  259  273 #> [12306,]  247  259  273 #> [12307,]  248  260  274 #> [12308,]  248  260  275 #> [12309,]  248  260  276 #> [12310,]  248  260  274 #> [12311,]  247  259  273 #> [12312,]  247  259  273 #> [12313,]  248  260  274 #> [12314,]  247  259  273 #> [12315,]  248  260  276 #> [12316,]  248  260  274 #> [12317,]  248  260  274 #> [12318,]  248  260  274 #> [12319,]  247  259  273 #> [12320,]  247  259  273 #> [12321,]  248  260  274 #> [12322,]  247  259  273 #> [12323,]  248  260  274 #> [12324,]  247  259  273 #> [12325,]  248  260  274 #> [12326,]  247  259  273 #> [12327,]  248  260  274 #> [12328,]  248  260  275 #> [12329,]  247  259  273 #> [12330,]  247  259  273 #> [12331,]  247  259  273 #> [12332,]  247  259  273 #> [12333,]  247  259  273 #> [12334,]  247  259  273 #> [12335,]  247  259  273 #> [12336,]  247  259  273 #> [12337,]  248  260  274 #> [12338,]  248  260  275 #> [12339,]  248  260  274 #> [12340,]  247  259  273 #> [12341,]  247  259  273 #> [12342,]  247  259  273 #> [12343,]  248  260  276 #> [12344,]  248  260  274 #> [12345,]  248  260  275 #> [12346,]  248  260  276 #> [12347,]  248  260  274 #> [12348,]  247  259  273 #> [12349,]  247  259  273 #> [12350,]  247  259  273 #> [12351,]  247  259  273 #> [12352,]  247  259  273 #> [12353,]  248  260  276 #> [12354,]  247  259  273 #> [12355,]  247  259  273 #> [12356,]  248  260  275 #> [12357,]  247  259  273 #> [12358,]  247  259  273 #> [12359,]  247  259  273 #> [12360,]  247  259  273 #> [12361,]  248  260  276 #> [12362,]  247  259  273 #> [12363,]  247  259  273 #> [12364,]  248  260  275 #> [12365,]  247  259  273 #> [12366,]  247  259  273 #> [12367,]  247  259  273 #> [12368,]  247  259  273 #> [12369,]  247  259  273 #> [12370,]  248  260  274 #> [12371,]  248  260  276 #> [12372,]  248  260  275 #> [12373,]  248  260  275 #> [12374,]  248  260  276 #> [12375,]  248  260  276 #> [12376,]  248  260  276 #> [12377,]  248  260  274 #> [12378,]  247  259  273 #> [12379,]  248  260  274 #> [12380,]  247  259  273 #> [12381,]  247  259  273 #> [12382,]  248  260  274 #> [12383,]  247  259  273 #> [12384,]  248  260  276 #> [12385,]  247  259  273 #> [12386,]  247  259  273 #> [12387,]  248  260  276 #> [12388,]  248  260  274 #> [12389,]  247  259  273 #> [12390,]  248  260  276 #> [12391,]  247  259  273 #> [12392,]  247  259  273 #> [12393,]  247  259  273 #> [12394,]  248  260  275 #> [12395,]  248  260  274 #> [12396,]  248  260  275 #> [12397,]  247  259  273 #> [12398,]  247  259  273 #> [12399,]  247  259  273 #> [12400,]  248  260  274 #> [12401,]  250  262  278 #> [12402,]  250  262  279 #> [12403,]  249  261  277 #> [12404,]  250  262  279 #> [12405,]  250  262  279 #> [12406,]  249  261  277 #> [12407,]  249  261  277 #> [12408,]  250  262  279 #> [12409,]  250  262  279 #> [12410,]  250  262  279 #> [12411,]  250  262  279 #> [12412,]  250  262  279 #> [12413,]  250  262  278 #> [12414,]  250  262  278 #> [12415,]  250  262  278 #> [12416,]  250  262  278 #> [12417,]  250  262  279 #> [12418,]  250  262  279 #> [12419,]  250  262  279 #> [12420,]  249  261  277 #> [12421,]  249  261  277 #> [12422,]  250  262  279 #> [12423,]  249  261  277 #> [12424,]  250  262  279 #> [12425,]  249  261  277 #> [12426,]  250  262  279 #> [12427,]  250  262  279 #> [12428,]  250  262  279 #> [12429,]  249  261  277 #> [12430,]  250  262  279 #> [12431,]  250  262  279 #> [12432,]  250  262  279 #> [12433,]  250  262  278 #> [12434,]  249  261  277 #> [12435,]  249  261  277 #> [12436,]  249  261  277 #> [12437,]  249  261  277 #> [12438,]  250  262  279 #> [12439,]  250  262  279 #> [12440,]  250  262  279 #> [12441,]  249  261  277 #> [12442,]  249  261  277 #> [12443,]  250  262  279 #> [12444,]  249  261  277 #> [12445,]  249  261  277 #> [12446,]  250  262  279 #> [12447,]  250  262  279 #> [12448,]  250  262  279 #> [12449,]  250  262  279 #> [12450,]  249  261  277 #> [12451,]  250  262  279 #> [12452,]  250  262  279 #> [12453,]  249  261  277 #> [12454,]  249  261  277 #> [12455,]  249  261  277 #> [12456,]  249  261  277 #> [12457,]  249  261  277 #> [12458,]  250  262  279 #> [12459,]  250  262  278 #> [12460,]  249  261  277 #> [12461,]  250  262  279 #> [12462,]  250  262  279 #> [12463,]  250  262  279 #> [12464,]  249  261  277 #> [12465,]  249  261  277 #> [12466,]  250  262  279 #> [12467,]  250  262  279 #> [12468,]  250  262  278 #> [12469,]  250  262  279 #> [12470,]  250  262  278 #> [12471,]  250  262  279 #> [12472,]  250  262  279 #> [12473,]  249  261  277 #> [12474,]  249  261  277 #> [12475,]  250  262  279 #> [12476,]  249  261  277 #> [12477,]  250  262  279 #> [12478,]  250  262  279 #> [12479,]  250  262  279 #> [12480,]  249  261  277 #> [12481,]  249  261  277 #> [12482,]  249  261  277 #> [12483,]  250  262  279 #> [12484,]  249  261  277 #> [12485,]  249  261  277 #> [12486,]  249  261  277 #> [12487,]  250  262  279 #> [12488,]  249  261  277 #> [12489,]  249  261  277 #> [12490,]  250  262  279 #> [12491,]  250  262  279 #> [12492,]  250  262  279 #> [12493,]  250  262  279 #> [12494,]  249  261  277 #> [12495,]  250  262  279 #> [12496,]  250  262  278 #> [12497,]  249  261  277 #> [12498,]  249  261  277 #> [12499,]  249  261  277 #> [12500,]  250  262  279 #> [12501,]  252  265  281 #> [12502,]  252  265  281 #> [12503,]  251  263  280 #> [12504,]  252  265  281 #> [12505,]  251  263  280 #> [12506,]  251  263  280 #> [12507,]  252  265  281 #> [12508,]  252  265  282 #> [12509,]  252  265  281 #> [12510,]  252  265  281 #> [12511,]  251  263  280 #> [12512,]  251  263  280 #> [12513,]  252  265  282 #> [12514,]  251  263  280 #> [12515,]  252  265  282 #> [12516,]  252  264  281 #> [12517,]  252  265  281 #> [12518,]  252  265  281 #> [12519,]  251  263  280 #> [12520,]  251  263  280 #> [12521,]  252  265  281 #> [12522,]  251  263  280 #> [12523,]  252  265  281 #> [12524,]  251  263  280 #> [12525,]  252  265  281 #> [12526,]  251  263  280 #> [12527,]  252  265  282 #> [12528,]  252  265  281 #> [12529,]  251  263  280 #> [12530,]  251  263  280 #> [12531,]  252  265  281 #> [12532,]  251  263  280 #> [12533,]  251  263  280 #> [12534,]  251  263  280 #> [12535,]  251  263  280 #> [12536,]  251  263  280 #> [12537,]  252  264  282 #> [12538,]  252  264  282 #> [12539,]  252  265  281 #> [12540,]  251  263  280 #> [12541,]  251  263  280 #> [12542,]  251  263  280 #> [12543,]  252  265  282 #> [12544,]  252  265  282 #> [12545,]  252  264  281 #> [12546,]  252  265  282 #> [12547,]  252  265  281 #> [12548,]  251  263  280 #> [12549,]  252  264  281 #> [12550,]  252  265  282 #> [12551,]  251  263  280 #> [12552,]  251  263  280 #> [12553,]  252  265  282 #> [12554,]  251  263  280 #> [12555,]  251  263  280 #> [12556,]  252  265  281 #> [12557,]  251  263  280 #> [12558,]  251  263  280 #> [12559,]  252  265  282 #> [12560,]  251  263  280 #> [12561,]  252  265  281 #> [12562,]  251  263  280 #> [12563,]  251  263  280 #> [12564,]  252  264  282 #> [12565,]  252  265  281 #> [12566,]  251  263  280 #> [12567,]  251  263  280 #> [12568,]  251  263  280 #> [12569,]  251  263  280 #> [12570,]  252  265  281 #> [12571,]  252  265  282 #> [12572,]  252  264  281 #> [12573,]  252  265  281 #> [12574,]  252  265  281 #> [12575,]  252  265  281 #> [12576,]  252  265  281 #> [12577,]  252  265  282 #> [12578,]  251  263  280 #> [12579,]  252  265  281 #> [12580,]  251  263  280 #> [12581,]  251  263  280 #> [12582,]  252  265  281 #> [12583,]  251  263  280 #> [12584,]  252  265  282 #> [12585,]  252  265  282 #> [12586,]  252  265  281 #> [12587,]  252  265  282 #> [12588,]  252  265  281 #> [12589,]  251  263  280 #> [12590,]  252  265  282 #> [12591,]  251  263  280 #> [12592,]  252  265  281 #> [12593,]  251  263  280 #> [12594,]  252  265  281 #> [12595,]  252  265  282 #> [12596,]  252  264  282 #> [12597,]  251  263  280 #> [12598,]  251  263  280 #> [12599,]  251  263  280 #> [12600,]  252  265  282 #> [12601,]  254  267  283 #> [12602,]  254  267  283 #> [12603,]  253  266  284 #> [12604,]  253  266  284 #> [12605,]  254  267  283 #> [12606,]  254  267  283 #> [12607,]  253  266  284 #> [12608,]  253  266  284 #> [12609,]  254  267  283 #> [12610,]  253  266  284 #> [12611,]  254  267  283 #> [12612,]  253  266  284 #> [12613,]  254  267  283 #> [12614,]  253  266  284 #> [12615,]  253  266  284 #> [12616,]  253  266  284 #> [12617,]  254  267  283 #> [12618,]  254  267  283 #> [12619,]  254  267  283 #> [12620,]  254  267  283 #> [12621,]  254  267  283 #> [12622,]  254  267  283 #> [12623,]  253  266  284 #> [12624,]  254  267  283 #> [12625,]  253  266  284 #> [12626,]  253  266  284 #> [12627,]  254  267  283 #> [12628,]  254  267  283 #> [12629,]  254  267  283 #> [12630,]  253  266  284 #> [12631,]  253  266  284 #> [12632,]  253  266  284 #> [12633,]  254  267  283 #> [12634,]  253  266  284 #> [12635,]  253  266  284 #> [12636,]  254  267  283 #> [12637,]  253  266  284 #> [12638,]  254  267  283 #> [12639,]  254  267  283 #> [12640,]  253  266  284 #> [12641,]  254  267  283 #> [12642,]  254  267  283 #> [12643,]  254  267  283 #> [12644,]  253  266  284 #> [12645,]  253  266  284 #> [12646,]  253  266  284 #> [12647,]  253  266  284 #> [12648,]  254  267  283 #> [12649,]  253  266  284 #> [12650,]  254  267  283 #> [12651,]  254  267  283 #> [12652,]  253  266  284 #> [12653,]  254  267  283 #> [12654,]  254  267  283 #> [12655,]  253  266  284 #> [12656,]  254  267  283 #> [12657,]  253  266  284 #> [12658,]  254  267  283 #> [12659,]  253  266  284 #> [12660,]  253  266  284 #> [12661,]  254  267  283 #> [12662,]  254  267  283 #> [12663,]  254  267  283 #> [12664,]  254  267  283 #> [12665,]  254  267  283 #> [12666,]  254  267  283 #> [12667,]  253  266  284 #> [12668,]  253  266  284 #> [12669,]  253  266  284 #> [12670,]  254  267  283 #> [12671,]  253  266  284 #> [12672,]  253  266  284 #> [12673,]  254  267  283 #> [12674,]  253  266  284 #> [12675,]  253  266  284 #> [12676,]  253  266  284 #> [12677,]  254  267  283 #> [12678,]  253  266  284 #> [12679,]  254  267  283 #> [12680,]  253  266  284 #> [12681,]  254  267  283 #> [12682,]  254  267  283 #> [12683,]  254  267  283 #> [12684,]  254  267  283 #> [12685,]  254  267  283 #> [12686,]  253  266  284 #> [12687,]  254  267  283 #> [12688,]  253  266  284 #> [12689,]  254  267  283 #> [12690,]  254  267  283 #> [12691,]  254  267  283 #> [12692,]  253  266  284 #> [12693,]  254  267  283 #> [12694,]  254  267  283 #> [12695,]  253  266  284 #> [12696,]  253  266  284 #> [12697,]  253  266  284 #> [12698,]  253  266  284 #> [12699,]  254  267  283 #> [12700,]  254  267  283 #> [12701,]  256  269  286 #> [12702,]  256  269  285 #> [12703,]  255  268  285 #> [12704,]  256  269  286 #> [12705,]  256  269  285 #> [12706,]  256  269  285 #> [12707,]  255  268  286 #> [12708,]  256  269  285 #> [12709,]  256  269  286 #> [12710,]  256  269  286 #> [12711,]  256  269  285 #> [12712,]  256  269  285 #> [12713,]  255  268  286 #> [12714,]  256  269  286 #> [12715,]  256  269  285 #> [12716,]  255  268  286 #> [12717,]  256  269  285 #> [12718,]  256  269  285 #> [12719,]  256  269  285 #> [12720,]  256  269  286 #> [12721,]  255  268  285 #> [12722,]  256  269  286 #> [12723,]  255  268  285 #> [12724,]  256  269  286 #> [12725,]  256  269  286 #> [12726,]  256  269  285 #> [12727,]  256  269  285 #> [12728,]  256  269  286 #> [12729,]  256  269  285 #> [12730,]  255  268  285 #> [12731,]  255  268  285 #> [12732,]  256  269  285 #> [12733,]  256  269  285 #> [12734,]  256  269  285 #> [12735,]  256  269  285 #> [12736,]  255  268  286 #> [12737,]  255  268  285 #> [12738,]  256  269  285 #> [12739,]  255  268  286 #> [12740,]  255  268  285 #> [12741,]  256  269  285 #> [12742,]  256  269  285 #> [12743,]  256  269  285 #> [12744,]  256  269  285 #> [12745,]  256  269  286 #> [12746,]  256  269  285 #> [12747,]  255  268  285 #> [12748,]  256  269  285 #> [12749,]  255  268  286 #> [12750,]  256  269  286 #> [12751,]  256  269  285 #> [12752,]  256  269  286 #> [12753,]  256  269  286 #> [12754,]  255  268  286 #> [12755,]  256  269  286 #> [12756,]  256  269  285 #> [12757,]  256  269  286 #> [12758,]  256  269  286 #> [12759,]  256  269  286 #> [12760,]  256  269  285 #> [12761,]  256  269  285 #> [12762,]  255  268  285 #> [12763,]  256  269  285 #> [12764,]  256  269  285 #> [12765,]  256  269  285 #> [12766,]  256  269  285 #> [12767,]  256  269  286 #> [12768,]  256  269  285 #> [12769,]  256  269  285 #> [12770,]  255  268  285 #> [12771,]  256  269  285 #> [12772,]  256  269  286 #> [12773,]  256  269  286 #> [12774,]  256  269  285 #> [12775,]  256  269  285 #> [12776,]  256  269  286 #> [12777,]  255  268  285 #> [12778,]  256  269  285 #> [12779,]  255  268  285 #> [12780,]  255  268  285 #> [12781,]  256  269  285 #> [12782,]  256  269  285 #> [12783,]  255  268  285 #> [12784,]  256  269  285 #> [12785,]  256  269  286 #> [12786,]  256  269  286 #> [12787,]  256  269  286 #> [12788,]  256  269  286 #> [12789,]  256  269  285 #> [12790,]  256  269  286 #> [12791,]  256  269  286 #> [12792,]  256  269  285 #> [12793,]  256  269  285 #> [12794,]  256  269  285 #> [12795,]  255  268  285 #> [12796,]  256  269  285 #> [12797,]  256  269  285 #> [12798,]  255  268  285 #> [12799,]  256  269  285 #> [12800,]  256  269  285 #> [12801,]  258  270  288 #> [12802,]  258  270  288 #> [12803,]  257  271  287 #> [12804,]  258  270  288 #> [12805,]  258  270  288 #> [12806,]  258  270  288 #> [12807,]  258  270  288 #> [12808,]  258  270  288 #> [12809,]  258  270  288 #> [12810,]  258  270  288 #> [12811,]  257  271  287 #> [12812,]  257  272  287 #> [12813,]  258  270  288 #> [12814,]  257  272  287 #> [12815,]  258  270  288 #> [12816,]  258  270  288 #> [12817,]  258  270  288 #> [12818,]  258  270  288 #> [12819,]  257  271  287 #> [12820,]  257  272  287 #> [12821,]  258  270  288 #> [12822,]  257  272  287 #> [12823,]  258  270  288 #> [12824,]  257  272  287 #> [12825,]  258  270  288 #> [12826,]  257  272  287 #> [12827,]  258  270  288 #> [12828,]  258  270  288 #> [12829,]  257  272  287 #> [12830,]  257  272  287 #> [12831,]  258  270  288 #> [12832,]  257  272  287 #> [12833,]  258  270  288 #> [12834,]  257  271  287 #> [12835,]  258  270  288 #> [12836,]  257  272  287 #> [12837,]  258  270  288 #> [12838,]  258  270  288 #> [12839,]  258  270  288 #> [12840,]  257  272  287 #> [12841,]  257  272  287 #> [12842,]  257  272  287 #> [12843,]  258  270  288 #> [12844,]  258  270  288 #> [12845,]  258  270  288 #> [12846,]  258  270  288 #> [12847,]  258  270  288 #> [12848,]  257  272  287 #> [12849,]  258  270  288 #> [12850,]  258  270  288 #> [12851,]  257  272  287 #> [12852,]  258  270  288 #> [12853,]  258  270  288 #> [12854,]  257  272  287 #> [12855,]  258  270  288 #> [12856,]  258  270  288 #> [12857,]  258  270  288 #> [12858,]  258  270  288 #> [12859,]  258  270  288 #> [12860,]  257  272  287 #> [12861,]  258  270  288 #> [12862,]  257  272  287 #> [12863,]  257  272  287 #> [12864,]  258  270  288 #> [12865,]  258  270  288 #> [12866,]  257  272  287 #> [12867,]  257  272  287 #> [12868,]  257  271  287 #> [12869,]  257  272  287 #> [12870,]  258  270  288 #> [12871,]  258  270  288 #> [12872,]  258  270  288 #> [12873,]  258  270  288 #> [12874,]  258  270  288 #> [12875,]  258  270  288 #> [12876,]  258  270  288 #> [12877,]  258  270  288 #> [12878,]  257  272  287 #> [12879,]  258  270  288 #> [12880,]  257  272  287 #> [12881,]  257  272  287 #> [12882,]  258  270  288 #> [12883,]  257  272  287 #> [12884,]  258  270  288 #> [12885,]  258  270  288 #> [12886,]  258  270  288 #> [12887,]  258  270  288 #> [12888,]  258  270  288 #> [12889,]  257  272  287 #> [12890,]  258  270  288 #> [12891,]  257  272  287 #> [12892,]  258  270  288 #> [12893,]  257  272  287 #> [12894,]  258  270  288 #> [12895,]  258  270  288 #> [12896,]  258  270  288 #> [12897,]  258  270  288 #> [12898,]  258  270  288 #> [12899,]  258  270  288 #> [12900,]  258  270  288 #> [12901,]  260  274  290 #> [12902,]  259  273  290 #> [12903,]  259  273  289 #> [12904,]  259  273  290 #> [12905,]  260  274  290 #> [12906,]  259  273  290 #> [12907,]  259  273  289 #> [12908,]  259  273  289 #> [12909,]  259  273  290 #> [12910,]  260  274  290 #> [12911,]  260  274  290 #> [12912,]  260  274  290 #> [12913,]  259  273  289 #> [12914,]  260  274  290 #> [12915,]  260  274  290 #> [12916,]  259  273  289 #> [12917,]  260  274  290 #> [12918,]  260  274  290 #> [12919,]  260  274  290 #> [12920,]  259  273  289 #> [12921,]  259  273  290 #> [12922,]  260  274  289 #> [12923,]  259  273  290 #> [12924,]  260  274  289 #> [12925,]  259  273  289 #> [12926,]  260  274  290 #> [12927,]  260  274  290 #> [12928,]  259  273  290 #> [12929,]  259  273  290 #> [12930,]  259  273  290 #> [12931,]  260  274  290 #> [12932,]  260  274  290 #> [12933,]  259  273  290 #> [12934,]  259  273  290 #> [12935,]  259  273  290 #> [12936,]  259  273  290 #> [12937,]  259  273  290 #> [12938,]  260  274  290 #> [12939,]  260  274  289 #> [12940,]  259  273  289 #> [12941,]  259  273  290 #> [12942,]  259  273  290 #> [12943,]  260  274  290 #> [12944,]  259  273  289 #> [12945,]  259  273  290 #> [12946,]  259  273  289 #> [12947,]  260  274  290 #> [12948,]  259  273  290 #> [12949,]  259  273  289 #> [12950,]  259  273  289 #> [12951,]  260  274  290 #> [12952,]  260  274  290 #> [12953,]  259  273  289 #> [12954,]  259  273  290 #> [12955,]  259  273  289 #> [12956,]  259  273  289 #> [12957,]  259  273  290 #> [12958,]  260  274  290 #> [12959,]  260  274  289 #> [12960,]  259  273  290 #> [12961,]  260  274  290 #> [12962,]  259  273  290 #> [12963,]  259  273  290 #> [12964,]  259  273  290 #> [12965,]  259  273  289 #> [12966,]  260  274  289 #> [12967,]  259  273  290 #> [12968,]  260  274  290 #> [12969,]  259  273  290 #> [12970,]  260  274  289 #> [12971,]  260  274  290 #> [12972,]  259  273  289 #> [12973,]  259  273  290 #> [12974,]  259  273  290 #> [12975,]  260  274  290 #> [12976,]  259  273  290 #> [12977,]  260  274  290 #> [12978,]  259  273  290 #> [12979,]  260  274  290 #> [12980,]  259  273  290 #> [12981,]  259  273  290 #> [12982,]  259  273  290 #> [12983,]  260  274  290 #> [12984,]  259  273  289 #> [12985,]  259  273  290 #> [12986,]  259  273  289 #> [12987,]  260  274  290 #> [12988,]  259  273  290 #> [12989,]  259  273  289 #> [12990,]  260  274  289 #> [12991,]  260  274  290 #> [12992,]  260  274  290 #> [12993,]  259  273  290 #> [12994,]  259  273  290 #> [12995,]  260  274  290 #> [12996,]  260  274  290 #> [12997,]  259  273  290 #> [12998,]  259  273  289 #> [12999,]  259  273  290 #> [13000,]  260  274  289 #> [13001,]  262  277  293 #> [13002,]  262  277  293 #> [13003,]  261  275  291 #> [13004,]  262  276  293 #> [13005,]  261  275  291 #> [13006,]  261  275  291 #> [13007,]  262  277  292 #> [13008,]  262  277  292 #> [13009,]  262  276  293 #> [13010,]  262  276  293 #> [13011,]  261  275  291 #> [13012,]  261  275  291 #> [13013,]  262  277  292 #> [13014,]  261  275  291 #> [13015,]  262  277  293 #> [13016,]  262  277  292 #> [13017,]  262  277  292 #> [13018,]  262  277  293 #> [13019,]  261  275  291 #> [13020,]  261  275  291 #> [13021,]  262  276  293 #> [13022,]  261  275  291 #> [13023,]  262  277  293 #> [13024,]  261  275  291 #> [13025,]  262  276  292 #> [13026,]  261  275  291 #> [13027,]  262  277  293 #> [13028,]  262  276  293 #> [13029,]  261  275  291 #> [13030,]  261  275  291 #> [13031,]  262  276  293 #> [13032,]  261  275  291 #> [13033,]  262  277  293 #> [13034,]  261  275  291 #> [13035,]  261  275  291 #> [13036,]  261  275  291 #> [13037,]  262  277  293 #> [13038,]  262  277  293 #> [13039,]  262  276  292 #> [13040,]  261  275  291 #> [13041,]  261  275  291 #> [13042,]  261  275  291 #> [13043,]  262  277  292 #> [13044,]  262  277  292 #> [13045,]  262  277  292 #> [13046,]  262  277  292 #> [13047,]  262  276  292 #> [13048,]  261  275  291 #> [13049,]  262  277  292 #> [13050,]  262  277  292 #> [13051,]  261  275  291 #> [13052,]  261  275  291 #> [13053,]  262  277  292 #> [13054,]  261  275  291 #> [13055,]  261  275  291 #> [13056,]  262  277  292 #> [13057,]  261  275  291 #> [13058,]  262  277  293 #> [13059,]  262  277  292 #> [13060,]  261  275  291 #> [13061,]  262  277  293 #> [13062,]  261  275  291 #> [13063,]  261  275  291 #> [13064,]  262  277  293 #> [13065,]  262  276  292 #> [13066,]  261  275  291 #> [13067,]  261  275  291 #> [13068,]  261  275  291 #> [13069,]  261  275  291 #> [13070,]  262  276  292 #> [13071,]  262  277  293 #> [13072,]  262  276  292 #> [13073,]  262  276  293 #> [13074,]  262  276  293 #> [13075,]  262  277  293 #> [13076,]  262  276  293 #> [13077,]  262  277  292 #> [13078,]  261  275  291 #> [13079,]  262  276  292 #> [13080,]  261  275  291 #> [13081,]  261  275  291 #> [13082,]  262  276  293 #> [13083,]  261  275  291 #> [13084,]  262  277  292 #> [13085,]  262  277  293 #> [13086,]  262  277  292 #> [13087,]  262  277  293 #> [13088,]  262  277  293 #> [13089,]  261  275  291 #> [13090,]  262  277  292 #> [13091,]  261  275  291 #> [13092,]  262  277  293 #> [13093,]  261  275  291 #> [13094,]  262  277  292 #> [13095,]  262  277  293 #> [13096,]  262  277  293 #> [13097,]  262  277  293 #> [13098,]  261  275  291 #> [13099,]  261  275  291 #> [13100,]  262  277  292 #> [13101,]  263  278  294 #> [13102,]  263  278  294 #> [13103,]  263  278  294 #> [13104,]  263  278  294 #> [13105,]  263  278  294 #> [13106,]  263  278  294 #> [13107,]  264  279  294 #> [13108,]  263  278  294 #> [13109,]  263  278  294 #> [13110,]  263  278  294 #> [13111,]  263  278  294 #> [13112,]  263  278  294 #> [13113,]  263  278  294 #> [13114,]  263  278  294 #> [13115,]  263  278  294 #> [13116,]  264  279  294 #> [13117,]  263  278  294 #> [13118,]  263  278  294 #> [13119,]  263  278  294 #> [13120,]  264  279  295 #> [13121,]  263  278  294 #> [13122,]  263  278  295 #> [13123,]  263  278  294 #> [13124,]  264  279  294 #> [13125,]  263  278  294 #> [13126,]  263  278  294 #> [13127,]  263  278  294 #> [13128,]  264  279  294 #> [13129,]  263  278  295 #> [13130,]  263  278  294 #> [13131,]  263  278  294 #> [13132,]  263  278  294 #> [13133,]  263  278  294 #> [13134,]  263  278  294 #> [13135,]  263  278  294 #> [13136,]  263  278  294 #> [13137,]  263  278  294 #> [13138,]  263  278  294 #> [13139,]  263  278  294 #> [13140,]  263  278  294 #> [13141,]  263  278  294 #> [13142,]  263  278  294 #> [13143,]  263  278  294 #> [13144,]  263  278  294 #> [13145,]  263  278  294 #> [13146,]  263  278  294 #> [13147,]  263  278  294 #> [13148,]  263  278  294 #> [13149,]  263  278  294 #> [13150,]  264  279  294 #> [13151,]  263  278  294 #> [13152,]  264  279  294 #> [13153,]  263  278  294 #> [13154,]  263  278  294 #> [13155,]  263  278  294 #> [13156,]  263  278  294 #> [13157,]  263  278  294 #> [13158,]  263  278  295 #> [13159,]  263  278  294 #> [13160,]  263  278  294 #> [13161,]  263  278  294 #> [13162,]  263  278  294 #> [13163,]  263  278  294 #> [13164,]  263  278  295 #> [13165,]  263  278  294 #> [13166,]  263  278  294 #> [13167,]  263  278  294 #> [13168,]  263  278  294 #> [13169,]  263  278  294 #> [13170,]  263  278  294 #> [13171,]  263  278  294 #> [13172,]  263  278  294 #> [13173,]  263  278  294 #> [13174,]  263  278  294 #> [13175,]  263  278  294 #> [13176,]  264  279  294 #> [13177,]  263  278  295 #> [13178,]  263  278  294 #> [13179,]  263  278  294 #> [13180,]  263  278  294 #> [13181,]  263  278  294 #> [13182,]  263  278  294 #> [13183,]  263  278  294 #> [13184,]  263  278  294 #> [13185,]  263  278  294 #> [13186,]  264  279  294 #> [13187,]  263  278  295 #> [13188,]  263  278  294 #> [13189,]  263  278  294 #> [13190,]  263  278  294 #> [13191,]  264  279  294 #> [13192,]  263  278  294 #> [13193,]  263  278  294 #> [13194,]  263  278  294 #> [13195,]  263  278  294 #> [13196,]  263  278  294 #> [13197,]  263  278  294 #> [13198,]  263  278  294 #> [13199,]  263  278  294 #> [13200,]  263  278  294 #> [13201,]  266  281  296 #> [13202,]  265  280  297 #> [13203,]  265  280  297 #> [13204,]  266  281  296 #> [13205,]  265  280  297 #> [13206,]  265  280  297 #> [13207,]  266  281  296 #> [13208,]  266  281  296 #> [13209,]  266  281  296 #> [13210,]  266  281  296 #> [13211,]  265  280  297 #> [13212,]  265  280  297 #> [13213,]  266  281  296 #> [13214,]  265  280  297 #> [13215,]  266  281  296 #> [13216,]  266  281  296 #> [13217,]  266  281  296 #> [13218,]  266  281  296 #> [13219,]  265  280  297 #> [13220,]  265  280  297 #> [13221,]  266  281  296 #> [13222,]  265  280  297 #> [13223,]  266  281  296 #> [13224,]  265  280  297 #> [13225,]  266  281  296 #> [13226,]  265  280  297 #> [13227,]  266  281  296 #> [13228,]  266  281  296 #> [13229,]  265  280  297 #> [13230,]  265  280  297 #> [13231,]  265  280  297 #> [13232,]  265  280  297 #> [13233,]  265  280  297 #> [13234,]  265  280  297 #> [13235,]  265  280  297 #> [13236,]  265  280  297 #> [13237,]  266  281  296 #> [13238,]  266  281  296 #> [13239,]  266  281  296 #> [13240,]  265  280  297 #> [13241,]  265  280  297 #> [13242,]  265  280  297 #> [13243,]  266  281  296 #> [13244,]  266  281  296 #> [13245,]  266  281  296 #> [13246,]  266  281  296 #> [13247,]  266  281  296 #> [13248,]  265  280  297 #> [13249,]  265  280  297 #> [13250,]  265  280  297 #> [13251,]  265  280  297 #> [13252,]  265  280  297 #> [13253,]  266  281  296 #> [13254,]  265  280  297 #> [13255,]  265  280  297 #> [13256,]  266  281  296 #> [13257,]  265  280  297 #> [13258,]  265  280  297 #> [13259,]  265  280  297 #> [13260,]  265  280  297 #> [13261,]  266  281  296 #> [13262,]  265  280  297 #> [13263,]  265  280  297 #> [13264,]  266  281  296 #> [13265,]  265  280  297 #> [13266,]  265  280  297 #> [13267,]  265  280  297 #> [13268,]  265  280  297 #> [13269,]  265  280  297 #> [13270,]  266  281  296 #> [13271,]  266  281  296 #> [13272,]  266  281  296 #> [13273,]  266  281  296 #> [13274,]  266  281  296 #> [13275,]  266  281  296 #> [13276,]  266  281  296 #> [13277,]  266  281  296 #> [13278,]  265  280  297 #> [13279,]  266  281  296 #> [13280,]  265  280  297 #> [13281,]  265  280  297 #> [13282,]  266  281  296 #> [13283,]  265  280  297 #> [13284,]  266  281  296 #> [13285,]  265  280  297 #> [13286,]  266  281  296 #> [13287,]  266  281  296 #> [13288,]  266  281  296 #> [13289,]  265  280  297 #> [13290,]  266  281  296 #> [13291,]  265  280  297 #> [13292,]  265  280  297 #> [13293,]  265  280  297 #> [13294,]  266  281  296 #> [13295,]  266  281  296 #> [13296,]  266  281  296 #> [13297,]  265  280  297 #> [13298,]  265  280  297 #> [13299,]  265  280  297 #> [13300,]  266  281  296 #> [13301,]  267  282  298 #> [13302,]  268  283  299 #> [13303,]  269  283  299 #> [13304,]  269  283  299 #> [13305,]  267  282  298 #> [13306,]  268  283  299 #> [13307,]  269  283  299 #> [13308,]  269  283  299 #> [13309,]  269  283  299 #> [13310,]  267  282  298 #> [13311,]  267  282  298 #> [13312,]  267  282  298 #> [13313,]  269  283  299 #> [13314,]  267  282  298 #> [13315,]  267  282  298 #> [13316,]  267  282  298 #> [13317,]  267  282  298 #> [13318,]  267  282  298 #> [13319,]  267  282  298 #> [13320,]  269  283  299 #> [13321,]  269  283  299 #> [13322,]  267  282  298 #> [13323,]  268  283  299 #> [13324,]  267  282  298 #> [13325,]  269  283  299 #> [13326,]  267  282  298 #> [13327,]  267  282  298 #> [13328,]  269  283  299 #> [13329,]  268  283  299 #> [13330,]  269  283  299 #> [13331,]  267  282  298 #> [13332,]  267  282  298 #> [13333,]  269  283  299 #> [13334,]  268  283  299 #> [13335,]  269  283  299 #> [13336,]  269  283  299 #> [13337,]  268  283  299 #> [13338,]  267  282  298 #> [13339,]  267  282  298 #> [13340,]  269  283  299 #> [13341,]  269  283  299 #> [13342,]  268  283  299 #> [13343,]  267  282  298 #> [13344,]  268  283  299 #> [13345,]  269  283  299 #> [13346,]  269  283  299 #> [13347,]  267  282  298 #> [13348,]  268  283  299 #> [13349,]  269  283  299 #> [13350,]  269  283  299 #> [13351,]  267  282  298 #> [13352,]  267  282  298 #> [13353,]  269  283  299 #> [13354,]  269  283  299 #> [13355,]  269  283  299 #> [13356,]  269  283  299 #> [13357,]  269  283  299 #> [13358,]  267  282  298 #> [13359,]  267  282  298 #> [13360,]  269  283  299 #> [13361,]  267  282  298 #> [13362,]  269  283  299 #> [13363,]  268  283  299 #> [13364,]  268  283  299 #> [13365,]  269  283  299 #> [13366,]  267  282  298 #> [13367,]  269  283  299 #> [13368,]  267  282  298 #> [13369,]  269  283  299 #> [13370,]  267  282  298 #> [13371,]  267  282  298 #> [13372,]  269  283  299 #> [13373,]  269  283  299 #> [13374,]  269  283  299 #> [13375,]  267  282  298 #> [13376,]  269  283  299 #> [13377,]  267  282  298 #> [13378,]  268  283  299 #> [13379,]  267  282  298 #> [13380,]  269  283  299 #> [13381,]  268  283  299 #> [13382,]  269  283  299 #> [13383,]  267  282  298 #> [13384,]  269  283  299 #> [13385,]  269  283  299 #> [13386,]  269  283  299 #> [13387,]  267  282  298 #> [13388,]  269  283  299 #> [13389,]  269  283  299 #> [13390,]  267  282  298 #> [13391,]  267  282  298 #> [13392,]  267  282  298 #> [13393,]  269  283  299 #> [13394,]  268  283  299 #> [13395,]  267  282  298 #> [13396,]  267  282  298 #> [13397,]  269  283  299 #> [13398,]  269  283  299 #> [13399,]  269  283  299 #> [13400,]  267  282  298 #> [13401,]  271  285  301 #> [13402,]  270  284  300 #> [13403,]  271  285  301 #> [13404,]  271  285  301 #> [13405,]  271  285  301 #> [13406,]  270  284  300 #> [13407,]  271  285  301 #> [13408,]  271  285  301 #> [13409,]  271  285  301 #> [13410,]  271  285  301 #> [13411,]  270  284  300 #> [13412,]  270  284  300 #> [13413,]  271  285  301 #> [13414,]  271  285  301 #> [13415,]  270  284  300 #> [13416,]  271  285  301 #> [13417,]  270  284  300 #> [13418,]  271  285  301 #> [13419,]  270  284  300 #> [13420,]  271  285  301 #> [13421,]  271  285  301 #> [13422,]  271  285  301 #> [13423,]  270  284  300 #> [13424,]  271  285  301 #> [13425,]  271  285  301 #> [13426,]  270  284  300 #> [13427,]  271  285  301 #> [13428,]  271  285  301 #> [13429,]  270  284  300 #> [13430,]  270  284  300 #> [13431,]  270  284  300 #> [13432,]  271  285  301 #> [13433,]  271  285  301 #> [13434,]  270  284  300 #> [13435,]  270  284  300 #> [13436,]  271  285  301 #> [13437,]  270  284  300 #> [13438,]  271  285  301 #> [13439,]  271  285  301 #> [13440,]  271  285  301 #> [13441,]  271  285  301 #> [13442,]  270  284  300 #> [13443,]  270  284  300 #> [13444,]  270  284  300 #> [13445,]  271  285  301 #> [13446,]  270  284  300 #> [13447,]  270  284  300 #> [13448,]  270  284  300 #> [13449,]  271  285  301 #> [13450,]  271  285  301 #> [13451,]  271  285  301 #> [13452,]  271  285  301 #> [13453,]  271  285  301 #> [13454,]  271  285  301 #> [13455,]  271  285  301 #> [13456,]  270  284  300 #> [13457,]  271  285  301 #> [13458,]  271  285  301 #> [13459,]  271  285  301 #> [13460,]  270  284  300 #> [13461,]  270  284  300 #> [13462,]  271  285  301 #> [13463,]  270  284  300 #> [13464,]  270  284  300 #> [13465,]  270  284  300 #> [13466,]  270  284  300 #> [13467,]  271  285  301 #> [13468,]  270  284  300 #> [13469,]  271  285  301 #> [13470,]  270  284  300 #> [13471,]  271  285  301 #> [13472,]  271  285  301 #> [13473,]  271  285  301 #> [13474,]  271  285  301 #> [13475,]  270  284  300 #> [13476,]  271  285  301 #> [13477,]  271  285  301 #> [13478,]  270  284  300 #> [13479,]  270  284  300 #> [13480,]  271  285  301 #> [13481,]  270  284  300 #> [13482,]  271  285  301 #> [13483,]  271  285  301 #> [13484,]  271  285  301 #> [13485,]  271  285  301 #> [13486,]  271  285  301 #> [13487,]  271  285  301 #> [13488,]  271  285  301 #> [13489,]  271  285  301 #> [13490,]  271  285  301 #> [13491,]  271  285  301 #> [13492,]  270  284  300 #> [13493,]  270  284  300 #> [13494,]  270  284  300 #> [13495,]  270  284  300 #> [13496,]  270  284  300 #> [13497,]  271  285  301 #> [13498,]  271  285  301 #> [13499,]  271  285  301 #> [13500,]  270  284  300 #> [13501,]  272  287  304 #> [13502,]  272  287  303 #> [13503,]  272  286  302 #> [13504,]  272  287  304 #> [13505,]  272  286  302 #> [13506,]  272  287  304 #> [13507,]  272  287  303 #> [13508,]  272  287  304 #> [13509,]  272  286  302 #> [13510,]  272  286  302 #> [13511,]  272  286  302 #> [13512,]  272  287  304 #> [13513,]  272  287  303 #> [13514,]  272  286  302 #> [13515,]  272  287  304 #> [13516,]  272  287  303 #> [13517,]  272  287  303 #> [13518,]  272  287  303 #> [13519,]  272  287  303 #> [13520,]  272  287  304 #> [13521,]  272  286  302 #> [13522,]  272  287  303 #> [13523,]  272  287  303 #> [13524,]  272  287  303 #> [13525,]  272  287  303 #> [13526,]  272  287  304 #> [13527,]  272  287  304 #> [13528,]  272  286  302 #> [13529,]  272  287  303 #> [13530,]  272  287  303 #> [13531,]  272  286  302 #> [13532,]  272  286  302 #> [13533,]  272  287  304 #> [13534,]  272  286  302 #> [13535,]  272  286  302 #> [13536,]  272  287  303 #> [13537,]  272  287  303 #> [13538,]  272  287  304 #> [13539,]  272  286  302 #> [13540,]  272  286  302 #> [13541,]  272  287  304 #> [13542,]  272  287  304 #> [13543,]  272  287  304 #> [13544,]  272  287  303 #> [13545,]  272  287  304 #> [13546,]  272  287  304 #> [13547,]  272  286  302 #> [13548,]  272  286  302 #> [13549,]  272  287  303 #> [13550,]  272  287  304 #> [13551,]  272  287  304 #> [13552,]  272  286  302 #> [13553,]  272  287  304 #> [13554,]  272  287  303 #> [13555,]  272  287  304 #> [13556,]  272  287  304 #> [13557,]  272  287  304 #> [13558,]  272  287  304 #> [13559,]  272  287  303 #> [13560,]  272  287  304 #> [13561,]  272  287  304 #> [13562,]  272  286  302 #> [13563,]  272  287  304 #> [13564,]  272  287  304 #> [13565,]  272  286  302 #> [13566,]  272  287  304 #> [13567,]  272  287  304 #> [13568,]  272  287  304 #> [13569,]  272  287  304 #> [13570,]  272  286  302 #> [13571,]  272  287  304 #> [13572,]  272  286  302 #> [13573,]  272  287  304 #> [13574,]  272  286  302 #> [13575,]  272  287  304 #> [13576,]  272  287  304 #> [13577,]  272  287  303 #> [13578,]  272  287  304 #> [13579,]  272  287  303 #> [13580,]  272  287  303 #> [13581,]  272  287  304 #> [13582,]  272  286  302 #> [13583,]  272  287  303 #> [13584,]  272  287  304 #> [13585,]  272  287  303 #> [13586,]  272  287  303 #> [13587,]  272  287  304 #> [13588,]  272  287  304 #> [13589,]  272  287  304 #> [13590,]  272  287  304 #> [13591,]  272  286  302 #> [13592,]  272  287  304 #> [13593,]  272  287  303 #> [13594,]  272  287  304 #> [13595,]  272  287  303 #> [13596,]  272  287  304 #> [13597,]  272  287  304 #> [13598,]  272  286  302 #> [13599,]  272  287  304 #> [13600,]  272  287  303 #> [13601,]  274  289  306 #> [13602,]  273  288  305 #> [13603,]  273  288  305 #> [13604,]  274  289  306 #> [13605,]  273  288  305 #> [13606,]  273  288  305 #> [13607,]  274  289  306 #> [13608,]  273  288  305 #> [13609,]  274  289  306 #> [13610,]  274  289  306 #> [13611,]  273  288  305 #> [13612,]  273  288  305 #> [13613,]  274  289  306 #> [13614,]  274  289  306 #> [13615,]  273  288  305 #> [13616,]  274  289  306 #> [13617,]  273  288  305 #> [13618,]  273  288  305 #> [13619,]  273  288  305 #> [13620,]  274  289  306 #> [13621,]  273  288  305 #> [13622,]  274  289  306 #> [13623,]  273  288  305 #> [13624,]  274  289  306 #> [13625,]  274  289  306 #> [13626,]  273  288  305 #> [13627,]  273  288  305 #> [13628,]  274  289  306 #> [13629,]  273  288  305 #> [13630,]  273  288  305 #> [13631,]  273  288  305 #> [13632,]  273  288  305 #> [13633,]  273  288  305 #> [13634,]  273  288  305 #> [13635,]  273  288  305 #> [13636,]  274  289  306 #> [13637,]  273  288  305 #> [13638,]  273  288  305 #> [13639,]  274  289  306 #> [13640,]  273  288  305 #> [13641,]  273  288  305 #> [13642,]  273  288  305 #> [13643,]  273  288  305 #> [13644,]  273  288  305 #> [13645,]  274  289  306 #> [13646,]  273  288  305 #> [13647,]  273  288  305 #> [13648,]  273  288  305 #> [13649,]  274  289  306 #> [13650,]  274  289  306 #> [13651,]  273  288  305 #> [13652,]  274  289  306 #> [13653,]  274  289  306 #> [13654,]  274  289  306 #> [13655,]  274  289  306 #> [13656,]  273  288  305 #> [13657,]  274  289  306 #> [13658,]  274  289  306 #> [13659,]  274  289  306 #> [13660,]  273  288  305 #> [13661,]  273  288  305 #> [13662,]  273  288  305 #> [13663,]  273  288  305 #> [13664,]  273  288  305 #> [13665,]  273  288  305 #> [13666,]  273  288  305 #> [13667,]  274  289  306 #> [13668,]  273  288  305 #> [13669,]  273  288  305 #> [13670,]  273  288  305 #> [13671,]  273  288  305 #> [13672,]  274  289  306 #> [13673,]  274  289  306 #> [13674,]  273  288  305 #> [13675,]  273  288  305 #> [13676,]  274  289  306 #> [13677,]  273  288  305 #> [13678,]  273  288  305 #> [13679,]  273  288  305 #> [13680,]  273  288  305 #> [13681,]  273  288  305 #> [13682,]  273  288  305 #> [13683,]  273  288  305 #> [13684,]  273  288  305 #> [13685,]  274  289  306 #> [13686,]  274  289  306 #> [13687,]  274  289  306 #> [13688,]  273  288  305 #> [13689,]  273  288  305 #> [13690,]  274  289  306 #> [13691,]  274  289  306 #> [13692,]  273  288  305 #> [13693,]  273  288  305 #> [13694,]  273  288  305 #> [13695,]  273  288  305 #> [13696,]  273  288  305 #> [13697,]  273  288  305 #> [13698,]  273  288  305 #> [13699,]  273  288  305 #> [13700,]  273  288  305 #> [13701,]  276  291  307 #> [13702,]  275  290  308 #> [13703,]  275  290  307 #> [13704,]  276  291  307 #> [13705,]  276  291  307 #> [13706,]  275  290  307 #> [13707,]  275  290  307 #> [13708,]  275  290  307 #> [13709,]  275  290  308 #> [13710,]  276  291  308 #> [13711,]  276  291  307 #> [13712,]  276  291  308 #> [13713,]  276  291  308 #> [13714,]  276  291  307 #> [13715,]  276  291  307 #> [13716,]  276  291  307 #> [13717,]  276  291  308 #> [13718,]  276  291  307 #> [13719,]  276  291  307 #> [13720,]  275  290  307 #> [13721,]  275  290  308 #> [13722,]  276  291  307 #> [13723,]  275  290  307 #> [13724,]  276  291  307 #> [13725,]  275  290  307 #> [13726,]  276  291  307 #> [13727,]  276  291  307 #> [13728,]  276  291  307 #> [13729,]  275  290  308 #> [13730,]  276  291  307 #> [13731,]  276  291  307 #> [13732,]  276  291  307 #> [13733,]  276  291  308 #> [13734,]  275  290  307 #> [13735,]  275  290  307 #> [13736,]  275  290  307 #> [13737,]  275  290  307 #> [13738,]  276  291  307 #> [13739,]  276  291  307 #> [13740,]  275  290  307 #> [13741,]  275  290  307 #> [13742,]  275  290  307 #> [13743,]  276  291  307 #> [13744,]  275  290  307 #> [13745,]  275  290  307 #> [13746,]  276  291  307 #> [13747,]  276  291  307 #> [13748,]  276  291  307 #> [13749,]  275  290  307 #> [13750,]  275  290  307 #> [13751,]  276  291  307 #> [13752,]  276  291  307 #> [13753,]  275  290  308 #> [13754,]  275  290  307 #> [13755,]  275  290  307 #> [13756,]  275  290  307 #> [13757,]  275  290  307 #> [13758,]  276  291  307 #> [13759,]  276  291  307 #> [13760,]  275  290  308 #> [13761,]  276  291  307 #> [13762,]  275  290  307 #> [13763,]  276  291  308 #> [13764,]  275  290  307 #> [13765,]  275  290  307 #> [13766,]  276  291  307 #> [13767,]  275  290  307 #> [13768,]  276  291  307 #> [13769,]  276  291  307 #> [13770,]  276  291  308 #> [13771,]  276  291  307 #> [13772,]  275  290  307 #> [13773,]  275  290  307 #> [13774,]  275  290  307 #> [13775,]  276  291  307 #> [13776,]  275  290  307 #> [13777,]  276  291  307 #> [13778,]  276  291  307 #> [13779,]  276  291  307 #> [13780,]  275  290  308 #> [13781,]  275  290  308 #> [13782,]  275  290  307 #> [13783,]  276  291  307 #> [13784,]  275  290  307 #> [13785,]  275  290  307 #> [13786,]  275  290  308 #> [13787,]  276  291  307 #> [13788,]  275  290  307 #> [13789,]  275  290  307 #> [13790,]  276  291  307 #> [13791,]  276  291  307 #> [13792,]  276  291  307 #> [13793,]  276  291  307 #> [13794,]  275  290  307 #> [13795,]  276  291  307 #> [13796,]  276  291  307 #> [13797,]  275  290  307 #> [13798,]  275  290  307 #> [13799,]  275  290  307 #> [13800,]  276  291  307 #> [13801,]  277  292  310 #> [13802,]  277  292  310 #> [13803,]  277  292  310 #> [13804,]  278  293  309 #> [13805,]  277  292  310 #> [13806,]  277  292  310 #> [13807,]  278  293  310 #> [13808,]  277  292  309 #> [13809,]  277  292  309 #> [13810,]  278  293  310 #> [13811,]  277  292  309 #> [13812,]  277  292  310 #> [13813,]  277  292  309 #> [13814,]  277  292  310 #> [13815,]  278  293  310 #> [13816,]  278  293  310 #> [13817,]  277  292  309 #> [13818,]  278  293  310 #> [13819,]  277  292  310 #> [13820,]  277  292  310 #> [13821,]  278  293  310 #> [13822,]  277  292  309 #> [13823,]  278  293  310 #> [13824,]  277  292  310 #> [13825,]  278  293  310 #> [13826,]  277  292  310 #> [13827,]  278  293  309 #> [13828,]  278  293  310 #> [13829,]  277  292  310 #> [13830,]  277  292  310 #> [13831,]  277  292  310 #> [13832,]  277  292  310 #> [13833,]  277  292  310 #> [13834,]  277  292  310 #> [13835,]  277  292  309 #> [13836,]  277  292  310 #> [13837,]  277  292  310 #> [13838,]  277  292  310 #> [13839,]  278  293  310 #> [13840,]  277  292  310 #> [13841,]  277  292  310 #> [13842,]  277  292  310 #> [13843,]  278  293  310 #> [13844,]  277  292  309 #> [13845,]  278  293  310 #> [13846,]  277  292  310 #> [13847,]  278  293  310 #> [13848,]  277  292  310 #> [13849,]  277  292  309 #> [13850,]  277  292  310 #> [13851,]  277  292  310 #> [13852,]  277  292  309 #> [13853,]  278  293  310 #> [13854,]  277  292  310 #> [13855,]  277  292  309 #> [13856,]  277  292  310 #> [13857,]  277  292  310 #> [13858,]  277  292  309 #> [13859,]  277  292  310 #> [13860,]  277  292  310 #> [13861,]  278  293  310 #> [13862,]  277  292  310 #> [13863,]  277  292  310 #> [13864,]  278  293  310 #> [13865,]  277  292  310 #> [13866,]  277  292  309 #> [13867,]  277  292  310 #> [13868,]  277  292  310 #> [13869,]  277  292  310 #> [13870,]  277  292  310 #> [13871,]  278  293  310 #> [13872,]  278  293  310 #> [13873,]  278  293  310 #> [13874,]  278  293  310 #> [13875,]  278  293  310 #> [13876,]  278  293  310 #> [13877,]  278  293  310 #> [13878,]  277  292  310 #> [13879,]  277  292  309 #> [13880,]  277  292  309 #> [13881,]  277  292  309 #> [13882,]  277  292  309 #> [13883,]  277  292  309 #> [13884,]  278  293  310 #> [13885,]  277  292  310 #> [13886,]  277  292  310 #> [13887,]  277  292  309 #> [13888,]  278  293  309 #> [13889,]  277  292  309 #> [13890,]  277  292  309 #> [13891,]  277  292  310 #> [13892,]  277  292  309 #> [13893,]  277  292  310 #> [13894,]  278  293  310 #> [13895,]  278  293  309 #> [13896,]  277  292  310 #> [13897,]  277  292  310 #> [13898,]  277  292  310 #> [13899,]  277  292  309 #> [13900,]  278  293  310 #> [13901,]  280  295  314 #> [13902,]  279  294  312 #> [13903,]  280  295  312 #> [13904,]  280  295  314 #> [13905,]  280  295  312 #> [13906,]  279  294  311 #> [13907,]  280  295  313 #> [13908,]  280  295  311 #> [13909,]  280  295  311 #> [13910,]  280  295  314 #> [13911,]  279  294  312 #> [13912,]  279  294  311 #> [13913,]  280  295  314 #> [13914,]  280  295  312 #> [13915,]  279  294  311 #> [13916,]  280  295  314 #> [13917,]  279  294  314 #> [13918,]  280  295  314 #> [13919,]  279  294  312 #> [13920,]  280  295  311 #> [13921,]  280  295  313 #> [13922,]  280  295  312 #> [13923,]  279  294  313 #> [13924,]  280  295  312 #> [13925,]  280  295  314 #> [13926,]  279  294  311 #> [13927,]  280  295  314 #> [13928,]  280  295  314 #> [13929,]  279  294  312 #> [13930,]  279  294  312 #> [13931,]  279  294  312 #> [13932,]  280  295  312 #> [13933,]  280  295  311 #> [13934,]  279  294  312 #> [13935,]  279  294  312 #> [13936,]  280  295  312 #> [13937,]  279  294  314 #> [13938,]  280  295  312 #> [13939,]  280  295  313 #> [13940,]  280  295  312 #> [13941,]  280  295  312 #> [13942,]  279  294  312 #> [13943,]  279  294  311 #> [13944,]  279  294  312 #> [13945,]  280  295  311 #> [13946,]  280  295  311 #> [13947,]  279  294  314 #> [13948,]  279  294  312 #> [13949,]  280  295  312 #> [13950,]  280  295  311 #> [13951,]  280  295  311 #> [13952,]  280  295  312 #> [13953,]  280  295  311 #> [13954,]  280  295  312 #> [13955,]  280  295  312 #> [13956,]  279  294  311 #> [13957,]  280  295  311 #> [13958,]  280  295  311 #> [13959,]  280  295  312 #> [13960,]  279  294  312 #> [13961,]  279  294  311 #> [13962,]  280  295  312 #> [13963,]  279  294  312 #> [13964,]  279  294  311 #> [13965,]  279  294  311 #> [13966,]  279  294  311 #> [13967,]  280  295  312 #> [13968,]  279  294  311 #> [13969,]  280  295  312 #> [13970,]  279  294  313 #> [13971,]  280  295  314 #> [13972,]  280  295  311 #> [13973,]  280  295  314 #> [13974,]  280  295  314 #> [13975,]  279  294  314 #> [13976,]  280  295  311 #> [13977,]  280  295  314 #> [13978,]  279  294  311 #> [13979,]  279  294  312 #> [13980,]  280  295  312 #> [13981,]  279  294  311 #> [13982,]  280  295  314 #> [13983,]  280  295  312 #> [13984,]  280  295  314 #> [13985,]  280  295  312 #> [13986,]  280  295  312 #> [13987,]  280  295  314 #> [13988,]  280  295  314 #> [13989,]  280  295  312 #> [13990,]  280  295  314 #> [13991,]  280  295  312 #> [13992,]  279  294  311 #> [13993,]  280  295  312 #> [13994,]  279  294  311 #> [13995,]  279  294  313 #> [13996,]  279  294  311 #> [13997,]  280  295  311 #> [13998,]  280  295  312 #> [13999,]  280  295  312 #> [14000,]  279  294  314 #> [14001,]  282  297  315 #> [14002,]  281  296  315 #> [14003,]  281  296  315 #> [14004,]  281  296  315 #> [14005,]  282  297  315 #> [14006,]  281  296  315 #> [14007,]  281  296  315 #> [14008,]  281  296  315 #> [14009,]  281  296  315 #> [14010,]  282  297  315 #> [14011,]  282  297  315 #> [14012,]  282  297  315 #> [14013,]  281  296  315 #> [14014,]  282  297  315 #> [14015,]  282  297  315 #> [14016,]  281  296  315 #> [14017,]  282  297  315 #> [14018,]  282  297  315 #> [14019,]  281  296  315 #> [14020,]  281  296  315 #> [14021,]  281  296  315 #> [14022,]  282  297  315 #> [14023,]  281  296  315 #> [14024,]  281  296  315 #> [14025,]  281  296  315 #> [14026,]  282  297  315 #> [14027,]  282  297  315 #> [14028,]  281  296  315 #> [14029,]  281  296  315 #> [14030,]  281  296  315 #> [14031,]  282  297  315 #> [14032,]  282  297  315 #> [14033,]  281  296  315 #> [14034,]  281  296  315 #> [14035,]  281  296  315 #> [14036,]  281  296  315 #> [14037,]  281  296  315 #> [14038,]  282  297  315 #> [14039,]  281  296  315 #> [14040,]  281  296  315 #> [14041,]  281  296  315 #> [14042,]  281  296  315 #> [14043,]  282  297  315 #> [14044,]  281  296  315 #> [14045,]  281  296  315 #> [14046,]  281  296  315 #> [14047,]  282  297  315 #> [14048,]  281  296  315 #> [14049,]  281  296  315 #> [14050,]  281  296  315 #> [14051,]  281  296  315 #> [14052,]  282  297  315 #> [14053,]  281  296  315 #> [14054,]  281  296  315 #> [14055,]  281  296  315 #> [14056,]  281  296  315 #> [14057,]  281  296  315 #> [14058,]  282  297  315 #> [14059,]  282  297  315 #> [14060,]  281  296  315 #> [14061,]  282  297  315 #> [14062,]  281  296  315 #> [14063,]  281  296  315 #> [14064,]  281  296  315 #> [14065,]  281  296  315 #> [14066,]  282  297  315 #> [14067,]  281  296  315 #> [14068,]  281  296  315 #> [14069,]  281  296  315 #> [14070,]  282  297  315 #> [14071,]  282  297  315 #> [14072,]  281  296  315 #> [14073,]  281  296  315 #> [14074,]  281  296  315 #> [14075,]  282  297  315 #> [14076,]  281  296  315 #> [14077,]  282  297  315 #> [14078,]  281  296  315 #> [14079,]  282  297  315 #> [14080,]  281  296  315 #> [14081,]  281  296  315 #> [14082,]  281  296  315 #> [14083,]  281  296  315 #> [14084,]  281  296  315 #> [14085,]  281  296  315 #> [14086,]  281  296  315 #> [14087,]  282  297  315 #> [14088,]  281  296  315 #> [14089,]  281  296  315 #> [14090,]  282  297  315 #> [14091,]  282  297  315 #> [14092,]  281  296  315 #> [14093,]  281  296  315 #> [14094,]  281  296  315 #> [14095,]  282  297  315 #> [14096,]  281  296  315 #> [14097,]  281  296  315 #> [14098,]  281  296  315 #> [14099,]  281  296  315 #> [14100,]  282  297  315 #> [14101,]  283  300  316 #> [14102,]  283  300  316 #> [14103,]  284  298  317 #> [14104,]  283  300  316 #> [14105,]  283  300  316 #> [14106,]  283  300  316 #> [14107,]  284  298  318 #> [14108,]  283  300  316 #> [14109,]  283  300  316 #> [14110,]  283  300  316 #> [14111,]  283  300  316 #> [14112,]  283  299  316 #> [14113,]  285  298  318 #> [14114,]  283  299  316 #> [14115,]  283  300  316 #> [14116,]  285  298  318 #> [14117,]  283  300  316 #> [14118,]  283  300  316 #> [14119,]  284  298  317 #> [14120,]  283  300  316 #> [14121,]  285  298  318 #> [14122,]  283  300  316 #> [14123,]  284  298  318 #> [14124,]  283  300  316 #> [14125,]  283  300  316 #> [14126,]  283  299  316 #> [14127,]  283  300  316 #> [14128,]  283  300  316 #> [14129,]  283  300  316 #> [14130,]  284  298  317 #> [14131,]  284  298  318 #> [14132,]  283  299  316 #> [14133,]  283  300  316 #> [14134,]  284  298  317 #> [14135,]  285  298  317 #> [14136,]  284  298  317 #> [14137,]  285  298  318 #> [14138,]  283  300  316 #> [14139,]  284  298  318 #> [14140,]  284  298  317 #> [14141,]  283  300  316 #> [14142,]  283  300  316 #> [14143,]  283  300  316 #> [14144,]  283  300  316 #> [14145,]  283  300  316 #> [14146,]  283  300  316 #> [14147,]  284  298  318 #> [14148,]  283  299  316 #> [14149,]  284  298  317 #> [14150,]  283  300  316 #> [14151,]  283  299  316 #> [14152,]  283  300  316 #> [14153,]  283  300  316 #> [14154,]  284  298  317 #> [14155,]  283  300  316 #> [14156,]  283  300  316 #> [14157,]  283  300  316 #> [14158,]  283  300  316 #> [14159,]  283  300  316 #> [14160,]  283  300  316 #> [14161,]  283  300  316 #> [14162,]  284  298  317 #> [14163,]  283  300  316 #> [14164,]  283  300  316 #> [14165,]  283  300  316 #> [14166,]  283  299  316 #> [14167,]  283  300  316 #> [14168,]  283  300  316 #> [14169,]  283  299  316 #> [14170,]  285  298  318 #> [14171,]  283  300  316 #> [14172,]  283  300  316 #> [14173,]  283  300  316 #> [14174,]  283  300  316 #> [14175,]  283  300  316 #> [14176,]  283  300  316 #> [14177,]  285  298  318 #> [14178,]  283  300  316 #> [14179,]  285  298  318 #> [14180,]  284  298  317 #> [14181,]  283  300  316 #> [14182,]  283  300  316 #> [14183,]  285  298  317 #> [14184,]  283  300  316 #> [14185,]  283  300  316 #> [14186,]  283  300  316 #> [14187,]  283  300  316 #> [14188,]  283  300  316 #> [14189,]  283  299  316 #> [14190,]  283  300  316 #> [14191,]  283  300  316 #> [14192,]  283  300  316 #> [14193,]  285  298  317 #> [14194,]  283  300  316 #> [14195,]  284  298  318 #> [14196,]  283  300  316 #> [14197,]  283  300  316 #> [14198,]  284  298  317 #> [14199,]  283  300  316 #> [14200,]  285  298  318 #> [14201,]  287  302  320 #> [14202,]  287  302  320 #> [14203,]  286  301  319 #> [14204,]  287  302  320 #> [14205,]  286  301  319 #> [14206,]  286  301  319 #> [14207,]  287  302  320 #> [14208,]  287  303  320 #> [14209,]  287  303  320 #> [14210,]  287  302  320 #> [14211,]  286  301  319 #> [14212,]  286  301  319 #> [14213,]  287  302  320 #> [14214,]  286  301  319 #> [14215,]  287  303  320 #> [14216,]  287  302  320 #> [14217,]  287  302  320 #> [14218,]  287  302  320 #> [14219,]  286  301  319 #> [14220,]  286  301  319 #> [14221,]  287  302  320 #> [14222,]  286  301  319 #> [14223,]  287  302  320 #> [14224,]  286  301  319 #> [14225,]  287  302  320 #> [14226,]  286  301  319 #> [14227,]  287  302  320 #> [14228,]  287  302  320 #> [14229,]  286  301  319 #> [14230,]  286  301  319 #> [14231,]  287  302  320 #> [14232,]  286  301  319 #> [14233,]  286  301  319 #> [14234,]  286  301  319 #> [14235,]  286  301  319 #> [14236,]  286  301  319 #> [14237,]  287  302  320 #> [14238,]  287  302  320 #> [14239,]  287  302  320 #> [14240,]  286  301  319 #> [14241,]  286  301  319 #> [14242,]  286  301  319 #> [14243,]  287  303  320 #> [14244,]  287  302  320 #> [14245,]  287  303  320 #> [14246,]  287  303  320 #> [14247,]  287  302  320 #> [14248,]  286  301  319 #> [14249,]  287  302  320 #> [14250,]  287  302  320 #> [14251,]  286  301  319 #> [14252,]  286  301  319 #> [14253,]  287  302  320 #> [14254,]  286  301  319 #> [14255,]  286  301  319 #> [14256,]  287  303  320 #> [14257,]  286  301  319 #> [14258,]  286  301  319 #> [14259,]  287  302  320 #> [14260,]  286  301  319 #> [14261,]  287  303  320 #> [14262,]  286  301  319 #> [14263,]  286  301  319 #> [14264,]  287  303  320 #> [14265,]  286  301  319 #> [14266,]  286  301  319 #> [14267,]  286  301  319 #> [14268,]  286  301  319 #> [14269,]  286  301  319 #> [14270,]  287  302  320 #> [14271,]  287  302  320 #> [14272,]  287  303  320 #> [14273,]  287  302  320 #> [14274,]  287  302  320 #> [14275,]  287  302  320 #> [14276,]  287  303  320 #> [14277,]  287  302  320 #> [14278,]  286  301  319 #> [14279,]  287  302  320 #> [14280,]  286  301  319 #> [14281,]  286  301  319 #> [14282,]  287  302  320 #> [14283,]  286  301  319 #> [14284,]  287  302  320 #> [14285,]  286  301  319 #> [14286,]  287  302  320 #> [14287,]  287  302  320 #> [14288,]  287  302  320 #> [14289,]  286  301  319 #> [14290,]  287  302  320 #> [14291,]  286  301  319 #> [14292,]  287  303  320 #> [14293,]  286  301  319 #> [14294,]  287  303  320 #> [14295,]  287  302  320 #> [14296,]  287  303  320 #> [14297,]  286  301  319 #> [14298,]  286  301  319 #> [14299,]  286  301  319 #> [14300,]  287  302  320 #> [14301,]  288  305  322 #> [14302,]  288  306  322 #> [14303,]  288  306  322 #> [14304,]  289  304  321 #> [14305,]  288  305  322 #> [14306,]  288  306  322 #> [14307,]  288  305  323 #> [14308,]  288  305  322 #> [14309,]  288  305  322 #> [14310,]  289  304  321 #> [14311,]  288  305  322 #> [14312,]  288  306  322 #> [14313,]  288  305  322 #> [14314,]  288  305  322 #> [14315,]  289  304  321 #> [14316,]  289  304  321 #> [14317,]  288  305  323 #> [14318,]  289  304  321 #> [14319,]  288  306  322 #> [14320,]  288  306  322 #> [14321,]  289  304  321 #> [14322,]  288  305  322 #> [14323,]  289  304  321 #> [14324,]  288  305  322 #> [14325,]  289  304  321 #> [14326,]  288  305  322 #> [14327,]  289  304  321 #> [14328,]  288  306  323 #> [14329,]  288  305  322 #> [14330,]  288  305  322 #> [14331,]  288  306  322 #> [14332,]  288  305  322 #> [14333,]  288  306  322 #> [14334,]  288  306  322 #> [14335,]  288  305  322 #> [14336,]  288  305  322 #> [14337,]  288  305  322 #> [14338,]  288  305  322 #> [14339,]  289  304  321 #> [14340,]  288  305  322 #> [14341,]  288  305  322 #> [14342,]  288  305  322 #> [14343,]  289  304  321 #> [14344,]  288  305  322 #> [14345,]  289  304  321 #> [14346,]  288  305  322 #> [14347,]  288  305  323 #> [14348,]  288  305  322 #> [14349,]  288  305  322 #> [14350,]  288  305  322 #> [14351,]  288  305  322 #> [14352,]  288  305  322 #> [14353,]  289  304  321 #> [14354,]  288  305  322 #> [14355,]  288  305  322 #> [14356,]  288  305  322 #> [14357,]  288  305  322 #> [14358,]  288  305  322 #> [14359,]  288  305  322 #> [14360,]  288  306  322 #> [14361,]  289  304  321 #> [14362,]  288  305  322 #> [14363,]  288  305  322 #> [14364,]  288  305  323 #> [14365,]  288  306  322 #> [14366,]  288  305  322 #> [14367,]  288  305  322 #> [14368,]  288  305  322 #> [14369,]  288  305  322 #> [14370,]  288  306  322 #> [14371,]  288  306  323 #> [14372,]  289  304  321 #> [14373,]  289  304  321 #> [14374,]  289  304  321 #> [14375,]  289  304  321 #> [14376,]  289  304  321 #> [14377,]  289  304  321 #> [14378,]  288  305  322 #> [14379,]  288  305  322 #> [14380,]  288  305  322 #> [14381,]  288  305  322 #> [14382,]  288  305  322 #> [14383,]  288  305  322 #> [14384,]  289  304  321 #> [14385,]  288  305  322 #> [14386,]  288  305  322 #> [14387,]  288  305  322 #> [14388,]  288  305  323 #> [14389,]  288  305  322 #> [14390,]  288  305  322 #> [14391,]  288  305  322 #> [14392,]  288  305  322 #> [14393,]  288  306  322 #> [14394,]  289  304  321 #> [14395,]  289  304  321 #> [14396,]  288  305  322 #> [14397,]  288  306  322 #> [14398,]  288  306  322 #> [14399,]  288  305  322 #> [14400,]  289  304  321 #> [14401,]  291  308  325 #> [14402,]  291  308  325 #> [14403,]  291  308  326 #> [14404,]  291  308  325 #> [14405,]  291  308  325 #> [14406,]  291  308  325 #> [14407,]  291  308  327 #> [14408,]  291  308  327 #> [14409,]  291  308  325 #> [14410,]  291  308  325 #> [14411,]  291  308  325 #> [14412,]  291  308  325 #> [14413,]  291  308  327 #> [14414,]  291  308  325 #> [14415,]  291  308  325 #> [14416,]  291  308  327 #> [14417,]  291  308  325 #> [14418,]  291  308  325 #> [14419,]  291  308  325 #> [14420,]  291  308  327 #> [14421,]  291  308  325 #> [14422,]  291  308  327 #> [14423,]  291  308  325 #> [14424,]  291  308  326 #> [14425,]  290  307  324 #> [14426,]  291  308  325 #> [14427,]  291  308  325 #> [14428,]  291  308  325 #> [14429,]  291  308  325 #> [14430,]  291  308  325 #> [14431,]  291  308  325 #> [14432,]  291  308  325 #> [14433,]  291  308  325 #> [14434,]  291  308  325 #> [14435,]  291  308  325 #> [14436,]  291  308  325 #> [14437,]  291  308  325 #> [14438,]  291  308  325 #> [14439,]  291  308  326 #> [14440,]  291  308  326 #> [14441,]  291  308  325 #> [14442,]  291  308  325 #> [14443,]  291  308  325 #> [14444,]  291  308  327 #> [14445,]  291  308  325 #> [14446,]  291  308  327 #> [14447,]  291  308  325 #> [14448,]  291  308  325 #> [14449,]  291  308  327 #> [14450,]  291  308  327 #> [14451,]  291  308  325 #> [14452,]  291  308  325 #> [14453,]  291  308  327 #> [14454,]  291  308  326 #> [14455,]  291  308  327 #> [14456,]  290  307  324 #> [14457,]  291  308  325 #> [14458,]  291  308  325 #> [14459,]  291  308  327 #> [14460,]  291  308  325 #> [14461,]  291  308  325 #> [14462,]  291  308  325 #> [14463,]  291  308  327 #> [14464,]  291  308  325 #> [14465,]  290  307  324 #> [14466,]  291  308  327 #> [14467,]  291  308  325 #> [14468,]  291  308  325 #> [14469,]  291  308  325 #> [14470,]  291  308  326 #> [14471,]  291  308  325 #> [14472,]  291  308  326 #> [14473,]  291  308  325 #> [14474,]  291  308  325 #> [14475,]  291  308  325 #> [14476,]  291  308  325 #> [14477,]  291  308  325 #> [14478,]  291  308  327 #> [14479,]  291  308  325 #> [14480,]  290  307  324 #> [14481,]  291  308  325 #> [14482,]  291  308  325 #> [14483,]  291  308  325 #> [14484,]  291  308  327 #> [14485,]  290  307  324 #> [14486,]  291  308  327 #> [14487,]  291  308  325 #> [14488,]  291  308  325 #> [14489,]  291  308  327 #> [14490,]  291  308  327 #> [14491,]  291  308  325 #> [14492,]  291  308  325 #> [14493,]  291  308  325 #> [14494,]  291  308  325 #> [14495,]  291  308  325 #> [14496,]  291  308  325 #> [14497,]  291  308  325 #> [14498,]  291  308  326 #> [14499,]  291  308  325 #> [14500,]  291  308  327 #> [14501,]  293  310  329 #> [14502,]  293  310  329 #> [14503,]  292  309  328 #> [14504,]  293  310  329 #> [14505,]  293  310  329 #> [14506,]  292  309  328 #> [14507,]  292  309  328 #> [14508,]  293  310  329 #> [14509,]  293  310  329 #> [14510,]  293  310  329 #> [14511,]  293  310  329 #> [14512,]  293  310  329 #> [14513,]  293  310  329 #> [14514,]  293  310  329 #> [14515,]  293  310  329 #> [14516,]  293  310  329 #> [14517,]  293  310  329 #> [14518,]  293  310  329 #> [14519,]  293  310  329 #> [14520,]  292  309  328 #> [14521,]  292  309  328 #> [14522,]  293  310  329 #> [14523,]  292  309  328 #> [14524,]  293  310  329 #> [14525,]  292  309  328 #> [14526,]  293  310  329 #> [14527,]  293  310  329 #> [14528,]  293  310  329 #> [14529,]  293  310  329 #> [14530,]  293  310  329 #> [14531,]  293  310  329 #> [14532,]  293  310  329 #> [14533,]  293  310  329 #> [14534,]  292  309  328 #> [14535,]  292  309  328 #> [14536,]  293  310  329 #> [14537,]  292  309  328 #> [14538,]  293  310  329 #> [14539,]  293  310  329 #> [14540,]  293  310  329 #> [14541,]  293  310  329 #> [14542,]  292  309  328 #> [14543,]  293  310  329 #> [14544,]  292  309  328 #> [14545,]  293  310  329 #> [14546,]  293  310  329 #> [14547,]  293  310  329 #> [14548,]  293  310  329 #> [14549,]  293  310  329 #> [14550,]  292  309  328 #> [14551,]  293  310  329 #> [14552,]  293  310  329 #> [14553,]  292  309  328 #> [14554,]  292  309  328 #> [14555,]  292  309  328 #> [14556,]  292  309  328 #> [14557,]  292  309  328 #> [14558,]  293  310  329 #> [14559,]  293  310  329 #> [14560,]  293  310  329 #> [14561,]  293  310  329 #> [14562,]  293  310  329 #> [14563,]  293  310  329 #> [14564,]  292  309  328 #> [14565,]  292  309  328 #> [14566,]  293  310  329 #> [14567,]  293  310  329 #> [14568,]  293  310  329 #> [14569,]  293  310  329 #> [14570,]  293  310  329 #> [14571,]  293  310  329 #> [14572,]  293  310  329 #> [14573,]  292  309  328 #> [14574,]  292  309  328 #> [14575,]  293  310  329 #> [14576,]  293  310  329 #> [14577,]  293  310  329 #> [14578,]  293  310  329 #> [14579,]  293  310  329 #> [14580,]  292  309  328 #> [14581,]  293  310  329 #> [14582,]  292  309  328 #> [14583,]  293  310  329 #> [14584,]  292  309  328 #> [14585,]  292  309  328 #> [14586,]  292  309  328 #> [14587,]  293  310  329 #> [14588,]  292  309  328 #> [14589,]  292  309  328 #> [14590,]  293  310  329 #> [14591,]  293  310  329 #> [14592,]  293  310  329 #> [14593,]  293  310  329 #> [14594,]  292  309  328 #> [14595,]  293  310  329 #> [14596,]  293  310  329 #> [14597,]  293  310  329 #> [14598,]  292  309  328 #> [14599,]  292  309  328 #> [14600,]  293  310  329 #> [14601,]  294  311  330 #> [14602,]  294  311  330 #> [14603,]  294  311  330 #> [14604,]  295  312  331 #> [14605,]  294  311  330 #> [14606,]  294  311  330 #> [14607,]  294  311  330 #> [14608,]  294  311  330 #> [14609,]  295  312  331 #> [14610,]  294  311  330 #> [14611,]  295  312  331 #> [14612,]  295  312  331 #> [14613,]  294  311  330 #> [14614,]  295  312  331 #> [14615,]  295  312  331 #> [14616,]  294  311  330 #> [14617,]  294  311  330 #> [14618,]  295  312  331 #> [14619,]  295  312  331 #> [14620,]  294  311  330 #> [14621,]  295  312  331 #> [14622,]  294  311  330 #> [14623,]  294  311  330 #> [14624,]  294  311  330 #> [14625,]  294  311  330 #> [14626,]  295  312  331 #> [14627,]  295  312  331 #> [14628,]  294  311  330 #> [14629,]  294  311  330 #> [14630,]  294  311  330 #> [14631,]  295  312  331 #> [14632,]  294  311  330 #> [14633,]  295  312  331 #> [14634,]  294  311  330 #> [14635,]  294  311  330 #> [14636,]  295  312  331 #> [14637,]  294  311  330 #> [14638,]  295  312  331 #> [14639,]  294  311  330 #> [14640,]  294  311  330 #> [14641,]  295  312  331 #> [14642,]  295  312  331 #> [14643,]  294  311  330 #> [14644,]  294  311  330 #> [14645,]  294  311  330 #> [14646,]  294  311  330 #> [14647,]  294  311  330 #> [14648,]  295  312  331 #> [14649,]  294  311  330 #> [14650,]  294  311  330 #> [14651,]  294  311  330 #> [14652,]  294  311  330 #> [14653,]  294  311  330 #> [14654,]  294  311  330 #> [14655,]  294  311  330 #> [14656,]  294  311  330 #> [14657,]  294  311  330 #> [14658,]  295  312  331 #> [14659,]  294  311  330 #> [14660,]  294  311  330 #> [14661,]  295  312  331 #> [14662,]  294  311  330 #> [14663,]  294  311  330 #> [14664,]  294  311  330 #> [14665,]  294  311  330 #> [14666,]  294  311  330 #> [14667,]  294  311  330 #> [14668,]  295  312  331 #> [14669,]  295  312  331 #> [14670,]  294  311  330 #> [14671,]  294  311  330 #> [14672,]  294  311  330 #> [14673,]  294  311  330 #> [14674,]  295  312  331 #> [14675,]  295  312  331 #> [14676,]  294  311  330 #> [14677,]  294  311  330 #> [14678,]  294  311  330 #> [14679,]  294  311  330 #> [14680,]  294  311  330 #> [14681,]  294  311  330 #> [14682,]  295  312  331 #> [14683,]  294  311  330 #> [14684,]  294  311  330 #> [14685,]  295  312  331 #> [14686,]  294  311  330 #> [14687,]  294  311  330 #> [14688,]  294  311  330 #> [14689,]  294  311  330 #> [14690,]  294  311  330 #> [14691,]  294  311  330 #> [14692,]  295  312  331 #> [14693,]  295  312  331 #> [14694,]  294  311  330 #> [14695,]  294  311  330 #> [14696,]  295  312  331 #> [14697,]  295  312  331 #> [14698,]  294  311  330 #> [14699,]  294  311  330 #> [14700,]  294  311  330 #> [14701,]  297  314  332 #> [14702,]  297  314  333 #> [14703,]  297  314  332 #> [14704,]  297  314  332 #> [14705,]  297  314  333 #> [14706,]  296  313  332 #> [14707,]  297  314  333 #> [14708,]  297  314  332 #> [14709,]  297  314  333 #> [14710,]  297  314  333 #> [14711,]  297  314  332 #> [14712,]  297  314  333 #> [14713,]  297  314  333 #> [14714,]  297  314  332 #> [14715,]  297  314  333 #> [14716,]  297  314  332 #> [14717,]  297  314  333 #> [14718,]  297  314  333 #> [14719,]  296  313  332 #> [14720,]  297  314  333 #> [14721,]  297  314  333 #> [14722,]  297  314  333 #> [14723,]  297  314  333 #> [14724,]  297  314  333 #> [14725,]  297  314  333 #> [14726,]  297  314  332 #> [14727,]  297  314  333 #> [14728,]  297  314  332 #> [14729,]  297  314  333 #> [14730,]  297  314  333 #> [14731,]  297  314  333 #> [14732,]  297  314  333 #> [14733,]  297  314  333 #> [14734,]  296  313  332 #> [14735,]  297  314  332 #> [14736,]  297  314  333 #> [14737,]  297  314  332 #> [14738,]  296  313  332 #> [14739,]  297  314  333 #> [14740,]  297  314  333 #> [14741,]  297  314  333 #> [14742,]  297  314  332 #> [14743,]  297  314  333 #> [14744,]  297  314  333 #> [14745,]  296  313  332 #> [14746,]  297  314  333 #> [14747,]  297  314  333 #> [14748,]  297  314  333 #> [14749,]  296  313  332 #> [14750,]  297  314  333 #> [14751,]  297  314  333 #> [14752,]  296  313  332 #> [14753,]  297  314  333 #> [14754,]  297  314  333 #> [14755,]  297  314  332 #> [14756,]  297  314  332 #> [14757,]  297  314  333 #> [14758,]  297  314  333 #> [14759,]  297  314  332 #> [14760,]  297  314  333 #> [14761,]  297  314  333 #> [14762,]  297  314  332 #> [14763,]  297  314  333 #> [14764,]  297  314  332 #> [14765,]  297  314  332 #> [14766,]  297  314  333 #> [14767,]  297  314  333 #> [14768,]  296  313  332 #> [14769,]  297  314  332 #> [14770,]  297  314  333 #> [14771,]  297  314  333 #> [14772,]  296  313  332 #> [14773,]  297  314  332 #> [14774,]  297  314  333 #> [14775,]  297  314  333 #> [14776,]  297  314  333 #> [14777,]  297  314  332 #> [14778,]  297  314  333 #> [14779,]  297  314  332 #> [14780,]  297  314  333 #> [14781,]  297  314  333 #> [14782,]  297  314  333 #> [14783,]  297  314  333 #> [14784,]  297  314  333 #> [14785,]  297  314  333 #> [14786,]  297  314  333 #> [14787,]  297  314  333 #> [14788,]  297  314  333 #> [14789,]  297  314  332 #> [14790,]  297  314  333 #> [14791,]  297  314  332 #> [14792,]  297  314  333 #> [14793,]  297  314  333 #> [14794,]  297  314  332 #> [14795,]  297  314  333 #> [14796,]  296  313  332 #> [14797,]  297  314  332 #> [14798,]  297  314  333 #> [14799,]  297  314  333 #> [14800,]  297  314  332 #> [14801,]  298  316  335 #> [14802,]  298  315  334 #> [14803,]  298  315  334 #> [14804,]  298  316  335 #> [14805,]  299  315  334 #> [14806,]  298  315  334 #> [14807,]  298  316  335 #> [14808,]  298  316  335 #> [14809,]  298  316  335 #> [14810,]  298  316  335 #> [14811,]  298  315  334 #> [14812,]  298  315  334 #> [14813,]  298  316  335 #> [14814,]  298  315  334 #> [14815,]  298  316  335 #> [14816,]  298  316  335 #> [14817,]  298  316  335 #> [14818,]  299  316  335 #> [14819,]  298  315  334 #> [14820,]  298  315  334 #> [14821,]  298  316  335 #> [14822,]  298  315  334 #> [14823,]  298  316  335 #> [14824,]  298  315  334 #> [14825,]  298  316  335 #> [14826,]  298  315  334 #> [14827,]  298  316  335 #> [14828,]  298  316  335 #> [14829,]  298  315  334 #> [14830,]  298  315  334 #> [14831,]  298  315  334 #> [14832,]  298  315  334 #> [14833,]  298  315  334 #> [14834,]  298  315  334 #> [14835,]  298  315  334 #> [14836,]  298  315  334 #> [14837,]  298  316  335 #> [14838,]  298  316  335 #> [14839,]  298  316  335 #> [14840,]  298  315  334 #> [14841,]  298  315  334 #> [14842,]  298  315  334 #> [14843,]  298  316  335 #> [14844,]  298  316  335 #> [14845,]  298  316  335 #> [14846,]  298  316  335 #> [14847,]  298  316  335 #> [14848,]  298  315  334 #> [14849,]  298  315  334 #> [14850,]  298  315  334 #> [14851,]  298  315  334 #> [14852,]  298  315  334 #> [14853,]  298  316  335 #> [14854,]  298  315  334 #> [14855,]  298  315  334 #> [14856,]  298  316  335 #> [14857,]  298  315  334 #> [14858,]  298  315  334 #> [14859,]  298  315  334 #> [14860,]  298  315  334 #> [14861,]  298  316  335 #> [14862,]  298  315  334 #> [14863,]  298  315  334 #> [14864,]  298  316  335 #> [14865,]  298  315  334 #> [14866,]  298  315  334 #> [14867,]  298  315  334 #> [14868,]  298  315  334 #> [14869,]  298  315  334 #> [14870,]  298  316  335 #> [14871,]  299  316  335 #> [14872,]  298  316  335 #> [14873,]  298  316  335 #> [14874,]  298  316  335 #> [14875,]  299  316  335 #> [14876,]  298  316  335 #> [14877,]  298  316  335 #> [14878,]  298  315  334 #> [14879,]  298  316  335 #> [14880,]  298  315  334 #> [14881,]  298  315  334 #> [14882,]  298  316  335 #> [14883,]  298  315  334 #> [14884,]  298  316  335 #> [14885,]  298  315  334 #> [14886,]  298  316  335 #> [14887,]  298  316  335 #> [14888,]  298  316  335 #> [14889,]  298  315  334 #> [14890,]  298  316  335 #> [14891,]  298  315  334 #> [14892,]  298  315  334 #> [14893,]  298  315  334 #> [14894,]  298  316  335 #> [14895,]  298  316  335 #> [14896,]  298  316  335 #> [14897,]  298  315  334 #> [14898,]  298  315  334 #> [14899,]  298  315  334 #> [14900,]  299  316  335 #> [14901,]  302  318  337 #> [14902,]  300  317  336 #> [14903,]  300  317  336 #> [14904,]  301  318  337 #> [14905,]  300  317  336 #> [14906,]  300  317  336 #> [14907,]  300  317  336 #> [14908,]  301  318  337 #> [14909,]  301  318  337 #> [14910,]  300  317  336 #> [14911,]  302  318  337 #> [14912,]  300  317  336 #> [14913,]  302  318  337 #> [14914,]  300  317  336 #> [14915,]  300  317  336 #> [14916,]  300  317  336 #> [14917,]  302  318  337 #> [14918,]  300  317  336 #> [14919,]  300  317  336 #> [14920,]  300  317  336 #> [14921,]  300  317  336 #> [14922,]  302  318  337 #> [14923,]  300  317  336 #> [14924,]  300  317  336 #> [14925,]  300  317  336 #> [14926,]  300  317  336 #> [14927,]  302  318  337 #> [14928,]  300  317  336 #> [14929,]  300  317  336 #> [14930,]  301  318  337 #> [14931,]  300  317  336 #> [14932,]  300  317  336 #> [14933,]  300  317  336 #> [14934,]  300  317  336 #> [14935,]  302  318  337 #> [14936,]  300  317  336 #> [14937,]  300  317  336 #> [14938,]  300  317  336 #> [14939,]  300  317  336 #> [14940,]  300  317  336 #> [14941,]  300  317  336 #> [14942,]  300  317  336 #> [14943,]  301  318  337 #> [14944,]  302  318  337 #> [14945,]  300  317  336 #> [14946,]  302  318  337 #> [14947,]  300  317  336 #> [14948,]  300  317  336 #> [14949,]  302  318  337 #> [14950,]  300  317  336 #> [14951,]  300  317  336 #> [14952,]  302  318  337 #> [14953,]  300  317  336 #> [14954,]  302  318  337 #> [14955,]  302  318  337 #> [14956,]  300  317  336 #> [14957,]  300  317  336 #> [14958,]  302  318  337 #> [14959,]  300  317  336 #> [14960,]  300  317  336 #> [14961,]  300  317  336 #> [14962,]  300  317  336 #> [14963,]  300  317  336 #> [14964,]  300  317  336 #> [14965,]  300  317  336 #> [14966,]  302  318  337 #> [14967,]  300  317  336 #> [14968,]  300  317  336 #> [14969,]  302  318  337 #> [14970,]  300  317  336 #> [14971,]  300  317  336 #> [14972,]  300  317  336 #> [14973,]  300  317  336 #> [14974,]  300  317  336 #> [14975,]  300  317  336 #> [14976,]  300  317  336 #> [14977,]  300  317  336 #> [14978,]  300  317  336 #> [14979,]  302  318  337 #> [14980,]  302  318  337 #> [14981,]  302  318  337 #> [14982,]  302  318  337 #> [14983,]  302  318  337 #> [14984,]  300  317  336 #> [14985,]  300  317  336 #> [14986,]  300  317  336 #> [14987,]  302  318  337 #> [14988,]  302  318  337 #> [14989,]  301  318  337 #> [14990,]  302  318  337 #> [14991,]  300  317  336 #> [14992,]  302  318  337 #> [14993,]  300  317  336 #> [14994,]  300  317  336 #> [14995,]  301  318  337 #> [14996,]  302  318  337 #> [14997,]  300  317  336 #> [14998,]  300  317  336 #> [14999,]  302  318  337 #> [15000,]  300  317  336 #> [15001,]  304  320  338 #> [15002,]  303  319  339 #> [15003,]  303  319  339 #> [15004,]  303  319  339 #> [15005,]  303  319  339 #> [15006,]  304  320  338 #> [15007,]  303  319  339 #> [15008,]  303  319  339 #> [15009,]  303  319  339 #> [15010,]  303  319  339 #> [15011,]  303  319  339 #> [15012,]  303  319  339 #> [15013,]  304  320  338 #> [15014,]  304  320  338 #> [15015,]  304  320  338 #> [15016,]  304  320  338 #> [15017,]  304  320  338 #> [15018,]  303  319  339 #> [15019,]  303  319  339 #> [15020,]  303  319  339 #> [15021,]  304  320  338 #> [15022,]  303  319  339 #> [15023,]  303  319  339 #> [15024,]  303  319  339 #> [15025,]  303  319  339 #> [15026,]  303  319  339 #> [15027,]  303  319  339 #> [15028,]  303  319  339 #> [15029,]  304  320  338 #> [15030,]  303  319  339 #> [15031,]  303  319  339 #> [15032,]  303  319  339 #> [15033,]  304  320  338 #> [15034,]  303  319  339 #> [15035,]  303  319  339 #> [15036,]  303  319  339 #> [15037,]  303  319  339 #> [15038,]  303  319  339 #> [15039,]  303  319  339 #> [15040,]  303  319  339 #> [15041,]  304  320  338 #> [15042,]  303  319  339 #> [15043,]  303  319  339 #> [15044,]  304  320  338 #> [15045,]  303  319  339 #> [15046,]  303  319  339 #> [15047,]  303  319  339 #> [15048,]  303  319  339 #> [15049,]  303  319  339 #> [15050,]  304  320  338 #> [15051,]  303  319  339 #> [15052,]  303  319  339 #> [15053,]  303  319  339 #> [15054,]  303  319  339 #> [15055,]  303  319  339 #> [15056,]  303  319  339 #> [15057,]  303  319  339 #> [15058,]  303  319  339 #> [15059,]  304  320  338 #> [15060,]  303  319  339 #> [15061,]  304  320  338 #> [15062,]  303  319  339 #> [15063,]  303  319  339 #> [15064,]  303  319  339 #> [15065,]  303  319  339 #> [15066,]  303  319  339 #> [15067,]  303  319  339 #> [15068,]  304  320  338 #> [15069,]  303  319  339 #> [15070,]  304  320  338 #> [15071,]  303  319  339 #> [15072,]  303  319  339 #> [15073,]  304  320  338 #> [15074,]  303  319  339 #> [15075,]  303  319  339 #> [15076,]  304  320  338 #> [15077,]  303  319  339 #> [15078,]  303  319  339 #> [15079,]  303  319  339 #> [15080,]  303  319  339 #> [15081,]  304  320  338 #> [15082,]  303  319  339 #> [15083,]  304  320  338 #> [15084,]  303  319  339 #> [15085,]  303  319  339 #> [15086,]  304  320  338 #> [15087,]  303  319  339 #> [15088,]  303  319  339 #> [15089,]  303  319  339 #> [15090,]  303  319  339 #> [15091,]  303  319  339 #> [15092,]  303  319  339 #> [15093,]  303  319  339 #> [15094,]  303  319  339 #> [15095,]  303  319  339 #> [15096,]  304  320  338 #> [15097,]  303  319  339 #> [15098,]  303  319  339 #> [15099,]  304  320  338 #> [15100,]  303  319  339 #> [15101,]  305  321  341 #> [15102,]  305  321  341 #> [15103,]  305  321  341 #> [15104,]  305  321  341 #> [15105,]  305  321  341 #> [15106,]  306  322  340 #> [15107,]  305  321  341 #> [15108,]  306  322  340 #> [15109,]  306  322  340 #> [15110,]  305  321  341 #> [15111,]  305  321  341 #> [15112,]  306  322  340 #> [15113,]  305  321  341 #> [15114,]  305  321  341 #> [15115,]  306  322  340 #> [15116,]  305  321  341 #> [15117,]  305  321  341 #> [15118,]  305  321  341 #> [15119,]  305  321  341 #> [15120,]  306  322  340 #> [15121,]  305  321  341 #> [15122,]  305  321  341 #> [15123,]  305  321  341 #> [15124,]  305  321  341 #> [15125,]  305  321  341 #> [15126,]  306  322  340 #> [15127,]  305  321  341 #> [15128,]  305  321  341 #> [15129,]  305  321  341 #> [15130,]  305  321  341 #> [15131,]  305  321  341 #> [15132,]  305  321  341 #> [15133,]  306  322  340 #> [15134,]  305  321  341 #> [15135,]  305  321  341 #> [15136,]  305  321  341 #> [15137,]  305  321  341 #> [15138,]  305  321  341 #> [15139,]  305  321  341 #> [15140,]  305  321  341 #> [15141,]  305  321  341 #> [15142,]  305  321  341 #> [15143,]  306  322  340 #> [15144,]  305  321  341 #> [15145,]  306  322  340 #> [15146,]  306  322  340 #> [15147,]  305  321  341 #> [15148,]  305  321  341 #> [15149,]  305  321  341 #> [15150,]  306  322  340 #> [15151,]  306  322  340 #> [15152,]  305  321  341 #> [15153,]  306  322  340 #> [15154,]  305  321  341 #> [15155,]  305  321  341 #> [15156,]  306  322  340 #> [15157,]  306  322  340 #> [15158,]  306  322  340 #> [15159,]  305  321  341 #> [15160,]  305  321  341 #> [15161,]  306  322  340 #> [15162,]  305  321  341 #> [15163,]  305  321  341 #> [15164,]  306  322  340 #> [15165,]  306  322  340 #> [15166,]  306  322  340 #> [15167,]  305  321  341 #> [15168,]  306  322  340 #> [15169,]  305  321  341 #> [15170,]  305  321  341 #> [15171,]  305  321  341 #> [15172,]  306  322  340 #> [15173,]  305  321  341 #> [15174,]  305  321  341 #> [15175,]  305  321  341 #> [15176,]  306  322  340 #> [15177,]  305  321  341 #> [15178,]  306  322  340 #> [15179,]  305  321  341 #> [15180,]  305  321  341 #> [15181,]  306  322  340 #> [15182,]  305  321  341 #> [15183,]  305  321  341 #> [15184,]  305  321  341 #> [15185,]  305  321  341 #> [15186,]  305  321  341 #> [15187,]  305  321  341 #> [15188,]  305  321  341 #> [15189,]  305  321  341 #> [15190,]  305  321  341 #> [15191,]  305  321  341 #> [15192,]  306  322  340 #> [15193,]  305  321  341 #> [15194,]  306  322  340 #> [15195,]  305  321  341 #> [15196,]  306  322  340 #> [15197,]  306  322  340 #> [15198,]  305  321  341 #> [15199,]  305  321  341 #> [15200,]  305  321  341 #> [15201,]  308  324  343 #> [15202,]  308  323  342 #> [15203,]  307  324  343 #> [15204,]  308  324  343 #> [15205,]  308  324  343 #> [15206,]  308  323  342 #> [15207,]  307  324  343 #> [15208,]  308  324  343 #> [15209,]  308  324  343 #> [15210,]  308  324  343 #> [15211,]  308  324  343 #> [15212,]  308  323  342 #> [15213,]  307  324  343 #> [15214,]  308  324  343 #> [15215,]  308  323  342 #> [15216,]  307  324  343 #> [15217,]  308  323  342 #> [15218,]  308  324  343 #> [15219,]  307  324  343 #> [15220,]  308  324  343 #> [15221,]  307  324  343 #> [15222,]  308  324  343 #> [15223,]  307  323  342 #> [15224,]  307  324  343 #> [15225,]  308  324  343 #> [15226,]  308  324  343 #> [15227,]  308  324  343 #> [15228,]  308  324  343 #> [15229,]  308  323  342 #> [15230,]  307  324  343 #> [15231,]  307  323  342 #> [15232,]  308  324  343 #> [15233,]  308  324  343 #> [15234,]  307  323  342 #> [15235,]  307  324  343 #> [15236,]  307  324  343 #> [15237,]  307  323  342 #> [15238,]  308  324  343 #> [15239,]  307  324  343 #> [15240,]  307  324  343 #> [15241,]  308  324  343 #> [15242,]  308  323  342 #> [15243,]  308  323  342 #> [15244,]  307  323  342 #> [15245,]  308  324  343 #> [15246,]  308  324  343 #> [15247,]  307  323  342 #> [15248,]  308  323  342 #> [15249,]  307  324  343 #> [15250,]  308  324  343 #> [15251,]  308  324  343 #> [15252,]  308  324  343 #> [15253,]  308  324  343 #> [15254,]  307  324  343 #> [15255,]  308  324  343 #> [15256,]  308  324  343 #> [15257,]  308  324  343 #> [15258,]  308  324  343 #> [15259,]  308  324  343 #> [15260,]  308  324  343 #> [15261,]  308  324  343 #> [15262,]  307  324  343 #> [15263,]  308  323  342 #> [15264,]  308  323  342 #> [15265,]  308  324  343 #> [15266,]  308  324  343 #> [15267,]  308  324  343 #> [15268,]  308  324  343 #> [15269,]  308  324  343 #> [15270,]  307  323  342 #> [15271,]  308  324  343 #> [15272,]  308  324  343 #> [15273,]  308  324  343 #> [15274,]  308  324  343 #> [15275,]  308  323  342 #> [15276,]  308  324  343 #> [15277,]  307  324  343 #> [15278,]  308  323  342 #> [15279,]  307  323  342 #> [15280,]  307  324  343 #> [15281,]  308  323  342 #> [15282,]  308  324  343 #> [15283,]  307  324  343 #> [15284,]  308  324  343 #> [15285,]  308  324  343 #> [15286,]  308  324  343 #> [15287,]  308  324  343 #> [15288,]  308  324  343 #> [15289,]  308  324  343 #> [15290,]  308  324  343 #> [15291,]  308  324  343 #> [15292,]  308  323  342 #> [15293,]  307  324  343 #> [15294,]  308  323  342 #> [15295,]  307  323  342 #> [15296,]  308  324  343 #> [15297,]  308  324  343 #> [15298,]  307  324  343 #> [15299,]  308  324  343 #> [15300,]  307  323  342 #> [15301,]  309  325  345 #> [15302,]  309  325  345 #> [15303,]  309  325  345 #> [15304,]  310  326  344 #> [15305,]  309  325  345 #> [15306,]  310  326  344 #> [15307,]  309  325  345 #> [15308,]  309  325  345 #> [15309,]  310  326  344 #> [15310,]  310  326  344 #> [15311,]  310  326  344 #> [15312,]  310  326  344 #> [15313,]  309  325  345 #> [15314,]  310  326  344 #> [15315,]  310  326  344 #> [15316,]  309  325  345 #> [15317,]  309  325  345 #> [15318,]  310  326  344 #> [15319,]  310  326  344 #> [15320,]  309  325  345 #> [15321,]  310  326  344 #> [15322,]  309  325  345 #> [15323,]  309  325  345 #> [15324,]  309  325  345 #> [15325,]  309  325  345 #> [15326,]  310  326  344 #> [15327,]  310  326  344 #> [15328,]  309  325  345 #> [15329,]  309  325  345 #> [15330,]  310  326  344 #> [15331,]  310  326  344 #> [15332,]  310  326  344 #> [15333,]  310  326  344 #> [15334,]  309  325  345 #> [15335,]  309  325  345 #> [15336,]  310  326  344 #> [15337,]  309  325  345 #> [15338,]  310  326  344 #> [15339,]  309  325  345 #> [15340,]  309  325  345 #> [15341,]  310  326  344 #> [15342,]  310  326  344 #> [15343,]  309  325  345 #> [15344,]  309  325  345 #> [15345,]  309  325  345 #> [15346,]  309  325  345 #> [15347,]  309  325  345 #> [15348,]  310  326  344 #> [15349,]  309  325  345 #> [15350,]  309  325  345 #> [15351,]  309  325  345 #> [15352,]  310  326  344 #> [15353,]  309  325  345 #> [15354,]  309  325  345 #> [15355,]  309  325  345 #> [15356,]  309  325  345 #> [15357,]  309  325  345 #> [15358,]  310  326  344 #> [15359,]  309  325  345 #> [15360,]  310  326  344 #> [15361,]  310  326  344 #> [15362,]  310  326  344 #> [15363,]  309  325  345 #> [15364,]  310  326  344 #> [15365,]  309  325  345 #> [15366,]  309  325  345 #> [15367,]  310  326  344 #> [15368,]  310  326  344 #> [15369,]  310  326  344 #> [15370,]  309  325  345 #> [15371,]  309  325  345 #> [15372,]  309  325  345 #> [15373,]  310  326  344 #> [15374,]  310  326  344 #> [15375,]  310  326  344 #> [15376,]  309  325  345 #> [15377,]  309  325  345 #> [15378,]  309  325  345 #> [15379,]  309  325  345 #> [15380,]  309  325  345 #> [15381,]  309  325  345 #> [15382,]  310  326  344 #> [15383,]  309  325  345 #> [15384,]  309  325  345 #> [15385,]  310  326  344 #> [15386,]  309  325  345 #> [15387,]  309  325  345 #> [15388,]  309  325  345 #> [15389,]  309  325  345 #> [15390,]  309  325  345 #> [15391,]  309  325  345 #> [15392,]  310  326  344 #> [15393,]  310  326  344 #> [15394,]  309  325  345 #> [15395,]  309  325  345 #> [15396,]  310  326  344 #> [15397,]  310  326  344 #> [15398,]  309  325  345 #> [15399,]  310  326  344 #> [15400,]  309  325  345 #> [15401,]  312  328  346 #> [15402,]  311  327  347 #> [15403,]  312  328  346 #> [15404,]  312  328  346 #> [15405,]  312  328  346 #> [15406,]  311  327  347 #> [15407,]  312  328  346 #> [15408,]  312  328  346 #> [15409,]  312  328  346 #> [15410,]  312  328  346 #> [15411,]  311  327  347 #> [15412,]  311  327  347 #> [15413,]  312  328  346 #> [15414,]  312  328  346 #> [15415,]  311  327  347 #> [15416,]  312  328  346 #> [15417,]  311  327  347 #> [15418,]  311  327  347 #> [15419,]  311  327  347 #> [15420,]  312  328  346 #> [15421,]  311  327  347 #> [15422,]  312  328  346 #> [15423,]  311  327  347 #> [15424,]  312  328  346 #> [15425,]  312  328  346 #> [15426,]  311  327  347 #> [15427,]  312  328  346 #> [15428,]  312  328  346 #> [15429,]  311  327  347 #> [15430,]  311  327  347 #> [15431,]  311  327  347 #> [15432,]  311  327  347 #> [15433,]  312  328  346 #> [15434,]  311  327  347 #> [15435,]  311  327  347 #> [15436,]  312  328  346 #> [15437,]  311  327  347 #> [15438,]  311  327  347 #> [15439,]  312  328  346 #> [15440,]  311  327  347 #> [15441,]  312  328  346 #> [15442,]  311  327  347 #> [15443,]  311  327  347 #> [15444,]  311  327  347 #> [15445,]  312  328  346 #> [15446,]  311  327  347 #> [15447,]  311  327  347 #> [15448,]  311  327  347 #> [15449,]  312  328  346 #> [15450,]  312  328  346 #> [15451,]  311  327  347 #> [15452,]  312  328  346 #> [15453,]  312  328  346 #> [15454,]  312  328  346 #> [15455,]  312  328  346 #> [15456,]  311  327  347 #> [15457,]  312  328  346 #> [15458,]  312  328  346 #> [15459,]  312  328  346 #> [15460,]  311  327  347 #> [15461,]  311  327  347 #> [15462,]  311  327  347 #> [15463,]  311  327  347 #> [15464,]  311  327  347 #> [15465,]  311  327  347 #> [15466,]  311  327  347 #> [15467,]  312  328  346 #> [15468,]  311  327  347 #> [15469,]  311  327  347 #> [15470,]  311  327  347 #> [15471,]  312  328  346 #> [15472,]  312  328  346 #> [15473,]  312  328  346 #> [15474,]  312  328  346 #> [15475,]  311  327  347 #> [15476,]  312  328  346 #> [15477,]  312  328  346 #> [15478,]  311  327  347 #> [15479,]  311  327  347 #> [15480,]  312  328  346 #> [15481,]  311  327  347 #> [15482,]  311  327  347 #> [15483,]  311  327  347 #> [15484,]  312  328  346 #> [15485,]  312  328  346 #> [15486,]  312  328  346 #> [15487,]  312  328  346 #> [15488,]  312  328  346 #> [15489,]  311  327  347 #> [15490,]  312  328  346 #> [15491,]  312  328  346 #> [15492,]  311  327  347 #> [15493,]  311  327  347 #> [15494,]  311  327  347 #> [15495,]  311  327  347 #> [15496,]  311  327  347 #> [15497,]  311  327  347 #> [15498,]  311  327  347 #> [15499,]  311  327  347 #> [15500,]  311  327  347 #> [15501,]  313  329  348 #> [15502,]  313  329  349 #> [15503,]  313  329  348 #> [15504,]  314  329  348 #> [15505,]  313  329  348 #> [15506,]  313  329  348 #> [15507,]  314  329  348 #> [15508,]  313  329  348 #> [15509,]  313  329  348 #> [15510,]  314  329  349 #> [15511,]  313  329  348 #> [15512,]  313  329  349 #> [15513,]  313  329  348 #> [15514,]  313  329  348 #> [15515,]  314  329  348 #> [15516,]  314  329  348 #> [15517,]  313  329  348 #> [15518,]  314  329  348 #> [15519,]  313  329  348 #> [15520,]  313  329  348 #> [15521,]  314  329  349 #> [15522,]  313  329  348 #> [15523,]  314  329  348 #> [15524,]  313  329  348 #> [15525,]  314  329  348 #> [15526,]  313  329  348 #> [15527,]  314  329  348 #> [15528,]  314  329  348 #> [15529,]  313  329  348 #> [15530,]  313  329  348 #> [15531,]  313  329  348 #> [15532,]  313  329  348 #> [15533,]  313  329  348 #> [15534,]  313  329  348 #> [15535,]  313  329  348 #> [15536,]  313  329  348 #> [15537,]  313  329  348 #> [15538,]  313  329  348 #> [15539,]  314  329  348 #> [15540,]  313  329  348 #> [15541,]  313  329  348 #> [15542,]  313  329  348 #> [15543,]  314  329  348 #> [15544,]  313  329  348 #> [15545,]  314  329  348 #> [15546,]  313  329  348 #> [15547,]  314  329  348 #> [15548,]  313  329  348 #> [15549,]  313  329  348 #> [15550,]  313  329  348 #> [15551,]  313  329  348 #> [15552,]  313  329  348 #> [15553,]  314  329  348 #> [15554,]  313  329  348 #> [15555,]  313  329  348 #> [15556,]  313  329  348 #> [15557,]  313  329  348 #> [15558,]  313  329  348 #> [15559,]  313  329  348 #> [15560,]  313  329  348 #> [15561,]  314  329  348 #> [15562,]  313  329  348 #> [15563,]  313  329  348 #> [15564,]  314  329  348 #> [15565,]  313  329  348 #> [15566,]  313  329  348 #> [15567,]  313  329  348 #> [15568,]  313  329  348 #> [15569,]  313  329  348 #> [15570,]  313  329  348 #> [15571,]  314  329  348 #> [15572,]  314  329  348 #> [15573,]  314  329  348 #> [15574,]  314  329  348 #> [15575,]  314  329  348 #> [15576,]  314  329  348 #> [15577,]  314  329  348 #> [15578,]  313  329  348 #> [15579,]  313  329  348 #> [15580,]  313  329  348 #> [15581,]  313  329  348 #> [15582,]  313  329  348 #> [15583,]  313  329  348 #> [15584,]  314  329  348 #> [15585,]  313  329  348 #> [15586,]  313  329  349 #> [15587,]  313  329  348 #> [15588,]  314  329  348 #> [15589,]  313  329  348 #> [15590,]  313  329  348 #> [15591,]  313  329  348 #> [15592,]  313  329  348 #> [15593,]  313  329  348 #> [15594,]  314  329  348 #> [15595,]  314  329  348 #> [15596,]  313  329  348 #> [15597,]  313  329  348 #> [15598,]  313  329  348 #> [15599,]  313  329  348 #> [15600,]  314  329  348 #> [15601,]  315  330  351 #> [15602,]  315  330  352 #> [15603,]  315  330  352 #> [15604,]  316  331  350 #> [15605,]  315  330  351 #> [15606,]  315  330  352 #> [15607,]  316  331  350 #> [15608,]  315  330  351 #> [15609,]  315  330  351 #> [15610,]  316  331  350 #> [15611,]  315  330  351 #> [15612,]  315  330  352 #> [15613,]  315  330  351 #> [15614,]  315  330  351 #> [15615,]  316  331  350 #> [15616,]  316  331  350 #> [15617,]  316  331  350 #> [15618,]  316  331  350 #> [15619,]  315  330  352 #> [15620,]  315  330  352 #> [15621,]  316  331  350 #> [15622,]  315  330  351 #> [15623,]  316  331  350 #> [15624,]  315  330  351 #> [15625,]  316  331  350 #> [15626,]  315  330  351 #> [15627,]  316  331  350 #> [15628,]  316  331  350 #> [15629,]  315  330  352 #> [15630,]  315  330  351 #> [15631,]  315  330  352 #> [15632,]  315  330  352 #> [15633,]  315  330  352 #> [15634,]  315  330  352 #> [15635,]  315  330  351 #> [15636,]  315  330  351 #> [15637,]  315  330  351 #> [15638,]  315  330  351 #> [15639,]  316  331  350 #> [15640,]  315  330  352 #> [15641,]  315  330  351 #> [15642,]  315  330  352 #> [15643,]  316  331  350 #> [15644,]  315  330  351 #> [15645,]  316  331  350 #> [15646,]  316  331  350 #> [15647,]  316  331  350 #> [15648,]  315  330  352 #> [15649,]  315  330  351 #> [15650,]  315  330  352 #> [15651,]  315  330  351 #> [15652,]  315  330  351 #> [15653,]  316  331  350 #> [15654,]  315  330  351 #> [15655,]  315  330  351 #> [15656,]  316  331  350 #> [15657,]  315  330  352 #> [15658,]  315  330  351 #> [15659,]  315  330  351 #> [15660,]  315  330  352 #> [15661,]  316  331  350 #> [15662,]  315  330  351 #> [15663,]  315  330  352 #> [15664,]  316  331  350 #> [15665,]  315  330  352 #> [15666,]  315  330  351 #> [15667,]  315  330  351 #> [15668,]  315  330  351 #> [15669,]  315  330  351 #> [15670,]  315  330  352 #> [15671,]  316  331  350 #> [15672,]  316  331  350 #> [15673,]  316  331  350 #> [15674,]  316  331  350 #> [15675,]  316  331  350 #> [15676,]  316  331  350 #> [15677,]  316  331  350 #> [15678,]  315  330  352 #> [15679,]  315  330  351 #> [15680,]  315  330  351 #> [15681,]  315  330  351 #> [15682,]  316  331  350 #> [15683,]  315  330  351 #> [15684,]  316  331  350 #> [15685,]  315  330  351 #> [15686,]  315  330  352 #> [15687,]  315  330  351 #> [15688,]  316  331  350 #> [15689,]  315  330  351 #> [15690,]  315  330  351 #> [15691,]  315  330  351 #> [15692,]  315  330  351 #> [15693,]  315  330  352 #> [15694,]  316  331  350 #> [15695,]  316  331  350 #> [15696,]  315  330  351 #> [15697,]  315  330  352 #> [15698,]  315  330  352 #> [15699,]  315  330  351 #> [15700,]  316  331  350 #> [15701,]  317  332  353 #> [15702,]  317  332  353 #> [15703,]  317  332  354 #> [15704,]  317  332  354 #> [15705,]  317  332  354 #> [15706,]  317  332  354 #> [15707,]  317  332  353 #> [15708,]  317  332  353 #> [15709,]  318  332  354 #> [15710,]  317  332  354 #> [15711,]  317  332  354 #> [15712,]  317  332  353 #> [15713,]  318  332  353 #> [15714,]  317  332  354 #> [15715,]  317  332  353 #> [15716,]  317  332  353 #> [15717,]  318  332  353 #> [15718,]  318  332  353 #> [15719,]  317  332  353 #> [15720,]  317  332  353 #> [15721,]  317  332  354 #> [15722,]  317  332  353 #> [15723,]  317  332  353 #> [15724,]  317  332  354 #> [15725,]  317  332  354 #> [15726,]  317  332  353 #> [15727,]  317  332  353 #> [15728,]  317  332  354 #> [15729,]  317  332  353 #> [15730,]  317  332  353 #> [15731,]  317  332  354 #> [15732,]  317  332  354 #> [15733,]  317  332  353 #> [15734,]  317  332  354 #> [15735,]  317  332  354 #> [15736,]  317  332  353 #> [15737,]  317  332  353 #> [15738,]  317  332  353 #> [15739,]  317  332  354 #> [15740,]  317  332  354 #> [15741,]  317  332  353 #> [15742,]  318  332  354 #> [15743,]  317  332  353 #> [15744,]  317  332  353 #> [15745,]  317  332  353 #> [15746,]  317  332  353 #> [15747,]  317  332  354 #> [15748,]  317  332  354 #> [15749,]  317  332  353 #> [15750,]  317  332  353 #> [15751,]  318  332  353 #> [15752,]  317  332  354 #> [15753,]  318  332  353 #> [15754,]  317  332  354 #> [15755,]  317  332  353 #> [15756,]  317  332  353 #> [15757,]  317  332  354 #> [15758,]  317  332  353 #> [15759,]  317  332  353 #> [15760,]  317  332  353 #> [15761,]  317  332  353 #> [15762,]  317  332  354 #> [15763,]  317  332  353 #> [15764,]  317  332  353 #> [15765,]  318  332  354 #> [15766,]  317  332  353 #> [15767,]  317  332  354 #> [15768,]  317  332  353 #> [15769,]  317  332  353 #> [15770,]  317  332  354 #> [15771,]  317  332  353 #> [15772,]  317  332  354 #> [15773,]  317  332  354 #> [15774,]  317  332  354 #> [15775,]  317  332  353 #> [15776,]  317  332  354 #> [15777,]  317  332  353 #> [15778,]  317  332  353 #> [15779,]  318  332  354 #> [15780,]  317  332  353 #> [15781,]  317  332  353 #> [15782,]  318  332  354 #> [15783,]  317  332  353 #> [15784,]  318  332  353 #> [15785,]  317  332  353 #> [15786,]  317  332  354 #> [15787,]  317  332  353 #> [15788,]  317  332  354 #> [15789,]  317  332  354 #> [15790,]  317  332  353 #> [15791,]  318  332  354 #> [15792,]  317  332  354 #> [15793,]  318  332  353 #> [15794,]  318  332  354 #> [15795,]  317  332  353 #> [15796,]  317  332  353 #> [15797,]  317  332  353 #> [15798,]  317  332  354 #> [15799,]  317  332  354 #> [15800,]  317  332  353 #> [15801,]  320  334  356 #> [15802,]  320  334  355 #> [15803,]  319  333  355 #> [15804,]  320  334  356 #> [15805,]  320  334  355 #> [15806,]  320  334  355 #> [15807,]  320  334  356 #> [15808,]  320  334  356 #> [15809,]  320  334  356 #> [15810,]  319  334  356 #> [15811,]  319  334  355 #> [15812,]  320  333  355 #> [15813,]  320  334  356 #> [15814,]  319  333  355 #> [15815,]  320  334  356 #> [15816,]  320  334  356 #> [15817,]  320  334  356 #> [15818,]  320  334  356 #> [15819,]  320  334  355 #> [15820,]  320  334  355 #> [15821,]  319  334  356 #> [15822,]  320  334  355 #> [15823,]  320  334  356 #> [15824,]  320  334  355 #> [15825,]  320  334  356 #> [15826,]  320  333  355 #> [15827,]  320  334  356 #> [15828,]  320  334  356 #> [15829,]  320  334  355 #> [15830,]  320  334  355 #> [15831,]  319  334  355 #> [15832,]  319  333  355 #> [15833,]  320  334  355 #> [15834,]  319  334  355 #> [15835,]  320  334  355 #> [15836,]  320  334  355 #> [15837,]  320  334  355 #> [15838,]  320  334  355 #> [15839,]  320  334  356 #> [15840,]  319  334  355 #> [15841,]  320  334  355 #> [15842,]  320  334  355 #> [15843,]  320  334  356 #> [15844,]  320  334  355 #> [15845,]  320  334  356 #> [15846,]  320  334  356 #> [15847,]  320  334  356 #> [15848,]  319  334  355 #> [15849,]  320  334  355 #> [15850,]  320  334  355 #> [15851,]  320  333  355 #> [15852,]  320  334  355 #> [15853,]  320  334  356 #> [15854,]  320  333  355 #> [15855,]  320  334  355 #> [15856,]  320  334  356 #> [15857,]  320  334  355 #> [15858,]  320  334  355 #> [15859,]  320  334  355 #> [15860,]  320  334  355 #> [15861,]  320  334  356 #> [15862,]  320  334  355 #> [15863,]  320  334  355 #> [15864,]  320  334  356 #> [15865,]  320  334  355 #> [15866,]  320  333  355 #> [15867,]  320  334  355 #> [15868,]  320  334  355 #> [15869,]  320  333  355 #> [15870,]  319  334  356 #> [15871,]  320  334  356 #> [15872,]  320  334  356 #> [15873,]  320  334  356 #> [15874,]  319  334  356 #> [15875,]  320  334  356 #> [15876,]  320  334  356 #> [15877,]  320  334  356 #> [15878,]  320  334  355 #> [15879,]  320  334  355 #> [15880,]  320  333  355 #> [15881,]  320  334  355 #> [15882,]  319  334  356 #> [15883,]  320  334  355 #> [15884,]  320  334  356 #> [15885,]  320  334  355 #> [15886,]  320  334  355 #> [15887,]  320  334  355 #> [15888,]  320  334  356 #> [15889,]  320  334  355 #> [15890,]  320  334  355 #> [15891,]  320  334  355 #> [15892,]  320  334  355 #> [15893,]  320  334  355 #> [15894,]  320  334  356 #> [15895,]  320  334  356 #> [15896,]  320  334  355 #> [15897,]  320  334  355 #> [15898,]  319  334  355 #> [15899,]  320  334  355 #> [15900,]  320  334  356 #> [15901,]  321  336  358 #> [15902,]  321  336  358 #> [15903,]  321  335  357 #> [15904,]  321  336  358 #> [15905,]  321  336  358 #> [15906,]  321  335  357 #> [15907,]  321  335  357 #> [15908,]  321  336  358 #> [15909,]  321  336  358 #> [15910,]  321  336  358 #> [15911,]  321  336  358 #> [15912,]  321  336  358 #> [15913,]  321  336  358 #> [15914,]  321  336  358 #> [15915,]  321  336  358 #> [15916,]  321  336  358 #> [15917,]  321  336  358 #> [15918,]  321  336  358 #> [15919,]  321  336  358 #> [15920,]  321  335  357 #> [15921,]  321  335  357 #> [15922,]  321  336  358 #> [15923,]  321  335  357 #> [15924,]  321  336  358 #> [15925,]  321  335  357 #> [15926,]  321  336  358 #> [15927,]  321  336  358 #> [15928,]  321  336  358 #> [15929,]  321  336  358 #> [15930,]  321  336  358 #> [15931,]  321  336  358 #> [15932,]  321  336  358 #> [15933,]  321  336  358 #> [15934,]  321  335  357 #> [15935,]  321  335  357 #> [15936,]  321  336  358 #> [15937,]  321  335  357 #> [15938,]  321  336  358 #> [15939,]  321  336  358 #> [15940,]  321  336  358 #> [15941,]  321  336  358 #> [15942,]  321  335  357 #> [15943,]  321  336  358 #> [15944,]  321  335  357 #> [15945,]  321  336  358 #> [15946,]  321  336  358 #> [15947,]  321  336  358 #> [15948,]  321  336  358 #> [15949,]  321  336  358 #> [15950,]  321  336  358 #> [15951,]  321  336  358 #> [15952,]  321  336  358 #> [15953,]  321  335  357 #> [15954,]  321  336  358 #> [15955,]  321  336  358 #> [15956,]  321  335  357 #> [15957,]  321  335  357 #> [15958,]  321  336  358 #> [15959,]  321  336  358 #> [15960,]  321  336  358 #> [15961,]  321  336  358 #> [15962,]  321  336  358 #> [15963,]  321  336  358 #> [15964,]  321  336  358 #> [15965,]  321  335  357 #> [15966,]  321  336  358 #> [15967,]  321  336  358 #> [15968,]  321  336  358 #> [15969,]  321  336  358 #> [15970,]  321  336  358 #> [15971,]  321  336  358 #> [15972,]  321  336  358 #> [15973,]  321  335  357 #> [15974,]  321  335  357 #> [15975,]  321  336  358 #> [15976,]  321  336  358 #> [15977,]  321  336  358 #> [15978,]  321  336  358 #> [15979,]  321  336  358 #> [15980,]  321  335  357 #> [15981,]  321  336  358 #> [15982,]  321  335  357 #> [15983,]  321  336  358 #> [15984,]  321  335  357 #> [15985,]  321  335  357 #> [15986,]  321  335  357 #> [15987,]  321  336  358 #> [15988,]  321  335  357 #> [15989,]  321  335  357 #> [15990,]  321  336  358 #> [15991,]  321  336  358 #> [15992,]  321  336  358 #> [15993,]  321  336  358 #> [15994,]  321  335  357 #> [15995,]  321  336  358 #> [15996,]  321  336  358 #> [15997,]  321  336  358 #> [15998,]  321  335  357 #> [15999,]  321  335  357 #> [16000,]  321  336  358 #> [16001,]  322  337  359 #> [16002,]  322  337  359 #> [16003,]  322  337  359 #> [16004,]  323  338  362 #> [16005,]  322  337  359 #> [16006,]  322  337  359 #> [16007,]  322  337  360 #> [16008,]  322  337  359 #> [16009,]  322  337  359 #> [16010,]  322  337  360 #> [16011,]  323  338  361 #> [16012,]  323  338  362 #> [16013,]  322  337  359 #> [16014,]  323  338  361 #> [16015,]  323  338  362 #> [16016,]  322  337  360 #> [16017,]  322  337  359 #> [16018,]  322  337  359 #> [16019,]  323  338  361 #> [16020,]  322  337  360 #> [16021,]  323  338  362 #> [16022,]  322  337  359 #> [16023,]  322  337  359 #> [16024,]  322  337  360 #> [16025,]  322  337  360 #> [16026,]  322  337  359 #> [16027,]  323  338  362 #> [16028,]  322  337  360 #> [16029,]  322  337  359 #> [16030,]  322  337  359 #> [16031,]  322  337  359 #> [16032,]  322  337  359 #> [16033,]  322  337  359 #> [16034,]  322  337  359 #> [16035,]  322  337  359 #> [16036,]  322  337  359 #> [16037,]  322  337  359 #> [16038,]  323  338  361 #> [16039,]  322  337  360 #> [16040,]  322  337  359 #> [16041,]  323  338  362 #> [16042,]  323  338  361 #> [16043,]  322  337  359 #> [16044,]  322  337  359 #> [16045,]  322  337  359 #> [16046,]  322  337  359 #> [16047,]  322  337  359 #> [16048,]  323  338  362 #> [16049,]  322  337  359 #> [16050,]  322  337  360 #> [16051,]  322  337  359 #> [16052,]  322  337  360 #> [16053,]  322  337  359 #> [16054,]  322  337  360 #> [16055,]  322  337  359 #> [16056,]  322  337  359 #> [16057,]  322  337  360 #> [16058,]  322  337  359 #> [16059,]  322  337  359 #> [16060,]  322  337  359 #> [16061,]  323  338  362 #> [16062,]  322  337  359 #> [16063,]  322  337  359 #> [16064,]  322  337  359 #> [16065,]  322  337  359 #> [16066,]  322  337  359 #> [16067,]  322  337  359 #> [16068,]  323  338  361 #> [16069,]  323  338  361 #> [16070,]  322  337  359 #> [16071,]  322  337  359 #> [16072,]  322  337  359 #> [16073,]  322  337  360 #> [16074,]  323  338  362 #> [16075,]  323  338  362 #> [16076,]  322  337  360 #> [16077,]  322  337  359 #> [16078,]  322  337  359 #> [16079,]  322  337  359 #> [16080,]  322  337  359 #> [16081,]  322  337  359 #> [16082,]  323  338  362 #> [16083,]  322  337  359 #> [16084,]  322  337  359 #> [16085,]  322  337  359 #> [16086,]  322  337  360 #> [16087,]  322  337  359 #> [16088,]  322  337  359 #> [16089,]  322  337  359 #> [16090,]  322  337  359 #> [16091,]  322  337  360 #> [16092,]  323  338  362 #> [16093,]  323  338  362 #> [16094,]  322  337  359 #> [16095,]  322  337  359 #> [16096,]  323  338  361 #> [16097,]  323  338  361 #> [16098,]  322  337  359 #> [16099,]  322  337  359 #> [16100,]  322  337  359 #> [16101,]  325  340  363 #> [16102,]  325  340  363 #> [16103,]  324  339  364 #> [16104,]  325  340  363 #> [16105,]  325  340  363 #> [16106,]  325  340  363 #> [16107,]  324  339  364 #> [16108,]  324  339  364 #> [16109,]  325  340  363 #> [16110,]  325  340  363 #> [16111,]  325  340  363 #> [16112,]  325  340  363 #> [16113,]  324  339  364 #> [16114,]  325  340  363 #> [16115,]  325  340  363 #> [16116,]  324  339  364 #> [16117,]  325  340  363 #> [16118,]  325  340  363 #> [16119,]  325  340  363 #> [16120,]  324  339  364 #> [16121,]  325  340  363 #> [16122,]  324  339  364 #> [16123,]  325  340  363 #> [16124,]  324  339  364 #> [16125,]  324  339  364 #> [16126,]  325  340  363 #> [16127,]  325  340  363 #> [16128,]  325  340  363 #> [16129,]  325  340  363 #> [16130,]  325  340  363 #> [16131,]  325  340  363 #> [16132,]  325  340  363 #> [16133,]  325  340  363 #> [16134,]  325  340  363 #> [16135,]  325  340  363 #> [16136,]  325  340  363 #> [16137,]  325  340  363 #> [16138,]  325  340  363 #> [16139,]  324  339  364 #> [16140,]  324  339  364 #> [16141,]  325  340  363 #> [16142,]  325  340  363 #> [16143,]  325  340  363 #> [16144,]  324  339  364 #> [16145,]  325  340  363 #> [16146,]  324  339  364 #> [16147,]  325  340  363 #> [16148,]  325  340  363 #> [16149,]  324  339  364 #> [16150,]  324  339  364 #> [16151,]  325  340  363 #> [16152,]  325  340  363 #> [16153,]  324  339  364 #> [16154,]  325  340  363 #> [16155,]  324  339  364 #> [16156,]  324  339  364 #> [16157,]  325  340  363 #> [16158,]  325  340  363 #> [16159,]  324  339  364 #> [16160,]  325  340  363 #> [16161,]  325  340  363 #> [16162,]  325  340  363 #> [16163,]  324  339  364 #> [16164,]  325  340  363 #> [16165,]  324  339  364 #> [16166,]  324  339  364 #> [16167,]  325  340  363 #> [16168,]  325  340  363 #> [16169,]  325  340  363 #> [16170,]  324  339  364 #> [16171,]  325  340  363 #> [16172,]  324  339  364 #> [16173,]  325  340  363 #> [16174,]  325  340  363 #> [16175,]  325  340  363 #> [16176,]  325  340  363 #> [16177,]  325  340  363 #> [16178,]  325  340  363 #> [16179,]  325  340  363 #> [16180,]  325  340  363 #> [16181,]  325  340  363 #> [16182,]  325  340  363 #> [16183,]  325  340  363 #> [16184,]  324  339  364 #> [16185,]  325  340  363 #> [16186,]  324  339  364 #> [16187,]  325  340  363 #> [16188,]  325  340  363 #> [16189,]  324  339  364 #> [16190,]  324  339  364 #> [16191,]  325  340  363 #> [16192,]  325  340  363 #> [16193,]  325  340  363 #> [16194,]  325  340  363 #> [16195,]  325  340  363 #> [16196,]  325  340  363 #> [16197,]  325  340  363 #> [16198,]  324  339  364 #> [16199,]  325  340  363 #> [16200,]  324  339  364 #> [16201,]  327  342  366 #> [16202,]  326  342  366 #> [16203,]  326  341  365 #> [16204,]  326  342  366 #> [16205,]  327  342  366 #> [16206,]  326  341  365 #> [16207,]  326  342  366 #> [16208,]  326  342  366 #> [16209,]  326  342  366 #> [16210,]  327  342  366 #> [16211,]  327  341  365 #> [16212,]  327  341  365 #> [16213,]  326  342  366 #> [16214,]  327  341  365 #> [16215,]  327  342  366 #> [16216,]  326  342  366 #> [16217,]  327  342  366 #> [16218,]  327  342  366 #> [16219,]  326  341  365 #> [16220,]  326  341  365 #> [16221,]  326  342  366 #> [16222,]  327  341  365 #> [16223,]  326  342  366 #> [16224,]  326  341  365 #> [16225,]  326  342  366 #> [16226,]  327  341  365 #> [16227,]  327  342  366 #> [16228,]  326  342  366 #> [16229,]  326  341  365 #> [16230,]  326  341  365 #> [16231,]  327  342  366 #> [16232,]  327  341  365 #> [16233,]  326  342  366 #> [16234,]  326  341  365 #> [16235,]  326  342  366 #> [16236,]  326  341  365 #> [16237,]  326  342  366 #> [16238,]  327  342  366 #> [16239,]  327  342  366 #> [16240,]  326  341  365 #> [16241,]  326  341  365 #> [16242,]  326  341  365 #> [16243,]  327  342  366 #> [16244,]  326  342  366 #> [16245,]  326  342  366 #> [16246,]  326  342  366 #> [16247,]  327  342  366 #> [16248,]  326  341  365 #> [16249,]  326  342  366 #> [16250,]  326  342  366 #> [16251,]  326  341  365 #> [16252,]  327  342  366 #> [16253,]  326  342  366 #> [16254,]  326  341  365 #> [16255,]  326  341  365 #> [16256,]  326  342  366 #> [16257,]  326  342  366 #> [16258,]  327  342  366 #> [16259,]  327  342  366 #> [16260,]  326  341  365 #> [16261,]  327  342  366 #> [16262,]  326  341  365 #> [16263,]  326  341  365 #> [16264,]  326  342  366 #> [16265,]  326  342  366 #> [16266,]  327  341  365 #> [16267,]  326  341  365 #> [16268,]  327  341  365 #> [16269,]  326  341  365 #> [16270,]  327  342  366 #> [16271,]  327  342  366 #> [16272,]  326  342  366 #> [16273,]  326  342  366 #> [16274,]  326  342  366 #> [16275,]  327  342  366 #> [16276,]  326  342  366 #> [16277,]  327  342  366 #> [16278,]  326  341  365 #> [16279,]  327  342  366 #> [16280,]  326  341  365 #> [16281,]  326  341  365 #> [16282,]  326  342  366 #> [16283,]  326  341  365 #> [16284,]  326  342  366 #> [16285,]  326  342  366 #> [16286,]  326  342  366 #> [16287,]  327  342  366 #> [16288,]  326  342  366 #> [16289,]  326  341  365 #> [16290,]  327  342  366 #> [16291,]  327  341  365 #> [16292,]  327  342  366 #> [16293,]  326  341  365 #> [16294,]  326  342  366 #> [16295,]  327  342  366 #> [16296,]  327  342  366 #> [16297,]  326  342  366 #> [16298,]  326  341  365 #> [16299,]  326  341  365 #> [16300,]  327  342  366 #> [16301,]  328  343  367 #> [16302,]  329  344  368 #> [16303,]  329  344  368 #> [16304,]  328  343  367 #> [16305,]  328  343  367 #> [16306,]  329  344  368 #> [16307,]  329  344  368 #> [16308,]  328  343  367 #> [16309,]  328  343  367 #> [16310,]  329  344  368 #> [16311,]  328  343  367 #> [16312,]  329  344  368 #> [16313,]  328  343  367 #> [16314,]  328  343  367 #> [16315,]  328  343  367 #> [16316,]  328  343  367 #> [16317,]  328  343  367 #> [16318,]  329  344  368 #> [16319,]  329  344  368 #> [16320,]  329  344  368 #> [16321,]  328  343  367 #> [16322,]  328  343  367 #> [16323,]  329  344  368 #> [16324,]  328  343  367 #> [16325,]  329  344  368 #> [16326,]  328  343  367 #> [16327,]  328  343  367 #> [16328,]  329  344  368 #> [16329,]  329  344  368 #> [16330,]  328  343  367 #> [16331,]  329  344  368 #> [16332,]  329  344  368 #> [16333,]  329  344  368 #> [16334,]  329  344  368 #> [16335,]  328  343  367 #> [16336,]  328  343  367 #> [16337,]  328  343  367 #> [16338,]  328  343  367 #> [16339,]  329  344  368 #> [16340,]  329  344  368 #> [16341,]  328  343  367 #> [16342,]  329  344  368 #> [16343,]  328  343  367 #> [16344,]  328  343  367 #> [16345,]  328  343  367 #> [16346,]  328  343  367 #> [16347,]  329  344  368 #> [16348,]  329  344  368 #> [16349,]  328  343  367 #> [16350,]  329  344  368 #> [16351,]  328  343  367 #> [16352,]  328  343  367 #> [16353,]  329  344  368 #> [16354,]  328  343  367 #> [16355,]  328  343  367 #> [16356,]  329  344  368 #> [16357,]  329  344  368 #> [16358,]  328  343  367 #> [16359,]  328  343  367 #> [16360,]  329  344  368 #> [16361,]  329  344  368 #> [16362,]  328  343  367 #> [16363,]  329  344  368 #> [16364,]  329  344  368 #> [16365,]  329  344  368 #> [16366,]  328  343  367 #> [16367,]  328  343  367 #> [16368,]  328  343  367 #> [16369,]  328  343  367 #> [16370,]  329  344  368 #> [16371,]  329  344  368 #> [16372,]  329  344  368 #> [16373,]  329  344  368 #> [16374,]  328  343  367 #> [16375,]  329  344  368 #> [16376,]  329  344  368 #> [16377,]  329  344  368 #> [16378,]  329  344  368 #> [16379,]  328  343  367 #> [16380,]  328  343  367 #> [16381,]  328  343  367 #> [16382,]  328  343  367 #> [16383,]  328  343  367 #> [16384,]  329  344  368 #> [16385,]  328  343  367 #> [16386,]  329  344  368 #> [16387,]  328  343  367 #> [16388,]  328  343  367 #> [16389,]  328  343  367 #> [16390,]  328  343  367 #> [16391,]  328  343  367 #> [16392,]  328  343  367 #> [16393,]  329  344  368 #> [16394,]  329  344  368 #> [16395,]  328  343  367 #> [16396,]  328  343  367 #> [16397,]  329  344  368 #> [16398,]  329  344  368 #> [16399,]  328  343  367 #> [16400,]  329  344  368 #> [16401,]  331  346  370 #> [16402,]  331  346  370 #> [16403,]  331  346  370 #> [16404,]  331  346  370 #> [16405,]  331  346  370 #> [16406,]  331  346  371 #> [16407,]  330  345  369 #> [16408,]  331  346  371 #> [16409,]  331  346  371 #> [16410,]  331  346  370 #> [16411,]  331  346  370 #> [16412,]  331  346  371 #> [16413,]  331  346  370 #> [16414,]  331  346  370 #> [16415,]  331  346  371 #> [16416,]  331  346  370 #> [16417,]  331  346  370 #> [16418,]  331  346  370 #> [16419,]  331  346  370 #> [16420,]  331  346  370 #> [16421,]  330  345  369 #> [16422,]  331  346  370 #> [16423,]  330  345  369 #> [16424,]  331  346  370 #> [16425,]  331  346  370 #> [16426,]  331  346  371 #> [16427,]  331  346  370 #> [16428,]  331  346  370 #> [16429,]  331  346  370 #> [16430,]  330  345  369 #> [16431,]  331  346  370 #> [16432,]  331  346  370 #> [16433,]  331  346  370 #> [16434,]  331  346  370 #> [16435,]  331  346  370 #> [16436,]  331  346  370 #> [16437,]  331  346  370 #> [16438,]  331  346  370 #> [16439,]  330  345  369 #> [16440,]  331  346  370 #> [16441,]  331  346  370 #> [16442,]  331  346  370 #> [16443,]  331  346  371 #> [16444,]  331  346  370 #> [16445,]  331  346  370 #> [16446,]  331  346  371 #> [16447,]  331  346  370 #> [16448,]  331  346  370 #> [16449,]  330  345  369 #> [16450,]  331  346  370 #> [16451,]  331  346  371 #> [16452,]  331  346  370 #> [16453,]  331  346  370 #> [16454,]  330  345  369 #> [16455,]  331  346  370 #> [16456,]  331  346  371 #> [16457,]  331  346  370 #> [16458,]  331  346  370 #> [16459,]  331  346  370 #> [16460,]  331  346  370 #> [16461,]  331  346  371 #> [16462,]  330  345  369 #> [16463,]  331  346  370 #> [16464,]  331  346  371 #> [16465,]  331  346  370 #> [16466,]  331  346  371 #> [16467,]  331  346  370 #> [16468,]  331  346  371 #> [16469,]  331  346  370 #> [16470,]  330  345  369 #> [16471,]  331  346  370 #> [16472,]  331  346  370 #> [16473,]  331  346  370 #> [16474,]  331  346  370 #> [16475,]  331  346  370 #> [16476,]  331  346  371 #> [16477,]  331  346  370 #> [16478,]  331  346  370 #> [16479,]  331  346  370 #> [16480,]  330  345  369 #> [16481,]  331  346  370 #> [16482,]  331  346  370 #> [16483,]  331  346  370 #> [16484,]  331  346  370 #> [16485,]  331  346  370 #> [16486,]  331  346  370 #> [16487,]  331  346  370 #> [16488,]  331  346  370 #> [16489,]  331  346  370 #> [16490,]  331  346  370 #> [16491,]  331  346  370 #> [16492,]  331  346  370 #> [16493,]  331  346  370 #> [16494,]  331  346  371 #> [16495,]  330  345  369 #> [16496,]  331  346  370 #> [16497,]  331  346  370 #> [16498,]  330  345  369 #> [16499,]  331  346  370 #> [16500,]  331  346  370 #> [16501,]  333  348  372 #> [16502,]  333  348  372 #> [16503,]  332  347  374 #> [16504,]  332  347  373 #> [16505,]  332  347  374 #> [16506,]  333  348  372 #> [16507,]  332  347  374 #> [16508,]  332  347  373 #> [16509,]  332  347  373 #> [16510,]  332  347  374 #> [16511,]  332  347  373 #> [16512,]  332  347  374 #> [16513,]  333  348  372 #> [16514,]  333  348  372 #> [16515,]  333  348  372 #> [16516,]  333  348  372 #> [16517,]  333  348  372 #> [16518,]  332  347  374 #> [16519,]  332  347  374 #> [16520,]  332  347  374 #> [16521,]  333  348  372 #> [16522,]  332  347  373 #> [16523,]  332  347  374 #> [16524,]  332  347  374 #> [16525,]  332  347  374 #> [16526,]  333  348  372 #> [16527,]  333  348  372 #> [16528,]  332  347  374 #> [16529,]  333  348  372 #> [16530,]  332  347  373 #> [16531,]  332  347  374 #> [16532,]  332  347  374 #> [16533,]  333  348  372 #> [16534,]  332  347  374 #> [16535,]  333  348  372 #> [16536,]  332  347  374 #> [16537,]  333  348  372 #> [16538,]  332  347  374 #> [16539,]  332  347  374 #> [16540,]  332  347  374 #> [16541,]  333  348  372 #> [16542,]  332  347  374 #> [16543,]  332  347  373 #> [16544,]  333  348  372 #> [16545,]  332  347  374 #> [16546,]  332  347  374 #> [16547,]  332  347  374 #> [16548,]  332  347  374 #> [16549,]  332  347  373 #> [16550,]  333  348  372 #> [16551,]  332  347  374 #> [16552,]  333  348  372 #> [16553,]  332  347  374 #> [16554,]  332  347  374 #> [16555,]  332  347  373 #> [16556,]  332  347  374 #> [16557,]  332  347  374 #> [16558,]  333  348  372 #> [16559,]  333  348  372 #> [16560,]  332  347  374 #> [16561,]  333  348  372 #> [16562,]  332  347  374 #> [16563,]  332  347  374 #> [16564,]  332  347  374 #> [16565,]  332  347  374 #> [16566,]  332  347  373 #> [16567,]  332  347  374 #> [16568,]  333  348  372 #> [16569,]  332  347  373 #> [16570,]  333  348  372 #> [16571,]  333  348  372 #> [16572,]  332  347  374 #> [16573,]  333  348  372 #> [16574,]  332  347  374 #> [16575,]  332  347  374 #> [16576,]  333  348  372 #> [16577,]  333  348  372 #> [16578,]  332  347  374 #> [16579,]  333  348  372 #> [16580,]  332  347  373 #> [16581,]  333  348  372 #> [16582,]  332  347  373 #> [16583,]  333  348  372 #> [16584,]  332  347  374 #> [16585,]  332  347  374 #> [16586,]  333  348  372 #> [16587,]  332  347  373 #> [16588,]  332  347  373 #> [16589,]  332  347  373 #> [16590,]  333  348  372 #> [16591,]  332  347  374 #> [16592,]  332  347  373 #> [16593,]  333  348  372 #> [16594,]  333  348  372 #> [16595,]  332  347  373 #> [16596,]  333  348  372 #> [16597,]  332  347  374 #> [16598,]  332  347  374 #> [16599,]  333  348  372 #> [16600,]  333  348  372 #> [16601,]  335  350  376 #> [16602,]  335  350  376 #> [16603,]  334  349  375 #> [16604,]  335  350  376 #> [16605,]  335  350  376 #> [16606,]  335  350  376 #> [16607,]  334  349  375 #> [16608,]  334  349  375 #> [16609,]  335  350  376 #> [16610,]  335  350  376 #> [16611,]  335  350  376 #> [16612,]  335  350  376 #> [16613,]  334  349  375 #> [16614,]  335  350  376 #> [16615,]  335  350  376 #> [16616,]  334  349  375 #> [16617,]  334  349  375 #> [16618,]  335  350  376 #> [16619,]  335  350  376 #> [16620,]  334  349  375 #> [16621,]  335  350  376 #> [16622,]  334  349  375 #> [16623,]  335  350  376 #> [16624,]  334  349  375 #> [16625,]  334  349  375 #> [16626,]  335  350  376 #> [16627,]  335  350  376 #> [16628,]  335  350  376 #> [16629,]  335  350  376 #> [16630,]  335  350  376 #> [16631,]  335  350  376 #> [16632,]  335  350  376 #> [16633,]  335  350  376 #> [16634,]  335  350  376 #> [16635,]  335  350  376 #> [16636,]  335  350  376 #> [16637,]  335  350  376 #> [16638,]  335  350  376 #> [16639,]  334  349  375 #> [16640,]  334  349  375 #> [16641,]  335  350  376 #> [16642,]  335  350  376 #> [16643,]  334  349  375 #> [16644,]  334  349  375 #> [16645,]  334  349  375 #> [16646,]  334  349  375 #> [16647,]  334  349  375 #> [16648,]  335  350  376 #> [16649,]  334  349  375 #> [16650,]  334  349  375 #> [16651,]  334  349  375 #> [16652,]  335  350  376 #> [16653,]  334  349  375 #> [16654,]  334  349  375 #> [16655,]  334  349  375 #> [16656,]  334  349  375 #> [16657,]  335  350  376 #> [16658,]  335  350  376 #> [16659,]  334  349  375 #> [16660,]  335  350  376 #> [16661,]  335  350  376 #> [16662,]  335  350  376 #> [16663,]  334  349  375 #> [16664,]  335  350  376 #> [16665,]  334  349  375 #> [16666,]  334  349  375 #> [16667,]  335  350  376 #> [16668,]  335  350  376 #> [16669,]  335  350  376 #> [16670,]  334  349  375 #> [16671,]  335  350  376 #> [16672,]  334  349  375 #> [16673,]  335  350  376 #> [16674,]  335  350  376 #> [16675,]  335  350  376 #> [16676,]  334  349  375 #> [16677,]  334  349  375 #> [16678,]  334  349  375 #> [16679,]  334  349  375 #> [16680,]  335  350  376 #> [16681,]  335  350  376 #> [16682,]  335  350  376 #> [16683,]  334  349  375 #> [16684,]  334  349  375 #> [16685,]  335  350  376 #> [16686,]  334  349  375 #> [16687,]  335  350  376 #> [16688,]  335  350  376 #> [16689,]  334  349  375 #> [16690,]  334  349  375 #> [16691,]  335  350  376 #> [16692,]  335  350  376 #> [16693,]  335  350  376 #> [16694,]  334  349  375 #> [16695,]  335  350  376 #> [16696,]  335  350  376 #> [16697,]  335  350  376 #> [16698,]  334  349  375 #> [16699,]  335  350  376 #> [16700,]  334  349  375 #> [16701,]  336  351  377 #> [16702,]  337  352  378 #> [16703,]  336  351  377 #> [16704,]  336  351  377 #> [16705,]  337  352  378 #> [16706,]  336  351  377 #> [16707,]  337  352  378 #> [16708,]  336  351  377 #> [16709,]  337  352  378 #> [16710,]  337  352  378 #> [16711,]  336  351  377 #> [16712,]  337  352  378 #> [16713,]  337  352  378 #> [16714,]  336  351  377 #> [16715,]  336  351  377 #> [16716,]  336  351  377 #> [16717,]  337  352  378 #> [16718,]  337  352  378 #> [16719,]  336  351  377 #> [16720,]  337  352  378 #> [16721,]  337  352  378 #> [16722,]  337  352  378 #> [16723,]  337  352  378 #> [16724,]  337  352  378 #> [16725,]  336  351  377 #> [16726,]  336  351  377 #> [16727,]  337  352  378 #> [16728,]  336  351  377 #> [16729,]  337  352  378 #> [16730,]  337  352  378 #> [16731,]  337  352  378 #> [16732,]  337  352  378 #> [16733,]  337  352  378 #> [16734,]  336  351  377 #> [16735,]  336  351  377 #> [16736,]  337  352  378 #> [16737,]  336  351  377 #> [16738,]  336  351  377 #> [16739,]  336  351  377 #> [16740,]  337  352  378 #> [16741,]  337  352  378 #> [16742,]  336  351  377 #> [16743,]  336  351  377 #> [16744,]  337  352  378 #> [16745,]  336  351  377 #> [16746,]  336  351  377 #> [16747,]  337  352  378 #> [16748,]  337  352  378 #> [16749,]  336  351  377 #> [16750,]  337  352  378 #> [16751,]  336  351  377 #> [16752,]  336  351  377 #> [16753,]  337  352  378 #> [16754,]  337  352  378 #> [16755,]  336  351  377 #> [16756,]  336  351  377 #> [16757,]  336  351  377 #> [16758,]  336  351  377 #> [16759,]  336  351  377 #> [16760,]  337  352  378 #> [16761,]  337  352  378 #> [16762,]  336  351  377 #> [16763,]  337  352  378 #> [16764,]  336  351  377 #> [16765,]  336  351  377 #> [16766,]  336  351  377 #> [16767,]  336  351  377 #> [16768,]  336  351  377 #> [16769,]  336  351  377 #> [16770,]  337  352  378 #> [16771,]  336  351  377 #> [16772,]  336  351  377 #> [16773,]  336  351  377 #> [16774,]  336  351  377 #> [16775,]  337  352  378 #> [16776,]  336  351  377 #> [16777,]  336  351  377 #> [16778,]  337  352  378 #> [16779,]  336  351  377 #> [16780,]  337  352  378 #> [16781,]  337  352  378 #> [16782,]  336  351  377 #> [16783,]  337  352  378 #> [16784,]  337  352  378 #> [16785,]  336  351  377 #> [16786,]  337  352  378 #> [16787,]  337  352  378 #> [16788,]  337  352  378 #> [16789,]  336  351  377 #> [16790,]  336  351  377 #> [16791,]  336  351  377 #> [16792,]  337  352  378 #> [16793,]  337  352  378 #> [16794,]  336  351  377 #> [16795,]  337  352  378 #> [16796,]  336  351  377 #> [16797,]  336  351  377 #> [16798,]  336  351  377 #> [16799,]  336  351  377 #> [16800,]  336  351  377 #> [16801,]  339  354  380 #> [16802,]  339  354  380 #> [16803,]  338  353  379 #> [16804,]  338  353  379 #> [16805,]  339  354  380 #> [16806,]  339  354  380 #> [16807,]  338  353  379 #> [16808,]  338  353  379 #> [16809,]  339  354  380 #> [16810,]  339  354  380 #> [16811,]  339  354  380 #> [16812,]  338  353  379 #> [16813,]  339  354  380 #> [16814,]  339  354  380 #> [16815,]  339  354  380 #> [16816,]  339  354  380 #> [16817,]  339  354  380 #> [16818,]  339  354  380 #> [16819,]  339  354  380 #> [16820,]  339  354  380 #> [16821,]  339  354  380 #> [16822,]  339  354  380 #> [16823,]  338  353  379 #> [16824,]  339  354  380 #> [16825,]  338  353  379 #> [16826,]  339  354  380 #> [16827,]  339  354  380 #> [16828,]  339  354  380 #> [16829,]  339  354  380 #> [16830,]  339  354  380 #> [16831,]  338  353  379 #> [16832,]  338  353  379 #> [16833,]  339  354  380 #> [16834,]  339  354  380 #> [16835,]  339  354  380 #> [16836,]  339  354  380 #> [16837,]  338  353  379 #> [16838,]  339  354  380 #> [16839,]  339  354  380 #> [16840,]  338  353  379 #> [16841,]  339  354  380 #> [16842,]  339  354  380 #> [16843,]  339  354  380 #> [16844,]  339  354  380 #> [16845,]  339  354  380 #> [16846,]  338  353  379 #> [16847,]  338  353  379 #> [16848,]  339  354  380 #> [16849,]  339  354  380 #> [16850,]  339  354  380 #> [16851,]  339  354  380 #> [16852,]  338  353  379 #> [16853,]  339  354  380 #> [16854,]  339  354  380 #> [16855,]  338  353  379 #> [16856,]  339  354  380 #> [16857,]  338  353  379 #> [16858,]  339  354  380 #> [16859,]  338  353  379 #> [16860,]  338  353  379 #> [16861,]  339  354  380 #> [16862,]  339  354  380 #> [16863,]  339  354  380 #> [16864,]  339  354  380 #> [16865,]  339  354  380 #> [16866,]  339  354  380 #> [16867,]  339  354  380 #> [16868,]  338  353  379 #> [16869,]  339  354  380 #> [16870,]  339  354  380 #> [16871,]  339  354  380 #> [16872,]  338  353  379 #> [16873,]  339  354  380 #> [16874,]  338  353  379 #> [16875,]  339  354  380 #> [16876,]  338  353  379 #> [16877,]  339  354  380 #> [16878,]  338  353  379 #> [16879,]  339  354  380 #> [16880,]  338  353  379 #> [16881,]  339  354  380 #> [16882,]  339  354  380 #> [16883,]  339  354  380 #> [16884,]  339  354  380 #> [16885,]  339  354  380 #> [16886,]  338  353  379 #> [16887,]  339  354  380 #> [16888,]  339  354  380 #> [16889,]  339  354  380 #> [16890,]  339  354  380 #> [16891,]  339  354  380 #> [16892,]  338  353  379 #> [16893,]  339  354  380 #> [16894,]  339  354  380 #> [16895,]  339  354  380 #> [16896,]  338  353  379 #> [16897,]  338  353  379 #> [16898,]  338  353  379 #> [16899,]  339  354  380 #> [16900,]  339  354  380 #> [16901,]  341  356  381 #> [16902,]  341  356  381 #> [16903,]  340  355  381 #> [16904,]  341  356  381 #> [16905,]  340  355  381 #> [16906,]  340  355  381 #> [16907,]  341  356  381 #> [16908,]  341  356  381 #> [16909,]  341  356  381 #> [16910,]  341  356  381 #> [16911,]  340  355  381 #> [16912,]  340  355  381 #> [16913,]  341  356  381 #> [16914,]  340  355  381 #> [16915,]  341  356  381 #> [16916,]  341  356  381 #> [16917,]  341  356  381 #> [16918,]  341  356  381 #> [16919,]  340  355  381 #> [16920,]  340  355  381 #> [16921,]  341  356  381 #> [16922,]  340  355  381 #> [16923,]  341  356  381 #> [16924,]  340  355  381 #> [16925,]  341  356  381 #> [16926,]  340  355  381 #> [16927,]  341  356  381 #> [16928,]  341  356  381 #> [16929,]  340  355  381 #> [16930,]  340  355  381 #> [16931,]  341  356  381 #> [16932,]  340  355  381 #> [16933,]  340  355  381 #> [16934,]  340  355  381 #> [16935,]  340  355  381 #> [16936,]  340  355  381 #> [16937,]  341  356  381 #> [16938,]  341  356  381 #> [16939,]  341  356  381 #> [16940,]  340  355  381 #> [16941,]  340  355  381 #> [16942,]  340  355  381 #> [16943,]  341  356  381 #> [16944,]  341  356  381 #> [16945,]  341  356  381 #> [16946,]  341  356  381 #> [16947,]  341  356  381 #> [16948,]  340  355  381 #> [16949,]  340  355  381 #> [16950,]  340  355  381 #> [16951,]  340  355  381 #> [16952,]  340  355  381 #> [16953,]  341  356  381 #> [16954,]  340  355  381 #> [16955,]  340  355  381 #> [16956,]  341  356  381 #> [16957,]  340  355  381 #> [16958,]  340  355  381 #> [16959,]  340  355  381 #> [16960,]  340  355  381 #> [16961,]  341  356  381 #> [16962,]  340  355  381 #> [16963,]  340  355  381 #> [16964,]  341  356  381 #> [16965,]  340  355  381 #> [16966,]  340  355  381 #> [16967,]  340  355  381 #> [16968,]  340  355  381 #> [16969,]  340  355  381 #> [16970,]  341  356  381 #> [16971,]  341  356  381 #> [16972,]  341  356  381 #> [16973,]  341  356  381 #> [16974,]  341  356  381 #> [16975,]  341  356  381 #> [16976,]  341  356  381 #> [16977,]  341  356  381 #> [16978,]  340  355  381 #> [16979,]  341  356  381 #> [16980,]  340  355  381 #> [16981,]  340  355  381 #> [16982,]  341  356  381 #> [16983,]  340  355  381 #> [16984,]  341  356  381 #> [16985,]  340  355  381 #> [16986,]  341  356  381 #> [16987,]  341  356  381 #> [16988,]  341  356  381 #> [16989,]  340  355  381 #> [16990,]  341  356  381 #> [16991,]  340  355  381 #> [16992,]  340  355  381 #> [16993,]  340  355  381 #> [16994,]  341  356  381 #> [16995,]  341  356  381 #> [16996,]  341  356  381 #> [16997,]  340  355  381 #> [16998,]  340  355  381 #> [16999,]  340  355  381 #> [17000,]  341  356  381 #> [17001,]  343  358  383 #> [17002,]  342  357  382 #> [17003,]  342  357  382 #> [17004,]  342  357  382 #> [17005,]  343  358  383 #> [17006,]  342  357  382 #> [17007,]  342  357  382 #> [17008,]  342  357  382 #> [17009,]  343  358  383 #> [17010,]  342  357  382 #> [17011,]  343  358  383 #> [17012,]  342  357  382 #> [17013,]  343  358  383 #> [17014,]  342  357  382 #> [17015,]  342  357  382 #> [17016,]  342  357  382 #> [17017,]  343  358  383 #> [17018,]  343  358  383 #> [17019,]  343  358  383 #> [17020,]  343  358  383 #> [17021,]  343  358  383 #> [17022,]  343  358  383 #> [17023,]  342  357  382 #> [17024,]  343  358  383 #> [17025,]  342  357  382 #> [17026,]  342  357  382 #> [17027,]  343  358  383 #> [17028,]  343  358  383 #> [17029,]  343  358  383 #> [17030,]  342  357  382 #> [17031,]  342  357  382 #> [17032,]  342  357  382 #> [17033,]  343  358  383 #> [17034,]  342  357  382 #> [17035,]  342  357  382 #> [17036,]  343  358  383 #> [17037,]  342  357  382 #> [17038,]  343  358  383 #> [17039,]  343  358  383 #> [17040,]  342  357  382 #> [17041,]  343  358  383 #> [17042,]  343  358  383 #> [17043,]  342  357  382 #> [17044,]  342  357  382 #> [17045,]  342  357  382 #> [17046,]  342  357  382 #> [17047,]  342  357  382 #> [17048,]  342  357  382 #> [17049,]  342  357  382 #> [17050,]  343  358  383 #> [17051,]  343  358  383 #> [17052,]  342  357  382 #> [17053,]  343  358  383 #> [17054,]  343  358  383 #> [17055,]  342  357  382 #> [17056,]  343  358  383 #> [17057,]  342  357  382 #> [17058,]  343  358  383 #> [17059,]  342  357  382 #> [17060,]  342  357  382 #> [17061,]  343  358  383 #> [17062,]  343  358  383 #> [17063,]  342  357  382 #> [17064,]  343  358  383 #> [17065,]  343  358  383 #> [17066,]  343  358  383 #> [17067,]  342  357  382 #> [17068,]  342  357  382 #> [17069,]  342  357  382 #> [17070,]  343  358  383 #> [17071,]  342  357  382 #> [17072,]  342  357  382 #> [17073,]  343  358  383 #> [17074,]  342  357  382 #> [17075,]  342  357  382 #> [17076,]  342  357  382 #> [17077,]  343  358  383 #> [17078,]  342  357  382 #> [17079,]  343  358  383 #> [17080,]  342  357  382 #> [17081,]  343  358  383 #> [17082,]  343  358  383 #> [17083,]  343  358  383 #> [17084,]  343  358  383 #> [17085,]  343  358  383 #> [17086,]  342  357  382 #> [17087,]  343  358  383 #> [17088,]  342  357  382 #> [17089,]  343  358  383 #> [17090,]  343  358  383 #> [17091,]  343  358  383 #> [17092,]  342  357  382 #> [17093,]  343  358  383 #> [17094,]  343  358  383 #> [17095,]  342  357  382 #> [17096,]  342  357  382 #> [17097,]  342  357  382 #> [17098,]  342  357  382 #> [17099,]  343  358  383 #> [17100,]  343  358  383 #> [17101,]  344  359  385 #> [17102,]  344  359  384 #> [17103,]  344  359  385 #> [17104,]  344  359  385 #> [17105,]  344  359  385 #> [17106,]  344  359  384 #> [17107,]  344  359  385 #> [17108,]  344  359  385 #> [17109,]  344  359  385 #> [17110,]  345  360  385 #> [17111,]  344  359  384 #> [17112,]  344  359  384 #> [17113,]  344  359  385 #> [17114,]  344  359  385 #> [17115,]  344  359  384 #> [17116,]  344  359  385 #> [17117,]  344  359  384 #> [17118,]  345  360  385 #> [17119,]  344  359  385 #> [17120,]  344  359  385 #> [17121,]  344  359  385 #> [17122,]  344  359  385 #> [17123,]  344  359  384 #> [17124,]  344  359  385 #> [17125,]  345  360  385 #> [17126,]  344  359  385 #> [17127,]  344  359  385 #> [17128,]  344  359  385 #> [17129,]  344  359  384 #> [17130,]  344  359  385 #> [17131,]  344  359  384 #> [17132,]  344  359  385 #> [17133,]  344  359  385 #> [17134,]  344  359  384 #> [17135,]  344  359  385 #> [17136,]  344  359  385 #> [17137,]  344  359  384 #> [17138,]  344  359  385 #> [17139,]  345  360  385 #> [17140,]  344  359  385 #> [17141,]  344  359  385 #> [17142,]  344  359  384 #> [17143,]  345  360  384 #> [17144,]  344  359  384 #> [17145,]  345  360  385 #> [17146,]  344  359  385 #> [17147,]  344  359  384 #> [17148,]  344  359  384 #> [17149,]  344  359  385 #> [17150,]  344  359  385 #> [17151,]  344  359  385 #> [17152,]  344  359  385 #> [17153,]  344  359  385 #> [17154,]  344  359  385 #> [17155,]  344  359  385 #> [17156,]  344  359  385 #> [17157,]  344  359  385 #> [17158,]  344  359  385 #> [17159,]  344  359  385 #> [17160,]  344  359  385 #> [17161,]  344  359  385 #> [17162,]  344  359  385 #> [17163,]  344  359  384 #> [17164,]  344  359  384 #> [17165,]  344  359  385 #> [17166,]  344  359  385 #> [17167,]  344  359  385 #> [17168,]  344  359  385 #> [17169,]  344  359  385 #> [17170,]  344  359  384 #> [17171,]  344  359  385 #> [17172,]  344  359  385 #> [17173,]  345  360  385 #> [17174,]  344  359  385 #> [17175,]  345  360  384 #> [17176,]  344  359  385 #> [17177,]  345  360  385 #> [17178,]  344  359  384 #> [17179,]  344  359  384 #> [17180,]  344  359  385 #> [17181,]  344  359  384 #> [17182,]  344  359  385 #> [17183,]  344  359  385 #> [17184,]  344  359  385 #> [17185,]  344  359  385 #> [17186,]  344  359  385 #> [17187,]  344  359  385 #> [17188,]  344  359  385 #> [17189,]  344  359  385 #> [17190,]  344  359  385 #> [17191,]  344  359  385 #> [17192,]  344  359  384 #> [17193,]  344  359  385 #> [17194,]  344  359  384 #> [17195,]  344  359  384 #> [17196,]  344  359  385 #> [17197,]  344  359  385 #> [17198,]  344  359  385 #> [17199,]  344  359  385 #> [17200,]  344  359  384 #> [17201,]  347  362  386 #> [17202,]  347  362  386 #> [17203,]  346  361  387 #> [17204,]  346  361  387 #> [17205,]  346  361  387 #> [17206,]  347  362  386 #> [17207,]  347  362  386 #> [17208,]  346  361  387 #> [17209,]  346  361  387 #> [17210,]  346  361  387 #> [17211,]  347  362  386 #> [17212,]  346  361  387 #> [17213,]  347  362  386 #> [17214,]  347  362  386 #> [17215,]  347  362  386 #> [17216,]  347  362  386 #> [17217,]  347  362  386 #> [17218,]  346  361  387 #> [17219,]  347  362  386 #> [17220,]  346  361  387 #> [17221,]  347  362  386 #> [17222,]  347  362  386 #> [17223,]  346  361  387 #> [17224,]  346  361  387 #> [17225,]  347  362  386 #> [17226,]  347  362  386 #> [17227,]  347  362  386 #> [17228,]  347  362  386 #> [17229,]  347  362  386 #> [17230,]  346  361  387 #> [17231,]  346  361  387 #> [17232,]  346  361  387 #> [17233,]  347  362  386 #> [17234,]  346  361  387 #> [17235,]  347  362  386 #> [17236,]  346  361  387 #> [17237,]  347  362  386 #> [17238,]  346  361  387 #> [17239,]  346  361  387 #> [17240,]  347  362  386 #> [17241,]  347  362  386 #> [17242,]  346  361  387 #> [17243,]  346  361  387 #> [17244,]  347  362  386 #> [17245,]  346  361  387 #> [17246,]  347  362  386 #> [17247,]  347  362  386 #> [17248,]  346  361  387 #> [17249,]  346  361  387 #> [17250,]  347  362  386 #> [17251,]  346  361  387 #> [17252,]  347  362  386 #> [17253,]  346  361  387 #> [17254,]  347  362  386 #> [17255,]  347  362  386 #> [17256,]  346  361  387 #> [17257,]  347  362  386 #> [17258,]  347  362  386 #> [17259,]  347  362  386 #> [17260,]  346  361  387 #> [17261,]  347  362  386 #> [17262,]  346  361  387 #> [17263,]  347  362  386 #> [17264,]  346  361  387 #> [17265,]  346  361  387 #> [17266,]  346  361  387 #> [17267,]  346  361  387 #> [17268,]  347  362  386 #> [17269,]  347  362  386 #> [17270,]  347  362  386 #> [17271,]  347  362  386 #> [17272,]  346  361  387 #> [17273,]  347  362  386 #> [17274,]  347  362  386 #> [17275,]  347  362  386 #> [17276,]  347  362  386 #> [17277,]  347  362  386 #> [17278,]  346  361  387 #> [17279,]  347  362  386 #> [17280,]  347  362  386 #> [17281,]  347  362  386 #> [17282,]  347  362  386 #> [17283,]  347  362  386 #> [17284,]  347  362  386 #> [17285,]  346  361  387 #> [17286,]  347  362  386 #> [17287,]  347  362  386 #> [17288,]  346  361  387 #> [17289,]  346  361  387 #> [17290,]  347  362  386 #> [17291,]  346  361  387 #> [17292,]  347  362  386 #> [17293,]  347  362  386 #> [17294,]  347  362  386 #> [17295,]  346  361  387 #> [17296,]  347  362  386 #> [17297,]  347  362  386 #> [17298,]  347  362  386 #> [17299,]  347  362  386 #> [17300,]  347  362  386 #> [17301,]  349  364  389 #> [17302,]  349  364  389 #> [17303,]  348  363  388 #> [17304,]  349  364  389 #> [17305,]  349  364  389 #> [17306,]  349  364  389 #> [17307,]  348  363  388 #> [17308,]  348  363  388 #> [17309,]  349  364  389 #> [17310,]  349  364  389 #> [17311,]  349  364  389 #> [17312,]  349  364  389 #> [17313,]  348  363  388 #> [17314,]  349  364  389 #> [17315,]  349  364  389 #> [17316,]  348  363  388 #> [17317,]  348  363  388 #> [17318,]  349  364  389 #> [17319,]  349  364  389 #> [17320,]  348  363  388 #> [17321,]  349  364  389 #> [17322,]  348  363  388 #> [17323,]  349  364  389 #> [17324,]  348  363  388 #> [17325,]  348  363  388 #> [17326,]  349  364  389 #> [17327,]  349  364  389 #> [17328,]  349  364  389 #> [17329,]  349  364  389 #> [17330,]  349  364  389 #> [17331,]  349  364  389 #> [17332,]  349  364  389 #> [17333,]  349  364  389 #> [17334,]  349  364  389 #> [17335,]  349  364  389 #> [17336,]  349  364  389 #> [17337,]  349  364  389 #> [17338,]  349  364  389 #> [17339,]  348  363  388 #> [17340,]  348  363  388 #> [17341,]  349  364  389 #> [17342,]  349  364  389 #> [17343,]  348  363  388 #> [17344,]  348  363  388 #> [17345,]  348  363  388 #> [17346,]  348  363  388 #> [17347,]  348  363  388 #> [17348,]  349  364  389 #> [17349,]  348  363  388 #> [17350,]  348  363  388 #> [17351,]  348  363  388 #> [17352,]  349  364  389 #> [17353,]  348  363  388 #> [17354,]  348  363  388 #> [17355,]  348  363  388 #> [17356,]  348  363  388 #> [17357,]  349  364  389 #> [17358,]  349  364  389 #> [17359,]  348  363  388 #> [17360,]  349  364  389 #> [17361,]  349  364  389 #> [17362,]  349  364  389 #> [17363,]  348  363  388 #> [17364,]  349  364  389 #> [17365,]  348  363  388 #> [17366,]  348  363  388 #> [17367,]  349  364  389 #> [17368,]  349  364  389 #> [17369,]  349  364  389 #> [17370,]  348  363  388 #> [17371,]  349  364  389 #> [17372,]  348  363  388 #> [17373,]  349  364  389 #> [17374,]  349  364  389 #> [17375,]  349  364  389 #> [17376,]  348  363  388 #> [17377,]  348  363  388 #> [17378,]  348  363  388 #> [17379,]  348  363  388 #> [17380,]  349  364  389 #> [17381,]  349  364  389 #> [17382,]  349  364  389 #> [17383,]  348  363  388 #> [17384,]  348  363  388 #> [17385,]  349  364  389 #> [17386,]  348  363  388 #> [17387,]  349  364  389 #> [17388,]  349  364  389 #> [17389,]  348  363  388 #> [17390,]  348  363  388 #> [17391,]  349  364  389 #> [17392,]  349  364  389 #> [17393,]  349  364  389 #> [17394,]  348  363  388 #> [17395,]  349  364  389 #> [17396,]  349  364  389 #> [17397,]  349  364  389 #> [17398,]  348  363  388 #> [17399,]  349  364  389 #> [17400,]  348  363  388 #> [17401,]  350  365  391 #> [17402,]  350  365  391 #> [17403,]  350  365  391 #> [17404,]  351  366  390 #> [17405,]  350  365  391 #> [17406,]  350  365  391 #> [17407,]  350  365  391 #> [17408,]  350  365  391 #> [17409,]  350  365  391 #> [17410,]  350  365  391 #> [17411,]  350  365  391 #> [17412,]  350  365  391 #> [17413,]  350  365  391 #> [17414,]  351  366  390 #> [17415,]  350  365  391 #> [17416,]  350  365  391 #> [17417,]  350  365  391 #> [17418,]  350  365  391 #> [17419,]  350  365  391 #> [17420,]  350  365  391 #> [17421,]  350  365  391 #> [17422,]  350  365  391 #> [17423,]  350  365  391 #> [17424,]  350  365  391 #> [17425,]  350  365  391 #> [17426,]  350  365  391 #> [17427,]  351  366  390 #> [17428,]  350  365  391 #> [17429,]  350  365  391 #> [17430,]  350  365  391 #> [17431,]  350  365  391 #> [17432,]  350  365  391 #> [17433,]  350  365  391 #> [17434,]  350  365  391 #> [17435,]  350  365  391 #> [17436,]  350  365  391 #> [17437,]  350  365  391 #> [17438,]  350  365  391 #> [17439,]  350  365  391 #> [17440,]  350  365  391 #> [17441,]  350  365  391 #> [17442,]  350  365  391 #> [17443,]  350  365  391 #> [17444,]  350  365  391 #> [17445,]  350  365  391 #> [17446,]  350  365  391 #> [17447,]  350  365  391 #> [17448,]  350  365  391 #> [17449,]  350  365  391 #> [17450,]  350  365  391 #> [17451,]  350  365  391 #> [17452,]  350  365  391 #> [17453,]  350  365  391 #> [17454,]  350  365  391 #> [17455,]  350  365  391 #> [17456,]  350  365  391 #> [17457,]  350  365  391 #> [17458,]  350  365  391 #> [17459,]  350  365  391 #> [17460,]  350  365  391 #> [17461,]  351  366  390 #> [17462,]  350  365  391 #> [17463,]  350  365  391 #> [17464,]  350  365  391 #> [17465,]  350  365  391 #> [17466,]  350  365  391 #> [17467,]  350  365  391 #> [17468,]  350  365  391 #> [17469,]  350  365  391 #> [17470,]  350  365  391 #> [17471,]  350  365  391 #> [17472,]  350  365  391 #> [17473,]  350  365  391 #> [17474,]  350  365  391 #> [17475,]  350  365  391 #> [17476,]  350  365  391 #> [17477,]  350  365  391 #> [17478,]  350  365  391 #> [17479,]  350  365  391 #> [17480,]  350  365  391 #> [17481,]  350  365  391 #> [17482,]  351  366  390 #> [17483,]  350  365  391 #> [17484,]  350  365  391 #> [17485,]  350  365  391 #> [17486,]  350  365  391 #> [17487,]  350  365  391 #> [17488,]  350  365  391 #> [17489,]  350  365  391 #> [17490,]  350  365  391 #> [17491,]  350  365  391 #> [17492,]  351  366  390 #> [17493,]  351  366  390 #> [17494,]  350  365  391 #> [17495,]  350  365  391 #> [17496,]  351  366  390 #> [17497,]  351  366  390 #> [17498,]  350  365  391 #> [17499,]  350  365  391 #> [17500,]  350  365  391 #> [17501,]  353  368  393 #> [17502,]  353  368  393 #> [17503,]  352  367  392 #> [17504,]  353  368  393 #> [17505,]  353  368  393 #> [17506,]  353  368  393 #> [17507,]  353  368  393 #> [17508,]  353  368  393 #> [17509,]  353  368  393 #> [17510,]  353  368  393 #> [17511,]  353  368  393 #> [17512,]  352  367  392 #> [17513,]  353  368  393 #> [17514,]  352  367  392 #> [17515,]  353  368  393 #> [17516,]  353  368  393 #> [17517,]  353  368  393 #> [17518,]  353  368  393 #> [17519,]  353  368  393 #> [17520,]  353  368  393 #> [17521,]  353  368  393 #> [17522,]  353  368  393 #> [17523,]  353  368  393 #> [17524,]  353  368  393 #> [17525,]  353  368  393 #> [17526,]  352  367  392 #> [17527,]  353  368  393 #> [17528,]  353  368  393 #> [17529,]  353  368  393 #> [17530,]  353  368  393 #> [17531,]  353  368  393 #> [17532,]  352  367  392 #> [17533,]  353  368  393 #> [17534,]  353  368  393 #> [17535,]  353  368  393 #> [17536,]  353  368  393 #> [17537,]  353  368  393 #> [17538,]  353  368  393 #> [17539,]  353  368  393 #> [17540,]  353  368  393 #> [17541,]  353  368  393 #> [17542,]  353  368  393 #> [17543,]  353  368  393 #> [17544,]  353  368  393 #> [17545,]  353  368  393 #> [17546,]  353  368  393 #> [17547,]  353  368  393 #> [17548,]  353  368  393 #> [17549,]  353  368  393 #> [17550,]  353  368  393 #> [17551,]  352  367  392 #> [17552,]  353  368  393 #> [17553,]  353  368  393 #> [17554,]  352  367  392 #> [17555,]  353  368  393 #> [17556,]  353  368  393 #> [17557,]  353  368  393 #> [17558,]  353  368  393 #> [17559,]  353  368  393 #> [17560,]  353  368  393 #> [17561,]  353  368  393 #> [17562,]  353  368  393 #> [17563,]  353  368  393 #> [17564,]  353  368  393 #> [17565,]  353  368  393 #> [17566,]  352  367  392 #> [17567,]  353  368  393 #> [17568,]  353  368  393 #> [17569,]  352  367  392 #> [17570,]  353  368  393 #> [17571,]  353  368  393 #> [17572,]  353  368  393 #> [17573,]  353  368  393 #> [17574,]  353  368  393 #> [17575,]  353  368  393 #> [17576,]  353  368  393 #> [17577,]  353  368  393 #> [17578,]  353  368  393 #> [17579,]  353  368  393 #> [17580,]  352  367  392 #> [17581,]  353  368  393 #> [17582,]  353  368  393 #> [17583,]  353  368  393 #> [17584,]  353  368  393 #> [17585,]  353  368  393 #> [17586,]  353  368  393 #> [17587,]  353  368  393 #> [17588,]  353  368  393 #> [17589,]  352  367  392 #> [17590,]  353  368  393 #> [17591,]  353  368  393 #> [17592,]  353  368  393 #> [17593,]  353  368  393 #> [17594,]  353  368  393 #> [17595,]  353  368  393 #> [17596,]  353  368  393 #> [17597,]  353  368  393 #> [17598,]  353  368  393 #> [17599,]  353  368  393 #> [17600,]  353  368  393 #> [17601,]  355  369  394 #> [17602,]  354  371  394 #> [17603,]  354  370  394 #> [17604,]  354  370  394 #> [17605,]  355  369  394 #> [17606,]  354  370  394 #> [17607,]  354  371  394 #> [17608,]  354  371  394 #> [17609,]  354  370  394 #> [17610,]  355  369  394 #> [17611,]  355  369  394 #> [17612,]  355  369  394 #> [17613,]  354  371  394 #> [17614,]  355  369  394 #> [17615,]  355  369  394 #> [17616,]  354  371  394 #> [17617,]  355  369  394 #> [17618,]  355  369  394 #> [17619,]  354  371  394 #> [17620,]  354  371  394 #> [17621,]  354  370  394 #> [17622,]  355  369  394 #> [17623,]  354  371  394 #> [17624,]  354  370  394 #> [17625,]  354  370  394 #> [17626,]  355  369  394 #> [17627,]  355  369  394 #> [17628,]  354  370  394 #> [17629,]  354  371  394 #> [17630,]  354  371  394 #> [17631,]  355  369  394 #> [17632,]  355  369  394 #> [17633,]  354  371  394 #> [17634,]  354  370  394 #> [17635,]  354  370  394 #> [17636,]  354  371  394 #> [17637,]  354  371  394 #> [17638,]  355  369  394 #> [17639,]  354  370  394 #> [17640,]  354  370  394 #> [17641,]  354  371  394 #> [17642,]  354  370  394 #> [17643,]  355  369  394 #> [17644,]  354  371  394 #> [17645,]  354  371  394 #> [17646,]  354  371  394 #> [17647,]  355  369  394 #> [17648,]  354  370  394 #> [17649,]  354  371  394 #> [17650,]  354  371  394 #> [17651,]  354  371  394 #> [17652,]  355  369  394 #> [17653,]  354  371  394 #> [17654,]  354  370  394 #> [17655,]  354  371  394 #> [17656,]  354  371  394 #> [17657,]  354  370  394 #> [17658,]  355  369  394 #> [17659,]  355  369  394 #> [17660,]  354  371  394 #> [17661,]  355  369  394 #> [17662,]  354  370  394 #> [17663,]  354  371  394 #> [17664,]  354  371  394 #> [17665,]  354  370  394 #> [17666,]  355  369  394 #> [17667,]  354  370  394 #> [17668,]  354  371  394 #> [17669,]  354  371  394 #> [17670,]  355  369  394 #> [17671,]  355  369  394 #> [17672,]  354  370  394 #> [17673,]  354  370  394 #> [17674,]  354  370  394 #> [17675,]  355  369  394 #> [17676,]  354  370  394 #> [17677,]  355  369  394 #> [17678,]  354  371  394 #> [17679,]  355  369  394 #> [17680,]  354  371  394 #> [17681,]  354  371  394 #> [17682,]  354  370  394 #> [17683,]  354  371  394 #> [17684,]  354  371  394 #> [17685,]  354  371  394 #> [17686,]  354  370  394 #> [17687,]  355  369  394 #> [17688,]  354  370  394 #> [17689,]  354  370  394 #> [17690,]  355  369  394 #> [17691,]  355  369  394 #> [17692,]  355  369  394 #> [17693,]  354  371  394 #> [17694,]  354  370  394 #> [17695,]  355  369  394 #> [17696,]  354  371  394 #> [17697,]  354  371  394 #> [17698,]  354  370  394 #> [17699,]  354  370  394 #> [17700,]  355  369  394 #> [17701,]  356  372  395 #> [17702,]  357  373  396 #> [17703,]  356  372  395 #> [17704,]  357  373  396 #> [17705,]  357  373  396 #> [17706,]  356  372  395 #> [17707,]  357  373  396 #> [17708,]  357  373  396 #> [17709,]  357  373  396 #> [17710,]  357  373  396 #> [17711,]  356  372  395 #> [17712,]  357  373  396 #> [17713,]  357  373  396 #> [17714,]  357  373  396 #> [17715,]  357  373  396 #> [17716,]  356  372  395 #> [17717,]  357  373  396 #> [17718,]  357  373  396 #> [17719,]  356  372  395 #> [17720,]  357  373  396 #> [17721,]  357  373  396 #> [17722,]  357  373  396 #> [17723,]  357  373  396 #> [17724,]  357  373  396 #> [17725,]  357  373  396 #> [17726,]  357  373  396 #> [17727,]  357  373  396 #> [17728,]  356  372  395 #> [17729,]  357  373  396 #> [17730,]  357  373  396 #> [17731,]  357  373  396 #> [17732,]  357  373  396 #> [17733,]  357  373  396 #> [17734,]  356  372  395 #> [17735,]  356  372  395 #> [17736,]  357  373  396 #> [17737,]  356  372  395 #> [17738,]  356  372  395 #> [17739,]  357  373  396 #> [17740,]  357  373  396 #> [17741,]  357  373  396 #> [17742,]  357  373  396 #> [17743,]  357  373  396 #> [17744,]  357  373  396 #> [17745,]  356  372  395 #> [17746,]  357  373  396 #> [17747,]  357  373  396 #> [17748,]  357  373  396 #> [17749,]  356  372  395 #> [17750,]  357  373  396 #> [17751,]  357  373  396 #> [17752,]  356  372  395 #> [17753,]  357  373  396 #> [17754,]  357  373  396 #> [17755,]  357  373  396 #> [17756,]  357  373  396 #> [17757,]  357  373  396 #> [17758,]  357  373  396 #> [17759,]  357  373  396 #> [17760,]  357  373  396 #> [17761,]  357  373  396 #> [17762,]  357  373  396 #> [17763,]  357  373  396 #> [17764,]  356  372  395 #> [17765,]  357  373  396 #> [17766,]  357  373  396 #> [17767,]  357  373  396 #> [17768,]  356  372  395 #> [17769,]  357  373  396 #> [17770,]  357  373  396 #> [17771,]  357  373  396 #> [17772,]  356  372  395 #> [17773,]  356  372  395 #> [17774,]  357  373  396 #> [17775,]  357  373  396 #> [17776,]  357  373  396 #> [17777,]  356  372  395 #> [17778,]  357  373  396 #> [17779,]  357  373  396 #> [17780,]  357  373  396 #> [17781,]  357  373  396 #> [17782,]  357  373  396 #> [17783,]  357  373  396 #> [17784,]  357  373  396 #> [17785,]  357  373  396 #> [17786,]  357  373  396 #> [17787,]  357  373  396 #> [17788,]  357  373  396 #> [17789,]  357  373  396 #> [17790,]  357  373  396 #> [17791,]  357  373  396 #> [17792,]  357  373  396 #> [17793,]  357  373  396 #> [17794,]  356  372  395 #> [17795,]  357  373  396 #> [17796,]  356  372  395 #> [17797,]  356  372  395 #> [17798,]  357  373  396 #> [17799,]  357  373  396 #> [17800,]  356  372  395 #> [17801,]  359  375  397 #> [17802,]  359  375  398 #> [17803,]  358  374  397 #> [17804,]  359  375  397 #> [17805,]  359  375  398 #> [17806,]  359  375  397 #> [17807,]  359  375  398 #> [17808,]  359  375  397 #> [17809,]  359  375  398 #> [17810,]  359  375  398 #> [17811,]  359  375  397 #> [17812,]  358  374  398 #> [17813,]  359  375  398 #> [17814,]  358  374  397 #> [17815,]  359  375  397 #> [17816,]  359  375  397 #> [17817,]  359  375  398 #> [17818,]  359  375  398 #> [17819,]  359  375  397 #> [17820,]  359  375  398 #> [17821,]  359  375  398 #> [17822,]  359  375  398 #> [17823,]  359  375  398 #> [17824,]  359  375  398 #> [17825,]  359  375  398 #> [17826,]  358  374  397 #> [17827,]  359  375  398 #> [17828,]  359  375  397 #> [17829,]  359  375  398 #> [17830,]  359  375  398 #> [17831,]  359  375  398 #> [17832,]  358  374  398 #> [17833,]  359  375  398 #> [17834,]  359  375  397 #> [17835,]  359  375  397 #> [17836,]  359  375  398 #> [17837,]  359  375  397 #> [17838,]  359  375  397 #> [17839,]  359  375  398 #> [17840,]  359  375  398 #> [17841,]  359  375  398 #> [17842,]  359  375  397 #> [17843,]  359  375  398 #> [17844,]  359  375  398 #> [17845,]  359  375  397 #> [17846,]  359  375  397 #> [17847,]  359  375  398 #> [17848,]  359  375  398 #> [17849,]  359  375  397 #> [17850,]  359  375  398 #> [17851,]  359  375  398 #> [17852,]  359  375  397 #> [17853,]  359  375  398 #> [17854,]  359  375  398 #> [17855,]  359  375  397 #> [17856,]  359  375  397 #> [17857,]  359  375  397 #> [17858,]  359  375  398 #> [17859,]  359  375  397 #> [17860,]  359  375  398 #> [17861,]  359  375  398 #> [17862,]  359  375  397 #> [17863,]  359  375  398 #> [17864,]  359  375  397 #> [17865,]  359  375  397 #> [17866,]  359  375  398 #> [17867,]  359  375  398 #> [17868,]  359  375  397 #> [17869,]  358  374  397 #> [17870,]  359  375  398 #> [17871,]  359  375  398 #> [17872,]  359  375  397 #> [17873,]  359  375  397 #> [17874,]  359  375  398 #> [17875,]  359  375  398 #> [17876,]  359  375  398 #> [17877,]  359  375  397 #> [17878,]  359  375  398 #> [17879,]  359  375  397 #> [17880,]  358  374  398 #> [17881,]  359  375  398 #> [17882,]  359  375  397 #> [17883,]  359  375  398 #> [17884,]  359  375  398 #> [17885,]  359  375  398 #> [17886,]  359  375  398 #> [17887,]  359  375  398 #> [17888,]  359  375  398 #> [17889,]  359  375  397 #> [17890,]  359  375  398 #> [17891,]  359  375  397 #> [17892,]  359  375  398 #> [17893,]  359  375  398 #> [17894,]  359  375  397 #> [17895,]  359  375  398 #> [17896,]  359  375  397 #> [17897,]  359  375  397 #> [17898,]  359  375  398 #> [17899,]  359  375  398 #> [17900,]  359  375  397 #> [17901,]  361  377  400 #> [17902,]  361  377  400 #> [17903,]  361  377  399 #> [17904,]  360  376  399 #> [17905,]  361  377  399 #> [17906,]  361  377  400 #> [17907,]  361  377  399 #> [17908,]  360  376  399 #> [17909,]  360  376  399 #> [17910,]  360  376  399 #> [17911,]  361  377  399 #> [17912,]  361  377  399 #> [17913,]  361  377  400 #> [17914,]  361  377  400 #> [17915,]  361  377  400 #> [17916,]  361  377  400 #> [17917,]  361  377  400 #> [17918,]  361  377  399 #> [17919,]  361  377  399 #> [17920,]  361  377  399 #> [17921,]  361  377  400 #> [17922,]  361  377  399 #> [17923,]  361  377  399 #> [17924,]  361  377  399 #> [17925,]  361  377  399 #> [17926,]  361  377  399 #> [17927,]  361  377  399 #> [17928,]  361  377  399 #> [17929,]  361  377  400 #> [17930,]  361  377  399 #> [17931,]  361  377  399 #> [17932,]  361  377  399 #> [17933,]  361  377  400 #> [17934,]  361  377  399 #> [17935,]  361  377  399 #> [17936,]  361  377  399 #> [17937,]  361  377  399 #> [17938,]  361  377  399 #> [17939,]  361  377  399 #> [17940,]  361  377  399 #> [17941,]  361  377  400 #> [17942,]  361  377  399 #> [17943,]  360  376  399 #> [17944,]  361  377  400 #> [17945,]  361  377  399 #> [17946,]  361  377  399 #> [17947,]  361  377  399 #> [17948,]  361  377  399 #> [17949,]  361  377  399 #> [17950,]  361  377  400 #> [17951,]  360  376  399 #> [17952,]  361  377  399 #> [17953,]  361  377  399 #> [17954,]  361  377  399 #> [17955,]  361  377  399 #> [17956,]  361  377  399 #> [17957,]  361  377  399 #> [17958,]  361  377  399 #> [17959,]  361  377  400 #> [17960,]  360  376  399 #> [17961,]  361  377  400 #> [17962,]  361  377  399 #> [17963,]  361  377  399 #> [17964,]  360  376  399 #> [17965,]  361  377  399 #> [17966,]  361  377  399 #> [17967,]  360  376  399 #> [17968,]  361  377  400 #> [17969,]  361  377  399 #> [17970,]  361  377  400 #> [17971,]  361  377  399 #> [17972,]  361  377  399 #> [17973,]  361  377  400 #> [17974,]  361  377  399 #> [17975,]  361  377  399 #> [17976,]  361  377  400 #> [17977,]  361  377  399 #> [17978,]  360  376  399 #> [17979,]  361  377  400 #> [17980,]  361  377  399 #> [17981,]  361  377  400 #> [17982,]  361  377  399 #> [17983,]  361  377  400 #> [17984,]  361  377  399 #> [17985,]  360  376  399 #> [17986,]  361  377  400 #> [17987,]  361  377  399 #> [17988,]  361  377  399 #> [17989,]  360  376  399 #> [17990,]  361  377  399 #> [17991,]  360  376  399 #> [17992,]  361  377  399 #> [17993,]  361  377  400 #> [17994,]  361  377  399 #> [17995,]  360  376  399 #> [17996,]  361  377  400 #> [17997,]  361  377  399 #> [17998,]  361  377  399 #> [17999,]  361  377  400 #> [18000,]  361  377  399 #> [18001,]  363  379  401 #> [18002,]  362  378  402 #> [18003,]  362  378  402 #> [18004,]  362  378  402 #> [18005,]  363  379  401 #> [18006,]  362  378  402 #> [18007,]  362  378  402 #> [18008,]  362  378  402 #> [18009,]  362  378  402 #> [18010,]  362  378  402 #> [18011,]  362  378  402 #> [18012,]  362  378  402 #> [18013,]  362  378  402 #> [18014,]  363  379  401 #> [18015,]  363  379  401 #> [18016,]  362  378  402 #> [18017,]  362  378  402 #> [18018,]  363  379  401 #> [18019,]  362  378  402 #> [18020,]  362  378  402 #> [18021,]  362  378  402 #> [18022,]  362  378  402 #> [18023,]  362  378  402 #> [18024,]  362  378  402 #> [18025,]  362  378  402 #> [18026,]  363  379  401 #> [18027,]  363  379  401 #> [18028,]  362  378  402 #> [18029,]  362  378  402 #> [18030,]  362  378  402 #> [18031,]  362  378  402 #> [18032,]  363  379  401 #> [18033,]  362  378  402 #> [18034,]  362  378  402 #> [18035,]  362  378  402 #> [18036,]  362  378  402 #> [18037,]  362  378  402 #> [18038,]  362  378  402 #> [18039,]  362  378  402 #> [18040,]  362  378  402 #> [18041,]  362  378  402 #> [18042,]  362  378  402 #> [18043,]  363  379  401 #> [18044,]  362  378  402 #> [18045,]  362  378  402 #> [18046,]  362  378  402 #> [18047,]  362  378  402 #> [18048,]  362  378  402 #> [18049,]  362  378  402 #> [18050,]  362  378  402 #> [18051,]  362  378  402 #> [18052,]  362  378  402 #> [18053,]  362  378  402 #> [18054,]  362  378  402 #> [18055,]  362  378  402 #> [18056,]  362  378  402 #> [18057,]  362  378  402 #> [18058,]  363  379  401 #> [18059,]  363  379  401 #> [18060,]  362  378  402 #> [18061,]  363  379  401 #> [18062,]  362  378  402 #> [18063,]  362  378  402 #> [18064,]  362  378  402 #> [18065,]  362  378  402 #> [18066,]  363  379  401 #> [18067,]  362  378  402 #> [18068,]  362  378  402 #> [18069,]  362  378  402 #> [18070,]  363  379  401 #> [18071,]  363  379  401 #> [18072,]  362  378  402 #> [18073,]  362  378  402 #> [18074,]  362  378  402 #> [18075,]  363  379  401 #> [18076,]  362  378  402 #> [18077,]  362  378  402 #> [18078,]  362  378  402 #> [18079,]  363  379  401 #> [18080,]  362  378  402 #> [18081,]  362  378  402 #> [18082,]  362  378  402 #> [18083,]  362  378  402 #> [18084,]  362  378  402 #> [18085,]  362  378  402 #> [18086,]  362  378  402 #> [18087,]  363  379  401 #> [18088,]  362  378  402 #> [18089,]  362  378  402 #> [18090,]  362  378  402 #> [18091,]  363  379  401 #> [18092,]  362  378  402 #> [18093,]  362  378  402 #> [18094,]  362  378  402 #> [18095,]  363  379  401 #> [18096,]  362  378  402 #> [18097,]  362  378  402 #> [18098,]  362  378  402 #> [18099,]  362  378  402 #> [18100,]  363  379  401 #> [18101,]  364  380  403 #> [18102,]  364  380  403 #> [18103,]  364  380  403 #> [18104,]  364  380  403 #> [18105,]  364  380  403 #> [18106,]  364  380  403 #> [18107,]  364  380  403 #> [18108,]  365  381  404 #> [18109,]  364  380  403 #> [18110,]  364  380  403 #> [18111,]  364  380  403 #> [18112,]  364  380  403 #> [18113,]  365  381  404 #> [18114,]  364  380  403 #> [18115,]  365  381  404 #> [18116,]  364  380  403 #> [18117,]  364  380  403 #> [18118,]  364  380  403 #> [18119,]  365  381  404 #> [18120,]  365  381  404 #> [18121,]  364  380  403 #> [18122,]  365  381  404 #> [18123,]  364  380  403 #> [18124,]  364  380  403 #> [18125,]  364  380  403 #> [18126,]  364  380  403 #> [18127,]  365  381  404 #> [18128,]  364  380  403 #> [18129,]  365  381  404 #> [18130,]  364  380  403 #> [18131,]  364  380  403 #> [18132,]  364  380  403 #> [18133,]  364  380  403 #> [18134,]  364  380  403 #> [18135,]  364  380  403 #> [18136,]  365  381  404 #> [18137,]  365  381  404 #> [18138,]  365  381  404 #> [18139,]  364  380  403 #> [18140,]  364  380  403 #> [18141,]  365  381  404 #> [18142,]  364  380  403 #> [18143,]  364  380  403 #> [18144,]  364  380  403 #> [18145,]  364  380  403 #> [18146,]  365  381  404 #> [18147,]  364  380  403 #> [18148,]  364  380  403 #> [18149,]  364  380  403 #> [18150,]  365  381  404 #> [18151,]  365  381  404 #> [18152,]  364  380  403 #> [18153,]  365  381  404 #> [18154,]  364  380  403 #> [18155,]  365  381  404 #> [18156,]  364  380  403 #> [18157,]  364  380  403 #> [18158,]  365  381  404 #> [18159,]  364  380  403 #> [18160,]  365  381  404 #> [18161,]  364  380  403 #> [18162,]  364  380  403 #> [18163,]  364  380  403 #> [18164,]  365  381  404 #> [18165,]  364  380  403 #> [18166,]  365  381  404 #> [18167,]  364  380  403 #> [18168,]  364  380  403 #> [18169,]  365  381  404 #> [18170,]  364  380  403 #> [18171,]  365  381  404 #> [18172,]  364  380  403 #> [18173,]  364  380  403 #> [18174,]  364  380  403 #> [18175,]  364  380  403 #> [18176,]  364  380  403 #> [18177,]  365  381  404 #> [18178,]  364  380  403 #> [18179,]  364  380  403 #> [18180,]  365  381  404 #> [18181,]  365  381  404 #> [18182,]  364  380  403 #> [18183,]  365  381  404 #> [18184,]  364  380  403 #> [18185,]  364  380  403 #> [18186,]  364  380  403 #> [18187,]  365  381  404 #> [18188,]  364  380  403 #> [18189,]  364  380  403 #> [18190,]  365  381  404 #> [18191,]  364  380  403 #> [18192,]  364  380  403 #> [18193,]  364  380  403 #> [18194,]  364  380  403 #> [18195,]  364  380  403 #> [18196,]  365  381  404 #> [18197,]  365  381  404 #> [18198,]  364  380  403 #> [18199,]  364  380  403 #> [18200,]  365  381  404 #> [18201,]  367  383  405 #> [18202,]  367  383  405 #> [18203,]  367  383  405 #> [18204,]  366  382  405 #> [18205,]  367  383  405 #> [18206,]  367  383  405 #> [18207,]  367  383  405 #> [18208,]  366  382  405 #> [18209,]  366  382  405 #> [18210,]  366  382  405 #> [18211,]  367  383  405 #> [18212,]  367  383  405 #> [18213,]  367  383  405 #> [18214,]  367  383  405 #> [18215,]  367  383  405 #> [18216,]  367  383  405 #> [18217,]  367  383  405 #> [18218,]  367  383  405 #> [18219,]  367  383  405 #> [18220,]  367  383  405 #> [18221,]  367  383  405 #> [18222,]  367  383  405 #> [18223,]  367  383  405 #> [18224,]  367  383  405 #> [18225,]  367  383  405 #> [18226,]  367  383  405 #> [18227,]  367  383  405 #> [18228,]  367  383  405 #> [18229,]  367  383  405 #> [18230,]  367  383  405 #> [18231,]  367  383  405 #> [18232,]  367  383  405 #> [18233,]  367  383  405 #> [18234,]  367  383  405 #> [18235,]  367  383  405 #> [18236,]  367  383  405 #> [18237,]  367  383  405 #> [18238,]  367  383  405 #> [18239,]  367  383  405 #> [18240,]  367  383  405 #> [18241,]  367  383  405 #> [18242,]  367  383  405 #> [18243,]  366  382  405 #> [18244,]  367  383  405 #> [18245,]  367  383  405 #> [18246,]  367  383  405 #> [18247,]  367  383  405 #> [18248,]  367  383  405 #> [18249,]  367  383  405 #> [18250,]  367  383  405 #> [18251,]  366  382  405 #> [18252,]  367  383  405 #> [18253,]  367  383  405 #> [18254,]  367  383  405 #> [18255,]  367  383  405 #> [18256,]  367  383  405 #> [18257,]  367  383  405 #> [18258,]  367  383  405 #> [18259,]  367  383  405 #> [18260,]  366  382  405 #> [18261,]  367  383  405 #> [18262,]  367  383  405 #> [18263,]  367  383  405 #> [18264,]  366  382  405 #> [18265,]  367  383  405 #> [18266,]  367  383  405 #> [18267,]  366  382  405 #> [18268,]  367  383  405 #> [18269,]  367  383  405 #> [18270,]  367  383  405 #> [18271,]  367  383  405 #> [18272,]  367  383  405 #> [18273,]  367  383  405 #> [18274,]  367  383  405 #> [18275,]  367  383  405 #> [18276,]  367  383  405 #> [18277,]  367  383  405 #> [18278,]  366  382  405 #> [18279,]  367  383  405 #> [18280,]  367  383  405 #> [18281,]  367  383  405 #> [18282,]  367  383  405 #> [18283,]  367  383  405 #> [18284,]  367  383  405 #> [18285,]  366  382  405 #> [18286,]  367  383  405 #> [18287,]  367  383  405 #> [18288,]  367  383  405 #> [18289,]  366  382  405 #> [18290,]  367  383  405 #> [18291,]  366  382  405 #> [18292,]  367  383  405 #> [18293,]  367  383  405 #> [18294,]  367  383  405 #> [18295,]  366  382  405 #> [18296,]  367  383  405 #> [18297,]  367  383  405 #> [18298,]  367  383  405 #> [18299,]  367  383  405 #> [18300,]  367  383  405 #> [18301,]  369  384  407 #> [18302,]  368  384  407 #> [18303,]  368  384  407 #> [18304,]  369  384  406 #> [18305,]  369  384  407 #> [18306,]  369  384  407 #> [18307,]  368  384  407 #> [18308,]  369  384  406 #> [18309,]  369  384  406 #> [18310,]  369  384  407 #> [18311,]  369  384  406 #> [18312,]  369  384  407 #> [18313,]  368  384  406 #> [18314,]  369  384  407 #> [18315,]  369  384  407 #> [18316,]  368  384  407 #> [18317,]  369  384  406 #> [18318,]  368  384  407 #> [18319,]  368  384  407 #> [18320,]  369  384  407 #> [18321,]  368  384  407 #> [18322,]  368  384  406 #> [18323,]  368  384  407 #> [18324,]  368  384  407 #> [18325,]  369  384  407 #> [18326,]  369  384  407 #> [18327,]  369  384  406 #> [18328,]  369  384  407 #> [18329,]  369  384  407 #> [18330,]  368  384  407 #> [18331,]  368  384  407 #> [18332,]  368  384  407 #> [18333,]  369  384  407 #> [18334,]  368  384  407 #> [18335,]  368  384  406 #> [18336,]  368  384  407 #> [18337,]  368  384  407 #> [18338,]  369  384  407 #> [18339,]  368  384  407 #> [18340,]  368  384  407 #> [18341,]  369  384  407 #> [18342,]  369  384  407 #> [18343,]  369  384  406 #> [18344,]  368  384  406 #> [18345,]  369  384  407 #> [18346,]  369  384  407 #> [18347,]  368  384  407 #> [18348,]  369  384  407 #> [18349,]  368  384  406 #> [18350,]  369  384  407 #> [18351,]  369  384  407 #> [18352,]  369  384  406 #> [18353,]  369  384  407 #> [18354,]  368  384  407 #> [18355,]  369  384  406 #> [18356,]  369  384  407 #> [18357,]  369  384  407 #> [18358,]  369  384  406 #> [18359,]  368  384  407 #> [18360,]  369  384  407 #> [18361,]  369  384  407 #> [18362,]  368  384  407 #> [18363,]  369  384  407 #> [18364,]  369  384  407 #> [18365,]  369  384  407 #> [18366,]  369  384  406 #> [18367,]  369  384  407 #> [18368,]  369  384  407 #> [18369,]  369  384  406 #> [18370,]  368  384  407 #> [18371,]  369  384  407 #> [18372,]  369  384  407 #> [18373,]  369  384  407 #> [18374,]  369  384  407 #> [18375,]  369  384  407 #> [18376,]  369  384  407 #> [18377,]  368  384  407 #> [18378,]  369  384  407 #> [18379,]  368  384  406 #> [18380,]  368  384  406 #> [18381,]  369  384  406 #> [18382,]  369  384  406 #> [18383,]  368  384  406 #> [18384,]  369  384  407 #> [18385,]  369  384  407 #> [18386,]  368  384  407 #> [18387,]  369  384  406 #> [18388,]  369  384  406 #> [18389,]  369  384  406 #> [18390,]  369  384  406 #> [18391,]  369  384  407 #> [18392,]  369  384  406 #> [18393,]  368  384  407 #> [18394,]  369  384  407 #> [18395,]  368  384  406 #> [18396,]  369  384  407 #> [18397,]  369  384  407 #> [18398,]  368  384  407 #> [18399,]  369  384  406 #> [18400,]  368  384  407 #> [18401,]  370  385  408 #> [18402,]  371  386  409 #> [18403,]  372  386  409 #> [18404,]  370  385  408 #> [18405,]  372  386  409 #> [18406,]  371  386  409 #> [18407,]  372  386  409 #> [18408,]  370  385  408 #> [18409,]  370  385  408 #> [18410,]  372  386  409 #> [18411,]  370  385  408 #> [18412,]  371  386  409 #> [18413,]  370  385  408 #> [18414,]  372  386  409 #> [18415,]  371  386  409 #> [18416,]  372  386  409 #> [18417,]  370  385  408 #> [18418,]  372  386  409 #> [18419,]  371  386  409 #> [18420,]  372  386  409 #> [18421,]  372  386  409 #> [18422,]  370  385  408 #> [18423,]  371  386  409 #> [18424,]  372  386  409 #> [18425,]  372  386  409 #> [18426,]  371  386  409 #> [18427,]  370  385  408 #> [18428,]  372  386  409 #> [18429,]  371  386  409 #> [18430,]  370  385  408 #> [18431,]  371  386  409 #> [18432,]  372  386  409 #> [18433,]  372  386  409 #> [18434,]  371  386  409 #> [18435,]  370  385  408 #> [18436,]  372  386  409 #> [18437,]  371  386  409 #> [18438,]  372  386  409 #> [18439,]  372  386  409 #> [18440,]  372  386  409 #> [18441,]  372  386  409 #> [18442,]  371  386  409 #> [18443,]  370  385  408 #> [18444,]  370  385  408 #> [18445,]  372  386  409 #> [18446,]  372  386  409 #> [18447,]  371  386  409 #> [18448,]  371  386  409 #> [18449,]  370  385  408 #> [18450,]  372  386  409 #> [18451,]  372  386  409 #> [18452,]  370  385  408 #> [18453,]  372  386  409 #> [18454,]  370  385  408 #> [18455,]  370  385  408 #> [18456,]  371  386  409 #> [18457,]  372  386  409 #> [18458,]  370  385  408 #> [18459,]  372  386  409 #> [18460,]  371  386  409 #> [18461,]  371  386  409 #> [18462,]  372  386  409 #> [18463,]  371  386  409 #> [18464,]  371  386  409 #> [18465,]  371  386  409 #> [18466,]  370  385  408 #> [18467,]  372  386  409 #> [18468,]  371  386  409 #> [18469,]  370  385  408 #> [18470,]  371  386  409 #> [18471,]  372  386  409 #> [18472,]  372  386  409 #> [18473,]  372  386  409 #> [18474,]  372  386  409 #> [18475,]  371  386  409 #> [18476,]  372  386  409 #> [18477,]  372  386  409 #> [18478,]  371  386  409 #> [18479,]  370  385  408 #> [18480,]  370  385  408 #> [18481,]  370  385  408 #> [18482,]  370  385  408 #> [18483,]  370  385  408 #> [18484,]  372  386  409 #> [18485,]  372  386  409 #> [18486,]  372  386  409 #> [18487,]  370  385  408 #> [18488,]  370  385  408 #> [18489,]  370  385  408 #> [18490,]  370  385  408 #> [18491,]  372  386  409 #> [18492,]  370  385  408 #> [18493,]  372  386  409 #> [18494,]  371  386  409 #> [18495,]  370  385  408 #> [18496,]  370  385  408 #> [18497,]  372  386  409 #> [18498,]  372  386  409 #> [18499,]  370  385  408 #> [18500,]  371  386  409 #> [18501,]  373  387  412 #> [18502,]  374  387  410 #> [18503,]  373  387  411 #> [18504,]  373  387  412 #> [18505,]  373  387  410 #> [18506,]  373  387  411 #> [18507,]  373  387  412 #> [18508,]  373  387  412 #> [18509,]  374  387  410 #> [18510,]  374  387  410 #> [18511,]  373  387  411 #> [18512,]  374  387  410 #> [18513,]  373  387  410 #> [18514,]  373  387  412 #> [18515,]  373  387  412 #> [18516,]  373  387  411 #> [18517,]  374  387  410 #> [18518,]  373  387  410 #> [18519,]  373  387  411 #> [18520,]  373  387  410 #> [18521,]  374  387  410 #> [18522,]  373  387  412 #> [18523,]  373  387  410 #> [18524,]  373  387  410 #> [18525,]  373  387  412 #> [18526,]  373  387  412 #> [18527,]  373  387  410 #> [18528,]  373  387  412 #> [18529,]  374  387  410 #> [18530,]  373  387  412 #> [18531,]  373  387  410 #> [18532,]  373  387  410 #> [18533,]  374  387  410 #> [18534,]  373  387  411 #> [18535,]  373  387  411 #> [18536,]  373  387  410 #> [18537,]  373  387  411 #> [18538,]  373  387  411 #> [18539,]  373  387  412 #> [18540,]  373  387  410 #> [18541,]  373  387  412 #> [18542,]  373  387  412 #> [18543,]  373  387  412 #> [18544,]  373  387  410 #> [18545,]  373  387  411 #> [18546,]  373  387  412 #> [18547,]  373  387  412 #> [18548,]  373  387  412 #> [18549,]  373  387  411 #> [18550,]  373  387  412 #> [18551,]  373  387  412 #> [18552,]  373  387  411 #> [18553,]  374  387  410 #> [18554,]  373  387  412 #> [18555,]  373  387  412 #> [18556,]  373  387  412 #> [18557,]  373  387  412 #> [18558,]  373  387  412 #> [18559,]  373  387  412 #> [18560,]  374  387  410 #> [18561,]  373  387  410 #> [18562,]  373  387  412 #> [18563,]  374  387  410 #> [18564,]  373  387  411 #> [18565,]  373  387  412 #> [18566,]  373  387  412 #> [18567,]  373  387  412 #> [18568,]  373  387  411 #> [18569,]  373  387  412 #> [18570,]  374  387  410 #> [18571,]  373  387  412 #> [18572,]  373  387  411 #> [18573,]  373  387  412 #> [18574,]  373  387  412 #> [18575,]  373  387  410 #> [18576,]  373  387  412 #> [18577,]  373  387  412 #> [18578,]  373  387  412 #> [18579,]  373  387  412 #> [18580,]  374  387  410 #> [18581,]  374  387  410 #> [18582,]  373  387  412 #> [18583,]  373  387  410 #> [18584,]  373  387  410 #> [18585,]  373  387  412 #> [18586,]  374  387  410 #> [18587,]  373  387  412 #> [18588,]  373  387  410 #> [18589,]  373  387  412 #> [18590,]  373  387  412 #> [18591,]  373  387  412 #> [18592,]  373  387  412 #> [18593,]  373  387  412 #> [18594,]  373  387  412 #> [18595,]  373  387  412 #> [18596,]  373  387  411 #> [18597,]  373  387  411 #> [18598,]  373  387  412 #> [18599,]  373  387  412 #> [18600,]  373  387  411 #> [18601,]  376  388  414 #> [18602,]  376  388  414 #> [18603,]  376  388  414 #> [18604,]  376  388  414 #> [18605,]  376  388  414 #> [18606,]  376  388  414 #> [18607,]  375  388  414 #> [18608,]  376  388  414 #> [18609,]  376  388  414 #> [18610,]  376  388  414 #> [18611,]  376  388  414 #> [18612,]  376  388  414 #> [18613,]  376  388  413 #> [18614,]  376  388  414 #> [18615,]  376  388  413 #> [18616,]  376  388  414 #> [18617,]  376  388  414 #> [18618,]  376  388  414 #> [18619,]  376  388  413 #> [18620,]  376  388  413 #> [18621,]  375  388  414 #> [18622,]  376  388  413 #> [18623,]  375  388  414 #> [18624,]  376  388  414 #> [18625,]  376  388  414 #> [18626,]  376  388  414 #> [18627,]  376  388  413 #> [18628,]  376  388  414 #> [18629,]  376  388  413 #> [18630,]  375  388  414 #> [18631,]  376  388  414 #> [18632,]  376  388  414 #> [18633,]  376  388  414 #> [18634,]  376  388  414 #> [18635,]  376  388  414 #> [18636,]  376  388  413 #> [18637,]  376  388  413 #> [18638,]  376  388  413 #> [18639,]  375  388  414 #> [18640,]  376  388  414 #> [18641,]  376  388  414 #> [18642,]  376  388  414 #> [18643,]  376  388  414 #> [18644,]  376  388  414 #> [18645,]  376  388  414 #> [18646,]  376  388  413 #> [18647,]  376  388  414 #> [18648,]  376  388  414 #> [18649,]  375  388  414 #> [18650,]  376  388  414 #> [18651,]  376  388  414 #> [18652,]  376  388  414 #> [18653,]  376  388  413 #> [18654,]  375  388  414 #> [18655,]  376  388  413 #> [18656,]  376  388  414 #> [18657,]  376  388  414 #> [18658,]  376  388  413 #> [18659,]  376  388  414 #> [18660,]  376  388  414 #> [18661,]  376  388  414 #> [18662,]  375  388  414 #> [18663,]  376  388  414 #> [18664,]  376  388  413 #> [18665,]  376  388  414 #> [18666,]  376  388  413 #> [18667,]  376  388  414 #> [18668,]  376  388  414 #> [18669,]  376  388  413 #> [18670,]  375  388  414 #> [18671,]  376  388  413 #> [18672,]  376  388  414 #> [18673,]  376  388  414 #> [18674,]  376  388  414 #> [18675,]  376  388  414 #> [18676,]  376  388  414 #> [18677,]  376  388  413 #> [18678,]  376  388  414 #> [18679,]  376  388  414 #> [18680,]  375  388  413 #> [18681,]  376  388  413 #> [18682,]  376  388  414 #> [18683,]  375  388  413 #> [18684,]  376  388  414 #> [18685,]  376  388  414 #> [18686,]  376  388  414 #> [18687,]  376  388  413 #> [18688,]  376  388  414 #> [18689,]  376  388  414 #> [18690,]  376  388  413 #> [18691,]  376  388  414 #> [18692,]  376  388  414 #> [18693,]  376  388  414 #> [18694,]  376  388  414 #> [18695,]  375  388  414 #> [18696,]  376  388  413 #> [18697,]  376  388  413 #> [18698,]  375  388  414 #> [18699,]  376  388  414 #> [18700,]  376  388  413 #> [18701,]  378  390  416 #> [18702,]  377  389  416 #> [18703,]  377  389  415 #> [18704,]  378  390  416 #> [18705,]  378  390  416 #> [18706,]  378  390  415 #> [18707,]  377  389  416 #> [18708,]  378  390  416 #> [18709,]  378  390  416 #> [18710,]  378  390  416 #> [18711,]  378  390  415 #> [18712,]  378  390  416 #> [18713,]  377  389  416 #> [18714,]  378  390  416 #> [18715,]  378  390  416 #> [18716,]  377  389  415 #> [18717,]  378  390  416 #> [18718,]  377  389  416 #> [18719,]  377  389  415 #> [18720,]  378  390  416 #> [18721,]  377  389  416 #> [18722,]  377  389  416 #> [18723,]  377  389  416 #> [18724,]  377  389  416 #> [18725,]  378  390  416 #> [18726,]  378  390  416 #> [18727,]  378  390  416 #> [18728,]  378  390  416 #> [18729,]  378  390  416 #> [18730,]  377  389  416 #> [18731,]  377  389  416 #> [18732,]  377  389  416 #> [18733,]  378  390  416 #> [18734,]  377  389  415 #> [18735,]  377  389  415 #> [18736,]  377  389  416 #> [18737,]  377  389  415 #> [18738,]  378  390  415 #> [18739,]  377  389  416 #> [18740,]  377  389  416 #> [18741,]  378  390  416 #> [18742,]  378  390  416 #> [18743,]  378  390  416 #> [18744,]  377  389  416 #> [18745,]  378  390  415 #> [18746,]  378  390  416 #> [18747,]  377  389  416 #> [18748,]  378  390  416 #> [18749,]  377  389  415 #> [18750,]  378  390  416 #> [18751,]  378  390  416 #> [18752,]  378  390  415 #> [18753,]  378  390  416 #> [18754,]  377  389  416 #> [18755,]  378  390  416 #> [18756,]  378  390  416 #> [18757,]  378  390  416 #> [18758,]  378  390  416 #> [18759,]  377  389  416 #> [18760,]  378  390  416 #> [18761,]  378  390  416 #> [18762,]  377  389  416 #> [18763,]  378  390  416 #> [18764,]  378  390  415 #> [18765,]  378  390  416 #> [18766,]  378  390  416 #> [18767,]  378  390  416 #> [18768,]  378  390  415 #> [18769,]  378  390  416 #> [18770,]  377  389  416 #> [18771,]  378  390  416 #> [18772,]  378  390  415 #> [18773,]  378  390  416 #> [18774,]  378  390  416 #> [18775,]  378  390  416 #> [18776,]  378  390  416 #> [18777,]  377  389  416 #> [18778,]  378  390  416 #> [18779,]  377  389  416 #> [18780,]  377  389  416 #> [18781,]  378  390  416 #> [18782,]  378  390  416 #> [18783,]  377  389  416 #> [18784,]  378  390  416 #> [18785,]  378  390  416 #> [18786,]  377  389  416 #> [18787,]  378  390  416 #> [18788,]  378  390  416 #> [18789,]  378  390  416 #> [18790,]  378  390  416 #> [18791,]  378  390  416 #> [18792,]  378  390  416 #> [18793,]  377  389  416 #> [18794,]  378  390  416 #> [18795,]  377  389  416 #> [18796,]  378  390  415 #> [18797,]  378  390  415 #> [18798,]  377  389  416 #> [18799,]  378  390  416 #> [18800,]  377  389  416 #> [18801,]  379  391  419 #> [18802,]  379  391  419 #> [18803,]  379  391  419 #> [18804,]  380  392  417 #> [18805,]  379  391  419 #> [18806,]  379  391  419 #> [18807,]  379  391  419 #> [18808,]  379  391  418 #> [18809,]  379  391  418 #> [18810,]  379  391  418 #> [18811,]  379  391  419 #> [18812,]  379  391  419 #> [18813,]  379  391  419 #> [18814,]  380  392  417 #> [18815,]  379  391  419 #> [18816,]  379  391  419 #> [18817,]  379  391  419 #> [18818,]  379  391  419 #> [18819,]  380  392  417 #> [18820,]  379  391  419 #> [18821,]  379  391  419 #> [18822,]  379  391  419 #> [18823,]  379  391  419 #> [18824,]  379  391  419 #> [18825,]  379  391  419 #> [18826,]  379  391  419 #> [18827,]  380  392  417 #> [18828,]  379  391  419 #> [18829,]  379  391  419 #> [18830,]  379  391  419 #> [18831,]  379  391  419 #> [18832,]  379  391  419 #> [18833,]  379  391  419 #> [18834,]  379  391  419 #> [18835,]  379  391  419 #> [18836,]  379  391  419 #> [18837,]  379  391  419 #> [18838,]  379  391  419 #> [18839,]  379  391  419 #> [18840,]  379  391  419 #> [18841,]  379  391  419 #> [18842,]  379  391  419 #> [18843,]  379  391  419 #> [18844,]  379  391  419 #> [18845,]  379  391  419 #> [18846,]  379  391  419 #> [18847,]  379  391  419 #> [18848,]  380  392  417 #> [18849,]  379  391  419 #> [18850,]  379  391  419 #> [18851,]  379  391  418 #> [18852,]  379  391  419 #> [18853,]  379  391  419 #> [18854,]  379  391  419 #> [18855,]  379  391  419 #> [18856,]  379  391  419 #> [18857,]  379  391  419 #> [18858,]  379  391  419 #> [18859,]  379  391  419 #> [18860,]  379  391  419 #> [18861,]  380  392  417 #> [18862,]  379  391  419 #> [18863,]  379  391  419 #> [18864,]  379  391  419 #> [18865,]  379  391  419 #> [18866,]  379  391  419 #> [18867,]  379  391  419 #> [18868,]  379  391  419 #> [18869,]  380  392  417 #> [18870,]  379  391  419 #> [18871,]  379  391  419 #> [18872,]  379  391  419 #> [18873,]  379  391  419 #> [18874,]  379  391  419 #> [18875,]  379  391  419 #> [18876,]  379  391  419 #> [18877,]  379  391  419 #> [18878,]  379  391  419 #> [18879,]  379  391  419 #> [18880,]  379  391  419 #> [18881,]  379  391  419 #> [18882,]  380  392  417 #> [18883,]  379  391  419 #> [18884,]  379  391  419 #> [18885,]  379  391  419 #> [18886,]  379  391  419 #> [18887,]  379  391  419 #> [18888,]  379  391  419 #> [18889,]  379  391  419 #> [18890,]  379  391  419 #> [18891,]  379  391  418 #> [18892,]  380  392  417 #> [18893,]  380  392  417 #> [18894,]  379  391  419 #> [18895,]  379  391  418 #> [18896,]  380  392  417 #> [18897,]  380  392  417 #> [18898,]  379  391  419 #> [18899,]  379  391  419 #> [18900,]  379  391  419 #> [18901,]  381  393  420 #> [18902,]  382  394  421 #> [18903,]  381  393  420 #> [18904,]  382  394  421 #> [18905,]  382  394  421 #> [18906,]  381  393  420 #> [18907,]  382  394  421 #> [18908,]  382  394  421 #> [18909,]  382  394  421 #> [18910,]  382  394  421 #> [18911,]  381  393  420 #> [18912,]  382  394  421 #> [18913,]  382  394  421 #> [18914,]  381  393  420 #> [18915,]  382  394  421 #> [18916,]  381  393  420 #> [18917,]  382  394  421 #> [18918,]  382  394  421 #> [18919,]  381  393  420 #> [18920,]  382  394  421 #> [18921,]  382  394  421 #> [18922,]  382  394  421 #> [18923,]  382  394  421 #> [18924,]  382  394  421 #> [18925,]  382  394  421 #> [18926,]  381  393  420 #> [18927,]  382  394  421 #> [18928,]  381  393  420 #> [18929,]  382  394  421 #> [18930,]  382  394  421 #> [18931,]  382  394  421 #> [18932,]  382  394  421 #> [18933,]  382  394  421 #> [18934,]  381  393  420 #> [18935,]  381  393  420 #> [18936,]  382  394  421 #> [18937,]  381  393  420 #> [18938,]  381  393  420 #> [18939,]  382  394  421 #> [18940,]  382  394  421 #> [18941,]  382  394  421 #> [18942,]  381  393  420 #> [18943,]  382  394  421 #> [18944,]  382  394  421 #> [18945,]  381  393  420 #> [18946,]  382  394  421 #> [18947,]  382  394  421 #> [18948,]  382  394  421 #> [18949,]  381  393  420 #> [18950,]  382  394  421 #> [18951,]  382  394  421 #> [18952,]  381  393  420 #> [18953,]  382  394  421 #> [18954,]  382  394  421 #> [18955,]  382  394  421 #> [18956,]  381  393  420 #> [18957,]  382  394  421 #> [18958,]  382  394  421 #> [18959,]  381  393  420 #> [18960,]  382  394  421 #> [18961,]  382  394  421 #> [18962,]  382  394  421 #> [18963,]  382  394  421 #> [18964,]  381  393  420 #> [18965,]  381  393  420 #> [18966,]  382  394  421 #> [18967,]  382  394  421 #> [18968,]  381  393  420 #> [18969,]  381  393  420 #> [18970,]  382  394  421 #> [18971,]  382  394  421 #> [18972,]  381  393  420 #> [18973,]  381  393  420 #> [18974,]  382  394  421 #> [18975,]  382  394  421 #> [18976,]  382  394  421 #> [18977,]  381  393  420 #> [18978,]  382  394  421 #> [18979,]  381  393  420 #> [18980,]  382  394  421 #> [18981,]  382  394  421 #> [18982,]  382  394  421 #> [18983,]  382  394  421 #> [18984,]  382  394  421 #> [18985,]  382  394  421 #> [18986,]  382  394  421 #> [18987,]  382  394  421 #> [18988,]  382  394  421 #> [18989,]  381  393  420 #> [18990,]  382  394  421 #> [18991,]  382  394  421 #> [18992,]  382  394  421 #> [18993,]  382  394  421 #> [18994,]  381  393  420 #> [18995,]  382  394  421 #> [18996,]  381  393  420 #> [18997,]  381  393  420 #> [18998,]  382  394  421 #> [18999,]  382  394  421 #> [19000,]  381  393  420 #> [19001,]  383  395  422 #> [19002,]  384  397  423 #> [19003,]  384  396  424 #> [19004,]  383  395  422 #> [19005,]  384  396  424 #> [19006,]  384  396  424 #> [19007,]  384  397  423 #> [19008,]  383  395  422 #> [19009,]  383  395  422 #> [19010,]  384  397  423 #> [19011,]  383  395  422 #> [19012,]  384  396  424 #> [19013,]  383  395  422 #> [19014,]  383  395  422 #> [19015,]  383  395  422 #> [19016,]  383  395  422 #> [19017,]  383  395  422 #> [19018,]  384  397  423 #> [19019,]  384  396  424 #> [19020,]  384  396  424 #> [19021,]  383  395  422 #> [19022,]  383  395  422 #> [19023,]  384  397  423 #> [19024,]  384  396  424 #> [19025,]  384  397  423 #> [19026,]  384  396  424 #> [19027,]  383  395  422 #> [19028,]  384  397  423 #> [19029,]  384  396  424 #> [19030,]  383  395  422 #> [19031,]  384  397  423 #> [19032,]  384  396  424 #> [19033,]  384  396  424 #> [19034,]  384  396  424 #> [19035,]  383  395  422 #> [19036,]  384  396  424 #> [19037,]  383  395  422 #> [19038,]  384  397  423 #> [19039,]  384  397  423 #> [19040,]  384  396  424 #> [19041,]  383  395  422 #> [19042,]  384  396  424 #> [19043,]  383  395  422 #> [19044,]  383  395  422 #> [19045,]  383  395  422 #> [19046,]  383  395  422 #> [19047,]  384  397  423 #> [19048,]  384  396  424 #> [19049,]  383  395  422 #> [19050,]  384  397  423 #> [19051,]  384  396  424 #> [19052,]  383  395  422 #> [19053,]  384  397  423 #> [19054,]  383  395  422 #> [19055,]  383  395  422 #> [19056,]  384  397  423 #> [19057,]  384  396  424 #> [19058,]  383  395  422 #> [19059,]  384  397  423 #> [19060,]  384  396  424 #> [19061,]  384  397  423 #> [19062,]  383  395  422 #> [19063,]  384  396  424 #> [19064,]  384  397  423 #> [19065,]  384  397  423 #> [19066,]  383  395  422 #> [19067,]  383  395  422 #> [19068,]  383  395  422 #> [19069,]  383  395  422 #> [19070,]  384  397  423 #> [19071,]  384  397  423 #> [19072,]  384  397  423 #> [19073,]  384  397  423 #> [19074,]  383  395  422 #> [19075,]  384  397  423 #> [19076,]  384  397  423 #> [19077,]  384  397  423 #> [19078,]  384  396  424 #> [19079,]  383  395  422 #> [19080,]  383  395  422 #> [19081,]  383  395  422 #> [19082,]  383  395  422 #> [19083,]  383  395  422 #> [19084,]  384  397  423 #> [19085,]  383  395  422 #> [19086,]  384  397  423 #> [19087,]  383  395  422 #> [19088,]  383  395  422 #> [19089,]  383  395  422 #> [19090,]  383  395  422 #> [19091,]  383  395  422 #> [19092,]  383  395  422 #> [19093,]  384  396  424 #> [19094,]  384  397  423 #> [19095,]  383  395  422 #> [19096,]  383  395  422 #> [19097,]  384  397  423 #> [19098,]  384  396  424 #> [19099,]  383  395  422 #> [19100,]  384  397  423 #> [19101,]  385  398  425 #> [19102,]  386  399  426 #> [19103,]  385  398  425 #> [19104,]  385  398  425 #> [19105,]  385  398  425 #> [19106,]  385  398  425 #> [19107,]  385  398  425 #> [19108,]  385  398  425 #> [19109,]  386  399  426 #> [19110,]  386  399  426 #> [19111,]  385  398  425 #> [19112,]  386  399  426 #> [19113,]  385  398  425 #> [19114,]  385  398  425 #> [19115,]  385  398  425 #> [19116,]  385  398  425 #> [19117,]  385  398  425 #> [19118,]  385  398  425 #> [19119,]  385  398  425 #> [19120,]  385  398  425 #> [19121,]  386  399  426 #> [19122,]  385  398  425 #> [19123,]  385  398  425 #> [19124,]  385  398  425 #> [19125,]  385  398  425 #> [19126,]  385  398  425 #> [19127,]  385  398  425 #> [19128,]  385  398  425 #> [19129,]  386  399  426 #> [19130,]  385  398  425 #> [19131,]  385  398  425 #> [19132,]  385  398  425 #> [19133,]  386  399  426 #> [19134,]  385  398  425 #> [19135,]  385  398  425 #> [19136,]  385  398  425 #> [19137,]  385  398  425 #> [19138,]  385  398  425 #> [19139,]  385  398  425 #> [19140,]  385  398  425 #> [19141,]  385  398  425 #> [19142,]  385  398  425 #> [19143,]  385  398  425 #> [19144,]  385  398  425 #> [19145,]  385  398  425 #> [19146,]  385  398  425 #> [19147,]  385  398  425 #> [19148,]  385  398  425 #> [19149,]  385  398  425 #> [19150,]  385  398  425 #> [19151,]  385  398  425 #> [19152,]  385  398  425 #> [19153,]  385  398  425 #> [19154,]  385  398  425 #> [19155,]  385  398  425 #> [19156,]  385  398  425 #> [19157,]  385  398  425 #> [19158,]  385  398  425 #> [19159,]  385  398  425 #> [19160,]  385  398  425 #> [19161,]  385  398  425 #> [19162,]  385  398  425 #> [19163,]  385  398  425 #> [19164,]  385  398  425 #> [19165,]  385  398  425 #> [19166,]  385  398  425 #> [19167,]  385  398  425 #> [19168,]  385  398  425 #> [19169,]  385  398  425 #> [19170,]  385  398  425 #> [19171,]  385  398  425 #> [19172,]  385  398  425 #> [19173,]  385  398  425 #> [19174,]  385  398  425 #> [19175,]  385  398  425 #> [19176,]  385  398  425 #> [19177,]  385  398  425 #> [19178,]  385  398  425 #> [19179,]  385  398  425 #> [19180,]  385  398  425 #> [19181,]  385  398  425 #> [19182,]  385  398  425 #> [19183,]  385  398  425 #> [19184,]  385  398  425 #> [19185,]  385  398  425 #> [19186,]  386  399  426 #> [19187,]  385  398  425 #> [19188,]  385  398  425 #> [19189,]  385  398  425 #> [19190,]  385  398  425 #> [19191,]  385  398  425 #> [19192,]  385  398  425 #> [19193,]  385  398  425 #> [19194,]  385  398  425 #> [19195,]  385  398  425 #> [19196,]  385  398  425 #> [19197,]  385  398  425 #> [19198,]  385  398  425 #> [19199,]  385  398  425 #> [19200,]  385  398  425 #> [19201,]  388  401  428 #> [19202,]  388  401  428 #> [19203,]  387  400  427 #> [19204,]  387  400  427 #> [19205,]  387  400  427 #> [19206,]  387  400  427 #> [19207,]  388  401  428 #> [19208,]  388  401  428 #> [19209,]  387  400  427 #> [19210,]  387  400  427 #> [19211,]  387  400  427 #> [19212,]  388  401  428 #> [19213,]  388  401  428 #> [19214,]  387  400  427 #> [19215,]  388  401  428 #> [19216,]  388  401  428 #> [19217,]  388  401  428 #> [19218,]  388  401  428 #> [19219,]  388  401  428 #> [19220,]  388  401  428 #> [19221,]  387  400  427 #> [19222,]  388  401  428 #> [19223,]  388  401  428 #> [19224,]  387  400  427 #> [19225,]  387  400  427 #> [19226,]  388  401  428 #> [19227,]  388  401  428 #> [19228,]  387  400  427 #> [19229,]  388  401  428 #> [19230,]  388  401  428 #> [19231,]  387  400  427 #> [19232,]  387  400  427 #> [19233,]  388  401  428 #> [19234,]  387  400  427 #> [19235,]  387  400  427 #> [19236,]  388  401  428 #> [19237,]  388  401  428 #> [19238,]  388  401  428 #> [19239,]  387  400  427 #> [19240,]  387  400  427 #> [19241,]  388  401  428 #> [19242,]  387  400  427 #> [19243,]  388  401  428 #> [19244,]  388  401  428 #> [19245,]  388  401  428 #> [19246,]  388  401  428 #> [19247,]  387  400  427 #> [19248,]  387  400  427 #> [19249,]  388  401  428 #> [19250,]  388  401  428 #> [19251,]  388  401  428 #> [19252,]  387  400  427 #> [19253,]  388  401  428 #> [19254,]  387  400  427 #> [19255,]  388  401  428 #> [19256,]  388  401  428 #> [19257,]  387  400  427 #> [19258,]  388  401  428 #> [19259,]  388  401  428 #> [19260,]  388  401  428 #> [19261,]  388  401  428 #> [19262,]  387  400  427 #> [19263,]  388  401  428 #> [19264,]  388  401  428 #> [19265,]  387  400  427 #> [19266,]  388  401  428 #> [19267,]  388  401  428 #> [19268,]  388  401  428 #> [19269,]  388  401  428 #> [19270,]  387  400  427 #> [19271,]  388  401  428 #> [19272,]  387  400  427 #> [19273,]  387  400  427 #> [19274,]  387  400  427 #> [19275,]  388  401  428 #> [19276,]  387  400  427 #> [19277,]  388  401  428 #> [19278,]  388  401  428 #> [19279,]  387  400  427 #> [19280,]  388  401  428 #> [19281,]  388  401  428 #> [19282,]  387  400  427 #> [19283,]  388  401  428 #> [19284,]  388  401  428 #> [19285,]  388  401  428 #> [19286,]  388  401  428 #> [19287,]  388  401  428 #> [19288,]  388  401  428 #> [19289,]  388  401  428 #> [19290,]  388  401  428 #> [19291,]  387  400  427 #> [19292,]  388  401  428 #> [19293,]  388  401  428 #> [19294,]  388  401  428 #> [19295,]  388  401  428 #> [19296,]  388  401  428 #> [19297,]  388  401  428 #> [19298,]  387  400  427 #> [19299,]  388  401  428 #> [19300,]  388  401  428 #> [19301,]  389  402  429 #> [19302,]  389  402  429 #> [19303,]  389  402  429 #> [19304,]  389  402  429 #> [19305,]  389  402  429 #> [19306,]  389  402  429 #> [19307,]  389  402  429 #> [19308,]  390  403  430 #> [19309,]  389  402  429 #> [19310,]  389  402  429 #> [19311,]  389  402  429 #> [19312,]  389  402  429 #> [19313,]  390  403  430 #> [19314,]  389  402  429 #> [19315,]  390  403  430 #> [19316,]  389  402  429 #> [19317,]  389  402  429 #> [19318,]  389  402  429 #> [19319,]  390  403  430 #> [19320,]  390  403  430 #> [19321,]  389  402  429 #> [19322,]  390  403  430 #> [19323,]  389  402  429 #> [19324,]  389  402  429 #> [19325,]  389  402  429 #> [19326,]  389  402  429 #> [19327,]  390  403  430 #> [19328,]  389  402  429 #> [19329,]  390  403  430 #> [19330,]  389  402  429 #> [19331,]  389  402  429 #> [19332,]  389  402  429 #> [19333,]  389  402  429 #> [19334,]  389  402  429 #> [19335,]  389  402  429 #> [19336,]  390  403  430 #> [19337,]  390  403  430 #> [19338,]  390  403  430 #> [19339,]  389  402  429 #> [19340,]  389  402  429 #> [19341,]  390  403  430 #> [19342,]  389  402  429 #> [19343,]  389  402  429 #> [19344,]  389  402  429 #> [19345,]  389  402  429 #> [19346,]  390  403  430 #> [19347,]  389  402  429 #> [19348,]  389  402  429 #> [19349,]  389  402  429 #> [19350,]  390  403  430 #> [19351,]  390  403  430 #> [19352,]  389  402  429 #> [19353,]  390  403  430 #> [19354,]  389  402  429 #> [19355,]  390  403  430 #> [19356,]  389  402  429 #> [19357,]  389  402  429 #> [19358,]  390  403  430 #> [19359,]  389  402  429 #> [19360,]  390  403  430 #> [19361,]  389  402  429 #> [19362,]  389  402  429 #> [19363,]  389  402  429 #> [19364,]  390  403  430 #> [19365,]  389  402  429 #> [19366,]  390  403  430 #> [19367,]  389  402  429 #> [19368,]  389  402  429 #> [19369,]  390  403  430 #> [19370,]  389  402  429 #> [19371,]  390  403  430 #> [19372,]  389  402  429 #> [19373,]  389  402  429 #> [19374,]  389  402  429 #> [19375,]  389  402  429 #> [19376,]  389  402  429 #> [19377,]  390  403  430 #> [19378,]  389  402  429 #> [19379,]  389  402  429 #> [19380,]  390  403  430 #> [19381,]  390  403  430 #> [19382,]  389  402  429 #> [19383,]  390  403  430 #> [19384,]  390  403  430 #> [19385,]  390  403  430 #> [19386,]  389  402  429 #> [19387,]  390  403  430 #> [19388,]  389  402  429 #> [19389,]  389  402  429 #> [19390,]  390  403  430 #> [19391,]  389  402  429 #> [19392,]  389  402  429 #> [19393,]  389  402  429 #> [19394,]  389  402  429 #> [19395,]  389  402  429 #> [19396,]  390  403  430 #> [19397,]  390  403  430 #> [19398,]  389  402  429 #> [19399,]  389  402  429 #> [19400,]  390  403  430 #> [19401,]  392  406  432 #> [19402,]  391  404  431 #> [19403,]  392  405  432 #> [19404,]  392  405  432 #> [19405,]  392  405  432 #> [19406,]  391  404  431 #> [19407,]  392  405  432 #> [19408,]  392  405  432 #> [19409,]  392  405  432 #> [19410,]  392  405  432 #> [19411,]  391  404  431 #> [19412,]  391  404  431 #> [19413,]  392  406  432 #> [19414,]  392  406  432 #> [19415,]  391  404  431 #> [19416,]  392  406  432 #> [19417,]  391  404  431 #> [19418,]  391  404  431 #> [19419,]  391  404  431 #> [19420,]  392  405  432 #> [19421,]  391  404  431 #> [19422,]  392  406  432 #> [19423,]  391  404  431 #> [19424,]  392  405  432 #> [19425,]  392  405  432 #> [19426,]  391  404  431 #> [19427,]  392  406  432 #> [19428,]  392  405  432 #> [19429,]  391  404  431 #> [19430,]  391  404  431 #> [19431,]  391  404  431 #> [19432,]  391  404  431 #> [19433,]  392  406  432 #> [19434,]  391  404  431 #> [19435,]  391  404  431 #> [19436,]  392  405  432 #> [19437,]  391  404  431 #> [19438,]  391  404  431 #> [19439,]  392  405  432 #> [19440,]  391  404  431 #> [19441,]  392  406  432 #> [19442,]  391  404  431 #> [19443,]  391  404  431 #> [19444,]  391  404  431 #> [19445,]  392  405  432 #> [19446,]  391  404  431 #> [19447,]  391  404  431 #> [19448,]  391  404  431 #> [19449,]  392  405  432 #> [19450,]  392  406  432 #> [19451,]  391  404  431 #> [19452,]  392  406  432 #> [19453,]  392  405  432 #> [19454,]  392  405  432 #> [19455,]  392  405  432 #> [19456,]  391  404  431 #> [19457,]  392  405  432 #> [19458,]  392  406  432 #> [19459,]  392  406  432 #> [19460,]  391  404  431 #> [19461,]  391  404  431 #> [19462,]  391  404  431 #> [19463,]  391  404  431 #> [19464,]  391  404  431 #> [19465,]  391  404  431 #> [19466,]  391  404  431 #> [19467,]  392  405  432 #> [19468,]  391  404  431 #> [19469,]  391  404  431 #> [19470,]  391  404  431 #> [19471,]  392  406  432 #> [19472,]  392  405  432 #> [19473,]  392  406  432 #> [19474,]  392  405  432 #> [19475,]  391  404  431 #> [19476,]  392  406  432 #> [19477,]  392  406  432 #> [19478,]  391  404  431 #> [19479,]  391  404  431 #> [19480,]  392  405  432 #> [19481,]  391  404  431 #> [19482,]  391  404  431 #> [19483,]  391  404  431 #> [19484,]  392  406  432 #> [19485,]  392  405  432 #> [19486,]  392  406  432 #> [19487,]  392  406  432 #> [19488,]  392  405  432 #> [19489,]  391  404  431 #> [19490,]  392  406  432 #> [19491,]  392  405  432 #> [19492,]  391  404  431 #> [19493,]  391  404  431 #> [19494,]  391  404  431 #> [19495,]  391  404  431 #> [19496,]  391  404  431 #> [19497,]  391  404  431 #> [19498,]  391  404  431 #> [19499,]  391  404  431 #> [19500,]  391  404  431 #> [19501,]  393  407  434 #> [19502,]  394  408  435 #> [19503,]  394  408  435 #> [19504,]  393  407  433 #> [19505,]  393  407  433 #> [19506,]  394  408  435 #> [19507,]  394  408  435 #> [19508,]  393  407  433 #> [19509,]  393  407  433 #> [19510,]  393  407  433 #> [19511,]  393  407  434 #> [19512,]  394  408  435 #> [19513,]  393  407  434 #> [19514,]  393  407  434 #> [19515,]  393  407  434 #> [19516,]  393  407  434 #> [19517,]  393  407  434 #> [19518,]  394  408  435 #> [19519,]  394  408  435 #> [19520,]  394  408  435 #> [19521,]  393  407  434 #> [19522,]  393  407  434 #> [19523,]  394  408  435 #> [19524,]  393  407  433 #> [19525,]  394  408  435 #> [19526,]  393  407  434 #> [19527,]  393  407  434 #> [19528,]  394  408  435 #> [19529,]  394  408  435 #> [19530,]  393  407  433 #> [19531,]  394  408  435 #> [19532,]  394  408  435 #> [19533,]  394  408  435 #> [19534,]  394  408  435 #> [19535,]  393  407  434 #> [19536,]  393  407  433 #> [19537,]  393  407  434 #> [19538,]  393  407  433 #> [19539,]  393  407  433 #> [19540,]  394  408  435 #> [19541,]  393  407  434 #> [19542,]  394  408  435 #> [19543,]  393  407  433 #> [19544,]  393  407  434 #> [19545,]  393  407  433 #> [19546,]  393  407  433 #> [19547,]  393  407  434 #> [19548,]  394  408  435 #> [19549,]  393  407  433 #> [19550,]  393  407  434 #> [19551,]  393  407  433 #> [19552,]  393  407  434 #> [19553,]  393  407  433 #> [19554,]  393  407  433 #> [19555,]  393  407  433 #> [19556,]  394  408  435 #> [19557,]  394  408  435 #> [19558,]  393  407  434 #> [19559,]  393  407  434 #> [19560,]  394  408  435 #> [19561,]  394  408  435 #> [19562,]  393  407  433 #> [19563,]  393  407  433 #> [19564,]  394  408  435 #> [19565,]  394  408  435 #> [19566,]  393  407  433 #> [19567,]  393  407  433 #> [19568,]  393  407  434 #> [19569,]  393  407  433 #> [19570,]  394  408  435 #> [19571,]  394  408  435 #> [19572,]  393  407  433 #> [19573,]  394  408  435 #> [19574,]  393  407  433 #> [19575,]  394  408  435 #> [19576,]  393  407  434 #> [19577,]  394  408  435 #> [19578,]  394  408  435 #> [19579,]  393  407  434 #> [19580,]  393  407  433 #> [19581,]  393  407  434 #> [19582,]  393  407  433 #> [19583,]  393  407  434 #> [19584,]  394  408  435 #> [19585,]  393  407  433 #> [19586,]  394  408  435 #> [19587,]  393  407  433 #> [19588,]  393  407  433 #> [19589,]  393  407  433 #> [19590,]  393  407  434 #> [19591,]  393  407  433 #> [19592,]  393  407  433 #> [19593,]  394  408  435 #> [19594,]  393  407  434 #> [19595,]  393  407  433 #> [19596,]  393  407  434 #> [19597,]  394  408  435 #> [19598,]  394  408  435 #> [19599,]  393  407  434 #> [19600,]  394  408  435 #> [19601,]  396  409  436 #> [19602,]  395  410  437 #> [19603,]  396  409  436 #> [19604,]  396  409  436 #> [19605,]  396  409  436 #> [19606,]  395  410  437 #> [19607,]  396  409  436 #> [19608,]  396  409  436 #> [19609,]  396  409  436 #> [19610,]  396  409  436 #> [19611,]  395  411  437 #> [19612,]  395  410  437 #> [19613,]  396  409  436 #> [19614,]  396  409  436 #> [19615,]  395  410  437 #> [19616,]  396  409  436 #> [19617,]  395  410  437 #> [19618,]  395  411  437 #> [19619,]  395  411  437 #> [19620,]  396  409  436 #> [19621,]  395  411  437 #> [19622,]  396  409  436 #> [19623,]  395  410  437 #> [19624,]  396  409  436 #> [19625,]  396  409  436 #> [19626,]  395  411  437 #> [19627,]  396  409  436 #> [19628,]  396  409  436 #> [19629,]  395  410  437 #> [19630,]  395  411  437 #> [19631,]  395  410  437 #> [19632,]  395  411  437 #> [19633,]  396  409  436 #> [19634,]  395  410  437 #> [19635,]  395  411  437 #> [19636,]  396  409  436 #> [19637,]  395  410  437 #> [19638,]  395  411  437 #> [19639,]  396  409  436 #> [19640,]  396  409  436 #> [19641,]  396  409  436 #> [19642,]  395  410  437 #> [19643,]  395  410  437 #> [19644,]  395  410  437 #> [19645,]  396  409  436 #> [19646,]  395  411  437 #> [19647,]  395  410  437 #> [19648,]  395  410  437 #> [19649,]  396  409  436 #> [19650,]  396  409  436 #> [19651,]  395  411  437 #> [19652,]  396  409  436 #> [19653,]  396  409  436 #> [19654,]  396  409  436 #> [19655,]  396  409  436 #> [19656,]  395  411  437 #> [19657,]  396  409  436 #> [19658,]  396  409  436 #> [19659,]  396  409  436 #> [19660,]  395  411  437 #> [19661,]  395  411  437 #> [19662,]  395  411  437 #> [19663,]  395  410  437 #> [19664,]  395  410  437 #> [19665,]  395  411  437 #> [19666,]  395  411  437 #> [19667,]  396  409  436 #> [19668,]  395  411  437 #> [19669,]  395  411  437 #> [19670,]  395  410  437 #> [19671,]  396  409  436 #> [19672,]  396  409  436 #> [19673,]  396  409  436 #> [19674,]  396  409  436 #> [19675,]  395  410  437 #> [19676,]  396  409  436 #> [19677,]  396  409  436 #> [19678,]  395  410  437 #> [19679,]  395  410  437 #> [19680,]  396  409  436 #> [19681,]  395  410  437 #> [19682,]  395  411  437 #> [19683,]  395  411  437 #> [19684,]  396  409  436 #> [19685,]  396  409  436 #> [19686,]  396  409  436 #> [19687,]  396  409  436 #> [19688,]  396  409  436 #> [19689,]  395  411  437 #> [19690,]  396  409  436 #> [19691,]  396  409  436 #> [19692,]  395  410  437 #> [19693,]  395  411  437 #> [19694,]  395  410  437 #> [19695,]  395  410  437 #> [19696,]  395  411  437 #> [19697,]  395  411  437 #> [19698,]  395  411  437 #> [19699,]  396  409  436 #> [19700,]  395  410  437 #> [19701,]  398  413  441 #> [19702,]  397  412  439 #> [19703,]  397  412  438 #> [19704,]  397  412  439 #> [19705,]  397  412  439 #> [19706,]  398  413  440 #> [19707,]  397  412  438 #> [19708,]  397  412  439 #> [19709,]  397  412  439 #> [19710,]  397  412  439 #> [19711,]  397  412  439 #> [19712,]  397  412  438 #> [19713,]  398  413  440 #> [19714,]  398  413  441 #> [19715,]  398  413  440 #> [19716,]  398  413  441 #> [19717,]  398  413  440 #> [19718,]  397  412  439 #> [19719,]  397  412  439 #> [19720,]  397  412  439 #> [19721,]  398  413  440 #> [19722,]  397  412  439 #> [19723,]  397  412  439 #> [19724,]  397  412  439 #> [19725,]  397  412  439 #> [19726,]  397  412  439 #> [19727,]  397  412  439 #> [19728,]  397  412  439 #> [19729,]  398  413  440 #> [19730,]  397  412  439 #> [19731,]  397  412  438 #> [19732,]  397  412  439 #> [19733,]  398  413  440 #> [19734,]  397  412  439 #> [19735,]  397  412  439 #> [19736,]  397  412  439 #> [19737,]  397  412  439 #> [19738,]  397  412  439 #> [19739,]  397  412  439 #> [19740,]  397  412  439 #> [19741,]  398  413  441 #> [19742,]  397  412  439 #> [19743,]  397  412  439 #> [19744,]  398  413  440 #> [19745,]  397  412  439 #> [19746,]  397  412  439 #> [19747,]  397  412  439 #> [19748,]  397  412  439 #> [19749,]  397  412  439 #> [19750,]  398  413  440 #> [19751,]  397  412  439 #> [19752,]  397  412  438 #> [19753,]  397  412  439 #> [19754,]  397  412  439 #> [19755,]  397  412  439 #> [19756,]  397  412  439 #> [19757,]  397  412  439 #> [19758,]  397  412  439 #> [19759,]  398  413  440 #> [19760,]  397  412  438 #> [19761,]  398  413  440 #> [19762,]  397  412  439 #> [19763,]  397  412  439 #> [19764,]  397  412  439 #> [19765,]  397  412  439 #> [19766,]  397  412  439 #> [19767,]  397  412  439 #> [19768,]  398  413  440 #> [19769,]  397  412  439 #> [19770,]  398  413  440 #> [19771,]  397  412  439 #> [19772,]  397  412  439 #> [19773,]  398  413  440 #> [19774,]  397  412  439 #> [19775,]  397  412  439 #> [19776,]  398  413  440 #> [19777,]  397  412  439 #> [19778,]  397  412  439 #> [19779,]  397  412  439 #> [19780,]  397  412  439 #> [19781,]  398  413  440 #> [19782,]  397  412  439 #> [19783,]  398  413  440 #> [19784,]  397  412  439 #> [19785,]  397  412  439 #> [19786,]  398  413  440 #> [19787,]  397  412  439 #> [19788,]  397  412  439 #> [19789,]  397  412  439 #> [19790,]  397  412  439 #> [19791,]  397  412  439 #> [19792,]  397  412  439 #> [19793,]  398  413  440 #> [19794,]  397  412  439 #> [19795,]  397  412  439 #> [19796,]  398  413  440 #> [19797,]  397  412  438 #> [19798,]  397  412  439 #> [19799,]  398  413  441 #> [19800,]  397  412  439 #> [19801,]  400  415  444 #> [19802,]  400  415  443 #> [19803,]  399  414  442 #> [19804,]  400  415  443 #> [19805,]  400  415  444 #> [19806,]  400  415  443 #> [19807,]  399  414  442 #> [19808,]  399  414  442 #> [19809,]  400  415  444 #> [19810,]  400  415  443 #> [19811,]  400  415  444 #> [19812,]  400  415  443 #> [19813,]  399  414  442 #> [19814,]  400  415  443 #> [19815,]  400  415  443 #> [19816,]  399  414  442 #> [19817,]  399  414  442 #> [19818,]  400  415  444 #> [19819,]  400  415  444 #> [19820,]  399  414  442 #> [19821,]  400  415  444 #> [19822,]  399  414  442 #> [19823,]  400  415  443 #> [19824,]  399  414  442 #> [19825,]  399  414  442 #> [19826,]  400  415  443 #> [19827,]  400  415  444 #> [19828,]  400  415  444 #> [19829,]  400  415  444 #> [19830,]  400  415  443 #> [19831,]  400  415  443 #> [19832,]  400  415  443 #> [19833,]  400  415  444 #> [19834,]  400  415  443 #> [19835,]  400  415  443 #> [19836,]  400  415  444 #> [19837,]  400  415  443 #> [19838,]  400  415  444 #> [19839,]  399  414  442 #> [19840,]  399  414  442 #> [19841,]  400  415  444 #> [19842,]  400  415  444 #> [19843,]  399  414  442 #> [19844,]  399  414  442 #> [19845,]  399  414  442 #> [19846,]  399  414  442 #> [19847,]  399  414  442 #> [19848,]  400  415  443 #> [19849,]  399  414  442 #> [19850,]  399  414  442 #> [19851,]  400  415  444 #> [19852,]  400  415  443 #> [19853,]  399  414  442 #> [19854,]  399  414  442 #> [19855,]  399  414  442 #> [19856,]  399  414  442 #> [19857,]  400  415  443 #> [19858,]  400  415  444 #> [19859,]  399  414  442 #> [19860,]  400  415  443 #> [19861,]  400  415  444 #> [19862,]  400  415  444 #> [19863,]  399  414  442 #> [19864,]  400  415  444 #> [19865,]  399  414  442 #> [19866,]  399  414  442 #> [19867,]  400  415  443 #> [19868,]  400  415  443 #> [19869,]  400  415  443 #> [19870,]  399  414  442 #> [19871,]  400  415  443 #> [19872,]  399  414  442 #> [19873,]  400  415  444 #> [19874,]  400  415  443 #> [19875,]  400  415  443 #> [19876,]  400  415  443 #> [19877,]  399  414  442 #> [19878,]  399  414  442 #> [19879,]  399  414  442 #> [19880,]  400  415  443 #> [19881,]  400  415  444 #> [19882,]  400  415  444 #> [19883,]  400  415  444 #> [19884,]  399  414  442 #> [19885,]  400  415  444 #> [19886,]  399  414  442 #> [19887,]  400  415  444 #> [19888,]  400  415  443 #> [19889,]  399  414  442 #> [19890,]  399  414  442 #> [19891,]  400  415  444 #> [19892,]  400  415  443 #> [19893,]  400  415  444 #> [19894,]  399  414  442 #> [19895,]  400  415  443 #> [19896,]  400  415  443 #> [19897,]  400  415  443 #> [19898,]  399  414  442 #> [19899,]  400  415  444 #> [19900,]  399  414  442 #> [19901,]  403  417  446 #> [19902,]  403  417  446 #> [19903,]  402  417  446 #> [19904,]  401  416  445 #> [19905,]  402  417  446 #> [19906,]  403  417  446 #> [19907,]  403  417  446 #> [19908,]  401  416  445 #> [19909,]  401  416  445 #> [19910,]  401  416  445 #> [19911,]  402  417  446 #> [19912,]  403  417  446 #> [19913,]  403  417  446 #> [19914,]  402  417  446 #> [19915,]  403  417  446 #> [19916,]  403  417  446 #> [19917,]  403  417  446 #> [19918,]  401  416  445 #> [19919,]  403  417  446 #> [19920,]  401  416  445 #> [19921,]  402  417  446 #> [19922,]  403  417  446 #> [19923,]  403  417  446 #> [19924,]  403  417  446 #> [19925,]  403  417  446 #> [19926,]  403  417  446 #> [19927,]  403  417  446 #> [19928,]  402  417  446 #> [19929,]  403  417  446 #> [19930,]  401  416  445 #> [19931,]  402  417  446 #> [19932,]  402  417  446 #> [19933,]  403  417  446 #> [19934,]  402  417  446 #> [19935,]  402  417  446 #> [19936,]  403  417  446 #> [19937,]  403  417  446 #> [19938,]  403  417  446 #> [19939,]  401  416  445 #> [19940,]  402  417  446 #> [19941,]  403  417  446 #> [19942,]  403  417  446 #> [19943,]  401  416  445 #> [19944,]  403  417  446 #> [19945,]  401  416  445 #> [19946,]  403  417  446 #> [19947,]  402  417  446 #> [19948,]  402  417  446 #> [19949,]  401  416  445 #> [19950,]  403  417  446 #> [19951,]  401  416  445 #> [19952,]  402  417  446 #> [19953,]  401  416  445 #> [19954,]  403  417  446 #> [19955,]  403  417  446 #> [19956,]  401  416  445 #> [19957,]  403  417  446 #> [19958,]  403  417  446 #> [19959,]  403  417  446 #> [19960,]  401  416  445 #> [19961,]  403  417  446 #> [19962,]  402  417  446 #> [19963,]  403  417  446 #> [19964,]  401  416  445 #> [19965,]  401  416  445 #> [19966,]  401  416  445 #> [19967,]  401  416  445 #> [19968,]  403  417  446 #> [19969,]  403  417  446 #> [19970,]  402  417  446 #> [19971,]  403  417  446 #> [19972,]  402  417  446 #> [19973,]  403  417  446 #> [19974,]  402  417  446 #> [19975,]  403  417  446 #> [19976,]  402  417  446 #> [19977,]  403  417  446 #> [19978,]  401  416  445 #> [19979,]  403  417  446 #> [19980,]  403  417  446 #> [19981,]  403  417  446 #> [19982,]  402  417  446 #> [19983,]  403  417  446 #> [19984,]  403  417  446 #> [19985,]  401  416  445 #> [19986,]  403  417  446 #> [19987,]  403  417  446 #> [19988,]  403  417  446 #> [19989,]  401  416  445 #> [19990,]  403  417  446 #> [19991,]  401  416  445 #> [19992,]  403  417  446 #> [19993,]  403  417  446 #> [19994,]  403  417  446 #> [19995,]  401  416  445 #> [19996,]  403  417  446 #> [19997,]  403  417  446 #> [19998,]  402  417  446 #> [19999,]  403  417  446 #> [20000,]  403  417  446"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Return forest's leaf node scale parameters. leaf scale sampled forest question, throws error leaf model stochastic scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"computeForestLeafVariances(model_object, forest_type, forest_inds = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"model_object Object type bartmodel bcfmodel corresponding BART / BCF model least one forest sample forest_type forest use model_object. Valid inputs depend model type, whether given forest sampled model. 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest forest_inds (Optional) Indices forest sample(s) compute leaf indices. provided, function return leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"Vector size length(forest_inds) leaf scale parameter requested forest.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestLeafVariances.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute vector of forest leaf scale parameters — computeForestLeafVariances","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestLeafVariances(bart_model, \"mean\") #>  [1] 0.004621506 0.004849714 0.004616720 0.004288359 0.004565808 0.004556002 #>  [7] 0.003931890 0.004428264 0.004092338 0.004093003 computeForestLeafVariances(bart_model, \"mean\", 0) #> [1] 0.004621506 computeForestLeafVariances(bart_model, \"mean\", c(1,3,5)) #> [1] 0.004849714 0.004288359 0.004556002"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Compute return largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"computeForestMaxLeafIndex(   model_object,   covariates,   forest_type = NULL,   forest_inds = NULL )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"model_object Object type bartmodel, bcfmodel, ForestSamples corresponding BART / BCF model least one forest sample, low-level ForestSamples object. covariates Covariates use prediction. Must dimensions / column types data used train forest. forest_type forest use model_object. Valid inputs depend model type, whether 1. BART 'mean': Extracts leaf indices mean forest 'variance': Extracts leaf indices variance forest 2. BCF 'prognostic': Extracts leaf indices prognostic forest 'treatment': Extracts leaf indices treatment effect forest 'variance': Extracts leaf indices variance forest 3. ForestSamples NULL: necessary disambiguate function called directly ForestSamples object. default value forest_inds (Optional) Indices forest sample(s) compute max leaf indices. provided, function return max leaf indices every sample forest. function uses 0-indexing, first forest sample corresponds forest_num = 0, .","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"Vector containing largest possible leaf index computable computeForestLeafIndices forests designated forest sample container.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/computeForestMaxLeafIndex.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute and return the largest possible leaf index computable by computeForestLeafIndices for the forests in a designated forest sample container. — computeForestMaxLeafIndex","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) computeForestMaxLeafIndex(bart_model, X, \"mean\") #>  [1] 389 411 424 426 433 435 445 435 447 443 computeForestMaxLeafIndex(bart_model, X, \"mean\", 0) #> [1] 389 computeForestMaxLeafIndex(bart_model, X, \"mean\", c(1,3,9)) #> [1] 411 426 443"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"Convert persistent aspects covariate preprocessor (-memory) C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"convertPreprocessorToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"wrapper around -memory C++ JSON object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/convertPreprocessorToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) C++ JSON object — convertPreprocessorToJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Convert list (-memory) JSON representations BART model single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"createBARTModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON representations of a BART model to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- list(saveBARTModelToJson(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BART models single combined BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"createBARTModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BART models to a single combined BART model object which can be used for prediction, etc... — createBARTModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string_list <- list(saveBARTModelToJsonString(bart_model)) bart_model_roundtrip <- createBARTModelFromCombinedJsonString(bart_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Convert (-memory) JSON representation BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"createBARTModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"json_object Object type CppJson containing Json representation BART model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model) bart_model_roundtrip <- createBARTModelFromJson(bart_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Convert JSON file containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"createBARTModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) bart_model_roundtrip <- createBARTModelFromJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Convert JSON string containing sample information trained BART model BART model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"createBARTModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"Object type bartmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBARTModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BART model to a BART model object which can be used for prediction, etc... — createBARTModelFromJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJsonString(bart_model) bart_model_roundtrip <- createBARTModelFromJsonString(bart_json) y_hat_mean_roundtrip <- rowMeans(predict(bart_model_roundtrip, X_train)$y_hat) plot(rowMeans(bart_model$y_hat_train), y_hat_mean_roundtrip,       xlab = \"original\", ylab = \"roundtrip\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"createBCFModelFromCombinedJson(json_object_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"json_object_list List objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJson","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_list <- list(saveBCFModelToJson(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJson(bcf_json_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Convert list (-memory) JSON strings represent BCF models single combined BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"createBCFModelFromCombinedJsonString(json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"json_string_list List JSON strings can parsed objects type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a list of (in-memory) JSON strings that represent BCF models to a single combined BCF model object which can be used for prediction, etc... — createBCFModelFromCombinedJsonString","text":"","code":"n <- 100 p <- 5 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- rnorm(n) x5 <- rnorm(n) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5] < -0.44,2,ifelse(x[,5] < 0.44,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*(x[,4] > 0)} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json_string_list <- list(saveBCFModelToJsonString(bcf_model)) # bcf_model_roundtrip <- createBCFModelFromCombinedJsonString(bcf_json_string_list)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Convert (-memory) JSON representation BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"createBCFModelFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"json_object Object type CppJson containing Json representation BCF model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an (in-memory) JSON representation of a BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) bcf_json <- saveBCFModelToJson(bcf_model) bcf_model_roundtrip <- createBCFModelFromJson(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Convert JSON file containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"createBCFModelFromJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"json_filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON file containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\") # bcf_model_roundtrip <- createBCFModelFromJsonFile(\"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Convert JSON string containing sample information trained BCF model BCF model object can used prediction, etc...","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"createBCFModelFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"Object type bcfmodel","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createBCFModelFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a JSON string containing sample information on a trained BCF model to a BCF model object which can be used for prediction, etc... — createBCFModelFromJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100) # bcf_json <- saveBCFModelToJsonString(bcf_model) # bcf_model_roundtrip <- createBCFModelFromJsonString(bcf_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new (empty) C++ Json object — createCppJson","title":"Create a new (empty) C++ Json object — createCppJson","text":"Create new (empty) C++ Json object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"createCppJson()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a new (empty) C++ Json object — createCppJson","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a new (empty) C++ Json object — createCppJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json file — createCppJsonFile","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"Create C++ Json object Json file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"createCppJsonFile(json_filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"json_filename Name file read. Must end .json.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json file — createCppJsonFile","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) tmpjson <- tempfile(fileext = \".json\") example_json$save_file(file.path(tmpjson)) example_json_roundtrip <- createCppJsonFile(file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a C++ Json object from a Json string — createCppJsonString","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"Create C++ Json object Json string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"createCppJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"json_string JSON string dump","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"CppJson object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a C++ Json object from a Json string — createCppJsonString","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) example_json_string <- example_json$return_json_string() example_json_roundtrip <- createCppJsonString(example_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R class that wraps a C++ random number generator — createCppRNG","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"Create R class wraps C++ random number generator","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"createCppRNG(random_seed = -1)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"random_seed (Optional) random seed sampling","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"CppRng object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createCppRNG.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R class that wraps a C++ random number generator — createCppRNG","text":"","code":"rng <- createCppRNG(1234) rng <- createCppRNG()"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest — createForest","title":"Create a forest — createForest","text":"Create forest","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest — createForest","text":"","code":"createForest(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest — createForest","text":"num_trees Number trees forest leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest — createForest","text":"Forest object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest — createForest","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest dataset object — createForestDataset","title":"Create a forest dataset object — createForestDataset","text":"Create forest dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest dataset object — createForestDataset","text":"","code":"createForestDataset(covariates, basis = NULL, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest dataset object — createForestDataset","text":"covariates Matrix covariates basis (Optional) Matrix bases used define leaf regression variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest dataset object — createForestDataset","text":"ForestDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest dataset object — createForestDataset","text":"","code":"covariate_matrix <- matrix(runif(10*100), ncol = 10) basis_matrix <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) forest_dataset <- createForestDataset(covariate_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix) forest_dataset <- createForestDataset(covariate_matrix, basis_matrix, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a forest model object — createForestModel","title":"Create a forest model object — createForestModel","text":"Create forest model object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a forest model object — createForestModel","text":"","code":"createForestModel(   forest_dataset,   feature_types,   num_trees,   n,   alpha,   beta,   min_samples_leaf,   max_depth )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a forest model object — createForestModel","text":"forest_dataset ForestDataset object, used initialize forest sampling data structures feature_types Feature types (integers 0 = numeric, 1 = ordered categorical, 2 = unordered categorical) num_trees Number trees forest sampled n Number observations forest_dataset alpha Root node split probability tree prior beta Depth prior penalty tree prior min_samples_leaf Minimum number samples tree leaf max_depth Maximum depth tree ensemble mean model. Setting -1 enforce depth limits trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a forest model object — createForestModel","text":"ForestModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a forest model object — createForestModel","text":"","code":"num_trees <- 100 n <- 100 p <- 10 alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a container of forest samples — createForestSamples","title":"Create a container of forest samples — createForestSamples","text":"Create container forest samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a container of forest samples — createForestSamples","text":"","code":"createForestSamples(   num_trees,   leaf_dimension = 1,   is_leaf_constant = F,   is_exponentiated = F )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a container of forest samples — createForestSamples","text":"num_trees Number trees leaf_dimension Dimensionality outcome model is_leaf_constant Whether leaf constant is_exponentiated Whether forest predictions exponentiated returned","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a container of forest samples — createForestSamples","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createForestSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a container of forest samples — createForestSamples","text":"","code":"num_trees <- 100 leaf_dimension <- 2 is_leaf_constant <- FALSE is_exponentiated <- FALSE forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an outcome object — createOutcome","title":"Create an outcome object — createOutcome","text":"Create outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an outcome object — createOutcome","text":"","code":"createOutcome(outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an outcome object — createOutcome","text":"outcome Vector outcome values","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an outcome object — createOutcome","text":"Outcome object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createOutcome.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an outcome object — createOutcome","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) outcome <- createOutcome(y)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"createPreprocessorFromJson(json_object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"json_object -memory wrapper around JSON C++ object containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJson","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json <- convertPreprocessorToJson(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJson(preprocessor_json)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Reload covariate preprocessor object JSON string containing serialized preprocessor","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"createPreprocessorFromJsonString(json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"json_string -memory JSON string containing covariate preprocessor metadata","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"Preprocessor object can used preprocessPredictionData function","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createPreprocessorFromJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reload a covariate preprocessor object from a JSON string containing a serialized preprocessor — createPreprocessorFromJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata) preprocessor_roundtrip <- createPreprocessorFromJsonString(preprocessor_json_string)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectSamples object — createRandomEffectSamples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"Create RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"createRandomEffectSamples(num_components, num_groups, random_effects_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups random_effects_tracker Object type RandomEffectsTracker","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectSamples object — createRandomEffectSamples","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a random effects dataset object — createRandomEffectsDataset","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"Create random effects dataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"createRandomEffectsDataset(group_labels, basis, variance_weights = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"group_labels Vector group labels basis Matrix bases used define random effects regression (intercept-model, pass array ones) variance_weights (Optional) Vector observation-specific variance weights","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"RandomEffectsDataset object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsDataset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a random effects dataset object — createRandomEffectsDataset","text":"","code":"rfx_group_ids <- sample(1:2, size = 100, replace = TRUE) rfx_basis <- matrix(rnorm(3*100), ncol = 3) weight_vector <- rnorm(100) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis, weight_vector)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsModel object — createRandomEffectsModel","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"Create RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"num_components Number \"components\" bases defining random effects regression num_groups Number random effects groups","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"RandomEffectsModel object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsModel object — createRandomEffectsModel","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a RandomEffectsTracker object — createRandomEffectsTracker","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"Create RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"createRandomEffectsTracker(rfx_group_indices)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"rfx_group_indices Integer indices indicating groups used define random effects","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"RandomEffectsTracker object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/createRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a RandomEffectsTracker object — createRandomEffectsTracker","text":"","code":"n <- 100 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"# S3 method for class 'bartmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"object Object type bartmodel containing draws BART model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) snr <- 3 group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[group_ids,] * rfx_basis) E_y <- f_XW + rfx_term y <- E_y + rnorm(n, 0, 1)*(sd(E_y)/snr) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] rfx_group_ids_test <- group_ids[test_inds] rfx_group_ids_train <- group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train, X_test = X_test,                     rfx_group_ids_train = rfx_group_ids_train, rfx_group_ids_test = rfx_group_ids_test,                     rfx_basis_train = rfx_basis_train, rfx_basis_test = rfx_basis_test,                     num_gfr = 100, num_burnin = 0, num_mcmc = 100) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"Extract raw sample values random effect parameter terms.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"List arrays. alpha array dimension (num_components, num_samples) simply vector num_components = 1. xi beta arrays dimension (num_components, num_groups, num_samples) simply matrix num_components = 1. sigma array dimension (num_components, num_samples) simply vector num_components = 1.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract raw sample values for each of the random effect parameter terms. — getRandomEffectSamples.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) rfx_samples <- getRandomEffectSamples(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"Generic function extracting random effect samples model object (BCF, BART, etc...)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"getRandomEffectSamples(object, ...)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"object Fitted model object extract random effects ... parameters used random effects extraction","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"List random effect samples","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/getRandomEffectSamples.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function for extracting random effect samples from a model object (BCF, BART, etc...) — getRandomEffectSamples","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) rfx_samples <- getRandomEffectSamples(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"Combine multiple JSON model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"loadForestContainerCombinedJson(json_object_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"json_object_list List objects class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) mean_forest <- loadForestContainerCombinedJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing forests (hierarchy / schema) single forest_container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"loadForestContainerCombinedJsonString(json_string_list, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"json_string_list List strings parse objects type CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy (must exist every json object list)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing forests (with the same hierarchy / schema) into a single forest_container — loadForestContainerCombinedJsonString","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) mean_forest <- loadForestContainerCombinedJsonString(bart_json_string, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of forest samples from json — loadForestContainerJson","title":"Load a container of forest samples from json — loadForestContainerJson","text":"Load container forest samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"loadForestContainerJson(json_object, json_forest_label)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of forest samples from json — loadForestContainerJson","text":"json_object Object class CppJson json_forest_label Label referring particular forest (.e. \"forest_0\") overall json hierarchy","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of forest samples from json — loadForestContainerJson","text":"ForestSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadForestContainerJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of forest samples from json — loadForestContainerJson","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) bart_model <- bart(X, y, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) mean_forest <- loadForestContainerJson(bart_json, \"forest_0\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"Combine multiple JSON model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"loadRandomEffectSamplesCombinedJson(json_object_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"json_object_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- list(saveBARTModelToJson(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"Combine multiple JSON strings representing model objects containing random effects (hierarchy / schema) single container","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"loadRandomEffectSamplesCombinedJsonString(json_string_list, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"json_string_list List objects class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesCombinedJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine multiple JSON strings representing model objects containing random effects (with the same hierarchy / schema) into a single container — loadRandomEffectSamplesCombinedJsonString","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json_string <- list(saveBARTModelToJsonString(bart_model)) rfx_samples <- loadRandomEffectSamplesCombinedJsonString(bart_json_string, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"Load container random effect samples json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"loadRandomEffectSamplesJson(json_object, json_rfx_num)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"json_object Object class CppJson json_rfx_num Integer index indicating position random effects term unpacked","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"RandomEffectSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadRandomEffectSamplesJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a container of random effect samples from json — loadRandomEffectSamplesJson","text":"","code":"n <- 100 p <- 10 X <- matrix(runif(n*p), ncol = p) rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- rep(1.0, n) y <- (-5 + 10*(X[,1] > 0.5)) + (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) bart_model <- bart(X_train=X, y_train=y, rfx_group_ids_train=rfx_group_ids,                    rfx_basis_train = rfx_basis, num_gfr=0, num_mcmc=10) bart_json <- saveBARTModelToJson(bart_model) rfx_samples <- loadRandomEffectSamplesJson(bart_json, 0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a scalar from json — loadScalarJson","title":"Load a scalar from json — loadScalarJson","text":"Load scalar json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a scalar from json — loadScalarJson","text":"","code":"loadScalarJson(json_object, json_scalar_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a scalar from json — loadScalarJson","text":"json_object Object class CppJson json_scalar_label Label referring particular scalar / string value (.e. \"num_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a scalar from json — loadScalarJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadScalarJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a scalar from json — loadScalarJson","text":"","code":"example_scalar <- 5.4 example_json <- createCppJson() example_json$add_scalar(\"myscalar\", example_scalar) roundtrip_scalar <- loadScalarJson(example_json, \"myscalar\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a vector from json — loadVectorJson","title":"Load a vector from json — loadVectorJson","text":"Load vector json","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a vector from json — loadVectorJson","text":"","code":"loadVectorJson(json_object, json_vector_label, subfolder_name = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a vector from json — loadVectorJson","text":"json_object Object class CppJson json_vector_label Label referring particular vector (.e. \"sigma2_samples\") overall json hierarchy subfolder_name (Optional) Name subfolder / hierarchy vector sits","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a vector from json — loadVectorJson","text":"R vector","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/loadVectorJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a vector from json — loadVectorJson","text":"","code":"example_vec <- runif(10) example_json <- createCppJson() example_json$add_vector(\"myvec\", example_vec) roundtrip_vec <- loadVectorJson(example_json, \"myvec\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BART model on new data — predict.bartmodel","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"Predict sampled BART model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"# S3 method for class 'bartmodel' predict(   object,   X,   leaf_basis = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"object Object type bart containing draws regression forest associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. leaf_basis (Optional) Bases used prediction (e.g. dot product leaf values). Default: NULL. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"List prediction matrices. model random effects, list one element – predictions forest. model random effects, list three elements – forest predictions, random effects predictions, sum (y_hat).","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bartmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BART model on new data — predict.bartmodel","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) y_hat_test <- predict(bart_model, X_test)$y_hat plot(rowMeans(y_hat_test), y_test, xlab = \"predicted\", ylab = \"actual\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict from a sampled BCF model on new data — predict.bcfmodel","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"Predict sampled BCF model new data","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"# S3 method for class 'bcfmodel' predict(   object,   X,   Z,   propensity = NULL,   rfx_group_ids = NULL,   rfx_basis = NULL,   ... )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. X Covariates used determine tree leaf predictions observation. Must passed matrix dataframe. Z Treatments used prediction. propensity (Optional) Propensities used prediction. rfx_group_ids (Optional) Test set group labels used additive random effects model. currently support (plan near future), test set evaluation group labels training set. rfx_basis (Optional) Test set basis \"random-slope\" regression additive random effects model. ... (Optional) prediction parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"List 3-5 nrow(X) object$num_samples matrices: prognostic function estimates, treatment effect estimates, (optionally) random effects predictions, (optionally) variance forest predictions, outcome predictions.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/predict.bcfmodel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict from a sampled BCF model on new data — predict.bcfmodel","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 4 y <- E_XZ + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train, propensity_train = pi_train) preds <- predict(bcf_model, X_test, Z_test, pi_test) plot(rowMeans(preds$mu_hat), mu_test, xlab = \"predicted\",      ylab = \"actual\", main = \"Prognostic function\") abline(0,1,col=\"red\",lty=3,lwd=3)  plot(rowMeans(preds$tau_hat), tau_test, xlab = \"predicted\",       ylab = \"actual\", main = \"Treatment effect\") abline(0,1,col=\"red\",lty=3,lwd=3)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"preprocessPredictionData(input_data, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"input_data Covariates, provided either dataframe matrix metadata List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"Preprocessed data categorical variables appropriately handled","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessPredictionData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessPredictionData","text":"","code":"cov_df <- data.frame(x1 = 1:5, x2 = 5:1, x3 = 6:10) metadata <- list(num_ordered_cat_vars = 0, num_unordered_cat_vars = 0,                   num_numeric_vars = 3, numeric_vars = c(\"x1\", \"x2\", \"x3\")) X_preprocessed <- preprocessPredictionData(cov_df, metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":null,"dir":"Reference","previous_headings":"","what":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"Preprocess covariates. DataFrames preprocessed based column types. Matrices passed assuming columns numeric.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"preprocessTrainData(input_data)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"input_data Covariates, provided either dataframe matrix","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"List preprocessed (unmodified) data details number type variable, unique categories associated categorical variables, vector feature types needed calls BART BCF.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/preprocessTrainData.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Preprocess covariates. DataFrames will be preprocessed based on their column types. Matrices will be passed through assuming all columns are numeric. — preprocessTrainData","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) X <- preprocess_list$X"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"Reset active forest, either specific forest ForestContainer ensemble single-node (.e. root) trees","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"resetActiveForest(active_forest, forest_samples = NULL, forest_num = NULL)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"active_forest Current active forest forest_samples (Optional) Container forest samples re-initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees. forest_num (Optional) Index forest samples initialize active forest. provided, active forest reset ensemble single-node (.e. root) trees.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetActiveForest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset an active forest, either from a specific forest in a ForestContainer or to an ensemble of single-node (i.e. root) trees — resetActiveForest","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples$add_forest_with_constant_leaves(0.0) forest_samples$add_numeric_split_tree(0, 0, 0, 0, 0.5, -1.0, 1.0) forest_samples$add_numeric_split_tree(0, 1, 0, 1, 0.75, 3.4, 0.75) active_forest$set_root_leaves(0.1) resetActiveForest(active_forest, forest_samples, 0) resetActiveForest(active_forest)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"Re-initialize forest model (tracking data structures) specific forest ForestContainer","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"resetForestModel(forest_model, forest, dataset, residual, is_mean_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"forest_model Forest model tracking data structures forest Forest re-initialize forest model dataset Training dataset object residual Residual also updated is_mean_model Whether model updated conditional mean model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetForestModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Re-initialize a forest model (tracking data structures) from a specific forest in a ForestContainer — resetForestModel","text":"","code":"n <- 100 p <- 10 num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE alpha <- 0.95 beta <- 2.0 min_samples_leaf <- 2 max_depth <- 10 feature_types <- as.integer(rep(0, p)) leaf_model <- 0 sigma2 <- 1.0 leaf_scale <- as.matrix(1.0) variable_weights <- rep(1/p, p) a_forest <- 1 b_forest <- 1 cutpoint_grid_size <- 100 X <- matrix(runif(n*p), ncol = p) forest_dataset <- createForestDataset(X) y <- -5 + 10*(X[,1] > 0.5) + rnorm(n) outcome <- createOutcome(y) rng <- createCppRNG(1234) forest_model <- createForestModel(forest_dataset, feature_types, num_trees, n, alpha, beta, min_samples_leaf, max_depth) active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_samples <- createForestSamples(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) forest_model$sample_one_iteration(     forest_dataset, outcome, forest_samples, active_forest,      rng, feature_types, leaf_model, leaf_scale, variable_weights,      a_forest, b_forest, sigma2, cutpoint_grid_size, keep_forest = TRUE,      gfr = FALSE, pre_initialized = TRUE ) resetActiveForest(active_forest, forest_samples, 0) resetForestModel(forest_model, active_forest, forest_dataset, outcome, TRUE)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"Reset RandomEffectsModel object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"resetRandomEffectsModel(rfx_model, rfx_samples, sample_num, sigma_alpha_init)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"rfx_model Object type RandomEffectsModel. rfx_samples Object type RandomEffectSamples. sample_num Index sample stored rfx_samples reset state random effects model. Zero-indexed, resetting based first sample require setting sample_num = 0. sigma_alpha_init Initial value \"working parameter\" scale parameter.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsModel","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"Reset RandomEffectsTracker object based parameters indexed sample_num RandomEffectsSamples object","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"resetRandomEffectsTracker(   rfx_tracker,   rfx_model,   rfx_dataset,   residual,   rfx_samples )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome. rfx_samples Object type RandomEffectSamples.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/resetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object based on the parameters indexed by sample_num in a RandomEffectsSamples object — resetRandomEffectsTracker","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } resetRandomEffectsModel(rfx_model, rfx_samples, 0, 1.0) resetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome, rfx_samples)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsModel object to its ","title":"Reset a RandomEffectsModel object to its ","text":"Reset RandomEffectsModel object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsModel object to its ","text":"","code":"rootResetRandomEffectsModel(   rfx_model,   alpha_init,   xi_init,   sigma_alpha_init,   sigma_xi_init,   sigma_xi_shape,   sigma_xi_scale )"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsModel object to its ","text":"rfx_model Object type RandomEffectsModel. alpha_init Initial value \"working parameter\". xi_init Initial value \"group parameters\". sigma_alpha_init Initial value \"working parameter\" scale parameter. sigma_xi_init Initial value \"group parameters\" scale parameter. sigma_xi_shape Shape parameter inverse gamma variance model group parameters. sigma_xi_scale Scale parameter inverse gamma variance model group parameters.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsModel object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsModel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsModel object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":null,"dir":"Reference","previous_headings":"","what":"Reset a RandomEffectsTracker object to its ","title":"Reset a RandomEffectsTracker object to its ","text":"Reset RandomEffectsTracker object \"default\" state","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, residual)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reset a RandomEffectsTracker object to its ","text":"rfx_tracker Object type RandomEffectsTracker. rfx_model Object type RandomEffectsModel. rfx_dataset Object type RandomEffectsDataset. residual Object type Outcome.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reset a RandomEffectsTracker object to its ","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/rootResetRandomEffectsTracker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reset a RandomEffectsTracker object to its ","text":"","code":"n <- 100 p <- 10 rfx_group_ids <- sample(1:2, size = n, replace = TRUE) rfx_basis <- matrix(rep(1.0, n), ncol=1) rfx_dataset <- createRandomEffectsDataset(rfx_group_ids, rfx_basis) y <- (-2*(rfx_group_ids==1)+2*(rfx_group_ids==2)) + rnorm(n) y_std <- (y-mean(y))/sd(y) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) num_groups <- length(unique(rfx_group_ids)) num_components <- ncol(rfx_basis) alpha_init <- c(1) xi_init <- matrix(rep(alpha_init, num_groups),num_components,num_groups) sigma_alpha_init <- diag(1,num_components,num_components) sigma_xi_init <- diag(1,num_components,num_components) sigma_xi_shape <- 1 sigma_xi_scale <- 1 rfx_model <- createRandomEffectsModel(num_components, num_groups) rfx_tracker <- createRandomEffectsTracker(rfx_group_ids) rfx_samples <- createRandomEffectSamples(num_components, num_groups, rfx_tracker) for (i in 1:3) {     rfx_model$sample_random_effect(rfx_dataset=rfx_dataset, residual=outcome,                                     rfx_tracker=rfx_tracker, rfx_samples=rfx_samples,                                     keep_sample=TRUE, global_variance=1.0, rng=rng) } rootResetRandomEffectsModel(rfx_model, alpha_init, xi_init, sigma_alpha_init,                             sigma_xi_init, sigma_xi_shape, sigma_xi_scale) rootResetRandomEffectsTracker(rfx_tracker, rfx_model, rfx_dataset, outcome)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"Sample one iteration (inverse gamma) global variance model","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"sampleGlobalErrorVarianceOneIteration(residual, dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"residual Outcome class dataset ForestDataset class rng C++ random number generator Global variance shape parameter b Global variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleGlobalErrorVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the (inverse gamma) global variance model — sampleGlobalErrorVarianceOneIteration","text":"","code":"X <- matrix(runif(10*100), ncol = 10) y <- -5 + 10*(X[,1] > 0.5) + rnorm(100) y_std <- (y-mean(y))/sd(y) forest_dataset <- createForestDataset(X) outcome <- createOutcome(y_std) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 sigma2 <- sampleGlobalErrorVarianceOneIteration(outcome, forest_dataset, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"Sample one iteration leaf parameter variance model (univariate basis constant leaf!)","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"sampleLeafVarianceOneIteration(forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"forest C++ forest rng C++ random number generator Leaf variance shape parameter b Leaf variance scale parameter","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/sampleLeafVarianceOneIteration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sample one iteration of the leaf parameter variance model (only for univariate basis and constant leaf!) — sampleLeafVarianceOneIteration","text":"","code":"num_trees <- 100 leaf_dimension <- 1 is_leaf_constant <- TRUE is_exponentiated <- FALSE active_forest <- createForest(num_trees, leaf_dimension, is_leaf_constant, is_exponentiated) rng <- createCppRNG(1234) a <- 1.0 b <- 1.0 tau <- sampleLeafVarianceOneIteration(active_forest, rng, a, b)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Convert persistent aspects BART model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"saveBARTModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON — saveBARTModelToJson","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json <- saveBARTModelToJson(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"Convert persistent aspects BART model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"saveBARTModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"object Object type bartmodel containing draws BART model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"None","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON and save to a file — saveBARTModelToJsonFile","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) tmpjson <- tempfile(fileext = \".json\") saveBARTModelToJsonFile(bart_model, file.path(tmpjson)) unlink(tmpjson)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"Convert persistent aspects BART model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"saveBARTModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"object Object type bartmodel containing draws BART model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBARTModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BART model to (in-memory) JSON string — saveBARTModelToJsonString","text":"","code":"n <- 100 p <- 5 X <- matrix(runif(n*p), ncol = p) f_XW <- (     ((0 <= X[,1]) & (0.25 > X[,1])) * (-7.5) +      ((0.25 <= X[,1]) & (0.5 > X[,1])) * (-2.5) +      ((0.5 <= X[,1]) & (0.75 > X[,1])) * (2.5) +      ((0.75 <= X[,1]) & (1 > X[,1])) * (7.5) ) noise_sd <- 1 y <- f_XW + rnorm(n, 0, noise_sd) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] y_test <- y[test_inds] y_train <- y[train_inds] bart_model <- bart(X_train = X_train, y_train = y_train) bart_json_string <- saveBARTModelToJsonString(bart_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Convert persistent aspects BCF model (-memory) JSON","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"saveBCFModelToJson(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"Object type CppJson","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON — saveBCFModelToJson","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # bcf_json <- saveBCFModelToJson(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"Convert persistent aspects BCF model (-memory) JSON save file","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"saveBCFModelToJsonFile(object, filename)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs. filename String filepath, must end \".json\"","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonFile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON and save to a file — saveBCFModelToJsonFile","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonFile(bcf_model, \"test.json\")"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"Convert persistent aspects BCF model (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"saveBCFModelToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"object Object type bcfmodel containing draws Bayesian causal forest model associated sampling outputs.","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/saveBCFModelToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a BCF model to (in-memory) JSON string — saveBCFModelToJsonString","text":"","code":"n <- 500 x1 <- rnorm(n) x2 <- rnorm(n) x3 <- rnorm(n) x4 <- as.numeric(rbinom(n,1,0.5)) x5 <- as.numeric(sample(1:3,n,replace=TRUE)) X <- cbind(x1,x2,x3,x4,x5) p <- ncol(X) g <- function(x) {ifelse(x[,5]==1,2,ifelse(x[,5]==2,-1,4))} mu1 <- function(x) {1+g(x)+x[,1]*x[,3]} mu2 <- function(x) {1+g(x)+6*abs(x[,3]-1)} tau1 <- function(x) {rep(3,nrow(x))} tau2 <- function(x) {1+2*x[,2]*x[,4]} mu_x <- mu1(X) tau_x <- tau2(X) pi_x <- 0.8*pnorm((3*mu_x/sd(mu_x)) - 0.5*X[,1]) + 0.05 + runif(n)/10 Z <- rbinom(n,1,pi_x) E_XZ <- mu_x + Z*tau_x snr <- 3 rfx_group_ids <- rep(c(1,2), n %/% 2) rfx_coefs <- matrix(c(-1, -1, 1, 1), nrow=2, byrow=TRUE) rfx_basis <- cbind(1, runif(n, -1, 1)) rfx_term <- rowSums(rfx_coefs[rfx_group_ids,] * rfx_basis) y <- E_XZ + rfx_term + rnorm(n, 0, 1)*(sd(E_XZ)/snr) X <- as.data.frame(X) X$x4 <- factor(X$x4, ordered = TRUE) X$x5 <- factor(X$x5, ordered = TRUE) test_set_pct <- 0.2 n_test <- round(test_set_pct*n) n_train <- n - n_test test_inds <- sort(sample(1:n, n_test, replace = FALSE)) train_inds <- (1:n)[!((1:n) %in% test_inds)] X_test <- X[test_inds,] X_train <- X[train_inds,] pi_test <- pi_x[test_inds] pi_train <- pi_x[train_inds] Z_test <- Z[test_inds] Z_train <- Z[train_inds] y_test <- y[test_inds] y_train <- y[train_inds] mu_test <- mu_x[test_inds] mu_train <- mu_x[train_inds] tau_test <- tau_x[test_inds] tau_train <- tau_x[train_inds] rfx_group_ids_test <- rfx_group_ids[test_inds] rfx_group_ids_train <- rfx_group_ids[train_inds] rfx_basis_test <- rfx_basis[test_inds,] rfx_basis_train <- rfx_basis[train_inds,] rfx_term_test <- rfx_term[test_inds] rfx_term_train <- rfx_term[train_inds] mu_params <- list(sample_sigma_leaf = TRUE) tau_params <- list(sample_sigma_leaf = FALSE) bcf_model <- bcf(X_train = X_train, Z_train = Z_train, y_train = y_train,                   propensity_train = pi_train, rfx_group_ids_train = rfx_group_ids_train,                   rfx_basis_train = rfx_basis_train, X_test = X_test,                   Z_test = Z_test, propensity_test = pi_test, rfx_group_ids_test = rfx_group_ids_test,                  rfx_basis_test = rfx_basis_test,                   num_gfr = 100, num_burnin = 0, num_mcmc = 100,                   mu_forest_params = mu_params,                   tau_forest_params = tau_params) # saveBCFModelToJsonString(bcf_model)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"Convert persistent aspects covariate preprocessor (-memory) JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"savePreprocessorToJsonString(object)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"object List containing information variables, including train set categories categorical variables","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"-memory JSON string","code":""},{"path":"https://stochastictree.github.io/stochtree-r/reference/savePreprocessorToJsonString.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert the persistent aspects of a covariate preprocessor to (in-memory) JSON string — savePreprocessorToJsonString","text":"","code":"cov_mat <- matrix(1:12, ncol = 3) preprocess_list <- preprocessTrainData(cov_mat) preprocessor_json_string <- savePreprocessorToJsonString(preprocess_list$metadata)"},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Stochastic tree ensembles (XBART BART) supervised learning causal inference.","code":""},{"path":[]},{"path":"https://stochastictree.github.io/stochtree-r/reference/stochtree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"stochtree: Stochastic tree ensembles (XBART and BART) for supervised learning and causal inference — stochtree-package","text":"Maintainer: Drew Herren drewherrenopensource@gmail.com (ORCID) Authors: Richard Hahn Jared Murray Carlos Carvalho Jingyu contributors: stochtree contributors [copyright holder]","code":""},{"path":"https://stochastictree.github.io/stochtree-r/news/index.html","id":"stochtree-010","dir":"Changelog","previous_headings":"","what":"stochtree 0.1.0","title":"stochtree 0.1.0","text":"Initial CRAN submission.","code":""}]
